[
  {
    "id" : "d7c4a473-e425-42d9-bc81-d48f673f328e",
    "prId" : 2490,
    "prUrl" : "https://github.com/scalameta/metals/pull/2490#pullrequestreview-587688524",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3161de20-f8bb-4908-b69e-22ec1e9e695f",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "is this a safe/desired refactor? \r\n\r\nTurning \r\n\r\n```scala\r\ndef a: Int = ???\r\na match {\r\n  case n if n > 2 => ??? \r\n  case n          => ???\r\n}\r\n```\r\n\r\ninto\r\n\r\n```scala\r\ndef a: Int = ???\r\na match {\r\n  case n if n > 2 => ??? \r\n  case n: Int     => ???\r\n}\r\n```\r\n\r\nit's not a type annotation, but it's actually inserting a runtime check. I'm not sure I would put it in the same basket as the other refactors this PR covers.",
        "createdAt" : "2021-02-09T17:32:16Z",
        "updatedAt" : "2021-02-10T18:07:56Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "ff7bb118-ec84-4915-854e-0b4dc9500bf5",
        "parentId" : "3161de20-f8bb-4908-b69e-22ec1e9e695f",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "I think that should be safe. It's the actual type of a, so the check is basically checking if Int is Int. If anyone changes the type of a the compiler will issue a warning.\r\n\r\nWe could name it differently similar to how Intellij does it `add type annotation to pattern definition`.",
        "createdAt" : "2021-02-09T17:42:44Z",
        "updatedAt" : "2021-02-10T18:07:56Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "17619c64-1194-46ff-9fdc-aa24d2e60981",
        "parentId" : "3161de20-f8bb-4908-b69e-22ec1e9e695f",
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "👍 on naming it like that",
        "createdAt" : "2021-02-09T19:45:48Z",
        "updatedAt" : "2021-02-10T18:07:56Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "1b9cbd43-1c48-451f-9bd0-52a16653630e",
        "parentId" : "3161de20-f8bb-4908-b69e-22ec1e9e695f",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Changed!",
        "createdAt" : "2021-02-10T14:50:37Z",
        "updatedAt" : "2021-02-10T18:07:56Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "35b8cef77f49a5dbfaea65336ba01706bc959133",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +147,151 @@       * `case t: Int =>`\n       */\n      case bind @ Bind(name, body) =>\n        def openingParenPos = body.pos.withEnd(body.pos.start)\n        def openingParen = new TextEdit(openingParenPos.toLSP, \"(\")"
  },
  {
    "id" : "5f363422-bb7c-4f5f-8d07-9a04d5723c1b",
    "prId" : 2490,
    "prUrl" : "https://github.com/scalameta/metals/pull/2490#pullrequestreview-586862230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02d34557-81c5-4eeb-a857-31f422f0c858",
        "parentId" : null,
        "authorId" : "84490516-a7af-4f7f-9947-360c279c4400",
        "body" : "Thanks a lot for including all of these, super helpful 🙏🏼 ",
        "createdAt" : "2021-02-09T18:52:14Z",
        "updatedAt" : "2021-02-10T18:07:56Z",
        "lastEditedBy" : "84490516-a7af-4f7f-9947-360c279c4400",
        "tags" : [
        ]
      }
    ],
    "commit" : "35b8cef77f49a5dbfaea65336ba01706bc959133",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +67,71 @@       *     turns into\n       * `val a: Int = 1` or `var b: Int = 2`\n       */\n      case vl @ ValDef(_, name, tpt, _) if !vl.symbol.isParameter =>\n        // dropLocal will remove a space that might appear at the of a name in some places"
  }
]