[
  {
    "id" : "e942f9d4-8ea8-48b9-9027-1ffab52e2e52",
    "prId" : 2917,
    "prUrl" : "https://github.com/scalameta/metals/pull/2917#pullrequestreview-700944639",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c46529c-c117-4e31-a3c6-8c9da2b829cb",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Is this needed? Don't we typecheck in definitionTypedTreeAt ?",
        "createdAt" : "2021-07-07T07:58:44Z",
        "updatedAt" : "2021-07-07T08:52:49Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "6e3ff08d-cd8c-42b7-afd5-4c1cb404c3c3",
        "parentId" : "5c46529c-c117-4e31-a3c6-8c9da2b829cb",
        "authorId" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "body" : "Yes, it's needed.\r\nPreviously, `typeCheck` was called inside `typeTreeAt` at this line: https://github.com/scalameta/metals/blob/751670ecfce1f2d01dd9f301cbaeca74fd9b551c/mtags/src/main/scala-2/scala/meta/internal/pc/PcDefinitionProvider.scala#L98\r\nNow it replaced by `locateTree` which doesn't preform typecheck before running traverser.\r\n",
        "createdAt" : "2021-07-07T12:31:03Z",
        "updatedAt" : "2021-07-07T12:31:03Z",
        "lastEditedBy" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "tags" : [
        ]
      }
    ],
    "commit" : "2209e107cc4987196f79602196c951056e38e87f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +21,25 @@        None\n      )\n      typeCheck(unit)\n      val pos = unit.position(params.offset())\n      val tree = definitionTypedTreeAt(pos)"
  }
]