[
  {
    "id" : "f5765489-1f42-4db6-bfcf-c103f04b3325",
    "prId" : 2497,
    "prUrl" : "https://github.com/scalameta/metals/pull/2497#pullrequestreview-588919447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b96f2ad-eee2-4344-9a80-c7b1dd38243f",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Changes here and the two methods below come from:\r\nhttps://github.com/scalacenter/scalafix/blob/69c0369ab49c41b0473ca68fe0a8ade396d3157e/scalafix-rules/src/main/scala/scala/meta/internal/pc/ScalafixGlobal.scala#L382",
        "createdAt" : "2021-02-11T19:42:39Z",
        "updatedAt" : "2021-02-17T15:54:49Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3da8a9cf97b46b15072db2b6898bb3237b2919c",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +133,137 @@    }\n\n    def isSymbolInScope(sym: Symbol, prefix: Type = NoPrefix): Boolean = {\n      nameResolvesToSymbol(sym.name, sym, prefix)\n    }"
  },
  {
    "id" : "245c5e3c-accd-4b5b-a2cb-4f8191726f3f",
    "prId" : 2497,
    "prUrl" : "https://github.com/scalameta/metals/pull/2497#pullrequestreview-588919447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfd8b1ba-df66-4eef-8624-3ba149c4c419",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "This is a change I did here, since if lookup did not find anything then it should be false. Indeed a lot of tests seem to have unneccesarily long names.",
        "createdAt" : "2021-02-11T19:44:25Z",
        "updatedAt" : "2021-02-17T15:54:49Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3da8a9cf97b46b15072db2b6898bb3237b2919c",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +142,146 @@    ): Boolean = {\n      lookupSymbol(name) match {\n        case Nil => false\n        case lookup =>\n          lookup.exists {"
  },
  {
    "id" : "34c92c87-2574-4e4d-b617-0c95d15b3037",
    "prId" : 2497,
    "prUrl" : "https://github.com/scalameta/metals/pull/2497#pullrequestreview-588919447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "358bd229-5972-4b16-8cac-75b9231923b7",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Here we try to find type name or term name with the same name.",
        "createdAt" : "2021-02-11T19:44:58Z",
        "updatedAt" : "2021-02-17T15:54:49Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3da8a9cf97b46b15072db2b6898bb3237b2919c",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +261,265 @@  implicit class XtensionNameMetals(name: Name) {\n    def otherName: Name =\n      if (name.isTermName) name.toTypeName\n      else name.toTermName\n  }"
  }
]