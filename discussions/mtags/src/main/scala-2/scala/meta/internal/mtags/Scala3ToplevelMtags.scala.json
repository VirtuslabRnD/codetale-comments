[
  {
    "id" : "cce32ff3-7a1c-4b10-be71-e841fe141120",
    "prId" : 2600,
    "prUrl" : "https://github.com/scalameta/metals/pull/2600#pullrequestreview-624512232",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22c2047c-cdd3-43bf-97b0-50c5d169ef00",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "This is also in `ScalaToplevelMtags` - can we resue some parts of the code?",
        "createdAt" : "2021-03-29T17:53:06Z",
        "updatedAt" : "2021-04-01T21:54:41Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "5fda875f-543a-42b0-8477-6c9fed02e2b9",
        "parentId" : "22c2047c-cdd3-43bf-97b0-50c5d169ef00",
        "authorId" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "body" : "Yep, I thought about that.\r\n\r\nHowever, as this parser works well for Scala 2 too I planned to propose to left it as the only implementation after passing review/merge. So the work related to the extraction of common methods might be useless. wdyt?\r\n",
        "createdAt" : "2021-03-30T17:12:59Z",
        "updatedAt" : "2021-04-01T21:54:41Z",
        "lastEditedBy" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "tags" : [
        ]
      }
    ],
    "commit" : "028b3ff710580df42fff3574f99c743c9649e48c",
    "line" : 198,
    "diffHunk" : "@@ -1,1 +196,200 @@   * Consume token stream like \"a.b.c\" and return List(a, b, c)\n   */\n  def parsePath(): List[Identifier] = {\n    val buf = List.newBuilder[Identifier]\n    def loop(): Unit = {"
  },
  {
    "id" : "f3ccd21f-dd14-4d52-aa62-86d3ed2cb8b5",
    "prId" : 2600,
    "prUrl" : "https://github.com/scalameta/metals/pull/2600#pullrequestreview-624630165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e74873d-6eeb-4af8-b438-93628c78d05e",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "```suggestion\r\n  private def acceptTrivial(): Unit = {\r\n```",
        "createdAt" : "2021-03-30T11:52:22Z",
        "updatedAt" : "2021-04-01T21:54:41Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "3eb4aef6-6b98-4005-9e7e-51e9f5132787",
        "parentId" : "5e74873d-6eeb-4af8-b438-93628c78d05e",
        "authorId" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "body" : "In `ScalaToplevelMtags` and in scalameta the block of whitespace symbols is called `trivia`",
        "createdAt" : "2021-03-30T19:29:49Z",
        "updatedAt" : "2021-04-01T21:54:41Z",
        "lastEditedBy" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "tags" : [
        ]
      }
    ],
    "commit" : "028b3ff710580df42fff3574f99c743c9649e48c",
    "line" : 300,
    "diffHunk" : "@@ -1,1 +298,302 @@  }\n\n  private def acceptTrivia(): Unit = {\n    scanner.nextToken()\n    while ("
  }
]