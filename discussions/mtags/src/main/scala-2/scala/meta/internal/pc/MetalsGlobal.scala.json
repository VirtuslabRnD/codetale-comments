[
  {
    "id" : "8cf5404e-80b2-4a31-895f-57ca649978a4",
    "prId" : 2699,
    "prUrl" : "https://github.com/scalameta/metals/pull/2699#pullrequestreview-638925571",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ebc982e-47c2-4737-a188-bfa8ab789b49",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "So this turned out harder than anticipated. We would not properly rename packages before, which would also pop up in signatures. ",
        "createdAt" : "2021-04-17T18:35:46Z",
        "updatedAt" : "2021-04-17T18:35:46Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "4b395cb2-1cf2-49fc-867c-f6f7d1dd8a2a",
        "parentId" : "8ebc982e-47c2-4737-a188-bfa8ab789b49",
        "authorId" : "84490516-a7af-4f7f-9947-360c279c4400",
        "body" : "huh, interesting. Great job finding this!",
        "createdAt" : "2021-04-18T18:20:06Z",
        "updatedAt" : "2021-04-18T18:22:46Z",
        "lastEditedBy" : "84490516-a7af-4f7f-9947-360c279c4400",
        "tags" : [
        ]
      },
      {
        "id" : "eeff34fc-c83f-44a7-9d4f-89b154174c02",
        "parentId" : "8ebc982e-47c2-4737-a188-bfa8ab789b49",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "I have no idea actually why the package type and module type is different, but I don't think this will actually break anything. If it will, I will probably need to figure it out :S",
        "createdAt" : "2021-04-19T14:18:36Z",
        "updatedAt" : "2021-04-19T14:18:37Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ef9b71591bfa72faaceec29301c9771f3327203",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +291,295 @@          // to make sure we always use renamed package\n          // what is saved in renames is actually companion module of a package\n          val renamedOwnerIndex =\n            owners.indexWhere(s => history.renames.contains(s.companionModule))\n          if (renamedOwnerIndex < 0 && history.tryShortenName(name)) NoPrefix"
  },
  {
    "id" : "e9c8c04b-71ce-492e-b4ea-a6f4551508e5",
    "prId" : 2497,
    "prUrl" : "https://github.com/scalameta/metals/pull/2497#pullrequestreview-589964153",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad34ddd0-41c1-4ff7-aa5c-2269cef2b1c1",
        "parentId" : null,
        "authorId" : "9cdd9387-08db-4d42-9b6d-ceaa233cadd5",
        "body" : "[note]\r\n- https://github.com/scalacenter/scalafix/commit/f2a8bcda692ae04b37553a7ba16b08d8e7bc7a69\r\n- https://github.com/scalacenter/scalafix/commit/6af6cfc6dcb1c3fdd573b9b612b5f72378a7a0db\r\n\r\n> Previously, the rewrite would insert names like `Value` in the position\r\nof a path dependent type such as `Day.Value` even if the `Value` in\r\nscope had a conflicting type `Bool.Value`. Now, when querying the\r\nscope we take into account the prefix from where the symbols in scope\r\norigin.\r\n\r\n> The implementation in this PR is probably incorrect for some cases. I\r\nhad to use a hacky workaround for the custom `PrettyType` type. Either\r\nway, this diff makes the test suite pass and allow us to move on.\r\n\r\n👍 ",
        "createdAt" : "2021-02-13T12:35:54Z",
        "updatedAt" : "2021-02-17T15:54:49Z",
        "lastEditedBy" : "9cdd9387-08db-4d42-9b6d-ceaa233cadd5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3da8a9cf97b46b15072db2b6898bb3237b2919c",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +196,200 @@      val result = tpe match {\n        case TypeRef(pre, sym, args) =>\n          if (history.isSymbolInScope(sym, pre)) {\n            TypeRef(NoPrefix, sym, args.map(arg => loop(arg, None)))\n          } else {"
  }
]