[
  {
    "id" : "52b71cdc-4d38-44cc-aef1-9059eb475dbb",
    "prId" : 332,
    "prUrl" : "https://github.com/scalameta/metals/pull/332#pullrequestreview-164462480",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5dd943d2-3cd3-4a9d-a318-0832a4f6aebe",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "In case this becomes a hot path, maybe using `++` instead of `List.apply` + `flatten` is slightly more conservative.",
        "createdAt" : "2018-10-13T12:17:40Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "5a41d046-7b7f-4d22-8ba7-a33e70b35188",
        "parentId" : "5dd943d2-3cd3-4a9d-a318-0832a4f6aebe",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "I don't think this is a bottleneck since is not on a critical path, it's a fallback to missing symbols. If we want to squeeze out the last juice of performance we should benchmark it first. I'm also not sure if `List[List[T]].flatten` is slower than `++`",
        "createdAt" : "2018-10-13T13:08:22Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "889b282a30a7ddd72b09da4b9328f7779b1cfae9",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@      caseClassApplyOrCopyParams(symbol),\n      methodOwner(symbol),\n    ).flatten\n  }\n"
  },
  {
    "id" : "f442e42a-d587-456f-9651-f6916a9f1b74",
    "prId" : 332,
    "prUrl" : "https://github.com/scalameta/metals/pull/332#pullrequestreview-164462480",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78de5239-4caa-433b-91ec-6fa3ec33f423",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "Alternatively re-using the utility from `Enrichments` \r\n\r\n```scala\r\ncase GlobalSymbol(\r\n  GlobalSymbol(\r\n    GlobalSymbol(owner, signature),\r\n    desc\r\n  ),\r\n  Descriptor.Parameter(param)\r\n) if desc.isCaseClassSynthetic => // ...\r\n```",
        "createdAt" : "2018-10-13T12:26:26Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "23bbeb6d-f22b-4aea-9c13-5d15b69b692f",
        "parentId" : "78de5239-4caa-433b-91ec-6fa3ec33f423",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "I remove that method, it wasn't used anywhere. Somebody ™️ should write a scalafix linter that warns about unused global symbols 🤔 ",
        "createdAt" : "2018-10-13T13:09:34Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "889b282a30a7ddd72b09da4b9328f7779b1cfae9",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +42,46 @@            GlobalSymbol(owner, signature),\n            Descriptor.Method(\"copy\" | \"apply\", _)\n          ),\n          Descriptor.Parameter(param)\n          ) =>"
  },
  {
    "id" : "9441da2b-1638-4290-a429-beebf06de2b9",
    "prId" : 332,
    "prUrl" : "https://github.com/scalameta/metals/pull/332#pullrequestreview-164462480",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e1dd2e9-ea48-47be-83c2-eca3214cb414",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "Same as above, alternatively\r\n\r\n```scala\r\ncase GlobalSymbol(GlobalSymbol(owner, signature), desc) if desc.isCaseClassSynthetic => // ...\r\n```",
        "createdAt" : "2018-10-13T12:27:29Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "334ee1e0-4c76-4a12-bb5a-0f5975ad1cc1",
        "parentId" : "5e1dd2e9-ea48-47be-83c2-eca3214cb414",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "I think it's fine to hardcode it here instead of using the other method ",
        "createdAt" : "2018-10-13T13:10:00Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "889b282a30a7ddd72b09da4b9328f7779b1cfae9",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +61,65 @@          GlobalSymbol(owner, signature),\n          Descriptor.Method(\"apply\" | \"copy\", _)\n          ) =>\n        GlobalSymbol(owner, Descriptor.Type(signature.name.value))\n    }"
  }
]