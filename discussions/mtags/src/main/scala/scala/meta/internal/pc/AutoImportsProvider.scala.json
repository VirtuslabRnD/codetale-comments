[
  {
    "id" : "843252db-08dd-45bc-ab0c-5fa85e2ad953",
    "prId" : 1065,
    "prUrl" : "https://github.com/scalameta/metals/pull/1065#pullrequestreview-329869096",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94b147ec-d0e8-4617-8f44-aabf0a68bffa",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "@olafurpg is there a smarter way of doing this? If I omit it `autoImportPosition` fails because `pos.source` isn't loaded yet.",
        "createdAt" : "2019-12-10T12:36:55Z",
        "updatedAt" : "2019-12-11T15:30:45Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "11811ce4-9a0c-462f-9a00-80959da6f8c0",
        "parentId" : "94b147ec-d0e8-4617-8f44-aabf0a68bffa",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "There isn't. This is needed.",
        "createdAt" : "2019-12-10T14:19:56Z",
        "updatedAt" : "2019-12-11T15:30:45Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "87d54075-b65b-45b8-83cd-536076441b31",
        "parentId" : "94b147ec-d0e8-4617-8f44-aabf0a68bffa",
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "Fair enough! ¯\\\\\\_(ツ)\\_/¯",
        "createdAt" : "2019-12-10T14:21:45Z",
        "updatedAt" : "2019-12-11T15:30:45Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e046b2b878d476d389f19bdcaa73ae4b7c121c9",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@    val pos = unit.position(params.offset)\n    // make sure the compilation unit is loaded\n    typedTreeAt(pos)\n    val importPosition = autoImportPosition(pos, params.text())\n    val context = doLocateImportContext(pos, importPosition)"
  },
  {
    "id" : "d893f13b-59ea-4752-95d1-d71dac13838c",
    "prId" : 1065,
    "prUrl" : "https://github.com/scalameta/metals/pull/1065#pullrequestreview-329938745",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "550de30f-61ca-46bb-94bb-896a2c4f73aa",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "this is needed since `search` above will return partially matching results, whereas we only want exact results for symbols.\r\n\r\n@olafurpg is there a different way we could do this? I tried, but I couldn't find a way to instruct `search` to only return exact matches",
        "createdAt" : "2019-12-10T15:44:58Z",
        "updatedAt" : "2019-12-11T15:30:45Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "2d37746a-ba89-433f-a5a2-25b1026928d2",
        "parentId" : "550de30f-61ca-46bb-94bb-896a2c4f73aa",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "It's possible to do exact searches and the index is optimized for this use-case, I can't remember the most relevant place to look into, maybe\r\n\r\nhttps://github.com/scalameta/metals/blob/24cfabf16cae3d6187a094e0711d71c125e9e79f/mtags/src/main/scala/scala/meta/internal/metals/WorkspaceSymbolQuery.scala#L35",
        "createdAt" : "2019-12-10T15:47:12Z",
        "updatedAt" : "2019-12-11T15:30:45Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "3eb80972-f1ad-4c74-8f6c-24ea40d687dd",
        "parentId" : "550de30f-61ca-46bb-94bb-896a2c4f73aa",
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "I saw that, but it seems `exact` still produces a list of alternatives. Anyway, it's fast enough not to be a concern (it's upper bound by completions, by definition)",
        "createdAt" : "2019-12-10T15:48:48Z",
        "updatedAt" : "2019-12-11T15:30:45Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e046b2b878d476d389f19bdcaa73ae4b7c121c9",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +43,47 @@\n    def isExactMatch(sym: Symbol, name: String): Boolean =\n      sym.name.dropLocal.decoded == name\n\n    symbols.result.collect {"
  }
]