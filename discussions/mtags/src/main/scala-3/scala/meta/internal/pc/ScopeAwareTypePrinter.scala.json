[
  {
    "id" : "d51caf34-32bd-4417-bbd9-948921c771c9",
    "prId" : 2867,
    "prUrl" : "https://github.com/scalameta/metals/pull/2867#pullrequestreview-692017638",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eef8066e-fb3c-4768-b83a-96f790d18f14",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Should we not include it in the SymbolPrinter so that we are always correct? ",
        "createdAt" : "2021-06-23T11:48:36Z",
        "updatedAt" : "2021-06-23T12:03:06Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "bd482d0f-c5fc-4c4f-b72e-4040a05a830d",
        "parentId" : "eef8066e-fb3c-4768-b83a-96f790d18f14",
        "authorId" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "body" : "It might affect hover appearance.\r\nHaving `_root_` prefix won't make sence there.",
        "createdAt" : "2021-06-23T15:17:46Z",
        "updatedAt" : "2021-06-23T15:17:46Z",
        "lastEditedBy" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "tags" : [
        ]
      },
      {
        "id" : "4bd4b8f7-7db1-4acb-a30f-fb6d4af0b1c4",
        "parentId" : "eef8066e-fb3c-4768-b83a-96f790d18f14",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "the problem is that we will have two different printers and it might be difficult for people to realize which they need. I would rather add a boolean to the other printer like `showRootInConflicts: Boolean`",
        "createdAt" : "2021-06-23T20:21:28Z",
        "updatedAt" : "2021-06-23T20:21:28Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "78b1774c-9544-450c-9f2b-1407a73bdc11",
        "parentId" : "eef8066e-fb3c-4768-b83a-96f790d18f14",
        "authorId" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "body" : "I'm not really sure if it will be better. That would require passing `IndexedContext` in addition to this boolean value.\r\n\r\nActually, creating an additional printer with hacky override was the last thing I wanted to do.\r\n\r\nLet's keep it as it is for a while. I think it might be used only in `InferredTypeProvider` and for `implementAbstractMembers`.\r\nAnd I hope I will find a way to get rid of it :smile: ",
        "createdAt" : "2021-06-24T08:31:35Z",
        "updatedAt" : "2021-06-24T08:31:36Z",
        "lastEditedBy" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "tags" : [
        ]
      },
      {
        "id" : "ab9fa629-dc8d-43fb-9844-db925c7bba5c",
        "parentId" : "eef8066e-fb3c-4768-b83a-96f790d18f14",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Let's maybe handle it in ShortenedNames similar to how we handle renames? The logic is really connected and it would be better to have it all handled in one place. Especially that it is handled already in Scala 2 this way.",
        "createdAt" : "2021-06-24T17:07:39Z",
        "updatedAt" : "2021-06-24T17:07:39Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "539aa7ab28f308608f73907db7d9c494178b6be1",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +28,32 @@            val text = super.toTextPrefix(tp)\n            if (sym.is(ModuleClass) && indexed.toplevelClashes(sym))\n              Str(\"_root_.\") ~ text\n            else\n              text"
  }
]