[
  {
    "id" : "654a199b-4d64-4209-8f8e-963b75e911ff",
    "prId" : 2867,
    "prUrl" : "https://github.com/scalameta/metals/pull/2867#pullrequestreview-690716809",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01b0bb89-ad71-42cd-a3d4-9e491a99c76a",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Do we need the additional empty context? Isn't just an empty list of symbols enough?",
        "createdAt" : "2021-06-23T11:23:35Z",
        "updatedAt" : "2021-06-23T12:03:06Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "91301321-ffe3-4903-986c-4f754f27b3e7",
        "parentId" : "01b0bb89-ad71-42cd-a3d4-9e491a99c76a",
        "authorId" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "body" : "It's used as the last context for `def outer: IntexedContext` and `def outers: List[IndexedContext]`.\r\nIt's needed to have a way to return the last outer context. Actually, it's a wrapper to `NoContext` but it's more convenient to introduce it than checking `Context.outer == NoContext || Context.outer == null` in mentioned methods",
        "createdAt" : "2021-06-23T14:13:37Z",
        "updatedAt" : "2021-06-23T14:13:37Z",
        "lastEditedBy" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "tags" : [
        ]
      }
    ],
    "commit" : "539aa7ab28f308608f73907db7d9c494178b6be1",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +72,76 @@    }\n\n  case object Empty extends IndexedContext {\n    given ctx: Context = NoContext\n    def findSymbol(name: String): Option[List[Symbol]] = None"
  },
  {
    "id" : "fb97a70d-1881-4087-ab96-211d86a22b23",
    "prId" : 2867,
    "prUrl" : "https://github.com/scalameta/metals/pull/2867#pullrequestreview-690732856",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43b5ac82-1782-4692-b4ed-6801adb6a261",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Aren't we doing almost exactly the same in `NamesInScope` ? Are we able to merge them both? Or reuse one in the other?",
        "createdAt" : "2021-06-23T12:02:42Z",
        "updatedAt" : "2021-06-23T12:03:06Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "ce8c0c5b-a25f-42eb-a9f3-5e3a3e6fd2d2",
        "parentId" : "43b5ac82-1782-4692-b4ed-6801adb6a261",
        "authorId" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "body" : "I forgot to remove `NamesInScope`.  I switched everything on `IndexedContext` usage",
        "createdAt" : "2021-06-23T14:26:05Z",
        "updatedAt" : "2021-06-23T14:26:05Z",
        "lastEditedBy" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "tags" : [
        ]
      }
    ],
    "commit" : "539aa7ab28f308608f73907db7d9c494178b6be1",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +184,188 @@\n    given Context = ctx\n    val (symbols, renames) =\n      if (ctx.isImportContext)\n        val (syms, renames) ="
  }
]