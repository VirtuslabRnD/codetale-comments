[
  {
    "id" : "a25217ae-9839-49f9-93cc-9fbffbe077b0",
    "prId" : 22408,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22408#pullrequestreview-162325783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1dbd7e6-a574-4796-9f91-c871abf8efca",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Minor nit but what does this add? Can't we just do the normal inclusion check against the list instead of joining into a string?",
        "createdAt" : "2018-10-08T03:28:50Z",
        "updatedAt" : "2018-10-08T04:00:47Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "e7d5e5bb-066a-41a6-bf64-778e325bf461",
        "parentId" : "c1dbd7e6-a574-4796-9f91-c871abf8efca",
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "`msg in result['errors']` is different than this, for example `'a' in 'foo bar'` is `True`, but `a in ['foo', 'bar']` is `False`.\r\n\r\nI think the `.join()` is simpler than another loop, is it what you would do, or you were thinking on the previous case? ",
        "createdAt" : "2018-10-08T03:52:56Z",
        "updatedAt" : "2018-10-08T04:00:47Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "7b0f2f03-8319-4124-8a5f-0f22c0e76306",
        "parentId" : "c1dbd7e6-a574-4796-9f91-c871abf8efca",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "No but I thought `msg` would explicitly match one of the `errors`; will take a look more deeply on next review if that assumption is incorrect",
        "createdAt" : "2018-10-08T03:54:20Z",
        "updatedAt" : "2018-10-08T04:00:47Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "291971ee-789a-4ef8-8058-48b7c3b17114",
        "parentId" : "c1dbd7e6-a574-4796-9f91-c871abf8efca",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Debugging this locally still don't think the string concatenation is necessary?\r\n\r\n<img width=\"791\" alt=\"image\" src=\"https://user-images.githubusercontent.com/609873/46592333-88826a00-ca76-11e8-8289-adb8f6fac249.png\">\r\n",
        "createdAt" : "2018-10-08T04:18:33Z",
        "updatedAt" : "2018-10-08T04:25:03Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "db782fded5b52c5a23b3b3449c39ca8fbf58716a",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +606,610 @@        result = validate_one(self._import_path(klass=klass, func=func))  # noqa:F821\n        for msg in msgs:\n            assert msg in ' '.join(result['errors'])\n\n"
  },
  {
    "id" : "00558570-d6b7-42da-a5a2-a7928e9ad5b1",
    "prId" : 23165,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23165#pullrequestreview-164775166",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3b537bc-34a6-4ca5-9615-3f2603c30188",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "Can you add one test or two for something like `list of boolean`, `integer, float or string`... I think it makes sense to make sure that we capture them, and that the error in this case makes sense.",
        "createdAt" : "2018-10-15T15:54:25Z",
        "updatedAt" : "2018-10-16T19:03:23Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      }
    ],
    "commit" : "26bf7bee449e6e320f706a8566d30ad725dddbfd",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +486,490 @@        kind : boolean\n            Foo bar baz.\n        \"\"\"\n        pass\n"
  }
]