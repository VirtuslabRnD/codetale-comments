[
  {
    "id" : "26ed8319-dbd5-41a9-ae6c-9129cd880374",
    "prId" : 19898,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19898#pullrequestreview-100647368",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f5dc289-aba8-4852-9464-fd4559e47253",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Is there a reason you do this? As the code below works fine for a class as well, eg pandas.DataFrame (while now the script will say the keywords and signature did not match, while in fact they do)",
        "createdAt" : "2018-03-01T17:23:12Z",
        "updatedAt" : "2018-03-02T09:36:38Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "78c0b1cf-9b67-4781-acbe-b4bbd394e65a",
        "parentId" : "3f5dc289-aba8-4852-9464-fd4559e47253",
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "I didn't research much, but if I introspect parameters from a non-function I get this error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"./validate_docstrings.py\", line 353, in <module>\r\n    sys.exit(main(args.function))\r\n  File \"./validate_docstrings.py\", line 337, in main\r\n    return validate_all()\r\n  File \"./validate_docstrings.py\", line 259, in validate_all\r\n    int(doc.correct_parameters),\r\n  File \"./validate_docstrings.py\", line 159, in correct_parameters\r\n    return not bool(self.parameter_mismatches)\r\n  File \"./validate_docstrings.py\", line 138, in parameter_mismatches\r\n    signature_params = self.signature_parameters\r\n  File \"./validate_docstrings.py\", line 130, in signature_parameters\r\n    params = tuple(inspect.signature(self.method_obj).parameters.keys())\r\n  File \"/home/mgarcia/.anaconda3/envs/pandas_dev/lib/python3.6/inspect.py\", line 3036, in signature\r\n    return Signature.from_callable(obj, follow_wrapped=follow_wrapped)\r\n  File \"/home/mgarcia/.anaconda3/envs/pandas_dev/lib/python3.6/inspect.py\", line 2786, in from_callable\r\n    follow_wrapper_chains=follow_wrapped)\r\n  File \"/home/mgarcia/.anaconda3/envs/pandas_dev/lib/python3.6/inspect.py\", line 2341, in _signature_from_callable\r\n    'no signature found for builtin type {!r}'.format(obj))\r\nValueError: no signature found for builtin type <class 'pandas.core.indexing._AtIndexer'>\r\n```",
        "createdAt" : "2018-03-02T00:49:42Z",
        "updatedAt" : "2018-03-02T09:36:38Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      }
    ],
    "commit" : "da24d08fa21f8b848e26a4aaf20e1344e787fcd7",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +129,133 @@    def signature_parameters(self):\n        if not inspect.isfunction(self.method_obj):\n            return tuple()\n        params = tuple(inspect.signature(self.method_obj).parameters.keys())\n        if params and params[0] in ('self', 'cls'):"
  },
  {
    "id" : "e33020cf-d2e6-4600-acb4-bf3a6097f7c1",
    "prId" : 19960,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19960#pullrequestreview-100758717",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49fc2f66-f7a2-4bdd-823e-840be185025e",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "Is it difficult to find the accessors that have been registered, instead of hardcoding them here? So we don't need to remember to change this when a new accessor is created.",
        "createdAt" : "2018-03-02T10:42:16Z",
        "updatedAt" : "2018-03-02T11:02:39Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "57cfc811-dca3-40c9-916c-3051b582e426",
        "parentId" : "49fc2f66-f7a2-4bdd-823e-840be185025e",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yeah, I was looking into the class (eg that I could check they inherit from a base Accessor class, but that's not consistent between them). \r\nSo not really sure there is a better way, but totally agree it is not ideal.",
        "createdAt" : "2018-03-02T10:56:02Z",
        "updatedAt" : "2018-03-02T11:02:39Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "8ea84b05-1ba7-46dd-83ea-b79b5227fecb",
        "parentId" : "49fc2f66-f7a2-4bdd-823e-840be185025e",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Actually, there is a `_accessors` attribute. But not fully sure to what extent we can rely on that.",
        "createdAt" : "2018-03-02T11:01:52Z",
        "updatedAt" : "2018-03-02T11:02:39Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "61173f61-d433-4300-adc6-1c1714ad39ac",
        "parentId" : "49fc2f66-f7a2-4bdd-823e-840be185025e",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "The problem is then that I need to get the class (eg Series in case of pandas.Series.dt), which is also difficult to introspect. So maybe the easiest is to leave it as is.",
        "createdAt" : "2018-03-02T11:03:27Z",
        "updatedAt" : "2018-03-02T11:03:27Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "87386a40-4598-4bb2-9174-abcb72212c4b",
        "parentId" : "49fc2f66-f7a2-4bdd-823e-840be185025e",
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "Sure, it's quite useful as it is, we can improve it in the future if we find a way.",
        "createdAt" : "2018-03-02T11:06:41Z",
        "updatedAt" : "2018-03-02T11:06:41Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "c44d208f-4f5d-4eff-a88a-2faf3631e756",
        "parentId" : "49fc2f66-f7a2-4bdd-823e-840be185025e",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "FYI: https://github.com/pandas-dev/pandas/issues/19963\r\n\r\nI think `isinstance(object.__getattribute__(self, method_obj.__name__), CachedAccessor)` might have done it, But having an official registry is better :)",
        "createdAt" : "2018-03-02T12:26:54Z",
        "updatedAt" : "2018-03-02T12:26:54Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e436e5b7364ee495f7b4f468cc405232b314a02",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +134,138 @@            return tuple()\n        if (inspect.isclass(self.method_obj)\n                and self.method_name.split('.')[-1] in {'dt', 'str', 'cat'}):\n            # accessor classes have a signature, but don't want to show this\n            return tuple()"
  }
]