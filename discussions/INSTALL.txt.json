[
  {
    "id" : "385390c4-3f77-4079-856b-468e6b337bf3",
    "prId" : 5912,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4053439b-96f6-4a37-8414-b09831a87bc4",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "Shouldn't this be a double-colon?\n",
        "createdAt" : "2015-05-23T20:29:26Z",
        "updatedAt" : "2015-05-23T20:29:26Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "658eb87f-214b-4bf0-81e5-753e8b230b72",
        "parentId" : "4053439b-96f6-4a37-8414-b09831a87bc4",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "This is a .txt file, not reST. So double-colon doesn't do anything. Current style in the file is also single colon.\n",
        "createdAt" : "2015-05-23T20:31:53Z",
        "updatedAt" : "2015-05-23T20:31:53Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "7304fe0c-bae5-422a-91e5-d2ccb9e098cf",
        "parentId" : "4053439b-96f6-4a37-8414-b09831a87bc4",
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "Doh, okay :-). I guess I got confused by the part where all the rest of the file is written in ReST... (???)\n",
        "createdAt" : "2015-05-23T20:35:21Z",
        "updatedAt" : "2015-05-23T20:35:21Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "81ed0d56-91fe-4ff6-a8c2-56438afd6f0b",
        "parentId" : "4053439b-96f6-4a37-8414-b09831a87bc4",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "yeah, that's a bit weird. We shouldn't rename the file to `INSTALL.rst.txt` though I think, the whole point of the file is that `INSTALL.txt` is universally recognized.\n",
        "createdAt" : "2015-05-23T20:41:44Z",
        "updatedAt" : "2015-05-23T20:41:44Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "65df669b-d1e8-47ab-a5c5-7563f1019d0c",
        "parentId" : "4053439b-96f6-4a37-8414-b09831a87bc4",
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "I guess there is an argument for making it valid ReST and then `.. include`'ing it into the docs proper, but eh.\n",
        "createdAt" : "2015-05-23T20:45:18Z",
        "updatedAt" : "2015-05-23T20:45:18Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "73c761ce-2da9-46b8-830e-1d075e504853",
        "parentId" : "4053439b-96f6-4a37-8414-b09831a87bc4",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "There's more extensive documentation on how to build at http://scipy.org/scipylib/building/index.html already, so this is anyway a bit double. \n",
        "createdAt" : "2015-05-23T20:49:40Z",
        "updatedAt" : "2015-05-23T20:49:40Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "12320f48eae2ffe50da9f92aed4639b4525b50eb",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +159,163 @@together toolchains for that option. The toolchains are available at \nhttps://bitbucket.org/carlkl/mingw-w64-for-python/downloads. The site.cfg\nshould be configured like so:\n\n   [openblas]"
  },
  {
    "id" : "bd713311-c982-4ae4-874a-06fee4cb5fe8",
    "prId" : 5912,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a48ac90f-26e7-4834-ada5-300ef6b08645",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "Ditto\n",
        "createdAt" : "2015-05-23T20:29:31Z",
        "updatedAt" : "2015-05-23T20:29:31Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "12320f48eae2ffe50da9f92aed4639b4525b50eb",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +168,172 @@The libopenblaspy.dll from <openblaspath>/bin must be copied to numpy/core\nbefore the build. For this mingw-w64 toolchain manual creation of the python\nimport libs is necessary, i.e.:\n\n   gendef python2.7.dll"
  },
  {
    "id" : "e4b98619-57d8-4dfb-850e-ae64454e0fb5",
    "prId" : 5912,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "443fb46c-0617-4a8f-a4bb-f35e86557ec5",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "Should this perhaps say \"MSVC + regular upstream mingw-w64 gfortran (as opposed to mingwpy gfortran)\"?\n",
        "createdAt" : "2015-05-23T20:32:30Z",
        "updatedAt" : "2015-05-23T20:32:30Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "e186953a-97ad-4449-b075-bd566a12c922",
        "parentId" : "443fb46c-0617-4a8f-a4bb-f35e86557ec5",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Neither one works right, so why make the distinction?\n",
        "createdAt" : "2015-05-23T20:33:40Z",
        "updatedAt" : "2015-05-23T20:33:40Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "79f3b9b5-39b6-4acc-99ea-dbd486281aaa",
        "parentId" : "443fb46c-0617-4a8f-a4bb-f35e86557ec5",
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "Wait what, mingwpy gfortran still doesn't work? Arghhhh.\n",
        "createdAt" : "2015-05-23T20:36:01Z",
        "updatedAt" : "2015-05-23T20:36:01Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "b93343ce-41d2-49b0-adb1-9be4c4533614",
        "parentId" : "443fb46c-0617-4a8f-a4bb-f35e86557ec5",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "I haven't tried recently, but why would it? Carl's toolchain is all of MinGW, I don't think MSVC + gfortran was even a goal (it would be very nice to have though).\n",
        "createdAt" : "2015-05-23T20:40:17Z",
        "updatedAt" : "2015-05-23T20:40:17Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "18f89368-2f5e-4361-804e-f2e9003ba439",
        "parentId" : "443fb46c-0617-4a8f-a4bb-f35e86557ec5",
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "Oh, maybe we're talking past each other. Surely being able to use gfortran\nto build Python extensions on windows at all requires that gfortran + MSVC\nbe working at the technical level, b/c that's what you end up with after\nPython loads your extension. Getting a build system to actually use MSVC\nfor C code while using gfortran for fortran is another matter of course...?\n\nOn Sat, May 23, 2015 at 1:40 PM, Ralf Gommers notifications@github.com\nwrote:\n\n> In INSTALL.txt\n> https://github.com/numpy/numpy/pull/5912#discussion_r30948079:\n> \n> > @@ -168,9 +190,8 @@ MS compilers\n> >  If you are familiar with MS tools, that's obviously the easiest path, and\n> >  the compilers are hopefully more mature (although in my experience, they\n> >  are quite fragile, and often segfault on invalid C code). The main drawback\n> > -is that no fortran compiler + MS compiler combination has been tested -\n> > -mingw-w64 gfortran + MS compiler does not work at all (it is unclear\n> > -whether it ever will).\n> > +is that mingw-w64 gfortran + MSVC does not work at all (it is unclear\n> \n> I haven't tried recently, but why would it? Carl's toolchain is all of\n> MinGW, I don't think MSVC + gfortran was even a goal (it would be very nice\n> to have though).\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/numpy/numpy/pull/5912/files#r30948079.\n\n## \n\nNathaniel J. Smith -- http://vorpus.org\n",
        "createdAt" : "2015-05-23T20:43:11Z",
        "updatedAt" : "2015-05-23T20:43:11Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "2b9d33a3-c198-480a-b6b9-a1395207300e",
        "parentId" : "443fb46c-0617-4a8f-a4bb-f35e86557ec5",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Ah okay, I see what you meant. That makes sense. I wonder whether we should completely remove that sentence then - I expect mingw-w64 upstream will be improving over time, and have no idea what the current status is. \n",
        "createdAt" : "2015-05-23T20:47:30Z",
        "updatedAt" : "2015-05-23T20:47:30Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "12320f48eae2ffe50da9f92aed4639b4525b50eb",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +191,195 @@the compilers are hopefully more mature (although in my experience, they\nare quite fragile, and often segfault on invalid C code). The main drawback\nis that mingw-w64 gfortran + MSVC does not work at all (it is unclear\nwhether it ever will).  MSVC + ifort + MKL does work.\n"
  }
]