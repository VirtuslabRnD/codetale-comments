[
  {
    "id" : "81e364dd-8ab7-413f-9be1-8cde1ae507c9",
    "prId" : 3649,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3649#pullrequestreview-529291067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ebe0181-a299-40f7-8322-3d291d627bd7",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "can we comment that this won't work if the model version download uri points to a single file not a directory due to the way many ArtifactRepository's download_artifacts handles empty subpaths?",
        "createdAt" : "2020-11-12T16:56:03Z",
        "updatedAt" : "2020-11-17T19:01:36Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8542ef597bd7022977eb42848d5cc00ff3b7ff9",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +757,761 @@    CliBasedArtifactRepository repository = new CliBasedArtifactRepository(null, null,\n            hostCredsProvider);\n    return repository.downloadArtifactFromUri(downloadUriBuilder.toString());\n  }\n"
  },
  {
    "id" : "6bd889aa-7442-4734-8877-94603ac79809",
    "prId" : 2513,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2513#pullrequestreview-366829489",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14638334-2078-47cb-9ec6-8101f283fa2a",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Escape the `<ModelVersionDetailed>` tag. Also update the type to `ModelVersion`, as that's what the API returns",
        "createdAt" : "2020-03-01T01:43:40Z",
        "updatedAt" : "2020-03-01T19:40:31Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b6f101cbb300e3af2dc047e0e29665085f2144b",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +660,664 @@   *    <pre>\n   *        import org.mlflow.api.proto.ModelRegistry.ModelVersion;\n   *        List{@code <ModelVersion>} detailsList = getLatestVersions(\"model\");\n   *\n   *        for (ModelVersion details : detailsList) {"
  },
  {
    "id" : "28e1da1f-413c-468f-94b0-cb1c41a3e3f9",
    "prId" : 2308,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2308#pullrequestreview-342962135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d51e0d65-3532-467a-8e7f-f4db9f09217d",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "finish the sentence?",
        "createdAt" : "2020-01-15T01:26:02Z",
        "updatedAt" : "2020-01-29T19:40:32Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "ae75af4c-f11e-4da9-bb00-cb23ff2d5808",
        "parentId" : "d51e0d65-3532-467a-8e7f-f4db9f09217d",
        "authorId" : "dab5a163-e8a4-4ae3-a16c-0d903dcff35c",
        "body" : "I've removed the sentence. ",
        "createdAt" : "2020-01-15T02:46:25Z",
        "updatedAt" : "2020-01-29T19:40:32Z",
        "lastEditedBy" : "dab5a163-e8a4-4ae3-a16c-0d903dcff35c",
        "tags" : [
        ]
      }
    ],
    "commit" : "29158beca385eab6ac7c5661f86e9d9922a800f7",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +722,726 @@   *        String modelUri = getModelVersionDownloadUri(\"model\", 0);\n   *    </pre>\n   *\n   * @param modelName The name of the model\n   * @param version The version number of the model"
  },
  {
    "id" : "588617ec-92be-4d90-84f5-34fe36b6707a",
    "prId" : 2308,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2308#pullrequestreview-349654791",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb1558e8-5753-4827-a00a-4a9bfbf37865",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "were you able to test this against the databricks model registry (which uses dbfs paths for the model download uri)?",
        "createdAt" : "2020-01-15T01:27:31Z",
        "updatedAt" : "2020-01-29T19:40:32Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "a4c51269-b416-4802-a093-d5da25580eb1",
        "parentId" : "bb1558e8-5753-4827-a00a-4a9bfbf37865",
        "authorId" : "dab5a163-e8a4-4ae3-a16c-0d903dcff35c",
        "body" : "Good point. Not yet. This was only tested against the local mlflow server so far. We should add an integration test that can ensure the DBFS implementation works. ",
        "createdAt" : "2020-01-15T02:38:44Z",
        "updatedAt" : "2020-01-29T19:40:32Z",
        "lastEditedBy" : "dab5a163-e8a4-4ae3-a16c-0d903dcff35c",
        "tags" : [
        ]
      },
      {
        "id" : "7db58933-dd41-4e2e-a46a-b1dcafd25693",
        "parentId" : "bb1558e8-5753-4827-a00a-4a9bfbf37865",
        "authorId" : "dab5a163-e8a4-4ae3-a16c-0d903dcff35c",
        "body" : "I have manually test this against the dogfood stage right now. I will create a follow-up task to implement an integration test in the databricks universe.\r\n\r\nhttps://databricks.atlassian.net/browse/ML-9528",
        "createdAt" : "2020-01-28T19:48:19Z",
        "updatedAt" : "2020-01-29T19:40:32Z",
        "lastEditedBy" : "dab5a163-e8a4-4ae3-a16c-0d903dcff35c",
        "tags" : [
        ]
      }
    ],
    "commit" : "29158beca385eab6ac7c5661f86e9d9922a800f7",
    "line" : 165,
    "diffHunk" : "@@ -1,1 +749,753 @@   * @return A local file or directory ({@ java.io.File}) containing model artifacts\n   */\n  public File downloadModelVersion(@Nonnull String modelName, long version) {\n    String downloadUri = getModelVersionDownloadUri(modelName, version);\n"
  },
  {
    "id" : "968f9324-75ab-4b14-8f4e-8eb8ed27dcc5",
    "prId" : 2308,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2308#pullrequestreview-350266609",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a45bf02-5a0d-4330-b6db-42e644cae105",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "nit: move imports to the alphabetically correct position",
        "createdAt" : "2020-01-28T22:31:10Z",
        "updatedAt" : "2020-01-29T19:40:32Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "71e3bced-4a23-466a-8c6c-dabc7f598740",
        "parentId" : "2a45bf02-5a0d-4330-b6db-42e644cae105",
        "authorId" : "dab5a163-e8a4-4ae3-a16c-0d903dcff35c",
        "body" : "Done",
        "createdAt" : "2020-01-29T16:55:20Z",
        "updatedAt" : "2020-01-29T19:40:32Z",
        "lastEditedBy" : "dab5a163-e8a4-4ae3-a16c-0d903dcff35c",
        "tags" : [
        ]
      }
    ],
    "commit" : "29158beca385eab6ac7c5661f86e9d9922a800f7",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +8,12 @@import org.mlflow.api.proto.ModelRegistry.*;\nimport org.mlflow.api.proto.Service.*;\nimport org.mlflow.tracking.creds.*;\n\nimport java.io.File;"
  },
  {
    "id" : "9d8ca7dd-0174-40db-83c0-8c429f86f5bb",
    "prId" : 1697,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1697#pullrequestreview-272239896",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c80e19f0-ce61-4e94-9ab8-b8b81529db7c",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Should we also update Java tests to verify that we can pass a directory to `logArtifact`?",
        "createdAt" : "2019-08-07T21:28:33Z",
        "updatedAt" : "2019-08-09T22:23:54Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "032d15a73b37b6e77ae91780e0f820e897cbbfbd",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +506,510 @@   */\n  public void logArtifact(String runId, File localFile) {\n    if (localFile.isDirectory()) {\n      getArtifactRepository(runId).logArtifacts(localFile, localFile.getName());\n    }"
  },
  {
    "id" : "70111e51-5ef4-447b-af9a-eaf24e3f1c9d",
    "prId" : 1567,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1567#pullrequestreview-261030289",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6344476b-c07c-4f20-8312-1d6de28d2d79",
        "parentId" : null,
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "can users send in `null` for `experimentIds` -- if we don't want that can we add `@NotNull` or handle that in the method like done in the other `searchRuns` method that calls REST endpoint. ditto for `orderBy` argument.",
        "createdAt" : "2019-07-11T22:37:12Z",
        "updatedAt" : "2019-07-13T00:17:54Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      },
      {
        "id" : "b654f425-2a80-4a94-b2c8-423aee2c7ff5",
        "parentId" : "6344476b-c07c-4f20-8312-1d6de28d2d79",
        "authorId" : "ef7f4fc4-8253-410e-bcf1-8d5fe4cd38b3",
        "body" : "I believe @NotNull is just a doc annotation. I don't think it actually adds any validation of the input. I'm not sure what would happen if we didn't check (not sure what protobuf's generated code does), but I can try it out. I believe the expected behavior should be to throw an exception.",
        "createdAt" : "2019-07-12T01:00:27Z",
        "updatedAt" : "2019-07-13T00:17:54Z",
        "lastEditedBy" : "ef7f4fc4-8253-410e-bcf1-8d5fe4cd38b3",
        "tags" : [
        ]
      },
      {
        "id" : "4a8ad1e3-23d9-4aeb-938c-0427499440e8",
        "parentId" : "6344476b-c07c-4f20-8312-1d6de28d2d79",
        "authorId" : "ef7f4fc4-8253-410e-bcf1-8d5fe4cd38b3",
        "body" : "Yup, it throws a `NullPointerException`",
        "createdAt" : "2019-07-12T02:06:46Z",
        "updatedAt" : "2019-07-13T00:17:54Z",
        "lastEditedBy" : "ef7f4fc4-8253-410e-bcf1-8d5fe4cd38b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f6ba413f95986288f8c4fd373a1839decbbb74a",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +232,236 @@                              String pageToken) {\n    SearchRuns.Builder builder = SearchRuns.newBuilder()\n            .addAllExperimentIds(experimentIds)\n            .addAllOrderBy(orderBy)\n            .setMaxResults(maxResults);"
  },
  {
    "id" : "63f38dbe-5f35-4ffe-a95d-fc37bf8b3a68",
    "prId" : 1567,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1567#pullrequestreview-261408008",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e0eff11-6ea8-4f31-9489-62c454c544b7",
        "parentId" : null,
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "nit: Could we actually document everywhere which fields are nullable and what it means when it's null?",
        "createdAt" : "2019-07-12T17:36:01Z",
        "updatedAt" : "2019-07-13T00:17:54Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      },
      {
        "id" : "21ec6b44-0b49-482e-b588-0991a74fbe42",
        "parentId" : "9e0eff11-6ea8-4f31-9489-62c454c544b7",
        "authorId" : "ef7f4fc4-8253-410e-bcf1-8d5fe4cd38b3",
        "body" : "The only parameter that would make sense to be null is `pageToken`. Even then a blank string will do the trick. When the null checks were added to the searchRunsV1 API, they basically let protobuf load in the default value by not specifying it. The default value is either specified in `service.proto` or it'll use the default value for the data type. \r\n\r\nWith respect to this, should we throw `NullPointerException`s when null is passed in? Or should we just default to protobuf defaults? @andrewmchen @mparkhe  ",
        "createdAt" : "2019-07-12T18:21:48Z",
        "updatedAt" : "2019-07-13T00:17:54Z",
        "lastEditedBy" : "ef7f4fc4-8253-410e-bcf1-8d5fe4cd38b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f6ba413f95986288f8c4fd373a1839decbbb74a",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +129,133 @@   * \n   * @param experimentIds List of experiment IDs.\n   * @param searchFilter SQL compatible search query string. Format of this query string is\n   *                     similar to that specified on MLflow UI.\n   *                     Example : \"params.model = 'LogisticRegression' and metrics.acc = 0.9\""
  },
  {
    "id" : "ac9be540-20ba-4496-a791-2d50cb52948e",
    "prId" : 1567,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1567#pullrequestreview-261411341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31dfaf94-b59f-4bee-a44e-9689a2cfd073",
        "parentId" : null,
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "Same here, what does it mean to default to anything?",
        "createdAt" : "2019-07-12T17:38:48Z",
        "updatedAt" : "2019-07-13T00:17:54Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      },
      {
        "id" : "b709c306-8c77-4391-8669-e2119b2af735",
        "parentId" : "31dfaf94-b59f-4bee-a44e-9689a2cfd073",
        "authorId" : "ef7f4fc4-8253-410e-bcf1-8d5fe4cd38b3",
        "body" : "Fair point. If it shouldn't be null, then it should always be defined. Defaulting doesn't make sense.",
        "createdAt" : "2019-07-12T18:28:47Z",
        "updatedAt" : "2019-07-13T00:17:54Z",
        "lastEditedBy" : "ef7f4fc4-8253-410e-bcf1-8d5fe4cd38b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f6ba413f95986288f8c4fd373a1839decbbb74a",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +171,175 @@   *                     Example : \"params.model = 'LogisticRegression' and metrics.acc != 0.9\"\n   *                     If null, the result will be equivalent to having an empty search filter.\n   * @param runViewType ViewType for expected runs. One of (ACTIVE_ONLY, DELETED_ONLY, ALL)\n   *                    If null, only runs with viewtype ACTIVE_ONLY will be searched.\n   * @param maxResults Maximum number of runs desired in one page."
  },
  {
    "id" : "c3bd74c5-2b76-4121-8d35-9da405ef6fcd",
    "prId" : 1559,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1559#pullrequestreview-259799540",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b0526db-f1c8-4784-99e5-209abe33a812",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Can we add parameter docs for this method, as well as `setTag`?",
        "createdAt" : "2019-07-09T22:57:14Z",
        "updatedAt" : "2019-07-12T00:10:10Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a13ef3900f30f805095ca5102e44fc4fd9cdd4c",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +304,308 @@   * @param key Name of the tag\n   */\n  public void deleteTag(String runId, String key) {\n    sendPost(\"runs/delete-tag\", mapper.makeDeleteTag(runId, key));\n  }"
  },
  {
    "id" : "15b02b7a-dde2-4d7e-9f59-556c2d575d1a",
    "prId" : 1559,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1559#pullrequestreview-259799540",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f9cd094-40a1-406c-a396-ff6be261602b",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Do we have tests for this method? https://github.com/mlflow/mlflow/blob/master/mlflow/java/client/src/test/java/org/mlflow/tracking/MlflowClientTest.java seems like a reasonable location",
        "createdAt" : "2019-07-09T22:59:36Z",
        "updatedAt" : "2019-07-12T00:10:10Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a13ef3900f30f805095ca5102e44fc4fd9cdd4c",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +304,308 @@   * @param key Name of the tag\n   */\n  public void deleteTag(String runId, String key) {\n    sendPost(\"runs/delete-tag\", mapper.makeDeleteTag(runId, key));\n  }"
  },
  {
    "id" : "309d32a3-387f-475a-b253-0df45ca7fd5e",
    "prId" : 1187,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1187#pullrequestreview-233102621",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f42c084-a558-40a1-8758-cfeddd7ac9b0",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "BTW, one observation - without changes to the logic here, we won't auto-populate `runId` in the `Run` object returned here (i.e. we just return whatever the server returns to the user), so there's a slight behavior difference between Java & Python (Python's `RunInfo` entity constructor populates `self._run_id` from `run_uuid` if `run_id` is unspecified)",
        "createdAt" : "2019-05-02T05:51:56Z",
        "updatedAt" : "2019-05-02T18:19:24Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "e248cd59-5bcb-433e-aff6-c95dabfc3c45",
        "parentId" : "5f42c084-a558-40a1-8758-cfeddd7ac9b0",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "I guess the main consequence of not setting `runId` in the returned `Run` here for now is that users of the Java client API will have to check both `runId` and `runUuid` to account for the fact that they could be talking to a new or old server. This is sort of weird, but maybe ok since it's a short-term thing.",
        "createdAt" : "2019-05-02T05:55:57Z",
        "updatedAt" : "2019-05-02T18:19:24Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "cebacff3-887b-4921-aec4-ddf24128d2a0",
        "parentId" : "5f42c084-a558-40a1-8758-cfeddd7ac9b0",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Actually nvm, the OSS server returns both runId and runUuid. Thus:\r\n* Existing Java code, which uses `run.getRunUuid`, should work w/ the new OSS server\r\n* New Java code, which should use `run.getRunId`, should work w/ the new OSS server.\r\n\r\nThe only discrepancy then is that new Java code using `run.getRunId` won't work against the old server, but this seems ok - users can code around this initially & once they upgrade their server(s) things should work.",
        "createdAt" : "2019-05-02T16:07:34Z",
        "updatedAt" : "2019-05-02T18:19:24Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "3f78d6de-5753-46bb-8e73-02a26d099550",
        "parentId" : "5f42c084-a558-40a1-8758-cfeddd7ac9b0",
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Agree with your conclusions. We could also have the Python entity differentiate run_uuid and run_id (allowing different values), but this also has interaction with the file store and potentially sqlalchemy store.",
        "createdAt" : "2019-05-02T16:12:31Z",
        "updatedAt" : "2019-05-02T18:19:24Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "129a249406c6420c2d5291a46e6f86543368dacf",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +59,63 @@      .setParameter(\"run_uuid\", runId)\n      .setParameter(\"run_id\", runId);\n    return mapper.toGetRunResponse(httpCaller.get(builder.toString())).getRun();\n  }\n"
  },
  {
    "id" : "8cd8a8cd-0764-49d8-8b95-aa3f0bcc6300",
    "prId" : 1178,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1178#pullrequestreview-231968626",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9540d46b-814f-4204-be09-24b5db4cfd0d",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Named the run ID parameter `runUuid` for parity with the existing Java `getRun` etc APIs, but we should consider renaming the `runUuid` argument to `runId` in Java APIs to match Python (cc @aarondav who's evaluating some of the Java APIs right now)",
        "createdAt" : "2019-04-30T00:20:04Z",
        "updatedAt" : "2019-04-30T00:20:15Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "844788cf-424b-4192-b370-8a6fdc0cf785",
        "parentId" : "9540d46b-814f-4204-be09-24b5db4cfd0d",
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Got it/",
        "createdAt" : "2019-04-30T01:24:05Z",
        "updatedAt" : "2019-04-30T01:24:05Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "bada8bc97d4bfc555f7ce41912904494fed07479",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +60,64 @@  }\n\n  public List<Metric> getMetricHistory(String runUuid, String key) {\n    URIBuilder builder = newURIBuilder(\"metrics/get-history\")\n      .setParameter(\"run_uuid\", runUuid)"
  },
  {
    "id" : "5edda64b-d7be-4274-87a8-b86be25e4f51",
    "prId" : 1068,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1068#pullrequestreview-221408901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ab71e5b-2c9a-4d1f-934a-11c64a899d0d",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "We should say what shape searchFilter takes or where to find more docs for it, and indicate that it may be null (maybe use `@Nullable` if that's available).",
        "createdAt" : "2019-04-01T17:39:31Z",
        "updatedAt" : "2019-04-02T02:57:38Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "b3e68192-b504-4e59-b188-277b3953a5f5",
        "parentId" : "5ab71e5b-2c9a-4d1f-934a-11c64a899d0d",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "Could not get annotations to work. Handled `null` cases and added javadocs.",
        "createdAt" : "2019-04-02T00:54:04Z",
        "updatedAt" : "2019-04-02T02:57:38Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf685ada97133f838bb658ec80770983c19e5b45",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +130,134 @@   * @return a list of all RunInfos that satisfy search filter.\n   */\n  public List<RunInfo> searchRuns(List<Long> experimentIds, String searchFilter) {\n    return searchRuns(experimentIds, searchFilter, ViewType.ACTIVE_ONLY);\n  }"
  },
  {
    "id" : "3bf22581-d7b9-4fb1-9e19-e268de9b7412",
    "prId" : 1068,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1068#pullrequestreview-221250956",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21ded7af-d715-4137-985d-4da8b283417a",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Also indicate Nullability of this parameter",
        "createdAt" : "2019-04-01T17:39:48Z",
        "updatedAt" : "2019-04-02T02:57:38Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf685ada97133f838bb658ec80770983c19e5b45",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +148,152 @@  public List<RunInfo> searchRuns(List<Long> experimentIds,\n                                  String searchFilter,\n                                  ViewType runViewType) {\n    SearchRuns.Builder builder = SearchRuns.newBuilder().addAllExperimentIds(experimentIds);\n    if (searchFilter != null) {"
  },
  {
    "id" : "29774df7-b624-4dfd-a62e-19b68a3bbd67",
    "prId" : 570,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/570#pullrequestreview-159994305",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ea6b360-e871-403f-a22c-5dbada4d8927",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Also added delete & restore experiment to Java Tracking API (already exists in Python API).",
        "createdAt" : "2018-09-28T19:28:19Z",
        "updatedAt" : "2018-10-08T15:12:19Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3348a626d7f37d3bc0a7581c7166c1f1a5eefaf",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +135,139 @@\n  /** Mark an experiment and associated runs, params, metrics, etc for deletion. */\n  public void deleteExperiment(long experimentId) {\n    String ijson = mapper.makeDeleteExperimentRequest(experimentId);\n    httpCaller.post(\"experiments/delete\", ijson);"
  },
  {
    "id" : "a9cabb03-8662-4f4c-87ac-fdbf852ae795",
    "prId" : 438,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/438#pullrequestreview-153137432",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b90db3f-3f8f-4d59-8103-9351cf1f841d",
        "parentId" : null,
        "authorId" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "body" : "We should consider whether we want to use File or String for local paths here. Which will be more natural in Java? File is more type-safe and you might get it from various Java APIs, but it's also a bit of a departure from the Python and R APIs that might make the API more verbose. Maybe it's fine though.",
        "createdAt" : "2018-09-06T21:41:43Z",
        "updatedAt" : "2018-09-06T22:00:25Z",
        "lastEditedBy" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "tags" : [
        ]
      },
      {
        "id" : "aa5649c2-10b2-4219-9bec-484a097c7201",
        "parentId" : "1b90db3f-3f8f-4d59-8103-9351cf1f841d",
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "As discussed offline, File is pretty common w/in Java APIs to represent, specifically, files or directories on the local file system. And having a non-String arguments makes it less likely to flip arguments (as you can't do call-by-name in Java unlike Python).",
        "createdAt" : "2018-09-06T21:55:04Z",
        "updatedAt" : "2018-09-06T22:00:25Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "acefa7da7b4d16d4bb32e77d828bf640f46d7c1c",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +274,278 @@   *                     start with a /.\n   */\n  public void logArtifact(String runId, File localFile, String artifactPath) {\n    getArtifactRepository(runId).logArtifact(localFile, artifactPath);\n  }"
  },
  {
    "id" : "55418641-1ddf-45ea-a52e-f33d408ba743",
    "prId" : 430,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/430#pullrequestreview-152560854",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53dc3c56-004f-4c62-94da-9277b81d01b4",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Renamed these methods so they don't show up near the top of the class index.",
        "createdAt" : "2018-09-05T15:40:02Z",
        "updatedAt" : "2018-09-05T15:40:02Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "58955459d4af1d60f2eb7117a6600e3a04f9bc7b",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +174,178 @@   * @return JSON response from the server\n   */\n  public String sendGet(String path) {\n    return httpCaller.get(path);\n  }"
  },
  {
    "id" : "cd1b9325-f75d-4669-9d64-0b2608dc6609",
    "prId" : 398,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/398#pullrequestreview-150740695",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "752612c6-c26f-4337-b44f-08d6848481ff",
        "parentId" : null,
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Why is there a need for the chain? Is there a case where dynamic provider is available but does not have any credentials and there is a config file?",
        "createdAt" : "2018-08-29T19:55:39Z",
        "updatedAt" : "2018-08-29T20:31:35Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "98334c13-f6a9-45bf-87cb-0554435bfe14",
        "parentId" : "752612c6-c26f-4337-b44f-08d6848481ff",
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Yes.",
        "createdAt" : "2018-08-29T20:28:00Z",
        "updatedAt" : "2018-08-29T20:31:35Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "60010d226a5ad03be6c148e1fbabe37fa8ec7066",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +215,219 @@        DatabricksDynamicHostCredsProvider.createIfAvailable();\n      if (dynamicProvider != null) {\n        provider = new HostCredsProviderChain(dynamicProvider, profileProvider);\n      } else {\n        provider = profileProvider;"
  }
]