[
  {
    "id" : "7fc3a21d-c76e-47b6-b8d2-6e945758c42f",
    "prId" : 398,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/398#pullrequestreview-150740643",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1e5c01d-e1df-4ad6-aa77-62a173c3caea",
        "parentId" : null,
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Nit: since we are not ever appending to this list, why not leave it as an MlflowHostCredsProvider[] array?",
        "createdAt" : "2018-08-29T19:51:33Z",
        "updatedAt" : "2018-08-29T20:31:35Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "9855d7f0-77cb-401d-be74-67708f563ba0",
        "parentId" : "c1e5c01d-e1df-4ad6-aa77-62a173c3caea",
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Hmm, typically Java authors prefer `List` to array for immutable-ish lists. The latter is not immutable, it merely cannot be resized, and its type invariance, lack of a good print function, lack of a good hash function, etc. make it less nice to use in general.",
        "createdAt" : "2018-08-29T20:27:54Z",
        "updatedAt" : "2018-08-29T20:31:35Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "60010d226a5ad03be6c148e1fbabe37fa8ec7066",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@  private static final Logger logger = Logger.getLogger(HostCredsProviderChain.class);\n\n  private final List<MlflowHostCredsProvider> hostCredsProviders = new ArrayList<>();\n\n  public HostCredsProviderChain(MlflowHostCredsProvider... hostCredsProviders) {"
  },
  {
    "id" : "929e7534-b722-4bb5-8e84-09e1076f6dc1",
    "prId" : 398,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/398#pullrequestreview-150745672",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da4edee2-8f73-4529-bc2d-03804a2fbf9b",
        "parentId" : null,
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Maybe safer to catch Throwable?",
        "createdAt" : "2018-08-29T20:01:46Z",
        "updatedAt" : "2018-08-29T20:31:35Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "216eafb7-5c6f-4790-8f4d-feed4681bcb4",
        "parentId" : "da4edee2-8f73-4529-bc2d-03804a2fbf9b",
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "We don't want to catch things like OutOfMemoryError, as that could cause the JVM to be unstable -- Scala's NonFatal is more suitable, but in Java most authors leave it at Exception.",
        "createdAt" : "2018-08-29T20:28:45Z",
        "updatedAt" : "2018-08-29T20:31:35Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "aa5e2715-e1be-48e8-811b-40ae0f9e3270",
        "parentId" : "da4edee2-8f73-4529-bc2d-03804a2fbf9b",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Yeah OOM makes sense but any Error will not be caught as Exception. ",
        "createdAt" : "2018-08-29T20:38:15Z",
        "updatedAt" : "2018-08-29T20:38:15Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "24d52020-efc7-411a-9163-30c9a7d3b394",
        "parentId" : "da4edee2-8f73-4529-bc2d-03804a2fbf9b",
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "But would be caught by Throwable",
        "createdAt" : "2018-08-29T20:41:01Z",
        "updatedAt" : "2018-08-29T20:41:01Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "60010d226a5ad03be6c148e1fbabe37fa8ec7066",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@          return hostCreds;\n        }\n      } catch (Exception e) {\n        String message = provider + \": \" + e.getMessage();\n        logger.debug(\"Unable to load credentials from \" + message);"
  }
]