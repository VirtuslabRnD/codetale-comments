[
  {
    "id" : "e166e2cd-26a1-4eda-9cc4-b4b0e9620036",
    "prId" : 1508,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1508#pullrequestreview-257735346",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "599848b9-7f67-4b45-bf24-4fc9912be057",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "We should document the implied step and timestamp.",
        "createdAt" : "2019-07-03T21:06:23Z",
        "updatedAt" : "2019-07-09T00:53:40Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "e7c54e25-e3b1-454d-9f73-14eef30d3680",
        "parentId" : "599848b9-7f67-4b45-bf24-4fc9912be057",
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Same with other overloaded methods, where we pick some values by default",
        "createdAt" : "2019-07-03T21:06:45Z",
        "updatedAt" : "2019-07-09T00:53:40Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "84968bfda6820ff0ebd09584d07831223ca3c8f7",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +51,55 @@   * Like {@link #logMetric(String, double, int)} with a default step of 0.\n   */\n  public void logMetric(String key, double value) {\n    logMetric(key, value, 0);\n  }"
  },
  {
    "id" : "5cfb7db7-7b74-4e8a-85e0-05151ecfc286",
    "prId" : 1508,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1508#pullrequestreview-257735685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b76043ce-66af-4fc7-8a83-c3d48a20ca9c",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "We should probably generally document all these methods to a similar extent as `fluent.py`. We should expect that Java users may only read the documentation for this file (i.e., that they wouldn't go to `MlflowClient`'s docs.",
        "createdAt" : "2019-07-03T21:07:36Z",
        "updatedAt" : "2019-07-09T00:53:40Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "84968bfda6820ff0ebd09584d07831223ca3c8f7",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +126,130 @@   *                  (not a directory).\n   */\n  public void logArtifact(Path localPath) {\n    client.logArtifact(getId(), localPath.toFile());\n  }"
  },
  {
    "id" : "e6a2128d-9d64-4868-837a-f4b7d30e9fd8",
    "prId" : 1508,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1508#pullrequestreview-259121810",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6452227a-5b8f-4783-a08e-d69af4197959",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Nice example!",
        "createdAt" : "2019-07-08T19:52:36Z",
        "updatedAt" : "2019-07-09T00:53:40Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "84968bfda6820ff0ebd09584d07831223ca3c8f7",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +135,139 @@   *   <pre>\n   *   activeRun.logArtifact(\"/my/localModel\", \"model\")\n   *   mlflowClient.listArtifacts(activeRun.getId(), \"model\") // returns \"model/localModel\"\n   *   </pre>\n   *"
  }
]