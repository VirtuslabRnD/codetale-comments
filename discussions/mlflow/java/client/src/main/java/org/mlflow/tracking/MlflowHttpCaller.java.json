[
  {
    "id" : "fba88789-515d-478e-9d3f-2a6557a4596e",
    "prId" : 4311,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4311#pullrequestreview-651746753",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce1b35b5-57e7-48ab-8766-9a66d5318a57",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Importing this to mark\r\n\r\n```\r\n  MlflowHttpCaller(MlflowHostCredsProvider hostCredsProvider,\r\n                   int maxRateLimitIntervalMs,\r\n                   int rateLimitRetrySleepInitMs,\r\n                   int maxRetryAttempts,\r\n                   HttpClient client) {\r\n```\r\n\r\nas visible for testing purposes (it's only used by `HttpCallerTest`)",
        "createdAt" : "2021-05-04T23:24:41Z",
        "updatedAt" : "2021-05-04T23:25:38Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3dd96b312ba15be9430940e512065781a64c4eea",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +1,5 @@package org.mlflow.tracking;\n\nimport com.google.common.annotations.VisibleForTesting;\n\nimport java.io.IOException;"
  },
  {
    "id" : "95e4f807-b35c-4634-a7d1-a87c2a4c749e",
    "prId" : 2308,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2308#pullrequestreview-350275911",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e5cd237-74d0-4662-a542-2632293a45fd",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "there's a lot of copypasta between get, post and patch (especially the latter two) - we could consolidate, but probably ok as is.",
        "createdAt" : "2020-01-28T22:38:28Z",
        "updatedAt" : "2020-01-29T19:40:32Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "36ac95a8-60dc-40e1-a960-8b10150497d1",
        "parentId" : "7e5cd237-74d0-4662-a542-2632293a45fd",
        "authorId" : "dab5a163-e8a4-4ae3-a16c-0d903dcff35c",
        "body" : "I've created a new private function that encapsulates the common logic here.",
        "createdAt" : "2020-01-29T17:07:50Z",
        "updatedAt" : "2020-01-29T19:40:32Z",
        "lastEditedBy" : "dab5a163-e8a4-4ae3-a16c-0d903dcff35c",
        "tags" : [
        ]
      }
    ],
    "commit" : "29158beca385eab6ac7c5661f86e9d9922a800f7",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +128,132 @@\n  private String send(HttpEntityEnclosingRequestBase request, String path, String json) {\n    fillRequestSettings(request, path);\n    request.setEntity(new StringEntity(json, StandardCharsets.UTF_8));\n    request.setHeader(\"Content-Type\", \"application/json\");"
  },
  {
    "id" : "d7b9d275-90ba-41a9-a5cd-33cd4087c7a4",
    "prId" : 1858,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1858#pullrequestreview-290232291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d69c63da-46ee-4a21-8e58-0b393aa9eb30",
        "parentId" : null,
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "IMHO `do { ... } while()` might work better here, esp if we want to retries for other error conditions like `404` or `503` (perhaps)\r\n\r\n```\r\n   HttpResponse response;\r\n   int timeLeft = maxRateLimitIntervalMillis;\r\n   int sleepFor = rateLimitRetrySleepInitMillis;\r\n   do {\r\n      response = httpClient.execute(request);\r\n      if (response.getStatusLine().getStatusCode() == 429) {\r\n        logger.warn(\"Request returned with status code 429 (Rate limit exceeded). Retrying after \"\r\n                    + sleepFor\r\n                    + \" milliseconds. Will continue to retry 429s for up to \"\r\n                    + timeLeft\r\n                    + \" milliseconds.\");\r\n        try {\r\n          Thread.sleep(sleepFor);\r\n        } catch (InterruptedException e) {\r\n          logger.warn(\"interrupted while waiting for retry.\");\r\n        }\r\n        sleepFor = Math.min(timeLeft, 2 * sleepFor);\r\n        timeLeft -= sleepFor;\r\n      } else {\r\n        break;\r\n      }\r\n    } while (timeLeft > 0);\r\n```",
        "createdAt" : "2019-09-18T21:08:42Z",
        "updatedAt" : "2019-09-18T22:09:24Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      },
      {
        "id" : "62417bca-896c-4500-920e-3bacf9ec54b7",
        "parentId" : "d69c63da-46ee-4a21-8e58-0b393aa9eb30",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Discussed offline, decided to keep this as is.",
        "createdAt" : "2019-09-18T22:16:11Z",
        "updatedAt" : "2019-09-18T22:16:12Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "74bcee02fa5510fa13e6abee463c79267727ab80",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +65,69 @@    int sleepFor = rateLimitRetrySleepInitMillis;\n    HttpResponse response = httpClient.execute(request);\n    while (response.getStatusLine().getStatusCode() == 429 && timeLeft > 0) {\n      logger.warn(\"Request returned with status code 429 (Rate limit exceeded). Retrying after \"\n                  + sleepFor"
  },
  {
    "id" : "0cf6968d-efd9-41fd-b729-fd4f56e1d624",
    "prId" : 1858,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1858#pullrequestreview-290230265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f91fef7-559c-4a1a-bf45-0d6a6581df26",
        "parentId" : null,
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "this total wait time (`timeLeft`) includes sleep time but message does not say so.",
        "createdAt" : "2019-09-18T21:22:14Z",
        "updatedAt" : "2019-09-18T22:09:24Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      },
      {
        "id" : "381c5a27-0b3f-4d98-be1f-06003794f8f3",
        "parentId" : "5f91fef7-559c-4a1a-bf45-0d6a6581df26",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "What message would you suggest? \r\n\r\nThe time_left only includes sleep time. I did not want to complicate the message since I don't think it needs to be super precise and the assumption was that 429s are fast.",
        "createdAt" : "2019-09-18T21:35:05Z",
        "updatedAt" : "2019-09-18T22:09:24Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "f8593bf6-4195-4784-a7ec-b0fe8d130584",
        "parentId" : "5f91fef7-559c-4a1a-bf45-0d6a6581df26",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "After our discussion offline, I have moved the timeLeft update past the warning printout.",
        "createdAt" : "2019-09-18T22:10:25Z",
        "updatedAt" : "2019-09-18T22:10:25Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "74bcee02fa5510fa13e6abee463c79267727ab80",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +69,73 @@                  + sleepFor\n                  + \" milliseconds. Will continue to retry 429s for up to \"\n                  + timeLeft\n                  + \" milliseconds.\");\n      try {"
  },
  {
    "id" : "21abc156-d32d-4d3f-a402-453c6fc6963c",
    "prId" : 430,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/430#pullrequestreview-152560970",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43087c2c-5a60-4aff-be27-db641115cda6",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Removed the Client/Server distinction to reduce clutter of package.",
        "createdAt" : "2018-09-05T15:40:16Z",
        "updatedAt" : "2018-09-05T15:40:16Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "58955459d4af1d60f2eb7117a6600e3a04f9bc7b",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +90,94 @@      String bodyMessage = EntityUtils.toString(response.getEntity(), StandardCharsets.UTF_8);\n      if (statusCode >= 400 && statusCode <= 499) {\n        throw new MlflowHttpException(statusCode, reasonPhrase, bodyMessage);\n      }\n      if (statusCode >= 500 && statusCode <= 599) {"
  }
]