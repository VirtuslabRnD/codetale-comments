[
  {
    "id" : "52dc49de-8246-4220-9c63-c146a19e5d17",
    "prId" : 392,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/392#pullrequestreview-150408393",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8435dc6-58c2-4525-981f-ff3723fb222b",
        "parentId" : null,
        "authorId" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "body" : "Does this mean that we'll log a local path instead of a URI for things that we downloaded of type `path`? That would be a problem -- we want to essentially log the same command the user ran. Do we test for that?",
        "createdAt" : "2018-08-29T05:36:36Z",
        "updatedAt" : "2018-08-29T18:16:03Z",
        "lastEditedBy" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "tags" : [
        ]
      },
      {
        "id" : "335fc491-5a75-462a-9d2e-c3add8622529",
        "parentId" : "f8435dc6-58c2-4525-981f-ff3723fb222b",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "No. This method is reused for parameter resolution during training and logging. Logging does not use local path (since `storage_dir = None`).\r\n\r\nAdded a comment at the top of this method",
        "createdAt" : "2018-08-29T05:39:38Z",
        "updatedAt" : "2018-08-29T18:16:03Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      },
      {
        "id" : "a1063aca-090a-40d9-a69c-a68d3f05b77c",
        "parentId" : "f8435dc6-58c2-4525-981f-ff3723fb222b",
        "authorId" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "body" : "OK, that makes sense. I was confused by it.",
        "createdAt" : "2018-08-29T05:40:33Z",
        "updatedAt" : "2018-08-29T18:16:03Z",
        "lastEditedBy" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "tags" : [
        ]
      },
      {
        "id" : "82c3dee5-43ba-4fbd-bb6c-ab6428090bde",
        "parentId" : "f8435dc6-58c2-4525-981f-ff3723fb222b",
        "authorId" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "body" : "It may still be good to add a test with path if we don't have one already though, in case this breaks later!",
        "createdAt" : "2018-08-29T05:41:15Z",
        "updatedAt" : "2018-08-29T18:16:03Z",
        "lastEditedBy" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "tags" : [
        ]
      },
      {
        "id" : "a575ac66-69e7-437e-9daf-125f612e8b7a",
        "parentId" : "f8435dc6-58c2-4525-981f-ff3723fb222b",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "Will do.",
        "createdAt" : "2018-08-29T05:41:53Z",
        "updatedAt" : "2018-08-29T18:16:03Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "7334dcfa0b227df5fc35b55ad8bf4ae40e0ea528",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +107,111 @@        for key, param_obj in self.parameters.items():\n            value = user_parameters[key] if key in user_parameters else self.parameters[key].default\n            final_params[key] = param_obj.compute_value(value, storage_dir)\n        for key in user_parameters:\n            if key not in final_params:"
  },
  {
    "id" : "afcd36e7-2a7c-443c-98f4-6ba88672c6bc",
    "prId" : 218,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/218#pullrequestreview-144105226",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0de60d81-c788-4b20-8beb-ecb678ee5160",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "What happens if conda_path is specified, but the file does not exist? What kind of error do we get?",
        "createdAt" : "2018-08-07T14:48:42Z",
        "updatedAt" : "2018-08-08T20:59:01Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "daf6219b-a133-4b63-87a5-0e601b1e83c1",
        "parentId" : "0de60d81-c788-4b20-8beb-ecb678ee5160",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Good question, we ultimately get [an exception](https://github.com/mlflow/mlflow/pull/218/files#diff-16104674981d54b31e320402a143eb19R201) when `load_conda_env` is called. We could validate here, although we might still want to validate when loading the environment e.g. in case conda.yaml is deleted (or we could allow for an uglier error message in that case, since it seems like an edge case). `conda_path` itself is also used directly when running `conda env create --file <conda_path>` to create the environment.",
        "createdAt" : "2018-08-07T17:33:11Z",
        "updatedAt" : "2018-08-08T20:59:01Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "e41bed33-a2de-4020-93d7-7277fb0645c4",
        "parentId" : "0de60d81-c788-4b20-8beb-ecb678ee5160",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "I'll add a check verifying that `conda_path` points to an existing file here (during project-loading) for now.",
        "createdAt" : "2018-08-07T17:34:46Z",
        "updatedAt" : "2018-08-08T20:59:01Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "f83e34220c7bd04511f8c4acdfd498f8776e0336",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@        entry_points[name] = EntryPoint(name, parameters, command)\n    conda_path = yaml_obj.get(\"conda_env\")\n    if conda_path:\n        conda_env_path = os.path.join(directory, conda_path)\n        if not os.path.exists(conda_env_path):"
  },
  {
    "id" : "f0be1af9-dfc6-412f-8e61-38321a99a915",
    "prId" : 218,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/218#pullrequestreview-144209062",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a576685d-2329-4c7a-9b51-19f2cae2a28f",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "conda_env_path should be able to be private since we provide `load_conda_env` -- if true, we should name this variable `self._conda_env_path` to help indicate that it should not be accessed outside of the class.",
        "createdAt" : "2018-08-07T14:49:48Z",
        "updatedAt" : "2018-08-08T20:59:01Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "900e1ed4-d19a-4401-808c-c3360afc24ec",
        "parentId" : "a576685d-2329-4c7a-9b51-19f2cae2a28f",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Good question, we actually do use `conda_env_path` when running `conda env create --file <conda_path>` to create the conda environment, so I've kept it public for now",
        "createdAt" : "2018-08-07T22:29:28Z",
        "updatedAt" : "2018-08-08T20:59:01Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "f83e34220c7bd04511f8c4acdfd498f8776e0336",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +44,48 @@    \"\"\"A project specification loaded from an MLproject file in the passed-in directory.\"\"\"\n    def __init__(self, conda_env_path, entry_points):\n        self.conda_env_path = conda_env_path\n        self._entry_points = entry_points\n"
  },
  {
    "id" : "02df69a2-8968-4433-b564-f2d060eaeca7",
    "prId" : 82,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/82#pullrequestreview-132966198",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df26db82-c918-40d4-96ec-181e523e0152",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "This change was to avoid recursive imports?",
        "createdAt" : "2018-06-28T16:18:08Z",
        "updatedAt" : "2018-07-17T21:34:14Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "409b6718-80e7-472d-95ba-bb9880727ea9",
        "parentId" : "df26db82-c918-40d4-96ec-181e523e0152",
        "authorId" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "body" : "Yes, that's why.",
        "createdAt" : "2018-06-28T18:29:24Z",
        "updatedAt" : "2018-07-17T21:34:14Z",
        "lastEditedBy" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "136647f660211e2fdf758181d335ad8eb89a9cd4",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@\n    def get_entry_point(self, entry_point):\n        from mlflow.projects import ExecutionException\n        if entry_point in self.entry_points:\n            return self.entry_points[entry_point]"
  }
]