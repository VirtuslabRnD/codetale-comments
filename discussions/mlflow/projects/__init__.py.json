[
  {
    "id" : "991e7c68-dda0-4228-86aa-e65b66c7a51d",
    "prId" : 3061,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3061#pullrequestreview-446034799",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5fbf2830-0123-431a-af03-07e67c9f7aa7",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "We should do this length check when `value` is not a bool as well. For example, docker's `-u/--user` argument requires a string value; the current implementation would produce `--u value` as opposed to `-u value`, causing an error.",
        "createdAt" : "2020-07-09T23:51:59Z",
        "updatedAt" : "2020-07-10T08:24:38Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "154f528e8167e25f98d7adf06b91c6137d371956",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +539,543 @@            if isinstance(value, bool) and value:\n                if len(name) == 1:\n                    cmd += ['-' + name]\n                else:\n                    cmd += ['--' + name]"
  },
  {
    "id" : "166b21b6-f11e-4ff2-9467-2302bb7ca7f5",
    "prId" : 2833,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2833#pullrequestreview-412777487",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cde6fefd-712f-4669-8c78-d1cee14c8404",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Adding the default `backend` arg explicitly to the public `mlflow.run` API",
        "createdAt" : "2020-05-15T16:03:57Z",
        "updatedAt" : "2020-05-15T16:03:58Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "a514540499a7dfe835ab095cd5f54d6737117fe6",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +194,198 @@\n\ndef run(uri, entry_point=\"main\", version=None, parameters=None,\n        docker_args=None, experiment_name=None, experiment_id=None,\n        backend=\"local\", backend_config=None, use_conda=True,"
  },
  {
    "id" : "108abc8d-2e21-43c3-9182-9dc2d2093238",
    "prId" : 2566,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2566#pullrequestreview-396556836",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4002622-ca45-4503-90d2-07d8e449b437",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Nit: to be safe, set the tag prior to calling `backend.run`? Just in case `backend.run` throws for whatever reason",
        "createdAt" : "2020-03-26T01:01:46Z",
        "updatedAt" : "2020-04-27T17:47:09Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "55d5995c-9429-4312-a3ab-4adeb6215785",
        "parentId" : "c4002622-ca45-4503-90d2-07d8e449b437",
        "authorId" : "12e55ba4-5191-43ae-a814-1e9a4ba0c76b",
        "body" : "Here run_id can be None before the run method. Or backend implementation can create a new run_id. Therefore, to tag the run, the run_id must be the one from the submitted_run object.",
        "createdAt" : "2020-03-26T14:53:33Z",
        "updatedAt" : "2020-04-27T17:47:09Z",
        "lastEditedBy" : "12e55ba4-5191-43ae-a814-1e9a4ba0c76b",
        "tags" : [
        ]
      },
      {
        "id" : "343b5729-4cab-400d-ae90-3fcf145b3244",
        "parentId" : "c4002622-ca45-4503-90d2-07d8e449b437",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "@smurching @jdlesage I was under the impression from prior conversation (https://github.com/mlflow/mlflow/pull/2566/files#r394638164) that we agreed to require the client to create the MLflow Run prior to beginning project backend execution and, therefore, that `run_id` must be defined prior to `backend.run()`. However, this dialogue seems to imply that the backend may be responsible for creating the run.\r\n\r\n@smurching @jdlesage Please let me know if I am misinterpreting the outcome of https://github.com/mlflow/mlflow/pull/2566/files#r394638164. For consistency with preexisting behavior, I would prefer that the client be responsible for creating the MLflow run before beginning backend execution.",
        "createdAt" : "2020-03-30T07:27:13Z",
        "updatedAt" : "2020-04-27T17:47:09Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "ed6e5865-553b-464f-a702-d501f5c6bb91",
        "parentId" : "c4002622-ca45-4503-90d2-07d8e449b437",
        "authorId" : "12e55ba4-5191-43ae-a814-1e9a4ba0c76b",
        "body" : "Hi @dbczumar , Sorry, I misunderstood your first remark. \r\nThe problem by creating the run in the client is the validation databrick test (this one: https://github.com/mlflow/mlflow/blob/master/tests/projects/test_databricks.py#L179) cannot be implemented.\r\nIn my first attempt, I created the runs in the client. But there are additionnal checks done by the databricks backend. If the backend_config is wrong, the run is not created to not \"spam\" the tracking server. To implement this behavior, it is needed that the databricks backend controls the run creation.\r\nI don't have strong opinion about this. Could you confirm the client creates the run before to call the backend, please ? In this case, databricks projects will generate FAILED runs in the tracking server if the backend config is invalid. ",
        "createdAt" : "2020-03-31T07:39:40Z",
        "updatedAt" : "2020-04-27T17:47:09Z",
        "lastEditedBy" : "12e55ba4-5191-43ae-a814-1e9a4ba0c76b",
        "tags" : [
        ]
      },
      {
        "id" : "97021208-b25a-4ba3-a13d-b250ed8460c1",
        "parentId" : "c4002622-ca45-4503-90d2-07d8e449b437",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Ah, interesting...IMO It's not great to generate failed runs simply due to invalid project config.\r\n\r\nGiven this I'm wondering if we should reconsider forcing the client to create the run, the alternative would be to add a `validate_backend_config` method to the AbstractBackend API. Will sync with @dbczumar tomorrow on this & get back to you!\r\n\r\nEdit: the exact API of validation is messy - for example, the Databricks backend validates not only the backend config, but also the loaded project's execution environment prior to creating a run, so it may be simplest to just let the backend perform whatever validations are necessary prior to creating the run.\r\n\r\n\r\n",
        "createdAt" : "2020-04-01T05:54:13Z",
        "updatedAt" : "2020-04-27T17:47:09Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "67049b21-046a-45dc-af95-ec515c1510c8",
        "parentId" : "c4002622-ca45-4503-90d2-07d8e449b437",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Sync'd offline with @dbczumar on this, it seems reasonable to allow the backend to create runs. Could we update the backend interface to match that in flow 2 of [this gist](https://gist.github.com/smurching/6fe7368c6075ee3acf0220c672185b5e#file-project-backend-py-L57-L58)? Let me know if you have any questions, thanks!",
        "createdAt" : "2020-04-09T06:09:30Z",
        "updatedAt" : "2020-04-27T17:47:09Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "ee3e0adf-c6de-49d2-8b52-c404799401e1",
        "parentId" : "c4002622-ca45-4503-90d2-07d8e449b437",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "@smurching @jdlesage We should also include `tracking_uri` as part of this interface. (didn't see it in the gist).",
        "createdAt" : "2020-04-09T06:48:34Z",
        "updatedAt" : "2020-04-27T17:47:09Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "9186d168-0c28-47cb-8753-423638e40a29",
        "parentId" : "c4002622-ca45-4503-90d2-07d8e449b437",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Sorry, I wrote the gist in a confusing way - the  top-level `def run` method definition in the gist is actually meant to mimic `mlflow.projects.run` (updated the gist to be clearer about that), hence why it doesn't accept a `tracking_uri` argument. To confirm:\r\n\r\n* We should not add the `tracking_uri` argument to the user-facing `mlflow.projects.run` API (at least not in this PR)\r\n* The `AbstractBackend.run` API called by `mlflow.projects.run` should accept a `tracking_uri` argument, as @dbczumar said.",
        "createdAt" : "2020-04-10T22:09:07Z",
        "updatedAt" : "2020-04-27T17:47:09Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "d4ad4cf4-cc33-41e7-82d2-c8f139a87a92",
        "parentId" : "c4002622-ca45-4503-90d2-07d8e449b437",
        "authorId" : "12e55ba4-5191-43ae-a814-1e9a4ba0c76b",
        "body" : "I did your last comment.\r\n1/ AbstractBackend.run accepts a tracking_uri\r\n2/ `tracking_uri` is not in the signature of `mlflow.projects.run`",
        "createdAt" : "2020-04-20T15:21:17Z",
        "updatedAt" : "2020-04-27T17:47:09Z",
        "lastEditedBy" : "12e55ba4-5191-43ae-a814-1e9a4ba0c76b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d94111cf8b146b90cc3edcb580cc2e68ca1140a",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +100,104 @@            submitted_run = backend.run(uri, entry_point, parameters,\n                                        version, backend_config, experiment_id, tracking_store_uri)\n            tracking.MlflowClient().set_tag(submitted_run.run_id, MLFLOW_PROJECT_BACKEND,\n                                            backend_name)\n            return submitted_run"
  },
  {
    "id" : "87a97185-9eaa-4b66-9345-8e76dd5122f2",
    "prId" : 2149,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2149#pullrequestreview-326717116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77b93cad-ac1e-4c90-b27c-702ed84b721e",
        "parentId" : null,
        "authorId" : "0c85757d-6ed3-48d9-b4d3-c7af8b97da6f",
        "body" : "@dbczumar @ReDucTor, since the configuration is valid even without 'kube-context', I made it a debug log instead",
        "createdAt" : "2019-12-04T09:49:18Z",
        "updatedAt" : "2019-12-16T00:59:15Z",
        "lastEditedBy" : "0c85757d-6ed3-48d9-b4d3-c7af8b97da6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "05d3e3e0c4475e0f28744672a62392d8c512a0a4",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +726,730 @@            kube_job_template))\n    if 'kube-context' not in backend_config.keys():\n        _logger.debug(\"Could not find kube-context in backend_config.\"\n                      \" Using current context or in-cluster config.\")\n    if 'repository-uri' not in backend_config.keys():"
  },
  {
    "id" : "b66e0673-dada-4907-988b-7986572a9cc0",
    "prId" : 1994,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1994#pullrequestreview-314478815",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88db0f37-e717-4525-97e0-28c26abb5785",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "```suggestion\r\n                        \"This project expects the %s environment variables to \"\r\n```",
        "createdAt" : "2019-11-08T21:49:28Z",
        "updatedAt" : "2019-11-08T21:49:29Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "b724df901cb2c3a63ab85af76c5dfba67600dda9",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +664,668 @@                if system_var is None:\n                    raise MlflowException(\n                        \"This project expects the %s environment variable to \"\n                        \"be set on the machine running the project, but %s was \"\n                        \"not set. Please ensure all expected environment variables \""
  },
  {
    "id" : "a675e472-c68a-49eb-a464-f4ded389a186",
    "prId" : 1715,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1715#pullrequestreview-273910579",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79b72337-3936-42fc-b800-407232e52b27",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "you want to return the experiment ID right?",
        "createdAt" : "2019-08-12T18:37:06Z",
        "updatedAt" : "2019-08-13T22:37:09Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "c84523dc-f6b3-41d2-9911-4b4982d97e34",
        "parentId" : "79b72337-3936-42fc-b800-407232e52b27",
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "It'd be worth adding some simple unit tests for this function so we can catch things like this. Maybe in https://github.com/mlflow/mlflow/blob/master/tests/projects/test_projects_cli.py. `client.create_experiment` can be mocked.",
        "createdAt" : "2019-08-12T18:41:17Z",
        "updatedAt" : "2019-08-13T22:37:09Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "5d47c15f-3c69-4d69-8efb-7957843b84e5",
        "parentId" : "79b72337-3936-42fc-b800-407232e52b27",
        "authorId" : "e4570df3-89bf-41f2-adc0-cfdb1867ce09",
        "body" : "Will do! I think `client.create_experiment` returns the created ID, but we'll find out for sure when I do the tests :) ",
        "createdAt" : "2019-08-12T18:58:37Z",
        "updatedAt" : "2019-08-13T22:37:09Z",
        "lastEditedBy" : "e4570df3-89bf-41f2-adc0-cfdb1867ce09",
        "tags" : [
        ]
      },
      {
        "id" : "f812d1ec-abfa-40d1-af11-5a83d00c0386",
        "parentId" : "79b72337-3936-42fc-b800-407232e52b27",
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "Ah my bad - you're right it returns the ID. Probably still a good idea to add tests to ensure the different cases work though. Thank you!",
        "createdAt" : "2019-08-12T19:46:53Z",
        "updatedAt" : "2019-08-13T22:37:09Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2acfed4bfd4bdd61460efa81eeaa38f4b43399bb",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +81,85 @@        else:\n            print(\"INFO: '{}' does not exist. Creating a new experiment\".format(experiment_name))\n            return client.create_experiment(experiment_name)\n\n    return _get_experiment_id()"
  },
  {
    "id" : "ba50be3e-b012-4e2b-b56e-59fd1cad0216",
    "prId" : 1715,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1715#pullrequestreview-274445699",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "095417c0-e767-40c5-92bf-700b701f4fc4",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "thanks! yeah experiment_id is meant to be string now. (this particular description: https://github.com/mlflow/mlflow/blob/80099417284f9c7377eb8af58b2845291abdea62/mlflow/tracking/fluent.py#L287 is wrong so it is confusing)",
        "createdAt" : "2019-08-13T17:40:06Z",
        "updatedAt" : "2019-08-13T22:37:09Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2acfed4bfd4bdd61460efa81eeaa38f4b43399bb",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +65,69 @@    :param experiment_name: Name of experiment under which to launch the run.\n    :param experiment_id: ID of experiment under which to launch the run.\n    :return: str\n    \"\"\"\n"
  },
  {
    "id" : "3b737b6d-95d0-4886-a5e0-480167ec6caf",
    "prId" : 1544,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1544#pullrequestreview-270332358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1442aa49-85e6-4357-b48c-7b16529506dc",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Would be nice to pull \"/mlflow/projects/code/\" into a constant so we don't have this string duplicated across `mlflow/projects/__init__.py`, if you want to make a follow-up PR to do that :)",
        "createdAt" : "2019-08-02T18:30:32Z",
        "updatedAt" : "2019-08-02T18:30:33Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "3830487e59c6348b143606dbe06d8dcc9880141f",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +704,708 @@        container_path = artifact_uri_local_path\n        if not os.path.isabs(container_path):\n            container_path = os.path.join(\"/mlflow/projects/code/\", artifact_uri_local_path)\n            container_path = os.path.normpath(container_path)\n        artifact_uri_local_abspath = os.path.abspath(artifact_uri_local_path)"
  },
  {
    "id" : "18624c4c-cc95-4c7a-b95b-3e202acc2fa9",
    "prId" : 1308,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1308#pullrequestreview-240867685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99106548-41f5-4df1-8d63-e571405f0277",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "What required this change? Should we document env_id? Should it be part of the conda env name instead?",
        "createdAt" : "2019-05-22T20:25:30Z",
        "updatedAt" : "2019-05-23T01:04:51Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "d71e0ac2-03a2-4d7b-b96c-1c3814211d9f",
        "parentId" : "99106548-41f5-4df1-8d63-e571405f0277",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "1. What required this change: To distinguish model environments with installed mlflow vs the ones without. If you run mlflow serve/predict ... --install-mlflow - mlflow ill be installed intot he environment. if you than run the same without --mlflow-install the mlflow ill still be there because the environment is cached. \r\n\r\n2. I guess we should, although it is an internal thing. I'll add a comment.\r\n\r\n3. Could be, but I think it's better for it to be a part of the hash so that the mlflow environment names look uniform - makes it easier to grep and such. ",
        "createdAt" : "2019-05-22T20:40:56Z",
        "updatedAt" : "2019-05-23T01:04:51Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bd96cf70951d832979b918c7fd59da4daf2d9b2",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +408,412 @@    conda_env_contents = open(conda_env_path).read() if conda_env_path else \"\"\n    if env_id:\n        conda_env_contents += env_id\n    return \"mlflow-%s\" % hashlib.sha1(conda_env_contents.encode(\"utf-8\")).hexdigest()\n"
  },
  {
    "id" : "85a98202-a7b9-44b5-8406-c101ac1c4ce4",
    "prId" : 1181,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1181#pullrequestreview-241844946",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70a77663-1230-4086-baed-30e2f81afc4d",
        "parentId" : null,
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "What's the behavior if the `synchronous` flag is equal to false. If it's not actually async we should throw an exception here.",
        "createdAt" : "2019-05-21T21:25:43Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      },
      {
        "id" : "e76548e7-f98d-4441-bf27-e92bce2cec3d",
        "parentId" : "70a77663-1230-4086-baed-30e2f81afc4d",
        "authorId" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "body" : "It's the same behavior as `mode == databricks`, it ignores the flag and runs synchronous. AFAIK this flag is only used in local mode, doesn't it?",
        "createdAt" : "2019-05-22T14:27:09Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "tags" : [
        ]
      },
      {
        "id" : "1063c2b0-6836-4844-9ed8-e7bed89e3c20",
        "parentId" : "70a77663-1230-4086-baed-30e2f81afc4d",
        "authorId" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "body" : "The point about throw an exception is that today the sychronous parameter gets it's value from cli.py in the block below:\r\n```\r\n    try:\r\n        projects.run(\r\n            uri,\r\n            entry_point,\r\n            version,\r\n            experiment_name=experiment_name,\r\n            experiment_id=experiment_id,\r\n            parameters=param_dict,\r\n            backend=backend,\r\n            backend_config=backend_config,\r\n            use_conda=(not no_conda),\r\n            storage_dir=storage_dir,\r\n            synchronous=backend == \"local\" or backend is None,\r\n            run_id=run_id\r\n        )\r\n    except projects.ExecutionException as e:\r\n        _logger.error(\"=== %s ===\", e)\r\n        sys.exit(1)\r\n```\r\n\r\nSo this will be always false for `backends` different than `local`. I think that we should let it as it is now. What do you think?",
        "createdAt" : "2019-05-22T16:14:36Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "tags" : [
        ]
      },
      {
        "id" : "629cdfea-1eb5-487d-8452-2df9fe403d2f",
        "parentId" : "70a77663-1230-4086-baed-30e2f81afc4d",
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "I see. I overlooked the fact that it is not used if `mode=databricks`. Makes sense to leave it for now then.\r\n\r\nBTW, did you see this comment yet? https://github.com/mlflow/mlflow/pull/1181#discussion_r286227289",
        "createdAt" : "2019-05-22T20:06:32Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      },
      {
        "id" : "0585e9f6-03e7-4cb2-8571-fc1f59ab9468",
        "parentId" : "70a77663-1230-4086-baed-30e2f81afc4d",
        "authorId" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "body" : "Hey @andrewmchen ! As we spoke earlier, I changed the implementation to use the `docker_env` again.",
        "createdAt" : "2019-05-24T14:18:16Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "tags" : [
        ]
      },
      {
        "id" : "eae5fb57-8492-4b1d-a272-74cdac7eeab4",
        "parentId" : "70a77663-1230-4086-baed-30e2f81afc4d",
        "authorId" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "body" : "Just need to update the docs",
        "createdAt" : "2019-05-24T16:33:02Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "tags" : [
        ]
      },
      {
        "id" : "0dae057d-2a88-4af1-9a76-ac29a7b32e5a",
        "parentId" : "70a77663-1230-4086-baed-30e2f81afc4d",
        "authorId" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "body" : "done @andrewmchen ! I think it's ready now :)",
        "createdAt" : "2019-05-24T16:49:44Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d07a0808c488ff4c2248c4dc2c4a25117e2c2b5",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +155,159 @@            experiment_id=experiment_id,\n            use_conda=use_conda, storage_dir=storage_dir, run_id=active_run.info.run_id)\n    elif backend == \"kubernetes\":\n        from mlflow.projects import kubernetes as kb\n        tracking.MlflowClient().set_tag(active_run.info.run_id, MLFLOW_PROJECT_ENV, \"docker\")"
  },
  {
    "id" : "8e4515e1-3a03-46fa-960c-1584b5bf60c3",
    "prId" : 1181,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1181#pullrequestreview-243822128",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "353f8b79-9424-4788-bed4-e6afeeebb139",
        "parentId" : null,
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "Will this line ever run? Seems like if `backend_config` is none, the previous line will throw.",
        "createdAt" : "2019-05-29T22:49:17Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      },
      {
        "id" : "2de0b46c-b80a-4595-806f-db99c3a3d14a",
        "parentId" : "353f8b79-9424-4788-bed4-e6afeeebb139",
        "authorId" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "body" : "you're right, I've changed it.",
        "createdAt" : "2019-05-30T14:21:16Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d07a0808c488ff4c2248c4dc2c4a25117e2c2b5",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +720,724 @@    Creates build context tarfile containing Dockerfile and project code, returning path to tarfile\n    \"\"\"\n    if not backend_config:\n        raise ExecutionException(\"Backend_config file not found.\")\n    kube_config = backend_config.copy()"
  },
  {
    "id" : "14aceca6-0d85-4181-9acb-ea39e602d5e3",
    "prId" : 1181,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1181#pullrequestreview-244414520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "baf10711-84e7-4389-ab27-792d36460c4f",
        "parentId" : null,
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "I guess this is a breaking change for docker projects? Can we put back the mlflow prefix for docker projects only?",
        "createdAt" : "2019-05-30T22:20:16Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      },
      {
        "id" : "d38253b3-585e-4905-90e5-3bba3d3c786b",
        "parentId" : "baf10711-84e7-4389-ab27-792d36460c4f",
        "authorId" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "body" : "It doesn't break anything, I've tested here and everything is running fine. Actually, when I first developed the docker feature it didn't need that too.",
        "createdAt" : "2019-05-31T16:57:34Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d07a0808c488ff4c2248c4dc2c4a25117e2c2b5",
    "line" : 202,
    "diffHunk" : "@@ -1,1 +800,804 @@    git_commit = _get_git_commit(work_dir)\n    version_string = \":\" + git_commit[:7] if git_commit else \"\"\n    return imagename + version_string\n\n"
  },
  {
    "id" : "db38b744-2f39-43e3-a6e9-02f77e6e6ba0",
    "prId" : 991,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/991#pullrequestreview-214072488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff9dda93-752a-4a83-a8df-2a8caf10bf26",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "We may want to avoid having default arguments here -- they are always specified in practice, so it's just room for error.",
        "createdAt" : "2019-03-13T15:26:37Z",
        "updatedAt" : "2019-03-14T07:35:11Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "63f377e7-f224-4fcb-b1c8-61ef03ff4ca5",
        "parentId" : "ff9dda93-752a-4a83-a8df-2a8caf10bf26",
        "authorId" : "c69b97eb-cdb8-4df7-9b5b-379bbdf53e80",
        "body" : "this is either name or id - updated doc and moved logic here ",
        "createdAt" : "2019-03-13T16:35:47Z",
        "updatedAt" : "2019-03-14T07:35:11Z",
        "lastEditedBy" : "c69b97eb-cdb8-4df7-9b5b-379bbdf53e80",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb4623381afca5c915c66911ae3eaa78a32fa0ca",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +47,51 @@\n\ndef _resolve_experiment_id(experiment_name=None, experiment_id=None):\n    \"\"\"\n    Resolve experiment."
  },
  {
    "id" : "f9ea1d09-fde0-4d8a-b616-0c9c8ec1e1af",
    "prId" : 991,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/991#pullrequestreview-214027207",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8a8f7b6-aed4-4533-90ae-de344f9ded8a",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Could you add a short doc-string comment to this method indicating its contract?",
        "createdAt" : "2019-03-13T15:26:53Z",
        "updatedAt" : "2019-03-14T07:35:11Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb4623381afca5c915c66911ae3eaa78a32fa0ca",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +61,65 @@        raise MlflowException(\"Specify only one of 'experiment_name' or 'experiment_id'.\")\n\n    exp_id = experiment_id\n    if experiment_name:\n        client = tracking.MlflowClient()"
  },
  {
    "id" : "fc14069c-5dd2-46e6-817b-e466e53470af",
    "prId" : 759,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/759#pullrequestreview-186360299",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc246654-1931-4d80-a2d3-e75f4442b2c0",
        "parentId" : null,
        "authorId" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "body" : "Ideally we should use something like mlflow.data.download_uri() for this so that it can also support files in S3 and other cloud storage systems. We don't have a great API for it yet, so maybe we can commit this with just HTTP for now, but we should add that eventually and update this code to use it. You can leave a TODO here.",
        "createdAt" : "2018-12-19T00:30:45Z",
        "updatedAt" : "2018-12-19T01:54:08Z",
        "lastEditedBy" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "tags" : [
        ]
      },
      {
        "id" : "b6032e38-92cc-4dc7-8e29-59180ef7b649",
        "parentId" : "cc246654-1931-4d80-a2d3-e75f4442b2c0",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Added a `TODO` that references a GitHub issue I created to track the progress of this change: https://github.com/mlflow/mlflow/issues/763",
        "createdAt" : "2018-12-19T01:54:24Z",
        "updatedAt" : "2018-12-19T01:54:25Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "85ff24011a2a903bda9389a61c75c29bdd1d79fb",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +315,319 @@    # the artifact repository (Azure, FTP, etc). See the following issue:\n    # https://github.com/mlflow/mlflow/issues/763.\n    response = requests.get(uri)\n    try:\n        response.raise_for_status()"
  },
  {
    "id" : "f8d57286-03a2-429d-9e80-ae95ce6359d2",
    "prId" : 555,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/555#pullrequestreview-181029521",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "147d558f-aa02-4d14-8131-a863df64954d",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Should we also set the tracking URI / experiment ID / run ID as environment variables via the `-e` option ([see docker docs](https://docs.docker.com/engine/reference/run/#env-environment-variables)) here?",
        "createdAt" : "2018-12-02T19:06:00Z",
        "updatedAt" : "2019-01-17T19:03:12Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "bc8356bf-e464-47ec-96c4-d67559ca5b53",
        "parentId" : "147d558f-aa02-4d14-8131-a863df64954d",
        "authorId" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "body" : "Done.\r\n\r\nActually I was doing that way, but after introduce the build process I've changed it to put inside image. Now, I think it would be better so we can reuse the image with different tracking servers and parameters (and so different runs).",
        "createdAt" : "2018-12-03T15:55:23Z",
        "updatedAt" : "2019-01-17T19:03:12Z",
        "lastEditedBy" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "tags" : [
        ]
      },
      {
        "id" : "0592fb04-55ad-4e52-836e-bf5e4bf7523c",
        "parentId" : "147d558f-aa02-4d14-8131-a863df64954d",
        "authorId" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "body" : "Done, but Github didn't updated as outdated too.",
        "createdAt" : "2018-12-03T23:23:47Z",
        "updatedAt" : "2019-01-17T19:03:12Z",
        "lastEditedBy" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "tags" : [
        ]
      }
    ],
    "commit" : "57f10cdec9da4ee159cc6e98c63a11f9a1daa0d3",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +588,592 @@def _get_docker_command(image, active_run):\n    docker_path = \"docker\"\n    cmd = [docker_path, \"run\", \"--rm\"]\n    env_vars = _get_run_env_vars(run_id=active_run.info.run_uuid,\n                                 experiment_id=active_run.info.experiment_id)"
  },
  {
    "id" : "2de91163-8ab6-4364-b2a2-80aee7218bf4",
    "prId" : 522,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/522#pullrequestreview-160011048",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47f14e30-ae93-416e-a078-ce05658fbf87",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "How do you feel about moving the project run creation logic into a separate method: `_create_project_run()`? We can then move the new `mode` check into the condition on line 67 and call `_create_project_run()` in both the if/elif branches.",
        "createdAt" : "2018-09-28T20:21:23Z",
        "updatedAt" : "2018-09-30T19:02:17Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "36938655d0090b70d5e1fdcd8703e78cf423b530",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +43,47 @@        mlflow.projects.databricks.before_run_validations(mlflow.get_tracking_uri(), cluster_spec)\n\n    exp_id = experiment_id or _get_experiment_id()\n    parameters = parameters or {}\n    work_dir = _fetch_project(uri=uri, force_tempdir=False, version=version,"
  },
  {
    "id" : "0106edfc-675c-4fc5-b401-2e2e3feae5b2",
    "prId" : 321,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/321#pullrequestreview-147376966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "228c4e77-fde1-4466-a56d-c3424d60eac0",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "The project-fetching behavior is slightly different for databricks runs  - we (in `databricks._fetch_and_clean_project`) always fetch into a temp directory & then remove the `mlruns` directory (if one exists) to prevent cache-busting when uploading the tarred project to DBFS. Maybe we can continue to allow the individual `mode`s to handle project-fetching? Other than that, the change of calling `projects._create_run` in both modes looks good.",
        "createdAt" : "2018-08-17T20:42:11Z",
        "updatedAt" : "2018-08-17T23:27:21Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "f4adf3fd-0fa9-43e3-9325-8f0b7e050dea",
        "parentId" : "228c4e77-fde1-4466-a56d-c3424d60eac0",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Oh yeah, thats'a a good catch. But why don't we do the same for local git projects?",
        "createdAt" : "2018-08-17T20:50:40Z",
        "updatedAt" : "2018-08-17T23:27:21Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5e2c57e1937339994a5e1141d99fcf2389202d3",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +38,42 @@    exp_id = experiment_id or _get_experiment_id()\n    parameters = parameters or {}\n    work_dir = _fetch_project(uri=uri, force_tempdir=False, version=version,\n                              git_username=git_username, git_password=git_password)\n    project = _project_spec.load_project(work_dir)"
  },
  {
    "id" : "8c2caf9e-f719-4b16-9c62-31b49eac9735",
    "prId" : 215,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/215#pullrequestreview-142410702",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b6b8401-5ba5-4f08-bec9-29f9eb3d9188",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Add a comment for `force_tempdir`? It's specific to this method.",
        "createdAt" : "2018-08-01T14:40:53Z",
        "updatedAt" : "2018-08-01T17:17:48Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "5047bb37f73063b3fed719807811310e1808a8d4",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +188,192 @@def _fetch_project(uri, force_tempdir, version=None, git_username=None, git_password=None):\n    \"\"\"\n    Fetch a project into a local directory, returning the path to the local project directory.\n    :param force_tempdir: If True, will fetch the project into a temporary directory. Otherwise,\n                          will fetch Git projects into a temporary directory but simply return the"
  },
  {
    "id" : "d8ec33b9-86c7-4800-91eb-3175a377a1d6",
    "prId" : 82,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/82#pullrequestreview-134435351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2328bb41-6b03-45ea-9d29-1820ff2538cb",
        "parentId" : null,
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "Awesome documentation!",
        "createdAt" : "2018-07-04T16:48:43Z",
        "updatedAt" : "2018-07-17T21:34:14Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "136647f660211e2fdf758181d335ad8eb89a9cd4",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +58,62 @@        use_temp_cwd=False, storage_dir=None, block=True):\n    \"\"\"\n    Run an MLflow project from the given URI.\n\n    Supports downloading projects from Git URIs with a specified version, or copying them from"
  },
  {
    "id" : "6a0f354e-ec8e-49ce-858c-83f373bee308",
    "prId" : 82,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/82#pullrequestreview-137537270",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e5459ac-7534-4e1a-af11-3f62d149ed17",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "We should mention that this throws an ExecutionException if it fails in blocking mode.",
        "createdAt" : "2018-07-16T18:17:09Z",
        "updatedAt" : "2018-07-17T21:34:14Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "136647f660211e2fdf758181d335ad8eb89a9cd4",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@    Run an MLflow project from the given URI.\n\n    Supports downloading projects from Git URIs with a specified version, or copying them from\n    the file system. For Git-based projects, a commit can be specified as the `version`.\n"
  }
]