[
  {
    "id" : "6ed91b44-34be-43e6-b826-528759b67c03",
    "prId" : 336,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/336#pullrequestreview-148099938",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45121665-be04-4367-8fb0-4f219bc340c8",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "It unfortunately seems this doesn't quite work as expected in Python 2.7, in that subclasses aren't required to define `run_id` (see this [SO post](https://stackoverflow.com/questions/5960337/how-to-create-abstract-properties-in-python-abstract-classes)). I also can't seem to find anything in `six` that'd make this just work for Python 2 & 3.\r\n\r\nThe current implementation is fine with me, since we'll achieve the desired behavior in Python 3 which is strictly better than the current situation (maybe we can just comment that this doesn't actually make `run_id` abstract in Python 2)",
        "createdAt" : "2018-08-21T07:11:51Z",
        "updatedAt" : "2018-08-21T14:54:50Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "fd836212-acfe-447b-9e74-f8f0bb877cec",
        "parentId" : "45121665-be04-4367-8fb0-4f219bc340c8",
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "That's fine if it's not actually abstract in Python 2, since we cross-compile.",
        "createdAt" : "2018-08-21T14:52:17Z",
        "updatedAt" : "2018-08-21T14:54:50Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "2baa1714cb5217fa05132809ddea68743207b2b8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +47,51 @@        pass\n\n    @property\n    @abstractmethod\n    def run_id(self):"
  }
]