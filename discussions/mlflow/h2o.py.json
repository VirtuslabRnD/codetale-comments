[
  {
    "id" : "60880945-97ab-4fba-91d2-f6627d87b6e1",
    "prId" : 1190,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1190#pullrequestreview-234686011",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b118bee-7bf3-486a-ad35-3391feda5f44",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "do you mind adding the return type here? it's missing in documentation and is sad :-(",
        "createdAt" : "2019-05-07T02:16:15Z",
        "updatedAt" : "2019-05-07T22:39:12Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "57ef0b1f-d4e9-41df-a9b5-9a470d3c88f2",
        "parentId" : "0b118bee-7bf3-486a-ad35-3391feda5f44",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Added return type docs:\r\n```\r\n    :return: An `H2OEstimator model object \r\n             <http://docs.h2o.ai/h2o/latest-stable/h2o-py/docs/intro.html#models>`_.\r\n```",
        "createdAt" : "2019-05-07T18:25:29Z",
        "updatedAt" : "2019-05-07T22:39:12Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "813d98c52ff201e189d2a20c6e716057c0c843be",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +170,174 @@                      For more information about supported URI schemes, see the\n                      `Artifacts Documentation <https://www.mlflow.org/docs/latest/tracking.html#\n                      supported-artifact-stores>`_.\n\n    :return: An `H2OEstimator model object"
  },
  {
    "id" : "fb35a820-98c5-40cf-931b-43fed3e4eab7",
    "prId" : 748,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/748#pullrequestreview-182916504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e58d4662-0f30-441c-ab33-ce168e7e87f2",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Could be nice to describe what a valid dictionary representation looks like here (at least it wasn't super obvious to me how to construct such a representation :P), e.g.\r\n\r\n```\r\nEither a dictionary representation of a Conda environment (see `mlflow.h2o.DEFAULT_CONDA_ENV` for an example) or the path to...\r\n```",
        "createdAt" : "2018-12-07T21:54:54Z",
        "updatedAt" : "2018-12-09T04:20:12Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "c04aee5e-ca00-4cf3-b215-824257b157cb",
        "parentId" : "e58d4662-0f30-441c-ab33-ce168e7e87f2",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Added complete examples in the documentation for each `conda_env` parameter.",
        "createdAt" : "2018-12-08T00:07:18Z",
        "updatedAt" : "2018-12-09T04:20:12Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f266a37c90d4560624abc71089982f5fd53a01a9",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +101,105 @@    :param h2o_model: H2O model to be saved.\n    :param artifact_path: Run-relative artifact path.\n    :param conda_env: Either a dictionary representation of a Conda environment or the path to a\n                      Conda environment yaml file. If provided, this decribes the environment\n                      this model should be run in. At minimum, it should specify the dependencies"
  },
  {
    "id" : "8a7b79b1-cde5-49e8-8cf0-b80ad36d2a72",
    "prId" : 708,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/708#pullrequestreview-174119789",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42340b95-261d-41af-bd98-1de4ec428b32",
        "parentId" : null,
        "authorId" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "body" : "Is there any way we could make this argument accept either a file or a Python object eventually? As @smurching found with the Databricks cluster spec object, sometimes it's annoying to write a file and people would prefer to pass in a string with the content. We could add it later but I was thinking we might want to just add it up front somehow.",
        "createdAt" : "2018-11-11T23:51:57Z",
        "updatedAt" : "2018-11-12T22:24:50Z",
        "lastEditedBy" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "tags" : [
        ]
      },
      {
        "id" : "60ad0202-6037-44e2-93ce-b30c3b4a9277",
        "parentId" : "42340b95-261d-41af-bd98-1de4ec428b32",
        "authorId" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "body" : "Some options are:\r\n- You are allowed to pass in a dictionary object that we then turn to YAML. If the argument is a dict, we do that, otherwise we treat it as as string and read that file.\r\n- You always have to pass in a dictionary (if you had a conda.yaml, read it into a dictionary first).",
        "createdAt" : "2018-11-11T23:53:56Z",
        "updatedAt" : "2018-11-12T22:24:50Z",
        "lastEditedBy" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "tags" : [
        ]
      },
      {
        "id" : "d44706a6-0ea1-4919-bfe5-0a61deb8f343",
        "parentId" : "42340b95-261d-41af-bd98-1de4ec428b32",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "@mateiz yeah it's a good point, I think the main change needed would be to change the logic [here](https://github.com/mlflow/mlflow/pull/708/files#diff-3a00bc8af91e17c6ec67ad5944cc5f1fR69) to handle values that aren't paths to files. We'd need to make that change across each model type + also add a test, so my inclination would be to get this PR in and add support for passing dicts to `conda_env` in a follow-up PR.",
        "createdAt" : "2018-11-12T22:15:06Z",
        "updatedAt" : "2018-11-12T22:24:50Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "94e30c1a-4176-463c-a002-bcb1e905b4eb",
        "parentId" : "42340b95-261d-41af-bd98-1de4ec428b32",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "@mateiz @smurching I agree that accepting a string or dictionary environment definition is valuable. I don't think it requires changes in `load_model` regarding path management: we can always write the configuration to a file during the `save_model` routine. That said, I'd like to get the current set of default env PRs merged first and follow up with an additional PR for this feature. Thanks!",
        "createdAt" : "2018-11-12T22:23:42Z",
        "updatedAt" : "2018-11-12T22:24:50Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3dba5d570eb2700ff50b234ab06895716104a113",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +43,47 @@                      this model should be run in. At minimum, it should specify the dependencies\n                      contained in ``mlflow.h2o.DEFAULT_CONDA_ENV``. If `None`, the default\n                      ``mlflow.h2o.DEFAULT_CONDA_ENV`` environment will be added to the model.\n    :param mlflow_model: :py:mod:`mlflow.models.Model` this flavor is being added to.\n    \"\"\""
  }
]