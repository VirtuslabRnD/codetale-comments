[
  {
    "id" : "f4fd0b41-9e5e-465d-8da7-741f43a17061",
    "prId" : 3881,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3881#pullrequestreview-678516793",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f50d127c-97f5-43be-b72e-3b49b5afc6d8",
        "parentId" : null,
        "authorId" : "ae7dd827-9f9e-4fb6-b1ba-d051793e929e",
        "body" : "SEARCH_MAX_RESULTS_THRESHOLD seems unused in this file.",
        "createdAt" : "2021-06-08T04:58:47Z",
        "updatedAt" : "2021-06-08T05:20:44Z",
        "lastEditedBy" : "ae7dd827-9f9e-4fb6-b1ba-d051793e929e",
        "tags" : [
        ]
      },
      {
        "id" : "47ec107d-f50b-4c3c-9ef5-4b8600c37df2",
        "parentId" : "f50d127c-97f5-43be-b72e-3b49b5afc6d8",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "It's acutally used in `_search_runs` :)\r\n\r\nhttps://github.com/mlflow/mlflow/blob/c9963182b21d022cbeac98a0d282fa7a43aed48c/mlflow/store/tracking/file_store.py#L744",
        "createdAt" : "2021-06-08T13:27:32Z",
        "updatedAt" : "2021-06-08T13:28:15Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cc91e43665ef8cbbc0134124d1b4db4f75958fe",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +27,31 @@from mlflow.store.tracking import (\n    DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH,\n    SEARCH_MAX_RESULTS_THRESHOLD,\n)\nfrom mlflow.store.tracking.abstract_store import AbstractStore"
  },
  {
    "id" : "1e90faf6-6b51-4c72-8ae8-a45f4756b02e",
    "prId" : 2376,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2376#pullrequestreview-354790095",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "151a1d7c-5e8b-45bf-b983-e540bb8ee259",
        "parentId" : null,
        "authorId" : "240b730c-4fc4-4801-892a-18195816221b",
        "body" : "Quick sanity-check: What's the behavior when the FileStore writes the same parameter twice with different values? \r\n\r\neg\r\n```\r\nwith mlflow.start_run() as mlrun:\r\n    mlflow.log_param(\"foo\", \"bar\")\r\n    mlflow.log_param(\"foo\", \"baz\")\r\n```\r\n\r\nwill the resulting file for \"foo\" be appended to or overwritten? The former would be problematic since read_file will return both values.\r\n\r\nIt might be good to add a unit test for this scenario since we no longer raise an obvious error (\"Param recorded more than once\") in that case.",
        "createdAt" : "2020-02-01T00:41:27Z",
        "updatedAt" : "2020-02-07T03:38:28Z",
        "lastEditedBy" : "240b730c-4fc4-4801-892a-18195816221b",
        "tags" : [
        ]
      },
      {
        "id" : "f6573aca-aa35-474e-aca0-69719d5867ee",
        "parentId" : "151a1d7c-5e8b-45bf-b983-e540bb8ee259",
        "authorId" : "e71c4958-9dfb-45f1-bc0b-6dd7ac6aef54",
        "body" : "I believe the latter case happens since the function used (correct me if I'm wrong) to write the param truncates the param value when writing:\r\n```\r\ndef write_to(filename, data):\r\n    with codecs.open(filename, mode=\"w\", encoding=ENCODING) as handle:\r\n        handle.write(data)\r\n```\r\n\r\nI think writing a test for this case would be great though!\r\n\r\nEDIT: Was just informed that we should _not_ be able to record params multiple times, so your code example should error out on the second call of `log_param` (I don't think it does right now). We should introduce a check to fix this behavior on writing since we have a check against multiple logs to a parameter when trying to read params.",
        "createdAt" : "2020-02-01T01:30:09Z",
        "updatedAt" : "2020-02-07T03:38:28Z",
        "lastEditedBy" : "e71c4958-9dfb-45f1-bc0b-6dd7ac6aef54",
        "tags" : [
        ]
      },
      {
        "id" : "b259bc54-f8f6-452a-becd-47d14f5d6a9d",
        "parentId" : "151a1d7c-5e8b-45bf-b983-e540bb8ee259",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "@AveshCSingh @juntai-zheng Great catches! Parameter values are meant to be immutable. Accordingly, I've introduced validation logic to ensure that multiple writes for the same parameter key with different values are rejected.",
        "createdAt" : "2020-02-06T21:38:00Z",
        "updatedAt" : "2020-02-07T03:38:28Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3589d3b5649a761cccfc4e35125d6870eeea7e7f",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +516,520 @@    def _get_param_from_file(parent_path, param_name):\n        _validate_param_name(param_name)\n        value = read_file(parent_path, param_name)\n        return Param(param_name, value)\n"
  },
  {
    "id" : "ecd6a194-30e8-4e34-b7dd-d23c207290cb",
    "prId" : 2265,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2265#pullrequestreview-352162868",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e3f84b3-661d-4eee-9cca-a6f1198b7f98",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Can we add documentation here explaining what this method is used for (e.g., it is used to enable the `mlflow gc` garbage collection tool and is not a public API).",
        "createdAt" : "2020-01-30T01:35:14Z",
        "updatedAt" : "2020-02-27T10:30:54Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "14ef707f-a591-4ead-9072-687f8c2db7ca",
        "parentId" : "1e3f84b3-661d-4eee-9cca-a6f1198b7f98",
        "authorId" : "c6add3bb-6a2b-406f-b5c9-316ac09544af",
        "body" : "Done",
        "createdAt" : "2020-02-03T10:44:28Z",
        "updatedAt" : "2020-02-27T10:30:54Z",
        "lastEditedBy" : "c6add3bb-6a2b-406f-b5c9-316ac09544af",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f64dce55669a2ceab4997380139d12713537de9",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +326,330 @@        self._overwrite_run_info(new_info)\n\n    def _hard_delete_run(self, run_id):\n        \"\"\"\n        Permanently delete a run (metadata and metrics, tags, parameters)."
  },
  {
    "id" : "97d71b5b-671c-4694-af04-cf66f5549016",
    "prId" : 2265,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2265#pullrequestreview-354577685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f89d2f0-4f3a-41bf-846f-5a2134ceffda",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Based on my comment above, I think we can remove this method and rely on the Search API instead.",
        "createdAt" : "2020-01-30T01:35:40Z",
        "updatedAt" : "2020-02-27T10:30:54Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "779a37c1-ca33-477e-be5d-8de99382689e",
        "parentId" : "4f89d2f0-4f3a-41bf-846f-5a2134ceffda",
        "authorId" : "c6add3bb-6a2b-406f-b5c9-316ac09544af",
        "body" : "See my answer to the first comment about this.",
        "createdAt" : "2020-02-03T10:10:00Z",
        "updatedAt" : "2020-02-27T10:30:54Z",
        "lastEditedBy" : "c6add3bb-6a2b-406f-b5c9-316ac09544af",
        "tags" : [
        ]
      },
      {
        "id" : "8facafea-84e0-4c60-8b13-e2d7e511d9ea",
        "parentId" : "4f89d2f0-4f3a-41bf-846f-5a2134ceffda",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "@t-henri Your previous comment makes sense to me. Can we implement this method for the FileStore via the search API (e.g., search with the default max_runs limit and `viewtype = 'deleted'`), since this seems to be the only thing preventing `mlflow gc` from working against the file store?",
        "createdAt" : "2020-02-06T00:23:55Z",
        "updatedAt" : "2020-02-27T10:30:54Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "abd9ab31-7831-4ab9-ae3b-4a1121b1035f",
        "parentId" : "4f89d2f0-4f3a-41bf-846f-5a2134ceffda",
        "authorId" : "c6add3bb-6a2b-406f-b5c9-316ac09544af",
        "body" : "Done",
        "createdAt" : "2020-02-06T16:12:15Z",
        "updatedAt" : "2020-02-27T10:30:54Z",
        "lastEditedBy" : "c6add3bb-6a2b-406f-b5c9-316ac09544af",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f64dce55669a2ceab4997380139d12713537de9",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +334,338 @@        shutil.rmtree(run_dir)\n\n    def _get_deleted_runs(self):\n        experiment_ids = self._get_active_experiments() + self._get_deleted_experiments()\n        deleted_runs = self.search_runs(experiment_ids=experiment_ids, filter_string='',"
  },
  {
    "id" : "44ff1c5d-ebc3-42a3-8e6e-056a50dff64a",
    "prId" : 2265,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2265#pullrequestreview-355851835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e319872-3a6c-43b0-ac95-bdf48491042c",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "@t-henri I think we should remove the entire run directory. Otherwise, subsequent calls to search_runs and other APIs produce the following warning messages due to the presence empty run directories: \r\n\r\n```\r\nWARNING:root:Malformed run 'f1e402bae57d4b10a00d0d1da1b34976'. Detailed error Yaml file '/Users/czumar/mlflow/DEBUG/gc/mlruns/0/f1e402bae57d4b10a00d0d1da1b34976/meta.yaml' does not exist.\r\nTraceback (most recent call last):\r\n  File \"/Users/czumar/mlflow/mlflow/store/tracking/file_store.py\", line 586, in _list_run_infos\r\n    run_info = self._get_run_info(r_id)\r\n  File \"/Users/czumar/mlflow/mlflow/store/tracking/file_store.py\", line 432, in _get_run_info\r\n    meta = read_yaml(run_dir, FileStore.META_DATA_FILE_NAME)\r\n  File \"/Users/czumar/mlflow/mlflow/utils/file_utils.py\", line 159, in read_yaml\r\n    raise MissingConfigException(\"Yaml file '%s' does not exist.\" % file_path)\r\nMissingConfigException: Yaml file '/Users/czumar/mlflow/DEBUG/gc/mlruns/0/f1e402bae57d4b10a00d0d1da1b34976/meta.yaml' does not exist.\r\nWARNING:root:Malformed run '71dd972062e643c79b0815543d7d6583'. Detailed error Yaml file '/Users/czumar/mlflow/DEBUG/gc/mlruns/0/71dd972062e643c79b0815543d7d6583/meta.yaml' does not exist.\r\nTraceback (most recent call last):\r\n  File \"/Users/czumar/mlflow/mlflow/store/tracking/file_store.py\", line 586, in _list_run_infos\r\n    run_info = self._get_run_info(r_id)\r\n  File \"/Users/czumar/mlflow/mlflow/store/tracking/file_store.py\", line 432, in _get_run_info\r\n    meta = read_yaml(run_dir, FileStore.META_DATA_FILE_NAME)\r\n  File \"/Users/czumar/mlflow/mlflow/utils/file_utils.py\", line 159, in read_yaml\r\n    raise MissingConfigException(\"Yaml file '%s' does not exist.\" % file_path)\r\nMissingConfigException: Yaml file '/Users/czumar/mlflow/DEBUG/gc/mlruns/0/71dd972062e643c79b0815543d7d6583/meta.yaml' does not exist.\r\nWARNING:root:Malformed run 'c04069181614428b81a3150e533ab1af'. Detailed error Yaml file '/Users/czumar/mlflow/DEBUG/gc/mlruns/0/c04069181614428b81a3150e533ab1af/meta.yaml' does not exist.\r\nTraceback (most recent call last):\r\n  File \"/Users/czumar/mlflow/mlflow/store/tracking/file_store.py\", line 586, in _list_run_infos\r\n    run_info = self._get_run_info(r_id)\r\n  File \"/Users/czumar/mlflow/mlflow/store/tracking/file_store.py\", line 432, in _get_run_info\r\n    meta = read_yaml(run_dir, FileStore.META_DATA_FILE_NAME)\r\n  File \"/Users/czumar/mlflow/mlflow/utils/file_utils.py\", line 159, in read_yaml\r\n    raise MissingConfigException(\"Yaml file '%s' does not exist.\" % file_path)\r\nMissingConfigException: Yaml file '/Users/czumar/mlflow/DEBUG/gc/mlruns/0/c04069181614428b81a3150e533ab1af/meta.yaml' does not exist.\r\n```",
        "createdAt" : "2020-02-09T06:31:45Z",
        "updatedAt" : "2020-02-27T10:30:54Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "0f3427b5-023a-4682-89e0-4862c68c11b0",
        "parentId" : "9e319872-3a6c-43b0-ac95-bdf48491042c",
        "authorId" : "c6add3bb-6a2b-406f-b5c9-316ac09544af",
        "body" : "Done",
        "createdAt" : "2020-02-10T11:05:07Z",
        "updatedAt" : "2020-02-27T10:30:54Z",
        "lastEditedBy" : "c6add3bb-6a2b-406f-b5c9-316ac09544af",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f64dce55669a2ceab4997380139d12713537de9",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +331,335 @@        This is used by the ``mlflow gc`` command line and is not intended to be used elsewhere.\n        \"\"\"\n        _, run_dir = self._find_run_root(run_id)\n        shutil.rmtree(run_dir)\n"
  }
]