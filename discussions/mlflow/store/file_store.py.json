[
  {
    "id" : "4ede5381-fbb8-48b4-bd61-c48dd8eb3bf0",
    "prId" : 1630,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1630#pullrequestreview-264449038",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8d1b4a2-fb48-4e0b-8ab2-c8159243056f",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "After setting a tag on an experiment with key `cat` and value `dog`, a `tags` folder is created within the experiment directory; it contains a single file called `cat`. However, the `meta.yaml` file also contains an *empty* dictionary under the key `tags`:\r\n```\r\nartifact_location: file:///Users/czumar/mlflow/DEBUG/exptag/mlruns/1\r\nexperiment_id: '1'\r\nlifecycle_stage: active\r\nname: Dogface\r\ntags: {}\r\n```\r\n\r\nWas this for experimentation? Can we remove it?",
        "createdAt" : "2019-07-19T18:16:11Z",
        "updatedAt" : "2019-07-26T17:57:05Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "071d6879-f3ef-4a0c-bb41-3d461d03acde",
        "parentId" : "d8d1b4a2-fb48-4e0b-8ab2-c8159243056f",
        "authorId" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "body" : "It is not experimental - the meta.yaml that's written just calls `dict` on the Experiment object, which, naturally, does not have any tags in it at the time of creation. At read time, we just poll for the new tags that were written and we override that parameter. I went ahead and just added code to manually delete this from the written dictionary, but I don't think this should cause any bugs otherwise.",
        "createdAt" : "2019-07-19T22:03:54Z",
        "updatedAt" : "2019-07-26T17:57:05Z",
        "lastEditedBy" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "tags" : [
        ]
      }
    ],
    "commit" : "df45e8f2b63dcd21d721f19e84b421415a6319ae",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +5,9 @@\nimport uuid\nimport six\n\nfrom mlflow.entities import Experiment, Metric, Param, Run, RunData, RunInfo, RunStatus, RunTag, \\"
  },
  {
    "id" : "61f27f09-5d04-4f69-a8e4-9d20fcc82fff",
    "prId" : 1630,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1630#pullrequestreview-265744197",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29de345e-3ac2-49dc-a081-02bfc6e7cd0f",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Can you add an inline comment explaining why this is necessary (e.g., because tags are stored as files rather than the experiment's `meta.yaml` file)?",
        "createdAt" : "2019-07-24T00:48:30Z",
        "updatedAt" : "2019-07-26T17:57:05Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "df45e8f2b63dcd21d721f19e84b421415a6319ae",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +208,212 @@        # tags are added to the file system and are not written to this dict on write\n        # As such, we should not include them in the meta file.\n        del experiment_dict['tags']\n        write_yaml(meta_dir, FileStore.META_DATA_FILE_NAME, experiment_dict)\n        return experiment_id"
  },
  {
    "id" : "faec5e83-e8d7-4ac6-b3d6-f61af15ae967",
    "prId" : 1558,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1558#pullrequestreview-259671540",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ee6f6ea-88e7-4185-9119-187fbe1ea07b",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Needs docs",
        "createdAt" : "2019-07-09T18:06:28Z",
        "updatedAt" : "2019-07-11T18:32:59Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "52ef1680fbc3c39c0bbba85a39b1674a83c8bfca",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +586,590 @@        write_to(tag_path, self._writeable_value(tag.value))\n\n    def delete_tag(self, run_id, key):\n        \"\"\"\n        Delete a tag from a run."
  },
  {
    "id" : "bb4cc038-aed2-43ff-a692-fdaba8271624",
    "prId" : 1558,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1558#pullrequestreview-260406455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a05a2cb2-240b-472e-b987-a917e3af853c",
        "parentId" : null,
        "authorId" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "body" : "name of the tag -> Name of the tag",
        "createdAt" : "2019-07-10T22:33:49Z",
        "updatedAt" : "2019-07-11T18:32:59Z",
        "lastEditedBy" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "tags" : [
        ]
      },
      {
        "id" : "406d00ba-72da-4f77-aee7-f43f26537171",
        "parentId" : "a05a2cb2-240b-472e-b987-a917e3af853c",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "\"to delete\" in each of the param description is sounds a bit redundant.",
        "createdAt" : "2019-07-10T23:33:14Z",
        "updatedAt" : "2019-07-11T18:32:59Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "52ef1680fbc3c39c0bbba85a39b1674a83c8bfca",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +591,595 @@        :param run_id: String ID of the run\n        :param key: Name of the tag\n        \"\"\"\n        _validate_run_id(run_id)\n        run = self.get_run(run_id)"
  },
  {
    "id" : "a12c30ec-dce5-4abc-94e3-e576b43d20c4",
    "prId" : 1264,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1264#pullrequestreview-237476320",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6594bf9b-464c-4f94-a7ab-55c279de35a9",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "e.g., for old file store data, this may be a number?",
        "createdAt" : "2019-05-14T18:07:54Z",
        "updatedAt" : "2019-05-15T02:28:00Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "992b68b3-155b-4b0f-a871-98db9395b05b",
        "parentId" : "6594bf9b-464c-4f94-a7ab-55c279de35a9",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "yes. `FileStore` writes status as enum, where as `SqlAlchemyStore` writes it as a string. This is weird, but the APIs out of these stores are `RunInfo`\r\n\r\n",
        "createdAt" : "2019-05-14T20:14:13Z",
        "updatedAt" : "2019-05-15T02:28:00Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "330bf05ba386da516429f9c3513329b67161c560",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +52,56 @@        # 'status' is stored as an integer enum in meta file, but RunInfo.status field is a string.\n        # Convert from string to enum/int before storing.\n        run_info_dict['status'] = RunStatus.from_string(run_info.status)\n    else:\n        run_info_dict['status'] = RunStatus.RUNNING"
  },
  {
    "id" : "5fdfdea0-7ffe-4085-8ec7-3a0970df8e4c",
    "prId" : 1264,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1264#pullrequestreview-237415134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "441a45b7-bc11-49aa-a203-6a3cda33867d",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Maybe add a comment like below indicating why we're making this change. Also do we need a similar isinstance?",
        "createdAt" : "2019-05-14T18:08:45Z",
        "updatedAt" : "2019-05-15T02:28:00Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "330bf05ba386da516429f9c3513329b67161c560",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +69,73 @@    # converting to string before hydrating RunInfo.\n    # If 'status' value not recorded in files, mark it as 'RUNNING' (default)\n    dict_copy['status'] = RunStatus.to_string(run_info_dict.get('status', RunStatus.RUNNING))\n\n    # 'experiment_id' was changed from int to string, so we must cast to string"
  },
  {
    "id" : "6f46c240-9e32-4647-9fb3-23087cbef73c",
    "prId" : 1188,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1188#pullrequestreview-233678503",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4740cb08-6de0-4abb-a7ef-5e5d075a680e",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Makes sense, I think this change is necessary e.g. for MLflow projects running older MLflow versions to be able to properly deserialize the run. We should QA this pre-1.0 though :P",
        "createdAt" : "2019-05-03T21:25:21Z",
        "updatedAt" : "2019-05-07T19:50:11Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "789c393d9a8e7a2200ce6148b9f649d021525506",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +48,52 @@    run_info_dict = dict(run_info)\n    run_info_dict['tags'] = []\n    run_info_dict['name'] = ''\n    run_info_dict['source_type'] = SourceType.LOCAL\n    run_info_dict['source_name'] = ''"
  },
  {
    "id" : "65888061-0e63-45b4-b00a-6804eba33be1",
    "prId" : 1188,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1188#pullrequestreview-234686406",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54cb8ada-071b-4264-b262-54b6cd3cc835",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "so we're not supporting reading of the deprecated fields for runs saved in the old format (e.g. by returning them in tags) right?",
        "createdAt" : "2019-05-07T01:56:39Z",
        "updatedAt" : "2019-05-07T19:50:11Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "24257351-7c44-4f49-bc76-9ef103cd8c97",
        "parentId" : "54cb8ada-071b-4264-b262-54b6cd3cc835",
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "This is a good point -- potentially we should consider having a migration script to change the old runs to include tags.",
        "createdAt" : "2019-05-07T18:26:11Z",
        "updatedAt" : "2019-05-07T19:50:11Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "789c393d9a8e7a2200ce6148b9f649d021525506",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +363,367 @@        return Run(run_info=run_info, run_data=None)\n\n    def get_run(self, run_id):\n        \"\"\"\n        Note: Will get both active and deleted runs."
  },
  {
    "id" : "ddc5b8c2-4519-4545-84ec-99434db83bc7",
    "prId" : 1171,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1171#pullrequestreview-233700996",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c376d22-2fa3-4c0b-9382-940714d5066a",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "is this where you said if a user supplies the artifact_uri that is local we don't covert to `file:/...`? i guess the only thing i see that will be weird is `get_artifact_uri` will return a weirdly-formatted uri like `c:\\user\\given\\artifact\\uri/relative/path` which should be ok...",
        "createdAt" : "2019-05-03T22:26:07Z",
        "updatedAt" : "2019-05-05T06:28:02Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "5e4714b7-6489-4a11-bd66-fa0941d8a8db",
        "parentId" : "4c376d22-2fa3-4c0b-9382-940714d5066a",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Yes, we do not convert user supplied artifact uri. \r\n\r\nWindows absolute path would not work though as it would look like a uri with single character scheme. For absolute paths on windows, user must use the file:///<drive>:/<path> pattern. \r\n\r\nIn case of relative path with '\\' separator, we do not convert it and mixed separators should work in windows. ",
        "createdAt" : "2019-05-03T22:59:36Z",
        "updatedAt" : "2019-05-05T06:28:02Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "23c61ed20a1e1523438f00290d0afb8fe4b4c2ab",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +179,183 @@        self._check_root_dir()\n        meta_dir = mkdir(self.root_directory, str(experiment_id))\n        artifact_uri = artifact_uri or path_to_local_file_uri(\n            os.path.join(self.root_directory, str(experiment_id)))\n        experiment = Experiment(experiment_id, name, artifact_uri, LifecycleStage.ACTIVE)"
  },
  {
    "id" : "5e009dc6-2211-4589-bf99-4ccc13048935",
    "prId" : 1067,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1067#pullrequestreview-224159461",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92c3c452-167d-482a-85dd-f9539c0da881",
        "parentId" : null,
        "authorId" : "b4fddc45-a47a-44bc-bbc0-8f8a8eed86ef",
        "body" : "is copy() enough or do we want to consider deep_copy()?",
        "createdAt" : "2019-04-08T20:58:04Z",
        "updatedAt" : "2019-04-19T19:48:58Z",
        "lastEditedBy" : "b4fddc45-a47a-44bc-bbc0-8f8a8eed86ef",
        "tags" : [
        ]
      },
      {
        "id" : "c6536d14-af54-496b-8454-4f59120293a1",
        "parentId" : "92c3c452-167d-482a-85dd-f9539c0da881",
        "authorId" : "668ead22-45dd-4911-8926-af33e1dbaebc",
        "body" : "For now it should be enough since the Experiment is flat. Although I agree that exposing this in the case Experiment is no longer flat would be very problematic",
        "createdAt" : "2019-04-09T01:41:43Z",
        "updatedAt" : "2019-04-19T19:48:58Z",
        "lastEditedBy" : "668ead22-45dd-4911-8926-af33e1dbaebc",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb76af9d3a1fbec543c2088c62370a476ef6c598",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +33,37 @@\ndef _read_persisted_experiment_dict(experiment_dict):\n    dict_copy = experiment_dict.copy()\n\n    # 'experiment_id' was changed from int to string, so we must cast to string"
  },
  {
    "id" : "17d31597-9fcf-45b4-826d-a1ed77927429",
    "prId" : 1067,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1067#pullrequestreview-225768445",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8c47555-a56c-4d44-9ebb-3fbe1f1a5e88",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Let's add a comment on why we have to read this specially (i.e., to read legacy experiments when it was serialized as in an int)",
        "createdAt" : "2019-04-11T20:17:57Z",
        "updatedAt" : "2019-04-19T19:48:58Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb76af9d3a1fbec543c2088c62370a476ef6c598",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +32,36 @@\n\ndef _read_persisted_experiment_dict(experiment_dict):\n    dict_copy = experiment_dict.copy()\n"
  },
  {
    "id" : "82992a96-aabd-446c-8214-40a73092a630",
    "prId" : 950,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/950#pullrequestreview-212047815",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "853e6b78-25a1-491d-a1bc-aa70ae65f316",
        "parentId" : null,
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "Can this implementation be moved down to abstract store?",
        "createdAt" : "2019-03-07T22:01:17Z",
        "updatedAt" : "2019-03-07T22:01:18Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      },
      {
        "id" : "709bcdec-27b6-41be-aa34-cdd1d122508e",
        "parentId" : "853e6b78-25a1-491d-a1bc-aa70ae65f316",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Yep that's a good idea I think - doesn't hurt to provide a default implementation of `log_batch` that implementors of AbstractStore can choose to override if they'd like",
        "createdAt" : "2019-03-07T22:08:50Z",
        "updatedAt" : "2019-03-07T22:08:51Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "48b89a1e57e719f5e9a8c164be6892ba07b1b58f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +536,540 @@        write_yaml(run_dir, FileStore.META_DATA_FILE_NAME, run_info_dict, overwrite=True)\n\n    def log_batch(self, run_id, metrics, params, tags):\n        _validate_run_id(run_id)\n        run = self.get_run(run_id)"
  },
  {
    "id" : "f87c6c8f-5029-407b-a415-1df0aa423d17",
    "prId" : 632,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/632#pullrequestreview-165879059",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e54f521-e898-4b6a-a4ed-2b4624c61ae4",
        "parentId" : null,
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "What is the scenario where this error can happen? When you remove the meta.yaml file from the experiment directory?",
        "createdAt" : "2018-10-17T17:47:17Z",
        "updatedAt" : "2018-10-19T06:36:25Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      },
      {
        "id" : "79e979c3-56b0-45e8-827a-81146b23499a",
        "parentId" : "7e54f521-e898-4b6a-a4ed-2b4624c61ae4",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "Yes. Human error. \r\n\r\n`List` and `Search` APIs will log a warning about malformed entity but eat up the exception, if `meta.yaml` is missing (since the intension here to get valid experiments or runs)\r\n`Get`, `Remove`, `Restore` will surface the exception to caller (since the caller intended to do a (c)RUD operation on a entity)",
        "createdAt" : "2018-10-17T22:58:14Z",
        "updatedAt" : "2018-10-19T06:36:25Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      },
      {
        "id" : "9e5a6117-0d92-4afa-a768-13c4dcf52bd3",
        "parentId" : "7e54f521-e898-4b6a-a4ed-2b4624c61ae4",
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "Gotcha",
        "createdAt" : "2018-10-17T23:45:43Z",
        "updatedAt" : "2018-10-19T06:36:25Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5d595bc500396b2138a52167ebe5119ae26b6a6",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +142,146 @@            try:\n                # trap and warn known issues, will raise unexpected exceptions to caller\n                experiment = self._get_experiment(exp_id, view_type)\n                experiments.append(experiment)\n            except MissingConfigException as rnfe:"
  },
  {
    "id" : "a4619ba1-e267-489f-a24c-934dd8bd9c7e",
    "prId" : 632,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/632#pullrequestreview-166640233",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2010fa5f-8dec-4cba-b6c3-5d4c14e74610",
        "parentId" : null,
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "Let's change to \r\n```\r\n                logging.warning(\"Malformed experiment '%s'. Detailed error %s\",\r\n                                str(exp_id), str(rnfe), exc_info=True)\r\n```\r\n",
        "createdAt" : "2018-10-19T18:11:04Z",
        "updatedAt" : "2018-10-19T18:11:24Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      },
      {
        "id" : "0e0a8f59-6e6a-4809-8c3d-8ecc9d025d2e",
        "parentId" : "2010fa5f-8dec-4cba-b6c3-5d4c14e74610",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "will make this as a following on styling change...",
        "createdAt" : "2018-10-19T18:16:48Z",
        "updatedAt" : "2018-10-19T18:16:48Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5d595bc500396b2138a52167ebe5119ae26b6a6",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +146,150 @@            except MissingConfigException as rnfe:\n                # Trap malformed experiments and log warnings.\n                logging.warning(\"Malformed experiment '%s'. Detailed error %s\",\n                                str(exp_id), str(rnfe), **{\"exc_info\": True})\n        return experiments"
  },
  {
    "id" : "90b6e38d-b503-4903-ad50-6bf09e4c2af1",
    "prId" : 632,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/632#pullrequestreview-166640266",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e733be9-43c6-4b4a-8455-da7e6bc01710",
        "parentId" : null,
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "Same here:\r\nLet's change to \r\n```\r\n                logging.warning(\"Malformed experiment '%s'. Detailed error %s\",\r\n                                str(exp_id), str(rnfe), exc_info=True)\r\n```\r\n",
        "createdAt" : "2018-10-19T18:11:14Z",
        "updatedAt" : "2018-10-19T18:11:24Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      },
      {
        "id" : "3fc41684-0455-4266-9f60-e41d0394e162",
        "parentId" : "7e733be9-43c6-4b4a-8455-da7e6bc01710",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "will make this as a following on styling change...",
        "createdAt" : "2018-10-19T18:16:53Z",
        "updatedAt" : "2018-10-19T18:16:53Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5d595bc500396b2138a52167ebe5119ae26b6a6",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +472,476 @@                # trap malformed run exception and log warning\n                kwargs = {\"exc_info\": True}\n                logging.warning(\"Malformed run '%s'. Detailed error %s\", r_id, str(rnfe), **kwargs)\n        return run_infos\n"
  },
  {
    "id" : "a48bde5e-0edf-474f-a336-67b1b61819cd",
    "prId" : 570,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/570#pullrequestreview-160546857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed521894-7526-46b6-bc77-98b00f541cf4",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "We should check if the experiment is deleted here, since it'll be in the trash folder (a different directory) if it is. A simple option would be disallowing renaming deleted experiments (matches our existing pattern of not allowing updating/logging params/metrics to deleted runs). Another would be using `self._get_experiment_path()` to get the path of the experiment's metadata file, and updating the name there.",
        "createdAt" : "2018-10-02T02:05:52Z",
        "updatedAt" : "2018-10-08T15:12:19Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "2be1148c-9c25-4938-b225-f06d560a5696",
        "parentId" : "ed521894-7526-46b6-bc77-98b00f541cf4",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "^Either way, we'd still be subject to bugs in the case of concurrent attempts to delete & rename an experiment. However that race condition would hopefully be rare, so it seems worth it to try to detect if an experiment is deleted.",
        "createdAt" : "2018-10-02T02:17:53Z",
        "updatedAt" : "2018-10-08T15:12:19Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3348a626d7f37d3bc0a7581c7166c1f1a5eefaf",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +224,228 @@            raise Exception(\"Cannot rename experiment in non-active lifecycle stage.\"\n                            \" Current stage: %s\" % experiment.lifecycle_stage)\n        write_yaml(meta_dir, FileStore.META_DATA_FILE_NAME, dict(experiment), overwrite=True)\n\n    def delete_run(self, run_id):"
  },
  {
    "id" : "2d85c2da-1626-4e16-b516-fb7dd5d9e956",
    "prId" : 502,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/502#pullrequestreview-156165842",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20e1b2dd-1c52-481f-8b04-70222639ad56",
        "parentId" : null,
        "authorId" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "body" : "Sorry I missed this earlier, but just trying to understand -- why might None get passed here? It's probably ok to write it as \"\" if users do set_tag(name, None) but maybe we should make that mean to delete the tag or something like that. It's kind of confusing because this is on the server side anyway; does the public API even allow set_tag(name, None)?",
        "createdAt" : "2018-09-17T19:38:30Z",
        "updatedAt" : "2018-09-17T20:42:01Z",
        "lastEditedBy" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "tags" : [
        ]
      },
      {
        "id" : "3a2412da-ac5d-4ad1-9ea3-e496605b63e7",
        "parentId" : "20e1b2dd-1c52-481f-8b04-70222639ad56",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "Yes user can explicitly call `mlflow.set_tag(\"blah\", None)`, to store a single piece of information not key-value. If we dont convert it to \"\", it will show up as \"None\" in value.\r\n\r\nIf we need to support delete, IMHO we should have an explicit `unset_tag`.",
        "createdAt" : "2018-09-17T19:43:03Z",
        "updatedAt" : "2018-09-17T20:42:01Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      },
      {
        "id" : "cbf1d8bc-fb67-455d-b50a-048756823fb7",
        "parentId" : "20e1b2dd-1c52-481f-8b04-70222639ad56",
        "authorId" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "body" : "Ah, that makes sense, I guess we should convert it to \"\" in that case.",
        "createdAt" : "2018-09-18T00:06:51Z",
        "updatedAt" : "2018-09-18T00:06:51Z",
        "lastEditedBy" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "tags" : [
        ]
      },
      {
        "id" : "623cd7ec-ab1b-40bb-b82c-933cde5c10e8",
        "parentId" : "20e1b2dd-1c52-481f-8b04-70222639ad56",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "Cool! So the way this is written is that `None` will get converted to `\"\"` before getting written to tag file.",
        "createdAt" : "2018-09-18T00:15:44Z",
        "updatedAt" : "2018-09-18T00:15:44Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "6092d39a8ad94a35be4adee0acf0605807b8c6c1",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +436,440 @@    def _writeable_value(self, tag_value):\n        if tag_value is None:\n            return \"\"\n        elif isinstance(tag_value, six.string_types):\n            return tag_value"
  },
  {
    "id" : "ed698459-9510-4974-a41e-ec6299c78cfa",
    "prId" : 473,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/473#pullrequestreview-155648564",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f198ab83-3bf1-4510-bff2-39b196405266",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Raising an exception in `_get_experiment_path` would also allow us to not have to perform this check in the experiment-management methods",
        "createdAt" : "2018-09-14T20:30:45Z",
        "updatedAt" : "2018-09-17T18:34:16Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "844703d47ff407424a7759491030e7b24aafa018",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +198,202 @@    def restore_experiment(self, experiment_id):\n        experiment_dir = self._get_experiment_path(experiment_id, ViewType.DELETED_ONLY)\n        if experiment_dir is None:\n            raise Exception(\"Could not find deleted experiment with ID %d\" % experiment_id)\n        conflict_experiment = self._get_experiment_path(experiment_id, ViewType.ACTIVE_ONLY)"
  },
  {
    "id" : "fbe66580-0f64-4c70-bc3d-e4cacb79f74a",
    "prId" : 342,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/342#pullrequestreview-148318034",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4f69272-4986-42d9-948f-052ae6e54c26",
        "parentId" : null,
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "If a tag already exists on this run, what do we do? Update or overwrite? Case can be made for both use cases.",
        "createdAt" : "2018-08-22T02:32:27Z",
        "updatedAt" : "2018-08-22T03:26:13Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      },
      {
        "id" : "982b64f3-2696-481c-b5a4-5002a34cf58d",
        "parentId" : "b4f69272-4986-42d9-948f-052ae6e54c26",
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Overwrite! This is tested in test_file_store.",
        "createdAt" : "2018-08-22T02:52:30Z",
        "updatedAt" : "2018-08-22T03:26:13Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b633ed1d7125ab00e2c02c955015eed4c5171b23",
    "line" : 142,
    "diffHunk" : "@@ -1,1 +399,403 @@        run = self.get_run(run_uuid)\n        tag_path = self._get_tag_path(run.info.experiment_id, run_uuid, tag.key)\n        make_containing_dirs(tag_path)\n        write_to(tag_path, \"%s\\n\" % tag.value)"
  }
]