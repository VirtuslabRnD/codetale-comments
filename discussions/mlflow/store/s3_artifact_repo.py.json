[
  {
    "id" : "f4cc5cf6-5078-4dc6-9293-488561c5f277",
    "prId" : 1171,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1171#pullrequestreview-233702302",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7fd1e7a-cd35-4f7e-8c65-3537c214a797",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "/dbfs/artifact/path/relative\\path",
        "createdAt" : "2019-05-03T21:37:28Z",
        "updatedAt" : "2019-05-05T06:28:02Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "c4d6c5c4-2238-42cb-914a-78381c0e3318",
        "parentId" : "f7fd1e7a-cd35-4f7e-8c65-3537c214a797",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Will fix",
        "createdAt" : "2019-05-03T23:07:15Z",
        "updatedAt" : "2019-05-05T06:28:02Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "23c61ed20a1e1523438f00290d0afb8fe4b4c2ab",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +50,54 @@                rel_path = os.path.relpath(root, local_dir)\n                rel_path = relative_path_to_artifact_path(rel_path)\n                upload_path = posixpath.join(dest_path, rel_path)\n            for f in filenames:\n                s3_client.upload_file("
  },
  {
    "id" : "f7bbe13b-6b65-43fd-86b2-c02e1314c7cd",
    "prId" : 928,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/928#pullrequestreview-208306356",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14a39f82-796b-475c-923b-7a65c1e7fba6",
        "parentId" : null,
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "Let's write some sort of a checker to make sure that nesting is legit. For instance it is possible to have this sort of directory structure in S3\r\n\r\n```\r\ndir_name                # is a true directory\r\ndir_name/sub_dir        # this one is a file\r\ndir_name/sub_dir/file   # this is also a file\r\n```",
        "createdAt" : "2019-02-27T01:32:49Z",
        "updatedAt" : "2019-02-27T23:17:01Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      },
      {
        "id" : "0f2dc070-2404-49f4-ab3c-424565cb4e1f",
        "parentId" : "14a39f82-796b-475c-923b-7a65c1e7fba6",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "After offline discussion, it appears that we don't currently have a mechanism for checking / enforcing that S3 object keys containing slashes are directories. We should definitely agree on a strategy for dealing with files whose keys contain slashes, but this is a bit outside the scope of the current PR.",
        "createdAt" : "2019-02-27T02:17:02Z",
        "updatedAt" : "2019-02-27T23:17:01Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "61ba8cf26e67c1a581c30e8fb6411e4a12c2e274",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +68,72 @@        paginator = s3_client.get_paginator(\"list_objects_v2\")\n        results = paginator.paginate(Bucket=bucket, Prefix=prefix, Delimiter='/')\n        for result in results:\n            # Subdirectories will be listed as \"common prefixes\" due to the way we made the request\n            for obj in result.get(\"CommonPrefixes\", []):"
  }
]