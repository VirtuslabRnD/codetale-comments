[
  {
    "id" : "75dd9894-c22e-47b0-89df-ae4c1e2298d6",
    "prId" : 3074,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3074#pullrequestreview-446743566",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b738c4cf-8fc9-4128-b942-23daee7bc298",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Is this necessary? I was under the impression that cascade deletes would handle tag removal automatically.",
        "createdAt" : "2020-07-10T20:49:41Z",
        "updatedAt" : "2020-07-11T00:39:59Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "8f6f9746-f036-4ef5-b5e8-3c69356ae6c6",
        "parentId" : "b738c4cf-8fc9-4128-b942-23daee7bc298",
        "authorId" : "aa8f56aa-04da-47d9-89bd-aa0320ac266a",
        "body" : "@dbczumar Cascade delete will handle tag removal automatically for sure, but we still want the `delete_registered_model()` function for user to delete a single tag and expose the API for it as well right?",
        "createdAt" : "2020-07-10T23:00:49Z",
        "updatedAt" : "2020-07-11T00:39:59Z",
        "lastEditedBy" : "aa8f56aa-04da-47d9-89bd-aa0320ac266a",
        "tags" : [
        ]
      },
      {
        "id" : "572d448e-e32d-4a62-87b9-588abb4379d3",
        "parentId" : "b738c4cf-8fc9-4128-b942-23daee7bc298",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Whoops. Meant to delete this comment - I was mistaken. Sorry!",
        "createdAt" : "2020-07-10T23:07:13Z",
        "updatedAt" : "2020-07-11T00:39:59Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5cd186ab6ef6529a3aa2c73c09bd5683d1f2ac6e",
    "line" : 252,
    "diffHunk" : "@@ -1,1 +440,444 @@            existing_tag = self._get_registered_model_tag(session, name, key)\n            if existing_tag is not None:\n                session.delete(existing_tag)\n\n    # CRUD API for ModelVersion objects"
  },
  {
    "id" : "cccf2893-7184-4f77-b94c-f56b7d06da64",
    "prId" : 2965,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2965#pullrequestreview-433687701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcdadab2-5989-4eb0-8da0-a8e5da6c1089",
        "parentId" : null,
        "authorId" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "body" : "Note that we can't just do this if `order_by` is not `None` or empty - this function also inserts the default ordering order by clause.",
        "createdAt" : "2020-06-18T22:25:02Z",
        "updatedAt" : "2020-06-22T23:19:19Z",
        "lastEditedBy" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c509cf9d3ed4e85d5f93737773205ceef968132",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +242,246 @@\n        parsed_filter = SearchUtils.parse_filter_for_registered_models(filter_string)\n        parsed_orderby = self._parse_search_registered_models_order_by(order_by)\n        offset = SearchUtils.parse_start_offset_from_page_token(page_token)\n        # we query for max_results + 1 items to check whether there is another page to return."
  },
  {
    "id" : "f438c19b-b993-4bc8-8ab0-60e9096e427b",
    "prId" : 2951,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2951#pullrequestreview-432949724",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0a4b5b6-71b2-4cee-a9f7-af5858801a82",
        "parentId" : null,
        "authorId" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "body" : "The merged backend implementation does not implement anything for `order_by`, so it's probably a good idea to either implement it, not include the parameter in the function for the store, or document it",
        "createdAt" : "2020-06-17T05:30:13Z",
        "updatedAt" : "2020-06-18T07:07:29Z",
        "lastEditedBy" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "tags" : [
        ]
      },
      {
        "id" : "489b87b4-cb3e-4800-8970-3429a78bf91e",
        "parentId" : "d0a4b5b6-71b2-4cee-a9f7-af5858801a82",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "raised `NotImplementedError` now",
        "createdAt" : "2020-06-18T05:25:39Z",
        "updatedAt" : "2020-06-18T07:07:29Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "27a074a7cc6ad599541247427a48d720ab797308",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +212,216 @@                                 filter_string=None,\n                                 max_results=SEARCH_REGISTERED_MODEL_MAX_RESULTS_DEFAULT,\n                                 order_by=None,\n                                 page_token=None):\n        \"\"\""
  },
  {
    "id" : "d8eea8cc-b82b-4205-9e66-abe899ce3e1c",
    "prId" : 2921,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2921#pullrequestreview-428556002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb54edb2-6565-42b3-9be8-9ae0bc093074",
        "parentId" : null,
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "you may need to add some logic here to handle case sensitivity.",
        "createdAt" : "2020-06-11T02:02:15Z",
        "updatedAt" : "2020-06-12T18:46:56Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      },
      {
        "id" : "43f57b06-b85b-422e-95ab-231c81109c43",
        "parentId" : "cb54edb2-6565-42b3-9be8-9ae0bc093074",
        "authorId" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "body" : "Done",
        "createdAt" : "2020-06-11T02:46:06Z",
        "updatedAt" : "2020-06-12T18:46:56Z",
        "lastEditedBy" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6dfdca0c206fd21eae9653d4f45ba97956f7e5f",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +248,252 @@            if self.db_type == SQLITE:\n                session.execute(\"PRAGMA case_sensitive_like = true;\")\n            sql_registered_models = session.query(SqlRegisteredModel).filter(*conditions).all()\n            registered_models = [rm.to_mlflow_entity() for rm in sql_registered_models]\n            return registered_models"
  }
]