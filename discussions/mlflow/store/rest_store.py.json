[
  {
    "id" : "d32e2cb8-7f69-4a27-a883-73194bf8ced8",
    "prId" : 1775,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1775#pullrequestreview-285775364",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08475b9a-8e37-4d33-92dd-3e3ffadee01e",
        "parentId" : null,
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "should we check that the error was that the api path was not found?",
        "createdAt" : "2019-09-09T20:49:42Z",
        "updatedAt" : "2019-09-13T21:31:41Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5b83e8e83e583120edefbe3b1251878f29bc546",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +264,268 @@                raise e\n            # Fall back to using ListExperiments-based implementation.\n            for experiment in self.list_experiments(ViewType.ALL):\n                if experiment.name == experiment_name:\n                    return experiment"
  },
  {
    "id" : "782987c1-c99f-4bfe-948c-ba3fdbc503c4",
    "prId" : 1775,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1775#pullrequestreview-285864180",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "747f8220-60f8-4c4e-ad8b-f1a733ed3bb6",
        "parentId" : null,
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Should we check that the error message was that the endpoint does not exists? I don't think we want to fall back on list_experiments for 500s or 429 etc.",
        "createdAt" : "2019-09-09T21:07:18Z",
        "updatedAt" : "2019-09-13T21:31:41Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "fdec8d07-3ec7-4106-b867-8c68945bfab8",
        "parentId" : "747f8220-60f8-4c4e-ad8b-f1a733ed3bb6",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Good question, we could explicitly raise & not perform the fallback if the server responds with `RESOURCE_LIMIT_EXCEEDED`, but it's hard to raise on `INTERNAL_ERROR`,\r\nsince the OSS server responds with XML 404s for nonexistent endpoints (rather than a well-formed JSON exception with an `ENDPOINT_DOES_NOT_EXIST` error code) and we deserialize these client-side as `INTERNAL_ERROR`s. We could get around this using Python `requests` directly & only fall back on 500-level error codes from the server, but other implementors of the OSS REST API might not follow the pattern of using 400-level responses for nonexistent endpoints. Since we only need the fallback logic in one MLflow client version (i.e. we'll add it in MLflow 1.3 and drop it in MLflow 1.4), maybe the easiest thing is to explicitly re-raise on `RESOURCE_LIMIT_EXCEEDED` but fall back to ListExperiments otherwise",
        "createdAt" : "2019-09-09T23:55:38Z",
        "updatedAt" : "2019-09-13T21:31:41Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "980b39b3-6a0d-4cf6-bfe7-d50ca48614c6",
        "parentId" : "747f8220-60f8-4c4e-ad8b-f1a733ed3bb6",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Are we doing this only for one version? Shouldn't our apis be kept stable (for client and server)?\r\n\r\nAs for the 404, isn't 404 the standard code to return in case of no such endpoint? I think it's better to not to support stores that do not follow standards than falling back to listExperiments for everybody. ",
        "createdAt" : "2019-09-10T00:17:32Z",
        "updatedAt" : "2019-09-13T21:31:41Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "39922387-390f-4cdf-b9ef-13e48f2a02bb",
        "parentId" : "747f8220-60f8-4c4e-ad8b-f1a733ed3bb6",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Talked to @mateiz and @aarondav about this - we'd like to have a policy of supporting client-server backwards compatibility for some finite set of versions (i.e. we'll keep the client backwards-compatible with old servers for at least 1 minor version, but we won't guarantee that all MLflow 1.x clients work against all MLflow 1.y clients, for x > y), so I might defer adding more complex fallback logic for now.",
        "createdAt" : "2019-09-10T01:28:19Z",
        "updatedAt" : "2019-09-13T21:31:41Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5b83e8e83e583120edefbe3b1251878f29bc546",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +263,267 @@                    databricks_pb2.REQUEST_LIMIT_EXCEEDED):\n                raise e\n            # Fall back to using ListExperiments-based implementation.\n            for experiment in self.list_experiments(ViewType.ALL):\n                if experiment.name == experiment_name:"
  },
  {
    "id" : "4f128205-5d20-4226-a457-9794c6e8f139",
    "prId" : 1558,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1558#pullrequestreview-260390476",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6bfba9a2-135a-44d8-a4be-1cd014230420",
        "parentId" : null,
        "authorId" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "body" : "String id for the run-> String ID of the run\r\nname of the tag -> Name of the tag",
        "createdAt" : "2019-07-10T22:33:38Z",
        "updatedAt" : "2019-07-11T18:32:59Z",
        "lastEditedBy" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "tags" : [
        ]
      }
    ],
    "commit" : "52ef1680fbc3c39c0bbba85a39b1674a83c8bfca",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +195,199 @@        :param run_id: String ID of the run\n        :param key: Name of the tag\n        \"\"\"\n        req_body = message_to_json(DeleteTag(run_id=run_id, key=key))\n        self._call_endpoint(DeleteTag, req_body)"
  },
  {
    "id" : "fd438624-a00d-4d18-bdbe-73429ca30ea7",
    "prId" : 1142,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1142#pullrequestreview-233491856",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edbedcf1-eea5-45a9-b30e-24edae586893",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "This change seems appropriate, but should change the `return` documentation and should probably also be documented as part of the release notes.",
        "createdAt" : "2019-04-19T19:38:40Z",
        "updatedAt" : "2019-04-19T21:05:54Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "57026041-f17d-4fb9-8449-50ffb05bd570",
        "parentId" : "edbedcf1-eea5-45a9-b30e-24edae586893",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Ah yeah good catch",
        "createdAt" : "2019-04-19T20:17:33Z",
        "updatedAt" : "2019-04-19T21:05:54Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "5a1bc0de-095e-412f-aebe-4c42a60daef8",
        "parentId" : "edbedcf1-eea5-45a9-b30e-24edae586893",
        "authorId" : "b4fddc45-a47a-44bc-bbc0-8f8a8eed86ef",
        "body" : "This change fixes issue https://github.com/mlflow/mlflow/issues/1083\r\nwhich was referenced by this PR https://github.com/mlflow/mlflow/pull/1084  that was tagged MLflow 1.0 on Apr 3 but didn't get merged.",
        "createdAt" : "2019-05-03T14:13:55Z",
        "updatedAt" : "2019-05-03T14:14:17Z",
        "lastEditedBy" : "b4fddc45-a47a-44bc-bbc0-8f8a8eed86ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "bae6bc5329156cc68c3406a8a67a26b190f46ed4",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +205,209 @@        req_body = message_to_json(GetMetricHistory(run_uuid=run_uuid, metric_key=metric_key))\n        response_proto = self._call_endpoint(GetMetricHistory, req_body)\n        return [Metric.from_proto(metric) for metric in response_proto.metrics]\n\n    def search_runs(self, experiment_ids, search_filter, run_view_type,"
  },
  {
    "id" : "6068c634-bf03-4e5e-a53c-87cb4ef0429e",
    "prId" : 1067,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1067#pullrequestreview-228486320",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "427664cc-5736-4300-80c7-e3c61a3b86b1",
        "parentId" : null,
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "why do we call str here? shouldn't we assume the ids are already strings?",
        "createdAt" : "2019-04-18T21:16:30Z",
        "updatedAt" : "2019-04-19T19:48:58Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb76af9d3a1fbec543c2088c62370a476ef6c598",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +220,224 @@        :return: A list of Run objects that satisfy the search expressions\n        \"\"\"\n        experiment_ids = [str(experiment_id) for experiment_id in experiment_ids]\n        sr = SearchRuns(experiment_ids=experiment_ids,\n                        anded_expressions=search_filter.search_expressions if search_filter else [],"
  },
  {
    "id" : "7462eae6-c7c7-4d61-8041-4fb2e1ad7f0d",
    "prId" : 975,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/975#pullrequestreview-213046564",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f67ab552-5c46-4524-8962-76923bd87261",
        "parentId" : null,
        "authorId" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "body" : "Could you use the same verb tense throughout?  In models.py you use \"Convert DB model\".  Could this be \"Fetch the experiment\" and below \"Fetch the run\", etc?",
        "createdAt" : "2019-03-11T18:17:16Z",
        "updatedAt" : "2019-03-12T22:28:42Z",
        "lastEditedBy" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "tags" : [
        ]
      },
      {
        "id" : "9c7ba275-d148-460e-8763-735afd04d570",
        "parentId" : "f67ab552-5c46-4524-8962-76923bd87261",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "Done! And fixed the other ones in this file as well.",
        "createdAt" : "2019-03-11T19:44:42Z",
        "updatedAt" : "2019-03-12T22:28:42Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ff9e927c858454f17b62cac2024009d6b32948d",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +94,98 @@        \"\"\"\n        Fetch the experiment from the backend store.\n\n        :param experiment_id: Integer id for the experiment\n"
  },
  {
    "id" : "b1c0ab0d-dc88-4bc6-8cd5-03a6f9bc51d5",
    "prId" : 974,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/974#pullrequestreview-212619418",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "609d0ea5-d25a-4143-8188-77e4b3366581",
        "parentId" : null,
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "We can add this to `user_specified_tags` and context provider precedence will auto resolve this as run name. This change is a bit involved and not related to this fix. Will handle this separately.",
        "createdAt" : "2019-03-10T20:09:16Z",
        "updatedAt" : "2019-03-11T09:01:34Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f9e683d411a1b04d317c36a5386eee86410c07b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +153,157 @@        run = Run.from_proto(response_proto.run)\n        if run_name:\n            # TODO: optimization: This is making 2 calls to backend store. Include with above call.\n            self.set_tag(run.info.run_uuid, RunTag(key=MLFLOW_RUN_NAME, value=run_name))\n        return run"
  },
  {
    "id" : "bf3a11b0-ade5-4d61-99a1-39ce454b5794",
    "prId" : 442,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/442#pullrequestreview-153137989",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51257b31-0806-4a35-bda4-e932117a9e10",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Why do file_store and rest_store have different behaviors here?\r\nFileStore does:\r\n\r\n```\r\n        self.set_tag(run_uuid, RunTag(\r\n            key=MLFLOW_RUN_NAME, value=run_name or \"Run %s\" % num_runs))\r\n```",
        "createdAt" : "2018-09-06T20:17:53Z",
        "updatedAt" : "2018-09-06T21:28:42Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "bb4a2d98-6b19-47d5-aba2-51c0df7ca1f8",
        "parentId" : "51257b31-0806-4a35-bda4-e932117a9e10",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Good question, the FileStore default seems like an artifact of the initial release / not necessary - removed it in this PR so that the two stores behave the same. With this change users will see a run name of \"Run [run-uuid]\" in the UI instead of \"Run 1\", \"Run 2\", etc when creating runs against the FileStore, but that doesn't seem too bad",
        "createdAt" : "2018-09-06T21:56:57Z",
        "updatedAt" : "2018-09-06T21:57:20Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "0809cd7c3c6fdd2cb7cdb811e01de81f913c01b0",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +150,154 @@        run = Run.from_proto(response_proto.run)\n        if run_name:\n            self.set_tag(run.info.run_uuid, RunTag(key=MLFLOW_RUN_NAME, value=run_name))\n        return run\n"
  },
  {
    "id" : "fa4a2898-1af1-45ca-ab33-928244e9133c",
    "prId" : 402,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/402#pullrequestreview-150655992",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a429433-c130-4878-9a11-7862fc56a1e0",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Note: This is now a function!",
        "createdAt" : "2018-08-29T16:48:04Z",
        "updatedAt" : "2018-08-30T19:28:49Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "150bfb4198cd39a2e87af813fab80c630ac7feff",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +52,56 @@    \"\"\"\n\n    def __init__(self, get_host_creds):\n        super(RestStore, self).__init__()\n        self.get_host_creds = get_host_creds"
  },
  {
    "id" : "d94c1b60-cfeb-43e7-8c26-5dc8a0edf532",
    "prId" : 295,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/295#pullrequestreview-145873842",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "089e71eb-6f3f-4199-9a90-d8b7737faa04",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Orthogonal fix to the proto.",
        "createdAt" : "2018-08-13T23:36:04Z",
        "updatedAt" : "2018-08-15T02:35:44Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "502a03f3f5bb3e11b61ee6051cc1a4ef32a1b89e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +223,227 @@        search_expressions_protos = [expr.to_proto() for expr in search_expressions]\n        req_body = _message_to_json(SearchRuns(experiment_ids=experiment_ids,\n                                               anded_expressions=search_expressions_protos))\n        response_proto = self._call_endpoint(SearchRuns, req_body)\n        return [Run.from_proto(proto_run) for proto_run in response_proto.runs]"
  }
]