[
  {
    "id" : "dfc988de-373f-4b37-851b-3e62b93737c1",
    "prId" : 1171,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1171#pullrequestreview-233701270",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9182b6c-4cb6-40df-8c2d-891e784498ea",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "each artifact repo has a different implementation of `log_artifacts` that are meant to do the same thing? ? (not advocating for fixing that here)",
        "createdAt" : "2019-05-03T21:28:32Z",
        "updatedAt" : "2019-05-05T06:28:02Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "258066c8-2213-4f9c-b18c-6c266c5be3ca",
        "parentId" : "e9182b6c-4cb6-40df-8c2d-891e784498ea",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "I agree this could be centralized similarly to download artifacts. ",
        "createdAt" : "2019-05-03T23:01:07Z",
        "updatedAt" : "2019-05-05T06:28:02Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "23c61ed20a1e1523438f00290d0afb8fe4b4c2ab",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +73,77 @@                ftp.storbinary('STOR ' + os.path.basename(local_file), f)\n\n    def log_artifacts(self, local_dir, artifact_path=None):\n        dest_path = posixpath.join(self.path, artifact_path) \\\n            if artifact_path else self.path"
  },
  {
    "id" : "465bdf5c-d156-4cb9-8d5c-9405b50f5272",
    "prId" : 1171,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1171#pullrequestreview-233701367",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16aa2e52-348d-48f6-96bc-07b47f9cb8dd",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "same here the path could be weird `ftp://.../artifact/path/relative\\path`? not sure if it matters in terms of correctness but the destination path could end up being weird",
        "createdAt" : "2019-05-03T21:31:26Z",
        "updatedAt" : "2019-05-05T06:28:02Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "088b098d-67cf-431e-b15d-5a72d706b6de",
        "parentId" : "16aa2e52-348d-48f6-96bc-07b47f9cb8dd",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Good catch again. Will fix.",
        "createdAt" : "2019-05-03T23:01:46Z",
        "updatedAt" : "2019-05-05T06:28:02Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "23c61ed20a1e1523438f00290d0afb8fe4b4c2ab",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +90,94 @@                rel_path = os.path.relpath(root, local_dir)\n                rel_path = relative_path_to_artifact_path(rel_path)\n                upload_path = posixpath.join(dest_path_re, rel_path)\n            if not filenames:\n                self._mkdir(posixpath.join(self.path, upload_path))"
  },
  {
    "id" : "b62e7a97-62d3-47a9-826e-7d0a4952ffe7",
    "prId" : 779,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/779#pullrequestreview-188246966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15715a9b-b628-46cf-ba70-36d17a81519a",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Is this a correct behavior change, for list_artifacts to return an empty list as opposed to the object itself when called on a non-directory object?",
        "createdAt" : "2018-12-28T00:16:21Z",
        "updatedAt" : "2019-01-05T05:04:04Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "c2022b12-918d-474e-8d10-f993721f9b4f",
        "parentId" : "15715a9b-b628-46cf-ba70-36d17a81519a",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Yep! The existing documentation for `ArtifactRepository.list_artifacts` defines these semantics: https://github.com/mlflow/mlflow/blob/c8a2c489940436cdf73d09726876206c6f17c670/mlflow/store/artifact_repo.py#L46-L47",
        "createdAt" : "2018-12-28T10:04:48Z",
        "updatedAt" : "2019-01-05T05:04:04Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f2f339e6dc13da1c62eafb5f9da9da4dc4db1c7",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +101,105 @@            artifact_dir = self.path\n            list_dir = self.get_path_module().join(artifact_dir, path) if path else artifact_dir\n            if not self._is_dir(list_dir):\n                return []\n            artifact_files = ftp.nlst(list_dir)"
  },
  {
    "id" : "52e021ea-def4-4d99-bd87-f765823eb264",
    "prId" : 287,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/287#pullrequestreview-153624300",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7d2ea1b-b2b2-4376-ba48-e8759c5db671",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "I think if we import the contextmanager annotation (`from contextlib import contextmanager`) and add it to this method we can write it such that we use & close a fresh FTP client for each method. For example:\r\n\r\n```\r\n@contextmanager\r\ndef get_ftp_client(self):\r\n  ftp = Ftp()\r\n  ftp.connect(...)\r\n  ftp.login(...)\r\n  yield ftp\r\n  ftp.close()\r\n```\r\n\r\nThen in each of the methods that uses an FTP client, we can write:\r\n```\r\nwith self.get_ftp_client() as ftp:\r\n  # Do things with ftp client. The client is automatically closed when the 'with' block\r\n  # exits, including if we exit the 'with' block with an exception\r\n  ftp.cwd(...)\r\n```\r\n\r\nThe advantage of this is that we're guaranteed to use a fresh client in each method & close the client even if the method raises an exception. This will incur an extra overhead of logging into the FTP server in each method, but the overhead seems worthwhile if it allows us to avoid concerns about thread-safety.\r\n",
        "createdAt" : "2018-09-10T04:52:58Z",
        "updatedAt" : "2018-09-27T05:15:13Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "9dde19646bc3b1ac1a3480e61da0a6a0ff0a7b18",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +31,35 @@\n    @contextmanager\n    def get_ftp_client(self):\n        ftp = FTP()\n        ftp.connect(self.config['host'], self.config['port'])"
  }
]