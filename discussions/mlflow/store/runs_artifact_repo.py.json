[
  {
    "id" : "f1780663-3997-44e1-8549-b7354f8a3d1a",
    "prId" : 1169,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1169#pullrequestreview-230874782",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bd940ea-3d64-470a-9bdf-fbef6f9fe341",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Just to confirm, is this TODO a reference to supporting URIs like `run://tracking-server-hostname/run-id/path/to/run` (from your [RFC doc](https://docs.google.com/document/d/1gSoDFncrBxFe3kBrFEc8zhBG-JhE0QvNuictB4aG6vY/edit#heading=h.8piqid4eb5v6))?",
        "createdAt" : "2019-04-25T20:34:56Z",
        "updatedAt" : "2019-04-25T22:51:46Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "525c568c-b9ff-47f6-8013-50d79a394049",
        "parentId" : "0bd940ea-3d64-470a-9bdf-fbef6f9fe341",
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "yep",
        "createdAt" : "2019-04-25T20:43:31Z",
        "updatedAt" : "2019-04-25T22:51:46Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f02e38954bd9ba508309bc4ad1758c9eacf340c",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@                \"Not a proper runs:/ URI: %s. \" % run_uri +\n                \"Runs URIs must be of the form 'runs:/<run_id>/run-relative/path/to/artifact'\")\n        # hostname = parsed.netloc  # TODO: support later\n\n        path = parsed.path"
  },
  {
    "id" : "60abc57f-6db9-438c-b4a6-9562149124f4",
    "prId" : 1169,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1169#pullrequestreview-230885826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58430f42-4036-4b9f-8f7d-f75556aaa171",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Makes sense to prevent infinite loops (I also can't see a valid use case for a run/experiment having a `runs:/...` artifact root directory)\r\n\r\nNot for this PR, but we could consider enforcing this at experiment creation time (i.e. error out if a user tries to create an experiment with a runs:/ artifact URI, since child runs under that experiment would inherit the runs:/ artifact URI prefix from their parent experiment)",
        "createdAt" : "2019-04-25T21:08:11Z",
        "updatedAt" : "2019-04-25T22:51:46Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f02e38954bd9ba508309bc4ad1758c9eacf340c",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +21,25 @@        (run_id, artifact_path) = RunsArtifactRepository.parse_runs_uri(artifact_uri)\n        uri = get_artifact_uri(run_id, artifact_path)\n        assert urllib.parse.urlparse(uri).scheme != \"runs\"  # avoid an infinite loop\n        super(RunsArtifactRepository, self).__init__(artifact_uri)\n        self.repo = get_artifact_repository(uri)"
  },
  {
    "id" : "0cdf217e-75f4-4556-8c47-0dbfb3f45acf",
    "prId" : 1169,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1169#pullrequestreview-230898393",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "775e5f95-32b1-41d9-b8d2-1ccab9d86f5c",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Out of curiosity, are these write path APIs meant to be used in the common case or just included for parity w/ other artifact repos? It makes sense that the read path APIs (like `download_artifacts`) would be used e.g. for `load_model`",
        "createdAt" : "2019-04-25T21:26:14Z",
        "updatedAt" : "2019-04-25T22:51:46Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "88ea63b7-f09d-4f88-b45f-7439d920dafc",
        "parentId" : "775e5f95-32b1-41d9-b8d2-1ccab9d86f5c",
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "It's mostly for parity as there is no use case right now for writing using the runs:/ URI. The alternative would have been to include the runs URI parsing logic in something like `data.download_uri` or `tracking.utils._download_artifact_from_uri`. But creating RunsArtifactRepository seemed like an easier way to guarantee everything dealing with Runs URI would go through a single code path. ",
        "createdAt" : "2019-04-25T21:40:03Z",
        "updatedAt" : "2019-04-25T22:51:46Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f02e38954bd9ba508309bc4ad1758c9eacf340c",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +67,71 @@                              artifact\n        \"\"\"\n        self.repo.log_artifact(local_file, artifact_path)\n\n    def log_artifacts(self, local_dir, artifact_path=None):"
  }
]