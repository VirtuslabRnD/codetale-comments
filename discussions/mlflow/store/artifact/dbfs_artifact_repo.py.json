[
  {
    "id" : "fbb2098e-8fae-43d2-87c0-c790a19c12a2",
    "prId" : 3119,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3119#pullrequestreview-456001097",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38efd6cc-a8ad-42d4-ba75-2719438e70f2",
        "parentId" : null,
        "authorId" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "body" : "Similar comment to above with regards to order",
        "createdAt" : "2020-07-27T18:28:44Z",
        "updatedAt" : "2020-08-03T06:34:09Z",
        "lastEditedBy" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d857badd9b4f4e208367ba1e6c5b96e7c80b8a2b",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +50,54 @@            self.get_host_creds = lambda: hostcreds_from_uri\n        else:\n            self.get_host_creds = _get_host_creds_from_default_store()\n\n    def _databricks_api_request(self, endpoint, **kwargs):"
  },
  {
    "id" : "e841e58f-ce7d-4e13-99e4-8c778d61b1b8",
    "prId" : 3119,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3119#pullrequestreview-457282502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d58f0a29-a1f3-4d64-80f4-0749d19ad865",
        "parentId" : null,
        "authorId" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "body" : "Just confirming my understanding: this check means that the profile refers to the current workspace right?",
        "createdAt" : "2020-07-27T18:36:12Z",
        "updatedAt" : "2020-08-03T06:34:09Z",
        "lastEditedBy" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "tags" : [
        ]
      },
      {
        "id" : "26401d7d-df0c-4fd5-b03b-70511b5f0750",
        "parentId" : "d58f0a29-a1f3-4d64-80f4-0749d19ad865",
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "yeah",
        "createdAt" : "2020-07-29T07:59:21Z",
        "updatedAt" : "2020-08-03T06:34:09Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "d857badd9b4f4e208367ba1e6c5b96e7c80b8a2b",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +197,201 @@            and os.environ.get(USE_FUSE_ENV_VAR, \"\").lower() != \"false\" \\\n            and not artifact_uri.startswith(\"dbfs:/databricks/mlflow-registry\") \\\n            and (db_profile_uri is None or db_profile_uri == 'databricks'):\n        # If the DBFS FUSE mount is available, write artifacts directly to\n        # /dbfs/... using local filesystem APIs."
  },
  {
    "id" : "0dd04aad-a8ba-457b-9705-7213fd54c07c",
    "prId" : 2911,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2911#pullrequestreview-427471776",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec0a8f1c-074d-4307-9c7c-40b65e966f4a",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "@arjundc-db Can we add a test for this method against various types of URIs to ensure that the correct repo instances are returned? This will help ensure that we're not accidentally returning ACL'ed `DatabricksArtifactRepo` instances for non-ACL'ed DBFS URIs.",
        "createdAt" : "2020-06-08T21:05:50Z",
        "updatedAt" : "2020-06-16T03:14:43Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "166e99c5-5b83-49f6-baf0-bd1a28840f81",
        "parentId" : "ec0a8f1c-074d-4307-9c7c-40b65e966f4a",
        "authorId" : "7dc30493-29f9-4bc4-bf26-00054b8b0b57",
        "body" : "@dbczumar I added a single test here : https://github.com/mlflow/mlflow/pull/2911/files#diff-f78e8f823247e329ce4e4d004bd40f7cR44-R47\r\nI could add more tests if needed, however since it only depends on the prefix \"`databricks/mlflow-tracking/`\", adding additional tests may be redundant. \r\nNote that the use of `extract_and_normalize_path` is not used here.",
        "createdAt" : "2020-06-09T19:15:18Z",
        "updatedAt" : "2020-06-16T03:14:43Z",
        "lastEditedBy" : "7dc30493-29f9-4bc4-bf26-00054b8b0b57",
        "tags" : [
        ]
      },
      {
        "id" : "afff89bb-50b0-4283-a9b8-926c24c2d6bb",
        "parentId" : "ec0a8f1c-074d-4307-9c7c-40b65e966f4a",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Looks great - sorry for missing this!",
        "createdAt" : "2020-06-09T19:24:10Z",
        "updatedAt" : "2020-06-16T03:14:43Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfc7f6039b20fcfa0282c13f7d30a6f07a1bc1ad",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +163,167 @@    This factory method is used with URIs of the form ``dbfs:/<path>``. DBFS-backed artifact\n    storage can only be used together with the RestStore.\n\n    In the special case where the URI is of the form\n    `dbfs:/databricks/mlflow-tracking/<Exp-ID>/<Run-ID>/<path>',"
  },
  {
    "id" : "58ac27f8-dc36-4938-bd5f-bc7ba1932ade",
    "prId" : 1900,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1900#pullrequestreview-297232783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c833239-0bfc-4be1-8fa7-e72e1bec74b5",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "nit: import ordering",
        "createdAt" : "2019-10-03T17:57:18Z",
        "updatedAt" : "2019-10-04T03:57:44Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "c2c92c54-e312-4a9d-b6d3-74b255287fd5",
        "parentId" : "7c833239-0bfc-4be1-8fa7-e72e1bec74b5",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "IntelliJ has a brain! Does what it likes...\r\nTried some local ordering.",
        "createdAt" : "2019-10-04T01:55:59Z",
        "updatedAt" : "2019-10-04T03:57:44Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "a41e0a66834cf4a74f64d320679def94b315f6f3",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +5,9 @@from mlflow.entities import FileInfo\nfrom mlflow.exceptions import MlflowException\nfrom mlflow.store.tracking.rest_store import RestStore\nfrom mlflow.store.artifact.artifact_repo import ArtifactRepository\nfrom mlflow.store.artifact.local_artifact_repo import LocalArtifactRepository"
  }
]