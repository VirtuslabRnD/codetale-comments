[
  {
    "id" : "02dd85b0-38c1-4f1e-84a0-e9b1ab5bcb78",
    "prId" : 1329,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1329#pullrequestreview-244474255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af28a2d3-ba40-4d33-bdce-844ae3d1c16e",
        "parentId" : null,
        "authorId" : "cd1262b3-5ec0-4b02-b7a7-649de3e63005",
        "body" : "We've reworked some of the sagemaker code to run internally and `cpu_count` from `multiprocessing` doesn't work. More context in this \"CPU Issues\" section of this post (which is not mine): http://blog.tabanpour.info/projects/2018/09/07/tf-docker-kube.html",
        "createdAt" : "2019-05-31T18:45:43Z",
        "updatedAt" : "2019-05-31T22:46:27Z",
        "lastEditedBy" : "cd1262b3-5ec0-4b02-b7a7-649de3e63005",
        "tags" : [
        ]
      },
      {
        "id" : "f0816b6d-839f-4500-b271-b9bf0444bc81",
        "parentId" : "af28a2d3-ba40-4d33-bdce-844ae3d1c16e",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Thanks @ahutterTA! This might be out of scope for this PR but we will definitely look into that.",
        "createdAt" : "2019-05-31T19:08:07Z",
        "updatedAt" : "2019-05-31T22:46:27Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d5309f53652719acc6f2486807a7d67f0a3620d",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +134,138 @@    os.system('python -c\"from mlflow.version import VERSION as V; print(V)\"')\n    cmd = (\"gunicorn --timeout 60 -k gevent -b unix:/tmp/gunicorn.sock -w {nworkers} \" +\n           \"mlflow.models.container.scoring_server.wsgi:app\").format(nworkers=cpu_count)\n    bash_cmds.append(cmd)\n    gunicorn = Popen([\"/bin/bash\", \"-c\", \" && \".join(bash_cmds)])"
  },
  {
    "id" : "c24b268e-b9d9-41e9-b69a-fc810beeb67d",
    "prId" : 1329,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1329#pullrequestreview-244479365",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65d068b1-8ef5-4b13-b3af-6ee7504b66c1",
        "parentId" : null,
        "authorId" : "cd1262b3-5ec0-4b02-b7a7-649de3e63005",
        "body" : "Isn't this guaranteed to fail if `DISABLE_ENV_CREATION` is set and `pyfunc.ENV` is present in conf?",
        "createdAt" : "2019-05-31T19:14:32Z",
        "updatedAt" : "2019-05-31T22:46:27Z",
        "lastEditedBy" : "cd1262b3-5ec0-4b02-b7a7-649de3e63005",
        "tags" : [
        ]
      },
      {
        "id" : "69bdcc77-74c7-46d7-be4f-3a3f646f92b3",
        "parentId" : "65d068b1-8ef5-4b13-b3af-6ee7504b66c1",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "DISABLE_ENV_CREATION is set iff you have already copied the model in and initialized its environment. E.g. if you build your image with mlflow models build-docker, the model is copied into the container and everything is set up. Sagemaker on the other hand mounts model at runtime so we need to create the environment then.",
        "createdAt" : "2019-05-31T19:18:35Z",
        "updatedAt" : "2019-05-31T22:46:27Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "7e28cb9f-ad5e-4719-8840-e252da4a7eac",
        "parentId" : "65d068b1-8ef5-4b13-b3af-6ee7504b66c1",
        "authorId" : "cd1262b3-5ec0-4b02-b7a7-649de3e63005",
        "body" : "O cool. This was another thing we ran into with trying to use the sagemaker code locally. We're restricted to a readonly file system in prod so we had to push the env setup into the image creation.",
        "createdAt" : "2019-05-31T19:21:02Z",
        "updatedAt" : "2019-05-31T22:46:27Z",
        "lastEditedBy" : "cd1262b3-5ec0-4b02-b7a7-649de3e63005",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d5309f53652719acc6f2486807a7d67f0a3620d",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +123,127 @@        if not os.environ.get(DISABLE_ENV_CREATION) == \"true\":\n            _install_pyfunc_deps(MODEL_PATH, install_mlflow=True)\n        bash_cmds += [\"source /miniconda/bin/activate custom_env\"]\n    nginx_conf = resource_filename(mlflow.models.__name__, \"container/scoring_server/nginx.conf\")\n    nginx = Popen(['nginx', '-c', nginx_conf])"
  },
  {
    "id" : "3c2f87c3-16ee-4f0b-90f2-067da8b1a5d2",
    "prId" : 1329,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1329#pullrequestreview-244496617",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8056d501-5f71-46b1-b010-4261eac6ce03",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Ah nice, guess activating the conda env in the container wasn't that bad after all...",
        "createdAt" : "2019-05-31T20:05:09Z",
        "updatedAt" : "2019-05-31T22:46:27Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d5309f53652719acc6f2486807a7d67f0a3620d",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +102,106 @@                raise Exception(\"Failed to create model environment.\")\n            has_env = True\n    activate_cmd = [\"source /miniconda/bin/activate custom_env\"] if has_env else []\n    # NB: install gunicorn[gevent] from pip rather than from conda because gunicorn is already\n    # dependency of mlflow on pip and we expect mlflow to be part of the environment."
  }
]