[
  {
    "id" : "4b8d478b-c3b0-4bc4-ab7a-13c622cf5ecb",
    "prId" : 4444,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4444#pullrequestreview-680364344",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6a29177-6686-4311-a471-253ebf806fd9",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Used a [forward-reference](https://www.python.org/dev/peps/pep-0484/#forward-references) here to avoid `MlflowInferableDataset is not defined` error",
        "createdAt" : "2021-06-10T05:47:09Z",
        "updatedAt" : "2021-06-10T13:46:39Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "7740114f4c1fc6f1a4172fe73247bfa5e3fe91fe",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +97,101 @@\ndef infer_signature(\n    model_input: Any, model_output: \"MlflowInferableDataset\" = None\n) -> ModelSignature:\n    \"\"\""
  },
  {
    "id" : "c4d67693-ed86-4c06-8567-c6ef81f19ff9",
    "prId" : 4444,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4444#pullrequestreview-680470597",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4131e42e-2282-414c-abeb-7b4763a570ca",
        "parentId" : null,
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "Could you explain when \"TYPE_CHECKING\" is True ? When running type check ? When doing type checking will it import pyspark ?",
        "createdAt" : "2021-06-10T07:28:29Z",
        "updatedAt" : "2021-06-10T07:28:29Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      },
      {
        "id" : "ae04b8c3-ced1-449e-9f8c-9e602781f610",
        "parentId" : "4131e42e-2282-414c-abeb-7b4763a570ca",
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "I roughly search for this, seems when running type checking no code will be executed. \r\n> The type checker never executes your code: instead, it analyzes it. Type checkers are implemented in pretty much the same way compilers are implemented, minus the \"generate bytecode/assembly/machine code\" step.\r\n\r\nBut if it don't execute code, how does it enter the `if` branch ?",
        "createdAt" : "2021-06-10T07:30:27Z",
        "updatedAt" : "2021-06-10T07:30:28Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      },
      {
        "id" : "c594f714-76fd-4996-877f-7226a0acfdc5",
        "parentId" : "4131e42e-2282-414c-abeb-7b4763a570ca",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "When `mypy` analyzes code, it does recognize modules under `if TYPE_CHECKING:`.\r\n\r\n```python\r\nfrom typing import TYPE_CHECKING\r\n\r\n\r\nif TYPE_CHECKING:\r\n    import foo\r\n```\r\n\r\n```\r\n% mypy a.py\r\na.py:5: error: Cannot find implementation or library stub for module named 'foo'\r\na.py:5: note: See https://mypy.readthedocs.io/en/latest/running_mypy.html#missing-imports\r\nFound 1 error in 1 file (checked 1 source file)\r\n```\r\n\r\n",
        "createdAt" : "2021-06-10T08:06:26Z",
        "updatedAt" : "2021-06-10T08:08:19Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "7740114f4c1fc6f1a4172fe73247bfa5e3fe91fe",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +14,18 @@\n# At runtime, we don't need  `pyspark.sql.dataframe`\nif TYPE_CHECKING:\n    try:\n        import pyspark.sql.dataframe"
  },
  {
    "id" : "c3fc0866-788e-4da4-a974-d0663282a641",
    "prId" : 2698,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2698#pullrequestreview-397561666",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8bc95e73-ab1b-44ff-9a0b-c1653d1f8a31",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Do we actually support this one? seems like the TypeVar does not include it.",
        "createdAt" : "2020-04-21T17:34:11Z",
        "updatedAt" : "2020-04-24T16:46:13Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "2d95f87e-f70c-4da5-898d-2305e43e2f39",
        "parentId" : "8bc95e73-ab1b-44ff-9a0b-c1653d1f8a31",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "We do support it. The typevar can not have it because it requires importing spark. The typevar is more for a hint, the types are not enforced. I guess alternatively we could mode infer)signature with spark frame into mfllow.spark package but I think this one is nicer, despite the missing type. Maybe I can make the typevar conditional depending on whether pyspark is available.",
        "createdAt" : "2020-04-21T18:21:20Z",
        "updatedAt" : "2020-04-24T16:46:13Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "26f312989d528d2bb4e726cb3d62af0b72ab6829",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +97,101 @@      - dictionary of { name -> numpy.ndarray}\n      - numpy.ndarray\n      - pyspark.sql.DataFrame\n\n    The element types should be mappable to one of :py:class:`mlflow.types.DataType`."
  }
]