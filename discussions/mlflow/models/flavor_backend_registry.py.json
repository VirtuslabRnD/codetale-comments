[
  {
    "id" : "57c2fe3b-dba3-46cc-bca1-2e31d6aae0fc",
    "prId" : 1257,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1257#pullrequestreview-238994657",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dec4ab21-7d0a-4790-92c4-faccadbcf13b",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Should we sort this somehow so that it's deterministic? I think in Python 3 dicts are ordered but in Python 2 they aren't.",
        "createdAt" : "2019-05-15T23:41:19Z",
        "updatedAt" : "2019-05-17T21:35:56Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "c4aef45d-218f-4ee1-8e56-7f6e789a1030",
        "parentId" : "dec4ab21-7d0a-4790-92c4-faccadbcf13b",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "We could also log the name of the flavor that's ultimately selected here for visibility to the user",
        "createdAt" : "2019-05-15T23:52:34Z",
        "updatedAt" : "2019-05-17T21:35:56Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "77d98f14-f7b1-4fb8-a2aa-edaccc4d312e",
        "parentId" : "dec4ab21-7d0a-4790-92c4-faccadbcf13b",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "1. Good question. I chose to let the model to define the order, at least in python3. It is non-deterministic in python2, but python2 is being phased out and this should only matter in case where there is multiple available flavor backends. The alternative is to define a flavor order in mlflow. That would be deterministic for both python 2 and 3 but would also give less flexibility to custom flavor authors. I would also be worried that we would need to keep that order in future versions of mlflow. I think I would prefer to keep it as is and if there is a need to have deterministic flavor selection we can add an optional flavor argument specifying which flavor should be used.\r\n\r\n2. That is a good point. I'll add eprint.  ",
        "createdAt" : "2019-05-16T03:54:54Z",
        "updatedAt" : "2019-05-17T21:35:56Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "6f7ab6a2-1046-4a16-96a2-49aeb3d8f9fa",
        "parentId" : "dec4ab21-7d0a-4790-92c4-faccadbcf13b",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Got it, yeah having the model specify the order makes sense, as does having users pass an optional flavor argument for determinism. If we really needed to we could make an additive change post-1.0 to allow the user to specify a default flavor ordering via an additional yaml field (although I guess 1.0 would not honor this ordering), but I think explicitly passing the flavor should address most use cases.",
        "createdAt" : "2019-05-17T15:35:34Z",
        "updatedAt" : "2019-05-17T21:35:56Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "91f1f3368065ace10cc8d07e5fffb77dc4d75302",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +18,22 @@\ndef get_flavor_backend(model, **kwargs):\n    for flavor_name, flavor_config in model.flavors.items():\n        if flavor_name in _flavor_backends:\n            backend = _flavor_backends[flavor_name](flavor_config, **kwargs)"
  }
]