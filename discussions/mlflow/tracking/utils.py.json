[
  {
    "id" : "5456a480-5ac1-4f28-bae6-7881df939333",
    "prId" : 1411,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1411#pullrequestreview-246828060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "769ad5b0-2433-4c93-b472-be9554f837da",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "`FileStore` itself does the conversion so we don't need `local_file_uri_to_path` here.",
        "createdAt" : "2019-06-06T00:23:45Z",
        "updatedAt" : "2019-06-06T21:45:17Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "9308043a-7f3a-4219-a4e0-9ecf7a3eea93",
        "parentId" : "769ad5b0-2433-4c93-b472-be9554f837da",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "This same function is repeated multiple places. Can we unify?",
        "createdAt" : "2019-06-06T05:12:50Z",
        "updatedAt" : "2019-06-06T21:45:17Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      },
      {
        "id" : "d5574841-7b55-4543-bc57-3066f317ca0a",
        "parentId" : "769ad5b0-2433-4c93-b472-be9554f837da",
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "Unfortunately the MLflowClient one doesn't use a unique artifact repo (reuses `store_uri`) and the server one accepts a different one. Not sure if we want to change that behavior...",
        "createdAt" : "2019-06-06T18:05:11Z",
        "updatedAt" : "2019-06-06T21:45:17Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "df968ea1-7f95-4622-9391-e3bd171655d9",
        "parentId" : "769ad5b0-2433-4c93-b472-be9554f837da",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "indeed. but the api could have 2 arguments `store_uri` and `artifact_uri` and the caller can send in the same one. No?",
        "createdAt" : "2019-06-06T21:35:58Z",
        "updatedAt" : "2019-06-06T21:45:17Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ace610fd660e5077ab8a64278a308c14b860225",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +89,93 @@\ndef _get_file_store(store_uri, **_):\n    return FileStore(store_uri, store_uri)\n\n"
  },
  {
    "id" : "d72f783b-d199-46aa-a993-a31f917d0ea3",
    "prId" : 1171,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1171#pullrequestreview-233703555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fa6cc7b-09c6-41e8-afcf-5b98c2e4cfaa",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "does this have any downstream effects?",
        "createdAt" : "2019-05-03T21:42:37Z",
        "updatedAt" : "2019-05-05T06:28:02Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "6d757d9c-05d4-49eb-b418-ddbacdd4181c",
        "parentId" : "1fa6cc7b-09c6-41e8-afcf-5b98c2e4cfaa",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Not that I know of as long as all of our code handles file:// uris correctly. Hopefully our tests would catch these. ",
        "createdAt" : "2019-05-03T23:15:18Z",
        "updatedAt" : "2019-05-05T06:28:02Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "23c61ed20a1e1523438f00290d0afb8fe4b4c2ab",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +70,74 @@        return env.get_env(_TRACKING_URI_ENV_VAR)\n    else:\n        return path_to_local_file_uri(os.path.abspath(DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH))\n\n"
  },
  {
    "id" : "25235050-5cc1-4d10-a00f-c4b13a374346",
    "prId" : 1171,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1171#pullrequestreview-233749313",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5699ad80-d38f-4bdb-bc5d-a1de2951c098",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "do we expect `store_uri` to be ever `None`? or just an empty string? `local_file_uri_to_path` won't be happy if `store_uri` None...",
        "createdAt" : "2019-05-03T21:47:32Z",
        "updatedAt" : "2019-05-05T06:28:02Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "251366d7-728f-4e26-931e-c2ebf2233aed",
        "parentId" : "5699ad80-d38f-4bdb-bc5d-a1de2951c098",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "I don't think we do. \r\nThis is an internal method and we are not calling it with None and I don't think we should. ",
        "createdAt" : "2019-05-03T23:16:41Z",
        "updatedAt" : "2019-05-05T06:28:02Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "a6044d9f-d88e-4ea3-bf1e-494a049ea33e",
        "parentId" : "5699ad80-d38f-4bdb-bc5d-a1de2951c098",
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "I wonder why wr had the if statement before?",
        "createdAt" : "2019-05-03T23:53:26Z",
        "updatedAt" : "2019-05-05T06:28:02Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "66b85e75-b692-4045-8513-2b73bc475a6a",
        "parentId" : "5699ad80-d38f-4bdb-bc5d-a1de2951c098",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Good question. It looks like FileStore actually accepts uri=None in which case it uses default artifact root directory. \r\nHowever, neither Client nor Fluent api would ever call _get_file_store with None for store uri as both use default mlflow tracking uri in that case. And as far as I know, there are no other callers.\r\n\r\nI think it makes sense to have only one source of default value - default tracking uri filled in by client or fluent api. \r\nSo, in conclusion, I think we should not allow store_uri=None here and we should remove the None handling logic from FileStore as well.",
        "createdAt" : "2019-05-04T19:54:05Z",
        "updatedAt" : "2019-05-05T06:28:02Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "23c61ed20a1e1523438f00290d0afb8fe4b4c2ab",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +90,94 @@\ndef _get_file_store(store_uri, **_):\n    return FileStore(file_utils.local_file_uri_to_path(store_uri), store_uri)\n\n"
  },
  {
    "id" : "216975f2-5bc0-4441-bfa0-0d7b5210793d",
    "prId" : 881,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/881#pullrequestreview-201712136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7f345de-f0f5-423e-9014-3b8f403545ed",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "As far as I can tell, `artifact_uri` is only provided by `_download_artifact_from_uri` in order to call `ArtifactRepository.from_artifact_uri`. This is something that may be good to remove in a follow-up PR, assuming we can remove `store` from the arguments of `ArtifactRepostiory`.",
        "createdAt" : "2019-02-08T18:04:59Z",
        "updatedAt" : "2019-02-21T15:57:15Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "33d6b579fdef3235778413e856f5be3e6e5563d6",
    "line" : 155,
    "diffHunk" : "@@ -1,1 +268,272 @@\n\ndef _get_store(store_uri=None, artifact_uri=None):\n\n    return _tracking_store_registry.get_store(store_uri, artifact_uri)"
  },
  {
    "id" : "1e1ee5ab-3202-42ef-8064-49b3610fdf78",
    "prId" : 881,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/881#pullrequestreview-204729429",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14324d87-6fac-4ae6-a142-2f98734aecf2",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Mind adding a brief class comment on what this is responsible for?",
        "createdAt" : "2019-02-08T18:06:15Z",
        "updatedAt" : "2019-02-21T15:57:15Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "cb15a2f0-cc34-4791-94bc-4f1c6c65e527",
        "parentId" : "14324d87-6fac-4ae6-a142-2f98734aecf2",
        "authorId" : "12f30e08-b03c-4f35-b326-621e70f6dae6",
        "body" : "Done, please take a look to see if they are clear enough.",
        "createdAt" : "2019-02-18T10:59:41Z",
        "updatedAt" : "2019-02-21T15:57:15Z",
        "lastEditedBy" : "12f30e08-b03c-4f35-b326-621e70f6dae6",
        "tags" : [
        ]
      }
    ],
    "commit" : "33d6b579fdef3235778413e856f5be3e6e5563d6",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +189,193 @@\n\nclass TrackingStoreRegistry:\n    \"\"\"Scheme-based registry for tracking store implementations\n"
  },
  {
    "id" : "6fa6833b-f256-4bd8-b380-f0e468a728dc",
    "prId" : 299,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/299#pullrequestreview-146142491",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6ab0a18-e002-47ff-9001-212824a4f7da",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "This stuff could also be in `api`, I just split it out for the sake of code readability.",
        "createdAt" : "2018-08-14T16:16:42Z",
        "updatedAt" : "2018-08-17T01:34:24Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c7575987b66727ee8e3cb5f75da4bfc748c2db3",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@from __future__ import print_function\n\nimport os"
  },
  {
    "id" : "af458581-561b-4b55-b64a-b5692618ce29",
    "prId" : 299,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/299#pullrequestreview-147063106",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cacbfa1-3676-44d6-bcb9-55ecf13f6439",
        "parentId" : null,
        "authorId" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "body" : "It seems that this and `get_tracking_uri` are public functions, so do we want to move them or keep them in `tracking`? The rest of the stuff in this module is private. I guess you can set them through `mlflow` directly so it may be OK to move them, but it might also be better to just keep this module private.",
        "createdAt" : "2018-08-16T22:32:31Z",
        "updatedAt" : "2018-08-17T01:34:24Z",
        "lastEditedBy" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "tags" : [
        ]
      },
      {
        "id" : "7ed3af2d-8051-40c3-bd0c-f94e8f948a46",
        "parentId" : "0cacbfa1-3676-44d6-bcb9-55ecf13f6439",
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "The dependency structure is a bit weird. `_get_store()` has a lot of helper utilities to it (which is why I wanted to move it to its own py file), and it relies on `_tracking_uri` which is set by `set_tracking_uri`. `fluent` and `service` depend on `utils`, so I can't move `_tracking_uri`.\r\n\r\nI could move the set/get methods to mutate a global specified in `utils.py`, but I'm not sure that's cleaner.",
        "createdAt" : "2018-08-16T23:58:56Z",
        "updatedAt" : "2018-08-17T01:34:24Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c7575987b66727ee8e3cb5f75da4bfc748c2db3",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +19,23 @@\n\ndef set_tracking_uri(uri):\n    \"\"\"\n    Set the tracking server URI to the passed-in value. This does not affect the"
  }
]