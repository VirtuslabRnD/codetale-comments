[
  {
    "id" : "1fb00c8c-6c5f-4b6f-b9c3-e38974a12773",
    "prId" : 226,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/226#pullrequestreview-143033278",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8eae0fbb-237d-4ba3-a0f6-fbc56153407a",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "I wonder if we can just remove the handling of legacy `run_info`s (we only need to do that for runs created before we started storing artifact URIs in runs) & it seems it'd simplify our logic in a number of places",
        "createdAt" : "2018-08-02T07:12:30Z",
        "updatedAt" : "2018-08-03T21:46:27Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "5574e0aa-ccb7-46bb-bf24-21ae84f0f403",
        "parentId" : "8eae0fbb-237d-4ba3-a0f6-fbc56153407a",
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "I think we probably should do that in a different PR to simplify this one.",
        "createdAt" : "2018-08-03T01:59:29Z",
        "updatedAt" : "2018-08-03T21:46:27Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a31bd46692e58bead8b0d2f1d2b924ed1263961",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +227,231 @@\n\ndef _get_artifact_repo(run_info, store):\n    if run_info.artifact_uri:\n        return ArtifactRepository.from_artifact_uri(run_info.artifact_uri, store)"
  },
  {
    "id" : "a70c8591-96f7-4f3a-a01e-a23975a9be42",
    "prId" : 90,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/90#pullrequestreview-132636069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ebf4c400-a16c-4b8d-ba27-3ae11a334276",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "NB: If the user follows the instructions provided by the error (setting `GIT_PYTHON_REFRESH=quiet`), then the import no longer throws, but use of git instead throws `GitCommandNotFound`.",
        "createdAt" : "2018-06-27T22:48:06Z",
        "updatedAt" : "2018-06-27T23:02:18Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "49afed23e7a2ec1c68f13c33cb147719b2ccac38",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +365,369 @@        commit = repo.head.commit.hexsha\n        return commit\n    except (InvalidGitRepositoryError, GitCommandNotFound, ValueError):\n        return None"
  },
  {
    "id" : "04f6acd3-cc9c-48d8-9aa5-1346a6eaa7ab",
    "prId" : 90,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/90#pullrequestreview-132915480",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47d02ca5-fe5f-4dda-ae36-28c987b4cf1f",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Looks good, would be nice to add a unit test in `tests/tracking/test_tracking.py` for the case where `git` isn't on the PATH - for example we test the desired behavior in `projects.run` when `conda` isn't installed [here](https://github.com/databricks/mlflow/blob/07ffae5106b4c65958892358e26caeeaeec2bdb1/tests/projects/test_projects.py#L68)",
        "createdAt" : "2018-06-28T06:05:14Z",
        "updatedAt" : "2018-06-28T06:07:48Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "8100598f-ddf6-4bd5-9407-5a00c5af86ec",
        "parentId" : "47d02ca5-fe5f-4dda-ae36-28c987b4cf1f",
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "For some reason, changing the PATH in the test itself doesn't cause an appropriate error to be thrown. Instead, gitpython successfully finds git nevertheless. I am not sure it's worth debugging at this time.",
        "createdAt" : "2018-06-28T16:10:34Z",
        "updatedAt" : "2018-06-28T16:10:34Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "49afed23e7a2ec1c68f13c33cb147719b2ccac38",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +352,356 @@\n\ndef _get_git_commit(path):\n    try:\n        from git import Repo, InvalidGitRepositoryError, GitCommandNotFound"
  },
  {
    "id" : "17a65058-b7ce-4056-87f1-501374947cc6",
    "prId" : 82,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/82#pullrequestreview-134210002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ba454fc-38f9-4888-a8b0-151eac6a8699",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Maybe we should also allow for passing a `tracking_uri` to get run information from a remote tracking server (e.g. Databricks)?",
        "createdAt" : "2018-06-28T02:11:13Z",
        "updatedAt" : "2018-07-17T21:34:14Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "53b7a873-c178-4bb2-802d-e93ec47bb2c9",
        "parentId" : "1ba454fc-38f9-4888-a8b0-151eac6a8699",
        "authorId" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "body" : "I think we'd have to put that on all methods to be consistent, so I prefer to require people to do `set_tracking_uri` right now.",
        "createdAt" : "2018-07-04T00:53:12Z",
        "updatedAt" : "2018-07-17T21:34:14Z",
        "lastEditedBy" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "136647f660211e2fdf758181d335ad8eb89a9cd4",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +210,214 @@\n\ndef get_run(run_uuid):\n    \"\"\" Returns the run with the specified run UUID from the current tracking server.\"\"\"\n    return _get_store().get_run(run_uuid)"
  }
]