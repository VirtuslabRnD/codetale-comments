[
  {
    "id" : "328019f2-cf76-4e24-b3b3-347e00c823b5",
    "prId" : 4270,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4270#pullrequestreview-640526578",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e86aca93-ce9a-4378-af22-487938d9c7d8",
        "parentId" : null,
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "Note: check nested model",
        "createdAt" : "2021-04-21T00:14:36Z",
        "updatedAt" : "2021-05-05T02:46:16Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "9746c89394a56e29985e2e7c0b2a9de1cc1dfa8b",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +103,107 @@            )\n        elif _is_parameter_search_model(spark_model):\n            return _should_log_model(spark_model.bestModel)\n        else:\n            return True"
  },
  {
    "id" : "026984f1-9e2d-49a5-8711-db9510b707c4",
    "prId" : 4270,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4270#pullrequestreview-642841090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a477aaf7-34ac-4308-83fb-347eaceb3744",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "@WeichenXu123 Can we also log the best parameters to the parent run after the hyperparameter sweep is complete? We do this for `sklearn` and MLflow + hyperopt, and I think it would be a nice addition here.\r\n\r\nAs an example, see:\r\n\r\n```\r\nimport mlflow\r\nmlflow.sklearn.autolog()\r\n\r\nfrom sklearn import svm, datasets\r\nfrom sklearn.model_selection import GridSearchCV\r\n\r\niris = datasets.load_iris()\r\nparameters = {\"kernel\": (\"linear\", \"rbf\"), \"C\": [1, 5, 10]}\r\nsvc = svm.SVC()\r\nclf = GridSearchCV(svc, parameters, n_jobs=1, return_train_score=True, refit=True)\r\nclf.fit(iris.data, iris.target)\r\n```\r\n\r\nwhich logs the following optimal params to the parent run:\r\n\r\n```\r\n{'best_C': '5', 'best_kernel': 'rbf'}\r\n```",
        "createdAt" : "2021-04-23T01:09:05Z",
        "updatedAt" : "2021-05-05T02:46:16Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9746c89394a56e29985e2e7c0b2a9de1cc1dfa8b",
    "line" : 488,
    "diffHunk" : "@@ -1,1 +578,582 @@                estimator, estimator._autologging_metadata.uid_to_indexed_name_map\n            )\n\n            metric_key, metrics = _get_param_search_metrics(estimator, spark_model)\n            _log_parameter_search_results_as_artifact("
  },
  {
    "id" : "25305b0f-7a0e-4265-ac42-3fb6864edd0c",
    "prId" : 4270,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4270#pullrequestreview-642844363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a2d2cd5-a6e5-47cc-9e2c-278cea8d2d5d",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "For sklearn, we log the CV model *and* the best model as separate artifacts. This allows users to more easily register the best model with the MLflow Model Registry. Can we do that here too?",
        "createdAt" : "2021-04-23T01:19:01Z",
        "updatedAt" : "2021-05-05T02:46:16Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9746c89394a56e29985e2e7c0b2a9de1cc1dfa8b",
    "line" : 512,
    "diffHunk" : "@@ -1,1 +602,606 @@\n        if log_models:\n            if _should_log_model(spark_model):\n                # TODO: support model signature\n                try_mlflow_log("
  },
  {
    "id" : "5914c46c-a80f-4ebc-ba56-a33f60489be1",
    "prId" : 4270,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4270#pullrequestreview-647233378",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0b23fe0-2e7f-42ce-ac45-10ecce4594d1",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Can we add tests for this function?",
        "createdAt" : "2021-04-28T07:54:23Z",
        "updatedAt" : "2021-05-05T02:46:17Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "13933d56-68fb-40fa-837b-1bb07f515dc3",
        "parentId" : "b0b23fe0-2e7f-42ce-ac45-10ecce4594d1",
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "added in `test_gen_estimator_metadata`",
        "createdAt" : "2021-04-28T15:44:26Z",
        "updatedAt" : "2021-05-05T02:46:17Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "9746c89394a56e29985e2e7c0b2a9de1cc1dfa8b",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +161,165 @@\n\ndef _get_uid_to_indexed_name_map(estimator):\n    counter = defaultdict(int)\n    uid_to_classname_and_count = {}"
  },
  {
    "id" : "b966bf16-6c97-41e1-9842-7fb46c579040",
    "prId" : 4270,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4270#pullrequestreview-648214685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a155e87c-2846-4f05-a439-9c783dd090ec",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "What would happend if we remove `json.dumps`?",
        "createdAt" : "2021-04-29T13:36:12Z",
        "updatedAt" : "2021-05-05T02:46:17Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "9746c89394a56e29985e2e7c0b2a9de1cc1dfa8b",
    "line" : 305,
    "diffHunk" : "@@ -1,1 +358,362 @@    result_dict[metric_name] = metrics\n    for param_map in param_maps:\n        result_dict[\"params\"].append(json.dumps(param_map))\n        for param_name, param_value in param_map.items():\n            result_dict[f\"param.{param_name}\"].append(param_value)"
  },
  {
    "id" : "aa14a38f-7882-4e36-acc6-75ea43c4d03a",
    "prId" : 4270,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4270#pullrequestreview-648775092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b10552a-1bff-4733-adf1-15da4925ee5e",
        "parentId" : null,
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "Note: these lines logic copied from CrossValidator/TrainValidationSplit code.",
        "createdAt" : "2021-04-30T00:19:34Z",
        "updatedAt" : "2021-05-05T02:46:17Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "9746c89394a56e29985e2e7c0b2a9de1cc1dfa8b",
    "line" : 497,
    "diffHunk" : "@@ -1,1 +587,591 @@                best_index = np.argmax(metrics)\n            else:\n                best_index = np.argmin(metrics)\n\n            # Log best_param_map as JSON artifact"
  },
  {
    "id" : "67266de1-ed07-4556-a890-c38b9349bfc9",
    "prId" : 4270,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4270#pullrequestreview-648842147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23889e02-56c8-4d84-b84d-b41fc4f113e4",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Can a pipeline contain multiple param search estimators?",
        "createdAt" : "2021-04-30T02:12:29Z",
        "updatedAt" : "2021-05-05T02:46:17Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "c8120da3-38f1-40af-b06e-53b55e95b1ae",
        "parentId" : "23889e02-56c8-4d84-b84d-b41fc4f113e4",
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "It can. It is legal, but i think no user will do that.",
        "createdAt" : "2021-04-30T04:11:30Z",
        "updatedAt" : "2021-05-05T02:46:17Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "9746c89394a56e29985e2e7c0b2a9de1cc1dfa8b",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +218,222 @@         multiple times. The index order is in line with depth-first traversing.\n     - param_search_estimators: a list includes all param search estimators in the\n         hierarchy tree.\n    \"\"\"\n    uid_to_indexed_name_map = _get_uid_to_indexed_name_map(estimator)"
  },
  {
    "id" : "1185db26-d1c8-461e-99a9-fa0671987a20",
    "prId" : 4228,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4228#pullrequestreview-631150635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "498c4630-8ef8-4165-91d5-622c7b8179eb",
        "parentId" : null,
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "This is for the case user call:\r\n```\r\nestimator.fit(dataset, params)\r\n```",
        "createdAt" : "2021-04-06T11:22:14Z",
        "updatedAt" : "2021-04-16T09:37:11Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      },
      {
        "id" : "f9f508ce-c3fb-435d-b59b-9f4d1feae0d1",
        "parentId" : "498c4630-8ef8-4165-91d5-622c7b8179eb",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Can we extract `params` from `args` or `**kwargs` outside of this function, and pass it to this function?",
        "createdAt" : "2021-04-07T02:31:04Z",
        "updatedAt" : "2021-04-16T09:37:11Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "a9ebd46d-9d35-4934-9d04-4d172bec5a3c",
        "parentId" : "498c4630-8ef8-4165-91d5-622c7b8179eb",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "I think we need to consider how to handle the following case:\r\n\r\n> If a list/tuple of param maps is given, this calls fit on each param map and returns a list of models.\r\n\r\nhttps://spark.apache.org/docs/latest/api/python/reference/api/pyspark.ml.classification.LogisticRegression.html#pyspark.ml.classification.LogisticRegression.fit",
        "createdAt" : "2021-04-07T15:21:49Z",
        "updatedAt" : "2021-04-16T09:37:11Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "1c22f547-39a3-4d36-9118-07f73b06cc31",
        "parentId" : "498c4630-8ef8-4165-91d5-622c7b8179eb",
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "> If a list/tuple of param maps is given, this calls fit on each param map and returns a list of models.\r\n\r\nWhat about skip this case: if a list/tuple of param maps is given, directly call original fit and skip pre/post logging ?\r\n\r\nBecause user usually won't call it, it is usually called internally from CrossValidator.",
        "createdAt" : "2021-04-08T09:02:12Z",
        "updatedAt" : "2021-04-16T09:37:11Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fb4a8c2161c423a5da8b1814bfce67624a9ce33",
    "line" : 258,
    "diffHunk" : "@@ -1,1 +256,260 @@\n        if params and isinstance(params, dict):\n            estimator = estimator.copy(params)\n\n        # Chunk model parameters to avoid hitting the log_batch API limit"
  },
  {
    "id" : "cffc5efd-cbdd-4b51-bc39-f783b392ff45",
    "prId" : 4228,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4228#pullrequestreview-628875016",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d8eb2b8-1e5f-4139-8712-ca6c114243fa",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Can we import these util function from `mlflow/sklearn/utils.py`?",
        "createdAt" : "2021-04-06T11:37:30Z",
        "updatedAt" : "2021-04-16T09:37:11Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "38996ea9-f2d1-48d1-b91d-1fa6777c36bb",
        "parentId" : "3d8eb2b8-1e5f-4139-8712-ca6c114243fa",
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "I think we should move these util out of sklearn namespace.\r\nUser may only use pyspark and don't want to introduce sklearn dependency. ",
        "createdAt" : "2021-04-06T11:41:08Z",
        "updatedAt" : "2021-04-16T09:37:11Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      },
      {
        "id" : "07e990e4-97b6-4263-bbaf-80d162303aea",
        "parentId" : "3d8eb2b8-1e5f-4139-8712-ca6c114243fa",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Makes sense. Let's just move some functions under `mlflow/autologging_utils` from `mlflow/sklearn` to make it easier to reuse them.",
        "createdAt" : "2021-04-06T11:47:17Z",
        "updatedAt" : "2021-04-16T09:37:11Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fb4a8c2161c423a5da8b1814bfce67624a9ce33",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +94,98 @@\n\ndef _get_estimator_info_tags(estimator):\n    \"\"\"\n    :return: A dictionary of MLflow run tag keys and values"
  },
  {
    "id" : "506eedc0-b157-4a3e-abf0-d25ce85cdd6b",
    "prId" : 4228,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4228#pullrequestreview-635320746",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e76e9c90-6a71-44c6-95ba-e27436efdc62",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Could you add a code comment to clarify when a value in `param_map` could itself be an instance of `Params`? e.g. does this happen for meta-estimators like Pipelines?",
        "createdAt" : "2021-04-13T23:58:19Z",
        "updatedAt" : "2021-04-16T09:37:11Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "34c55576-06f6-4d25-aa77-e4e10c1fea4e",
        "parentId" : "e76e9c90-6a71-44c6-95ba-e27436efdc62",
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "This case happens in param e.g. `OneVsRest.classifier`/`CrossValidator.estimator`, this case param value is an Estimator instance (inherits `pyspark.ml.param.Params`)",
        "createdAt" : "2021-04-14T07:58:13Z",
        "updatedAt" : "2021-04-16T09:37:11Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fb4a8c2161c423a5da8b1814bfce67624a9ce33",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +116,120 @@    expanded_param_map = {}\n    for k, v in param_map.items():\n        if isinstance(v, Params):\n            # handle the case param value type inherits `pyspark.ml.param.Params`\n            # e.g. param like `OneVsRest.classifier`/`CrossValidator.estimator`"
  },
  {
    "id" : "b0e50589-8015-49e4-b542-8e16adc6214c",
    "prId" : 4228,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4228#pullrequestreview-635322951",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25eb4ef6-1a6d-49d3-8434-7e9b1c93dc7f",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Do we need to define a new `__SparkTrainingSession` helper class for pyspark.ml autologging, or could we reuse the one from sklearn autologging?",
        "createdAt" : "2021-04-13T23:59:05Z",
        "updatedAt" : "2021-04-16T09:37:11Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "a59dbc1c-d0dc-40c9-bf0d-c36516b23b80",
        "parentId" : "25eb4ef6-1a6d-49d3-8434-7e9b1c93dc7f",
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "We could re-use. I think we can do refactor in follow-up PR.",
        "createdAt" : "2021-04-14T08:00:34Z",
        "updatedAt" : "2021-04-16T09:37:11Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fb4a8c2161c423a5da8b1814bfce67624a9ce33",
    "line" : 142,
    "diffHunk" : "@@ -1,1 +140,144 @@# 2. The list append & pop operations are thread-safe, so we will always clear the session stack\n#    once all _SparkTrainingSessions exit.\nclass _SparkTrainingSession(object):\n    _session_stack = []\n"
  },
  {
    "id" : "eda94e0f-30ce-44e7-b0f0-07b8fb773871",
    "prId" : 4228,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4228#pullrequestreview-637118906",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68b0ac96-47a1-44ea-980e-56f21509707a",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "```suggestion\r\n# Do not perform autologging on direct calls to fit() for featurizers. Note that featurizers will be autologged\r\n# when they're fit as part of a Pipeline\r\n```",
        "createdAt" : "2021-04-15T20:52:59Z",
        "updatedAt" : "2021-04-16T09:37:11Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fb4a8c2161c423a5da8b1814bfce67624a9ce33",
    "line" : 287,
    "diffHunk" : "@@ -1,1 +285,289 @@        elif \"params\" in kwargs:\n            params = kwargs[\"params\"]\n\n        # Do not perform autologging on direct calls to fit() for featurizers.\n        # Note that featurizers will be autologged when they're fit as part of a Pipeline."
  },
  {
    "id" : "71443b37-3785-460e-b4d6-7a3a274e0e0e",
    "prId" : 4228,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4228#pullrequestreview-637496622",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29c97ec2-ba9d-47a6-ab1e-ae2e29890abc",
        "parentId" : null,
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "Will do this in follow-up PR , this PR discussions are too long.",
        "createdAt" : "2021-04-16T09:14:09Z",
        "updatedAt" : "2021-04-16T09:37:11Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fb4a8c2161c423a5da8b1814bfce67624a9ce33",
    "line" : 271,
    "diffHunk" : "@@ -1,1 +269,273 @@    def _log_posttraining_metadata(estimator, spark_model, params):\n        # TODO: Log nested runs for spark ml tuning estimators\n        #   (CrossValidator/TrainValidationSplit)\n        if log_models:\n            if _should_log_model(spark_model):"
  },
  {
    "id" : "e3b1910e-9fdb-42c6-8549-fe4a7f239a18",
    "prId" : 4228,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4228#pullrequestreview-637497006",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5435e604-2f8f-4552-a913-fb75af1359e3",
        "parentId" : null,
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "Will also do this in follow-up tuning support PR , this PR discussions are too long.",
        "createdAt" : "2021-04-16T09:14:34Z",
        "updatedAt" : "2021-04-16T09:37:11Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fb4a8c2161c423a5da8b1814bfce67624a9ce33",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +128,132 @@            # skip log estimator Param and its nested params because they will be\n            # logged in nested runs.\n            # TODO: Log `estimatorParamMaps` as JSON artifacts.\n            pass\n        else:"
  }
]