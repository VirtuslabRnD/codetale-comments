[
  {
    "id" : "f2e40e32-1a2b-4a4b-b2c7-8ef8a886e7cf",
    "prId" : 1613,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1613#pullrequestreview-263224032",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4381e27-afa7-420f-aaf7-ee6c4b026ca3",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Nit: could we not just check that the metric values are inf & -inf here?",
        "createdAt" : "2019-07-17T17:59:39Z",
        "updatedAt" : "2019-07-17T18:52:09Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "9381b624-82f7-4dc0-8876-f2afa1d2f2a4",
        "parentId" : "c4381e27-afa7-420f-aaf7-ee6c4b026ca3",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Ah, we can not unfortunately since this varies for different stores. \r\nE.g. SQL stores will return Double.MAX but file store will return Inf.",
        "createdAt" : "2019-07-17T18:02:30Z",
        "updatedAt" : "2019-07-17T18:52:09Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc8f0ecd7c0059d07bfaf8f17f7a750aeac89b18",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +322,326 @@  expect_equal(42, metrics$value[metrics$key == \"rmse\"])\n  expect_true(all(is.nan(metrics$value[metrics$key == \"nan\"])))\n  expect_true(all(1.7976931348623157e308 <= (metrics$value[metrics$key == \"Inf\"])))\n  expect_true(all(-1.7976931348623157e308 >= (metrics$value[metrics$key == \"-Inf\"])))\n  expect_setequal("
  },
  {
    "id" : "a9e058d7-8632-4219-bf93-bc8bde082e52",
    "prId" : 1310,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1310#pullrequestreview-240928167",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a4dc813-f356-4e65-b881-8784ef49ada7",
        "parentId" : null,
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Do we test search  with inferred experiment id?\r\nIf we want to support single experiment id argument, we should probably add a test case for that as well.",
        "createdAt" : "2019-05-22T20:12:03Z",
        "updatedAt" : "2019-05-22T23:13:02Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "8e55db44-4f7c-4412-bc98-f6ba9dc7eb6b",
        "parentId" : "4a4dc813-f356-4e65-b881-8784ef49ada7",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Yep, we test `mlflow_search_runs()` without arguments (resulting in an inferred experiment) in this test, see [here](https://github.com/mlflow/mlflow/pull/1310/files/e7261526fd7101b67c1a55942fb8d991f609e854#diff-0b452f166f590473c5bf4e7aadb67595R244). Good point on testing passing a single experiment ID, added a test case for that.",
        "createdAt" : "2019-05-22T23:29:58Z",
        "updatedAt" : "2019-05-22T23:29:58Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d08e5eaf7323bda25a89c5ca8c111a1f84fd440",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +237,241 @@    mlflow_log_metric(\"test\", 20)\n  })\n  expect_equal(nrow(mlflow_search_runs(experiment_ids = list(\"0\"))), 2)\n  expect_equal(nrow(mlflow_search_runs(experiment_ids = \"0\")), 2)\n  expect_equal(nrow(mlflow_search_runs(filter = \"metrics.test > 10\", experiment_ids = list(\"0\"))), 1)"
  }
]