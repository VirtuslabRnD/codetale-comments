[
  {
    "id" : "f6178bea-fc4b-4853-991a-ad6e55bf60d5",
    "prId" : 2272,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2272#pullrequestreview-342051740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7665a69-5b5a-4010-a1b7-4385f8179def",
        "parentId" : null,
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Would it be cleaner to do this as if(notebook) {...} elseif (job) {...} else {nextMethod()} ?",
        "createdAt" : "2020-01-10T23:23:14Z",
        "updatedAt" : "2020-01-11T01:20:16Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "65db5d23-d8ce-4e16-be72-2cac15eb93a5",
        "parentId" : "a7665a69-5b5a-4010-a1b7-4385f8179def",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "This would look cleaner, but I think we'd have to fetch the job info prior to the if/else-if/else block to clean this up, resulting in extra function call within Databricks notebooks. Let me know if you see a way around this / think that's a better idea than the current solution.",
        "createdAt" : "2020-01-13T18:31:04Z",
        "updatedAt" : "2020-01-13T18:31:05Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "d41a3c8c-6d59-4d84-8b9e-e975339339f8",
        "parentId" : "a7665a69-5b5a-4010-a1b7-4385f8179def",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Oh I see. I think that's ok then.",
        "createdAt" : "2020-01-13T18:35:31Z",
        "updatedAt" : "2020-01-13T18:35:38Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "1bb86e5376acdabeee4d3e6f454c812ee5125afc",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +138,142 @@        experiment_id = experiment_id %||% notebook_info$id,\n        ...\n      ))\n    }\n"
  },
  {
    "id" : "17614042-f833-45b2-b8f2-5f371cdf2316",
    "prId" : 958,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/958#pullrequestreview-212086635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "127c6855-945a-48eb-a4e8-54c79b5ba152",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "One observation entirely orthogonal to this PR, I guess we don't set `source_type` elsewhere in the R client - we might want to consider defaulting `source_type` to `LOCAL` [as the Python client does](https://github.com/mlflow/mlflow/blob/master/mlflow/tracking/fluent.py#L154), since the [runs UI](https://github.com/mlflow/mlflow/blob/master/mlflow/server/js/src/utils/Utils.js#L210) renders an icon conditional on source type (i.e. add a `get_source_type` function in `tracking-utils.R` and then invoke it in `mlflow_get_run_context.default` within `tracking-client.R`. Will make a GitHub issue to track it separately",
        "createdAt" : "2019-03-08T00:03:33Z",
        "updatedAt" : "2019-03-08T00:09:20Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "7f6c7f38-263f-4026-8057-e49c5446d5a4",
        "parentId" : "127c6855-945a-48eb-a4e8-54c79b5ba152",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "That's a good point!",
        "createdAt" : "2019-03-08T00:06:25Z",
        "updatedAt" : "2019-03-08T00:06:25Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a00e6bae86111a67d0f50c4072a8447b7717cb",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +105,109 @@        client = client,\n        source_version = source_version %||% get_source_version(),\n        source_type =  MLFLOW_SOURCE_TYPE$NOTEBOOK,\n        source_name = notebook_info$path,\n        tags = tags,"
  }
]