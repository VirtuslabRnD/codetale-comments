[
  {
    "id" : "6fa877f9-5013-4da1-b9d3-51b99483a216",
    "prId" : 1078,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1078#pullrequestreview-221960058",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8aafb485-218c-439c-b78e-2d01a856e101",
        "parentId" : null,
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Why do we keep metrics as map key -> Metric, while params and tags are a map of key -> value?",
        "createdAt" : "2019-04-02T20:21:14Z",
        "updatedAt" : "2019-04-16T21:48:25Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "1cd07259-3cef-42c7-a03c-0726dfdcf20f",
        "parentId" : "8aafb485-218c-439c-b78e-2d01a856e101",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Good question, it's because metrics have additional fields besides their value (like timestamp, and in the near future, x coordinates)",
        "createdAt" : "2019-04-02T22:21:14Z",
        "updatedAt" : "2019-04-16T21:48:25Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "06ec0e24-a989-418a-b99c-eef44a8fd9e2",
        "parentId" : "8aafb485-218c-439c-b78e-2d01a856e101",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "I guess I was more thinking if it would make sense to keep the other ones as map to Param / Tag instead of directly pointing to the value for the sake of consistency. ",
        "createdAt" : "2019-04-02T22:34:45Z",
        "updatedAt" : "2019-04-16T21:48:25Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "df76e866-ffe0-4d2d-869a-7d06e6b95883",
        "parentId" : "8aafb485-218c-439c-b78e-2d01a856e101",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Yeah I think that's a fair point, this is actually a design point that probably should have been discussed more broadly before starting implementation. I guess the questions are:\r\n\r\n1) Are there significant ease-of-use gains from being able to access tag/param values within a flat dictionary (e.g. `param_val = run.data.params[\"alpha\"]`) vs having to perform an extra access to get to the value (`param_val = run.data.params[\"alpha\"].value`)? \r\n2) If yes to 1), are these ease-of-use gains worth a) the inconsistency of having metrics be a dict of string -> Metric object, and b) the inflexibility of not being able to add new fields to params/tags without breaking API changes?",
        "createdAt" : "2019-04-03T00:22:25Z",
        "updatedAt" : "2019-04-16T21:48:25Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "838593e1e0a21713c4898a214670386fda2b3ce0",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +49,53 @@\n    def _add_param(self, param):\n        self._params[param.key] = param.value\n\n    def _add_tag(self, tag):"
  },
  {
    "id" : "3d61614b-2396-4532-bb62-dc7bd0b6c1dd",
    "prId" : 1078,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1078#pullrequestreview-227462869",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fa1b052-5cb5-4065-a48d-4d4fa456d752",
        "parentId" : null,
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "nit: why extend? why not just assign the value?",
        "createdAt" : "2019-04-16T20:02:58Z",
        "updatedAt" : "2019-04-16T21:48:25Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "bf717dc0-6849-4da5-815c-c3f197a374c2",
        "parentId" : "1fa1b052-5cb5-4065-a48d-4d4fa456d752",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Apparently protobuf doesn't allow you to assign to `repeated` fields within a protobuf object (from Travis logs):\r\n\r\n```\r\n  File \"/home/travis/build/mlflow/mlflow/mlflow/server/handlers.py\", line 272, in _get_run\r\nresponse_message.run.MergeFrom(_get_store().get_run(request_message.run_uuid).to_proto())\r\n  File \"/home/travis/build/mlflow/mlflow/mlflow/entities/run.py\", line 40, in to_proto\r\n    run.data.MergeFrom(self.data.to_proto())\r\n  File \"/home/travis/build/mlflow/mlflow/mlflow/entities/run_data.py\", line 58, in to_proto\r\n    run_data.metrics = [m.to_proto() for m in self._metric_objs]\r\nAttributeError: Assignment not allowed to repeated field \"metrics\" in protocol message object.\r\n```",
        "createdAt" : "2019-04-16T21:49:20Z",
        "updatedAt" : "2019-04-16T21:49:21Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "838593e1e0a21713c4898a214670386fda2b3ce0",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +56,60 @@    def to_proto(self):\n        run_data = ProtoRunData()\n        run_data.metrics.extend([m.to_proto() for m in self._metric_objs])\n        run_data.params.extend([ProtoParam(key=key, value=val) for key, val in self.params.items()])\n        run_data.tags.extend([ProtoRunTag(key=key, value=val) for key, val in self.tags.items()])"
  },
  {
    "id" : "2d2ce509-9969-48a2-a692-222bb4807ded",
    "prId" : 305,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/305#pullrequestreview-146982183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "213efd21-175a-4099-b094-504603db5921",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Made private since these are used in the constructor / aren't intended to be called by users",
        "createdAt" : "2018-08-16T19:03:52Z",
        "updatedAt" : "2018-08-20T22:25:04Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "8092503bde12f5af1b80293752dfd22bf3a34a72",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +29,33 @@        return self._params\n\n    def _add_metric(self, metric):\n        self._metrics.append(metric)\n"
  }
]