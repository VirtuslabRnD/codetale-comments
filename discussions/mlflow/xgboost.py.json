[
  {
    "id" : "3409e25f-b978-4f04-832a-6d18d081196d",
    "prId" : 4581,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4581#pullrequestreview-711309521",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d638af66-b6cd-416e-80ac-4f3c321dea80",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "I only fixed `pip_requirements` and `extra_pip_requirements`, but will fix other parameters in a follow-up PR if necessary.",
        "createdAt" : "2021-07-21T06:44:36Z",
        "updatedAt" : "2021-07-21T06:56:56Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "73d333d6-1b1f-43b1-a759-e637933f4a34",
        "parentId" : "d638af66-b6cd-416e-80ac-4f3c321dea80",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "One con is this makes a bit harder to quickly check how arguments work because you need to jump to a different file.",
        "createdAt" : "2021-07-21T06:45:26Z",
        "updatedAt" : "2021-07-21T06:45:26Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "250a1e71-72b0-4f3c-9e24-64446e4276a3",
        "parentId" : "d638af66-b6cd-416e-80ac-4f3c321dea80",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "It takes 1 ~ 2 ms to complete the replacement (for now).",
        "createdAt" : "2021-07-21T06:48:03Z",
        "updatedAt" : "2021-07-21T06:57:36Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "9cdc9fe1abb89a0378e0eda509ef244436b24418",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +260,264 @@                            waits for five minutes. Specify 0 or None to skip waiting.\n    :param pip_requirements: {{ pip_requirements }}\n    :param extra_pip_requirements: {{ extra_pip_requirements }}\n    :param kwargs: kwargs to pass to `xgboost.Booster.save_model`_ method.\n    \"\"\""
  },
  {
    "id" : "461cbe8a-2099-408e-bed6-c96fc94f5c0a",
    "prId" : 4581,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4581#pullrequestreview-712292466",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8d41fbd-f8ff-495d-af0b-7599ae37aa68",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "After the formatting applied, the param docs look like:\r\n\r\n```python\r\n>>> print(mlflow.xgboost.save_model.__doc__)\r\n    ...\r\n    :param pip_requirements: \r\n        Either an iterable of pip requirement strings\r\n        (e.g. ``[\"xgboost\", \"-r requirements.txt\", \"-c constrants.txt\"]``) or the string path to\r\n        a pip requirements file on the local filesystem (e.g. ``\"requirements.txt\"``). If provided, this\r\n        describes the environment this model should be run in. If ``None``, a default list of requirements\r\n        is inferred from the current software environment. Both requirements and constraints are\r\n        automatically parsed and written to ``requirements.txt`` and ``constraints.txt`` files,\r\n        respectively, and stored as part of the model. Requirements are also written to the ``pip`` section\r\n        of the model's conda environment (``conda.yaml``) file.\r\n\r\n    :param extra_pip_requirements: \r\n        Either an iterable of pip requirement strings\r\n        (e.g. ``[\"pandas\", \"-r requirements.txt\", \"-c constrants.txt\"]``) or the string path to\r\n        a pip requirements file on the local filesystem (e.g. ``\"requirements.txt\"``). If provided, this\r\n        describes additional pip requirements that are appended to a default set of pip requirements\r\n        generated automatically based on the user's current software environment. Both requirements and\r\n        constraints are automatically parsed and written to ``requirements.txt`` and ``constraints.txt``\r\n        files, respectively, and stored as part of the model. Requirements are also written to the ``pip``\r\n        section of the model's conda environment (``conda.yaml``) file.\r\n\r\n        .. warning::\r\n            The following arguments can't be specified at the same time:\r\n\r\n            - ``conda_env``\r\n            - ``pip_requirements``\r\n            - ``extra_pip_requirements``\r\n\r\n        :ref:`This example<pip-requirements-example>` demonstrates how to specify pip requirements using\r\n        ``pip_requirements`` and ``extra_pip_requirements``.\r\n\r\n```",
        "createdAt" : "2021-07-22T00:40:08Z",
        "updatedAt" : "2021-07-24T03:49:16Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "9cdc9fe1abb89a0378e0eda509ef244436b24418",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +147,151 @@                          base64-encoded.\n    :param pip_requirements: {{ pip_requirements }}\n    :param extra_pip_requirements: {{ extra_pip_requirements }}\n    \"\"\"\n    import xgboost as xgb"
  },
  {
    "id" : "a26716a0-2218-45c9-8585-36aa34143b5a",
    "prId" : 4564,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4564#pullrequestreview-707051538",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd770985-4fdc-4a40-a24b-dbcb5508e8dd",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Updated the param doc to indicate:\r\n\r\n1. Constraints files are supported.\r\n2. Constraints are stored as a `constraints.txt`.",
        "createdAt" : "2021-07-15T08:08:38Z",
        "updatedAt" : "2021-07-16T02:25:35Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae6274ff90541f539c58066b2389f74662225e76",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +286,290 @@        and ``constraints.txt`` files, respectively, and stored as part of the model. Requirements\n        are also written to the ``pip`` section of the model's conda environment (``conda.yaml``)\n        file.\n    :param extra_pip_requirements: Either an iterable of pip requirement strings\n        (e.g. ``[\"scikit-learn\", \"-r requirements.txt\"]``) or the string path to a pip requirements"
  },
  {
    "id" : "adc97b40-7d1d-49eb-acfb-c1be5e41e0eb",
    "prId" : 4523,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4523#pullrequestreview-697974046",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "677eae83-bd26-4b4a-ac4b-ec7802c72579",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Nice unpacking :)",
        "createdAt" : "2021-07-02T08:56:28Z",
        "updatedAt" : "2021-07-02T08:56:28Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "b22f55f4a140054e805c2ea08c8b329bbaa7b7a2",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +492,496 @@                    zip(offsets_per_yloc, importances_per_class)\n                ):\n                    (bar,) = ax.barh(\n                        feature_yloc + offset,\n                        class_importance,"
  },
  {
    "id" : "b3991aea-61b9-48cf-a2e9-45620375dae8",
    "prId" : 4519,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4519#pullrequestreview-705931047",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79c15ebb-fe14-4b7c-80eb-ddcddcee634b",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "This section is fantastic! Thank you! Can we include similar information for the `conda_env` parameter to indicate where dependency information is stored? I.e. indicate that pip requirements from `conda_env` are written to a pip `requirements.txt` file and that the full conda environment is written to `conda.yaml`. Can we do this for `log_model()` as well?",
        "createdAt" : "2021-07-14T05:55:23Z",
        "updatedAt" : "2021-07-14T05:55:24Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "2e53185c-a078-4a65-958a-6ff7ac52fbcd",
        "parentId" : "79c15ebb-fe14-4b7c-80eb-ddcddcee634b",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Sure!",
        "createdAt" : "2021-07-14T07:15:15Z",
        "updatedAt" : "2021-07-14T07:15:15Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "deb8c23fd2a8dc2175bedf2f536d4707988779af",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +148,152 @@        written to a ``requirements.txt`` file that is stored as part of the model. These\n        requirements are also written to the ``pip`` section of the model's conda environment\n        (``conda.yaml``) file.\n    :param extra_pip_requirements: Either an iterable of pip requirement strings\n        (e.g. ``[\"scikit-learn\", \"-r requirements.txt\"]``) or the string path to a pip requirements"
  },
  {
    "id" : "31df8943-20e9-481c-b511-bf4348863061",
    "prId" : 4473,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4473#pullrequestreview-686933175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2fb2b935-211a-46dc-8f02-30ebb3596652",
        "parentId" : null,
        "authorId" : "ae7dd827-9f9e-4fb6-b1ba-d051793e929e",
        "body" : "Not specific to this PR. But the train() function is getting really long and difficult to read. It might be good to factor some code out (e.g. move scoped functions to the top, and use with statement for both autologging_client) in a follow up cleanup PR.",
        "createdAt" : "2021-06-17T22:58:40Z",
        "updatedAt" : "2021-06-17T22:58:47Z",
        "lastEditedBy" : "ae7dd827-9f9e-4fb6-b1ba-d051793e929e",
        "tags" : [
        ]
      },
      {
        "id" : "4ba7b18d-1d81-4d2c-9203-0734d0d667e9",
        "parentId" : "2fb2b935-211a-46dc-8f02-30ebb3596652",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Agreed! I'll file a ticket to track cleaning this up",
        "createdAt" : "2021-06-17T23:59:29Z",
        "updatedAt" : "2021-06-17T23:59:30Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab180c3d9c3aabe75508113ca57c3b63c69226a3",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +467,471 @@                shutil.rmtree(tmpdir)\n\n        autologging_client = MlflowAutologgingQueueingClient()\n        # logging booster params separately to extract key/value pairs and make it easier to\n        # compare them across runs."
  },
  {
    "id" : "49db4780-4c14-4d7b-a4f7-b19309bf26c9",
    "prId" : 3937,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3937#pullrequestreview-562212738",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11d42a37-657b-411a-b071-56eb73973652",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Why do we return `False`?",
        "createdAt" : "2021-01-05T22:21:21Z",
        "updatedAt" : "2021-01-06T06:30:38Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "d9801677-b804-4d59-9b03-da41cac1bfb6",
        "parentId" : "11d42a37-657b-411a-b071-56eb73973652",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "@dbczumar \r\nIt's just for indicating training should not stop:\r\n\r\nhttps://github.com/dmlc/xgboost/blob/60cfd14349a3ed4593de276525fba068adcaea53/demo/guide-python/callbacks.py#L50\r\n\r\nI'll insert a comment here for clarification.",
        "createdAt" : "2021-01-05T23:30:20Z",
        "updatedAt" : "2021-01-06T06:30:38Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "6e88a469-be70-4d2f-8d1a-97055d5c3394",
        "parentId" : "11d42a37-657b-411a-b071-56eb73973652",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Returning nothing (= returning `None`) actually works too because `None` is falsey but I think we should explicitly return False here",
        "createdAt" : "2021-01-05T23:34:19Z",
        "updatedAt" : "2021-01-06T06:30:38Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1b687f896512d3a94f2340a134f1384c782105a",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +408,412 @@\n                        # Return `False` to indicate training should not stop\n                        return False\n\n                return Callback()"
  },
  {
    "id" : "5fae027a-7401-4957-8cf6-b40c9f7799d0",
    "prId" : 3403,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3403#pullrequestreview-485202977",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c1341bb-5be0-4312-8e3f-8740d2e7796d",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Lools like there is no property or method to extract given `data` from `xgboost.DMatrix`: https://github.com/dmlc/xgboost/issues/3173",
        "createdAt" : "2020-09-09T16:38:12Z",
        "updatedAt" : "2020-09-16T16:08:29Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb03c72b0a54e989fe71653496a6e69105289ffd",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +504,508 @@\n    wrap_patch(xgboost, \"train\", train)\n    wrap_patch(xgboost.DMatrix, \"__init__\", __init__)"
  },
  {
    "id" : "c4ba3904-2d53-4f14-93f3-dcadf7d975bf",
    "prId" : 3403,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3403#pullrequestreview-487055624",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4379517f-db47-4f50-b25d-c58a8663416b",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Can we add docs to the `mlflow.xgboost.autolog()` method indicating that we also log the signature and input example when possible?",
        "createdAt" : "2020-09-11T19:23:31Z",
        "updatedAt" : "2020-09-16T16:08:29Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb03c72b0a54e989fe71653496a6e69105289ffd",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +297,301 @@\n    \"\"\"\n    import xgboost\n    import numpy as np\n"
  },
  {
    "id" : "2c05e6f8-175c-4517-8ce8-642e3905e13e",
    "prId" : 3403,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3403#pullrequestreview-487055624",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1f80e71-e3ca-45d2-a7b3-29d761c318c4",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Can we add documentation to this function explaining why we're patching it (i.e. in order to fetch an input example).",
        "createdAt" : "2020-09-11T19:24:08Z",
        "updatedAt" : "2020-09-16T16:08:29Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb03c72b0a54e989fe71653496a6e69105289ffd",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +309,313 @@    #   (there is no way to get the data back from a DMatrix object)\n    # We store it on the DMatrix object so the train function is able to read it.\n    def __init__(self, *args, **kwargs):\n        data = args[0] if len(args) > 0 else kwargs.get(\"data\")\n"
  },
  {
    "id" : "e1ec5e3a-bb97-4cad-96f7-f4beb8afa502",
    "prId" : 3403,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3403#pullrequestreview-487846406",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0f674e1-2c5f-464a-a076-8d6fb4ed8c2b",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Can we add a test case ensuring that datasets can still be successfully serialized to disk and reloaded even with our patch modifications? It'd be painful if adding this extra attribute somehow interfered with that serialization / deserialization process.",
        "createdAt" : "2020-09-11T19:26:13Z",
        "updatedAt" : "2020-09-16T16:08:29Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "084b9c11-f767-4dfe-9f22-6746a73a2bc0",
        "parentId" : "a0f674e1-2c5f-464a-a076-8d6fb4ed8c2b",
        "authorId" : "4009fe74-c5d1-469a-bdb2-62f993bc2d7d",
        "body" : "it seems we have this already due to another test: https://github.com/mlflow/mlflow/pull/3403/files#diff-581561ae97c9c7aa194fbdc0a42fdc3fR304\r\n\r\nis this the same kind of serialization/deserialization you are referring to?",
        "createdAt" : "2020-09-11T22:22:52Z",
        "updatedAt" : "2020-09-16T16:08:29Z",
        "lastEditedBy" : "4009fe74-c5d1-469a-bdb2-62f993bc2d7d",
        "tags" : [
        ]
      },
      {
        "id" : "a7d6b5e0-c720-48a7-8413-a316a03219a7",
        "parentId" : "a0f674e1-2c5f-464a-a076-8d6fb4ed8c2b",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "I think corey's point is we should add a test like below.\r\n\r\n```python\r\ndef test_xxx_yyy():\r\n    mlflow.xgboost.autolog()\r\n    dtrain = xgb.DMatrix(...)\r\n\r\n    ...\r\n\r\n    model = xgb.train()\r\n\r\n    ...\r\n\r\n    dtrain.save_binary(path)  # serialization should not throw\r\n    xgb.DMatrix(path)  # deserialization also should not throw\r\n```\r\n\r\nhttps://xgboost.readthedocs.io/en/latest/python/python_api.html#xgboost.DMatrix.save_binary",
        "createdAt" : "2020-09-12T01:29:58Z",
        "updatedAt" : "2020-09-16T16:08:29Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "039ad65a-f708-44c3-9204-0e9c9b73abd3",
        "parentId" : "a0f674e1-2c5f-464a-a076-8d6fb4ed8c2b",
        "authorId" : "4009fe74-c5d1-469a-bdb2-62f993bc2d7d",
        "body" : "ohhh i see, i am adding this now, thanks!",
        "createdAt" : "2020-09-14T14:46:08Z",
        "updatedAt" : "2020-09-16T16:08:29Z",
        "lastEditedBy" : "4009fe74-c5d1-469a-bdb2-62f993bc2d7d",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb03c72b0a54e989fe71653496a6e69105289ffd",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +309,313 @@    #   (there is no way to get the data back from a DMatrix object)\n    # We store it on the DMatrix object so the train function is able to read it.\n    def __init__(self, *args, **kwargs):\n        data = args[0] if len(args) > 0 else kwargs.get(\"data\")\n"
  },
  {
    "id" : "2a577bdb-27c7-41cd-854a-ec56cad6ee8a",
    "prId" : 2124,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2124#pullrequestreview-321289534",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6202277-95fc-4d12-8c0e-1f16b8c1f666",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Ah interesting, surprising that xgboost isn't available on the default conda channels :P (verified this by running `conda install xgboost` on my Mac, which failed). Maybe we could leave a comment to that effect?\r\n```suggestion\r\n            # XGBoost is not yet available via the default conda channels, so we install it via pip\r\n            \"xgboost=={}\".format(xgb.__version__),\r\n```",
        "createdAt" : "2019-11-22T00:52:07Z",
        "updatedAt" : "2019-11-24T13:50:41Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "91846f27-9dae-4cbd-bd2d-e50e00575cbf",
        "parentId" : "d6202277-95fc-4d12-8c0e-1f16b8c1f666",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Did you try `conda install -c conda-forge xgboost`?\r\nI always use this command to install xgboost on conda.\r\n\r\nhttps://anaconda.org/conda-forge/xgboost",
        "createdAt" : "2019-11-22T01:24:01Z",
        "updatedAt" : "2019-11-24T13:50:41Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "46e6597469bae5260baeaf8fcffb3bedf7e42b29",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@        # XGBoost is not yet available via the default conda channels, so we install it via pip\n        additional_pip_deps=[\n            \"xgboost=={}\".format(xgb.__version__),\n        ],\n        additional_conda_channels=None)"
  }
]