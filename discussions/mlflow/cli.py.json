[
  {
    "id" : "b5428a37-392c-4c13-bc2a-38fe367427c2",
    "prId" : 2578,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2578#pullrequestreview-375063822",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a174e970-60cd-4af9-b7da-f26ad9678b96",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "@jdlesage @smurching I'm a bit confused as to why this is necessary from a security perspective. The `_hard_delete_run` method is not implemented in the REST store, so this CLI would not work when targeted against the MLflow Server directly. Further, client-side changes won't address server-side gaps if they were to exist (e.g., users can simply remove these new lines of code and run `mlflow gc`). \r\n\r\nRegardless, I think this is a nice improvement to the UX because it raises a clear error message when an invalid store is supplied - thanks @jdlesage. Please feel free to correct me if I'm missing something here.",
        "createdAt" : "2020-03-15T20:56:48Z",
        "updatedAt" : "2020-03-15T20:57:07Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "58e47ef1-0e96-4fc2-b489-5d1f1136e3a7",
        "parentId" : "a174e970-60cd-4af9-b7da-f26ad9678b96",
        "authorId" : "ac0cdb06-56d2-445b-81fa-76407947935a",
        "body" : "@dbczumar I think you've mistakenly pinged jd.lesage ;-) \r\n\r\nThe issue was that the error about not implemented _hard_delete_run would be thrown after having already deleted artifacts in the artifacts store. \r\nThis check avoids to mistakenly wipe artifacts.",
        "createdAt" : "2020-03-16T10:08:32Z",
        "updatedAt" : "2020-03-16T10:08:32Z",
        "lastEditedBy" : "ac0cdb06-56d2-445b-81fa-76407947935a",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd2e347af07e586ae7cf2a1eda2c9d5a968f55d4",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +305,309 @@    \"\"\"\n    backend_store = _get_store(backend_store_uri, None)\n    if not hasattr(backend_store, '_hard_delete_run'):\n        raise MlflowException(\n            \"This cli can only be used with a backend that allows hard-deleting runs\")"
  },
  {
    "id" : "b45388ac-e219-4bb8-9401-fcc6323538d9",
    "prId" : 2265,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2265#pullrequestreview-352139238",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e47daf1-d4b5-4205-8466-ae06cf8befb9",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "@t-henri I don't think we need a dedicated API for `_get_deleted_runs` that is defined on the backend stores. You can leverage the `run_view_type` parameter of the existing Search API (https://github.com/mlflow/mlflow/blob/9b73ef08c7bae1d49e1bb66d0c6aa8a5e2a0fe69/mlflow/store/tracking/abstract_store.py#L208) to fetch deleted runs.",
        "createdAt" : "2020-01-30T01:33:09Z",
        "updatedAt" : "2020-02-27T10:30:54Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "cbb12aa9-4380-40cd-a57e-29cd77e21488",
        "parentId" : "9e47daf1-d4b5-4205-8466-ae06cf8befb9",
        "authorId" : "c6add3bb-6a2b-406f-b5c9-316ac09544af",
        "body" : "I thought about it but using the Search API is not convenient because it takes as parameter experiment_ids while I want deleted runs across all experiments. I could do the following things:\r\n- Call list_experiments to get the list of all experiments and their experiment_ids\r\n- Then use the Search API with these experiment_ids\r\nBut it seems not very efficient (issue multiple queries just to get the deleted runs) and will be more complicated code wise.\r\n\r\nIn my opinion implementing a simple _get_deleted_runs is much simpler, what do you think ?",
        "createdAt" : "2020-02-03T10:05:34Z",
        "updatedAt" : "2020-02-27T10:30:54Z",
        "lastEditedBy" : "c6add3bb-6a2b-406f-b5c9-316ac09544af",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f64dce55669a2ceab4997380139d12713537de9",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +305,309 @@    backend_store = _get_store(backend_store_uri, None)\n    if not run_ids:\n        run_ids = backend_store._get_deleted_runs()\n    else:\n        run_ids = run_ids.split(',')"
  },
  {
    "id" : "6035866a-6f33-4d2e-a994-22c359576451",
    "prId" : 2265,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2265#pullrequestreview-352163093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cddb25aa-2c3c-465b-af18-430d6612eeea",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Can we also add the `experimental` decorator to this method?",
        "createdAt" : "2020-01-30T01:38:11Z",
        "updatedAt" : "2020-02-27T10:30:54Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "45c30b39-5ba9-487e-80df-c6f1f60b60e4",
        "parentId" : "cddb25aa-2c3c-465b-af18-430d6612eeea",
        "authorId" : "c6add3bb-6a2b-406f-b5c9-316ac09544af",
        "body" : "Done",
        "createdAt" : "2020-02-03T10:44:51Z",
        "updatedAt" : "2020-02-27T10:30:54Z",
        "lastEditedBy" : "c6add3bb-6a2b-406f-b5c9-316ac09544af",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f64dce55669a2ceab4997380139d12713537de9",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +298,302 @@                   \"If run ids are not specified, by default, all deleted runs are gc'ed.\")\n@experimental\ndef gc(backend_store_uri, run_ids):\n    \"\"\"\n    Permanently delete runs in the `deleted` lifecycle stage from the specified backend store."
  },
  {
    "id" : "8e711d2f-4792-487e-98d4-98b5ae9884d0",
    "prId" : 2265,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2265#pullrequestreview-356004259",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12b24413-1ef1-4c34-adc0-981803660813",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "We should validate that each of these runs is in the `deleted` state and throw an exception if a run is encountered that is not in the `deleted` state. Currently, a user could leverage the `--run-ids` option to hard delete active runs. Can you add this check as well as a corresponding test?",
        "createdAt" : "2020-02-09T06:59:32Z",
        "updatedAt" : "2020-02-27T10:30:54Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "afb83082-1c1b-49fd-9df5-76e93fb51545",
        "parentId" : "12b24413-1ef1-4c34-adc0-981803660813",
        "authorId" : "c6add3bb-6a2b-406f-b5c9-316ac09544af",
        "body" : "Done",
        "createdAt" : "2020-02-10T15:00:17Z",
        "updatedAt" : "2020-02-27T10:30:54Z",
        "lastEditedBy" : "c6add3bb-6a2b-406f-b5c9-316ac09544af",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f64dce55669a2ceab4997380139d12713537de9",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +309,313 @@        run_ids = run_ids.split(',')\n\n    for run_id in run_ids:\n        run = backend_store.get_run(run_id)\n        if run.info.lifecycle_stage != LifecycleStage.DELETED:"
  },
  {
    "id" : "8acf30c5-793b-4e2d-9bc2-f5b5d5996ce2",
    "prId" : 1181,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1181#pullrequestreview-254318633",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d79454af-f72f-4d14-969d-46d92099566d",
        "parentId" : null,
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "Should we make it async by default?",
        "createdAt" : "2019-06-20T21:35:43Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      },
      {
        "id" : "7c3452f0-47cc-4e7f-86ed-165947bf437f",
        "parentId" : "d79454af-f72f-4d14-969d-46d92099566d",
        "authorId" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "body" : "I think it would be better this way, so we can monitoring the execution easier. The other way would be to grab info from kubernetes with kubectl or monitor mlflow ui to see when the run had finished. What do you think?",
        "createdAt" : "2019-06-21T15:06:41Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "tags" : [
        ]
      },
      {
        "id" : "237659cb-1444-4fb2-b4dc-46e5480285f8",
        "parentId" : "d79454af-f72f-4d14-969d-46d92099566d",
        "authorId" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "body" : "@tomasatdatabricks and @andrewmchen , what do you guys think about get pod's log in case of errors? I'm reviewing @tomasatdatabricks 's changes for job monitoring and I'm getting some errors from pods execution. Now I need to run `kubectl` to find the pod related to the job and get it's logs.\r\n\r\nWe could ease the debugging if we just print out the logs in case of errors. We can chat on Slack if you like.",
        "createdAt" : "2019-06-24T15:12:33Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "tags" : [
        ]
      },
      {
        "id" : "71659519-d2cd-4a81-ba24-5f1dbb84f351",
        "parentId" : "d79454af-f72f-4d14-969d-46d92099566d",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Hey @marcusrehm. \r\n\r\nThat is a good idea. But I think the current PR provides good functionality as is and we can leave this for a follow up PR.\r\n\r\nIt's not 100% clear what is the right thing to do regarding the logs. For example, we might also pull them after every run and attach them to the run as artifact(s).  Streaming the output as you had it in your PR may also be a good idea. It may be confusing thought in case multiple pods run during the execution (either due to parallelism or retry).  . ",
        "createdAt" : "2019-06-24T21:38:38Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "cfd94f66-8f22-43ac-8e5c-0d81d3a65019",
        "parentId" : "d79454af-f72f-4d14-969d-46d92099566d",
        "authorId" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "body" : "Hey @tomasatdatabricks , I think you're right. We can let it for another PR. I've tested the logic you changed and it seams okay!\r\n\r\nIf you and @andrewmchen think we have nothing left to change then I think we can close the PR.\r\n",
        "createdAt" : "2019-06-25T14:22:43Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "tags" : [
        ]
      },
      {
        "id" : "bc44e8b5-4910-4350-baf7-0fa79e64b601",
        "parentId" : "d79454af-f72f-4d14-969d-46d92099566d",
        "authorId" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "body" : "The build is broken but it's related to spark testing, not to what we are doing.",
        "createdAt" : "2019-06-25T16:33:17Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "tags" : [
        ]
      },
      {
        "id" : "6432e1b4-c6c0-4c20-b2d6-6b6003fb196c",
        "parentId" : "d79454af-f72f-4d14-969d-46d92099566d",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "I'll take a look. Maybe we just need to rerun.",
        "createdAt" : "2019-06-25T22:57:44Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "219673f4-07b4-4196-89f9-06721cba16a8",
        "parentId" : "d79454af-f72f-4d14-969d-46d92099566d",
        "authorId" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "body" : "Thanks @tomasatdatabricks !",
        "createdAt" : "2019-06-25T23:25:35Z",
        "updatedAt" : "2019-06-25T23:45:17Z",
        "lastEditedBy" : "10764eec-308c-4b62-a6af-07410a50cdc6",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d07a0808c488ff4c2248c4dc2c4a25117e2c2b5",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +136,140 @@            use_conda=(not no_conda),\n            storage_dir=storage_dir,\n            synchronous=backend in (\"local\", \"kubernetes\") or backend is None,\n            run_id=run_id\n        )"
  },
  {
    "id" : "8e92aac9-b58b-4b84-9e3a-79f95729591e",
    "prId" : 860,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/860#pullrequestreview-199398824",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff76690f-8b32-4c12-8af4-abcaea29d695",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "nit: stores. Maybe we can give an example of a uri for a SQLAlchemy implementation (e.g., \"sqllite:///my.db\").",
        "createdAt" : "2019-02-03T18:27:07Z",
        "updatedAt" : "2019-02-04T07:17:12Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb3cf583131d805f4d5cf86122b01c099393d4c4",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +140,144 @@@click.option(\"--backend-store-uri\", \"--file-store\", metavar=\"PATH\",\n              default=DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH,\n              help=\"URI or path for backend store implementation. Acceptable backend store \"\n                   \"are SQLAlchemy compatible implementation or local storage. \"\n                   \"Example 'sqlite:///path/to/file.db'. \""
  },
  {
    "id" : "9f454155-93e3-4876-8730-2da22ca48ea7",
    "prId" : 663,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/663#pullrequestreview-171278802",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e626d3c-c826-4f79-aec0-90563fc220cf",
        "parentId" : null,
        "authorId" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "body" : "Is there any way we can reuse the previous parameter for this? For example, if the string ends in \".json\" we treat it as a file and otherwise we parse it at JSON. It might be simpler to use than specifying a new parameter with a longer name.",
        "createdAt" : "2018-11-02T21:30:22Z",
        "updatedAt" : "2018-11-05T05:26:13Z",
        "lastEditedBy" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a0919e32d8abf21a7acf95cc439cae4677d6c04",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +60,64 @@                   \"to use when launching a run on Databricks. See \"\n                   \"https://docs.databricks.com/api/latest/jobs.html#jobsclusterspecnewcluster for \"\n                   \"more info. Note that MLflow runs are currently launched against a new cluster.\")\n@click.option(\"--git-username\", metavar=\"USERNAME\", envvar=\"MLFLOW_GIT_USERNAME\",\n              help=\"Username for HTTP(S) Git authentication.\")"
  },
  {
    "id" : "8041b773-b626-4a82-99e5-2675a60325b4",
    "prId" : 82,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/82#pullrequestreview-134481674",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec51231b-7489-45d8-9679-95e48a985182",
        "parentId" : null,
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "Like the short option style, but this is the only one that has it. A bit inconsistent.",
        "createdAt" : "2018-07-04T16:58:42Z",
        "updatedAt" : "2018-07-17T21:34:14Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      },
      {
        "id" : "f8d6e60a-7d12-4fcc-95b0-4ad60d80f52a",
        "parentId" : "ec51231b-7489-45d8-9679-95e48a985182",
        "authorId" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "body" : "Many of the other options on this command also have short versions, don't they? Look above in the diff, in the folded-in part.",
        "createdAt" : "2018-07-04T23:54:34Z",
        "updatedAt" : "2018-07-17T21:34:14Z",
        "lastEditedBy" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "136647f660211e2fdf758181d335ad8eb89a9cd4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +49,53 @@                   \"See https://github.com/databricks/databricks-cli for more info on configuring \"\n                   \"a Databricks CLI profile.\")\n@click.option(\"--cluster-spec\", \"-c\", metavar=\"FILE\",\n              help=\"Path to JSON file describing the cluster to use when launching a run on \"\n                   \"Databricks. See \""
  }
]