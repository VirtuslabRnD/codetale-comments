[
  {
    "id" : "fc332710-449b-48ec-85f9-f9a94065e4d4",
    "prId" : 1614,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1614#pullrequestreview-263311729",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b99c26bc-21f8-42e5-9f7b-4458aadff412",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Agh, this doesn't seem to render properly. Will fix it.",
        "createdAt" : "2019-07-17T20:55:53Z",
        "updatedAt" : "2019-07-17T23:33:29Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cca535cfc6426120a55db0650fd3a52a5eb4638e",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +269,273 @@      <div className=\"ExperimentPage runs-table-flex-container\" style={{height: \"100%\"}}>\n        <RequestStateWrapper shouldOptimisticallyRender requestIds={this.getRequestIds()}>\n          {this.renderExperimentView}\n        </RequestStateWrapper>\n      </div>"
  },
  {
    "id" : "7e5451e1-46e0-4647-b9a1-82f154b2edd7",
    "prId" : 1614,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1614#pullrequestreview-263369876",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97a5a545-ee0e-429e-abfc-0c06c3d3461e",
        "parentId" : null,
        "authorId" : "4f64c319-81b2-4dc8-af79-8a96e80dacf8",
        "body" : "I noticed that we are missing promise rejection handling in many places other than this. Let's create a follow-up to have those places adjusted as well.",
        "createdAt" : "2019-07-17T23:42:03Z",
        "updatedAt" : "2019-07-17T23:46:02Z",
        "lastEditedBy" : "4f64c319-81b2-4dc8-af79-8a96e80dacf8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cca535cfc6426120a55db0650fd3a52a5eb4638e",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +53,57 @@    this.props\n      .getExperimentApi(experimentId, this.getExperimentRequestId)\n      .catch((e) => {\n        console.error(e);\n      });"
  },
  {
    "id" : "935a5834-3427-4498-aadf-31e3f137bd3d",
    "prId" : 1455,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1455#pullrequestreview-250155700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "436080d9-9464-4386-8270-f3ed00e5c2b2",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "I think we need to cast `orderByAsc` (on the next line) from a string to a bool, else it results in this React warning when passed through as props to ExperimentView -> ExperimentRunsTableCompactView:\r\n```\r\nindex.js:2178 Warning: Failed prop type: Invalid prop `orderByAsc` of type `string` supplied to `ExperimentRunsTableCompactView`, expected `boolean`.\r\n    in ExperimentRunsTableCompactView (created by Connect(ExperimentRunsTableCompactView))\r\n    in Connect(ExperimentRunsTableCompactView) (at ExperimentView.js:468)\r\n    in div (at ExperimentView.js:311)\r\n    in div (at ExperimentView.js:289)\r\n    in ExperimentView (created by Connect(ExperimentView))\r\n    in Connect(ExperimentView) (created by Route)\r\n    in Route (created by withRouter(Connect(ExperimentView)))\r\n    in withRouter(Connect(ExperimentView)) (at ExperimentPage.js:167)\r\n    in RequestStateWrapper (created by Connect(RequestStateWrapper))\r\n    in Connect(RequestStateWrapper) (at ExperimentPage.js:144)\r\n    in div (at ExperimentPage.js:143)\r\n    in ExperimentPage (created by Connect(ExperimentPage))\r\n    in Connect(ExperimentPage) (created by Route)\r\n    in Route (created by withRouter(Connect(ExperimentPage)))\r\n    in withRouter(Connect(ExperimentPage)) (at HomeView.js:58)\r\n    in div (at HomeView.js:56)\r\n    in div (at HomeView.js:47)\r\n    in HomeView (created by Connect(HomeView))\r\n    in Connect(HomeView) (at HomePage.js:26)\r\n    in RequestStateWrapper (created by Connect(RequestStateWrapper))\r\n    in Connect(RequestStateWrapper) (at HomePage.js:25)\r\n    in HomePage (created by Connect(HomePage))\r\n    in Connect(HomePage) (created by Route)\r\n    in Route (at App.js:55)\r\n    in Switch (at App.js:49)\r\n    in AppErrorBoundary (at App.js:48)\r\n    in div (at App.js:24)\r\n    in Router (created by HashRouter)\r\n    in HashRouter (at App.js:23)\r\n    in App (created by Connect(App))\r\n    in Connect(App) (at index.js:14)\r\n    in Provider (at index.js:13)\r\n```\r\n",
        "createdAt" : "2019-06-14T22:51:25Z",
        "updatedAt" : "2019-06-20T16:11:11Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "6dc2057dd83ccf532c4e6698741c8e8f1140605b",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +29,33 @@        metricKeyFilterString: urlState.metrics === undefined ? \"\" : urlState.metrics,\n        searchInput: urlState.search === undefined ? \"\" : urlState.search,\n        orderByKey: urlState.orderByKey === undefined ? null : urlState.orderByKey,\n        orderByAsc: urlState.orderByAsc === undefined ? true : urlState.orderByAsc === \"true\",\n      },"
  },
  {
    "id" : "ecf0dada-473e-467c-8625-c790025717f2",
    "prId" : 1455,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1455#pullrequestreview-250161733",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0d69b8d-4d01-4fab-9cc6-98019c582f48",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "I think we unfortunately need to either replicate logic from the constructor in setting these values to non-undefined values or ensure never pass `undefined` here. For example, currently we don't pass `orderByAsc` in [onClear](https://github.com/mlflow/mlflow/pull/1455/files#diff-fa151380130110b5b1f7ba277afb356aR628) so it ends up as undefined here, which results in React warnings like:\r\n\r\n```\r\nWarning: Failed prop type: The prop `orderByAsc` is marked as required in `ExperimentView`, but its value is `undefined`.\r\n    in ExperimentView (created by Connect(ExperimentView))\r\n    in Connect(ExperimentView) (created by Route)\r\n    in Route (created by withRouter(Connect(ExperimentView)))\r\n    in withRouter(Connect(ExperimentView)) (at ExperimentPage.js:167)\r\n    in RequestStateWrapper (created by Connect(RequestStateWrapper))\r\n    in Connect(RequestStateWrapper) (at ExperimentPage.js:144)\r\n    in div (at ExperimentPage.js:143)\r\n    in ExperimentPage (created by Connect(ExperimentPage))\r\n    in Connect(ExperimentPage) (created by Route)\r\n    in Route (created by withRouter(Connect(ExperimentPage)))\r\n    in withRouter(Connect(ExperimentPage)) (at HomeView.js:58)\r\n    in div (at HomeView.js:56)\r\n    in div (at HomeView.js:47)\r\n    in HomeView (created by Connect(HomeView))\r\n    in Connect(HomeView) (at HomePage.js:26)\r\n    in RequestStateWrapper (created by Connect(RequestStateWrapper))\r\n    in Connect(RequestStateWrapper) (at HomePage.js:25)\r\n    in HomePage (created by Connect(HomePage))\r\n    in Connect(HomePage) (created by Route)\r\n    in Route (at App.js:55)\r\n    in Switch (at App.js:49)\r\n    in AppErrorBoundary (at App.js:48)\r\n    in div (at App.js:24)\r\n    in Router (created by HashRouter)\r\n    in HashRouter (at App.js:23)\r\n    in App (created by Connect(App))\r\n    in Connect(App) (at index.js:14)\r\n    in Provider (at index.js:13)\r\n```",
        "createdAt" : "2019-06-14T23:26:05Z",
        "updatedAt" : "2019-06-20T16:11:11Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "6dc2057dd83ccf532c4e6698741c8e8f1140605b",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +107,111 @@        searchInput,\n        orderByKey,\n        orderByAsc,\n      }).toJSON(),\n      lifecycleFilter: lifecycleFilterInput,"
  },
  {
    "id" : "3ed2e67c-89a7-47a2-8df9-9e2a77f8c197",
    "prId" : 1025,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1025#pullrequestreview-220330855",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca9b47ca-bd2c-48b7-bddf-44634a75f703",
        "parentId" : null,
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "QAed this bit manually.",
        "createdAt" : "2019-03-29T00:18:19Z",
        "updatedAt" : "2019-03-29T17:34:29Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      }
    ],
    "commit" : "39a0e1fca496e97d9e9177ad7292dd0bbf467573",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +126,130 @@              } else if (getExperimentRequest.error.getErrorCode() ===\n                  ErrorCodes.PERMISSION_DENIED) {\n                return (<PermissionDeniedView\n                  errorMessage={getExperimentRequest.error.xhr.responseJSON.message}\n                />);"
  }
]