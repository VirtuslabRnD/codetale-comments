[
  {
    "id" : "1654c458-0fbf-45ce-a977-2a0bab934608",
    "prId" : 2459,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2459#pullrequestreview-363870471",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09b6654e-a33e-41c1-bb22-84fe73b5bcfd",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "@smurching Thanks for the fix!",
        "createdAt" : "2020-02-25T04:56:32Z",
        "updatedAt" : "2020-02-25T04:56:32Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "de3fcf627dd6f2ea04446bde0a70df8738ac88f4",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +249,253 @@      newXAxis.showspikes = true;\n    }\n    if (xAxisAutorange) {\n      newXAxis.autorange = true;\n    }"
  },
  {
    "id" : "bfe68839-fa21-45b3-a945-d8854060a5c6",
    "prId" : 2408,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2408#pullrequestreview-360751951",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5ad9ae2-4e30-4ca9-a5cb-5c66b6189aa0",
        "parentId" : null,
        "authorId" : "4f64c319-81b2-4dc8-af79-8a96e80dacf8",
        "body" : "Does it have to be accessed using a path? If not we can simplify this as \r\n```\r\nconst [newXRangeStart, newXRangeEnd] = newLayout.xaxis;\r\n```",
        "createdAt" : "2020-02-18T19:06:04Z",
        "updatedAt" : "2020-02-19T22:03:27Z",
        "lastEditedBy" : "4f64c319-81b2-4dc8-af79-8a96e80dacf8",
        "tags" : [
        ]
      },
      {
        "id" : "b6e5e6c3-f821-4c3a-886b-5b6fc1d88bda",
        "parentId" : "c5ad9ae2-4e30-4ca9-a5cb-5c66b6189aa0",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Unfortunately it does - the actual key is called `\"xaxis.range[0]\"` etc",
        "createdAt" : "2020-02-18T23:38:59Z",
        "updatedAt" : "2020-02-19T22:03:27Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "aaac337a8d3e4f336a84408844d8b68634735bcd",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +221,225 @@    // Unfortunately, we need to parse out the x & y axis range changes from the onLayout event...\n    // see https://plot.ly/javascript/plotlyjs-events/#update-data\n    const newXRange0 = newLayout[\"xaxis.range[0]\"];\n    const newXRange1 = newLayout[\"xaxis.range[1]\"];\n    const newYRange0 = newLayout[\"yaxis.range[0]\"];"
  },
  {
    "id" : "3e60abac-9270-48b3-9832-663e904e4e71",
    "prId" : 2408,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2408#pullrequestreview-360845866",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a072eef-aae0-4d14-a66c-8db6de2b50f9",
        "parentId" : null,
        "authorId" : "240b730c-4fc4-4801-892a-18195816221b",
        "body" : "Can you add a comment explaining what this function is for?",
        "createdAt" : "2020-02-19T05:27:00Z",
        "updatedAt" : "2020-02-19T22:03:27Z",
        "lastEditedBy" : "240b730c-4fc4-4801-892a-18195816221b",
        "tags" : [
        ]
      }
    ],
    "commit" : "aaac337a8d3e4f336a84408844d8b68634735bcd",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +218,222 @@   * and schema.\n   */\n  handleLayoutChange = (newLayout) => {\n    // Unfortunately, we need to parse out the x & y axis range changes from the onLayout event...\n    // see https://plot.ly/javascript/plotlyjs-events/#update-data"
  },
  {
    "id" : "aa167a3d-241c-4639-8f81-f21e64523623",
    "prId" : 2408,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2408#pullrequestreview-362098527",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d98a9b6c-bc47-42ea-a93c-6412f54e2a71",
        "parentId" : null,
        "authorId" : "240b730c-4fc4-4801-892a-18195816221b",
        "body" : "How do you know that the linear y-axis scale we're changing to has negative values?",
        "createdAt" : "2020-02-19T20:45:49Z",
        "updatedAt" : "2020-02-19T22:03:27Z",
        "lastEditedBy" : "240b730c-4fc4-4801-892a-18195816221b",
        "tags" : [
        ]
      },
      {
        "id" : "7f3a61ea-0fdb-499c-a325-b7b504135f2a",
        "parentId" : "d98a9b6c-bc47-42ea-a93c-6412f54e2a71",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "I guess here we're assuming that if `lastLinearYAxisRange` is non-empty, it contains a linear y axis range with negative values. Maybe I can update the name/add a comment to make this clearer...",
        "createdAt" : "2020-02-19T21:57:06Z",
        "updatedAt" : "2020-02-19T22:03:27Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "9004f503-73db-4733-9517-2e4f3c00983f",
        "parentId" : "d98a9b6c-bc47-42ea-a93c-6412f54e2a71",
        "authorId" : "240b730c-4fc4-4801-892a-18195816221b",
        "body" : "Ah got it. Your comment below really clears this up --thanks! (` We set this state attribute if and only if we're converting from ...`)",
        "createdAt" : "2020-02-20T17:35:54Z",
        "updatedAt" : "2020-02-20T17:36:33Z",
        "lastEditedBy" : "240b730c-4fc4-4801-892a-18195816221b",
        "tags" : [
        ]
      }
    ],
    "commit" : "aaac337a8d3e4f336a84408844d8b68634735bcd",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +129,133 @@    // is non-empty, it contains a linear y axis range with negative values.\n    if (!yAxisLogScale && this.state.lastLinearYAxisRange &&\n        this.state.lastLinearYAxisRange.length > 0) {\n      newLayout.yaxis = {\n        type: \"linear\","
  },
  {
    "id" : "2e2da52c-b2e5-4404-80f5-e13c633968e7",
    "prId" : 2393,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2393#pullrequestreview-362463919",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa23d41d-20f3-44af-92e6-ba5b6fe945e2",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "`state` removed in favor of fetching state from the URL",
        "createdAt" : "2020-02-21T08:26:40Z",
        "updatedAt" : "2020-02-26T23:08:41Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "0aca6053b62972d25b7fc0774819ad24987ab374",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +63,67 @@  constructor(props) {\n    super(props);\n    this.state = {\n      historyRequestIds: [],\n    };"
  },
  {
    "id" : "d235bef8-5eed-439c-9dbf-131b94cda4f0",
    "prId" : 2393,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2393#pullrequestreview-362464083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ba8b612-3470-4eef-ab5c-eecfc19e3aa4",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Calls to `setState` replaced with calls to `updateUrlState` (which updates the page URL)",
        "createdAt" : "2020-02-21T08:27:00Z",
        "updatedAt" : "2020-02-26T23:08:41Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "0aca6053b62972d25b7fc0774819ad24987ab374",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +93,97 @@  // Update page URL from component state. Intended to be called after React applies component\n  // state updates, e.g. in a setState callback\n  updateUrlState = (updatedState) => {\n    const { runUuids, metricKey, location, history } = this.props;\n    const experimentId = qs.parse(location.search)['experiment'];"
  },
  {
    "id" : "553843a2-6fd8-4f1f-afbc-fd7481e7b315",
    "prId" : 2393,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2393#pullrequestreview-362464634",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61f5f5b2-e54e-44cd-ab7b-ac448e8d2b95",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Here are the single-click & double-click handlers for curves in the plot legend",
        "createdAt" : "2020-02-21T08:28:15Z",
        "updatedAt" : "2020-02-26T23:08:41Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "0aca6053b62972d25b7fc0774819ad24987ab374",
    "line" : 222,
    "diffHunk" : "@@ -1,1 +313,317 @@  };\n\n  /**\n   * Handle clicking on a single curve within the plot legend in order to toggle its display\n   * on/off."
  },
  {
    "id" : "4b963fb1-b5ac-40f9-bfe1-d0fbd0f3ce85",
    "prId" : 2393,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2393#pullrequestreview-364663723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d721e88-d3a5-4298-80fe-d377c2e88f46",
        "parentId" : null,
        "authorId" : "4f64c319-81b2-4dc8-af79-8a96e80dacf8",
        "body" : "This means we are deriving state from props. Do we have a mechanism to update the current state when this component receives a new `location` prop?",
        "createdAt" : "2020-02-25T01:30:19Z",
        "updatedAt" : "2020-02-26T23:08:41Z",
        "lastEditedBy" : "4f64c319-81b2-4dc8-af79-8a96e80dacf8",
        "tags" : [
        ]
      },
      {
        "id" : "8437ed4c-06ed-4e30-828c-dabc2a15b82f",
        "parentId" : "9d721e88-d3a5-4298-80fe-d377c2e88f46",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Good question, AFAICT this works in the same way as MetricsView used to work, where updates to the page URL (`history.push`) cause a rerender of the entire component tree (but React intelligently reuses existing DOM elements where possible to avoid flashing large portions of the page). I experimentally verified this is the case by adding a `console.log` in MetricPage's `render` method, and observed `MetricPage.render` being called both when UI actions update the URL & when manually editing the URL myself\r\n\r\n",
        "createdAt" : "2020-02-26T07:13:45Z",
        "updatedAt" : "2020-02-26T23:08:41Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "0aca6053b62972d25b7fc0774819ad24987ab374",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +70,74 @@\n  getUrlState() {\n    return Utils.getMetricPlotStateFromUrl(this.props.location.search);\n  }\n"
  },
  {
    "id" : "45c8ffa0-5562-4368-8b4b-e57d5dca2631",
    "prId" : 2393,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2393#pullrequestreview-364657404",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc05b8f7-24be-4be9-ac7b-54067cd5e1ba",
        "parentId" : null,
        "authorId" : "4f64c319-81b2-4dc8-af79-8a96e80dacf8",
        "body" : "Instead of self-handling and maintaining our own state, is it possible to extra selected legends from some Plotly API? That way, we can let Plotly handle the side effect and trigger an update with whatever we get from Plotly after the update.",
        "createdAt" : "2020-02-25T01:44:41Z",
        "updatedAt" : "2020-02-26T23:08:41Z",
        "lastEditedBy" : "4f64c319-81b2-4dc8-af79-8a96e80dacf8",
        "tags" : [
        ]
      },
      {
        "id" : "3614f205-d476-4583-ae57-4c9a5a25a473",
        "parentId" : "dc05b8f7-24be-4be9-ac7b-54067cd5e1ba",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Unfortunately not, AFAICT - it seems the only way to extract information on legend clicks is by handling `plotly_legendclick` and `plotly_legenddoubleclick` events as described in the [Plotly docs](https://plot.ly/javascript/plotlyjs-events/#legend-click-events).\r\n\r\nThe primary reason for maintaining our own state around click times / handling double-clicks ourselves is that Plotly (seemingly incorrectly) calls our single-legend-click event handler twice on double clicks. Thus we need to make our single-click handler (`handleLegendClick`) aware of double-clicks & delegate to the double-click handler (`handleLegendDoubleClick`) when there are two clicks in short succession\r\n\r\n",
        "createdAt" : "2020-02-26T06:56:20Z",
        "updatedAt" : "2020-02-26T23:08:41Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "0aca6053b62972d25b7fc0774819ad24987ab374",
    "line" : 240,
    "diffHunk" : "@@ -1,1 +331,335 @@      const curveKey = Utils.getCurveKey(data[curveNumber].runId, data[curveNumber].metricName);\n      this.legendClickTimeout = window.setTimeout(() => {\n        const existingDeselectedCurves = new Set(state.deselectedCurves);\n        if (existingDeselectedCurves.has(curveKey)) {\n          existingDeselectedCurves.delete(curveKey);"
  },
  {
    "id" : "73b398f8-b148-4b2b-bd1f-20239a366f7d",
    "prId" : 1225,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1225#pullrequestreview-237157689",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca7bdd11-08c4-46d6-9329-730cb9deab20",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "I know we're not super consistent about this in MLflow, but would you mind adding a docstring comment for each of these props? e.g. see [this file](https://github.com/mlflow/mlflow/blob/2a2b2bba3fa2f4c8acfd460e4f3cd7f305ba9c33/mlflow/server/js/src/components/ExperimentView.js#L71) for example. It's particularly helpful for props like `latestMetricsByRunUiud` where the schema of the object isn't obvious.",
        "createdAt" : "2019-05-09T18:43:57Z",
        "updatedAt" : "2019-05-16T00:13:10Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "1cf37d43-7985-4673-ab52-0b3c033b0321",
        "parentId" : "ca7bdd11-08c4-46d6-9329-730cb9deab20",
        "authorId" : "4f64c319-81b2-4dc8-af79-8a96e80dacf8",
        "body" : "Added comments for non-obvious props.",
        "createdAt" : "2019-05-14T10:31:01Z",
        "updatedAt" : "2019-05-16T00:13:10Z",
        "lastEditedBy" : "4f64c319-81b2-4dc8-af79-8a96e80dacf8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a87d2e37686c6a9d0db1a4482da3d502f38fc6b",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +17,21 @@\nexport class MetricsPlotPanel extends React.Component {\n  static propTypes = {\n    runUuids: PropTypes.arrayOf(String).isRequired,\n    metricKey: PropTypes.string.isRequired,"
  }
]