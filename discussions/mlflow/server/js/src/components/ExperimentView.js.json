[
  {
    "id" : "0679361f-acd6-497c-bdbb-ca15b9ed12ec",
    "prId" : 1455,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1455#pullrequestreview-249981255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8480bcd-a57e-4904-86c5-6773ae4af3a4",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Order is now drawn from the API call.",
        "createdAt" : "2019-06-14T15:47:00Z",
        "updatedAt" : "2019-06-20T16:11:11Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6dc2057dd83ccf532c4e6698741c8e8f1140605b",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +764,768 @@  let runUuids;\n  if (searchRunApi.data && searchRunApi.data.runs) {\n    runUuids = searchRunApi.data.runs.map((r) => r.info.run_uuid);\n  } else {\n    runUuids = [];"
  },
  {
    "id" : "be5f3a84-1585-47cf-bf0a-efc6ab0eb894",
    "prId" : 1455,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1455#pullrequestreview-251806928",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c09ff2dc-b600-438e-a1b0-9775ef804674",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "```suggestion\r\n    orderByAsc: PropTypes.bool,\r\n```",
        "createdAt" : "2019-06-18T22:51:16Z",
        "updatedAt" : "2019-06-20T16:11:11Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "413aa145-ddff-4895-b412-31278ef09f00",
        "parentId" : "c09ff2dc-b600-438e-a1b0-9775ef804674",
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "orderByKey is nullable, but orderByAsc is not",
        "createdAt" : "2019-06-19T16:03:29Z",
        "updatedAt" : "2019-06-20T16:11:11Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6dc2057dd83ccf532c4e6698741c8e8f1140605b",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +90,94 @@\n    orderByKey: PropTypes.string,\n    orderByAsc: PropTypes.bool.isRequired,\n\n    // The initial searchInput"
  },
  {
    "id" : "4c416e2c-2a23-4a9e-9367-04e58863bff8",
    "prId" : 1052,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1052#pullrequestreview-228353770",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef7b3403-2aab-4097-82bd-11525bb2bda2",
        "parentId" : null,
        "authorId" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "body" : "Replace \r\n\r\nClick here to learn more about the search syntax.\r\n\r\nwith \r\n\r\nSearch runs using a simplified version of the SQL ``WHERE`` clause.\r\n\r\nIt's then obvious that you click the **Learn more** link following the sentence to learn about the syntax.",
        "createdAt" : "2019-04-18T15:27:43Z",
        "updatedAt" : "2019-04-18T21:25:46Z",
        "lastEditedBy" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "tags" : [
        ]
      }
    ],
    "commit" : "d359d213b813655937de7d0b25142d36ce5da7eb",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +278,282 @@          rel=\"noopener noreferrer\"\n        >\n          Learn more\n        </a>\n      </div>"
  },
  {
    "id" : "5bdaed3a-c54f-4a5b-8067-0a782ae95f65",
    "prId" : 745,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/745#pullrequestreview-185853223",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f6ad50b-aabe-4400-b6dc-594587042ca3",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Based on feedback from @mateiz, made nested runs collapsed by default to make it easier to scroll through large numbers of rows",
        "createdAt" : "2018-12-17T23:52:54Z",
        "updatedAt" : "2018-12-18T03:20:19Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1103d0f3453311874d263e0edf3acae8bec0be1",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +23,27 @@import { ExperimentViewPersistedState } from \"../sdk/MlflowLocalStorageMessages\";\n\nexport const DEFAULT_EXPANDED_VALUE = false;\n\n"
  },
  {
    "id" : "e952da17-b7e6-450b-bdfe-f9ff475309bd",
    "prId" : 687,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/687#pullrequestreview-172754138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae389d89-0ce8-457c-b7fc-8be052656772",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Why are these state instead of props (my understanding here is that ExperimentPage wraps ExperimentView and the former has these as state fields)?",
        "createdAt" : "2018-11-07T21:33:07Z",
        "updatedAt" : "2018-11-08T02:43:33Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "87bd1489-22e9-442e-a39e-ac4a81373b2e",
        "parentId" : "ae389d89-0ce8-457c-b7fc-8be052656772",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "TL;DR: Here we're avoiding snapshotting component state when the user types new text into the metric/param filter boxes (i.e. we don't need to snapshot on each keystroke, only when the user presses \"Search\").\r\n\r\nDetail: yeah this logic is kinda confusing, there's (in ExperimentPagePersistedState):\r\n```\r\n  // Comma-separated string containing containing the keys of parameters to display\r\n  paramKeyFilterString: \"\",\r\n  // Comma-separated string containing containing the keys of metrics to display\r\n  metricKeyFilterString: \"\",\r\n```\r\n\r\nAnd in ExperimentView's props:\r\n```\r\n    // Input to the paramKeyFilter field\r\n    paramKeyFilter: PropTypes.instanceOf(KeyFilter).isRequired,\r\n    // Input to the paramKeyFilter field\r\n    metricKeyFilter: PropTypes.instanceOf(KeyFilter).isRequired,\r\n```\r\n\r\nAnd in ExperimentView's unpersisted state (the initial values of these state fields are actually derived from the `metricKeyFilter` and `paramKeyFilter` props):\r\n```\r\n      // Text entered into the param filter field\r\n      paramKeyFilterInput: '',\r\n      // Text entered into the metric filter field\r\n      metricKeyFilterInput: '',\r\n```\r\n\r\n`ExperimentPage` maintains the last-submitted (via pressing the \"search\" button) metric & param filter strings as component state, passing these along to `ExperimentView` via `KeyFilter` props that can be used to filter which columns appear in the table (the filtering logic will eventually happen server-side  / outside ExperimentView, once we add metric/param filters to the search API). ExperimentView also maintains the text entered into the metric/search filter boxes as unpersisted state so it can pass that text to ExperimentPage on search events.",
        "createdAt" : "2018-11-07T23:51:13Z",
        "updatedAt" : "2018-11-08T02:43:33Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "a001998ee48f8db62311298539dc04c5d3748ee0",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +132,136 @@   */\n  filtersDidUpdate(prevState) {\n    return prevState.paramKeyFilterInput !== this.state.paramKeyFilterInput ||\n      prevState.metricKeyFilterInput !== this.state.metricKeyFilterInput ||\n      prevState.searchInput !== this.state.searchInput;"
  },
  {
    "id" : "1e91c750-90fc-4698-bc5d-e161769a5bf8",
    "prId" : 588,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/588#pullrequestreview-161410756",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1dceeef2-38ee-4354-9805-e83825a95894",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Small bug: I think we need to rename `ExperimentRunsTableCompact.js` -> `ExperimentRunsTableCompactView.js`",
        "createdAt" : "2018-10-03T20:18:12Z",
        "updatedAt" : "2018-10-05T18:11:10Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "e2927bbf-ba1c-4623-8f72-b1d139cb4c54",
        "parentId" : "1dceeef2-38ee-4354-9805-e83825a95894",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Actually, I think we might have just forgotten to include the refactor of `ExperimentRunsTableCompact` in this PR",
        "createdAt" : "2018-10-03T20:24:05Z",
        "updatedAt" : "2018-10-05T18:11:10Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "93a7753f-045f-4b73-a51a-1d01fd71eeab",
        "parentId" : "1dceeef2-38ee-4354-9805-e83825a95894",
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "I think I \"removed\" the wrong unused files in one of the follow-up commits :)",
        "createdAt" : "2018-10-04T00:24:21Z",
        "updatedAt" : "2018-10-05T18:11:10Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      }
    ],
    "commit" : "3cc7138f00b15325163d0c720d50b7c95bda0588",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +16,20 @@\nimport ExperimentRunsTableMultiColumnView from \"./ExperimentRunsTableMultiColumnView\";\nimport ExperimentRunsTableCompactView from \"./ExperimentRunsTableCompactView\";\nimport { LIFECYCLE_FILTER } from './ExperimentPage';\nimport ExperimentViewUtil from './ExperimentViewUtil';"
  },
  {
    "id" : "a3f0cdcd-9ff1-4000-8d2a-55e397413874",
    "prId" : 573,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/573#pullrequestreview-160413776",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "453cc7c3-ad7c-4482-9928-71525650a2d2",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Why does an undefined lifecycle filter show only deleted? This seems as much a bug on the server. ",
        "createdAt" : "2018-10-01T11:49:47Z",
        "updatedAt" : "2018-10-01T11:49:52Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "642a1f28-c47c-4b5c-a8e9-81817e54a31c",
        "parentId" : "453cc7c3-ad7c-4482-9928-71525650a2d2",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Good question, `this.props.onSearch` doesn't actually directly make an API request here - the logic that causes deleted runs to appear is actually in the JS: https://github.com/mlflow/mlflow/blob/master/mlflow/server/js/src/components/ExperimentPage.js#L116 (if `lifecycleFilter` is undefined, we fall through to searching for deleted runs). I'll go ahead & merge this to unblock the release, but we probably should throw an error on an invalid lifecycle stage in that method\r\n\r\n",
        "createdAt" : "2018-10-01T17:57:08Z",
        "updatedAt" : "2018-10-01T17:57:08Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "c11bb08b52e5b8932896a034545feeb0f7d687ba",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +452,456 @@    const andedExpressions = [];\n    this.props.onSearch(paramKeyFilter, metricKeyFilter, andedExpressions, \"\",\n      LIFECYCLE_FILTER.ACTIVE);\n  }\n"
  },
  {
    "id" : "9263eeec-c15f-470c-9e07-0fce74b7a54d",
    "prId" : 546,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/546#pullrequestreview-160525755",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0296dbe1-3aba-44bd-bb0a-17fa34429c3c",
        "parentId" : null,
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "Same here, let's use the classnames module here.",
        "createdAt" : "2018-10-02T02:12:16Z",
        "updatedAt" : "2018-10-02T21:28:31Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea31126af2a8456c38c7e9ae96feb2516edfd1f8",
    "line" : 280,
    "diffHunk" : "@@ -1,1 +544,548 @@\n    metricKeyList.forEach((metricKey, i) => {\n      const className = (i === 0 ? \"left-border\" : \"\") + \" run-table-container\";\n      const keyname = \"metric-\" + metricKey;\n      if (metricsMap[metricKey]) {"
  },
  {
    "id" : "348b9969-6e4d-49ac-a746-082d668ada96",
    "prId" : 546,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/546#pullrequestreview-160568564",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "096f3edd-cfca-4597-b163-78bd2f1d55fb",
        "parentId" : null,
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "Can the hover state be pushed down into the ExperimentCompactView component?",
        "createdAt" : "2018-10-02T02:15:19Z",
        "updatedAt" : "2018-10-02T21:28:31Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      },
      {
        "id" : "acfc2019-69b3-456a-934c-19202d27a46f",
        "parentId" : "096f3edd-cfca-4597-b163-78bd2f1d55fb",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Yeah definitely makes sense for it to be in `ExperimentRunsTableCompact`, the only tricky thing is that `hoverState` / `onHover` are used exclusively in the rows of the compact table, so I'd have to push the row-rendering logic into `ExperimentRunsTableCompact` (which is where it should ultimately live anyways). Happy to do it if it simplifies #567, let me know either way!",
        "createdAt" : "2018-10-02T05:13:19Z",
        "updatedAt" : "2018-10-02T21:28:31Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea31126af2a8456c38c7e9ae96feb2516edfd1f8",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +201,205 @@          hoverState: this.state.hoverState,\n          sortState: this.state.sort,\n          onHover: this.onHover.bind(this),\n          paramsMap: paramsMap,\n          metricsMap: metricsMap,"
  },
  {
    "id" : "3907e1c4-575f-4adb-b82c-3589be55e6c8",
    "prId" : 526,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/526#pullrequestreview-158333144",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4aaa0e6a-403c-423c-98c0-5cb4058fbaa1",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "To confirm: is the intent of this to preserve which runs are selected e.g. after a search? It for some reason doesn't seem to work for me",
        "createdAt" : "2018-09-24T06:31:46Z",
        "updatedAt" : "2018-09-25T01:01:09Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "4006455e-f187-4112-a1e7-e5427651daa3",
        "parentId" : "4aaa0e6a-403c-423c-98c0-5cb4058fbaa1",
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "No, it's actually to remove \"deleted\" runs from the selected set after a deletion happens.",
        "createdAt" : "2018-09-24T23:32:09Z",
        "updatedAt" : "2018-09-25T01:01:09Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      }
    ],
    "commit" : "6962e2ab3422f5ab97ba5578e9cb997d01c3a49f",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +95,99 @@    // Compute the actual runs selected. (A run cannot be selected if it is not passed in as a\n    // prop)\n    const newRunsSelected = {};\n    nextProps.runInfos.forEach((rInfo) => {\n      const prevRunSelected = prevState.runsSelected[rInfo.run_uuid];"
  }
]