[
  {
    "id" : "afd579d0-802b-43f6-812b-8a3200a8bf0e",
    "prId" : 526,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/526#pullrequestreview-158340462",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "347bd41d-3e68-4520-a74a-aa55d5afddb2",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "This code failed for me (`finally` was undefined on the Promise returned by `handleSubmit()`)  until I upgraded chrome, since apparently support for `Promise.finally` [was only released in December 2017](https://developers.google.com/web/updates/2017/12/nic63). Maybe instead we should just put this logic in both a `then` and `catch` block? It's gross but not sure if there's a better solution :/. I guess the more general question is whether we can just assume people are on the latest browsers / how far back we want to go in terms of supporting old browsers.",
        "createdAt" : "2018-09-24T05:04:25Z",
        "updatedAt" : "2018-09-25T01:01:09Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "d0926cab-5605-4b5b-bfb1-f390ab4a604b",
        "parentId" : "347bd41d-3e68-4520-a74a-aa55d5afddb2",
        "authorId" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "body" : "Also good call. I've added the babel-polyfill to our build which includes Promise.finally",
        "createdAt" : "2018-09-25T00:13:25Z",
        "updatedAt" : "2018-09-25T01:01:09Z",
        "lastEditedBy" : "91d7919c-02c4-40e4-8f30-7f297efebb01",
        "tags" : [
        ]
      }
    ],
    "commit" : "6962e2ab3422f5ab97ba5578e9cb997d01c3a49f",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +48,52 @@  handleSubmitWrapper() {\n    this.setState({ isSubmitting: true });\n    this.props.handleSubmit().finally(() => {\n      this.props.onClose();\n      this.setState({ isSubmitting: false });"
  }
]