[
  {
    "id" : "78488cb0-0162-4984-a976-81ba6c809912",
    "prId" : 1455,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1455#pullrequestreview-249983220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0694afe-c6a1-428c-bf73-9ffff6c66f47",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "These are documented in the subsequent commit.",
        "createdAt" : "2019-06-14T15:50:15Z",
        "updatedAt" : "2019-06-20T16:11:11Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6dc2057dd83ccf532c4e6698741c8e8f1140605b",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +30,34 @@  // Canonical order_by key like \"params.`alpha`\". May be null to indicate the table\n  // should use the natural row ordering provided by the server.\n  orderByKey: null,\n  // Whether the order imposed by orderByKey should be ascending or descending.\n  orderByAsc: false,"
  },
  {
    "id" : "0709ce4b-807e-4a62-bc5a-43c2274ff22d",
    "prId" : 687,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/687#pullrequestreview-172705239",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdcf9dd3-cf0d-44f2-8601-17219098b585",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "This is great!",
        "createdAt" : "2018-11-07T21:22:26Z",
        "updatedAt" : "2018-11-08T02:43:33Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a001998ee48f8db62311298539dc04c5d3748ee0",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +0,4 @@/**\n * This class contains definitions of message entities corresponding to data stored in LocalStorage.\n * The backwards-compatibility behavior of these messages is as follows:\n *"
  },
  {
    "id" : "360ad557-33bd-4d8f-833d-d31cf947248e",
    "prId" : 687,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/687#pullrequestreview-172705509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afe355a5-4a08-47c0-bf18-6dcf1bdd7cd4",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "This documentation is awesome, btw, glad you added it.",
        "createdAt" : "2018-11-07T21:23:01Z",
        "updatedAt" : "2018-11-08T02:43:33Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a001998ee48f8db62311298539dc04c5d3748ee0",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@ */\nexport const ExperimentViewPersistedState = Immutable.Record({\n  // Object mapping run UUIDs (strings) to booleans, where a boolean value of true indicates that\n  // a run has been minimized (its child runs are hidden).\n  runsHiddenByExpander: {},"
  },
  {
    "id" : "ff970dd7-273b-438c-80b9-e958f01d16df",
    "prId" : 687,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/687#pullrequestreview-172776142",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54473484-aba8-4347-b5f7-18ca030b1f73",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Does this provide some sort of utility being grouped in its own dictionary? Just wondering if it would be equally good to have names like `sortAscending` / `sortByMetric`, etc. Would just be simpler if there's no other reason.",
        "createdAt" : "2018-11-07T21:23:59Z",
        "updatedAt" : "2018-11-08T02:43:33Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "f8cbceaf-e180-4bc7-b6be-1a2785af2390",
        "parentId" : "54473484-aba8-4347-b5f7-18ca030b1f73",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Yeah seems pretty doable to break this up into separate fields, having the fields grouped together provides the minor convenience of being able to pass `this.state.sort` around instead of multiple separate fields, but does make it less clear what's actually being passed.",
        "createdAt" : "2018-11-07T22:22:51Z",
        "updatedAt" : "2018-11-08T02:43:33Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "37f5cc80-2acd-444a-b889-ab6c6e1b8855",
        "parentId" : "54473484-aba8-4347-b5f7-18ca030b1f73",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Actually, breaking up `sort` would actually be a fairly significant change in terms of LOC - it's used in object form 48 times across ExperimentViewUtil, ExperimentRunsTableMultiColumn, ExperimentRunsTableCompactView. Open to making the change, but will work on addressing the other comments first - let me know if I should try to get the change into this PR.",
        "createdAt" : "2018-11-08T00:01:11Z",
        "updatedAt" : "2018-11-08T02:43:33Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "53d6066e-dd38-42ca-84df-8aaf4fad3c5f",
        "parentId" : "54473484-aba8-4347-b5f7-18ca030b1f73",
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "No, don't bother -- simplifying passing a set of related properties together is utility, so no need to undo it.",
        "createdAt" : "2018-11-08T01:35:24Z",
        "updatedAt" : "2018-11-08T02:43:33Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a001998ee48f8db62311298539dc04c5d3748ee0",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +43,47 @@  runsExpanded: {},\n  // Object describing the sort state of the runs table.\n  sort: {\n    // Boolean indicating whether the rows are sorted in ascending order.\n    ascending: false,"
  }
]