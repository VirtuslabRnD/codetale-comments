[
  {
    "id" : "8793aaec-9304-412e-926f-e843c89a01a7",
    "prId" : 3498,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3498#pullrequestreview-508837933",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21c502fe-ba97-4006-af60-a5b3db83f32a",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "I think this code can be moved to the body of `mlflow.spark.autolog()`, since `SparkAutologgingContext` doesn't depend on anything else in `_listen_for_spark_activity` and appears to be safe to register multiple times.",
        "createdAt" : "2020-10-14T01:04:27Z",
        "updatedAt" : "2020-10-20T22:39:01Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "8edb6ab2-8099-4d47-a830-8014db83f9ed",
        "parentId" : "21c502fe-ba97-4006-af60-a5b3db83f32a",
        "authorId" : "4009fe74-c5d1-469a-bdb2-62f993bc2d7d",
        "body" : "in the case where `_get_current_listener() is None`, we should not trigger this `_run_context_provider_registry.register(SparkAutologgingContext)` according to the existing logic. Leaving this code inside `_listen_for_spark_activity` allows us to maintain this logic, otherwise if we move it outside we would need to check for `get_current_listener()` a second time",
        "createdAt" : "2020-10-14T23:24:37Z",
        "updatedAt" : "2020-10-20T22:39:01Z",
        "lastEditedBy" : "4009fe74-c5d1-469a-bdb2-62f993bc2d7d",
        "tags" : [
        ]
      }
    ],
    "commit" : "daa63ad7b5718ad51285f42818558753e22ff31c",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +143,147 @@    from mlflow.tracking.context.registry import _run_context_provider_registry\n\n    _run_context_provider_registry.register(SparkAutologgingContext)\n\n    _logger.info(\"Autologging successfully enabled for spark.\")"
  },
  {
    "id" : "05c0521c-58cb-4c2f-a771-d3f8b55e5f7a",
    "prId" : 2220,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2220#pullrequestreview-338952254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49c80606-aaf1-418a-b23a-79baf58913ca",
        "parentId" : null,
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "I think there is still a race with start_run, are we aware and ok with it?\r\n\r\n",
        "createdAt" : "2020-01-06T23:44:39Z",
        "updatedAt" : "2020-01-10T02:48:25Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "29b1d8e899d406e01c4ada06835321a5d95d3a99",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@\ndef add_table_info_to_context_provider(path, version, data_format):\n    with _lock:\n        _table_infos.append((path, version, data_format))\n"
  },
  {
    "id" : "7bc2cf5f-6639-403c-b9a8-b239266df569",
    "prId" : 2220,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2220#pullrequestreview-338952254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4123dcac-e42e-417c-a98c-f0013435e6ed",
        "parentId" : null,
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Can you document what is the repl id for and when do you generate a new one?",
        "createdAt" : "2020-01-07T00:10:07Z",
        "updatedAt" : "2020-01-10T02:48:25Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "29b1d8e899d406e01c4ada06835321a5d95d3a99",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +152,156 @@        return repl_id\n    main_file = sys.argv[0] if len(sys.argv) > 0 else \"<console>\"\n    return \"PythonSubscriber[{filename}][{id}]\".format(filename=main_file, id=uuid.uuid4().hex)\n\n"
  }
]