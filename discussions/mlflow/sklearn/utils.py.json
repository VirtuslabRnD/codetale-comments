[
  {
    "id" : "82b9ca97-eaea-4885-bc00-d8653307d2ca",
    "prId" : 4416,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4416#pullrequestreview-685749437",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36c7e7e8-1d84-4ddb-a506-35cef30c3f35",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "This portion of the change integrates the new `MlflowAutologgingQueueingClient` (defined in `mlflow/utils/autologging_utils/client.py`) into the `mlflow.sklearn` autologging integration.",
        "createdAt" : "2021-06-16T23:41:12Z",
        "updatedAt" : "2021-06-16T23:41:12Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0a64505fffd8d07eac9f59b203f05e4c5b27d99",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +5,9 @@from numbers import Number\nimport numpy as np\nimport time\nimport warnings\n"
  },
  {
    "id" : "4e0272cc-3f19-44ba-9471-22588cc20148",
    "prId" : 4382,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4382#pullrequestreview-667225690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dba2c023-47c5-49d3-97db-e3cf5b461cdb",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "What happens if  a custom rank column is not identified? Perhaps we should pick the first `n` runs and warn the user?",
        "createdAt" : "2021-05-21T06:26:41Z",
        "updatedAt" : "2021-05-21T06:26:42Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "31575f71-b740-47da-ab30-a09bf3edecb8",
        "parentId" : "dba2c023-47c5-49d3-97db-e3cf5b461cdb",
        "authorId" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "body" : "It should be identified, that is what we expect from [cv_results_](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.GridSearchCV.html#sklearn.model_selection.GridSearchCV). If a rank column is not identified then I think something bigger has gone wrong in the training and this will be gracefully handled because all of [_create_child_runs_for_parameter_search](https://github.com/mlflow/mlflow/blob/master/mlflow/sklearn/__init__.py#L819) is wrapped in a try catch",
        "createdAt" : "2021-05-24T18:31:13Z",
        "updatedAt" : "2021-05-24T18:31:13Z",
        "lastEditedBy" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "tags" : [
        ]
      },
      {
        "id" : "68fdef6d-f1ff-4318-b657-d4ccab646f5b",
        "parentId" : "dba2c023-47c5-49d3-97db-e3cf5b461cdb",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "I don't see `rank_test` explicitly defined in the contract of [cv_results_](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.GridSearchCV.html#sklearn.model_selection.GridSearchCV), though it's used in an example.\r\n\r\nRegardless, try/catch is fine as long as we have test coverage here. Can we confirm that we test our handling of child run creation failures for hyperparameter search and introduce coverage if we don't?",
        "createdAt" : "2021-05-24T18:45:20Z",
        "updatedAt" : "2021-05-24T18:45:20Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "cc2a5b82-c9bd-4f82-afdd-ec45960f34aa",
        "parentId" : "dba2c023-47c5-49d3-97db-e3cf5b461cdb",
        "authorId" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "body" : "<img width=\"884\" alt=\"Screen Shot 2021-05-24 at 12 29 37 PM\" src=\"https://user-images.githubusercontent.com/73549313/119398144-fdd4f480-bc8b-11eb-86e8-4e3594e26609.png\">\r\n\r\nThe example is the only location where they provide docs for `cv_results_`",
        "createdAt" : "2021-05-24T19:32:02Z",
        "updatedAt" : "2021-05-24T19:54:41Z",
        "lastEditedBy" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "tags" : [
        ]
      },
      {
        "id" : "d412c451-a980-45c6-a71f-50e1603c33b9",
        "parentId" : "dba2c023-47c5-49d3-97db-e3cf5b461cdb",
        "authorId" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "body" : "Also we already do have test coverage for graceful failing of [_create_child_runs_for_parameter_search()](https://github.com/mlflow/mlflow/blob/master/tests/sklearn/test_sklearn_autolog.py#L848) ",
        "createdAt" : "2021-05-24T20:58:08Z",
        "updatedAt" : "2021-05-24T20:58:08Z",
        "lastEditedBy" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "tags" : [
        ]
      },
      {
        "id" : "9b10b93a-8943-4ce7-9b53-7fdeb10e3cdd",
        "parentId" : "dba2c023-47c5-49d3-97db-e3cf5b461cdb",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Not to be pedantic, but the above text is just an example indicating how a Pandas DataFrame with particular columns (e.g. `rank_test_score`) is translated into a `cv_results_` dictionary; it does not explicitly stipulate that `rank_test_*` metrics are always computed, even if that is the case. Regardless, glad we have coverage! Thank you for auditing!",
        "createdAt" : "2021-05-24T21:54:33Z",
        "updatedAt" : "2021-05-24T21:54:33Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "2c6ee494-5a4f-476d-b364-ee33bed9953b",
        "parentId" : "dba2c023-47c5-49d3-97db-e3cf5b461cdb",
        "authorId" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "body" : "No problem, thanks for the diligent review of my PR!",
        "createdAt" : "2021-05-24T21:59:56Z",
        "updatedAt" : "2021-05-24T21:59:56Z",
        "lastEditedBy" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "tags" : [
        ]
      },
      {
        "id" : "1d0158c9-ef69-46b2-aefa-550946fb6000",
        "parentId" : "dba2c023-47c5-49d3-97db-e3cf5b461cdb",
        "authorId" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "body" : "That makes sense, they never explicitly listed what are the contents of `cv_results_` technically.",
        "createdAt" : "2021-05-24T22:01:06Z",
        "updatedAt" : "2021-05-24T22:01:06Z",
        "lastEditedBy" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ad089eafaea1366c1ffb680108b2b8f7ad5dee3",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +624,628 @@    import pandas as pd\n\n    def first_custom_rank_column(df):\n        column_names = df.columns.values\n        for col_name in column_names:"
  },
  {
    "id" : "a75acb03-6670-43e9-b907-6f0f5f699719",
    "prId" : 4218,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4218#pullrequestreview-626518027",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fa46343-afda-434b-a009-b0e6e7e6c9d3",
        "parentId" : null,
        "authorId" : "1b6f9778-4aa7-4624-a54a-7d13658a8187",
        "body" : "A bit hard to guess what the method does by name \"content\".",
        "createdAt" : "2021-03-31T18:18:41Z",
        "updatedAt" : "2021-04-06T04:57:42Z",
        "lastEditedBy" : "1b6f9778-4aa7-4624-a54a-7d13658a8187",
        "tags" : [
        ]
      },
      {
        "id" : "7b45e1cb-6666-4848-a2ff-d0d2203a1f82",
        "parentId" : "1fa46343-afda-434b-a009-b0e6e7e6c9d3",
        "authorId" : "13c2fe5d-a515-45e7-aa45-fbbe80a8a8a0",
        "body" : "I was reusing the existing naming of log_specialized_estimator_content. If I had to take a guess then I would say that it's vague on purpose to allow for logging of several \"stuff\" in future iterations? (Right now it only logs metrics and artifacts)",
        "createdAt" : "2021-03-31T22:22:30Z",
        "updatedAt" : "2021-04-06T04:57:42Z",
        "lastEditedBy" : "13c2fe5d-a515-45e7-aa45-fbbe80a8a8a0",
        "tags" : [
        ]
      },
      {
        "id" : "8fe53663-0eb1-4160-bb4d-01f4a5b0ac07",
        "parentId" : "1fa46343-afda-434b-a009-b0e6e7e6c9d3",
        "authorId" : "1b6f9778-4aa7-4624-a54a-7d13658a8187",
        "body" : "Okay. I couldn't think of a better name ...",
        "createdAt" : "2021-04-01T18:04:32Z",
        "updatedAt" : "2021-04-06T04:57:42Z",
        "lastEditedBy" : "1b6f9778-4aa7-4624-a54a-7d13658a8187",
        "tags" : [
        ]
      }
    ],
    "commit" : "2039111a72896c3c2015692d608e4c1297957188",
    "line" : 361,
    "diffHunk" : "@@ -1,1 +474,478 @@\n\ndef _log_estimator_content(estimator, run_id, prefix, X, y_true, sample_weight):\n    \"\"\"\n    Logs content for the given estimator, which includes metrics and artifacts that might be"
  },
  {
    "id" : "1e8366a6-8fb7-4d06-a51b-fc2c856e0c76",
    "prId" : 3993,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3993#pullrequestreview-569980274",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13bd5e52-9385-482f-b251-944979635a16",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "If `_is_plotting_supported` returns False, we don't need to execute the subsequent process and can exit here with an empty list.",
        "createdAt" : "2021-01-17T01:54:26Z",
        "updatedAt" : "2021-01-19T07:26:26Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3b90982c34ffeac6fa88229220bdab5dff7d01d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +288,292 @@\n    if not _is_plotting_supported():\n        return []\n\n    fit_arg_names = _get_arg_names(fitted_estimator.fit)"
  },
  {
    "id" : "604cacd0-2872-4b30-a544-15bbf779fc60",
    "prId" : 3993,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3993#pullrequestreview-570052099",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1379a6b-8c9f-4cca-96c6-4180c3610fe4",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "This change broke `test_autolog_emits_warning_message_when_model_prediction_fails` which assumes `_logger.warning` is called on `predict` failure here.",
        "createdAt" : "2021-01-17T12:21:17Z",
        "updatedAt" : "2021-01-19T07:26:26Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3b90982c34ffeac6fa88229220bdab5dff7d01d",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +291,295 @@\n    fit_arg_names = _get_arg_names(fitted_estimator.fit)\n    X, y_true = _get_Xy(fit_args, fit_kwargs, *fit_arg_names[:2])\n    sample_weight = (\n        _get_sample_weight(fit_arg_names, fit_args, fit_kwargs)"
  },
  {
    "id" : "0e0352e6-22ef-4646-91cd-1e9ba976aa33",
    "prId" : 3703,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3703#pullrequestreview-531673332",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77b37210-3f3b-4c86-8202-950d152871fc",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Sklearn's plotting functionality depends on matplotlib; accordingly, we do not anticipate that this import will fail",
        "createdAt" : "2020-11-16T20:06:42Z",
        "updatedAt" : "2020-11-16T22:38:11Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "24cd6a00d01df6d0a65fd3bc4e87f826efbb7dea",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +500,504 @@                    filepath = tmp_dir.path(\"{}.png\".format(artifact.name))\n                    display.figure_.savefig(filepath)\n                    import matplotlib.pyplot as plt\n\n                    plt.close(display.figure_)"
  },
  {
    "id" : "0c7c7f48-fda3-4c07-b9b0-ee6f163e4f4e",
    "prId" : 3423,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3423#pullrequestreview-488311391",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d4ec10b-433e-4dd9-9922-36dae971b0e2",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Close the figure after saving it to address https://github.com/mlflow/mlflow/pull/3369#discussion_r484023859.",
        "createdAt" : "2020-09-15T04:20:37Z",
        "updatedAt" : "2020-09-17T04:23:09Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2b1a72c1d48ad0814ef295fa34a3e4e63b9533d",
    "line" : 318,
    "diffHunk" : "@@ -1,1 +501,505 @@                    filepath = tmp_dir.path(\"{}.png\".format(artifact.name))\n                    display.figure_.savefig(filepath)\n                    plt.close(display.figure_)\n                except Exception as e:  # pylint: disable=broad-except\n                    _log_warning_for_artifacts(artifact.name, artifact.function, e)"
  },
  {
    "id" : "3ab796b6-4d60-4621-8db4-aa417f745836",
    "prId" : 3423,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3423#pullrequestreview-490247062",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "670ce2fa-8093-4838-93c4-7ab366536661",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "@dbczumar Resolved artifacts one-by-one (https://github.com/mlflow/mlflow/pull/3423#discussion_r489575277)",
        "createdAt" : "2020-09-17T05:11:27Z",
        "updatedAt" : "2020-09-17T05:11:28Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2b1a72c1d48ad0814ef295fa34a3e4e63b9533d",
    "line" : 318,
    "diffHunk" : "@@ -1,1 +501,505 @@                    filepath = tmp_dir.path(\"{}.png\".format(artifact.name))\n                    display.figure_.savefig(filepath)\n                    plt.close(display.figure_)\n                except Exception as e:  # pylint: disable=broad-except\n                    _log_warning_for_artifacts(artifact.name, artifact.function, e)"
  },
  {
    "id" : "40b76300-f3c3-49cb-bb61-c5ed96db4771",
    "prId" : 3327,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3327#pullrequestreview-478011619",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4beec322-add9-418d-b2e6-93a51f5747ee",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Awesome! Can we add a test for the case when model prediction fails to ensure that we log a warning but don't throw an exception?",
        "createdAt" : "2020-08-28T17:29:45Z",
        "updatedAt" : "2020-09-01T22:08:13Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "99668231-663e-49ab-bbd1-e669b10b956c",
        "parentId" : "4beec322-add9-418d-b2e6-93a51f5747ee",
        "authorId" : "f301d05f-915e-455c-97c1-f47dcbe1b9cb",
        "body" : "Added a test:)",
        "createdAt" : "2020-08-28T20:36:56Z",
        "updatedAt" : "2020-09-01T22:08:13Z",
        "lastEditedBy" : "f301d05f-915e-455c-97c1-f47dcbe1b9cb",
        "tags" : [
        ]
      }
    ],
    "commit" : "574fe278b06a50ec305ee820c175d53b38179b9b",
    "line" : 270,
    "diffHunk" : "@@ -1,1 +344,348 @@    name_metric_dict = {}\n    try:\n        if sklearn.base.is_classifier(fitted_estimator):\n            name_metric_dict = _get_classifier_metrics(fitted_estimator, fit_args, fit_kwargs)\n        elif sklearn.base.is_regressor(fitted_estimator):"
  },
  {
    "id" : "7da71d30-9d56-42fc-ae43-889f7f855add",
    "prId" : 3323,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3323#pullrequestreview-475058288",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28f57a0c-2eba-4111-9ddb-b2420b60b9c8",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Made some small tweaks here to ellipsize during truncation and avoid logging the entire original key / value in order to reduce noisiness of stdout",
        "createdAt" : "2020-08-25T02:24:10Z",
        "updatedAt" : "2020-08-27T02:49:52Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "608c6140-a6ea-4409-95eb-322785766b00",
        "parentId" : "28f57a0c-2eba-4111-9ddb-b2420b60b9c8",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Awesome! thanks for adding this.",
        "createdAt" : "2020-08-25T23:45:47Z",
        "updatedAt" : "2020-08-27T02:49:52Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ab9325258f8cc72afd71c7569ae921f08e8a353",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +113,117 @@\ndef _truncate_dict(d, max_key_length=None, max_value_length=None):\n    def _truncate_and_ellipsize(value, max_length):\n        return str(value)[: (max_length - 3)] + \"...\"\n"
  },
  {
    "id" : "f4d6de35-564f-4434-805d-3bf9ab85f629",
    "prId" : 3323,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3323#pullrequestreview-475746032",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9618b3a2-e4c2-4422-8580-b2336f6a6d6d",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "We could replace this with `tempfile.TemporaryDicretory`: https://docs.python.org/3/library/tempfile.html#tempfile.TemporaryDirectory",
        "createdAt" : "2020-08-25T22:52:52Z",
        "updatedAt" : "2020-08-27T02:49:52Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "29962710-9920-4f8e-a07b-5f77bbb5d276",
        "parentId" : "9618b3a2-e4c2-4422-8580-b2336f6a6d6d",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "I think the reason that we have been using this is that Python 2 (which we no longer support) doesn't support this context manager.",
        "createdAt" : "2020-08-25T23:47:09Z",
        "updatedAt" : "2020-08-27T02:49:52Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "c9ace7e0-30f2-48d4-b6c0-85a8a7508864",
        "parentId" : "9618b3a2-e4c2-4422-8580-b2336f6a6d6d",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "I think `mlflow.utils.file_utils.TempDir()` provides a couple of nice additions to `TemporaryDirectory()`:\r\n\r\n1. The `path()` function can be easily used to obtain the path to a location within the directory\r\n2. The `chdr` option of the constructor allows callers to change the current working directory within the TempDir() context.\r\n\r\nGiven the utility of these extra features and the fact that `TempDir()` seems to have worked reliably throughout MLflow for the last couple of years, I'm inclined to continue using it. Let me know if you still feel strongly that we should leverage TemporaryDirectory instead, though!",
        "createdAt" : "2020-08-26T19:36:32Z",
        "updatedAt" : "2020-08-27T02:49:52Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ab9325258f8cc72afd71c7569ae921f08e8a353",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +191,195 @@    :param run_id: The ID of the MLflow Run to which the artifact should be recorded.\n    \"\"\"\n    with TempDir() as t:\n        results_path = t.path(\"cv_results.csv\")\n        cv_results_df.to_csv(results_path, index=False)"
  },
  {
    "id" : "1e47f54a-a8e9-408f-af09-989242f21169",
    "prId" : 3323,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3323#pullrequestreview-476024559",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b127ae20-8bb3-487a-a441-696e8eec8915",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Not sure if we really need to fix this, but this function returns `True` when the estimator is **a subclass** of `GridSearchCV` or `RandomizedSearchCV`.\r\n\r\n```python\r\nfrom sklearn.model_selection import GridSearchCV\r\n\r\n\r\nclass NewGridSearchCV(GridSearchCV):\r\n    def __init__(self):\r\n        pass\r\n\r\n\r\nngs = NewGridSearchCV()\r\nprint(isinstance(ngs, GridSearchCV))\r\nprint(ngs.__class__ == NewGridSearchCV)\r\nprint(ngs.__class__ == GridSearchCV)\r\n\r\n# output\r\nTrue\r\nTrue\r\nFalse\r\n```\r\n\r\n",
        "createdAt" : "2020-08-26T00:06:24Z",
        "updatedAt" : "2020-08-27T02:49:52Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "e3fc2cc9-1190-4315-8792-3316a6ee2091",
        "parentId" : "b127ae20-8bb3-487a-a441-696e8eec8915",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Looks like there is no class that inherits from `GridSearchCV` or `RandomizedSearchCV`.\r\n\r\n```python\r\nimport sklearn\r\n\r\nfrom sklearn.model_selection import GridSearchCV, RandomizedSearchCV\r\n\r\n\r\nfor _, class_def in sklearn.utils.all_estimators():\r\n    for func_name in [\"fit\"]:\r\n        if issubclass(class_def, GridSearchCV) or issubclass(class_def, RandomizedSearchCV):\r\n            print(class_def)\r\n\r\n# output\r\n<class 'sklearn.model_selection._search.GridSearchCV'>\r\n<class 'sklearn.model_selection._search.RandomizedSearchCV'>\r\n```",
        "createdAt" : "2020-08-26T00:10:44Z",
        "updatedAt" : "2020-08-27T02:49:52Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "7612ab15-b3b9-4310-a7ef-19f4f5a21821",
        "parentId" : "b127ae20-8bb3-487a-a441-696e8eec8915",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Thanks for pointing this out. I don't think we need to worry too much about subclasses of GridSearch / RandomizedSearch CV because:\r\n\r\n1. As you pointed out, sklearn doesn't define any subclasses natively\r\n2.  In most practical circumstances, we would likely only explicitly patch the fit* functions of Grid/RandomizedSearch CV, not of subclasses. Even if there were such a subclass, we wouldn't patch the fit() function (unless it was added to the output of `all_estimators()`) and, therefore, wouldn't end up invoking this utility.",
        "createdAt" : "2020-08-26T18:31:49Z",
        "updatedAt" : "2020-08-27T02:49:52Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "ff696814-8df1-4089-8c81-c2ffd97f014f",
        "parentId" : "b127ae20-8bb3-487a-a441-696e8eec8915",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "makes sense :)",
        "createdAt" : "2020-08-26T22:55:31Z",
        "updatedAt" : "2020-08-27T02:49:52Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ab9325258f8cc72afd71c7569ae921f08e8a353",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +177,181 @@            for param_search_estimator in parameter_search_estimators\n        ]\n    )\n\n"
  },
  {
    "id" : "e3564626-d8a7-444a-9cef-bd415393899d",
    "prId" : 3287,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3287#pullrequestreview-472613639",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ab1bcd7-f751-4304-8d4c-469afa988090",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Does the variable name `_MIN_SKLEARN_VERSION ` make sense?",
        "createdAt" : "2020-08-20T23:37:40Z",
        "updatedAt" : "2020-08-22T13:15:08Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "2be59da5-9d73-41ae-8fef-75043e4bacf8",
        "parentId" : "0ab1bcd7-f751-4304-8d4c-469afa988090",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Makes perfect sense to me! For clarity, we can add a comment above indicating that this is the earliest version we're guaranteed to support, though autologging may work for slightly older versions.",
        "createdAt" : "2020-08-21T16:09:24Z",
        "updatedAt" : "2020-08-22T13:15:08Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "86a008595f5ef17520849ab1e871dce5a91cee6c",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +8,12 @@# The earliest version we're guaranteed to support. Autologging utilities may not work properly\n# on scikit-learn older than this version.\n_MIN_SKLEARN_VERSION = \"0.20.3\"\n\n_SAMPLE_WEIGHT = \"sample_weight\""
  }
]