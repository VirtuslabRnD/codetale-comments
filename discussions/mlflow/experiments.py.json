[
  {
    "id" : "64888d3e-ffb0-4c40-93c4-546e1bf4cec7",
    "prId" : 1705,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1705#pullrequestreview-275655215",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "524efc27-2b6f-4b19-a6d6-6665fe13e8bd",
        "parentId" : null,
        "authorId" : "ef7f4fc4-8253-410e-bcf1-8d5fe4cd38b3",
        "body" : "This line can probably be removed. Unfortunately MLflow still has to support python 2 implicit type inference.",
        "createdAt" : "2019-08-12T22:02:44Z",
        "updatedAt" : "2019-09-11T11:49:17Z",
        "lastEditedBy" : "ef7f4fc4-8253-410e-bcf1-8d5fe4cd38b3",
        "tags" : [
        ]
      },
      {
        "id" : "6d5971c9-486c-4f60-9c1f-5169449132d9",
        "parentId" : "524efc27-2b6f-4b19-a6d6-6665fe13e8bd",
        "authorId" : "12e55ba4-5191-43ae-a814-1e9a4ba0c76b",
        "body" : "Added a test with None and Nan support. A parameter of to_csv method controls how to export Nan value. I kept the default value that is an empty string.\r\n\r\nThis kind of comment is how to declare the signature with python2 (https://mypy.readthedocs.io/en/latest/python2.html). I often annotate my functions with the signature because mypy catches lot of errors.\r\nIf you didn't already set it, I can create an issue to add mypy checks in travis. WDYT ?",
        "createdAt" : "2019-08-15T13:27:21Z",
        "updatedAt" : "2019-09-11T11:49:17Z",
        "lastEditedBy" : "12e55ba4-5191-43ae-a814-1e9a4ba0c76b",
        "tags" : [
        ]
      },
      {
        "id" : "92abacd6-4cf5-4c1d-a2fa-fa61adee99bb",
        "parentId" : "524efc27-2b6f-4b19-a6d6-6665fe13e8bd",
        "authorId" : "ef7f4fc4-8253-410e-bcf1-8d5fe4cd38b3",
        "body" : "Ahh I see. My bad. I'll bring up integrating mypy checks with the team, but it doesn't hurt to add an issue for it. Others on github can upvote it, etc.",
        "createdAt" : "2019-08-15T20:47:42Z",
        "updatedAt" : "2019-09-11T11:49:17Z",
        "lastEditedBy" : "ef7f4fc4-8253-410e-bcf1-8d5fe4cd38b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "aebfa7e0fdb28e564c3f4001b3fa828835bbd232",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +115,119 @@@click.option(\"--filename\", \"-o\", type=click.STRING)\ndef generate_csv_with_runs(experiment_id, filename):\n    # type: (str, str) -> None\n    \"\"\"\n    Generate CSV with all runs for an experiment"
  },
  {
    "id" : "617b4e70-307a-4316-91c1-1dc6cf6daa97",
    "prId" : 200,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/200#pullrequestreview-140877792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "889ce2a1-6fe8-404d-a920-8334094dcd08",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Fixed these methods not to rely on the local file store. @tomasatdatabricks ",
        "createdAt" : "2018-07-26T19:33:56Z",
        "updatedAt" : "2018-07-30T16:45:28Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "82eb542ecf41ee26b683ac5118d6653a3e43eb61",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +18,22 @@@commands.command()\n@click.argument(\"experiment_name\")\ndef create(experiment_name):\n    \"\"\"\n    Creates a new experiment in the configured tracking server."
  },
  {
    "id" : "adf1cfa3-315d-45f3-a4f5-7456d00b1cb4",
    "prId" : 78,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/78#pullrequestreview-132194879",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1c9ef00-558f-44d2-831f-d2d96d39614f",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Nit: should we use `mlflow.logging.utils.eprint`? IMO at some point we should switch to using the Python `logging` module.",
        "createdAt" : "2018-06-26T06:40:44Z",
        "updatedAt" : "2018-06-26T20:43:53Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "c9994cb9-5baa-416a-a0aa-1f2e9247ca53",
        "parentId" : "c1c9ef00-558f-44d2-831f-d2d96d39614f",
        "authorId" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "body" : "This is the output from a CLI command, so I'm not sure it should go to stderr. It's not really logging.",
        "createdAt" : "2018-06-26T20:38:16Z",
        "updatedAt" : "2018-06-26T20:43:53Z",
        "lastEditedBy" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "7cff8e6ff7aafa331f2531ce0d0266f72cc767cb",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +28,32 @@    fs = store.FileStore(file_store, artifact_root)\n    exp_id = fs.create_experiment(experiment_name)\n    print(\"Created experiment '%s' with id %d\" % (experiment_name, exp_id))\n\n"
  }
]