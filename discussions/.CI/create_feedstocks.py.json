[
  {
    "id" : "d8accfbc-75a1-4928-9dd2-798553a4dd5a",
    "prId" : 3986,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/3986#pullrequestreview-64657176",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d04bd293-1460-4d09-8e1a-e25a7a9570cf",
        "parentId" : null,
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "Adding `--add-teams` here does the same thing. I think it's better to have it in this repo because the webservice sometimes fails and trying this here makes sure the team is created.",
        "createdAt" : "2017-09-19T15:56:28Z",
        "updatedAt" : "2017-09-22T17:21:09Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      },
      {
        "id" : "39bbbf95-eedf-4edc-833a-a9b62b5d4315",
        "parentId" : "d04bd293-1460-4d09-8e1a-e25a7a9570cf",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Yep, we can certainly add that flag here. That was my initial plan when adding that flag to `conda-smithy`.\r\n\r\nThough would like to see the webservice get more robust. Had noticed issues began with the linter some time back when PR ( https://github.com/conda-forge/conda-forge-webservices/pull/76 ) went in. Expect there is something off with that change to the webservices, but never narrowed down what.",
        "createdAt" : "2017-09-19T16:58:24Z",
        "updatedAt" : "2017-09-22T17:21:09Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "1a32405b-2900-48d6-9e6c-ae77b7a40ce3",
        "parentId" : "d04bd293-1460-4d09-8e1a-e25a7a9570cf",
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "Okay, then let's wait till the new conda-smithy  release because I fixed a bug there in adding teams",
        "createdAt" : "2017-09-19T18:32:42Z",
        "updatedAt" : "2017-09-22T17:21:09Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      },
      {
        "id" : "1e7c94a9-2d94-40f9-abf1-1ca411c01722",
        "parentId" : "d04bd293-1460-4d09-8e1a-e25a7a9570cf",
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "I think https://github.com/conda-forge/conda-forge-webservices/commit/e14f009d54829d3b6d97fed829245dd65dc43f4c is what is causing the issues. In this, `remote_repo.get_pull` is failing with 404. Maybe the webhook event is sent before the Github API is updated to reflect the new PR.",
        "createdAt" : "2017-09-20T18:22:31Z",
        "updatedAt" : "2017-09-22T17:21:09Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      },
      {
        "id" : "865c44f1-77cb-420a-be1a-c28e33cb7c69",
        "parentId" : "d04bd293-1460-4d09-8e1a-e25a7a9570cf",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Hmm...that's disappointing. Were you seeing this in the Heroku logs?\r\n\r\nHad thought about adding a small timeout and retrying some fixed number of times (maybe 3-5). What do you think?",
        "createdAt" : "2017-09-21T19:50:53Z",
        "updatedAt" : "2017-09-22T17:21:09Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "07a33b60-8da1-4cfd-be73-5b1c5e31261c",
        "parentId" : "d04bd293-1460-4d09-8e1a-e25a7a9570cf",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Sorry for the digression, we can revisit that at the webservices repo.\r\n\r\nHave added the `--add-teams` flag here.",
        "createdAt" : "2017-09-22T14:59:38Z",
        "updatedAt" : "2017-09-22T17:21:09Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "06b7a879-49bb-4576-9885-860f0a7cd8af",
        "parentId" : "d04bd293-1460-4d09-8e1a-e25a7a9570cf",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Moved the call to `register-github` with the `--add-teams` flag later on to make sure the feedstock has already been created and is fully functional before giving out permissions.",
        "createdAt" : "2017-09-22T18:09:14Z",
        "updatedAt" : "2017-09-22T18:09:14Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "651e5e8e90f496a4a5bc8b3d99a6b8f09c6346f5",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +149,153 @@                    subprocess.check_call(['git', 'checkout', '-b' 'master'], cwd=feedstock_dir)\n            else:\n                subprocess.check_call(['conda', 'smithy', 'register-github', feedstock_dir] + owner_info)\n\n        # Break the previous loop to allow the TravisCI registering to take place only once per function call."
  },
  {
    "id" : "6782e82e-a79e-4e66-935c-05eee293062e",
    "prId" : 3986,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/3986#pullrequestreview-64767407",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e1e8eea-49cf-47df-92d3-2facc1e15a07",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Tries adding the feedstock's team and members to it only after pushing to the feedstock has succeeded. This way permissions are only given once the feedstock is fully up and operational. If conversion fails before this point and the feedstock is malformed, the maintainers won't have permissions yet. This matches with how team member additions are handled now.",
        "createdAt" : "2017-09-22T18:17:41Z",
        "updatedAt" : "2017-09-22T18:17:41Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "3580f31d-55b9-438e-b331-534b47ec30b5",
        "parentId" : "6e1e8eea-49cf-47df-92d3-2facc1e15a07",
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "FYI, with the webservice in mind, the maintainers will have permission when the interpreter reaches here unless the webservice failed.",
        "createdAt" : "2017-09-22T18:21:12Z",
        "updatedAt" : "2017-09-22T18:21:13Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      },
      {
        "id" : "53811d46-2abc-4017-a08f-7cbfc3323d3c",
        "parentId" : "6e1e8eea-49cf-47df-92d3-2facc1e15a07",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "That's correct.",
        "createdAt" : "2017-09-22T18:54:42Z",
        "updatedAt" : "2017-09-22T18:54:42Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "9fb0ef55-9ba8-4082-bf7d-3f4e56024263",
        "parentId" : "6e1e8eea-49cf-47df-92d3-2facc1e15a07",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "IOW this is only a safeguard that we will probably drop down the line once we are satisfied with the webservice's behavior.",
        "createdAt" : "2017-09-22T18:55:37Z",
        "updatedAt" : "2017-09-22T18:55:38Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "894a00bb-aab7-4d8b-a915-dea770df4050",
        "parentId" : "6e1e8eea-49cf-47df-92d3-2facc1e15a07",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "I guess we can drop this line now. That said, am ok with leaving it as a safeguard.",
        "createdAt" : "2017-09-24T17:00:24Z",
        "updatedAt" : "2017-09-24T17:00:25Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "651e5e8e90f496a4a5bc8b3d99a6b8f09c6346f5",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +174,178 @@                    out = subprocess.check_output(['git', 'push', 'upstream_with_token', 'HEAD:master'], cwd=feedstock_dir,\n                                                  stderr=subprocess.STDOUT)\n                    subprocess.check_call(['conda', 'smithy', 'register-github', '--add-teams', feedstock_dir] + owner_info)\n                    break\n                except subprocess.CalledProcessError:"
  },
  {
    "id" : "479e31f4-392f-4a02-b3c3-0c070b2f5efd",
    "prId" : 1675,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/1675#pullrequestreview-2648358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8ce8d98-4adc-4e77-be7e-29fd10ec5fb1",
        "parentId" : null,
        "authorId" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "body" : "I was expecting to see another push here. Is that intentionally missing?\n",
        "createdAt" : "2016-09-30T05:44:37Z",
        "updatedAt" : "2016-10-09T15:42:40Z",
        "lastEditedBy" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "tags" : [
        ]
      },
      {
        "id" : "d4087ea0-cd2e-4468-b9c9-be43413ea8d7",
        "parentId" : "f8ce8d98-4adc-4e77-be7e-29fd10ec5fb1",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "That's what the loop is for. ðŸ˜‰\n\nTo explain a bit more if we are in this branch we are going to go back through the loop. As the first thing in the loop is to push, we are covered.\n\nIn other words, this is where Python could benefit from a `do...while` construct.\n",
        "createdAt" : "2016-09-30T13:04:29Z",
        "updatedAt" : "2016-10-09T15:42:40Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "7f98ffad-a68c-4f0b-908d-f5160ba5edfa",
        "parentId" : "f8ce8d98-4adc-4e77-be7e-29fd10ec5fb1",
        "authorId" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "body" : "I see the while now. Can you remove the while and replace it will an `for attempt in range(5):` just in case we get ourselves into writing an infinite loop...\n",
        "createdAt" : "2016-10-01T06:17:33Z",
        "updatedAt" : "2016-10-09T15:42:40Z",
        "lastEditedBy" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "tags" : [
        ]
      },
      {
        "id" : "aa21d7b4-01fc-4314-b010-267826824bb9",
        "parentId" : "f8ce8d98-4adc-4e77-be7e-29fd10ec5fb1",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Done.\n",
        "createdAt" : "2016-10-04T04:45:37Z",
        "updatedAt" : "2016-10-09T15:42:40Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "a48113c2ebcbac6b8c180650d00d9d462ff27be9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +221,225 @@                    subprocess.check_call(['git', 'checkout', 'master', '--', '.'], cwd=feedstock_dir)\n                    subprocess.check_call(['git', 'rebase', '--continue'], cwd=feedstock_dir)\n\n            # Add team members as maintainers.\n            if conda_forge:"
  },
  {
    "id" : "3d67a374-38e5-4088-a6b2-9ce420565116",
    "prId" : 1574,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e17c686-33c8-4635-a1de-07c8435130b5",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "This is the heart of the change. Basically we just add the `AU` conflict files. This clears the conflict from the index, but does not effect what we will commit.\n",
        "createdAt" : "2016-09-14T16:49:42Z",
        "updatedAt" : "2016-09-15T23:31:12Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "c743e04d125c6a6657693136aa8a5ed211707289",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +275,279 @@    new_file_conflicts = map(lambda _ : _.replace(\"AU\", \"\", 1).lstrip(), new_file_conflicts)\n    for each_new_file in new_file_conflicts:\n        subprocess.check_call(['git', 'add', each_new_file])\n\n    # Generate a fresh listing of recipes removed."
  },
  {
    "id" : "b825d1b3-8339-41b9-8742-58648682fcea",
    "prId" : 1472,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e117d505-97f1-4b2f-a6e8-b9e4808f121c",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "From local testing this seems to combine some of the repeat steps (that also caused the recent failure) into one. This ensures staged changes are still staged, which was our primary concern with PR ( https://github.com/conda-forge/staged-recipes/pull/1472 ). It also restores any unstaged changes as well, but not in the index.\n",
        "createdAt" : "2016-09-03T00:32:33Z",
        "updatedAt" : "2016-09-03T00:32:33Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "0edfde46-1220-4610-ba05-77d8f3e044cf",
        "parentId" : "e117d505-97f1-4b2f-a6e8-b9e4808f121c",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Sometimes this fails due to conflicts. So had to adjust to PR ( https://github.com/conda-forge/staged-recipes/pull/1473 ).\n",
        "createdAt" : "2016-09-03T03:10:13Z",
        "updatedAt" : "2016-09-03T03:10:13Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cbf605c8c472739383840c20f56f70ab1dad74c",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +256,260 @@    subprocess.check_call(['git', 'stash'])\n    subprocess.check_call(['git', 'pull', '--rebase'])\n    subprocess.check_call(['git', 'stash', 'pop', '--index'])\n\n    # Generate a fresh listing of recipes removed."
  },
  {
    "id" : "db545ed2-2bcd-4c21-8805-322e2527e753",
    "prId" : 1471,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5d27979-8fe6-4cdc-ae96-1068d9e0f2ca",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Having this be rebase doesn't really matter any more. Though it shouldn't really hurt anything.\n",
        "createdAt" : "2016-09-03T00:09:18Z",
        "updatedAt" : "2016-09-03T00:18:11Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f3fd8bf7b241d7066e713eb22a7ad4afdcbd045",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +256,260 @@    subprocess.check_call(['git', 'stash', '--keep-index'])\n    subprocess.check_call(['git', 'stash'])\n    subprocess.check_call(['git', 'pull', '--rebase'])\n    subprocess.check_call(['git', 'stash', 'pop'])\n    subprocess.check_call(['git', 'add', '.'])"
  },
  {
    "id" : "2b3be2d7-15bc-41c1-bb01-5a03d8e2935e",
    "prId" : 1322,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "368ffc61-643d-4acc-aa27-b73e7abc8030",
        "parentId" : null,
        "authorId" : "a67e24bc-ed74-490a-95d0-cd6b6de195d3",
        "body" : "Very clever!\n",
        "createdAt" : "2016-08-22T08:25:25Z",
        "updatedAt" : "2016-08-27T20:38:09Z",
        "lastEditedBy" : "a67e24bc-ed74-490a-95d0-cd6b6de195d3",
        "tags" : [
        ]
      },
      {
        "id" : "40f67064-984f-4da2-9558-372ed2af27fc",
        "parentId" : "368ffc61-643d-4acc-aa27-b73e7abc8030",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Thanks. Though it is a bit more barbaric than I would like, but it does seem to work reliably.\n\nIf someone can come up with a better way to get this done, I'd definitely be interested to hear.\n",
        "createdAt" : "2016-09-02T19:39:13Z",
        "updatedAt" : "2016-09-02T19:39:13Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "5a730538-6756-40d5-a088-02370ad4026c",
        "parentId" : "368ffc61-643d-4acc-aa27-b73e7abc8030",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Also appears we need an extra argument here to make sure we get unicode on Python 3 :facepalm:.\n\nxref: https://github.com/conda-forge/staged-recipes/pull/1470\n",
        "createdAt" : "2016-09-02T23:28:18Z",
        "updatedAt" : "2016-09-02T23:28:18Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "72d03cd5a42585df318388cd7c32a0749255a82b",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +263,267 @@    # * We narrow the list down to recipes that are staged for deletion (ignores examples).\n    # * Then we clean up the list so that it only has the recipe names.\n    removed_recipes = subprocess.check_output(['git', 'status', '--porcelain', recipe_directory_name])\n    removed_recipes = removed_recipes.splitlines()\n    removed_recipes = filter(lambda _: _.startswith(\"D \"), removed_recipes)"
  },
  {
    "id" : "c97f8582-ef67-47e0-b963-536faddde50b",
    "prId" : 1322,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de8bd9b4-25ea-42ca-8321-01c89071736b",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Looking at it now this line is probably unnecessary as we already checked this branch out above.\n",
        "createdAt" : "2016-09-02T19:41:44Z",
        "updatedAt" : "2016-09-02T19:41:44Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "6dd48023-7ee7-4604-8a40-54ca6d1f5ff5",
        "parentId" : "de8bd9b4-25ea-42ca-8321-01c89071736b",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Still it is good to make sure in case the code above changes.\n\nEdit: Though we may need a stash and rebase or similar.\n",
        "createdAt" : "2016-09-02T20:32:42Z",
        "updatedAt" : "2016-09-02T20:33:23Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "72d03cd5a42585df318388cd7c32a0749255a82b",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +254,258 @@\n    # Update status based on remote\n    subprocess.check_call(['git', 'checkout', os.environ.get('TRAVIS_BRANCH')])\n    subprocess.check_call(['git', 'pull', '--rebase', '--autostash'])\n"
  },
  {
    "id" : "77acff62-2097-4c14-a451-e30aa23966dc",
    "prId" : 1322,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf301982-afb3-4a0c-b78a-6ab6c9cb98b4",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Turns out Travis CI's `git` is too old to support this. Our `git` is new enough to support this. So am proposing we switch to it as part of this change with PR ( https://github.com/conda-forge/staged-recipes/pull/1464 ).\n",
        "createdAt" : "2016-09-02T20:56:51Z",
        "updatedAt" : "2016-09-02T20:56:51Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "29d658c7-0848-4a8e-a287-1b115963b7f9",
        "parentId" : "cf301982-afb3-4a0c-b78a-6ab6c9cb98b4",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Appears our `git` is not new enough to support the `--autostash` flag. So we are enabling autostash with all rebases, which seems to solve the problem in PR ( https://github.com/conda-forge/staged-recipes/pull/1469 ).\n",
        "createdAt" : "2016-09-02T22:49:14Z",
        "updatedAt" : "2016-09-02T22:49:14Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "ed82494d-e264-484a-aad8-09beb2ad680e",
        "parentId" : "cf301982-afb3-4a0c-b78a-6ab6c9cb98b4",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Though ultimately we abandoned this as we could not keep staged and unstaged things in their properly places. See PR ( https://github.com/conda-forge/staged-recipes/pull/1471 ).\n",
        "createdAt" : "2016-09-03T03:10:33Z",
        "updatedAt" : "2016-09-03T03:10:33Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "f09a747b-4e2b-4e66-bc29-0374e1fdd258",
        "parentId" : "cf301982-afb3-4a0c-b78a-6ab6c9cb98b4",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "That in turn could fail because a stash could be empty and popping an empty stash is an error. Also wanted to have only one stash call. Tried to fix with PR ( https://github.com/conda-forge/staged-recipes/pull/1472 ).\n",
        "createdAt" : "2016-09-03T03:11:21Z",
        "updatedAt" : "2016-09-03T03:12:00Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "bceadc6c-6e34-4bb2-9295-18eede6044e3",
        "parentId" : "cf301982-afb3-4a0c-b78a-6ab6c9cb98b4",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "However there were cases where that would fail due to a merge conflict. Followed it up with PR ( https://github.com/conda-forge/staged-recipes/pull/1473 ), which stashes everything not in the index. Then allows rebase to handle the merge and remaining files from the index. That actually seems to be the most robust iteration yet. Hoping that is the last one though.\n",
        "createdAt" : "2016-09-03T03:13:29Z",
        "updatedAt" : "2016-09-03T03:13:29Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "72d03cd5a42585df318388cd7c32a0749255a82b",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +255,259 @@    # Update status based on remote\n    subprocess.check_call(['git', 'checkout', os.environ.get('TRAVIS_BRANCH')])\n    subprocess.check_call(['git', 'pull', '--rebase', '--autostash'])\n\n    # Generate a fresh listing of recipes removed."
  },
  {
    "id" : "bef909b8-4c71-468c-87c4-dd86669f9b86",
    "prId" : 1322,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eda0e1d5-c542-4cb8-9710-9c848caee73c",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Fortunately caught this before the CI did, but not soon enough to avoid it in this PR. Need to convert this to a `list` on Python 3. :facepalm:\n\nxref: https://github.com/conda-forge/staged-recipes/pull/1470\n",
        "createdAt" : "2016-09-02T23:29:30Z",
        "updatedAt" : "2016-09-02T23:29:30Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "5de1b083-b227-4e28-8a17-3bdec5065d7e",
        "parentId" : "eda0e1d5-c542-4cb8-9710-9c848caee73c",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Needed an additional line to avoid listing the recipe contents and just list the recipes instead.\n\nxref: https://github.com/conda-forge/staged-recipes/pull/1485\n",
        "createdAt" : "2016-09-05T15:27:04Z",
        "updatedAt" : "2016-09-05T15:27:04Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "72d03cd5a42585df318388cd7c32a0749255a82b",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +266,270 @@    removed_recipes = removed_recipes.splitlines()\n    removed_recipes = filter(lambda _: _.startswith(\"D \"), removed_recipes)\n    removed_recipes = map(lambda _ : _.replace(\"D\", \"\", 1).lstrip(), removed_recipes)\n\n    # Commit any removed packages."
  },
  {
    "id" : "b759db3c-fb3d-4f53-ba08-4c81df5a9559",
    "prId" : 733,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a6f1224-24ac-4789-bb77-dde4256b4235",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "What happens if we try to add a team twice? Do we have to handle some error? Does it just give us the existing team?\n",
        "createdAt" : "2016-06-08T13:30:30Z",
        "updatedAt" : "2016-06-08T13:30:30Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "0105f74fbec1ad28ddbd9c9e7b57f8905a4c3fd7",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +162,166 @@                meta = MetaData(recipe_dir)\n                maintainers = meta.meta.get('extra', {}).get('recipe-maintainers', [])\n                team = create_team(\n                    conda_forge,\n                    name.lower(),"
  },
  {
    "id" : "9b41ad27-1d83-44ee-bbbd-3620b3d3f755",
    "prId" : 733,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74a68fcb-e39f-4c92-ab4f-fd4b7bf2f491",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "In the other script, I don't think we used `add_membership`. Is there a reason not to use it or is this ok?\n",
        "createdAt" : "2016-06-08T13:31:29Z",
        "updatedAt" : "2016-06-08T13:31:29Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "824ddf53-2f57-4c89-831e-0731941fe741",
        "parentId" : "74a68fcb-e39f-4c92-ab4f-fd4b7bf2f491",
        "authorId" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "body" : "It looks like the other script does \n\n`````` requestJsonAndCheck(\n                                   \"PUT\",\n                                    team.url + \"/memberships/\" + new_member)```\n\nMight be worth checking that pygithub doesn't change the default arguments, but otherwise, sounds sensible to me.\n``````\n",
        "createdAt" : "2016-06-10T06:58:07Z",
        "updatedAt" : "2016-06-10T06:58:07Z",
        "lastEditedBy" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "0105f74fbec1ad28ddbd9c9e7b57f8905a4c3fd7",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +169,173 @@                )\n                for each_maintainer in maintainers:\n                    team.add_membership(each_maintainer)\n\n            # Remove this recipe from the repo."
  },
  {
    "id" : "658a8f42-f3e1-4930-829c-f4271b16e141",
    "prId" : 184,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28482056-1043-4d3e-b30c-6deb7c49da82",
        "parentId" : null,
        "authorId" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "body" : "This is to stop the GH_TOKEN leak as it did. No real harm done, but there was a short period of time where anybody had access to the conda-forge organisation. :scream: \n\nToken revoked, and we should be all tickety-boo.\n",
        "createdAt" : "2016-03-23T03:53:23Z",
        "updatedAt" : "2016-03-23T03:53:23Z",
        "lastEditedBy" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "81e2f212df8d045ffcb438395042a12638467510",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +143,147 @@        if is_merged_pr:\n            # Capture the output, as it may contain the GH_TOKEN.\n            out = subprocess.check_output(['git', 'remote', 'add', 'upstream_with_token',\n                                           'https://conda-forge-admin:{}@github.com/conda-forge/staged-recipes'.format(os.environ['GH_TOKEN'])],\n                                          stderr=subprocess.STDOUT)"
  },
  {
    "id" : "78b8d1bb-92f1-4173-81d8-210c9aa895a7",
    "prId" : 94,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5f83f76-befc-4ecc-9966-214b54b91c2c",
        "parentId" : null,
        "authorId" : "14d55654-e136-4b91-9542-e6f989e48912",
        "body" : "Maybe use `subprocess.check_output(...)` https://docs.python.org/2/library/subprocess.html#subprocess.check_output and then wrap the whole thing in a \n\n```\ntry:\n   ... all the subprocess calls\nexcept subprocess.CalledProcessError as e:\n    print(\"Failed with returncode: %s\\nOutput:\\n%s\\n\" %(e.returncode, e.output))\n    sys.exit(-1)\n```\n\nSorry for all the breakage: when I did the changes, I didn't even know the `.CI` subdirectory existed... :-/\n",
        "createdAt" : "2016-03-11T15:39:53Z",
        "updatedAt" : "2016-03-11T15:39:53Z",
        "lastEditedBy" : "14d55654-e136-4b91-9542-e6f989e48912",
        "tags" : [
        ]
      },
      {
        "id" : "1ca28a6f-7632-4b4d-9653-8d6bd55d12c0",
        "parentId" : "a5f83f76-befc-4ecc-9966-214b54b91c2c",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "You have a point there.  Maybe the `.CI` should not be hidden.\n",
        "createdAt" : "2016-03-11T15:44:06Z",
        "updatedAt" : "2016-03-11T15:44:06Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c04fe0ceb6d7dd35b700dd334fe037d9d8fd284",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +121,125 @@        # Without this, intermittent failiures to synch the TravisCI repos ensue.\n        for feedstock_dir, name, recipe_dir in feedstock_dirs:\n            subprocess.check_call(['conda', 'smithy', 'register-ci', '--feedstock_directory', feedstock_dir] + owner_info)\n\n            subprocess.check_call(['conda', 'smithy', 'rerender'], cwd=feedstock_dir)"
  }
]