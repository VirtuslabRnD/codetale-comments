[
  {
    "id" : "eb65b229-3529-4c9a-8813-c995d7fef818",
    "prId" : 497,
    "prUrl" : "https://github.com/root-project/root/pull/497#pullrequestreview-44573285",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b996500-16e2-487f-a32b-9ad66286a242",
        "parentId" : null,
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "@amadio, it seems that if I configure with `-Dbuiltin_veccore` we don't get `builtin_vc` on, thus `VECCORE_ENABLE_VC` macro doesn't expanded. In turn, this leads in not being able to compile `Math_vectypes.hxx`.\r\n\r\n@xvallspl and I were discussing and we can diagnose this either in the cxx file or here. Alternatively, we should just enable builtin_vc, saving time and efforts :) ",
        "createdAt" : "2017-06-13T14:10:49Z",
        "updatedAt" : "2017-06-13T14:10:49Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "ac424099-4fba-468e-b6ed-93852628c981",
        "parentId" : "7b996500-16e2-487f-a32b-9ad66286a242",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "I made it such that `builtin_veccore` forces `builtin_vc` to be ON if `vc` is ON. However, it should be possible to use VecCore without Vc (that's the whole point of having VecCore), so I'm against forcing Vc and VecCore to be locked to be the same, or we will never be able to change the backend later to be either Scalar or UME::SIMD. The macro `VECCORE_ENABLE_VC` is in `${VecCore_DEFINITIONS}` when the Vc backend is enabled, so targets should rely on that rather than turning it on by hand.",
        "createdAt" : "2017-06-16T14:04:45Z",
        "updatedAt" : "2017-06-16T14:04:45Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "9053138c-52d3-4325-981c-b7ec9d6b7c79",
        "parentId" : "7b996500-16e2-487f-a32b-9ad66286a242",
        "authorId" : "23978f5b-48a9-4c55-b221-8dd5c45c1b43",
        "body" : "Concerning `${VecCore_DEFINITIONS}` I just committed a change to hide this inside `Math_vectypes.h` otherwise is unworkable. It means that enybody including a ROOT Math header will need to define `VECCORE_ENABLE_VC` of ROOT was built with Vc and VecCore enabled. ",
        "createdAt" : "2017-06-16T14:12:14Z",
        "updatedAt" : "2017-06-16T14:12:14Z",
        "lastEditedBy" : "23978f5b-48a9-4c55-b221-8dd5c45c1b43",
        "tags" : [
        ]
      },
      {
        "id" : "b3bd76e1-ece0-443b-a416-8af8d17a8c64",
        "parentId" : "7b996500-16e2-487f-a32b-9ad66286a242",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Hi @peremato, I saw the commit and agree with you that everybody having to define it is not optimal, but the current solution is not great either, because it only works when both VecCore and Vc are enabled. We will need to fix it later to be able to use at least the UME::SIMD backend, which works much better on KNL. At some point, we should require that new developments work with both UME::SIMD and Vc, otherwise there is no point in not just using Vc directly. I think that using `${VecCore_DEFINITIONS}` in combination with `#cmakedefine` to create a configuration header is the way to go in this case.",
        "createdAt" : "2017-06-16T14:22:53Z",
        "updatedAt" : "2017-06-16T14:22:53Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "0764ca1312709b742f04890261cf759ef4c45a31",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +1392,1396 @@  endif()\n\n  if (vc OR builtin_vc)\n    set(VecCore_Vc_FOUND True)\n    set(VecCore_Vc_DEFINITIONS -DVECCORE_ENABLE_VC)"
  },
  {
    "id" : "044d1b44-1a38-406f-953a-35b476cba041",
    "prId" : 590,
    "prUrl" : "https://github.com/root-project/root/pull/590#pullrequestreview-40385343",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f016f73-af29-4da7-9131-9803d2cbd551",
        "parentId" : null,
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Can we transform the two similar if-stmts into one if-else?",
        "createdAt" : "2017-05-25T20:24:15Z",
        "updatedAt" : "2017-05-28T02:39:19Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "6e70d935-b834-45c0-9c55-961b952ff561",
        "parentId" : "1f016f73-af29-4da7-9131-9803d2cbd551",
        "authorId" : "f69dad7b-ed29-4b5b-abf6-8cc0eaed5055",
        "body" : "Not easily: the true-branch of the first `if`-statement can affect the outcome of the second conditional.",
        "createdAt" : "2017-05-25T20:33:24Z",
        "updatedAt" : "2017-05-28T02:39:19Z",
        "lastEditedBy" : "f69dad7b-ed29-4b5b-abf6-8cc0eaed5055",
        "tags" : [
        ]
      },
      {
        "id" : "7cf8cfb9-8cc7-4998-80f4-fb46431805d3",
        "parentId" : "1f016f73-af29-4da7-9131-9803d2cbd551",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Ah, I see. That part is tricky to read. Maybe we could add a clarification comment for the casual reader.",
        "createdAt" : "2017-05-25T20:35:45Z",
        "updatedAt" : "2017-05-28T02:39:19Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba6e4549dd332053c446e91ee596c6c3cf2fae14",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +233,237 @@\n#---Check for LZ4--------------------------------------------------------------------\nif(NOT builtin_lz4)\n  message(STATUS \"Looking for LZ4\")\n  find_package(LZ4)"
  },
  {
    "id" : "1af819a5-3216-470b-9fe5-c2799c2bb432",
    "prId" : 766,
    "prUrl" : "https://github.com/root-project/root/pull/766#pullrequestreview-50042684",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59ae9e0f-6a05-49ea-ae91-5f482f18df55",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Why hard code the path to the shell here? It looks like the LZ4 external is using CMake, so wouldn't it be better to use `${CMAKE_COMMAND}` or similar? Otherwise the shell may pick up a different CMake.",
        "createdAt" : "2017-07-14T05:28:20Z",
        "updatedAt" : "2017-07-14T05:28:25Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "1df315bb-5e92-4efa-8e63-a17336a27ace",
        "parentId" : "59ae9e0f-6a05-49ea-ae91-5f482f18df55",
        "authorId" : "f69dad7b-ed29-4b5b-abf6-8cc0eaed5055",
        "body" : "Unfortunately, `LZ4` is not using `cmake` -- it is invoking `make`, which is internally invoking `cmake`.\r\n\r\nIf I recall correctly, `sh` had to be invoked directly in order to get the `PREFIX` env var set right.",
        "createdAt" : "2017-07-14T13:17:36Z",
        "updatedAt" : "2017-07-14T13:17:36Z",
        "lastEditedBy" : "f69dad7b-ed29-4b5b-abf6-8cc0eaed5055",
        "tags" : [
        ]
      }
    ],
    "commit" : "728d8697ae192af435a15e43894f19b971032c5b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +257,261 @@    URL_MD5 c9610c5ce97eb431dddddf0073d919b9\n    INSTALL_DIR ${CMAKE_BINARY_DIR}\n    CONFIGURE_COMMAND  /bin/sh -c \"PREFIX=<INSTALL_DIR> CMAKE_PARAMS='-DCMAKE_C_COMPILER=\\\\\\\"${CMAKE_C_COMPILER}\\\\\\\" -DCMAKE_C_FLAGS=\\\\\\\"${CMAKE_C_FLAGS}\\\\\\\" -DCMAKE_OSX_SYSROOT=\\\\\\\"${CMAKE_OSX_SYSROOT}\\\\\\\"' make cmake\"\n    BUILD_COMMAND /bin/sh -c \"PREFIX=<INSTALL_DIR> MOREFLAGS=-fPIC make\"\n    INSTALL_COMMAND /bin/sh -c \"PREFIX=<INSTALL_DIR> make install\""
  },
  {
    "id" : "2f580461-9f6f-419e-8e12-f01234f9a44d",
    "prId" : 1277,
    "prUrl" : "https://github.com/root-project/root/pull/1277#pullrequestreview-74436736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "529e009f-8ba2-4536-92f6-cc882db7bff3",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Won't this overwrite things in a multiconfiguration build?",
        "createdAt" : "2017-11-06T14:04:49Z",
        "updatedAt" : "2017-11-06T14:04:49Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "9214862e-e526-4151-ae43-916bee70a216",
        "parentId" : "529e009f-8ba2-4536-92f6-cc882db7bff3",
        "authorId" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "body" : "The goal is to have a single location for the libraries (i.e. preventing them to go in the 'Debug' or 'Release' sub-directories on Windows)",
        "createdAt" : "2017-11-06T14:25:35Z",
        "updatedAt" : "2017-11-06T14:25:35Z",
        "lastEditedBy" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "tags" : [
        ]
      },
      {
        "id" : "a54e6d9e-a2be-41b1-b763-ecad4d1550f7",
        "parentId" : "529e009f-8ba2-4536-92f6-cc882db7bff3",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Ok, thanks!",
        "createdAt" : "2017-11-06T14:44:02Z",
        "updatedAt" : "2017-11-06T14:44:02Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a53af31e8154fc17df6d04953e183918b05e7b0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1613,1617 @@                  -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}\n                  -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG:PATH=\"\"\n                  -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE:PATH=\"\"\n    # Disable install step\n    INSTALL_COMMAND \"\""
  },
  {
    "id" : "0d40374b-f812-4bae-8108-59f1482f9e0e",
    "prId" : 1398,
    "prUrl" : "https://github.com/root-project/root/pull/1398#pullrequestreview-79810697",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32eb31f6-8f9f-4281-bba1-05322d181105",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Why is this needed? Could you please explain? Thanks.",
        "createdAt" : "2017-11-29T11:10:07Z",
        "updatedAt" : "2017-11-29T11:10:07Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "61019cc5-45c4-4f7a-9c9d-24a5df5a8ba2",
        "parentId" : "32eb31f6-8f9f-4281-bba1-05322d181105",
        "authorId" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "body" : "asimage is not installed on Windows, so the include path must be set to its build location (it is only used at build time anyway)",
        "createdAt" : "2017-11-29T11:12:36Z",
        "updatedAt" : "2017-11-29T11:12:36Z",
        "lastEditedBy" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "tags" : [
        ]
      }
    ],
    "commit" : "d69bcd55f3ba1cbd3f0230f7ceb0ee5538aeae09",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +396,400 @@      LOG_DOWNLOAD 1 LOG_CONFIGURE 1 LOG_BUILD 1 LOG_INSTALL 1 BUILD_IN_SOURCE 1\n      BUILD_BYPRODUCTS ${AFTERIMAGE_LIBRARIES})\n    set(AFTERIMAGE_INCLUDE_DIR ${CMAKE_BINARY_DIR}/AFTERIMAGE-prefix/src/AFTERIMAGE)\n  else()\n    message(STATUS \"Building AfterImage library included in ROOT itself\")"
  },
  {
    "id" : "d1971470-1740-4e44-9788-dd9d24994fd8",
    "prId" : 1712,
    "prUrl" : "https://github.com/root-project/root/pull/1712#pullrequestreview-103466104",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8f98c56-512b-4f70-a42a-8e1b3386fef0",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Why change this from `cling` to `cling and llvm`?",
        "createdAt" : "2018-03-13T15:05:55Z",
        "updatedAt" : "2018-03-28T15:06:33Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "4746888eb2d68fd3b84f81903f2b2c82450c4706",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +935,939 @@endif()\n\n#---Check for cling and llvm --------------------------------------------------------\nif(cling)\n  set(CLING_INCLUDE_DIRS ${CMAKE_SOURCE_DIR}/interpreter/cling/include)"
  },
  {
    "id" : "ffcfc52f-3396-4d10-a9ce-2953b543a899",
    "prId" : 2056,
    "prUrl" : "https://github.com/root-project/root/pull/2056#pullrequestreview-122242839",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c09107b-c446-409b-9e27-66e1f1ef83cc",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Unrelated note:  Should we update this to use 'to root-dev@cern.ch' ?",
        "createdAt" : "2018-05-22T15:14:58Z",
        "updatedAt" : "2018-05-22T15:14:59Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "4274983c-0ace-42ac-bfd8-3e5dbb9f1754",
        "parentId" : "5c09107b-c446-409b-9e27-66e1f1ef83cc",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Good point.",
        "createdAt" : "2018-05-22T16:09:11Z",
        "updatedAt" : "2018-05-22T16:09:11Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef2aadbbc00784673f69f58deccec39c91de8874",
    "line" : 619,
    "diffHunk" : "@@ -1,1 +1608,1612 @@foreach(opt afs glite sapdb srp)\n  if(${opt})\n    message(STATUS \">>> Option '${opt}' not implemented yet! Signal your urgency to pere.mato@cern.ch\")\n    set(${opt} OFF CACHE BOOL \"Disabled because not implemented yet (${${opt}_description})\" FORCE)\n  endif()"
  },
  {
    "id" : "2f8ddc98-ce98-4ff3-8fb2-564bbbd710ae",
    "prId" : 2099,
    "prUrl" : "https://github.com/root-project/root/pull/2099#pullrequestreview-123884065",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2af9108-cb82-496c-94e4-a4714c2a61d4",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Hi @dpiparo, this should be enough, but if it's required by something, we need to make sure it's found.\r\nWhat part of ROOT needs to use Numpy other than TMVA?",
        "createdAt" : "2018-05-29T05:45:59Z",
        "updatedAt" : "2018-05-29T05:45:59Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "89b37c3f-2426-43ae-a8db-79db1b9ac9aa",
        "parentId" : "b2af9108-cb82-496c-94e4-a4714c2a61d4",
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "We need it for AsMatrix. But this must be optional: no numpy, no AsMatrix.",
        "createdAt" : "2018-05-29T07:59:24Z",
        "updatedAt" : "2018-05-29T07:59:24Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      },
      {
        "id" : "1a571d7e-22f2-40d5-a4ff-c7c5e63393c0",
        "parentId" : "b2af9108-cb82-496c-94e4-a4714c2a61d4",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Then it's fine as is.",
        "createdAt" : "2018-05-29T08:04:48Z",
        "updatedAt" : "2018-05-29T08:04:48Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a964c38b96b40c55796c426c7b6aa6effa0f2e65",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +453,457 @@    find_package(PythonInterp ${python_version})\n    find_package(PythonLibs ${python_version})\n    find_package(NumPy)\n  endif()\nendif()"
  },
  {
    "id" : "e1d8566d-bb76-4564-9734-6ef3a2e410b5",
    "prId" : 3020,
    "prUrl" : "https://github.com/root-project/root/pull/3020#pullrequestreview-177554270",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "215b3e7d-7708-4360-8cad-d6d4b5fd980d",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "I wonder about how often these options are used as well:\r\n```\r\nalien dcache gfal monalisa r shadowpw shared\r\n```",
        "createdAt" : "2018-11-21T10:24:59Z",
        "updatedAt" : "2018-11-27T14:55:46Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "45fe30ac-956e-4070-a8b7-1a0825b04dc4",
        "parentId" : "215b3e7d-7708-4360-8cad-d6d4b5fd980d",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "alien monalisa are waiting for ALICE.\r\nWe want to keep r and dcache.\r\ngfal: @gganis ?\r\nThanks & agreed for shadowpw shared, will fixup.\r\n",
        "createdAt" : "2018-11-21T10:30:07Z",
        "updatedAt" : "2018-11-27T14:55:46Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "d9ca95b8-34e4-4611-a1f5-1c27c1e7865e",
        "parentId" : "215b3e7d-7708-4360-8cad-d6d4b5fd980d",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "shadowpw currently sets `R__SHADOWPW` in `net/rpdutils`; we will deprecate together with rpdutils.",
        "createdAt" : "2018-11-22T08:57:48Z",
        "updatedAt" : "2018-11-27T14:55:46Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "81230d5f44f8071aadad5a6564facc663f7d776f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1671,1675 @@\n#---Report deprecated options---------------------------------------------------\nforeach(opt afdsmgrd bonjour castor geocad globus gviz hdfs krb5 ldap memstat odbc qt qtgsi rfio table)\n  if(${opt})\n    message(DEPRECATION \">>> Option '${opt}' is deprecated and will be removed in ROOT v6.18. Please inform rootdev@cern.ch should you still need it.\")"
  },
  {
    "id" : "5df68cbb-bb94-4ba6-a369-4dbabdced386",
    "prId" : 4190,
    "prUrl" : "https://github.com/root-project/root/pull/4190#pullrequestreview-274693177",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5994212-522d-4a79-b0f5-5842dbdab6fc",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Could you add a note to the release notes that this patch release requires at least Vdt 0.4? I think it's nicer to call out new version requirements for patch releases.",
        "createdAt" : "2019-08-14T06:40:43Z",
        "updatedAt" : "2019-08-14T06:48:42Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "1501a750-ecfb-42dc-a835-ae19a323d04f",
        "parentId" : "a5994212-522d-4a79-b0f5-5842dbdab6fc",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "This was already the case before, since TMVA needs tanh.h, but Vdt didn't export a version, so we couldn't require it. I updated the FindVdt.cmake to guess the version based on the presence of tanh.h so we could ensure it's enough. But sure, I can add to the release notes too.",
        "createdAt" : "2019-08-14T06:44:44Z",
        "updatedAt" : "2019-08-14T06:48:42Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc4bef34d4d19167fe870842c28e6843e10516a3",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +1429,1433 @@  if(NOT builtin_vdt)\n    message(STATUS \"Looking for VDT\")\n    find_package(Vdt 0.4)\n    if(NOT VDT_FOUND)\n      if(fail-on-missing)"
  },
  {
    "id" : "37b70a80-c255-4f0b-b6d9-607bd4d76574",
    "prId" : 4561,
    "prUrl" : "https://github.com/root-project/root/pull/4561#pullrequestreview-335124604",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cb4de62-72e5-42d9-863a-e1f079d6203e",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Can we add `(void)a1val`? With `-Werror` this will bomb otherwise.",
        "createdAt" : "2019-12-19T17:07:15Z",
        "updatedAt" : "2019-12-20T08:35:59Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "a8196507-31d1-4599-a169-e285a7d569a3",
        "parentId" : "0cb4de62-72e5-42d9-863a-e1f079d6203e",
        "authorId" : "970a3588-73b1-4f31-9b16-7f6e4376b995",
        "body" : "Very good point. Should have noticed the warnings in `CMakeFiles/CMakeOutput.log`...",
        "createdAt" : "2019-12-20T08:37:13Z",
        "updatedAt" : "2019-12-20T08:37:13Z",
        "lastEditedBy" : "970a3588-73b1-4f31-9b16-7f6e4376b995",
        "tags" : [
        ]
      }
    ],
    "commit" : "a58c84f5ec611b6565c04d3ebb9a0d7c66e194a8",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +1596,1600 @@int main() {\n   std::atomic<int> a1;\n   int a1val = a1.load();\n   (void)a1val;\n   std::atomic<uint64_t> a2;"
  },
  {
    "id" : "d980f622-db67-4972-b2ee-d8c81c54a08f",
    "prId" : 4561,
    "prUrl" : "https://github.com/root-project/root/pull/4561#pullrequestreview-335124857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f53d94d-3429-40c9-80a9-79f6e8a46a5d",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Ditto.",
        "createdAt" : "2019-12-19T17:07:23Z",
        "updatedAt" : "2019-12-20T08:35:59Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "e744aced-df8b-4189-9aab-308f764baf75",
        "parentId" : "9f53d94d-3429-40c9-80a9-79f6e8a46a5d",
        "authorId" : "970a3588-73b1-4f31-9b16-7f6e4376b995",
        "body" : "Ditto. :wink:",
        "createdAt" : "2019-12-20T08:37:46Z",
        "updatedAt" : "2019-12-20T08:37:46Z",
        "lastEditedBy" : "970a3588-73b1-4f31-9b16-7f6e4376b995",
        "tags" : [
        ]
      }
    ],
    "commit" : "a58c84f5ec611b6565c04d3ebb9a0d7c66e194a8",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +1599,1603 @@   (void)a1val;\n   std::atomic<uint64_t> a2;\n   uint64_t a2val = a2.load(std::memory_order_relaxed);\n   (void)a2val;\n   return 0;"
  },
  {
    "id" : "74db32c0-8e00-454f-ab12-1a774ee79208",
    "prId" : 5311,
    "prUrl" : "https://github.com/root-project/root/pull/5311#pullrequestreview-389708789",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63e57977-f3ef-4af7-8ee5-c5ed1bd3e4de",
        "parentId" : null,
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "@oshadura should we also tackle the pymva case, which is only a few lines up in this file? Pymva also depends on python-dev, @lmoneta can confirm, so we should deactivate it too if python-dev is not found. Right now, it only checks for numpy.",
        "createdAt" : "2020-04-07T13:46:20Z",
        "updatedAt" : "2020-04-08T07:44:27Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      },
      {
        "id" : "d11fcbd0-e7ba-4667-8e4d-460362b0c980",
        "parentId" : "63e57977-f3ef-4af7-8ee5-c5ed1bd3e4de",
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "Yup! Lets add the similar lines there (please recheck):\r\n```  \r\nif(fail-on-missing AND (NOT PYTHONLIBS_FOUND AND NOT Python2_Development_FOUND AND NOT Python3_Development_FOUND) AND NOT NUMPY_FOUND)\r\n    message(FATAL_ERROR \"PYMVA: Python development package not found and and NumPy component required\"\r\n                        \" (python executable: ${PYTHON_EXECUTABLE})\")\r\n  elseif((NOT PYTHONLIBS_FOUND AND NOT Python2_Development_FOUND AND NOT Python3_Development_FOUND) AND NOT NUMPY_FOUND)\r\n    message(STATUS \"\"TMVA: Python development package and NumPy not found for python ${PYTHON_EXECUTABLE}. Switching off tmva-pymva option\"\")\r\n    set(tmva-pymva OFF CACHE BOOL \"Disabled because Numpy was not found (${tmva-pymva_description})\" FORCE\r\n  endif()\r\n```",
        "createdAt" : "2020-04-08T07:16:12Z",
        "updatedAt" : "2020-04-08T07:44:27Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "dce60906285787a75e833061770182e1ae861c4e",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +1500,1504 @@\n#---Check for Pyroot---------------------------------------------------------------------\nif(pyroot)\n  if(fail-on-missing AND (NOT PYTHONLIBS_FOUND AND NOT Python2_Development_FOUND AND NOT Python3_Development_FOUND))\n    message(FATAL_ERROR \"PyROOT: Python development package not found and pyroot component required\""
  },
  {
    "id" : "918c88c0-1b12-440f-9653-67f528ee85c7",
    "prId" : 5366,
    "prUrl" : "https://github.com/root-project/root/pull/5366#pullrequestreview-394401219",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19314fe3-8d1a-46c3-8543-a1f070cbb751",
        "parentId" : null,
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "I think we need to add this:\r\n`\r\ntarget_include_directories(gtest  INTERFACE ${GTEST_INCLUDE_DIR})\r\ntarget_include_directories(gtest_main  INTERFACE ${GTEST_INCLUDE_DIR})\r\ntarget_include_directories(gmock  INTERFACE ${GTEST_INCLUDE_DIR} ${GMOCK_INCLUDE_DIR})\r\ntarget_include_directories(gmock_main INTERFACE ${GTEST_INCLUDE_DIR} ${GMOCK_INCLUDE_DIR})`",
        "createdAt" : "2020-04-16T08:17:37Z",
        "updatedAt" : "2020-04-16T08:17:38Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      },
      {
        "id" : "b8ec9822-c152-415f-966c-5caf4a3c7bcf",
        "parentId" : "19314fe3-8d1a-46c3-8543-a1f070cbb751",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "I had a look at the previous failures. There's a bug in CMake when you download a project: You have to create the directories.\r\nIt could still be that `gtest_main` also needs the INTERFACE, though, should I add it?",
        "createdAt" : "2020-04-16T08:19:09Z",
        "updatedAt" : "2020-04-16T08:19:09Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc58c9d7ebb785ba79f751d1210b240c50015d46",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +1614,1618 @@    endif()\n  endforeach()\n  target_include_directories(gtest INTERFACE ${GTEST_INCLUDE_DIR})\n  target_include_directories(gmock INTERFACE ${GMOCK_INCLUDE_DIR})\n"
  },
  {
    "id" : "12c3e3ff-64bc-48d8-add8-f4dbedf9719d",
    "prId" : 5688,
    "prUrl" : "https://github.com/root-project/root/pull/5688#pullrequestreview-418398329",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "119a8d5f-2780-4dce-a67c-5af52f38dd02",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Is the hash change related to switching the usage from dll to lib? (If not, could be in a separate commit)?",
        "createdAt" : "2020-05-26T15:09:43Z",
        "updatedAt" : "2020-05-27T06:35:25Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "3ab22e4d-16c9-49de-9db9-12d4ad997c12",
        "parentId" : "119a8d5f-2780-4dce-a67c-5af52f38dd02",
        "authorId" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "body" : "This is indeed related (the tar file changed)",
        "createdAt" : "2020-05-26T15:11:52Z",
        "updatedAt" : "2020-05-27T06:35:25Z",
        "lastEditedBy" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "tags" : [
        ]
      }
    ],
    "commit" : "3647e2b840a2bf6f88b6e97a1824b373b99f698a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +191,195 @@      LZMA\n      URL ${CMAKE_SOURCE_DIR}/core/lzma/src/xz-${lzma_version}-win32.tar.gz\n      URL_HASH SHA256=a923ee68d836de5492d8de0fec467b9536f2543c8579ca11f4b5e6f46a8cda8c\n      PREFIX LZMA\n      INSTALL_DIR ${CMAKE_BINARY_DIR}"
  },
  {
    "id" : "8da5aa1e-6c01-4b51-853a-306aceed1eb0",
    "prId" : 5717,
    "prUrl" : "https://github.com/root-project/root/pull/5717#pullrequestreview-419254435",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7e6c594-0a30-42f4-9ee7-1525be75320d",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Who's using `PNG_LIBRARY_RELEASE`? I see no usage in all of ROOT?",
        "createdAt" : "2020-05-27T14:06:00Z",
        "updatedAt" : "2020-05-27T14:06:45Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "b4cf5906-fe65-4880-813b-d578a17a2209",
        "parentId" : "c7e6c594-0a30-42f4-9ee7-1525be75320d",
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "It is a bit of \"jungles\" so when passing non-system png and printing cached CMake variables, I did it to be sure that there are no traces of system png library... (if you use system png library, value will be the same).",
        "createdAt" : "2020-05-27T14:16:27Z",
        "updatedAt" : "2020-05-27T14:19:00Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7515dbabd04a235975a4b377886b7fd0b1ab148",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +358,362 @@    set(ASEXTRA_LIBRARIES ${ASEXTRA_LIBRARIES} ${PNG_LIBRARIES})\n    # Some missing variables needed for external PNG build\n    set(PNG_LIBRARY_RELEASE ${PNG_LIBRARY})\n    # apparently there will be two set of includes here (needs to be selected only last that was passed: PNG_INCLUDE_DIR)\n    list(GET PNG_INCLUDE_DIRS 0 PNG_INCLUDE_DIR)"
  },
  {
    "id" : "cc5a2582-faf5-4743-aeb4-7f9b4144b1fa",
    "prId" : 5919,
    "prUrl" : "https://github.com/root-project/root/pull/5919#pullrequestreview-438436532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b45f5c4-cff6-4886-bdeb-e6d3c2d8d431",
        "parentId" : null,
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "Can you add please fail-on-missing in account as well? Here is a nice example:\r\nhttps://github.com/root-project/root/blob/2d2bc4ef56f68b707a0b918b1087241b4ffcf7e1/cmake/modules/SearchInstalledSoftware.cmake#L561-L572",
        "createdAt" : "2020-06-26T10:05:12Z",
        "updatedAt" : "2020-08-05T12:36:09Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      },
      {
        "id" : "77c26a9f-e4a2-47e4-93bf-cef1a21b3842",
        "parentId" : "5b45f5c4-cff6-4886-bdeb-e6d3c2d8d431",
        "authorId" : "a8c9d8db-0fb8-4803-8857-3254086320bb",
        "body" : "Thank you, done in 6f1efa8967efe0071847f2d5abe0681219f7291f",
        "createdAt" : "2020-06-26T16:33:16Z",
        "updatedAt" : "2020-08-05T12:36:09Z",
        "lastEditedBy" : "a8c9d8db-0fb8-4803-8857-3254086320bb",
        "tags" : [
        ]
      }
    ],
    "commit" : "23d2a9f4d0bba8f4e87541d0baaf8e9e930aa3c1",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +1116,1120 @@endif()\n\n#---Check for liburing----------------------------------------------------------------\nif (uring)\n  if(NOT CMAKE_SYSTEM_NAME MATCHES Linux)"
  },
  {
    "id" : "b9292a65-20e6-4f77-983e-c3881eafe84c",
    "prId" : 6031,
    "prUrl" : "https://github.com/root-project/root/pull/6031#pullrequestreview-460013723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0bb933d-8d9b-4140-8347-d94b5bef43eb",
        "parentId" : null,
        "authorId" : "95d25081-bab5-48a6-a128-d3f77acb4c78",
        "body" : "Typo: disbaling -> disabling",
        "createdAt" : "2020-07-15T11:02:18Z",
        "updatedAt" : "2020-08-03T13:11:55Z",
        "lastEditedBy" : "95d25081-bab5-48a6-a128-d3f77acb4c78",
        "tags" : [
        ]
      },
      {
        "id" : "7e1e8db7-9b75-402c-aa01-182c6db29940",
        "parentId" : "d0bb933d-8d9b-4140-8347-d94b5bef43eb",
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "@ellert please take a look..",
        "createdAt" : "2020-07-30T14:39:25Z",
        "updatedAt" : "2020-08-03T13:11:55Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      },
      {
        "id" : "47616226-5f0d-4c5c-89ae-138e9eeff0df",
        "parentId" : "d0bb933d-8d9b-4140-8347-d94b5bef43eb",
        "authorId" : "c130f90f-ce87-4bc5-a2bd-7b1b93d94515",
        "body" : "I have fixed the typo.",
        "createdAt" : "2020-08-03T13:12:29Z",
        "updatedAt" : "2020-08-03T13:12:29Z",
        "lastEditedBy" : "c130f90f-ce87-4bc5-a2bd-7b1b93d94515",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9ab79d7eb3a3eeebd8671ebe78e5fed6a3f1100",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +937,941 @@    else()\n      message(STATUS \"XROOTD is version 5 or greater. The legacy xproofd servers can not be built with this version. Disabling 'xproofd' option.\")\n      set(xproofd OFF CACHE BOOL \"Disabled because xrootd version is 5 or greater\" FORCE)\n    endif()\n  endif()"
  },
  {
    "id" : "41a87c33-4273-4afe-8a67-97021dbd2fbb",
    "prId" : 6710,
    "prUrl" : "https://github.com/root-project/root/pull/6710#pullrequestreview-517644700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d2edeee-d8fe-4cc5-8955-ee642e6151f9",
        "parentId" : null,
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "@linev just a small comment, can you please check here what will happen in case of `make install`?",
        "createdAt" : "2020-10-27T12:05:41Z",
        "updatedAt" : "2020-10-27T12:23:26Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      },
      {
        "id" : "617415db-1c0d-4f89-a7cd-b29ef3e54cb4",
        "parentId" : "2d2edeee-d8fe-4cc5-8955-ee642e6151f9",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "It is not dedicated for that - just keep possibility to tweak ROOT build procedure to use openui from other directory. Only for expert usage\r\n",
        "createdAt" : "2020-10-27T12:15:51Z",
        "updatedAt" : "2020-10-27T12:23:26Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "4c03f6f6-40c0-4b62-bda4-a06719821942",
        "parentId" : "2d2edeee-d8fe-4cc5-8955-ee642e6151f9",
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "Let's add this explicitly in the status message and as well in Release notes :+1:  ",
        "createdAt" : "2020-10-27T12:22:14Z",
        "updatedAt" : "2020-10-27T12:23:26Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      },
      {
        "id" : "fd9a4bce-15c3-45cf-9f67-450f255d37c1",
        "parentId" : "2d2edeee-d8fe-4cc5-8955-ee642e6151f9",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "I add few comments into SearchInstalledSoftware.cmake file",
        "createdAt" : "2020-10-27T12:24:29Z",
        "updatedAt" : "2020-10-27T12:24:29Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8c8395386fcb140f114959d186beda1c9ffadd3",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +1799,1803 @@     message(STATUS \"openui5 - use from $ENV{OPENUI5DIR}, only for debug purposes\")\n     file(MAKE_DIRECTORY ${CMAKE_BINARY_DIR}/ui5)\n     execute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink\n        $ENV{OPENUI5DIR} ${CMAKE_BINARY_DIR}/ui5/distribution)\n  else()"
  },
  {
    "id" : "a929b24d-9220-4268-86e3-5c648f7cd2bf",
    "prId" : 6825,
    "prUrl" : "https://github.com/root-project/root/pull/6825#pullrequestreview-641381985",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e45521c5-ea14-4b79-bafa-d175e43f7577",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "I am a tad bit confused :).  I though 'daos_mock' was meant to replace DOAS, why does it need DOAS?",
        "createdAt" : "2021-04-16T16:09:09Z",
        "updatedAt" : "2021-04-29T11:11:53Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "72da763e-b9ce-4ede-a171-84e603319296",
        "parentId" : "e45521c5-ea14-4b79-bafa-d175e43f7577",
        "authorId" : "99b1a3c3-6269-4bb7-a482-a3f4d80a6b59",
        "body" : "Thanks for spotting.  Fix separately checks for 'libuuid' (required by both, libdaos and libdaos_mock), and 'libdaos' (only for DAOS).",
        "createdAt" : "2021-04-21T18:00:06Z",
        "updatedAt" : "2021-04-29T11:11:53Z",
        "lastEditedBy" : "99b1a3c3-6269-4bb7-a482-a3f4d80a6b59",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8b34228a646a7d71a5a16a435000706a575d2f8",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1198,1202 @@endif()\n\nif (daos OR daos_mock)\n  message(STATUS \"Looking for libuuid\")\n  if(fail-on-missing)"
  }
]