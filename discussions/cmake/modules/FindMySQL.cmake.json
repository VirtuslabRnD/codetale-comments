[
  {
    "id" : "5bf56213-0442-4771-a865-034a6492d23f",
    "prId" : 1993,
    "prUrl" : "https://github.com/root-project/root/pull/1993#pullrequestreview-119428642",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fb098ab-4f51-4ee8-90f5-945d5866e30a",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "I would like to encourage users to use `CMAKE_PREFIX_PATH` more, which is the better way of adding extra search paths. Does this not work without these hints?",
        "createdAt" : "2018-05-09T07:27:25Z",
        "updatedAt" : "2019-04-19T19:41:44Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "0aa20627-f85e-4676-b1e9-783794c761ea",
        "parentId" : "7fb098ab-4f51-4ee8-90f5-945d5866e30a",
        "authorId" : "dc191073-926d-4d99-b665-1b8071c56d0a",
        "body" : "Setting `CMAKE_PROGRAM_PATH` works in the case where the `XXX_config` program is available. I was not able to get `CMAKE_PREFIX_PATH` to work either with `XXX_config` or in the fallback case where one looks for the include and library areas separately. There are issues with respect to the alternative names for the config program, and it is unclear what the issue is (`PATH_SUFFIXES`?) in the fallback case.",
        "createdAt" : "2018-05-10T19:56:28Z",
        "updatedAt" : "2019-04-19T19:41:45Z",
        "lastEditedBy" : "dc191073-926d-4d99-b665-1b8071c56d0a",
        "tags" : [
        ]
      },
      {
        "id" : "f3de4ffd-ff58-4860-8444-0064ff3ae254",
        "parentId" : "7fb098ab-4f51-4ee8-90f5-945d5866e30a",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "What directory are you adding to `CMAKE_PREFIX_PATH` and where is your `*_config`?",
        "createdAt" : "2018-05-11T06:43:13Z",
        "updatedAt" : "2019-04-19T19:41:45Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "9d57365a-4d66-4a0c-a6dd-80d8f34d909e",
        "parentId" : "7fb098ab-4f51-4ee8-90f5-945d5866e30a",
        "authorId" : "dc191073-926d-4d99-b665-1b8071c56d0a",
        "body" : "`$(spack location -i mariadb-c-client)`, with `mariadb_config` being found in `bin/` directly beneath.",
        "createdAt" : "2018-05-11T13:16:17Z",
        "updatedAt" : "2019-04-19T19:41:45Z",
        "lastEditedBy" : "dc191073-926d-4d99-b665-1b8071c56d0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee463b32b01fe90034dac5af387f5ea2273e35d3",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +16,20 @@    PATH_SUFFIXES bin\n    NO_DEFAULT_PATH\n    HINTS ${MYSQL_DIR} $ENV{MYSQL_DIR}\n    )\n  # Will not overwrite if MYSQL_CONFIG_EXECUTABLE is already set."
  },
  {
    "id" : "35456883-9246-404f-b3bf-ad4d48ca3608",
    "prId" : 1993,
    "prUrl" : "https://github.com/root-project/root/pull/1993#pullrequestreview-119427275",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44c6f988-06a1-47fc-9d7f-63485bc8324c",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "This will override what the user sets anyway, no? Only the second way (inside the `if`) should be necessary, so that if `MYSQL_CONFIG_EXECUTABLE` has been set by the user, it won't be overwritten here.",
        "createdAt" : "2018-05-09T07:29:23Z",
        "updatedAt" : "2019-04-19T19:41:44Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "796561f3-cf3d-42f7-8252-d2e1f4c58742",
        "parentId" : "44c6f988-06a1-47fc-9d7f-63485bc8324c",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Isn't the first one handling the case where the user set MYSQL_DIR but does not set MYSQL_CONFIG_EXECUTABLE?",
        "createdAt" : "2018-05-09T14:58:25Z",
        "updatedAt" : "2019-04-19T19:41:45Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "9432cc22-da17-483f-ac07-74399a5d41be",
        "parentId" : "44c6f988-06a1-47fc-9d7f-63485bc8324c",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Well, yes, but it's also handling the case when the user does set `MYSQL_CONFIG_EXECUTABLE` by overwriting it.",
        "createdAt" : "2018-05-09T15:04:58Z",
        "updatedAt" : "2019-04-19T19:41:45Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "b4bc35e7-ba58-45a4-9fea-0de437ad2b23",
        "parentId" : "44c6f988-06a1-47fc-9d7f-63485bc8324c",
        "authorId" : "dc191073-926d-4d99-b665-1b8071c56d0a",
        "body" : "Tests indicate that `find_program` does *not* overwrite the variable if it is already set by the user with `-D`.",
        "createdAt" : "2018-05-10T20:11:41Z",
        "updatedAt" : "2019-04-19T19:41:45Z",
        "lastEditedBy" : "dc191073-926d-4d99-b665-1b8071c56d0a",
        "tags" : [
        ]
      },
      {
        "id" : "90c0e578-810a-4322-914f-c9ab2e5af138",
        "parentId" : "44c6f988-06a1-47fc-9d7f-63485bc8324c",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Yes, [you are right](https://cmake.org/cmake/help/latest/command/find_program.html), it will not overwrite. In any case, I still think we don't need two calls. It should be possible to combine both into a single one that still works as intended. ",
        "createdAt" : "2018-05-11T06:41:11Z",
        "updatedAt" : "2019-04-19T19:41:45Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "6f85b82c-c407-42d6-b52a-ac90b4432bc7",
        "parentId" : "44c6f988-06a1-47fc-9d7f-63485bc8324c",
        "authorId" : "dc191073-926d-4d99-b665-1b8071c56d0a",
        "body" : "The problem is that the searches are depth-first rather than name-first. That means that `mysql_config` from (_e.g._) `/usr/bin` will be picked up in preference to `mariadb_config` from the place I specify unless I look in _only_ the places I specify first, and then allow \"default\" areas later.",
        "createdAt" : "2018-05-11T13:11:50Z",
        "updatedAt" : "2019-04-19T19:41:45Z",
        "lastEditedBy" : "dc191073-926d-4d99-b665-1b8071c56d0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee463b32b01fe90034dac5af387f5ea2273e35d3",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +13,17 @@  # Split into two find_program invocations to avoid user-specified\n  # mariadb_config being overridden by system mysql_config.\n  find_program(MYSQL_CONFIG_EXECUTABLE NAMES mysql_config mariadb_config\n    PATH_SUFFIXES bin\n    NO_DEFAULT_PATH"
  },
  {
    "id" : "40b0db97-f6cb-4f9b-bc95-0a519b3f3170",
    "prId" : 1993,
    "prUrl" : "https://github.com/root-project/root/pull/1993#pullrequestreview-119231625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7518f51b-3497-40aa-b701-3ddd342acf8c",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "These path suffixes and hints are broken, as they do not take into account the possibility that the library directory could be `lib32` or `lib64`. Also, `lib/opt/*` looks really strange. Why do we need to add that? Also, why add `/usr` and `/usr/local`? These are in by default already.",
        "createdAt" : "2018-05-09T07:57:46Z",
        "updatedAt" : "2019-04-19T19:41:44Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "1176800f-e3ab-4c98-baeb-d4b65c1d4fb0",
        "parentId" : "7518f51b-3497-40aa-b701-3ddd342acf8c",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "This patch (mostly) just reorder the existing paths, so you are likely right that those were never needed in the first place :)",
        "createdAt" : "2018-05-09T14:57:09Z",
        "updatedAt" : "2019-04-19T19:41:44Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "6034750f-df02-47bc-9061-d1305831f5b0",
        "parentId" : "7518f51b-3497-40aa-b701-3ddd342acf8c",
        "authorId" : "dc191073-926d-4d99-b665-1b8071c56d0a",
        "body" : "This was the minimal change to what was already there to work for my case. It's entirely possible that further improvements need to be made for (other) new cases.",
        "createdAt" : "2018-05-10T20:18:34Z",
        "updatedAt" : "2019-04-19T19:41:45Z",
        "lastEditedBy" : "dc191073-926d-4d99-b665-1b8071c56d0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee463b32b01fe90034dac5af387f5ea2273e35d3",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +49,53 @@    lib/opt lib/opt/mariadb lib/opt/mysql\n    HINTS ${MYSQL_DIR} $ENV{MYSQL_DIR}\n    PATHS /usr/local/mysql /usr/local /usr\n  )\n  set(MYSQL_LIBRARIES ${MYSQL_LIBRARY})"
  }
]