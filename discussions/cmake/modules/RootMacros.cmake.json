[
  {
    "id" : "a06fc18f-7240-4b2b-8e01-580af8cb16ef",
    "prId" : 4108,
    "prUrl" : "https://github.com/root-project/root/pull/4108#pullrequestreview-266525670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82a1c399-75f1-475b-9d81-eee6f4e090c0",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "@vgvassilev If I put `${includedirs}` after `\"$<$<BOOL:${module_incs}>:-I$<JOIN:${module_incs},;-I>>\"`, the cxxmodule s build fails, could you help me figure out why? The error is the \"redefinition of RCompressionSettings\" shown in the last Jenkins failure.",
        "createdAt" : "2019-07-25T10:04:43Z",
        "updatedAt" : "2019-07-25T10:04:43Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "604a3e155fa8003057bc76240bb40f6b498d0918",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +492,496 @@                     COMMAND ${command} -v2 -f  ${dictionary}.cxx ${newargs} ${excludepathsargs} ${rootmapargs}\n                                        ${definitions} \"$<$<BOOL:${module_defs}>:-D$<JOIN:${module_defs},;-D>>\"\n                                        ${includedirs} \"$<$<BOOL:${module_incs}>:-I$<JOIN:${module_incs},;-I>>\"\n                                        ${ARG_OPTIONS} ${headerfiles} ${_linkdef}\n                     IMPLICIT_DEPENDS ${_implicitdeps}"
  },
  {
    "id" : "61ed648c-239a-4a87-858a-f008eee43c48",
    "prId" : 4449,
    "prUrl" : "https://github.com/root-project/root/pull/4449#pullrequestreview-294990105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b8ee50a-0547-42db-b45c-cf1698cde97b",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Is this not a backward-incompatible change? Why do we need to rename the option?",
        "createdAt" : "2019-09-30T13:37:59Z",
        "updatedAt" : "2019-09-30T15:34:42Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "56f105f6-efbf-4e3e-bbfc-ce73e58e4663",
        "parentId" : "8b8ee50a-0547-42db-b45c-cf1698cde97b",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "This was a purely C++ modules related flag. I doubt anybody outside of ROOT have used it.",
        "createdAt" : "2019-09-30T13:44:06Z",
        "updatedAt" : "2019-09-30T15:34:42Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "6205572e-1f6a-4e8c-8cf5-369d7e5382de",
        "parentId" : "8b8ee50a-0547-42db-b45c-cf1698cde97b",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Ok, if @Axel-Naumann approves, it's fine with me. However, the commit conflates R and this renaming. Maybe it's better to split the renaming from R related stuff.",
        "createdAt" : "2019-09-30T13:48:58Z",
        "updatedAt" : "2019-09-30T15:34:42Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "c9e64940-cbf6-4e71-9847-0c168eecc815",
        "parentId" : "8b8ee50a-0547-42db-b45c-cf1698cde97b",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Actually, I prefer to have it in the same commit. It shows the use-case of this flag.",
        "createdAt" : "2019-09-30T13:53:01Z",
        "updatedAt" : "2019-09-30T15:34:42Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8dbb3819141c75dd07f59e027078cd853f903ef",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +1106,1110 @@#                                 DICTIONARY_OPTIONS option    : options passed to rootcling\n#                                 INSTALL_OPTIONS option       : options passed to install headers\n#                                 NO_CXXMODULE                 : don't generate a C++ module for this package\n#                                )\n#---------------------------------------------------------------------------------------------------"
  },
  {
    "id" : "0a84d5a1-ed6e-4943-abd6-ee4488d19641",
    "prId" : 4449,
    "prUrl" : "https://github.com/root-project/root/pull/4449#pullrequestreview-295531165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35d904dc-80b9-4a95-8202-401f3dcf6be4",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Is this really going to work for stuff outside ROOT? It can be the source of subtle bugs for external users.",
        "createdAt" : "2019-09-30T13:52:29Z",
        "updatedAt" : "2019-09-30T15:34:42Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "283a43ee-5497-42b3-a18d-1eeddd8e2bda",
        "parentId" : "35d904dc-80b9-4a95-8202-401f3dcf6be4",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Nope, this is pretty terrible approach, however, I am covering here the MULTIDICT case a little better. This code slightly more functional from what it was before.",
        "createdAt" : "2019-09-30T13:57:49Z",
        "updatedAt" : "2019-09-30T15:34:42Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "0b3ba059-9e72-4afe-b3f2-a0c4d756efa4",
        "parentId" : "35d904dc-80b9-4a95-8202-401f3dcf6be4",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "We should really change the places with `...32` in ROOT, not the macro that can be used externally. I hope that at least the addition of this part is removed later.",
        "createdAt" : "2019-10-01T08:36:51Z",
        "updatedAt" : "2019-10-01T08:36:52Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "455ef074-69e6-4e4b-897c-d793b060c57e",
        "parentId" : "35d904dc-80b9-4a95-8202-401f3dcf6be4",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Those places are when we have multiple dictionaries. Smatrix and GenVector. This has been the naming convention unfortunately. I am not sure what you want to change. I am all for removing the dictionary names provided by the users (as explained in the other comment)\r\n\r\nPS: I am not aware of anybody who uses the macro with MULTIDICT option. I doubt it was/is usable due to the tons of assumption we have for this case...",
        "createdAt" : "2019-10-01T11:22:13Z",
        "updatedAt" : "2019-10-01T11:24:48Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8dbb3819141c75dd07f59e027078cd853f903ef",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +398,402 @@    string(REGEX REPLACE \"^G__(.*)\" \"\\\\1\"  library_target_name ${dictionary})\n    if (ARG_MULTIDICT)\n      string(REGEX REPLACE \"(.*)32$\" \"\\\\1\"  library_target_name ${library_target_name})\n    endif (ARG_MULTIDICT)\n  else()"
  },
  {
    "id" : "16e62dd1-9ecd-4230-99f1-f1aad42953f9",
    "prId" : 4449,
    "prUrl" : "https://github.com/root-project/root/pull/4449#pullrequestreview-295497937",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70438dbf-c540-4be4-80f6-9e45c0295d24",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "This should be the default, and the else can contain the deduction code above. No need to set if the deduction fails or to check that they are the same...",
        "createdAt" : "2019-09-30T13:53:55Z",
        "updatedAt" : "2019-09-30T15:34:42Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "7f61fd80-7b44-4858-9099-b5f9399e67e1",
        "parentId" : "70438dbf-c540-4be4-80f6-9e45c0295d24",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Here the important bit was the diagnostics. I can probably get rid of it altogether. The real underlying problem is that `ROOT_GENERATE_DICTIONARY` allows the user to specify the name of the dictionary which will be produced. I think, instead, we should just specify the library which the dictionary describes and the rest should be automatically computed.",
        "createdAt" : "2019-09-30T14:00:30Z",
        "updatedAt" : "2019-09-30T15:34:42Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "f123130c-72f0-4a76-8c80-17b4cd208a6f",
        "parentId" : "70438dbf-c540-4be4-80f6-9e45c0295d24",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "There is no underlying problem here. The user must be able to specify the name of the dictionary, and it's important because you can have a target with multiple dictionaries and deducing a name in that case is prone to bugs. The dictionary is just a source file that users can add to their library or binary and the name convention is something that ROOT should not impose. You need to think more from the point of view of users of ROOT, and less of ROOT itself. We cannot change macros used externally at will. If we suddenly remove this functionality, users will certainly complain.",
        "createdAt" : "2019-10-01T08:43:36Z",
        "updatedAt" : "2019-10-01T08:43:36Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "2bb0601b-253d-4f63-ab23-ab25d63042d1",
        "parentId" : "70438dbf-c540-4be4-80f6-9e45c0295d24",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "The deduction is here since 5 years. We deduce the name because it may not be specified as you said. Do you want to change that or you want it to be just more efficient — if we move the deduction in the else part we will not be able to diagnose such mismatch. If we don’t want to diagnose (without imposing naming convention) that’s fine.\r\n\r\nWe should work very hard to hide the name of the dictionary. It contains intricate information for the library such as locations of header files and rdict files and so on. We have an option how to build multiple dictionaries for a single library—if that does not work we should fix it. Allowing the user to decide which dictionary gets attached to which library and when is a source of big issues and it is very subtle bugs. Essentially the dictionary is a ROOT implementation detail which can affect the core of the framework majorly. \r\n\r\nWe should encourage people to use the ROOT_STANDARD_LIBRARY_PPACKAGE and we should not use a standalone ROOT_GENERATE_DICTIONARY standalone. ",
        "createdAt" : "2019-10-01T10:10:53Z",
        "updatedAt" : "2019-10-01T10:10:53Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8dbb3819141c75dd07f59e027078cd853f903ef",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +409,413 @@      set(library_target_name ${ARG_MODULE})\n    endif()\n  endif(ARG_MODULE)\n\n  #---Set the library output directory-----------------------"
  },
  {
    "id" : "70f4aa65-4cd4-4355-8440-4665603849df",
    "prId" : 4478,
    "prUrl" : "https://github.com/root-project/root/pull/4478#pullrequestreview-297448716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01fe7a84-630d-4873-91cc-b734295307a1",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Thanks, this is indeed better than before.",
        "createdAt" : "2019-10-04T12:46:25Z",
        "updatedAt" : "2019-10-04T12:46:25Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa8234b1aca5edcf5bf6a53bbdf39b6af1891317",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +860,864 @@      # needed for generated headers like RConfigure.h and ROOT/RConfig.hxx\n      target_include_directories(${library} PRIVATE ${CMAKE_BINARY_DIR}/include)\n    endif()\n\n  endif()"
  },
  {
    "id" : "241597d6-27af-4810-b1d7-6f4b300ff50a",
    "prId" : 5019,
    "prUrl" : "https://github.com/root-project/root/pull/5019#pullrequestreview-361073823",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d27f9580-f434-4237-91f7-f9a5f00044ee",
        "parentId" : null,
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "```suggestion\r\n  # FIXME: Do not set gensrcdict variable to the outer scope but use an argument to\r\n  # REFLEX_GENERATE_DICTIONARY passed from the outside. Note this would be a\r\n  # breaking change for roottest and other external users.\r\n  set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)\r\n```",
        "createdAt" : "2020-02-19T12:34:32Z",
        "updatedAt" : "2020-02-19T12:38:15Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d92c4731df849126091172a8baf5e19af666d9c",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +198,202 @@  # REFLEX_GENERATE_DICTIONARY passed from the outside. Note this would be a\n  # breaking change for roottest and other external users.\n  set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)\n\n  #---roottest compability---------------------------------"
  },
  {
    "id" : "0b420412-7e4c-4b7f-ab39-a6a828b0c061",
    "prId" : 5019,
    "prUrl" : "https://github.com/root-project/root/pull/5019#pullrequestreview-368702432",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eec99201-13a2-4db7-8599-c48cf9f9f854",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "The rest of the changes seem fine, but this hack should be removed before merging. Setting a variable in parent scope will cause subtle breakage that is very hard to debug later. Please do not merge this as is.",
        "createdAt" : "2020-02-22T21:07:26Z",
        "updatedAt" : "2020-02-22T21:07:40Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "2f40c645-8a67-4905-97e3-17a787099331",
        "parentId" : "eec99201-13a2-4db7-8599-c48cf9f9f854",
        "authorId" : "be375414-8d7a-4e89-b672-0298e4f42af9",
        "body" : "Setting this variable to parent_scope gives backward compatibility, as this was a macro before, which put all variables in parent_scope so to say.\r\nIf you and @vgvassilev and @oshadura  tell me what the function signature should be like to add the return variable, I will implement this.",
        "createdAt" : "2020-02-26T08:35:15Z",
        "updatedAt" : "2020-02-26T08:35:15Z",
        "lastEditedBy" : "be375414-8d7a-4e89-b672-0298e4f42af9",
        "tags" : [
        ]
      },
      {
        "id" : "a6c7ea8a-f2c5-4bd2-8a0a-724fa8dcdc2e",
        "parentId" : "eec99201-13a2-4db7-8599-c48cf9f9f854",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "That would be the best approach but it requires changes in roottest which is fine per se. ",
        "createdAt" : "2020-02-26T11:48:30Z",
        "updatedAt" : "2020-02-26T11:48:31Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "06f980a1-2d19-41e7-bb2a-2e79ebaa1e92",
        "parentId" : "eec99201-13a2-4db7-8599-c48cf9f9f854",
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "@amadio @vgvassilev I afraid it will really affect external users (e.g. CMS and etc.), so I would prefer if it could be done in different iteration of changes (after this PR will go in)?",
        "createdAt" : "2020-03-04T08:40:47Z",
        "updatedAt" : "2020-03-04T08:40:48Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      },
      {
        "id" : "e391439e-8d4c-48d9-8ad7-4adf6655de92",
        "parentId" : "eec99201-13a2-4db7-8599-c48cf9f9f854",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "That's a fair point. It is your call.",
        "createdAt" : "2020-03-04T08:44:28Z",
        "updatedAt" : "2020-03-04T08:44:28Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "009443d6-03e0-4d84-96c5-f2d62928878a",
        "parentId" : "eec99201-13a2-4db7-8599-c48cf9f9f854",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "I take it back. If the change is for backward compatibility, then it should be ok to go in as is.",
        "createdAt" : "2020-03-04T11:30:18Z",
        "updatedAt" : "2020-03-04T11:30:19Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d92c4731df849126091172a8baf5e19af666d9c",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +198,202 @@  # REFLEX_GENERATE_DICTIONARY passed from the outside. Note this would be a\n  # breaking change for roottest and other external users.\n  set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)\n\n  #---roottest compability---------------------------------"
  },
  {
    "id" : "f5e996cd-897b-4df8-b006-3073a8fd894b",
    "prId" : 5181,
    "prUrl" : "https://github.com/root-project/root/pull/5181#pullrequestreview-396710862",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "764b3f8d-a6b2-4f7b-92dd-ce151a0c4a3e",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "What happens if the file is generated at build time, but doesn't exist yet at config time?",
        "createdAt" : "2020-03-25T09:17:21Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "18600dde-6ce6-41c4-af3d-7d54b984e223",
        "parentId" : "764b3f8d-a6b2-4f7b-92dd-ce151a0c4a3e",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "We do not used generated header for dictionaries \r\n",
        "createdAt" : "2020-03-25T10:22:43Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "a4e81673-a840-409e-87f3-cae1459a4315",
        "parentId" : "764b3f8d-a6b2-4f7b-92dd-ce151a0c4a3e",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "I'd be in favor of adding a \"FIXME: We do not consider files generated at build time as dictionaries do not use such files. Relax the condition if that changes\".\r\n",
        "createdAt" : "2020-03-31T11:13:54Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "7ae2d1fe-04c5-44ec-b387-9e997aa15871",
        "parentId" : "764b3f8d-a6b2-4f7b-92dd-ce151a0c4a3e",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "I guess, fatal error is ok. All headers which are provided for dictionary generation should exists at time when macro is executed\r\n",
        "createdAt" : "2020-03-31T12:44:45Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "26b9b3be-acf0-4936-b64b-0243e8e10775",
        "parentId" : "764b3f8d-a6b2-4f7b-92dd-ce151a0c4a3e",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "The fatal error is for users, FIXMEs are for our-future-selves to avoid wasting time re-understanding what we did ;)",
        "createdAt" : "2020-03-31T14:00:18Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "6867901e-38c4-42c3-bc30-1ddfd0e76ed7",
        "parentId" : "764b3f8d-a6b2-4f7b-92dd-ce151a0c4a3e",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "AFAIK users use this function, too? (see `if(CMAKE_PROJECT_NAME STREQUAL ROOT)`)",
        "createdAt" : "2020-04-20T15:24:32Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "127f6854-3f46-419a-859d-1fc1b4aa0632",
        "parentId" : "764b3f8d-a6b2-4f7b-92dd-ce151a0c4a3e",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "`if(CMAKE_PROJECT_NAME STREQUAL ROOT)` in mind it is only for ROOT libraries. If it is not a case - that is right check? My intention was to introduce special handling **ONLY** for ROOT libraris",
        "createdAt" : "2020-04-20T16:26:38Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "f8d0a35f-3f0b-41cd-a553-f42a1b3019e4",
        "parentId" : "764b3f8d-a6b2-4f7b-92dd-ce151a0c4a3e",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Sorry I missed that. I'm okay with this change. I bet Vassil is okay now, too, given that this is only for ROOT building itself.",
        "createdAt" : "2020-04-20T16:39:02Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "b93a15e7-28e3-47e0-82eb-a03484055e05",
        "parentId" : "764b3f8d-a6b2-4f7b-92dd-ce151a0c4a3e",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "As I said, I'd be in favor of adding a fixme with more technical developer info as proposed. If @linev thinks it is not useful then I am fine.",
        "createdAt" : "2020-04-20T18:35:04Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5da3ae4dc0aff806ce66b7c14d562c58db07307",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +350,354 @@       endif()\n       if(NOT headerFile)\n          message(FATAL_ERROR \"Cannot find header ${fp} to generate dictionary ${dictionary} for. Did you forget to set the INCLUDE_DIRECTORIES property for the current directory?\")\n       endif()\n       list(APPEND headerfiles ${fp})"
  },
  {
    "id" : "c0d03c93-87b9-44ce-910c-c51b15d3ff63",
    "prId" : 5181,
    "prUrl" : "https://github.com/root-project/root/pull/5181#pullrequestreview-381016039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75518a3c-4d6d-42ef-b78f-6fe8ac041921",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "See my comment above - we should try to reduce the amount of duplication of \"and these are the default include dirs\".",
        "createdAt" : "2020-03-25T09:24:28Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "c84eb88b-2a74-435a-8756-3fc9c34dd035",
        "parentId" : "75518a3c-4d6d-42ef-b78f-6fe8ac041921",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "It is old code, I did not modify it.\r\nTo remove it, I need in each `ROOT_LINKER_LIBRARY`, `ROOT_MODULE_LIBRARY`, `ROOT_OBJECT_LIBRARY` provide proper include paths, taking into account `if(root7)` condition. ",
        "createdAt" : "2020-03-25T10:37:22Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "75d566d5-cadc-4cef-8a40-126736ac834c",
        "parentId" : "75518a3c-4d6d-42ef-b78f-6fe8ac041921",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Include paths should be inherited by linking to targets that provide them in their build interface. Also, the directories in `core/*/inc` should be propagated from linking to the `Core` target, not added by hand to every target like is being done.",
        "createdAt" : "2020-03-25T13:34:14Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5da3ae4dc0aff806ce66b7c14d562c58db07307",
    "line" : 442,
    "diffHunk" : "@@ -1,1 +1005,1009 @@      endif()\n\n      if(root7 AND (IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/v7/inc))\n        target_include_directories(${library} BEFORE PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/v7/inc>)\n      endif()"
  },
  {
    "id" : "9ae9172f-88d5-4690-b803-2fee62eec793",
    "prId" : 5181,
    "prUrl" : "https://github.com/root-project/root/pull/5181#pullrequestreview-397932388",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19d73400-0125-4eaa-b510-557da2366a65",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "I reiterate my comment that rather than add more code here to fix the symptom of a problem introduced earlier, we should fix the original cause of the problem in the code that fills `${includedirs}` and `${incdirs}`.",
        "createdAt" : "2020-03-25T10:28:18Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "b7d2241f-9b0e-4481-b629-2a921f08bafb",
        "parentId" : "19d73400-0125-4eaa-b510-557da2366a65",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "@oshadura and @linev and `@I` agree, we will address that separately.",
        "createdAt" : "2020-04-22T07:53:43Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5da3ae4dc0aff806ce66b7c14d562c58db07307",
    "line" : 334,
    "diffHunk" : "@@ -1,1 +672,676 @@\n    target_include_directories(${dictionary} PRIVATE\n      ${pureincdirs} $<TARGET_PROPERTY:${ARG_MODULE},INCLUDE_DIRECTORIES>)\n  else()\n    add_custom_target(${dictionary} DEPENDS ${dictionary}.cxx ${pcm_name} ${rootmap_name} ${cpp_module_file})"
  },
  {
    "id" : "36711221-5497-4fb0-a548-f2035a5f10ab",
    "prId" : 5181,
    "prUrl" : "https://github.com/root-project/root/pull/5181#pullrequestreview-384676003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ac469eb-1050-4263-b444-e5fc1c2c44ce",
        "parentId" : null,
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Why the foreach-loop needs a protection with an if-stmt?",
        "createdAt" : "2020-03-31T11:05:16Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "33619e81-7700-459a-ace2-0c6c79ca4fac",
        "parentId" : "9ac469eb-1050-4263-b444-e5fc1c2c44ce",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "Some cmake `list` methods fail if list if empty. I just too cautious when working with lists. Maybe sometime it is not necessary",
        "createdAt" : "2020-03-31T12:20:57Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5da3ae4dc0aff806ce66b7c14d562c58db07307",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +291,295 @@\n    get_target_property(target_incdirs ${ARG_MODULE} INCLUDE_DIRECTORIES)\n    if(target_incdirs)\n       foreach(dir ${target_incdirs})\n          string(REGEX REPLACE \"^[$]<BUILD_INTERFACE:(.+)>\" \"\\\\1\" dir ${dir})"
  },
  {
    "id" : "ba65b0de-1b13-40e2-8a57-81d6edc70809",
    "prId" : 5181,
    "prUrl" : "https://github.com/root-project/root/pull/5181#pullrequestreview-384677134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2fbce45-6612-4ede-84ba-326ccc53fc69",
        "parentId" : null,
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "I think we need more comments here, explaining what's the intent of this I think essential code.",
        "createdAt" : "2020-03-31T11:05:55Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "57c15002-5b17-4ea5-bb59-45ad54019e59",
        "parentId" : "b2fbce45-6612-4ede-84ba-326ccc53fc69",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "It is copy of already existing code - I guess from Guilermo. \r\nIf statement prevents failure when include dir looks like `$<BUILD_INTERFACE:>`.",
        "createdAt" : "2020-03-31T12:22:25Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5da3ae4dc0aff806ce66b7c14d562c58db07307",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +295,299 @@          string(REGEX REPLACE \"^[$]<BUILD_INTERFACE:(.+)>\" \"\\\\1\" dir ${dir})\n          # check that dir not a empty dir like $<BUILD_INTERFACE:>\n          if(NOT ${dir} MATCHES \"^[$]\")\n             list(APPEND incdirs ${dir})\n          endif()"
  },
  {
    "id" : "d385eb21-3884-4584-8bb2-68df2fa58a86",
    "prId" : 5181,
    "prUrl" : "https://github.com/root-project/root/pull/5181#pullrequestreview-384692735",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84386348-27f5-41fd-9ed7-d376b7c5b935",
        "parentId" : null,
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Do you use `find_file` to get the full path to a given header file?",
        "createdAt" : "2020-03-31T11:11:53Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "074d5d1d-3260-4cf6-9a41-47025c33cc1c",
        "parentId" : "84386348-27f5-41fd-9ed7-d376b7c5b935",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "Yes, exactly as before",
        "createdAt" : "2020-03-31T12:43:06Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5da3ae4dc0aff806ce66b7c14d562c58db07307",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +343,347 @@          set(headerFile ${fp})\n       else()\n          find_file(headerFile ${fp}\n                  HINTS ${headerdirs}\n                  NO_DEFAULT_PATH"
  },
  {
    "id" : "c8803eb8-2732-489a-b13c-db49830151aa",
    "prId" : 5237,
    "prUrl" : "https://github.com/root-project/root/pull/5237#pullrequestreview-389841677",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06079b48-983d-4403-aa94-3610842eb371",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Sure this works on Catalina? https://theevilbit.github.io/posts/dyld_insert_libraries_dylib_injection_in_macos_osx_deep_dive/",
        "createdAt" : "2020-03-27T17:09:05Z",
        "updatedAt" : "2020-04-17T12:29:45Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "100837cc-cd15-4c54-8c70-5eb05a1de669",
        "parentId" : "06079b48-983d-4403-aa94-3610842eb371",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "Absolutely not sure! So far, I was only able to test on ubuntu with clang. Therefore the PR ...",
        "createdAt" : "2020-03-27T17:41:46Z",
        "updatedAt" : "2020-04-17T12:29:45Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "f27e6d53-a757-4bed-9a31-580aa9a9717e",
        "parentId" : "06079b48-983d-4403-aa94-3610842eb371",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "However, that *would* be the correct variable. If you set up your OS X such that you can LD_PRELOAD, that's what you would have to add.",
        "createdAt" : "2020-04-02T08:09:36Z",
        "updatedAt" : "2020-04-17T12:29:45Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "1578d2da-54c2-4c84-84a6-f39e8d59c1fc",
        "parentId" : "06079b48-983d-4403-aa94-3610842eb371",
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "Can we try to check somewhere in our infrastructure?",
        "createdAt" : "2020-04-02T10:38:00Z",
        "updatedAt" : "2020-04-17T12:29:45Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      },
      {
        "id" : "9fe916cd-a156-47b6-912a-fe606a4376f1",
        "parentId" : "06079b48-983d-4403-aa94-3610842eb371",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "Do you know how to disable source fortification or the other protection things on Mac? If somebody has this disabled, this variable *should* do the right thing. I thought it's better to provide something that *should* work than not to provide anything at all. Realistically, this won't work in our infrastructure for the foreseeable future, though.",
        "createdAt" : "2020-04-08T10:19:12Z",
        "updatedAt" : "2020-04-17T12:29:45Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      }
    ],
    "commit" : "913b928c8827ab1911fbc0e364bb56ab53fb58de",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +17,21 @@elseif(APPLE)\n  set(ld_library_path DYLD_LIBRARY_PATH)\n  set(ld_preload DYLD_INSERT_LIBRARIES)\n  set(libprefix ${CMAKE_SHARED_LIBRARY_PREFIX})\n  if(CMAKE_PROJECT_NAME STREQUAL ROOT)"
  },
  {
    "id" : "8fcf08ed-0411-4b8f-b408-275f0687fecb",
    "prId" : 5359,
    "prUrl" : "https://github.com/root-project/root/pull/5359#pullrequestreview-393730073",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12b26414-9ba2-47e2-a2ab-a75c3da62c89",
        "parentId" : null,
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "Nice catch!!!",
        "createdAt" : "2020-04-15T12:35:35Z",
        "updatedAt" : "2020-04-15T12:35:35Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba49f037127a0aefecc016965085214b3510ccec",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +482,486 @@      set(dependent_pcm ${libprefix}${dep}_rdict.pcm)\n      if (runtime_cxxmodules)\n        set(dependent_pcm ${dep}.pcm)\n      endif()\n      set(newargs ${newargs} -m  ${dependent_pcm})"
  },
  {
    "id" : "ccd2d707-70fd-4251-89c4-b3929b757fc5",
    "prId" : 5459,
    "prUrl" : "https://github.com/root-project/root/pull/5459#pullrequestreview-400707579",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "249a112b-baeb-4854-98b9-3630fabd5fc3",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "But if not `ROOT`, is `CMAKE_BINARY_DIR` really `ROOTSYS`?",
        "createdAt" : "2020-04-27T07:21:09Z",
        "updatedAt" : "2020-04-27T07:23:57Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "12426eb7-41fc-4041-8f05-b131b42119eb",
        "parentId" : "249a112b-baeb-4854-98b9-3630fabd5fc3",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "No idea, all logic around `(PROJECT_NAME STREQUAL \"ROOT\")` not always clear for me.\r\nBut again - idea of my changes - adjust code only for ROOT itself\r\n",
        "createdAt" : "2020-04-27T07:53:20Z",
        "updatedAt" : "2020-04-27T07:53:20Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ca40d730fd698ffed1991a8697f04ed14a7bcb2",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1341,1345 @@  if(NOT (PROJECT_NAME STREQUAL \"ROOT\"))\n    # only for non-ROOT executable use $ROOTSYS/include\n    include_directories(BEFORE ${CMAKE_BINARY_DIR}/include)\n  endif()\n  add_executable(${executable} ${_all} ${exe_srcs})"
  },
  {
    "id" : "0496d442-b9f8-4c6a-a759-a1ef16a2dba8",
    "prId" : 5892,
    "prUrl" : "https://github.com/root-project/root/pull/5892#pullrequestreview-433117603",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d4bb61e-fba9-42a3-90e7-106002b4571f",
        "parentId" : null,
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "Nice, thanks for adapting this after we removed the remnant of the python subdirectories.",
        "createdAt" : "2020-06-18T09:45:42Z",
        "updatedAt" : "2020-06-19T14:05:09Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f168f7ec441e6cd0cb19fda19fb8c3cd58e69ed2",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +1734,1738 @@function(ROOT_ADD_PYUNITTEST name file)\n  CMAKE_PARSE_ARGUMENTS(ARG \"WILLFAIL\" \"\" \"COPY_TO_BUILDDIR;ENVIRONMENT;DEPENDENCIES_FOUND\" ${ARGN})\n  if(MSVC)\n    set(ROOT_ENV ROOTSYS=${ROOTSYS}\n        PYTHONPATH=${ROOTSYS}/bin;$ENV{PYTHONPATH})"
  },
  {
    "id" : "b84a7625-fbde-4db3-bdc7-dfb73e9f51f2",
    "prId" : 5993,
    "prUrl" : "https://github.com/root-project/root/pull/5993#pullrequestreview-448756889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83f7c74d-a683-4454-b067-4f7dd3759ef9",
        "parentId" : null,
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Can we 'assert' if the minimal version on unix goes  `VERSION_GREATER_EQUAL 3.15` to drop that branch?",
        "createdAt" : "2020-07-15T08:50:10Z",
        "updatedAt" : "2020-07-15T08:50:10Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "e6a4fde8-d529-4151-b517-6f21f9788ff4",
        "parentId" : "83f7c74d-a683-4454-b067-4f7dd3759ef9",
        "authorId" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "body" : "I think when we change the minimal required version, one should grep for this kind of check and remove them...",
        "createdAt" : "2020-07-15T08:53:39Z",
        "updatedAt" : "2020-07-15T08:53:39Z",
        "lastEditedBy" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "tags" : [
        ]
      }
    ],
    "commit" : "f89c5cb835d4279a0ec520e595cf59a34a1ed254",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +612,616 @@      if(CMAKE_VERSION VERSION_GREATER_EQUAL 3.15)\n        set(module_incs $<REMOVE_DUPLICATES:$<TARGET_PROPERTY:${ARG_MODULE},INCLUDE_DIRECTORIES>>)\n      else()\n        set(module_incs $<TARGET_PROPERTY:${ARG_MODULE},INCLUDE_DIRECTORIES>)\n      endif()"
  }
]