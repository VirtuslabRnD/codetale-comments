[
  {
    "id" : "c40fe9af-c7e4-461b-afb6-ec77dfe9c4f6",
    "prId" : 944,
    "prUrl" : "https://github.com/root-project/root/pull/944#pullrequestreview-61121553",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec1fd65c-fdf2-4809-9804-645b19e789f3",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "I'm a bit concerned that we entangle the idea of \"use and build C++ modules when building ROOT, using the compiler you want to build ROOT with\" and \"use C++ modules for dictionaries, using the clang libraries from interpreter/llvm\".\r\n\r\nCan you clarify that maybe by more explicit names, e.g. here `usedictcxxmodues`?",
        "createdAt" : "2017-09-06T13:20:26Z",
        "updatedAt" : "2017-09-06T13:24:46Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "bcffc4a6-a7ee-46e1-aa99-6cbcb694c64e",
        "parentId" : "ec1fd65c-fdf2-4809-9804-645b19e789f3",
        "authorId" : "2349f38f-171e-43d8-8dee-e8439718c88a",
        "body" : "Well, it's not just dictionaries that have modules, but also all external libraries, so that's rather confusing with a dict in the name.\r\n\r\nMaybe we just take over the original flag we have (`cxxmodules`) because that's the most obvious thing for the central idea: Have C++ modules in ROOT. And we always called the project \"C++ modules in ROOT\", so that name fits to how we presented it to the outside.\r\n\r\nThe compile time modules which is only interested for people using the most recent clang can be `compile_with_modules` or something like that.",
        "createdAt" : "2017-09-06T13:36:57Z",
        "updatedAt" : "2017-09-06T13:36:57Z",
        "lastEditedBy" : "2349f38f-171e-43d8-8dee-e8439718c88a",
        "tags" : [
        ]
      },
      {
        "id" : "8771a167-e6a2-4318-b2a0-e667d2d03381",
        "parentId" : "ec1fd65c-fdf2-4809-9804-645b19e789f3",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Axel, the variable usecxxmodules is temporary. Once everything works (which IMO is not far from now) we will remove it and make it default behavior.\r\n\r\nI do not think we should spend time in making the swap of the compiletime/runtime cxxmodules. ",
        "createdAt" : "2017-09-07T06:15:18Z",
        "updatedAt" : "2017-09-07T06:15:18Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "6594ad0c6c3e2441f0d8b76d134e74f048bbef09",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +497,501 @@endif()\nif(runtime_cxxmodules)\n  set(usecxxmodules define)\nelse()\n  set(usecxxmodules undef)"
  },
  {
    "id" : "e77fdd67-5f70-404a-9f3f-0dbcb1dbe167",
    "prId" : 3183,
    "prUrl" : "https://github.com/root-project/root/pull/3183#pullrequestreview-186627413",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c9f005f-a236-4e32-bed8-227a6b6b0c73",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Add comment: `// Allow change of CMAKE_CXX_STANDARD`?",
        "createdAt" : "2018-12-19T14:52:02Z",
        "updatedAt" : "2018-12-19T16:17:45Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "49a7a13a-6490-4b8e-a157-868a0b38826f",
        "parentId" : "1c9f005f-a236-4e32-bed8-227a6b6b0c73",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Sure, will do.",
        "createdAt" : "2018-12-19T15:08:09Z",
        "updatedAt" : "2018-12-19T16:17:45Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "143c6d6a-f4f9-4810-bc25-eccc852fce46",
        "parentId" : "1c9f005f-a236-4e32-bed8-227a6b6b0c73",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Done.",
        "createdAt" : "2018-12-19T16:17:14Z",
        "updatedAt" : "2018-12-19T16:17:45Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "51ae2a6394d3a9a46ccf9e7aed4db36cb24c70bd",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +556,560 @@unset(found_stdindexsequence CACHE)\nunset(found_stdinvoke CACHE)\nunset(found_stdstringview CACHE)\nunset(found_stdexpstringview CACHE)\nunset(found_stod_stringview CACHE)"
  },
  {
    "id" : "844b9889-d128-4693-bd31-d7f4d0afc3b1",
    "prId" : 3411,
    "prUrl" : "https://github.com/root-project/root/pull/3411#pullrequestreview-202679696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a5ecf3f-cfcf-48e2-b67d-c30eb81ab7fe",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Where does this variable come from? I couldn't find it in the documentation.",
        "createdAt" : "2019-02-12T07:22:01Z",
        "updatedAt" : "2019-02-12T07:22:01Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "fe5a4cc6-bb73-4361-add8-4c1f65facafd",
        "parentId" : "5a5ecf3f-cfcf-48e2-b67d-c30eb81ab7fe",
        "authorId" : "4adbd996-6625-4aa2-9366-233cff2bd3b5",
        "body" : "I've asked about it here: <https://gitlab.kitware.com/cmake/cmake/issues/18910>",
        "createdAt" : "2019-02-12T10:55:49Z",
        "updatedAt" : "2019-02-12T10:55:49Z",
        "lastEditedBy" : "4adbd996-6625-4aa2-9366-233cff2bd3b5",
        "tags" : [
        ]
      },
      {
        "id" : "b7657ba2-0f5d-43fd-97e9-2ebf5d2cc9e4",
        "parentId" : "5a5ecf3f-cfcf-48e2-b67d-c30eb81ab7fe",
        "authorId" : "4adbd996-6625-4aa2-9366-233cff2bd3b5",
        "body" : "You can look through CMake to see them in the meantime, here's the compiler file for CMake 3.1 and g++: <https://gitlab.kitware.com/cmake/cmake/blob/v3.1.0/Modules/Compiler/GNU-CXX.cmake> ",
        "createdAt" : "2019-02-12T13:59:02Z",
        "updatedAt" : "2019-02-12T13:59:02Z",
        "lastEditedBy" : "4adbd996-6625-4aa2-9366-233cff2bd3b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "39a52b66a8277cf92048a92ccb95f38a5f56fc81",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +561,565 @@set(configargs ${ROOT_CONFIGARGS})\nset(configoptions ${ROOT_CONFIGARGS})\nset(configstd ${CMAKE_CXX${CMAKE_CXX_STANDARD}_STANDARD_COMPILE_OPTION})\nget_filename_component(altcc ${CMAKE_C_COMPILER} NAME)\nget_filename_component(altcxx ${CMAKE_CXX_COMPILER} NAME)"
  },
  {
    "id" : "d05a4cfd-4867-48bd-b574-9b7d340c98f9",
    "prId" : 3940,
    "prUrl" : "https://github.com/root-project/root/pull/3940#pullrequestreview-256836386",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "952f29e3-dea3-4354-bff4-42bdd6d7bd6b",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Isn't this going to be the directory one level up from what you want?",
        "createdAt" : "2019-06-17T13:18:16Z",
        "updatedAt" : "2019-06-24T12:53:21Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "fe7fd42d-8ebb-4c0f-8ef4-6833840413f3",
        "parentId" : "952f29e3-dea3-4354-bff4-42bdd6d7bd6b",
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "I checked ROOTConfig.cmake and it looks like this:\r\nhttps://gist.github.com/oshadura/de72ec565aa6152dc40eabf0683b1800\r\n",
        "createdAt" : "2019-06-17T13:57:39Z",
        "updatedAt" : "2019-06-24T12:53:21Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      },
      {
        "id" : "9bc02042-68aa-4198-9c0e-e95df62bb88f",
        "parentId" : "952f29e3-dea3-4354-bff4-42bdd6d7bd6b",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Could you just use `message(STATUS )` to print both variables after calling find_package(ROOT) and paste the result here, please?",
        "createdAt" : "2019-06-17T14:23:13Z",
        "updatedAt" : "2019-06-24T12:53:21Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "d327f546-effb-4a48-8853-717e6ebcdc38",
        "parentId" : "952f29e3-dea3-4354-bff4-42bdd6d7bd6b",
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "https://gist.github.com/oshadura/e616a0b3b6209e8fb1fd2c151ab65cc0",
        "createdAt" : "2019-06-17T16:59:20Z",
        "updatedAt" : "2019-06-24T12:53:21Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      },
      {
        "id" : "58ddcd25-e7a8-4e42-a9c6-94e7e2b81889",
        "parentId" : "952f29e3-dea3-4354-bff4-42bdd6d7bd6b",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Shouldn't they both be the same?",
        "createdAt" : "2019-06-18T10:28:01Z",
        "updatedAt" : "2019-06-24T12:53:21Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "f486f4ba-f806-415b-8d7e-7ba095124c04",
        "parentId" : "952f29e3-dea3-4354-bff4-42bdd6d7bd6b",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "I suppose that was from *within a ROOT build*, and not as-if-external-project? And instead of `get_filename_component(ROOT_BINARY_DIR \\\"\\${ROOT_BINDIR}\\\" ABSOLUTE)`, wouldn't `set(ROOT_BINARY_DIR \"${ROOT_BINDIR}\")` be enough (given that `ROOT_BINDIR` is already normalized to `ABSOLUTE` a few lines up?",
        "createdAt" : "2019-07-02T09:47:48Z",
        "updatedAt" : "2019-07-02T09:51:22Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "eb56ba55-2a4b-4754-a541-ce7d0f9fc622",
        "parentId" : "952f29e3-dea3-4354-bff4-42bdd6d7bd6b",
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "@amadio @Axel-Naumann yes it was from within ROOT, from outside (standalone roottest) it is:\r\n\r\n oksana@oksana-dellxps  ~/CERN_sources/roottest/builds   fix_root_binary_dir  cmake ..\r\n...\r\n-- /home/oksana/CERN_sources/root-cxxmodules/builds/bin\r\n-- /home/oksana/CERN_sources/root-cxxmodules/builds/bin\r\n",
        "createdAt" : "2019-07-02T11:42:56Z",
        "updatedAt" : "2019-07-02T11:42:56Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "e323fdddf6f3b4c009c8fc86b99498616b313a0c",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +677,681 @@set(ROOT_BINARY_DIR_SETUP \"\n# Deprecated value, please don't use it and use ROOT_BINDIR instead.\nget_filename_component(ROOT_BINARY_DIR \\\"\\${ROOT_BINDIR}\\\" ABSOLUTE)\n\")\nset(ROOT_MODULE_PATH \"\\${_thisdir}/modules\")"
  },
  {
    "id" : "26d6fd5c-b551-47e6-ad76-1f08dba10938",
    "prId" : 5181,
    "prUrl" : "https://github.com/root-project/root/pull/5181#pullrequestreview-381016039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56f36ff3-a05e-4a7f-9294-62de08ffdcc6",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Instead of configuring it twice, could this file be added to the list of headers to be copied into include/? You can do that quite simply by adding `ROOT_INSTALL_HEADERS(ginclude)`; that also gets rid of the `install` invocation below.",
        "createdAt" : "2020-03-25T08:51:07Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "5af9f582-a057-4e15-b007-55fb728433eb",
        "parentId" : "56f36ff3-a05e-4a7f-9294-62de08ffdcc6",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "Again - problem that file does not exists. One cannot just call `ROOT_INSTALL_HEADERS` or any direct cmake command. Probably, only for this file I can provide dependency and declare `ginclude/RConfigure.h` as generated file",
        "createdAt" : "2020-03-25T10:02:01Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "a9e17c00-00b9-46db-a334-69436ee130cc",
        "parentId" : "56f36ff3-a05e-4a7f-9294-62de08ffdcc6",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "The install invocation is needed to install into the final location with `make install`. It should not be removed.",
        "createdAt" : "2020-03-25T12:28:43Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5da3ae4dc0aff806ce66b7c14d562c58db07307",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +604,608 @@\n#---RConfigure.h---------------------------------------------------------------------------------------------\nconfigure_file(${PROJECT_SOURCE_DIR}/config/RConfigure.in ginclude/RConfigure.h NEWLINE_STYLE UNIX)\ninstall(FILES ${CMAKE_BINARY_DIR}/ginclude/RConfigure.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\n"
  },
  {
    "id" : "43d2d17c-cb8a-417d-b6a2-985220c19314",
    "prId" : 5181,
    "prUrl" : "https://github.com/root-project/root/pull/5181#pullrequestreview-380949686",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4ff3290-8838-4f3b-a3a4-7475836ee48b",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "See above.",
        "createdAt" : "2020-03-25T08:51:23Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5da3ae4dc0aff806ce66b7c14d562c58db07307",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +615,619 @@\n# file used in TROOT.cxx, not need in include/ dir and not need to install\nconfigure_file(${CMAKE_SOURCE_DIR}/config/RConfigOptions.in ginclude/RConfigOptions.h NEWLINE_STYLE UNIX)\n\nconfigure_file(${CMAKE_SOURCE_DIR}/config/Makefile-comp.in config/Makefile.comp NEWLINE_STYLE UNIX)"
  },
  {
    "id" : "a419acb4-bfe4-48a1-b703-f07e29cb49a5",
    "prId" : 5181,
    "prUrl" : "https://github.com/root-project/root/pull/5181#pullrequestreview-380949686",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0208c4e5-6d9c-4909-93ef-eb2dfbb27e29",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Wonderful! A header hidden from include/ - nice!",
        "createdAt" : "2020-03-25T08:52:00Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5da3ae4dc0aff806ce66b7c14d562c58db07307",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +747,751 @@if(WIN32)\n  # We cannot use the compiledata.sh script for windows\n  configure_file(${CMAKE_SOURCE_DIR}/cmake/scripts/compiledata.win32.in ${CMAKE_BINARY_DIR}/ginclude/compiledata.h NEWLINE_STYLE UNIX)\nelse()\n  execute_process(COMMAND ${CMAKE_SOURCE_DIR}/build/unix/compiledata.sh"
  },
  {
    "id" : "57f658d6-2b45-451c-87ad-2237152cad34",
    "prId" : 5893,
    "prUrl" : "https://github.com/root-project/root/pull/5893#pullrequestreview-435562834",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92712eae-d016-47cf-9d85-04b0d495fe89",
        "parentId" : null,
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "Here the decision is made that `--python-version` will print the highest version PyROOT has been built with, if any. But now it can happen that ROOT and PyROOT are built with different Python versions (ROOT only needs the Python interpreter, while PyROOT needs development too).\r\n\r\nAn alternative would be to keep `--python-version` for the ROOT Python version, and add `--pyroot-version2` and `--pyroot-version3` (note the `pyroot` and not `python` part) for the versions of PyROOT. Opinions @oshadura @Axel-Naumann @amadio ?",
        "createdAt" : "2020-06-18T13:57:23Z",
        "updatedAt" : "2020-06-23T08:38:25Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      },
      {
        "id" : "26a8e23d-3256-4da7-9c52-606d6845b62e",
        "parentId" : "92712eae-d016-47cf-9d85-04b0d495fe89",
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "I just used LCG dev3 on lxplus, and simply it prints python3 `--python-version` while pyroot was build with 2.7. It is confusing, and as you saw from post at ROOT forum I cc-ed you, absolutely not useful.",
        "createdAt" : "2020-06-18T14:01:09Z",
        "updatedAt" : "2020-06-23T08:38:25Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      },
      {
        "id" : "5744d17f-2afd-4cec-a9d2-b27106303d61",
        "parentId" : "92712eae-d016-47cf-9d85-04b0d495fe89",
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "other problem is with a new naming policy e.g `cpyy_$..UNDER_VERSION` is impossible to find with which python version was build pyroot (3_6?3_7?).",
        "createdAt" : "2020-06-18T14:05:10Z",
        "updatedAt" : "2020-06-23T08:38:25Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      },
      {
        "id" : "3725a309-b359-46fa-9f69-a24ceea06a38",
        "parentId" : "92712eae-d016-47cf-9d85-04b0d495fe89",
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "> I just used LCG dev3 on lxplus, and simply it prints python3 --python-version while pyroot was build with 2.7. It is confusing, and as you saw from post at ROOT forum I cc-ed you, absolutely not useful.\r\n\r\nSo I understand you want `--python-version` to print the highest PyROOT version, let's hear the others.\r\n\r\n\r\n\r\n> other problem is with a new naming policy e.g cpyy_$..UNDER_VERSION is impossible to find with which python version was build pyroot (3_6?3_7?).\r\n\r\nWhy is it impossible? We have all the variables required to find the Python versions that PyROOT was built with, you are doing it here in this code.",
        "createdAt" : "2020-06-18T14:11:18Z",
        "updatedAt" : "2020-06-23T08:38:25Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      },
      {
        "id" : "2c9e1078-a7cd-4847-8c54-8a27a8e9c19d",
        "parentId" : "92712eae-d016-47cf-9d85-04b0d495fe89",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "@etejedor what would be the use case for users wanting to see \"the ROOT Python version\" when invoking `--python-version`?\n\nI find it ambiguous, unless there is only one Python version that ROOT is building against, in which case `--python-version` could return that version. Else error? But waiting for @amadio to share the use case he has in mind for `--python-version`.",
        "createdAt" : "2020-06-19T22:13:09Z",
        "updatedAt" : "2020-06-23T08:38:25Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "195c7ee3-b600-477b-992f-e47328a36db6",
        "parentId" : "92712eae-d016-47cf-9d85-04b0d495fe89",
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "@Axel-Naumann I don't think users would be particularly interested in knowing the Python version ROOT was built with, I agree. I just wanted to make sure we agree that `--python-version` will always refer to PyROOT, and on what we do if PyROOT was not built. In my opinion, if PyROOT is not built, `--python-version` should not return any version even if ROOT had one (to be consistent with its semantics if there is PyROOT).",
        "createdAt" : "2020-06-22T07:03:37Z",
        "updatedAt" : "2020-06-23T08:38:25Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      },
      {
        "id" : "a3e98231-2ce7-4070-ba6c-907c2d8f4345",
        "parentId" : "92712eae-d016-47cf-9d85-04b0d495fe89",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "https://sft.its.cern.ch/jira/browse/ROOT-10293",
        "createdAt" : "2020-06-22T09:51:54Z",
        "updatedAt" : "2020-06-23T08:38:25Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "c3d315db-3d2a-49b5-8935-b42f66857625",
        "parentId" : "92712eae-d016-47cf-9d85-04b0d495fe89",
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "@Axel-Naumann output now: \r\n```  \r\noksana@oksana-dellxps  ~/CERN_sources/root/builds   fix-python-output ●  root-config --python-version\r\n3.8.3\r\n oksana@oksana-dellxps  ~/CERN_sources/root/builds   fix-python-output ●  root-config --python2-version\r\n2.7.18\r\n oksana@oksana-dellxps  ~/CERN_sources/root/builds   fix-python-output ●  root-config --python3-version\r\n3.8.3\r\n```",
        "createdAt" : "2020-06-23T08:35:53Z",
        "updatedAt" : "2020-06-23T08:38:25Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "95d04d24dd71b7f815d3b842a1b14295c7eb615a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +621,625 @@get_filename_component(altld ${CMAKE_CXX_COMPILER} NAME)\n\nset(pythonvers ${PYTHON_VERSION_STRING_Development_Main})\nset(python${PYTHON_VERSION_MAJOR_Development_Main}vers ${PYTHON_VERSION_STRING_Development_Main})\nset(python${PYTHON_VERSION_MAJOR_Development_Other}vers ${PYTHON_VERSION_STRING_Development_Other})"
  }
]