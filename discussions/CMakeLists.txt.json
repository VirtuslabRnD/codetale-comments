[
  {
    "id" : "0e152004-56ef-442a-a48d-a85b6eec9725",
    "prId" : 470,
    "prUrl" : "https://github.com/root-project/root/pull/470#pullrequestreview-29753365",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69e5ab68-3cce-457f-9258-0fe18155d580",
        "parentId" : null,
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Could you remove the extra new line?",
        "createdAt" : "2017-03-29T15:17:33Z",
        "updatedAt" : "2017-03-29T15:19:41Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca410123e72f819786a88aaa2bc3dfc820eb1501",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +233,237 @@string(REPLACE \";\" \"\" __modulemap_extra_content \"${__modulemap_extra_content}\")\nfile(WRITE \"${CMAKE_BINARY_DIR}/include/module.modulemap.extra\" \"${__modulemap_extra_content}\")\n\nget_property(__allHeaders GLOBAL PROPERTY ROOT_HEADER_TARGETS)\nadd_custom_target(move_headers ALL DEPENDS ${__allHeaders})"
  },
  {
    "id" : "1c100496-a4e6-4f85-a31e-39edfa3eb441",
    "prId" : 661,
    "prUrl" : "https://github.com/root-project/root/pull/661#pullrequestreview-46122671",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf38e573-e20e-4cf7-94b7-1f9fb92d5bac",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Is it not possible to combine both time and ccache?",
        "createdAt" : "2017-06-22T09:04:01Z",
        "updatedAt" : "2017-06-22T09:04:01Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "a0375278-4fd0-4d66-b51d-b447f599bef3",
        "parentId" : "bf38e573-e20e-4cf7-94b7-1f9fb92d5bac",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "It probably is, but I do not see a lot of benefit in combining the timing info with `ccache`. In ccache mode we want to be as fast as possible, adding one `time` command to every ccache invocation seems like an overkill.",
        "createdAt" : "2017-06-24T09:08:28Z",
        "updatedAt" : "2017-06-24T09:08:28Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "1985c5842d34354bada7ddf7c472f7411915cd84",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +66,70 @@#--- Enable build timing -----------------------------------------------------------------------\nif (build_timing)\n  # FIXME: This currently will override the use of ccache if -Dbuild_timing=On -Dccache=On is passed.\n  set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE \"${CMAKE_COMMAND} -E time\")\n  set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK \"${CMAKE_COMMAND} -E time\")"
  },
  {
    "id" : "32823bae-f66e-4409-abc8-f3b5d23323a1",
    "prId" : 1153,
    "prUrl" : "https://github.com/root-project/root/pull/1153#pullrequestreview-67990333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57859cf2-ec62-4672-9c41-1ef4015b82cc",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Hi @bellenot, here it would be nicer if we used CMake commands instead of cat or type. CMake has `file(READ ...)` and `file(APPEND ...)` which can do the job in a portable way.",
        "createdAt" : "2017-10-09T06:19:05Z",
        "updatedAt" : "2017-10-09T06:19:05Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "b1c9f308-43d3-42d0-b845-3e378d034bb4",
        "parentId" : "57859cf2-ec62-4672-9c41-1ef4015b82cc",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "https://stackoverflow.com/questions/15282444/using-cmake-how-can-i-concat-files-and-install-them",
        "createdAt" : "2017-10-09T06:20:14Z",
        "updatedAt" : "2017-10-09T06:20:14Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "7be137c9-b162-42c9-8947-b6f98a13622d",
        "parentId" : "57859cf2-ec62-4672-9c41-1ef4015b82cc",
        "authorId" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "body" : "Thanks Guilherme! I will try",
        "createdAt" : "2017-10-09T06:45:06Z",
        "updatedAt" : "2017-10-09T06:45:06Z",
        "lastEditedBy" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "tags" : [
        ]
      },
      {
        "id" : "bd4ae663-9814-4061-a38d-f0b5d6b7407a",
        "parentId" : "57859cf2-ec62-4672-9c41-1ef4015b82cc",
        "authorId" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "body" : "For the record: I merge it the way it is now, but I agree this should be reviewed at some point and converted with some portable CMake commands",
        "createdAt" : "2017-10-09T13:55:06Z",
        "updatedAt" : "2017-10-09T13:55:06Z",
        "lastEditedBy" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "tags" : [
        ]
      }
    ],
    "commit" : "0162333b566c734bd1af95bb56a84da4a55a236e",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +212,216 @@                  DEPENDS build/unix/module.modulemap \"${CMAKE_BINARY_DIR}/include/module.modulemap.extra\"\n                  COMMAND ${CMAKE_COMMAND} -E copy \"${CMAKE_SOURCE_DIR}/build/unix/module.modulemap\" \"${CMAKE_BINARY_DIR}/include/module.modulemap\"\n                  COMMAND ${_os_cat} \"${_from_native}\" >> \"${_to_native}\"\n)\ninstall(FILES \"${CMAKE_BINARY_DIR}/include/module.modulemap\" DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT headers)"
  },
  {
    "id" : "66ce47f5-6b2d-4473-8dc7-5ea1143d2c3e",
    "prId" : 3181,
    "prUrl" : "https://github.com/root-project/root/pull/3181#pullrequestreview-185643170",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb8f63af-3f2b-4467-a53b-3643ba2958ce",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "@amadio can't we collect the library targets and translate them into PCM files to be installed?",
        "createdAt" : "2018-12-17T14:29:00Z",
        "updatedAt" : "2018-12-17T14:29:15Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "bb81a4a2-f247-4149-b23c-eea30d7955df",
        "parentId" : "eb8f63af-3f2b-4467-a53b-3643ba2958ce",
        "authorId" : "2349f38f-171e-43d8-8dee-e8439718c88a",
        "body" : "@Axel-Naumann I don't think we have any target that correlates to something like `stl.pcm` or `_Builtin_stddef_max_align_t.pcm`.",
        "createdAt" : "2018-12-17T14:33:23Z",
        "updatedAt" : "2018-12-17T14:33:23Z",
        "lastEditedBy" : "2349f38f-171e-43d8-8dee-e8439718c88a",
        "tags" : [
        ]
      },
      {
        "id" : "a1cd7b7e-6333-4e46-b37e-f0bc3de307f2",
        "parentId" : "eb8f63af-3f2b-4467-a53b-3643ba2958ce",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "LOL :-) Fair enough!",
        "createdAt" : "2018-12-17T15:24:18Z",
        "updatedAt" : "2018-12-17T15:24:18Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1f219a71ce338da642d1d052a5ad1025fd6f6fd",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +412,416 @@endif()\n\n# FIXME: Add a post-build script where you compare the lib/*.pcm list to the reference, so as not to install random pcms.\ninstall(\n   DIRECTORY ${CMAKE_BINARY_DIR}/lib/"
  },
  {
    "id" : "749eb15d-810f-4664-be8b-33065b741de4",
    "prId" : 3211,
    "prUrl" : "https://github.com/root-project/root/pull/3211#pullrequestreview-187407032",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6090a0d7-52b5-40c2-90a2-7bf701f8a2a2",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Nice catch!",
        "createdAt" : "2018-12-21T14:13:55Z",
        "updatedAt" : "2018-12-21T14:16:41Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d09b45dec5cd2109163c6004ce38f54dcf1e901f",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +37,41 @@  set(ENV{CMAKE_PREFIX_PATH} \"${ENV_CMAKE_PREFIX_PATH}\")\n  set(ENV{\"ROOTSYS\"} ${CMAKE_BINARY_DIR})\nendif()\n\nset(ROOTSYS ${CMAKE_BINARY_DIR})"
  },
  {
    "id" : "9a495ea8-80a3-48a8-a7bf-f865862ce6be",
    "prId" : 3211,
    "prUrl" : "https://github.com/root-project/root/pull/3211#pullrequestreview-187416316",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbd2be2a-cd99-48c1-a525-ccfbc7cd28f5",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Will this ever be `$ENV{ROOTSYS}/lib64`, leaving a `64` in the `PATH`?",
        "createdAt" : "2018-12-21T14:15:08Z",
        "updatedAt" : "2018-12-21T14:16:41Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "f89aac53-8a1c-4467-941a-d3ca3d9e15f1",
        "parentId" : "bbd2be2a-cd99-48c1-a525-ccfbc7cd28f5",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Answer: Not if you source `thisroot.sh`, but with `-Dgnuinstall=ON -DCMAKE_INSTALL_LIBDIR=lib64`, `thisroot.sh` won't work it seems.",
        "createdAt" : "2018-12-21T14:16:25Z",
        "updatedAt" : "2018-12-21T14:16:41Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "6eddf572-a200-404d-aa6c-58ab8075253d",
        "parentId" : "bbd2be2a-cd99-48c1-a525-ccfbc7cd28f5",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "But if you do this then there shouldn't be any `thisroot.sh`? Anyway - is this something that must be fixed for this PR? ;-)",
        "createdAt" : "2018-12-21T14:33:49Z",
        "updatedAt" : "2018-12-21T14:33:49Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "24532059-31a2-4df0-9166-bb57924e5fe0",
        "parentId" : "bbd2be2a-cd99-48c1-a525-ccfbc7cd28f5",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "No, this is not something to be fixed in this PR. It's just that `thisroot.sh` is installed with `make install`, so in principle that could happen when sourcing after installing. But I don't think anyone is actually customizing ROOT's installation dirs, so it's something that can be fixed as part of [ROOT-8589](https://sft.its.cern.ch/jira/browse/ROOT-8589).",
        "createdAt" : "2018-12-21T14:40:34Z",
        "updatedAt" : "2018-12-21T14:40:35Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d09b45dec5cd2109163c6004ce38f54dcf1e901f",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +30,34 @@  string(REPLACE \"$ENV{ROOTSYS}/bin\" \"\" ENV_PATH \"$ENV{PATH}\")\n  string(REPLACE \"$ENV{ROOTSYS}/lib\" \"\" ENV_LD_LIBRARY_PATH \"$ENV{LD_LIBRARY_PATH}\")\n  string(REPLACE \"$ENV{ROOTSYS}/lib\" \"\" ENV_PYTHONPATH $ENV{PYTHONPATH})\n  string(REPLACE \"$ENV{ROOTSYS}\" \"\" ENV_CMAKE_PREFIX_PATH \"$ENV{CMAKE_PREFIX_PATH}\")\n  set(ENV{PATH} \"${ENV_PATH}\")"
  },
  {
    "id" : "18f4838f-7ecb-4a12-a1c8-80a55350b796",
    "prId" : 4751,
    "prUrl" : "https://github.com/root-project/root/pull/4751#pullrequestreview-341825872",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f3a0218-96bf-4fcd-89e1-7da47d2f306b",
        "parentId" : null,
        "authorId" : "0cf28557-ae98-4b6c-9911-07208a97eead",
        "body" : "I think this doesn't work as the globbing is done before the build and therefore nothing is found. Most pcms are copied across (presumably from another `install` call) but some are missing (such as `std.pcm`).",
        "createdAt" : "2020-01-11T11:04:44Z",
        "updatedAt" : "2020-01-11T11:04:44Z",
        "lastEditedBy" : "0cf28557-ae98-4b6c-9911-07208a97eead",
        "tags" : [
        ]
      },
      {
        "id" : "8b78cb39-085d-4889-b0e7-5b3edc06f9ab",
        "parentId" : "9f3a0218-96bf-4fcd-89e1-7da47d2f306b",
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "This PR should make sure all the pcms are installed (still WIP):\r\nhttps://github.com/root-project/root/pull/4763\r\n\r\nThe missing pcms are not under the control of the build system:\r\nhttps://github.com/root-project/root/blob/master/core/dictgen/src/rootcling_impl.cxx#L4237-L4253\r\n\r\n@oshadura will complete the PR above to have those pcms installed as well.",
        "createdAt" : "2020-01-13T13:00:24Z",
        "updatedAt" : "2020-01-13T13:00:24Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd1beeedf5e5ddde1924f791aa5b98ca625817d9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +415,419 @@endif()\n\nfile(GLOB ${pcms} \"*.pcm\")\ninstall(\n   FILES ${pcms}"
  }
]