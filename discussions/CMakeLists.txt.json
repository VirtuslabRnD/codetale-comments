[
  {
    "id" : "0e152004-56ef-442a-a48d-a85b6eec9725",
    "prId" : 470,
    "prUrl" : "https://github.com/root-project/root/pull/470#pullrequestreview-29753365",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69e5ab68-3cce-457f-9258-0fe18155d580",
        "parentId" : null,
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Could you remove the extra new line?",
        "createdAt" : "2017-03-29T15:17:33Z",
        "updatedAt" : "2017-03-29T15:19:41Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca410123e72f819786a88aaa2bc3dfc820eb1501",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +233,237 @@string(REPLACE \";\" \"\" __modulemap_extra_content \"${__modulemap_extra_content}\")\nfile(WRITE \"${CMAKE_BINARY_DIR}/include/module.modulemap.extra\" \"${__modulemap_extra_content}\")\n\nget_property(__allHeaders GLOBAL PROPERTY ROOT_HEADER_TARGETS)\nadd_custom_target(move_headers ALL DEPENDS ${__allHeaders})"
  },
  {
    "id" : "1c100496-a4e6-4f85-a31e-39edfa3eb441",
    "prId" : 661,
    "prUrl" : "https://github.com/root-project/root/pull/661#pullrequestreview-46122671",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf38e573-e20e-4cf7-94b7-1f9fb92d5bac",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Is it not possible to combine both time and ccache?",
        "createdAt" : "2017-06-22T09:04:01Z",
        "updatedAt" : "2017-06-22T09:04:01Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "a0375278-4fd0-4d66-b51d-b447f599bef3",
        "parentId" : "bf38e573-e20e-4cf7-94b7-1f9fb92d5bac",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "It probably is, but I do not see a lot of benefit in combining the timing info with `ccache`. In ccache mode we want to be as fast as possible, adding one `time` command to every ccache invocation seems like an overkill.",
        "createdAt" : "2017-06-24T09:08:28Z",
        "updatedAt" : "2017-06-24T09:08:28Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "1985c5842d34354bada7ddf7c472f7411915cd84",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +66,70 @@#--- Enable build timing -----------------------------------------------------------------------\nif (build_timing)\n  # FIXME: This currently will override the use of ccache if -Dbuild_timing=On -Dccache=On is passed.\n  set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE \"${CMAKE_COMMAND} -E time\")\n  set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK \"${CMAKE_COMMAND} -E time\")"
  },
  {
    "id" : "32823bae-f66e-4409-abc8-f3b5d23323a1",
    "prId" : 1153,
    "prUrl" : "https://github.com/root-project/root/pull/1153#pullrequestreview-67990333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57859cf2-ec62-4672-9c41-1ef4015b82cc",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Hi @bellenot, here it would be nicer if we used CMake commands instead of cat or type. CMake has `file(READ ...)` and `file(APPEND ...)` which can do the job in a portable way.",
        "createdAt" : "2017-10-09T06:19:05Z",
        "updatedAt" : "2017-10-09T06:19:05Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "b1c9f308-43d3-42d0-b845-3e378d034bb4",
        "parentId" : "57859cf2-ec62-4672-9c41-1ef4015b82cc",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "https://stackoverflow.com/questions/15282444/using-cmake-how-can-i-concat-files-and-install-them",
        "createdAt" : "2017-10-09T06:20:14Z",
        "updatedAt" : "2017-10-09T06:20:14Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "7be137c9-b162-42c9-8947-b6f98a13622d",
        "parentId" : "57859cf2-ec62-4672-9c41-1ef4015b82cc",
        "authorId" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "body" : "Thanks Guilherme! I will try",
        "createdAt" : "2017-10-09T06:45:06Z",
        "updatedAt" : "2017-10-09T06:45:06Z",
        "lastEditedBy" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "tags" : [
        ]
      },
      {
        "id" : "bd4ae663-9814-4061-a38d-f0b5d6b7407a",
        "parentId" : "57859cf2-ec62-4672-9c41-1ef4015b82cc",
        "authorId" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "body" : "For the record: I merge it the way it is now, but I agree this should be reviewed at some point and converted with some portable CMake commands",
        "createdAt" : "2017-10-09T13:55:06Z",
        "updatedAt" : "2017-10-09T13:55:06Z",
        "lastEditedBy" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "tags" : [
        ]
      }
    ],
    "commit" : "0162333b566c734bd1af95bb56a84da4a55a236e",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +212,216 @@                  DEPENDS build/unix/module.modulemap \"${CMAKE_BINARY_DIR}/include/module.modulemap.extra\"\n                  COMMAND ${CMAKE_COMMAND} -E copy \"${CMAKE_SOURCE_DIR}/build/unix/module.modulemap\" \"${CMAKE_BINARY_DIR}/include/module.modulemap\"\n                  COMMAND ${_os_cat} \"${_from_native}\" >> \"${_to_native}\"\n)\ninstall(FILES \"${CMAKE_BINARY_DIR}/include/module.modulemap\" DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT headers)"
  },
  {
    "id" : "66ce47f5-6b2d-4473-8dc7-5ea1143d2c3e",
    "prId" : 3181,
    "prUrl" : "https://github.com/root-project/root/pull/3181#pullrequestreview-185643170",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb8f63af-3f2b-4467-a53b-3643ba2958ce",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "@amadio can't we collect the library targets and translate them into PCM files to be installed?",
        "createdAt" : "2018-12-17T14:29:00Z",
        "updatedAt" : "2018-12-17T14:29:15Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "bb81a4a2-f247-4149-b23c-eea30d7955df",
        "parentId" : "eb8f63af-3f2b-4467-a53b-3643ba2958ce",
        "authorId" : "2349f38f-171e-43d8-8dee-e8439718c88a",
        "body" : "@Axel-Naumann I don't think we have any target that correlates to something like `stl.pcm` or `_Builtin_stddef_max_align_t.pcm`.",
        "createdAt" : "2018-12-17T14:33:23Z",
        "updatedAt" : "2018-12-17T14:33:23Z",
        "lastEditedBy" : "2349f38f-171e-43d8-8dee-e8439718c88a",
        "tags" : [
        ]
      },
      {
        "id" : "a1cd7b7e-6333-4e46-b37e-f0bc3de307f2",
        "parentId" : "eb8f63af-3f2b-4467-a53b-3643ba2958ce",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "LOL :-) Fair enough!",
        "createdAt" : "2018-12-17T15:24:18Z",
        "updatedAt" : "2018-12-17T15:24:18Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1f219a71ce338da642d1d052a5ad1025fd6f6fd",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +412,416 @@endif()\n\n# FIXME: Add a post-build script where you compare the lib/*.pcm list to the reference, so as not to install random pcms.\ninstall(\n   DIRECTORY ${CMAKE_BINARY_DIR}/lib/"
  }
]