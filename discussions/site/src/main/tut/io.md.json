[
  {
    "id" : "180e7b2c-7223-49a1-bd41-3ecf8634960a",
    "prId" : 143,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/143#pullrequestreview-102855327",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b54b9e68-c778-4b3d-a293-44d87faad656",
        "parentId" : null,
        "authorId" : "efc45bfc-463c-4c9e-946d-ad472fabc9f0",
        "body" : "I find that people can reason about evaluation, including myself.\r\n\r\nThe issue with `pure` is of course that `pure` is strictly evaluated, which can be seen in its signature, so it can't suspend anything.",
        "createdAt" : "2018-03-10T16:26:21Z",
        "updatedAt" : "2018-03-13T11:09:10Z",
        "lastEditedBy" : "efc45bfc-463c-4c9e-946d-ad472fabc9f0",
        "tags" : [
        ]
      }
    ],
    "commit" : "4fe74b229c1e8b8a5255bb23aec6b82953776517",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +85,89 @@```\n\nYou should never use `pure` to wrap side effects, that is very much wrong, so please don't do this:\n\n```tut:book"
  },
  {
    "id" : "3d32c2ed-c8a8-4633-993e-986248434f3c",
    "prId" : 143,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/143#pullrequestreview-103398634",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9d8e334-b923-446f-9198-47b5e9c941bd",
        "parentId" : null,
        "authorId" : "efc45bfc-463c-4c9e-946d-ad472fabc9f0",
        "body" : "Ah shit, did not notice this.\r\n\r\nThis statement is no longer true in 0.10, we need to fix it — if any of them fails, the other gets cancelled.\r\n\r\nPrior to the cancelable IO, we couldn't cancel the other so we waited on it in order to prevent resource leaks.",
        "createdAt" : "2018-03-13T11:40:15Z",
        "updatedAt" : "2018-03-13T11:40:15Z",
        "lastEditedBy" : "efc45bfc-463c-4c9e-946d-ad472fabc9f0",
        "tags" : [
        ]
      },
      {
        "id" : "efab4254-5eb9-49bf-adde-04864f892417",
        "parentId" : "f9d8e334-b923-446f-9198-47b5e9c941bd",
        "authorId" : "0f844b93-c74a-44d3-8df7-597a37ca5da2",
        "body" : "It makes sense, no worries. There should be another update to the README file linking the microsite once it's published, it can be fixed in the same PR.",
        "createdAt" : "2018-03-13T12:02:18Z",
        "updatedAt" : "2018-03-13T12:02:18Z",
        "lastEditedBy" : "0f844b93-c74a-44d3-8df7-597a37ca5da2",
        "tags" : [
        ]
      }
    ],
    "commit" : "4fe74b229c1e8b8a5255bb23aec6b82953776517",
    "line" : 234,
    "diffHunk" : "@@ -1,1 +319,323 @@```\n\nIf we schedule `ioB` to finish in 10 seconds, then the whole computation will wait until it completes to return a failed `IO` even though `ioA` fails immediately.\n\nPlease notice that the following example **will not run in parallel** because it's missing the asynchronous execution:"
  },
  {
    "id" : "1364615d-4805-466a-88b0-6843a16054c8",
    "prId" : 135,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/135#pullrequestreview-101799118",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba9df23d-260b-4212-b6e5-fc49ddcf4bee",
        "parentId" : null,
        "authorId" : "ff78fcf6-a54d-4325-a0c8-d28cc86fb75e",
        "body" : "Maybe we should mention here, that this is not actually specific to IO but part of any `MonadError`? :)",
        "createdAt" : "2018-03-06T22:23:08Z",
        "updatedAt" : "2018-03-07T11:58:34Z",
        "lastEditedBy" : "ff78fcf6-a54d-4325-a0c8-d28cc86fb75e",
        "tags" : [
        ]
      },
      {
        "id" : "700200e2-6528-444a-9cad-ca5c35091015",
        "parentId" : "ba9df23d-260b-4212-b6e5-fc49ddcf4bee",
        "authorId" : "0f844b93-c74a-44d3-8df7-597a37ca5da2",
        "body" : "Will do!",
        "createdAt" : "2018-03-07T03:30:21Z",
        "updatedAt" : "2018-03-07T11:58:34Z",
        "lastEditedBy" : "0f844b93-c74a-44d3-8df7-597a37ca5da2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c296388a24af978c1eeac0314f85999f77c1929",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +96,100 @@### attempt\n\nMaterializes any sequenced exceptions into value space, where they may be handled. This is analogous to the `catch` clause in `try`/`catch`, being the inverse of `IO.raiseError`. Example:\n\n```tut:book"
  }
]