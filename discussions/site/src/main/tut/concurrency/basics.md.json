[
  {
    "id" : "71a7940f-e8da-4ddc-b20d-671c870ab370",
    "prId" : 314,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/314#pullrequestreview-147689575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e84d357-7e04-45ef-b7e5-0add7df27e5e",
        "parentId" : null,
        "authorId" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "body" : "`???` doesn't work in tut. Would be nice if it did.",
        "createdAt" : "2018-08-20T15:11:58Z",
        "updatedAt" : "2018-08-20T15:33:28Z",
        "lastEditedBy" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec91d7b628d787b3c235ddda498d2d9c99e69d4e",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +129,133 @@\ndef blockingOp: IO[Unit] = IO(/* blocking op*/ ())\ndef doSth(): IO[Unit] = IO(/* do something */ ())\n\nval prog ="
  },
  {
    "id" : "34395243-833e-44ef-b207-c1b4bc3b2bce",
    "prId" : 314,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/314#pullrequestreview-147689575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4324d45c-967f-4e33-9b4f-1db0e6c46bb0",
        "parentId" : null,
        "authorId" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "body" : "It's common to pass a `ContextShift` implicitly, but we already had one in scope.  This is where tut usage and `IOApp` usage diverge a bit.  We were already showing explicit usage, so I don't think I'm going to lose sleep over this.",
        "createdAt" : "2018-08-20T15:12:55Z",
        "updatedAt" : "2018-08-20T15:33:28Z",
        "lastEditedBy" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec91d7b628d787b3c235ddda498d2d9c99e69d4e",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +196,200 @@val csTwo: ContextShift[IO] = IO.contextShift(ecTwo)\n\ndef infiniteIO(id: Int)(cs: ContextShift[IO]): IO[Fiber[IO, Unit]] = {\n  def repeat: IO[Unit] = IO(println(id)).flatMap(_ => repeat)\n"
  }
]