[
  {
    "id" : "9eec6d8b-4e35-4c5a-9f98-10b95b7c931d",
    "prId" : 135,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/135#pullrequestreview-101799316",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ab0b506-fcd7-4832-822d-117e22cb3c59",
        "parentId" : null,
        "authorId" : "ff78fcf6-a54d-4325-a0c8-d28cc86fb75e",
        "body" : "Can we use something other than Future here? I don't think we should encourage anyone to actually build stuff on top of future, no?",
        "createdAt" : "2018-03-06T22:26:49Z",
        "updatedAt" : "2018-03-07T11:58:34Z",
        "lastEditedBy" : "ff78fcf6-a54d-4325-a0c8-d28cc86fb75e",
        "tags" : [
        ]
      },
      {
        "id" : "14135b02-08e4-4a46-818b-b131e80df2c5",
        "parentId" : "6ab0b506-fcd7-4832-822d-117e22cb3c59",
        "authorId" : "0f844b93-c74a-44d3-8df7-597a37ca5da2",
        "body" : "That was the quickest to implement because of the `unsafeToFuture()` method but I really wanted to have something like `StateT` or `EitherT` here. If you have any better example I'd be happy to replace it :)",
        "createdAt" : "2018-03-07T03:32:05Z",
        "updatedAt" : "2018-03-07T11:58:34Z",
        "lastEditedBy" : "0f844b93-c74a-44d3-8df7-597a37ca5da2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c296388a24af978c1eeac0314f85999f77c1929",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@import scala.concurrent.Future\n\ntype MyEffect[A] = Future[Either[Throwable, A]]\n\nimplicit def myEffectLiftIO: LiftIO[MyEffect] ="
  }
]