[
  {
    "id" : "38624b76-e337-450c-87a0-254daeaea2a2",
    "prId" : 16051,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/16051#pullrequestreview-35502473",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a31e220d-6be7-4771-9be2-956080817dcb",
        "parentId" : null,
        "authorId" : "505ff022-363e-4bcc-93dc-ed992b68f8ed",
        "body" : "This interface seems dangerous. There aren't any default properties, so why not just specify the type parameters in e.g., `SankeyNodeMinimal` as just `<N, L>`?\r\n\r\nFWIW, I deleted the interface and none of the tests fail.",
        "createdAt" : "2017-04-28T20:16:46Z",
        "updatedAt" : "2017-04-30T17:45:17Z",
        "lastEditedBy" : "505ff022-363e-4bcc-93dc-ed992b68f8ed",
        "tags" : [
        ]
      },
      {
        "id" : "31b2dd35-9832-4ae6-81c8-85160e786505",
        "parentId" : "a31e220d-6be7-4771-9be2-956080817dcb",
        "authorId" : "b97ad7b9-a71a-418e-8d81-d15777ab9de6",
        "body" : "Very good question. I wasn't too happy with it either. Here is the rationale:\r\n\r\nIt prevents silly things like:  `SankeyNode<number, string>`, i.e. using primitives instead of something that has a key-value structure.\r\n\r\nSo you're right, dropping it won't fail any tests or meaningful use, it only prevents an edge case failure mode.\r\n\r\n(_Side note_: Sooner or later we might want to consider opening up a discussion issue regarding creating and publishing a TS2.2+ conforming definition, e.g. here we could use default assignments of `{}` for the generics. I just dread ðŸ˜°  the parallel maintenance period of the definitions, even if we can shorten some signatures, consider using `keyof` etc.)",
        "createdAt" : "2017-04-28T21:50:51Z",
        "updatedAt" : "2017-04-30T17:45:17Z",
        "lastEditedBy" : "b97ad7b9-a71a-418e-8d81-d15777ab9de6",
        "tags" : [
        ]
      },
      {
        "id" : "8bc58959-1a9b-4c90-83f6-33a8e44f7044",
        "parentId" : "a31e220d-6be7-4771-9be2-956080817dcb",
        "authorId" : "505ff022-363e-4bcc-93dc-ed992b68f8ed",
        "body" : "Fair enough. I've played with it and it doesn't seem like it introduces any accidental issues, so I'm down.",
        "createdAt" : "2017-04-29T18:56:02Z",
        "updatedAt" : "2017-04-30T17:45:17Z",
        "lastEditedBy" : "505ff022-363e-4bcc-93dc-ed992b68f8ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "3388dae5298ded1811a01b9b8f2ecbc68f9bea9a",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +11,15 @@ * the Sankey Layout Generator\n */\nexport interface SankeyExtraProperties { [key: string]: any; }\n\n/**"
  },
  {
    "id" : "91e1fb4a-898a-464c-94bf-03bbaafd2df4",
    "prId" : 16761,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/16761#pullrequestreview-41526625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68d48a32-92e6-4c0d-89f6-a2c0cad2c0a8",
        "parentId" : null,
        "authorId" : "505ff022-363e-4bcc-93dc-ed992b68f8ed",
        "body" : "Should there be a third overload that allows setting the first type parameter?",
        "createdAt" : "2017-05-30T14:58:33Z",
        "updatedAt" : "2017-05-31T15:12:13Z",
        "lastEditedBy" : "505ff022-363e-4bcc-93dc-ed992b68f8ed",
        "tags" : [
        ]
      },
      {
        "id" : "2d74e9cc-0a31-4755-a7b0-bf99e6558168",
        "parentId" : "68d48a32-92e6-4c0d-89f6-a2c0cad2c0a8",
        "authorId" : "b97ad7b9-a71a-418e-8d81-d15777ab9de6",
        "body" : "Am I assuming correctly that you are referring to the `sankeyLinkHorizontal` signature? I thought about it in the context of `sankeyLinkHorizontal` being syntactic sugar for fully configuring your own horizontal  link using **d3-shape's** `linkHorizontal()`.\r\n\r\nGiven that it is already preconfigured with `source` and `target` accessors and assumes the default `x` and `y` accessors, it did not seem necessary to introduce a generic for the `this` context. As the preconfigured accessors do not access a specific `this` context. By the same token, I fixed the third generic of the returned `Link` to `[number, number]`. In principle, we could add additional generics/signatures, but it seems we would move away from the intended syntactic sugar, to a full horizontal link as **d3-shape** provides it.\r\n\r\nOver to you, I will already push a commit addressing the above two comments in the meantime.",
        "createdAt" : "2017-05-31T15:11:10Z",
        "updatedAt" : "2017-05-31T15:12:13Z",
        "lastEditedBy" : "b97ad7b9-a71a-418e-8d81-d15777ab9de6",
        "tags" : [
        ]
      },
      {
        "id" : "9981e1ee-dcdb-4ea5-9ba3-0be06cd63d88",
        "parentId" : "68d48a32-92e6-4c0d-89f6-a2c0cad2c0a8",
        "authorId" : "b97ad7b9-a71a-418e-8d81-d15777ab9de6",
        "body" : "@gustavderdrache What do you think in light of my above comment? Should we broaden the signatures to reflect the full scope of generics supported by `Link<...>`? I do not have a strong preference, both approaches have pros and cons and are equally workable.",
        "createdAt" : "2017-06-01T13:32:56Z",
        "updatedAt" : "2017-06-01T13:32:56Z",
        "lastEditedBy" : "b97ad7b9-a71a-418e-8d81-d15777ab9de6",
        "tags" : [
        ]
      },
      {
        "id" : "160e53e1-23c9-42d2-9329-185b46b8f71a",
        "parentId" : "68d48a32-92e6-4c0d-89f6-a2c0cad2c0a8",
        "authorId" : "505ff022-363e-4bcc-93dc-ed992b68f8ed",
        "body" : "Nah, I think you have a good point. Carry on :)",
        "createdAt" : "2017-06-01T14:29:35Z",
        "updatedAt" : "2017-06-01T14:29:35Z",
        "lastEditedBy" : "505ff022-363e-4bcc-93dc-ed992b68f8ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd21845b0a86d839916735eb887190220412f63e",
    "line" : 375,
    "diffHunk" : "@@ -1,1 +343,347 @@ * SankeyLinkMinimal interface.\n */\nexport function sankeyLinkHorizontal<N extends SankeyExtraProperties, L extends SankeyExtraProperties>(): Link<any, SankeyLink<N, L>, [number, number]>;"
  }
]