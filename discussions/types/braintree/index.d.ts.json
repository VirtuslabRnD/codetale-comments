[
  {
    "id" : "9c1d9247-0ec2-44d5-b3d2-9256ee382430",
    "prId" : 37148,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/37148#pullrequestreview-268484340",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "216488d6-1606-4e6b-a9a4-7fa533a7c59c",
        "parentId" : null,
        "authorId" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "body" : "Could add `length` to the interface as well for this PR.\r\n```\r\nlength: number\r\n```",
        "createdAt" : "2019-07-29T15:51:53Z",
        "updatedAt" : "2019-07-30T05:35:25Z",
        "lastEditedBy" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "tags" : [
        ]
      },
      {
        "id" : "ce294a2d-d2f6-4c26-9e09-4642ce25aa6f",
        "parentId" : "216488d6-1606-4e6b-a9a4-7fa533a7c59c",
        "authorId" : "4edbde00-b994-4d84-9de5-c4b7283e3cbe",
        "body" : "I've tried to execute code so that I got those validation errors and they had no length even if documentation said so. Looking at the source code I don't see how as this is object without length and not an array. https://github.com/braintree/braintree_node/blob/master/lib/braintree/validation_errors_collection.js",
        "createdAt" : "2019-07-30T05:30:14Z",
        "updatedAt" : "2019-07-30T05:35:25Z",
        "lastEditedBy" : "4edbde00-b994-4d84-9de5-c4b7283e3cbe",
        "tags" : [
        ]
      },
      {
        "id" : "52795407-a446-40a6-9a79-d8ae6967b967",
        "parentId" : "216488d6-1606-4e6b-a9a4-7fa533a7c59c",
        "authorId" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "body" : "Thanks for doing some sleuthing and following up. I agree.",
        "createdAt" : "2019-07-30T15:36:30Z",
        "updatedAt" : "2019-07-30T15:36:31Z",
        "lastEditedBy" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "270c1e002fa8a9c7a52246ee3d7b197fd37f398e",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +1697,1701 @@    }\n\n    export interface ValidationErrorsCollection {\n        deepErrors(): ValidationError[];\n        for(name: string): ValidationErrorsCollection;"
  },
  {
    "id" : "54dce9c0-802d-4911-809c-ed1d0cc0c46e",
    "prId" : 39253,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/39253#pullrequestreview-304306914",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73f55513-dc03-4b31-bd28-cafaff5cbd4e",
        "parentId" : null,
        "authorId" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "body" : "üëç ",
        "createdAt" : "2019-10-19T20:24:36Z",
        "updatedAt" : "2019-10-19T20:46:53Z",
        "lastEditedBy" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "tags" : [
        ]
      },
      {
        "id" : "28693de6-e094-4f79-b50e-1a7acd211a5f",
        "parentId" : "73f55513-dc03-4b31-bd28-cafaff5cbd4e",
        "authorId" : "7fc816e6-3d22-4cae-b9d8-b9e743a4add3",
        "body" : "Thanks a lot for reviewing and approving this PR",
        "createdAt" : "2019-10-21T02:34:34Z",
        "updatedAt" : "2019-10-21T02:34:34Z",
        "lastEditedBy" : "7fc816e6-3d22-4cae-b9d8-b9e743a4add3",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5a3ed11a93ace05329f8923ce49ee67f062f0d4",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +25,29 @@\n    export interface GatewayConfig {\n        environment: Environment;\n        merchantId: string;\n        publicKey: string;"
  },
  {
    "id" : "9c2c1896-defe-4d66-869b-661702e3f7b8",
    "prId" : 39253,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/39253#pullrequestreview-304306824",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59469dfd-5152-4393-8e33-3c0aa1e9aceb",
        "parentId" : null,
        "authorId" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "body" : "@sharno Thanks for fixing search and adding in streams in. Do you know if there is there a way to add typings to the stream objects (i.e. `CreditCardVerification` here)? That could be very nice to have. ",
        "createdAt" : "2019-10-19T20:45:15Z",
        "updatedAt" : "2019-10-19T20:46:53Z",
        "lastEditedBy" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "tags" : [
        ]
      },
      {
        "id" : "d5815f7a-b882-4623-aca7-6625a72a18bc",
        "parentId" : "59469dfd-5152-4393-8e33-3c0aa1e9aceb",
        "authorId" : "7fc816e6-3d22-4cae-b9d8-b9e743a4add3",
        "body" : "I tried to look for something like this but I couldn't find any. It's much helpful of course if we could type the stream but it doesn't look the be the case in `@types/node`.\r\n\r\nA solution might be looking into if it's possible to make `@types/node`'s `stream.Readable` take a type param.\r\n\r\nA custom stream type for braintree is possible but wouldn't work well with the other stream types from `@types/node`",
        "createdAt" : "2019-10-21T02:34:04Z",
        "updatedAt" : "2019-10-21T02:34:04Z",
        "lastEditedBy" : "7fc816e6-3d22-4cae-b9d8-b9e743a4add3",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5a3ed11a93ace05329f8923ce49ee67f062f0d4",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +103,107 @@\n    interface CreditCardVerificationGateway {\n        search(searchFn: any): stream.Readable;\n    }\n"
  },
  {
    "id" : "78286e79-2b75-42c2-b8c7-941b07c4938f",
    "prId" : 40958,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/40958#pullrequestreview-330253617",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b6b6519-a94a-40ae-9106-4edc8c551fc6",
        "parentId" : null,
        "authorId" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "body" : "Looks like `timestamp` is part of the WebhookNotification as well, can we add it here? https://developers.braintreepayments.com/reference/general/webhooks/overview",
        "createdAt" : "2019-12-11T01:36:34Z",
        "updatedAt" : "2019-12-11T02:03:07Z",
        "lastEditedBy" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "fac677738c58f77e318122c19934e464fbcdfc18",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +837,841 @@    }\n\n    export class WebhookNotification {\n        kind: WebhookNotificationKind;\n        timestamp: Date;"
  },
  {
    "id" : "e8dadb90-5e62-4125-a6db-34b958d476aa",
    "prId" : 40958,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/40958#pullrequestreview-330253617",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9c58c67-7ba4-4cde-b780-c53f41a653d0",
        "parentId" : null,
        "authorId" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "body" : "Looks like there are some additional kinds of webhook notifications as well that yield additional attributes (https://developers.braintreepayments.com/reference/general/webhooks/overview#notification-kinds). Think this PR is a great start to implementing webhooks though, so it shouldn't be a blocker. Feel free to submit another PR for those if you're up for it!",
        "createdAt" : "2019-12-11T01:40:15Z",
        "updatedAt" : "2019-12-11T02:03:07Z",
        "lastEditedBy" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "fac677738c58f77e318122c19934e464fbcdfc18",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +843,847 @@        merchantAccount?: MerchantAccount;\n        transaction?: Transaction;\n        dispute?: Dispute;\n    }\n"
  },
  {
    "id" : "e492abe4-be91-4f86-9619-cd9537367c23",
    "prId" : 42552,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/42552#pullrequestreview-363042814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "765e63aa-56ce-488b-ab7e-7e75589f0aab",
        "parentId" : null,
        "authorId" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "body" : "Just wanted to callout: I'm in support of adding this since it is still live in the current braintree package, however it is deprecated and marked to be removed in the next major version.\r\n\r\nSee comments here: https://github.com/braintree/braintree_node#quick-start",
        "createdAt" : "2020-02-22T18:23:38Z",
        "updatedAt" : "2020-02-24T18:53:17Z",
        "lastEditedBy" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "7df95eb3717e2949bbb415d9b102d82decc5525b",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +57,61 @@    }\n\n    export function connect(config: GatewayConfig): BraintreeGateway;\n\n    interface ValidatedResponse<T> {"
  },
  {
    "id" : "8b5444f3-a22f-4fd2-afdc-4636e9eab5b2",
    "prId" : 42552,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/42552#pullrequestreview-363042814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d98fdaf-b8f1-4e9c-854b-727b9d483319",
        "parentId" : null,
        "authorId" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "body" : "In relation to longer comment above, we should probably take similar action on this interface as well (pending outcome of discussion).",
        "createdAt" : "2020-02-22T18:59:42Z",
        "updatedAt" : "2020-02-24T18:53:17Z",
        "lastEditedBy" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "7df95eb3717e2949bbb415d9b102d82decc5525b",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +697,701 @@\n    export interface MerchantIndividualRequest {\n        address: MerchantAddressDetails;\n        dateOfBirth: string;\n        email: string;"
  },
  {
    "id" : "03a67fe7-b42f-4acf-9a5b-f98c7244a2b5",
    "prId" : 52487,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52487#pullrequestreview-643605260",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c32d9d1-ad6e-45f3-a79f-0bdd3e7a1435",
        "parentId" : null,
        "authorId" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "body" : "I like making Card Type more specific. But have a few questions.\r\n\r\n1. Should we remove the other `cardType` prop below?\r\n2. Does this need to be lower-cased `cardType` to match docs? (https://developers.braintreepayments.com/reference/response/credit-card/node)\r\n3. What is the purpose of `All`?\r\n\r\nSimilar questions with respect to CustomerLocation and CardTypeIndicator.",
        "createdAt" : "2021-04-21T15:47:02Z",
        "updatedAt" : "2021-04-21T21:09:29Z",
        "lastEditedBy" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "tags" : [
        ]
      },
      {
        "id" : "0f388122-7ad1-498b-be05-501719639624",
        "parentId" : "0c32d9d1-ad6e-45f3-a79f-0bdd3e7a1435",
        "authorId" : "8e90bad2-10e9-426d-a242-8ba3085f60ff",
        "body" : "Hi! Thanks for the review!\r\n\r\n1. No, they're both necessary, the one I added is static and it works sorta like an enum. If you look at [this](https://github.com/braintree/braintree_node/blob/master/lib/braintree/credit_card.js) file in the source code of the library you'll notice that the value is being initialized in a `static initClass` method. The one I needed in my project at the moment was the `MerchantAccount.FundingDestination` \"enum\" but I saw many of them were not typed so I thought I might as well try to cover most, if not all of them, in my PR.\r\n\r\n2. No, the example I was following was [this](https://developers.braintreepayments.com/guides/braintree-marketplace/onboarding/node). Here you'll notice when setting `funding.destination` it uses this `MerchantAccount.FundingDestination` enum, that's the same I wanted to achieve adding the other two `static` fields.\r\n\r\n```js\r\nfunding: {\r\n    descriptor: \"Blue Ladders\",\r\n    destination: braintree.MerchantAccount.FundingDestination.Bank,\r\n    email: \"funding@blueladders.com\",\r\n    mobilePhone: \"5555555555\",\r\n    accountNumber: \"1123581321\",\r\n    routingNumber: \"071101307\"\r\n  },\r\n```\r\n\r\n3. Looking at its implementation ([here](https://github.com/braintree/braintree_node/blob/master/lib/braintree/credit_card.js)) it looks like it returns an array with all the values in the object but itself, so in this case it would be `[CreditCard.CardType.AmEx, CreditCard.CardType.CarteBlanche, ...]`.\r\n\r\nSorry bout the lack of tests, I'll add them now. Same with any static field I might have missed.\r\n\r\nThanks again for the review! Let me know if there's anything else you'd like to discuss or if I didn't explain myself properly here!",
        "createdAt" : "2021-04-21T19:26:40Z",
        "updatedAt" : "2021-04-21T21:09:29Z",
        "lastEditedBy" : "8e90bad2-10e9-426d-a242-8ba3085f60ff",
        "tags" : [
        ]
      },
      {
        "id" : "e780afb7-0a94-403b-97ad-5ba10fdccaf8",
        "parentId" : "0c32d9d1-ad6e-45f3-a79f-0bdd3e7a1435",
        "authorId" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "body" : "Nice, this is helpful. Didn't know about this!",
        "createdAt" : "2021-04-23T19:29:54Z",
        "updatedAt" : "2021-04-23T19:29:54Z",
        "lastEditedBy" : "a0d77ce1-cbb9-44c7-95ee-c441ea7388b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "eff54d795b3f1cff48736724875ce02c66c20da0",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +359,363 @@\n    export class CreditCard {\n        static CardType: {\n            AmEx: 'American Express';\n            CarteBlanche: 'Carte Blanche';"
  }
]