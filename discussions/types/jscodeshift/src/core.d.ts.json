[
  {
    "id" : "6d0d16d0-70a1-4f4a-83fb-d1581f774c51",
    "prId" : 32020,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/32020#pullrequestreview-200818365",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8ea4066-b541-4913-b352-879be8418eaf",
        "parentId" : null,
        "authorId" : "d96f0378-3871-4aa4-a586-e9febc42039c",
        "body" : "Before, I had used `export * from \"ast-types/gen/nodes\";` for this, but I couldn't get that working after changing this module to use `export =`. Is there a better way to do this than list them all out explicitly?",
        "createdAt" : "2019-02-06T21:38:29Z",
        "updatedAt" : "2019-02-06T23:15:26Z",
        "lastEditedBy" : "d96f0378-3871-4aa4-a586-e9febc42039c",
        "tags" : [
        ]
      }
    ],
    "commit" : "47ffe1a4ba623bc5c363aee2ddb725ecadbfb361",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +100,104 @@    type ASTNode = nodes.ASTNode;\n\n    type AnyTypeAnnotation = nodes.AnyTypeAnnotation;\n    type ArrayExpression = nodes.ArrayExpression;\n    type ArrayPattern = nodes.ArrayPattern;"
  },
  {
    "id" : "46c675f9-a972-4623-91a5-eda2bf074934",
    "prId" : 51173,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/51173#pullrequestreview-595994498",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5b6f718-c417-4c49-b556-a1d5ffa24012",
        "parentId" : null,
        "authorId" : "d96f0378-3871-4aa4-a586-e9febc42039c",
        "body" : "Not sure why this was removed as part of this change https://github.com/benjamn/recast/commit/8df3cfe6fd210e29557635877a92e305a3ad7eb9#diff-564c860307257bfac9176f554a35aa858c350a59d75c0dcd0a5d63a480805bd0\r\n\r\nInlining looks like a good option to me so that these types remain backwards compatible.",
        "createdAt" : "2021-02-23T04:50:43Z",
        "updatedAt" : "2021-02-23T04:52:58Z",
        "lastEditedBy" : "d96f0378-3871-4aa4-a586-e9febc42039c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d78fc01ab59735e1a55e1d4c587fb46781cc370",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +11,15 @@    interface Parser {\n        parse(source: string, options?: any): types.ASTNode;\n    }\n\n    interface Filters {"
  }
]