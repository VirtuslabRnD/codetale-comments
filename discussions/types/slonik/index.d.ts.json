[
  {
    "id" : "ed945cc1-9856-4efe-b445-46f256afb50b",
    "prId" : 35691,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/35691#pullrequestreview-242030904",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91a4334c-6e41-4127-b8b8-23a2245b3dbf",
        "parentId" : null,
        "authorId" : "f645d6f1-20ee-4f01-932b-6c07edd68df8",
        "body" : "Looks like this is missing the property `originalError: Error` which was added in this commit: https://github.com/gajus/slonik/commit/dd3af0a920118bfa393a025e15e294536a938ed1#diff-5c8b199a98cb05fcfa67ad0a331c165b\r\n\r\nAlso, there seem to be some error types missing here, namely BackendTerminatedError, ConnectionError, InvalidInputError, QueryCancelledError and UnexpectedStateError - those should probably be added too to get these types in sync with the current version of slonik.",
        "createdAt" : "2019-05-23T14:38:14Z",
        "updatedAt" : "2019-05-26T08:43:30Z",
        "lastEditedBy" : "f645d6f1-20ee-4f01-932b-6c07edd68df8",
        "tags" : [
        ]
      },
      {
        "id" : "b79abaee-0c22-4ade-ad4c-cb6bdf2d0128",
        "parentId" : "91a4334c-6e41-4127-b8b8-23a2245b3dbf",
        "authorId" : "efd6da07-8c85-42ac-9122-9ec40a35c133",
        "body" : "@mmkal check ee4f5f2",
        "createdAt" : "2019-05-26T09:21:55Z",
        "updatedAt" : "2019-05-26T09:21:55Z",
        "lastEditedBy" : "efd6da07-8c85-42ac-9122-9ec40a35c133",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee4f5f26975856354cd27a87217748877eb7f576",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +503,507 @@export class NotFoundError extends SlonikError {}\nexport class DataIntegrityError extends SlonikError {}\nexport class IntegrityConstraintViolationError extends SlonikError {\n  constraint: string;\n  originalError: Error;"
  },
  {
    "id" : "21d63e40-cb58-4557-957a-285a3db85479",
    "prId" : 36957,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/36957#pullrequestreview-263517949",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a84ac0e6-ff47-459a-b45c-1b248928e55c",
        "parentId" : null,
        "authorId" : "f645d6f1-20ee-4f01-932b-6c07edd68df8",
        "body" : "Can we add a test for this with a sample usage (maybe from the main package docs?)",
        "createdAt" : "2019-07-17T13:37:02Z",
        "updatedAt" : "2019-07-18T09:31:59Z",
        "lastEditedBy" : "f645d6f1-20ee-4f01-932b-6c07edd68df8",
        "tags" : [
        ]
      },
      {
        "id" : "9d272ca6-0b8c-4628-8c71-6c264a55cfe6",
        "parentId" : "a84ac0e6-ff47-459a-b45c-1b248928e55c",
        "authorId" : "efd6da07-8c85-42ac-9122-9ec40a35c133",
        "body" : "@mmkal Sure! Here you go: https://github.com/DefinitelyTyped/DefinitelyTyped/pull/36957/commits/ab8a9bb54100da9a2650a6ca6a4dd9b22e4db78d",
        "createdAt" : "2019-07-18T08:58:16Z",
        "updatedAt" : "2019-07-18T09:31:59Z",
        "lastEditedBy" : "efd6da07-8c85-42ac-9122-9ec40a35c133",
        "tags" : [
        ]
      }
    ],
    "commit" : "4faf5021d720c2f768dc07fccbc00e3fde3ffa07",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +299,303 @@}\n\nexport function createSqlTag(configuration?: SqlTagConfigurationType): SqlTaggedTemplateType;\n\nexport interface SqlTaggedTemplateType {"
  },
  {
    "id" : "32062eaf-1032-4120-b184-c7df96f69a1f",
    "prId" : 39202,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/39202#pullrequestreview-304347285",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57ea0ec8-5750-4278-88a2-4bd8b4b2e381",
        "parentId" : null,
        "authorId" : "f645d6f1-20ee-4f01-932b-6c07edd68df8",
        "body" : "What's the benefit of requiring `ReadonlyArray<string>`? It's fine if the function is always used inline, but slightly more inconvenient to work with otherwise, since now I can't do:\r\n\r\n```typescript\r\nconst tuples = [['a', 'b']]\r\nconst columnTypes = ['foo', 'bar']\r\n...\r\nslonik.unnest(tuples, columnTypes)\r\n```\r\n\r\nEdit: looks like I'm wrong about that, you can pass regular arrays into functions that accept `ReadonlyArray`s, which I suppose makes sense.",
        "createdAt" : "2019-10-20T16:26:49Z",
        "updatedAt" : "2019-10-20T16:28:48Z",
        "lastEditedBy" : "f645d6f1-20ee-4f01-932b-6c07edd68df8",
        "tags" : [
        ]
      },
      {
        "id" : "7d67764a-0d9a-4e78-82f8-b66b1f17ab9b",
        "parentId" : "57ea0ec8-5750-4278-88a2-4bd8b4b2e381",
        "authorId" : "c4cae86c-2c4c-4fd2-b0fd-2b2b7a21ee6b",
        "body" : "I added the `ReadonlyArray` type in line with the [original Flow types](https://github.com/gajus/slonik/blob/master/src/types.js#L349). To my understanding there are no restrictions to the array passed in as parameter, but the `ReadonlyArray` would simply imply that the function itself is not performing any mutations on the provided array.",
        "createdAt" : "2019-10-21T06:25:06Z",
        "updatedAt" : "2019-10-21T06:25:06Z",
        "lastEditedBy" : "c4cae86c-2c4c-4fd2-b0fd-2b2b7a21ee6b",
        "tags" : [
        ]
      }
    ],
    "commit" : "41987acd7c99c96b8b4b46cc243631df4c09f8c7",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +322,326 @@        // https://github.com/gajus/slonik/issues/44\n        tuples: ReadonlyArray<ReadonlyArray<any>>,\n        columnTypes: ReadonlyArray<string>\n    ) => UnnestSqlTokenType;\n}"
  },
  {
    "id" : "f4bb36e4-0a0a-449a-a780-77a00b80d259",
    "prId" : 40582,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/40582#pullrequestreview-321494681",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00935931-1ecb-4116-b979-5bd8228be808",
        "parentId" : null,
        "authorId" : "f645d6f1-20ee-4f01-932b-6c07edd68df8",
        "body" : "Is this a change from v21? Could you link to the docs?",
        "createdAt" : "2019-11-22T11:36:03Z",
        "updatedAt" : "2019-11-22T13:24:05Z",
        "lastEditedBy" : "f645d6f1-20ee-4f01-932b-6c07edd68df8",
        "tags" : [
        ]
      },
      {
        "id" : "ae741043-a785-47fe-84ea-91dc196da663",
        "parentId" : "00935931-1ecb-4116-b979-5bd8228be808",
        "authorId" : "8aecd9b4-5a40-40ef-9bb6-6d348539c297",
        "body" : "https://github.com/gajus/slonik/blob/1ec5326171fa79135db93f92d35c5f8c628eb7fd/src/types.js#L468-L472\r\n\r\nThat is correct. It was one of the breaking changes.",
        "createdAt" : "2019-11-22T11:46:26Z",
        "updatedAt" : "2019-11-22T13:24:05Z",
        "lastEditedBy" : "8aecd9b4-5a40-40ef-9bb6-6d348539c297",
        "tags" : [
        ]
      }
    ],
    "commit" : "43f7ab512c76a566a0cd2b9639f45abdbbc5e71f",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +406,410 @@        query: QueryType,\n        error: SlonikError\n    ) => MaybePromiseType<null>;\n    transformQuery?: (\n        queryContext: QueryContextType,"
  },
  {
    "id" : "16e1fa29-1dee-40b4-bc8c-55481c42c46b",
    "prId" : 46627,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/46627#pullrequestreview-463808784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58f7ec87-3f3e-4969-96a1-db6666747210",
        "parentId" : null,
        "authorId" : "f645d6f1-20ee-4f01-932b-6c07edd68df8",
        "body" : "Did you mean to change this?",
        "createdAt" : "2020-08-08T12:38:30Z",
        "updatedAt" : "2020-08-08T15:06:02Z",
        "lastEditedBy" : "f645d6f1-20ee-4f01-932b-6c07edd68df8",
        "tags" : [
        ]
      },
      {
        "id" : "23987e14-0f41-434b-a935-9176bf7a721e",
        "parentId" : "58f7ec87-3f3e-4969-96a1-db6666747210",
        "authorId" : "7f57056f-e541-4eed-a14f-777e50715ead",
        "body" : "This is only a formatting change from running prettier (something my editor does automatically (and will cause issues with any PR in the future where the contributor's editor also does this seeing as it's configured), so I think it's worth making the change.",
        "createdAt" : "2020-08-08T15:13:00Z",
        "updatedAt" : "2020-08-08T15:13:00Z",
        "lastEditedBy" : "7f57056f-e541-4eed-a14f-777e50715ead",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c9dc27691338cb46c8e0beabb2e42cafff09ef5",
    "line" : 235,
    "diffHunk" : "@@ -1,1 +396,400 @@    test?: (field: FieldType) => boolean;\n}): InterceptorType;\nexport function createQueryNormalizationInterceptor(configuration?: { stripComments?: boolean }): InterceptorType;\nexport function createBenchmarkingInterceptor(): InterceptorType;\n"
  }
]