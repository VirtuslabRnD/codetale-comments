[
  {
    "id" : "99f3678e-8fee-4f9d-bbfa-1bb58f7fe2a1",
    "prId" : 28223,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/28223#pullrequestreview-149933267",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25b01989-c19c-4ffb-9a7e-605d46556640",
        "parentId" : null,
        "authorId" : "9ff3a857-4ac9-4a7e-b447-d0a2f6573899",
        "body" : "Seems like it'd be better to make this extend `Partial<InjectedIntlProps>` so that users never have to specify this on their own, but in case they ever do, they have to match those in `InjectedIntlProps`.",
        "createdAt" : "2018-08-24T23:06:39Z",
        "updatedAt" : "2018-08-24T23:06:42Z",
        "lastEditedBy" : "9ff3a857-4ac9-4a7e-b447-d0a2f6573899",
        "tags" : [
        ]
      },
      {
        "id" : "4f01e466-ac71-42cb-b03f-5c0b4454045a",
        "parentId" : "25b01989-c19c-4ffb-9a7e-605d46556640",
        "authorId" : "d8c83fe7-d86b-4a29-abe9-8829bf97e6fe",
        "body" : "That seems to go against the whole idea of `injectIntl`. If I want to use `intl`, I should specify it in my props... or not use the HOC.",
        "createdAt" : "2018-08-25T15:46:19Z",
        "updatedAt" : "2018-08-25T15:46:19Z",
        "lastEditedBy" : "d8c83fe7-d86b-4a29-abe9-8829bf97e6fe",
        "tags" : [
        ]
      },
      {
        "id" : "42a3ccad-b1a5-48b4-ba35-65fd017c0794",
        "parentId" : "25b01989-c19c-4ffb-9a7e-605d46556640",
        "authorId" : "d8c83fe7-d86b-4a29-abe9-8829bf97e6fe",
        "body" : "If we look at the modified test, the SFC doesn't type its props but if it did, it would have to specify that it accepts `intl` (and that it's required) or it would generate a TS error.\r\n\r\nMeaning, the following should be equivalent:\r\n\r\n```ts\r\ninjectIntl<SomeComponentProps & InjectedIntlProps>(({\r\n    intl: {\r\n        formatDate,\r\n        formatHTMLMessage,\r\n         formatNumber,\r\n         formatMessage,\r\n         formatPlural,\r\n         formatRelative,\r\n         formatTime,\r\n         locale,\r\n         defaultLocale\r\n     },\r\n     className\r\n }: SomeComponentProps & InjectedIntlProps) => ...\r\n);\r\n```\r\n\r\nor better abstracted into \r\n\r\n```ts\r\ntype Props = SomeComponentProps & InjectedIntlProps;\r\n```",
        "createdAt" : "2018-08-25T15:53:26Z",
        "updatedAt" : "2018-08-25T15:58:11Z",
        "lastEditedBy" : "d8c83fe7-d86b-4a29-abe9-8829bf97e6fe",
        "tags" : [
        ]
      },
      {
        "id" : "72ecdf29-c647-453f-88bc-863c07743627",
        "parentId" : "25b01989-c19c-4ffb-9a7e-605d46556640",
        "authorId" : "9ff3a857-4ac9-4a7e-b447-d0a2f6573899",
        "body" : "> If I want to use `intl`, I should specify it in my props... or not use the HOC.\r\n\r\nBut the idea is that by extending `InjectedIntlProps`, you're forcing users to say they use *all* of the props, even if they're only using a few. If you force the type to extend `Partial<InjectedIntlProps>`, they only need to specify some.\r\n\r\nAnyway, it doesn't really matter and you're right - I just realized that `InjectedIntlProps` only has a single property anyway so this should be fine.",
        "createdAt" : "2018-08-28T00:50:38Z",
        "updatedAt" : "2018-08-28T00:50:41Z",
        "lastEditedBy" : "9ff3a857-4ac9-4a7e-b447-d0a2f6573899",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e471f03c00b89ac358848e9cd66333466297f45",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +29,33 @@    }\n\n    function injectIntl<P extends InjectedIntlProps>(component: React.ComponentType<P>, options?: InjectIntlConfig):\n        React.ComponentClass<Pick<P, Exclude<keyof P, keyof InjectedIntlProps>>> & { WrappedComponent: React.ComponentType<P> };\n"
  }
]