[
  {
    "id" : "d211692a-d139-4bda-ad9e-25e9e643ed03",
    "prId" : 51630,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/51630#pullrequestreview-609767308",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34cfa567-95ae-484f-9130-edfefe7db98a",
        "parentId" : null,
        "authorId" : "ec9477a1-479b-4ffa-9f37-ab3b64e2c943",
        "body" : "+1 for adding missing tests",
        "createdAt" : "2021-03-11T13:38:21Z",
        "updatedAt" : "2021-03-11T13:38:22Z",
        "lastEditedBy" : "ec9477a1-479b-4ffa-9f37-ab3b64e2c943",
        "tags" : [
        ]
      }
    ],
    "commit" : "77d8c35b6c5382c9ecfac66a665b56cb5f9afe29",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +10,14 @@domOutputSpec = divNode;\n\ndomOutputSpec = 'text';\n\ndomOutputSpec = ['div'];"
  },
  {
    "id" : "3b73c61b-fc89-4e02-8658-a5def43a0954",
    "prId" : 51653,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/51653#pullrequestreview-610406188",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5fd573ec-b48f-473c-a113-c83b3991f6f2",
        "parentId" : null,
        "authorId" : "ec9477a1-479b-4ffa-9f37-ab3b64e2c943",
        "body" : "I think it would be helpful to add tests for `ParseRule.consuming`. This can be accomplished using `$ExpectType` and `$ExpectError`.\r\n\r\nLink: https://github.com/microsoft/dtslint",
        "createdAt" : "2021-03-11T14:01:38Z",
        "updatedAt" : "2021-03-22T14:29:01Z",
        "lastEditedBy" : "ec9477a1-479b-4ffa-9f37-ab3b64e2c943",
        "tags" : [
        ]
      },
      {
        "id" : "5065bef1-ac79-4c71-b17d-cd07e0667d26",
        "parentId" : "5fd573ec-b48f-473c-a113-c83b3991f6f2",
        "authorId" : "afebce4b-b214-4cc9-ae88-630157395475",
        "body" : "Okay. How extensive should the tests be? An `$ExpectError` for every basic type (string, object, array) that is not allowed in ParseRule.consuming? Or just that it is optional and that it takes booelan?",
        "createdAt" : "2021-03-11T19:12:25Z",
        "updatedAt" : "2021-03-22T14:29:01Z",
        "lastEditedBy" : "afebce4b-b214-4cc9-ae88-630157395475",
        "tags" : [
        ]
      },
      {
        "id" : "d5b9df9f-055b-40e8-8c9e-e425458190f8",
        "parentId" : "5fd573ec-b48f-473c-a113-c83b3991f6f2",
        "authorId" : "ec9477a1-479b-4ffa-9f37-ab3b64e2c943",
        "body" : "Unless I'm testing to convince myself one type is assignable to another, I usually go with `$ExpectType` to check something has the right type:\r\n\r\n```\r\nconst rule = {} as ParseRule\r\n// $ExpectType boolean | null | undefined\r\nrule.consuming\r\n```",
        "createdAt" : "2021-03-12T02:38:18Z",
        "updatedAt" : "2021-03-22T14:29:01Z",
        "lastEditedBy" : "ec9477a1-479b-4ffa-9f37-ab3b64e2c943",
        "tags" : [
        ]
      }
    ],
    "commit" : "e0b522541828d3b8a8c4608f6e793ade6e7a6d72",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +25,29 @@domOutputSpec = { dom: divNode, contentDOM: parentDivNode };\n\nexport const nodeSpec: model.NodeSpec = {\n    attrs: {\n        name: { default: '' },"
  }
]