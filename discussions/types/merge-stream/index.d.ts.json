[
  {
    "id" : "ce530863-5e33-47d8-9203-7eb43e18ea11",
    "prId" : 21318,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/21318#pullrequestreview-85118600",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f061cc2a-a18a-490a-8c45-9aef0b627561",
        "parentId" : null,
        "authorId" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "body" : "[From reading the source](https://github.com/grncdr/merge-stream/blob/1b33da64b219dcc8bf33645953c32a6fd9e3b36d/index.js#L21), I'm pretty sure the correct type is `(...streams: Array<T | T[]>)`",
        "createdAt" : "2017-11-14T22:54:00Z",
        "updatedAt" : "2017-11-14T22:54:27Z",
        "lastEditedBy" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "tags" : [
        ]
      },
      {
        "id" : "2619760d-1668-4b1b-885d-a1f4c2ddd416",
        "parentId" : "f061cc2a-a18a-490a-8c45-9aef0b627561",
        "authorId" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "body" : "An overload pair `{ (streams: T[]); (...streams: T[]) }` is actually not that common in Javascript because the single code path makes the `Array<T | T[]>` type *easier* to implement.",
        "createdAt" : "2017-11-14T22:55:43Z",
        "updatedAt" : "2017-11-14T22:55:43Z",
        "lastEditedBy" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "tags" : [
        ]
      },
      {
        "id" : "9491ebcb-abd7-4121-8e75-8f36c7354476",
        "parentId" : "f061cc2a-a18a-490a-8c45-9aef0b627561",
        "authorId" : "079b7995-0a25-4918-8ef9-85169e07222f",
        "body" : "First, sorry about taking so long to answer. I have been busy.\r\nIndeed, your assessment is correct. The function transverses it's parameters recursively looking for streams or arrays of streams. So any combination of streams and arrays of streams works.\r\nHowever I believe the Typescript definition should exemplify how the function should be used and that is IMHO: passing streams individually or passing an array of streams.",
        "createdAt" : "2017-12-16T23:42:02Z",
        "updatedAt" : "2017-12-18T17:00:46Z",
        "lastEditedBy" : "079b7995-0a25-4918-8ef9-85169e07222f",
        "tags" : [
        ]
      },
      {
        "id" : "b032c73d-eb5a-4e52-8b68-98293344b19d",
        "parentId" : "f061cc2a-a18a-490a-8c45-9aef0b627561",
        "authorId" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "body" : "Good enough for me! Thanks for the explanation.",
        "createdAt" : "2017-12-21T16:45:35Z",
        "updatedAt" : "2017-12-21T16:45:35Z",
        "lastEditedBy" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c2ab2f249ce496fd3803eb3ed0d333cc83145d0",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +13,17 @@}\n\ndeclare function merge<T extends NodeJS.ReadableStream>(streams: T[]): IMergedStream;\ndeclare function merge<T extends NodeJS.ReadableStream>(...streams: T[]): IMergedStream;\nexport = merge;"
  }
]