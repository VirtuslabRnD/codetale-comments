[
  {
    "id" : "5fb4c5d1-9d4c-4987-af58-346c5f25a1fe",
    "prId" : 27731,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/27731#pullrequestreview-142288234",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7385a587-ed20-4615-8f7c-aea0a3802b07",
        "parentId" : null,
        "authorId" : "64552b51-af57-448f-947e-8c81d1c0915c",
        "body" : "These handler tests are overkill - which isn't bad except for making the next reviewer think they need to do this much, like the last person did to you ðŸ˜…. I didn't block them for it, so I won't for you either.\r\n\r\nIf you want to clean this up a bit, the second one that tests the callback type is the one to keep, and the naming convention for the handler would be the camel case of the handler type name, but those a pretty trivial details, the rest of this file has bigger issues!\r\n\r\n(start of me babbling out loud:)\r\n\r\nReally this whole file should probably be sorted out, and I do like the test looking like a real handler, rather than the kind of dumb looking `str = someEvent.someStringField` tests above, but that would be a separate PR (maybe I'll get around to it some time).\r\n\r\nThere's a few different tests for the first few handler definitions because it`s testing the definition for `Handler<>`, which is a bit weird of a type, the other one-line handlers are just testing that the `FooHandler` is compatible with `FooEvent` and `FooCallback` to catch copy-paste errors.",
        "createdAt" : "2018-08-01T04:02:11Z",
        "updatedAt" : "2018-08-01T08:17:35Z",
        "lastEditedBy" : "64552b51-af57-448f-947e-8c81d1c0915c",
        "tags" : [
        ]
      },
      {
        "id" : "246a022e-6a7a-4856-9a9d-fc23ab4f93a3",
        "parentId" : "7385a587-ed20-4615-8f7c-aea0a3802b07",
        "authorId" : "5b5c9c49-7aca-486f-b980-991b0c9687db",
        "body" : "I removed the async one and adjusted for the specialized callback. I did notice you added the customHandler and no types on the 3 arguments and then you expect on the types. Is there a way to reuse that or I need to replicate the same tests as there?",
        "createdAt" : "2018-08-01T07:43:04Z",
        "updatedAt" : "2018-08-01T08:17:35Z",
        "lastEditedBy" : "5b5c9c49-7aca-486f-b980-991b0c9687db",
        "tags" : [
        ]
      },
      {
        "id" : "7883f07c-0b09-4a1c-81ea-7a71548d395e",
        "parentId" : "7385a587-ed20-4615-8f7c-aea0a3802b07",
        "authorId" : "5b5c9c49-7aca-486f-b980-991b0c9687db",
        "body" : "I broke the tests after forgetting to change the expectations. We are often using a package called [husky](https://www.npmjs.com/package/husky) to run tests and lints pre git push so we don't have any surprises when the CI tool runs. Maybe it's a good thing to add? Or you think it adds too much overhead on everyone contributing? ",
        "createdAt" : "2018-08-01T08:58:01Z",
        "updatedAt" : "2018-08-01T08:58:01Z",
        "lastEditedBy" : "5b5c9c49-7aca-486f-b980-991b0c9687db",
        "tags" : [
        ]
      },
      {
        "id" : "ddb69422-efea-4394-9f9b-a1331a6ff0bb",
        "parentId" : "7385a587-ed20-4615-8f7c-aea0a3802b07",
        "authorId" : "64552b51-af57-448f-947e-8c81d1c0915c",
        "body" : "The custom handler tests are checking using the handler type parameters doesn't break, while the FooHandlers are checking that the handler and callback types are correctly defined. There's no real reason to expect types, since they're explicitly set just above. On the other hand, checking that you can read the event properties and write the result as you would expect adds value, that's what all the weird assignments above the handlers are doing, and the bit I was referring to being a cleanup I'd like to do at some point. I wouldn't be too worried about it, myself, since these tests really are supposed to be code that can actually run, which obviously is pretty tricky for environment packages like this.\r\n\r\nOn husky, not sure, might be worth asking in a meta issue if the maintainer that merges this doesn't hate it. I'm kinda neutral myself, as the only person that really gets burned is the person that pushed without testing, and the CI is pretty fast here.",
        "createdAt" : "2018-08-01T09:09:19Z",
        "updatedAt" : "2018-08-01T09:25:50Z",
        "lastEditedBy" : "64552b51-af57-448f-947e-8c81d1c0915c",
        "tags" : [
        ]
      }
    ],
    "commit" : "09b722cb53d96e6b540ec6328b86c40c560d64e2",
    "line" : 157,
    "diffHunk" : "@@ -1,1 +922,926 @@        ]\n    });\n};"
  }
]