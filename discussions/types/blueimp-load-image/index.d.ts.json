[
  {
    "id" : "397102fa-9a46-4ab3-b395-08c500d7a9b6",
    "prId" : 49014,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/49014#pullrequestreview-543348462",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3895c53a-97e2-413f-bbc0-b88f832483ac",
        "parentId" : null,
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "I'm not familiar with this particular API, so please bear with me.  The pattern I usually see is that the callback variant accepts a callback with a `T` parameter and the promise variant returns a `Promise<T>`.  In this case, the callback and promise types look unrelated?  And the callback variant returns a value (rather than being void)?",
        "createdAt" : "2020-12-02T23:24:27Z",
        "updatedAt" : "2020-12-02T23:24:41Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      },
      {
        "id" : "b7c260a8-3698-4b0b-a063-49e68d53a2e1",
        "parentId" : "3895c53a-97e2-413f-bbc0-b88f832483ac",
        "authorId" : "b9f8d5b1-5ea6-4c11-a068-5b661d7ca89e",
        "body" : "I agree that `callback: (result: T) => void` and `Promise<T>` is typically what you see - but in the case of this library (and I've only got the docs to go by here) it seems to be a bit of a quirk that the callback takes two arguments (image and the result metadata) and the promise returns the result as a single payload:\r\n\r\n![image](https://user-images.githubusercontent.com/9100419/100943967-2f2afe00-354e-11eb-92d0-9c1e4d129bdd.png)\r\n\r\n![image](https://user-images.githubusercontent.com/9100419/100943986-38b46600-354e-11eb-9297-43d1ac1d9ab5.png)\r\n\r\n![image](https://user-images.githubusercontent.com/9100419/100943993-3e11b080-354e-11eb-91c2-6c332ff8bac1.png)\r\n",
        "createdAt" : "2020-12-02T23:29:37Z",
        "updatedAt" : "2020-12-02T23:29:37Z",
        "lastEditedBy" : "b9f8d5b1-5ea6-4c11-a068-5b661d7ca89e",
        "tags" : [
        ]
      },
      {
        "id" : "becd810f-17dd-4557-8a56-45d4c679a39b",
        "parentId" : "3895c53a-97e2-413f-bbc0-b88f832483ac",
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "That's weird.  Thanks for doing the due diligence!  It's still not clear that callback version should have a non-void return type, but I'm willing to say that's out of scope for your change.",
        "createdAt" : "2020-12-03T00:29:15Z",
        "updatedAt" : "2020-12-03T00:29:15Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      }
    ],
    "commit" : "845d808d9040a203c428462c15f2787f63b7b19a",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +9,13 @@declare namespace loadImage {\n    type LoadImageCallback = (eventOrImage: Event | HTMLCanvasElement | HTMLImageElement, data?: MetaData) => void;\n    type LoadImageResult = MetaData & {\n        image: HTMLImageElement | FileReader | false;\n    };"
  }
]