[
  {
    "id" : "1d9ee776-e801-441a-86a0-6821f9ad32d3",
    "prId" : 20160,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20160#pullrequestreview-66318169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77cf8e8b-f725-4fec-a944-7165e3d6ef70",
        "parentId" : null,
        "authorId" : "ae01d18a-c527-430d-a5d4-4323e4f61e82",
        "body" : "Good catch üëç ",
        "createdAt" : "2017-09-30T17:29:04Z",
        "updatedAt" : "2017-10-16T18:44:18Z",
        "lastEditedBy" : "ae01d18a-c527-430d-a5d4-4323e4f61e82",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ecab1a3e56a9b159c5af8315f7b3921234ba315",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +294,298 @@  close(): Promise<void>;\n  content(): Promise<string>;\n  cookies(...urls: string[]): Promise<Cookie[]>;\n  deleteCookie(\n    ...cookies: Array<{"
  },
  {
    "id" : "1ed0eacc-0f86-4685-8d7e-edcf525d1178",
    "prId" : 20620,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20620#pullrequestreview-70036761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e17e7741-2b9a-49db-8f20-36775b0e01e5",
        "parentId" : null,
        "authorId" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "body" : "Was the previous type too strict?",
        "createdAt" : "2017-10-17T16:09:17Z",
        "updatedAt" : "2017-10-19T14:09:53Z",
        "lastEditedBy" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "tags" : [
        ]
      },
      {
        "id" : "5803a88a-b3bd-4ab6-8990-1b7192390ef2",
        "parentId" : "e17e7741-2b9a-49db-8f20-36775b0e01e5",
        "authorId" : "fb277939-680b-4517-8c1a-1351c393f6d9",
        "body" : "Yes, the `elem?: ElementHandle` part is incorrect.\r\n\r\n![image](https://user-images.githubusercontent.com/404765/31690263-d6c3b93a-b357-11e7-9180-d52fb4b5351d.png)\r\n\r\nThe `args` that will be passed to `pageFunction` are of type `Serializable|ElementHandle`.\r\n\r\n`Serializable` is an `any` and the previous code locked it to only `ElementHandle`\r\n\r\nIt also returns a `Serializable` / `any`\r\n\r\nhttps://github.com/GoogleChrome/puppeteer/blob/v0.12.0/docs/api.md#pageevaluatepagefunction-args",
        "createdAt" : "2017-10-17T21:28:31Z",
        "updatedAt" : "2017-10-19T14:09:53Z",
        "lastEditedBy" : "fb277939-680b-4517-8c1a-1351c393f6d9",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3a19b2732e1f748cde918bd7afd871dd74cf647",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +111,115 @@}\n\nexport type EvaluateFn = string | ((...args: any[]) => any);\n\nexport interface NavigationOptions {"
  },
  {
    "id" : "f2abbb19-84ae-46c5-a462-0a0db19bbe21",
    "prId" : 21463,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/21463#pullrequestreview-76686691",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f51fc50-7860-4a57-959a-24a9068ca327",
        "parentId" : null,
        "authorId" : "ae01d18a-c527-430d-a5d4-4323e4f61e82",
        "body" : "I can't find any place where these are used. Perhaps this was a leftover of something else?",
        "createdAt" : "2017-11-14T16:19:21Z",
        "updatedAt" : "2017-11-14T16:28:07Z",
        "lastEditedBy" : "ae01d18a-c527-430d-a5d4-4323e4f61e82",
        "tags" : [
        ]
      },
      {
        "id" : "86fd321a-44e7-4c63-afcb-e257326c1a0a",
        "parentId" : "0f51fc50-7860-4a57-959a-24a9068ca327",
        "authorId" : null,
        "body" : "The `BrowserEvents` have the same purpose as the `PageEvents`, they are just references to available events in the `Browser` and `Page` classes. They can be used to make dynamic event handlers.\r\n\r\nTechnically, neither type is required, I just kept the code standard from the previous version.",
        "createdAt" : "2017-11-14T22:42:26Z",
        "updatedAt" : "2017-11-14T22:42:26Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "0c6024ad-2fb4-445f-9f1f-2aeb36afe3ed",
        "parentId" : "0f51fc50-7860-4a57-959a-24a9068ca327",
        "authorId" : "ae01d18a-c527-430d-a5d4-4323e4f61e82",
        "body" : "Makes sense. :+1:",
        "createdAt" : "2017-11-15T06:39:02Z",
        "updatedAt" : "2017-11-15T06:39:02Z",
        "lastEditedBy" : "ae01d18a-c527-430d-a5d4-4323e4f61e82",
        "tags" : [
        ]
      }
    ],
    "commit" : "467b564b39aef6683fd2eb58b0bc64bd84b19846",
    "line" : 136,
    "diffHunk" : "@@ -1,1 +140,144 @@  | \"response\";\n\nexport type BrowserEvents =\n  | \"disconnected\"\n  | \"targetchanged\""
  },
  {
    "id" : "d46e8194-0cee-43d4-8467-aa491f5f6313",
    "prId" : 21463,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/21463#pullrequestreview-76686555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9095543-2d11-41b6-8ac8-59d3e2ab4210",
        "parentId" : null,
        "authorId" : "ae01d18a-c527-430d-a5d4-4323e4f61e82",
        "body" : "The [docs](https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#class-browser) don't mention an `on()`-method. Perhaps their document is outdated, or this doesn't exist.",
        "createdAt" : "2017-11-14T16:24:48Z",
        "updatedAt" : "2017-11-14T16:28:07Z",
        "lastEditedBy" : "ae01d18a-c527-430d-a5d4-4323e4f61e82",
        "tags" : [
        ]
      },
      {
        "id" : "8ff38c87-826f-4fb9-a721-4623146802b6",
        "parentId" : "f9095543-2d11-41b6-8ac8-59d3e2ab4210",
        "authorId" : null,
        "body" : "The docs mention the events (disconnected, targetchanged, targetcreated and the targetdestroyed). The `Browser` class [extends](https://github.com/GoogleChrome/puppeteer/blob/master/lib/Browser.js#L21) the [EventEmitter](https://nodejs.org/api/events.html) that has the `on` method.\r\n\r\nI think we should be fine.",
        "createdAt" : "2017-11-14T22:33:30Z",
        "updatedAt" : "2017-11-14T22:33:30Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "4f074a9a-df61-4fa7-8f2f-4fc808811016",
        "parentId" : "f9095543-2d11-41b6-8ac8-59d3e2ab4210",
        "authorId" : "ae01d18a-c527-430d-a5d4-4323e4f61e82",
        "body" : "You're right, thanks for clearing this up! Just had a look at the source and it indeed does extend event emitter. :radar:",
        "createdAt" : "2017-11-15T06:38:19Z",
        "updatedAt" : "2017-11-15T06:38:19Z",
        "lastEditedBy" : "ae01d18a-c527-430d-a5d4-4323e4f61e82",
        "tags" : [
        ]
      }
    ],
    "commit" : "467b564b39aef6683fd2eb58b0bc64bd84b19846",
    "line" : 981,
    "diffHunk" : "@@ -1,1 +1030,1034 @@/** A Browser is created when Puppeteer connects to a Chromium instance, either through puppeteer.launch or puppeteer.connect. */\nexport interface Browser {\n  on<K extends keyof BrowserEventObj>(\n    event: K,\n    handler: (e: BrowserEventObj[K], ...args: any[]) => void"
  }
]