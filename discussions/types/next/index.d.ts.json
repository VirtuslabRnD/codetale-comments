[
  {
    "id" : "e2c07d82-f714-43a1-b194-25a4839921fe",
    "prId" : 17781,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/17781#pullrequestreview-50930307",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b075e4b-1059-4ce1-8767-0c9a4277c807",
        "parentId" : null,
        "authorId" : "e370b21b-7b12-43bb-a1f7-211f03738f62",
        "body" : "I needed to use `import next = require('next')` in a custom server. Which seems to require `function next(options?: ServerOptions): Server; export = next;`.\r\n\r\n`import * as next from 'next'` lead to `TS2349: Cannot invoke an expression whose type lacks a call signature. Type 'typeof 'next'' has no compatible call signatures.`\r\n\r\n`import next from 'next'` exploded when running:\r\n```\r\nconst app = next_1.default({\r\n                          ^\r\nTypeError: next_1.default is not a function\r\n```\r\n\r\nserver.ts\r\n```\r\nimport next = require('next')\r\n\r\nconst app = next({\r\n  dir: 'dist',\r\n  dev: process.env.NODE_ENV !== 'production'\r\n})\r\n// ... prepare & createServer\r\n```",
        "createdAt" : "2017-07-14T08:25:49Z",
        "updatedAt" : "2017-07-14T08:30:00Z",
        "lastEditedBy" : "e370b21b-7b12-43bb-a1f7-211f03738f62",
        "tags" : [
        ]
      },
      {
        "id" : "f03d656a-7718-4e58-9ebc-ce2b3e1e0328",
        "parentId" : "5b075e4b-1059-4ce1-8767-0c9a4277c807",
        "authorId" : "d6f4bc0a-728d-4289-8443-0dd8f532a636",
        "body" : "@tpreusse see https://stackoverflow.com/questions/39415661/what-does-resolves-to-a-non-module-entity-and-cannot-be-imported-using-this\r\n\r\nIt makes no sense to write `import * as next from 'next'` followed by `next(...)`. This is not legal ES6 code.",
        "createdAt" : "2017-07-14T09:09:59Z",
        "updatedAt" : "2017-07-14T09:09:59Z",
        "lastEditedBy" : "d6f4bc0a-728d-4289-8443-0dd8f532a636",
        "tags" : [
        ]
      },
      {
        "id" : "1b04eb01-7efc-4cf7-a86e-9ee1a9ed40d9",
        "parentId" : "5b075e4b-1059-4ce1-8767-0c9a4277c807",
        "authorId" : "e370b21b-7b12-43bb-a1f7-211f03738f62",
        "body" : "I get that – but `import next = require('next')` isn't quite standard either. Is it identical to `const next = require('next')`, except for disabling the global name space? (Still new to TS)\r\n\r\nOr is there a way to tell TS to do «`interopRequireDefault`» [like Babel](http://babeljs.io/repl/#?babili=false&evaluate=true&lineWrap=false&presets=es2015%2Creact%2Cstage-2&targets=&browsers=&builtIns=false&debug=false&code_lz=JYWwDg9gTgLgBAOwKYA94DMoRHA5MtXAKCA)? And then use `import next from 'next'`?",
        "createdAt" : "2017-07-14T09:24:39Z",
        "updatedAt" : "2017-07-14T09:24:39Z",
        "lastEditedBy" : "e370b21b-7b12-43bb-a1f7-211f03738f62",
        "tags" : [
        ]
      },
      {
        "id" : "bd658898-127c-4e3a-8409-f17849483487",
        "parentId" : "5b075e4b-1059-4ce1-8767-0c9a4277c807",
        "authorId" : "e370b21b-7b12-43bb-a1f7-211f03738f62",
        "body" : "@RyanCavanaugh btw. why is [`import * as express from 'express'`](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/express/index.d.ts#L7) followed by `express()` legal?\r\n\r\n`next()` is sort of following the same pattern, just that it takes an configuration object.",
        "createdAt" : "2017-07-14T12:16:50Z",
        "updatedAt" : "2017-07-14T12:16:50Z",
        "lastEditedBy" : "e370b21b-7b12-43bb-a1f7-211f03738f62",
        "tags" : [
        ]
      },
      {
        "id" : "5a46f5cc-2777-4d17-91e1-2b31ec8c9d33",
        "parentId" : "5b075e4b-1059-4ce1-8767-0c9a4277c807",
        "authorId" : "d6f4bc0a-728d-4289-8443-0dd8f532a636",
        "body" : "You can use `--allowSyntheticDefaults` to make `import f from 'x'` work.\r\n\r\n`express` is incorrectly authored in that regard. We're just trying to stem the bleeding of people writing bad .d.ts files on purpose.",
        "createdAt" : "2017-07-14T15:06:48Z",
        "updatedAt" : "2017-07-14T15:06:48Z",
        "lastEditedBy" : "d6f4bc0a-728d-4289-8443-0dd8f532a636",
        "tags" : [
        ]
      },
      {
        "id" : "27d95094-5f42-4951-a896-e1a126ca5106",
        "parentId" : "5b075e4b-1059-4ce1-8767-0c9a4277c807",
        "authorId" : "e370b21b-7b12-43bb-a1f7-211f03738f62",
        "body" : "@RyanCavanaugh `allowSyntheticDefaultImports` won't help. The problem is the emitted code.\r\n\r\nI made an gist of the issue:\r\nhttps://gist.github.com/tpreusse/da10e28a81d1ee530303017d3dc29276#file-server-js-L7\r\n(to run locally: `npm i` and `npm run dev`)\r\n\r\nCurrently the only solution I see is to go for:\r\n```\r\nimport next = require('next')\r\n```\r\n\r\nAnd use the following definition:\r\n```diff\r\n-export default function(options?: ServerOptions): Server;\r\n+function next(options?: ServerOptions): Server;\r\n+export = next;\r\n```\r\n\r\nWhat do you think? Should I make a pull request for it?",
        "createdAt" : "2017-07-15T18:25:55Z",
        "updatedAt" : "2017-07-15T18:25:55Z",
        "lastEditedBy" : "e370b21b-7b12-43bb-a1f7-211f03738f62",
        "tags" : [
        ]
      },
      {
        "id" : "bcaecb4c-a414-4636-80a2-d7efc0b6ea79",
        "parentId" : "5b075e4b-1059-4ce1-8767-0c9a4277c807",
        "authorId" : "5b52dd07-c298-40aa-8df6-a22862eed89e",
        "body" : "I'm not sure why `import next from 'next'` is blowing up for you.  I just tested your own gist and it was running just fine for me (once I added an index page under `/pages/index.js`).",
        "createdAt" : "2017-07-17T22:31:33Z",
        "updatedAt" : "2017-07-17T22:31:33Z",
        "lastEditedBy" : "5b52dd07-c298-40aa-8df6-a22862eed89e",
        "tags" : [
        ]
      },
      {
        "id" : "ab82994e-6c75-42d4-8ccd-294bd461ad24",
        "parentId" : "5b075e4b-1059-4ce1-8767-0c9a4277c807",
        "authorId" : "e370b21b-7b12-43bb-a1f7-211f03738f62",
        "body" : "@Dru89 Just tried it on two different machines and failed on both:\r\n<img width=\"860\" alt=\"screen shot 2017-07-18 at 11 31 47\" src=\"https://user-images.githubusercontent.com/410211/28310494-f0ed73d4-6bac-11e7-8d71-2580244c7df8.png\">\r\n(node 8.1.4, npm 5.0.3)\r\n\r\n![screenshot from 2017-07-18 11-37-55](https://user-images.githubusercontent.com/410211/28310767-c98de606-6bad-11e7-8a97-e4cd05952d11.png)\r\n\r\nDid you change anything in `tsconfig.json`? Are you using `npm run dev`?",
        "createdAt" : "2017-07-18T09:41:20Z",
        "updatedAt" : "2017-07-18T09:46:55Z",
        "lastEditedBy" : "e370b21b-7b12-43bb-a1f7-211f03738f62",
        "tags" : [
        ]
      },
      {
        "id" : "dd175eda-4063-4071-8801-b626ef8485d7",
        "parentId" : "5b075e4b-1059-4ce1-8767-0c9a4277c807",
        "authorId" : "5b52dd07-c298-40aa-8df6-a22862eed89e",
        "body" : "Ah, I did not use `npm run dev`.  I get the same error whenever I use `npm run dev`.  That being said, `npm run build && npm run start` does work.\r\n\r\n~~Are you sure it's a `next`/`typescript` issue at that point, and not a `nodemon` issue or something, since it's just that command that fails?~~ D'oh.  Just realized what's probably going on.  Give me a bit and I'll see what I can do to fix this.",
        "createdAt" : "2017-07-19T00:31:00Z",
        "updatedAt" : "2017-07-19T00:33:24Z",
        "lastEditedBy" : "5b52dd07-c298-40aa-8df6-a22862eed89e",
        "tags" : [
        ]
      },
      {
        "id" : "f0e46486-e4e3-4c16-9970-4451aa9258dd",
        "parentId" : "5b075e4b-1059-4ce1-8767-0c9a4277c807",
        "authorId" : "5b52dd07-c298-40aa-8df6-a22862eed89e",
        "body" : "Basically, the problem is that next.js's main export is not an `export default`, but a `module.exports =`, even though they use `export default` everywhere else.\r\n\r\nI think the solution to this is probably going to be @RyanCavanaugh's own answer in https://stackoverflow.com/a/39415662/191289.  Basically, we'll need to change the `'next'` module to have an `export = next` but you'll be stuck using `import next = require('next')`.  It's pretty lame, but I don't have any better solutions (though I'm willing to hear out any others).",
        "createdAt" : "2017-07-19T00:46:32Z",
        "updatedAt" : "2017-07-19T00:46:32Z",
        "lastEditedBy" : "5b52dd07-c298-40aa-8df6-a22862eed89e",
        "tags" : [
        ]
      },
      {
        "id" : "0831a289-e556-40fa-97ff-03271489b3cb",
        "parentId" : "5b075e4b-1059-4ce1-8767-0c9a4277c807",
        "authorId" : "e370b21b-7b12-43bb-a1f7-211f03738f62",
        "body" : "Sounds good. I tested `export = next` with `import next = require('next')` and worked for me.\r\n\r\n`import` interoperability between `typescript`, `node`, `webpack` and `babel` are definitely tricky, especially with all the packages exporting slightly differently.",
        "createdAt" : "2017-07-19T14:42:09Z",
        "updatedAt" : "2017-07-19T14:42:09Z",
        "lastEditedBy" : "e370b21b-7b12-43bb-a1f7-211f03738f62",
        "tags" : [
        ]
      }
    ],
    "commit" : "001235c7763804d5d41eeb78011a45f1cf6b192c",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@  }\n\n  export default function(options?: ServerOptions): Server;\n}\n"
  },
  {
    "id" : "1944f7b6-5a38-4cb2-a0b9-cbfa06c0a7fa",
    "prId" : 17781,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/17781#pullrequestreview-50466649",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10bab450-2b02-4a8f-bba7-48db9bc4fe11",
        "parentId" : null,
        "authorId" : "e370b21b-7b12-43bb-a1f7-211f03738f62",
        "body" : "`public static rewind(...args: any[]): any` is missing here",
        "createdAt" : "2017-07-14T08:27:09Z",
        "updatedAt" : "2017-07-14T08:30:00Z",
        "lastEditedBy" : "e370b21b-7b12-43bb-a1f7-211f03738f62",
        "tags" : [
        ]
      },
      {
        "id" : "fb9e0803-72f5-4ab7-918a-a8300e1dc93a",
        "parentId" : "10bab450-2b02-4a8f-bba7-48db9bc4fe11",
        "authorId" : "e370b21b-7b12-43bb-a1f7-211f03738f62",
        "body" : "(an advanced use cases, not documented but used in an example: https://github.com/zeit/next.js/pull/2362)",
        "createdAt" : "2017-07-14T08:35:35Z",
        "updatedAt" : "2017-07-14T08:35:41Z",
        "lastEditedBy" : "e370b21b-7b12-43bb-a1f7-211f03738f62",
        "tags" : [
        ]
      },
      {
        "id" : "834bab7e-425d-415c-a95e-83eced575c97",
        "parentId" : "10bab450-2b02-4a8f-bba7-48db9bc4fe11",
        "authorId" : "5b52dd07-c298-40aa-8df6-a22862eed89e",
        "body" : "Good callout, I'll add this in a separate pull request.",
        "createdAt" : "2017-07-17T22:31:41Z",
        "updatedAt" : "2017-07-17T22:31:41Z",
        "lastEditedBy" : "5b52dd07-c298-40aa-8df6-a22862eed89e",
        "tags" : [
        ]
      }
    ],
    "commit" : "001235c7763804d5d41eeb78011a45f1cf6b192c",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +72,76 @@\n  function defaultHead(): JSX.Element[];\n  export default class extends React.Component<{}, {}> {}\n}\n"
  },
  {
    "id" : "069c189a-ab6d-418d-a700-682670440265",
    "prId" : 18262,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/18262#pullrequestreview-51846009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27b66da7-c718-42ab-b63e-dfcaed584f36",
        "parentId" : null,
        "authorId" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "body" : "Instead of using `declare module`, these could each be in its own file, e.g. `next/document.d.ts`.",
        "createdAt" : "2017-07-24T17:32:04Z",
        "updatedAt" : "2017-07-24T17:32:37Z",
        "lastEditedBy" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "tags" : [
        ]
      },
      {
        "id" : "457107bf-1f3d-4f97-be84-2e499dbe9c94",
        "parentId" : "27b66da7-c718-42ab-b63e-dfcaed584f36",
        "authorId" : "5b52dd07-c298-40aa-8df6-a22862eed89e",
        "body" : "Oh, so that's how you'd do it.  I was wondering…\r\n\r\nI'll probably do that later.  It might make things a little nicer.",
        "createdAt" : "2017-07-24T17:49:50Z",
        "updatedAt" : "2017-07-24T17:49:50Z",
        "lastEditedBy" : "5b52dd07-c298-40aa-8df6-a22862eed89e",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd531b74a9a220144a6b35552a7844cdb9a12c0e",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +80,84 @@}\n\ndeclare module 'next/document' {\n  import * as React from 'react';\n"
  }
]