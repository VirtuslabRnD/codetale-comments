[
  {
    "id" : "fea89f73-440e-497d-863f-7378af05aebe",
    "prId" : 39204,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/39204#pullrequestreview-304167835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e766128-9dd5-4eab-8f05-d7cfde5355df",
        "parentId" : null,
        "authorId" : "c2145d21-b2c0-4d5c-8e5c-5bb506a1de74",
        "body" : "Would this be clearer as:\r\n\r\n```suggestion\r\n        bodyOpenClassName: string | null | undefined;\r\n```\r\n\r\nCan this (and the other changed properties) actually be both `null` and `undefined`?",
        "createdAt" : "2019-10-18T02:02:16Z",
        "updatedAt" : "2019-10-18T02:02:16Z",
        "lastEditedBy" : "c2145d21-b2c0-4d5c-8e5c-5bb506a1de74",
        "tags" : [
        ]
      },
      {
        "id" : "2598fab6-a82a-41f0-aa15-7cbad6cf218f",
        "parentId" : "5e766128-9dd5-4eab-8f05-d7cfde5355df",
        "authorId" : "3ad51416-cb5a-4ec2-8ded-f79505c36c98",
        "body" : "I think the `bodyOpenClassName` is optional, so optional parameter (`bodyOpenClassName?`) is semantically correct.\r\n\r\nThe end result is the same, `?` adds the `undefined` to the type, but at least for me, it is easier to read the type if I can quickly glance what is mandatory and what is optional instead of searching `undefined` from the list of types separated by pipe operators. ",
        "createdAt" : "2019-10-18T06:13:13Z",
        "updatedAt" : "2019-10-18T06:13:13Z",
        "lastEditedBy" : "3ad51416-cb5a-4ec2-8ded-f79505c36c98",
        "tags" : [
        ]
      },
      {
        "id" : "6391a101-f69c-4498-8c9b-b142342e7d25",
        "parentId" : "5e766128-9dd5-4eab-8f05-d7cfde5355df",
        "authorId" : "1ff4470e-13be-4a6b-9a52-f984d9991859",
        "body" : "All of them are indeed optional but nullable. In which case I tend to prefer the optional notation as well.",
        "createdAt" : "2019-10-18T07:39:51Z",
        "updatedAt" : "2019-10-18T07:39:51Z",
        "lastEditedBy" : "1ff4470e-13be-4a6b-9a52-f984d9991859",
        "tags" : [
        ]
      },
      {
        "id" : "d9fef24d-c1e5-4190-b709-941365bb53fd",
        "parentId" : "5e766128-9dd5-4eab-8f05-d7cfde5355df",
        "authorId" : "28aab869-30d5-42f8-8a85-4af7d5854cea",
        "body" : "Removing the `?` is definitely not what you want. It would force users to supply the prop on JSX elements 100% of the time, even if to set to `undefined`: https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wG4BYAKCpgE8wk4AFHMAZzgF44BvONFADsAQkgCqggCZJMwQUkkAuOGxhQ5AczgAfOAFcpMuQrgBfCpWloANiiJxMBjMAiC4AYVyR5gmAAowVjZlFgh2AEplACkAZQANADoAUWskECRfCzRXVX4uOAAeT3BXDPgAegA+LJz4SXyir1LffiFRCWlZeUlOHgNO40lTOCrSIA",
        "createdAt" : "2019-10-18T22:44:01Z",
        "updatedAt" : "2019-10-18T22:44:01Z",
        "lastEditedBy" : "28aab869-30d5-42f8-8a85-4af7d5854cea",
        "tags" : [
        ]
      }
    ],
    "commit" : "f339cb03995a6e46ee6e01735c2d9cdb7b94073a",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +52,56 @@\n        /* String className to be applied to the document.body (must be a constant string). When set to null it doesn't add any class to document.body. */\n        bodyOpenClassName?: string | null;\n\n        /* String className to be applied to the document.html (must be a constant string). Defaults to null. */"
  }
]