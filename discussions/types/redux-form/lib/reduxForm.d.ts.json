[
  {
    "id" : "27ffa49d-e9be-4a8a-bb62-1bba8d4f012f",
    "prId" : 15745,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/15745#pullrequestreview-32841147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d09a0d4-ab91-4c6e-9e80-a7db0bb431ed",
        "parentId" : null,
        "authorId" : "bdb322bd-d513-4b40-b6df-148cabeee7ab",
        "body" : "Q: in this [document ](http://redux-form.com/6.6.3/docs/api/ReduxForm.md/) it seems that form should be required? let me know if I misunderstand something here",
        "createdAt" : "2017-04-13T15:57:23Z",
        "updatedAt" : "2017-04-13T15:57:23Z",
        "lastEditedBy" : "bdb322bd-d513-4b40-b6df-148cabeee7ab",
        "tags" : [
        ]
      },
      {
        "id" : "c685a506-b234-4127-b5a7-7d385010566c",
        "parentId" : "5d09a0d4-ab91-4c6e-9e80-a7db0bb431ed",
        "authorId" : "ce6722c6-cf8d-4e9e-b4f2-07d1e2bcb965",
        "body" : "It is required but can be defined both as configured property or by passing a property directly to the component as it states in the docs: `IMPORTANT: All of these configuration options may be passed into reduxForm() at \"design time\" or passed in as props to your component at runtime.`. ",
        "createdAt" : "2017-04-13T16:26:32Z",
        "updatedAt" : "2017-04-13T16:26:32Z",
        "lastEditedBy" : "ce6722c6-cf8d-4e9e-b4f2-07d1e2bcb965",
        "tags" : [
        ]
      },
      {
        "id" : "4f13e7cb-466e-4b37-8607-397f3615b415",
        "parentId" : "5d09a0d4-ab91-4c6e-9e80-a7db0bb431ed",
        "authorId" : "bdb322bd-d513-4b40-b6df-148cabeee7ab",
        "body" : "Reading..... üò≠ ",
        "createdAt" : "2017-04-14T14:55:08Z",
        "updatedAt" : "2017-04-14T14:55:08Z",
        "lastEditedBy" : "bdb322bd-d513-4b40-b6df-148cabeee7ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5c2e50f78883ba4587e42323b9e35b33959fa04",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +35,39 @@     * mounted under the redux-form reducer\n     */\n    form?: string;\n\n    /**"
  },
  {
    "id" : "39ae9490-3d3e-4b22-a0a6-e5aca346fb93",
    "prId" : 18168,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/18168#pullrequestreview-86039734",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c44940fc-f7bb-4469-94e6-749367b9ac09",
        "parentId" : null,
        "authorId" : "3f622a84-b931-4610-858a-2968fcbcf5f9",
        "body" : "@LKay, i see You changed `reduxForm` function definition in this PR ([see original definition of this function](https://github.com/DefinitelyTyped/DefinitelyTyped/pull/18168/files#diff-d9e48aae97c787121e5ed719108dc0b2L12)) by adding `Partial<...>` - it seems to me that here is a copy-paste error because \r\n1) in this function overload **Partial** Config is taken as input and **non-partial** Config is included in output type (I'm guessing if Partial Config should also be in output)\r\n2) in another overload of this function (few lines above) **non-partial** Config is taken as input and **Partial** Config is included in output type\r\n\r\nMy first thought is that if you pass partial config then you should get back type with partial config, not with non-partial config (and vice versa). \r\n\r\nIs this a bug or is there smth i don't understand?\r\n\r\n----\r\ni'll add an example of a function that produces compile-time error with current types:\r\n```TypeScript\r\nexport function withReduxFormCorrectNonPartial2<FormData, P>(component: ComponentType<P & InjectedFormProps<FormData, any>>, config: ConfigProps<FormData, P>)\r\n: DecoratedComponentClass<FormData, P & ConfigProps<FormData, P>> {\r\n\treturn reduxForm(config)(component);\r\n}\r\n```\r\n```\r\n    TS2322: Type 'DecoratedComponentClass<FormData, P & Partial<ConfigProps<FormData, P>>>' is not assignable to type 'DecoratedComponentClass<FormData, P & ConfigProps<FormData, P>>'.\r\n  Type 'P & Partial<ConfigProps<FormData, P>>' is not assignable to type 'P & ConfigProps<FormData, P>'.\r\n    Type 'P & Partial<ConfigProps<FormData, P>>' is not assignable to type 'ConfigProps<FormData, P>'.\r\n      Property 'form' is optional in type 'P & Partial<ConfigProps<FormData, P>>' but required in type 'ConfigProps<FormData, P>'.\r\n```\r\nThe error disappeared after i replaced return types of the overloaded function definitions.\r\n\r\nPlease let me know, what You think, because i'm new to react and i haven't investigated redux-forms much.",
        "createdAt" : "2017-12-31T02:51:39Z",
        "updatedAt" : "2017-12-31T02:51:39Z",
        "lastEditedBy" : "3f622a84-b931-4610-858a-2968fcbcf5f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "f459ee6dff7da0f932d6925571b9c2f0d04bfc18",
    "line" : 663,
    "diffHunk" : "@@ -1,1 +136,140 @@declare function reduxForm<FormData = {}, P = {}>(\n    config: Partial<ConfigProps<FormData, P>>\n): FormDecorator<FormData, P, ConfigProps<FormData, P>>;\n\n"
  },
  {
    "id" : "7c2fca25-9371-49a0-89af-3ddc8d161890",
    "prId" : 20982,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20982#pullrequestreview-89019642",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df65f0be-08bd-4e16-9f1e-1cb835645010",
        "parentId" : null,
        "authorId" : "5c85bb1a-f137-4416-b14a-bb263f7d1410",
        "body" : "Why this lane has been changed? This makes my code doesn't compile at all üò† \r\n\r\n![image](https://user-images.githubusercontent.com/10618781/34566453-f1b0db8e-f15e-11e7-8c19-42e4c78fa600.png)\r\n\r\n  ",
        "createdAt" : "2018-01-04T13:53:09Z",
        "updatedAt" : "2018-01-04T13:56:00Z",
        "lastEditedBy" : "5c85bb1a-f137-4416-b14a-bb263f7d1410",
        "tags" : [
        ]
      },
      {
        "id" : "cb12ec8f-8b99-4fb1-867b-956d72825a84",
        "parentId" : "df65f0be-08bd-4e16-9f1e-1cb835645010",
        "authorId" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "body" : "@19majkel94 feel free to send a new PR and we will merge it in",
        "createdAt" : "2018-01-04T17:42:53Z",
        "updatedAt" : "2018-01-04T17:42:54Z",
        "lastEditedBy" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "tags" : [
        ]
      },
      {
        "id" : "67b1466c-a88d-42cd-ae24-d28510f2bd8e",
        "parentId" : "df65f0be-08bd-4e16-9f1e-1cb835645010",
        "authorId" : "3abfb70a-8508-492a-b189-5c4e513a16b5",
        "body" : "@19majkel94 Hi! Fixed in #22945, could you please review it?",
        "createdAt" : "2018-01-16T08:54:32Z",
        "updatedAt" : "2018-01-16T08:54:32Z",
        "lastEditedBy" : "3abfb70a-8508-492a-b189-5c4e513a16b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7ad2ee40e967abc374f775f42dc015f8198162d",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +21,25 @@    (values: Partial<FormData>, dispatch: Dispatch<any>, props: P) => void | FormErrors<FormData> | Promise<any>;\n\nexport type SubmitHandler<FormData = {}, P = {}> = (\n    submit: FormSubmitHandler<FormData, P>,\n    props?: InjectedFormProps<FormData, P>,"
  },
  {
    "id" : "28174030-1d0f-497c-80f3-cdcef5c0c053",
    "prId" : 24816,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/24816#pullrequestreview-111451964",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df824548-76e7-481e-8e1f-46e460022385",
        "parentId" : null,
        "authorId" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "body" : "I was rather confused when I looked at this because `FormData` is an actual DOM API constructor/instance and it makes no sense to have a `Partial<FormData>`. Naming it `TFormData` might make it less confusing, but that's not the point of the PR ü§∑‚Äç‚ôÄÔ∏è ",
        "createdAt" : "2018-04-12T01:08:31Z",
        "updatedAt" : "2018-04-12T01:08:31Z",
        "lastEditedBy" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff7817ee0e1132b10f25345dbf9c34612eb15bcc",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +19,23 @@\nexport type FormSubmitHandler<FormData = {}, P = {}> =\n    (values: FormData, dispatch: Dispatch<any>, props: P) => void | FormErrors<FormData> | Promise<any>;\n\nexport interface SubmitHandler<FormData = {}, P = {}> {"
  }
]