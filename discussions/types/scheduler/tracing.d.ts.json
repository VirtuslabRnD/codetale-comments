[
  {
    "id" : "138d0c6c-1c38-4a64-a22b-80f433dda2b5",
    "prId" : 34520,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/34520#pullrequestreview-224204428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c65b030-9d83-4b3b-b04f-cb20b4b337c0",
        "parentId" : null,
        "authorId" : "6d447f9d-4946-46c6-8162-102e21d6a2ed",
        "body" : "Sorry, one last question. Since this function has a try/catch block around the callback and doesn't return anything if it catches an error, should the return type be `T | undefined`? This is also true of a couple other functions.",
        "createdAt" : "2019-04-09T03:57:43Z",
        "updatedAt" : "2019-04-09T03:58:09Z",
        "lastEditedBy" : "6d447f9d-4946-46c6-8162-102e21d6a2ed",
        "tags" : [
        ]
      },
      {
        "id" : "35bd555b-7873-4aa4-b9fa-682de1dd92c1",
        "parentId" : "4c65b030-9d83-4b3b-b04f-cb20b4b337c0",
        "authorId" : "04e09978-475a-4333-8639-a85b17b7429f",
        "body" : "It has a try-finally. The error isn't caught. I had to get used to this as well. I had a bunch of `| undefined` types in place until I realized that they are never caught. `finally` is just a cleanup construct.",
        "createdAt" : "2019-04-09T05:58:32Z",
        "updatedAt" : "2019-04-09T05:58:32Z",
        "lastEditedBy" : "04e09978-475a-4333-8639-a85b17b7429f",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f72fc142b2c8c14c9246173c28219a24e14810e",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +98,102 @@export const __subscriberRef: IfSchedulerTracing<SubscriberRef, null>;\n\nexport function unstable_clear<T>(callback: () => T): T;\n\nexport function unstable_getCurrent(): Set<Interaction> | null;"
  }
]