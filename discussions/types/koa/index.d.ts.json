[
  {
    "id" : "fc7c5b28-fb50-4b58-a880-485b3fb36a38",
    "prId" : 36016,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/36016#pullrequestreview-249368900",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94f9fc2c-af3c-4220-8b45-c9a2a30e7409",
        "parentId" : null,
        "authorId" : "0762ec2f-c2e9-4296-915b-f2139e71b5ad",
        "body" : "Is this necessary, or would you just augment `BaseContext` instead? It also seems like the purpose of `ParameterizedContext` is to add custom extensions to `BaseContext` (via `CustomT` and `Middleware`):\r\n\r\nhttps://github.com/DefinitelyTyped/DefinitelyTyped/blob/9f59635899ed15815241c55bc795fe371393b469/types/koa/index.d.ts#L500-L502",
        "createdAt" : "2019-06-12T23:13:11Z",
        "updatedAt" : "2019-06-12T23:13:11Z",
        "lastEditedBy" : "0762ec2f-c2e9-4296-915b-f2139e71b5ad",
        "tags" : [
        ]
      },
      {
        "id" : "1d3b3345-0dec-4433-8c93-5cff670edd9d",
        "parentId" : "94f9fc2c-af3c-4220-8b45-c9a2a30e7409",
        "authorId" : "c1641e4d-3d7a-4d7c-9750-631554b77a48",
        "body" : "I only want to add to `ctx`, but `BaseContext` will also add to `context`.",
        "createdAt" : "2019-06-13T14:01:44Z",
        "updatedAt" : "2019-06-13T14:01:45Z",
        "lastEditedBy" : "c1641e4d-3d7a-4d7c-9750-631554b77a48",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f59635899ed15815241c55bc795fe371393b469",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +687,691 @@    }\n\n    interface ExtendableContext extends BaseContext {\n        app: Application;\n        request: Request;"
  },
  {
    "id" : "78df4c23-6bff-48be-9d25-71287b4bfd05",
    "prId" : 42551,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/42551#pullrequestreview-363764547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "584ad94c-cbe2-4e1d-8307-9c036885dc56",
        "parentId" : null,
        "authorId" : "29659952-8433-49c0-b154-ef50e837bd8b",
        "body" : "`callback` doesn't return a `Promise<void>`, if anything, it returns the `handleRequest` function, which then returns a `Promise<void>`\r\n\r\n---\r\n\r\n```\r\nWelcome to Node.js v12.3.1.\r\nType \".help\" for more information.\r\n> const Koa = require('koa')\r\nundefined\r\n> new Koa().callback()\r\n[Function: handleRequest]\r\n> \r\n```",
        "createdAt" : "2020-02-23T23:11:05Z",
        "updatedAt" : "2020-02-23T23:11:11Z",
        "lastEditedBy" : "29659952-8433-49c0-b154-ef50e837bd8b",
        "tags" : [
        ]
      },
      {
        "id" : "044e394d-d658-4ff3-9ea0-791dd7380c21",
        "parentId" : "584ad94c-cbe2-4e1d-8307-9c036885dc56",
        "authorId" : "aaa17825-d55b-4b56-adcd-d9abf5b5ba30",
        "body" : "Yes, that’s how I explained it and that’s how I typed it? `callback()` (not `callback`) is a method signature. It's a method (not a property) that returns a function type `(req, res) => Promise<void>`.",
        "createdAt" : "2020-02-24T08:36:35Z",
        "updatedAt" : "2020-02-24T12:08:52Z",
        "lastEditedBy" : "aaa17825-d55b-4b56-adcd-d9abf5b5ba30",
        "tags" : [
        ]
      },
      {
        "id" : "10b60e4e-bad2-4e8d-94af-0ff6d4ef7b19",
        "parentId" : "584ad94c-cbe2-4e1d-8307-9c036885dc56",
        "authorId" : "29659952-8433-49c0-b154-ef50e837bd8b",
        "body" : "ahh I see, my bad, sorry about that",
        "createdAt" : "2020-02-24T23:04:02Z",
        "updatedAt" : "2020-02-24T23:04:03Z",
        "lastEditedBy" : "29659952-8433-49c0-b154-ef50e837bd8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9e6e3e6e2dec99ebf0f1c8d85a78556eab5836b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +514,518 @@     * for node's native http/http2 server.\n     */\n    callback(): (req: IncomingMessage | Http2ServerRequest, res: ServerResponse | Http2ServerResponse) => Promise<void>;\n\n    /**"
  }
]