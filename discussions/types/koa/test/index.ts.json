[
  {
    "id" : "d533d11a-486a-40cb-b520-7acf70d6e44c",
    "prId" : 50848,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/50848#pullrequestreview-577076523",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76d32ecb-ef88-4889-bf3e-e1407eb2ebb3",
        "parentId" : null,
        "authorId" : "29659952-8433-49c0-b154-ef50e837bd8b",
        "body" : "I haven't seen this `$ExpectType` reference before, a quick google search made reference to an eslint plugin, do you know if it is installed?\r\n\r\nHave you verified this test is working as expected?",
        "createdAt" : "2021-01-26T22:05:35Z",
        "updatedAt" : "2021-01-26T22:06:43Z",
        "lastEditedBy" : "29659952-8433-49c0-b154-ef50e837bd8b",
        "tags" : [
        ]
      },
      {
        "id" : "ad1f22c2-5a4a-43ed-a6cd-d5498ebf3f3f",
        "parentId" : "76d32ecb-ef88-4889-bf3e-e1407eb2ebb3",
        "authorId" : "67195de8-a220-482d-b913-a938505457ce",
        "body" : "This is how type assertions work in dtslint, which is the tool used to test types in DefinitelyTyped. https://github.com/DefinitelyTyped/DefinitelyTyped#running-tests\r\n\r\nThere are 3 types of assertions:\r\n\r\n1. Making sure TypeScript doesn’t complain\r\n2. Assert a specific type using `// $ExpectType`\r\n3. Assert a type doesn’t match using `// $ExpectError`\r\n\r\nI hope this helps you write type definitions in the future. :)",
        "createdAt" : "2021-01-27T08:15:14Z",
        "updatedAt" : "2021-01-27T08:15:15Z",
        "lastEditedBy" : "67195de8-a220-482d-b913-a938505457ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e737e77377182fd868f9e01fab4368c65591671",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +49,53 @@\napp.use(ctx => {\n    ctx.accepts(); // $ExpectType string[]\n    ctx.accepts(''); // $ExpectType string | false\n    ctx.accepts(['']); // $ExpectType string | false"
  },
  {
    "id" : "e8dfd6d0-267b-4bd9-a3cf-6baadd5ab555",
    "prId" : 54950,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/54950#pullrequestreview-723138531",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb0b1ef3-aef8-459f-a1d3-9a003a15b880",
        "parentId" : null,
        "authorId" : "3b25cd4e-974d-48b3-ba06-60921618ebf6",
        "body" : "This change is not related to the subject of this PR and should be done in a separate PR.",
        "createdAt" : "2021-08-05T07:58:07Z",
        "updatedAt" : "2021-08-05T07:59:11Z",
        "lastEditedBy" : "3b25cd4e-974d-48b3-ba06-60921618ebf6",
        "tags" : [
        ]
      },
      {
        "id" : "9dd692b7-b620-4bd7-a0d5-8cdec14b0882",
        "parentId" : "fb0b1ef3-aef8-459f-a1d3-9a003a15b880",
        "authorId" : "67195de8-a220-482d-b913-a938505457ce",
        "body" : "Same as above.",
        "createdAt" : "2021-08-05T09:46:05Z",
        "updatedAt" : "2021-08-05T09:46:28Z",
        "lastEditedBy" : "67195de8-a220-482d-b913-a938505457ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "65ed9bcc533769d8189c19b1e869726782403fbe",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +38,42 @@});\n\napp.use((ctx: Koa.Context, next) => {\n    const start: any = new Date();\n    return next().then(() => {"
  }
]