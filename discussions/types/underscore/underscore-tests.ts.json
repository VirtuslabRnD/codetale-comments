[
  {
    "id" : "357bbb9c-0ab2-4494-b61e-6da8d71abf0d",
    "prId" : 36510,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/36510#pullrequestreview-256300055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8746f943-9be0-456b-a30b-147155c93541",
        "parentId" : null,
        "authorId" : "2bb619c2-ecd2-48e8-8e59-d1208775b7ce",
        "body" : "This test should actually fail, as performing filter on a a Dictionary<T> returns T[], thus performing map on it will need the following iterator:\r\n```\r\n(value: T, index: number, list: T[]): TResult\r\n```\r\nThe reason this test passes now is because of missing signature of filter for _Chain which should be:\r\n```ts\r\nfilter(iterator: _.ObjectIterator<T, boolean>, context?: any): _Chain<T, T[]>;\r\n```\r\nBut fixing it will not even help as the entire _Chain interface is malformed :-( and I'm working on a wide fix for it.\r\nI would rather you only add tests that use the fixed map method",
        "createdAt" : "2019-07-01T08:52:32Z",
        "updatedAt" : "2019-07-01T12:09:37Z",
        "lastEditedBy" : "2bb619c2-ecd2-48e8-8e59-d1208775b7ce",
        "tags" : [
        ]
      },
      {
        "id" : "e23e8061-c83f-4604-b937-ac5f36741e04",
        "parentId" : "8746f943-9be0-456b-a30b-147155c93541",
        "authorId" : "fc2b87a1-31b1-453f-a095-f3215fe0becc",
        "body" : "You have right. I will stick in this test to 'map' function. I interface definition I was trying to test.",
        "createdAt" : "2019-07-01T12:17:09Z",
        "updatedAt" : "2019-07-01T12:29:53Z",
        "lastEditedBy" : "fc2b87a1-31b1-453f-a095-f3215fe0becc",
        "tags" : [
        ]
      }
    ],
    "commit" : "f197216080ed9b4deb9174023927ede6eaacbad9",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +221,225 @@};\n\nlet youngPeopleId: string[] = _.chain(usersData)\n    .map((p, k: string) => k)\n    .value();"
  },
  {
    "id" : "af17a1ba-7ac0-4415-9e94-5ecabe0c7da8",
    "prId" : 36510,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/36510#pullrequestreview-256356102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f346689e-c518-4ab1-8651-8dcecd628f17",
        "parentId" : null,
        "authorId" : "2bb619c2-ecd2-48e8-8e59-d1208775b7ce",
        "body" : "why did you remove the type here?\r\nIt is best to use the flatten() method here and then get the value",
        "createdAt" : "2019-07-01T13:35:44Z",
        "updatedAt" : "2019-07-01T13:36:15Z",
        "lastEditedBy" : "2bb619c2-ecd2-48e8-8e59-d1208775b7ce",
        "tags" : [
        ]
      },
      {
        "id" : "c868502a-bb65-4dfc-840c-f063cadcd503",
        "parentId" : "f346689e-c518-4ab1-8651-8dcecd628f17",
        "authorId" : "fc2b87a1-31b1-453f-a095-f3215fe0becc",
        "body" : "because the type by the underscore should be like this one in the comment, But with current typescript definition, There is missing one level of array nest. \r\n`{ age: number; name: string; id: string }[][]  // type return by underscore`\r\n`{ age: number; name: string; id: string }[]    // type with is calculate base of current definitions`\r\nIt would require more changes in the underscore typescript definition. And I'm not certain what should be changed?\r\n`interface _ChainOfArrays<T> extends _Chain<T[]> `\r\nto \r\n`interface _ChainOfArrays<T> extends _Chain<T[], T[][]> `\r\nit will not match with data return from function 'groupBy'\r\n\r\n\r\n\r\n",
        "createdAt" : "2019-07-01T13:55:42Z",
        "updatedAt" : "2019-07-01T13:56:46Z",
        "lastEditedBy" : "fc2b87a1-31b1-453f-a095-f3215fe0becc",
        "tags" : [
        ]
      },
      {
        "id" : "b475de81-b18e-4a2b-b794-919b5a083a3e",
        "parentId" : "f346689e-c518-4ab1-8651-8dcecd628f17",
        "authorId" : "2bb619c2-ecd2-48e8-8e59-d1208775b7ce",
        "body" : "You are correct. Lets leave it be for now",
        "createdAt" : "2019-07-01T14:01:38Z",
        "updatedAt" : "2019-07-01T14:01:39Z",
        "lastEditedBy" : "2bb619c2-ecd2-48e8-8e59-d1208775b7ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "f197216080ed9b4deb9174023927ede6eaacbad9",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +232,236 @@\n// Test map function with _ChainOfArrays<>\nlet usersTable_2 /*: { age: number; name: string; id: string }[][]*/ = _.chain(usersData)\n    .map<{ age: number; name: string; id: string }>((p, k: string) => {\n        return [{ id: k, ...p }];"
  },
  {
    "id" : "e680e36d-f918-4896-874f-f57a93567aca",
    "prId" : 36510,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/36510#pullrequestreview-256340559",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe9830fc-c498-4b4a-8274-bcb325d060ea",
        "parentId" : null,
        "authorId" : "2bb619c2-ecd2-48e8-8e59-d1208775b7ce",
        "body" : "same here - why did you remove the type?",
        "createdAt" : "2019-07-01T13:36:12Z",
        "updatedAt" : "2019-07-01T13:36:15Z",
        "lastEditedBy" : "2bb619c2-ecd2-48e8-8e59-d1208775b7ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "f197216080ed9b4deb9174023927ede6eaacbad9",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +238,242 @@    .value();\n\nlet usersTable_3 /*: { score: number; fullName: string; login: string }[][]*/ = _.chain(usersTable)\n    .map<{ score: number; fullName: string; login: string }>(p => {\n        return ["
  }
]