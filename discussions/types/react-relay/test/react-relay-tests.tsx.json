[
  {
    "id" : "c3eb35b5-dcc0-4bfb-9204-8d79348498e1",
    "prId" : 23460,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/23460#pullrequestreview-94392262",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15a7c93a-cf05-4516-875c-1e492dcb55e9",
        "parentId" : null,
        "authorId" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "body" : "@kastermester I left a bunch of these TODO comments, which are the places that our future fragment reference should fix.",
        "createdAt" : "2018-02-06T15:45:42Z",
        "updatedAt" : "2018-02-06T16:25:24Z",
        "lastEditedBy" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "tags" : [
        ]
      }
    ],
    "commit" : "4baa6ab4c6110ca66ae30b65041460be3b8a3dc8",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +134,138 @@        const onLike = (id: string) => console.log(`Liked story #${id}`);\n        const story: { \" $fragmentRefs\": Story_story$ref } = {} as any;\n        // TODO: Fix requirement to cast fragment reference as `any`.\n        <StoryRefetchContainer story={story as any} onLike={onLike} />;\n    }"
  },
  {
    "id" : "d0957e30-1b8a-431f-81fd-d8c4530eba55",
    "prId" : 25914,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/25914#pullrequestreview-122738901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca59ce60-7660-4ff7-a32c-86a5d5100fec",
        "parentId" : null,
        "authorId" : "0835a91f-f246-4dbe-9155-a8eaa0f33926",
        "body" : "thanks for updating the test",
        "createdAt" : "2018-05-23T19:46:44Z",
        "updatedAt" : "2018-05-23T20:44:25Z",
        "lastEditedBy" : "0835a91f-f246-4dbe-9155-a8eaa0f33926",
        "tags" : [
        ]
      }
    ],
    "commit" : "da93d124d281d534300f607ac4fd9375df76728d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +29,33 @@// Modern QueryRenderer\n// ~~~~~~~~~~~~~~~~~~~~~\nconst MyQueryRenderer = (props: { name: string, show: boolean }) => (\n    <QueryRenderer\n        environment={modernEnvironment}"
  },
  {
    "id" : "8d6f223f-5bca-45cb-98e4-7353252204df",
    "prId" : 28071,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/28071#pullrequestreview-145592993",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af5eb76a-f11b-4c9a-bda2-b87fdb307e38",
        "parentId" : null,
        "authorId" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "body" : "Plural example that gets generated by relay-compiler-language-typescript",
        "createdAt" : "2018-08-13T10:21:28Z",
        "updatedAt" : "2018-08-13T10:26:40Z",
        "lastEditedBy" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "tags" : [
        ]
      }
    ],
    "commit" : "f05bd87af8eb16ebb89c60c89288d2b9dc6bba2d",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +173,177 @@type FeedStories_feed$ref = typeof _FeedStories_feed$ref;\ndeclare const _FeedStory_edges$ref: unique symbol;\ntype FeedStory_edges$ref = typeof _FeedStory_edges$ref;\n// tslint:disable-next-line:interface-over-type-literal\ntype FeedStories_feed = {"
  },
  {
    "id" : "42b97655-76d6-4695-95fb-bc10888e09e2",
    "prId" : 28071,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/28071#pullrequestreview-145593526",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a337981-d94e-48de-99f3-8fad7e6227a9",
        "parentId" : null,
        "authorId" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "body" : "Test for plural fragment references.",
        "createdAt" : "2018-08-13T10:23:24Z",
        "updatedAt" : "2018-08-13T10:26:40Z",
        "lastEditedBy" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "tags" : [
        ]
      }
    ],
    "commit" : "f05bd87af8eb16ebb89c60c89288d2b9dc6bba2d",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +223,227 @@                <span>{<FeedStoryEdgesFragmentContainer edges={feed.edges} />}</span>\n            </div>\n        );\n    };\n"
  },
  {
    "id" : "fa5147c0-0ac3-42a2-973a-c8fc599a4deb",
    "prId" : 28379,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/28379#pullrequestreview-149537528",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "970eb054-e3e4-43c6-942d-2b68c7cf1639",
        "parentId" : null,
        "authorId" : "40e61ff8-b223-4e7e-8f91-44bc16197019",
        "body" : "nice üíØ ",
        "createdAt" : "2018-08-26T12:58:42Z",
        "updatedAt" : "2018-08-26T13:05:03Z",
        "lastEditedBy" : "40e61ff8-b223-4e7e-8f91-44bc16197019",
        "tags" : [
        ]
      }
    ],
    "commit" : "55b80854086ef6a8ba14f22179de52f172dcd69a",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +45,49 @@\nconst MyQueryRenderer = (props: { name: string; show: boolean }) => (\n    <QueryRenderer<MyQueryRenderer>\n        environment={modernEnvironment}\n        query={"
  },
  {
    "id" : "da0218af-d2d1-4fe0-9d13-d9520422594e",
    "prId" : 28379,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/28379#pullrequestreview-149538045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1eafd78-50be-4b73-92f5-ad4df0102d3b",
        "parentId" : null,
        "authorId" : "40e61ff8-b223-4e7e-8f91-44bc16197019",
        "body" : "Is this an accident? (If not can you add a comment)",
        "createdAt" : "2018-08-26T12:59:29Z",
        "updatedAt" : "2018-08-26T13:05:03Z",
        "lastEditedBy" : "40e61ff8-b223-4e7e-8f91-44bc16197019",
        "tags" : [
        ]
      },
      {
        "id" : "4b552651-dede-48fb-a675-64b32ad08e74",
        "parentId" : "a1eafd78-50be-4b73-92f5-ad4df0102d3b",
        "authorId" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "body" : "This is because normally TS will infer the type of this property to be `seenState: string`, which is too broad to satisfy the enum. Not sure if there‚Äôs a better way to do this ü§∑‚Äç‚ôÇÔ∏è",
        "createdAt" : "2018-08-26T13:15:23Z",
        "updatedAt" : "2018-08-26T13:15:23Z",
        "lastEditedBy" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "tags" : [
        ]
      }
    ],
    "commit" : "55b80854086ef6a8ba14f22179de52f172dcd69a",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +384,388 @@    markReadNotification: {\n        notification: {\n            seenState: \"SEEN\" as \"SEEN\",\n        },\n    },"
  },
  {
    "id" : "211b8da4-6f8d-4512-b280-50a86787ab03",
    "prId" : 28379,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/28379#pullrequestreview-149538118",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "344830da-1115-4d6c-b73b-4dbc7d596f54",
        "parentId" : null,
        "authorId" : "40e61ff8-b223-4e7e-8f91-44bc16197019",
        "body" : "might be worth turning this into a `/** start of artifacts produced by relay-compiler-language-typescript **/` and have an end one, so that it's obvious to the next folk where the responsibilities for the types lay\r\n",
        "createdAt" : "2018-08-26T13:04:40Z",
        "updatedAt" : "2018-08-26T13:05:03Z",
        "lastEditedBy" : "40e61ff8-b223-4e7e-8f91-44bc16197019",
        "tags" : [
        ]
      },
      {
        "id" : "58e6f908-af29-4d3e-905d-4bb969cc84ef",
        "parentId" : "344830da-1115-4d6c-b73b-4dbc7d596f54",
        "authorId" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "body" : "Makes sense. I‚Äôll do that next time as I‚Äôm currently on the road.",
        "createdAt" : "2018-08-26T13:17:51Z",
        "updatedAt" : "2018-08-26T13:17:51Z",
        "lastEditedBy" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "tags" : [
        ]
      }
    ],
    "commit" : "55b80854086ef6a8ba14f22179de52f172dcd69a",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +420,424 @@\nfunction markNotificationAsRead(source: string, storyID: string) {\n    // Artifact produced by relay-compiler-language-typescript\n    type MyMutationVariables = {\n        readonly input: {"
  },
  {
    "id" : "1ff5991a-38dd-4647-acc5-fc692043427c",
    "prId" : 34233,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/34233#pullrequestreview-220064181",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd79718f-c0b7-40c1-afbc-f3adcde2eddc",
        "parentId" : null,
        "authorId" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "body" : "I actually meant a snippet of actual API usage, but at a glance I only see `createFragmentSpecResolver` as a potential option and it doesn‚Äôt seem trivial to use that right now, so let‚Äôs just go with this for now üëç ",
        "createdAt" : "2019-03-28T10:15:27Z",
        "updatedAt" : "2019-03-28T10:15:32Z",
        "lastEditedBy" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "tags" : [
        ]
      },
      {
        "id" : "da436b1b-e3d6-4928-903b-887171683e4b",
        "parentId" : "fd79718f-c0b7-40c1-afbc-f3adcde2eddc",
        "authorId" : "d92c202d-1579-4667-a56d-62bac34b9a22",
        "body" : "yeah. I mean, I didn't actually specify the Context type or any other type in this PR, that already exists and is hopefully tested in relay-runtime. i just added a `const` in the module, so this tests that the `const` is indeed there üòÖ ",
        "createdAt" : "2019-03-28T12:15:10Z",
        "updatedAt" : "2019-03-28T12:15:11Z",
        "lastEditedBy" : "d92c202d-1579-4667-a56d-62bac34b9a22",
        "tags" : [
        ]
      },
      {
        "id" : "4ac640f6-4603-4013-8c2b-5fbc437da150",
        "parentId" : "fd79718f-c0b7-40c1-afbc-f3adcde2eddc",
        "authorId" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "body" : "Right right, I just try to identify opportunities for backfilling some of the debt we have as well ;)",
        "createdAt" : "2019-03-28T14:40:44Z",
        "updatedAt" : "2019-03-28T14:40:44Z",
        "lastEditedBy" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b3af246437cfaa028713361dd3fab894edd1189",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +509,513 @@\nReactRelayContext.Consumer.prototype;\nReactRelayContext.Provider.prototype;"
  },
  {
    "id" : "cc091bca-527e-4d9a-9f7a-04d97522064a",
    "prId" : 40387,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/40387#pullrequestreview-317218651",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76100962-4c64-4319-964d-0c343c1d1285",
        "parentId" : null,
        "authorId" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "body" : "So to be clear, this test failed perviously, yeah?",
        "createdAt" : "2019-11-14T19:19:59Z",
        "updatedAt" : "2019-11-14T19:20:30Z",
        "lastEditedBy" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "tags" : [
        ]
      },
      {
        "id" : "313d3ac0-9b78-4f73-abb0-7663d44d7ac7",
        "parentId" : "76100962-4c64-4319-964d-0c343c1d1285",
        "authorId" : "98562196-7c4c-4e6a-bbb9-f3e0754747b1",
        "body" : "yep! if the change in the type defs is reverted this will start throwing an error",
        "createdAt" : "2019-11-14T19:47:49Z",
        "updatedAt" : "2019-11-14T19:47:50Z",
        "lastEditedBy" : "98562196-7c4c-4e6a-bbb9-f3e0754747b1",
        "tags" : [
        ]
      },
      {
        "id" : "24e08f9d-0714-4dcb-99f6-226ddf8f7c90",
        "parentId" : "76100962-4c64-4319-964d-0c343c1d1285",
        "authorId" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "body" : "Ace, thanks for confirming üëç ",
        "createdAt" : "2019-11-14T19:50:43Z",
        "updatedAt" : "2019-11-14T19:50:43Z",
        "lastEditedBy" : "66bf5f80-ba60-4e8e-b14c-d134127a254e",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf2463814ffc8e5333cf510928eb85b75dd9df6b",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +735,739 @@    return (\n        <QueryRenderer<MyQuery>\n            environment={relayContext.environment}\n            query={graphql`\n                query ExampleQuery($pageID: ID!) {"
  }
]