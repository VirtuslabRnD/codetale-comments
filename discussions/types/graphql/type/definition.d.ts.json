[
  {
    "id" : "93995fd6-a6ac-4111-93ad-df6e8950ea42",
    "prId" : 22789,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/22789#pullrequestreview-87682636",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d4090b3-3616-47aa-8e9f-497a26a141cc",
        "parentId" : null,
        "authorId" : "6955ec1d-b8e9-40cb-927c-ffa19c25f12d",
        "body" : "@tgriesser In `graphql-js` it described as following \r\n```js\r\nexport type GraphQLFieldResolver<TSource, TContext> = (\r\n```\r\nhttps://github.com/graphql/graphql-js/blob/master/src/type/definition.js#L717\r\n\r\nI strongly believe that TS typings should be in sync with official Flow typings.\r\nPlease consider contributing your changes to `graphql-js` first.",
        "createdAt" : "2018-01-09T22:30:34Z",
        "updatedAt" : "2018-01-09T22:31:13Z",
        "lastEditedBy" : "6955ec1d-b8e9-40cb-927c-ffa19c25f12d",
        "tags" : [
        ]
      },
      {
        "id" : "ae986a38-32b5-4f35-af6c-3cec8772f03d",
        "parentId" : "2d4090b3-3616-47aa-8e9f-497a26a141cc",
        "authorId" : "831a2035-9ec6-46ba-8ae7-9e4f03dbef88",
        "body" : "Ah cool will do",
        "createdAt" : "2018-01-09T22:35:08Z",
        "updatedAt" : "2018-01-09T22:35:08Z",
        "lastEditedBy" : "831a2035-9ec6-46ba-8ae7-9e4f03dbef88",
        "tags" : [
        ]
      },
      {
        "id" : "63da3280-ab44-4e10-aa1c-64447784831c",
        "parentId" : "2d4090b3-3616-47aa-8e9f-497a26a141cc",
        "authorId" : "831a2035-9ec6-46ba-8ae7-9e4f03dbef88",
        "body" : "@IvanGoncharov Related PR: https://github.com/graphql/graphql-js/pull/1197",
        "createdAt" : "2018-01-09T22:42:08Z",
        "updatedAt" : "2018-01-09T22:42:08Z",
        "lastEditedBy" : "831a2035-9ec6-46ba-8ae7-9e4f03dbef88",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6d334634acbac9b6b93115ea0e2886bcf6189a3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +263,267 @@) => boolean | Promise<boolean>;\n\nexport type GraphQLFieldResolver<TSource, TContext, TArgs = { [argName: string]: any }> = (\n    source: TSource,\n    args: TArgs,"
  }
]