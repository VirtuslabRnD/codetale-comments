[
  {
    "id" : "a1799f62-e962-4db3-bdcc-d35146e8adb6",
    "prId" : 49318,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/49318#pullrequestreview-523733584",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee90db9a-1a73-424f-884c-4dc8a33946e9",
        "parentId" : null,
        "authorId" : "00414433-2604-4008-bfde-431abe31c35c",
        "body" : "Wondering why there is no `Plugin` interface anymore.",
        "createdAt" : "2020-11-03T03:11:38Z",
        "updatedAt" : "2020-11-03T03:12:10Z",
        "lastEditedBy" : "00414433-2604-4008-bfde-431abe31c35c",
        "tags" : [
        ]
      },
      {
        "id" : "5504b86a-0c98-4d68-825a-01950a5bba9c",
        "parentId" : "ee90db9a-1a73-424f-884c-4dc8a33946e9",
        "authorId" : "889aa791-06c6-4e14-90d4-8e19d2ddb2b0",
        "body" : "There is, it's backported and exported as `WebpackPluginInstance` contract, compatible with 4.*/5.*,\r\nbut there is not strict requirement really to implement the interface here.",
        "createdAt" : "2020-11-04T21:04:11Z",
        "updatedAt" : "2020-11-04T21:04:11Z",
        "lastEditedBy" : "889aa791-06c6-4e14-90d4-8e19d2ddb2b0",
        "tags" : [
        ]
      }
    ],
    "commit" : "054a732d9101fe11d9f912900fb8034860902bc8",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +25,29 @@     * Apply the plugin\n     */\n    apply(compiler: Compiler): void;\n}\n"
  },
  {
    "id" : "9d45a54e-5624-4858-ad51-3bc914413838",
    "prId" : 52044,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52044#pullrequestreview-624445667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13d10bb4-f8f3-410b-ae27-f3064c13ed04",
        "parentId" : null,
        "authorId" : "889aa791-06c6-4e14-90d4-8e19d2ddb2b0",
        "body" : "Why you're adding this into the package? I thik there is no direct dependency to Node types here.",
        "createdAt" : "2021-03-29T21:10:26Z",
        "updatedAt" : "2021-03-29T21:10:35Z",
        "lastEditedBy" : "889aa791-06c6-4e14-90d4-8e19d2ddb2b0",
        "tags" : [
        ]
      },
      {
        "id" : "cf949214-ed56-4afb-84b0-8a3c8cd53951",
        "parentId" : "13d10bb4-f8f3-410b-ae27-f3064c13ed04",
        "authorId" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "body" : "@sandersn added it, see his second point. not entirely sure what problem it solved though, maybe he can explain ",
        "createdAt" : "2021-03-29T21:17:42Z",
        "updatedAt" : "2021-03-29T21:17:42Z",
        "lastEditedBy" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "tags" : [
        ]
      },
      {
        "id" : "312855d4-49a2-4c13-9e5f-cfa441f3121b",
        "parentId" : "13d10bb4-f8f3-410b-ae27-f3064c13ed04",
        "authorId" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "body" : "webpack@5 depends on node types, but doesn't reference them. I have found 3 ways to fix this:\r\n\r\n1. Add the reference here.\r\n2. Add the reference in webpack.\r\n3. Have each user of mini-css-extract-plugin install `@types/node` and add `types: [\"node\"]` to their tsconfig.\r\n\r\n(3) is bad for usability of this package. (1) is .. mysterious. (2) is probably the right fix. I'll look at webpack's setup and see whether it makes sense for it to add the reference.\r\n\r\nEven if (2) is right, then it'll have to wait for a new version of webpack. So you could take this change in order to get this PR merged.",
        "createdAt" : "2021-03-30T16:04:24Z",
        "updatedAt" : "2021-03-30T16:04:24Z",
        "lastEditedBy" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "tags" : [
        ]
      }
    ],
    "commit" : "c084ddbc01cf542259a06bbeea3a8d42597ec329",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +9,13 @@// TypeScript Version: 3.7\n\n/// <reference types=\"node\" />\nimport { Configuration, Compiler } from 'webpack';\n"
  },
  {
    "id" : "3c39169a-c2b6-4e5d-82a4-c1a6745a84df",
    "prId" : 52443,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52443#pullrequestreview-638276800",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87474f1b-20ae-4394-89d1-d5433a7d1dc0",
        "parentId" : null,
        "authorId" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "body" : "where are you getting this from? the sources don't specify a layers option anywhere. i suppose this PR isn't from experiencing a missing type, but is from reading the README? as they do mention layers, but meaning webpack's own `experiments.layers`, not a loader option",
        "createdAt" : "2021-04-17T21:38:41Z",
        "updatedAt" : "2021-04-18T19:20:45Z",
        "lastEditedBy" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "tags" : [
        ]
      },
      {
        "id" : "38e475e4-3ff7-420b-9ee9-9c7911136643",
        "parentId" : "87474f1b-20ae-4394-89d1-d5433a7d1dc0",
        "authorId" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "body" : "aha it is hidden away in the readme:\r\n\r\n> When combined with `experiments.layers`, this adds a `layer` option to the loader options to specify the layer of the css execution.\r\n\r\nso its used only when `layers` is enabled, they don't currently have it in their list of loader options so was easy to miss",
        "createdAt" : "2021-04-17T21:40:04Z",
        "updatedAt" : "2021-04-18T19:20:45Z",
        "lastEditedBy" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "tags" : [
        ]
      }
    ],
    "commit" : "88735cc6e828ab99bc99a082fc51fb8f5ad2c2ac",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +108,112 @@         * Layer of the css execution\n         */\n        layer?: string;\n\n        modules?: {"
  },
  {
    "id" : "3e28f92e-3b91-42fe-9a4e-ebb6dbb1c568",
    "prId" : 52785,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52785#pullrequestreview-653457753",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5726c31-3404-4001-b9ed-d31be3ae50f6",
        "parentId" : null,
        "authorId" : "00414433-2604-4008-bfde-431abe31c35c",
        "body" : "Why `Required`?",
        "createdAt" : "2021-05-06T13:44:58Z",
        "updatedAt" : "2021-05-06T13:44:59Z",
        "lastEditedBy" : "00414433-2604-4008-bfde-431abe31c35c",
        "tags" : [
        ]
      },
      {
        "id" : "124169db-2a25-40aa-b8c4-0654f742127b",
        "parentId" : "b5726c31-3404-4001-b9ed-d31be3ae50f6",
        "authorId" : "426b17f3-12ca-4970-b1a2-b6ffe755ee4a",
        "body" : "Forces `Configuration`'s optional fields like `output` to not be undefined in order to extract its child prop `chunkFilename` type\r\n\r\nIt's also how `filename` was defined above https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/mini-css-extract-plugin/index.d.ts#L41",
        "createdAt" : "2021-05-06T14:00:50Z",
        "updatedAt" : "2021-05-06T14:00:51Z",
        "lastEditedBy" : "426b17f3-12ca-4970-b1a2-b6ffe755ee4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f7f74182dbc955c7f99e79f96e363d9d25e9e86",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +43,47 @@         * Works like [`output.chunkFilename`](https://webpack.js.org/configuration/output/#outputchunkfilename).\n         */\n        chunkFilename?: Required<Configuration>['output']['chunkFilename'];\n        /**\n         * For projects where CSS ordering has been mitigated through consistent"
  }
]