[
  {
    "id" : "c795296f-ff96-4200-81a2-ef6d6b4cf4f3",
    "prId" : 42764,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/42764#pullrequestreview-370323147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62b5314c-c2ec-4761-a936-8c5cbe37f1e0",
        "parentId" : null,
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "I may just be reading this incorrectly, but it looks like the default export of this module is a re-export of a symbol from Vue?  That seems odd.",
        "createdAt" : "2020-03-02T19:23:17Z",
        "updatedAt" : "2020-03-06T13:32:53Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      },
      {
        "id" : "f9183636-01b2-4ddc-a224-735d6dd23013",
        "parentId" : "62b5314c-c2ec-4761-a936-8c5cbe37f1e0",
        "authorId" : "6970c4cc-690a-4aca-bbcb-1d51854835a4",
        "body" : "Hi thanks for reviewing this soo quickly. I am new to writing type defs, first attempt so guidance would be appreciated. I orignally tried to emulate what I saw in this package https://github.com/DefinitelyTyped/DefinitelyTyped/blob/aa5c66c087896ff55568b76ae49f77321ba0123a/types/vue-datetime/index.d.ts but looking closer I think maybe I should be emulating this package instead https://github.com/DefinitelyTyped/DefinitelyTyped/blob/5d5716a9c3c942ec762094fab566729002365a5e/types/vue2-datepicker/index.d.ts\r\n\r\nOriginally I had created an interface that extended the vue constructor but the linter complained there shouldn't be an empty interface. ",
        "createdAt" : "2020-03-03T09:23:49Z",
        "updatedAt" : "2020-03-06T13:32:53Z",
        "lastEditedBy" : "6970c4cc-690a-4aca-bbcb-1d51854835a4",
        "tags" : [
        ]
      },
      {
        "id" : "5d2a01d3-4fc2-461c-a444-b89c2d2e618c",
        "parentId" : "62b5314c-c2ec-4761-a936-8c5cbe37f1e0",
        "authorId" : "6970c4cc-690a-4aca-bbcb-1d51854835a4",
        "body" : "So I have made quite a big change, I was originally following a pattern for components built for vue v1 I think and found vue2 packages.  I have rewritten this following the pattern for https://github.com/DefinitelyTyped/DefinitelyTyped/blob/5d5716a9c3c942ec762094fab566729002365a5e/types/vue2-datepicker/index.d.ts\r\n\r\nSo now I am exporting the following\r\n```\r\ndeclare const FullCalendar: Component<any, any, any, CalendarProps>;\r\n\r\nexport function install(Vue: () => any): void;\r\nexport type FullCalendarComponent = CalendarComponent;\r\nexport default FullCalendar;\r\n``` \r\n\r\nCalendarProps is an interface for the Vue props I declared in an options.d.ts file and imported it into index.d.ts so as to not make it too cluttered but I can move it all into 1 file.\r\n\r\nThis is quite a big change so should I make a new PR or are you happy reviewing it as part of this PR?",
        "createdAt" : "2020-03-03T11:52:16Z",
        "updatedAt" : "2020-03-06T13:32:53Z",
        "lastEditedBy" : "6970c4cc-690a-4aca-bbcb-1d51854835a4",
        "tags" : [
        ]
      },
      {
        "id" : "cfa0a44f-f7e9-46b6-8818-fb6203651ca0",
        "parentId" : "62b5314c-c2ec-4761-a936-8c5cbe37f1e0",
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "Sorry for the delay - I've been looking at other things.  This is a new definition, so I'm happy to review everything at once in this PR.",
        "createdAt" : "2020-03-05T00:08:53Z",
        "updatedAt" : "2020-03-06T13:32:53Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      },
      {
        "id" : "9dab4d80-e19d-411c-b876-054acbc3b371",
        "parentId" : "62b5314c-c2ec-4761-a936-8c5cbe37f1e0",
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "I guess I'm still surprised `FullCalendar` and `FullCalendarComponent` aren't related, but I don't know anything about the underlying library and it may well be correct.",
        "createdAt" : "2020-03-05T00:10:42Z",
        "updatedAt" : "2020-03-06T13:32:53Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      },
      {
        "id" : "f1c9c2df-8f31-46d7-8bdd-60b5bd94edd5",
        "parentId" : "62b5314c-c2ec-4761-a936-8c5cbe37f1e0",
        "authorId" : "6970c4cc-690a-4aca-bbcb-1d51854835a4",
        "body" : "This may very well be my missunderstanding of how to create type defs so forgive me, I'll try to explain the situation I am trying to solve. \r\n\r\nThe most basic part is the FullCalendar declaration \r\n`declare const FullCalendar: Component<any, any, any, CalendarProps>;` , this allows the user to load the component into another component for use in the template or in a SFC.\r\n\r\ne.g:\r\n```\r\ncomponents: {\r\n        'full-calendar': FullCalendar,\r\n},\r\ntemplate: `\r\n    <full-calendar defaultView=\"dayGridMonth\" :plugins=\"calendarPlugins\" ref=\"fullCalendar\"/>\r\n    `,\r\n```\r\n\r\nThe FullCalendarComponent type is to easily deal with a quirk in Vue js when it comes to refrencing a child components methods using `$refs`. It is based on this issue https://github.com/vuejs/vue-class-component/issues/94\r\n\r\nTo access the core FullCalendar library api one has to reference the component as such [according to the official docs](https://fullcalendar.io/docs/vue)\r\n```\r\nlet calendarApi = this.$refs.fullCalendar.getApi()\r\ncalendarApi.next() \r\n```\r\n\r\nDoing so with typescript makes the compiler kick up a stink so the offical docs are wrong. \r\n\r\nThere is 2 ways of resolving this \r\n```\r\n// Not sure this is the nicest way \r\nlet calendarApi = (this.$refs.fullCalendar as any).getApi();\r\n\r\n// or\r\nlet calendarApi = (this.$refs.fullCalendar as FullCalendarComponent).getApi();\r\n\r\n// Or with the class based api\r\nclass YourComponent extends Vue {\r\n  $refs!: {\r\n    fullCalendar : FullCalendarComponent\r\n  }\r\n}\r\n```\r\nTo be clear this doesn't work \r\n```\r\nlet calendarApi = (this.$refs.fullCalendar as FullCalendar).getApi();\r\n```\r\nWhere FullCalendar is the const exported.\r\n\r\nI figured having a type which could be imported and which reflects the api was nicer than having to either define your own interface everytime or declaring it as any. I may be wrong and feedback is welcome. ",
        "createdAt" : "2020-03-05T08:56:12Z",
        "updatedAt" : "2020-03-06T13:32:53Z",
        "lastEditedBy" : "6970c4cc-690a-4aca-bbcb-1d51854835a4",
        "tags" : [
        ]
      },
      {
        "id" : "1fe7daf6-e157-43b6-acd9-72b5b9f87ba2",
        "parentId" : "62b5314c-c2ec-4761-a936-8c5cbe37f1e0",
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "It seems like something's gone wrong somewhere along the line if you need a type assertion to access `getApi`, but the bug you linked suggests that it's in the project itself.  Unfortunately, I don't know enough about this library, or Vue in general, to be able to suggest a better alternative.  I will, however, suggest that you just `export interface FullCalendarComponent extends Vue`, so you don't have a redundant type name floating around.  Otherwise, it seems reasonable and it's easy enough to change later.",
        "createdAt" : "2020-03-05T23:43:42Z",
        "updatedAt" : "2020-03-06T13:32:53Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      },
      {
        "id" : "e14ff8ba-1244-4ea8-97af-bfa09d70578a",
        "parentId" : "62b5314c-c2ec-4761-a936-8c5cbe37f1e0",
        "authorId" : "6970c4cc-690a-4aca-bbcb-1d51854835a4",
        "body" : "Hi thanks for the guidance. I have updated the defs so the interface FullCalendarComponent is exported rather than just the type alias. ",
        "createdAt" : "2020-03-06T13:33:44Z",
        "updatedAt" : "2020-03-06T13:33:45Z",
        "lastEditedBy" : "6970c4cc-690a-4aca-bbcb-1d51854835a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fb00dc7e8b95c714c9c746862b0f5acdd37290b",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +18,22 @@declare const FullCalendar: Component<any, any, any, CalendarProps>;\nexport function install(Vue: () => any): void;\nexport default FullCalendar;"
  }
]