[
  {
    "id" : "507c8e3d-6861-4808-a7c5-2e52b43419b9",
    "prId" : 52991,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52991#pullrequestreview-661411541",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7c31d78-faf8-4405-991f-b0f618733d86",
        "parentId" : null,
        "authorId" : "e1ef778b-e118-43a5-ae0e-035438313b02",
        "body" : "Seems like you could use an event map to simplify redefining all these callbacks for each method.\r\nSimilar to how `WorkerEventMap` is used in `Worker`\r\n\r\n```ts\r\ninterface TransferStreamArgsMap {\r\n  error: [error: TransferError | CancelError | globalThis.Error];\r\n  end: [];\r\n  progress: [progress: Progress];\r\n  response: [res: IncomingMessage];\r\n}\r\n\r\non<E extends keyof TransferStreamArgsMap>(event: E, listener: (...args: TransferStreamArgsMap[E]) => any): TransferStream;\r\n```",
        "createdAt" : "2021-05-17T18:08:34Z",
        "updatedAt" : "2021-05-17T18:13:16Z",
        "lastEditedBy" : "e1ef778b-e118-43a5-ae0e-035438313b02",
        "tags" : [
        ]
      },
      {
        "id" : "bcdd472f-a30e-4c13-9257-92c0b2379826",
        "parentId" : "e7c31d78-faf8-4405-991f-b0f618733d86",
        "authorId" : "b020629e-b52b-403a-98c4-dd5d98f3aa6b",
        "body" : "Tried it out, this has the downside of constraining the TS version to >= 4.0. And somehow it seems to trigger a bug in TS 4.3 (which is rc). Because of this I'd like to leave it as is, even if it's repetitive.",
        "createdAt" : "2021-05-17T20:46:36Z",
        "updatedAt" : "2021-05-17T20:46:36Z",
        "lastEditedBy" : "b020629e-b52b-403a-98c4-dd5d98f3aa6b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a48bd6b41ecfc40b6551c2e34bb13fd941052404",
    "line" : 373,
    "diffHunk" : "@@ -1,1 +327,331 @@        addListener(event: \"response\", listener: (res: IncomingMessage) => any): TransferStream;\n\n        on(event: \"error\", listener: (error: TransferError | CancelError | globalThis.Error) => any): TransferStream;\n        on(event: \"end\", listener: () => any): TransferStream;\n        on(event: \"progress\", listener: (progress: Progress) => any): TransferStream;"
  }
]