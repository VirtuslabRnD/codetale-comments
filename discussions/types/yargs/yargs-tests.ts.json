[
  {
    "id" : "115120c6-55e5-4f15-b6f0-5c7e2f4db7f9",
    "prId" : 31000,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/31000#pullrequestreview-186801887",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bf29bdd-c64f-47ca-bce3-5e74b322a2a9",
        "parentId" : null,
        "authorId" : "20b9d686-e2b7-4fc4-860e-19757e66fd6f",
        "body" : "This expected type is good information.  Let's make this test really effective by finding a way to assert that the yargs result really does take on this type.  That will give me a lot of confidence in the typing.\r\n\r\nHere's one way we might go about that:\r\n\r\n```typescript\r\nconst args1 = yargs\r\n    .option(\"a\", { type: \"array\" })\r\n    .option(\"b\", { type: \"boolean\" })\r\n    .option(\"c\", { type: \"count\" })\r\n    .option(\"n\", { type: \"number\" })\r\n    .option(\"s\", { type: \"string\" })\r\n    .argv;\r\nconst expected1: Arguments<{\r\n    a: (string | number)[] | undefined;\r\n    b: boolean | undefined;\r\n    c: number;\r\n    n: number | undefined;\r\n    s: string | undefined;\r\n}>;\r\nconst test1: typeof args1 = null as typeof expected1;\r\nconst test2: typeof expected1 = null as typeof args1;\r\n```\r\n\r\nThe idea here is that if in both directions an object of one type can be assigned to the other then the two types are functionally equivalent.  Maybe there are better ways to go about that?",
        "createdAt" : "2018-12-19T19:28:13Z",
        "updatedAt" : "2018-12-19T19:28:14Z",
        "lastEditedBy" : "20b9d686-e2b7-4fc4-860e-19757e66fd6f",
        "tags" : [
        ]
      },
      {
        "id" : "f6fd5d0f-21ef-4e57-a3e4-0dc8b372e193",
        "parentId" : "1bf29bdd-c64f-47ca-bce3-5e74b322a2a9",
        "authorId" : "87a11c52-a378-4dfc-8f7b-5ac86a0b820f",
        "body" : "Thanks a lot for reviewing this, pushplay! The `// $ExpectType` comment is in fact a test assertion that the type matches. The type as you see it e.g. when hovering in VS Code will match the type in the comment. The assertions are enforced by the dtslint tool, as described [in the readme](https://github.com/DefinitelyTyped/DefinitelyTyped#lint). I was delighted to discover that this tooling existed; as you say, it's exactly what we need to build confidence in the typings and guard against regressions as we tweak them further.\r\n",
        "createdAt" : "2018-12-19T22:46:04Z",
        "updatedAt" : "2018-12-19T22:46:04Z",
        "lastEditedBy" : "87a11c52-a378-4dfc-8f7b-5ac86a0b820f",
        "tags" : [
        ]
      },
      {
        "id" : "19398c02-6133-4682-a525-3c7082a85766",
        "parentId" : "1bf29bdd-c64f-47ca-bce3-5e74b322a2a9",
        "authorId" : "20b9d686-e2b7-4fc4-860e-19757e66fd6f",
        "body" : "Oh that's really cool.  I wasn't aware of that evolution of DefinitelyTyped.",
        "createdAt" : "2018-12-20T00:00:16Z",
        "updatedAt" : "2018-12-20T00:00:16Z",
        "lastEditedBy" : "20b9d686-e2b7-4fc4-860e-19757e66fd6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb769a40abc07fe8fb5ec54d9aef0634dd808a6e",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +672,676 @@\nfunction Argv$inferOptionTypes() {\n    // $ExpectType { [x: string]: any; a: (string | number)[] | undefined; b: boolean | undefined; c: number; n: number | undefined; s: string | undefined; _: string[]; $0: string; }\n    yargs\n        .option(\"a\", { type: \"array\" })"
  },
  {
    "id" : "37b534a2-6529-4da1-8487-e66a03fa6b63",
    "prId" : 31000,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/31000#pullrequestreview-186711594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3aef7145-9e92-491d-9326-d49910e56a41",
        "parentId" : null,
        "authorId" : "20b9d686-e2b7-4fc4-860e-19757e66fd6f",
        "body" : "Same as above this could be more effective by using the type in some code.\r\n\r\n```typescript\r\nconst expectString: string = yargs.option(\"x\", { string: true, required: true }).argv.x;\r\n```",
        "createdAt" : "2018-12-19T19:29:56Z",
        "updatedAt" : "2018-12-19T19:33:44Z",
        "lastEditedBy" : "20b9d686-e2b7-4fc4-860e-19757e66fd6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb769a40abc07fe8fb5ec54d9aef0634dd808a6e",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +755,759 @@\n    // $ExpectType string\n    yargs.option(\"x\", { string: true, required: true }).argv.x;\n\n    // $ExpectType string"
  }
]