[
  {
    "id" : "0c851437-202c-4c96-b2a6-a5f3a9ac7a16",
    "prId" : 51282,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/51282#pullrequestreview-592213063",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f668670f-e983-47d5-8ced-4467d589d37f",
        "parentId" : null,
        "authorId" : "5c4fac29-b3e0-42fa-99b1-23fa633c9748",
        "body" : "Shouldn't this be asserted? Something like\r\n```typescript\r\nimport assert = require(\"assert\");\r\n/* ... */\r\nassert(typeof emptyMap.get(\"foo\") === \"number\");\r\nassert(typeof emptyMap.get(\"bar\") === \"undefined\");\r\n```\r\n\r\n<sub><sup>To be honest I do not remember if test files are executed or only checked for compile errors...</sup></sub>",
        "createdAt" : "2021-02-17T13:24:29Z",
        "updatedAt" : "2021-02-17T13:24:45Z",
        "lastEditedBy" : "5c4fac29-b3e0-42fa-99b1-23fa633c9748",
        "tags" : [
        ]
      },
      {
        "id" : "b0a2577a-1913-4d57-8d59-cd9d96e9df2b",
        "parentId" : "f668670f-e983-47d5-8ced-4467d589d37f",
        "authorId" : "7d2883b8-a782-4a9c-be77-62af88919756",
        "body" : "The CI system for `DefinitelyTyped` actually runs the test script so there's no need for asserting.\r\n\r\nYou can check the logs [here](https://github.com/DefinitelyTyped/DefinitelyTyped/pull/51282/checks?check_run_id=1918105305) (the `Run npm run test-all` step)",
        "createdAt" : "2021-02-17T13:42:07Z",
        "updatedAt" : "2021-02-17T13:42:07Z",
        "lastEditedBy" : "7d2883b8-a782-4a9c-be77-62af88919756",
        "tags" : [
        ]
      },
      {
        "id" : "efd308a8-df17-4ff2-bcb0-3160346a6264",
        "parentId" : "f668670f-e983-47d5-8ced-4467d589d37f",
        "authorId" : "5c4fac29-b3e0-42fa-99b1-23fa633c9748",
        "body" : "Surely the CI performs `npm run test-all`, but my point is if files are _actually run_. I just checked, and in fact only `dtslint` in run, therefore is just a matter of compile-time checks.\r\n\r\nIn this case `assert`ing is obviously useless, and at the same time `as` casts would not work if the static type is wrong (i.e: changing `get` to return `TValue | null` would raise an error because `null as undefined` is not allowed).\r\n\r\nSo, for me it's fine! :blush: ",
        "createdAt" : "2021-02-17T13:51:49Z",
        "updatedAt" : "2021-02-17T13:52:40Z",
        "lastEditedBy" : "5c4fac29-b3e0-42fa-99b1-23fa633c9748",
        "tags" : [
        ]
      }
    ],
    "commit" : "a45555aedf25e69ff64cbb5b96b5eda1e094e5ad",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +14,18 @@\nconst value: number = emptyMap.get(\"foo\") as number;\nconst missingValue: undefined = emptyMap.get(\"bar\") as undefined;\n\nconst hasFoo: boolean = emptyMap.has(\"foo\");"
  }
]