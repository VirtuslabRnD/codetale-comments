[
  {
    "id" : "67f4ac0f-784b-45a7-a7ca-796e6dfdb616",
    "prId" : 33317,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/33317#pullrequestreview-209738635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63a65dce-68df-4d99-acd1-c8b908eca2e0",
        "parentId" : null,
        "authorId" : "52d9e311-ec9f-46c5-9283-2c3fa48af7a3",
        "body" : "Can options be optional here instead?",
        "createdAt" : "2019-02-26T05:45:17Z",
        "updatedAt" : "2019-02-26T05:45:18Z",
        "lastEditedBy" : "52d9e311-ec9f-46c5-9283-2c3fa48af7a3",
        "tags" : [
        ]
      },
      {
        "id" : "d0adb449-6823-4ec1-b9b9-5c0f24279223",
        "parentId" : "63a65dce-68df-4d99-acd1-c8b908eca2e0",
        "authorId" : "37be9993-ba07-41a0-9fa9-c45eb1bdd060",
        "body" : "Yes, and it can be optional for the hear and response methods as well, should I change them all? :)",
        "createdAt" : "2019-02-26T07:55:21Z",
        "updatedAt" : "2019-02-26T07:55:21Z",
        "lastEditedBy" : "37be9993-ba07-41a0-9fa9-c45eb1bdd060",
        "tags" : [
        ]
      },
      {
        "id" : "dc30fdf5-2326-43b2-96bf-ddd5dd155a6e",
        "parentId" : "63a65dce-68df-4d99-acd1-c8b908eca2e0",
        "authorId" : "52d9e311-ec9f-46c5-9283-2c3fa48af7a3",
        "body" : "It would be really cool if you did :) ",
        "createdAt" : "2019-02-26T19:00:08Z",
        "updatedAt" : "2019-02-26T19:00:08Z",
        "lastEditedBy" : "52d9e311-ec9f-46c5-9283-2c3fa48af7a3",
        "tags" : [
        ]
      },
      {
        "id" : "de56b6c8-80c4-46c1-97b2-272d6f22d511",
        "parentId" : "63a65dce-68df-4d99-acd1-c8b908eca2e0",
        "authorId" : "37be9993-ba07-41a0-9fa9-c45eb1bdd060",
        "body" : "I realize now that I might have been wrong. I'm quite new to TypeScript, the options parameter is always optional in the JS code, but for TypeScript, optional parameters needs to come after mandatory parameters. I don't know how to make the options parameter optional, if possible...",
        "createdAt" : "2019-03-01T07:51:07Z",
        "updatedAt" : "2019-03-01T07:51:07Z",
        "lastEditedBy" : "37be9993-ba07-41a0-9fa9-c45eb1bdd060",
        "tags" : [
        ]
      },
      {
        "id" : "f80e4ceb-5518-4e6a-92fe-d114733801e5",
        "parentId" : "63a65dce-68df-4d99-acd1-c8b908eca2e0",
        "authorId" : "52d9e311-ec9f-46c5-9283-2c3fa48af7a3",
        "body" : "Putting `options?:` would make it optional, though optional parameters do need to come after all non-optional parameters. [Optional parameters vs overloads here](https://www.typescriptlang.org/docs/handbook/declaration-files/do-s-and-don-ts.html#use-optional-parameters). There may have been some reason you did not want to do this here? Probably not a big deal either way.",
        "createdAt" : "2019-03-01T19:06:55Z",
        "updatedAt" : "2019-03-01T19:06:55Z",
        "lastEditedBy" : "52d9e311-ec9f-46c5-9283-2c3fa48af7a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "f83f842d8608dc743408112bab948edc2c7b8122",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +43,47 @@        constructor(adapterPath: string, adapter: string, httpd: boolean, name: string, alias?: string);\n        catchAll(callback: ListenerCallback<this>): void;\n        catchAll(options: any, callback: ListenerCallback<this>): void;\n        hear(regex: RegExp, callback: ListenerCallback<this>): void;\n        hear(regex: RegExp, options: any, callback: ListenerCallback<this>): void;"
  }
]