[
  {
    "id" : "ab39a34c-1d4c-4321-ab3d-f746870f12a3",
    "prId" : 16240,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/16240#pullrequestreview-46004976",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44d4b931-e0b9-4ef6-bd3b-e3327b2abc15",
        "parentId" : null,
        "authorId" : "c7efd94b-0662-44d4-b4eb-86d35a1bb251",
        "body" : "Shouldn't these undefined be any instead?",
        "createdAt" : "2017-06-23T07:59:56Z",
        "updatedAt" : "2017-06-23T07:59:56Z",
        "lastEditedBy" : "c7efd94b-0662-44d4-b4eb-86d35a1bb251",
        "tags" : [
        ]
      },
      {
        "id" : "20af05c3-256a-4101-a826-4cdac7e86be8",
        "parentId" : "44d4b931-e0b9-4ef6-bd3b-e3327b2abc15",
        "authorId" : "61ca2aa1-fedf-49fb-a74c-f7b3d1973024",
        "body" : "This line wasn't modified by this PR: https://github.com/DefinitelyTyped/DefinitelyTyped/pull/16240/files#diff-bc5f906a3af0cde1a95a8a23cb993e96L68\r\n\r\nThe `react-router` definition needs some cleaning to do, @erkieh don't hesitate to send a new PR with the proposed changes.",
        "createdAt" : "2017-06-23T14:51:11Z",
        "updatedAt" : "2017-06-23T14:51:11Z",
        "lastEditedBy" : "61ca2aa1-fedf-49fb-a74c-f7b3d1973024",
        "tags" : [
        ]
      }
    ],
    "commit" : "09caa6e446e383e4bdff0ed4cf1c7bb48592f145",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +63,67 @@export interface RouteProps {\n  location?: H.Location;\n  component?: React.SFC<RouteComponentProps<any> | undefined> | React.ComponentClass<RouteComponentProps<any> | undefined>;\n  render?: ((props: RouteComponentProps<any>) => React.ReactNode);\n  children?: ((props: RouteComponentProps<any>) => React.ReactNode | React.ReactNode);"
  },
  {
    "id" : "0eb57b45-4400-4e97-879e-0e089022dba2",
    "prId" : 21329,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/21329#pullrequestreview-101011564",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf0e0a3f-4878-46ce-bd14-a096bbe66c75",
        "parentId" : null,
        "authorId" : "0a67fd49-8b41-42a0-9d85-8a4ba0bfcc90",
        "body" : "I have ran into an issue with this change and would be interested to get your thoughts @Grmiade: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/24070\r\n\r\nSeparately, do you know why the old type definition didn't work? It seems like it should. If you provide the generic explicitly, it works as expected. Perhaps it's a bug with TypeScript's generic inference? I filed a TypeScript bug here: https://github.com/Microsoft/TypeScript/issues/21964",
        "createdAt" : "2018-03-04T15:19:36Z",
        "updatedAt" : "2018-03-04T15:19:36Z",
        "lastEditedBy" : "0a67fd49-8b41-42a0-9d85-8a4ba0bfcc90",
        "tags" : [
        ]
      },
      {
        "id" : "9a9c6ccb-f037-45f7-9a4b-14408c209593",
        "parentId" : "bf0e0a3f-4878-46ce-bd14-a096bbe66c75",
        "authorId" : "ac717c9b-aea5-4642-9615-2fe73c2a616e",
        "body" : "We wanted to fix this issue https://github.com/DefinitelyTyped/DefinitelyTyped/issues/17181\r\nAnd make the function `withRouter` smarter. No need to provide explicit type. It can be inferred.\r\nThe typings becomes more safe. But indeed, you found a bug with the `Omit` definition.",
        "createdAt" : "2018-03-04T16:24:26Z",
        "updatedAt" : "2018-03-04T16:24:27Z",
        "lastEditedBy" : "ac717c9b-aea5-4642-9615-2fe73c2a616e",
        "tags" : [
        ]
      },
      {
        "id" : "c3b42c4b-b3dd-4636-a278-80aa09e555b1",
        "parentId" : "bf0e0a3f-4878-46ce-bd14-a096bbe66c75",
        "authorId" : "0a67fd49-8b41-42a0-9d85-8a4ba0bfcc90",
        "body" : "We were also hitting https://github.com/DefinitelyTyped/DefinitelyTyped/issues/17181. Thanks for fixing it!\r\n\r\nI'm still curious why the old definition didn't work. I would have expected the return type to omit the router props, because the generic excludes the router props. Is that what you would expected? However, it seems TypeScript is not inferring the generic to exclude the router props. I filed a TS bug for that hereâ€”please chime in! https://github.com/Microsoft/TypeScript/issues/21964.",
        "createdAt" : "2018-03-04T16:33:24Z",
        "updatedAt" : "2018-03-04T16:33:24Z",
        "lastEditedBy" : "0a67fd49-8b41-42a0-9d85-8a4ba0bfcc90",
        "tags" : [
        ]
      },
      {
        "id" : "9bdb2164-2ffb-43f3-8e81-b8539799440b",
        "parentId" : "bf0e0a3f-4878-46ce-bd14-a096bbe66c75",
        "authorId" : "ac717c9b-aea5-4642-9615-2fe73c2a616e",
        "body" : "```typescript\r\ninterface TOwnProps extends RouteComponentProps<any> {\r\n    username: string;\r\n}\r\n\r\nconst ComponentFunction = (props: TOwnProps) => (\r\n    <h2>Welcome {props.username} on {props.location.pathname}</h2>\r\n);\r\n\r\nconst WithRouterComponentFunction = withRouter(ComponentFunction);\r\n// withRouter<TOwnProps>(component: React.ComponentType<RouteComponentProps<any> & TOwnProps>): React.ComponentClass<TOwnProps>\r\n```\r\n\r\n #17181 issue appears when `TOwnProps ` already includes RouteComponentProps because the returned component includes RouteComponentProps too.\r\n\r\nIndeed Typescript is not inferring the generic to exclude the router props. Bug or miss-feature, I don't know :/",
        "createdAt" : "2018-03-04T16:45:57Z",
        "updatedAt" : "2018-03-04T16:45:57Z",
        "lastEditedBy" : "ac717c9b-aea5-4642-9615-2fe73c2a616e",
        "tags" : [
        ]
      }
    ],
    "commit" : "2689bb29faffaadc9ed58958cf3f21eaf535e235",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +105,109 @@\nexport function matchPath<P>(pathname: string, props: RouteProps): match<P> | null;\nexport function withRouter<P extends RouteComponentProps<any>>(component: React.ComponentType<P>): React.ComponentClass<Omit<P, keyof RouteComponentProps<any>>>;\n\n// decorator signature"
  }
]