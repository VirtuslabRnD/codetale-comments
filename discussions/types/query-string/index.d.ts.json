[
  {
    "id" : "c7e7806d-bea5-4be8-98d8-f11351b4b08e",
    "prId" : 29395,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/29395#pullrequestreview-163519213",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f339fba-2c8e-403e-8bdc-88ff7a0bfacc",
        "parentId" : null,
        "authorId" : "e2be0bab-e409-477a-9d24-b8370882f5d0",
        "body" : "What is the use case for the `undefined` possibility? Is this to catch e.g. an empty query string? I'm not sure it's necessary to have that, but it may be worth adding a test case to validate this use case.",
        "createdAt" : "2018-10-10T16:44:22Z",
        "updatedAt" : "2018-10-10T16:44:22Z",
        "lastEditedBy" : "e2be0bab-e409-477a-9d24-b8370882f5d0",
        "tags" : [
        ]
      },
      {
        "id" : "ff3377da-beef-454d-ba7e-8e9ee86ef23a",
        "parentId" : "3f339fba-2c8e-403e-8bdc-88ff7a0bfacc",
        "authorId" : "3e06a1a2-2ba8-4094-b973-c7dd43cb6c2f",
        "body" : "This gets around what I feel like is an inconsistency in TypeScript. Here's an illustration:\r\n\r\nThe object `{a: 'hi'}` fits into the type `{[key: string]: string}`. However that type represents \"an object whose values at all string indices is a string\". This is not true -- only the value at `'a'` is a string. The returned value at all other indices is `undefined`.\r\n\r\nThis is something that TypeScript thinks is correct but will error at runtime:\r\n\r\n```ts\r\nlet obj: {[key: string]: string} = {a: 'hi'};\r\nobj['b'].length // Uncaught TypeError: Cannot read property 'length' of undefined\r\n```\r\n\r\nIf we instead used the type `{[key: string}: string | undefined}`, we will get a static error for the above.",
        "createdAt" : "2018-10-10T18:35:54Z",
        "updatedAt" : "2018-11-29T07:17:08Z",
        "lastEditedBy" : "3e06a1a2-2ba8-4094-b973-c7dd43cb6c2f",
        "tags" : [
        ]
      },
      {
        "id" : "24e66388-55d5-40c7-b72a-9854d31c54fd",
        "parentId" : "3f339fba-2c8e-403e-8bdc-88ff7a0bfacc",
        "authorId" : "3e06a1a2-2ba8-4094-b973-c7dd43cb6c2f",
        "body" : "Here's a more relevant example:\r\n\r\n```ts\r\nimport queryString from \"query-string\";\r\nlet params = queryString.parse(\"a=1\");\r\nparams['b'].length\r\n```\r\n\r\nThis will error at runtime without `| undefined`. It will be a static type error with `| undefined`.",
        "createdAt" : "2018-10-10T18:41:06Z",
        "updatedAt" : "2018-10-10T18:43:30Z",
        "lastEditedBy" : "3e06a1a2-2ba8-4094-b973-c7dd43cb6c2f",
        "tags" : [
        ]
      },
      {
        "id" : "4b2a2d71-3362-4aee-b312-8c17bbc21bc5",
        "parentId" : "3f339fba-2c8e-403e-8bdc-88ff7a0bfacc",
        "authorId" : "e2be0bab-e409-477a-9d24-b8370882f5d0",
        "body" : "Interesting. Makes sense to me, thanks.",
        "createdAt" : "2018-10-10T19:17:01Z",
        "updatedAt" : "2018-10-10T19:17:01Z",
        "lastEditedBy" : "e2be0bab-e409-477a-9d24-b8370882f5d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d4bffaf41e505107f2c6b03b1932406badaeadf",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +19,23 @@\nexport interface OutputParams {\n  [key: string]: string | string[] | undefined;\n}\n"
  }
]