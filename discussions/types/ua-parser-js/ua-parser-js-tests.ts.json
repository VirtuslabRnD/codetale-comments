[
  {
    "id" : "c94bc13d-f439-4296-995b-3cc0f5f9cf05",
    "prId" : 52901,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52901#pullrequestreview-658069406",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee6a0e83-edfe-490a-a2ec-da5b4bab8fd1",
        "parentId" : null,
        "authorId" : "9a332c8f-67b1-4bf4-a3f8-1b247ce32336",
        "body" : "@BendingBender Thank you for working on this!\r\n\r\nI’m not sure if I’m reading this correctly, but wouldn’t this break backward compatibility with existing code like `const parser: UAParser = new UAParser()`?\r\nCould for example `declare type UAParser = UAParserInstance;` coexist with `declare const UAParser` in .d.ts?",
        "createdAt" : "2021-05-12T14:11:30Z",
        "updatedAt" : "2021-05-12T14:11:31Z",
        "lastEditedBy" : "9a332c8f-67b1-4bf4-a3f8-1b247ce32336",
        "tags" : [
        ]
      },
      {
        "id" : "b4151f9a-f403-42db-a0b9-802a19c7cf36",
        "parentId" : "ee6a0e83-edfe-490a-a2ec-da5b4bab8fd1",
        "authorId" : "b020629e-b52b-403a-98c4-dd5d98f3aa6b",
        "body" : "Yeah, you're right, fixed this.",
        "createdAt" : "2021-05-12T15:53:22Z",
        "updatedAt" : "2021-05-12T15:53:22Z",
        "lastEditedBy" : "b020629e-b52b-403a-98c4-dd5d98f3aa6b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9da5a3e37a0ac2858149341598bdb09d93e110a7",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +53,57 @@const uaString = \"ownbrowser/1.3\";\nconst ownBrowser = [[/(ownbrowser)\\/([\\w\\.]+)/i], [UAParser.BROWSER.NAME, UAParser.BROWSER.VERSION]];\nnew UAParser({ browser: ownBrowser }); // $ExpectType UAParserInstance\nnew UAParser(uaString, { browser: ownBrowser }); // $ExpectType UAParserInstance\nUAParser({ browser: ownBrowser }); // $ExpectType IResult"
  }
]