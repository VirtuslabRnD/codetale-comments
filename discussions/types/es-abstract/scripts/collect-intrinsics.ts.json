[
  {
    "id" : "6b6f325c-c793-4805-b7eb-103ed3ec4c96",
    "prId" : 45117,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/45117#pullrequestreview-421473841",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b647441-81d5-4f5b-ac6b-665903793dd3",
        "parentId" : null,
        "authorId" : "f20e512d-d787-45a8-a000-96a979941658",
        "body" : "```suggestion\r\n    '%ArrayIteratorPrototype%': 'IterableIterator<unknown>',\r\n```",
        "createdAt" : "2020-05-29T22:49:56Z",
        "updatedAt" : "2020-05-31T08:40:54Z",
        "lastEditedBy" : "f20e512d-d787-45a8-a000-96a979941658",
        "tags" : [
        ]
      },
      {
        "id" : "3f7fb19f-cf2b-454a-b16f-17703a038bd8",
        "parentId" : "8b647441-81d5-4f5b-ac6b-665903793dd3",
        "authorId" : "e5209397-2510-4745-aef6-1632dc787392",
        "body" : "I’d rather keep this as is, because `Array.prototype` is typed as `any[]`, it also makes the `%ArrayIteratorPrototype.next%` method simpler to deal with.",
        "createdAt" : "2020-05-31T08:44:35Z",
        "updatedAt" : "2020-05-31T08:44:36Z",
        "lastEditedBy" : "e5209397-2510-4745-aef6-1632dc787392",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b6455205cd09c065a42d8ae4d68ea5394e09e22",
    "line" : 188,
    "diffHunk" : "@@ -1,1 +186,190 @@    },\n    '%ArrayBufferPrototype%': override,\n    '%ArrayIteratorPrototype%': 'IterableIterator<any>',\n    '%ArrayPrototype%': 'typeof Array.prototype',\n    '%ArrayProto_entries%': 'typeof Array.prototype.entries',"
  },
  {
    "id" : "fb1edaf9-069d-49e0-9445-30cac40fe110",
    "prId" : 45333,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/45333#pullrequestreview-427561691",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23469d93-2337-4c2a-966b-05eb1904c9bf",
        "parentId" : null,
        "authorId" : "f20e512d-d787-45a8-a000-96a979941658",
        "body" : "if the type for this is available why not just use the package?",
        "createdAt" : "2020-06-09T18:59:11Z",
        "updatedAt" : "2020-06-09T19:00:00Z",
        "lastEditedBy" : "f20e512d-d787-45a8-a000-96a979941658",
        "tags" : [
        ]
      },
      {
        "id" : "18f249b1-c8a7-4baf-bb33-7f2134906ba4",
        "parentId" : "23469d93-2337-4c2a-966b-05eb1904c9bf",
        "authorId" : "e5209397-2510-4745-aef6-1632dc787392",
        "body" : "Because **DefinitelyTyped** doesn’t have it as a dependency.",
        "createdAt" : "2020-06-09T20:04:44Z",
        "updatedAt" : "2020-06-09T20:04:45Z",
        "lastEditedBy" : "e5209397-2510-4745-aef6-1632dc787392",
        "tags" : [
        ]
      },
      {
        "id" : "5bfed4f8-a1df-4fd7-baea-78c1decd866e",
        "parentId" : "23469d93-2337-4c2a-966b-05eb1904c9bf",
        "authorId" : "f20e512d-d787-45a8-a000-96a979941658",
        "body" : "It could add it tho, it’s just a dev dep",
        "createdAt" : "2020-06-09T21:33:40Z",
        "updatedAt" : "2020-06-09T21:33:40Z",
        "lastEditedBy" : "f20e512d-d787-45a8-a000-96a979941658",
        "tags" : [
        ]
      }
    ],
    "commit" : "38de1b335608e8daf6765c0976f485777250dafc",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +10,14 @@const { getOwnPropertyDescriptor: $gOPD } = Reflect;\nconst { getOwnPropertyNames: $gOPN } = Object;\nconst hasOwn = Function.prototype.call.bind(Object.prototype.hasOwnProperty) as typeof import('has');\n\nfunction isObject(value: unknown): value is object {"
  },
  {
    "id" : "ecbe096d-eabf-4c77-8636-d005c63931d4",
    "prId" : 50426,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/50426#pullrequestreview-564809727",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44c5cbfc-3ae2-4f63-b05d-3d9fd8f1cf1f",
        "parentId" : null,
        "authorId" : "f20e512d-d787-45a8-a000-96a979941658",
        "body" : "can the types for GetIntrinsic in es-abstract not refer to the get-intrinsic types, rather than having to generate them in two places?",
        "createdAt" : "2021-01-06T16:56:38Z",
        "updatedAt" : "2021-01-09T14:17:21Z",
        "lastEditedBy" : "f20e512d-d787-45a8-a000-96a979941658",
        "tags" : [
        ]
      },
      {
        "id" : "099cd2a7-9ab4-481b-b610-623df4875ec2",
        "parentId" : "44c5cbfc-3ae2-4f63-b05d-3d9fd8f1cf1f",
        "authorId" : "e5209397-2510-4745-aef6-1632dc787392",
        "body" : "Currently, this defines the types for `es‑abstract@1.17.x`, but `es‑abstract` only uses `get‑intrinsic` since `es‑abstract@1.18.x‑*`, which is a pre‑release version, and AFAIK, **DefinitelyTyped** doesn’t support creating types for pre‑release versions.\r\n\r\n---\r\n\r\nBut if you’re talking about `scripts/intrinsics‑data.ts`, then that could probably be improved.",
        "createdAt" : "2021-01-09T13:44:05Z",
        "updatedAt" : "2021-01-09T14:17:21Z",
        "lastEditedBy" : "e5209397-2510-4745-aef6-1632dc787392",
        "tags" : [
        ]
      },
      {
        "id" : "dece2260-3698-4bbf-a6d7-a987b1dc7ea5",
        "parentId" : "44c5cbfc-3ae2-4f63-b05d-3d9fd8f1cf1f",
        "authorId" : "e5209397-2510-4745-aef6-1632dc787392",
        "body" : "Also, `@types/es‑abstract` supports **TypeScript 3.8**, but `@types/get‑intrinsic` requires **TypeScript 3.9+**.",
        "createdAt" : "2021-01-09T14:15:50Z",
        "updatedAt" : "2021-01-09T14:17:21Z",
        "lastEditedBy" : "e5209397-2510-4745-aef6-1632dc787392",
        "tags" : [
        ]
      },
      {
        "id" : "acd9a56d-cc73-4345-b771-edf883849d1e",
        "parentId" : "44c5cbfc-3ae2-4f63-b05d-3d9fd8f1cf1f",
        "authorId" : "f20e512d-d787-45a8-a000-96a979941658",
        "body" : "The first point makes sense to me; altho it shouldn’t be hard to make the two packages require the same typescript version.",
        "createdAt" : "2021-01-09T15:27:55Z",
        "updatedAt" : "2021-01-09T15:27:55Z",
        "lastEditedBy" : "f20e512d-d787-45a8-a000-96a979941658",
        "tags" : [
        ]
      },
      {
        "id" : "edf11d2c-aed8-4daf-91fd-d8276b4c7fea",
        "parentId" : "44c5cbfc-3ae2-4f63-b05d-3d9fd8f1cf1f",
        "authorId" : "e5209397-2510-4745-aef6-1632dc787392",
        "body" : "@ljharb\r\n> it shouldn’t be hard to make the two packages require the same typescript version.\r\n\r\nI’d rather not do that in a patch release.",
        "createdAt" : "2021-01-09T20:47:08Z",
        "updatedAt" : "2021-01-09T20:47:08Z",
        "lastEditedBy" : "e5209397-2510-4745-aef6-1632dc787392",
        "tags" : [
        ]
      }
    ],
    "commit" : "c98b90f4868cc345b7615eacefa7429ba983efce",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +4,8 @@import fs = require('fs');\n\nimport { BASE_INTRINSICS, LEGACY_ALIASES, BASE_INTRINSIC_DATA } from './intrinsics-data';\nimport { IntrinsicsWriter } from '../../get-intrinsic/scripts/intrinsics-writer';\n"
  }
]