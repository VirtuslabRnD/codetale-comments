[
  {
    "id" : "feb6f890-9ab8-4c35-8072-4406a9c97a23",
    "prId" : 23421,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/23421#pullrequestreview-93971033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75738598-1cf1-40fd-a303-dedcc93ba84a",
        "parentId" : null,
        "authorId" : "2ea00645-e66a-4a5e-9df0-8cba1476b86a",
        "body" : "According to [the doc](https://github.com/quilljs/delta/#methods-15), priority is only on `transform(other: DeltaStatic, priority: boolean)`.",
        "createdAt" : "2018-02-05T12:20:46Z",
        "updatedAt" : "2018-02-05T12:21:50Z",
        "lastEditedBy" : "2ea00645-e66a-4a5e-9df0-8cba1476b86a",
        "tags" : [
        ]
      }
    ],
    "commit" : "be9eaa2cd6dc415f98551c1aa5e9d8b1e01ec1f0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +85,89 @@    diff(other: DeltaStatic, index?: number): DeltaStatic;\n    eachLine(predicate: (line: DeltaStatic, attributes: StringMap, idx: number) => any, newline?: string): DeltaStatic;\n    transform(index: number, priority?: boolean): number;\n    transform(other: DeltaStatic, priority: boolean): DeltaStatic;\n    transformPosition(index: number, priority?: boolean): number;"
  },
  {
    "id" : "352e5002-9f54-4368-abdf-b99f58382c50",
    "prId" : 23421,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/23421#pullrequestreview-93974163",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d97395ec-8bd5-4c15-8eeb-2e5d2ef39a05",
        "parentId" : null,
        "authorId" : "2ea00645-e66a-4a5e-9df0-8cba1476b86a",
        "body" : "According to this [doc](https://github.com/quilljs/delta/#transformposition), priority is only on transform(other: DeltaStatic, priority: boolean), not on `transformPosition(index)`",
        "createdAt" : "2018-02-05T12:21:36Z",
        "updatedAt" : "2018-02-05T12:21:50Z",
        "lastEditedBy" : "2ea00645-e66a-4a5e-9df0-8cba1476b86a",
        "tags" : [
        ]
      },
      {
        "id" : "3c4001c5-b604-4ac2-8bc2-0999bea12c85",
        "parentId" : "d97395ec-8bd5-4c15-8eeb-2e5d2ef39a05",
        "authorId" : "ad019e76-1eb8-4883-bde7-fa6571f6dae2",
        "body" : "updating docs as well: https://github.com/quilljs/delta/pull/21",
        "createdAt" : "2018-02-05T12:33:56Z",
        "updatedAt" : "2018-02-05T12:33:56Z",
        "lastEditedBy" : "ad019e76-1eb8-4883-bde7-fa6571f6dae2",
        "tags" : [
        ]
      }
    ],
    "commit" : "be9eaa2cd6dc415f98551c1aa5e9d8b1e01ec1f0",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +87,91 @@    transform(index: number, priority?: boolean): number;\n    transform(other: DeltaStatic, priority: boolean): DeltaStatic;\n    transformPosition(index: number, priority?: boolean): number;\n}\n"
  },
  {
    "id" : "cc12b6af-85f2-4fa2-a631-2f3408874797",
    "prId" : 26698,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/26698#pullrequestreview-131976415",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16415fc2-e3cf-4627-a756-233ad1ae570f",
        "parentId" : null,
        "authorId" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "body" : "so here is the line of code which supports this: https://github.com/quilljs/quill/blob/5eac092fc43311e8cc40cc3a3507ced09aafbe1b/core/quill.js#L459\r\n\r\nthere's no documentation about it as far as i can see, and they don't have it in their own test cases. but it has been like that for a few years (at least), so i guess this is fine.",
        "createdAt" : "2018-06-26T11:41:00Z",
        "updatedAt" : "2018-06-26T11:52:22Z",
        "lastEditedBy" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d36dce6aaee0b1a3440dc1322eaa4c05822ec0f",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +177,181 @@    formatText(index: number, length: number, formats: StringMap, source?: Sources): DeltaStatic;\n    formatText(range: RangeStatic, format: string, value: any, source?: Sources): DeltaStatic;\n    formatText(range: RangeStatic, formats: StringMap, source?: Sources): DeltaStatic;\n    getFormat(range?: RangeStatic): StringMap;\n    getFormat(index: number, length?: number): StringMap;"
  },
  {
    "id" : "a635cdfa-654d-4439-9355-fc9b2477592c",
    "prId" : 27830,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/27830#pullrequestreview-143444536",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a88952bb-02ff-49f6-894a-6a32b239de49",
        "parentId" : null,
        "authorId" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "body" : "am i looking at the wrong place [here](https://github.com/quilljs/quill/blob/4a6bd6a0fb77078bb280764259a78f7f28254e4a/modules/clipboard.js#L79)?\r\n\r\nthe method signature shows it takes an object with properties `html` and/or `text`. Not a string or `Blot` (unless a blot has those properties...).\r\n\r\npresumably it somehow worked when you tried it so maybe im in the wrong part of the source?",
        "createdAt" : "2018-08-03T14:54:14Z",
        "updatedAt" : "2018-08-03T14:54:15Z",
        "lastEditedBy" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "tags" : [
        ]
      },
      {
        "id" : "f2bea981-0662-4f52-b902-aa119d0db743",
        "parentId" : "a88952bb-02ff-49f6-894a-6a32b239de49",
        "authorId" : "96bac716-c18a-45ab-bb0d-bb85c9d922d1",
        "body" : "yes, the last release is 1.3.6, I think you are looking at the master branch\r\n\r\nhttps://github.com/quilljs/quill/blob/96e38e92637b75b907579d0cc1b201920aebe38c/modules/clipboard.js#L75",
        "createdAt" : "2018-08-06T03:33:17Z",
        "updatedAt" : "2018-08-06T03:35:30Z",
        "lastEditedBy" : "96bac716-c18a-45ab-bb0d-bb85c9d922d1",
        "tags" : [
        ]
      },
      {
        "id" : "5df5769d-3f88-4254-a3da-6e809cb1aab4",
        "parentId" : "a88952bb-02ff-49f6-894a-6a32b239de49",
        "authorId" : "96bac716-c18a-45ab-bb0d-bb85c9d922d1",
        "body" : "1.3.6  is the latest release \r\nhttps://github.com/quilljs/quill/releases",
        "createdAt" : "2018-08-06T03:34:45Z",
        "updatedAt" : "2018-08-06T03:34:45Z",
        "lastEditedBy" : "96bac716-c18a-45ab-bb0d-bb85c9d922d1",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebf27af86a41fdee82332c24b6301d35a4dd5560",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +44,48 @@\nexport interface ClipboardStatic {\n    convert(html: string|Blot): DeltaStatic;\n    addMatcher(selectorOrNodeType: string|number, callback: (node: any, delta: DeltaStatic) => DeltaStatic): void;\n    dangerouslyPasteHTML(html: string, source?: Sources): void;"
  },
  {
    "id" : "b9153a93-8e1e-4066-a6bc-2813212cd3bf",
    "prId" : 52841,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52841#pullrequestreview-655100497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b6b31f5-7650-4cbd-9402-0f9b097d93c5",
        "parentId" : null,
        "authorId" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "body" : "whats the additional `null` for? people should really be passing a value or not setting it ideally",
        "createdAt" : "2021-05-09T17:29:43Z",
        "updatedAt" : "2021-05-10T23:30:15Z",
        "lastEditedBy" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "tags" : [
        ]
      },
      {
        "id" : "b9153a52-0a5a-4766-88ff-fe8dd230bda9",
        "parentId" : "6b6b31f5-7650-4cbd-9402-0f9b097d93c5",
        "authorId" : "7c7fb74c-0ca8-424a-9e9d-8586b16e2995",
        "body" : "I added null because, in the quill keyboard module, a modifier being set as null means that it can be active or not for the keyboard event to be fired. I.e., meaning that, for example, the shortKey can be true or false. For example:\r\n```\r\n// Only b with no modifier will trigger\r\nquill.keyboard.addBinding({ key: 'B' }, handler);\r\n\r\n// Only shift+b will trigger\r\nquill.keyboard.addBinding({ key: 'B', shiftKey: true }, handler);\r\n\r\n// Either b or shift+b will trigger\r\nquill.keyboard.addBinding({ key: 'B', shiftKey: null }, handler);\r\n```",
        "createdAt" : "2021-05-09T17:45:13Z",
        "updatedAt" : "2021-05-10T23:30:15Z",
        "lastEditedBy" : "7c7fb74c-0ca8-424a-9e9d-8586b16e2995",
        "tags" : [
        ]
      },
      {
        "id" : "a60f3576-5bc7-4ca7-9005-12d97fba5df2",
        "parentId" : "6b6b31f5-7650-4cbd-9402-0f9b097d93c5",
        "authorId" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "body" : "Very nice, totally wasn't aware of that usage. Good catch",
        "createdAt" : "2021-05-09T18:02:36Z",
        "updatedAt" : "2021-05-10T23:30:15Z",
        "lastEditedBy" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d0f1be8db47c84fd208b666a4cf510454457d35",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +31,35 @@export interface Key {\n    key: string | number;\n    shortKey?: boolean | null;\n    shiftKey?: boolean | null;\n    altKey?: boolean | null;"
  }
]