[
  {
    "id" : "15f81bcb-bd17-4699-a42f-9a143c6dc611",
    "prId" : 15380,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/15380#pullrequestreview-32310459",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "028ac79d-f9a2-4bde-a840-e5af49bb677f",
        "parentId" : null,
        "authorId" : "e929e58b-7da7-478a-b5e2-df11c1e40e26",
        "body" : "It should be 'url' not 'urls'.\r\nSee: https://developer.chrome.com/extensions/events",
        "createdAt" : "2017-04-12T08:34:06Z",
        "updatedAt" : "2017-04-12T08:34:29Z",
        "lastEditedBy" : "e929e58b-7da7-478a-b5e2-df11c1e40e26",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ab99add41868f9c1b6823b3d2658960916ef385",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +7191,7195 @@        types?: string[];\n        /** A list of URLs or URL patterns. Requests that cannot match any of the URLs will be filtered out. */\n        urls: string[];\n \n        /** Optional. */"
  },
  {
    "id" : "08354d07-a811-4fe9-92de-f2f686c4c3bd",
    "prId" : 19836,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/19836#pullrequestreview-65177225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ebd5a6f-c7a5-4dff-baa2-05cdcf1969e9",
        "parentId" : null,
        "authorId" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "body" : "`string | [number, number, number, number]`",
        "createdAt" : "2017-09-25T23:49:30Z",
        "updatedAt" : "2017-09-26T10:58:19Z",
        "lastEditedBy" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "tags" : [
        ]
      },
      {
        "id" : "4b09046b-d11d-4b58-989e-59bc69a4088a",
        "parentId" : "5ebd5a6f-c7a5-4dff-baa2-05cdcf1969e9",
        "authorId" : "d79306c7-b5eb-4b93-8b2f-804e6ec26df6",
        "body" : "`browserAction.ColorArray` itself seems to be standardized as a part of WebExtension API.\r\nhttps://developer.mozilla.org/en-US/Add-ons/WebExtensions/API/browserAction/ColorArray",
        "createdAt" : "2017-09-26T11:06:21Z",
        "updatedAt" : "2017-09-26T11:06:21Z",
        "lastEditedBy" : "d79306c7-b5eb-4b93-8b2f-804e6ec26df6",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa5e56ba973634b0d5434052000f45666d899df0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +437,441 @@    interface BadgeBackgroundColorDetails {\n        /** An array of four integers in the range [0,255] that make up the RGBA color of the badge. For example, opaque red is [255, 0, 0, 255]. Can also be a string with a CSS value, with opaque red being #FF0000 or #F00. */\n        color: string | ColorArray;\n        /** Optional. Limits the change to when a particular tab is selected. Automatically resets when the tab is closed.  */\n        tabId?: number;"
  },
  {
    "id" : "f4376fa8-cc84-4c9c-b9f1-7486a2e0ae35",
    "prId" : 33166,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/33166#pullrequestreview-205540277",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34b01578-9bbc-44a7-9988-00c19f28c75a",
        "parentId" : null,
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "It might be nice to capture this distinction in a test.",
        "createdAt" : "2019-02-20T01:40:00Z",
        "updatedAt" : "2019-02-20T01:40:00Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbc764162f06f1a6010007f978edb1bbce6c0159",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +5247,5251 @@    export interface PortMessageEvent extends chrome.events.Event<(message: any, port: Port) => void> { }\n\n    export interface ExtensionMessageEvent extends chrome.events.Event<(message: any, sender: MessageSender, sendResponse: (response?: any) => void) => void> { }\n\n    export interface ExtensionConnectEvent extends chrome.events.Event<(port: Port) => void> { }"
  },
  {
    "id" : "22b3ce3c-3c64-44aa-88e9-3e87a2476b31",
    "prId" : 34480,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/34480#pullrequestreview-223050467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91b31d6b-6f3c-4ced-8963-20aa284775e9",
        "parentId" : null,
        "authorId" : "2531a87c-f154-41e2-835e-eb508281d3db",
        "body" : "```suggestion\r\n    export interface RequestUpdateCheckStatus = 'throttled' | 'no_update' | 'update_available';\r\n```",
        "createdAt" : "2019-04-04T22:45:07Z",
        "updatedAt" : "2019-04-04T22:46:56Z",
        "lastEditedBy" : "2531a87c-f154-41e2-835e-eb508281d3db",
        "tags" : [
        ]
      },
      {
        "id" : "489474b4-3aba-4993-bf5b-5de8fa9f6fda",
        "parentId" : "91b31d6b-6f3c-4ced-8963-20aa284775e9",
        "authorId" : "bcc8d27b-314f-443d-aab8-2bc410509f27",
        "body" : "The suggested change results in syntax error. This is not an interface. A variable with this new type has to be a `string`, not an `object`.\r\n\r\nAlso, there are 4 more instances of `type` in this file.",
        "createdAt" : "2019-04-04T23:27:52Z",
        "updatedAt" : "2019-04-04T23:27:52Z",
        "lastEditedBy" : "bcc8d27b-314f-443d-aab8-2bc410509f27",
        "tags" : [
        ]
      },
      {
        "id" : "e83c5c78-43d7-4375-aa80-2e6f3b78b218",
        "parentId" : "91b31d6b-6f3c-4ced-8963-20aa284775e9",
        "authorId" : "2531a87c-f154-41e2-835e-eb508281d3db",
        "body" : "Makes sense. Thanks for the clarification. ",
        "createdAt" : "2019-04-04T23:41:59Z",
        "updatedAt" : "2019-04-04T23:42:06Z",
        "lastEditedBy" : "2531a87c-f154-41e2-835e-eb508281d3db",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f99e1248ce829e8ce88db1c4e7959a4f8a66dd2",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +5244,5248 @@\n    /** Result of the update check. */\n    export type RequestUpdateCheckStatus = 'throttled' | 'no_update' | 'update_available';\n\n    export interface PortDisconnectEvent extends chrome.events.Event<(port: Port) => void> { }"
  },
  {
    "id" : "9319e1e3-3165-40aa-b192-3a1d5593fab2",
    "prId" : 39053,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/39053#pullrequestreview-300602416",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2210aa99-41c1-4bab-9ae9-248c08ab997f",
        "parentId" : null,
        "authorId" : "6549ad5f-a5e7-4f6f-bcb8-34d003d90b68",
        "body" : "The documentation for the Chrome APIs is copied verbatim from the official documentation pages written by Google. I am hesistant to changing that. If Google changes their documentation to use gender-neutral pronouns, those changes will propagate down to these type definitions.",
        "createdAt" : "2019-10-11T10:27:43Z",
        "updatedAt" : "2019-10-14T10:04:41Z",
        "lastEditedBy" : "6549ad5f-a5e7-4f6f-bcb8-34d003d90b68",
        "tags" : [
        ]
      },
      {
        "id" : "d092a914-a34e-4239-9a0e-7a8ea22d9f0a",
        "parentId" : "2210aa99-41c1-4bab-9ae9-248c08ab997f",
        "authorId" : "18c027af-679b-4d45-92f2-c50fe11a75b6",
        "body" : "The docs seem to already have the gender-neutral wording proposed: https://developer.chrome.com/extensions/platformKeys",
        "createdAt" : "2019-10-11T10:36:47Z",
        "updatedAt" : "2019-10-14T10:04:41Z",
        "lastEditedBy" : "18c027af-679b-4d45-92f2-c50fe11a75b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "07658ff006ace9ffd6290842bbd27b978b4624d3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +4923,4927 @@\n    /**\n     * This function filters from a list of client certificates the ones that are known to the platform, match request and for which the extension has permission to access the certificate and its private key. If interactive is true, the user is presented a dialog where they can select from matching certificates and grant the extension access to the certificate. The selected/filtered client certificates will be passed to callback.\n     * @param callback The callback parameter should be a function that looks like this:\n     * function(array of Match matches) {...};"
  },
  {
    "id" : "c558c644-4a24-4605-9b26-e3a38a209221",
    "prId" : 44739,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/44739#pullrequestreview-416445330",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7ba7d30-84d2-412d-875f-75ee88656db2",
        "parentId" : null,
        "authorId" : "e30eb346-917e-4cfa-b6d7-7688bc735d2e",
        "body" : "From the document it seems \r\n`Either an ImageData object or a dictionary {size -> ImageData} representing an icon to be set` so should this be `constructor (options?: ImageData | { [size: string]: ImageData })` instead",
        "createdAt" : "2020-05-21T19:44:02Z",
        "updatedAt" : "2020-05-21T19:44:05Z",
        "lastEditedBy" : "e30eb346-917e-4cfa-b6d7-7688bc735d2e",
        "tags" : [
        ]
      },
      {
        "id" : "4ea99091-2acc-48b4-82a6-ef6e680b1a3c",
        "parentId" : "b7ba7d30-84d2-412d-875f-75ee88656db2",
        "authorId" : "e44ed036-f1a7-4630-b954-cef4a555ad08",
        "body" : "The dictionary `{size -> ImageData}` is still passed in as a part of the options object:\r\n```\r\nnew SetIcon({\r\nimageData: {\r\n'16': iconImageData\r\n}\r\n});\r\n```",
        "createdAt" : "2020-05-21T19:54:04Z",
        "updatedAt" : "2020-05-21T19:54:04Z",
        "lastEditedBy" : "e44ed036-f1a7-4630-b954-cef4a555ad08",
        "tags" : [
        ]
      }
    ],
    "commit" : "1740d02e11c19f9f8e20f21f5d3401459ea9eaaa",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1598,1602 @@    /** Declarative event action that changes the icon of the page action while the corresponding conditions are met. */\n    export class SetIcon {\n        constructor (options?: {\n            imageData?: ImageData | {[size: string]: ImageData}\n        })"
  },
  {
    "id" : "a09feec2-6724-4c8b-a8e6-ef99dca509de",
    "prId" : 45580,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/45580#pullrequestreview-435181415",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae6693fc-6d90-4850-85fa-1ccc8a55536f",
        "parentId" : null,
        "authorId" : "311261d9-d8b3-4328-a6ac-d262546790d5",
        "body" : "How about adding [tsdoc](https://github.com/microsoft/tsdoc) comment with `@since`?\r\nThe document you gave says this property is since Chrome 62.\r\n\r\nTry to write like this\r\nhttps://github.com/DefinitelyTyped/DefinitelyTyped/blob/e5fcac4bf0d1706e4a3cc64fc1ff84e78184b59b/types/chrome/index.d.ts#L1297L1300\r\n",
        "createdAt" : "2020-06-20T06:12:11Z",
        "updatedAt" : "2020-06-22T18:37:05Z",
        "lastEditedBy" : "311261d9-d8b3-4328-a6ac-d262546790d5",
        "tags" : [
        ]
      },
      {
        "id" : "75dad7cb-87b6-4a61-8c2f-23f6a7c55ce5",
        "parentId" : "ae6693fc-6d90-4850-85fa-1ccc8a55536f",
        "authorId" : "b5e2a403-95c5-41af-bb3f-233ffe291f56",
        "body" : "Added the comment as per your suggestion using the format suggested, similar to the `visible` property above in `createProperties`.",
        "createdAt" : "2020-06-22T18:40:14Z",
        "updatedAt" : "2020-06-22T18:40:15Z",
        "lastEditedBy" : "b5e2a403-95c5-41af-bb3f-233ffe291f56",
        "tags" : [
        ]
      }
    ],
    "commit" : "64e635913f746b45124cde8c06e171ec6f7a989a",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1200,1204 @@         * Whether the item is visible in the menu.\n         */\n        visible?: boolean;\n    }\n"
  },
  {
    "id" : "40289448-ec70-48ff-af1b-0f6d81667051",
    "prId" : 45683,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/45683#pullrequestreview-443381506",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25ce62bd-bd02-4fc6-9c39-7269e1c048a8",
        "parentId" : null,
        "authorId" : "311261d9-d8b3-4328-a6ac-d262546790d5",
        "body" : "```suggestion\r\n     * @since Chrome 85.\r\n     */\r\n```",
        "createdAt" : "2020-07-06T20:21:30Z",
        "updatedAt" : "2020-07-07T08:05:39Z",
        "lastEditedBy" : "311261d9-d8b3-4328-a6ac-d262546790d5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c30d4f4b08e7a8c0bc742670520942bbd33c490b",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +5117,5121 @@     * Optional parameter privateKey: Might be null if this extension does not have access to it.\n     * @since Chrome 85.\n     */\n    export function getKeyPairBySpki(publicKeySpkiDer: ArrayBuffer, parameters: Object, callback: (publicKey: CryptoKey, privateKey: CryptoKey | null) => void): void;\n    /** An implementation of WebCrypto's  SubtleCrypto that allows crypto operations on keys of client certificates that are available to this extension. */"
  },
  {
    "id" : "a4ebeb70-2634-4dbb-acf7-8a17181ee6a7",
    "prId" : 45683,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/45683#pullrequestreview-443381506",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6933cb8-fb70-4bb5-901c-10a37b95399c",
        "parentId" : null,
        "authorId" : "311261d9-d8b3-4328-a6ac-d262546790d5",
        "body" : "```suggestion\r\n * Important: This API works only on Chrome OS.\r\n * @since Chrome 85.\r\n */\r\n```",
        "createdAt" : "2020-07-06T20:36:25Z",
        "updatedAt" : "2020-07-07T08:05:39Z",
        "lastEditedBy" : "311261d9-d8b3-4328-a6ac-d262546790d5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c30d4f4b08e7a8c0bc742670520942bbd33c490b",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +2596,2600 @@ * Important: This API works only on Chrome OS.\n * @since Chrome 85.\n */\ndeclare namespace chrome.enterprise.networkingAttributes {\n  export interface NetworkDetails {"
  },
  {
    "id" : "cd13cbda-3fd6-426a-9d86-62e2734046f8",
    "prId" : 52379,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52379#pullrequestreview-639587441",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9739cb49-9a00-4d7c-a750-d0df980af31d",
        "parentId" : null,
        "authorId" : "97603b77-eca8-48f1-98dd-b1740ff90854",
        "body" : "I think `filter ?: MatchedRulesFilter` over `| undefined` for optional fields? Otherwise we need to explicitly pass undefined for filter, instead of being able to just pass in a callback with no filter.",
        "createdAt" : "2021-04-18T23:19:54Z",
        "updatedAt" : "2021-04-20T07:13:17Z",
        "lastEditedBy" : "97603b77-eca8-48f1-98dd-b1740ff90854",
        "tags" : [
        ]
      },
      {
        "id" : "65adbc1f-58f3-4219-b455-96750da31c46",
        "parentId" : "9739cb49-9a00-4d7c-a750-d0df980af31d",
        "authorId" : "4d3b4ab1-ded4-46c6-bcb2-d03d8b4c171f",
        "body" : "I can't do that, because `callback` is mandatory - TS wouldn't let me place an optional parameter before it.\r\n\r\nDo you have another suggestion maybe for this or should we merge this as is?",
        "createdAt" : "2021-04-19T19:39:17Z",
        "updatedAt" : "2021-04-20T07:13:17Z",
        "lastEditedBy" : "4d3b4ab1-ded4-46c6-bcb2-d03d8b4c171f",
        "tags" : [
        ]
      },
      {
        "id" : "b66996a2-a576-4ebd-9581-052d8b5bb390",
        "parentId" : "9739cb49-9a00-4d7c-a750-d0df980af31d",
        "authorId" : "97603b77-eca8-48f1-98dd-b1740ff90854",
        "body" : "Ah okay that makes sense, merging as is sounds good.",
        "createdAt" : "2021-04-19T23:35:06Z",
        "updatedAt" : "2021-04-20T07:13:17Z",
        "lastEditedBy" : "97603b77-eca8-48f1-98dd-b1740ff90854",
        "tags" : [
        ]
      },
      {
        "id" : "69c1dc39-9e94-4cfc-9ed1-28a562977d47",
        "parentId" : "9739cb49-9a00-4d7c-a750-d0df980af31d",
        "authorId" : "c86a120c-9970-46ba-b104-9c6bf5f9c7cf",
        "body" : "You should overload the function definition\r\n```js\r\nexport function getMatchedRules(filter: MatchedRulesFilter, callback: (details: RulesMatchedDetails) => void): void;\r\n\r\nexport function getMatchedRules(callback: (details: RulesMatchedDetails) => void): void;\r\n```",
        "createdAt" : "2021-04-20T02:01:48Z",
        "updatedAt" : "2021-04-20T07:13:17Z",
        "lastEditedBy" : "c86a120c-9970-46ba-b104-9c6bf5f9c7cf",
        "tags" : [
        ]
      },
      {
        "id" : "d3ff83bd-8fb3-47c3-bcc6-7af06eb044b7",
        "parentId" : "9739cb49-9a00-4d7c-a750-d0df980af31d",
        "authorId" : "4d3b4ab1-ded4-46c6-bcb2-d03d8b4c171f",
        "body" : "done. will wait for the checks to conclude and merge it afterwards.",
        "createdAt" : "2021-04-20T07:14:05Z",
        "updatedAt" : "2021-04-20T07:14:06Z",
        "lastEditedBy" : "4d3b4ab1-ded4-46c6-bcb2-d03d8b4c171f",
        "tags" : [
        ]
      },
      {
        "id" : "e74463ed-2688-44c8-b287-1a33b8dc1c8b",
        "parentId" : "9739cb49-9a00-4d7c-a750-d0df980af31d",
        "authorId" : "4d3b4ab1-ded4-46c6-bcb2-d03d8b4c171f",
        "body" : "whoops, now it needs another owner approval. :-)",
        "createdAt" : "2021-04-20T07:15:33Z",
        "updatedAt" : "2021-04-20T07:15:34Z",
        "lastEditedBy" : "4d3b4ab1-ded4-46c6-bcb2-d03d8b4c171f",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4275858a023737ee9d928889b9a8831d143cf43",
    "line" : 488,
    "diffHunk" : "@@ -1,1 +10252,10256 @@     * This can happen for multiple reasons, such as insufficient permissions, or exceeding the quota.\n     */\n    export function getMatchedRules(filter: MatchedRulesFilter | undefined, callback: (details: RulesMatchedDetails) => void): void;\n\n    export function getMatchedRules(callback: (details: RulesMatchedDetails) => void): void;"
  }
]