[
  {
    "id" : "009a6e61-1f87-4b57-b9ed-85502a3c0db7",
    "prId" : 33262,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/33262#pullrequestreview-208723187",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8fa835c-53de-4613-a59d-963b1add085d",
        "parentId" : null,
        "authorId" : "52d9e311-ec9f-46c5-9283-2c3fa48af7a3",
        "body" : "Is this misaligned or is it just me?",
        "createdAt" : "2019-02-27T18:45:34Z",
        "updatedAt" : "2019-02-27T18:45:34Z",
        "lastEditedBy" : "52d9e311-ec9f-46c5-9283-2c3fa48af7a3",
        "tags" : [
        ]
      },
      {
        "id" : "c26a37d5-86e9-4a2d-bd47-f2acfeb4c799",
        "parentId" : "b8fa835c-53de-4613-a59d-963b1add085d",
        "authorId" : "2c5d1d07-c984-4315-b2f5-d4a1ad40184a",
        "body" : "I don't see it as misaligned in my view.",
        "createdAt" : "2019-02-27T19:15:33Z",
        "updatedAt" : "2019-02-27T19:15:33Z",
        "lastEditedBy" : "2c5d1d07-c984-4315-b2f5-d4a1ad40184a",
        "tags" : [
        ]
      },
      {
        "id" : "2c61fa70-8e58-4f5a-90ba-cdf197c845ec",
        "parentId" : "b8fa835c-53de-4613-a59d-963b1add085d",
        "authorId" : "52d9e311-ec9f-46c5-9283-2c3fa48af7a3",
        "body" : "¯\\\\_(ツ)_/¯",
        "createdAt" : "2019-02-27T19:34:07Z",
        "updatedAt" : "2019-02-27T19:34:07Z",
        "lastEditedBy" : "52d9e311-ec9f-46c5-9283-2c3fa48af7a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "58e30dafa7f9d6c7a2bfe067c6eac4ce4c674ba6",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +82,86 @@         * <ul>\n         *      <li>input</li>\n\t     *      <li>number</li>\n         *      <li>confirm</li>\n         *      <li>list</li>"
  },
  {
    "id" : "4f4542f1-4508-484e-9846-98364024bac1",
    "prId" : 35489,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/35489#pullrequestreview-237938675",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edd3467d-5dd6-4749-89b4-d75f6360a163",
        "parentId" : null,
        "authorId" : "dbd78eb1-67cf-43c8-b5e4-1b819c3b9d96",
        "body" : "All question types share these types.",
        "createdAt" : "2019-05-15T16:34:12Z",
        "updatedAt" : "2019-05-20T20:57:17Z",
        "lastEditedBy" : "dbd78eb1-67cf-43c8-b5e4-1b819c3b9d96",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf60f8fe21f89428faa02bbba620377197e34b24",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +73,77 @@    }\n\n    interface QuestionCommon<A> {\n        /**\n         * The name to use when storing the answer in the answers hash."
  },
  {
    "id" : "449247bb-f566-48e0-b440-bbe09a435ada",
    "prId" : 35489,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/35489#pullrequestreview-239811044",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee0ec170-01c4-40f9-ad43-e3e67cfc6c0b",
        "parentId" : null,
        "authorId" : "dbd78eb1-67cf-43c8-b5e4-1b819c3b9d96",
        "body" : "These question types are meant to be picked.",
        "createdAt" : "2019-05-15T16:34:47Z",
        "updatedAt" : "2019-05-20T20:57:17Z",
        "lastEditedBy" : "dbd78eb1-67cf-43c8-b5e4-1b819c3b9d96",
        "tags" : [
        ]
      },
      {
        "id" : "de9c22ce-eef4-4c59-a3e5-e2ba656fd8ec",
        "parentId" : "ee0ec170-01c4-40f9-ad43-e3e67cfc6c0b",
        "authorId" : "8183156f-889f-4da8-b7f9-ed393a2e2917",
        "body" : "Although specific type string is defined and given in specific Question interfaces, still not understand why not state `type` property existing in the generic `QuestionCommon` interface",
        "createdAt" : "2019-05-21T03:17:53Z",
        "updatedAt" : "2019-05-21T03:27:27Z",
        "lastEditedBy" : "8183156f-889f-4da8-b7f9-ed393a2e2917",
        "tags" : [
        ]
      },
      {
        "id" : "1f9e8a21-ec5e-4bf7-9b69-e458063b0528",
        "parentId" : "ee0ec170-01c4-40f9-ad43-e3e67cfc6c0b",
        "authorId" : "dbd78eb1-67cf-43c8-b5e4-1b819c3b9d96",
        "body" : "The `QuestionCommon` interface is only for props that are shared between ALL question types. This `QuestionOptions` interface is only meant to be picked from, (e.g., `Pick<T, 'choices'>`). The reason I wrote it this way is so that these props only have to be written once, but they can be picked for relevant question types that need them, complete with the TSDoc comments.",
        "createdAt" : "2019-05-21T03:36:50Z",
        "updatedAt" : "2019-05-21T03:36:50Z",
        "lastEditedBy" : "dbd78eb1-67cf-43c8-b5e4-1b819c3b9d96",
        "tags" : [
        ]
      },
      {
        "id" : "269abf32-3a4c-4a50-89df-24791caf580e",
        "parentId" : "ee0ec170-01c4-40f9-ad43-e3e67cfc6c0b",
        "authorId" : "dbd78eb1-67cf-43c8-b5e4-1b819c3b9d96",
        "body" : "The props in this interface are used across more than one question type, but not all question types. Does that make sense?",
        "createdAt" : "2019-05-21T03:38:04Z",
        "updatedAt" : "2019-05-21T03:38:04Z",
        "lastEditedBy" : "dbd78eb1-67cf-43c8-b5e4-1b819c3b9d96",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf60f8fe21f89428faa02bbba620377197e34b24",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +106,110 @@    }\n\n    interface QuestionOptions<A> {\n        /**\n         * Choices array or a function returning a choices array. If defined as a function,"
  },
  {
    "id" : "1091a20d-8c42-45ed-890c-3fd296286895",
    "prId" : 35489,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/35489#pullrequestreview-239618202",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa254f16-83b1-4c44-9b89-c7b757938a6b",
        "parentId" : null,
        "authorId" : "0269be90-6d98-4bbe-80a0-6b073ff61601",
        "body" : "Please consider to add a generic parameter to `ChoiceOption`, `Choice`, `Choices` and `ChoiceType` rather than adding a generic parameter to a callbacks and constructors.\r\nThis would make it ways better compatible with `QuestionOptions<A>` and more comfortable to use, I think.",
        "createdAt" : "2019-05-20T05:38:42Z",
        "updatedAt" : "2019-05-20T20:57:17Z",
        "lastEditedBy" : "0269be90-6d98-4bbe-80a0-6b073ff61601",
        "tags" : [
        ]
      },
      {
        "id" : "d7406715-98b6-41d4-ac59-23135896555e",
        "parentId" : "fa254f16-83b1-4c44-9b89-c7b757938a6b",
        "authorId" : "dbd78eb1-67cf-43c8-b5e4-1b819c3b9d96",
        "body" : "A bit out of scope, but I'll do it.",
        "createdAt" : "2019-05-20T17:00:03Z",
        "updatedAt" : "2019-05-20T20:57:17Z",
        "lastEditedBy" : "dbd78eb1-67cf-43c8-b5e4-1b819c3b9d96",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf60f8fe21f89428faa02bbba620377197e34b24",
    "line" : 327,
    "diffHunk" : "@@ -1,1 +359,363 @@            key?: string;\n            checked?: boolean;\n            disabled?: string | (<A>(answers: A) => any);\n        }\n"
  },
  {
    "id" : "725334ab-b4ba-4238-bc84-fa6d8871fa24",
    "prId" : 35489,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/35489#pullrequestreview-239836826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46cf16b2-72e5-4bf3-a1f4-602f05bd17c6",
        "parentId" : null,
        "authorId" : "8183156f-889f-4da8-b7f9-ed393a2e2917",
        "body" : "Why not type it as `Questions<A extends Answers>` directly?",
        "createdAt" : "2019-05-21T03:01:17Z",
        "updatedAt" : "2019-05-21T03:27:27Z",
        "lastEditedBy" : "8183156f-889f-4da8-b7f9-ed393a2e2917",
        "tags" : [
        ]
      },
      {
        "id" : "159119b8-2b2a-4bcb-81c8-55fa0bed0394",
        "parentId" : "46cf16b2-72e5-4bf3-a1f4-602f05bd17c6",
        "authorId" : "dbd78eb1-67cf-43c8-b5e4-1b819c3b9d96",
        "body" : "Just wanted to provide a default so you can say `Questions` w/o having to write `Questions<A>`, but I see now how that doesn't make a lot of sense, because nobody would have empty answers, right? Is that your logic?",
        "createdAt" : "2019-05-21T03:31:30Z",
        "updatedAt" : "2019-05-21T03:31:30Z",
        "lastEditedBy" : "dbd78eb1-67cf-43c8-b5e4-1b819c3b9d96",
        "tags" : [
        ]
      },
      {
        "id" : "307e3b32-afd6-4101-b906-3a78d172dad9",
        "parentId" : "46cf16b2-72e5-4bf3-a1f4-602f05bd17c6",
        "authorId" : "dbd78eb1-67cf-43c8-b5e4-1b819c3b9d96",
        "body" : "Anyway, the default of `= Answers` was pre-existing, so maybe we'd do well to leave it alone?",
        "createdAt" : "2019-05-21T03:34:32Z",
        "updatedAt" : "2019-05-21T03:34:32Z",
        "lastEditedBy" : "dbd78eb1-67cf-43c8-b5e4-1b819c3b9d96",
        "tags" : [
        ]
      },
      {
        "id" : "5183a501-664e-48d0-8599-088777771f38",
        "parentId" : "46cf16b2-72e5-4bf3-a1f4-602f05bd17c6",
        "authorId" : "0269be90-6d98-4bbe-80a0-6b073ff61601",
        "body" : "Using `Answers` as generic parameter by default makes it easier do write \"quick'n'dirty\" code - it might also be helpful if you extend an untyped module which asks questions using inquirer.\r\n\r\nYou might want to fetch the answers even if you don't really know what answers you might expect.",
        "createdAt" : "2019-05-21T05:13:43Z",
        "updatedAt" : "2019-05-21T05:13:43Z",
        "lastEditedBy" : "0269be90-6d98-4bbe-80a0-6b073ff61601",
        "tags" : [
        ]
      },
      {
        "id" : "ad12c21d-12e2-47d2-becb-67e8bc282ad8",
        "parentId" : "46cf16b2-72e5-4bf3-a1f4-602f05bd17c6",
        "authorId" : "8183156f-889f-4da8-b7f9-ed393a2e2917",
        "body" : "I got it perfectly now. Thanks sincerely @jedmao @manuth ",
        "createdAt" : "2019-05-21T05:55:56Z",
        "updatedAt" : "2019-05-21T05:55:56Z",
        "lastEditedBy" : "8183156f-889f-4da8-b7f9-ed393a2e2917",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf60f8fe21f89428faa02bbba620377197e34b24",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +21,25 @@    type Prompts = { [name: string]: prompts.Base };\n    type ChoiceType<A> = string | objects.ChoiceOption<A> | objects.Separator;\n    type Questions<A extends Answers = Answers> =\n        | Question<A>\n        | Question<A>[]"
  }
]