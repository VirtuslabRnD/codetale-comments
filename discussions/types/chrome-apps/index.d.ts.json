[
  {
    "id" : "0e49d76a-f775-49f2-843a-efef938e8b17",
    "prId" : 25964,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/25964#pullrequestreview-126590819",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06c7fcd4-348b-464e-86c2-892deedc4411",
        "parentId" : null,
        "authorId" : "cd520ad7-6558-4c5c-8e5d-0bc693c5bc90",
        "body" : "This is nit. Would be nice throughout to have the docstrings between 80-100 char line length. Makes it easier to read when looking at the raw source instead of relying on line wrapping from what ever application you use. ",
        "createdAt" : "2018-06-06T23:29:15Z",
        "updatedAt" : "2018-06-06T23:36:21Z",
        "lastEditedBy" : "cd520ad7-6558-4c5c-8e5d-0bc693c5bc90",
        "tags" : [
        ]
      }
    ],
    "commit" : "73a28dd5087adb2af84301a5cc787b07b47bedd2",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@////////////////////\n/**\n * Use the chrome.accessibilityFeatures API to manage Chrome's accessibility features. This API relies on the ChromeSetting prototype of the type API for getting and setting individual accessibility features. In order to get feature states the extension must request accessibilityFeatures.read permission. For modifying feature state, the extension needs accessibilityFeatures.modify permission. Note that accessibilityFeatures.modify does not imply accessibilityFeatures.read permission.\n * @since Availability: Since Chrome 37.\n * Permissions: \"accessibilityFeatures.read\" (For read access); \"accessibilityFeatures.modify\" (For modifications; Note that accessibilityFeatures.modify does not imply accessibilityFeatures.read permission.)"
  },
  {
    "id" : "9de65383-d439-4452-ad57-5452e5db0cd3",
    "prId" : 39053,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/39053#pullrequestreview-300602402",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2310094-4df0-4d1c-a730-9e24a0b6138e",
        "parentId" : null,
        "authorId" : "6549ad5f-a5e7-4f6f-bcb8-34d003d90b68",
        "body" : "The documentation for the Chrome APIs is copied verbatim from the official documentation pages written by Google. I am hesistant to changing that. If Google changes their documentation to use gender-neutral pronouns, those changes will propagate down to these type definitions.",
        "createdAt" : "2019-10-11T10:28:26Z",
        "updatedAt" : "2019-10-14T10:04:41Z",
        "lastEditedBy" : "6549ad5f-a5e7-4f6f-bcb8-34d003d90b68",
        "tags" : [
        ]
      },
      {
        "id" : "70c1aace-eb34-4b91-ac3f-d4ab1debfaa5",
        "parentId" : "d2310094-4df0-4d1c-a730-9e24a0b6138e",
        "authorId" : "18c027af-679b-4d45-92f2-c50fe11a75b6",
        "body" : "The docs seem to already have the typo fix proposed: https://developer.chrome.com/apps/tags/webview#partition",
        "createdAt" : "2019-10-11T10:36:45Z",
        "updatedAt" : "2019-10-14T10:04:41Z",
        "lastEditedBy" : "18c027af-679b-4d45-92f2-c50fe11a75b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "07658ff006ace9ffd6290842bbd27b978b4624d3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +11633,11637 @@     * the webview will use a persistent storage partition available to all guests in the app with the same storage partition ID.\n     * If the ID is unset or if there is no 'persist': prefix, the webview will use an in-memory storage partition.\n     * This value can only be modified before the first navigation, since the storage partition of an active renderer process cannot change.\n     * Subsequent attempts to modify the value will fail with a DOM exception.\n     * By assigning the same partition ID, multiple webviews can share the same storage partition."
  }
]