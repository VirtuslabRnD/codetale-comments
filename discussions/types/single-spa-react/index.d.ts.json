[
  {
    "id" : "99529046-60f6-4de7-89af-4c7c76fa5f37",
    "prId" : 32327,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/32327#pullrequestreview-194435673",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ec1c47c-74e6-4226-80a7-a9a7df2667fe",
        "parentId" : null,
        "authorId" : "76ede4a8-dcaa-422c-971c-883292a98aee",
        "body" : "Specifying props and state as `any` here avoids the error you get when using `strictFunctionTypes` in tsconfig.json and passing a component with custom props as `rootComponent`\r\n(I tried with a generic at first, but dtslint warned me that it was a useless generic only used once -- so instead I just loosened the types of props and state to be more permissive)",
        "createdAt" : "2019-01-21T03:32:21Z",
        "updatedAt" : "2019-01-21T03:32:21Z",
        "lastEditedBy" : "76ede4a8-dcaa-422c-971c-883292a98aee",
        "tags" : [
        ]
      }
    ],
    "commit" : "16f000c1707493b3d9a2ace4a5009daa2f8d892f",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +18,22 @@        React: typeof React;\n        ReactDOM: typeof ReactDOM;\n        rootComponent?: React.ComponentClass<any, any>;\n        loadRootComponent?: () => Promise<React.ComponentClass<any, any>>;\n        domElementGetter?: () => Element;"
  }
]