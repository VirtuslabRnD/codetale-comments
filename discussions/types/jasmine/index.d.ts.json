[
  {
    "id" : "2401b623-8b4a-4ce6-a458-66c366270c6c",
    "prId" : 16321,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/16321#pullrequestreview-36539676",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d9868b4-2231-4211-877c-87f86397f86c",
        "parentId" : null,
        "authorId" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "body" : "the top level intersection is sufficient. so: \r\n`T &  { [k in keyof T]: Spy; }`",
        "createdAt" : "2017-05-04T18:50:19Z",
        "updatedAt" : "2017-05-05T15:35:53Z",
        "lastEditedBy" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "tags" : [
        ]
      },
      {
        "id" : "181ebf6a-12fd-4e1d-a146-932710d0fb9c",
        "parentId" : "4d9868b4-2231-4211-877c-87f86397f86c",
        "authorId" : "d61e073b-b76d-4fdc-b679-53f17e371702",
        "body" : "Done, thanks.",
        "createdAt" : "2017-05-05T15:36:41Z",
        "updatedAt" : "2017-05-05T15:36:41Z",
        "lastEditedBy" : "d61e073b-b76d-4fdc-b679-53f17e371702",
        "tags" : [
        ]
      }
    ],
    "commit" : "9235e1c5b9eb3b16355d327626f4051fc2cd09ef",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +515,519 @@    }\n\n    type SpyObj<T> = T & {\n      [k in keyof T]: Spy;\n    }"
  },
  {
    "id" : "06a3dc1c-0d1a-4fec-8245-3d3163323ea0",
    "prId" : 21308,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/21308#pullrequestreview-76209267",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "493dd226-f249-4df3-8240-4d9b072786a8",
        "parentId" : null,
        "authorId" : "d61e073b-b76d-4fdc-b679-53f17e371702",
        "body" : "`Expected<ArrayLike<T> | ArrayContaining<T>>` ?",
        "createdAt" : "2017-11-13T17:10:54Z",
        "updatedAt" : "2017-11-13T19:00:55Z",
        "lastEditedBy" : "d61e073b-b76d-4fdc-b679-53f17e371702",
        "tags" : [
        ]
      },
      {
        "id" : "64bd9ff6-da1b-4ad1-a1c1-006b467530b1",
        "parentId" : "493dd226-f249-4df3-8240-4d9b072786a8",
        "authorId" : "4fad2b80-6130-4b11-bf94-15be7a7a230f",
        "body" : "as mentioned in the linked issue #21305 the `ArrayLikeMatchers` did not accept the type returned by `jasmine. arrayContaining()`\r\n\r\nbecause of that I added the `ArrayContaining<T>` type",
        "createdAt" : "2017-11-13T18:52:03Z",
        "updatedAt" : "2017-11-13T19:00:55Z",
        "lastEditedBy" : "4fad2b80-6130-4b11-bf94-15be7a7a230f",
        "tags" : [
        ]
      }
    ],
    "commit" : "53908383354eeca8d41486acd56db56c3bdbe402",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +450,454 @@\n    interface ArrayLikeMatchers<T> extends Matchers<ArrayLike<T>> {\n        toBe(expected: Expected<ArrayLike<T>> | ArrayContaining<T>, expectationFailOutput?: any): boolean;\n        toEqual(expected: Expected<ArrayLike<T>> | ArrayContaining<T>, expectationFailOutput?: any): boolean;\n        toContain(expected: Expected<T>, expectationFailOutput?: any): boolean;"
  },
  {
    "id" : "6f56237c-190e-40cd-adf3-67f03f6b13d0",
    "prId" : 21515,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/21515#pullrequestreview-76555514",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "173ab06d-4437-4da5-8bd5-65df7a1f7eb1",
        "parentId" : null,
        "authorId" : "4fad2b80-6130-4b11-bf94-15be7a7a230f",
        "body" : "in jasmine 2.8 the `nothing()` matcher was added \r\n\r\nthis change makes the `actual` parameter optional as the usage is `expect().nothing`\r\n\r\nsee https://github.com/jasmine/jasmine/issues/1221\r\n\r\nthis was reason for this change\r\n\r\nwe'll need to support both uses",
        "createdAt" : "2017-11-14T17:57:59Z",
        "updatedAt" : "2017-11-14T18:58:02Z",
        "lastEditedBy" : "4fad2b80-6130-4b11-bf94-15be7a7a230f",
        "tags" : [
        ]
      },
      {
        "id" : "a30505c6-4956-433e-8d75-98a7e1cded90",
        "parentId" : "173ab06d-4437-4da5-8bd5-65df7a1f7eb1",
        "authorId" : "0f93df09-dd0a-45bb-9fe3-4b2a521071a4",
        "body" : "done",
        "createdAt" : "2017-11-14T18:59:23Z",
        "updatedAt" : "2017-11-14T18:59:23Z",
        "lastEditedBy" : "0f93df09-dd0a-45bb-9fe3-4b2a521071a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "66d4e5113f395f7b52343240f8bb899985a53d2d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +89,93 @@ * @param actual Actual computed value to test expectations against.\n */\ndeclare function expect<T>(actual: T): jasmine.Matchers<T>;\n\n/**"
  },
  {
    "id" : "6a065c2c-3dba-4098-b54b-fc884a148c25",
    "prId" : 23094,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/23094#pullrequestreview-90789894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5b51356-9a23-4c25-a148-c69743e5a353",
        "parentId" : null,
        "authorId" : "4fad2b80-6130-4b11-bf94-15be7a7a230f",
        "body" : "as the documentation states that you can call it either without any argument or with both `files` and `filterString` I'd propose to add a overload with the parameters both set and one without \r\n\r\n```\r\nexecute(): any;\r\nexecute(files: string[], filterString: string): any;\r\n```\r\n\r\nalthough I could not find any reference to `filterString` in the actual code\r\nhttps://github.com/jasmine/jasmine/blob/master/src/core/Env.js#L262",
        "createdAt" : "2018-01-21T18:07:05Z",
        "updatedAt" : "2018-01-21T18:13:31Z",
        "lastEditedBy" : "4fad2b80-6130-4b11-bf94-15be7a7a230f",
        "tags" : [
        ]
      },
      {
        "id" : "ef832aa3-920b-4771-8449-62aa052f9bbf",
        "parentId" : "e5b51356-9a23-4c25-a148-c69743e5a353",
        "authorId" : "ed831a19-2cfe-4b8d-807b-77d2d5eab394",
        "body" : "I agree with the proposed change.\r\n\r\nI thought these were typings definitions for https://github.com/jasmine/jasmine-npm (where both parameters do have an effect), since it says on the [README.md](https://github.com/DefinitelyTyped/DefinitelyTyped) of DefinitelyTyped\r\n>For an NPM package \"foo\", typings for it will be at \"(at)types/foo\"\r\n\r\nand you install jasmine-npm on npm by typing\r\n```\r\nnpm install jasmine\r\n```\r\n\r\nSee also https://www.npmjs.com/package/jasmine.\r\nThis is kind of confusing.",
        "createdAt" : "2018-01-21T22:51:49Z",
        "updatedAt" : "2018-01-21T22:51:49Z",
        "lastEditedBy" : "ed831a19-2cfe-4b8d-807b-77d2d5eab394",
        "tags" : [
        ]
      },
      {
        "id" : "0c209305-8b42-4fda-ba13-89a63552208e",
        "parentId" : "e5b51356-9a23-4c25-a148-c69743e5a353",
        "authorId" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "body" : "So what are these typings for if not for the npm package `jasmine`?",
        "createdAt" : "2018-01-22T21:44:49Z",
        "updatedAt" : "2018-01-22T21:44:50Z",
        "lastEditedBy" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "tags" : [
        ]
      },
      {
        "id" : "e139705e-5c4a-4951-b201-8dc6f147142b",
        "parentId" : "e5b51356-9a23-4c25-a148-c69743e5a353",
        "authorId" : "4fad2b80-6130-4b11-bf94-15be7a7a230f",
        "body" : "@andy-ms The npm package is called `jasmine` so these are the correct typings for that package.\r\nBut the repository on Github is called [jasmine-npm](https://github.com/jasmine/jasmine-npm) \r\n\r\nThe core module [jasmine](https://github.com/jasmine/jasmine) is not available on npm at all, therefore the confusion\r\n\r\n@Engineer2B linked to the correct repository and the changes are correct, I simply looked in  the wrong repository",
        "createdAt" : "2018-01-23T11:30:34Z",
        "updatedAt" : "2018-01-23T11:30:56Z",
        "lastEditedBy" : "4fad2b80-6130-4b11-bf94-15be7a7a230f",
        "tags" : [
        ]
      }
    ],
    "commit" : "de0f8491e989cca1aaa56ec2618e4a4882af7e3a",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +719,723 @@        addSpecFiles(files: string[]): void;\n        configureDefaultReporter(options: any, ...args: any[]): void;\n        execute(files?: string[], filterString?: string): any;\n        exitCodeCompletion(passed: any): void;\n        loadConfig(config: any): void;"
  },
  {
    "id" : "6cfc1466-957e-4863-b211-f8d2848a91bc",
    "prId" : 29325,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/29325#pullrequestreview-160554512",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36588277-66ae-48a5-9a4f-62ec87c5fb26",
        "parentId" : null,
        "authorId" : "a49d602a-0752-4c5c-b14f-0c0d5b77898f",
        "body" : "Should the same change be applied here (i.e. `methodNames: SpyObjMethodNames<T>`)?",
        "createdAt" : "2018-10-02T03:08:05Z",
        "updatedAt" : "2018-10-02T03:08:23Z",
        "lastEditedBy" : "a49d602a-0752-4c5c-b14f-0c0d5b77898f",
        "tags" : [
        ]
      }
    ],
    "commit" : "824c766de06887bcef02070852e9b2b65d1328a8",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +149,153 @@\n    function createSpyObj(methodNames: SpyObjMethodNames): any;\n    function createSpyObj<T>(methodNames: SpyObjMethodNames): SpyObj<T>;\n\n    function pp(value: any): string;"
  },
  {
    "id" : "52f509e2-7dff-4487-821c-7d1a1d53d840",
    "prId" : 30646,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/30646#pullrequestreview-183631798",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f173128-481f-43fe-ba28-f1aa1d9185ac",
        "parentId" : null,
        "authorId" : "30823ba3-06da-47e0-abdc-8196b7fa743a",
        "body" : "* `T` is for what the Promise should resolve to.\r\n* `U` is for what the Promise should reject to. This is only used in `toBeRejectedWith`.",
        "createdAt" : "2018-11-19T17:22:53Z",
        "updatedAt" : "2018-12-18T22:22:12Z",
        "lastEditedBy" : "30823ba3-06da-47e0-abdc-8196b7fa743a",
        "tags" : [
        ]
      },
      {
        "id" : "710cd53d-639f-483b-a539-259342c32bd7",
        "parentId" : "5f173128-481f-43fe-ba28-f1aa1d9185ac",
        "authorId" : "6284694e-861f-4f30-a033-680d797370a3",
        "body" : "Users will have to specify `U` manually if they want to use it unfortunately... Inference will always result in `any` given the signature of `expectAsync`.",
        "createdAt" : "2018-12-11T11:37:14Z",
        "updatedAt" : "2018-12-18T22:22:12Z",
        "lastEditedBy" : "6284694e-861f-4f30-a033-680d797370a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "3bdd1cabc5f97ea74f2d9786b8525d7bba874bd1",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +504,508 @@    }\n\n    interface AsyncMatchers<T, U> {\n\n        /**"
  },
  {
    "id" : "9fa69997-43d8-475f-ab91-ebc3e84ca488",
    "prId" : 49639,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/49639#pullrequestreview-534120993",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ec3a979-b72c-48b3-aee7-5de67e1b05ff",
        "parentId" : null,
        "authorId" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "body" : "Seems like changing the return types of methods to `PromiseLike` actually makes them less easy to use, not more lax.",
        "createdAt" : "2020-11-19T00:49:50Z",
        "updatedAt" : "2020-11-19T00:50:09Z",
        "lastEditedBy" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "tags" : [
        ]
      },
      {
        "id" : "4c3d716a-f822-49b4-a90e-da76f4d3af45",
        "parentId" : "0ec3a979-b72c-48b3-aee7-5de67e1b05ff",
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "So what happened is, when the TS team made the change to remove the ts3.1/ directory and move files outward, some repositories (aka Jasmine typings) had some changes in the outer level index.d.ts that weren't reflected in ts3.1/\r\n\r\nThis is what happened here, you can see the original commit that created these typings in the original post.\r\n\r\nI looked at the source code for Jasmine. It uses Promise.then(success, failure) callback style. I don't see Jasmine using the Promise.then(success).catch(failure) callback style at all.\r\n\r\nI think PromiseLike is fine here.",
        "createdAt" : "2020-11-19T06:44:20Z",
        "updatedAt" : "2020-11-19T06:44:21Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5e5c9885d23e7d1c1ea8f54b53c8283d5f4f856",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +766,770 @@         * @param expectationFailOutput\n         */\n        toBePending(expectationFailOutput?: any): PromiseLike<void>;\n\n        /**"
  },
  {
    "id" : "8862e0b6-5aac-4884-b524-f14b7be31773",
    "prId" : 51520,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/51520#pullrequestreview-603521795",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2683a602-78d1-4f0d-b0e4-d968062eb06e",
        "parentId" : null,
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "Isn't this an integer?",
        "createdAt" : "2021-03-04T00:12:50Z",
        "updatedAt" : "2021-03-04T00:14:42Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      },
      {
        "id" : "ae3cccae-f679-4a8d-bff8-8d9428398815",
        "parentId" : "2683a602-78d1-4f0d-b0e4-d968062eb06e",
        "authorId" : "0426458e-0aa9-48c6-805a-38d39ad43680",
        "body" : "It is typed as `{Int}` in the JSDoc... but it's actually always a string x.x",
        "createdAt" : "2021-03-04T00:23:15Z",
        "updatedAt" : "2021-03-04T00:23:16Z",
        "lastEditedBy" : "0426458e-0aa9-48c6-805a-38d39ad43680",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a010732739c208b7d0539e933b79fd17b991cfc",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +867,871 @@         * The unique id of this spec.\n         */\n        id: string;\n\n        /**"
  },
  {
    "id" : "c6224723-a0a8-4117-a855-1d32cc63d81e",
    "prId" : 51520,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/51520#pullrequestreview-603528265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65826695-a014-400e-822f-3d9ecc7cfd16",
        "parentId" : null,
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "I see that this + L914 are typed as possible nulls, because the Jasmine code initializes this.result to have those fields set to null.\r\nBut in practice, are they always set? Because by the time the spec finishes executing, won't those values exist then?",
        "createdAt" : "2021-03-04T00:14:19Z",
        "updatedAt" : "2021-03-04T00:14:42Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      },
      {
        "id" : "3689e91f-56cf-4ee6-b05a-d780f948cc35",
        "parentId" : "65826695-a014-400e-822f-3d9ecc7cfd16",
        "authorId" : "0426458e-0aa9-48c6-805a-38d39ad43680",
        "body" : "It's always set as a number in specDone(), but it's passed as null to specStarted().\r\n\r\nThese types could be better if we split this interface into a different type for each of {specStarted,specDone,suiteStarted,suiteDone}, but I didn't want to change things that much in this PR.",
        "createdAt" : "2021-03-04T00:26:51Z",
        "updatedAt" : "2021-03-04T00:26:51Z",
        "lastEditedBy" : "0426458e-0aa9-48c6-805a-38d39ad43680",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a010732739c208b7d0539e933b79fd17b991cfc",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +907,911 @@         * The time in ms used by the spec execution, including any before/afterEach.\n         */\n        duration: number | null;\n\n        /**"
  },
  {
    "id" : "d8e6384a-ef58-400a-abf2-357ff526de91",
    "prId" : 51999,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/51999#pullrequestreview-652899777",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fcccf6ff-8b22-4f56-80eb-67440a06fc2f",
        "parentId" : null,
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "I do not see this in https://jasmine.github.io/api/3.7/Env",
        "createdAt" : "2021-05-06T01:42:29Z",
        "updatedAt" : "2021-05-06T02:11:28Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      },
      {
        "id" : "fa1054a8-7d11-4c36-9f53-aa9fe7fb8f69",
        "parentId" : "fcccf6ff-8b22-4f56-80eb-67440a06fc2f",
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "Can you mark this as `@deprecated`? It seems like it's a preexisting type that should no longer exist.",
        "createdAt" : "2021-05-06T01:43:09Z",
        "updatedAt" : "2021-05-06T02:11:28Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      },
      {
        "id" : "1d9586f9-c1d4-48e3-9214-fd0affb96144",
        "parentId" : "fcccf6ff-8b22-4f56-80eb-67440a06fc2f",
        "authorId" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "body" : "https://github.com/jasmine/jasmine/commit/2fc5182ddcdd67456b89c92c2eedbc2443c928c6#diff-46cdc2a30e1879f73f5a62a709840911600e79ff44702785f1fafb4234789c57R1919\r\n\r\nThis is not deprecated",
        "createdAt" : "2021-05-06T01:56:26Z",
        "updatedAt" : "2021-05-06T02:11:28Z",
        "lastEditedBy" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "51219ad8bf7113231fc1ad2268394a082c22ec86",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +484,488 @@    interface Env {\n        addReporter(reporter: CustomReporter): void;\n        allowRespy(allow: boolean): void;\n        clearReporters(): void;\n        configuration(): EnvConfiguration;"
  },
  {
    "id" : "68e74237-b327-4222-bc60-98371ff87332",
    "prId" : 51999,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/51999#pullrequestreview-652899817",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "882bbe37-c72c-47d0-b83a-124d2fe2f162",
        "parentId" : null,
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "Same",
        "createdAt" : "2021-05-06T01:42:40Z",
        "updatedAt" : "2021-05-06T02:11:28Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      },
      {
        "id" : "8f424d7f-ff8b-4f3c-bc66-8f400fad6aed",
        "parentId" : "882bbe37-c72c-47d0-b83a-124d2fe2f162",
        "authorId" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "body" : "https://github.com/jasmine/jasmine/commit/2fc5182ddcdd67456b89c92c2eedbc2443c928c6#diff-46cdc2a30e1879f73f5a62a709840911600e79ff44702785f1fafb4234789c57R1707\r\n\r\nsame",
        "createdAt" : "2021-05-06T01:56:34Z",
        "updatedAt" : "2021-05-06T02:11:28Z",
        "lastEditedBy" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "51219ad8bf7113231fc1ad2268394a082c22ec86",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +488,492 @@        configuration(): EnvConfiguration;\n        configure(configuration: EnvConfiguration): void;\n        execute(runnablesToRun?: Suite[], onComplete?: Func): void;\n        /**\n         * @deprecated Use hideDisabled option in {@link jasmine.Env.configure} instead."
  },
  {
    "id" : "48800734-4ccb-4c23-95f8-5578a235e2a2",
    "prId" : 51999,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/51999#pullrequestreview-652900114",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a10c06f5-7eb5-4639-83cb-5374f74d7d7f",
        "parentId" : null,
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "This isn't in the docs right now nor was it in the old types. Remove?",
        "createdAt" : "2021-05-06T01:43:51Z",
        "updatedAt" : "2021-05-06T02:11:28Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      },
      {
        "id" : "da785d29-4c91-430c-b69b-1ff31d652913",
        "parentId" : "a10c06f5-7eb5-4639-83cb-5374f74d7d7f",
        "authorId" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "body" : "This is a deprecated method. I figured it was best to include it to make the types more accurate.",
        "createdAt" : "2021-05-06T01:57:34Z",
        "updatedAt" : "2021-05-06T02:11:28Z",
        "lastEditedBy" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "51219ad8bf7113231fc1ad2268394a082c22ec86",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +496,500 @@         * @deprecated Check hideDisabled option in {@link jasmine.Env.configuration} instead.\n         */\n        hidingDisabled(): boolean;\n        provideFallbackReporter(reporter: CustomReporter): void;\n        /**"
  },
  {
    "id" : "c5947009-0db7-4135-932f-85c267c7508f",
    "prId" : 51999,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/51999#pullrequestreview-652895041",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72e79a18-8237-4c5d-b439-de5b9e1353ac",
        "parentId" : null,
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "Remove?",
        "createdAt" : "2021-05-06T01:45:18Z",
        "updatedAt" : "2021-05-06T02:11:28Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      }
    ],
    "commit" : "51219ad8bf7113231fc1ad2268394a082c22ec86",
    "line" : 162,
    "diffHunk" : "@@ -1,1 +533,537 @@         * @deprecated Check failFast option in {@link jasmine.Env.configuration} instead.\n         */\n        stoppingOnSpecFailure(): boolean;\n        /**\n         * @deprecated Use oneFailurePerSpec option in {@link jasmine.Env.configure} instead."
  },
  {
    "id" : "c4e9ff64-d963-4aa4-8f41-88b2747bda73",
    "prId" : 51999,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/51999#pullrequestreview-652902798",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da7dd2e5-7b27-4d1d-a04d-fd6fedfccdb8",
        "parentId" : null,
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "This isn't in the docs either.",
        "createdAt" : "2021-05-06T01:45:45Z",
        "updatedAt" : "2021-05-06T02:11:28Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      },
      {
        "id" : "6b60c869-01e9-468e-a683-fee759dc608a",
        "parentId" : "da7dd2e5-7b27-4d1d-a04d-fd6fedfccdb8",
        "authorId" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "body" : "https://github.com/jasmine/jasmine/commit/ce850c472a69b59b10abb24d93b6955e864b078a#diff-46cdc2a30e1879f73f5a62a709840911600e79ff44702785f1fafb4234789c57R1628\r\n\r\nsame",
        "createdAt" : "2021-05-06T02:00:18Z",
        "updatedAt" : "2021-05-06T02:11:28Z",
        "lastEditedBy" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "tags" : [
        ]
      },
      {
        "id" : "cac3d5bf-5910-4094-9209-0edc5c578c44",
        "parentId" : "da7dd2e5-7b27-4d1d-a04d-fd6fedfccdb8",
        "authorId" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "body" : "The docs were added recently so they are in [edge](https://jasmine.github.io/api/edge/Env.html)",
        "createdAt" : "2021-05-06T02:05:45Z",
        "updatedAt" : "2021-05-06T02:11:28Z",
        "lastEditedBy" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "51219ad8bf7113231fc1ad2268394a082c22ec86",
    "line" : 171,
    "diffHunk" : "@@ -1,1 +542,546 @@         */\n        throwingExpectationFailures(): boolean;\n        topSuite(): Suite;\n    }\n"
  },
  {
    "id" : "81a9d8ee-37da-4cd0-bdb8-458de4c17627",
    "prId" : 52002,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52002#pullrequestreview-657218876",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e3c7133-5af8-4c35-b65a-7c370c041bf6",
        "parentId" : null,
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "Is there a test for this? If there is one already please tell me the line number.",
        "createdAt" : "2021-05-11T06:13:20Z",
        "updatedAt" : "2021-05-11T06:23:58Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      },
      {
        "id" : "a7c69caa-f666-42a7-a17b-d55dc8d8ee21",
        "parentId" : "4e3c7133-5af8-4c35-b65a-7c370c041bf6",
        "authorId" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "body" : "https://github.com/UziTech/DefinitelyTyped/blob/d17137c3b880e0e53933e4504d85bf920dbf3c00/types/jasmine/jasmine-tests.ts#L1672-L1706",
        "createdAt" : "2021-05-11T20:48:04Z",
        "updatedAt" : "2021-05-11T20:48:04Z",
        "lastEditedBy" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "db32e08264c0398a122fc21fe254b4edb9e6e656",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +479,483 @@         * @return The pretty-printed value\n         */\n        pp: typeof pp;\n    }\n"
  },
  {
    "id" : "a4bf2d66-0b70-4358-b2d3-583734a1c4d9",
    "prId" : 52002,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52002#pullrequestreview-659119126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d0c8541-a522-42b5-b5bc-a1cb1fb77135",
        "parentId" : null,
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "I agree that the return type should be void, and not boolean.\r\n\r\nHowever, I'm finding that at runtime, I'm able to pass in the expectationFailOutput. I realize this isn't in the docs, so idk if this is just a gap in the documentation?",
        "createdAt" : "2021-05-11T06:19:49Z",
        "updatedAt" : "2021-05-11T06:23:58Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      },
      {
        "id" : "ba2398a8-16cc-4ba5-9e51-b263643fc01c",
        "parentId" : "0d0c8541-a522-42b5-b5bc-a1cb1fb77135",
        "authorId" : "6284694e-861f-4f30-a033-680d797370a3",
        "body" : "It works because of an implementation detail of Jasmine, is discouraged, and is superseded by `.withContext(message)` call. I think that we should either remove this argument or at least mark as `@deprecated` if the usage is high and removal will cause a lot of pain for users...\r\n\r\nSee https://github.com/jasmine/jasmine/issues/641#issuecomment-54736801, https://github.com/jasmine/jasmine/issues/1682#issuecomment-483889422 or https://github.com/jasmine/jasmine/issues/1457#issuecomment-428710508",
        "createdAt" : "2021-05-11T06:33:35Z",
        "updatedAt" : "2021-05-11T06:39:31Z",
        "lastEditedBy" : "6284694e-861f-4f30-a033-680d797370a3",
        "tags" : [
        ]
      },
      {
        "id" : "f2fd29ce-6ca9-46fe-b401-820d9078facb",
        "parentId" : "0d0c8541-a522-42b5-b5bc-a1cb1fb77135",
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "Understood.\r\nSeparate PR please as that one I know will be a pain to merge into my own project. I'll approve it as its own piece.",
        "createdAt" : "2021-05-11T20:40:04Z",
        "updatedAt" : "2021-05-11T20:40:04Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      },
      {
        "id" : "d67fd35b-ffe2-443f-af15-f6cbc063cb3d",
        "parentId" : "0d0c8541-a522-42b5-b5bc-a1cb1fb77135",
        "authorId" : "6284694e-861f-4f30-a033-680d797370a3",
        "body" : "Maybe let's go with deprecation first, so it's easier to upgrade and we don't break the world?",
        "createdAt" : "2021-05-11T21:31:39Z",
        "updatedAt" : "2021-05-11T21:31:39Z",
        "lastEditedBy" : "6284694e-861f-4f30-a033-680d797370a3",
        "tags" : [
        ]
      },
      {
        "id" : "197670db-76c3-4de8-9403-8b692109790a",
        "parentId" : "0d0c8541-a522-42b5-b5bc-a1cb1fb77135",
        "authorId" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "body" : "How do you deprecate a function parameter in typescript?",
        "createdAt" : "2021-05-12T00:42:23Z",
        "updatedAt" : "2021-05-12T00:42:24Z",
        "lastEditedBy" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "tags" : [
        ]
      },
      {
        "id" : "01730272-3480-4079-8906-ed5fca6b0c45",
        "parentId" : "0d0c8541-a522-42b5-b5bc-a1cb1fb77135",
        "authorId" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "body" : "When I try overloading it and deprecating the one with `expectationFailOutput` I get the error\r\n`These overloads can be combined into one signature with an optional parameter.`",
        "createdAt" : "2021-05-12T00:43:52Z",
        "updatedAt" : "2021-05-12T00:43:52Z",
        "lastEditedBy" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "tags" : [
        ]
      },
      {
        "id" : "c9d24d69-fd6d-4475-a09b-2d31f997e62a",
        "parentId" : "0d0c8541-a522-42b5-b5bc-a1cb1fb77135",
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "Honestly don't know.",
        "createdAt" : "2021-05-12T05:45:39Z",
        "updatedAt" : "2021-05-12T05:45:39Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      },
      {
        "id" : "6052349b-1384-4be0-99d0-125033389e39",
        "parentId" : "0d0c8541-a522-42b5-b5bc-a1cb1fb77135",
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "But, if your current approach passes the tests then we'll roll with it.",
        "createdAt" : "2021-05-12T05:47:11Z",
        "updatedAt" : "2021-05-12T05:47:11Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      },
      {
        "id" : "9356fcb6-564b-4967-829a-8bf7c147ce90",
        "parentId" : "0d0c8541-a522-42b5-b5bc-a1cb1fb77135",
        "authorId" : "28aab869-30d5-42f8-8a85-4af7d5854cea",
        "body" : "@UziTech deprecating a parameter is a valid use case for disabling that overload lint rule—please disable it just for that line with a comment, not in tslint.json.",
        "createdAt" : "2021-05-13T16:43:04Z",
        "updatedAt" : "2021-05-13T16:43:05Z",
        "lastEditedBy" : "28aab869-30d5-42f8-8a85-4af7d5854cea",
        "tags" : [
        ]
      },
      {
        "id" : "054a331f-0e16-4784-8358-e36eba445bdd",
        "parentId" : "0d0c8541-a522-42b5-b5bc-a1cb1fb77135",
        "authorId" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "body" : "@andrewbranch How do I do that? Every type if ignore comment I have tried gives a different error.",
        "createdAt" : "2021-05-13T17:01:50Z",
        "updatedAt" : "2021-05-13T17:01:57Z",
        "lastEditedBy" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "tags" : [
        ]
      },
      {
        "id" : "523debf1-cd85-4ad5-9dcd-b1e19d3f3a57",
        "parentId" : "0d0c8541-a522-42b5-b5bc-a1cb1fb77135",
        "authorId" : "28aab869-30d5-42f8-8a85-4af7d5854cea",
        "body" : "https://github.com/DefinitelyTyped/DefinitelyTyped#linter-tslintjson",
        "createdAt" : "2021-05-13T17:05:51Z",
        "updatedAt" : "2021-05-13T17:05:51Z",
        "lastEditedBy" : "28aab869-30d5-42f8-8a85-4af7d5854cea",
        "tags" : [
        ]
      },
      {
        "id" : "2e56919f-af9a-45b1-83c4-d605638355b5",
        "parentId" : "0d0c8541-a522-42b5-b5bc-a1cb1fb77135",
        "authorId" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "body" : "Found the right ignore comment :+1:",
        "createdAt" : "2021-05-13T17:11:52Z",
        "updatedAt" : "2021-05-13T17:11:52Z",
        "lastEditedBy" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "db32e08264c0398a122fc21fe254b4edb9e6e656",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +594,598 @@         * expect(thing).toBe(realThing);\n         */\n        toBe(expected: Expected<T>): void;\n        /**\n         * @deprecated expectationFailOutput is deprecated. Use withContext instead."
  },
  {
    "id" : "ecd7dd1f-66a5-4461-b20c-e06b51d7a77f",
    "prId" : 52003,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52003#pullrequestreview-651923592",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61ba45d7-2052-4bd8-9f13-4cbb2af06a9b",
        "parentId" : null,
        "authorId" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "body" : "I'm not sure if there is a way to overload interface methods.\r\n\r\nI tried to do:\r\n\r\n```js\r\njasmineStarted?(suiteInfo: SuiteInfo): void | Promise<void>;\r\njasmineStarted?(suiteInfo: SuiteInfo, done: () => void): void;\r\n```\r\n\r\nbut it gave me an error.",
        "createdAt" : "2021-05-05T04:36:22Z",
        "updatedAt" : "2021-05-05T04:36:22Z",
        "lastEditedBy" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "tags" : [
        ]
      },
      {
        "id" : "1f757b21-fa50-4e4d-9c25-c1aa857ab8dd",
        "parentId" : "61ba45d7-2052-4bd8-9f13-4cbb2af06a9b",
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "I think this is fine for now.",
        "createdAt" : "2021-05-05T06:05:41Z",
        "updatedAt" : "2021-05-05T06:05:41Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      }
    ],
    "commit" : "43168f6037efd634f9b93878a05a26c6a786559b",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +838,842 @@\n    interface CustomReporter {\n        jasmineStarted?(suiteInfo: SuiteInfo, done?: () => void): void | Promise<void>;\n        suiteStarted?(result: CustomReporterResult, done?: () => void): void | Promise<void>;\n        specStarted?(result: CustomReporterResult, done?: () => void): void | Promise<void>;"
  },
  {
    "id" : "4c0b1f89-fd12-4cf4-9362-d4b498a6a2d8",
    "prId" : 52005,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52005#pullrequestreview-645249075",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ee0aaf7-bc79-4b98-af82-d92291f5a403",
        "parentId" : null,
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "Is this... still a real thing?\r\nhttps://github.com/jasmine/jasmine/search?q=addHelperFiles\r\n\r\nI feel like half of the things here no longer exist.",
        "createdAt" : "2021-04-27T00:13:53Z",
        "updatedAt" : "2021-04-27T02:25:29Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      },
      {
        "id" : "d7147404-0044-4a20-8d62-c796a5ce2b02",
        "parentId" : "5ee0aaf7-bc79-4b98-af82-d92291f5a403",
        "authorId" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "body" : "The class is in the repo [jasmine/jasmine-npm](https://github.com/jasmine/jasmine-npm)\r\n\r\nhttps://github.com/jasmine/jasmine-npm/search?q=addHelperFiles",
        "createdAt" : "2021-04-27T00:37:20Z",
        "updatedAt" : "2021-04-27T02:25:29Z",
        "lastEditedBy" : "d4b6705b-b839-4eea-8883-a048f44965a3",
        "tags" : [
        ]
      },
      {
        "id" : "15c4c0e5-f945-464c-809e-fcf0f0bcfe8d",
        "parentId" : "5ee0aaf7-bc79-4b98-af82-d92291f5a403",
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "Shouldn't that have its own DT package then?",
        "createdAt" : "2021-04-27T00:55:28Z",
        "updatedAt" : "2021-04-27T02:25:29Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      },
      {
        "id" : "4e338d22-acf9-4249-8edd-6b66e78b3144",
        "parentId" : "5ee0aaf7-bc79-4b98-af82-d92291f5a403",
        "authorId" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "body" : "Never mind. I get it. It's an augmentation of browser jasmine to make it run on node, per https://jasmine.github.io/setup/nodejs.html.\r\n\r\nI think you need to go with my solution below then.",
        "createdAt" : "2021-04-27T00:59:00Z",
        "updatedAt" : "2021-04-27T02:25:29Z",
        "lastEditedBy" : "ed8df54b-dc86-4218-8e48-e06204ff1620",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ac4e78efed260f06c646a53f9e48e16a5619a57",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +1052,1056 @@        addSpecFile(filePath: string): void;\n        addSpecFiles(files: string[]): void;\n        addHelperFiles(files: string[]): void;\n        addRequires(files: string[]): void;\n        configureDefaultReporter(options: any, ...args: any[]): void;"
  }
]