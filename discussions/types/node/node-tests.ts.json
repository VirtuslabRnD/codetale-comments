[
  {
    "id" : "a978d1fc-7bf0-410c-b565-cb3a3a01ec48",
    "prId" : 21283,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/21283#pullrequestreview-74523019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7872173-69ee-4897-9b82-6e69fb285f64",
        "parentId" : null,
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "Isn't this removing the verification of the parameter types?",
        "createdAt" : "2017-11-06T18:41:21Z",
        "updatedAt" : "2017-11-06T18:41:21Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      },
      {
        "id" : "9eeda018-d66f-419f-b55e-6315e73841ea",
        "parentId" : "f7872173-69ee-4897-9b82-6e69fb285f64",
        "authorId" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "body" : "I don't think it's useful to verify a declaration by simply repeating it .. tests should be there to verify that *using* the library works, not simply to assert that the declarations are what they are.",
        "createdAt" : "2017-11-06T18:58:33Z",
        "updatedAt" : "2017-11-06T18:58:33Z",
        "lastEditedBy" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "a86d812aa5fac1115e5874b875dc4e7987456f63",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +3068,3072 @@        after() {},\n        destroy() {},\n        promiseResolve() {},\n    };\n"
  },
  {
    "id" : "097c284d-8c39-47de-b68f-c2193ef35fcd",
    "prId" : 26678,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/26678#pullrequestreview-130172344",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "408d9f75-266c-48de-8b6c-9b221e2d46b6",
        "parentId" : null,
        "authorId" : "eaa6a886-bbdc-4c55-9bb5-855e93ca306b",
        "body" : "This test should fail:\r\n\r\n* The purpose of assert.strict is that (at least semantically) `assert.strict.equal === assert.strictEqual` (etc.)\r\n* `assert.strict.strict === assert.strict`\r\n\r\nYou can fix it by replacing deepEqual -> notDeepEqual",
        "createdAt" : "2018-06-19T21:21:03Z",
        "updatedAt" : "2018-06-19T21:21:03Z",
        "lastEditedBy" : "eaa6a886-bbdc-4c55-9bb5-855e93ca306b",
        "tags" : [
        ]
      },
      {
        "id" : "018eb320-151d-4731-ab83-c5e4c7b58562",
        "parentId" : "408d9f75-266c-48de-8b6c-9b221e2d46b6",
        "authorId" : "9ff3a857-4ac9-4a7e-b447-d0a2f6573899",
        "body" : "The test won't actually get run, it's solely for type checking",
        "createdAt" : "2018-06-19T21:46:29Z",
        "updatedAt" : "2018-06-19T21:46:29Z",
        "lastEditedBy" : "9ff3a857-4ac9-4a7e-b447-d0a2f6573899",
        "tags" : [
        ]
      }
    ],
    "commit" : "35b9eb280013180d88df46e60c796b36377a6bf0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +89,93 @@        assert.throws(() => { throw new Error(\"a hammer at your face\"); }, undefined, \"DODGED IT\");\n\n        assert.strict.strict.deepEqual([[[1, 2, 3]], 4, 5], [[[1, 2, '3']], 4, 5]);\n    }\n}"
  }
]