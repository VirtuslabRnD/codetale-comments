[
  {
    "id" : "c845826e-9381-42e4-aedc-4426d68f7a98",
    "prId" : 32567,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/32567#pullrequestreview-198894942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f0ba2e9-d84b-4bde-befc-9b1a70330924",
        "parentId" : null,
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "Nit: Shouldn't this file contain the actual process definitions and the global should reference this?",
        "createdAt" : "2019-01-28T20:36:13Z",
        "updatedAt" : "2019-02-01T00:45:04Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      },
      {
        "id" : "79e5ce48-dbd3-4b32-a0c8-400bb6dae477",
        "parentId" : "9f0ba2e9-d84b-4bde-befc-9b1a70330924",
        "authorId" : "0762ec2f-c2e9-4296-915b-f2139e71b5ad",
        "body" : "Its a bit tricky to define it that way, since you cant `import` a module into the global scope. You *can* add a global augmentation inside the module, however:\r\n\r\n```ts\r\ndeclare module \"process\" {\r\n  global {\r\n    var process: NodeJS.Process;\r\n    ...\r\n  }\r\n  export = process;\r\n}\r\n```\r\n\r\nHowever I don't want to dramatically change the shape of the NodeJS API in this PR.\r\n",
        "createdAt" : "2019-02-01T00:53:31Z",
        "updatedAt" : "2019-02-01T00:53:31Z",
        "lastEditedBy" : "0762ec2f-c2e9-4296-915b-f2139e71b5ad",
        "tags" : [
        ]
      },
      {
        "id" : "c9345619-e0be-4832-b819-f3ac7a942558",
        "parentId" : "9f0ba2e9-d84b-4bde-befc-9b1a70330924",
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "That's fine.",
        "createdAt" : "2019-02-01T01:29:19Z",
        "updatedAt" : "2019-02-01T01:29:19Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "0542814debbd9e074de5ca943bed8a00d8ed7093",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +0,4 @@declare module \"process\" {\n    export = process;\n}"
  },
  {
    "id" : "2ac052c7-a334-40e2-b8e4-9d63086b2179",
    "prId" : 49045,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/49045#pullrequestreview-517216005",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff71f813-5d53-47ed-bc98-187bf9482348",
        "parentId" : null,
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "```suggestion\r\n                readonly traceDeprecation?: true;\r\n```\r\nIt seems this is either set to `true` or undefined.",
        "createdAt" : "2020-10-26T14:34:00Z",
        "updatedAt" : "2020-10-26T14:34:00Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      },
      {
        "id" : "11a2d029-bf30-413d-af91-f69dc2316586",
        "parentId" : "ff71f813-5d53-47ed-bc98-187bf9482348",
        "authorId" : "52d82993-127d-4f61-b395-70add8c17b05",
        "body" : "One should be able to set it to true, so it shouldn't be readonly.",
        "createdAt" : "2020-10-26T20:16:02Z",
        "updatedAt" : "2020-10-26T20:16:03Z",
        "lastEditedBy" : "52d82993-127d-4f61-b395-70add8c17b05",
        "tags" : [
        ]
      },
      {
        "id" : "a11220b7-cef2-44fa-8c63-e33545abc388",
        "parentId" : "ff71f813-5d53-47ed-bc98-187bf9482348",
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "Try it in repl - you can't set it to true. It's true only if command line argument `--trace-deprecation` is set.",
        "createdAt" : "2020-10-26T20:44:20Z",
        "updatedAt" : "2020-10-26T20:44:21Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      },
      {
        "id" : "0c7daa95-211f-4c70-8c01-47561697cf9e",
        "parentId" : "ff71f813-5d53-47ed-bc98-187bf9482348",
        "authorId" : "52d82993-127d-4f61-b395-70add8c17b05",
        "body" : "I just tried the following code in Node (v15.0.1 and v10.19.0)\r\n\r\n```js\r\nconst myWarning = new Error('Something happened')\r\nmyWarning.name = 'DeprecationWarning'\r\nprocess.emitWarning(myWarning)\r\nprocess.traceDeprecation = true\r\nprocess.emitWarning(myWarning)\r\n```\r\n\r\nThe second call to `emitWarning` prints the stack trace so I believe it can be set to true.",
        "createdAt" : "2020-10-26T21:56:01Z",
        "updatedAt" : "2020-10-26T21:56:01Z",
        "lastEditedBy" : "52d82993-127d-4f61-b395-70add8c17b05",
        "tags" : [
        ]
      },
      {
        "id" : "26aaf265-8ee0-4754-828f-6e4d3baaa703",
        "parentId" : "ff71f813-5d53-47ed-bc98-187bf9482348",
        "authorId" : "52d82993-127d-4f61-b395-70add8c17b05",
        "body" : "To be precise I used `docker run --rm -it node:latest node` to have a clean environment.",
        "createdAt" : "2020-10-26T21:56:42Z",
        "updatedAt" : "2020-10-26T21:56:43Z",
        "lastEditedBy" : "52d82993-127d-4f61-b395-70add8c17b05",
        "tags" : [
        ]
      },
      {
        "id" : "577608ea-5c22-49ae-88fe-a550723be69e",
        "parentId" : "ff71f813-5d53-47ed-bc98-187bf9482348",
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "Seems you are right, if `--trace-deprecation` is not on command line it's possible to set it. If it is on command line it readonly.",
        "createdAt" : "2020-10-26T22:16:49Z",
        "updatedAt" : "2020-10-26T22:16:50Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      }
    ],
    "commit" : "a896f085915c098b02b35863321b91c02923369e",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +296,300 @@                resourceUsage(): ResourceUsage;\n\n                traceDeprecation: boolean;\n\n                /* EventEmitter */"
  }
]