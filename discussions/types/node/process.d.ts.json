[
  {
    "id" : "c845826e-9381-42e4-aedc-4426d68f7a98",
    "prId" : 32567,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/32567#pullrequestreview-198894942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f0ba2e9-d84b-4bde-befc-9b1a70330924",
        "parentId" : null,
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "Nit: Shouldn't this file contain the actual process definitions and the global should reference this?",
        "createdAt" : "2019-01-28T20:36:13Z",
        "updatedAt" : "2019-02-01T00:45:04Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      },
      {
        "id" : "79e5ce48-dbd3-4b32-a0c8-400bb6dae477",
        "parentId" : "9f0ba2e9-d84b-4bde-befc-9b1a70330924",
        "authorId" : "0762ec2f-c2e9-4296-915b-f2139e71b5ad",
        "body" : "Its a bit tricky to define it that way, since you cant `import` a module into the global scope. You *can* add a global augmentation inside the module, however:\r\n\r\n```ts\r\ndeclare module \"process\" {\r\n  global {\r\n    var process: NodeJS.Process;\r\n    ...\r\n  }\r\n  export = process;\r\n}\r\n```\r\n\r\nHowever I don't want to dramatically change the shape of the NodeJS API in this PR.\r\n",
        "createdAt" : "2019-02-01T00:53:31Z",
        "updatedAt" : "2019-02-01T00:53:31Z",
        "lastEditedBy" : "0762ec2f-c2e9-4296-915b-f2139e71b5ad",
        "tags" : [
        ]
      },
      {
        "id" : "c9345619-e0be-4832-b819-f3ac7a942558",
        "parentId" : "9f0ba2e9-d84b-4bde-befc-9b1a70330924",
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "That's fine.",
        "createdAt" : "2019-02-01T01:29:19Z",
        "updatedAt" : "2019-02-01T01:29:19Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "0542814debbd9e074de5ca943bed8a00d8ed7093",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +0,4 @@declare module \"process\" {\n    export = process;\n}"
  }
]