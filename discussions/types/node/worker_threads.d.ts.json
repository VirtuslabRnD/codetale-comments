[
  {
    "id" : "f4b03f3b-bb8d-4123-bbab-b53aabbf3e99",
    "prId" : 40927,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/40927#pullrequestreview-330138117",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4993e29b-919e-4860-b074-f568508e9989",
        "parentId" : null,
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "I think `resourceLimits` is always present but each property may be missing (you get `{}` if no limit was given).\r\nTherefore change `ResourceLimits ` also to\r\n```\r\ninterface ResourceLimits {\r\n    maxYoungGenerationSizeMb?: number;\r\n    maxOldGenerationSizeMb?: number;\r\n    codeRangeSizeMb?: number;\r\n}\r\n```\r\nOnce again this fits fine to options as the whole `resourceLimits` property is optional but if it is present each limit property is optional.",
        "createdAt" : "2019-12-10T20:37:59Z",
        "updatedAt" : "2019-12-18T00:04:49Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      },
      {
        "id" : "25e80759-14e7-4dc7-a7da-1ac10a78879f",
        "parentId" : "4993e29b-919e-4860-b074-f568508e9989",
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "So it would be `readonly resourceLimits: Partial<ResourceLimits>;`?",
        "createdAt" : "2019-12-10T20:44:03Z",
        "updatedAt" : "2019-12-18T00:04:49Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      },
      {
        "id" : "41d028e2-8543-47b9-aebe-1848b7869f2a",
        "parentId" : "4993e29b-919e-4860-b074-f568508e9989",
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "no, `ResourceLimits` should be changed to all properties optional. This matches in both cases.",
        "createdAt" : "2019-12-10T20:55:14Z",
        "updatedAt" : "2019-12-18T00:04:49Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      }
    ],
    "commit" : "926eccf87bbfe582a03b6b7e26bf1212cb091715",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +75,79 @@        readonly stderr: Readable;\n        readonly threadId: number;\n        readonly resourceLimits?: ResourceLimits;\n\n        constructor(filename: string, options?: WorkerOptions);"
  },
  {
    "id" : "d8213bd5-8c44-4b8b-9749-9852bd9eee7b",
    "prId" : 43933,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/43933#pullrequestreview-394108412",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28db5b6c-4b08-4c4d-b394-7296e329c51b",
        "parentId" : null,
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "I think `URL` needs to be imported.",
        "createdAt" : "2020-04-15T19:22:51Z",
        "updatedAt" : "2020-04-15T20:05:23Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      },
      {
        "id" : "3777106b-e0e9-41ce-bc9c-256df319a7f9",
        "parentId" : "28db5b6c-4b08-4c4d-b394-7296e329c51b",
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "We shouldn't have to, it's a global in node, I willl look into that but I feel like we've already had this issue.",
        "createdAt" : "2020-04-15T19:56:55Z",
        "updatedAt" : "2020-04-15T20:05:23Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      },
      {
        "id" : "afa48ad1-171d-4be7-8af0-afbc28ad0d70",
        "parentId" : "28db5b6c-4b08-4c4d-b394-7296e329c51b",
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "it's once again an issue with DOM.\r\nRefs: https://github.com/DefinitelyTyped/DefinitelyTyped/pull/25356\r\nRefs: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/25342",
        "createdAt" : "2020-04-15T20:10:24Z",
        "updatedAt" : "2020-04-15T20:10:25Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      },
      {
        "id" : "06cb22fb-20ae-4128-ba31-32dbc8f59545",
        "parentId" : "28db5b6c-4b08-4c4d-b394-7296e329c51b",
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "It's also that we cannot re-export types as globals...",
        "createdAt" : "2020-04-15T20:24:56Z",
        "updatedAt" : "2020-04-15T20:24:56Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "036b6fb2110a733cd9f541e138f9cd9fd1ea7170",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +96,100 @@         *                  or a WHATWG URL object using file: protocol. If options.eval is true, this is a string containing JavaScript code rather than a path.\n         */\n        constructor(filename: string | URL, options?: WorkerOptions);\n\n        postMessage(value: any, transferList?: Array<ArrayBuffer | MessagePort>): void;"
  },
  {
    "id" : "c96e6fd1-d980-4fc2-976c-ff6af4e0a96e",
    "prId" : 48424,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/48424#pullrequestreview-502603585",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ceac1548-4b02-430c-a2d3-9b0002823a3c",
        "parentId" : null,
        "authorId" : "e5209397-2510-4745-aef6-1632dc787392",
        "body" : "According to the docs, [`WorkerOptions.transferList`](https://nodejs.org/docs/latest/api/worker_threads.html#worker_threads_new_worker_filename_options) also supports `FileHandle` now.",
        "createdAt" : "2020-10-05T22:14:14Z",
        "updatedAt" : "2020-10-06T08:13:49Z",
        "lastEditedBy" : "e5209397-2510-4745-aef6-1632dc787392",
        "tags" : [
        ]
      },
      {
        "id" : "c2f693b4-f8db-4e04-91ca-c85401c15733",
        "parentId" : "ceac1548-4b02-430c-a2d3-9b0002823a3c",
        "authorId" : "b9afcfdd-cfe4-4170-88af-2de9b15ff88b",
        "body" : "Done!",
        "createdAt" : "2020-10-06T05:57:19Z",
        "updatedAt" : "2020-10-06T08:13:49Z",
        "lastEditedBy" : "b9afcfdd-cfe4-4170-88af-2de9b15ff88b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7d8417010c6c85d84c7c6e872d5f62e2937ff1b",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +123,127 @@         *                  or a WHATWG URL object using file: protocol. If options.eval is true, this is a string containing JavaScript code rather than a path.\n         */\n        constructor(filename: string | URL, options?: WorkerOptions);\n\n        postMessage(value: any, transferList?: TransferListItem[]): void;"
  }
]