[
  {
    "id" : "5bdb5384-1321-47ea-a1fd-5a467cc6d252",
    "prId" : 47485,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/47485#pullrequestreview-486868708",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22733425-ce10-44dd-81c9-45c31bc4d7bb",
        "parentId" : null,
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "I think this is actually an `Error` object",
        "createdAt" : "2020-09-11T14:20:15Z",
        "updatedAt" : "2020-09-11T14:57:15Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      },
      {
        "id" : "0dc50825-ce09-4f68-b134-6b627502ffe2",
        "parentId" : "22733425-ce10-44dd-81c9-45c31bc4d7bb",
        "authorId" : "b9afcfdd-cfe4-4170-88af-2de9b15ff88b",
        "body" : "[Looks like that.](https://github.com/nodejs/node/blob/636c0bb419907188308c01992e546ab1628bc556/lib/internal/assert/calltracker.js#L40)\r\n\r\n",
        "createdAt" : "2020-09-11T14:40:57Z",
        "updatedAt" : "2020-09-11T14:57:15Z",
        "lastEditedBy" : "b9afcfdd-cfe4-4170-88af-2de9b15ff88b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1191762b64c8fb802799be166c98d5eb4222f593",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +41,45 @@            operator: string;\n            /** A stack trace of the function. */\n            stack: object;\n        }\n"
  },
  {
    "id" : "073f4157-e20b-4958-a0d1-6e50504c4d1c",
    "prId" : 48452,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/48452#pullrequestreview-501573474",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "818ce114-5888-432c-800e-16a3f2d85ef1",
        "parentId" : null,
        "authorId" : "e5209397-2510-4745-aef6-1632dc787392",
        "body" : "Mapped types don’t preserve callability.",
        "createdAt" : "2020-10-03T13:49:33Z",
        "updatedAt" : "2020-10-03T23:05:51Z",
        "lastEditedBy" : "e5209397-2510-4745-aef6-1632dc787392",
        "tags" : [
        ]
      },
      {
        "id" : "b6145d64-440e-41f0-8c9a-2e64bfb039aa",
        "parentId" : "818ce114-5888-432c-800e-16a3f2d85ef1",
        "authorId" : "14dcc82f-aade-4928-b66a-5ef85cdfeb4d",
        "body" : "Good catch - need to add `(value: any, message?: string | Error): asserts value`; I'll do that plus add a test to catch it in the future.",
        "createdAt" : "2020-10-03T20:51:49Z",
        "updatedAt" : "2020-10-03T23:05:51Z",
        "lastEditedBy" : "14dcc82f-aade-4928-b66a-5ef85cdfeb4d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a509c1ee6f0e656f8552fd70c6a37ae1598444f0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +78,82 @@        function doesNotMatch(value: string, regExp: RegExp, message?: string | Error): void;\n\n        const strict: Omit<\n            typeof assert,\n            | 'strict'"
  },
  {
    "id" : "06b12146-3484-462c-b664-86bd4943b0bc",
    "prId" : 48452,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/48452#pullrequestreview-501573408",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55df58e9-587f-41a9-a83e-1eb1afc37ad3",
        "parentId" : null,
        "authorId" : "e5209397-2510-4745-aef6-1632dc787392",
        "body" : "Only `deepEqual`, `notDeepEqual`, `equal` and `notEqual` are replaced: <https://github.com/nodejs/node/blob/e9639ee7e8705516e3b4b9ba7ee19d8e210afa9a/lib/assert.js#L934-L944>\r\n\r\n```suggestion\r\n            | 'deepEqual'\r\n            | 'notDeepEqual'\r\n            | 'equal'\r\n            | 'notEqual'\r\n```",
        "createdAt" : "2020-10-03T13:50:22Z",
        "updatedAt" : "2020-10-03T23:05:51Z",
        "lastEditedBy" : "e5209397-2510-4745-aef6-1632dc787392",
        "tags" : [
        ]
      },
      {
        "id" : "64c12cab-a829-41e7-a616-f1cc3698df0c",
        "parentId" : "55df58e9-587f-41a9-a83e-1eb1afc37ad3",
        "authorId" : "14dcc82f-aade-4928-b66a-5ef85cdfeb4d",
        "body" : "You have to do this to preserve the `asserts`, otherwise you'll get `Assertions require every name in the call target to be declared with an explicit type annotation`",
        "createdAt" : "2020-10-03T20:50:18Z",
        "updatedAt" : "2020-10-03T23:05:51Z",
        "lastEditedBy" : "14dcc82f-aade-4928-b66a-5ef85cdfeb4d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a509c1ee6f0e656f8552fd70c6a37ae1598444f0",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +88,92 @@            | 'strictEqual'\n            | 'deepStrictEqual'\n            | 'ifError'\n        > & {\n            (value: any, message?: string | Error): asserts value;"
  },
  {
    "id" : "ee8d3334-29ea-4762-9bbb-4276429e4923",
    "prId" : 48452,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/48452#pullrequestreview-501573413",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a89b6ba9-0e91-4a10-8436-a0afe2bb9054",
        "parentId" : null,
        "authorId" : "e5209397-2510-4745-aef6-1632dc787392",
        "body" : "```suggestion\r\n            deepEqual: typeof deepStrictEqual;\r\n            notDeepEqual: typeof notDeepStrictEqual;\r\n            equal: typeof strictEqual;\r\n            notEqual: typeof notStrictEqual;\r\n```",
        "createdAt" : "2020-10-03T13:50:35Z",
        "updatedAt" : "2020-10-03T23:05:51Z",
        "lastEditedBy" : "e5209397-2510-4745-aef6-1632dc787392",
        "tags" : [
        ]
      },
      {
        "id" : "9552ca67-980f-451e-93fc-69fad627f494",
        "parentId" : "a89b6ba9-0e91-4a10-8436-a0afe2bb9054",
        "authorId" : "14dcc82f-aade-4928-b66a-5ef85cdfeb4d",
        "body" : "You have to do this to preserve the `asserts`, otherwise you'll get `Assertions require every name in the call target to be declared with an explicit type annotation`",
        "createdAt" : "2020-10-03T20:50:23Z",
        "updatedAt" : "2020-10-03T23:05:51Z",
        "lastEditedBy" : "14dcc82f-aade-4928-b66a-5ef85cdfeb4d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a509c1ee6f0e656f8552fd70c6a37ae1598444f0",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +99,103 @@            strictEqual<T>(actual: any, expected: T, message?: string | Error): asserts actual is T;\n            deepStrictEqual<T>(actual: any, expected: T, message?: string | Error): asserts actual is T;\n            ifError(value: any): asserts value is null | undefined;\n        };\n    }"
  }
]