[
  {
    "id" : "91ae47c4-8234-4324-b7b1-febaa566721a",
    "prId" : 20695,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20695#pullrequestreview-72365052",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42bf2c4d-5cfd-4501-a58b-058248dbc85e",
        "parentId" : null,
        "authorId" : "e4f66c06-63d4-4949-81c4-8ab178293db3",
        "body" : "Same comment as v4",
        "createdAt" : "2017-10-27T04:31:33Z",
        "updatedAt" : "2017-11-14T00:07:14Z",
        "lastEditedBy" : "e4f66c06-63d4-4949-81c4-8ab178293db3",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4d7629e1b3d6f29011722ce6b284afe38122982",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +631,635 @@\n    // incoming headers will never contain number\n    export interface IncomingHttpHeaders {\n        'accept'?: string;\n        'access-control-allow-origin'?: string;"
  },
  {
    "id" : "ad0bb7b2-19dc-41b5-b25b-edc1569bcb6a",
    "prId" : 25407,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/25407#pullrequestreview-116426325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85358762-45e1-424f-ab57-0d6e718d9c24",
        "parentId" : null,
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "Why `Iterable<string[]>` here and not `Iterable<[string, string]>` like in NodeJs v10?\r\nSame question applies to `constructor` and `entries()`",
        "createdAt" : "2018-04-30T19:46:54Z",
        "updatedAt" : "2018-04-30T19:47:30Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      },
      {
        "id" : "c54fb7d7-2926-4ff5-9ad2-bf75b58c685a",
        "parentId" : "85358762-45e1-424f-ab57-0d6e718d9c24",
        "authorId" : "63f7e10c-0d4a-4543-ba7f-5c8ea7eda873",
        "body" : "@Flarna I copied the types from those for Node v7 (as it was the closest version which had the WHATWG URL types). As such, if there’s an existing bogus mismatch between v7 and v10, it will be reflected here.\r\n\r\nThe change here appears to have been made in #19683 which updated the v8.x types (then the most recent), but neglected to update the v7 types. If it’s true that the v7 types were incorrectly not updated then, I can update the v7 URL to match v8, as well as the v6. Does it make sense as part of this P.R. or an additional P.R. which only addresses the inconsistency?",
        "createdAt" : "2018-04-30T20:04:39Z",
        "updatedAt" : "2018-04-30T20:04:39Z",
        "lastEditedBy" : "63f7e10c-0d4a-4543-ba7f-5c8ea7eda873",
        "tags" : [
        ]
      },
      {
        "id" : "7eb0f2c7-9125-4fcf-8a5d-11cb692cac76",
        "parentId" : "85358762-45e1-424f-ab57-0d6e718d9c24",
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "@amarshall #19683 was several month after EOL of NodeJS 7 if I have the dates right. Therefore I assume no one cared much about it. In general fixes/improvements are often done only on latest version even if they would be applicable to other versions. Every now and then someone backports/syncs - at least for the recent versions.\r\nFeel free to adapt v7 typings but I wound not expect someone is really using them these days (similar as v5 and in a few month v9).",
        "createdAt" : "2018-04-30T20:30:24Z",
        "updatedAt" : "2018-04-30T20:30:24Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      }
    ],
    "commit" : "3667b0f7e9808bdf274285ed6c7f7b332080a4b4",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +1972,1976 @@    }\n\n    export class URLSearchParams implements Iterable<string[]> {\n        constructor(init?: URLSearchParams | string | { [key: string]: string | string[] } | Iterable<string[]> );\n        append(name: string, value: string): void;"
  },
  {
    "id" : "d641fcc0-44ec-47d4-8885-28c4fad2ed04",
    "prId" : 25407,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/25407#pullrequestreview-116412449",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04ab4180-1557-458f-bb33-b3296a4d4114",
        "parentId" : null,
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "Similar question here: Why `Iterator<string[]>` instead `IterableIterator<[string, string]>` in v10 typings?",
        "createdAt" : "2018-04-30T19:48:11Z",
        "updatedAt" : "2018-04-30T19:48:12Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      }
    ],
    "commit" : "3667b0f7e9808bdf274285ed6c7f7b332080a4b4",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +1986,1990 @@        toString(): string;\n        values(): Iterator<string>;\n        [Symbol.iterator](): Iterator<string[]>;\n    }\n"
  },
  {
    "id" : "cd6208c8-0cd2-4459-b84e-c5ef479a4d57",
    "prId" : 34678,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/34678#pullrequestreview-231916542",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40b2d795-50a7-448e-9b40-4d51d51e3ccb",
        "parentId" : null,
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "actually 3.2 (also applicable to other versions)",
        "createdAt" : "2019-04-29T21:40:34Z",
        "updatedAt" : "2019-04-29T22:04:01Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      }
    ],
    "commit" : "7dc24162b086384f0ed039250bedd5782133be32",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +22,26 @@//          - ~/ts3.1/index.d.ts  - Definitions specific to TypeScript 3.1\n\n// NOTE: Augmentations for TypeScript 3.1 and later should use individual files for overrides\n//       within the respective ~/ts3.1 (or later) folder. However, this is disallowed for versions\n//       prior to TypeScript 3.1, so the older definitions will be found here."
  }
]