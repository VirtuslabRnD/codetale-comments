[
  {
    "id" : "3c3421c4-81e0-4ab1-84f3-326f0efa910f",
    "prId" : 33527,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/33527#pullrequestreview-209931130",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b915308f-328b-46b6-971d-1272a326b625",
        "parentId" : null,
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "In my opinion this is not improving readability. But feel free to keep it.",
        "createdAt" : "2019-03-03T20:49:35Z",
        "updatedAt" : "2019-03-06T20:51:00Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      },
      {
        "id" : "7df5454d-371f-4588-9062-4067bae5e189",
        "parentId" : "b915308f-328b-46b6-971d-1272a326b625",
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "Might revamp this at some point in a bigger PR, personally it avoids trying to navigate you to the aggregate import when using `go to definition`, feel absolutely free to streamline this at some point.",
        "createdAt" : "2019-03-03T21:13:59Z",
        "updatedAt" : "2019-03-06T20:51:00Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "a994a227d834d98580e515abf886b6350f3dff6c",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +3,7 @@    import * as stream from \"stream\";\n    import { URL } from \"url\";\n    import { Socket, Server as NetServer } from \"net\";\n\n    // incoming headers will never contain number"
  },
  {
    "id" : "d2fa46c5-d734-45f7-b5eb-88b1f1ae1cd5",
    "prId" : 34898,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/34898#pullrequestreview-228932313",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bd97919-c952-4196-8061-1804f47140ac",
        "parentId" : null,
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "Docs, tests, readonly?",
        "createdAt" : "2019-04-22T00:30:18Z",
        "updatedAt" : "2019-04-22T00:30:18Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      },
      {
        "id" : "bdfa9604-7b07-434d-9915-9e7050146e19",
        "parentId" : "4bd97919-c952-4196-8061-1804f47140ac",
        "authorId" : "4b85f967-47a6-4f47-ad6b-4b3281eaa506",
        "body" : "Links to docs & source are in the PR description. Per the source, it's not readonly. I explained not writing tests in the PR checkbox about tests.",
        "createdAt" : "2019-04-22T00:32:21Z",
        "updatedAt" : "2019-04-22T00:33:48Z",
        "lastEditedBy" : "4b85f967-47a6-4f47-ad6b-4b3281eaa506",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c005d8d9c55593cdf3fea720bca1e89dc90ddbd",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +181,185 @@        httpVersionMajor: number;\n        httpVersionMinor: number;\n        complete: boolean;\n        connection: Socket;\n        headers: IncomingHttpHeaders;"
  },
  {
    "id" : "fdd7acc0-b978-4d6c-80d8-26fd6ef34d7a",
    "prId" : 37217,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/37217#pullrequestreview-268590002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "158a9424-eeaa-4e2e-9eac-35cfdac44c4d",
        "parentId" : null,
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "Doesn't this hide the `addListener`,... variants from base class? sure, there is the generic variant so nothing is broken but now only the `information` event is typed.\r\nOn the other hand copy pasting all the other definitions is also not nice...",
        "createdAt" : "2019-07-30T16:45:12Z",
        "updatedAt" : "2019-08-01T19:14:22Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      },
      {
        "id" : "7e369c18-428d-48e9-a748-961820c1b9df",
        "parentId" : "158a9424-eeaa-4e2e-9eac-35cfdac44c4d",
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "Well, that's a problem, not only in this place but already existing ones as well.\r\nI will use declaration merging instead.",
        "createdAt" : "2019-07-30T17:27:44Z",
        "updatedAt" : "2019-08-01T19:14:22Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      },
      {
        "id" : "72543279-6caf-436b-97ad-f7f2ec0d6d88",
        "parentId" : "158a9424-eeaa-4e2e-9eac-35cfdac44c4d",
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "Which.. apparently doesn't work anymore, this is going to become annoying.",
        "createdAt" : "2019-07-30T17:29:43Z",
        "updatedAt" : "2019-08-01T19:14:22Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      },
      {
        "id" : "7a8768f7-5063-4a36-b7a2-102a609010a6",
        "parentId" : "158a9424-eeaa-4e2e-9eac-35cfdac44c4d",
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "With newer typescript versions this could be improved to define lists of types and reuse them at several places... but we have to stick on 2.0/2.1...",
        "createdAt" : "2019-07-30T18:36:44Z",
        "updatedAt" : "2019-08-01T19:14:22Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      }
    ],
    "commit" : "63d5902e31680898219162198b857c19120b9379",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +199,203 @@        addListener(event: 'pipe', listener: (src: stream.Readable) => void): this;\n        addListener(event: 'unpipe', listener: (src: stream.Readable) => void): this;\n        addListener(event: string | symbol, listener: (...args: any[]) => void): this;\n\n        on(event: 'abort', listener: () => void): this;"
  },
  {
    "id" : "7eb1861c-a3a8-42df-b420-ff79cdd01fc5",
    "prId" : 40598,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/40598#pullrequestreview-321736952",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2d05b7c-151b-4e0b-89dd-a0620ca0b155",
        "parentId" : null,
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "Can you add the docs here eg. \r\n\r\n```\r\n/**\r\n * Sends a HTTP/1.1 102 Processing message to the client, indicating that the request body should be sent.\r\n */\r\n```\r\n\r\nPlease?",
        "createdAt" : "2019-11-22T18:43:19Z",
        "updatedAt" : "2019-11-22T18:43:28Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "70ec2ccc5dbded99a35381f9c59c31df93cabdd4",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +158,162 @@        writeHead(statusCode: number, reasonPhrase?: string, headers?: OutgoingHttpHeaders): this;\n        writeHead(statusCode: number, headers?: OutgoingHttpHeaders): this;\n        writeProcessing(): void;\n    }\n"
  },
  {
    "id" : "e13940fc-6057-4983-8d5a-4b690d34f203",
    "prId" : 41353,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/41353#pullrequestreview-338288640",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "954cd2f9-d55e-4295-9fe1-a09d3bb8c6f5",
        "parentId" : null,
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "```suggestion\r\n        readonly maxHeaderSize: number;\r\n```",
        "createdAt" : "2020-01-03T20:47:01Z",
        "updatedAt" : "2020-01-21T17:40:40Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      },
      {
        "id" : "4b2e44f2-73a8-47ed-bb13-63d1ae762d69",
        "parentId" : "954cd2f9-d55e-4295-9fe1-a09d3bb8c6f5",
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "These are options, not sure why these would be readonly?",
        "createdAt" : "2020-01-03T21:33:39Z",
        "updatedAt" : "2020-01-21T17:40:40Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      },
      {
        "id" : "0efb689e-547b-4c18-adb5-7c5d150f794d",
        "parentId" : "954cd2f9-d55e-4295-9fe1-a09d3bb8c6f5",
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "Ah sorry. You are correct. I mixed this up with the module static which is not part of this PR.",
        "createdAt" : "2020-01-03T21:45:46Z",
        "updatedAt" : "2020-01-21T17:40:40Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f18add8a919c9f4987d733c44c3e68cbd5b5dc4",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +81,85 @@         * @default 8192\n         */\n        maxHeaderSize?: number;\n        method?: string;\n        path?: string | null;"
  },
  {
    "id" : "d92dd098-716f-4cb1-bf64-d946cd4f61fa",
    "prId" : 48570,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/48570#pullrequestreview-514174566",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5772951b-d95e-45ab-9db7-8a694e31d197",
        "parentId" : null,
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "I think `host` and `protocol` (maybe also others)  shoudl be readonly. Technically you can write to `host` but it is not used by http so it makes so sense.",
        "createdAt" : "2020-10-21T20:21:23Z",
        "updatedAt" : "2020-10-21T20:21:23Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      },
      {
        "id" : "5393c3ba-8c2a-4457-bc51-654d45eea89e",
        "parentId" : "5772951b-d95e-45ab-9db7-8a694e31d197",
        "authorId" : "b9afcfdd-cfe4-4170-88af-2de9b15ff88b",
        "body" : "Looks like a lot of fields can be made readonly. I will try it later in separate PR.",
        "createdAt" : "2020-10-21T20:49:46Z",
        "updatedAt" : "2020-10-21T20:49:46Z",
        "lastEditedBy" : "b9afcfdd-cfe4-4170-88af-2de9b15ff88b",
        "tags" : [
        ]
      }
    ],
    "commit" : "aec9a1a0ba4412aa1d5faed875280f0a467e31a6",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +208,212 @@        aborted: boolean;\n        host: string;\n        protocol: string;\n\n        constructor(url: string | URL | ClientRequestArgs, cb?: (res: IncomingMessage) => void);"
  }
]