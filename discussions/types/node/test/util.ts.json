[
  {
    "id" : "1e1abd7f-f412-48ba-8c67-0975884fa10a",
    "prId" : 38753,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38753#pullrequestreview-300281247",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8323660-4306-4879-a14e-7839fcc92427",
        "parentId" : null,
        "authorId" : "e5ab6fa3-29dd-4b34-863f-02c33ef718a3",
        "body" : "It should be changed here and below as well.",
        "createdAt" : "2019-10-07T08:22:38Z",
        "updatedAt" : "2019-10-07T08:28:45Z",
        "lastEditedBy" : "e5ab6fa3-29dd-4b34-863f-02c33ef718a3",
        "tags" : [
        ]
      },
      {
        "id" : "da3eccc5-d0c8-4ac1-a68e-51d046bb2e11",
        "parentId" : "e8323660-4306-4879-a14e-7839fcc92427",
        "authorId" : "13ec4322-bf15-4ec2-a12e-f8ab83207105",
        "body" : "@sokra add this suggestion from the comment?",
        "createdAt" : "2019-10-08T17:38:32Z",
        "updatedAt" : "2019-10-08T17:38:48Z",
        "lastEditedBy" : "13ec4322-bf15-4ec2-a12e-f8ab83207105",
        "tags" : [
        ]
      },
      {
        "id" : "e351d147-acb5-432c-b99e-490c07f8f894",
        "parentId" : "e8323660-4306-4879-a14e-7839fcc92427",
        "authorId" : "7d675550-1998-4a4c-a6b3-d39280dd4f3d",
        "body" : "Changing it to `// $ExpectType <T extends Function>(fn: T, message: string, code?: string) => T` won't work:\r\n\r\n``` text\r\nError in node\r\nError: C:/Repos/DefinitelyTyped/types/node/test/util.ts:131:5\r\nERROR: 131:5  expect  TypeScript@3.1 expected type to be:\r\n  <T extends Function>(fn: T, message: string, code?: string) => T\r\ngot:\r\n  <T extends Function>(fn: T, message: string, code?: string | undefined) => T\r\nERROR: 133:5  expect  TypeScript@3.1 expected type to be:\r\n  <T extends Function>(fn: T, message: string, code?: string) => T\r\ngot:\r\n  <T extends Function>(fn: T, message: string, code?: string | undefined) => T\r\n```\r\n\r\nI guess typescript internally adds `| undefined` for optional arguments, so the expected type need to include this too.\r\n\r\nThe type is defined without `| undefined`:\r\n\r\n``` ts\r\nfunction deprecate<T extends Function>(fn: T, message: string, code?: string): T;\r\n```",
        "createdAt" : "2019-10-10T06:50:41Z",
        "updatedAt" : "2019-10-10T06:50:41Z",
        "lastEditedBy" : "7d675550-1998-4a4c-a6b3-d39280dd4f3d",
        "tags" : [
        ]
      },
      {
        "id" : "39f1e542-c73e-444c-8b71-2fa9a0a3622d",
        "parentId" : "e8323660-4306-4879-a14e-7839fcc92427",
        "authorId" : "e5ab6fa3-29dd-4b34-863f-02c33ef718a3",
        "body" : "I just want to confirm again so there are differences between tests for `latest` and `v10`\r\nhttps://github.com/DefinitelyTyped/DefinitelyTyped/pull/38753/files#diff-2d1106145a2d470a4a929f463c4a0292R949\r\n\r\nIf that's the case then I can approve it.\r\n",
        "createdAt" : "2019-10-10T13:39:22Z",
        "updatedAt" : "2019-10-10T13:39:23Z",
        "lastEditedBy" : "e5ab6fa3-29dd-4b34-863f-02c33ef718a3",
        "tags" : [
        ]
      },
      {
        "id" : "cbc53d1b-660a-4471-8b0b-1c6c1dcbe26d",
        "parentId" : "e8323660-4306-4879-a14e-7839fcc92427",
        "authorId" : "7d675550-1998-4a4c-a6b3-d39280dd4f3d",
        "body" : "Yes I also noticed that, but for some reason unknown to me these test suites behave different.\r\n\r\nWhen I change the node/v10 test to `// $ExpectType <T extends Function>(fn: T, message: string, code?: string | undefined) => T` I get this error:\r\n\r\n``` text\r\nError in node/v10\r\nError: C:/Repos/DefinitelyTyped/types/node/v10/node-tests.ts:950:9\r\nERROR: 950:9  expect  TypeScript@3.1 expected type to be:\r\n  <T extends Function>(fn: T, message: string, code?: string | undefined) => T\r\ngot:\r\n  <T extends Function>(fn: T, message: string, code?: string) => T\r\nERROR: 952:9  expect  TypeScript@3.1 expected type to be:\r\n  <T extends Function>(fn: T, message: string, code?: string | undefined) => T\r\ngot:\r\n  <T extends Function>(fn: T, message: string, code?: string) => T\r\n```\r\n\r\nI don't know why, but all tests need to stay in the format they are currently. The CI also agrees to that...",
        "createdAt" : "2019-10-10T18:20:28Z",
        "updatedAt" : "2019-10-10T18:20:29Z",
        "lastEditedBy" : "7d675550-1998-4a4c-a6b3-d39280dd4f3d",
        "tags" : [
        ]
      },
      {
        "id" : "b658b322-0098-448a-8107-1d6b7bbb5fec",
        "parentId" : "e8323660-4306-4879-a14e-7839fcc92427",
        "authorId" : "e5ab6fa3-29dd-4b34-863f-02c33ef718a3",
        "body" : "If other contributors don't have any other reviews then it's ok for me.",
        "createdAt" : "2019-10-10T18:52:12Z",
        "updatedAt" : "2019-10-10T18:52:12Z",
        "lastEditedBy" : "e5ab6fa3-29dd-4b34-863f-02c33ef718a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "acee15e81cef0497c50df6aaaa2e3f7ddb730cfd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +128,132 @@    // $ExpectType () => void\n    util.deprecate(foo, 'foo() is deprecated, use bar() instead');\n    // $ExpectType <T extends Function>(fn: T, message: string, code?: string | undefined) => T\n    util.deprecate(util.deprecate, 'deprecate() is deprecated, use bar() instead');\n    // $ExpectType <T extends Function>(fn: T, message: string, code?: string | undefined) => T"
  }
]