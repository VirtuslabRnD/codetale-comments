[
  {
    "id" : "63d4f39e-26fd-4a00-8c24-bb0a52f1531d",
    "prId" : 34016,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/34016#pullrequestreview-216567053",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0348e08d-a17e-41d8-837b-543c182eac87",
        "parentId" : null,
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "Can you add a type guard test here, I'm worried TS won't do the type assertion correctly here.",
        "createdAt" : "2019-03-20T00:28:43Z",
        "updatedAt" : "2019-03-20T07:27:48Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      },
      {
        "id" : "bae7e1ac-358e-4183-8fe7-9d0bb063fd1d",
        "parentId" : "0348e08d-a17e-41d8-837b-543c182eac87",
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "done in ts 3.2. specific test as the generic one doesn't know about `BigInt64Array` and therefore can't do a type guard.\r\nDuring playing around I found that the type guard for `isBoxedPrimitive()` is actually not really asserting anything useful but I failed to repair it. Seems typescript can't type guard correct with unions of boxed types.",
        "createdAt" : "2019-03-20T07:57:06Z",
        "updatedAt" : "2019-03-20T07:57:06Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      }
    ],
    "commit" : "44797ba9e9f0eb57b4f87af7c70c1b62e38dc383",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +955,959 @@        let b: boolean;\n        b = util.types.isBigInt64Array(15);\n        b = util.types.isBigUint64Array(15);\n        b = util.types.isModuleNamespaceObject(15);\n"
  }
]