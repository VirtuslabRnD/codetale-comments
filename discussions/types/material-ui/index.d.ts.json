[
  {
    "id" : "50aad93d-76cf-4117-8cdf-3dd9a0c2e8bb",
    "prId" : 15886,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/15886#pullrequestreview-33878442",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f3c0206-2dde-4900-8cb5-5981d52bb219",
        "parentId" : null,
        "authorId" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "body" : "What are the actual restrictions on this type? Could this just be `new () => Intl.DateTimeFormat`?",
        "createdAt" : "2017-04-20T18:52:35Z",
        "updatedAt" : "2017-04-20T18:52:35Z",
        "lastEditedBy" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "tags" : [
        ]
      },
      {
        "id" : "eb937753-d948-4bab-8d0e-c4e1c94f53da",
        "parentId" : "8f3c0206-2dde-4900-8cb5-5981d52bb219",
        "authorId" : "33563da2-8d8f-4fec-9572-08e0b70529a0",
        "body" : "No, because it can be polyfilled and the constructor definition should match exactly as material-ui makes extensive use of DateTimeFormat's standard. a simple `new () => ...` will not cover all cases. But the typings provided by typescript does.",
        "createdAt" : "2017-04-20T19:23:04Z",
        "updatedAt" : "2017-04-20T19:23:04Z",
        "lastEditedBy" : "33563da2-8d8f-4fec-9572-08e0b70529a0",
        "tags" : [
        ]
      },
      {
        "id" : "264f5955-7819-4eb9-9648-7c1ce48a333f",
        "parentId" : "8f3c0206-2dde-4900-8cb5-5981d52bb219",
        "authorId" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "body" : "OK, just wondering since I see `typeof` used a lot to mean a constructor type.",
        "createdAt" : "2017-04-20T20:29:58Z",
        "updatedAt" : "2017-04-20T20:29:58Z",
        "lastEditedBy" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "e403b82cf770a5ff402099477d81b7e852fd4cd3",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +881,885 @@        interface DatePickerProps {\n            // <TextField/> is the element that get the 'other' properties\n            DateTimeFormat?: typeof Intl.DateTimeFormat;\n            autoOk?: boolean;\n            cancelLabel?: React.ReactNode;"
  }
]