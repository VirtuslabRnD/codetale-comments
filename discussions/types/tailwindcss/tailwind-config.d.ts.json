[
  {
    "id" : "aa0a2bd2-0852-4176-a2d3-289cbb5be11c",
    "prId" : 50921,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/50921#pullrequestreview-601241357",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9018b035-1838-4adc-b284-5cab04c20a25",
        "parentId" : null,
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "This appears to be a types-only file without a corresponding module in the underlying library.  Am I reading that correctly?  Is the goal just to prevent consumers from accidentally importing the types?  If not, why not just include them in index.d.ts?  Possible issues: if a consumer does import this file, will the import still be present at runtime?  What happens if the underlying library adds a module with this name (unlikely, since it doesn't seem to follow their naming conventions)?",
        "createdAt" : "2021-02-01T18:18:40Z",
        "updatedAt" : "2021-03-01T22:40:14Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      },
      {
        "id" : "14e14d9c-7f55-4577-856f-0523f385c7d4",
        "parentId" : "9018b035-1838-4adc-b284-5cab04c20a25",
        "authorId" : "5a02d304-eb7c-4512-aefe-3dcbf4fa5922",
        "body" : "Separation of concerns\r\n\r\ntailwind-config.d.ts is really big (way over 1000+ lines long), and I did not want to pollute index.d.ts\r\n\r\nThis library does not export anything of the sort, I had to manually infer this from the documentation.\r\n\r\nSimilar to how in `@types/webpack` type definitions, there is a `Configuration` interface which is no where to be found in `webpack` itself. This is my goal",
        "createdAt" : "2021-02-02T14:54:39Z",
        "updatedAt" : "2021-03-01T22:40:14Z",
        "lastEditedBy" : "5a02d304-eb7c-4512-aefe-3dcbf4fa5922",
        "tags" : [
        ]
      },
      {
        "id" : "9d80270f-6ece-48c8-ad0b-96fe5c6ada1f",
        "parentId" : "9018b035-1838-4adc-b284-5cab04c20a25",
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "Sorry, I'm not sure I understand.  What concerns are you separating?  It seems like tailwind-config.d.ts contains the types that are necessary for the declarations in index.d.ts.  If you don't want consumers to see the helper types, just don't export them.\r\n\r\nI don't follow your point about webpack.  There's nothing wrong with adding types not found in the underlying library - that's the point of DefinitelyTyped.  My concern is with adding a _package_ not found in the underlying library.  Does webpack do that?",
        "createdAt" : "2021-02-05T17:56:29Z",
        "updatedAt" : "2021-03-01T22:40:14Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      },
      {
        "id" : "daef3e0b-24d0-42e4-9ceb-5f8fd5275d08",
        "parentId" : "9018b035-1838-4adc-b284-5cab04c20a25",
        "authorId" : "5a02d304-eb7c-4512-aefe-3dcbf4fa5922",
        "body" : "This type definition has zero dependencies, so surely this would not be a problem?\r\n\r\nOk, I could move `tailwind-config.d.ts` into `index.d.ts` if that is better? what do you think?",
        "createdAt" : "2021-03-01T22:37:48Z",
        "updatedAt" : "2021-03-01T22:40:14Z",
        "lastEditedBy" : "5a02d304-eb7c-4512-aefe-3dcbf4fa5922",
        "tags" : [
        ]
      },
      {
        "id" : "5af94dd5-ae4c-4f6d-bc3e-3b6483d2bbe3",
        "parentId" : "9018b035-1838-4adc-b284-5cab04c20a25",
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "I'm not sure what you mean by \"zero dependencies\".  If you mean that it doesn't depend on anything, I don't think that's relevant to the file organization.  If you mean that nothing depends on it, I think that's only because it hasn't been merged yet - it seems to be quite a popular package.\r\n\r\nYes, as @peterblazejewicz and I have explained, having modules that don't exist in the underlying library makes it more likely that a user will consume it incorrectly and have problems at runtime.",
        "createdAt" : "2021-03-01T22:54:10Z",
        "updatedAt" : "2021-03-01T22:54:11Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b1d1f5606b2c4285967613d183139d4d083226f",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@export type Variant =\n    | 'responsive'\n    | 'first'"
  },
  {
    "id" : "57e22ff9-aabf-4577-b0c8-673ee0ebee95",
    "prId" : 50921,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/50921#pullrequestreview-601243054",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc650be8-0dd0-4bff-bbd5-0dd7e04c149b",
        "parentId" : null,
        "authorId" : "9f3a4a6f-63b2-491e-a966-8c0e4721cfbf",
        "body" : "How does this extend to config that has been extended/overwritten with a custom solution? I'm assuming I can't do e.g. `tailwindConfig.theme.colors.main.dark` even if that's how my tailwind.config.js is set up?",
        "createdAt" : "2021-02-12T09:58:32Z",
        "updatedAt" : "2021-03-01T22:40:14Z",
        "lastEditedBy" : "9f3a4a6f-63b2-491e-a966-8c0e4721cfbf",
        "tags" : [
        ]
      },
      {
        "id" : "3fae8bf3-cf56-46ca-8903-f02566a4b15b",
        "parentId" : "fc650be8-0dd0-4bff-bbd5-0dd7e04c149b",
        "authorId" : "5a02d304-eb7c-4512-aefe-3dcbf4fa5922",
        "body" : "It can, to a certain extent\r\n\r\nI have added a few things which will allow for extention where appropriate:\r\n\r\n```ts\r\nreadonly [key: string]: string | TailwindColorGroup;\r\n```\r\n\r\n",
        "createdAt" : "2021-02-12T20:46:27Z",
        "updatedAt" : "2021-03-01T22:40:14Z",
        "lastEditedBy" : "5a02d304-eb7c-4512-aefe-3dcbf4fa5922",
        "tags" : [
        ]
      },
      {
        "id" : "6dbd4c9f-eee8-4f15-ae27-a8b84e7a1dd0",
        "parentId" : "fc650be8-0dd0-4bff-bbd5-0dd7e04c149b",
        "authorId" : "9f3a4a6f-63b2-491e-a966-8c0e4721cfbf",
        "body" : "This change doesn't seem to have been made...",
        "createdAt" : "2021-02-18T23:08:45Z",
        "updatedAt" : "2021-03-01T22:40:14Z",
        "lastEditedBy" : "9f3a4a6f-63b2-491e-a966-8c0e4721cfbf",
        "tags" : [
        ]
      },
      {
        "id" : "6cf5e65e-c6b5-4347-8fb0-b0e0ffa51303",
        "parentId" : "fc650be8-0dd0-4bff-bbd5-0dd7e04c149b",
        "authorId" : "5a02d304-eb7c-4512-aefe-3dcbf4fa5922",
        "body" : "done, added,  `TailwindColorGroup` now has  `readonly [key: string]: string;`\r\n\r\nplease check",
        "createdAt" : "2021-03-01T22:40:44Z",
        "updatedAt" : "2021-03-01T22:40:44Z",
        "lastEditedBy" : "5a02d304-eb7c-4512-aefe-3dcbf4fa5922",
        "tags" : [
        ]
      },
      {
        "id" : "201bb841-28a0-43f4-86f8-6f97e10a6d0b",
        "parentId" : "fc650be8-0dd0-4bff-bbd5-0dd7e04c149b",
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "Thanks!  I believe this addresses @themagickoala's concerns.",
        "createdAt" : "2021-03-01T22:50:51Z",
        "updatedAt" : "2021-03-01T22:50:51Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      },
      {
        "id" : "95141ebd-f32a-4e36-9feb-9d0f6ffe7876",
        "parentId" : "fc650be8-0dd0-4bff-bbd5-0dd7e04c149b",
        "authorId" : "9f3a4a6f-63b2-491e-a966-8c0e4721cfbf",
        "body" : "There should ideally be a dynamic key in TailwindColorConfig which can be a string or TailwindColorGroup.",
        "createdAt" : "2021-03-01T22:57:05Z",
        "updatedAt" : "2021-03-01T22:57:05Z",
        "lastEditedBy" : "9f3a4a6f-63b2-491e-a966-8c0e4721cfbf",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b1d1f5606b2c4285967613d183139d4d083226f",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +17,21 @@    | 'dark';\n\nexport interface TailwindColorGroup {\n    readonly '50': string;\n    readonly '100': string;"
  },
  {
    "id" : "b5e895fa-9e09-4584-b6ed-7b95cd6547c6",
    "prId" : 50921,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/50921#pullrequestreview-601228705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb6bca8d-5952-4496-8327-08bd83ec8034",
        "parentId" : null,
        "authorId" : "fe4271c9-c7ca-4080-bc59-0ce30be14892",
        "body" : "This typing seems to capture what tailwind config returns by default, but it doesn't allow customizing the tailwind config if I understand correctly. Is that the purpose of these types?  What about customised tailwind configurations? Custom color names are allowed by Tailwind implementation but not in these types.\r\n\r\nIn our use case, it would be useful to have the the structure of the config typed, but not limiting the exact names of e.g. colors, breakpoints etc that are customisable.",
        "createdAt" : "2021-02-18T12:18:23Z",
        "updatedAt" : "2021-03-01T22:40:14Z",
        "lastEditedBy" : "fe4271c9-c7ca-4080-bc59-0ce30be14892",
        "tags" : [
        ]
      },
      {
        "id" : "c2c364e9-1bc9-410a-b76c-0513c61b5207",
        "parentId" : "eb6bca8d-5952-4496-8327-08bd83ec8034",
        "authorId" : "5a02d304-eb7c-4512-aefe-3dcbf4fa5922",
        "body" : "Correct. Tailwind allows for extentions\r\n\r\nI believe adding `readonly [key: string]: string;` will allow for extending you speak of:\r\n\r\n> \"but not limiting the exact names\"\r\n\r\nhttps://tailwindcss.com/docs/customizing-colors#extending-the-defaults",
        "createdAt" : "2021-02-18T21:45:41Z",
        "updatedAt" : "2021-03-01T22:40:14Z",
        "lastEditedBy" : "5a02d304-eb7c-4512-aefe-3dcbf4fa5922",
        "tags" : [
        ]
      },
      {
        "id" : "4d211e4f-8e23-4454-b2b5-87def0192e17",
        "parentId" : "eb6bca8d-5952-4496-8327-08bd83ec8034",
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "@dolanmiu If I'm reading your response correctly, it sounds like you were planning to add a new member, but I don't see a new commit.  Have I misunderstood?",
        "createdAt" : "2021-02-18T22:55:05Z",
        "updatedAt" : "2021-03-01T22:40:14Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      },
      {
        "id" : "4a33d8e3-e99b-4ece-8abb-5503736ec80c",
        "parentId" : "eb6bca8d-5952-4496-8327-08bd83ec8034",
        "authorId" : "5a02d304-eb7c-4512-aefe-3dcbf4fa5922",
        "body" : "What do you mean by \"new member\"?\r\nThe members can be whatever you want due to the `readonly [key: string]: string;` syntax, you could call it `blah`, and its valid, and can be used in Tailwind if you wish.",
        "createdAt" : "2021-02-23T01:40:44Z",
        "updatedAt" : "2021-03-01T22:40:14Z",
        "lastEditedBy" : "5a02d304-eb7c-4512-aefe-3dcbf4fa5922",
        "tags" : [
        ]
      },
      {
        "id" : "90c800e5-4797-4ac2-b51b-59d4b74f48ec",
        "parentId" : "eb6bca8d-5952-4496-8327-08bd83ec8034",
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "@dolanmiu From your comment, it sounded like you were going to add `readonly [key: string]: string;` to `TailwindColorConfig` (or use an intersection, as for spacing, below).  If you are not planning to do so, can you please elaborate on your explanation of how custom colors will be allowed (or, better still, add a unit test demonstrating that it is possible)?",
        "createdAt" : "2021-03-01T22:33:14Z",
        "updatedAt" : "2021-03-01T22:40:14Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b1d1f5606b2c4285967613d183139d4d083226f",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +113,117 @@            readonly [key: string]: string;\n        };\n        readonly colors: TailwindColorConfig;\n        readonly spacing: TailwindStandardSpacing & {\n            readonly [key: string]: string;"
  }
]