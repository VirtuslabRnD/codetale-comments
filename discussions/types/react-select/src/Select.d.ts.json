[
  {
    "id" : "e6a54c99-a707-444b-9c47-fb4f3800902e",
    "prId" : 49673,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/49673#pullrequestreview-534945017",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71c98837-222f-4fb7-ab63-d6f735090e7d",
        "parentId" : null,
        "authorId" : "3a6b169d-9ef6-4f62-8046-54c0ab63572a",
        "body" : "This prevents arrays being passed in when in single mode, and allows both arrays or objects in multi",
        "createdAt" : "2020-11-19T23:38:32Z",
        "updatedAt" : "2020-11-20T01:38:35Z",
        "lastEditedBy" : "3a6b169d-9ef6-4f62-8046-54c0ab63572a",
        "tags" : [
        ]
      }
    ],
    "commit" : "65baaf0c0201a68e96f89c6ce608414312f23403",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +210,214 @@  defaultInputValue?: string;\n  defaultMenuIsOpen?: boolean;\n  defaultValue?: IsMulti extends true ? ValueType<OptionType, boolean> : ValueType<OptionType, false>;\n}\n"
  },
  {
    "id" : "f13164e5-ddd7-4a79-a588-0f7c9a3b1504",
    "prId" : 49673,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/49673#pullrequestreview-544504772",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ee3db6c-1ceb-40e9-b277-995c8cf18e76",
        "parentId" : null,
        "authorId" : "d72af867-3216-4900-8bbb-31edc53ad6e6",
        "body" : "This did break my code though and took a while to find. out i had to add additional generic type to select since type error was not very forth coming) \r\n\r\n```\r\n<Select<ModelType, true> // add true to tell select its a multi select.\r\n```",
        "createdAt" : "2020-12-03T10:36:25Z",
        "updatedAt" : "2020-12-03T10:36:25Z",
        "lastEditedBy" : "d72af867-3216-4900-8bbb-31edc53ad6e6",
        "tags" : [
        ]
      },
      {
        "id" : "4c5c1be1-48c7-4cca-a70a-9448d101c8f8",
        "parentId" : "4ee3db6c-1ceb-40e9-b277-995c8cf18e76",
        "authorId" : "d72af867-3216-4900-8bbb-31edc53ad6e6",
        "body" : "```\r\n IsMulti extends boolean = boolean\r\n```\r\nwould have been a better backwardscompatible default.",
        "createdAt" : "2020-12-03T10:38:52Z",
        "updatedAt" : "2020-12-03T10:38:52Z",
        "lastEditedBy" : "d72af867-3216-4900-8bbb-31edc53ad6e6",
        "tags" : [
        ]
      },
      {
        "id" : "efa77d0d-43c0-41aa-beb5-6988ca057ee5",
        "parentId" : "4ee3db6c-1ceb-40e9-b277-995c8cf18e76",
        "authorId" : "6d447f9d-4946-46c6-8162-102e21d6a2ed",
        "body" : "I don't believe this would've worked because we want `IsMulti` to be `false` if the `isMulti` prop is not set. But I don't remember for sure if that's the case, I'd have to go back and check.",
        "createdAt" : "2020-12-03T14:01:28Z",
        "updatedAt" : "2020-12-03T14:04:28Z",
        "lastEditedBy" : "6d447f9d-4946-46c6-8162-102e21d6a2ed",
        "tags" : [
        ]
      },
      {
        "id" : "4aa7f37f-78cc-411d-af35-b8e29f4132e6",
        "parentId" : "4ee3db6c-1ceb-40e9-b277-995c8cf18e76",
        "authorId" : "6d447f9d-4946-46c6-8162-102e21d6a2ed",
        "body" : "But feel free to make a PR if that works! It would mean less breakage for future people.",
        "createdAt" : "2020-12-03T14:07:40Z",
        "updatedAt" : "2020-12-03T14:07:40Z",
        "lastEditedBy" : "6d447f9d-4946-46c6-8162-102e21d6a2ed",
        "tags" : [
        ]
      },
      {
        "id" : "7d701731-1ac3-4dac-a1b4-e9bfa65278de",
        "parentId" : "4ee3db6c-1ceb-40e9-b277-995c8cf18e76",
        "authorId" : "3a6b169d-9ef6-4f62-8046-54c0ab63572a",
        "body" : "Yea I just had a look at this and you are right, this doesnt seem to work. I assume because the `isMulti` prop would be `undefined` instead of strictly `false` as there might be some confusion in typescript about this?\r\n\r\nusing `false` as the default works better in the following example\r\n\r\nhttps://www.typescriptlang.org/play?#code/C4TwDgpgBAaghgGwK4QCrggHgLJQgD2AgDsATAZygCMB7GhCOYgPigF4oAKXAosy4ACcUUAPxRyQgJbEA5gG0AulABcE6XICUUAD5RiSBAl1QkZCADMZEUgG4AUPZlFBFuAGNoAZQgN3wAAVBGjByHDxCEgpqOgYmVgBveygUqAA3RBRRNXhkNAwcZgdUqClybENgKWyobGLU0ks4StystR5I-ighEXFW-MhMWnpGFlVYTIGsbCLk1JpiAGEACyZZCDVODLycyfRBme02VjSaKTt7AF9HewB6W6gAVXIZWSgAA2G44neoOEoAJLlSpSKCNNyVRzuBaSboQSQAIViowAYsR2FBwrwopQvqMMXj4pwwMFQmofH5AqSwod2IlHNd7EREcimGjOEkSgsVmsNlw0kcTqIAHTAGiPMCQQSLf4QTiaK4Ku4PZ6vD5uBDkCC-f5QIEVBBVMFNSH2aHEWHM4AoxBatEYrGdaKE9EcDVa5jE6nk3wQfxBEI05iCqBJK6OK02zUQdmc+ZLVZyPlbENpEViiVSmVa+WKoA",
        "createdAt" : "2020-12-03T22:27:06Z",
        "updatedAt" : "2020-12-03T22:27:06Z",
        "lastEditedBy" : "3a6b169d-9ef6-4f62-8046-54c0ab63572a",
        "tags" : [
        ]
      }
    ],
    "commit" : "65baaf0c0201a68e96f89c6ce608414312f23403",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +215,219 @@export interface Props<\n  OptionType extends OptionTypeBase = { label: string; value: string },\n  IsMulti extends boolean = false\n> extends NamedProps<OptionType, IsMulti>, SelectComponentsProps {}\n"
  },
  {
    "id" : "12cd14bb-c3c0-4736-bc77-420c7790d4de",
    "prId" : 50227,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/50227#pullrequestreview-556872237",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "308511b7-b01e-45b7-b0d0-84cfe8b314fc",
        "parentId" : null,
        "authorId" : "cbaebbb0-fbfb-4945-93e3-43e729226449",
        "body" : "I suppose this technically would be a breaking change, but it feels incorrect to set default values; however, it may cause no harm in style methods?",
        "createdAt" : "2020-12-22T07:31:15Z",
        "updatedAt" : "2020-12-22T07:31:15Z",
        "lastEditedBy" : "cbaebbb0-fbfb-4945-93e3-43e729226449",
        "tags" : [
        ]
      }
    ],
    "commit" : "8dec29d05ca32f08a00c5648e62e3f50015eecb7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +198,202 @@  screenReaderStatus?: (obj: { count: number }) => string;\n  /* Style modifier methods */\n  styles?: StylesConfig<OptionType, IsMulti>;\n  /* Theme modifier method */\n  theme?: ThemeConfig;"
  },
  {
    "id" : "f900eebb-deb6-407c-bbc5-f06360e7e6d6",
    "prId" : 50929,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/50929#pullrequestreview-579898415",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30382e2d-3def-4e52-89d7-15e30835c0ca",
        "parentId" : null,
        "authorId" : "cbaebbb0-fbfb-4945-93e3-43e729226449",
        "body" : "wouldn't the non-array be readonly too?",
        "createdAt" : "2021-01-30T23:42:33Z",
        "updatedAt" : "2021-01-31T02:39:18Z",
        "lastEditedBy" : "cbaebbb0-fbfb-4945-93e3-43e729226449",
        "tags" : [
        ]
      },
      {
        "id" : "9c6cc08f-6635-40f1-8777-f8c47d098f43",
        "parentId" : "30382e2d-3def-4e52-89d7-15e30835c0ca",
        "authorId" : "cbaebbb0-fbfb-4945-93e3-43e729226449",
        "body" : "Also, it seems like this type is leveraged really often. \r\n\r\nCould be useful to do:\r\n\r\n```ts\r\ntype ValueType<OptionType = OptionTypeBase> = readonly OptionType[] | OptionType | null;\r\n```\r\n\r\nfor the sake of DRY ü§∑‚Äç‚ôÇÔ∏è \r\n\r\nNot a showstopper though, feel free to merge anyways.",
        "createdAt" : "2021-01-31T00:00:58Z",
        "updatedAt" : "2021-01-31T02:39:18Z",
        "lastEditedBy" : "cbaebbb0-fbfb-4945-93e3-43e729226449",
        "tags" : [
        ]
      },
      {
        "id" : "218f661e-e9a8-4c40-b0d6-c40fdb1273c4",
        "parentId" : "30382e2d-3def-4e52-89d7-15e30835c0ca",
        "authorId" : "6d447f9d-4946-46c6-8162-102e21d6a2ed",
        "body" : "Yeah, a type could be useful, but `ValueType` is already taken. I'll try to think of a good name.",
        "createdAt" : "2021-01-31T02:42:34Z",
        "updatedAt" : "2021-01-31T02:42:35Z",
        "lastEditedBy" : "6d447f9d-4946-46c6-8162-102e21d6a2ed",
        "tags" : [
        ]
      },
      {
        "id" : "8f947910-694f-4039-b58e-34108793d907",
        "parentId" : "30382e2d-3def-4e52-89d7-15e30835c0ca",
        "authorId" : "cbaebbb0-fbfb-4945-93e3-43e729226449",
        "body" : "`ReactSelectValueType` ?\r\n\r\nIt's lengthy, but unarguably correct üòÇ ",
        "createdAt" : "2021-01-31T03:47:55Z",
        "updatedAt" : "2021-01-31T03:47:55Z",
        "lastEditedBy" : "cbaebbb0-fbfb-4945-93e3-43e729226449",
        "tags" : [
        ]
      },
      {
        "id" : "a26d5745-1b41-40b6-8fcf-391ce43e5c14",
        "parentId" : "30382e2d-3def-4e52-89d7-15e30835c0ca",
        "authorId" : "6d447f9d-4946-46c6-8162-102e21d6a2ed",
        "body" : "The existing `ValueType` is already for react-select, so I don't think it provides a helpful distinction. Can we go ahead and merge this? I'll make change the existing `ValueType` to `OnChangeValueType` in a follow-up PR.",
        "createdAt" : "2021-01-31T04:36:18Z",
        "updatedAt" : "2021-01-31T04:36:18Z",
        "lastEditedBy" : "6d447f9d-4946-46c6-8162-102e21d6a2ed",
        "tags" : [
        ]
      },
      {
        "id" : "de643c45-be31-4cf5-8436-ef0841d35f06",
        "parentId" : "30382e2d-3def-4e52-89d7-15e30835c0ca",
        "authorId" : "cbaebbb0-fbfb-4945-93e3-43e729226449",
        "body" : "Sure! I already approved it and said this was optional!",
        "createdAt" : "2021-01-31T08:38:23Z",
        "updatedAt" : "2021-01-31T08:38:23Z",
        "lastEditedBy" : "cbaebbb0-fbfb-4945-93e3-43e729226449",
        "tags" : [
        ]
      },
      {
        "id" : "bb811a73-372a-4be5-8032-97e0db46960f",
        "parentId" : "30382e2d-3def-4e52-89d7-15e30835c0ca",
        "authorId" : "6d447f9d-4946-46c6-8162-102e21d6a2ed",
        "body" : "Sorry for the confusion! I think you need to re-approve it because I had to resolve a merge conflict.",
        "createdAt" : "2021-01-31T14:10:28Z",
        "updatedAt" : "2021-01-31T14:10:28Z",
        "lastEditedBy" : "6d447f9d-4946-46c6-8162-102e21d6a2ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff5f054aff55f524e24fe4aab2b3b9edab04fc29",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +188,192 @@    tabSelectsValue?: boolean;\n    /** The value of the select; reflected by the selected option */\n    value?: readonly OptionType[] | OptionType | null;\n\n    defaultInputValue?: string;"
  }
]