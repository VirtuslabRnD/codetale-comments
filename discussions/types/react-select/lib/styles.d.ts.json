[
  {
    "id" : "cafd9d03-0809-4491-a96e-ed228a4789e4",
    "prId" : 27737,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/27737#pullrequestreview-144174556",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0668416e-e419-40e1-9bb7-b60bc7f5ea0d",
        "parentId" : null,
        "authorId" : "e09fd09a-92f7-4c58-9e15-8b6182f9f5e6",
        "body" : "I know it's the same as in original Flow typings, but those `any` are demotivating...\r\n\r\nActually, aren't `base` and return type just `React.CSSProperties`?",
        "createdAt" : "2018-08-02T08:32:04Z",
        "updatedAt" : "2018-08-02T21:22:22Z",
        "lastEditedBy" : "e09fd09a-92f7-4c58-9e15-8b6182f9f5e6",
        "tags" : [
        ]
      },
      {
        "id" : "f423118d-7afe-4347-9c73-b1d3a6b11892",
        "parentId" : "0668416e-e419-40e1-9bb7-b60bc7f5ea0d",
        "authorId" : "0982aed9-269d-4d6c-9bd9-4af3cb2c17d8",
        "body" : "Again thanks for the pointer, @burtek! :)\r\n\r\nYes, that function (and several others) should be returning css properties. I'll fix this.",
        "createdAt" : "2018-08-02T09:50:44Z",
        "updatedAt" : "2018-08-02T21:22:22Z",
        "lastEditedBy" : "0982aed9-269d-4d6c-9bd9-4af3cb2c17d8",
        "tags" : [
        ]
      },
      {
        "id" : "4460d267-dc49-4154-b9d2-400fef379f41",
        "parentId" : "0668416e-e419-40e1-9bb7-b60bc7f5ea0d",
        "authorId" : "e09fd09a-92f7-4c58-9e15-8b6182f9f5e6",
        "body" : "It would also be nice to type `state`, although this might be hard to achieve, as there is literally no docs on that",
        "createdAt" : "2018-08-02T10:01:27Z",
        "updatedAt" : "2018-08-02T21:22:22Z",
        "lastEditedBy" : "e09fd09a-92f7-4c58-9e15-8b6182f9f5e6",
        "tags" : [
        ]
      },
      {
        "id" : "a3441b7b-5729-49c0-8c9b-7a5bb51457d4",
        "parentId" : "0668416e-e419-40e1-9bb7-b60bc7f5ea0d",
        "authorId" : "2c8f1e80-944d-4e4b-bfe7-dd9fba7dec81",
        "body" : "`state` appears to be the props for the component that is being styled. For example,\r\n\r\n    export type Styles<OptionType> = {\r\n        ...\r\n        option?: (base: CSSProperties, state: OptionProps<OptionType>) => CSSProperties,\r\n        ...\r\n    };\r\n\r\nI actually did away with the `StylesConfig` in my definitions, because it seemed redundant.",
        "createdAt" : "2018-08-07T20:38:50Z",
        "updatedAt" : "2018-08-07T20:38:51Z",
        "lastEditedBy" : "2c8f1e80-944d-4e4b-bfe7-dd9fba7dec81",
        "tags" : [
        ]
      }
    ],
    "commit" : "965c359ac7071a89b8fa0314e9eebaea16ea880f",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@ * @returns\n */\nexport type styleFn = (base: any, state: any) => any;\n\nexport interface Styles {"
  }
]