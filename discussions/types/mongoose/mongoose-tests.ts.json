[
  {
    "id" : "c5252f04-9c18-4628-954c-826d80d8dfd6",
    "prId" : 15719,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/15719#pullrequestreview-31690918",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7802a991-ef04-4e69-b774-8fe3cecbf010",
        "parentId" : null,
        "authorId" : "405feade-830e-4951-b18e-783f39760468",
        "body" : "You should add these 2 test cases still:\r\n```js\r\ndoc.save(function(err, product, numAffected) {\r\n  product.save();\r\n}).then(cb).catch(cb);\r\n\r\ndoc.save({\r\n  validateBeforeSave: false\r\n}, function(err, product, numAffected) {\r\n  product.save();\r\n}).then(cb).catch(cb);\r\n```\r\nThe reason is that we want to test if Typescript can infer the types of `(err, product, numAffected)` instead of manually defining types above.",
        "createdAt" : "2017-04-08T01:12:30Z",
        "updatedAt" : "2017-04-17T18:21:32Z",
        "lastEditedBy" : "405feade-830e-4951-b18e-783f39760468",
        "tags" : [
        ]
      },
      {
        "id" : "187fd5bd-2c6c-4d8e-a710-73a00aa78a55",
        "parentId" : "7802a991-ef04-4e69-b774-8fe3cecbf010",
        "authorId" : "41c3fe19-ba98-4697-ada8-20303692be6c",
        "body" : "Nice catch.",
        "createdAt" : "2017-04-08T01:57:50Z",
        "updatedAt" : "2017-04-17T18:21:32Z",
        "lastEditedBy" : "41c3fe19-ba98-4697-ada8-20303692be6c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac1a97d16ba4bb5ccfb954d3bc0766212364b39f",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +1216,1220 @@  var handleSave = function(err: Error, product: mongoose.Document, numAffected: number) {};\n  doc.increment();\n  doc.save(handleSave).then(cb).catch(cb);\n  doc.save({ validateBeforeSave: false }, handleSave).then(cb).catch(cb);\n  doc.save({ safe: true }, handleSave).then(cb).catch(cb);"
  }
]