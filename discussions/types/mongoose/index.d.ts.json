[
  {
    "id" : "44714075-b780-4145-b793-1f139c2a8e7a",
    "prId" : 15721,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/15721#pullrequestreview-31689776",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85eef849-4a8f-4211-be99-ec2ed101f084",
        "parentId" : null,
        "authorId" : "405feade-830e-4951-b18e-783f39760468",
        "body" : "@fabiob Thanks for following the existing style.",
        "createdAt" : "2017-04-08T01:20:37Z",
        "updatedAt" : "2017-04-08T01:20:37Z",
        "lastEditedBy" : "405feade-830e-4951-b18e-783f39760468",
        "tags" : [
        ]
      }
    ],
    "commit" : "16be2fcb11a0571d30bbf68b6649ef14e007d0c0",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +2026,2030 @@        * http://mongoosejs.com/docs/api.html#schema-decimal128-js\n        */\n      class Decimal128 extends SchemaType {\n        /** Decimal128 SchemaType constructor. */\n        constructor(key: string, options?: Object);"
  },
  {
    "id" : "525b5757-5cb2-48d5-920a-db0ca003eacb",
    "prId" : 19954,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/19954#pullrequestreview-64701222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60df5acf-2ba7-40b6-9427-56e5a19d6b23",
        "parentId" : null,
        "authorId" : "f6d540bd-fdc2-4205-b709-9c9832e9bd9d",
        "body" : "Please do not use optional parameters in callbacks as discussed [here](http://www.typescriptlang.org/docs/handbook/declaration-files/do-s-and-don-ts.html).",
        "createdAt" : "2017-09-22T17:12:12Z",
        "updatedAt" : "2017-09-22T17:12:17Z",
        "lastEditedBy" : "f6d540bd-fdc2-4205-b709-9c9832e9bd9d",
        "tags" : [
        ]
      },
      {
        "id" : "71eab57a-d5e1-441b-bf3d-dfaec71b7dde",
        "parentId" : "60df5acf-2ba7-40b6-9427-56e5a19d6b23",
        "authorId" : "34c723ed-2048-4496-add6-ed8bc96fd1cc",
        "body" : "Please correct me if I am wrong - but I think this is not applicable in this case.\r\n\r\nYou *definitely can* call the done()-callback without supplying a error parameter (signaling that everything was OK). It is exactly the special case mentioned in the docs: done() might be invoked with one or zero arguments.\r\n\r\nThe done()-callback is not even provided by the user but the framework itself.",
        "createdAt" : "2017-09-22T19:51:04Z",
        "updatedAt" : "2017-09-22T19:51:04Z",
        "lastEditedBy" : "34c723ed-2048-4496-add6-ed8bc96fd1cc",
        "tags" : [
        ]
      },
      {
        "id" : "2bd350f4-9e66-4ea2-8eb1-ea6fdc493771",
        "parentId" : "60df5acf-2ba7-40b6-9427-56e5a19d6b23",
        "authorId" : "f6d540bd-fdc2-4205-b709-9c9832e9bd9d",
        "body" : "You're correct, I missed the extra level of parameter nesting. Sorry for the confusion.",
        "createdAt" : "2017-09-22T21:14:32Z",
        "updatedAt" : "2017-09-22T21:14:32Z",
        "lastEditedBy" : "f6d540bd-fdc2-4205-b709-9c9832e9bd9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e30f58fda54d3f29accbc38ca96600504f690031",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +629,633 @@     * Defines a pre hook for the document.\n     */\n    pre(method: string, parallel: boolean, fn: (next: (err?: NativeError) => void, done: (err?: NativeError) => void) => void,\n      errorCb?: (err: Error) => void): this;\n    pre(method: string, fn: (next: (err?: NativeError) => void) => void,"
  },
  {
    "id" : "851ad138-bd9e-412c-a512-9fb23048b833",
    "prId" : 21176,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/21176#pullrequestreview-73524493",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81454b7c-95e8-4f82-a4e8-1407b463c02f",
        "parentId" : null,
        "authorId" : "3a0083d8-ffd3-4fac-bfd3-a8c27d17ed60",
        "body" : "I think there are more options that can be added here as well, however I wasn't able to find it after a (very quick) search on Google and the MongoDB docs.\r\n\r\nPerhaps we should extract that into an interface instead and see if we can find a full list of options?\r\n\r\nThe link provided here is dead, it seems: http://mongoosejs.com/docs/2.7.x/docs/schema-options.html",
        "createdAt" : "2017-11-01T15:58:33Z",
        "updatedAt" : "2017-11-01T15:58:37Z",
        "lastEditedBy" : "3a0083d8-ffd3-4fac-bfd3-a8c27d17ed60",
        "tags" : [
        ]
      },
      {
        "id" : "4adbd24d-53a9-4eae-83ff-008ad267f2d7",
        "parentId" : "81454b7c-95e8-4f82-a4e8-1407b463c02f",
        "authorId" : "19a84347-2032-42f5-8503-c93fc2b9d9f0",
        "body" : "I believe this is the documentation/options available for the `safe` option: https://docs.mongodb.com/manual/reference/write-concern/index.html",
        "createdAt" : "2017-11-01T16:03:45Z",
        "updatedAt" : "2017-11-01T16:03:45Z",
        "lastEditedBy" : "19a84347-2032-42f5-8503-c93fc2b9d9f0",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e278d0f6d5be5a57db4475e30dc9b358afc803f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +728,732 @@    read?: string;\n    /** defaults to true. */\n    safe?: boolean | { w?: number | string; wtimeout?: number; j?: boolean };\n    /** defaults to null */\n    shardKey?: boolean;"
  },
  {
    "id" : "1994ee45-3bbf-459d-8441-51f95def2917",
    "prId" : 23070,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/23070#pullrequestreview-91412903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d3c8dcc-85db-4333-91a7-84f21d9a1410",
        "parentId" : null,
        "authorId" : "405feade-830e-4951-b18e-783f39760468",
        "body" : "This returns a `Promise` now (or `null`).",
        "createdAt" : "2018-01-24T05:04:14Z",
        "updatedAt" : "2018-01-26T19:11:05Z",
        "lastEditedBy" : "405feade-830e-4951-b18e-783f39760468",
        "tags" : [
        ]
      },
      {
        "id" : "e6f83256-f313-44bb-9fac-4422ae373692",
        "parentId" : "5d3c8dcc-85db-4333-91a7-84f21d9a1410",
        "authorId" : "dc5cf200-e144-4800-af82-c362e8db5238",
        "body" : "You might've commented on an older commit - the latest one already has this defined as follows:\r\n\r\n```typescript\r\n  /**\r\n   * Opens the default mongoose connection.\r\n   * Options passed take precedence over options included in connection strings.\r\n   * @returns pseudo-promise wrapper around this\r\n   */\r\n  export function connect(uris: string, options: ConnectionOptions, callback: (err: mongodb.MongoError) => void): null;\r\n  export function connect(uris: string, callback: (err: mongodb.MongoError) => void): null;\r\n  export function connect(uris: string, options?: ConnectionOptions): Promise<Mongoose>;\r\n```",
        "createdAt" : "2018-01-24T20:18:05Z",
        "updatedAt" : "2018-01-26T19:11:05Z",
        "lastEditedBy" : "dc5cf200-e144-4800-af82-c362e8db5238",
        "tags" : [
        ]
      },
      {
        "id" : "a40d1721-2747-44c5-b6b1-94d6cd81d3ed",
        "parentId" : "5d3c8dcc-85db-4333-91a7-84f21d9a1410",
        "authorId" : "405feade-830e-4951-b18e-783f39760468",
        "body" : "Oh my bad, this is fine. I got confused because I thought \"pseudo-promise wrapper\" referred to `MongooseThenable`, which was deprecated. ",
        "createdAt" : "2018-01-25T04:56:00Z",
        "updatedAt" : "2018-01-26T19:11:05Z",
        "lastEditedBy" : "405feade-830e-4951-b18e-783f39760468",
        "tags" : [
        ]
      }
    ],
    "commit" : "de78ab2174ad552bc26ea0f2d120e3462963776a",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +75,79 @@   * Opens the default mongoose connection.\n   * Options passed take precedence over options included in connection strings.\n   * @returns pseudo-promise wrapper around this\n   */\n  export function connect(uris: string, options: ConnectionOptions, callback: (err: mongodb.MongoError) => void): null;"
  },
  {
    "id" : "0f13282f-2ee9-4b23-840e-c9acc9f31ed6",
    "prId" : 23070,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/23070#pullrequestreview-91257455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5a7c3e8-fb37-4092-b0dd-55731baed2d2",
        "parentId" : null,
        "authorId" : "405feade-830e-4951-b18e-783f39760468",
        "body" : "`numAffected` is still there: http://mongoosejs.com/docs/api.html#document_Document-save",
        "createdAt" : "2018-01-24T05:31:54Z",
        "updatedAt" : "2018-01-26T19:11:05Z",
        "lastEditedBy" : "405feade-830e-4951-b18e-783f39760468",
        "tags" : [
        ]
      },
      {
        "id" : "2926b5e7-cd81-4632-b4be-f8ba9cbcc648",
        "parentId" : "b5a7c3e8-fb37-4092-b0dd-55731baed2d2",
        "authorId" : "dc5cf200-e144-4800-af82-c362e8db5238",
        "body" : "Their migration doc states that numAffected is no longer passed: https://github.com/Automattic/mongoose/blob/master/migrating_to_5.md#numaffected-and-save",
        "createdAt" : "2018-01-24T09:11:29Z",
        "updatedAt" : "2018-01-26T19:11:05Z",
        "lastEditedBy" : "dc5cf200-e144-4800-af82-c362e8db5238",
        "tags" : [
        ]
      },
      {
        "id" : "979b21ed-056c-4276-b959-850e65cb96b3",
        "parentId" : "b5a7c3e8-fb37-4092-b0dd-55731baed2d2",
        "authorId" : "405feade-830e-4951-b18e-783f39760468",
        "body" : "Oh you're totally right. This is fine. I'll make a PR to update their API docs. ",
        "createdAt" : "2018-01-24T17:15:29Z",
        "updatedAt" : "2018-01-26T19:11:05Z",
        "lastEditedBy" : "405feade-830e-4951-b18e-783f39760468",
        "tags" : [
        ]
      }
    ],
    "commit" : "de78ab2174ad552bc26ea0f2d120e3462963776a",
    "line" : 1596,
    "diffHunk" : "@@ -1,1 +2680,2684 @@     * @param fn optional callback\n     */\n    save(options?: SaveOptions, fn?: (err: any, product: this) => void): Promise<this>;\n    save(fn?: (err: any, product: this) => void): Promise<this>;\n"
  },
  {
    "id" : "675b7393-67fc-42f3-a848-e7ac7cc7d87c",
    "prId" : 23070,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/23070#pullrequestreview-91599000",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3b3ad99-e94d-4216-a526-69e98a9d423b",
        "parentId" : null,
        "authorId" : "405feade-830e-4951-b18e-783f39760468",
        "body" : "Can you return `this` to be consistent with other methods?",
        "createdAt" : "2018-01-25T05:05:19Z",
        "updatedAt" : "2018-01-26T19:11:05Z",
        "lastEditedBy" : "405feade-830e-4951-b18e-783f39760468",
        "tags" : [
        ]
      },
      {
        "id" : "6f40e239-bf4e-40ca-b5da-a9a7fad6078c",
        "parentId" : "f3b3ad99-e94d-4216-a526-69e98a9d423b",
        "authorId" : "dc5cf200-e144-4800-af82-c362e8db5238",
        "body" : "It's semantics at this point. `this` refers to the same object, whereas here we're returning a whole new one. ",
        "createdAt" : "2018-01-25T09:06:57Z",
        "updatedAt" : "2018-01-26T19:11:05Z",
        "lastEditedBy" : "dc5cf200-e144-4800-af82-c362e8db5238",
        "tags" : [
        ]
      },
      {
        "id" : "b2c2d379-24ab-4ac6-be2a-f53d325226c7",
        "parentId" : "f3b3ad99-e94d-4216-a526-69e98a9d423b",
        "authorId" : "405feade-830e-4951-b18e-783f39760468",
        "body" : "Oh okay, my thinking was that returning `Schema` returns the base `Schema` class. If we clone, we could be cloning on an interface that extends the base `Schema` class, so returning `this` would be more accurate.\r\n\r\nI think returning `this` means returning the same interface that `clone()` was called on rather than returning the same `object` like in normal code.",
        "createdAt" : "2018-01-25T17:10:37Z",
        "updatedAt" : "2018-01-26T19:11:05Z",
        "lastEditedBy" : "405feade-830e-4951-b18e-783f39760468",
        "tags" : [
        ]
      }
    ],
    "commit" : "de78ab2174ad552bc26ea0f2d120e3462963776a",
    "line" : 290,
    "diffHunk" : "@@ -1,1 +533,537 @@\n    /** Return a deep copy of this schema */\n    clone(): Schema;\n\n    /**"
  },
  {
    "id" : "08d06594-ef0a-4722-8e58-15565fe518a2",
    "prId" : 23070,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/23070#pullrequestreview-91451673",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4ddb185-543b-4b0b-ae9a-314b09d3ee29",
        "parentId" : null,
        "authorId" : "405feade-830e-4951-b18e-783f39760468",
        "body" : "How come these are required when the fields in `ValidateOpts` are optional?",
        "createdAt" : "2018-01-25T05:27:14Z",
        "updatedAt" : "2018-01-26T19:11:05Z",
        "lastEditedBy" : "405feade-830e-4951-b18e-783f39760468",
        "tags" : [
        ]
      },
      {
        "id" : "410dc7c6-6f13-47bd-a93a-da7c32489c65",
        "parentId" : "f4ddb185-543b-4b0b-ae9a-314b09d3ee29",
        "authorId" : "dc5cf200-e144-4800-af82-c362e8db5238",
        "body" : "See `ValidateOpts` discuttion above",
        "createdAt" : "2018-01-25T09:11:39Z",
        "updatedAt" : "2018-01-26T19:11:05Z",
        "lastEditedBy" : "dc5cf200-e144-4800-af82-c362e8db5238",
        "tags" : [
        ]
      }
    ],
    "commit" : "de78ab2174ad552bc26ea0f2d120e3462963776a",
    "line" : 571,
    "diffHunk" : "@@ -1,1 +921,925 @@\n    interface AsyncValidateOpts extends ValidateOptsBase {\n      isAsync: true;\n      validator: AsyncValidateFn<any>;\n    }"
  },
  {
    "id" : "07974914-67c6-412d-b193-996084aa3a33",
    "prId" : 23070,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/23070#pullrequestreview-91693375",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28dcc5e1-2c5e-4d2c-bf01-88129201e8ef",
        "parentId" : null,
        "authorId" : "405feade-830e-4951-b18e-783f39760468",
        "body" : "Can be simplified to:\r\n```ts\r\naggregate(aggregations: any[], cb?: (err: any, res: any[]) => void): Promise<any[]>;\r\n```\r\nBased on: http://mongoosejs.com/docs/api.html#aggregate_aggregate",
        "createdAt" : "2018-01-25T05:55:42Z",
        "updatedAt" : "2018-01-26T19:11:05Z",
        "lastEditedBy" : "405feade-830e-4951-b18e-783f39760468",
        "tags" : [
        ]
      },
      {
        "id" : "fe8b08d5-7ce8-456a-9c88-b1ec14bc348f",
        "parentId" : "28dcc5e1-2c5e-4d2c-bf01-88129201e8ef",
        "authorId" : "dc5cf200-e144-4800-af82-c362e8db5238",
        "body" : "@simonxca Even based on the link you posted, it **cannot** be simplified.\r\n\r\n\"*If a callback is passed, the aggregate is executed and a Promise is returned. If a callback is not passed, the aggregate itself is returned.*\"\r\n\r\nSo based on whether the callback is passed or not, a different thing is returned.",
        "createdAt" : "2018-01-25T21:26:20Z",
        "updatedAt" : "2018-01-26T19:11:05Z",
        "lastEditedBy" : "dc5cf200-e144-4800-af82-c362e8db5238",
        "tags" : [
        ]
      },
      {
        "id" : "e251f5a3-c3c8-4601-9681-8c9afc7a1667",
        "parentId" : "28dcc5e1-2c5e-4d2c-bf01-88129201e8ef",
        "authorId" : "405feade-830e-4951-b18e-783f39760468",
        "body" : "Oops! Misread the return type lol",
        "createdAt" : "2018-01-25T22:24:42Z",
        "updatedAt" : "2018-01-26T19:11:05Z",
        "lastEditedBy" : "405feade-830e-4951-b18e-783f39760468",
        "tags" : [
        ]
      }
    ],
    "commit" : "de78ab2174ad552bc26ea0f2d120e3462963776a",
    "line" : 1343,
    "diffHunk" : "@@ -1,1 +2436,2440 @@     * @param aggregations pipeline operator(s) or operator array\n     */\n    aggregate(aggregations: any[]): Aggregate<any[]>;\n    aggregate(aggregations: any[], cb: Function): Promise<any[]>;\n"
  }
]