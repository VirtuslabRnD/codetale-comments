[
  {
    "id" : "a8f00661-f5a9-432a-81fa-d770104f12c2",
    "prId" : 20783,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20783#pullrequestreview-71003252",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28b66d7f-5ac5-49c5-aa25-e310bd42d797",
        "parentId" : null,
        "authorId" : "335ec6a9-a39c-4f8d-a10a-64ce24d09751",
        "body" : "Probably `webpack.ICompiler`?",
        "createdAt" : "2017-10-21T08:16:57Z",
        "updatedAt" : "2017-10-21T08:16:57Z",
        "lastEditedBy" : "335ec6a9-a39c-4f8d-a10a-64ce24d09751",
        "tags" : [
        ]
      },
      {
        "id" : "367235d3-1977-4c83-8117-b1c52b36e5a0",
        "parentId" : "28b66d7f-5ac5-49c5-aa25-e310bd42d797",
        "authorId" : "335ec6a9-a39c-4f8d-a10a-64ce24d09751",
        "body" : "The suggestion is based on `webpack-dev-middleware`'s implementation and typing.\r\n\r\nhttps://github.com/webpack/webpack-dev-server/blob/master/lib/Server.js#L82\r\nhttps://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/webpack-dev-middleware/index.d.ts#L12",
        "createdAt" : "2017-10-21T08:20:09Z",
        "updatedAt" : "2017-10-21T08:20:09Z",
        "lastEditedBy" : "335ec6a9-a39c-4f8d-a10a-64ce24d09751",
        "tags" : [
        ]
      },
      {
        "id" : "66a56ed0-6527-46ae-ba55-85cf2f779afe",
        "parentId" : "28b66d7f-5ac5-49c5-aa25-e310bd42d797",
        "authorId" : "068804f8-bc88-4ea5-be58-5e946cb4ca93",
        "body" : "In webpack it is declared as such;\r\n```\r\ndeclare function webpack(options?: webpack.Configuration): webpack.Compiler;\r\n```\r\nThus, the correct type is `Compiler` not `ICompiler`, `Compiler` implements `ICompiler` and just to mention `ICompiler` should be renamed as it's not following Typescript guidelines. As interfaces shouldn't not be prefixed with `I`",
        "createdAt" : "2017-10-21T08:23:36Z",
        "updatedAt" : "2017-10-21T08:44:41Z",
        "lastEditedBy" : "068804f8-bc88-4ea5-be58-5e946cb4ca93",
        "tags" : [
        ]
      },
      {
        "id" : "29539189-48c6-49ef-88e8-f4b469fee4d8",
        "parentId" : "28b66d7f-5ac5-49c5-aa25-e310bd42d797",
        "authorId" : "335ec6a9-a39c-4f8d-a10a-64ce24d09751",
        "body" : "ICompiler is an interface. Compiler is a concrete class that implements the interface and extends Tapable. MultiComplier is an abstract class that implements the interface. If you check the implementation, the webpack dev server uses a method named plugin which is from Tapable which is inherited by Compiler only. MultiComplier doesn't guarantee to provide this method. I feel Compiler should be the best match. Not even the ICompiler I suggested... Again, this is a suggestion.\r\n\r\nAs of the guideline, it's for The Typescript project itself. Personally, I think allowing prefix 'I' to interface name is Ok. There are discussions about this guideline out there, such as https://stackoverflow.com/questions/31876947/confused-about-the-interface-and-class-coding-guidelines-for-typescript. I've been using TS for several projects and found that simple prefix like 'I' is helpful in identifying the significant code quickly. ðŸ™‚",
        "createdAt" : "2017-10-21T08:56:26Z",
        "updatedAt" : "2017-10-21T08:56:26Z",
        "lastEditedBy" : "335ec6a9-a39c-4f8d-a10a-64ce24d09751",
        "tags" : [
        ]
      },
      {
        "id" : "0e4a1a5d-c45f-4584-9f1d-b40ada04fad1",
        "parentId" : "28b66d7f-5ac5-49c5-aa25-e310bd42d797",
        "authorId" : "068804f8-bc88-4ea5-be58-5e946cb4ca93",
        "body" : "So `PR` approved :P? ",
        "createdAt" : "2017-10-21T09:02:24Z",
        "updatedAt" : "2017-10-21T09:02:24Z",
        "lastEditedBy" : "068804f8-bc88-4ea5-be58-5e946cb4ca93",
        "tags" : [
        ]
      },
      {
        "id" : "1a5ca428-285c-4e21-ae6c-70a1f7904a0d",
        "parentId" : "28b66d7f-5ac5-49c5-aa25-e310bd42d797",
        "authorId" : "335ec6a9-a39c-4f8d-a10a-64ce24d09751",
        "body" : "yes",
        "createdAt" : "2017-10-21T09:14:57Z",
        "updatedAt" : "2017-10-21T09:14:57Z",
        "lastEditedBy" : "335ec6a9-a39c-4f8d-a10a-64ce24d09751",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc83361fa1747598d42eacd7ca2613280e71e7f1",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +72,76 @@declare class WebpackDevServer {\n    constructor(\n        webpack: webpack.Compiler | webpack.MultiCompiler,\n        config: WebpackDevServer.Configuration\n    );"
  },
  {
    "id" : "a66631a9-4874-4f5e-b4ba-2893cc210082",
    "prId" : 33559,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/33559#pullrequestreview-209900769",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10b4c63a-d717-494f-b727-2ee6f787ba70",
        "parentId" : null,
        "authorId" : "089feb5c-8ede-4cc6-a268-8630c93fd04e",
        "body" : "https://github.com/webpack/webpack-dev-server/blob/master/lib/Server.js#L483",
        "createdAt" : "2019-03-03T09:04:32Z",
        "updatedAt" : "2019-03-03T09:04:45Z",
        "lastEditedBy" : "089feb5c-8ede-4cc6-a268-8630c93fd04e",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d91880e13bf25f568bb4ac990e401afafa82122",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +57,61 @@        allowedHosts?: string[];\n        /** Provides the ability to execute custom middleware prior to all other middleware internally within the server. */\n        before?: (app: express.Application, server: WebpackDevServer) => void;\n        /** This option broadcasts the server via ZeroConf networking on start. */\n        bonjour?: boolean;"
  },
  {
    "id" : "a49c00a4-f7fc-4634-8512-12cb33b0bd80",
    "prId" : 33559,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/33559#pullrequestreview-209900769",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb250eda-caf8-4091-b490-4dce4f8a2014",
        "parentId" : null,
        "authorId" : "089feb5c-8ede-4cc6-a268-8630c93fd04e",
        "body" : "https://github.com/webpack/webpack-dev-server/blob/master/lib/Server.js#L493",
        "createdAt" : "2019-03-03T09:04:34Z",
        "updatedAt" : "2019-03-03T09:04:45Z",
        "lastEditedBy" : "089feb5c-8ede-4cc6-a268-8630c93fd04e",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d91880e13bf25f568bb4ac990e401afafa82122",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +53,57 @@    interface Configuration {\n        /** Provides the ability to execute custom middleware after all other middleware internally within the server. */\n        after?: (app: express.Application, server: WebpackDevServer) => void;\n        /** This option allows you to whitelist services that are allowed to access the dev server. */\n        allowedHosts?: string[];"
  },
  {
    "id" : "e34a8c2e-c493-45f7-87d7-b6ddd702c4f0",
    "prId" : 33559,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/33559#pullrequestreview-209900769",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "600b968c-63a0-4dc4-8fde-512cc0e94b96",
        "parentId" : null,
        "authorId" : "089feb5c-8ede-4cc6-a268-8630c93fd04e",
        "body" : "https://github.com/webpack/webpack-dev-server/blob/master/lib/Server.js#L508",
        "createdAt" : "2019-03-03T09:04:42Z",
        "updatedAt" : "2019-03-03T09:04:45Z",
        "lastEditedBy" : "089feb5c-8ede-4cc6-a268-8630c93fd04e",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d91880e13bf25f568bb4ac990e401afafa82122",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +151,155 @@        quiet?: boolean;\n        /** @deprecated Here you can access the Express app object and add your own custom middleware to it. */\n        setup?: (app: express.Application, server: WebpackDevServer) => void;\n        /** The Unix socket to listen to (instead of a host). */\n        socket?: string;"
  }
]