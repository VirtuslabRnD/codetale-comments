[
  {
    "id" : "5ceba58f-836d-4a78-a99a-a9ed32597ad8",
    "prId" : 22070,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/22070#pullrequestreview-82364147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61714090-44d2-40e1-8ffa-b82c7db8077e",
        "parentId" : null,
        "authorId" : "221bba70-057a-4b37-925c-0342337ea5ee",
        "body" : "@bvanreeven Is there a way to better type these? Ie. this rule should ideally be `Parser<string>`.",
        "createdAt" : "2017-12-10T19:49:43Z",
        "updatedAt" : "2017-12-10T21:58:10Z",
        "lastEditedBy" : "221bba70-057a-4b37-925c-0342337ea5ee",
        "tags" : [
        ]
      },
      {
        "id" : "10f15812-aa46-4bec-b051-3031552c7dc5",
        "parentId" : "61714090-44d2-40e1-8ffa-b82c7db8077e",
        "authorId" : "fd404b0d-707f-45ce-bd52-7e1b97e94ed9",
        "body" : "As far as I can tell, this is not possible without introducing additional type parameters: one for the `rules` parameter, and one for the return type.\r\n\r\nThe return type of `createLanguage` should be an object that has the same properties as the `rules` parameter object, but the types of those properties should match the return types of the functions that are passed as properties of the `rules` parameter object. If that makes sense.\r\n\r\nI tried an approach that has only one type parameter and returns a mapped type of the parameter, but I got stuck here:\r\n\r\n```typescript\r\nfunction createLanguage<TRule extends Rule>(rules: TRule): { [K in keyof TRule]: <return type of>TRule[K] };\r\n```\r\n\r\nAs far as I know, it is currently not possible to statically determine the return type of a function type.",
        "createdAt" : "2017-12-10T21:39:32Z",
        "updatedAt" : "2017-12-10T21:58:10Z",
        "lastEditedBy" : "fd404b0d-707f-45ce-bd52-7e1b97e94ed9",
        "tags" : [
        ]
      },
      {
        "id" : "44f16e24-4b4c-4634-b85c-9c053adbaf34",
        "parentId" : "61714090-44d2-40e1-8ffa-b82c7db8077e",
        "authorId" : "fd404b0d-707f-45ce-bd52-7e1b97e94ed9",
        "body" : "@bcherny I added some documentation on how to use the type parameter in `createLanguage` to make a language specification typed.",
        "createdAt" : "2017-12-10T22:01:19Z",
        "updatedAt" : "2017-12-10T22:01:19Z",
        "lastEditedBy" : "fd404b0d-707f-45ce-bd52-7e1b97e94ed9",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbd47980a3c0fcd862913643c636bddf46ee0c18",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +202,206 @@});\n\n// $ExpectType Parser<any>\nlanguage.SomeRule;\n// $ExpectType Parser<any>"
  }
]