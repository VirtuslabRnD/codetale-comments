[
  {
    "id" : "2740d86d-6cd8-4327-be20-90cbec9c4168",
    "prId" : 38410,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38410#pullrequestreview-292655423",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a0471f7-b383-4bcb-a322-02d9affe11fb",
        "parentId" : null,
        "authorId" : "f6d540bd-fdc2-4205-b709-9c9832e9bd9d",
        "body" : "Unless you explicitly don't want this interface exported, you can remove the `export {}` on line 125.",
        "createdAt" : "2019-09-24T17:49:38Z",
        "updatedAt" : "2019-09-24T17:49:50Z",
        "lastEditedBy" : "f6d540bd-fdc2-4205-b709-9c9832e9bd9d",
        "tags" : [
        ]
      },
      {
        "id" : "e5107c2f-6a0e-4ffc-bdea-956ffa0262b8",
        "parentId" : "3a0471f7-b383-4bcb-a322-02d9affe11fb",
        "authorId" : "95250154-eb30-453c-b4ed-056d9ea61982",
        "body" : "That's intentional: StringList here is basically a boilerplate interface and won't add anything to the module if exported, so I prefer to keep it internal.",
        "createdAt" : "2019-09-24T19:27:54Z",
        "updatedAt" : "2019-09-24T19:27:54Z",
        "lastEditedBy" : "95250154-eb30-453c-b4ed-056d9ea61982",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd27c2686859fdff3998826cdbf853a7fb0bc4bb",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +125,129 @@export {};\n\ninterface StringList {\n    [key: string]: string;\n}"
  },
  {
    "id" : "3c62753e-a3e9-46b1-828a-ab4b10d4a199",
    "prId" : 43681,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/43681#pullrequestreview-388494515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba944053-f27c-4dfd-824b-6179cbc38dd0",
        "parentId" : null,
        "authorId" : "95250154-eb30-453c-b4ed-056d9ea61982",
        "body" : "I see on the [documentation page](https://docs.unlayer.com/docs/merge-tags#section-loops-and-conditions) that there is a \"repeat\" key inside the \"rules\" object, can it be used without it?",
        "createdAt" : "2020-04-06T17:46:58Z",
        "updatedAt" : "2020-04-06T17:48:29Z",
        "lastEditedBy" : "95250154-eb30-453c-b4ed-056d9ea61982",
        "tags" : [
        ]
      },
      {
        "id" : "ecfaac5c-acd7-4c0c-9a84-0d8661ded626",
        "parentId" : "ba944053-f27c-4dfd-824b-6179cbc38dd0",
        "authorId" : "51c9b6bb-de76-413e-a297-834ecf1a3b69",
        "body" : "it's the same thing as in `mergeTags` itself: they use object instead of array, assume the key is just a name of a rule or merge tag. So the form they refer in doc is:\r\n```\r\nmergeTags: {\r\n   myTag: { value, name }\r\n}\r\n```\r\nSince you originally used array for `mergeTags` types, I decided to do not break that and keep the same format. Since array in JS is almost an object -- it works that way",
        "createdAt" : "2020-04-06T18:06:10Z",
        "updatedAt" : "2020-04-06T18:06:10Z",
        "lastEditedBy" : "51c9b6bb-de76-413e-a297-834ecf1a3b69",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd8b76c1dd9f463ce447766fc828bd799f11a4b0",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +43,47 @@export interface ConditionalMergeTag {\n    readonly name: string;\n    readonly rules: ConditionalMergeTagRule[];\n    readonly mergeTags?: SimpleMergeTag[];\n}"
  }
]