[
  {
    "id" : "e7711924-97d1-4995-9ab6-004aaee129d9",
    "prId" : 17290,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/17290#pullrequestreview-49271489",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e78ad29-9e02-4905-b007-65ed291dd993",
        "parentId" : null,
        "authorId" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "body" : "isn't a computed a subscribable? should we than extend `KnockoutSubscribableFunctions<T>` here?",
        "createdAt" : "2017-07-11T17:18:54Z",
        "updatedAt" : "2017-07-11T17:18:54Z",
        "lastEditedBy" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "tags" : [
        ]
      },
      {
        "id" : "a35c3574-9132-408c-9bde-1a5745ee66f9",
        "parentId" : "3e78ad29-9e02-4905-b007-65ed291dd993",
        "authorId" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "body" : "I'll take it back. Computed still get them in other inheritance.",
        "createdAt" : "2017-07-11T17:20:20Z",
        "updatedAt" : "2017-07-11T17:20:20Z",
        "lastEditedBy" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "tags" : [
        ]
      },
      {
        "id" : "33e2a57d-baaa-4592-9e09-0c2cde26fdca",
        "parentId" : "3e78ad29-9e02-4905-b007-65ed291dd993",
        "authorId" : "7c281084-9333-4af6-bcd8-f3fbf3006d17",
        "body" : "I'm wondering whether interface `KnockoutExtensionFunctions` Is needed at all. I have only included it because it is in keeping with the original code.",
        "createdAt" : "2017-07-11T17:31:32Z",
        "updatedAt" : "2017-07-11T17:31:32Z",
        "lastEditedBy" : "7c281084-9333-4af6-bcd8-f3fbf3006d17",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6042ebb83be87966676fe39a6b7ac766c4feb3e",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +13,17 @@}\n\ninterface KnockoutComputedFunctions<T> extends KnockoutExtensionFunctions {\n}\n"
  },
  {
    "id" : "76dbb259-d6a4-475e-9ea5-0ba3d984cd95",
    "prId" : 23478,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/23478#pullrequestreview-100976581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb7aa121-a5cf-4be1-bf1c-70ae0dbcfa8c",
        "parentId" : null,
        "authorId" : "7c7243a2-6b4e-4ef1-9ec4-e8678fe0a699",
        "body" : "Input of type T is still valid for this function.",
        "createdAt" : "2018-03-03T14:30:02Z",
        "updatedAt" : "2018-03-03T14:30:02Z",
        "lastEditedBy" : "7c7243a2-6b4e-4ef1-9ec4-e8678fe0a699",
        "tags" : [
        ]
      },
      {
        "id" : "a2357121-3a35-4ddb-afac-91084a080152",
        "parentId" : "fb7aa121-a5cf-4be1-bf1c-70ae0dbcfa8c",
        "authorId" : "7c7243a2-6b4e-4ef1-9ec4-e8678fe0a699",
        "body" : "You might want to consider adding:\r\n\r\n     isObservable<T>(instance: KnockoutObservable<T>): false;\r\n\r\nOr changing it to:\r\n\r\n     isObservable<T>(instance: KnockoutObservable<T> | T): instance is KnockoutObservable<T>;",
        "createdAt" : "2018-03-03T14:31:18Z",
        "updatedAt" : "2018-03-03T14:31:19Z",
        "lastEditedBy" : "7c7243a2-6b4e-4ef1-9ec4-e8678fe0a699",
        "tags" : [
        ]
      }
    ],
    "commit" : "36bf8b0bb6b3de1d8a3192dd96ddb2fda19deead",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +444,448 @@\n    isObservable(instance: any): instance is KnockoutObservable<any>;\n    isObservable<T>(instance: KnockoutObservable<T>): instance is KnockoutObservable<T>;\n\n    isWriteableObservable(instance: any): instance is KnockoutObservable<any>;"
  },
  {
    "id" : "2225cb61-578e-420e-a1f5-e6fff8dd9c3d",
    "prId" : 23478,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/23478#pullrequestreview-100976564",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f49e7fba-4cc7-4fcc-acf4-19eb26bdfeab",
        "parentId" : null,
        "authorId" : "7c7243a2-6b4e-4ef1-9ec4-e8678fe0a699",
        "body" : "Input of type T is still valid for this function.",
        "createdAt" : "2018-03-03T14:30:29Z",
        "updatedAt" : "2018-03-03T14:30:29Z",
        "lastEditedBy" : "7c7243a2-6b4e-4ef1-9ec4-e8678fe0a699",
        "tags" : [
        ]
      }
    ],
    "commit" : "36bf8b0bb6b3de1d8a3192dd96ddb2fda19deead",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +447,451 @@\n    isWriteableObservable(instance: any): instance is KnockoutObservable<any>;\n    isWriteableObservable<T>(instance: KnockoutObservable<T>): instance is KnockoutObservable<T>;\n\n    isComputed(instance: any): instance is KnockoutComputed<any>;"
  },
  {
    "id" : "37067750-fec1-42b5-a99e-91dd529afe40",
    "prId" : 30499,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/30499#pullrequestreview-177778845",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb00cc73-9aaa-4c1f-9a45-04563aee92ff",
        "parentId" : null,
        "authorId" : "ae1cf0f9-564e-40ad-9cdf-73f717fd1d58",
        "body" : "The TEvent type doesn't seem to be used anywhere. Can it be removed?\r\n```suggestion\r\n    subscribe(callback: (newValue: any) => void, target: any, event: string): KnockoutSubscription;\r\n```",
        "createdAt" : "2018-11-18T18:00:38Z",
        "updatedAt" : "2018-11-18T18:07:06Z",
        "lastEditedBy" : "ae1cf0f9-564e-40ad-9cdf-73f717fd1d58",
        "tags" : [
        ]
      },
      {
        "id" : "3926e6c4-cf64-44fd-9320-94bc6dc7f231",
        "parentId" : "eb00cc73-9aaa-4c1f-9a45-04563aee92ff",
        "authorId" : "83dd42c5-fd1b-4f69-a4a9-cb89643caf20",
        "body" : "I think I agree with you in theory, this is kinda a useless type param; but I'm not adding these types here, I'm just copying them from `KnockoutObservableArray<T>` and it'd be a breaking change to just drop the type param.  \r\n\r\nPerhaps this is best left for a separate PR?  And it'd also be wise to make the corresponding changes in the typings for the KO 3.5 RC, since this type is [largely the same there](https://github.com/knockout/knockout/blob/master/build/types/knockout.d.ts#L22).",
        "createdAt" : "2018-11-19T19:45:02Z",
        "updatedAt" : "2018-11-19T19:45:03Z",
        "lastEditedBy" : "83dd42c5-fd1b-4f69-a4a9-cb89643caf20",
        "tags" : [
        ]
      },
      {
        "id" : "c198cbf3-5088-4d46-82fe-863e39e7bb8a",
        "parentId" : "eb00cc73-9aaa-4c1f-9a45-04563aee92ff",
        "authorId" : "ff309f72-b4c0-4c56-8d02-6bf0ff0b7104",
        "body" : "I engaged @Igorbek in the same subject (removing TEvent) [here](https://github.com/DefinitelyTyped/DefinitelyTyped/commit/87d312bed7ccacb4fadc35835572989f3f55323b#commitcomment-30538573) . There is a situation where TEvent is used, but I believe the code can be improved nevertheless. I recommend continuing there the discussion, or adding a new PR.\r\n",
        "createdAt" : "2018-11-20T18:24:28Z",
        "updatedAt" : "2018-11-20T18:24:29Z",
        "lastEditedBy" : "ff309f72-b4c0-4c56-8d02-6bf0ff0b7104",
        "tags" : [
        ]
      },
      {
        "id" : "aa0e2bab-2452-45fa-b78d-b02a9801382d",
        "parentId" : "eb00cc73-9aaa-4c1f-9a45-04563aee92ff",
        "authorId" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "body" : "I support the idea to remove that overload.",
        "createdAt" : "2018-11-22T21:52:04Z",
        "updatedAt" : "2018-11-22T21:52:04Z",
        "lastEditedBy" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f4da334464c822dc61451f24abe6387239f2662",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +191,195 @@    subscribe(callback: (newValue: T[]) => void, target: any, event: \"beforeChange\"): KnockoutSubscription;\n    subscribe(callback: (newValue: T[]) => void, target?: any, event?: \"change\"): KnockoutSubscription;\n    subscribe<TEvent>(callback: (newValue: TEvent) => void, target: any, event: string): KnockoutSubscription;\n}\n"
  },
  {
    "id" : "6691ccdc-1026-4798-b7ec-137736af2f45",
    "prId" : 31507,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/31507#pullrequestreview-186620196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8bc47e98-d458-4cc7-adb0-214020c9f203",
        "parentId" : null,
        "authorId" : "83dd42c5-fd1b-4f69-a4a9-cb89643caf20",
        "body" : "This could be improved to make the callback aware of the target and the arguments:\r\n\r\n```ts\r\nignoreDependencies<T>(callback: () => T): T;\r\nignoreDependencies<T, Target, Args extends any[]>(\r\n    callback: (this: Target, ...args: Args) => T, callbackTarget?: Target, ...callbackArgs: Args,\r\n): T;\r\n```\r\n\r\nBut maybe that's best addressed in a different PR, as there's a number of places this pattern could be used (and the args bit would require bumping the minimum version of TS for this library to 3.0)",
        "createdAt" : "2018-12-19T16:44:34Z",
        "updatedAt" : "2018-12-20T12:29:21Z",
        "lastEditedBy" : "83dd42c5-fd1b-4f69-a4a9-cb89643caf20",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a8639e259759f74c1a3580acc412e5bd43450e8",
    "line" : 269,
    "diffHunk" : "@@ -1,1 +789,793 @@     * @param callbackArgs Arguments for the callback Function\n     */\n    ignoreDependencies<T>(callback: () => T, callbackTarget?: any, callbackArgs?: any): T;\n\n    expressionRewriting: {"
  },
  {
    "id" : "9dd00578-223f-41a3-88d5-16d52a7e52b6",
    "prId" : 42493,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/42493#pullrequestreview-362039706",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9900bd81-d753-4971-80ef-1716eb9ef595",
        "parentId" : null,
        "authorId" : "83dd42c5-fd1b-4f69-a4a9-cb89643caf20",
        "body" : "Should there be some restriction on `T` here?  It seems weird that you could have something like `viewModel: string`, but maybe that is reasonable?  (I haven't actually used KO's component APIs, myself)",
        "createdAt" : "2020-02-20T15:56:04Z",
        "updatedAt" : "2020-02-20T15:59:49Z",
        "lastEditedBy" : "83dd42c5-fd1b-4f69-a4a9-cb89643caf20",
        "tags" : [
        ]
      },
      {
        "id" : "19b97dbd-6256-4d9f-8d32-6914953547b0",
        "parentId" : "9900bd81-d753-4971-80ef-1716eb9ef595",
        "authorId" : "71c520b0-d76b-48f6-ac92-b6ce8115e6c1",
        "body" : "I couldn't find a better way to do this, and this will allow specifying the class allowing to be more strict.\r\nthis is the is idea whit this change:\r\n`\r\ncomponents.register<ComponentClass>('component-name', {\r\n    viewModel: ComponentClass,\r\n    template: require('./containers/units-set-list/units-set-list-component.html')\r\n});\r\n`",
        "createdAt" : "2020-02-20T16:18:24Z",
        "updatedAt" : "2020-02-20T16:18:25Z",
        "lastEditedBy" : "71c520b0-d76b-48f6-ac92-b6ce8115e6c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "f385c5bb7ef5d1e4b24207831abb6f788bf08a05",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +950,954 @@    type ViewModel = ViewModelFunction | ViewModelSharedInstance | ViewModelFactoryFunction | AMDModule;\n    \n    interface Config<T> {\n        viewModel?: T;\n        template: string | Node[] | DocumentFragment | TemplateElement | AMDModule;"
  }
]