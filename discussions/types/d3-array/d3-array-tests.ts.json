[
  {
    "id" : "719d0878-a6b6-4517-8ff4-a4f65529aab5",
    "prId" : 47181,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/47181#pullrequestreview-504359723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcf9dd49-3453-45d2-ab5d-c0ffeb333bb0",
        "parentId" : null,
        "authorId" : "a32de8c8-aa85-4f6e-86f0-059c4abcc4a4",
        "body" : "Hey @Ledragon, just stumbled upon the PR. A few days ago I started the updates but didn't realize that the PR was already created by you :) Thanks a lot for these updates.\r\n\r\nA tiny suggestion if its okay: [here](https://github.com/DefinitelyTyped/DefinitelyTyped/pull/47181/files#diff-e8b9f215cbab373580660b51a4326b3bR50) there are multiple variables which are already declared. Seems like we may not need to redeclare `mo` as `mixedObjectOrUndefined` can do the same task.",
        "createdAt" : "2020-10-03T10:30:40Z",
        "updatedAt" : "2020-10-03T10:37:21Z",
        "lastEditedBy" : "a32de8c8-aa85-4f6e-86f0-059c4abcc4a4",
        "tags" : [
        ]
      },
      {
        "id" : "3b239a39-87d9-40eb-ad53-8aaaca225067",
        "parentId" : "dcf9dd49-3453-45d2-ab5d-c0ffeb333bb0",
        "authorId" : "a32de8c8-aa85-4f6e-86f0-059c4abcc4a4",
        "body" : "The hyperlink is supposed to point to:\r\n\r\n![Screen Shot 2020-10-03 at 4 10 18 PM](https://user-images.githubusercontent.com/25290212/94989508-fc3aad00-0592-11eb-9271-8fee18b04c98.png)\r\n",
        "createdAt" : "2020-10-03T10:40:50Z",
        "updatedAt" : "2020-10-03T10:40:50Z",
        "lastEditedBy" : "a32de8c8-aa85-4f6e-86f0-059c4abcc4a4",
        "tags" : [
        ]
      },
      {
        "id" : "4baf87a6-bc04-46d5-8d3e-49ccfedad3de",
        "parentId" : "dcf9dd49-3453-45d2-ab5d-c0ffeb333bb0",
        "authorId" : "0762ec2f-c2e9-4296-915b-f2139e71b5ad",
        "body" : "I'll approve this as is, but generally the way to verify types is to use `// $ExpectType`: https://github.com/DefinitelyTyped/DefinitelyTyped/#linter",
        "createdAt" : "2020-10-08T00:45:50Z",
        "updatedAt" : "2020-10-08T00:45:50Z",
        "lastEditedBy" : "0762ec2f-c2e9-4296-915b-f2139e71b5ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa6cad8c5819b3954de780ca253f5247220cd4e5",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +378,382 @@numOrUndefined = d3Array.least(readonlyNumbersArray);\n\nlet mo: MixedObject | undefined = d3Array.least(mixedObjectArray, (a, b) => {\n    const aElem: MixedObject = a;\n    const bElem: MixedObject = b;"
  },
  {
    "id" : "36a7ce5b-ce10-44e1-bf03-c717c790ec32",
    "prId" : 47181,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/47181#pullrequestreview-501536940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "692cf68e-66f7-47b3-aeb0-e50fcd39266f",
        "parentId" : null,
        "authorId" : "a32de8c8-aa85-4f6e-86f0-059c4abcc4a4",
        "body" : "In some places `numOrUndefined` is used. Similarly, we also have [num](https://github.com/DefinitelyTyped/DefinitelyTyped/pull/47181/files#diff-e8b9f215cbab373580660b51a4326b3bR42). Was thinking that we could possibly avoid redeclaring `minIndex` for consistency.",
        "createdAt" : "2020-10-03T10:32:25Z",
        "updatedAt" : "2020-10-03T10:37:21Z",
        "lastEditedBy" : "a32de8c8-aa85-4f6e-86f0-059c4abcc4a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa6cad8c5819b3954de780ca253f5247220cd4e5",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +214,218 @@\nlet minIndex: number = d3Array.minIndex([3, 3, 1, 1]); // 2\nminIndex = d3Array.minIndex([\"20\", \"3\"]); // 0\nminIndex = d3Array.minIndex([{ name: \"Alice\", age: 23 }, { name: \"Bob\", age: 32 }], d => d.age); // 0\n// extent() --------------------------------------------------------------------"
  },
  {
    "id" : "7181d3b0-3b27-4ee4-a8f7-cab68dd09b1a",
    "prId" : 47181,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/47181#pullrequestreview-501536940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96ce1bcb-71cd-407a-a412-0dafbd13edcd",
        "parentId" : null,
        "authorId" : "a32de8c8-aa85-4f6e-86f0-059c4abcc4a4",
        "body" : "Had a small hunch that the following could be better since as per docs, the output of `.leastIndex` is a number.\r\n\r\n```\r\nnum = d3Array.leastIndex(numbersArray);\r\n```",
        "createdAt" : "2020-10-03T10:34:24Z",
        "updatedAt" : "2020-10-03T10:37:21Z",
        "lastEditedBy" : "a32de8c8-aa85-4f6e-86f0-059c4abcc4a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa6cad8c5819b3954de780ca253f5247220cd4e5",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +406,410 @@// leastIndex() ----------------------------------------------------------------------\n\nnumOrUndefined = d3Array.leastIndex(numbersArray);\nnumOrUndefined = d3Array.leastIndex(typedArray);\nnumOrUndefined = d3Array.leastIndex(readonlyNumbersArray);"
  },
  {
    "id" : "7382ae2f-bf15-493c-89f6-b6761c9a5cd4",
    "prId" : 47181,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/47181#pullrequestreview-501536940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6385be53-c6da-4507-bcc7-2a13836a9ce6",
        "parentId" : null,
        "authorId" : "a32de8c8-aa85-4f6e-86f0-059c4abcc4a4",
        "body" : "For consistency, we could use:\r\n\r\n```\r\nnum = d3Array.count([1, 2, NaN]); // 2\r\n```\r\n\r\nto avoid redeclaring a new variable.",
        "createdAt" : "2020-10-03T10:35:12Z",
        "updatedAt" : "2020-10-03T10:39:06Z",
        "lastEditedBy" : "a32de8c8-aa85-4f6e-86f0-059c4abcc4a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa6cad8c5819b3954de780ca253f5247220cd4e5",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +635,639 @@let count: number;\n\ncount = d3Array.count([1, 2, NaN]); // 2\ncount = d3Array.count<{ n: string, age?: number; }>([{ n: \"Alice\", age: NaN }, { n: \"Bob\", age: 18 }, { n: \"Other\" }], d => d.age); // 1\n"
  },
  {
    "id" : "e8fd7831-bbdd-4fe5-8dc6-50ca9a3cb712",
    "prId" : 48733,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/48733#pullrequestreview-510981058",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b41b0780-28d1-44fa-a814-b2a7f2676782",
        "parentId" : null,
        "authorId" : "a9f6ae89-a49d-4f8d-b41c-7e84e66ee181",
        "body" : "was scan fully removed? I guess it makes sense to remove the tests as it is deprectaed though",
        "createdAt" : "2020-10-17T08:55:11Z",
        "updatedAt" : "2020-10-17T08:55:11Z",
        "lastEditedBy" : "a9f6ae89-a49d-4f8d-b41c-7e84e66ee181",
        "tags" : [
        ]
      },
      {
        "id" : "36ebd93d-c13a-4307-8b1e-513d027f9e31",
        "parentId" : "b41b0780-28d1-44fa-a814-b2a7f2676782",
        "authorId" : "6d447f9d-4946-46c6-8162-102e21d6a2ed",
        "body" : "The documentation for it was removed in https://github.com/d3/d3-array/commit/09b8ff21742b365a7090e728120640fb45464637 (before the `2.3.0` release), so I assumed it was just an oversight that it wasn't fully removed in `2.0.0`.",
        "createdAt" : "2020-10-17T12:09:26Z",
        "updatedAt" : "2020-10-17T12:09:26Z",
        "lastEditedBy" : "6d447f9d-4946-46c6-8162-102e21d6a2ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f00f793ebd1e5467d224a402569dc6ae40981e7",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +348,352 @@typedArray = Uint8Array.from(numbersArray);\n\n// least() ----------------------------------------------------------------------\n\nnumOrUndefined = d3Array.least(numbersArray);"
  }
]