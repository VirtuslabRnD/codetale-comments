[
  {
    "id" : "88f85412-0ed5-4c85-8469-715709a54e58",
    "prId" : 18580,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/18580#pullrequestreview-53901069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "becd87f3-f325-47a1-bb63-064d2116c6fe",
        "parentId" : null,
        "authorId" : "33587b93-8d75-4f25-af28-4401f06bc6b9",
        "body" : "This is a special case due to the spread operator",
        "createdAt" : "2017-08-02T15:07:39Z",
        "updatedAt" : "2017-08-02T21:50:05Z",
        "lastEditedBy" : "33587b93-8d75-4f25-af28-4401f06bc6b9",
        "tags" : [
        ]
      },
      {
        "id" : "30916bcd-4113-4564-8201-7dc2f6d7c8a9",
        "parentId" : "becd87f3-f325-47a1-bb63-064d2116c6fe",
        "authorId" : "b97ad7b9-a71a-418e-8d81-d15777ab9de6",
        "body" : "üëç ",
        "createdAt" : "2017-08-02T19:07:32Z",
        "updatedAt" : "2017-08-02T21:50:05Z",
        "lastEditedBy" : "b97ad7b9-a71a-418e-8d81-d15777ab9de6",
        "tags" : [
        ]
      }
    ],
    "commit" : "59ba4262269804bc52374a9993ce84283807e432",
    "line" : 251,
    "diffHunk" : "@@ -1,1 +306,310 @@ * contains one-element arrays. With no arguments, the returned array is empty.\n */\nexport function zip<T>(...arrays: Array<ArrayLike<T>>): T[][];\n\n// --------------------------------------------------------------------------------------"
  },
  {
    "id" : "702f1087-de66-4b5d-be93-628fc962751a",
    "prId" : 25450,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/25450#pullrequestreview-121625362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19d0ba70-c147-41bc-bb03-96834f0dbdc7",
        "parentId" : null,
        "authorId" : "b97ad7b9-a71a-418e-8d81-d15777ab9de6",
        "body" : "Not sure, we want/need the union with `undefined` on `x0` and `x1`, we had had a similar pattern in **d3-geo** and omitted it. Here was the approach:\r\n* we did add a default, so it would become `Bin<Datum, value extends number | Date | undefined = number | Date | undefined>` (for convenience)\r\n* In the general case, this already means, that `x0` and `x1` may be `undefined`, however,\r\n* If for a particular use case the developer is certain, that `undefined` will never occur, they could narrow `Value` to e.g. just `number` or just `Date` (in our case, this would occur using the generics for `histogram<...>()`, or if they define variables in reference to a `HistogramGenerator...<...>`. This is essentially syntactic sugar for not having to address the `x0`/`x1` undefined cases, if known ex ante.",
        "createdAt" : "2018-05-13T22:58:29Z",
        "updatedAt" : "2018-07-06T09:43:13Z",
        "lastEditedBy" : "b97ad7b9-a71a-418e-8d81-d15777ab9de6",
        "tags" : [
        ]
      },
      {
        "id" : "a1b32d7a-f0bd-4ce4-b359-5b03b2f67e33",
        "parentId" : "19d0ba70-c147-41bc-bb03-96834f0dbdc7",
        "authorId" : "2fae8227-ccd9-49df-a4f8-bb089d9a0638",
        "body" : "`Value` is the value accessor return type. If someone use a value accessor which always returns `number` and also may pass an empty list to `histogram(.)` at some point, we will force him to use `number | undefined` instead as `Value` generic.\r\n\r\nAlso note that all over in d3-array, we have functions returning `undefined` on empty list, and which therefore need a type assertion for most common use. I cannot tell you how many times I wrote: `d3.max(...)!` or `d3.min(...)!`. So I find this consistant.\r\n\r\nOf course in general and for most users, it would be simpler as you propose...",
        "createdAt" : "2018-05-14T21:02:57Z",
        "updatedAt" : "2018-07-06T09:43:13Z",
        "lastEditedBy" : "2fae8227-ccd9-49df-a4f8-bb089d9a0638",
        "tags" : [
        ]
      },
      {
        "id" : "55c183d8-b90b-4c27-94f7-c0fab1687814",
        "parentId" : "19d0ba70-c147-41bc-bb03-96834f0dbdc7",
        "authorId" : "b97ad7b9-a71a-418e-8d81-d15777ab9de6",
        "body" : "As you point out the scenario is slightly different from the one in **d3-geo**, i.e. the empty list argument you make w.r.t. `histogram(...)`, so let's leave it as is here.\r\n\r\nI know, what you are saying about `!`-assertions in other uses of **d3-array**, I just prefer to minimize the need for it, whenever, there is a well-defined declarative approach.\r\n\r\nMore broadly, I find the assertions can easily get out of hand and can mask mistakes, in particular when re-factoring upstream code which then violates the assumptions that once justified the assertion. :smile:",
        "createdAt" : "2018-05-19T17:54:54Z",
        "updatedAt" : "2018-07-06T09:43:13Z",
        "lastEditedBy" : "b97ad7b9-a71a-418e-8d81-d15777ab9de6",
        "tags" : [
        ]
      }
    ],
    "commit" : "96052d68340bc9a947e12ff1b55040b9cd697791",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +326,330 @@\nexport interface Bin<Datum, Value extends number | Date | undefined> extends Array<Datum> {\n    x0: Value | undefined;\n    x1: Value | undefined;\n}"
  },
  {
    "id" : "3122e278-7cc3-4bf6-900d-263c467ffd1f",
    "prId" : 25450,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/25450#pullrequestreview-133833723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "efe87c34-d254-472d-a371-de168441f773",
        "parentId" : null,
        "authorId" : "b97ad7b9-a71a-418e-8d81-d15777ab9de6",
        "body" : "Regardless of any discussion of splitting the `HistogramGeneratorXYZ`, the second generic should probably be `number | undefined`, see my comment above w.r.t. allowing explicit narrowing, but removing the `undefined` from `x0`/`x1`.",
        "createdAt" : "2018-05-13T23:01:09Z",
        "updatedAt" : "2018-07-06T09:43:13Z",
        "lastEditedBy" : "b97ad7b9-a71a-418e-8d81-d15777ab9de6",
        "tags" : [
        ]
      },
      {
        "id" : "d3bce563-e968-4d17-a8dd-6f061611f588",
        "parentId" : "efe87c34-d254-472d-a371-de168441f773",
        "authorId" : "b97ad7b9-a71a-418e-8d81-d15777ab9de6",
        "body" : "Are we changing this to `export function histogram(): HistogramGeneratorNumber<number, number | undefined>;` for the default.",
        "createdAt" : "2018-07-03T04:34:20Z",
        "updatedAt" : "2018-07-06T09:43:13Z",
        "lastEditedBy" : "b97ad7b9-a71a-418e-8d81-d15777ab9de6",
        "tags" : [
        ]
      }
    ],
    "commit" : "96052d68340bc9a947e12ff1b55040b9cd697791",
    "line" : 171,
    "diffHunk" : "@@ -1,1 +463,467 @@}\n\nexport function histogram(): HistogramGeneratorNumber<number, number>;\nexport function histogram<Datum, Value extends number | undefined>(): HistogramGeneratorNumber<Datum, Value>;\nexport function histogram<Datum, Value extends Date | undefined>(): HistogramGeneratorDate<Datum, Value>;"
  }
]