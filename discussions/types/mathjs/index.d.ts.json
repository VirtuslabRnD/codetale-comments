[
  {
    "id" : "3cfa3481-2494-4ce2-87a8-7626eb358417",
    "prId" : 24639,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/24639#pullrequestreview-108381639",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e400690-e981-4f9d-8816-7abdfdb82895",
        "parentId" : null,
        "authorId" : "26c05778-4426-489f-a8a1-2a6af08f6974",
        "body" : "These changes caused a few unit tests to fail. This is because `BigNumber` before was `{}`, allowing nearly any value to be passed into this function. Specifically the test was passing a `Unit`.",
        "createdAt" : "2018-03-30T17:20:24Z",
        "updatedAt" : "2018-03-30T17:28:54Z",
        "lastEditedBy" : "26c05778-4426-489f-a8a1-2a6af08f6974",
        "tags" : [
        ]
      }
    ],
    "commit" : "30d6b3445bba07d627edc20c77eee17fb530c3ee",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +309,313 @@\t\t * @param y The exponent\n\t\t */\n\t\tpow(x: MathType, y: number|BigNumber|Complex): MathType;\n\n\t\t/**"
  },
  {
    "id" : "4140f153-74d3-4749-a9f6-5b22fe82acad",
    "prId" : 24639,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/24639#pullrequestreview-108381764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "447ee0e6-0fa0-404d-a0d1-4cb28ea449e1",
        "parentId" : null,
        "authorId" : "26c05778-4426-489f-a8a1-2a6af08f6974",
        "body" : "Sorry, these are just whitespace changes. My ocd got the better of me.",
        "createdAt" : "2018-03-30T17:20:59Z",
        "updatedAt" : "2018-03-30T17:28:54Z",
        "lastEditedBy" : "26c05778-4426-489f-a8a1-2a6af08f6974",
        "tags" : [
        ]
      }
    ],
    "commit" : "30d6b3445bba07d627edc20c77eee17fb530c3ee",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +1356,1360 @@\n\texport interface IPolarCoordinates {\n        r: number;\n\t\tphi: number;\n    }"
  },
  {
    "id" : "621201c4-a39d-42e7-b87d-41dafe35e3cd",
    "prId" : 24725,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/24725#pullrequestreview-109532235",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78c99d99-136f-48db-bd30-cadc39851f9a",
        "parentId" : null,
        "authorId" : "26c05778-4426-489f-a8a1-2a6af08f6974",
        "body" : "mathjs 4.0 is out now, but I do not believe these types are completely correct for 4.0",
        "createdAt" : "2018-04-04T23:13:57Z",
        "updatedAt" : "2018-04-04T23:13:57Z",
        "lastEditedBy" : "26c05778-4426-489f-a8a1-2a6af08f6974",
        "tags" : [
        ]
      }
    ],
    "commit" : "89ce03738aba7e5aaa2857c517faecc3edb5ad05",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +-1,3 @@// Type definitions for mathjs 3.20\n// Project: http://mathjs.org/\n// Definitions by: Ilya Shestakov <https://github.com/siavol>,"
  },
  {
    "id" : "1d99c8ae-6248-4e29-9c97-c71748878ae8",
    "prId" : 24725,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/24725#pullrequestreview-109532507",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f5fa551-48d4-457e-8d17-6820e76be485",
        "parentId" : null,
        "authorId" : "26c05778-4426-489f-a8a1-2a6af08f6974",
        "body" : "I'm using `Record` in here, which raises the minimum TS version to 2.1. If there are any objections to this, I can roll that back, but I want to be able to use more up-to-date TS as I continue working on these types.",
        "createdAt" : "2018-04-04T23:15:26Z",
        "updatedAt" : "2018-04-04T23:15:26Z",
        "lastEditedBy" : "26c05778-4426-489f-a8a1-2a6af08f6974",
        "tags" : [
        ]
      }
    ],
    "commit" : "89ce03738aba7e5aaa2857c517faecc3edb5ad05",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +4,8 @@// \t\t\t\t   Andy Patterson <https://github.com/andnp>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.1\n\nimport { Decimal } from 'decimal.js';"
  },
  {
    "id" : "d424bb27-06bc-40d5-b0c0-c982c0b2d1f6",
    "prId" : 26350,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/26350#pullrequestreview-127347501",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4265f41e-cf3b-4a12-9321-ba85b46fff42",
        "parentId" : null,
        "authorId" : "26c05778-4426-489f-a8a1-2a6af08f6974",
        "body" : "I was tempted to see if we could do any better than `any`, `any`, `any`.\r\n\r\nIf we wanted to be a little stronger we could at least say `key` should be `string`, but I'm not sure that we can improve `value` or the return.",
        "createdAt" : "2018-06-09T01:11:52Z",
        "updatedAt" : "2018-06-09T01:11:52Z",
        "lastEditedBy" : "26c05778-4426-489f-a8a1-2a6af08f6974",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7e3d7cd973e8297fb0fddc104559af623720041",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +2256,2260 @@\t\t * Returns reviver function that can be used as reviver in JSON.parse function.\n\t\t */\n\t\treviver(): (key: any, value: any) => any;\n\t}\n}"
  },
  {
    "id" : "60d684d0-9292-44cc-82af-63e0c6816dbc",
    "prId" : 26468,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/26468#pullrequestreview-128441035",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b16697f-1d23-424b-bb50-4c28e6c02d48",
        "parentId" : null,
        "authorId" : "26c05778-4426-489f-a8a1-2a6af08f6974",
        "body" : "I wonder if we could just make this `string | MathType`? I can't tell if this is just an enumeration of all of the values `MathType` encompasses.",
        "createdAt" : "2018-06-12T12:32:58Z",
        "updatedAt" : "2018-06-12T12:32:58Z",
        "lastEditedBy" : "26c05778-4426-489f-a8a1-2a6af08f6974",
        "tags" : [
        ]
      },
      {
        "id" : "79d0ac08-768a-4df9-8dff-76742679e462",
        "parentId" : "3b16697f-1d23-424b-bb50-4c28e6c02d48",
        "authorId" : "d853babe-4254-41de-b4dc-f225efa4a6ff",
        "body" : "They seem different to me.",
        "createdAt" : "2018-06-13T15:41:55Z",
        "updatedAt" : "2018-06-13T15:41:55Z",
        "lastEditedBy" : "d853babe-4254-41de-b4dc-f225efa4a6ff",
        "tags" : [
        ]
      },
      {
        "id" : "688f4cf0-91b4-42fa-aa7f-b0f397c78e91",
        "parentId" : "3b16697f-1d23-424b-bb50-4c28e6c02d48",
        "authorId" : "d853babe-4254-41de-b4dc-f225efa4a6ff",
        "body" : "Thank you for reviewing!",
        "createdAt" : "2018-06-13T15:42:14Z",
        "updatedAt" : "2018-06-13T15:42:15Z",
        "lastEditedBy" : "d853babe-4254-41de-b4dc-f225efa4a6ff",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e3bfeaf20b7c9af2774c5b776ebf8acdc3a453b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +544,548 @@\t\t * Create a number or convert a string, boolean, or unit to a number. When value is a matrix, all elements will be converted to number.\n\t\t */\n\t\tnumber(value?: string|number|boolean|MathArray|Matrix|Unit|BigNumber|Fraction): number|MathArray|Matrix;\n\t\tnumber(unit: Unit, valuelessUnit: Unit|string): number|MathArray|Matrix;\n"
  }
]