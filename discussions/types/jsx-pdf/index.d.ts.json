[
  {
    "id" : "0d53eee8-22e5-4c44-bdee-3e50bdd36736",
    "prId" : 47759,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/47759#pullrequestreview-494748396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eab1c8cc-e058-489e-bfcb-7e749f9b403e",
        "parentId" : null,
        "authorId" : "e30eb346-917e-4cfa-b6d7-7688bc735d2e",
        "body" : "@orta @DanielRosenwasser  do any of you know this library. I am not sure adding jsx in global is right thing to do or not esp whats the impact when these types are imported with or without react.",
        "createdAt" : "2020-09-21T19:42:24Z",
        "updatedAt" : "2020-09-21T19:42:24Z",
        "lastEditedBy" : "e30eb346-917e-4cfa-b6d7-7688bc735d2e",
        "tags" : [
        ]
      },
      {
        "id" : "ae80b4b1-8863-42ca-8093-a3b4f240755d",
        "parentId" : "eab1c8cc-e058-489e-bfcb-7e749f9b403e",
        "authorId" : "40e61ff8-b223-4e7e-8f91-44bc16197019",
        "body" : "I don't know this lib directly, but I know the genre. \r\n\r\nI compared this with [the global.d.ts](https://github.com/vadimdemedes/ink/blob/master/src/global.d.ts#L6) in [Ink](https://github.com/vadimdemedes/ink), which imports some of of the types from react directly. I'd _imagine_ this is probably less likely to cause issues, but for both `Element` and `IntrinsicElements` it's using interface merging which should mean it works out of the box with React.\r\n\r\nSo, I'm a üëçüèª for the PR, but I think it's worth getting a reply from @k-yle about whether they looked into re-using some of the imports from react ",
        "createdAt" : "2020-09-21T21:43:45Z",
        "updatedAt" : "2020-09-21T21:50:19Z",
        "lastEditedBy" : "40e61ff8-b223-4e7e-8f91-44bc16197019",
        "tags" : [
        ]
      },
      {
        "id" : "ada54d8e-d34b-47ef-abe7-28aae5beb3a9",
        "parentId" : "eab1c8cc-e058-489e-bfcb-7e749f9b403e",
        "authorId" : "7e6a08d9-b68a-4060-a40e-e26d4adec47d",
        "body" : "Hi @orta, I'm certainly no expert on the matter.. my limited understanding made me think that if `@types/jsx-pdf` declares the global JSX namespace, then importing `@types/react` which does the same would cause problems. \r\n\r\nYou linked to [Ink](https://github.com/vadimdemedes/ink/blob/master/src/global.d.ts?rgh-link-date=2020-09-21T21%3A50%3A19Z#L6), which imports `ReactNode`, `Key`, and `LegacyRef` from react. We don't need refs, and `Key` is just `string | number`. Similarly, `ReactNode` is just `string | number | boolean | undefined | null | Element | Element[]`. So I didn't think we actually need anything from react since those are trivial enough for us to define ourselves.\r\n\r\nBut if it works for Ink and it's simpler, then I can make the change",
        "createdAt" : "2020-09-21T22:01:28Z",
        "updatedAt" : "2020-09-21T22:01:28Z",
        "lastEditedBy" : "7e6a08d9-b68a-4060-a40e-e26d4adec47d",
        "tags" : [
        ]
      },
      {
        "id" : "89a12ae3-717f-4792-a4c3-00dc435f0aac",
        "parentId" : "eab1c8cc-e058-489e-bfcb-7e749f9b403e",
        "authorId" : "40e61ff8-b223-4e7e-8f91-44bc16197019",
        "body" : "Ah yeah, was just coming back today to say this feels reasonable to me as-is üëçüèª ",
        "createdAt" : "2020-09-23T14:52:53Z",
        "updatedAt" : "2020-09-23T14:52:53Z",
        "lastEditedBy" : "40e61ff8-b223-4e7e-8f91-44bc16197019",
        "tags" : [
        ]
      }
    ],
    "commit" : "df79dcd62ea339be25903cfd916feaf664d8c47f",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +9,13 @@\ndeclare global {\n    namespace JSX {\n        // tslint:disable-next-line:no-empty-interface\n        interface Element {}"
  }
]