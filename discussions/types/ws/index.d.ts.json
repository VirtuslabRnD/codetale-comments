[
  {
    "id" : "b0423e43-0f62-4532-ae4f-f9dd436b1c9a",
    "prId" : 16145,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/16145#pullrequestreview-36694047",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40183714-cda0-4604-adc4-51df25dee127",
        "parentId" : null,
        "authorId" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "body" : "a callback parameter should not be optional. this should be:\r\n```ts\r\ncallback: (res: boolean, code: number, message: string) => void) => void;\r\n```",
        "createdAt" : "2017-05-03T21:40:12Z",
        "updatedAt" : "2017-05-03T21:40:12Z",
        "lastEditedBy" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "tags" : [
        ]
      },
      {
        "id" : "c7ec9475-8f6b-4d34-9c38-cfb2066d416a",
        "parentId" : "40183714-cda0-4604-adc4-51df25dee127",
        "authorId" : "7afd270a-90e4-4a53-abd3-c9be0db686fc",
        "body" : "Hi @mhegazy , thanks for suggestion!\r\n\r\nBut if I set the rest parameters required, declaration is not backward compatible. All the existing codes cannot pass the compilation.",
        "createdAt" : "2017-05-05T16:03:57Z",
        "updatedAt" : "2017-05-05T16:03:57Z",
        "lastEditedBy" : "7afd270a-90e4-4a53-abd3-c9be0db686fc",
        "tags" : [
        ]
      },
      {
        "id" : "59094599-a60d-4b8d-8dc1-8250575fce6e",
        "parentId" : "40183714-cda0-4604-adc4-51df25dee127",
        "authorId" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "body" : "you have an example?",
        "createdAt" : "2017-05-05T17:08:58Z",
        "updatedAt" : "2017-05-05T17:08:58Z",
        "lastEditedBy" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "tags" : [
        ]
      },
      {
        "id" : "19560e4c-59d4-4fba-b7e9-066f629126c3",
        "parentId" : "40183714-cda0-4604-adc4-51df25dee127",
        "authorId" : "7afd270a-90e4-4a53-abd3-c9be0db686fc",
        "body" : "```typescript\r\nconst wss = new WebSocket.Server({\r\n    host: address,\r\n    port: port,\r\n    verifyClient: (info, verify) => {\r\n        const id = getIdFromRequest(info.req);  // Get \"id\" param from URL parameters.\r\n        if (id) {\r\n            verify(true);\r\n        } else {\r\n            verify(false);\r\n        }\r\n    }\r\n});\r\n```\r\n\r\nSuppose we have existing code like above, it works with current declaration.\r\n\r\nBut if we extend the declaration without optional, just like:\r\n\r\n```typescript\r\ncallback: (res: boolean, code: number, message: string) => void) => void;\r\n```\r\n\r\nThe tsc compiler will reject the code with error `[ts] Supplied parameters do not match any signature of call target.`",
        "createdAt" : "2017-05-08T05:23:40Z",
        "updatedAt" : "2017-05-08T05:23:40Z",
        "lastEditedBy" : "7afd270a-90e4-4a53-abd3-c9be0db686fc",
        "tags" : [
        ]
      }
    ],
    "commit" : "db2e37ddf0a8afafdb1e9191bb58efaf411d5960",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +83,87 @@    type VerifyClientCallbackSync = (info: { origin: string; secure: boolean; req: http.IncomingMessage }) => boolean;\n    type VerifyClientCallbackAsync = (info: { origin: string; secure: boolean; req: http.IncomingMessage }\n        , callback: (res: boolean, code?: number, message?: string) => void) => void;\n\n    export interface IClientOptions {"
  }
]