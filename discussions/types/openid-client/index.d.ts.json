[
  {
    "id" : "0a4c7b05-7762-4117-941b-f7079735dd5a",
    "prId" : 36645,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/36645#pullrequestreview-260993033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9364c3ab-f929-48dd-8a18-78cd00551e34",
        "parentId" : null,
        "authorId" : "28aab869-30d5-42f8-8a85-4af7d5854cea",
        "body" : "Sorry, what‚Äôs this? Given that other things are already exported, I‚Äôm pretty sure this isn‚Äôt needed?",
        "createdAt" : "2019-07-08T17:07:30Z",
        "updatedAt" : "2019-07-08T17:07:30Z",
        "lastEditedBy" : "28aab869-30d5-42f8-8a85-4af7d5854cea",
        "tags" : [
        ]
      },
      {
        "id" : "64946a64-3a32-4ace-84a2-38fed23ddc7a",
        "parentId" : "9364c3ab-f929-48dd-8a18-78cd00551e34",
        "authorId" : "fcf0351b-56e8-4f4d-9896-2b8751544f00",
        "body" : "Hi @andrewbranch \r\n\r\nYou mean the `export { }`? \r\n\r\nThis is to avoid exporting _all_ declarations (instead require an explicit `export`). Especially, I want to avoid that (the new) `HttpRequestOptions` and `CustomHttpOptionsProvider` types get exported as these are \"internal\" types.\r\n\r\nBTW: The DT linting rules recommended to do this:\r\n\r\n![image](https://user-images.githubusercontent.com/388796/60831465-f13f7400-a1b9-11e9-9dd0-2aeeb3ed3bfe.png)\r\n\r\n\r\n",
        "createdAt" : "2019-07-08T17:52:47Z",
        "updatedAt" : "2019-07-08T17:53:31Z",
        "lastEditedBy" : "fcf0351b-56e8-4f4d-9896-2b8751544f00",
        "tags" : [
        ]
      },
      {
        "id" : "2eb0a8b4-56ff-4e08-85b0-475a14f50fc7",
        "parentId" : "9364c3ab-f929-48dd-8a18-78cd00551e34",
        "authorId" : "0762ec2f-c2e9-4296-915b-f2139e71b5ad",
        "body" : "Out of curiosity, why wouldn't you want someone to access these definitions?",
        "createdAt" : "2019-07-08T20:08:06Z",
        "updatedAt" : "2019-07-08T20:08:06Z",
        "lastEditedBy" : "0762ec2f-c2e9-4296-915b-f2139e71b5ad",
        "tags" : [
        ]
      },
      {
        "id" : "94fd8220-4682-4fb3-8c0e-748ebcf987e5",
        "parentId" : "9364c3ab-f929-48dd-8a18-78cd00551e34",
        "authorId" : "fcf0351b-56e8-4f4d-9896-2b8751544f00",
        "body" : "My thoughts:\r\n1. These types are just utility types / type aliases to avoid repetition/duplication of them in the following `Issuer` and `Client` types. Both types don't exist as _explicit_ concept in the \"openid-client\" library.\r\n1. These types unnecessarily pollute the `import { ... } from 'openid-client'` \"namespace\" (i.e. produce unnecessary items in the syntax completion).\r\n1. These utility types are no \"public contract\" => for example we can rename them without breaking consumers.\r\n\r\n.. that said, I'm not totally against exposing them, so if you think it's better to always export all interfaces, including \"intermediate\" types, I'lll change that.",
        "createdAt" : "2019-07-08T21:08:45Z",
        "updatedAt" : "2019-07-08T21:11:09Z",
        "lastEditedBy" : "fcf0351b-56e8-4f4d-9896-2b8751544f00",
        "tags" : [
        ]
      },
      {
        "id" : "72ebdf41-020c-4380-8ae6-a6cc549d05f6",
        "parentId" : "9364c3ab-f929-48dd-8a18-78cd00551e34",
        "authorId" : "1985e37c-2f23-4a96-8385-ab8d42e6573b",
        "body" : "Any more comments @andrewbranch and @rbuckton and is it good for merging?",
        "createdAt" : "2019-07-11T22:56:45Z",
        "updatedAt" : "2019-07-11T22:56:45Z",
        "lastEditedBy" : "1985e37c-2f23-4a96-8385-ab8d42e6573b",
        "tags" : [
        ]
      },
      {
        "id" : "10a496e8-d5a0-4d5c-bbfe-8f353eb0394e",
        "parentId" : "9364c3ab-f929-48dd-8a18-78cd00551e34",
        "authorId" : "28aab869-30d5-42f8-8a85-4af7d5854cea",
        "body" : "No issue from me üëç ",
        "createdAt" : "2019-07-11T22:58:00Z",
        "updatedAt" : "2019-07-11T22:58:00Z",
        "lastEditedBy" : "28aab869-30d5-42f8-8a85-4af7d5854cea",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa3b258294350161d963a64cb7c418fb4df326f0",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +11,15 @@import { GotOptions } from 'got';\n\nexport { }; // Disable automatic export of all module members (make it explicit)\n\n//"
  }
]