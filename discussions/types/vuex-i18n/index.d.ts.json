[
  {
    "id" : "ce4c1019-5491-47d2-a92e-2cad3905e9ae",
    "prId" : 26780,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/26780#pullrequestreview-133425742",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8ebbd35-88ce-472f-91e6-a24224b56b23",
        "parentId" : null,
        "authorId" : "994ce329-a5cb-4357-afff-0652d8c4f62b",
        "body" : "doesn't look like options is really optional.\r\n\r\n```\r\n\tif (count > 3) {\r\n\t    options = args[3];\r\n\t}\r\nâ€¦\r\n\t\t} else {\r\n...\r\n\t\tif (count > 2) {\r\n\t\t\toptions = args[2];\r\n\t\t\t}\r\n```\r\nI would add an extra overload to match the 2nd signature:\r\n>// get localized string from store in a given language if available.\r\n// there are two possible signatures for the function.\r\n// we will check the arguments to make up the options passed.\r\n// 1: locale, key, options, pluralization\r\n// 2: locale, key, defaultValue, options, pluralization\r\n\r\n",
        "createdAt" : "2018-06-29T19:53:27Z",
        "updatedAt" : "2018-06-30T13:13:04Z",
        "lastEditedBy" : "994ce329-a5cb-4357-afff-0652d8c4f62b",
        "tags" : [
        ]
      },
      {
        "id" : "d41a5039-7366-4a32-8fce-032e3c56f517",
        "parentId" : "e8ebbd35-88ce-472f-91e6-a24224b56b23",
        "authorId" : "4720b933-9434-4daf-8bf5-d0a6870880cd",
        "body" : "I'm certain it's optional. Here's a bit more context...\r\n\r\n```javascript\r\nlet translateInLanguage = function translateInLanguage(locale) {\r\n\t// initialize options\r\n\tlet options = {};\r\n\r\n\t// check if a default value was specified and fill options accordingly\r\n\tif (count >= 3 && typeof args[2] === 'string') {\r\n\t\tif (count > 3) {\r\n\t\t\toptions = args[3];\r\n\t\t}\r\n\t} else {\r\n\t\tif (count > 2) {\r\n\t\t\toptions = args[2];\r\n\t\t}\r\n\t}\r\n\r\n\t// and later...\r\n\treturn render(/* ... */, /* ... */, options, /* ... */);\r\n};\r\n```\r\n\r\n`options` is initialized as an empty object and is only overwritten if it is passed as an argument. It always has a value before being passed to `render`, the only usage.\r\n\r\nThe `render` function's signature is:\r\n```javascript\r\nlet render = function render(locale, translation, replacements = {}, pluralization = null)\r\n```\r\n`options` is passed to `replacements`, which has a default value (apparently, just in case).\r\n\r\nIt is only used, eventually, by the nested `replace` function, which verifies that requested properties are available before using them.\r\n```javascript\r\nif (replacements[key] !== undefined) {\r\n\treturn replacements[key];\r\n}\r\n```\r\n\r\nHowever, there is already an overload for the second signature, and I just noticed that I neglected to mark its `options` parameter as optional. I've corrected that discrepancy in a new commit.",
        "createdAt" : "2018-06-30T13:15:42Z",
        "updatedAt" : "2018-06-30T13:15:42Z",
        "lastEditedBy" : "4720b933-9434-4daf-8bf5-d0a6870880cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "5cd54c107a4367d94a6df2d218037a0ea5e4db16",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +69,73 @@   * get localized string from store in a given language if available.\n   */\n  translateIn(locale: string, key: string, options?: any, pluralization?: number): string | undefined;\n\n  /**"
  }
]