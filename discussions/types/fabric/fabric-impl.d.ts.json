[
  {
    "id" : "10811b5f-510d-4c12-bb3b-3e2ebc2b54fa",
    "prId" : 25168,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/25168#pullrequestreview-114060634",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75076141-b094-41a5-95f0-22e5c7666896",
        "parentId" : null,
        "authorId" : "a74ad499-b98e-469e-94e8-4891858cef5e",
        "body" : "WebglFilterBackend's `applyFilters` takes an optional `cacheKey` parameter (equivalent parameters to `applyFiltersDebug`",
        "createdAt" : "2018-04-20T17:40:21Z",
        "updatedAt" : "2018-04-21T06:59:19Z",
        "lastEditedBy" : "a74ad499-b98e-469e-94e8-4891858cef5e",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd93b33a7c6f789c67078bba7607ef35dfcfaefd",
    "line" : 595,
    "diffHunk" : "@@ -1,1 +4512,4516 @@\ttileSize: number;\n}\nexport interface WebglFilterBackend extends FilterBackend, WebglFilterBackendOptions {\n\tsetupGLContext(width: number, height: number): void;\n"
  },
  {
    "id" : "8f6658fb-0db2-485b-998f-1fca19b52a33",
    "prId" : 32714,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/32714#pullrequestreview-199230108",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2c0482e-9a5e-4f3d-873f-ebfb2fd43236",
        "parentId" : null,
        "authorId" : "ae1cf0f9-564e-40ad-9cdf-73f717fd1d58",
        "body" : "Any reason to use `Object` here? The general guidance is:\r\n\r\n> Using the types Function and Object is almost never a good idea. In 99% of cases it's possible to specify a more specific type. Examples are (x: number) => number for functions and { x: number, y: number } for objects. If there is no certainty at all about the type, any is the right choice, not Object. If the only known fact about the type is that it's some object, use the type object, not Object or { [key: string]: any }.",
        "createdAt" : "2019-02-01T18:54:46Z",
        "updatedAt" : "2019-02-01T19:19:37Z",
        "lastEditedBy" : "ae1cf0f9-564e-40ad-9cdf-73f717fd1d58",
        "tags" : [
        ]
      },
      {
        "id" : "2d52b221-8f2d-4c7e-90fd-571d9e6c9917",
        "parentId" : "c2c0482e-9a5e-4f3d-873f-ebfb2fd43236",
        "authorId" : "1a0ee556-7ffc-4685-b0bd-9586d31a7cfe",
        "body" : "Good call @PranavSenthilnathan - should have been fabric.Object not js Object. I've updated.",
        "createdAt" : "2019-02-01T19:14:20Z",
        "updatedAt" : "2019-02-01T19:19:37Z",
        "lastEditedBy" : "1a0ee556-7ffc-4685-b0bd-9586d31a7cfe",
        "tags" : [
        ]
      },
      {
        "id" : "9b6c19b1-bd92-4c79-b63c-63ce38dc9f92",
        "parentId" : "c2c0482e-9a5e-4f3d-873f-ebfb2fd43236",
        "authorId" : "1a0ee556-7ffc-4685-b0bd-9586d31a7cfe",
        "body" : "Scratch that. `fabric.` is redundant in this context. `Object` is the fabric Object. That is how the rest of the descriptor references it so i'm going to follow suit and omit the `fabric.`",
        "createdAt" : "2019-02-01T19:21:48Z",
        "updatedAt" : "2019-02-01T19:21:48Z",
        "lastEditedBy" : "1a0ee556-7ffc-4685-b0bd-9586d31a7cfe",
        "tags" : [
        ]
      },
      {
        "id" : "0a5587ea-2585-4607-a880-322bb596294b",
        "parentId" : "c2c0482e-9a5e-4f3d-873f-ebfb2fd43236",
        "authorId" : "ae1cf0f9-564e-40ad-9cdf-73f717fd1d58",
        "body" : "Hmm yea I just noticed the entire file is using this.",
        "createdAt" : "2019-02-01T19:24:32Z",
        "updatedAt" : "2019-02-01T19:24:36Z",
        "lastEditedBy" : "ae1cf0f9-564e-40ad-9cdf-73f717fd1d58",
        "tags" : [
        ]
      }
    ],
    "commit" : "e2bac480474c9db5b2c352047d6bb60afe2f23f4",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +2243,2247 @@     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\n     */\n    clipPath?: Object;\n\n    /**"
  },
  {
    "id" : "8cdb5e92-b672-4446-96c2-49187b35efc7",
    "prId" : 45447,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/45447#pullrequestreview-429650450",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79ccbdba-918b-4f7b-ac7d-25eba44a78ad",
        "parentId" : null,
        "authorId" : "46019ea5-75dc-49b6-bf69-6a38a45e35aa",
        "body" : "Real changes here (the rest is from Prettier).",
        "createdAt" : "2020-06-12T10:58:44Z",
        "updatedAt" : "2020-06-12T10:58:44Z",
        "lastEditedBy" : "46019ea5-75dc-49b6-bf69-6a38a45e35aa",
        "tags" : [
        ]
      }
    ],
    "commit" : "06d8bd2b17f97f16e2716193a53811aedbc5bb7d",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +204,208 @@     * desired width of svg with or without units\n     */\n    width?: number | string;\n    /**\n     * desired height of svg with or without units"
  },
  {
    "id" : "217b9f2c-33dc-487e-b6d9-73c2ef5c2e8e",
    "prId" : 45447,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/45447#pullrequestreview-429650531",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d383784d-559c-43eb-a36c-d931884fd020",
        "parentId" : null,
        "authorId" : "46019ea5-75dc-49b6-bf69-6a38a45e35aa",
        "body" : "Real changes here (the rest is from Prettier).",
        "createdAt" : "2020-06-12T10:58:55Z",
        "updatedAt" : "2020-06-12T10:58:55Z",
        "lastEditedBy" : "46019ea5-75dc-49b6-bf69-6a38a45e35aa",
        "tags" : [
        ]
      }
    ],
    "commit" : "06d8bd2b17f97f16e2716193a53811aedbc5bb7d",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +208,212 @@     * desired height of svg with or without units\n     */\n    height?: number | string;\n}\n"
  }
]