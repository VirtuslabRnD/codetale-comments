[
  {
    "id" : "127bfd43-e65e-4e1c-bf83-74eb98831afd",
    "prId" : 25993,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/25993#pullrequestreview-122985018",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45178f3a-ab3c-494d-989a-5bdb43a53cdc",
        "parentId" : null,
        "authorId" : "bf68b7cf-9a34-494d-8938-89f40ba75108",
        "body" : "Can't say I've played with .sandbox() too much - does this always return a `Promise<Response>` or should this be the more generic `MockResponse` type from earlier in this file (which includes `Promise<Response>`)?",
        "createdAt" : "2018-05-24T09:39:02Z",
        "updatedAt" : "2018-05-24T09:39:02Z",
        "lastEditedBy" : "bf68b7cf-9a34-494d-8938-89f40ba75108",
        "tags" : [
        ]
      },
      {
        "id" : "7b69a61e-d2ca-40f9-8b52-43edd052d48b",
        "parentId" : "45178f3a-ab3c-494d-989a-5bdb43a53cdc",
        "authorId" : "62fb0725-4fcc-47d0-bfb9-3503595b69e6",
        "body" : "I honestly have no idea, but since calling it is meant to be a drop-in replacement for `fetch()`, I doubt that you even want to treat this differently. Note that `MockResponse` is used for specifying mock responses. The callable here is meant to be used in actual code, that is obviously unaware of `fetch()` being mocked.",
        "createdAt" : "2018-05-24T09:43:50Z",
        "updatedAt" : "2018-05-24T09:43:51Z",
        "lastEditedBy" : "62fb0725-4fcc-47d0-bfb9-3503595b69e6",
        "tags" : [
        ]
      },
      {
        "id" : "d1c17937-7eab-4787-ad9d-f5c194d24089",
        "parentId" : "45178f3a-ab3c-494d-989a-5bdb43a53cdc",
        "authorId" : "bf68b7cf-9a34-494d-8938-89f40ba75108",
        "body" : "That logic makes sense to me, and I can't see anything to contradict it in the source. This method on .sandbox() appears to come from https://github.com/wheresrhys/fetch-mock/blob/master/src/lib/fetch-handler.js#L5, which does look to return a `Promise<Response>`, so I'd be content to merge this - thank you for pulling it together!",
        "createdAt" : "2018-05-24T13:14:10Z",
        "updatedAt" : "2018-05-24T13:14:10Z",
        "lastEditedBy" : "bf68b7cf-9a34-494d-8938-89f40ba75108",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ebaeed02a4cf5b4751f72cc0b61c5d7657fb7f3",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +441,445 @@         * a field that accepts both `fetch()` and a fetch-mock sandbox.\n         */\n        (input?: string | Request , init?: RequestInit): Promise<Response>;\n    }\n}"
  },
  {
    "id" : "f6845630-a4df-4cbb-b90f-7447bab5f11c",
    "prId" : 30852,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/30852#pullrequestreview-182413131",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e56c854b-272e-43ea-bcc4-b8e4b4cbeeab",
        "parentId" : null,
        "authorId" : "fa418097-b552-4608-8899-05ae37c49356",
        "body" : "I do not understand this interface. It is used in `calls()` as `MockCall[]`, and stands for an `[url, options]` array.\r\nI am junior and I don't know TypeScript in depth though. Would you mind explaining how this works ?",
        "createdAt" : "2018-12-06T10:19:19Z",
        "updatedAt" : "2018-12-06T19:20:49Z",
        "lastEditedBy" : "fa418097-b552-4608-8899-05ae37c49356",
        "tags" : [
        ]
      },
      {
        "id" : "5f378796-2e23-4f5d-8bd7-3d20ce6ad412",
        "parentId" : "e56c854b-272e-43ea-bcc4-b8e4b4cbeeab",
        "authorId" : "61c4d1c0-4a6b-40ac-af53-bbb0b46584a5",
        "body" : "Have a look at https://github.com/wheresrhys/fetch-mock/blob/master/src/lib/fetch-handler.js#L136\r\n\r\nMockCall is an array [url, options].  Three properties are added to this:\r\n* identifier\r\n* isUnmatched\r\n* request\r\n\r\n\"request\" is the only one of these mentioned in the documentation, it says \"If fetch was called using a Request instance, this will be available as a request property on this array\"\r\nhttp://www.wheresrhys.co.uk/fetch-mock/#api-inspectioncalls",
        "createdAt" : "2018-12-06T19:39:23Z",
        "updatedAt" : "2018-12-06T19:39:24Z",
        "lastEditedBy" : "61c4d1c0-4a6b-40ac-af53-bbb0b46584a5",
        "tags" : [
        ]
      }
    ],
    "commit" : "42e0395380dd070988279dee210900a24346f4c1",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +190,194 @@    }\n\n    interface MockCall extends Array<string | RequestInit | undefined> {\n        0: string;\n        1: RequestInit | undefined;"
  },
  {
    "id" : "7a3858e3-9a1a-40dc-8642-977d4468d0d4",
    "prId" : 35619,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/35619#pullrequestreview-240006633",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a2ce586-9ce7-4f87-b8c0-9db31aa1ebd7",
        "parentId" : null,
        "authorId" : "bf68b7cf-9a34-494d-8938-89f40ba75108",
        "body" : "Thanks for this! I think this should be a `MockMatcher` though to include the `string` and `RegExp` values that can be passed here:\r\n\r\n```suggestion\r\n        functionMatcher?: MockMatcher;\r\n```\r\n\r\nc.f. https://github.com/DefinitelyTyped/DefinitelyTyped/blob/d9ce66b18d497536f94b91ac02eb5b8d54ee33b7/types/fetch-mock/index.d.ts#L37",
        "createdAt" : "2019-05-21T10:32:48Z",
        "updatedAt" : "2019-05-21T10:33:46Z",
        "lastEditedBy" : "bf68b7cf-9a34-494d-8938-89f40ba75108",
        "tags" : [
        ]
      },
      {
        "id" : "37927375-3364-4968-991a-069acbb83134",
        "parentId" : "9a2ce586-9ce7-4f87-b8c0-9db31aa1ebd7",
        "authorId" : "2a1cd7d6-b969-4163-866c-3d8b0f16b3d6",
        "body" : "@chrissinclair Thanks for reviewing, but `functionMatcher` should be a function. Would you please check below?\r\n\r\n`getFunctionMatcher()` returns `functionMatcher` as is:\r\nhttps://github.com/wheresrhys/fetch-mock/blob/edb007076e60fa0520b4463283f123222f62db58/src/lib/generate-matcher.js#L72\r\n\r\nand it will be invoked at:\r\nhttps://github.com/wheresrhys/fetch-mock/blob/edb007076e60fa0520b4463283f123222f62db58/src/lib/generate-matcher.js#L125\r\n",
        "createdAt" : "2019-05-21T12:14:41Z",
        "updatedAt" : "2019-05-21T12:14:41Z",
        "lastEditedBy" : "2a1cd7d6-b969-4163-866c-3d8b0f16b3d6",
        "tags" : [
        ]
      },
      {
        "id" : "979b55d7-7f30-4b0d-9151-f84d7d6e80ea",
        "parentId" : "9a2ce586-9ce7-4f87-b8c0-9db31aa1ebd7",
        "authorId" : "bf68b7cf-9a34-494d-8938-89f40ba75108",
        "body" : "Thanks @dobogo - I see what you're saying now. Get the feeling I was muddling this with `matcher` below, thanks for clarifying!",
        "createdAt" : "2019-05-21T12:21:40Z",
        "updatedAt" : "2019-05-21T12:21:41Z",
        "lastEditedBy" : "bf68b7cf-9a34-494d-8938-89f40ba75108",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9ce66b18d497536f94b91ac02eb5b8d54ee33b7",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +158,162 @@         * A function for arbitrary matching\n         */\n        functionMatcher?: MockMatcherFunction;\n\n        /**"
  }
]