[
  {
    "id" : "1ce897d4-d6e6-46ca-a603-66dc4711b30e",
    "prId" : 46969,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/46969#pullrequestreview-473397086",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df11c4c8-5632-4409-a578-be002d029697",
        "parentId" : null,
        "authorId" : "4be08ece-039a-411f-91af-15dd66477064",
        "body" : "I don't know whether this is documented anywhere, but it seems preferable to me to use TypeScript syntax for checking types where possible over the expected type comments.\r\n\r\n```suggestion\r\nconst fooStore: data.Store<FooBar, data.Action> = data.registerStore<FooBar>('foo', {\r\n```",
        "createdAt" : "2020-08-24T11:48:57Z",
        "updatedAt" : "2020-08-24T11:49:08Z",
        "lastEditedBy" : "4be08ece-039a-411f-91af-15dd66477064",
        "tags" : [
        ]
      },
      {
        "id" : "16fec7a9-9b39-4973-a087-aeea738c40a7",
        "parentId" : "df11c4c8-5632-4409-a578-be002d029697",
        "authorId" : "88b8e7ff-7bfb-405d-a8d3-99e3e782d71f",
        "body" : "I actually prefer not doing it in the way you describe because you're not left struggling what to name your variables and you're not reusing a `let`/`var` assignment.\r\n\r\nEnd result is the same either way, so just a personal preference.",
        "createdAt" : "2020-08-24T12:00:07Z",
        "updatedAt" : "2020-08-24T12:00:07Z",
        "lastEditedBy" : "88b8e7ff-7bfb-405d-a8d3-99e3e782d71f",
        "tags" : [
        ]
      }
    ],
    "commit" : "88eaec22aaef1c81eaa6a6fc8df5d3aa17908a73",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +15,19 @@\n// $ExpectType Store<FooBar, AnyAction>\ndata.registerStore<FooBar>('foo', {\n    reducer(state = { foo: 'foo', bar: 21 }, action) {\n        return state;"
  }
]