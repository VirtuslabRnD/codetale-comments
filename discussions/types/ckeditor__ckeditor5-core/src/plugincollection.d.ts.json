[
  {
    "id" : "98a88d59-c8ca-477f-a780-4a8ba42c60cf",
    "prId" : 54705,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/54705#pullrequestreview-721405682",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93d892ab-8615-463f-8fb2-8ac6c8b08a80",
        "parentId" : null,
        "authorId" : "889aa791-06c6-4e14-90d4-8e19d2ddb2b0",
        "body" : "dbl checkin, you wanted `constructable` here, hence `new`?",
        "createdAt" : "2021-07-27T22:03:34Z",
        "updatedAt" : "2021-07-27T22:03:34Z",
        "lastEditedBy" : "889aa791-06c6-4e14-90d4-8e19d2ddb2b0",
        "tags" : [
        ]
      },
      {
        "id" : "33be9371-5af5-4677-8ab9-4565419e881a",
        "parentId" : "93d892ab-8615-463f-8fb2-8ac6c8b08a80",
        "authorId" : "6e3a16ae-7de7-4546-93f5-068fdc628fbf",
        "body" : "Since `Plugin` is an abstract class, it seems that I have to write it this way to say that it will return an instance of a class that extends said `Plugin` class.",
        "createdAt" : "2021-07-28T12:55:51Z",
        "updatedAt" : "2021-07-28T12:55:52Z",
        "lastEditedBy" : "6e3a16ae-7de7-4546-93f5-068fdc628fbf",
        "tags" : [
        ]
      },
      {
        "id" : "1227853e-7946-4fed-9d1b-2b083046a207",
        "parentId" : "93d892ab-8615-463f-8fb2-8ac6c8b08a80",
        "authorId" : "63a73438-003a-47d8-97ec-7304393f7cd4",
        "body" : "How are you using this? This has broken my usage -- I was previously doing\r\n\r\n```ts\r\nlet somePlugin = editor.plugins.get(SomePlugin.pluginName) as SomePlugin\r\n```\r\n\r\nwhich was working. With this change, ts complains that the types don't overlap so I have to first cast to `unknown`. This change looks to me like it's switching the return type from a `Plugin` instance to a `Plugin` class/constructor, which isn't correct.\r\n\r\nAm I misunderstanding? How are you invoking `editor.plugins.get()`?",
        "createdAt" : "2021-08-03T14:44:13Z",
        "updatedAt" : "2021-08-03T14:44:13Z",
        "lastEditedBy" : "63a73438-003a-47d8-97ec-7304393f7cd4",
        "tags" : [
        ]
      },
      {
        "id" : "3dabfff0-5f57-4543-b749-fd4c618c3211",
        "parentId" : "93d892ab-8615-463f-8fb2-8ac6c8b08a80",
        "authorId" : "63a73438-003a-47d8-97ec-7304393f7cd4",
        "body" : "From my experimentation, it looks like we want something like this:\r\n\r\n```ts\r\ntype PluginConstructor<T = Plugin> = { new (editor: Editor): T }\r\n\r\nexport default class PluginCollection implements Emitter, Iterable<[typeof Plugin, Plugin]> {\r\n  // ...\r\n  get<T extends Plugin>(key: PluginConstructor<T>): T;\r\n  get(key: string): Plugin;\r\n  has<T extends Plugin>(key: PluginConstructor<T>): boolean;\r\n  has(key: string): boolean;\r\n  // ...\r\n}\r\n```\r\n\r\nThis allows both\r\n\r\n```ts\r\nlet somePlugin = editor.plugins.get(SomePlugin);\r\n```\r\n\r\nand\r\n\r\n```ts\r\nlet somePlugin = editor.plugins.get(SomePlugin.pluginName) as SomePlugin\r\n```\r\n\r\nand the equivalents for `.has()`.\r\n\r\nThoughts?",
        "createdAt" : "2021-08-03T15:18:07Z",
        "updatedAt" : "2021-08-03T15:34:08Z",
        "lastEditedBy" : "63a73438-003a-47d8-97ec-7304393f7cd4",
        "tags" : [
        ]
      },
      {
        "id" : "92efe219-8f2a-4539-9ef7-bccdb93ffe0a",
        "parentId" : "93d892ab-8615-463f-8fb2-8ac6c8b08a80",
        "authorId" : "63a73438-003a-47d8-97ec-7304393f7cd4",
        "body" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/54924",
        "createdAt" : "2021-08-03T16:22:44Z",
        "updatedAt" : "2021-08-03T16:22:44Z",
        "lastEditedBy" : "63a73438-003a-47d8-97ec-7304393f7cd4",
        "tags" : [
        ]
      }
    ],
    "commit" : "a30e839019446ee2e0bf762b5ed5b8f691c83567",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +16,20 @@    [Symbol.iterator](): Iterator<[typeof Plugin, Plugin]>;\n    destroy(): Promise<void>;\n    get(key: (() => Plugin) | string): new () => Plugin;\n    has(key: (() => Plugin) | string): boolean;\n    init("
  }
]