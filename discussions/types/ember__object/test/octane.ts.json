[
  {
    "id" : "a8e704ca-0730-4d14-a850-435599c293eb",
    "prId" : 35114,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/35114#pullrequestreview-232273593",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa6629cb-1fa4-4eb2-8dcc-329b2ccf227e",
        "parentId" : null,
        "authorId" : "c701fbef-e0f2-4be6-9abb-4ba16fd9f2aa",
        "body" : "For my own knowledge: does this test work b/c we're returning a `MethodDecorator` here? I.e. `MethodDecorator`s work on getters but not on regular properties?",
        "createdAt" : "2019-04-30T16:22:54Z",
        "updatedAt" : "2019-04-30T16:22:54Z",
        "lastEditedBy" : "c701fbef-e0f2-4be6-9abb-4ba16fd9f2aa",
        "tags" : [
        ]
      },
      {
        "id" : "2cd045ff-3aa3-49c3-bfca-f0869ddcaf3d",
        "parentId" : "fa6629cb-1fa4-4eb2-8dcc-329b2ccf227e",
        "authorId" : "3838ef64-cd4f-4bd6-9536-d83be08309b8",
        "body" : "That's right — `MethodDecorator`s receive the descriptor as an argument, while `PropertyDecorator`s (at least as far as TS's implementation is concerned) only receive the target and the key.\r\n\r\nConfusingly (or at least I always have to double check), `MethodDecorator`s are what get applied to getters and setters; `PropertyDecorator`s are specifically for class fields afaict.",
        "createdAt" : "2019-04-30T16:25:15Z",
        "updatedAt" : "2019-04-30T16:28:53Z",
        "lastEditedBy" : "3838ef64-cd4f-4bd6-9536-d83be08309b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebd4b91441dd81e94ec957d002f0295fe7f77231",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +54,58 @@    }\n\n    @computed(\"firstName\", \"lastName\") // $ExpectError\n    badFullName: string;\n"
  }
]