[
  {
    "id" : "d440d2a1-6b74-458c-a9fe-bf1f3c9075bd",
    "prId" : 29524,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/29524#pullrequestreview-162301667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35488672-cfd7-4da0-8165-191e51dc3ddb",
        "parentId" : null,
        "authorId" : "f792d4a4-6369-4b86-a1e4-78ab0a8e93fe",
        "body" : "Added a few cases for `validate` and `validateAt` here. ",
        "createdAt" : "2018-10-07T19:30:02Z",
        "updatedAt" : "2018-10-11T16:14:06Z",
        "lastEditedBy" : "f792d4a4-6369-4b86-a1e4-78ab0a8e93fe",
        "tags" : [
        ]
      }
    ],
    "commit" : "6acc389e3b18e24ff4a0fc8b72f635d0fa5630c1",
    "line" : 151,
    "diffHunk" : "@@ -1,1 +108,112 @@mixed.concat(yup.string());\nmixed.validate({});\nmixed.validate({ hello: \"world\" }, { strict: true }).then(value => value);\nmixed.validateSync({ hello: \"world\" }, { strict: true });\nmixed.validateAt(\"path\", {}, { strict: true, context: {} });"
  },
  {
    "id" : "23362517-cd45-4a0b-ba91-ffa3b6593f23",
    "prId" : 29524,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/29524#pullrequestreview-162301688",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d91cd3dc-5fef-400f-af56-19426678be79",
        "parentId" : null,
        "authorId" : "f792d4a4-6369-4b86-a1e4-78ab0a8e93fe",
        "body" : "Added a test for the `message` being a function. ",
        "createdAt" : "2018-10-07T19:30:34Z",
        "updatedAt" : "2018-10-11T16:14:06Z",
        "lastEditedBy" : "f792d4a4-6369-4b86-a1e4-78ab0a8e93fe",
        "tags" : [
        ]
      }
    ],
    "commit" : "6acc389e3b18e24ff4a0fc8b72f635d0fa5630c1",
    "line" : 206,
    "diffHunk" : "@@ -1,1 +149,153 @@// tslint:disable-next-line:no-invalid-template-strings\nmixed.test(\"is-jimmy\", \"${path} is not Jimmy\", value => value === \"jimmy\");\nmixed.test(\n    \"is-jimmy\",\n    ({ path, value }) => `${path} has an error, it is ${value}`,"
  },
  {
    "id" : "d7e54a47-4e1c-4c39-8dca-b9bb916b4919",
    "prId" : 35004,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/35004#pullrequestreview-232627121",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca3d706c-d0fd-41be-9b9f-65e127fd463f",
        "parentId" : null,
        "authorId" : "f792d4a4-6369-4b86-a1e4-78ab0a8e93fe",
        "body" : "Nice tests! üíØ ",
        "createdAt" : "2019-05-01T15:49:07Z",
        "updatedAt" : "2019-05-01T19:00:04Z",
        "lastEditedBy" : "f792d4a4-6369-4b86-a1e4-78ab0a8e93fe",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb41dd70049760ea6f6f38b11cd3e62f9ed8c20b",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +454,458 @@};\n\nconst localeNotType1: LocaleObject = {\n    mixed: {\n        required: \"message\","
  },
  {
    "id" : "ba334eb0-9092-4556-85f1-87d5e49528cc",
    "prId" : 35789,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/35789#pullrequestreview-243170328",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f0e9b26-183d-4342-aeee-9a6178bfca9c",
        "parentId" : null,
        "authorId" : "4bbde1f5-44fa-4ce6-9b60-f66d54e71164",
        "body" : "Would be nice to also ensure the properties can still be non-null, for example with some assignments like:\r\n```\r\nperson.email = 'some@email.com';\r\nperson.birthDate = new Date();\r\nperson.children = ['1', '2', '3'];\r\n```",
        "createdAt" : "2019-05-29T08:41:55Z",
        "updatedAt" : "2019-06-05T13:18:29Z",
        "lastEditedBy" : "4bbde1f5-44fa-4ce6-9b60-f66d54e71164",
        "tags" : [
        ]
      },
      {
        "id" : "4baa3dc1-983b-4138-8d36-2c1007d46568",
        "parentId" : "4f0e9b26-183d-4342-aeee-9a6178bfca9c",
        "authorId" : "3c4f8ddb-eedb-4bbf-b919-e0ad9cd83b2d",
        "body" : "üëç ",
        "createdAt" : "2019-05-29T10:27:59Z",
        "updatedAt" : "2019-06-05T13:18:29Z",
        "lastEditedBy" : "3c4f8ddb-eedb-4bbf-b919-e0ad9cd83b2d",
        "tags" : [
        ]
      }
    ],
    "commit" : "607b48d17e1a2e29baae4cadb8af8a218e316f37",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +645,649 @@    mustBeAString: \"\",\n    children: null\n};\n\nperson.email = \"some@email.com\";"
  },
  {
    "id" : "9c2e6a31-3dc2-44de-b925-530b6eefa5a5",
    "prId" : 35789,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/35789#pullrequestreview-243171470",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "315a7eb1-8433-497b-b22e-a2492bacb833",
        "parentId" : null,
        "authorId" : "f792d4a4-6369-4b86-a1e4-78ab0a8e93fe",
        "body" : "Maybe have a boolean test case as well since we're adding types for `BooleanSchema` too? ",
        "createdAt" : "2019-05-29T09:40:40Z",
        "updatedAt" : "2019-06-05T13:18:29Z",
        "lastEditedBy" : "f792d4a4-6369-4b86-a1e4-78ab0a8e93fe",
        "tags" : [
        ]
      },
      {
        "id" : "2b8f3529-8adb-4d3f-9a0e-62c3bbe186bf",
        "parentId" : "315a7eb1-8433-497b-b22e-a2492bacb833",
        "authorId" : "3c4f8ddb-eedb-4bbf-b919-e0ad9cd83b2d",
        "body" : "üëç \t",
        "createdAt" : "2019-05-29T10:30:41Z",
        "updatedAt" : "2019-06-05T13:18:29Z",
        "lastEditedBy" : "3c4f8ddb-eedb-4bbf-b919-e0ad9cd83b2d",
        "tags" : [
        ]
      }
    ],
    "commit" : "607b48d17e1a2e29baae4cadb8af8a218e316f37",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +616,620 @@        .nullable()\n        .min(new Date(1900, 0, 1)),\n    canBeNull: yup.string().nullable(true), // $ExpectType StringSchema<string | null>\n    isAlive: yup.boolean().nullable(),\n    mustBeAString: yup"
  },
  {
    "id" : "c3ecce5d-b30f-4647-a7b0-c6589b39d01b",
    "prId" : 35789,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/35789#pullrequestreview-243143680",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05a5984c-8b1a-45f7-90df-49251383f143",
        "parentId" : null,
        "authorId" : "f792d4a4-6369-4b86-a1e4-78ab0a8e93fe",
        "body" : "It would also be cool to add type assertions to this as well so that we're checking one of each for the nullable case!",
        "createdAt" : "2019-05-29T09:41:22Z",
        "updatedAt" : "2019-06-05T13:18:29Z",
        "lastEditedBy" : "f792d4a4-6369-4b86-a1e4-78ab0a8e93fe",
        "tags" : [
        ]
      }
    ],
    "commit" : "607b48d17e1a2e29baae4cadb8af8a218e316f37",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +615,619 @@        .date()\n        .nullable()\n        .min(new Date(1900, 0, 1)),\n    canBeNull: yup.string().nullable(true), // $ExpectType StringSchema<string | null>\n    isAlive: yup.boolean().nullable(),"
  },
  {
    "id" : "3797b5e9-188d-4aab-80f8-32275e7d7a5c",
    "prId" : 43046,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/43046#pullrequestreview-372124524",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "643c8c4c-306b-4bc8-820f-f794f3189b5a",
        "parentId" : null,
        "authorId" : "dd998dd7-4ffd-4af0-95b1-6d30ed3b6fa4",
        "body" : "The linter didn't like `ObjectSchema<Shape<AB, BC>>` here, even though the types are equivalent.  No idea why.",
        "createdAt" : "2020-03-10T16:35:00Z",
        "updatedAt" : "2020-03-10T16:35:01Z",
        "lastEditedBy" : "dd998dd7-4ffd-4af0-95b1-6d30ed3b6fa4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2e415c893ba62c6baec33cb3e14d722d4bb637b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +681,685 @@    c: yup.number(),\n};\nconst combinedSchema = yup.object(definitionAB).shape(definitionBC); // $ExpectType ObjectSchema<{ a: string; b: string; } & BC>\n\n// $ExpectError"
  }
]