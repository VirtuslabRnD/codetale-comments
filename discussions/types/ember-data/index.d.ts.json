[
  {
    "id" : "dd3a3178-a297-4d47-aec6-c36a6293039a",
    "prId" : 22328,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/22328#pullrequestreview-85883164",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5f8cbe0-116c-4194-87d3-8c60b766f35b",
        "parentId" : null,
        "authorId" : "994ce329-a5cb-4357-afff-0652d8c4f62b",
        "body" : "This doesn't seem right. and the CI should have warned you here.\r\n\r\nhttps://github.com/Microsoft/dtslint/blob/master/docs/no-unnecessary-generics.md\r\n\r\n",
        "createdAt" : "2017-12-28T19:42:32Z",
        "updatedAt" : "2017-12-28T22:20:27Z",
        "lastEditedBy" : "994ce329-a5cb-4357-afff-0652d8c4f62b",
        "tags" : [
        ]
      },
      {
        "id" : "b50589d3-e83b-4a83-b6da-ec2e3189c23e",
        "parentId" : "b5f8cbe0-116c-4194-87d3-8c60b766f35b",
        "authorId" : "c701fbef-e0f2-4be6-9abb-4ba16fd9f2aa",
        "body" : "For what it's worth, this one isn't actually an unnecessary generic: it's there to allow the caller specify *which* `Model` class gets returned. (This is an unfortunate workaround for the way the Ember Data typings work at present; we're working on an alternative approach, but for present it's what we have.)\r\n\r\nInvocation looks like this:\r\n\r\n```ts\r\nconst someInstance = modelFor<SomeModel>('some-model');\r\n```\r\n\r\nThis is the only way, until we land that alternative approach, to get the correct types available in this and similar methods below.\r\n",
        "createdAt" : "2017-12-28T21:03:48Z",
        "updatedAt" : "2017-12-28T22:20:27Z",
        "lastEditedBy" : "c701fbef-e0f2-4be6-9abb-4ba16fd9f2aa",
        "tags" : [
        ]
      }
    ],
    "commit" : "99b908fdb88def87f9e292c7953360c92a09b373",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +1079,1083 @@             * Returns the model class for the particular `modelName`.\n             */\n            modelFor<M extends Model>(modelName: string): M;\n            /**\n             * Push some data for a given type into the store."
  },
  {
    "id" : "76795c44-f562-473a-914c-039cbaa1f2a9",
    "prId" : 22328,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/22328#pullrequestreview-85883164",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8df4af7e-6b96-4360-aba8-d5c6ccd8103a",
        "parentId" : null,
        "authorId" : "994ce329-a5cb-4357-afff-0652d8c4f62b",
        "body" : "I couldn't find in the docs you linked why this change was necessary. (Or any other changes from `Promise` to `RSVP.Promise`)",
        "createdAt" : "2017-12-28T19:49:05Z",
        "updatedAt" : "2017-12-28T22:20:27Z",
        "lastEditedBy" : "994ce329-a5cb-4357-afff-0652d8c4f62b",
        "tags" : [
        ]
      },
      {
        "id" : "86ce891a-de8a-4677-ac29-41a859793f62",
        "parentId" : "8df4af7e-6b96-4360-aba8-d5c6ccd8103a",
        "authorId" : "c701fbef-e0f2-4be6-9abb-4ba16fd9f2aa",
        "body" : "All `Promise` instances *everywhere* in Ember (including Ember Data) are `RSVP.Promise` instances. The best reference I can come up with for that is [here](https://guides.emberjs.com/v2.16.0/contributing/repositories/#toc_code-rsvp-code):\r\n\r\n> rsvp.js - Implementation of the of Promises/A+ spec used by Ember.",
        "createdAt" : "2017-12-28T21:04:52Z",
        "updatedAt" : "2017-12-28T22:20:27Z",
        "lastEditedBy" : "c701fbef-e0f2-4be6-9abb-4ba16fd9f2aa",
        "tags" : [
        ]
      }
    ],
    "commit" : "99b908fdb88def87f9e292c7953360c92a09b373",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +474,478 @@             * Same as `deleteRecord`, but saves the record immediately.\n             */\n            destroyRecord(options: {}): RSVP.Promise<any>;\n            /**\n             * Unloads the record from the store. This will cause the record to be destroyed and freed up for garbage collection."
  },
  {
    "id" : "0a4ac9f7-1d8e-4bfb-9e31-52b58ae62026",
    "prId" : 39114,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/39114#pullrequestreview-301413969",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "216ceec3-48ae-4cab-9231-715a0822c5b5",
        "parentId" : null,
        "authorId" : "7732d9a0-c3c8-4b71-8f1a-3069d3f8f75b",
        "body" : "One of the requirements of these types is that they describe only the library's public API. \r\n\r\nLooking through the docs for examples of this `RelationshipMeta` object, I can find [references to `async` and `inverse`](https://api.emberjs.com/ember-data/3.13/functions/@ember-data%2Fmodel/hasMany) but can't find anything that declares `polymorphic` to be a public thing. \r\n\r\nDo you have some basis for believing `polymorphic` is a public thing?",
        "createdAt" : "2019-10-14T16:28:15Z",
        "updatedAt" : "2019-10-14T16:28:21Z",
        "lastEditedBy" : "7732d9a0-c3c8-4b71-8f1a-3069d3f8f75b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c578ea8fddd351b3b58976435625cd8e1e457f18",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +40,44 @@    async?: boolean;\n    inverse?: string;\n    polymorphic?: boolean;\n    [k: string]: any;\n}"
  },
  {
    "id" : "f12b6b46-3120-4ceb-bf02-9b30c5e23ca2",
    "prId" : 50652,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/50652#pullrequestreview-569643827",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b00b21d0-e08f-4e06-b513-839b3c94ea04",
        "parentId" : null,
        "authorId" : "49bd0644-c7bd-42ed-b5cf-95213d09a711",
        "body" : "These are optional, but are useful for specifying the return type for the above built-in transforms.",
        "createdAt" : "2021-01-15T19:18:20Z",
        "updatedAt" : "2021-01-15T22:15:41Z",
        "lastEditedBy" : "49bd0644-c7bd-42ed-b5cf-95213d09a711",
        "tags" : [
        ]
      },
      {
        "id" : "1854ae8c-cafb-47d5-a378-93c7484d90a4",
        "parentId" : "b00b21d0-e08f-4e06-b513-839b3c94ea04",
        "authorId" : "5d335d99-e8f2-4271-872e-cf0c733e8a0b",
        "body" : "I kind of want to make this:\r\n```suggestion\r\n    class Transform<Deserialized = unknown, Serialized = unknown> extends Ember.Object {\r\n```\r\nbut worry that will break too many things for people.",
        "createdAt" : "2021-01-15T20:07:06Z",
        "updatedAt" : "2021-01-15T22:15:41Z",
        "lastEditedBy" : "5d335d99-e8f2-4271-872e-cf0c733e8a0b",
        "tags" : [
        ]
      },
      {
        "id" : "79aca210-75d7-4bc2-9828-d8dc6fd328e0",
        "parentId" : "b00b21d0-e08f-4e06-b513-839b3c94ea04",
        "authorId" : "49bd0644-c7bd-42ed-b5cf-95213d09a711",
        "body" : "Yeah, I think that's correct, but may be problematic on the grounds you mentioned. We happen to use unknown on our app, but not everyone does https://github.com/CenterForOpenScience/ember-osf-web/blob/develop/app/transforms/array.ts.",
        "createdAt" : "2021-01-15T21:53:20Z",
        "updatedAt" : "2021-01-15T22:15:41Z",
        "lastEditedBy" : "49bd0644-c7bd-42ed-b5cf-95213d09a711",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdd9e79fcdf878f216515c63f5d475ed3ee80b43",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +1984,1988 @@     * `serialize` and a `deserialize` method.\n     */\n    class Transform<Deserialized = any, Serialized = any> extends Ember.Object {\n        /**\n         * When given a deserialized value from a record attribute this"
  },
  {
    "id" : "1658062f-2341-4a14-a322-011c5c8100c2",
    "prId" : 50652,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/50652#pullrequestreview-569550517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e776b26c-492b-4923-959c-a283ffc476f6",
        "parentId" : null,
        "authorId" : "49bd0644-c7bd-42ed-b5cf-95213d09a711",
        "body" : "Semi-related, someone should actually do this. I think the types will not actually allow null for a boolean where `allowNull` is true.",
        "createdAt" : "2021-01-15T19:19:26Z",
        "updatedAt" : "2021-01-15T22:15:41Z",
        "lastEditedBy" : "49bd0644-c7bd-42ed-b5cf-95213d09a711",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdd9e79fcdf878f216515c63f5d475ed3ee80b43",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +122,126 @@    interface AttrOptions<T> {\n        defaultValue?: T extends Exclude<object, null> ? (() => T) : T | (() => T);\n        allowNull?: boolean; // TODO: restrict to boolean transform (TS 2.8)\n    }\n"
  },
  {
    "id" : "68785999-0d9a-47bb-8c66-badbf2628b4a",
    "prId" : 50652,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/50652#pullrequestreview-569658674",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ebfafdf-7f5c-4f10-984a-2a6a38cde081",
        "parentId" : null,
        "authorId" : "5d335d99-e8f2-4271-872e-cf0c733e8a0b",
        "body" : "Gave people the option either way, nice!",
        "createdAt" : "2021-01-15T22:05:27Z",
        "updatedAt" : "2021-01-15T22:15:41Z",
        "lastEditedBy" : "5d335d99-e8f2-4271-872e-cf0c733e8a0b",
        "tags" : [
        ]
      },
      {
        "id" : "fa6ea397-a379-4c5a-bae1-24cb82b2aa60",
        "parentId" : "3ebfafdf-7f5c-4f10-984a-2a6a38cde081",
        "authorId" : "5d335d99-e8f2-4271-872e-cf0c733e8a0b",
        "body" : "Can you add a test that uses the registry the \"old way\"?",
        "createdAt" : "2021-01-15T22:07:04Z",
        "updatedAt" : "2021-01-15T22:15:41Z",
        "lastEditedBy" : "5d335d99-e8f2-4271-872e-cf0c733e8a0b",
        "tags" : [
        ]
      },
      {
        "id" : "0cfb569f-e35a-4fb1-9728-9fc8f2301a70",
        "parentId" : "3ebfafdf-7f5c-4f10-984a-2a6a38cde081",
        "authorId" : "49bd0644-c7bd-42ed-b5cf-95213d09a711",
        "body" : "Ah, good call. I tested it in my app but forgot to add the test here.",
        "createdAt" : "2021-01-15T22:09:51Z",
        "updatedAt" : "2021-01-15T22:15:41Z",
        "lastEditedBy" : "49bd0644-c7bd-42ed-b5cf-95213d09a711",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdd9e79fcdf878f216515c63f5d475ed3ee80b43",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +126,130 @@\n    // The TransformRegistry should really only contain transforms, but historically people have just put the return type directly in.\n    type TransformType<K extends keyof TransformRegistry> = TransformRegistry[K] extends Transform ? ReturnType<TransformRegistry[K]['deserialize']> : TransformRegistry[K];\n\n    /**"
  },
  {
    "id" : "df77367a-d8be-4566-b77f-64ab9cab211d",
    "prId" : 51134,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/51134#pullrequestreview-599861906",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef429aa5-6def-408a-9f22-0b64f14ac947",
        "parentId" : null,
        "authorId" : "5d335d99-e8f2-4271-872e-cf0c733e8a0b",
        "body" : "If you default to Ember.ArrayProxy<T> instead, we can avoid needing to pass this in `class PromiseManyArray extends`, and the return types for `store.query` and `store.findAll`.\r\n```suggestion\r\n    interface PromiseArray<T, ArrayType extends Ember.ArrayProxy<T>['content'] = Ember.ArrayProxy<T>>\r\n```\r\nWhile still allowing it to be overridden with an array or EmberArrayLike.",
        "createdAt" : "2021-02-26T16:56:54Z",
        "updatedAt" : "2021-02-26T20:44:10Z",
        "lastEditedBy" : "5d335d99-e8f2-4271-872e-cf0c733e8a0b",
        "tags" : [
        ]
      },
      {
        "id" : "d24253dc-1566-495f-99ee-e3bc1e7369d8",
        "parentId" : "ef429aa5-6def-408a-9f22-0b64f14ac947",
        "authorId" : "49bd0644-c7bd-42ed-b5cf-95213d09a711",
        "body" : "My thought is that, in general, we only can expect everything to be an `Ember.Array` and that I'd rather opt-in to the version that actually provides more as we are certain. For instance, this test for PromiseManyArray, just uses a regular `Ember.A` not a proxy: https://github.com/emberjs/data/blob/ff4f9111fcfa7dd9e39804ed17f5af27a4a01378/packages/-ember-data/tests/unit/promise-proxies-test.js",
        "createdAt" : "2021-02-26T18:02:12Z",
        "updatedAt" : "2021-02-26T20:44:10Z",
        "lastEditedBy" : "49bd0644-c7bd-42ed-b5cf-95213d09a711",
        "tags" : [
        ]
      },
      {
        "id" : "9ecaecf4-4bc6-4686-98ba-b2b2cd4f3f90",
        "parentId" : "ef429aa5-6def-408a-9f22-0b64f14ac947",
        "authorId" : "5d335d99-e8f2-4271-872e-cf0c733e8a0b",
        "body" : "Yeah, that makes sense. Even though all the usages of it _here_ are ArrayProxy, that's really a special case.",
        "createdAt" : "2021-02-26T19:05:33Z",
        "updatedAt" : "2021-02-26T20:44:10Z",
        "lastEditedBy" : "5d335d99-e8f2-4271-872e-cf0c733e8a0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "12646ede97704d4293cc542d839148023c6cb312",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +920,924 @@     * updated when the promise resolves.\n     */\n    interface PromiseArray<T, ArrayType extends Ember.ArrayProxy<T>['content'] = Ember.Array<T>>\n        extends Ember.ArrayProxy<T>,\n            PromiseProxyMixin<ArrayType> {}"
  },
  {
    "id" : "e7f70078-8aaa-4fd9-886e-9d3e11091b70",
    "prId" : 52240,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52240#pullrequestreview-631826260",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a44bd2af-b603-4db4-852e-16155ea97193",
        "parentId" : null,
        "authorId" : "0a8dafa1-d90b-47e1-b0ed-ffb7a7c31ce4",
        "body" : "exploring this in the light of the https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52241#issuecomment-816168278\r\n\r\nI believe this is wrong, cause In runtime `DS.belongsTo` does never result to `null`? @wagenet ",
        "createdAt" : "2021-04-08T20:55:49Z",
        "updatedAt" : "2021-04-08T21:05:47Z",
        "lastEditedBy" : "0a8dafa1-d90b-47e1-b0ed-ffb7a7c31ce4",
        "tags" : [
        ]
      }
    ],
    "commit" : "a521b0cb2655765d5063863a97c4c37f4d47eeb7",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +87,91 @@        options: RelationshipOptions<ModelRegistry[K]> & Sync\n    ): Ember.ComputedProperty<\n        ModelRegistry[K] | null,\n        ModelRegistry[K] | PromiseObject<ModelRegistry[K] | null> | null\n    >;"
  }
]