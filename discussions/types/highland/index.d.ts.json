[
  {
    "id" : "a700a70b-d9a5-46ce-a906-17cd8c3c3421",
    "prId" : 16523,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/16523#pullrequestreview-42027314",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "917af4f5-ecb2-496c-b16c-50655d5dbafd",
        "parentId" : null,
        "authorId" : "9ff3a857-4ac9-4a7e-b447-d0a2f6573899",
        "body" : "Can you use a more specific function type here? Potentially even just `((...args: any[]) => any)`",
        "createdAt" : "2017-05-22T22:55:45Z",
        "updatedAt" : "2017-05-22T22:55:48Z",
        "lastEditedBy" : "9ff3a857-4ac9-4a7e-b447-d0a2f6573899",
        "tags" : [
        ]
      },
      {
        "id" : "8d3206f4-bdf4-4c27-a94f-913ad2039459",
        "parentId" : "917af4f5-ecb2-496c-b16c-50655d5dbafd",
        "authorId" : "4c9641f4-a979-41a2-8c5f-adb3db2b96a5",
        "body" : "Is it possible to say `type MappingHint<T> = number | string[] | ((...args: any[]) => T)` (probably not, but one can dream...), because the return value of the function determines the type of the resulting stream. That is, strictly speaking, the types for mapping hint constructor is something like\r\n\r\n`<R>(eventName: string, xs: NodeJS.EventEmitter, mappingHint?: MappingHint<R>): Highland.Stream<R>`\r\n\r\nand the type for `wrapCallback` is\r\n\r\n`wrapCallback<R>(f: (...args: any[]) => void, mappingHint?: MappingHint<R>: (...args: any[]) => Highland.Stream<R>`\r\n\r\nwhere `R` is `any` if the mapping hint is either a `number` or a `string[]`.",
        "createdAt" : "2017-05-22T23:24:31Z",
        "updatedAt" : "2017-05-22T23:24:31Z",
        "lastEditedBy" : "4c9641f4-a979-41a2-8c5f-adb3db2b96a5",
        "tags" : [
        ]
      },
      {
        "id" : "25b8a313-4e4b-41ec-937e-1e423d1d2694",
        "parentId" : "917af4f5-ecb2-496c-b16c-50655d5dbafd",
        "authorId" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "body" : "@DanielRosenwasser was is the difference between `Function` and `((...args: any[]) => any)`?",
        "createdAt" : "2017-06-05T11:51:56Z",
        "updatedAt" : "2017-06-05T11:51:56Z",
        "lastEditedBy" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "tags" : [
        ]
      }
    ],
    "commit" : "5dcda0ca0b73e2eb3ee06ba20c56e4b507b687f4",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +1035,1039 @@\t}\n\n\ttype MappingHint = number | string[] | Function;\n}\n"
  },
  {
    "id" : "48451104-701a-41c8-857a-91571e1c66f3",
    "prId" : 20446,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20446#pullrequestreview-69169863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e745969c-8b75-4176-a3a3-662c95a8b0d8",
        "parentId" : null,
        "authorId" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "body" : "It might be a good idea to add tests for these cases. What do you think?",
        "createdAt" : "2017-10-12T11:59:58Z",
        "updatedAt" : "2017-10-12T12:31:45Z",
        "lastEditedBy" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "tags" : [
        ]
      },
      {
        "id" : "4df00f19-f9c1-4879-a5fd-e389e5c206a0",
        "parentId" : "e745969c-8b75-4176-a3a3-662c95a8b0d8",
        "authorId" : "079d64c4-185e-4b57-bce8-bb42ee10bf63",
        "body" : "This declaration is corresponding to `Async` in http://highlandjs.org/#async\r\n\r\nIn fact, it should have covered by the test here\r\nhttps://github.com/alvis/DefinitelyTyped/blob/471ce58849ca7a17de1b96f504ec08fc3f7219fa/types/highland/highland-tests.ts#L129",
        "createdAt" : "2017-10-12T12:27:25Z",
        "updatedAt" : "2017-10-12T12:31:45Z",
        "lastEditedBy" : "079d64c4-185e-4b57-bce8-bb42ee10bf63",
        "tags" : [
        ]
      },
      {
        "id" : "51484ae6-3586-47ae-8eaf-d13be87cdf20",
        "parentId" : "e745969c-8b75-4176-a3a3-662c95a8b0d8",
        "authorId" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "body" : "Right! Now I'm wondering why it was working before. Why did [`push` accept `null`](https://github.com/alvis/DefinitelyTyped/blob/471ce58849ca7a17de1b96f504ec08fc3f7219fa/types/highland/highland-tests.ts#L130) as a first argument before your change?",
        "createdAt" : "2017-10-12T12:54:43Z",
        "updatedAt" : "2017-10-12T12:54:43Z",
        "lastEditedBy" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "tags" : [
        ]
      },
      {
        "id" : "3ff02ab4-086e-42f2-91d5-9d238809a171",
        "parentId" : "e745969c-8b75-4176-a3a3-662c95a8b0d8",
        "authorId" : "079d64c4-185e-4b57-bce8-bb42ee10bf63",
        "body" : "I wondered that too. But I think it worked because `strictNullChecks` was only introduced recently.",
        "createdAt" : "2017-10-12T13:20:35Z",
        "updatedAt" : "2017-10-12T13:20:48Z",
        "lastEditedBy" : "079d64c4-185e-4b57-bce8-bb42ee10bf63",
        "tags" : [
        ]
      },
      {
        "id" : "933734ab-ae34-49ae-8e8a-0aa5df679a03",
        "parentId" : "e745969c-8b75-4176-a3a3-662c95a8b0d8",
        "authorId" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "body" : "I think you are right.",
        "createdAt" : "2017-10-13T09:20:42Z",
        "updatedAt" : "2017-10-13T09:20:42Z",
        "lastEditedBy" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "tags" : [
        ]
      }
    ],
    "commit" : "5eabefad10bddc0c79f939d676bfca847a82c0f6",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +75,79 @@  <R>(xs: Highland.Stream<R>[]): Highland.Stream<R>;\n\t<R>(xs: R[]): Highland.Stream<R>;\n\t<R>(xs: (push: (err: Error | null, x?: R) => void, next: () => void) => void): Highland.Stream<R>;\n\n\t<R>(xs: Highland.Stream<R>): Highland.Stream<R>;"
  },
  {
    "id" : "c11610f6-6623-4375-b08c-7cbb4ef95a6b",
    "prId" : 20446,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20446#pullrequestreview-68913764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "976ca6f9-e213-469a-81e0-6a85c48f95ed",
        "parentId" : null,
        "authorId" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "body" : "I can't find `Pick<T, U>`. Could you tell me where it is defined?",
        "createdAt" : "2017-10-12T12:03:49Z",
        "updatedAt" : "2017-10-12T12:31:45Z",
        "lastEditedBy" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "tags" : [
        ]
      },
      {
        "id" : "0bdf27c4-2900-43b5-af01-d0a6a9631ea2",
        "parentId" : "976ca6f9-e213-469a-81e0-6a85c48f95ed",
        "authorId" : "079d64c4-185e-4b57-bce8-bb42ee10bf63",
        "body" : "It's a new build-in type introduced in TS 2.1\r\nhttps://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html",
        "createdAt" : "2017-10-12T12:15:34Z",
        "updatedAt" : "2017-10-12T12:31:45Z",
        "lastEditedBy" : "079d64c4-185e-4b57-bce8-bb42ee10bf63",
        "tags" : [
        ]
      },
      {
        "id" : "26f1dbd0-e670-4908-97b1-13509863feed",
        "parentId" : "976ca6f9-e213-469a-81e0-6a85c48f95ed",
        "authorId" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "body" : "Oh, neat! Thanks.",
        "createdAt" : "2017-10-12T12:58:20Z",
        "updatedAt" : "2017-10-12T12:58:20Z",
        "lastEditedBy" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "tags" : [
        ]
      }
    ],
    "commit" : "5eabefad10bddc0c79f939d676bfca847a82c0f6",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +1169,1173 @@\t\t * @api public\n\t\t */\n\t\teach(f: (x: R) => void): Pick<Stream<R>, 'done'>;\n\n\t\t/**"
  },
  {
    "id" : "83da4efe-f4b8-41a5-88e4-ae828f50ed1d",
    "prId" : 41532,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/41532#pullrequestreview-341542092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c72e2a1-b709-4352-85bd-daeb0b884baf",
        "parentId" : null,
        "authorId" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "body" : "Nice touch",
        "createdAt" : "2020-01-11T21:47:33Z",
        "updatedAt" : "2020-01-13T08:01:36Z",
        "lastEditedBy" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6034736952e17806cc180fb7ad866074631ccad",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +167,171 @@\t * @api public\n\t */\n\tisStream(x: any): x is Highland.Stream<any>;\n\n\tisStreamError(x: any): x is Highland.Stream<any>;"
  },
  {
    "id" : "46b75844-3522-4fcb-afe0-53ba71c78f85",
    "prId" : 41532,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/41532#pullrequestreview-341542092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "522c9a8e-9332-4920-b0c6-74fc26a2b59c",
        "parentId" : null,
        "authorId" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "body" : "Nice touch here too",
        "createdAt" : "2020-01-11T21:47:46Z",
        "updatedAt" : "2020-01-13T08:01:46Z",
        "lastEditedBy" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6034736952e17806cc180fb7ad866074631ccad",
    "line" : 176,
    "diffHunk" : "@@ -1,1 +741,745 @@\t\t * // => {type: 'blogpost', title: 'foo'}\n\t\t */\n\t\tfindWhere(props: Partial<R>): Stream<R>;\n\n\t\t/**"
  },
  {
    "id" : "deb2f2cd-8037-4b37-9503-87839ebbda2b",
    "prId" : 41532,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/41532#pullrequestreview-341542092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ef762ad-9ac4-4534-9021-acba0a9c018a",
        "parentId" : null,
        "authorId" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "body" : "could we add the docs for pick?",
        "createdAt" : "2020-01-11T21:51:15Z",
        "updatedAt" : "2020-01-13T08:02:07Z",
        "lastEditedBy" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6034736952e17806cc180fb7ad866074631ccad",
    "line" : 216,
    "diffHunk" : "@@ -1,1 +844,848 @@\t\t * @api public\n\t\t */\n\t\tpick<Prop extends keyof R>(props: Prop[]): Stream<Pick<R, Prop>>;\n\t\t/**\n\t\t *"
  },
  {
    "id" : "bde6dc37-994e-4078-8d5d-a148ce521dd5",
    "prId" : 41532,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/41532#pullrequestreview-341602058",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5d8dc36-4167-4644-9408-f818f13c70d6",
        "parentId" : null,
        "authorId" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "body" : "Lets add a test\r\n\r\n```\r\n// $ExpectType Stream<Foo>\r\nfooStream = fooStream.slice(10, 100)\r\n```",
        "createdAt" : "2020-01-12T22:33:47Z",
        "updatedAt" : "2020-01-13T08:03:04Z",
        "lastEditedBy" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6034736952e17806cc180fb7ad866074631ccad",
    "line" : 291,
    "diffHunk" : "@@ -1,1 +975,979 @@\t\t * @api public\n\t\t */\n\t\tslice(start: number, end: number): Stream<R>;\n\n\t\t/**"
  },
  {
    "id" : "1ffa345c-54ff-4a95-919a-51a1f402ea6e",
    "prId" : 41532,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/41532#pullrequestreview-341602058",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13c4dd5c-21b5-4182-8757-3a72719e246f",
        "parentId" : null,
        "authorId" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "body" : "Lets add a test for this too\r\n\r\n```\r\n// $ExpectType Stream<Foo>\r\nfooStream = fooStream.sort()\r\n```",
        "createdAt" : "2020-01-12T22:34:43Z",
        "updatedAt" : "2020-01-13T08:03:16Z",
        "lastEditedBy" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6034736952e17806cc180fb7ad866074631ccad",
    "line" : 305,
    "diffHunk" : "@@ -1,1 +989,993 @@\t\t * // => ['b', 'g', 'r', 'z']\n\t\t */\n\t\tsort(): Stream<R>;\n\n\t\t/**"
  },
  {
    "id" : "86a8494d-c292-4806-b27a-2ee99cca9cea",
    "prId" : 41532,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/41532#pullrequestreview-341602058",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42db8acf-336f-4813-8978-c6a0f245c891",
        "parentId" : null,
        "authorId" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "body" : "Another test case:\r\n\r\n```\r\n// $ExpectType Stream<Foo>\r\nfooStream = fooStream.sortBy((a: Foo, b: Foo) => 1)\r\n```",
        "createdAt" : "2020-01-12T22:35:37Z",
        "updatedAt" : "2020-01-13T08:03:25Z",
        "lastEditedBy" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6034736952e17806cc180fb7ad866074631ccad",
    "line" : 328,
    "diffHunk" : "@@ -1,1 +1012,1016 @@\t\t * @api public\n\t\t */\n\t\tsortBy(f: (a: R, b: R) => number): Stream<R>;\n\n\t\t/**"
  },
  {
    "id" : "d99477f3-fdce-4b09-8742-b4eb01baa1a1",
    "prId" : 41532,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/41532#pullrequestreview-341602058",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd0adfc1-9f0c-474d-9222-9f15d2164122",
        "parentId" : null,
        "authorId" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "body" : "Test cases:\r\n\r\n```\r\n// $ExpectError\r\nfooStream.split()\r\n\r\n// $ExpectType Stream<string>\r\n_(['']).split()\r\n```",
        "createdAt" : "2020-01-12T22:38:10Z",
        "updatedAt" : "2020-01-13T08:03:39Z",
        "lastEditedBy" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6034736952e17806cc180fb7ad866074631ccad",
    "line" : 338,
    "diffHunk" : "@@ -1,1 +1022,1026 @@\t\t * @api public\n\t\t */\n\t\tsplit(this: Stream<string>): Stream<string>;\n\n\t\t/**"
  },
  {
    "id" : "e8ef008e-5245-479b-bcc7-0320cff92328",
    "prId" : 41532,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/41532#pullrequestreview-341602058",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82467872-7d74-4cb1-9d8c-606f715995b4",
        "parentId" : null,
        "authorId" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "body" : "Lets also add\r\n\r\n```\r\nbazStream = bazStream.where({'baz': true})\r\n```",
        "createdAt" : "2020-01-12T22:41:14Z",
        "updatedAt" : "2020-01-13T08:04:19Z",
        "lastEditedBy" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6034736952e17806cc180fb7ad866074631ccad",
    "line" : 360,
    "diffHunk" : "@@ -1,1 +1117,1121 @@\t\t * @api public\n\t\t */\n\t\twhere(props: Partial<R>): Stream<R>;\n\n\t\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"
  },
  {
    "id" : "52338bbb-a80b-415d-b9b2-9ecd1c65a3a5",
    "prId" : 41532,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/41532#pullrequestreview-341602058",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c87d226-7e79-4746-baee-06e853624dce",
        "parentId" : null,
        "authorId" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "body" : "Lets add these too\r\n\r\n```\r\n// $ExpectError\r\nfooStream.merge();\r\n\r\nfooStream = fooStreamStream.mergeWithLimit(1);\r\n\r\n// $ExpectError\r\nfooStream.mergeWithLimit(1);\r\n```",
        "createdAt" : "2020-01-12T22:42:43Z",
        "updatedAt" : "2020-01-13T08:04:59Z",
        "lastEditedBy" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6034736952e17806cc180fb7ad866074631ccad",
    "line" : 398,
    "diffHunk" : "@@ -1,1 +1244,1248 @@\t\t * // has completely been read or baz.md has been read\n\t\t */\n\t\tmergeWithLimit<U>(this: Stream<Stream<U>>, n: number): Stream<U>;\n\n\t\t/**"
  }
]