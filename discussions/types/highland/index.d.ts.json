[
  {
    "id" : "a700a70b-d9a5-46ce-a906-17cd8c3c3421",
    "prId" : 16523,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/16523#pullrequestreview-42027314",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "917af4f5-ecb2-496c-b16c-50655d5dbafd",
        "parentId" : null,
        "authorId" : "9ff3a857-4ac9-4a7e-b447-d0a2f6573899",
        "body" : "Can you use a more specific function type here? Potentially even just `((...args: any[]) => any)`",
        "createdAt" : "2017-05-22T22:55:45Z",
        "updatedAt" : "2017-05-22T22:55:48Z",
        "lastEditedBy" : "9ff3a857-4ac9-4a7e-b447-d0a2f6573899",
        "tags" : [
        ]
      },
      {
        "id" : "8d3206f4-bdf4-4c27-a94f-913ad2039459",
        "parentId" : "917af4f5-ecb2-496c-b16c-50655d5dbafd",
        "authorId" : "4c9641f4-a979-41a2-8c5f-adb3db2b96a5",
        "body" : "Is it possible to say `type MappingHint<T> = number | string[] | ((...args: any[]) => T)` (probably not, but one can dream...), because the return value of the function determines the type of the resulting stream. That is, strictly speaking, the types for mapping hint constructor is something like\r\n\r\n`<R>(eventName: string, xs: NodeJS.EventEmitter, mappingHint?: MappingHint<R>): Highland.Stream<R>`\r\n\r\nand the type for `wrapCallback` is\r\n\r\n`wrapCallback<R>(f: (...args: any[]) => void, mappingHint?: MappingHint<R>: (...args: any[]) => Highland.Stream<R>`\r\n\r\nwhere `R` is `any` if the mapping hint is either a `number` or a `string[]`.",
        "createdAt" : "2017-05-22T23:24:31Z",
        "updatedAt" : "2017-05-22T23:24:31Z",
        "lastEditedBy" : "4c9641f4-a979-41a2-8c5f-adb3db2b96a5",
        "tags" : [
        ]
      },
      {
        "id" : "25b8a313-4e4b-41ec-937e-1e423d1d2694",
        "parentId" : "917af4f5-ecb2-496c-b16c-50655d5dbafd",
        "authorId" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "body" : "@DanielRosenwasser was is the difference between `Function` and `((...args: any[]) => any)`?",
        "createdAt" : "2017-06-05T11:51:56Z",
        "updatedAt" : "2017-06-05T11:51:56Z",
        "lastEditedBy" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "tags" : [
        ]
      }
    ],
    "commit" : "5dcda0ca0b73e2eb3ee06ba20c56e4b507b687f4",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +1035,1039 @@\t}\n\n\ttype MappingHint = number | string[] | Function;\n}\n"
  },
  {
    "id" : "48451104-701a-41c8-857a-91571e1c66f3",
    "prId" : 20446,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20446#pullrequestreview-69169863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e745969c-8b75-4176-a3a3-662c95a8b0d8",
        "parentId" : null,
        "authorId" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "body" : "It might be a good idea to add tests for these cases. What do you think?",
        "createdAt" : "2017-10-12T11:59:58Z",
        "updatedAt" : "2017-10-12T12:31:45Z",
        "lastEditedBy" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "tags" : [
        ]
      },
      {
        "id" : "4df00f19-f9c1-4879-a5fd-e389e5c206a0",
        "parentId" : "e745969c-8b75-4176-a3a3-662c95a8b0d8",
        "authorId" : "079d64c4-185e-4b57-bce8-bb42ee10bf63",
        "body" : "This declaration is corresponding to `Async` in http://highlandjs.org/#async\r\n\r\nIn fact, it should have covered by the test here\r\nhttps://github.com/alvis/DefinitelyTyped/blob/471ce58849ca7a17de1b96f504ec08fc3f7219fa/types/highland/highland-tests.ts#L129",
        "createdAt" : "2017-10-12T12:27:25Z",
        "updatedAt" : "2017-10-12T12:31:45Z",
        "lastEditedBy" : "079d64c4-185e-4b57-bce8-bb42ee10bf63",
        "tags" : [
        ]
      },
      {
        "id" : "51484ae6-3586-47ae-8eaf-d13be87cdf20",
        "parentId" : "e745969c-8b75-4176-a3a3-662c95a8b0d8",
        "authorId" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "body" : "Right! Now I'm wondering why it was working before. Why did [`push` accept `null`](https://github.com/alvis/DefinitelyTyped/blob/471ce58849ca7a17de1b96f504ec08fc3f7219fa/types/highland/highland-tests.ts#L130) as a first argument before your change?",
        "createdAt" : "2017-10-12T12:54:43Z",
        "updatedAt" : "2017-10-12T12:54:43Z",
        "lastEditedBy" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "tags" : [
        ]
      },
      {
        "id" : "3ff02ab4-086e-42f2-91d5-9d238809a171",
        "parentId" : "e745969c-8b75-4176-a3a3-662c95a8b0d8",
        "authorId" : "079d64c4-185e-4b57-bce8-bb42ee10bf63",
        "body" : "I wondered that too. But I think it worked because `strictNullChecks` was only introduced recently.",
        "createdAt" : "2017-10-12T13:20:35Z",
        "updatedAt" : "2017-10-12T13:20:48Z",
        "lastEditedBy" : "079d64c4-185e-4b57-bce8-bb42ee10bf63",
        "tags" : [
        ]
      },
      {
        "id" : "933734ab-ae34-49ae-8e8a-0aa5df679a03",
        "parentId" : "e745969c-8b75-4176-a3a3-662c95a8b0d8",
        "authorId" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "body" : "I think you are right.",
        "createdAt" : "2017-10-13T09:20:42Z",
        "updatedAt" : "2017-10-13T09:20:42Z",
        "lastEditedBy" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "tags" : [
        ]
      }
    ],
    "commit" : "5eabefad10bddc0c79f939d676bfca847a82c0f6",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +75,79 @@  <R>(xs: Highland.Stream<R>[]): Highland.Stream<R>;\n\t<R>(xs: R[]): Highland.Stream<R>;\n\t<R>(xs: (push: (err: Error | null, x?: R) => void, next: () => void) => void): Highland.Stream<R>;\n\n\t<R>(xs: Highland.Stream<R>): Highland.Stream<R>;"
  },
  {
    "id" : "c11610f6-6623-4375-b08c-7cbb4ef95a6b",
    "prId" : 20446,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20446#pullrequestreview-68913764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "976ca6f9-e213-469a-81e0-6a85c48f95ed",
        "parentId" : null,
        "authorId" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "body" : "I can't find `Pick<T, U>`. Could you tell me where it is defined?",
        "createdAt" : "2017-10-12T12:03:49Z",
        "updatedAt" : "2017-10-12T12:31:45Z",
        "lastEditedBy" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "tags" : [
        ]
      },
      {
        "id" : "0bdf27c4-2900-43b5-af01-d0a6a9631ea2",
        "parentId" : "976ca6f9-e213-469a-81e0-6a85c48f95ed",
        "authorId" : "079d64c4-185e-4b57-bce8-bb42ee10bf63",
        "body" : "It's a new build-in type introduced in TS 2.1\r\nhttps://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html",
        "createdAt" : "2017-10-12T12:15:34Z",
        "updatedAt" : "2017-10-12T12:31:45Z",
        "lastEditedBy" : "079d64c4-185e-4b57-bce8-bb42ee10bf63",
        "tags" : [
        ]
      },
      {
        "id" : "26f1dbd0-e670-4908-97b1-13509863feed",
        "parentId" : "976ca6f9-e213-469a-81e0-6a85c48f95ed",
        "authorId" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "body" : "Oh, neat! Thanks.",
        "createdAt" : "2017-10-12T12:58:20Z",
        "updatedAt" : "2017-10-12T12:58:20Z",
        "lastEditedBy" : "21394d9d-232a-4699-ac8e-860219ec730d",
        "tags" : [
        ]
      }
    ],
    "commit" : "5eabefad10bddc0c79f939d676bfca847a82c0f6",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +1169,1173 @@\t\t * @api public\n\t\t */\n\t\teach(f: (x: R) => void): Pick<Stream<R>, 'done'>;\n\n\t\t/**"
  }
]