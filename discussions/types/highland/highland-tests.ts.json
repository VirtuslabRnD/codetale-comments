[
  {
    "id" : "50d93e89-589e-41bd-867c-b090f625f6a9",
    "prId" : 41646,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/41646#pullrequestreview-345018974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfe70be6-83de-49ab-8d9f-4a206f0b0ff7",
        "parentId" : null,
        "authorId" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "body" : "Could we add one more test case for this?\r\n\r\n```js\r\n// $ExpectType Stream<number>\r\nnumStream = numStream.filter((n: number) => n > 3);\r\n```\r\n\r\n(This was mostly for my own satisfaction that we can use `is` without breaking vanilla predicates that aren't type based)",
        "createdAt" : "2020-01-18T18:45:26Z",
        "updatedAt" : "2020-01-19T18:51:20Z",
        "lastEditedBy" : "92d1caa2-22b1-4cad-ac68-ec13d27d0e83",
        "tags" : [
        ]
      },
      {
        "id" : "1f1580ba-e8c2-4724-bbf8-e7539c99c9d4",
        "parentId" : "bfe70be6-83de-49ab-8d9f-4a206f0b0ff7",
        "authorId" : "92710ffe-21b2-456c-8c44-a4c47eae020a",
        "body" : "Sure, makes sense",
        "createdAt" : "2020-01-19T18:49:32Z",
        "updatedAt" : "2020-01-19T18:51:20Z",
        "lastEditedBy" : "92710ffe-21b2-456c-8c44-a4c47eae020a",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f23a8747bba5dd1b2f724d30a644fa5b19f19c2",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +256,260 @@// $ExpectType Stream<Baz>\nfooStream.filter(isBaz);\n\nfooStream = fooStream.find((x: Foo) => {\n  return bool;"
  }
]