[
  {
    "id" : "2ba7f643-15d1-4e39-8140-3d4ca83d5875",
    "prId" : 43436,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/43436#pullrequestreview-383317924",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "884a4ab9-f986-49ab-b4f8-b74ca65c6ec0",
        "parentId" : null,
        "authorId" : "5e3e8a81-a77f-493a-8d51-f4afe7ce77eb",
        "body" : "Yes you are correct these functions exists. But aren't at least setOptions, validateOptions only for internal use? - What happens if you use setOptions and change the db-Connection?",
        "createdAt" : "2020-03-28T10:46:55Z",
        "updatedAt" : "2020-03-28T14:24:51Z",
        "lastEditedBy" : "5e3e8a81-a77f-493a-8d51-f4afe7ce77eb",
        "tags" : [
        ]
      },
      {
        "id" : "5f5fee7c-2994-4aa4-be26-0eb4fcb86fda",
        "parentId" : "884a4ab9-f986-49ab-b4f8-b74ca65c6ec0",
        "authorId" : "5e3e8a81-a77f-493a-8d51-f4afe7ce77eb",
        "body" : "See https://github.com/chill117/express-mysql-session/blob/master/index.js#L37 so I'm not shure if you should expose this function.",
        "createdAt" : "2020-03-28T10:52:36Z",
        "updatedAt" : "2020-03-28T14:24:51Z",
        "lastEditedBy" : "5e3e8a81-a77f-493a-8d51-f4afe7ce77eb",
        "tags" : [
        ]
      },
      {
        "id" : "a8932d53-50df-49ca-a5fc-0011dd25f6c2",
        "parentId" : "884a4ab9-f986-49ab-b4f8-b74ca65c6ec0",
        "authorId" : "f2fd035b-7eef-4053-812c-5ec476d7698f",
        "body" : "No idea, the fact is that they *are* exposed in the source, so I put them in the typings.\r\nI don't think it's up to us to make the decision whether it's smart to expose a function or not. If the author did not want them exposed, he would not have put them on the prototype.",
        "createdAt" : "2020-03-28T14:23:53Z",
        "updatedAt" : "2020-03-28T14:24:51Z",
        "lastEditedBy" : "f2fd035b-7eef-4053-812c-5ec476d7698f",
        "tags" : [
        ]
      },
      {
        "id" : "e6b1afd7-91c9-49e5-8210-71ccf8ab78af",
        "parentId" : "884a4ab9-f986-49ab-b4f8-b74ca65c6ec0",
        "authorId" : "5e3e8a81-a77f-493a-8d51-f4afe7ce77eb",
        "body" : "OK I accept that.",
        "createdAt" : "2020-03-28T14:29:07Z",
        "updatedAt" : "2020-03-28T14:29:07Z",
        "lastEditedBy" : "5e3e8a81-a77f-493a-8d51-f4afe7ce77eb",
        "tags" : [
        ]
      },
      {
        "id" : "dc886ada-2686-4eca-a660-34e2a54aff35",
        "parentId" : "884a4ab9-f986-49ab-b4f8-b74ca65c6ec0",
        "authorId" : "5e3e8a81-a77f-493a-8d51-f4afe7ce77eb",
        "body" : "FYI just found this https://github.com/chill117/express-mysql-session/pull/93/files",
        "createdAt" : "2020-03-28T14:32:29Z",
        "updatedAt" : "2020-03-28T14:32:30Z",
        "lastEditedBy" : "5e3e8a81-a77f-493a-8d51-f4afe7ce77eb",
        "tags" : [
        ]
      },
      {
        "id" : "968f1596-0ec4-4cc5-ba98-a8c480254665",
        "parentId" : "884a4ab9-f986-49ab-b4f8-b74ca65c6ec0",
        "authorId" : "5e3e8a81-a77f-493a-8d51-f4afe7ce77eb",
        "body" : "But I approve the changes now. When it gets merged we can remove the types here.",
        "createdAt" : "2020-03-28T14:33:34Z",
        "updatedAt" : "2020-03-28T14:33:35Z",
        "lastEditedBy" : "5e3e8a81-a77f-493a-8d51-f4afe7ce77eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "94f7dfaf803c2578c2e61e33c04ad7890e64bfee",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +43,47 @@    setDefaultOptions(): void;\n\n    setOptions(options: MySQLStore.Options): void;\n\n    validateOptions(options: MySQLStore.Options): void;"
  },
  {
    "id" : "ea7eb8aa-f36f-43d9-a569-912e4a624de7",
    "prId" : 43436,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/43436#pullrequestreview-383302579",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e83a5756-2a69-4cf2-b804-60afe0e24817",
        "parentId" : null,
        "authorId" : "5e3e8a81-a77f-493a-8d51-f4afe7ce77eb",
        "body" : "Looks good for me üëç ",
        "createdAt" : "2020-03-28T10:54:54Z",
        "updatedAt" : "2020-03-28T14:24:51Z",
        "lastEditedBy" : "5e3e8a81-a77f-493a-8d51-f4afe7ce77eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "94f7dfaf803c2578c2e61e33c04ad7890e64bfee",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +23,27 @@        createDatabaseTable?: boolean;\n        connectionLimit?: number;\n        schema?: Partial<Schema>;\n    }\n    interface Schema {"
  },
  {
    "id" : "769911ff-5df4-4145-a26e-50018ea4d4fb",
    "prId" : 43436,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/43436#pullrequestreview-383317261",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77cd7c4b-5453-45b1-8220-70e846e0ca50",
        "parentId" : null,
        "authorId" : "5e3e8a81-a77f-493a-8d51-f4afe7ce77eb",
        "body" : "Can we get better Typings for it?\r\n\r\nMaybe:\r\n\r\n```ts\r\nquery<T = any>(sql: string, params: any, callback?: (error: any, rows: Array<T>, fields: any) => void): void;\r\n```\r\n\r\nSomething similar for fields...",
        "createdAt" : "2020-03-28T11:00:09Z",
        "updatedAt" : "2020-03-28T14:24:51Z",
        "lastEditedBy" : "5e3e8a81-a77f-493a-8d51-f4afe7ce77eb",
        "tags" : [
        ]
      },
      {
        "id" : "1fe1b801-6b03-43a3-ad01-e7d94c16dbd0",
        "parentId" : "77cd7c4b-5453-45b1-8220-70e846e0ca50",
        "authorId" : "f2fd035b-7eef-4053-812c-5ec476d7698f",
        "body" : "I've looked at the express-mysql-session and mysql code but I cannot figure out what the exact types of the rows and fields are in this situation, instead of making a mistake and breaking things, I'd rather set them to `any`",
        "createdAt" : "2020-03-28T14:24:23Z",
        "updatedAt" : "2020-03-28T14:24:51Z",
        "lastEditedBy" : "f2fd035b-7eef-4053-812c-5ec476d7698f",
        "tags" : [
        ]
      }
    ],
    "commit" : "94f7dfaf803c2578c2e61e33c04ad7890e64bfee",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +65,69 @@    clearExpiredSessions(callback?: (error: any) => void): void;\n\n    query(sql: string, params: any, callback?: (error: any, rows: any, fields: any) => void): void;\n\n    setExpirationInterval(interval: number): void;"
  }
]