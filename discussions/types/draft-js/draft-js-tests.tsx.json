[
  {
    "id" : "33fa4eaf-21b9-4788-9682-e7ec67d407e2",
    "prId" : 19759,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/19759#pullrequestreview-63372623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbcd183e-7f70-46f4-8f8a-fbecd5707b7a",
        "parentId" : null,
        "authorId" : "12d669e7-71ea-4328-9d11-c67c19345ed6",
        "body" : "Should `editorState` be optional here?",
        "createdAt" : "2017-09-15T17:12:34Z",
        "updatedAt" : "2017-09-15T17:12:34Z",
        "lastEditedBy" : "12d669e7-71ea-4328-9d11-c67c19345ed6",
        "tags" : [
        ]
      },
      {
        "id" : "6d3dd1ae-e034-4b47-9aac-d672c3aa15a4",
        "parentId" : "cbcd183e-7f70-46f4-8f8a-fbecd5707b7a",
        "authorId" : "665f5085-f1c9-4a96-9898-1ad5b4a91e3f",
        "body" : "I don't think so, since `editorState` is always passed and as I commented earlier:\r\nIf I change this to `editorState?: EditorState`, from a user perspective it looks like that parameter can be `undefined`, which is incorrect.",
        "createdAt" : "2017-09-16T02:58:49Z",
        "updatedAt" : "2017-09-16T02:58:49Z",
        "lastEditedBy" : "665f5085-f1c9-4a96-9898-1ad5b4a91e3f",
        "tags" : [
        ]
      },
      {
        "id" : "91993e28-297d-4288-8a20-8705fc0c84d4",
        "parentId" : "cbcd183e-7f70-46f4-8f8a-fbecd5707b7a",
        "authorId" : "2ee1f819-5d46-49c9-b3d3-2a7a0ef1303f",
        "body" : "i think that @smvilar is correct - making `editorState` optional would force the consumer to write a `handleKeyCommand` function that accounts for the possibility of an `undefined` `editorState` even though the function should always receive a value..",
        "createdAt" : "2017-09-18T14:36:05Z",
        "updatedAt" : "2017-09-18T14:36:05Z",
        "lastEditedBy" : "2ee1f819-5d46-49c9-b3d3-2a7a0ef1303f",
        "tags" : [
        ]
      }
    ],
    "commit" : "bae8cad188cc776c633eb935685356fbbb4590c7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +69,73 @@  }\n\n  handleKeyCommand = (command: string, editorState: EditorState) => {\n    if (command === SPLIT_HEADER_BLOCK) {\n      this.onChange(this.splitHeaderToNewBlock());"
  },
  {
    "id" : "0b0b3c3e-146a-4ec4-a992-36366d49d7bf",
    "prId" : 20987,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20987#pullrequestreview-74290974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc679a7a-c0dc-4f81-9108-530be5de08a4",
        "parentId" : null,
        "authorId" : "3aead6d0-9596-42c8-ac54-43d19b7c4039",
        "body" : "Same here.",
        "createdAt" : "2017-11-05T19:21:34Z",
        "updatedAt" : "2017-11-05T19:21:38Z",
        "lastEditedBy" : "3aead6d0-9596-42c8-ac54-43d19b7c4039",
        "tags" : [
        ]
      }
    ],
    "commit" : "73216e2ef23df02103e94adf636d8e71f1bc7d9c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +31,35 @@class RichEditorExample extends React.Component<{}, { editorState: EditorState }> {\n  constructor() {\n    super({});\n\n    const sampleMarkup ="
  }
]