[
  {
    "id" : "4a23083d-7c26-4906-bf90-191691c8b429",
    "prId" : 33348,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/33348#pullrequestreview-254628973",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36bc7ef6-d23d-48dc-b9eb-51f3ad6fe8d9",
        "parentId" : null,
        "authorId" : "ecd4b6e6-7230-4ba4-b7ca-f4692901dc39",
        "body" : "`Property 'store' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<Tester> & Readonly<TesterProps> & Readonly<{ children?: ReactNode; }>'`",
        "createdAt" : "2019-06-26T13:53:55Z",
        "updatedAt" : "2019-06-26T13:53:56Z",
        "lastEditedBy" : "ecd4b6e6-7230-4ba4-b7ca-f4692901dc39",
        "tags" : [
        ]
      }
    ],
    "commit" : "46dc879fb36fe577ad439fdb9572c60e6c561a96",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +20,24 @@    specs: Array<(spec: TestScope) => void>;\n    waitTime: number;\n    sendReport?: boolean;\n}\n"
  },
  {
    "id" : "767e960e-aef9-4e7a-9b3c-2c819c537e6a",
    "prId" : 41474,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/41474#pullrequestreview-340187399",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f49afbd-44e3-4d44-a866-1644e7f9dfa3",
        "parentId" : null,
        "authorId" : "889aa791-06c6-4e14-90d4-8e19d2ddb2b0",
        "body" : "As this is a new api, can we amend the inline doc, like that one from the upstream change?\r\n```text\r\nReturns a promise, use await when calling this function.\r\nPromise will berejected if the component is not found.\r\n```",
        "createdAt" : "2020-01-08T22:30:34Z",
        "updatedAt" : "2020-01-09T20:58:44Z",
        "lastEditedBy" : "889aa791-06c6-4e14-90d4-8e19d2ddb2b0",
        "tags" : [
        ]
      }
    ],
    "commit" : "43a516d43303c7e955b3f26d8112d1538534c7fa",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +54,58 @@    press(identifier: string): Promise<void>;\n    fillIn(identifier: string, str: string): Promise<void>;\n    focus(identifier: string): Promise<void>;\n    pause(time: number): Promise<void>;\n    exists(identifier: string): Promise<true>;"
  }
]