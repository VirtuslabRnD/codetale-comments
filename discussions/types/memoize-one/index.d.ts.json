[
  {
    "id" : "e7dd9fae-fa50-4e16-adbf-aababbed021b",
    "prId" : 26467,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/26467#pullrequestreview-129627312",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3dc1faf-d82b-481e-9e18-3f6a6c923a2a",
        "parentId" : null,
        "authorId" : "94fcdc67-3998-405b-8b6c-b9ad802927eb",
        "body" : "Personally, I'm very much in favor of this change. However, the current way of doing it is how the [`dts-gen` templates](https://github.com/Microsoft/dts-gen/tree/master/templates) suggest:\r\n\r\n```ts\r\n/*~ If you want to expose types from your module as well, you can\r\n *~ place them in this block. Often you will want to describe the\r\n *~ shape of the return type of the function; that type should\r\n *~ be declared in here, as this example shows.\r\n */\r\ndeclare namespace MyFunction {\r\n    export interface LengthReturnType {\r\n        width: number;\r\n        height: number;\r\n    }\r\n    export interface NamedReturnType {\r\n        firstName: string;\r\n        lastName: string;\r\n    }\r\n\r\n    /*~ If the module also has properties, declare them here. For example,\r\n     *~ this declaration says that this code is legal:\r\n     *~   import f = require('myFuncLibrary');\r\n     *~   console.log(f.defaultName);\r\n     */\r\n    export const defaultName: string;\r\n    export let defaultLength: number;\r\n}\r\n```\r\n\r\nOr for single classes:\r\n\r\n```ts\r\n/*~ If you want to expose types from your module as well, you can\r\n *~ place them in this block.\r\n */\r\ndeclare namespace MyClass {\r\n    export interface MyClassMethodOptions {\r\n        width?: number;\r\n        height?: number;\r\n    }\r\n}\r\n```\r\n\r\n@andy-ms â€” is the above a very strong recommendation, or rather just one way of doing this?",
        "createdAt" : "2018-06-12T07:23:05Z",
        "updatedAt" : "2018-06-12T07:23:50Z",
        "lastEditedBy" : "94fcdc67-3998-405b-8b6c-b9ad802927eb",
        "tags" : [
        ]
      },
      {
        "id" : "b7be15a8-a2de-484b-b7c9-f3f1f744846e",
        "parentId" : "d3dc1faf-d82b-481e-9e18-3f6a6c923a2a",
        "authorId" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "body" : "The two styles actually have a different meaning -- `export =` would mean that `require(\"memoize-one\")` is itself a function, and `export default` means that `require(\"memoize-one\")` is an object with a `default` property. Since the latter seems to be the case, this PR is correct.",
        "createdAt" : "2018-06-18T15:55:36Z",
        "updatedAt" : "2018-06-18T15:55:36Z",
        "lastEditedBy" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "0cad64e5a66dbd9bd204f966e54590b24002daf9",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +4,8 @@// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n\ndeclare function memoizeOne<T extends (...args: any[]) => any>(resultFn: T, isEqual?: EqualityFn): T;\nexport type EqualityFn = (a: any, b: any) => boolean;\n"
  }
]