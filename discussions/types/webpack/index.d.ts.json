[
  {
    "id" : "423aae01-7fab-4045-a097-7432ae60a040",
    "prId" : 20785,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20785#pullrequestreview-71033403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38bc6c2e-47a4-47f9-8177-640127912125",
        "parentId" : null,
        "authorId" : "01e461e7-0879-4481-94a6-957ca6878bad",
        "body" : "can you review changes and make sure we're adding all new APIs?",
        "createdAt" : "2017-10-21T20:40:32Z",
        "updatedAt" : "2017-10-27T05:58:13Z",
        "lastEditedBy" : "01e461e7-0879-4481-94a6-957ca6878bad",
        "tags" : [
        ]
      },
      {
        "id" : "e6c0531c-b03b-47ca-af35-6227f7095fcf",
        "parentId" : "38bc6c2e-47a4-47f9-8177-640127912125",
        "authorId" : "068804f8-bc88-4ea5-be58-5e946cb4ca93",
        "body" : "I updated some stuff that I found missing!",
        "createdAt" : "2017-10-22T13:31:54Z",
        "updatedAt" : "2017-10-27T05:58:13Z",
        "lastEditedBy" : "068804f8-bc88-4ea5-be58-5e946cb4ca93",
        "tags" : [
        ]
      }
    ],
    "commit" : "73890010c2ec5ace2f8ea4c681192ea9db324291",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +-1,3 @@// Type definitions for webpack 3.8\n// Project: https://github.com/webpack/webpack\n// Definitions by: Qubo <https://github.com/tkqubo>"
  },
  {
    "id" : "9a6685a6-5a8b-42c3-8538-b6ba28db46bf",
    "prId" : 20785,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20785#pullrequestreview-75063951",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32a3252f-7fa6-4de9-accc-9c4175fb3c9f",
        "parentId" : null,
        "authorId" : "391b2d12-e160-42cf-805b-282ddf7ef537",
        "body" : "Shouldn't this be `boolean` instead of `true`?",
        "createdAt" : "2017-11-08T10:58:29Z",
        "updatedAt" : "2017-11-08T10:58:29Z",
        "lastEditedBy" : "391b2d12-e160-42cf-805b-282ddf7ef537",
        "tags" : [
        ]
      },
      {
        "id" : "e431f12e-8dd8-4067-b0ac-c99e42a62384",
        "parentId" : "32a3252f-7fa6-4de9-accc-9c4175fb3c9f",
        "authorId" : "068804f8-bc88-4ea5-be58-5e946cb4ca93",
        "body" : "FIxed in #21342",
        "createdAt" : "2017-11-08T11:18:14Z",
        "updatedAt" : "2017-11-08T11:18:14Z",
        "lastEditedBy" : "068804f8-bc88-4ea5-be58-5e946cb4ca93",
        "tags" : [
        ]
      }
    ],
    "commit" : "73890010c2ec5ace2f8ea4c681192ea9db324291",
    "line" : 159,
    "diffHunk" : "@@ -1,1 +605,609 @@            cached?: boolean;\n            /** Show cached assets (setting this to `false` only shows emitted files) */\n            cachedAssets?: true;\n            /** Add children information */\n            children?: boolean;"
  },
  {
    "id" : "950e9aaa-3bc4-45ac-b298-979b4360f473",
    "prId" : 20785,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20785#pullrequestreview-75063935",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0178890-877c-47f7-a8c4-47e1c6ba2d98",
        "parentId" : null,
        "authorId" : "391b2d12-e160-42cf-805b-282ddf7ef537",
        "body" : "Should be `boolean`, I guess.",
        "createdAt" : "2017-11-08T11:11:13Z",
        "updatedAt" : "2017-11-08T11:11:13Z",
        "lastEditedBy" : "391b2d12-e160-42cf-805b-282ddf7ef537",
        "tags" : [
        ]
      },
      {
        "id" : "633870c8-e108-496f-b7b0-b924105b124e",
        "parentId" : "a0178890-877c-47f7-a8c4-47e1c6ba2d98",
        "authorId" : "068804f8-bc88-4ea5-be58-5e946cb4ca93",
        "body" : "FIxed in #21342",
        "createdAt" : "2017-11-08T11:18:11Z",
        "updatedAt" : "2017-11-08T11:18:11Z",
        "lastEditedBy" : "068804f8-bc88-4ea5-be58-5e946cb4ca93",
        "tags" : [
        ]
      }
    ],
    "commit" : "73890010c2ec5ace2f8ea4c681192ea9db324291",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +619,623 @@            context?: string;\n            /** Display the distance from the entry point for each module */\n            depth?: false;\n            /** Display the entry points with the corresponding bundles */\n            entrypoints?: boolean;"
  },
  {
    "id" : "01d2d591-880b-4c60-8081-128ee41d81aa",
    "prId" : 24092,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/24092#pullrequestreview-101753860",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9ceda68-698e-48c7-b4c5-7745547fe61f",
        "parentId" : null,
        "authorId" : "1985e37c-2f23-4a96-8385-ab8d42e6573b",
        "body" : "Mentioning definition owners for review: @tkqubo @bumbleblym @bcherny @tommytroylin @mohsen1 @jcreamer898 @ahmed-taj @alan-agius4 @elliottsj @jason0x43 ",
        "createdAt" : "2018-03-06T23:11:02Z",
        "updatedAt" : "2018-03-07T01:19:58Z",
        "lastEditedBy" : "1985e37c-2f23-4a96-8385-ab8d42e6573b",
        "tags" : [
        ]
      }
    ],
    "commit" : "81514fb7bc9263497e94eb4b726f495bf7bcf564",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1,5 @@// Type definitions for webpack 4.1\n// Project: https://github.com/webpack/webpack\n// Definitions by: Qubo <https://github.com/tkqubo>\n//                 Benjamin Lim <https://github.com/bumbleblym>\n//                 Boris Cherny <https://github.com/bcherny>"
  },
  {
    "id" : "0d4092a5-4c81-48a0-b0f4-55fdaac929ae",
    "prId" : 24092,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/24092#pullrequestreview-101785961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffe3e3ad-4a5c-4466-92e3-7a1e4d83bc81",
        "parentId" : null,
        "authorId" : "01e461e7-0879-4481-94a6-957ca6878bad",
        "body" : "string? ",
        "createdAt" : "2018-03-07T01:41:34Z",
        "updatedAt" : "2018-03-07T01:41:53Z",
        "lastEditedBy" : "01e461e7-0879-4481-94a6-957ca6878bad",
        "tags" : [
        ]
      },
      {
        "id" : "99dc3fce-0de4-4f11-98a1-66eb7ab2a6f1",
        "parentId" : "ffe3e3ad-4a5c-4466-92e3-7a1e4d83bc81",
        "authorId" : "6727fdaf-7474-458b-b858-976cb481e92a",
        "body" : "I've been using `any` in a few places like this as a stop gap till I am able to figure out what all the types are...",
        "createdAt" : "2018-03-07T01:56:23Z",
        "updatedAt" : "2018-03-07T01:56:23Z",
        "lastEditedBy" : "6727fdaf-7474-458b-b858-976cb481e92a",
        "tags" : [
        ]
      }
    ],
    "commit" : "81514fb7bc9263497e94eb4b726f495bf7bcf564",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +617,621 @@            ids: any;\n            debugId: number;\n            name: any;\n            entryModule: any;\n            files: any[];"
  },
  {
    "id" : "083bebb7-fd71-4e76-a8b7-4522d29893f6",
    "prId" : 25691,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/25691#pullrequestreview-119272282",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5469221-9f6e-44f5-8002-7f1b7d1a5d13",
        "parentId" : null,
        "authorId" : "d5ec65a0-b45b-4db5-8e94-c7f27c42932c",
        "body" : "In the schema, it references `ruleSet-loader` too, but it's redundant, since `ruleSet-use` references `ruleSet-use-item`, and `ruleSet-use-item` references `ruleSet-loader`.",
        "createdAt" : "2018-05-10T22:44:55Z",
        "updatedAt" : "2018-05-10T22:44:56Z",
        "lastEditedBy" : "d5ec65a0-b45b-4db5-8e94-c7f27c42932c",
        "tags" : [
        ]
      }
    ],
    "commit" : "375495a2e41a1d20bd5ac3af1cee698fccf756bd",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +424,428 @@         * Shortcut for use.loader\n         */\n        loader?: RuleSetUse;\n        /**\n         * Shortcut for use.loader"
  },
  {
    "id" : "f381e015-e638-4660-84ea-bfb4b4f3d994",
    "prId" : 25691,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/25691#pullrequestreview-119272524",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffc2e752-ccf0-4955-91dc-42968023102d",
        "parentId" : null,
        "authorId" : "d5ec65a0-b45b-4db5-8e94-c7f27c42932c",
        "body" : "Modified this because I've noticed the unused `CommonArrayOfStringOrStringArrayValues`.",
        "createdAt" : "2018-05-10T22:46:15Z",
        "updatedAt" : "2018-05-10T22:46:16Z",
        "lastEditedBy" : "d5ec65a0-b45b-4db5-8e94-c7f27c42932c",
        "tags" : [
        ]
      }
    ],
    "commit" : "375495a2e41a1d20bd5ac3af1cee698fccf756bd",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +265,269 @@         * @see alias\n         */\n        aliasFields?: string[] | string[][];\n\n        /**"
  },
  {
    "id" : "5d50ffce-0fa2-4300-aae0-5f6629f541d6",
    "prId" : 25781,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/25781#pullrequestreview-120058691",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d40b91cf-9699-43a9-ae06-3cb72c0ac574",
        "parentId" : null,
        "authorId" : "37c38de8-c89a-4152-a31f-98dac352ead6",
        "body" : "I wasn't sure whether or not to add extra documentation here, since this looks to be straight from the webpack config schema",
        "createdAt" : "2018-05-15T01:04:38Z",
        "updatedAt" : "2018-05-15T21:44:50Z",
        "lastEditedBy" : "37c38de8-c89a-4152-a31f-98dac352ead6",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1c69f49136c0b172e85babee8fff3b6a60b58f4",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +580,584 @@        }\n        interface SplitChunksOptions {\n            /** Select chunks for determining shared modules (defaults to \\\"async\\\", \\\"initial\\\" and \\\"all\\\" requires adding these chunks to the HTML) */\n            chunks?: \"initial\" | \"async\" | \"all\" | ((chunk: compilation.Chunk) => boolean);\n            /** Minimal size for the created chunk */"
  },
  {
    "id" : "d92b3041-bb38-42a1-a98c-5f1f9a1e7122",
    "prId" : 26630,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/26630#pullrequestreview-129653835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "091b7a91-d013-4c76-973e-9044af6becd2",
        "parentId" : null,
        "authorId" : "01e461e7-0879-4481-94a6-957ca6878bad",
        "body" : "why this and `process` can't be `\"empty\"`?",
        "createdAt" : "2018-06-18T16:57:22Z",
        "updatedAt" : "2018-06-18T16:57:22Z",
        "lastEditedBy" : "01e461e7-0879-4481-94a6-957ca6878bad",
        "tags" : [
        ]
      },
      {
        "id" : "1d65ad02-07f0-4ecd-b0bc-92c98f493039",
        "parentId" : "091b7a91-d013-4c76-973e-9044af6becd2",
        "authorId" : "23399e4f-b9eb-405a-9aa5-267bed84ef65",
        "body" : "https://webpack.js.org/configuration/node/#node-console\r\nhttps://webpack.js.org/configuration/node/#node-process\r\n🤔 ",
        "createdAt" : "2018-06-18T17:05:09Z",
        "updatedAt" : "2018-06-18T17:05:09Z",
        "lastEditedBy" : "23399e4f-b9eb-405a-9aa5-267bed84ef65",
        "tags" : [
        ]
      },
      {
        "id" : "0d3de598-aa36-4cab-93d5-d72a770c2b84",
        "parentId" : "091b7a91-d013-4c76-973e-9044af6becd2",
        "authorId" : "fb0119c1-1aea-4aab-ab12-953740127cfb",
        "body" : "see https://webpack.js.org/configuration/node/#node-process\r\n\r\ntry it\r\n```\r\nnode: {\r\n        process: 'empty'\r\n}\r\n\r\nnpm run build\r\n```\r\n\r\nOutput result\r\n```\r\n> webpack --config webpack.development.js\r\n\r\nInvalid configuration object. Webpack has been initialised using a configuration object that does not match the API schema.\r\n - configuration.node should be one of these:\r\n   false | object { Buffer?, __dirname?, __filename?, console?, global?, process?, … }\r\n   -> Include polyfills or mocks for various node stuff.\r\n   Details:\r\n    * configuration.node should be false\r\n    * configuration.node.process should be one of these:\r\n      false | true | \"mock\"\r\n      -> Include a polyfill for the 'process' variable\r\n```",
        "createdAt" : "2018-06-18T17:06:07Z",
        "updatedAt" : "2018-06-18T17:06:08Z",
        "lastEditedBy" : "fb0119c1-1aea-4aab-ab12-953740127cfb",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8a873d4abddf141f31f9be39932b7aeaa32a049",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +351,355 @@\n    interface Node {\n        console?: boolean | 'mock';\n        process?: boolean | 'mock';\n        global?: boolean;"
  },
  {
    "id" : "450ac70e-fe74-4e3e-85a9-c62ede213cb9",
    "prId" : 27747,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/27747#pullrequestreview-142591489",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de274c67-5160-4deb-ac37-490e3cfc6483",
        "parentId" : null,
        "authorId" : "068804f8-bc88-4ea5-be58-5e946cb4ca93",
        "body" : "I don't think this is totally correct, unless I am missing something.\r\n\r\n`SortableSet` is a interface, but the a set is a `Class`, thus if you try to;\r\n\r\n```ts\r\nconst x = new SortableSet([]);\r\n```\r\n\r\nYou will end up with an error `SortableSet' only refers to a type, but is being used as a value here.`",
        "createdAt" : "2018-08-01T05:27:46Z",
        "updatedAt" : "2018-08-01T05:27:46Z",
        "lastEditedBy" : "068804f8-bc88-4ea5-be58-5e946cb4ca93",
        "tags" : [
        ]
      },
      {
        "id" : "1b4b2487-f933-4c0d-993f-44b945669d0b",
        "parentId" : "de274c67-5160-4deb-ac37-490e3cfc6483",
        "authorId" : "54ddae1f-9948-4700-8899-bc99bb1974ab",
        "body" : "I agree with the class vs interface. That said, I guess that brings me to a question around how to treat private APIs in type defs. Webpack doesn't export that util at their top-level (see https://github.com/webpack/webpack/blob/HEAD/lib/webpack.js#L165); in other words, I'm not sure if users are intended to do `new SortableSet([])` at all. That's why I made it an interface vs a class. To import `SortableSet` you'd have to do something like `import {} from 'webpack/lib/util/SortableSet`.\r\n\r\nHappy to change to a class—it's a quick change. However, I'm unclear on how to handle due to the above. I could even put `SortableSet` in a `util` namespace, but ultimately you wouldn't actually be importing the class in Javascript. Let me know your thoughts.",
        "createdAt" : "2018-08-01T21:11:19Z",
        "updatedAt" : "2018-08-01T21:11:19Z",
        "lastEditedBy" : "54ddae1f-9948-4700-8899-bc99bb1974ab",
        "tags" : [
        ]
      },
      {
        "id" : "84f95357-a331-4d10-8950-0d49ccf28e4f",
        "parentId" : "de274c67-5160-4deb-ac37-490e3cfc6483",
        "authorId" : "068804f8-bc88-4ea5-be58-5e946cb4ca93",
        "body" : "This cannot be a private since it’s being used by an exported member.\r\n\r\nIf the sortableset is not meant to be used as a class, I don’t have any problem with the current implementation using an interface.\r\n\r\nThat said, I am gonna loop in @Hotell, for another option.",
        "createdAt" : "2018-08-01T21:18:57Z",
        "updatedAt" : "2018-08-01T21:18:58Z",
        "lastEditedBy" : "068804f8-bc88-4ea5-be58-5e946cb4ca93",
        "tags" : [
        ]
      },
      {
        "id" : "574611d5-3d7c-45f4-852a-d5cf5928084b",
        "parentId" : "de274c67-5160-4deb-ac37-490e3cfc6483",
        "authorId" : "630484b0-c615-41eb-923a-608cb7b6a956",
        "body" : "yo folks! sorry to be kinda late to the party. If `SortableSet` is a runtime entity ( which is -> class ) it should be typed as runtime executable , in our case a es2015 class. Also it should be moved under proper path like within implementation, so consumer wont be able to do `const {SortableSet} = require('webpack')`",
        "createdAt" : "2018-08-01T22:44:32Z",
        "updatedAt" : "2018-08-01T22:44:32Z",
        "lastEditedBy" : "630484b0-c615-41eb-923a-608cb7b6a956",
        "tags" : [
        ]
      }
    ],
    "commit" : "89079a4f742a556d4050929d9210d1e2241cc9c6",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +1044,1048 @@    }\n\n    interface SortableSet<T> extends Set<T> {\n        sortWith(sortFn: (a: T, b: T) => number): void;\n        sort(): void;"
  },
  {
    "id" : "f248a682-7dc7-4000-99a2-8e84b668f8d8",
    "prId" : 37434,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/37434#pullrequestreview-275700615",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "faee23b7-bfc1-4c08-9825-c3a2119ae443",
        "parentId" : null,
        "authorId" : "ae1cf0f9-564e-40ad-9cdf-73f717fd1d58",
        "body" : "Argument should be an array of those types.",
        "createdAt" : "2019-08-15T22:40:46Z",
        "updatedAt" : "2019-08-18T14:08:11Z",
        "lastEditedBy" : "ae1cf0f9-564e-40ad-9cdf-73f717fd1d58",
        "tags" : [
        ]
      }
    ],
    "commit" : "db54425e890e870c8b83180ee3653698814e95cc",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +1995,1999 @@\n        function getModulesArrayBounds(modules: ReadonlyArray<{\n            id: string | number;\n        }>): [number, number] | false;\n"
  },
  {
    "id" : "132a4ad3-118a-40c6-aa78-fad1388feac2",
    "prId" : 39390,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/39390#pullrequestreview-309290011",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62c56aa8-2169-4507-b5c9-aa97fc685911",
        "parentId" : null,
        "authorId" : "01e461e7-0879-4481-94a6-957ca6878bad",
        "body" : "Can you declare this somewhere and use it her and in line 49? Naming is up to you but I would name it `ConfigurationFunction`",
        "createdAt" : "2019-10-28T19:22:20Z",
        "updatedAt" : "2019-10-28T19:22:23Z",
        "lastEditedBy" : "01e461e7-0879-4481-94a6-957ca6878bad",
        "tags" : [
        ]
      },
      {
        "id" : "4c1ac317-bfca-46d7-8e81-383d310fa522",
        "parentId" : "62c56aa8-2169-4507-b5c9-aa97fc685911",
        "authorId" : "46addc23-b923-472b-8fe3-692011889104",
        "body" : "I did before and the linter broke alerting that it can be a union type, the fix was directly pointed by the linter itself",
        "createdAt" : "2019-10-29T13:50:28Z",
        "updatedAt" : "2019-10-29T13:50:28Z",
        "lastEditedBy" : "46addc23-b923-472b-8fe3-692011889104",
        "tags" : [
        ]
      },
      {
        "id" : "0f4cfd5a-a159-4708-bf40-92e3d7767640",
        "parentId" : "62c56aa8-2169-4507-b5c9-aa97fc685911",
        "authorId" : "46addc23-b923-472b-8fe3-692011889104",
        "body" : "Should I declare the whole options as a type? 🤔 ",
        "createdAt" : "2019-10-29T13:51:12Z",
        "updatedAt" : "2019-10-29T13:51:13Z",
        "lastEditedBy" : "46addc23-b923-472b-8fe3-692011889104",
        "tags" : [
        ]
      },
      {
        "id" : "57f377a9-ee91-463a-a5e0-544f729b7c01",
        "parentId" : "62c56aa8-2169-4507-b5c9-aa97fc685911",
        "authorId" : "52d9e311-ec9f-46c5-9283-2c3fa48af7a3",
        "body" : "@rubenspgcavalcante this is in express merge but I haven't merged it because it sounds like you're still considering a change here. Please let me know if that isn't the case. Thanks!",
        "createdAt" : "2019-10-30T14:38:46Z",
        "updatedAt" : "2019-10-30T14:38:46Z",
        "lastEditedBy" : "52d9e311-ec9f-46c5-9283-2c3fa48af7a3",
        "tags" : [
        ]
      },
      {
        "id" : "cc136ed1-85da-47c3-a07e-f6aa00b969b5",
        "parentId" : "62c56aa8-2169-4507-b5c9-aa97fc685911",
        "authorId" : "46addc23-b923-472b-8fe3-692011889104",
        "body" : "For me looks ok @jessetrinity, you can merge :)\r\nthanks in advance!",
        "createdAt" : "2019-10-30T15:19:11Z",
        "updatedAt" : "2019-10-30T15:19:12Z",
        "lastEditedBy" : "46addc23-b923-472b-8fe3-692011889104",
        "tags" : [
        ]
      }
    ],
    "commit" : "e2f5e8962f9442c823b5161c0b051e6cfadc8e06",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +58,62 @@    options:\n        | webpack.Configuration[]\n        | ((\n              env: string | Record<string, boolean | number | string>,\n              args: Record<string, string>,"
  },
  {
    "id" : "233039ef-1a94-422a-922c-642262e954bd",
    "prId" : 40078,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/40078#pullrequestreview-314539143",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7550c43e-483c-4353-bd39-c4cc29b824fb",
        "parentId" : null,
        "authorId" : "1c97d78a-7e3c-4aa3-8da1-f2c78201e9d6",
        "body" : "@rubenspgcavalcante, what do you think about extending `args` with known values? I don't know if there are any other ones, but the following would fit my needs:\r\n\r\n```ts\r\nargs: Record<string, string> & { mode?: \"development\" | \"production\" | \"none\" },\r\n```\r\n\r\n(Obviously exported as its type to be reused for `MultiConfigurationFactory` as well)\r\n\r\nWe can see at https://webpack.js.org/configuration/mode/ that `args.mode` is expected to be there.\r\n\r\n<img width=\"829\" alt=\"Screen Shot 2019-11-04 at 1 49 31 PM\" src=\"https://user-images.githubusercontent.com/113730/68148406-f2837200-ff09-11e9-9334-fd8c401f7893.png\">\r\n",
        "createdAt" : "2019-11-04T18:48:54Z",
        "updatedAt" : "2019-11-04T18:49:50Z",
        "lastEditedBy" : "1c97d78a-7e3c-4aa3-8da1-f2c78201e9d6",
        "tags" : [
        ]
      },
      {
        "id" : "5735528b-2c6b-4de7-8204-7b60d5553933",
        "parentId" : "7550c43e-483c-4353-bd39-c4cc29b824fb",
        "authorId" : "1c97d78a-7e3c-4aa3-8da1-f2c78201e9d6",
        "body" : "FYI, I opened https://github.com/DefinitelyTyped/DefinitelyTyped/pull/40262 with this. 🤞 ",
        "createdAt" : "2019-11-09T03:50:05Z",
        "updatedAt" : "2019-11-09T03:50:06Z",
        "lastEditedBy" : "1c97d78a-7e3c-4aa3-8da1-f2c78201e9d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "f62009ec6808378d19f0074126081bbc7170ec52",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +139,143 @@    type ConfigurationFactory = ((\n        env: string | Record<string, boolean | number | string>,\n        args: Record<string, string>,\n    ) => Configuration | Promise<Configuration>);\n"
  },
  {
    "id" : "f44f9240-84ac-4080-afe4-5d15a000b420",
    "prId" : 40106,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/40106#pullrequestreview-317978014",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0c0a1a1-e19b-40e9-806d-7d0a9c8c8195",
        "parentId" : null,
        "authorId" : "ae1cf0f9-564e-40ad-9cdf-73f717fd1d58",
        "body" : "I know this PR isn't updating the types for a newer version of webpack, but I think it would still be a good idea to bump up the version at the top of this file to 4.41. This PR has a few breaking changes and if someone does get broken they can go back to the 4.39 type definitions.",
        "createdAt" : "2019-11-15T20:53:50Z",
        "updatedAt" : "2019-11-16T16:23:45Z",
        "lastEditedBy" : "ae1cf0f9-564e-40ad-9cdf-73f717fd1d58",
        "tags" : [
        ]
      },
      {
        "id" : "a19ef138-45a6-4794-a47b-663062af82c9",
        "parentId" : "e0c0a1a1-e19b-40e9-806d-7d0a9c8c8195",
        "authorId" : "03239b34-5cef-4c2f-b263-3ce00d4e7194",
        "body" : "Thanks for the feedback 👍\r\nAgree with that and increased the version to `4.41` accordingly.\r\n\r\nI've also checked if there were new changes to introduced in this release to the affected types but nothing changed there. ",
        "createdAt" : "2019-11-16T16:29:10Z",
        "updatedAt" : "2019-11-16T16:29:10Z",
        "lastEditedBy" : "03239b34-5cef-4c2f-b263-3ce00d4e7194",
        "tags" : [
        ]
      }
    ],
    "commit" : "1dd7ea1cedb54dd966b7fb7d68dff2e21a50243b",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +16,20 @@//                 Ryan Waskiewicz <https://github.com/rwaskiewicz>\n//                 Kyle Uehlein <https://github.com/kuehlein>\n//                 Grgur Grisogono <https://github.com/grgur>\n//                 Rubens Pinheiro Gonçalves Cavalcante <https://github.com/rubenspgcavalcante>\n//                 Anders Kaseorg <https://github.com/andersk>"
  }
]