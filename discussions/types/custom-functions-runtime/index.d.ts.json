[
  {
    "id" : "ad2812c0-0f40-47b1-b05b-d04beb049e9a",
    "prId" : 29271,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/29271#pullrequestreview-160954251",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9626956e-ef48-4edf-bb3b-8906cd176291",
        "parentId" : null,
        "authorId" : "fa3a7b8a-a67d-4d0c-b676-6d00e21ac293",
        "body" : "* Specific to Excel Custom Functions.\r\n * Enables you to set key-value pairs, of a function's JSON id to the JavaScript function name.",
        "createdAt" : "2018-10-02T22:54:33Z",
        "updatedAt" : "2018-10-02T23:27:53Z",
        "lastEditedBy" : "fa3a7b8a-a67d-4d0c-b676-6d00e21ac293",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2657a73a41ac4910bff5d2788aea3fe9fd46654",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +13,17 @@ * Specific to Excel Custom Functions. Enables you to set key-value pairs (a function's JSON id : JavaScript name).\n */\ndeclare let CustomFunctionMappings: { [key: string]: Function };\n/**\n * CustomFunctions namespace, used by Excel Custom Functions"
  },
  {
    "id" : "27315196-a672-4917-ace3-b8483ba08c16",
    "prId" : 29271,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/29271#pullrequestreview-160954251",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e3cfa31-c986-4e7e-b7c2-bb1a703d3586",
        "parentId" : null,
        "authorId" : "fa3a7b8a-a67d-4d0c-b676-6d00e21ac293",
        "body" : "(wordsmith) A handler for streaming functions.  The handler is passed automatically as the last parameter to a streaming function, and the function can then call `handler.setResult` to set the cell value, or hook into the `handler.onCanceled` event to be notified when it is no longer needed.",
        "createdAt" : "2018-10-02T22:56:17Z",
        "updatedAt" : "2018-10-02T23:27:53Z",
        "lastEditedBy" : "fa3a7b8a-a67d-4d0c-b676-6d00e21ac293",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2657a73a41ac4910bff5d2788aea3fe9fd46654",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +19,23 @@declare namespace CustomFunctions {\n    /**\n     * StreamingHandler interface\n     */\n    interface StreamingHandler<T> extends CancelableHandler {"
  },
  {
    "id" : "0b4cd35d-1c19-4fd4-82c2-751cf9a37c02",
    "prId" : 32425,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/32425#pullrequestreview-198282010",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e8afab6-5386-437b-afd7-b2ac2ea11152",
        "parentId" : null,
        "authorId" : "fa3a7b8a-a67d-4d0c-b676-6d00e21ac293",
        "body" : "Here and elsewhere -- I'm pretty sure that `@beta` should be at the end, not the beginning.\r\nOr at least, that's what we do with all of the rest of Office.js:  https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/office-js/index.d.ts",
        "createdAt" : "2019-01-23T23:22:52Z",
        "updatedAt" : "2019-01-24T00:18:45Z",
        "lastEditedBy" : "fa3a7b8a-a67d-4d0c-b676-6d00e21ac293",
        "tags" : [
        ]
      },
      {
        "id" : "23569007-f87f-48c9-845b-69827bb08543",
        "parentId" : "3e8afab6-5386-437b-afd7-b2ac2ea11152",
        "authorId" : "93c1a9c2-0bd1-48e7-81d1-69c9202446a7",
        "body" : "Apparently you can put that note wherever in the comments and the publishing system figures out where to put it",
        "createdAt" : "2019-01-30T20:08:03Z",
        "updatedAt" : "2019-01-30T20:08:03Z",
        "lastEditedBy" : "93c1a9c2-0bd1-48e7-81d1-69c9202446a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "1dd9ab2c99253f0938b9223e32bec16e9a52b72c",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@/**\n * @beta\n * CustomFunctions namespace, used by Excel Custom Functions\n */\ndeclare namespace CustomFunctions {"
  },
  {
    "id" : "80f2ea7d-4fb2-439f-b4ae-22b21e68fa0b",
    "prId" : 32425,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/32425#pullrequestreview-198282742",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "084daad0-acc4-418a-bff6-b542f9ce9bdb",
        "parentId" : null,
        "authorId" : "fa3a7b8a-a67d-4d0c-b676-6d00e21ac293",
        "body" : "Do you have a work item (filed internally or elsehow) to eventually remove these -- say, in a few months, after Script Lab and etc. have all been updated?",
        "createdAt" : "2019-01-24T00:18:40Z",
        "updatedAt" : "2019-01-24T00:18:45Z",
        "lastEditedBy" : "fa3a7b8a-a67d-4d0c-b676-6d00e21ac293",
        "tags" : [
        ]
      },
      {
        "id" : "f6ab2cac-e3b5-4da5-b92b-f4053aec81e2",
        "parentId" : "084daad0-acc4-418a-bff6-b542f9ce9bdb",
        "authorId" : "93c1a9c2-0bd1-48e7-81d1-69c9202446a7",
        "body" : "I can file one, thank you for reminding me to do that. Just so I'm clear, what are the various things that need to be updated? I would think: this doc, our reference documentation (which gets pulled from this file anyway), any mention in our metadata conceptual docs - but am I missing anything in terms of Script Lab or other places? ",
        "createdAt" : "2019-01-30T20:09:48Z",
        "updatedAt" : "2019-01-30T20:09:49Z",
        "lastEditedBy" : "93c1a9c2-0bd1-48e7-81d1-69c9202446a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "1dd9ab2c99253f0938b9223e32bec16e9a52b72c",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +91,95 @@     * @deprecated Use `StreamingInvocation<ResultType>` instead.\n     */\n    interface StreamingHandler<ResultType> extends StreamingInvocation<ResultType> {\n    }\n}"
  }
]