[
  {
    "id" : "db69386d-057c-44a3-890f-2979186986ff",
    "prId" : 34618,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/34618#pullrequestreview-226592075",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b58cf02a-8077-4773-a594-d48eab4536b0",
        "parentId" : null,
        "authorId" : "06800eae-b6f7-480e-ba1b-c14d290c8120",
        "body" : "Does this even work if there is no file on `'/path/to/input'`?",
        "createdAt" : "2019-04-15T10:45:36Z",
        "updatedAt" : "2019-04-15T17:16:40Z",
        "lastEditedBy" : "06800eae-b6f7-480e-ba1b-c14d290c8120",
        "tags" : [
        ]
      },
      {
        "id" : "997a0b98-4bef-44b8-b9f2-9da86c10147c",
        "parentId" : "b58cf02a-8077-4773-a594-d48eab4536b0",
        "authorId" : "e76a8a4f-4917-4b72-bd19-e8d46aa3d64b",
        "body" : "[Readme](https://github.com/DefinitelyTyped/DefinitelyTyped#create-a-new-package) says:\r\n> This code does **not** run, but it is type-checked.\r\n\r\nSo should not be a problem here",
        "createdAt" : "2019-04-15T11:37:03Z",
        "updatedAt" : "2019-04-15T17:16:40Z",
        "lastEditedBy" : "e76a8a4f-4917-4b72-bd19-e8d46aa3d64b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c78162c7ed3256d81b9196afe8ae61a15e71097c",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +88,92 @@asyncParser.input.push(null); // Sending `null` to a stream signal that no more data is expected and ends it.\n\nconst input = createReadStream('/path/to/input', { encoding: 'utf8' });\nconst output = createWriteStream('path/to/output', { encoding: 'utf8' });\n"
  },
  {
    "id" : "ab16a590-e044-420c-bee5-081f88e31594",
    "prId" : 34618,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/34618#pullrequestreview-226571644",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "106c9efe-0dd6-44e1-8571-9d3db6ccda43",
        "parentId" : null,
        "authorId" : "06800eae-b6f7-480e-ba1b-c14d290c8120",
        "body" : "There should also be a test where data is an object and where data is a readable stream",
        "createdAt" : "2019-04-15T10:46:12Z",
        "updatedAt" : "2019-04-15T17:16:40Z",
        "lastEditedBy" : "06800eae-b6f7-480e-ba1b-c14d290c8120",
        "tags" : [
        ]
      }
    ],
    "commit" : "c78162c7ed3256d81b9196afe8ae61a15e71097c",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +98,102 @@\n// Test convenience method \"parseAsync\" with object input\nparseAsync(data, opts)\n    .then(csv => console.log(csv))\n    .catch(err => console.error(err));"
  }
]