[
  {
    "id" : "574ffe5c-136e-409c-a3b9-9ddf392df5d5",
    "prId" : 21146,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/21146#pullrequestreview-80372365",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f7f1e76-d51b-4dfb-8bd1-e091f1c9d406",
        "parentId" : null,
        "authorId" : "ca24dbcf-4d3f-43c9-b883-2659edddde43",
        "body" : "I'm of the opinion that the actual type of `React.Fragment` should be opaque to clients. The fact that it is a `symbol | number` is an implementation detail. As @tkrotoff suggested I would feel better about changing references to an alias like `type FragmentType = symbol & 0xeacb;`",
        "createdAt" : "2017-11-30T22:39:49Z",
        "updatedAt" : "2017-11-30T22:39:49Z",
        "lastEditedBy" : "ca24dbcf-4d3f-43c9-b883-2659edddde43",
        "tags" : [
        ]
      },
      {
        "id" : "074d3d99-81ee-4b28-990a-601c2e858b8a",
        "parentId" : "1f7f1e76-d51b-4dfb-8bd1-e091f1c9d406",
        "authorId" : "f6d540bd-fdc2-4205-b709-9c9832e9bd9d",
        "body" : "Unfortunately, our type aliases aren't opaque. So creating something like `type FragmentType = symbol | 0xeacb;` wouldn't be visible by clients anyway.",
        "createdAt" : "2017-11-30T23:34:17Z",
        "updatedAt" : "2017-11-30T23:34:17Z",
        "lastEditedBy" : "f6d540bd-fdc2-4205-b709-9c9832e9bd9d",
        "tags" : [
        ]
      },
      {
        "id" : "477c2b27-1303-4331-9e75-369b631bb1e4",
        "parentId" : "1f7f1e76-d51b-4dfb-8bd1-e091f1c9d406",
        "authorId" : "ca24dbcf-4d3f-43c9-b883-2659edddde43",
        "body" : "All I'm saying is this test shouldn't be testing that `React.Fragment` is a `symbol | number`, because that's liable to change. Something like\r\n\r\n```ts\r\nconst fragmentType: React.FragmentType = React.Fragment\r\n```\r\n\r\nwould be appropriate.",
        "createdAt" : "2017-12-01T00:07:23Z",
        "updatedAt" : "2017-12-01T00:07:23Z",
        "lastEditedBy" : "ca24dbcf-4d3f-43c9-b883-2659edddde43",
        "tags" : [
        ]
      },
      {
        "id" : "dbe04d23-3be0-43de-b592-936ba7d393c1",
        "parentId" : "1f7f1e76-d51b-4dfb-8bd1-e091f1c9d406",
        "authorId" : "ca24dbcf-4d3f-43c9-b883-2659edddde43",
        "body" : "A type like `symbol & 0xeacb` prevents users from making a mistake by passing a `number` into `createElement`.",
        "createdAt" : "2017-12-01T00:08:59Z",
        "updatedAt" : "2017-12-01T00:08:59Z",
        "lastEditedBy" : "ca24dbcf-4d3f-43c9-b883-2659edddde43",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d07771b6c5ed5c3b75c7ee3e0d939557927403d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +230,234 @@let domNode: Element = ReactDOM.findDOMNode(component);\ndomNode = ReactDOM.findDOMNode(domNode);\nconst fragmentType: symbol | number = React.Fragment;\n\n//"
  },
  {
    "id" : "9ad65193-408f-4817-be71-a720eaeacc35",
    "prId" : 24624,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/24624#pullrequestreview-108796918",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc3c9243-6ddd-46bc-85fd-64710b758f31",
        "parentId" : null,
        "authorId" : "a161efa3-ad0a-46da-bab2-b1f9e4f6d5c7",
        "body" : "This type annotation can just be removed entirely:\r\n\r\n```ts\r\nconst props = {\r\n  // ...\r\n```",
        "createdAt" : "2018-04-03T02:12:20Z",
        "updatedAt" : "2018-04-03T02:16:28Z",
        "lastEditedBy" : "a161efa3-ad0a-46da-bab2-b1f9e4f6d5c7",
        "tags" : [
        ]
      }
    ],
    "commit" : "4628e925e15cbd4922cd42f4dd657cf23531b3f0",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +39,43 @@\n// use any for ClassAttribute type sine we're using string refs\nconst props: Props & React.ClassAttributes<any> = {\n    key: 42,\n    ref: \"myComponent42\","
  }
]