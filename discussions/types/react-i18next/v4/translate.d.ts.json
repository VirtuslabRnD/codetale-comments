[
  {
    "id" : "53622e62-3dfc-4e9a-956b-770115f20108",
    "prId" : 28445,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/28445#pullrequestreview-150798225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b64b0196-9624-4369-8810-e2152440d82c",
        "parentId" : null,
        "authorId" : "73c458ae-0c88-4a48-a74d-b47cb2b49c23",
        "body" : "I know this is backported from the main files, but as this is TS 2.8 we should be able to just written this as `Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>`.",
        "createdAt" : "2018-08-30T00:03:20Z",
        "updatedAt" : "2018-08-30T00:03:50Z",
        "lastEditedBy" : "73c458ae-0c88-4a48-a74d-b47cb2b49c23",
        "tags" : [
        ]
      }
    ],
    "commit" : "8de0e983663143df793f01cc80b6330946059fef",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +14,18 @@\n// Diff / Omit taken from https://github.com/Microsoft/TypeScript/issues/12215#issuecomment-311923766\nexport type Omit<T, K extends keyof T> = Pick<T, ({ [P in keyof T]: P } & { [P in K]: never } & { [x: string]: never, [x: number]: never })[keyof T]>;\n\n// Injects props and removes them from the prop requirements."
  }
]