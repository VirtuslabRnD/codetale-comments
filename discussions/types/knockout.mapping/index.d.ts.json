[
  {
    "id" : "e3ee6139-45dd-4ba6-9f44-bb78c301de8c",
    "prId" : 35343,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/35343#pullrequestreview-237631879",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76ade0c4-94c1-4b1b-9c53-eb5f37a2f688",
        "parentId" : null,
        "authorId" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "body" : "Agree. It must be possible to use conditional types here. Do you want to try them?",
        "createdAt" : "2019-05-15T06:40:55Z",
        "updatedAt" : "2019-05-15T06:43:13Z",
        "lastEditedBy" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "tags" : [
        ]
      }
    ],
    "commit" : "98f643607941f171aa50b69e8cb5fdee8ae626db",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +16,20 @@\ndeclare global {\n    // the idea behind this is good, but doesn't work as intended. This will make object properties T | Observable<T>, \n    //and you will have to put the correct Type in each property to use them, what defeats the purpose. Besides, this gives  \n    //RangeError: Maximum call stack size exceeded in TSC when used in all the mapping signatures. Maybe this can be used with TS 2.8 and conditional typing"
  }
]