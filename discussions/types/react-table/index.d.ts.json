[
  {
    "id" : "e1cda463-a60d-43d4-abec-9a34c130ac33",
    "prId" : 23775,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/23775#pullrequestreview-102059319",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd7b5a4d-863c-4347-a5c2-7b7d226f76be",
        "parentId" : null,
        "authorId" : "1985e37c-2f23-4a96-8385-ab8d42e6573b",
        "body" : "I believe the documenation states this is of type object.",
        "createdAt" : "2018-03-07T02:34:56Z",
        "updatedAt" : "2018-03-07T02:36:15Z",
        "lastEditedBy" : "1985e37c-2f23-4a96-8385-ab8d42e6573b",
        "tags" : [
        ]
      },
      {
        "id" : "beb9f9c1-66cb-47f4-9e60-af39383f50f7",
        "parentId" : "dd7b5a4d-863c-4347-a5c2-7b7d226f76be",
        "authorId" : "655a0b06-2db2-4089-be6e-451197a65913",
        "body" : "This PR is not addressing the underlying type.",
        "createdAt" : "2018-03-07T03:12:58Z",
        "updatedAt" : "2018-03-07T03:12:58Z",
        "lastEditedBy" : "655a0b06-2db2-4089-be6e-451197a65913",
        "tags" : [
        ]
      },
      {
        "id" : "2041f208-5ddb-409d-9489-8a6da2b6e11b",
        "parentId" : "dd7b5a4d-863c-4347-a5c2-7b7d226f76be",
        "authorId" : "1985e37c-2f23-4a96-8385-ab8d42e6573b",
        "body" : "Sounds good to me, you can ignore this comment.",
        "createdAt" : "2018-03-07T19:11:35Z",
        "updatedAt" : "2018-03-07T19:11:35Z",
        "lastEditedBy" : "1985e37c-2f23-4a96-8385-ab8d42e6573b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7589ddfcbc30151bf9990fa3babf57dd6d1a5381",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +603,607 @@export interface RowInfo {\n    /** Materialized row of data */\n    row: any;\n\n    /** Original row from your data */"
  },
  {
    "id" : "cf582159-f657-418f-9a84-6eefe91b1d90",
    "prId" : 30459,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/30459#pullrequestreview-173864460",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2a9cdd4-8856-473a-9ddb-d60b41976d61",
        "parentId" : null,
        "authorId" : "ca7d534f-963f-47a2-8c0a-d942cee08b59",
        "body" : "Not sure why this change happened? Maybe vscode or dtslint did something automatic and I didn't notice?",
        "createdAt" : "2018-11-12T11:49:06Z",
        "updatedAt" : "2018-11-13T16:58:04Z",
        "lastEditedBy" : "ca7d534f-963f-47a2-8c0a-d942cee08b59",
        "tags" : [
        ]
      }
    ],
    "commit" : "158c1cca1e93865e932abc8e46003ad7d29aabb4",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +1,5 @@// Type definitions for react-table 6.7\n// Project: https://github.com/react-tools/react-table\n// Definitions by: Roy Xue <https://github.com/royxue>, Pavel Sakalo <https://github.com/psakalo>, Krzysztof PorÄ™bski <https://github.com/Havret>, Andy S <https://github.com/andys8>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.8"
  },
  {
    "id" : "c4140de3-ebf6-4a10-90b7-17aa20d0fbcd",
    "prId" : 30459,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/30459#pullrequestreview-174295466",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e10e850f-9f20-4507-8914-db346548c11b",
        "parentId" : null,
        "authorId" : "5914cfd5-b432-413e-bc3d-783d4200a849",
        "body" : "Add comments form documentation: https://github.com/DefinitelyTyped/DefinitelyTyped/pull/30459#issuecomment-438218366",
        "createdAt" : "2018-11-13T10:40:22Z",
        "updatedAt" : "2018-11-13T16:58:04Z",
        "lastEditedBy" : "5914cfd5-b432-413e-bc3d-783d4200a849",
        "tags" : [
        ]
      }
    ],
    "commit" : "158c1cca1e93865e932abc8e46003ad7d29aabb4",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +699,703 @@    /* resolved styles for this cell */\n    styles: object;\n}\n\nexport interface FinalState<D = any> extends TableProps<D> {"
  },
  {
    "id" : "f501cae5-daeb-4ae6-815b-a7a1913ef402",
    "prId" : 35668,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/35668#pullrequestreview-241012518",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9df4878a-77ca-462a-b963-5524a5f8e7b3",
        "parentId" : null,
        "authorId" : "d768ac6c-37ae-4249-b1d3-c255170df69c",
        "body" : "Adding a new generic parameter without a default value is also a breaking change :slightly_frowning_face: ",
        "createdAt" : "2019-05-23T06:42:29Z",
        "updatedAt" : "2019-05-28T17:39:41Z",
        "lastEditedBy" : "d768ac6c-37ae-4249-b1d3-c255170df69c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a023d676f934df5d88d95ee29320859a2f24f5f3",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +16,20 @@export type Accessor<D> = keyof D | Array<(keyof D)> | AccessorFunction<D>;\nexport type Aggregator = (values: any, rows: any) => any;\nexport type TableCellRenderer<D> = ((cellInfo: CellInfo<D>, column: any) => React.ReactNode) | React.ReactNode;\nexport type FilterRender<D> = (params: { column: Column<D>, filter: any, onChange: ReactTableFunction, key?: string }) => React.ReactElement;\nexport type PivotRenderer<D> = ((cellInfo: CellInfo<D>) => React.ReactNode) | (() => any) | string | React.ReactNode;"
  },
  {
    "id" : "0ee5f068-90b8-4e80-8589-ab36f6834dd2",
    "prId" : 40816,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/40816#pullrequestreview-331352756",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b61b4736-a21e-4462-baa3-dca969503554",
        "parentId" : null,
        "authorId" : "b6111a8e-61db-4a90-b5f4-8e4dcdfc35cd",
        "body" : "To match type of selectedRowIds: `Set<string>`\r\n\r\n```suggestion\r\n    getRowId: (originalRow: D, relativeIndex: number) => string;\r\n```",
        "createdAt" : "2019-12-12T16:20:19Z",
        "updatedAt" : "2019-12-22T03:52:01Z",
        "lastEditedBy" : "b6111a8e-61db-4a90-b5f4-8e4dcdfc35cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "6832ab443f222135a938d1363b93e9728ec7254a",
    "line" : 184,
    "diffHunk" : "@@ -1,1 +113,117 @@    initialRowStateKey: IdType<D>;\n    getSubRows: (originalRow: D, relativeIndex: number) => D[];\n    getRowId: (originalRow: D, relativeIndex: number) => IdType<D>;\n}>;\n"
  },
  {
    "id" : "26d41610-6cf7-4988-a027-5e3d1b5caff2",
    "prId" : 42354,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/42354#pullrequestreview-358558623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ad209ce-353e-4520-9fd6-b988d1181639",
        "parentId" : null,
        "authorId" : "6751866b-1bdd-4ca2-971c-22f53843bb15",
        "body" : "I believe this should still return and `IdType<D>`?",
        "createdAt" : "2020-02-13T19:12:39Z",
        "updatedAt" : "2020-02-13T19:12:39Z",
        "lastEditedBy" : "6751866b-1bdd-4ca2-971c-22f53843bb15",
        "tags" : [
        ]
      },
      {
        "id" : "1a32c55b-1651-46d6-9cc6-4813cdca6f5e",
        "parentId" : "3ad209ce-353e-4520-9fd6-b988d1181639",
        "authorId" : "87436175-4a71-47c3-b771-578e3f5fa099",
        "body" : "No, it returns an arbitrary identifier. The default implementation returns the row number as a string, or a concatenation of row and parent row for grouped records. \r\n\r\nBasically IdType is related to the keys of <D> and so related to the columns.  rowId is a row identifier so is more likely to be related to the value of a row cell.\r\n",
        "createdAt" : "2020-02-13T21:19:52Z",
        "updatedAt" : "2020-02-13T22:07:55Z",
        "lastEditedBy" : "87436175-4a71-47c3-b771-578e3f5fa099",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5bca95e8ecbfcbda806ba995add69d2f98a8c37",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +113,117 @@    initialRowStateKey: IdType<D>;\n    getSubRows: (originalRow: D, relativeIndex: number) => D[];\n    getRowId: (originalRow: D, relativeIndex: number, parent?: Row<D>) => string;\n}>;\n"
  },
  {
    "id" : "74c977c9-3e3c-4e84-8649-59559bb6652f",
    "prId" : 42411,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/42411#pullrequestreview-362347364",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef29176a-4550-4844-9241-cb5a48f196f5",
        "parentId" : null,
        "authorId" : "6751866b-1bdd-4ca2-971c-22f53843bb15",
        "body" : "Should we remove this since this is an unintended usable API?\r\n\r\n> Undocument instance.dispatch. Both plugins and users should be interacting with the table via methods assigned to the instance and other structures on the table. This should both reduce the surface API that React Table needs to expose and also the amount of documentation that is needed to understand how to use the API.",
        "createdAt" : "2020-02-21T00:57:44Z",
        "updatedAt" : "2020-02-21T22:10:05Z",
        "lastEditedBy" : "6751866b-1bdd-4ca2-971c-22f53843bb15",
        "tags" : [
        ]
      },
      {
        "id" : "12529d16-433c-49b0-be6f-a174ed2dcc37",
        "parentId" : "ef29176a-4550-4844-9241-cb5a48f196f5",
        "authorId" : "87436175-4a71-47c3-b771-578e3f5fa099",
        "body" : "I left this here because if you are trying to write hooks it's still there and needed.  It's all well and good not wanting the user to use this from the table instance, but if you are trying to access this from a hook to provide the instance methods, then you still use this.",
        "createdAt" : "2020-02-21T01:22:03Z",
        "updatedAt" : "2020-02-21T22:10:05Z",
        "lastEditedBy" : "87436175-4a71-47c3-b771-578e3f5fa099",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e9e95ff734d35a4c6dbea14bda118c4899bfc37",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +191,195 @@    state: TableState<D>;\n    plugins: Array<PluginHook<D>>;\n    dispatch: TableDispatch;\n    columns: Array<ColumnInstance<D>>;\n    allColumns: Array<ColumnInstance<D>>;"
  },
  {
    "id" : "20fd9027-d2d2-4b1f-b8f0-420d6d9d9a92",
    "prId" : 44951,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/44951#pullrequestreview-416241141",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0d025db-49d2-42a6-9344-90dff06f7d97",
        "parentId" : null,
        "authorId" : "31aa04ab-27ba-43a2-baf4-9c33eafa6fb1",
        "body" : "By default, a reduce function will return a single value, in this case, an Object (see https://github.com/tannerlinsley/react-table/blob/99d81d9a967c0c628706ef79309118378f0ad7ee/src/plugin-hooks/useGroupBy.js#L419). Therefore, this wouldn't be an array, and this change would theoretically break stuff. @ggascoigne Please correct me if I'm reading the code wrong.",
        "createdAt" : "2020-05-21T14:35:25Z",
        "updatedAt" : "2020-05-21T14:40:49Z",
        "lastEditedBy" : "31aa04ab-27ba-43a2-baf4-9c33eafa6fb1",
        "tags" : [
        ]
      },
      {
        "id" : "9cddf0c6-5a09-48ad-946b-6b472c60dff7",
        "parentId" : "a0d025db-49d2-42a6-9344-90dff06f7d97",
        "authorId" : "8a57317c-dea3-41ed-a575-a2be45a5b0a9",
        "body" : "A `Record` is basically an alias for an object though. I'm not suggesting changing the outer container for the value. \r\n\r\n`Record<string, Array<Row<D>>>` is roughly equalivent at runtime to:\r\n\r\n```\r\n{\r\n  \"someId\": [] // list of rows\r\n}\r\n\r\n```",
        "createdAt" : "2020-05-21T15:01:37Z",
        "updatedAt" : "2020-05-21T15:01:38Z",
        "lastEditedBy" : "8a57317c-dea3-41ed-a575-a2be45a5b0a9",
        "tags" : [
        ]
      },
      {
        "id" : "e9cd5205-105e-47a2-8031-01e538e747f0",
        "parentId" : "a0d025db-49d2-42a6-9344-90dff06f7d97",
        "authorId" : "8a57317c-dea3-41ed-a575-a2be45a5b0a9",
        "body" : "The current definion is roughly at runtime:\r\n```\r\n{\r\n  \"someId\" : // some row object\r\n}\r\n```",
        "createdAt" : "2020-05-21T15:02:27Z",
        "updatedAt" : "2020-05-21T15:02:27Z",
        "lastEditedBy" : "8a57317c-dea3-41ed-a575-a2be45a5b0a9",
        "tags" : [
        ]
      },
      {
        "id" : "dcc3f172-37f5-44ef-b9fc-aa29d074c40a",
        "parentId" : "a0d025db-49d2-42a6-9344-90dff06f7d97",
        "authorId" : "8a57317c-dea3-41ed-a575-a2be45a5b0a9",
        "body" : "The current default implementation of this type literatally checks in the function body that all unitialised values within the record are initilaised as an Array and then pushes into that array.",
        "createdAt" : "2020-05-21T15:04:25Z",
        "updatedAt" : "2020-05-21T15:06:17Z",
        "lastEditedBy" : "8a57317c-dea3-41ed-a575-a2be45a5b0a9",
        "tags" : [
        ]
      },
      {
        "id" : "4b0bd77b-8fe9-4136-9775-c6d5af7b0b46",
        "parentId" : "a0d025db-49d2-42a6-9344-90dff06f7d97",
        "authorId" : "31aa04ab-27ba-43a2-baf4-9c33eafa6fb1",
        "body" : "There's the difference: \r\n` // list of rows` or ` // some row object`. I believe the reduce function returns a single row object, not a list of rows. I could certainly be wrong, but I think that's the difference.",
        "createdAt" : "2020-05-21T15:04:28Z",
        "updatedAt" : "2020-05-21T15:04:28Z",
        "lastEditedBy" : "31aa04ab-27ba-43a2-baf4-9c33eafa6fb1",
        "tags" : [
        ]
      },
      {
        "id" : "d9c6945a-eaa0-42ba-87e2-85707d4ace48",
        "parentId" : "a0d025db-49d2-42a6-9344-90dff06f7d97",
        "authorId" : "31aa04ab-27ba-43a2-baf4-9c33eafa6fb1",
        "body" : "Admittedly, I'll have to dig into it further to see the actual execution versus what my preconceived thoughts are.",
        "createdAt" : "2020-05-21T15:05:58Z",
        "updatedAt" : "2020-05-21T15:05:58Z",
        "lastEditedBy" : "31aa04ab-27ba-43a2-baf4-9c33eafa6fb1",
        "tags" : [
        ]
      },
      {
        "id" : "eea90650-7aa4-4d9f-8b7a-2dc4d0b46bff",
        "parentId" : "a0d025db-49d2-42a6-9344-90dff06f7d97",
        "authorId" : "8a57317c-dea3-41ed-a575-a2be45a5b0a9",
        "body" : "Here is an example where I have directly lifted the default implementation:\r\nhttps://jsfiddle.net/ve4qcapr/",
        "createdAt" : "2020-05-21T15:10:17Z",
        "updatedAt" : "2020-05-21T15:10:17Z",
        "lastEditedBy" : "8a57317c-dea3-41ed-a575-a2be45a5b0a9",
        "tags" : [
        ]
      },
      {
        "id" : "5d45ee44-2f54-45f4-9101-c28eae873310",
        "parentId" : "a0d025db-49d2-42a6-9344-90dff06f7d97",
        "authorId" : "31aa04ab-27ba-43a2-baf4-9c33eafa6fb1",
        "body" : "OK, looking through it, I realize where my confusion was. It is returning a single object (which is the Record), which consists of the key (string) and the value (Array) (which you stated).\r\n\r\nI'm guessing there aren't a lot of people using groupBy, or this would have been found sooner. :) Good catch @m-rutter!",
        "createdAt" : "2020-05-21T15:15:23Z",
        "updatedAt" : "2020-05-21T15:15:24Z",
        "lastEditedBy" : "31aa04ab-27ba-43a2-baf4-9c33eafa6fb1",
        "tags" : [
        ]
      },
      {
        "id" : "51f52000-5872-435a-a613-991d33398338",
        "parentId" : "a0d025db-49d2-42a6-9344-90dff06f7d97",
        "authorId" : "8a57317c-dea3-41ed-a575-a2be45a5b0a9",
        "body" : "and here is a typescript playground example to help:\r\nhttps://www.typescriptlang.org/play/?ssl=21&ssc=1&pln=21&pc=20#code/JYOwLgpgTgZghgYwgAgEoHsDuAeAKsgXmQFcQATCGUCMgPmQG8AoZZANzgBtiIBnALjQQE6KGWy8wUUAHMANMjggAnrQDcLZGAAWsgPyDcTAL5MmMUgjDB0IZBXjFOYAOJR0xAA4AhZQDEQPFoACndMATQsIIBtAF0FEW4AWxAASTJBSWkQGQBKQVRhUXEs2QUAQSgoOGVsDBxcWibGTSgIMGIoOzDeADo2smIkOqKxCSky5Erq2vqgppDgzza2BTCFYFzCemZWVgB6feRcAHkAERPBAFlgGW0wZEwlB7B0ZGAkz04IJIhwRWQAGsIMpkLxoMAuMAAF7QZDaaAoXjoTQHI7AKoQGROOBQZCJYgpdhcHi8fFKMHWTicZAAIxQMncXho7xgyBAEBoND0qPxtkkyDavAA0iDCMgAAYAEgYYV6HG4fGiBJS6VixglvOWEDY0SFouUsXF0xqvWAvBNyiWKz1fANsS2emQ2t1+pBRsEcS1Nrdht6nmIvG0oSwuV5bQ6XWdK00xgUDGMYdMTBEIAFPQKWDi4uiDAVpMEDAARMjfgBhdCcIuCACMxmMsTMqfTfCcDyIDjgbbcHh8-hAIfCChL6HLlaLYZT-MrEF6nHQMlCrecuSAA",
        "createdAt" : "2020-05-21T15:17:14Z",
        "updatedAt" : "2020-05-21T15:17:15Z",
        "lastEditedBy" : "8a57317c-dea3-41ed-a575-a2be45a5b0a9",
        "tags" : [
        ]
      },
      {
        "id" : "ae1a035a-1b20-44a4-a47f-4a364cd4aedc",
        "parentId" : "a0d025db-49d2-42a6-9344-90dff06f7d97",
        "authorId" : "8a57317c-dea3-41ed-a575-a2be45a5b0a9",
        "body" : "Yeah, I don't think anyone is using it, or someone would have reported this by now.",
        "createdAt" : "2020-05-21T15:18:51Z",
        "updatedAt" : "2020-05-21T15:18:52Z",
        "lastEditedBy" : "8a57317c-dea3-41ed-a575-a2be45a5b0a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a2fdd62a173e7a068db3026f2cb5d3e4e4ac462",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +865,869 @@    rows: Array<Row<D>>,\n    columnId: IdType<D>,\n): Record<string, Array<Row<D>>>;\n\nexport function makePropGetter(hooks: Hooks, ...meta: any[]): any;"
  }
]