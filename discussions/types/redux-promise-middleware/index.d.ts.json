[
  {
    "id" : "490ee70b-24bb-44dc-818e-792bad5d9d68",
    "prId" : 28857,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/28857#pullrequestreview-157490486",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e16d776-9742-434d-aec4-63ccf68d4992",
        "parentId" : null,
        "authorId" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "body" : "Does redux-promise-middleware make this change to `Dispatch`? Or should this change go into redux' types?",
        "createdAt" : "2018-09-18T17:55:33Z",
        "updatedAt" : "2018-09-18T17:55:49Z",
        "lastEditedBy" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "tags" : [
        ]
      },
      {
        "id" : "9a921921-7310-4bdf-8118-4c79d18f0c62",
        "parentId" : "0e16d776-9742-434d-aec4-63ccf68d4992",
        "authorId" : "0cea7c16-1f15-4c47-bbcf-4e877242e210",
        "body" : "Hello @sandersn,\r\n\r\nFrom my understanding of these libraries, the promise middleware will return [a promise object](https://github.com/pburtchaell/redux-promise-middleware/blob/master/src/index.js#L203) whereas redux will [return the action](https://github.com/reduxjs/redux/blob/master/src/createStore.js#L197) instead. So yes, I believe that this change should be here, as an override of `Dispatch`. I was inspired from what was done in [redux-thunk 2.2.0](https://github.com/reduxjs/redux-thunk/blob/v2.2.0/index.d.ts#L8) (another middleware for Redux, which makes dispatch accept a function as well as an action).\r\n\r\nHowever, I have just noticed that the last version (2.3.0) of redux-thunk has [changed their type definition](https://github.com/reduxjs/redux-thunk/compare/v2.2.0...v2.3.0#diff-b52768974e6bc0faccb7d4b75b162c99), but I am not sure that understand how it works after their changes.",
        "createdAt" : "2018-09-19T02:51:46Z",
        "updatedAt" : "2018-09-19T02:51:46Z",
        "lastEditedBy" : "0cea7c16-1f15-4c47-bbcf-4e877242e210",
        "tags" : [
        ]
      },
      {
        "id" : "04b74a46-78a4-43d5-bd29-7faa5e601383",
        "parentId" : "0e16d776-9742-434d-aec4-63ccf68d4992",
        "authorId" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "body" : "I don’t know anything about redux, but from redux-thunk’s tests, it looks like redux has a new function called applyMiddleware that lets you avoid monkeypatching redux objects. I’m not sure if redux-promise-middleware uses this function yet. ",
        "createdAt" : "2018-09-19T15:41:59Z",
        "updatedAt" : "2018-09-19T15:42:00Z",
        "lastEditedBy" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "tags" : [
        ]
      },
      {
        "id" : "c294949f-cb59-48d8-a20c-984a7a176620",
        "parentId" : "0e16d776-9742-434d-aec4-63ccf68d4992",
        "authorId" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "body" : "If it doesn’t, then your correct change is probably correct.",
        "createdAt" : "2018-09-19T15:42:39Z",
        "updatedAt" : "2018-09-19T15:42:40Z",
        "lastEditedBy" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "tags" : [
        ]
      },
      {
        "id" : "d6daa4b3-9695-4e90-afe9-3eac79a0f13d",
        "parentId" : "0e16d776-9742-434d-aec4-63ccf68d4992",
        "authorId" : "0cea7c16-1f15-4c47-bbcf-4e877242e210",
        "body" : "This is not really about monkeypatching redux objects.\r\nIn the redux world, a middleware is a function that returns a `Dispatch` function. These functions are chained together, so each middleware's `Dispatch` receives the state of the previous one, and pass it to the next, until redux's dispatch is called.\r\nUsually, a middleware will just return the same value as its underlying function.\r\nHowever, redux-promise-middleware is returning a promise object instead, and this PR is trying to reflect this.",
        "createdAt" : "2018-09-20T22:18:56Z",
        "updatedAt" : "2018-09-20T22:18:56Z",
        "lastEditedBy" : "0cea7c16-1f15-4c47-bbcf-4e877242e210",
        "tags" : [
        ]
      },
      {
        "id" : "dee84555-bdd7-4ff3-9f27-eaa1261ac2b1",
        "parentId" : "0e16d776-9742-434d-aec4-63ccf68d4992",
        "authorId" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "body" : "If you're not mutating the state, imitating the new version of redux-thunk is probably the right answer. It looks like `Middleware` has a bunch of type parameters that allow you to specify your custom Dispatch function that way.",
        "createdAt" : "2018-09-20T22:30:29Z",
        "updatedAt" : "2018-09-20T22:30:29Z",
        "lastEditedBy" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e7cc3ff0cb0a17e5b91dc012534adcca8f47c29",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +10,14 @@\ndeclare module \"redux\" {\n  export interface PromiseAction<R> extends Action {\n    payload: Promise<R>;\n  }"
  }
]