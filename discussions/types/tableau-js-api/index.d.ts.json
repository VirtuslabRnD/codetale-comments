[
  {
    "id" : "dd0c0eb4-314c-4b23-b689-b5441b0fc6f5",
    "prId" : 53436,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/53436#pullrequestreview-670839233",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46b371e6-ad05-4fee-8b64-c74edb742b61",
        "parentId" : null,
        "authorId" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "body" : "This is inaccurate since it sounds like this package is for browser-only code, not node modules.\r\nOn the other hand, it's MUCH more convenient and there's no module to get wrong, so I think it's fine.",
        "createdAt" : "2021-05-27T15:09:45Z",
        "updatedAt" : "2021-05-27T15:10:42Z",
        "lastEditedBy" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "tags" : [
        ]
      },
      {
        "id" : "65e4a986-a779-41b5-92b1-b68b87e318b5",
        "parentId" : "46b371e6-ad05-4fee-8b64-c74edb742b61",
        "authorId" : "afabf84f-1e01-4f6e-bd9b-f4c7886484cc",
        "body" : "@sandersn can you give me some detail on how this should be structured? I'm OK to leave it as-is but, since I'm still learning a lot about writing type defs, it would be helpful for me to better understand why this is technically incorrect even if it does work. Thanks!",
        "createdAt" : "2021-05-27T17:02:07Z",
        "updatedAt" : "2021-05-27T17:02:07Z",
        "lastEditedBy" : "afabf84f-1e01-4f6e-bd9b-f4c7886484cc",
        "tags" : [
        ]
      },
      {
        "id" : "ed67f8c4-fe48-4c52-a9a7-7174b01757e7",
        "parentId" : "46b371e6-ad05-4fee-8b64-c74edb742b61",
        "authorId" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "body" : "Basically, instead of `import/export`, you use `namespace` instead. Top-level `import/export` is mostly an ES thing, with a couple of TS-specific additions for CommonJS. `namespace` declares a namespace in the global scope, which how browser code runs. I don't write global/namespace code much, so I can't actually tell you all the namespace syntax without looking it up.\r\n\r\nIn index, instead of imports and exports, you have triple slash references and a namespace:\r\n\r\n```ts\r\n/// <reference path='./viz' />\r\n/// <reference path='./enums' />\r\ndeclare namespace tableau {\r\n  // I think there's a more correct way to re-export things in a namespace, but I can't remember the syntax...\r\n  export type TableauEventCustomView = viz.TableauEventCustomView\r\n  ...\r\n}\r\n```\r\n\r\nAnd then, for example, in viz.d.ts, instead of ES exports you have namespace ones:\r\n\r\n```ts\r\n// more triple-slash references here\r\ndeclare namespace viz {\r\n  export type TableauEventCustomView ....\r\n}\r\n```\r\n\r\nI rarely read and write code like this, so that's why I said it's much easier (for me) to use the ES syntax and then use `export as namespace` to convert it into a browser-compatible namespace.",
        "createdAt" : "2021-05-27T23:04:50Z",
        "updatedAt" : "2021-05-27T23:06:38Z",
        "lastEditedBy" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "tags" : [
        ]
      },
      {
        "id" : "21724e3d-1a72-47fc-b82f-1a3dd61d4888",
        "parentId" : "46b371e6-ad05-4fee-8b64-c74edb742b61",
        "authorId" : "afabf84f-1e01-4f6e-bd9b-f4c7886484cc",
        "body" : "Thanks, very informative! I actually started building this using `namespace` but I ran into some challenges getting things to export properly when I tested it in my own code. Like you, I'm much more comfortable and familiar with the `import/export` syntax so that's what I defaulted to. Greatly appreciate the explanation. Really helps to improve my understanding, conceptually, of how to think about type defs going forward.",
        "createdAt" : "2021-05-28T00:18:19Z",
        "updatedAt" : "2021-05-28T00:18:20Z",
        "lastEditedBy" : "afabf84f-1e01-4f6e-bd9b-f4c7886484cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "7eeedf27f6c3ea663f699f8f6c88871a910df854",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +24,28 @@ */\n\nexport as namespace tableau;\n\nexport * from './enums';"
  }
]