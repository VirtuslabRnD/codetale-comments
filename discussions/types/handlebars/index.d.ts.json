[
  {
    "id" : "3835938b-df92-4b6a-9e0d-601a76d404a9",
    "prId" : 17726,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/17726#pullrequestreview-47762230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4adaf1f3-5ea7-436f-9040-3b270f66e5be",
        "parentId" : null,
        "authorId" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "body" : "At first I thought this had to be `T extends object`, but if the template only uses `{{.}}` it can literally be anything (other than a `symbol`).\r\n\r\nIt could be valid to omit the context too, but I'm not sure that's useful.",
        "createdAt" : "2017-07-04T02:33:49Z",
        "updatedAt" : "2017-07-04T02:50:02Z",
        "lastEditedBy" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "tags" : [
        ]
      }
    ],
    "commit" : "729a3d6985090700675ed46549496d4b5c749d4a",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +98,102 @@\ninterface HandlebarsTemplateDelegate<T = any> {\n    (context: T, options?: RuntimeOptions): string;\n}\n"
  },
  {
    "id" : "02ceeec5-9af9-4157-bfd4-8a54da160c80",
    "prId" : 23215,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/23215#pullrequestreview-93785199",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7af9b15b-ecc6-47b6-a7eb-8103d388c0c4",
        "parentId" : null,
        "authorId" : "e30eb346-917e-4cfa-b6d7-7688bc735d2e",
        "body" : "Whats the use of declaring type parameter T if you arent using it anywhere in the definitions..  ?",
        "createdAt" : "2018-01-31T20:09:23Z",
        "updatedAt" : "2018-04-04T18:36:06Z",
        "lastEditedBy" : "e30eb346-917e-4cfa-b6d7-7688bc735d2e",
        "tags" : [
        ]
      },
      {
        "id" : "68e018b0-dd52-4aed-8a5c-8a88ad8db9bc",
        "parentId" : "7af9b15b-ecc6-47b6-a7eb-8103d388c0c4",
        "authorId" : "7d0be140-1d2c-49e8-9706-1bc99845622e",
        "body" : "@sheetalkamat \r\nwell, honestly I don't see much sense in type argument here, but it was there before so I didn't want to break possible usages of it.\r\n\r\nBut strictly speaking T does being used in the definition, not sure why you're say it's not used - with the given TemplateDelegate<T>\r\n```\r\n    export interface TemplateDelegate<T = any> {\r\n        (context: T, options?: RuntimeOptions): string;\r\n    }\r\n```\r\nwe can get a typed template:\r\n```\r\nlet tmpl = template<MyType>(source);\r\n// now tmpl  expects only MyType, so it's ok:\r\ntmpl(new MyType());\r\n// it's an error:\r\ntmpl({});\r\n```\r\n",
        "createdAt" : "2018-01-31T21:02:23Z",
        "updatedAt" : "2018-04-04T18:36:06Z",
        "lastEditedBy" : "7d0be140-1d2c-49e8-9706-1bc99845622e",
        "tags" : [
        ]
      },
      {
        "id" : "659254bd-db23-4a55-b5c5-052ba6406ecd",
        "parentId" : "7af9b15b-ecc6-47b6-a7eb-8103d388c0c4",
        "authorId" : "7d0be140-1d2c-49e8-9706-1bc99845622e",
        "body" : "@sheetalkamat ping",
        "createdAt" : "2018-02-02T15:46:14Z",
        "updatedAt" : "2018-04-04T18:36:06Z",
        "lastEditedBy" : "7d0be140-1d2c-49e8-9706-1bc99845622e",
        "tags" : [
        ]
      },
      {
        "id" : "f19bf720-018e-438e-87a2-9ee62903cda2",
        "parentId" : "7af9b15b-ecc6-47b6-a7eb-8103d388c0c4",
        "authorId" : "e30eb346-917e-4cfa-b6d7-7688bc735d2e",
        "body" : "what i am asking is are the usages in HelperOptions and others using these template and template delegates will always be any? Do you need type parameter in there?",
        "createdAt" : "2018-02-02T22:11:37Z",
        "updatedAt" : "2018-04-04T18:36:06Z",
        "lastEditedBy" : "e30eb346-917e-4cfa-b6d7-7688bc735d2e",
        "tags" : [
        ]
      },
      {
        "id" : "793f9145-8b74-4356-895b-b387adddf6ec",
        "parentId" : "7af9b15b-ecc6-47b6-a7eb-8103d388c0c4",
        "authorId" : "7d0be140-1d2c-49e8-9706-1bc99845622e",
        "body" : "sorry, not sure I understand the point, I provided an example above where you specify a type for template and it restricts usage of that template to instances of that type. So it makes sense for TemplateDelegate. For HelperOptions and HelperDelegate it's a bit different picture. You don't use helpers directly, Handlebars calls them. So specifying a type for context has less sense but possible\r\n```\r\nHandlebars.registerHelper(\"xxx\", (context, options) => {\r\n  return \"\";\r\n});\r\n```\r\nAre you suggesting adding a T to registerHelper?",
        "createdAt" : "2018-02-02T23:15:06Z",
        "updatedAt" : "2018-04-04T18:36:06Z",
        "lastEditedBy" : "7d0be140-1d2c-49e8-9706-1bc99845622e",
        "tags" : [
        ]
      }
    ],
    "commit" : "9aedcc73674e1c7572d3e11853d4cca291a1d8cf",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +10,14 @@    }\n\n    export type Template<T = any> = TemplateDelegate<T>|string;\n\n    export interface RuntimeOptions {"
  }
]