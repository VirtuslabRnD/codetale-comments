[
  {
    "id" : "93e4793b-f190-4c2f-a707-74912a15b6e8",
    "prId" : 20750,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20750#pullrequestreview-70981512",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "948578c7-1ca5-4c8c-893d-a93d0547b363",
        "parentId" : null,
        "authorId" : "68d6e190-5420-41a4-b82e-cb7784e37f62",
        "body" : "Thank you for this fix!",
        "createdAt" : "2017-10-20T22:35:23Z",
        "updatedAt" : "2017-10-24T05:19:16Z",
        "lastEditedBy" : "68d6e190-5420-41a4-b82e-cb7784e37f62",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c46ab440d4493fffb10cafebefeea4912d73c59",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +405,409 @@\n  createUser(data: CreateUserData): Promise<User>;\n  createUser(data: CreateUserData, cb: (err: Error, user: User) => void): void;\n\n  updateUser(params: ObjectWithId, data: UpdateUserData): Promise<User>;"
  },
  {
    "id" : "e002dd3c-2faf-4fef-9e94-e47ef499e0d5",
    "prId" : 26694,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/26694#pullrequestreview-130976807",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e46e787-ddde-41f6-98b1-a5788c4a25e1",
        "parentId" : null,
        "authorId" : "ecd10855-cf57-4c50-96df-e9f98e5b83c8",
        "body" : "Should the `per_page` and `page` properties also be moved here?",
        "createdAt" : "2018-06-21T14:33:10Z",
        "updatedAt" : "2018-06-21T14:33:10Z",
        "lastEditedBy" : "ecd10855-cf57-4c50-96df-e9f98e5b83c8",
        "tags" : [
        ]
      },
      {
        "id" : "fe2f5217-3be8-40db-b773-b87219e2186f",
        "parentId" : "9e46e787-ddde-41f6-98b1-a5788c4a25e1",
        "authorId" : "c6c45fb0-d1fe-44f3-b066-9c7e3d220d75",
        "body" : "No. Adding those properties will not make Auth0 return a paged result.",
        "createdAt" : "2018-06-21T15:14:56Z",
        "updatedAt" : "2018-06-21T15:16:37Z",
        "lastEditedBy" : "c6c45fb0-d1fe-44f3-b066-9c7e3d220d75",
        "tags" : [
        ]
      },
      {
        "id" : "c9d5032c-1892-47db-a18c-3e80c80d241b",
        "parentId" : "9e46e787-ddde-41f6-98b1-a5788c4a25e1",
        "authorId" : "68d6e190-5420-41a4-b82e-cb7784e37f62",
        "body" : "But they are still parameters to a paged request, and it seems like they have no place in the main interface if you're not requesting paged data",
        "createdAt" : "2018-06-21T16:03:34Z",
        "updatedAt" : "2018-06-21T16:03:35Z",
        "lastEditedBy" : "68d6e190-5420-41a4-b82e-cb7784e37f62",
        "tags" : [
        ]
      },
      {
        "id" : "5a875341-8ecb-4b3a-8540-12b9a4324e69",
        "parentId" : "9e46e787-ddde-41f6-98b1-a5788c4a25e1",
        "authorId" : "ecd10855-cf57-4c50-96df-e9f98e5b83c8",
        "body" : "They would likely remain as optional properties. Do they add any value for non-paged requests? If not, they should likely only be passed with paged requests.",
        "createdAt" : "2018-06-21T16:04:49Z",
        "updatedAt" : "2018-06-21T16:04:49Z",
        "lastEditedBy" : "ecd10855-cf57-4c50-96df-e9f98e5b83c8",
        "tags" : [
        ]
      },
      {
        "id" : "d89b35d0-c62e-4e9c-b2fd-7844a0d4d84e",
        "parentId" : "9e46e787-ddde-41f6-98b1-a5788c4a25e1",
        "authorId" : "c6c45fb0-d1fe-44f3-b066-9c7e3d220d75",
        "body" : "If you move `per_page` and `page` to `GetUsersPaged` as optional properties, you will trigger the inference for the paged search path even when you fail to specify the `include_totals` flag. TSC will say you'll receive a pageset, but at runtime you will actually get an array. Worse, existing projects that correctly assume arrays in this case will now have compile errors.\r\n\r\nI think this is not so much a question of how we would like to design interfaces so much as how to make TSC correctly handle a very convoluted and (frankly excessively) polymorphic method signature.",
        "createdAt" : "2018-06-21T20:19:20Z",
        "updatedAt" : "2018-06-22T08:19:08Z",
        "lastEditedBy" : "c6c45fb0-d1fe-44f3-b066-9c7e3d220d75",
        "tags" : [
        ]
      }
    ],
    "commit" : "611e99751d983b4baa97c211c880815f67c51af8",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +78,82 @@\nexport interface GetUsersDataPaged extends GetUsersData {\n  include_totals: boolean;\n}\n"
  }
]