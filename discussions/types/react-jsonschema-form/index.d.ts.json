[
  {
    "id" : "e9c162ca-c6dd-4146-b603-b2ef8184aa20",
    "prId" : 20514,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20514#pullrequestreview-69549285",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "acb65e1a-7205-470d-8a70-47fd483b6b22",
        "parentId" : null,
        "authorId" : "4be08ece-039a-411f-91af-15dd66477064",
        "body" : "`errors` will always be an array of `{ name, message }`, right? It would be a nice enhancement to capture that, but not a blocker.",
        "createdAt" : "2017-10-16T06:57:52Z",
        "updatedAt" : "2017-10-16T06:58:22Z",
        "lastEditedBy" : "4be08ece-039a-411f-91af-15dd66477064",
        "tags" : [
        ]
      },
      {
        "id" : "b18ce35f-c3a3-41ff-98c9-af175a22a4f4",
        "parentId" : "acb65e1a-7205-470d-8a70-47fd483b6b22",
        "authorId" : "4d310a16-45ab-4852-b933-8fcd800690ed",
        "body" : "Thanks for approval \r\nI'll add that enhancement in the coming pr",
        "createdAt" : "2017-10-16T12:53:46Z",
        "updatedAt" : "2017-10-16T12:53:46Z",
        "lastEditedBy" : "4d310a16-45ab-4852-b933-8fcd800690ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "427aca38a5ac4782e0be9ec26608dbfac682942e",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +26,30 @@        safeRenderCompletion?: boolean;\n        FieldTemplate?: any;\n        transformErrors?: (errors: any) => any;\n    }\n"
  },
  {
    "id" : "9b85b0f8-3e9d-4cd4-9eda-a643fa096485",
    "prId" : 33808,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/33808#pullrequestreview-213450680",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be4c460a-a263-4f1f-a6dc-ef4e47982971",
        "parentId" : null,
        "authorId" : "8cd07375-c57d-4165-9699-794ba60367b1",
        "body" : "Had to search for this prop but found it finally on CheckboxWidget. So :+1 from me for this change",
        "createdAt" : "2019-03-12T15:08:05Z",
        "updatedAt" : "2019-03-13T11:52:56Z",
        "lastEditedBy" : "8cd07375-c57d-4165-9699-794ba60367b1",
        "tags" : [
        ]
      }
    ],
    "commit" : "28bf0797ccd3e19fd5e804e95315b5606c17d282",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +89,93 @@        onBlur: (id: string, value: string) => void;\n        onFocus: (id: string, value: string) => void;\n        label: string;\n    }\n"
  },
  {
    "id" : "50ae6026-2500-4976-96b9-8566d25a4765",
    "prId" : 36507,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/36507#pullrequestreview-271419023",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70481b7e-104f-4548-aec6-7938445bb41c",
        "parentId" : null,
        "authorId" : "253ce653-164c-4aa6-ab6b-bfebf20a8190",
        "body" : "Note for myself:  I haven't used `withTheme` myself, but, based on the example [here]( https://react-jsonschema-form.readthedocs.io/en/latest/theme-customization/#withtheme-higher-order-component):\r\n- in the example, `schema` and `uiSchema` are provided to the \"wrapped\" component\r\n- `uiSchema` is optional (so no need to \"omit\" it)\r\n\r\nSo I think this should work 👍 ",
        "createdAt" : "2019-07-03T14:47:43Z",
        "updatedAt" : "2019-07-03T14:53:51Z",
        "lastEditedBy" : "253ce653-164c-4aa6-ab6b-bfebf20a8190",
        "tags" : [
        ]
      },
      {
        "id" : "598865c2-4f44-4ac1-b13c-7e277f02204e",
        "parentId" : "70481b7e-104f-4548-aec6-7938445bb41c",
        "authorId" : "ac880fcd-e408-450b-be6f-7e097ec86d2f",
        "body" : "seems like `Omit` is not defined, at least my typescript complains:\r\n```\r\nFailed to compile\r\n/project-path/node_modules/@types/react-jsonschema-form/index.d.ts\r\nTypeScript error in /project-path/node_modules/@types/react-jsonschema-form/index.d.ts(239,39):\r\nCannot find name 'Omit'.  TS2304\r\n\r\n    237 |     };\r\n    238 | \r\n  > 239 |     export type ThemeProps<T = any> = Omit<FormProps<T>, 'schema'>;\r\n        |                                       ^\r\n    240 | \r\n    241 |     export function withTheme<T = any>(\r\n    242 |         themeProps: ThemeProps<T>\r\n```",
        "createdAt" : "2019-08-05T14:34:03Z",
        "updatedAt" : "2019-08-05T14:34:04Z",
        "lastEditedBy" : "ac880fcd-e408-450b-be6f-7e097ec86d2f",
        "tags" : [
        ]
      },
      {
        "id" : "2ae51e96-32ae-4a09-ade5-c4250da437ae",
        "parentId" : "70481b7e-104f-4548-aec6-7938445bb41c",
        "authorId" : "d6b81cb3-8d91-4c9d-ac2d-3483b4832584",
        "body" : "Omit is included on Typescript 3.5\r\n\r\nhttps://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-5.html#the-omit-helper-type",
        "createdAt" : "2019-08-06T14:56:56Z",
        "updatedAt" : "2019-08-06T14:56:56Z",
        "lastEditedBy" : "d6b81cb3-8d91-4c9d-ac2d-3483b4832584",
        "tags" : [
        ]
      },
      {
        "id" : "78726eee-ee60-40ab-8c3d-69b6762195b7",
        "parentId" : "70481b7e-104f-4548-aec6-7938445bb41c",
        "authorId" : "ac880fcd-e408-450b-be6f-7e097ec86d2f",
        "body" : "Weird, I'm running typescript 3.5...\r\nI only found this note (below [this example)](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-8.html#example-4) while researching",
        "createdAt" : "2019-08-06T15:06:42Z",
        "updatedAt" : "2019-08-06T15:06:42Z",
        "lastEditedBy" : "ac880fcd-e408-450b-be6f-7e097ec86d2f",
        "tags" : [
        ]
      },
      {
        "id" : "126cfb0c-9904-4bc6-87a8-522d94e0772f",
        "parentId" : "70481b7e-104f-4548-aec6-7938445bb41c",
        "authorId" : "d6b81cb3-8d91-4c9d-ac2d-3483b4832584",
        "body" : "Yes, because on Typescript 2.8, Omit isn't included. But you don't have any problem executing with Typescript 3.5.",
        "createdAt" : "2019-08-06T15:11:35Z",
        "updatedAt" : "2019-08-06T15:11:35Z",
        "lastEditedBy" : "d6b81cb3-8d91-4c9d-ac2d-3483b4832584",
        "tags" : [
        ]
      },
      {
        "id" : "d9f2a562-c8f6-4beb-ad02-3b9cec12d3dc",
        "parentId" : "70481b7e-104f-4548-aec6-7938445bb41c",
        "authorId" : "d6b81cb3-8d91-4c9d-ac2d-3483b4832584",
        "body" : "Make sure that you are running typescript 3.5",
        "createdAt" : "2019-08-06T15:12:09Z",
        "updatedAt" : "2019-08-06T15:12:09Z",
        "lastEditedBy" : "d6b81cb3-8d91-4c9d-ac2d-3483b4832584",
        "tags" : [
        ]
      }
    ],
    "commit" : "08c5612e5a3f60ba797e4b52e027557957e0ed73",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +248,252 @@\n    export function withTheme<T>(\n        themeProps: Omit<FormProps<T>, 'schema'>\n    ): React.ComponentClass<FormProps<T>> | React.StatelessComponent<FormProps<T>>;\n}"
  },
  {
    "id" : "70af16c4-3f3c-4bf7-90f0-dfcc6d72558b",
    "prId" : 38301,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38301#pullrequestreview-287025213",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "368c4734-5646-4332-adb8-b82391ee5a6d",
        "parentId" : null,
        "authorId" : "7302fb6d-e6a6-4d7a-a94c-60d1e45db27f",
        "body" : "Why use `export default` for `SchemaField`?",
        "createdAt" : "2019-09-11T19:20:17Z",
        "updatedAt" : "2019-09-11T19:20:20Z",
        "lastEditedBy" : "7302fb6d-e6a6-4d7a-a94c-60d1e45db27f",
        "tags" : [
        ]
      },
      {
        "id" : "7c3a853d-e408-44e8-9d29-7d05877e1815",
        "parentId" : "368c4734-5646-4332-adb8-b82391ee5a6d",
        "authorId" : "117db34a-336c-459c-8a72-716751a7cee5",
        "body" : "Inside `react-jsonschema-form/src/components/fields/SchemaField.js`:\r\n```js\r\nclass SchemaField extends React.Component {\r\n    ...\r\n}\r\n\r\n...\r\n\r\nexport default SchemaField;\r\n```\r\n\r\n SchemaField is exported as `default`. When we import from that file location, we can only pull the `default` since we don't export the class as well.",
        "createdAt" : "2019-09-11T19:36:26Z",
        "updatedAt" : "2019-09-11T19:36:26Z",
        "lastEditedBy" : "117db34a-336c-459c-8a72-716751a7cee5",
        "tags" : [
        ]
      }
    ],
    "commit" : "07dad0a44417eaa8c525b2cda23fbe84f65047e7",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +267,271 @@    >;\n\n    export default class SchemaField extends React.Component<\n      SchemaFieldProps\n    > {}"
  }
]