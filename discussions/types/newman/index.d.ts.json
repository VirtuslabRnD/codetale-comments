[
  {
    "id" : "567f8c33-5a59-4ab2-bcc2-09690ccbb3af",
    "prId" : 29156,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/29156#pullrequestreview-158720259",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88c0fb5c-b743-4a36-8686-2ac6d2a6768b",
        "parentId" : null,
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "Is the difference between `\"folder\"` and `[\"folder\"]` important in this case?",
        "createdAt" : "2018-09-25T19:47:07Z",
        "updatedAt" : "2018-09-25T19:50:10Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      },
      {
        "id" : "01f57c43-c414-4a23-8cb7-69e2ea79f2a2",
        "parentId" : "88c0fb5c-b743-4a36-8686-2ac6d2a6768b",
        "authorId" : "8d40e4ac-1710-400f-bff5-5842a1efa0f7",
        "body" : "Yup https://github.com/postmanlabs/newman/blob/release/3.x/lib/run/index.js#L101",
        "createdAt" : "2018-09-25T19:59:55Z",
        "updatedAt" : "2018-09-25T19:59:55Z",
        "lastEditedBy" : "8d40e4ac-1710-400f-bff5-5842a1efa0f7",
        "tags" : [
        ]
      },
      {
        "id" : "bb56a19d-6aa3-41f4-ba68-191346779d92",
        "parentId" : "88c0fb5c-b743-4a36-8686-2ac6d2a6768b",
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "Thanks for confirming!",
        "createdAt" : "2018-09-25T20:02:40Z",
        "updatedAt" : "2018-09-25T20:02:41Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      }
    ],
    "commit" : "e87f492dbf37a0f8289bbeedcc498ab82a1d373b",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +91,95 @@     * Default value: false\n     */\n    bail?: boolean | [\"folder\"] | [\"failure\"];\n    /**\n     * If present, allows overriding the default exit code from the current"
  },
  {
    "id" : "c98f929d-8499-4575-a19a-06a4e429d5aa",
    "prId" : 29156,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/29156#pullrequestreview-158730170",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9428e09b-5391-47ec-826b-77bfe8bd1b2e",
        "parentId" : null,
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "Are `Error` and `NewmanRunExecutionAssertionError` (supposed to be) related?",
        "createdAt" : "2018-09-25T19:49:35Z",
        "updatedAt" : "2018-09-25T19:50:10Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      },
      {
        "id" : "82a66f37-97c6-4453-ba7c-8544d2731bb3",
        "parentId" : "9428e09b-5391-47ec-826b-77bfe8bd1b2e",
        "authorId" : "8d40e4ac-1710-400f-bff5-5842a1efa0f7",
        "body" : "They're different from what I could tell. This callback `Error` is for fatal newman errors but `NewmanRunExecutionAssertionError` is for test / script failures\r\n\r\ncallback error:\r\nhttps://github.com/postmanlabs/newman/tree/release/3.x#newmanruncallbackerror-object--summary-object\r\n> By default, only fatal errors, such as the ones caused by any fault inside Newman is passed on to this argument.\r\n\r\nexecution error:\r\nhttps://github.com/postmanlabs/newman/blob/release/3.x/lib/run/summary.js#L240\r\nseem to have errors that could be a syntax error, assertion error, or other error.\r\n",
        "createdAt" : "2018-09-25T20:12:59Z",
        "updatedAt" : "2018-09-25T20:13:00Z",
        "lastEditedBy" : "8d40e4ac-1710-400f-bff5-5842a1efa0f7",
        "tags" : [
        ]
      },
      {
        "id" : "d9c328bf-c33d-4c44-a329-cf280f32f8a5",
        "parentId" : "9428e09b-5391-47ec-826b-77bfe8bd1b2e",
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "Thanks for confirming!",
        "createdAt" : "2018-09-25T20:27:58Z",
        "updatedAt" : "2018-09-25T20:27:58Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      }
    ],
    "commit" : "e87f492dbf37a0f8289bbeedcc498ab82a1d373b",
    "line" : 175,
    "diffHunk" : "@@ -1,1 +178,182 @@export function run(\n    options: NewmanRunOptions,\n    callback?: (err: Error | null, summary: NewmanRunSummary) => void\n): EventEmitter;"
  }
]