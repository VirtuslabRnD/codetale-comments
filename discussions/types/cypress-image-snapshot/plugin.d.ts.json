[
  {
    "id" : "8ae912de-059f-4e6e-8e84-aa22d9c2dc06",
    "prId" : 50761,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/50761#pullrequestreview-573868146",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "034ebcd9-3f2a-43e9-b73a-91fe3f043348",
        "parentId" : null,
        "authorId" : "519a25bb-aae4-4005-ab8f-196397dd313b",
        "body" : "Do we want to revert back to `config: any`? I don't think `{}` will allow consumers to pass anything in unless that was the intention, it's been a while since I've looked at the API",
        "createdAt" : "2021-01-21T22:16:15Z",
        "updatedAt" : "2021-01-21T22:58:26Z",
        "lastEditedBy" : "519a25bb-aae4-4005-ab8f-196397dd313b",
        "tags" : [
        ]
      },
      {
        "id" : "03781b30-7edc-4aea-baac-b25b0804076a",
        "parentId" : "034ebcd9-3f2a-43e9-b73a-91fe3f043348",
        "authorId" : "4a0ce1fb-6a49-4089-a16e-9ce9cb38ff32",
        "body" : "as far as i read, it looks like no fields from config are consumed by the plugin (https://github.com/jaredpalmer/cypress-image-snapshot/blob/cf42ab464de9f391507d50e4c6056a206b119b24/src/plugin.js#L137-L138 see function definitions). it is also not the config for the plugin, but `Cypress.PluginConfigOptions`, an argument from the cypress setup function.\r\n\r\nas far as i understand `{}` should be equivalent to `object`. as both are a subset of `Cypress.PluginConfigOptions` it should allow to pass in any object, but not a `number` or `string`.",
        "createdAt" : "2021-01-22T01:24:34Z",
        "updatedAt" : "2021-01-22T01:24:34Z",
        "lastEditedBy" : "4a0ce1fb-6a49-4089-a16e-9ce9cb38ff32",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5d8c7f7cb58c16dad1646bb03ffc783b9880182",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +24,28 @@/* Cypress definitions - end */\n\ndeclare function addMatchImageSnapshotPlugin(on: PluginEvents, config: {}): void;\n\nexport { addMatchImageSnapshotPlugin };"
  },
  {
    "id" : "d4ac1a04-0840-40ee-b071-313a77344f06",
    "prId" : 50761,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/50761#pullrequestreview-573869990",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80bc35ef-e4fc-429a-be48-cfaaa2f53f8c",
        "parentId" : null,
        "authorId" : "519a25bb-aae4-4005-ab8f-196397dd313b",
        "body" : "I don't work much in this repository but would it be worth exporting this interface and using it in our test file so it doesn't have to be duplicated?",
        "createdAt" : "2021-01-21T22:57:13Z",
        "updatedAt" : "2021-01-21T22:58:26Z",
        "lastEditedBy" : "519a25bb-aae4-4005-ab8f-196397dd313b",
        "tags" : [
        ]
      },
      {
        "id" : "7bd63df6-d5cf-47fa-915f-6495823c5c22",
        "parentId" : "80bc35ef-e4fc-429a-be48-cfaaa2f53f8c",
        "authorId" : "4a0ce1fb-6a49-4089-a16e-9ce9cb38ff32",
        "body" : "i was thinking the same. but unfortunately am also no expert in DefinitelyTyped. i was assuming that if the types are exported, they might look like \"public api\" of the plugin, where in fact they are just duplicating cypress types.\r\n\r\nalso the original test passes\r\n```\r\naddMatchImageSnapshotPlugin(() => null, {}); // $ExpectType void\r\n```\r\n\r\ni could also revert to that. i was not sure what exactly was supposed to be tested with the types. specifically as i defined them myself anyway and i can not check against the real cypress ones, as it would otherwise need to depend on it.\r\n\r\nwhat do you think? export as \"public api\", revert to original test? or the duplication?",
        "createdAt" : "2021-01-22T01:29:47Z",
        "updatedAt" : "2021-01-22T01:29:47Z",
        "lastEditedBy" : "4a0ce1fb-6a49-4089-a16e-9ce9cb38ff32",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5d8c7f7cb58c16dad1646bb03ffc783b9880182",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +18,22 @@}\n\ninterface PluginEvents {\n    (action: 'after:screenshot', fn: (details: {path: string}) => void): void;\n    (action: 'task', tasks: Tasks): void;"
  }
]