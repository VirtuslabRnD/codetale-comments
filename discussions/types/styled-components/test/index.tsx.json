[
  {
    "id" : "c1147210-a8c4-475e-b77c-e07374bc11ff",
    "prId" : 30467,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/30467#pullrequestreview-174324042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2315af1e-e5d5-43ae-bcfa-ba2249a67883",
        "parentId" : null,
        "authorId" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "body" : "Try as I might, there is a mystery `[x: string]: any` index signature that shows up in the result type _only in dtslint_.",
        "createdAt" : "2018-11-13T11:53:30Z",
        "updatedAt" : "2018-11-13T12:05:10Z",
        "lastEditedBy" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "tags" : [
        ]
      }
    ],
    "commit" : "539ee2291287af0a6e9b30a873324cdf1f057b0f",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +558,562 @@// These tests pass in tsservice, but they fail in dtslint. I do not know why.\n// <WithComponentRequired2 href=''/>;\n// <WithComponentRequired2 to=''/>; // $ExpectError\n\n// 4.0 With Component"
  },
  {
    "id" : "39e22646-5860-4d49-a620-a7c56adacb6b",
    "prId" : 30827,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/30827#pullrequestreview-180501455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "186a00e0-447f-449a-a44d-6fa3585bc9c3",
        "parentId" : null,
        "authorId" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "body" : "1) a shorter syntax can be used `import \"styled-components/cssprop\";`\r\n2) I think TS will insert a real import, that will break in run-time\r\n\r\nto fix (2) I suggest recommend users to include it with `///<reference>` directive or add the file to their `tsconfig.json`.",
        "createdAt" : "2018-11-30T23:18:11Z",
        "updatedAt" : "2018-11-30T23:18:11Z",
        "lastEditedBy" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "tags" : [
        ]
      },
      {
        "id" : "ad2ff02d-7b79-448e-b850-c6ee0c8cce0e",
        "parentId" : "186a00e0-447f-449a-a44d-6fa3585bc9c3",
        "authorId" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "body" : "Nope, this syntax was used _specifically_ to force TypeScript to elide the import as having no elements used. If you don't have the `{} from` then TypeScript will preserve the import and cause the build error.",
        "createdAt" : "2018-11-30T23:28:50Z",
        "updatedAt" : "2018-11-30T23:28:51Z",
        "lastEditedBy" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "tags" : [
        ]
      },
      {
        "id" : "be88a229-77e6-4566-9535-5715232838f4",
        "parentId" : "186a00e0-447f-449a-a44d-6fa3585bc9c3",
        "authorId" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "body" : "ah, ok, that makes sense, thank you!\r\nwhat do you think about a recommendation to use `///` or add to tsconfig?",
        "createdAt" : "2018-11-30T23:48:33Z",
        "updatedAt" : "2018-11-30T23:48:33Z",
        "lastEditedBy" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "tags" : [
        ]
      },
      {
        "id" : "5d063c70-9cfb-46b9-8a28-896b3285762e",
        "parentId" : "186a00e0-447f-449a-a44d-6fa3585bc9c3",
        "authorId" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "body" : "How would it be added to tsconfig; `styled-components/cssprop` in the `types` array?",
        "createdAt" : "2018-12-01T01:00:19Z",
        "updatedAt" : "2018-12-01T01:00:19Z",
        "lastEditedBy" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5bc70efc08abdaebef17c425bbe9edbaf9cbd84",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +17,21 @@    ThemedStyledComponentsModule\n} from \"styled-components\";\nimport {} from \"styled-components/cssprop\";\n\n/**"
  },
  {
    "id" : "5f671d54-60e6-4e37-b508-bba56a5f9e77",
    "prId" : 31903,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/31903#pullrequestreview-189941342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7c3648b-f876-45c5-b8a9-41ae7424db97",
        "parentId" : null,
        "authorId" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "body" : "these tests are failing on 2.9 and 3.0.\r\nIs there a way to ignore them only on specific versions of TS?",
        "createdAt" : "2019-01-05T01:13:50Z",
        "updatedAt" : "2019-01-07T18:54:13Z",
        "lastEditedBy" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "tags" : [
        ]
      },
      {
        "id" : "23fa473a-daca-4fae-9be4-d380001eb2d5",
        "parentId" : "a7c3648b-f876-45c5-b8a9-41ae7424db97",
        "authorId" : "e30eb346-917e-4cfa-b6d7-7688bc735d2e",
        "body" : "You can create new definitions for ts 3.2+ version ",
        "createdAt" : "2019-01-06T19:05:23Z",
        "updatedAt" : "2019-01-07T18:54:13Z",
        "lastEditedBy" : "e30eb346-917e-4cfa-b6d7-7688bc735d2e",
        "tags" : [
        ]
      },
      {
        "id" : "d446e535-b0dc-4dbd-8622-66c3f1fa3750",
        "parentId" : "a7c3648b-f876-45c5-b8a9-41ae7424db97",
        "authorId" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "body" : "Yeah, this can only pass in TS >= 3.2. TS < 3.2 had a bug where it would _only_ apply `defaultProps` on class components, and styled components aren't class components.\r\n\r\nThe fix is correct, but we can't write tests for them, and it's probably overkill to bump the minimum required TS version for a forwards compatible fix. On the other hand, bumping the version will finally let us enable the currently commented out correct call signature which _isn't_ backwards compatible.",
        "createdAt" : "2019-01-07T17:55:39Z",
        "updatedAt" : "2019-01-07T18:54:13Z",
        "lastEditedBy" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "tags" : [
        ]
      },
      {
        "id" : "bd6850ec-2c2a-48dd-a10d-c2c7f498ee09",
        "parentId" : "a7c3648b-f876-45c5-b8a9-41ae7424db97",
        "authorId" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "body" : "I think @sheetalkamat meant to use [a new `typesVersions` TS 3.1 feature](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-1.html#version-selection-with-typesversions), if I'm not mistaken.\r\n\r\nI could do that but the issue has nothing to do with definition itself, and only appears in the tests. So if were a way to have tests for specific versions of TS that would help here.\r\n\r\nI am not sure if we already have test/build infrastructure that allows to leverage the new feature.\r\n\r\nMy personal opinion, that since there's no real breaking changes in the definition, the minimal TS version should not be advanced. The tests, however, might have different expectations depending on TS version. And that's where we should look at.",
        "createdAt" : "2019-01-07T18:47:19Z",
        "updatedAt" : "2019-01-07T18:54:13Z",
        "lastEditedBy" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8abd27b8840167fbd77141b4b9fd9988f97c79e5",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +980,984 @@\n    // this test is failing in TS 3.0 but not in 3.1\n    // <StyledComponent requiredProp />;\n\n    // still respects the type of optionalProp"
  }
]