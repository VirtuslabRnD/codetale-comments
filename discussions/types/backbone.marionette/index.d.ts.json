[
  {
    "id" : "6b400541-cb40-4649-95fb-6d6843afaa13",
    "prId" : 48939,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/48939#pullrequestreview-519543639",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1df00e3c-133d-4ee0-bc3c-415f9f5166fd",
        "parentId" : null,
        "authorId" : "d6dbc01c-d9ed-403c-aba1-4b9e918920b4",
        "body" : "Thanks to @reubenrybnik, you might be able to use [`_.Iteratee`](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/1e69551ff518516feb8aa9ea04e11c2eda95a82a/types/underscore/index.d.ts#L105-L111) for this:\r\n\r\n```suggestion\r\n    viewFilter?: _.Iteratee<Backbone.View[], boolean>;\r\n```\r\n\r\nI'm not sure whether this type is actually visible outside of that module, so it might not work, but if it does, it seems preferable.",
        "createdAt" : "2020-10-20T20:27:03Z",
        "updatedAt" : "2020-10-29T10:39:41Z",
        "lastEditedBy" : "d6dbc01c-d9ed-403c-aba1-4b9e918920b4",
        "tags" : [
        ]
      },
      {
        "id" : "942d4876-9d00-44e5-b3c6-630b6a8766ac",
        "parentId" : "1df00e3c-133d-4ee0-bc3c-415f9f5166fd",
        "authorId" : "96815620-060a-4548-941b-0e1ee9e23ed1",
        "body" : "I'm not familiar with this code, so anything I say should definitely be taken with a grain of salt, but I just wanted to make a few quick notes here about this potential change:\r\n\r\n- Depending on whether or not this supports all the different iteratee types of Underscore functions, `_.CollectionIterator` may be a better fit here than `_.Iteratee`\r\n- For either `_.CollectionIterator` or `_.Iteratee` to work well here, the types for `view` and `index` would need to be non-optional (I think `Iteratee<Backbone.View[] | undefined, boolean>` would at least allow for a possibly undefined `children` parameter though)\r\n- For either `CollectionIterator` or `Iteratee` to work well here, the type for the `view` parameter would need to extend `TypeOfCollection<Backbone.View[]>`, and `typeof Backbone.View` (which is the type of the base Backbone view's constructor function rather than the base type of an instantiated view) does not do that",
        "createdAt" : "2020-10-26T06:00:14Z",
        "updatedAt" : "2020-10-29T10:39:41Z",
        "lastEditedBy" : "96815620-060a-4548-941b-0e1ee9e23ed1",
        "tags" : [
        ]
      },
      {
        "id" : "beba4957-390d-476a-8212-dae7a7ec9465",
        "parentId" : "1df00e3c-133d-4ee0-bc3c-415f9f5166fd",
        "authorId" : "96815620-060a-4548-941b-0e1ee9e23ed1",
        "body" : "Too, I guess I'd say that unless the underlying implementation for this is defined more or less as a proxy for an Underscore function it might be better to not reference Underscore's types here since if Underscore later changes its types in a way that is not compatible with this function it may lead to either incorrect typings for this function or extra work untangling the types.",
        "createdAt" : "2020-10-26T06:16:32Z",
        "updatedAt" : "2020-10-29T10:39:41Z",
        "lastEditedBy" : "96815620-060a-4548-941b-0e1ee9e23ed1",
        "tags" : [
        ]
      },
      {
        "id" : "7578a2eb-7456-441e-82b1-45f37fb1ebdb",
        "parentId" : "1df00e3c-133d-4ee0-bc3c-415f9f5166fd",
        "authorId" : "26ef74c8-c053-43a5-ba9c-3e6b1e328b86",
        "body" : "Types from underscore are already used extensively here (especially in the `Container` type), so that shouldn't be an issue. But I've tried to use the suggested Iteratee and CollectionIterator but I couldn't make it work. Maybe someone with more typescript-fu can get it to work.",
        "createdAt" : "2020-10-29T10:52:19Z",
        "updatedAt" : "2020-10-29T10:52:19Z",
        "lastEditedBy" : "26ef74c8-c053-43a5-ba9c-3e6b1e328b86",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fb2060b1d0cf2dad8f850c13c73c075923ade52",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +1315,1319 @@     * Prevent some of the underlying children from being attached to the DOM.\n     */\n    viewFilter?: ((view?: typeof Backbone.View, index?: number, children?: Backbone.View[]) => boolean) | Backbone.ObjectHash | string;\n\n    /**"
  }
]