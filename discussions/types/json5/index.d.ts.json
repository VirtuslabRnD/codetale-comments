[
  {
    "id" : "30bae506-89bf-43ea-8d13-b9e704cce078",
    "prId" : 28077,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/28077#pullrequestreview-147718265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87f131a3-e911-4a6a-a1d4-5d3cfa639471",
        "parentId" : null,
        "authorId" : "f6d540bd-fdc2-4205-b709-9c9832e9bd9d",
        "body" : "Rather than duplicating these methods which already exist on the `JSON` interface in the lib, you can extend the existing one with the following:\r\n```\r\ndeclare global {\r\n  interface JSON {\r\n    stringify(value: any, options?: { space?: number | string, quote?: string, replacer?: (key: string, value: any) => any }): string;\r\n  }\r\n}\r\n```\r\nThis will just add in the overload to the existing interface.",
        "createdAt" : "2018-08-17T22:34:34Z",
        "updatedAt" : "2018-08-17T22:34:52Z",
        "lastEditedBy" : "f6d540bd-fdc2-4205-b709-9c9832e9bd9d",
        "tags" : [
        ]
      },
      {
        "id" : "089732ef-d448-4fe0-8487-0d0145b3da0e",
        "parentId" : "87f131a3-e911-4a6a-a1d4-5d3cfa639471",
        "authorId" : "f6d540bd-fdc2-4205-b709-9c9832e9bd9d",
        "body" : "For details, see the bottom of [this page of the handbook](https://www.typescriptlang.org/docs/handbook/declaration-merging.html).",
        "createdAt" : "2018-08-17T22:35:45Z",
        "updatedAt" : "2018-08-17T22:35:46Z",
        "lastEditedBy" : "f6d540bd-fdc2-4205-b709-9c9832e9bd9d",
        "tags" : [
        ]
      },
      {
        "id" : "fb58460b-0b3b-4c9e-bd80-1b2a97391ea5",
        "parentId" : "87f131a3-e911-4a6a-a1d4-5d3cfa639471",
        "authorId" : "9e1bacef-688c-4f6f-82f9-5a04b69b70e6",
        "body" : "Thanks. I was missing part with extending interface. But is this right to add method to JSON interface, which is used not only as JSON5 typing? What if project is using JSON5 and JSON methods?",
        "createdAt" : "2018-08-18T06:58:08Z",
        "updatedAt" : "2018-08-18T07:05:55Z",
        "lastEditedBy" : "9e1bacef-688c-4f6f-82f9-5a04b69b70e6",
        "tags" : [
        ]
      },
      {
        "id" : "776dccb3-9502-482c-b806-a48006d2e85a",
        "parentId" : "87f131a3-e911-4a6a-a1d4-5d3cfa639471",
        "authorId" : "f6d540bd-fdc2-4205-b709-9c9832e9bd9d",
        "body" : "This is fine. By doing this, you're not changing the global JSON interface, but only extending it when used through the JSON5 package. So the following is true:\r\n```\r\nimport JSON5 = require('json5');\r\n\r\nJSON5.stringify({ foo: \"bar\" }, { space: 4 }); // works fine, exposes 3 overloads for stringify\r\nJSON.stringify({ foo: \"bar\" }, { space: 4 }); // causes error\r\nJSON.stringify({ foo: \"bar\" }, undefined, 4); // works fine, exposes 2 overloads for stringify\r\n```",
        "createdAt" : "2018-08-20T16:17:05Z",
        "updatedAt" : "2018-08-20T16:17:05Z",
        "lastEditedBy" : "f6d540bd-fdc2-4205-b709-9c9832e9bd9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "925a3c466591c17379a1a8f9ac63d2fe6726905b",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +47,51 @@interface JSON5 {\n    // Old JSON methods\n    parse(text: string, reviver?: (key: any, value: any) => any): any;\n    stringify(value: any, replacer?: (key: string, value: any) => any, space?: string | number): string;\n    stringify(value: any, replacer?: (number | string)[] | null, space?: string | number): string;"
  }
]