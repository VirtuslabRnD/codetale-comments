[
  {
    "id" : "09de6637-6923-43dd-af7d-72cb2fab4f30",
    "prId" : 30618,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/30618#pullrequestreview-176082425",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2451a952-e8ae-467f-9c68-214fe870410b",
        "parentId" : null,
        "authorId" : "f314072f-b2b1-40a0-a6e8-5d6d56aa7154",
        "body" : "Why not adding it to the [previous test](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/52b7f7abc046886678d001cfa6f499cc7c35d416/types/expo/expo-tests.tsx#L464)?",
        "createdAt" : "2018-11-18T09:21:08Z",
        "updatedAt" : "2018-11-18T09:21:17Z",
        "lastEditedBy" : "f314072f-b2b1-40a0-a6e8-5d6d56aa7154",
        "tags" : [
        ]
      },
      {
        "id" : "a03c0ab8-d4fe-41b0-b37a-579053e9b6bb",
        "parentId" : "2451a952-e8ae-467f-9c68-214fe870410b",
        "authorId" : "2df9318f-5b5a-45a5-b7f9-8ddd0c607c9f",
        "body" : "Because \"preserveAspectRatio\" is an optional attribute on the \"Svg\" root element and I wanted the test to cover both the \"attribute present\" and \"attribute not present\" cases.",
        "createdAt" : "2018-11-18T09:54:05Z",
        "updatedAt" : "2018-11-18T09:54:05Z",
        "lastEditedBy" : "2df9318f-5b5a-45a5-b7f9-8ddd0c607c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b7f7abc046886678d001cfa6f499cc7c35d416",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +570,574 @@);\n\n() => (\n    <Svg width={100} height={50} preserveAspectRatio=\"none\" />\n);"
  },
  {
    "id" : "db370c72-c719-4077-aca7-957e7abb794d",
    "prId" : 31840,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/31840#pullrequestreview-188905736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "637173ec-cc0f-4b2b-969e-e72a44c0caa4",
        "parentId" : null,
        "authorId" : "f314072f-b2b1-40a0-a6e8-5d6d56aa7154",
        "body" : "Maybe you can test the `keychainService` option too.",
        "createdAt" : "2019-01-03T06:03:49Z",
        "updatedAt" : "2019-01-04T22:00:24Z",
        "lastEditedBy" : "f314072f-b2b1-40a0-a6e8-5d6d56aa7154",
        "tags" : [
        ]
      }
    ],
    "commit" : "975200895b4c1e67f3409a8289921bafe6e50c0c",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +490,494 @@    await SecureStore.setItemAsync('some-key', 'some-val', {\n        keychainService: \"some-service\",\n        keychainAccessible: SecureStore.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY,\n    });\n    const result = await SecureStore.getItemAsync('some-key', { keychainService: \"some-service\" });"
  },
  {
    "id" : "7a0800cf-cd73-431d-8a73-58918f497c14",
    "prId" : 31840,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/31840#pullrequestreview-188905736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f06848a-ebb5-41b1-9b27-8525d6a60a1b",
        "parentId" : null,
        "authorId" : "f314072f-b2b1-40a0-a6e8-5d6d56aa7154",
        "body" : "Other `keychainAccessible` options can be tested here. Something like this:\r\n\r\nhttps://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/expo/expo-tests.tsx#L160\r\n\r\n",
        "createdAt" : "2019-01-03T06:05:55Z",
        "updatedAt" : "2019-01-04T22:00:24Z",
        "lastEditedBy" : "f314072f-b2b1-40a0-a6e8-5d6d56aa7154",
        "tags" : [
        ]
      }
    ],
    "commit" : "975200895b4c1e67f3409a8289921bafe6e50c0c",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +497,501 @@    }\n    await SecureStore.deleteItemAsync('some-key', { keychainService: \"some-service\" });\n};\n\nconst allSecureStoreKeychainAccessibleValues: number[] = ["
  }
]