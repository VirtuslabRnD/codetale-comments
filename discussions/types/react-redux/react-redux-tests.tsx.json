[
  {
    "id" : "c0d49e2c-4083-43be-ad9b-3bd905d016cc",
    "prId" : 15929,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/15929#pullrequestreview-33298398",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ed999d5-4816-444f-9293-fc78bb9cd176",
        "parentId" : null,
        "authorId" : "e709fc94-0374-43ab-8ace-fe56abc9729b",
        "body" : "the type `{}` allowed the compiler to overlook the missing `TOwnProps`, since `{}` is basically `any`.",
        "createdAt" : "2017-04-18T02:19:30Z",
        "updatedAt" : "2017-04-18T17:51:38Z",
        "lastEditedBy" : "e709fc94-0374-43ab-8ace-fe56abc9729b",
        "tags" : [
        ]
      },
      {
        "id" : "a8875f63-f984-4177-a77e-e1636061adb9",
        "parentId" : "1ed999d5-4816-444f-9293-fc78bb9cd176",
        "authorId" : "dbc0e58d-9f4d-41a9-9fd8-c0b24e9aab13",
        "body" : "Indeed: #8787",
        "createdAt" : "2017-04-18T17:31:45Z",
        "updatedAt" : "2017-04-18T17:51:38Z",
        "lastEditedBy" : "dbc0e58d-9f4d-41a9-9fd8-c0b24e9aab13",
        "tags" : [
        ]
      }
    ],
    "commit" : "416c0f9c3df391ca24139d18f750506edd3180ce",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +360,364 @@    const ConnectedWithoutOwnProps = connect(mapStateToPropsWithoutOwnProps)(OwnPropsComponent);\n    const ConnectedWithOwnProps = connect(mapStateToPropsWithOwnProps)(OwnPropsComponent);\n    const ConnectedWithTypeHint = connect<StateProps, void, OwnProps>(mapStateToPropsWithoutOwnProps)(OwnPropsComponent);\n\n    // This compiles, which is bad."
  },
  {
    "id" : "21b23824-2f64-4729-950c-345d28c2ea8f",
    "prId" : 16024,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/16024#pullrequestreview-33901660",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74af3f75-c0cd-466e-9d35-b1cd7acb7301",
        "parentId" : null,
        "authorId" : "dbc0e58d-9f4d-41a9-9fd8-c0b24e9aab13",
        "body" : "Why change this test?",
        "createdAt" : "2017-04-20T17:19:52Z",
        "updatedAt" : "2017-04-20T23:58:47Z",
        "lastEditedBy" : "dbc0e58d-9f4d-41a9-9fd8-c0b24e9aab13",
        "tags" : [
        ]
      },
      {
        "id" : "21785c9e-44b8-470c-986f-02483bbfbfa2",
        "parentId" : "74af3f75-c0cd-466e-9d35-b1cd7acb7301",
        "authorId" : "e709fc94-0374-43ab-8ace-fe56abc9729b",
        "body" : "it implied to me that `missingOwn` was testing a parameter _missing_, separately from how `anything` tests add a noise parameter. They're actually the same thing.\r\n\r\nThis was more for my own sanity, I'm happy to change it back if you'd like",
        "createdAt" : "2017-04-20T18:09:41Z",
        "updatedAt" : "2017-04-20T23:58:47Z",
        "lastEditedBy" : "e709fc94-0374-43ab-8ace-fe56abc9729b",
        "tags" : [
        ]
      },
      {
        "id" : "d2a015cc-fa7b-4930-bfe4-7fb3a114b56e",
        "parentId" : "74af3f75-c0cd-466e-9d35-b1cd7acb7301",
        "authorId" : "dbc0e58d-9f4d-41a9-9fd8-c0b24e9aab13",
        "body" : "Okay, you're right, this name is more-obviously undesirable noise. Can you change the one on line 378 too?",
        "createdAt" : "2017-04-20T22:33:27Z",
        "updatedAt" : "2017-04-20T23:58:47Z",
        "lastEditedBy" : "dbc0e58d-9f4d-41a9-9fd8-c0b24e9aab13",
        "tags" : [
        ]
      }
    ],
    "commit" : "840a39c0afef2e9faf63fd4acd2c396b0414693e",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +369,373 @@\n    // This should not compile, which is good.\n    // React.createElement(ConnectedWithOwnProps, { anything: 'goes!' });\n\n    // This compiles, as expected."
  },
  {
    "id" : "b250cc2d-cf6f-4e91-8692-56ff227be9c9",
    "prId" : 19666,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/19666#pullrequestreview-61726383",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f81dfeb9-4ebd-4628-8edb-fe03fa33bdee",
        "parentId" : null,
        "authorId" : "af7014c7-59b2-459f-bbe5-91eb01fb7a35",
        "body" : "This had a TS error previously. `{ bar: number }` was not inferred as a `TStateProps` and thus became required in the verify section",
        "createdAt" : "2017-09-11T06:37:15Z",
        "updatedAt" : "2017-09-11T06:37:15Z",
        "lastEditedBy" : "af7014c7-59b2-459f-bbe5-91eb01fb7a35",
        "tags" : [
        ]
      }
    ],
    "commit" : "1cc622c196e2451bd2272e2af87221fc82da2dec",
    "line" : 191,
    "diffHunk" : "@@ -1,1 +189,193 @@\n    const Test = connect(\n        mapStateToPropsFactory,\n        mapDispatchToProps,\n    )(TestComponent)"
  },
  {
    "id" : "8872fc38-e2e2-4495-b341-318520f6ac39",
    "prId" : 19666,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/19666#pullrequestreview-61727754",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec118277-f05e-40e4-8219-7f12527081e7",
        "parentId" : null,
        "authorId" : "af7014c7-59b2-459f-bbe5-91eb01fb7a35",
        "body" : "I find this style of verification steps more organized and easier to understand what is being tested. Many existing type tests don't verify the output of `connect` and many breakages and fixes have occurred. The `verify` is like an expectation or an assertion. It is a way to verify the component returned by `connect` has the right property requirements in a way that is understandable by people just doing React.\r\n\r\nThis line could be removed and the test look like this instead:\r\n\r\n```ts\r\nconst Test: React.ComponentClass<{ foo: string }> = connect(\r\n  mapStateToPropsFactory,\r\n  mapDispatchToProps,\r\n)(TestComponent)\r\n```\r\n\r\nBut this method allows cast narrowing. Meaning `React.ComponentClass<{}>` would be a valid cast target (`{}` can fit into `{ foo: string }`, but not the reverse)",
        "createdAt" : "2017-09-11T06:46:53Z",
        "updatedAt" : "2017-09-11T06:46:53Z",
        "lastEditedBy" : "af7014c7-59b2-459f-bbe5-91eb01fb7a35",
        "tags" : [
        ]
      }
    ],
    "commit" : "1cc622c196e2451bd2272e2af87221fc82da2dec",
    "line" : 195,
    "diffHunk" : "@@ -1,1 +193,197 @@    )(TestComponent)\n\n    const verify = <Test foo='bar' />\n}\n"
  },
  {
    "id" : "7666547c-8eec-489f-aa34-741c354af7a4",
    "prId" : 19666,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/19666#pullrequestreview-61729851",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4588b61b-6dbc-4443-b48e-bbbc4d491893",
        "parentId" : null,
        "authorId" : "af7014c7-59b2-459f-bbe5-91eb01fb7a35",
        "body" : "namespacing allows all type and variable definitions to be isolated preventing a lot of numbers from being appended to types and variables making the test easier to understand and isolated. It was a bit odd that if I forgot to defined `mapStateToProps` that I'd get a type error about not having `{ value: number }` since that is the signature of a globally defined function",
        "createdAt" : "2017-09-11T07:01:16Z",
        "updatedAt" : "2017-09-11T07:01:16Z",
        "lastEditedBy" : "af7014c7-59b2-459f-bbe5-91eb01fb7a35",
        "tags" : [
        ]
      }
    ],
    "commit" : "1cc622c196e2451bd2272e2af87221fc82da2dec",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +14,18 @@// output of `connect` to make sure the signature is what is expected\n\nnamespace Empty {\n    interface OwnProps { foo: string, dispatch: Dispatch<any> }    \n"
  }
]