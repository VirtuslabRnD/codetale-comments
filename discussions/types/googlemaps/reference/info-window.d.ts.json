[
  {
    "id" : "acd2bf74-c714-4201-8f2e-76339cf4be6b",
    "prId" : 45331,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/45331#pullrequestreview-425759008",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f7a35da-a058-44e1-8c0e-c9a0c081a0f7",
        "parentId" : null,
        "authorId" : "aaa17825-d55b-4b56-adcd-d9abf5b5ba30",
        "body" : "What is this general overload good for? For other event types of `MVCObject`? Couldn't the first one also include the keys of `MVCObject` events?",
        "createdAt" : "2020-06-06T17:28:50Z",
        "updatedAt" : "2020-06-12T18:13:39Z",
        "lastEditedBy" : "aaa17825-d55b-4b56-adcd-d9abf5b5ba30",
        "tags" : [
        ]
      },
      {
        "id" : "5b10874f-7af8-4ab9-bfde-e3d4f21e0ab4",
        "parentId" : "1f7a35da-a058-44e1-8c0e-c9a0c081a0f7",
        "authorId" : "bc64d4e0-cb2a-441e-bbc9-3418c8e7c7e6",
        "body" : "In the [`Map`object](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/4b51763cdda43057b20a89a00b61a1f34d6fe4d5/types/googlemaps/reference/map.d.ts#L168-L169), I used this so as not to break backward compatibility. [`MVCObject`](https://developers.google.com/maps/documentation/javascript/reference/event#MVCObject) has no events.\r\n\r\nI can replace it with:\r\n\r\n```suggestion\r\n        /** @deprecated */\r\n        addListener(eventName: string, handler: MVCEventHandler<this, any[]>): MapsEventListener;\r\n```\r\n\r\nDo you propose to remove it altogether?\r\n\r\n",
        "createdAt" : "2020-06-06T18:31:29Z",
        "updatedAt" : "2020-06-12T18:13:39Z",
        "lastEditedBy" : "bc64d4e0-cb2a-441e-bbc9-3418c8e7c7e6",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdc59e889edbb1ebc08427846172f2dd1bef0388",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +71,75 @@        ): MapsEventListener;\n\n        addListener(eventName: string, handler: MVCEventHandler<this, unknown[]>): MapsEventListener;\n\n        /**"
  },
  {
    "id" : "7e09ed33-eb95-4acd-84f3-c60f2cd73aa4",
    "prId" : 45331,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/45331#pullrequestreview-425759008",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98f6b4bc-6e64-4bd9-9291-a36d7ca1b065",
        "parentId" : null,
        "authorId" : "aaa17825-d55b-4b56-adcd-d9abf5b5ba30",
        "body" : "Why are these arrays?",
        "createdAt" : "2020-06-06T17:29:21Z",
        "updatedAt" : "2020-06-12T18:13:39Z",
        "lastEditedBy" : "aaa17825-d55b-4b56-adcd-d9abf5b5ba30",
        "tags" : [
        ]
      },
      {
        "id" : "719051c4-2a85-4dfc-853c-4404b0ba03ba",
        "parentId" : "98f6b4bc-6e64-4bd9-9291-a36d7ca1b065",
        "authorId" : "bc64d4e0-cb2a-441e-bbc9-3418c8e7c7e6",
        "body" : "Some events ([example](https://developers.google.com/maps/documentation/javascript/reference/event#MVCArray.remove_at)) have more than one argument. I began to apply a similar approach on the [`Map` events](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/4b51763cdda43057b20a89a00b61a1f34d6fe4d5/types/googlemaps/reference/map.d.ts#L2-L133). This was done for consistency.\r\n\r\n\r\n",
        "createdAt" : "2020-06-06T18:20:24Z",
        "updatedAt" : "2020-06-12T18:13:39Z",
        "lastEditedBy" : "bc64d4e0-cb2a-441e-bbc9-3418c8e7c7e6",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdc59e889edbb1ebc08427846172f2dd1bef0388",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +6,10 @@         * @see {@link InfoWindow#close}\n         */\n        closeclick: [];\n\n        /**"
  },
  {
    "id" : "4d5d229a-be92-432d-8a31-636fb3fc976e",
    "prId" : 48425,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/48425#pullrequestreview-502423676",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6bd737b7-5ec2-49b9-910d-98ca7465757f",
        "parentId" : null,
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "I'm not sure I understand how this property could go from being an empty tuple to being a function, but maybe it makes sense in the context of the library?  From the doc link, it seems like the old type might just have been incorrect?",
        "createdAt" : "2020-10-02T22:10:47Z",
        "updatedAt" : "2020-10-03T09:15:04Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      },
      {
        "id" : "ff518d4f-fb24-469f-bb6a-cd706c77cbd2",
        "parentId" : "6bd737b7-5ec2-49b9-910d-98ca7465757f",
        "authorId" : "bc64d4e0-cb2a-441e-bbc9-3418c8e7c7e6",
        "body" : "Earlier I used `MVCEventHandler` to expand a tuple in a function.\r\n\r\n```ts\r\ntype MVCEventHandler<T extends MVCObject, A extends any[]> = (this: T, ...args: A) => void;\r\n```\r\n\r\n```ts\r\naddListener<N extends keyof InfoWindowHandlerMap>(\r\n    eventName: N,\r\n    handler: MVCEventHandler<this, InfoWindowHandlerMap[N]>,\r\n): MapsEventListener;\r\n```\r\n\r\nFor now, I just expanded this type to eliminate the empty tuple problem.\r\n\r\n```ts\r\naddListener<N extends keyof InfoWindowHandlerMap<this>>(\r\n    eventName: N,\r\n    handler: InfoWindowHandlerMap<this>[N],\r\n): MapsEventListener;\r\n```\r\n\r\nI've added tests that check the correctness of types in the handlers. In version <3.5 they are evaluated in `any`. So it looks like the minimum version is 3.5. Or we will have to use overloads, which I really would not like.\r\n",
        "createdAt" : "2020-10-03T09:15:17Z",
        "updatedAt" : "2020-10-03T09:15:17Z",
        "lastEditedBy" : "bc64d4e0-cb2a-441e-bbc9-3418c8e7c7e6",
        "tags" : [
        ]
      },
      {
        "id" : "5b339fb0-7b06-49bf-b2f1-bcaeb1420b5d",
        "parentId" : "6bd737b7-5ec2-49b9-910d-98ca7465757f",
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "I see - the type used to map handler names to the types of their arguments, but now it maps to their function types.  I thought this was directly modelling the underlying library.",
        "createdAt" : "2020-10-05T21:00:32Z",
        "updatedAt" : "2020-10-05T21:00:32Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      },
      {
        "id" : "495a9c72-ccfd-4c1b-b83b-5af8e99568fe",
        "parentId" : "6bd737b7-5ec2-49b9-910d-98ca7465757f",
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "I guess I would intuitively have expected overloads, but this seems okay.",
        "createdAt" : "2020-10-05T21:10:56Z",
        "updatedAt" : "2020-10-05T21:10:56Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c2bc7a0d7611e44491e64f86c47559a65999614",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +6,10 @@         * @see {@link InfoWindow#close}\n         */\n        closeclick: (this: T) => void;\n\n        /**"
  }
]