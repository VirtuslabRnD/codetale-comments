[
  {
    "id" : "f556fdef-7eb1-4b30-8bfc-6a137c258da0",
    "prId" : 37955,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/37955#pullrequestreview-280516847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ca2153e-eea4-48b4-8772-5058df50d295",
        "parentId" : null,
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "I'm probably missing something obvious but, if you pass a `number[]` and no `dtype`, do you get `number[]` or `Float64Array`?",
        "createdAt" : "2019-08-27T22:36:34Z",
        "updatedAt" : "2019-08-27T22:55:36Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      },
      {
        "id" : "bd850d0e-6e4f-4af6-9963-3c8f1834ef80",
        "parentId" : "8ca2153e-eea4-48b4-8772-5058df50d295",
        "authorId" : "a6035c5d-fa41-4208-bb20-34a2cb966a6c",
        "body" : "You get a `number[]` per my tests of the library if no `dtype` is specified, and if you do specify a `dtype` you get a type corresponding to that value.\r\n\r\nHowever, if you pass a specific type of array (like `Float32Array`) and don't specify a `dtype` then you get a `Float64Array`. Slightly confusing to me as well, but like I said I tested these cases manually to make sure.",
        "createdAt" : "2019-08-27T22:53:46Z",
        "updatedAt" : "2019-08-27T22:56:45Z",
        "lastEditedBy" : "a6035c5d-fa41-4208-bb20-34a2cb966a6c",
        "tags" : [
        ]
      },
      {
        "id" : "91b7ddb3-25ad-4a96-92c3-4f6e52acc7b2",
        "parentId" : "8ca2153e-eea4-48b4-8772-5058df50d295",
        "authorId" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "body" : "Thanks for confirming!",
        "createdAt" : "2019-08-27T23:05:14Z",
        "updatedAt" : "2019-08-27T23:05:14Z",
        "lastEditedBy" : "e5ae6fc6-9e2b-4b96-8480-7066f2f51e54",
        "tags" : [
        ]
      }
    ],
    "commit" : "33e5497d44431de898f75e05dc7e82ec4e59d8a0",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +6,10 @@\ndeclare function quantile(p: number, options?: Options): number;\ndeclare function quantile(p: number[], options?: Options & { dtype?: undefined }): number[];\ndeclare function quantile(p: Data, options?: Options & { dtype?: 'float64' }): Float64Array;\ndeclare function quantile(p: Data, options: Options & { dtype: 'int8' }): Int8Array;"
  }
]