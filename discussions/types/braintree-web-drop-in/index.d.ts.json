[
  {
    "id" : "e0dc2367-7c91-406b-91b8-b6951e05f6ed",
    "prId" : 35759,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/35759#pullrequestreview-250858480",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18ab1f3e-ca02-4728-ad9b-8fee34b4b5ac",
        "parentId" : null,
        "authorId" : "9ff3a857-4ac9-4a7e-b447-d0a2f6573899",
        "body" : "I think a more appropriate version of this would be\r\n\r\n```ts\r\nexport as namespace braintree;\r\n```\r\n\r\nsince it appears to be conditionally exposed as a global. Once that's fixed I think we can pull this in.",
        "createdAt" : "2019-06-17T18:16:59Z",
        "updatedAt" : "2019-06-17T18:16:59Z",
        "lastEditedBy" : "9ff3a857-4ac9-4a7e-b447-d0a2f6573899",
        "tags" : [
        ]
      },
      {
        "id" : "254049de-8ca5-465d-badd-a77996f9568a",
        "parentId" : "18ab1f3e-ca02-4728-ad9b-8fee34b4b5ac",
        "authorId" : "b71ef01b-97e0-4194-b601-09c98c75e144",
        "body" : "In a module, the user would have to import 'braintree-web-drop-in', and then access it like `dropin.create()`, but globally the user would access it as an extension of [Braintree's main module](https://github.com/braintree/braintree_node) like so `braintree.dropin.create()`\r\nUsing `declare global` I can make the `braintree` type declaration related to the global context, not to the current module.\r\n`export as namespace braintree` wouldn't work here since `braintree` is not the module being exported, but `dropin` is.",
        "createdAt" : "2019-06-18T04:50:56Z",
        "updatedAt" : "2019-06-18T04:51:26Z",
        "lastEditedBy" : "b71ef01b-97e0-4194-b601-09c98c75e144",
        "tags" : [
        ]
      }
    ],
    "commit" : "1225536d7e44a41870136edaf34d530b8c193113",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +121,125 @@// Global\n\ndeclare global {\n    const braintree: {\n        dropin: {"
  }
]