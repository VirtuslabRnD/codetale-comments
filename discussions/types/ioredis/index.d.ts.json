[
  {
    "id" : "81db1fad-b8b6-4f84-8b0f-db1f6ab1c876",
    "prId" : 21539,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/21539#pullrequestreview-77002249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b26c0f2f-406b-446b-999b-22f22c9e734c",
        "parentId" : null,
        "authorId" : "8ba1e2c7-af47-4347-8135-e64317e2728d",
        "body" : "Looks good, except need to add one override function of `multi(options: MultiOptions): Pipeline;`, because I see a code example of `redis.multi({ pipeline: false });`",
        "createdAt" : "2017-11-15T23:21:44Z",
        "updatedAt" : "2017-11-16T03:47:17Z",
        "lastEditedBy" : "8ba1e2c7-af47-4347-8135-e64317e2728d",
        "tags" : [
        ]
      },
      {
        "id" : "fedd90fb-c94d-4a7f-9ad7-689466b7a9f4",
        "parentId" : "b26c0f2f-406b-446b-999b-22f22c9e734c",
        "authorId" : "e8101388-2a61-4b3d-aa83-abd1c9818e0d",
        "body" : "How about `multi(options: { pipeline: false }): Promise<string>`? I tried it and it doesn't take a callback with `pipeline: false` (and no array commands either) so this could be the only overload needed.",
        "createdAt" : "2017-11-16T03:07:02Z",
        "updatedAt" : "2017-11-16T03:47:17Z",
        "lastEditedBy" : "e8101388-2a61-4b3d-aa83-abd1c9818e0d",
        "tags" : [
        ]
      },
      {
        "id" : "70565583-b1af-4cfb-a71f-584bcbd80b27",
        "parentId" : "b26c0f2f-406b-446b-999b-22f22c9e734c",
        "authorId" : "8ba1e2c7-af47-4347-8135-e64317e2728d",
        "body" : "OK",
        "createdAt" : "2017-11-16T03:37:44Z",
        "updatedAt" : "2017-11-16T03:47:17Z",
        "lastEditedBy" : "8ba1e2c7-af47-4347-8135-e64317e2728d",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e61489f7dee34227e77cc0afeb5c34107822e3c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +346,350 @@        type(key: string): Promise<string>;\n\n        multi(commands?: string[][], options?: MultiOptions): Pipeline;\n        multi(options: { pipeline: false }): Promise<string>;\n"
  },
  {
    "id" : "f2ef950f-bb42-40a7-b7cb-635ca43d3f03",
    "prId" : 27870,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/27870#pullrequestreview-143377302",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2bd70573-bd97-410c-b508-9b57e929b528",
        "parentId" : null,
        "authorId" : "8ba1e2c7-af47-4347-8135-e64317e2728d",
        "body" : "I don't know the `setBuffer` comes from, you can set buffer by just `set`",
        "createdAt" : "2018-08-04T08:38:26Z",
        "updatedAt" : "2018-08-04T08:38:33Z",
        "lastEditedBy" : "8ba1e2c7-af47-4347-8135-e64317e2728d",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf4e2e21be321cfa218e68e47f7ac493917bc940",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +78,82 @@        set(key: string, value: any, expiryMode: string, time: number | string, setMode: number | string, callback: (err: Error, res: string) => void): void;\n\n        setBuffer(key: string, value: any, expiryMode?: string | any[], time?: number | string, setMode?: number | string): Promise<Buffer>;\n\n        setBuffer(key: string, value: any, callback: (err: Error, res: Buffer) => void): void;"
  }
]