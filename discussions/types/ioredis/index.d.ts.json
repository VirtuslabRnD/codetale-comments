[
  {
    "id" : "81db1fad-b8b6-4f84-8b0f-db1f6ab1c876",
    "prId" : 21539,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/21539#pullrequestreview-77002249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b26c0f2f-406b-446b-999b-22f22c9e734c",
        "parentId" : null,
        "authorId" : "8ba1e2c7-af47-4347-8135-e64317e2728d",
        "body" : "Looks good, except need to add one override function of `multi(options: MultiOptions): Pipeline;`, because I see a code example of `redis.multi({ pipeline: false });`",
        "createdAt" : "2017-11-15T23:21:44Z",
        "updatedAt" : "2017-11-16T03:47:17Z",
        "lastEditedBy" : "8ba1e2c7-af47-4347-8135-e64317e2728d",
        "tags" : [
        ]
      },
      {
        "id" : "fedd90fb-c94d-4a7f-9ad7-689466b7a9f4",
        "parentId" : "b26c0f2f-406b-446b-999b-22f22c9e734c",
        "authorId" : "e8101388-2a61-4b3d-aa83-abd1c9818e0d",
        "body" : "How about `multi(options: { pipeline: false }): Promise<string>`? I tried it and it doesn't take a callback with `pipeline: false` (and no array commands either) so this could be the only overload needed.",
        "createdAt" : "2017-11-16T03:07:02Z",
        "updatedAt" : "2017-11-16T03:47:17Z",
        "lastEditedBy" : "e8101388-2a61-4b3d-aa83-abd1c9818e0d",
        "tags" : [
        ]
      },
      {
        "id" : "70565583-b1af-4cfb-a71f-584bcbd80b27",
        "parentId" : "b26c0f2f-406b-446b-999b-22f22c9e734c",
        "authorId" : "8ba1e2c7-af47-4347-8135-e64317e2728d",
        "body" : "OK",
        "createdAt" : "2017-11-16T03:37:44Z",
        "updatedAt" : "2017-11-16T03:47:17Z",
        "lastEditedBy" : "8ba1e2c7-af47-4347-8135-e64317e2728d",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e61489f7dee34227e77cc0afeb5c34107822e3c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +346,350 @@        type(key: string): Promise<string>;\n\n        multi(commands?: string[][], options?: MultiOptions): Pipeline;\n        multi(options: { pipeline: false }): Promise<string>;\n"
  },
  {
    "id" : "f2ef950f-bb42-40a7-b7cb-635ca43d3f03",
    "prId" : 27870,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/27870#pullrequestreview-143377302",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2bd70573-bd97-410c-b508-9b57e929b528",
        "parentId" : null,
        "authorId" : "8ba1e2c7-af47-4347-8135-e64317e2728d",
        "body" : "I don't know the `setBuffer` comes from, you can set buffer by just `set`",
        "createdAt" : "2018-08-04T08:38:26Z",
        "updatedAt" : "2018-08-04T08:38:33Z",
        "lastEditedBy" : "8ba1e2c7-af47-4347-8135-e64317e2728d",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf4e2e21be321cfa218e68e47f7ac493917bc940",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +78,82 @@        set(key: string, value: any, expiryMode: string, time: number | string, setMode: number | string, callback: (err: Error, res: string) => void): void;\n\n        setBuffer(key: string, value: any, expiryMode?: string | any[], time?: number | string, setMode?: number | string): Promise<Buffer>;\n\n        setBuffer(key: string, value: any, callback: (err: Error, res: Buffer) => void): void;"
  },
  {
    "id" : "020d5b71-5156-4b56-a55d-a1061978c0dc",
    "prId" : 33655,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/33655#pullrequestreview-211526455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00194f61-4e2a-430c-9010-ea8063f32fa1",
        "parentId" : null,
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "Doesn't the cluster implement more or less *all* methods the regular `Redis` interface has?\r\nIt should probably inherit those methods from a shared interface rather than copy/pasting it since it seems many more are missing.",
        "createdAt" : "2019-03-06T16:18:14Z",
        "updatedAt" : "2019-03-06T16:18:14Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      },
      {
        "id" : "eca6a24e-6bd0-44e7-ad03-f1e91dc6a35f",
        "parentId" : "00194f61-4e2a-430c-9010-ea8063f32fa1",
        "authorId" : "7dd12df6-0cce-4e62-bf0c-6be7481b0134",
        "body" : "I haven't had a chance to fully go through all of the ioredis code, but it looks like you are correct. I am unsure as to how these are added right now, possibly through the [transaction module](https://github.com/luin/ioredis/blob/dff3fe9b2a3e9d9a260637e020e701a570c34fe4/lib/transaction.ts). I also see it importing commands from [redis-commands](https://github.com/luin/ioredis/blob/dff3fe9b2a3e9d9a260637e020e701a570c34fe4/lib/cluster/index.ts#L15), as well.",
        "createdAt" : "2019-03-06T17:05:49Z",
        "updatedAt" : "2019-03-06T17:05:49Z",
        "lastEditedBy" : "7dd12df6-0cce-4e62-bf0c-6be7481b0134",
        "tags" : [
        ]
      },
      {
        "id" : "443f639d-3b24-4ab8-b4fe-57a76074f15f",
        "parentId" : "00194f61-4e2a-430c-9010-ea8063f32fa1",
        "authorId" : "7dd12df6-0cce-4e62-bf0c-6be7481b0134",
        "body" : "After another quick look, it looks like there are a lot of shared methods between the Redis and Pipeline interfaces, as well. This could be a much bigger issue that originally thought.\r\n\r\nAll I wanted was to be able to use the Cluster interface correctly! Ha! ðŸ˜¸ ",
        "createdAt" : "2019-03-06T19:07:09Z",
        "updatedAt" : "2019-03-06T19:07:10Z",
        "lastEditedBy" : "7dd12df6-0cce-4e62-bf0c-6be7481b0134",
        "tags" : [
        ]
      },
      {
        "id" : "a9c71bc0-4ec7-415f-b35d-1c11c35047ca",
        "parentId" : "00194f61-4e2a-430c-9010-ea8063f32fa1",
        "authorId" : "e04aed50-3644-4f8a-83e3-5c7dce141262",
        "body" : "Yeah according to the code in ioredis it takes all but the monitor command from `redis-commands` and dynamically adds them all to the `Commander.prototype` which `Cluster` extends\r\nhttps://github.com/luin/ioredis/blob/master/lib/commander.js#L59",
        "createdAt" : "2019-03-06T23:13:05Z",
        "updatedAt" : "2019-03-06T23:13:06Z",
        "lastEditedBy" : "e04aed50-3644-4f8a-83e3-5c7dce141262",
        "tags" : [
        ]
      }
    ],
    "commit" : "650db0ffc6057247521f3765bfa30dc432b86d18",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +882,886 @@        disconnect(): void;\n        nodes(role?: NodeRole): Redis[];\n        quit(callback?: CallbackFunction<'OK'>): Promise<'OK'>;\n        get(key: KeyType, callback: (err: Error, res: string | null) => void): void;\n        get(key: KeyType): Promise<string | null>;"
  },
  {
    "id" : "1d28453b-ee44-4972-af94-ff6cb9f2bb2e",
    "prId" : 40966,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/40966#pullrequestreview-345456177",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb2543b0-db5e-41c4-861f-3ad453fa4db1",
        "parentId" : null,
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "That should be `{ [key: string]: string | number }` iirc",
        "createdAt" : "2019-12-11T17:46:16Z",
        "updatedAt" : "2019-12-12T04:46:01Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      },
      {
        "id" : "e148961e-ff73-4b3d-84dc-dbcb7b726f36",
        "parentId" : "eb2543b0-db5e-41c4-861f-3ad453fa4db1",
        "authorId" : "8ab26056-39c9-40b3-a1ed-e81b76c9a9f5",
        "body" : "fixed it",
        "createdAt" : "2019-12-12T04:46:30Z",
        "updatedAt" : "2019-12-12T04:55:34Z",
        "lastEditedBy" : "8ab26056-39c9-40b3-a1ed-e81b76c9a9f5",
        "tags" : [
        ]
      },
      {
        "id" : "af7c89e3-45d8-4e8a-bb21-ef9c4914f135",
        "parentId" : "eb2543b0-db5e-41c4-861f-3ad453fa4db1",
        "authorId" : "2c5b9b72-5872-4ac4-848a-3342c1618892",
        "body" : "This is completely wrong. Should I create another pull request fixing an already merged pull request?",
        "createdAt" : "2020-01-20T15:04:10Z",
        "updatedAt" : "2020-01-20T15:04:11Z",
        "lastEditedBy" : "2c5b9b72-5872-4ac4-848a-3342c1618892",
        "tags" : [
        ]
      },
      {
        "id" : "5752ccd0-56ef-4f4c-97dc-daf910c9f36b",
        "parentId" : "eb2543b0-db5e-41c4-861f-3ad453fa4db1",
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "No you would open a new one.\r\nMy bad for suggesting the wrong type here, got it mixed up with something else.",
        "createdAt" : "2020-01-20T17:32:55Z",
        "updatedAt" : "2020-01-20T17:32:56Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3e255236d34ab03de32dd3581c0737575955311",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +323,327 @@        hvals(key: KeyType, callback: (err: Error, res: string[]) => void): void;\n        hvals(key: KeyType): Promise<string[]>;\n\n        hgetall(key: KeyType, callback: (err: Error, res: { [key: string]: string | number }) => void): void;\n        hgetall(key: KeyType): Promise<{ [key: string]: string | number }>;"
  }
]