[
  {
    "id" : "b1e78112-b740-4c8d-89b3-24e7bf5f4c61",
    "prId" : 35037,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/35037#pullrequestreview-231466434",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38cfc718-bfc0-422e-ac9d-88eaf21791a6",
        "parentId" : null,
        "authorId" : "aa6f61fb-7b06-4981-b042-0efbb80f5578",
        "body" : "same for `'REMOVE' | 'ADD' | 'UPDATE'` will be helpful.",
        "createdAt" : "2019-04-27T11:53:33Z",
        "updatedAt" : "2019-04-27T11:54:19Z",
        "lastEditedBy" : "aa6f61fb-7b06-4981-b042-0efbb80f5578",
        "tags" : [
        ]
      },
      {
        "id" : "ffdd8465-24cb-4568-abc3-f6dba6d806a4",
        "parentId" : "38cfc718-bfc0-422e-ac9d-88eaf21791a6",
        "authorId" : "df8f9670-27d6-4dc5-8013-1ee46aadbf17",
        "body" : "From what I've read string literal types are the way to go (https://medium.com/@katbusch/typescript-enums-explained-e5f9a101afc9): \r\n\r\n```\r\nRecommendation\r\nSo of the many types of enums which do I recommend using?\r\n\r\nTrick question: none.\r\n\r\nI recommend string literal types. It’s more TypeScripty. It’s extremely readable. You can see it in the code as is. If you print the value of a variable you won’t get a mysterious 0 or 1; you’ll get the actual string itself every time.\r\n\r\n```\r\n",
        "createdAt" : "2019-04-27T20:55:09Z",
        "updatedAt" : "2019-04-27T20:55:09Z",
        "lastEditedBy" : "df8f9670-27d6-4dc5-8013-1ee46aadbf17",
        "tags" : [
        ]
      },
      {
        "id" : "1e47420c-2b64-42e8-a601-d832c21c3313",
        "parentId" : "38cfc718-bfc0-422e-ac9d-88eaf21791a6",
        "authorId" : "aa6f61fb-7b06-4981-b042-0efbb80f5578",
        "body" : "some enum like https://github.com/DefinitelyTyped/DefinitelyTyped/blob/5344bfc80508c53a23dae37b860fb0c905ff7b24/types/pinterest-sdk/index.d.ts#L13",
        "createdAt" : "2019-04-28T12:35:30Z",
        "updatedAt" : "2019-04-28T12:35:30Z",
        "lastEditedBy" : "aa6f61fb-7b06-4981-b042-0efbb80f5578",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d68a3d694d4ea6fd9869e795d43efb15eb12f00",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@\n        interface UpdateEvent {\n            action: 'REMOVE' | 'ADD' | 'UPDATE';\n            id: any;\n            rev: any;"
  },
  {
    "id" : "721f42bf-0406-4f77-a766-d9fafc5fbd5f",
    "prId" : 35037,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/35037#pullrequestreview-231466375",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a4cb5bd-43a9-4b1a-bb80-fc620b5c30c4",
        "parentId" : null,
        "authorId" : "aa6f61fb-7b06-4981-b042-0efbb80f5578",
        "body" : "I think that declare an enum for `'sort' | 'skip'| 'limit'` will be helpful.",
        "createdAt" : "2019-04-27T11:54:07Z",
        "updatedAt" : "2019-04-27T11:56:10Z",
        "lastEditedBy" : "aa6f61fb-7b06-4981-b042-0efbb80f5578",
        "tags" : [
        ]
      },
      {
        "id" : "1fc78340-9311-4d6e-8165-bf210be4f656",
        "parentId" : "8a4cb5bd-43a9-4b1a-bb80-fc620b5c30c4",
        "authorId" : "df8f9670-27d6-4dc5-8013-1ee46aadbf17",
        "body" : "These are the keys of the interface that I'm picking. Can you give an example of how you would handle this with an enum? ",
        "createdAt" : "2019-04-27T20:57:23Z",
        "updatedAt" : "2019-04-27T20:57:24Z",
        "lastEditedBy" : "df8f9670-27d6-4dc5-8013-1ee46aadbf17",
        "tags" : [
        ]
      },
      {
        "id" : "5425d717-d0ab-41d0-9137-56c9e28a6259",
        "parentId" : "8a4cb5bd-43a9-4b1a-bb80-fc620b5c30c4",
        "authorId" : "aa6f61fb-7b06-4981-b042-0efbb80f5578",
        "body" : "What about something like https://github.com/DefinitelyTyped/DefinitelyTyped/blob/5344bfc80508c53a23dae37b860fb0c905ff7b24/types/pinterest-sdk/index.d.ts#L13",
        "createdAt" : "2019-04-28T12:34:20Z",
        "updatedAt" : "2019-04-28T12:34:20Z",
        "lastEditedBy" : "aa6f61fb-7b06-4981-b042-0efbb80f5578",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d68a3d694d4ea6fd9869e795d43efb15eb12f00",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@        }\n\n        interface PaginateOptions<Content extends {}> extends Pick<Find.FindRequest<Content>, 'sort' | 'skip'| 'limit'> {}\n\n        interface UpdateEvent {"
  }
]