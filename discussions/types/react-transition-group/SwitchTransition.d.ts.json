[
  {
    "id" : "8f365aa1-a49c-402e-b32e-a236d3cd8c7e",
    "prId" : 37061,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/37061#pullrequestreview-265410175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a23924a-be03-4270-8342-c57412119ed4",
        "parentId" : null,
        "authorId" : "18c3385b-1c48-4dba-98e8-0c25c3ef76f1",
        "body" : "It seems possible to use `enum modes` here instead of string literals. What about?\r\n\r\n```suggestion\r\n    mode?: modes\r\n```",
        "createdAt" : "2019-07-23T00:38:37Z",
        "updatedAt" : "2019-07-23T01:05:57Z",
        "lastEditedBy" : "18c3385b-1c48-4dba-98e8-0c25c3ef76f1",
        "tags" : [
        ]
      },
      {
        "id" : "ffdc5de6-bc7d-45b3-a2ac-abe2ebe0e3b9",
        "parentId" : "0a23924a-be03-4270-8342-c57412119ed4",
        "authorId" : "fbe048a8-eb45-498f-a972-ad89f1af9e39",
        "body" : "Hey there üëã \r\n\r\nI did try this, but TypeScript is pretty strict when I change it to this, and will require that you always use the `enum modes` export when you pass in the React prop. \r\n\r\nSo the following example would be a type error:\r\n```tsx\r\nimport SwitchTransition from 'react-transition-group/SwitchTransition';\r\n\r\n// results in type error. it seems TypeScript is currently unable to\r\n// statically analyze string literals to see if they match the enum\r\n<SwitchTransition mode=\"in-out\">\r\n  {...}\r\n</SwitchTransition>\r\n```\r\n\r\nWhereas this would not result in an error:\r\n```tsx\r\nimport SwitchTransition, { modes } from 'react-transition-group/SwitchTransition';\r\n\r\n// we're using the enum directly, so this is üëåüèº\r\n<SwitchTransition mode={modes.in}>\r\n  {...}\r\n</SwitchTransition>\r\n```\r\n\r\nThe fix was to type out the union type manually (which seems okay for now).",
        "createdAt" : "2019-07-23T01:05:47Z",
        "updatedAt" : "2019-07-23T01:15:33Z",
        "lastEditedBy" : "fbe048a8-eb45-498f-a972-ad89f1af9e39",
        "tags" : [
        ]
      },
      {
        "id" : "de49d24e-4721-4db7-99f7-1f165a5e417c",
        "parentId" : "0a23924a-be03-4270-8342-c57412119ed4",
        "authorId" : "18c3385b-1c48-4dba-98e8-0c25c3ef76f1",
        "body" : "I seeüëç",
        "createdAt" : "2019-07-23T01:28:54Z",
        "updatedAt" : "2019-07-23T01:28:54Z",
        "lastEditedBy" : "18c3385b-1c48-4dba-98e8-0c25c3ef76f1",
        "tags" : [
        ]
      },
      {
        "id" : "dfed3380-a8e2-41bb-aba6-5a01e99bf5ab",
        "parentId" : "0a23924a-be03-4270-8342-c57412119ed4",
        "authorId" : "89cdd852-7a5d-446e-87f9-8897c4372dcf",
        "body" : "If I can weigh in on this, I think it's much better to allow the string ( `<SwitchTransition mode=\"in-out\">` ), since it will \r\n\r\n* be more in line with the official docs\r\n* be easier to type (no need to figure out the import)\r\n* have the same type safety (invalid values still not allowed)",
        "createdAt" : "2019-07-23T13:18:09Z",
        "updatedAt" : "2019-07-23T13:19:09Z",
        "lastEditedBy" : "89cdd852-7a5d-446e-87f9-8897c4372dcf",
        "tags" : [
        ]
      },
      {
        "id" : "fba9ec02-f217-4d13-a10e-dcf20f358d0a",
        "parentId" : "0a23924a-be03-4270-8342-c57412119ed4",
        "authorId" : "fbe048a8-eb45-498f-a972-ad89f1af9e39",
        "body" : "Agreed. I've left this as is, so the current state of this PR implements the behavior you're describing üëç",
        "createdAt" : "2019-07-23T13:26:34Z",
        "updatedAt" : "2019-07-23T13:26:34Z",
        "lastEditedBy" : "fbe048a8-eb45-498f-a972-ad89f1af9e39",
        "tags" : [
        ]
      },
      {
        "id" : "1f3e2b06-a72e-4506-ac88-f167b5d522cc",
        "parentId" : "0a23924a-be03-4270-8342-c57412119ed4",
        "authorId" : "89cdd852-7a5d-446e-87f9-8897c4372dcf",
        "body" : "Ah, ok, good to hear!",
        "createdAt" : "2019-07-23T13:34:03Z",
        "updatedAt" : "2019-07-23T13:34:04Z",
        "lastEditedBy" : "89cdd852-7a5d-446e-87f9-8897c4372dcf",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6b084236c7ddc7d9e39a685201ae662d4dbf0b4",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@     * `in-out`: New element transitions in first, then when complete, the current element transitions out.\n     */\n    mode?: 'out-in' | 'in-out';\n\n    /**"
  }
]