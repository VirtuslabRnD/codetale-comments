[
  {
    "id" : "8a9c9887-0351-4623-8f12-cc466163792a",
    "prId" : 15925,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/15925#pullrequestreview-33359772",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9204cd99-9aa8-4371-80ba-920ab4ab369e",
        "parentId" : null,
        "authorId" : "f9e56eaa-a396-496c-9ce3-4dbef4f4a755",
        "body" : "I feel `MarkerInstance` was a bit nicer than everyone having to do this big cast to get the element. Can we make this nicer somehow?",
        "createdAt" : "2017-04-18T01:18:59Z",
        "updatedAt" : "2017-04-18T21:53:27Z",
        "lastEditedBy" : "f9e56eaa-a396-496c-9ce3-4dbef4f4a755",
        "tags" : [
        ]
      },
      {
        "id" : "6be8219d-7b06-4b29-90fe-00cabc84fd93",
        "parentId" : "9204cd99-9aa8-4371-80ba-920ab4ab369e",
        "authorId" : "8040dfa8-e8fb-4822-a818-93811aae27b9",
        "body" : "I introduced type parameters to get better type checking on extensions to react-leaflet classes. They allow extending classes to pass custom prop types and custom leafletElement types to inherited members. Unfortunately, this introduces a bit of extra syntax in cases like the one referenced above. It would be possible to reintroduce a `MarkerInstance` type that simply uses the default type parameters `MarkerProps` and `Leaflet.Marker`. I see two problems with this, though:\r\n1. If we create `MapInstance` and `MarkerInstance` types, as in the present version, why stop there? For consistency, there should ideally be such -`Instance` types for _every_ react-leaflet class.\r\n2. Because I've defined `Map`, `Marker`, and indeed every react-leaflet component as a true TypeScript class rather than a `const` representing the constructor, defining separate types for their instances seems unnecessary, since the type of the instance is the same as the type of the class.",
        "createdAt" : "2017-04-18T21:46:15Z",
        "updatedAt" : "2017-04-18T21:53:27Z",
        "lastEditedBy" : "8040dfa8-e8fb-4822-a818-93811aae27b9",
        "tags" : [
        ]
      }
    ],
    "commit" : "11cd4d018921ff6d84e9855e4b85ea4c48afe5f1",
    "line" : 233,
    "diffHunk" : "@@ -1,1 +250,254 @@            lat,\n            lng,\n        } = (this.refs.marker as Marker<MarkerProps, Leaflet.Marker>).leafletElement.getLatLng();\n        this.setState({\n            marker: { lat, lng },"
  },
  {
    "id" : "52d87058-d646-43d1-a034-fd5efb0d35a9",
    "prId" : 51553,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/51553#pullrequestreview-605869077",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ce83c0e-e677-452b-828e-d042e6c0ac24",
        "parentId" : null,
        "authorId" : "060d300f-1089-4bac-86a3-861ec8a964f5",
        "body" : "I guess that this can just be squashed into the previous commit?",
        "createdAt" : "2021-03-07T11:46:46Z",
        "updatedAt" : "2021-03-07T15:17:21Z",
        "lastEditedBy" : "060d300f-1089-4bac-86a3-861ec8a964f5",
        "tags" : [
        ]
      },
      {
        "id" : "eb47d8a9-0364-44d6-ba0f-8e5d5433afa4",
        "parentId" : "4ce83c0e-e677-452b-828e-d042e6c0ac24",
        "authorId" : "63c38cd5-98dd-46e9-91d4-e12c5191b8be",
        "body" : "Done.",
        "createdAt" : "2021-03-07T17:47:43Z",
        "updatedAt" : "2021-03-07T17:47:44Z",
        "lastEditedBy" : "63c38cd5-98dd-46e9-91d4-e12c5191b8be",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef0d09dca12ddec15f421b630a4823247e4eb880",
    "line" : 174,
    "diffHunk" : "@@ -1,1 +1049,1053 @@        console.log(event.popup);\n    },\n};"
  },
  {
    "id" : "0bf738a3-aa80-4e92-85f3-4aaa31d80368",
    "prId" : 51553,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/51553#pullrequestreview-605893154",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf4f2111-e130-494b-adfe-396863555d7b",
        "parentId" : null,
        "authorId" : "8040dfa8-e8fb-4822-a818-93811aae27b9",
        "body" : "This is just an idea, but something like the following could be a more compact way of accomplishing the same thing:\r\n```typescript\r\nonclick: ({ target, originalEvent }: L.LeafletMouseEvent) => { }\r\n```",
        "createdAt" : "2021-03-07T22:39:16Z",
        "updatedAt" : "2021-03-07T22:39:33Z",
        "lastEditedBy" : "8040dfa8-e8fb-4822-a818-93811aae27b9",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef0d09dca12ddec15f421b630a4823247e4eb880",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +895,899 @@        console.log(event.target);\n        console.log(event.originalEvent);\n    },\n    ondblclick: (event: L.LeafletMouseEvent) => {\n        console.log(event);"
  }
]