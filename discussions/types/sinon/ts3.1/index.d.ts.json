[
  {
    "id" : "5341304b-8632-4b55-b54f-b76e619faf98",
    "prId" : 31948,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/31948#pullrequestreview-189996480",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2938397f-a61c-4b66-8d9d-3e1c59ab3918",
        "parentId" : null,
        "authorId" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "body" : "may be worth using `unknown[]`, though it wouldn't make a difference other than one less `any` :p",
        "createdAt" : "2019-01-07T20:33:23Z",
        "updatedAt" : "2019-01-07T20:33:23Z",
        "lastEditedBy" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "tags" : [
        ]
      },
      {
        "id" : "930c5371-2900-4a34-89b4-fdb8b367eafd",
        "parentId" : "2938397f-a61c-4b66-8d9d-3e1c59ab3918",
        "authorId" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "body" : "For arguments you pass it's pretty much irrelevant as `any` and `unknown` would be equivalent in this case, if it was the return value I'd agree.",
        "createdAt" : "2019-01-07T20:57:24Z",
        "updatedAt" : "2019-01-07T20:57:24Z",
        "lastEditedBy" : "4316e44d-461c-4e33-8f9e-87e705b6e3cc",
        "tags" : [
        ]
      },
      {
        "id" : "b2d15915-93e7-409c-a0e3-c1ae18ba9a72",
        "parentId" : "2938397f-a61c-4b66-8d9d-3e1c59ab3918",
        "authorId" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "body" : "Of course, as I had already mentioned it makes no difference but means one day we could have a no-any lint rule on which is nice. Just personal preference",
        "createdAt" : "2019-01-07T21:16:38Z",
        "updatedAt" : "2019-01-07T21:16:38Z",
        "lastEditedBy" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb292ea19ee36d2d0cf19605b24d6fcecf69db86",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +1445,1449 @@         * Requires the value to be in the specified array.\n         */\n        in(allowed: any[]): SinonMatcher;\n        /**\n         * Requires the value to strictly equal ref."
  }
]