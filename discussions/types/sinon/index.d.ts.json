[
  {
    "id" : "ae93e5ab-4b23-430c-910c-7cb149850f1f",
    "prId" : 15942,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/15942#pullrequestreview-33303366",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "acecd9ce-06f1-4097-ae75-38d564422fc3",
        "parentId" : null,
        "authorId" : "4793f071-7e81-45d9-a31c-b780467b4336",
        "body" : "I don't see any documentation on sinonjs.org for a getCalls() on the spy API, only getCall(). Can you provide a reference for this?\r\n\r\nI do see it's included in the Sinon source code, but I don't think that undocumented or private APIs are supposed to be included in typings. So this change might require clarification from the Sinon developers and a doc change before being accepted.\r\n\r\nAnyone more deeply involved with DefinitelyTyped please correct me on this if I'm wrong about what should be accepted!",
        "createdAt" : "2017-04-18T16:40:00Z",
        "updatedAt" : "2017-04-21T21:10:48Z",
        "lastEditedBy" : "4793f071-7e81-45d9-a31c-b780467b4336",
        "tags" : [
        ]
      },
      {
        "id" : "f7e5c51c-40e6-4cf3-95da-434919ad7090",
        "parentId" : "acecd9ce-06f1-4097-ae75-38d564422fc3",
        "authorId" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "body" : "In a well-documented package you shouldn't include something that's not documented, since it may change.",
        "createdAt" : "2017-04-18T17:50:58Z",
        "updatedAt" : "2017-04-21T21:10:48Z",
        "lastEditedBy" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3cdf5106d037dbe2553ee2df52f30039213e27d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +80,84 @@        invokeCallback(...args: any[]): void;\n        getCall(n: number): SinonSpyCall;\n        getCalls(): SinonSpyCall[];\n        reset(): void;\n        printf(format: string, ...args: any[]): string;"
  },
  {
    "id" : "b6589575-c052-4d23-bae4-05872142e7f8",
    "prId" : 16848,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/16848#pullrequestreview-41171044",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f67863b7-2344-4b4e-9abc-0ab4f89d1d36",
        "parentId" : null,
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "Not sure if we should add this here as in fact it's not working (see https://github.com/sinonjs/sinon/issues/922) and considered to be changed.",
        "createdAt" : "2017-05-31T06:34:15Z",
        "updatedAt" : "2017-05-31T06:38:47Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      },
      {
        "id" : "87f33882-ddc4-4219-a9e1-6d5705c85ad2",
        "parentId" : "f67863b7-2344-4b4e-9abc-0ab4f89d1d36",
        "authorId" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "body" : "I guess you're referring to both the previously existing `throws(type?: string)` and the newly added `throwsException(type?: string)`.\r\n\r\nIn which case, the referenced issue hasn't resulted in any changes yet. So whether or not it gets changed in future shouldn't matter as right now it is part of the API. We shouldn't be ignoring parts of the library because we expect it to be removed in future, as people may well be using it still.",
        "createdAt" : "2017-05-31T08:39:51Z",
        "updatedAt" : "2017-05-31T08:39:51Z",
        "lastEditedBy" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "tags" : [
        ]
      },
      {
        "id" : "81569db8-d594-426d-a17c-39b2317ef72a",
        "parentId" : "f67863b7-2344-4b4e-9abc-0ab4f89d1d36",
        "authorId" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "body" : "ok, fine with me.",
        "createdAt" : "2017-05-31T09:00:35Z",
        "updatedAt" : "2017-05-31T09:00:35Z",
        "lastEditedBy" : "e72002e7-e411-40da-ac47-9c0e8d147cda",
        "tags" : [
        ]
      }
    ],
    "commit" : "1993274533d32cfbd6b09cde827e871c62e889e6",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +116,120 @@        throws(obj: any): SinonStub;\n        throwsArg(index: number): SinonStub;\n        throwsException(type?: string): SinonStub;\n        throwsException(obj: any): SinonStub;\n        rejects(): SinonStub;"
  },
  {
    "id" : "03b82e58-ad08-4055-8914-faa6d04a0c29",
    "prId" : 21868,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/21868#pullrequestreview-81210914",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ae72605-1b8f-4968-838f-b2a9248b8560",
        "parentId" : null,
        "authorId" : "fc74639d-1d15-4cdd-9b04-982ab5000004",
        "body" : "Does this mean that `SinonFakeServer` will have optional fields for autoRespond, autoRespondAfter,...? That doesn't sound good. Couldn't we use TypeScript's `Partial` mapped type? All fields on `SinonFakeServerOptions` should be required and the `options` parameter should be of type `Partial<SinonFakeServerOptions>`",
        "createdAt" : "2017-11-30T16:14:53Z",
        "updatedAt" : "2017-11-30T16:15:53Z",
        "lastEditedBy" : "fc74639d-1d15-4cdd-9b04-982ab5000004",
        "tags" : [
        ]
      },
      {
        "id" : "50f06629-472f-4d11-a5e9-7675b3ea675d",
        "parentId" : "8ae72605-1b8f-4968-838f-b2a9248b8560",
        "authorId" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "body" : "The original types were wrong. These properties are optional already. In both the config object and the server instance. If you read the source of sinon's fake server, you'll see only the ones you pass get set, thus the others are undefined (optional). ",
        "createdAt" : "2017-11-30T16:53:18Z",
        "updatedAt" : "2017-11-30T16:53:18Z",
        "lastEditedBy" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "tags" : [
        ]
      },
      {
        "id" : "dcd69fc7-028c-4cbf-9436-1693516306d9",
        "parentId" : "8ae72605-1b8f-4968-838f-b2a9248b8560",
        "authorId" : "fc74639d-1d15-4cdd-9b04-982ab5000004",
        "body" : "Ah ok, than it's fine, thanks for the clarification :+1:",
        "createdAt" : "2017-11-30T20:14:18Z",
        "updatedAt" : "2017-11-30T20:14:18Z",
        "lastEditedBy" : "fc74639d-1d15-4cdd-9b04-982ab5000004",
        "tags" : [
        ]
      },
      {
        "id" : "4f33a74d-9a30-4bbc-85a4-9a6903eaae6f",
        "parentId" : "8ae72605-1b8f-4968-838f-b2a9248b8560",
        "authorId" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "body" : "@nicojs i think you need to approve the pr so the bot will mark it as mergeable. can you take a look?",
        "createdAt" : "2017-12-04T10:20:00Z",
        "updatedAt" : "2017-12-04T10:20:00Z",
        "lastEditedBy" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "tags" : [
        ]
      },
      {
        "id" : "c1f2f88c-c3ec-4279-a7e2-3e218845223d",
        "parentId" : "8ae72605-1b8f-4968-838f-b2a9248b8560",
        "authorId" : "fc74639d-1d15-4cdd-9b04-982ab5000004",
        "body" : "how? I just reacted with a thumbs up üëç ",
        "createdAt" : "2017-12-05T14:57:39Z",
        "updatedAt" : "2017-12-05T14:57:39Z",
        "lastEditedBy" : "fc74639d-1d15-4cdd-9b04-982ab5000004",
        "tags" : [
        ]
      }
    ],
    "commit" : "5593cde710e9e5c599880c5f8987e70cd4703b43",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +292,296 @@    }\n\n    interface SinonFakeServer extends SinonFakeServerOptions {\n        // Properties\n        getHTTPMethod(request: SinonFakeXMLHttpRequest): string;"
  },
  {
    "id" : "256a3e97-c95c-4523-8f03-8b44ca987be1",
    "prId" : 25491,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/25491#pullrequestreview-124192714",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "869bf9ea-a918-49fe-8071-6b1c740c8a8c",
        "parentId" : null,
        "authorId" : "b54acf2c-f89c-4e62-8310-6bf181eb8982",
        "body" : "Should the restore() method also be moved to SinonFakeXMLHttpRequestStatic?",
        "createdAt" : "2018-05-29T22:01:53Z",
        "updatedAt" : "2018-05-29T22:01:53Z",
        "lastEditedBy" : "b54acf2c-f89c-4e62-8310-6bf181eb8982",
        "tags" : [
        ]
      },
      {
        "id" : "dd1d39a8-e169-4228-81c2-a969a7334da5",
        "parentId" : "869bf9ea-a918-49fe-8071-6b1c740c8a8c",
        "authorId" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "body" : "@UselessPickles you would be correct it seems. this was leftover from what we had before, which was also wrong back then! \r\n\r\nlooks to me like sinon's fake XHR has `restore` as a static method, _not_ as an instance method, so this doesn't belong here at all. it belongs only on the static interface",
        "createdAt" : "2018-05-29T22:09:27Z",
        "updatedAt" : "2018-05-29T22:09:28Z",
        "lastEditedBy" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "tags" : [
        ]
      },
      {
        "id" : "77d94605-4879-43bf-a962-8e28595f87ac",
        "parentId" : "869bf9ea-a918-49fe-8071-6b1c740c8a8c",
        "authorId" : "b54acf2c-f89c-4e62-8310-6bf181eb8982",
        "body" : "Good to know I'm not insane :). This caused compiler errors for me, but I wasn't confident enough to submit my own PR for it.",
        "createdAt" : "2018-05-29T22:11:52Z",
        "updatedAt" : "2018-05-29T22:11:52Z",
        "lastEditedBy" : "b54acf2c-f89c-4e62-8310-6bf181eb8982",
        "tags" : [
        ]
      },
      {
        "id" : "a052b73d-8dc7-4c2f-bedf-d2ee3189497b",
        "parentId" : "869bf9ea-a918-49fe-8071-6b1c740c8a8c",
        "authorId" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "body" : "@UselessPickles  sorry if you had started on that, i just threw one up at #26119 ",
        "createdAt" : "2018-05-29T22:17:16Z",
        "updatedAt" : "2018-05-29T22:17:16Z",
        "lastEditedBy" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f42dcd22aa01bb0f18da58ac0c726d1cdf74f73a",
    "line" : 180,
    "diffHunk" : "@@ -1,1 +272,276 @@\n        // Methods\n        restore(): void;\n        setResponseHeaders(headers: any): void;\n        setResponseBody(body: string): void;"
  },
  {
    "id" : "6816d19b-712c-452f-a545-cf35d67df661",
    "prId" : 52297,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52297#pullrequestreview-632764839",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a162b8e4-544a-4989-ac6a-0823ae30f2b0",
        "parentId" : null,
        "authorId" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "body" : "this correctly will NOT have a `restore()` method - clocks made via `clock.create()` are \"raw\" fake-timers clocks which have no `restore` method (but do have `uninstall`).\r\n\r\nclocks made via `useFakeTimers` in sinon have `restore` set to `clock.uninstall` (as an alias).",
        "createdAt" : "2021-04-09T20:29:56Z",
        "updatedAt" : "2021-04-13T16:41:42Z",
        "lastEditedBy" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "tags" : [
        ]
      }
    ],
    "commit" : "542683b073103f5d9e6286a4c67f62b53446409e",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +1658,1662 @@\n        clock: {\n            create(now: number | Date): FakeTimers.Clock;\n        };\n"
  },
  {
    "id" : "1acfb5ee-606f-467a-a18e-091e862e33f7",
    "prId" : 52297,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52297#pullrequestreview-632782635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17ccd8a4-0d27-4a07-8379-12b08da6802d",
        "parentId" : null,
        "authorId" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "body" : "shouldn't this need a package.json now to install the real `@sinonjs/fake-timers`?",
        "createdAt" : "2021-04-09T20:54:43Z",
        "updatedAt" : "2021-04-13T16:41:42Z",
        "lastEditedBy" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "tags" : [
        ]
      },
      {
        "id" : "a91fa997-43ba-4e38-9b0c-5f3e65f10e09",
        "parentId" : "17ccd8a4-0d27-4a07-8379-12b08da6802d",
        "authorId" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "body" : "i think i must've just forgot to check it in, i do have one locally :D ill sort it out üëç ",
        "createdAt" : "2021-04-09T21:01:14Z",
        "updatedAt" : "2021-04-13T16:41:42Z",
        "lastEditedBy" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "tags" : [
        ]
      }
    ],
    "commit" : "542683b073103f5d9e6286a4c67f62b53446409e",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +12,16 @@// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n\nimport * as FakeTimers from \"@sinonjs/fake-timers\";\n\n// sinon uses DOM dependencies which are absent in browser-less environment like node.js"
  },
  {
    "id" : "e4f71f3b-391b-4267-8ec0-668856d1e3da",
    "prId" : 52297,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52297#pullrequestreview-632783333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0b79584-888c-48fb-ba6e-cff6d6ab2cff",
        "parentId" : null,
        "authorId" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "body" : "It's very likely the right thing. But bumping the major version also implies that the rest of these types are now 10.0. Is that the case? If it's not then this will need a followup PR pretty quickly to make it so.",
        "createdAt" : "2021-04-09T20:56:18Z",
        "updatedAt" : "2021-04-13T16:41:42Z",
        "lastEditedBy" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "tags" : [
        ]
      },
      {
        "id" : "3750c699-77e9-4ed8-8a8c-ede3f22b41db",
        "parentId" : "a0b79584-888c-48fb-ba6e-cff6d6ab2cff",
        "authorId" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "body" : "it _should_ be, but i will double check. i think the versions were already diverged and 9 of the types was actually 10 of the code. ill make sure though and get back to you",
        "createdAt" : "2021-04-09T21:02:24Z",
        "updatedAt" : "2021-04-13T16:41:42Z",
        "lastEditedBy" : "6aed7036-ec9d-4b50-94bf-43195544a50a",
        "tags" : [
        ]
      }
    ],
    "commit" : "542683b073103f5d9e6286a4c67f62b53446409e",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +-1,3 @@// Type definitions for Sinon 10.0\n// Project: https://sinonjs.org\n// Definitions by: William Sears <https://github.com/mrbigdog2u>"
  }
]