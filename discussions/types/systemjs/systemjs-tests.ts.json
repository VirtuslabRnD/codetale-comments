[
  {
    "id" : "c3774493-6069-479e-beca-17d74da1e100",
    "prId" : 39372,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/39372#pullrequestreview-306933733",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f2d1f39-f74e-475c-ba60-79861e3b2bbd",
        "parentId" : null,
        "authorId" : "d8744fcf-583c-4807-961f-c8c37a55286a",
        "body" : "The tests fail on these `_export()` calls, even though they used to be working and I have no idea why they're failing now.\r\n\r\nThe error message I'm getting:\r\n\r\n```\r\nError: /Users/joeldennning/code/DefinitelyTyped/types/systemjs/systemjs-tests.ts:25:21\r\nERROR: 25:21  expect  TypeScript@next compile error: \r\nArgument of type '\"a\"' is not assignable to parameter of type 'never'.\r\nERROR: 26:21  expect  TypeScript@next compile error: \r\nArgument of type '\"b\"' is not assignable to parameter of type 'never'.\r\nERROR: 27:21  expect  TypeScript@next compile error: \r\nArgument of type '\"c\"' is not assignable to parameter of type 'never'.\r\nERROR: 28:13  expect  TypeScript@next compile error: \r\nExpected 2 arguments, but got 1.\r\n```\r\n\r\nI don't know where the `never` is coming from in that error.",
        "createdAt" : "2019-10-24T22:40:42Z",
        "updatedAt" : "2019-10-30T20:52:05Z",
        "lastEditedBy" : "d8744fcf-583c-4807-961f-c8c37a55286a",
        "tags" : [
        ]
      },
      {
        "id" : "353216e1-8061-47d1-a01b-1127f76de97a",
        "parentId" : "3f2d1f39-f74e-475c-ba60-79861e3b2bbd",
        "authorId" : "d8744fcf-583c-4807-961f-c8c37a55286a",
        "body" : "Figured this one out -- went back to polymorphic function signature and `typeof`, which solved the problem here.",
        "createdAt" : "2019-10-24T23:17:33Z",
        "updatedAt" : "2019-10-30T20:52:05Z",
        "lastEditedBy" : "d8744fcf-583c-4807-961f-c8c37a55286a",
        "tags" : [
        ]
      },
      {
        "id" : "c7448a64-6a17-4372-a444-28a87547942d",
        "parentId" : "3f2d1f39-f74e-475c-ba60-79861e3b2bbd",
        "authorId" : "8153deff-5248-4aa9-a800-b98b4fb63ca0",
        "body" : "Oh, it's because you don't want a union type, you want an overload list. Looks like this:\r\n```ts\r\ntype ExportFn = {\r\n    (exportName: string, value: any): void;\r\n    (exports: object): void;\r\n}; \r\n```",
        "createdAt" : "2019-10-25T00:40:58Z",
        "updatedAt" : "2019-10-30T20:52:05Z",
        "lastEditedBy" : "8153deff-5248-4aa9-a800-b98b4fb63ca0",
        "tags" : [
        ]
      }
    ],
    "commit" : "55e3b9c09df0750c5d6d727435929444fe4a11d8",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +23,27 @@        ],\n        execute() {\n            _export('a', 'thing');\n            _export('b', 123);\n            _export('c', () => 'hi');"
  }
]