[
  {
    "id" : "41fd1839-b8a2-414a-9e59-ab4f68053a0a",
    "prId" : 20512,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20512#pullrequestreview-68843950",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8787bbf9-576f-4a18-8140-d7625ebbc856",
        "parentId" : null,
        "authorId" : "27514eae-1736-4dfd-a1f4-7359a281ee38",
        "body" : "Missing generic value, use defaults:\r\n```ts\r\nget<TModule = any>(moduleName: string): TModule;\r\n```",
        "createdAt" : "2017-10-12T08:22:01Z",
        "updatedAt" : "2017-10-12T10:20:41Z",
        "lastEditedBy" : "27514eae-1736-4dfd-a1f4-7359a281ee38",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d40f1a589b674f69f79d57864bdd7072a55f5ff",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +296,300 @@         * Returns a module from the registry by normalized name.\n         */\n        get(moduleName: string): any;\n\n        /**"
  },
  {
    "id" : "020c1d2e-a389-432e-b4ad-9efc24576d60",
    "prId" : 20512,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20512#pullrequestreview-68879177",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f68d7d19-fb62-4d90-89ed-662aee1d1ec5",
        "parentId" : null,
        "authorId" : "27514eae-1736-4dfd-a1f4-7359a281ee38",
        "body" : "Same like a `get` method, please add a missing generic value.\r\n",
        "createdAt" : "2017-10-12T08:22:54Z",
        "updatedAt" : "2017-10-12T10:20:41Z",
        "lastEditedBy" : "27514eae-1736-4dfd-a1f4-7359a281ee38",
        "tags" : [
        ]
      },
      {
        "id" : "81f1c7db-4415-47cf-85bd-169c3ea89a7b",
        "parentId" : "f68d7d19-fb62-4d90-89ed-662aee1d1ec5",
        "authorId" : "c855e5b8-32a0-42ac-a90e-a3783d6c71ec",
        "body" : "All uses of generics were raising a dtslint error. Since the generics are not associated with either the parameters or the return values of the declaring functions, they essentially behave like a type assertion.\r\n\r\nThe rule is explained here. https://github.com/Microsoft/dtslint/blob/master/docs/no-unnecessary-generics.md",
        "createdAt" : "2017-10-12T10:23:31Z",
        "updatedAt" : "2017-10-12T10:23:32Z",
        "lastEditedBy" : "c855e5b8-32a0-42ac-a90e-a3783d6c71ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d40f1a589b674f69f79d57864bdd7072a55f5ff",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +312,316 @@         * Promise resolves to the module value.\n         */\n        import(moduleName: string, normalizedParentName?: string): Promise<any>;\n\n        /**"
  },
  {
    "id" : "8c05a8bc-14d6-48d9-8b8d-6ebea1962d09",
    "prId" : 20512,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20512#pullrequestreview-68878203",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad12763e-8c3d-4426-842f-6e49f515bc51",
        "parentId" : null,
        "authorId" : "27514eae-1736-4dfd-a1f4-7359a281ee38",
        "body" : "Same, add missing generic value.",
        "createdAt" : "2017-10-12T08:25:07Z",
        "updatedAt" : "2017-10-12T10:20:41Z",
        "lastEditedBy" : "27514eae-1736-4dfd-a1f4-7359a281ee38",
        "tags" : [
        ]
      },
      {
        "id" : "92690b08-32a9-4f38-b2ae-acf8fc3b5e26",
        "parentId" : "ad12763e-8c3d-4426-842f-6e49f515bc51",
        "authorId" : "c855e5b8-32a0-42ac-a90e-a3783d6c71ec",
        "body" : "All uses of generics were raising a dtslint error. Since the generics are not associated with either the parameters or the return values of the declaring functions, they essentially behave like a type assertion.\r\n\r\nThe rule is explained here. https://github.com/Microsoft/dtslint/blob/master/docs/no-unnecessary-generics.md",
        "createdAt" : "2017-10-12T10:19:18Z",
        "updatedAt" : "2017-10-12T10:20:41Z",
        "lastEditedBy" : "c855e5b8-32a0-42ac-a90e-a3783d6c71ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d40f1a589b674f69f79d57864bdd7072a55f5ff",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +324,328 @@         * Useful when writing a custom instantiate hook or using System.set.\n         */\n        newModule(object: any): any;\n\n        /**"
  }
]