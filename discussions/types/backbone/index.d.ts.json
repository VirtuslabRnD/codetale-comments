[
  {
    "id" : "b53eac18-6937-4dae-84c5-61af874b3dad",
    "prId" : 20612,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/20612#pullrequestreview-69937328",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eef9d38e-6e1b-4b53-bee7-f56c8c83ec55",
        "parentId" : null,
        "authorId" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "body" : "I would just use `model: Model | Collection<Model>`.",
        "createdAt" : "2017-10-17T16:01:08Z",
        "updatedAt" : "2017-10-17T16:01:08Z",
        "lastEditedBy" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbb468143efd0ada60a7e32ca647a42f5e38f595",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +446,450 @@\n    // SYNC\n    function sync(method: string, model: Model, options?: JQueryAjaxSettings): any;\n    function sync(method: string, collection: Collection<Model>, options?: JQueryAjaxSettings): any;\n    function ajax(options?: JQueryAjaxSettings): JQueryXHR;"
  },
  {
    "id" : "d5520f67-4553-44df-b18d-d03eb0cb33a1",
    "prId" : 46513,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/46513#pullrequestreview-460855806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a185831f-b5d8-497f-9c16-db3b2411e42b",
        "parentId" : null,
        "authorId" : "d6dbc01c-d9ed-403c-aba1-4b9e918920b4",
        "body" : "I'd rather something like this:\r\n\r\n```ts\r\ninterface PersistenceOptions extends Omit<JQueryAjaxSettings, 'success' | 'error'> {\r\n    success?: (modelOrCollection?: any, response?: any, options?: any) => void;\r\n    error?: (modelOrCollection?: any, jqxhr?: JQueryXHR, options?: any) => void;\r\n    emulateJSON?: boolean;\r\n    emulateHTTP?: boolean;\r\n}\r\n```",
        "createdAt" : "2020-08-03T20:47:33Z",
        "updatedAt" : "2020-08-06T04:54:51Z",
        "lastEditedBy" : "d6dbc01c-d9ed-403c-aba1-4b9e918920b4",
        "tags" : [
        ]
      },
      {
        "id" : "cbe0b433-db24-4956-8f2c-04c4a1d4d71a",
        "parentId" : "a185831f-b5d8-497f-9c16-db3b2411e42b",
        "authorId" : "5b45a29b-4def-4f71-8024-3273335e07bd",
        "body" : "Cool, I'm don't know about this helper) But some tests are failed, e.g. for TypeScript 3.0. Omit was introduced at TypeScript 3.5.",
        "createdAt" : "2020-08-03T21:55:22Z",
        "updatedAt" : "2020-08-06T04:54:51Z",
        "lastEditedBy" : "5b45a29b-4def-4f71-8024-3273335e07bd",
        "tags" : [
        ]
      },
      {
        "id" : "2a4583e9-78fc-407b-8f00-cdf295a63080",
        "parentId" : "a185831f-b5d8-497f-9c16-db3b2411e42b",
        "authorId" : "d6dbc01c-d9ed-403c-aba1-4b9e918920b4",
        "body" : "Oops. Maybe it can work without the `Omit`, i.e., just a bare `extends JQueryAjaxSettings {`?",
        "createdAt" : "2020-08-04T00:17:17Z",
        "updatedAt" : "2020-08-06T04:54:51Z",
        "lastEditedBy" : "d6dbc01c-d9ed-403c-aba1-4b9e918920b4",
        "tags" : [
        ]
      },
      {
        "id" : "acb635a5-f95e-4fe3-8986-a866a310ebdd",
        "parentId" : "a185831f-b5d8-497f-9c16-db3b2411e42b",
        "authorId" : "5b45a29b-4def-4f71-8024-3273335e07bd",
        "body" : "Unfortunately, no",
        "createdAt" : "2020-08-04T00:53:33Z",
        "updatedAt" : "2020-08-06T04:54:51Z",
        "lastEditedBy" : "5b45a29b-4def-4f71-8024-3273335e07bd",
        "tags" : [
        ]
      },
      {
        "id" : "ed19ff49-78b6-4d07-8fc2-4a27dc1c9c03",
        "parentId" : "a185831f-b5d8-497f-9c16-db3b2411e42b",
        "authorId" : "d6dbc01c-d9ed-403c-aba1-4b9e918920b4",
        "body" : "Alright, in that case let's disregard my comment.",
        "createdAt" : "2020-08-04T14:16:53Z",
        "updatedAt" : "2020-08-06T04:54:51Z",
        "lastEditedBy" : "d6dbc01c-d9ed-403c-aba1-4b9e918920b4",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c5b5ae51fa5dacb8ae8f6739607788c6eca4a4e",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +71,75 @@        beforeSend?: (jqxhr: JQueryXHR) => void;\n        timeout?: number;\n        // TODO: copy all parameters from JQueryAjaxSettings except success/error callbacks?\n        success?: (modelOrCollection?: any, response?: any, options?: any) => void;\n        error?: (modelOrCollection?: any, jqxhr?: JQueryXHR, options?: any) => void;"
  },
  {
    "id" : "2effa72c-4d55-432d-a74b-4fe8d31fb63e",
    "prId" : 46513,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/46513#pullrequestreview-460855806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a93972f6-596c-4305-bc08-5f315636ca46",
        "parentId" : null,
        "authorId" : "d6dbc01c-d9ed-403c-aba1-4b9e918920b4",
        "body" : "Since this is going to break existing code, I suggest adding a comment above the `Model` class to explain to users that they can accept additional constructor options by listing them in the `E` interface.",
        "createdAt" : "2020-08-04T14:16:28Z",
        "updatedAt" : "2020-08-06T04:54:51Z",
        "lastEditedBy" : "d6dbc01c-d9ed-403c-aba1-4b9e918920b4",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c5b5ae51fa5dacb8ae8f6739607788c6eca4a4e",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +219,223 @@     * by listing them in the E parameter.\n     */\n    class Model<T = any, S = Backbone.ModelSetOptions, E = {}> extends ModelBase implements Events {\n\n        /**"
  }
]