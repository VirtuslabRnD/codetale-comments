[
  {
    "id" : "17a6b06c-cba2-43ad-9f68-effa6a0cc955",
    "prId" : 38863,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38863#pullrequestreview-300380345",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d43e478-d679-46a9-ad71-d6256f98a4cd",
        "parentId" : null,
        "authorId" : "1985e37c-2f23-4a96-8385-ab8d42e6573b",
        "body" : "I'm not sure what are you trying to achieve here. Isn't this a `function` with n parameters or am I missing something?",
        "createdAt" : "2019-10-09T01:06:35Z",
        "updatedAt" : "2019-10-09T01:06:42Z",
        "lastEditedBy" : "1985e37c-2f23-4a96-8385-ab8d42e6573b",
        "tags" : [
        ]
      },
      {
        "id" : "539ea411-b8b1-432f-b325-a62704f0bda4",
        "parentId" : "4d43e478-d679-46a9-ad71-d6256f98a4cd",
        "authorId" : "c2f96ad7-3cdb-4863-9c41-147f6c8f17bc",
        "body" : "It effectively has the same API as `Object.assign`, so I figured that this might be cleaner than rewriting those types. This is my first new definition and I wasn't really sure about the convention, so I went with my gut on that.",
        "createdAt" : "2019-10-09T01:45:34Z",
        "updatedAt" : "2019-10-09T01:49:52Z",
        "lastEditedBy" : "c2f96ad7-3cdb-4863-9c41-147f6c8f17bc",
        "tags" : [
        ]
      },
      {
        "id" : "eace8653-12ea-4ef8-bcdf-c1c1117810f4",
        "parentId" : "4d43e478-d679-46a9-ad71-d6256f98a4cd",
        "authorId" : "1985e37c-2f23-4a96-8385-ab8d42e6573b",
        "body" : "Makes sense. Thanks for clarifying.",
        "createdAt" : "2019-10-10T22:12:22Z",
        "updatedAt" : "2019-10-10T22:12:32Z",
        "lastEditedBy" : "1985e37c-2f23-4a96-8385-ab8d42e6573b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f06acddd05fd21162783ed3715d1f4194f873b48",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +5,9 @@// TypeScript Version: 2.1\n\ndeclare const objectAssignDeep: ObjectConstructor['assign'];\n\ninterface Options {"
  }
]