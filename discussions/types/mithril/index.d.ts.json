[
  {
    "id" : "f3580c31-2638-494b-9640-b8da836b2d1e",
    "prId" : 15863,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/15863#pullrequestreview-33346464",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e53e6c88-c35a-4acf-a5b9-3b6c5e813ca6",
        "parentId" : null,
        "authorId" : "b0995fe3-2324-4ecd-9828-cc6e6d2cfb5c",
        "body" : "Are interfaces and type aliases within namespaces auto-exported?",
        "createdAt" : "2017-04-15T02:32:41Z",
        "updatedAt" : "2017-04-18T20:45:42Z",
        "lastEditedBy" : "b0995fe3-2324-4ecd-9828-cc6e6d2cfb5c",
        "tags" : [
        ]
      },
      {
        "id" : "afe1bbe4-df93-42d9-8c42-048d12e5cdd6",
        "parentId" : "e53e6c88-c35a-4acf-a5b9-3b6c5e813ca6",
        "authorId" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "body" : "Yes, within a `declare namespace`. Not within a regular namespace.",
        "createdAt" : "2017-04-18T20:45:46Z",
        "updatedAt" : "2017-04-18T20:46:06Z",
        "lastEditedBy" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "3859e01b966b6b4f2358a2994b299c67f1147fb0",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +47,51 @@\t}\n\n\tinterface Hyperscript {\n\t\t/** Creates a virtual element (Vnode). */\n\t\t(selector: string, ...children: Children[]): Vnode<any, any>;"
  },
  {
    "id" : "a45cc7a8-3e29-4431-bb04-0101a912869e",
    "prId" : 37118,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/37118#pullrequestreview-267454371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1439c8e6-7ef4-4d5e-b4fb-1606a9d95243",
        "parentId" : null,
        "authorId" : "b0995fe3-2324-4ecd-9828-cc6e6d2cfb5c",
        "body" : "Don't forget `body:` (unless of course you have it specified elsewhere).",
        "createdAt" : "2019-07-27T03:33:52Z",
        "updatedAt" : "2019-07-29T02:52:33Z",
        "lastEditedBy" : "b0995fe3-2324-4ecd-9828-cc6e6d2cfb5c",
        "tags" : [
        ]
      },
      {
        "id" : "36aa68a6-028f-432a-ab8f-e0bee646db45",
        "parentId" : "1439c8e6-7ef4-4d5e-b4fb-1606a9d95243",
        "authorId" : "0273d59b-ca99-4ec6-8b51-7d9c95bae853",
        "body" : "Okay, good catch.",
        "createdAt" : "2019-07-27T03:53:30Z",
        "updatedAt" : "2019-07-29T02:52:33Z",
        "lastEditedBy" : "0273d59b-ca99-4ec6-8b51-7d9c95bae853",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b9cf28f620071f05a21c02011bf794277eea4ff",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +143,147 @@\tinterface JsonpOptions {\n\t\t/** The data to be interpolated into the URL and serialized into the querystring. */\n\t\tparams?: { [id: string]: any };\n\t\t/** The data to be serialized into the request body. */\n\t\tbody?: any;"
  },
  {
    "id" : "18d3e427-64eb-4e3d-9e1a-17d5b34bf0c5",
    "prId" : 37118,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/37118#pullrequestreview-267482359",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b31c17a2-6905-4f8e-a8c1-ad7c3e43938b",
        "parentId" : null,
        "authorId" : "b0995fe3-2324-4ecd-9828-cc6e6d2cfb5c",
        "body" : "Could this be strengthened to anything accepted by `XMLHttpRequest.prototype.send`? You could make it fairly future-proof with minimal effort by doing this:\r\n\r\n```suggestion\r\n\t\tbody?: (\r\n\t\t\tXMLHttpRequest[\"send\"] extends (x: infer R) => any ? R : never\r\n\t\t) | object & { [id: string]: any };\r\n```",
        "createdAt" : "2019-07-27T19:36:59Z",
        "updatedAt" : "2019-07-29T02:52:33Z",
        "lastEditedBy" : "b0995fe3-2324-4ecd-9828-cc6e6d2cfb5c",
        "tags" : [
        ]
      },
      {
        "id" : "612e0779-9b23-4498-835a-5edefef95728",
        "parentId" : "b31c17a2-6905-4f8e-a8c1-ad7c3e43938b",
        "authorId" : "0273d59b-ca99-4ec6-8b51-7d9c95bae853",
        "body" : "This now prevents number values for body, but I suppose those were just auto-coerced to strings.",
        "createdAt" : "2019-07-27T21:11:49Z",
        "updatedAt" : "2019-07-29T02:52:33Z",
        "lastEditedBy" : "0273d59b-ca99-4ec6-8b51-7d9c95bae853",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b9cf28f620071f05a21c02011bf794277eea4ff",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +145,149 @@\t\tparams?: { [id: string]: any };\n\t\t/** The data to be serialized into the request body. */\n\t\tbody?: any;\n\t\t/** A constructor to be applied to each object in the response. */\n\t\ttype?: new (o: any) => any;"
  },
  {
    "id" : "874d0765-f8b2-42ce-8d58-f0d5bbaf3085",
    "prId" : 39242,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/39242#pullrequestreview-305496828",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97f63b6f-06c8-4abc-9295-032d819906ee",
        "parentId" : null,
        "authorId" : "b0995fe3-2324-4ecd-9828-cc6e6d2cfb5c",
        "body" : "Forgot to mention: please include the various special vnode types (especially `\"[\"` for fragments) in this list. Those are pretty important.",
        "createdAt" : "2019-10-20T21:10:44Z",
        "updatedAt" : "2019-10-23T04:35:07Z",
        "lastEditedBy" : "b0995fe3-2324-4ecd-9828-cc6e6d2cfb5c",
        "tags" : [
        ]
      },
      {
        "id" : "c22632d3-fd06-45ba-97a5-83f61e284cb6",
        "parentId" : "97f63b6f-06c8-4abc-9295-032d819906ee",
        "authorId" : "52117d7e-f0bb-48d5-8613-ab6912822985",
        "body" : "how can I do this? adding \"[\" as a key and pointing to `Mithril.Attributes`? what are the other special vnode types?",
        "createdAt" : "2019-10-21T18:40:19Z",
        "updatedAt" : "2019-10-23T04:35:07Z",
        "lastEditedBy" : "52117d7e-f0bb-48d5-8613-ab6912822985",
        "tags" : [
        ]
      },
      {
        "id" : "7460634e-5e56-4e9a-a2c5-e1285b79fa9a",
        "parentId" : "97f63b6f-06c8-4abc-9295-032d819906ee",
        "authorId" : "b0995fe3-2324-4ecd-9828-cc6e6d2cfb5c",
        "body" : "Yes. You literally add those to the list.",
        "createdAt" : "2019-10-22T20:45:55Z",
        "updatedAt" : "2019-10-23T04:35:07Z",
        "lastEditedBy" : "b0995fe3-2324-4ecd-9828-cc6e6d2cfb5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "261ac28525dba8738751c2919492872085a6e2d5",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +305,309 @@        interface IntrinsicClassAttributes extends Mithril.Attributes { }\n\n        interface IntrinsicElements {\n            // HTML\n            a: Mithril.Attributes;"
  }
]