[
  {
    "id" : "1de9564a-e1b9-47ef-90d2-c3fb390f5cca",
    "prId" : 52126,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/52126#pullrequestreview-627227118",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66a48fc9-eb17-46ae-8230-1bac3967356c",
        "parentId" : null,
        "authorId" : "28aab869-30d5-42f8-8a85-4af7d5854cea",
        "body" : "Can `PartitionTableKeyType` be any type? The default of `string | Buffer | number` in the subclasses makes me wonder if it should be constrained to that type?",
        "createdAt" : "2021-04-01T18:27:02Z",
        "updatedAt" : "2021-04-02T19:35:23Z",
        "lastEditedBy" : "28aab869-30d5-42f8-8a85-4af7d5854cea",
        "tags" : [
        ]
      },
      {
        "id" : "d5fb4535-3a1c-409c-8f7f-0a8350a3e55d",
        "parentId" : "66a48fc9-eb17-46ae-8230-1bac3967356c",
        "authorId" : "e8c145e1-31d7-432b-be41-65fd0f43fbae",
        "body" : "Whoops I missed that, will fix.\r\n\r\nI'm actually going to remove `Buffer` as well, I don't see any specific logic for buffers in the lib, and I don't see any repos (at least on Github) that are using Buffers as the ID. ",
        "createdAt" : "2021-04-02T02:27:35Z",
        "updatedAt" : "2021-04-02T19:35:23Z",
        "lastEditedBy" : "e8c145e1-31d7-432b-be41-65fd0f43fbae",
        "tags" : [
        ]
      },
      {
        "id" : "0788260b-8704-480b-8fee-4349f71fb119",
        "parentId" : "66a48fc9-eb17-46ae-8230-1bac3967356c",
        "authorId" : "28aab869-30d5-42f8-8a85-4af7d5854cea",
        "body" : "I think what you’re looking for is `extends string | number`, not `= string | number`. Or, you might be looking for both. But probably you don’t want _only_ the `=`. `extends` says that the key type should _always_ be a subtype of `string | number`. The `=` simply provides a default. So with this, you can still say `new LockClient(someBuffer, callback)` and get a `LockClient<Buffer>`. You’d need `extends string | number` to make that an error.",
        "createdAt" : "2021-04-02T16:10:55Z",
        "updatedAt" : "2021-04-02T19:35:23Z",
        "lastEditedBy" : "28aab869-30d5-42f8-8a85-4af7d5854cea",
        "tags" : [
        ]
      },
      {
        "id" : "a4f6ecb4-0149-490e-b16a-0e84fe3a7ddb",
        "parentId" : "66a48fc9-eb17-46ae-8230-1bac3967356c",
        "authorId" : "e8c145e1-31d7-432b-be41-65fd0f43fbae",
        "body" : "Ah okay, that makes sense. Thank you for the explanation!\r\n\r\nI also read up more on constraints: https://www.typescriptlang.org/docs/handbook/2/generics.html#generic-constraints ",
        "createdAt" : "2021-04-02T19:36:56Z",
        "updatedAt" : "2021-04-02T19:36:56Z",
        "lastEditedBy" : "e8c145e1-31d7-432b-be41-65fd0f43fbae",
        "tags" : [
        ]
      }
    ],
    "commit" : "8108627d1d834e10d1f97df69c056e42c8599362",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@\nexport class LockClient<PartitionTableKeyType extends string | number> {\n    acquireLock(id: PartitionTableKeyType, callback: (error: Error, lock: Lock) => void): void;\n}\n"
  }
]