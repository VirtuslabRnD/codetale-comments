[
  {
    "id" : "0ff3568f-991b-44b4-8382-a5a659116fde",
    "prId" : 50845,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/50845#pullrequestreview-578825080",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e22788ce-177d-4943-a433-8924ba6f14c7",
        "parentId" : null,
        "authorId" : "56264621-4669-43a0-a29d-20a53a8c46dc",
        "body" : "docs say that dblclick/keydown events are passed through to handlers, probably makes more sense to use MouseEvent/KeyboardEvent rather than EventTarget.Event if these are native events.",
        "createdAt" : "2021-01-26T16:06:48Z",
        "updatedAt" : "2021-01-28T23:20:51Z",
        "lastEditedBy" : "56264621-4669-43a0-a29d-20a53a8c46dc",
        "tags" : [
        ]
      },
      {
        "id" : "080225a4-c181-4f98-8f58-7fc03dc01874",
        "parentId" : "e22788ce-177d-4943-a433-8924ba6f14c7",
        "authorId" : "a4289464-5c02-4b43-8eb2-1e98b3237b3d",
        "body" : "Okay, I was pretty sure that it might make sense to use `EventTarget.Event` because it is used everywhere else where I would expect otherwise, e.g.:\r\n\r\nhttps://github.com/DefinitelyTyped/DefinitelyTyped/blob/4236a21f0f33d9cff7c88b9347b07235477d5889/types/video.js/index.d.ts#L654\r\n\r\nhttps://github.com/DefinitelyTyped/DefinitelyTyped/blob/4236a21f0f33d9cff7c88b9347b07235477d5889/types/video.js/index.d.ts#L665",
        "createdAt" : "2021-01-26T21:42:16Z",
        "updatedAt" : "2021-01-28T23:20:51Z",
        "lastEditedBy" : "a4289464-5c02-4b43-8eb2-1e98b3237b3d",
        "tags" : [
        ]
      },
      {
        "id" : "a5d95b43-024e-4570-ac4e-01102b68569d",
        "parentId" : "e22788ce-177d-4943-a433-8924ba6f14c7",
        "authorId" : "56264621-4669-43a0-a29d-20a53a8c46dc",
        "body" : "that's true. properly typing the events is probably a bigger discussion. for now, let's delete the `which: number` and leave it just `[key: string]: any;`. adding `which: number` implies that all events will have a non-null, numeric `which` property which isn't true. if you're feeling ambitious, maybe you can subclass `EventTarget.Event` as `KeyboardEvent` and add `which` to that?",
        "createdAt" : "2021-01-26T22:29:33Z",
        "updatedAt" : "2021-01-28T23:20:51Z",
        "lastEditedBy" : "56264621-4669-43a0-a29d-20a53a8c46dc",
        "tags" : [
        ]
      },
      {
        "id" : "17772351-fce0-42c9-b273-8123ce749255",
        "parentId" : "e22788ce-177d-4943-a433-8924ba6f14c7",
        "authorId" : "a4289464-5c02-4b43-8eb2-1e98b3237b3d",
        "body" : "> if you're feeling ambitious, maybe you can subclass `EventTarget.Event` as `KeyboardEvent` and add `which` to that?\n\nWill do. I guess `which?: number` would be the preferred option then?",
        "createdAt" : "2021-01-27T23:00:15Z",
        "updatedAt" : "2021-01-28T23:20:51Z",
        "lastEditedBy" : "a4289464-5c02-4b43-8eb2-1e98b3237b3d",
        "tags" : [
        ]
      },
      {
        "id" : "8984fab1-6e65-4b16-a5ff-fde24cf3a967",
        "parentId" : "e22788ce-177d-4943-a433-8924ba6f14c7",
        "authorId" : "56264621-4669-43a0-a29d-20a53a8c46dc",
        "body" : "in a `KeyboardEvent` subclass I would define it as `readonly which: number;` which is how the core dom lib types it",
        "createdAt" : "2021-01-28T19:41:50Z",
        "updatedAt" : "2021-01-28T23:20:51Z",
        "lastEditedBy" : "56264621-4669-43a0-a29d-20a53a8c46dc",
        "tags" : [
        ]
      },
      {
        "id" : "2dee3bd9-4ebc-4b7e-8f92-5537ed9983f4",
        "parentId" : "e22788ce-177d-4943-a433-8924ba6f14c7",
        "authorId" : "a4289464-5c02-4b43-8eb2-1e98b3237b3d",
        "body" : "I did it for `hotkeys` but wasn't sure about `doubleClick` since `KeyboardEvent` doesn't make sense there and I kind of got lost in the documentation, sorry. What do you think?",
        "createdAt" : "2021-01-28T23:23:31Z",
        "updatedAt" : "2021-01-28T23:23:31Z",
        "lastEditedBy" : "a4289464-5c02-4b43-8eb2-1e98b3237b3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d78afba7562ef88fc8a1659d941619bcc9a78ac9",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +5708,5712 @@\n    interface UserActions {\n        doubleClick?: boolean | ((event: EventTarget.Event) => void);\n        hotkeys?: boolean | ((event: KeyboardEvent) => void) | UserActionHotkeys;\n    }"
  }
]