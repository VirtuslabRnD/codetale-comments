[
  {
    "id" : "7a867e22-fdff-4a03-82fc-03dbd626bbf9",
    "prId" : 17069,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/17069#pullrequestreview-43031849",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e64ddb11-3e0d-4791-981e-bfb817e79eba",
        "parentId" : null,
        "authorId" : "b160625e-98bd-4922-a0e1-25f23e8dd8fc",
        "body" : "Callback first parameter should still be Error, no? ... its Node convention",
        "createdAt" : "2017-06-08T22:24:42Z",
        "updatedAt" : "2017-06-09T02:17:01Z",
        "lastEditedBy" : "b160625e-98bd-4922-a0e1-25f23e8dd8fc",
        "tags" : [
        ]
      },
      {
        "id" : "c65b9734-f350-4405-873a-dd7b66163b49",
        "parentId" : "e64ddb11-3e0d-4791-981e-bfb817e79eba",
        "authorId" : "3090a598-c784-4912-abd4-11d460450427",
        "body" : "I removed the error type parameter from the `Core.Callback`. It was inconsistent where it was `any` or `Core.Error` which at the time was an empty interface, and those were the only two possibilities returned in the current usage of `Core.Callback`. I added all of the most common error fields across the PouchDB API documentation to the `Core.Error` interface and made it the only Error returned by the `Core.Callback` rather than making it a generic option. That type parameter could be added back in if someone wished to add more specific Error objects, but for the time being it was mostly an unused option and leak for explicit `any` objects. I thought the \"grab-bag `Error` object\" was a reasonable approach in this case, largely because that's about the extent of documented behavior of errors in PouchDB.",
        "createdAt" : "2017-06-08T22:35:14Z",
        "updatedAt" : "2017-06-09T02:17:01Z",
        "lastEditedBy" : "3090a598-c784-4912-abd4-11d460450427",
        "tags" : [
        ]
      },
      {
        "id" : "afb6f0f6-3688-4b76-93a1-9b417ce26b6c",
        "parentId" : "e64ddb11-3e0d-4791-981e-bfb817e79eba",
        "authorId" : "3090a598-c784-4912-abd4-11d460450427",
        "body" : "Which is to say, now: `Core.Callback<ReturnType> = (error: Core.Error, result: ReturnType) => void`, so it is still the Node-style callback you expect it to be.",
        "createdAt" : "2017-06-08T22:36:52Z",
        "updatedAt" : "2017-06-09T02:17:01Z",
        "lastEditedBy" : "3090a598-c784-4912-abd4-11d460450427",
        "tags" : [
        ]
      },
      {
        "id" : "b8e45c1f-8769-46f6-a1b5-5aa14cd9a3d9",
        "parentId" : "e64ddb11-3e0d-4791-981e-bfb817e79eba",
        "authorId" : "b160625e-98bd-4922-a0e1-25f23e8dd8fc",
        "body" : "Oh, nice! Good job, didn't see that :)",
        "createdAt" : "2017-06-08T22:38:15Z",
        "updatedAt" : "2017-06-09T02:17:01Z",
        "lastEditedBy" : "b160625e-98bd-4922-a0e1-25f23e8dd8fc",
        "tags" : [
        ]
      }
    ],
    "commit" : "31df86f74f9afc29f6fb7a98c045ae1598d2844d",
    "line" : 446,
    "diffHunk" : "@@ -1,1 +553,557 @@        post<Model>(doc: Core.PostDocument<Content & Model>,\n                    options: Core.Options | null,\n                    callback: Core.Callback<Core.Response>): void;\n\n        /** Create a new document without providing an id."
  },
  {
    "id" : "0293b056-3851-4eea-b3d4-83f1631e3090",
    "prId" : 17568,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/17568#pullrequestreview-46921840",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45acd53c-0d33-4cb6-a7f9-7aaec9379dfd",
        "parentId" : null,
        "authorId" : "994ce329-a5cb-4357-afff-0652d8c4f62b",
        "body" : "Can this just inherit `Response` since that contains both `id` and `rev` fields",
        "createdAt" : "2017-06-28T18:10:49Z",
        "updatedAt" : "2017-06-28T18:10:50Z",
        "lastEditedBy" : "994ce329-a5cb-4357-afff-0652d8c4f62b",
        "tags" : [
        ]
      }
    ],
    "commit" : "99a46764e213e822111f1ddc798f0ac8b60c4ea1",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +452,456 @@        }\n\n        interface RemoveAttachmentResponse extends BasicResponse {\n            id: Core.DocumentId;\n            rev: Core.RevisionId;"
  }
]