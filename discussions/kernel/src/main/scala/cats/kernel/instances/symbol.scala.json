[
  {
    "id" : "b447888a-c780-41c6-81db-7a7d673da9d6",
    "prId" : 1395,
    "prUrl" : "https://github.com/typelevel/cats/pull/1395#pullrequestreview-1990306",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4c9908b-6a0d-4351-8e08-3aecb9b4090f",
        "parentId" : null,
        "authorId" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "body" : "Any reason not to use == here? I assume Symbol's equal method is correct and we don't need to worry here that eq is correct.\n",
        "createdAt" : "2016-09-25T04:59:37Z",
        "updatedAt" : "2016-09-28T17:38:38Z",
        "lastEditedBy" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "tags" : [
        ]
      },
      {
        "id" : "22246e6f-e848-4149-8010-617591523201",
        "parentId" : "d4c9908b-6a0d-4351-8e08-3aecb9b4090f",
        "authorId" : "ca741d6d-c629-4558-85cb-02e76238d728",
        "body" : "`Symbol`s are interned ... might as well take advantage of that fact.\n",
        "createdAt" : "2016-09-25T08:59:16Z",
        "updatedAt" : "2016-09-28T17:38:38Z",
        "lastEditedBy" : "ca741d6d-c629-4558-85cb-02e76238d728",
        "tags" : [
        ]
      },
      {
        "id" : "062d64a5-b8be-4cf6-b23f-54176eddd6a4",
        "parentId" : "d4c9908b-6a0d-4351-8e08-3aecb9b4090f",
        "authorId" : "d4c926be-8eed-42c7-9c7c-0ff0bf086280",
        "body" : "Yes, that was my intention.\n",
        "createdAt" : "2016-09-25T13:12:32Z",
        "updatedAt" : "2016-09-28T17:38:38Z",
        "lastEditedBy" : "d4c926be-8eed-42c7-9c7c-0ff0bf086280",
        "tags" : [
        ]
      },
      {
        "id" : "5d601142-a957-4f8b-8be1-8a231185e4b6",
        "parentId" : "d4c9908b-6a0d-4351-8e08-3aecb9b4090f",
        "authorId" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "body" : "yes, I know that `eq` is how it is implemented due to the interning, but `equals` already does this:\nhttps://github.com/scala/scala/blob/2.12.x/src/library/scala/Symbol.scala#L31\n\nso, this, to me, assumes the jit may not do the job, yet each reviewer of the code has to recall this fact about how `Symbol` instances are created.\n\nThat said, I'm happy to simply add a comment here to explain this so that the code is clearer to someone unfamiliar (I think `Symbol` is actually rather unused as a scala feature these days).\n",
        "createdAt" : "2016-09-26T19:20:57Z",
        "updatedAt" : "2016-09-28T17:38:38Z",
        "lastEditedBy" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "tags" : [
        ]
      },
      {
        "id" : "e1ab1685-0904-48cd-aaee-d8451e3ba90a",
        "parentId" : "d4c9908b-6a0d-4351-8e08-3aecb9b4090f",
        "authorId" : "d4c926be-8eed-42c7-9c7c-0ff0bf086280",
        "body" : "Ok, comment added in 318e456.\n",
        "createdAt" : "2016-09-28T17:40:18Z",
        "updatedAt" : "2016-09-28T17:40:18Z",
        "lastEditedBy" : "d4c926be-8eed-42c7-9c7c-0ff0bf086280",
        "tags" : [
        ]
      }
    ],
    "commit" : "318e456f73e4751888441d38a8580b493e8724b4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +12,16 @@  override def eqv(x: Symbol, y: Symbol): Boolean = {\n    // Symbols are interned\n    x eq y\n  }\n"
  }
]