[
  {
    "id" : "c403b79e-118f-45f8-a600-37f735a626ff",
    "prId" : 1324,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f948f75-9b49-4326-890c-b91d39310000",
        "parentId" : null,
        "authorId" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "body" : "still feel #1321 is an issue.\n",
        "createdAt" : "2016-08-23T18:01:47Z",
        "updatedAt" : "2016-08-23T22:43:34Z",
        "lastEditedBy" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "tags" : [
        ]
      },
      {
        "id" : "61846e38-bf0e-4005-a374-3b14425c6cc8",
        "parentId" : "5f948f75-9b49-4326-890c-b91d39310000",
        "authorId" : "89a3e0e3-e301-4aa8-b150-74070eb5a619",
        "body" : "I thought of that but I didn't want to make this PR big _and_ contentious.\n",
        "createdAt" : "2016-08-23T18:07:09Z",
        "updatedAt" : "2016-08-23T22:43:34Z",
        "lastEditedBy" : "89a3e0e3-e301-4aa8-b150-74070eb5a619",
        "tags" : [
        ]
      },
      {
        "id" : "33b0a04b-8037-41b1-bb83-4391663eb481",
        "parentId" : "5f948f75-9b49-4326-890c-b91d39310000",
        "authorId" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "body" : "no semigroup here? I think we can have with `Semigroup[B]`.\n",
        "createdAt" : "2016-08-23T18:34:17Z",
        "updatedAt" : "2016-08-23T22:43:34Z",
        "lastEditedBy" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "tags" : [
        ]
      }
    ],
    "commit" : "24e4de2f849faababbffa10943ef508d2642dd23",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +21,25 @@    }\n\n  implicit def catsDataMonoidForEither[A, B](implicit B: Monoid[B]): Monoid[Either[A, B]] =\n    new Monoid[Either[A, B]] {\n      def empty: Either[A, B] ="
  }
]