[
  {
    "id" : "3ceb4945-e73f-4b8e-be62-88c98486668c",
    "prId" : 1165,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/1165#pullrequestreview-493711852",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0910af7c-e11a-4b87-904c-cb114bc588a4",
        "parentId" : null,
        "authorId" : "a5a514ff-cd89-45cb-bcc8-796f0fa2a445",
        "body" : "I'm using `async` as we've agreed here, just wanted to double check we are ok with the extra allocations",
        "createdAt" : "2020-09-22T14:34:29Z",
        "updatedAt" : "2020-10-04T17:55:47Z",
        "lastEditedBy" : "a5a514ff-cd89-45cb-bcc8-796f0fa2a445",
        "tags" : [
        ]
      },
      {
        "id" : "eccb41e4-b074-456e-abf7-1f5b1f682854",
        "parentId" : "0910af7c-e11a-4b87-904c-cb114bc588a4",
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "I think we can loop back and rework it if we decide that's worthwhile. There are definitely performance advantage to working with `cont` directly, but they might disappear when we fiddle with the API to be safer.",
        "createdAt" : "2020-09-22T16:11:10Z",
        "updatedAt" : "2020-10-04T17:55:47Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      },
      {
        "id" : "112f4614-1e30-4318-aab2-5ed6534a0857",
        "parentId" : "0910af7c-e11a-4b87-904c-cb114bc588a4",
        "authorId" : "a5a514ff-cd89-45cb-bcc8-796f0fa2a445",
        "body" : "yeah fair enough. The side-effects in the old usage are a lot scarier imho now that `async` is not primitive, there are a lot more layers from there to execution\r\n\r\n",
        "createdAt" : "2020-09-22T17:55:48Z",
        "updatedAt" : "2020-10-04T17:55:47Z",
        "lastEditedBy" : "a5a514ff-cd89-45cb-bcc8-796f0fa2a445",
        "tags" : [
        ]
      }
    ],
    "commit" : "4fe596800ba0b0593f7ab7722be2e2b8a5ae5a90",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +168,172 @@                F.delay(deleteReader(id)).some\n              }\n            }\n        }\n      }"
  },
  {
    "id" : "28a76803-55c3-43fa-9282-203f5ca5b361",
    "prId" : 1145,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/1145#pullrequestreview-478235379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64f83ffe-eecd-455b-a455-5cde78e1aa8d",
        "parentId" : null,
        "authorId" : "3b5d55eb-40d5-4d14-a8a4-3ed1601b5bff",
        "body" : "This works for `IO`, but I'm not sure how it would work for bifunctor implementations?",
        "createdAt" : "2020-08-29T07:11:05Z",
        "updatedAt" : "2020-09-02T00:17:29Z",
        "lastEditedBy" : "3b5d55eb-40d5-4d14-a8a4-3ed1601b5bff",
        "tags" : [
        ]
      },
      {
        "id" : "ce59af73-2f3f-46f8-8eae-f7c4252dea7b",
        "parentId" : "64f83ffe-eecd-455b-a455-5cde78e1aa8d",
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Should be fine for everything, afaict.",
        "createdAt" : "2020-08-30T21:27:20Z",
        "updatedAt" : "2020-09-02T00:17:29Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      }
    ],
    "commit" : "f37f7c7866bf40e727f86ce43f6f12d43633c3ec",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +87,91 @@   * once.\n   */\n  def apply[F[_], A](implicit F: Allocate[F, _]): F[Deferred[F, A]] =\n    F.deferred[A]\n"
  }
]