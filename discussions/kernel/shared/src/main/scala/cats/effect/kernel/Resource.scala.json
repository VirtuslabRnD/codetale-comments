[
  {
    "id" : "44c33d06-2f52-415c-87f3-9dfea91456f4",
    "prId" : 2134,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/2134#pullrequestreview-711056894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d94bb0aa-090a-41f7-82b9-ac6dfbf86706",
        "parentId" : null,
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "I'm guessing it's not needed here either",
        "createdAt" : "2021-07-20T21:00:21Z",
        "updatedAt" : "2021-07-20T21:05:13Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bc272d9409dc3bbedba8b1ce87c14408ef18be5",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +500,504 @@    Resource applyFull { poll =>\n      poll(this.allocated).onCancel(fin.use_) map { p =>\n        Functor[(A @uncheckedVariance, *)].map(p)(fin => (_: Resource.ExitCase) => fin)\n      }\n    }"
  },
  {
    "id" : "f314a10a-1936-4fec-b339-3de67c99381b",
    "prId" : 2134,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/2134#pullrequestreview-711056894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9892c62c-591a-4e6d-877e-d959edbaa6b8",
        "parentId" : null,
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Or here",
        "createdAt" : "2021-07-20T21:00:38Z",
        "updatedAt" : "2021-07-20T21:05:13Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bc272d9409dc3bbedba8b1ce87c14408ef18be5",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +522,526 @@\n      back.map(p =>\n        Functor[(A @uncheckedVariance, *)].map(p)(fu => (_: Resource.ExitCase) => fu))\n    }\n"
  },
  {
    "id" : "3c54e7d3-cd98-433e-bdf4-1d2d4487c424",
    "prId" : 2134,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/2134#pullrequestreview-711056894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6bb185ba-5ce8-4b14-9fa2-dc873dbff576",
        "parentId" : null,
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Or here",
        "createdAt" : "2021-07-20T21:01:12Z",
        "updatedAt" : "2021-07-20T21:05:13Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bc272d9409dc3bbedba8b1ce87c14408ef18be5",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +614,618 @@    Resource applyFull { poll =>\n      poll(this.allocated).evalOn(ec) map { p =>\n        Functor[(A @uncheckedVariance, *)].map(p)(fin => (_: Resource.ExitCase) => fin)\n      }\n    }"
  },
  {
    "id" : "3082e1b4-e051-4f6f-b71c-8c7bb8571b19",
    "prId" : 2134,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/2134#pullrequestreview-713488286",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e623e4f-01e7-4c26-af6c-14090ff2cf86",
        "parentId" : null,
        "authorId" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "body" : "Put these lines back in `ResourceMonadError` and also override `attempt` there.",
        "createdAt" : "2021-07-23T08:13:40Z",
        "updatedAt" : "2021-07-23T08:19:03Z",
        "lastEditedBy" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bc272d9409dc3bbedba8b1ce87c14408ef18be5",
    "line" : 589,
    "diffHunk" : "@@ -1,1 +1302,1306 @@\n  def raiseError[A](e: E): Resource[F, A] =\n    Resource.raiseError[F, A, E](e)\n}\n"
  },
  {
    "id" : "b08dda0f-4b89-44d1-9891-38e90d77886e",
    "prId" : 2134,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/2134#pullrequestreview-714163936",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5bcbed7-8822-4452-b797-88dd7a67871b",
        "parentId" : null,
        "authorId" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "body" : "We have an `import Resource._` at the top of the class body, so you can drop reduce `Resource.ExitCase` to `ExitCase`. Same for all the other places.",
        "createdAt" : "2021-07-23T22:38:39Z",
        "updatedAt" : "2021-07-23T22:45:30Z",
        "lastEditedBy" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bc272d9409dc3bbedba8b1ce87c14408ef18be5",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +490,494 @@      poll(this.use_ !> that.allocated) map { p =>\n        // map exists on tuple in Scala 3 and has the wrong type\n        Functor[(B, *)].map(p)(fin => (_: Resource.ExitCase) => fin)\n      }\n    }"
  },
  {
    "id" : "283633bb-ffd4-47c2-8ecb-1ed0fbf3976b",
    "prId" : 2134,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/2134#pullrequestreview-714192493",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ec66571-97da-4167-b2a3-6c84693176b9",
        "parentId" : null,
        "authorId" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "body" : "@djspiewak We don't have this for IO.",
        "createdAt" : "2021-07-23T22:43:27Z",
        "updatedAt" : "2021-07-23T22:45:30Z",
        "lastEditedBy" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "tags" : [
        ]
      },
      {
        "id" : "48e825c1-edcd-4f33-8ce8-b5080d092d89",
        "parentId" : "9ec66571-97da-4167-b2a3-6c84693176b9",
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "We should! We should also have `!>`",
        "createdAt" : "2021-07-24T01:18:19Z",
        "updatedAt" : "2021-07-24T01:19:37Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bc272d9409dc3bbedba8b1ce87c14408ef18be5",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +486,490 @@    }\n\n  def forceR[B](that: Resource[F, B])(implicit F: MonadCancel[F, Throwable]): Resource[F, B] =\n    Resource applyFull { poll =>\n      poll(this.use_ !> that.allocated) map { p =>"
  },
  {
    "id" : "794a3ddb-c204-4b51-8853-aee85301faa6",
    "prId" : 2084,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/2084#pullrequestreview-693637761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "289d7355-2646-4211-b234-87fed8a8421f",
        "parentId" : null,
        "authorId" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "body" : "Stylistically, I prefer `a -> b` for pairs that are key-value, and `(a, b)` for pairs of arbitrary order.  But it doesn't really matter.",
        "createdAt" : "2021-06-26T19:39:51Z",
        "updatedAt" : "2021-06-26T19:40:13Z",
        "lastEditedBy" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "tags" : [
        ]
      },
      {
        "id" : "b15da748-ed31-4c6b-86b3-deebf8f2ee71",
        "parentId" : "289d7355-2646-4211-b234-87fed8a8421f",
        "authorId" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "body" : "That's a really interesting point! ðŸ˜„ ",
        "createdAt" : "2021-06-26T19:44:19Z",
        "updatedAt" : "2021-06-26T19:44:20Z",
        "lastEditedBy" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "tags" : [
        ]
      },
      {
        "id" : "061290dd-fac8-4f2c-baad-0f3fec7c5ba2",
        "parentId" : "289d7355-2646-4211-b234-87fed8a8421f",
        "authorId" : "a2cb5e76-d8fb-4a3e-8427-cf4061c092c1",
        "body" : "First time I'm hearing about this line of (stylistic) reasoning and it kinda makes sense since there's a direction to that arrow... Here, I just kept the original choice, but in general I've been trying to avoid parentheses if possible.",
        "createdAt" : "2021-06-26T20:13:50Z",
        "updatedAt" : "2021-06-26T20:13:50Z",
        "lastEditedBy" : "a2cb5e76-d8fb-4a3e-8427-cf4061c092c1",
        "tags" : [
        ]
      },
      {
        "id" : "5eada330-2034-47be-8cc2-54a5b944819d",
        "parentId" : "289d7355-2646-4211-b234-87fed8a8421f",
        "authorId" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "body" : "Yeah, this PR is already a net win.  I don't want to block merging for my idiosyncratic style rule, but just thought I'd share to see whether anyone agrees. :smile: ",
        "createdAt" : "2021-06-26T20:33:09Z",
        "updatedAt" : "2021-06-26T20:33:09Z",
        "lastEditedBy" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "tags" : [
        ]
      },
      {
        "id" : "e726d567-bff8-4f4e-ae1c-013060446f6c",
        "parentId" : "289d7355-2646-4211-b234-87fed8a8421f",
        "authorId" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "body" : "@igstan Up to you. Either push the change if you feel like it, or we can merge as is. ðŸ˜ƒ ",
        "createdAt" : "2021-06-26T20:34:53Z",
        "updatedAt" : "2021-06-26T20:34:54Z",
        "lastEditedBy" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "tags" : [
        ]
      },
      {
        "id" : "63e11721-6607-407b-95e2-5dd821b6ffd5",
        "parentId" : "289d7355-2646-4211-b234-87fed8a8421f",
        "authorId" : "a2cb5e76-d8fb-4a3e-8427-cf4061c092c1",
        "body" : "I'm leaning on the side of pushing as is. I may change my mind in the future, but right now I just think that it's easier to visually parse code that uses `->` instead of commas. With commas I have a parsing \"bump\" in trying to figure out whether the call takes 2 arguments or a 2-tuple.",
        "createdAt" : "2021-06-27T08:15:21Z",
        "updatedAt" : "2021-06-27T08:15:22Z",
        "lastEditedBy" : "a2cb5e76-d8fb-4a3e-8427-cf4061c092c1",
        "tags" : [
        ]
      },
      {
        "id" : "be30f592-4489-4848-a78a-7ad1789f35a8",
        "parentId" : "289d7355-2646-4211-b234-87fed8a8421f",
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "FWIW, I agree with @rossabaker's idiosyncratic rule and have converged to the exact same guideline over the years.",
        "createdAt" : "2021-06-27T17:48:17Z",
        "updatedAt" : "2021-06-27T17:48:17Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      },
      {
        "id" : "0c1cdd68-b2b4-4a98-9ede-c6407179383b",
        "parentId" : "289d7355-2646-4211-b234-87fed8a8421f",
        "authorId" : "a2cb5e76-d8fb-4a3e-8427-cf4061c092c1",
        "body" : "Now with two people against it I feel bad about having merged it like that ðŸ˜„ I'll keep in mind next time.",
        "createdAt" : "2021-06-28T07:32:02Z",
        "updatedAt" : "2021-06-28T07:32:02Z",
        "lastEditedBy" : "a2cb5e76-d8fb-4a3e-8427-cf4061c092c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "502b4016807ccbd35129e885abbe7b581cc79373",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +277,281 @@      r.fold(_.pure[F], release => storeFinalizer(F.guarantee(_, release)))\n\n    val bothFinalizers = F.ref(F.unit -> F.unit)\n\n    Resource.make(bothFinalizers)(_.get.flatMap(_.parTupled).void).evalMap { store =>"
  },
  {
    "id" : "ecdd90d0-d8c6-4958-b352-ee437851b399",
    "prId" : 1318,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/1318#pullrequestreview-511009206",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6a8734b-3ff8-4533-b662-ff5734846741",
        "parentId" : null,
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Now that I think about it, this is a really good idea!",
        "createdAt" : "2020-10-17T19:11:20Z",
        "updatedAt" : "2020-10-17T23:37:48Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      },
      {
        "id" : "37b0a2b1-d9ff-4741-a2ab-6a340b3812b0",
        "parentId" : "e6a8734b-3ff8-4533-b662-ff5734846741",
        "authorId" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "body" : "It reminds me of `modifyState` in Ref :)",
        "createdAt" : "2020-10-17T19:17:52Z",
        "updatedAt" : "2020-10-17T23:37:48Z",
        "lastEditedBy" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf9e23a73b55f8802d96100b00c1f9e5507248ce",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +225,229 @@   */\n  def useKleisli[G[x] >: F[x]: Resource.Bracket, B >: A, C](usage: Kleisli[G, B, C]): G[C] =\n    use(usage.run)\n\n  /**"
  }
]