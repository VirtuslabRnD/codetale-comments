[
  {
    "id" : "6b3c5d54-b244-4c12-af95-d9fddb1de760",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-370436315",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c99922f2-1b93-448d-9ff3-28dfa777f2cd",
        "parentId" : null,
        "authorId" : "2a510c94-77bb-4d34-b87c-e9540d5dc36f",
        "body" : "Why not path parameter?",
        "createdAt" : "2020-02-27T01:01:34Z",
        "updatedAt" : "2020-04-04T14:23:30Z",
        "lastEditedBy" : "2a510c94-77bb-4d34-b87c-e9540d5dc36f",
        "tags" : [
        ]
      },
      {
        "id" : "35991e1e-b4c7-4588-839a-954286058c64",
        "parentId" : "c99922f2-1b93-448d-9ff3-28dfa777f2cd",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "It may contain special characters including \"/\". It will be clearer as the query parameter. This endpoint is very similar to: https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/entries/lookup",
        "createdAt" : "2020-03-06T16:03:08Z",
        "updatedAt" : "2020-04-04T14:23:30Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 1917,
    "diffHunk" : "@@ -1,1 +1915,1919 @@      description: The Variable ID.\n\n    VariableKey:\n      in: query\n      name: variable_key"
  },
  {
    "id" : "fe0040b5-f90c-4414-9054-678c7aeddf45",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-365349776",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "502d5ae2-749e-4068-928d-6176d4f0b239",
        "parentId" : null,
        "authorId" : "2a510c94-77bb-4d34-b87c-e9540d5dc36f",
        "body" : "```suggestion\r\n      description: The numbers of items to return\r\n```",
        "createdAt" : "2020-02-27T01:12:47Z",
        "updatedAt" : "2020-04-04T14:23:30Z",
        "lastEditedBy" : "2a510c94-77bb-4d34-b87c-e9540d5dc36f",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 1842,
    "diffHunk" : "@@ -1,1 +1840,1844 @@        minimum: 1\n        default: 100\n      description: The numbers of items to return.\n\n    # Database entity fields"
  },
  {
    "id" : "0b05a00e-b340-4ad6-be7e-a2a185859274",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-365349776",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e1a4b30-cb89-4661-a794-81a75778f8bd",
        "parentId" : null,
        "authorId" : "2a510c94-77bb-4d34-b87c-e9540d5dc36f",
        "body" : "```suggestion\r\n      description: The number of items to skip before starting to collect the result set\r\n```",
        "createdAt" : "2020-02-27T01:12:54Z",
        "updatedAt" : "2020-04-04T14:23:30Z",
        "lastEditedBy" : "2a510c94-77bb-4d34-b87c-e9540d5dc36f",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 1832,
    "diffHunk" : "@@ -1,1 +1830,1834 @@        type: integer\n        minimum: 0\n      description: The number of items to skip before starting to collect the result set.\n\n    PageLimit:"
  },
  {
    "id" : "7b2242b5-d2f4-46f8-a831-208dd62776ab",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-365349776",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c026245b-a32c-4535-9326-04350adb8037",
        "parentId" : null,
        "authorId" : "2a510c94-77bb-4d34-b87c-e9540d5dc36f",
        "body" : "```suggestion\r\n        extensibility, because the format of encrypted data may change\r\n```",
        "createdAt" : "2020-02-27T01:14:28Z",
        "updatedAt" : "2020-04-04T14:23:30Z",
        "lastEditedBy" : "2a510c94-77bb-4d34-b87c-e9540d5dc36f",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 1976,
    "diffHunk" : "@@ -1,1 +1974,1978 @@        The key containing the encrypted path to the file. Encryption and encryption takes place\n        only on the server side. This prevents the client from reading an non-DAG file. This also ensures API\n        extensibility, because the format of encrypted data may change.\n\n    UpdateMask:"
  },
  {
    "id" : "32744645-b84d-4860-998b-4aa80c42bb3d",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-370440070",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03e30950-57a8-41ee-974a-feda176ab11f",
        "parentId" : null,
        "authorId" : "2a510c94-77bb-4d34-b87c-e9540d5dc36f",
        "body" : "The path ```/dags/{dag_id}/dagRuns/{dag_run_id}``` uses a parameter ```{dag_id}``` that does not have a corresponding definition. To fix, add a path parameter with the name ```dag_id```.",
        "createdAt" : "2020-02-27T01:32:34Z",
        "updatedAt" : "2020-04-04T14:23:30Z",
        "lastEditedBy" : "2a510c94-77bb-4d34-b87c-e9540d5dc36f",
        "tags" : [
        ]
      },
      {
        "id" : "ea931f9a-b130-4405-b0fb-47e9c3e13693",
        "parentId" : "03e30950-57a8-41ee-974a-feda176ab11f",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Fixed.",
        "createdAt" : "2020-03-06T16:08:17Z",
        "updatedAt" : "2020-04-04T14:23:30Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 238,
    "diffHunk" : "@@ -1,1 +236,240 @@    parameters:\n      - $ref: '#/components/parameters/DAGID'\n      - $ref: '#/components/parameters/DAGRunID'\n\n    get:"
  },
  {
    "id" : "1b964364-ccd9-4caa-b654-ceaf56b669d8",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-365363187",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35ddea2d-8ca2-4fb6-922e-57fc753a9c0f",
        "parentId" : null,
        "authorId" : "2a510c94-77bb-4d34-b87c-e9540d5dc36f",
        "body" : "The path ```/variables/{variable_id}/``` uses a parameter ```{variable_id}``` that does not have a corresponding definition. To fix, remove a path parameter with the name ```variable_id``` or update a query parameter  with the name ```variable_id``` to path parameter.",
        "createdAt" : "2020-02-27T01:37:10Z",
        "updatedAt" : "2020-04-04T14:23:30Z",
        "lastEditedBy" : "2a510c94-77bb-4d34-b87c-e9540d5dc36f",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 724,
    "diffHunk" : "@@ -1,1 +722,726 @@  /variables/{variable_id}:\n    parameters:\n      - $ref: '#/components/parameters/VariableID'\n\n    get:"
  },
  {
    "id" : "12f8ce8a-3a7d-4ad6-9a04-d854a0ca01a2",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-365364169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5494a722-07c8-4fa0-a59d-00897a237f86",
        "parentId" : null,
        "authorId" : "2a510c94-77bb-4d34-b87c-e9540d5dc36f",
        "body" : "```suggestion\r\n      name: try_number\r\n```",
        "createdAt" : "2020-02-27T01:40:44Z",
        "updatedAt" : "2020-04-04T14:23:30Z",
        "lastEditedBy" : "2a510c94-77bb-4d34-b87c-e9540d5dc36f",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 1879,
    "diffHunk" : "@@ -1,1 +1877,1881 @@    TaskTryNumber:\n      in: path\n      name: task_try_number\n      schema:\n        type: integer"
  },
  {
    "id" : "64ef8cef-318c-410a-ac5a-435a6bc5bb10",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406085314",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79f685eb-4e6e-407a-9a6a-b23f7d2ac55a",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "@mik-laj You didn't fix this like you said you did.",
        "createdAt" : "2020-04-08T16:12:33Z",
        "updatedAt" : "2020-04-08T16:12:33Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "946c4df6-3938-4283-b359-b6ac90a64677",
        "parentId" : "79f685eb-4e6e-407a-9a6a-b23f7d2ac55a",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I created new PR with updated specification: https://github.com/apache/airflow/pull/8721\r\n\r\nHere is the commit that makes the change.\r\nhttps://github.com/apache/airflow/pull/8721/commits/cd2be1cf1de18711069eb7631de97ae70b0f1bae",
        "createdAt" : "2020-05-05T19:20:24Z",
        "updatedAt" : "2020-05-05T19:20:25Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 1857,
    "diffHunk" : "@@ -1,1 +1855,1859 @@      name: dag_id\n      schema:\n        type: integer\n      required: true\n      description: The DAG ID."
  },
  {
    "id" : "78ddc27d-f341-4f28-abab-cf7caf7dc63a",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406085389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcbb4e25-4969-467d-8a46-83184ec6048a",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Or this.",
        "createdAt" : "2020-04-08T16:13:06Z",
        "updatedAt" : "2020-04-08T16:13:06Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "29c3d3f7-9b27-4f0f-aa78-c43e883c5481",
        "parentId" : "dcbb4e25-4969-467d-8a46-83184ec6048a",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I created new PR with updated specification: https://github.com/apache/airflow/pull/8721\r\n\r\nHere is the commit that makes the change.\r\nhttps://github.com/apache/airflow/pull/8721/commits/cd2be1cf1de18711069eb7631de97ae70b0f1bae",
        "createdAt" : "2020-05-05T19:20:30Z",
        "updatedAt" : "2020-05-05T19:20:31Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 1873,
    "diffHunk" : "@@ -1,1 +1871,1875 @@      name: task_id\n      schema:\n        type: integer\n      required: true\n      description: The Task ID."
  },
  {
    "id" : "951ba2da-68d4-4b7a-b765-a9054bb7c763",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406091420",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abf7ffed-4b97-4a01-b017-d87088980feb",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "This is wrong too. The identifier that we should use is the pool name, it's unique (i.e. a string) not the never exposed integer id.",
        "createdAt" : "2020-04-08T16:14:11Z",
        "updatedAt" : "2020-04-08T16:14:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "d57ccfd5-fb5b-49f8-9dc5-83bdd924117f",
        "parentId" : "abf7ffed-4b97-4a01-b017-d87088980feb",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I created new PR with updated specification: https://github.com/apache/airflow/pull/8721\r\n\r\nHere is the commit that makes the change.\r\nhttps://github.com/apache/airflow/pull/8721/commits/baa22d7bd4fbf074a87892b0698f61ae1b24749e\r\n\r\nCan you look if everything is alright?",
        "createdAt" : "2020-05-05T19:29:14Z",
        "updatedAt" : "2020-05-05T19:29:14Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 1905,
    "diffHunk" : "@@ -1,1 +1903,1907 @@      name: pool_id\n      schema:\n        type: integer\n      required: true\n      description: The Pool ID."
  },
  {
    "id" : "8f2e3042-7edf-4b20-8224-c8dc6edc0067",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406091836",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2b04d10-05f4-4a15-bfa9-7467425370ad",
        "parentId" : null,
        "authorId" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "body" : "This is the \"aa\" typo I would like fixed.",
        "createdAt" : "2020-04-09T03:28:23Z",
        "updatedAt" : "2020-04-09T05:32:46Z",
        "lastEditedBy" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "tags" : [
        ]
      },
      {
        "id" : "bf214940-b798-4ba0-a5eb-8b334a562585",
        "parentId" : "a2b04d10-05f4-4a15-bfa9-7467425370ad",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Good point. \r\n\r\nI created new PR with updated specification: https://github.com/apache/airflow/pull/8721\r\n\r\nHere is the commit that makes the change.\r\nhttps://github.com/apache/airflow/pull/8721/commits/ce40ff5c4e5c4654f23ad690b7d33f0f2fa13aa9\r\n\r\nCan you look if everything is alright?",
        "createdAt" : "2020-05-05T19:29:52Z",
        "updatedAt" : "2020-05-05T19:29:53Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 493,
    "diffHunk" : "@@ -1,1 +491,495 @@\n    post:\n      summary: Create aa pool\n      operationId: createPool\n      tags: [Pool]"
  },
  {
    "id" : "9bce19a2-a928-419e-a087-a188437fce50",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406092293",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a24461f-9fd5-451b-9656-0b4082cd952e",
        "parentId" : null,
        "authorId" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "body" : "I believe you meant to write: Encryption and decryption take place only on the server side.\r\nor: Encryption takes place only on the server side.",
        "createdAt" : "2020-04-09T03:29:34Z",
        "updatedAt" : "2020-04-09T05:32:46Z",
        "lastEditedBy" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "tags" : [
        ]
      },
      {
        "id" : "50435027-e75b-45ca-a810-aaa0ff461626",
        "parentId" : "0a24461f-9fd5-451b-9656-0b4082cd952e",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Thanks. \r\nHere is commit with the change: https://github.com/apache/airflow/pull/8721/commits/47d779e71da31e43e88b5cd97f3361bd0eaf8d4f",
        "createdAt" : "2020-05-05T19:30:30Z",
        "updatedAt" : "2020-05-05T19:30:31Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 1974,
    "diffHunk" : "@@ -1,1 +1972,1976 @@      required: true\n      description: >\n        The key containing the encrypted path to the file. Encryption and encryption takes place\n        only on the server side. This prevents the client from reading an non-DAG file. This also ensures API\n        extensibility, because the format of encrypted data may change."
  },
  {
    "id" : "5c9c96a1-553a-4d40-80e0-c894687fa00a",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406092716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "525e41c7-a9a3-4ae8-bd38-5086191d3571",
        "parentId" : null,
        "authorId" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "body" : "It appears to only make one variable: Create a variable",
        "createdAt" : "2020-04-09T03:30:29Z",
        "updatedAt" : "2020-04-09T05:32:46Z",
        "lastEditedBy" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "tags" : [
        ]
      },
      {
        "id" : "038c1219-a6e4-4d4a-a4ab-5cc64b3e2acf",
        "parentId" : "525e41c7-a9a3-4ae8-bd38-5086191d3571",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Thanks. \r\nHere is commit with the change: https://github.com/apache/airflow/pull/8721/commits/af260cb8160d9898a39871e71b39c8ac1862fafc",
        "createdAt" : "2020-05-05T19:31:08Z",
        "updatedAt" : "2020-05-05T19:31:08Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 699,
    "diffHunk" : "@@ -1,1 +697,701 @@\n    post:\n      summary: Create a variables\n      operationId: createVariable\n      tags: [Variable]"
  },
  {
    "id" : "15ff358c-f4fc-4ed7-a2eb-65458ea6d882",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406092794",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61cb1ba7-5a76-4b55-8e4f-8462a2fc1d2f",
        "parentId" : null,
        "authorId" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "body" : "And: Get a variable by id",
        "createdAt" : "2020-04-09T03:31:29Z",
        "updatedAt" : "2020-04-09T05:32:46Z",
        "lastEditedBy" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "tags" : [
        ]
      },
      {
        "id" : "1bee74ba-287d-4171-ad17-bd84479771b0",
        "parentId" : "61cb1ba7-5a76-4b55-8e4f-8462a2fc1d2f",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Thanks. \r\nHere is commit with the change: https://github.com/apache/airflow/pull/8721/commits/af260cb8160d9898a39871e71b39c8ac1862fafc",
        "createdAt" : "2020-05-05T19:31:13Z",
        "updatedAt" : "2020-05-05T19:31:13Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 727,
    "diffHunk" : "@@ -1,1 +725,729 @@\n    get:\n      summary: Get a variables by id\n      operationId: getVariable\n      description: The collection does not contain data. To get data, you must get a single entity."
  },
  {
    "id" : "61f8fc5d-2e15-4f34-aa37-32b3c36600a7",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406093443",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb9d58fb-9fb8-40c7-831e-71bb7859ce94",
        "parentId" : null,
        "authorId" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "body" : "Better as: Get an import error\r\n[assuming ImportErrorIDs are unique]",
        "createdAt" : "2020-04-09T03:33:57Z",
        "updatedAt" : "2020-04-09T05:32:47Z",
        "lastEditedBy" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "tags" : [
        ]
      },
      {
        "id" : "e9d2216e-396e-477a-afc9-c9fe8dfec029",
        "parentId" : "bb9d58fb-9fb8-40c7-831e-71bb7859ce94",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Thanks\r\nHere is commit: https://github.com/apache/airflow/pull/8721/commits/69e769dc7240f8896cba478ea617861f3d73dba0",
        "createdAt" : "2020-05-05T19:32:12Z",
        "updatedAt" : "2020-05-05T19:32:12Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 439,
    "diffHunk" : "@@ -1,1 +437,441 @@\n    get:\n      summary: Get an import errors\n      operationId: getImportError\n      tags: [ImportError]"
  },
  {
    "id" : "da3be542-2335-4d33-a3e8-af11cfecf7fb",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406105530",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "709b3775-2e71-4cd5-86e7-71823e99c670",
        "parentId" : null,
        "authorId" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "body" : "There is no post method for creating a new DAG run and thus triggering a DAG as the experimental API has done for a few years.\r\n\r\nAlso it would be useful if there were some parameters to limit the scope of returned DAG runs, especially if we keep the id as the way to act on DAG runs, since this call will be the only way to find the right id number.\r\nE.G. run_id_prefix and/or execution_date_range_start and execution_date_range_end could be query string parameters.",
        "createdAt" : "2020-04-09T03:34:51Z",
        "updatedAt" : "2020-04-09T05:32:47Z",
        "lastEditedBy" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "tags" : [
        ]
      },
      {
        "id" : "b4533326-8676-4493-ac07-6673f2025613",
        "parentId" : "709b3775-2e71-4cd5-86e7-71823e99c670",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Good point. I created new endpoint that allows us to trigger a DAG.\r\nhttps://github.com/apache/airflow/pull/8721/commits/00af37766eb6bd72dfc5c4f1c772369e31a29582\r\n\r\nI've also added filters for GET /dagRuns.\r\nhttps://github.com/apache/airflow/pull/8721/commits/d922f2b67a3d759169a21ac1ed4bb396c227ac7f\r\n\r\nHowever, I'm afraid it's safe to add run_id_prefix. This can cause inefficient queries. I think that we should include filtering if there is an established need to do so. It is always possible to add filtering later, but removing it is a breaking change. This is currently necessary in some cases, but I think we will be able to eliminate it soon.\r\nhttps://github.com/apache/airflow/pull/8227",
        "createdAt" : "2020-05-05T19:50:20Z",
        "updatedAt" : "2020-05-05T19:50:20Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 210,
    "diffHunk" : "@@ -1,1 +208,212 @@          $ref: '#/components/responses/NotFound'\n\n  /dags/{dag_id}/dagRuns:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'"
  },
  {
    "id" : "4dc23962-7c70-4d73-be6c-10e6cd3ac6fd",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406105898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "901d13f5-7bc3-4f78-852c-aad03faef12e",
        "parentId" : null,
        "authorId" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "body" : "I had never noticed that dag runs had an id in addition to their dag id, run id and execution date unique paired constraints. I don't think that users will expect to be using the id number to refer to dag runs.",
        "createdAt" : "2020-04-09T03:39:34Z",
        "updatedAt" : "2020-04-09T05:32:47Z",
        "lastEditedBy" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "tags" : [
        ]
      },
      {
        "id" : "55f7abc7-8a79-425c-b30d-448336d2cdd4",
        "parentId" : "901d13f5-7bc3-4f78-852c-aad03faef12e",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I relied on the current API.\r\nHere is change: https://github.com/apache/airflow/pull/8721/commits/3d014d69fa6518fa4d6a124d0b8f94758cea994e",
        "createdAt" : "2020-05-05T19:50:56Z",
        "updatedAt" : "2020-05-05T19:50:56Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 1861,
    "diffHunk" : "@@ -1,1 +1859,1863 @@      description: The DAG ID.\n\n    DAGRunID:\n      in: path\n      name: dag_run_id"
  },
  {
    "id" : "4dcd418e-7116-4eac-bdd0-a46986b659db",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406106222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e40be25-ca40-4553-927a-75f25b38035d",
        "parentId" : null,
        "authorId" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "body" : "This path would only work if we are okay with using the dag run's id column here.\r\n\r\nSince dag_id and execution_date and dag_id and run_id are pairs of unique constraints as a user who's never seen the id used before, I'd expect something like `/dags/{dag_id}/dagRuns/{run_id}` or `/dags/{dag_id}/dagRuns/{execution_date}`",
        "createdAt" : "2020-04-09T03:58:36Z",
        "updatedAt" : "2020-04-09T05:32:47Z",
        "lastEditedBy" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "tags" : [
        ]
      },
      {
        "id" : "a93b0b70-3008-4b60-a318-83362c211ca3",
        "parentId" : "7e40be25-ca40-4553-927a-75f25b38035d",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I updated spec. Now we use execution_date. \r\nHere is commit: \r\nhttps://github.com/apache/airflow/pull/8721/commits/3d014d69fa6518fa4d6a124d0b8f94758cea994e",
        "createdAt" : "2020-05-05T19:51:25Z",
        "updatedAt" : "2020-05-05T19:51:25Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 235,
    "diffHunk" : "@@ -1,1 +233,237 @@          $ref: '#/components/responses/Unauthenticated'\n\n  /dags/{dag_id}/dagRuns/{dag_run_id}:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'"
  },
  {
    "id" : "98bf7993-813d-44ce-adaf-b25703d883fe",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406106822",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d07dec6-48bc-4e3a-bce6-1486b966c46b",
        "parentId" : null,
        "authorId" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "body" : "There's a lot of options to filter this, and probably it will be necessary. There's an execution date range I'd be interested in using. Other indexes include pools, job ids, and state. I think some of those users would also like to see some filtering by state if possible.",
        "createdAt" : "2020-04-09T04:31:53Z",
        "updatedAt" : "2020-04-09T05:41:26Z",
        "lastEditedBy" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "tags" : [
        ]
      },
      {
        "id" : "38158072-d9dc-4445-a214-724863a3d0dc",
        "parentId" : "2d07dec6-48bc-4e3a-bce6-1486b966c46b",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I added some filter parameter.  Do you think they are enough?\r\nhttps://github.com/apache/airflow/pull/8721/commits/204928a84d4d5557b233ce44668b470a213ae241",
        "createdAt" : "2020-05-05T19:52:17Z",
        "updatedAt" : "2020-05-05T19:52:17Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 581,
    "diffHunk" : "@@ -1,1 +579,583 @@          $ref: '#/components/responses/PermissionDenied'\n\n  /dags/{dag_id}/taskInstances:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'"
  },
  {
    "id" : "a83fe890-f665-4c96-9e41-a125b2f663c4",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406107972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb53286b-228d-48df-b1ff-d5e6444f31ee",
        "parentId" : null,
        "authorId" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "body" : "This is the wrong summary.\r\n`summary: Delete a task instance`",
        "createdAt" : "2020-04-09T04:32:36Z",
        "updatedAt" : "2020-04-09T05:32:47Z",
        "lastEditedBy" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "tags" : [
        ]
      },
      {
        "id" : "bb36017a-7c0e-4153-aecb-28d92b3561c0",
        "parentId" : "cb53286b-228d-48df-b1ff-d5e6444f31ee",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I removed this endpoint. Now we have /dags/{dag_id}/clearTaskInstanaces endpoint that allows us to control task instance. What do you think?\r\nhttps://github.com/apache/airflow/pull/8721/commits/6514d68ee8eb86fd28b7a9bebc64d2089f6f9ef3",
        "createdAt" : "2020-05-05T19:54:00Z",
        "updatedAt" : "2020-05-05T19:54:00Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 663,
    "diffHunk" : "@@ -1,1 +661,665 @@\n    delete:\n      summary: Delete DAG Run\n      operationId: deleteTaskInstance\n      tags: [TaskInstance]"
  },
  {
    "id" : "be4a7e8d-0b86-4a6b-bc14-850a090ab245",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406111261",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa51992d-a404-419a-82fb-db8798284c87",
        "parentId" : null,
        "authorId" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "body" : "On the topic of updating a task instance, I'd like to see an api for the equivalent of the cli and ui \"clear task\" operation.\r\nThe reason this shouldn't be left to CRUD operations, is that even for just one TI it needs to set running states to shutdown, and related jobs to shutdown OR set other states to none, and then set the DAG run for this task instance change to running. Also it would be a convenience if it could clear downstream and or upstream tasks too. Then there's special handling for subdag's inner tasks.\r\nIf we only provide CRUD operations most users aren't going to implement all the right steps for clearing and rerunning a set of tasks.",
        "createdAt" : "2020-04-09T04:38:47Z",
        "updatedAt" : "2020-04-09T05:32:47Z",
        "lastEditedBy" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "tags" : [
        ]
      },
      {
        "id" : "64c001cd-7186-48e4-814d-18761047532e",
        "parentId" : "aa51992d-a404-419a-82fb-db8798284c87",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Good point. I will add endpoint. ",
        "createdAt" : "2020-04-29T06:02:13Z",
        "updatedAt" : "2020-04-29T06:02:14Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "2a937fe9-21d6-4467-801a-e325365862ad",
        "parentId" : "aa51992d-a404-419a-82fb-db8798284c87",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I created a new endpoint: https://github.com/apache/airflow/commit/6514d68ee8eb86fd28b7a9bebc64d2089f6f9ef3",
        "createdAt" : "2020-05-05T19:58:53Z",
        "updatedAt" : "2020-05-05T19:58:53Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 632,
    "diffHunk" : "@@ -1,1 +630,634 @@          $ref: '#/components/responses/NotFound'\n\n    patch:\n      summary: Update a task instance\n      operationId: updateTaskInstance"
  },
  {
    "id" : "b0adbe20-2f13-4288-8d4b-f865a7f16b96",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406113250",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b2ce6bb-fece-4cb0-80e0-93ed4ac12387",
        "parentId" : null,
        "authorId" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "body" : "While the xcom table uses ['dag_id', 'task_id', 'key', 'execution_date'] as the primary key, the task and dag ids are the string names of those entities.",
        "createdAt" : "2020-04-09T04:44:50Z",
        "updatedAt" : "2020-04-09T05:32:47Z",
        "lastEditedBy" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "tags" : [
        ]
      },
      {
        "id" : "c224b12c-defa-4f13-aa4e-f8e343ea1dba",
        "parentId" : "3b2ce6bb-fece-4cb0-80e0-93ed4ac12387",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I tried to build hierarchical URLs to make these APIs easier to use. How would you like these API URLs to look?",
        "createdAt" : "2020-05-05T20:01:44Z",
        "updatedAt" : "2020-05-05T20:02:07Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 865,
    "diffHunk" : "@@ -1,1 +863,867 @@          $ref: '#/components/responses/PermissionDenied'\n\n  /dags/{dag_id}/taskInstances/{task_id}/{execution_date}/xcomValues/{key}:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'"
  },
  {
    "id" : "9482dc1e-fa6a-44d5-9627-f3d64de878a2",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406113714",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96a2f726-3c0b-4163-8226-297b0a550353",
        "parentId" : null,
        "authorId" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "body" : "`operationId: updatePool`",
        "createdAt" : "2020-04-09T04:46:48Z",
        "updatedAt" : "2020-04-09T05:32:47Z",
        "lastEditedBy" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "tags" : [
        ]
      },
      {
        "id" : "05dd2f94-5806-4097-8936-a3bfce31ebfa",
        "parentId" : "96a2f726-3c0b-4163-8226-297b0a550353",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Thanks. Here is commit: https://github.com/apache/airflow/pull/8721/commits/b661d0c4a6e51043691ae287f64ac52782cc3954",
        "createdAt" : "2020-05-05T20:02:24Z",
        "updatedAt" : "2020-05-05T20:02:25Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 540,
    "diffHunk" : "@@ -1,1 +538,542 @@    patch:\n      summary: Update a pool\n      operationId: upadtePool\n      tags: [Pool]\n      parameters:"
  },
  {
    "id" : "a53a26ea-281f-4dab-88aa-aa07004dcbed",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406118452",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb148df9-0b11-43a5-9cfd-49b04a81dc63",
        "parentId" : null,
        "authorId" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "body" : "I think this should be `createXComEntry`",
        "createdAt" : "2020-04-09T04:48:09Z",
        "updatedAt" : "2020-04-09T05:32:47Z",
        "lastEditedBy" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "tags" : [
        ]
      },
      {
        "id" : "3ab9ad7b-f878-452d-a31f-ec434e4dd492",
        "parentId" : "cb148df9-0b11-43a5-9cfd-49b04a81dc63",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I updated spec. Here is commit: https://github.com/apache/airflow/pull/8721/commits/26e0d2292e00374623d6c72c869bbd8bf57d0ab3",
        "createdAt" : "2020-05-05T20:09:42Z",
        "updatedAt" : "2020-05-05T20:09:42Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 843,
    "diffHunk" : "@@ -1,1 +841,845 @@    post:\n      summary: Create an XCom entry\n      operationId: updateXComValues\n      tags: [XCom]\n      requestBody:"
  },
  {
    "id" : "7ae7abfc-7b35-4dd8-8557-684183c2e315",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406118845",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8edd0bb-4b79-4fc9-94c3-a03f85c2a2c3",
        "parentId" : null,
        "authorId" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "body" : "Because the value [is/should be] just one field of the returned by XcomCollectionItem these operationIds under this path which end in Value(s) get a little confusing. Maybe we could rename them like: `getXComEntries`? The same can be said about the summary and description mentioning just the values.",
        "createdAt" : "2020-04-09T05:29:24Z",
        "updatedAt" : "2020-04-09T05:32:47Z",
        "lastEditedBy" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "tags" : [
        ]
      },
      {
        "id" : "8940adb9-9546-4e89-b1a3-c938cd0d4c10",
        "parentId" : "f8edd0bb-4b79-4fc9-94c3-a03f85c2a2c3",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I updated spec. Here is commit: https://github.com/apache/airflow/pull/8721/commits/26e0d2292e00374623d6c72c869bbd8bf57d0ab3",
        "createdAt" : "2020-05-05T20:10:22Z",
        "updatedAt" : "2020-05-05T20:10:22Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 822,
    "diffHunk" : "@@ -1,1 +820,824 @@        This endpoint support reading resources across multiple Task Instances by specifying a\n        \"-\" as a `dag_id`, `task_id` and `execution_date`.\n      operationId: getXComValues\n      tags: [XCom]\n      parameters:"
  },
  {
    "id" : "2e45c296-1766-479e-9338-3042f2c41f5c",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-402353312",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5371ce0-5086-4f58-aaf2-68969d09f23c",
        "parentId" : null,
        "authorId" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "body" : "The XComCollectionItem appears to be missing a `value` property.",
        "createdAt" : "2020-04-09T05:29:55Z",
        "updatedAt" : "2020-04-09T05:32:47Z",
        "lastEditedBy" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "tags" : [
        ]
      },
      {
        "id" : "975a8a75-747a-4299-b6d1-d60d61dc9c8a",
        "parentId" : "f5371ce0-5086-4f58-aaf2-68969d09f23c",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This is intentional, because value can be very big. This information is available in the details of the specific resource.",
        "createdAt" : "2020-04-29T04:08:49Z",
        "updatedAt" : "2020-04-29T04:08:49Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 1453,
    "diffHunk" : "@@ -1,1 +1451,1455 @@      # Divided into two schemas for sensitive data protection\n      type: object\n      properties:\n        key:\n          type: string"
  },
  {
    "id" : "bf4401e7-25da-42e4-827a-0068c7406ca0",
    "prId" : 7549,
    "prUrl" : "https://github.com/apache/airflow/pull/7549#pullrequestreview-406120746",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "692bb633-8348-4e9a-abb4-074e05ee98a5",
        "parentId" : null,
        "authorId" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "body" : "Let's name the `operationId: updateConnection`. This is the only patch operation that is not named update something.",
        "createdAt" : "2020-04-09T05:45:45Z",
        "updatedAt" : "2020-04-09T05:45:45Z",
        "lastEditedBy" : "924e2557-c1ec-4669-95fd-7c988bf7503a",
        "tags" : [
        ]
      },
      {
        "id" : "18e9af5a-5ccc-449f-8de8-b8196247161b",
        "parentId" : "692bb633-8348-4e9a-abb4-074e05ee98a5",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "OperationID will change in the future due to integration with connexion.",
        "createdAt" : "2020-04-29T04:09:21Z",
        "updatedAt" : "2020-04-29T04:09:22Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "35ef5339-cb87-42fa-8f40-be5e42e55748",
        "parentId" : "692bb633-8348-4e9a-abb4-074e05ee98a5",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Here is commit: https://github.com/apache/airflow/pull/8721/commits/f40f400e16a657e84beabf2b17c66b6ef4558975",
        "createdAt" : "2020-05-05T20:13:16Z",
        "updatedAt" : "2020-05-05T20:13:16Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b0ad0fb606cc41f9af43cb6373aed25a8fc39c",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +106,110 @@    patch:\n      summary: Update a connection entry\n      operationId: patchConnection\n      tags: [Connection]\n      parameters:"
  },
  {
    "id" : "532c0de1-e4a7-422a-bb8b-ae8ca5d41ae8",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-406297039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "744f6434-1c50-4975-b756-a70ab87b17e1",
        "parentId" : null,
        "authorId" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "body" : "Typo? `>`",
        "createdAt" : "2020-05-06T01:31:58Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "tags" : [
        ]
      },
      {
        "id" : "f5312674-1176-4c10-89ac-6a07c61edd2f",
        "parentId" : "744f6434-1c50-4975-b756-a70ab87b17e1",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "It's a multiline string in YAML specification.\r\nhttps://yaml-multiline.info/",
        "createdAt" : "2020-05-06T04:29:11Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 255,
    "diffHunk" : "@@ -1,1 +253,257 @@    get:\n      summary: Get all DAG Runs\n      description: >\n        This endpoint allows specifying `~` as the dag_id to retrieve DAG Runs for all DAGs.\n      operationId: getDagRuns"
  },
  {
    "id" : "863d3091-673d-45f6-82ce-274b86495071",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-408637391",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31b0e7ca-ef00-45e6-b2f6-43a690146678",
        "parentId" : null,
        "authorId" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "body" : "*Not trying to start a flame war*\r\n\r\nGiven that snake_case is more common in modern APIs, does it make sense to use camelCase here?",
        "createdAt" : "2020-05-06T01:40:59Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "tags" : [
        ]
      },
      {
        "id" : "8af4a844-71d4-4ef9-a669-7df5b88a449b",
        "parentId" : "31b0e7ca-ef00-45e6-b2f6-43a690146678",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Here, I relied on Google's recommendations. These recommendations seem to me the most complete, so I think it's worth relying on them.\r\n\r\n> Collection identifiers must be in camelCase.\r\n\r\nhttps://aip.dev/122",
        "createdAt" : "2020-05-06T04:53:09Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "1d83e367-ddb9-4f0f-a054-ca2be200eb6d",
        "parentId" : "31b0e7ca-ef00-45e6-b2f6-43a690146678",
        "authorId" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "body" : "Makes sense. Thanks so much for sharing these thoughts / resources / design choices. Super interesting to see what went into this.",
        "createdAt" : "2020-05-06T05:20:16Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "tags" : [
        ]
      },
      {
        "id" : "5b4c7ee5-afde-4270-ac86-ecfa61f2aaf4",
        "parentId" : "31b0e7ca-ef00-45e6-b2f6-43a690146678",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "I don't disagree per se, but there is no justification given there, so pointing at this I could find an example saying the opposite.\n\nBut I don't care what we choose, so much as that what we choose is written in our docs.",
        "createdAt" : "2020-05-09T10:18:51Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 249,
    "diffHunk" : "@@ -1,1 +247,251 @@          $ref: '#/components/responses/NotFound'\n\n  /dags/{dag_id}/dagRuns:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'"
  },
  {
    "id" : "3e7938f3-2bd7-4c96-a422-b7aee5b96828",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-412475779",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e46ed39b-8da7-40de-bcfa-a218682276ca",
        "parentId" : null,
        "authorId" : "5e7fd00f-f33a-460e-b522-c8d8f463ae6a",
        "body" : "```suggestion\r\n        id:\r\n```\r\nThe id field naming is inconsistent. `EventLog`, `ImportError` and `Pool` use `id`.\r\n",
        "createdAt" : "2020-05-14T15:07:47Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "5e7fd00f-f33a-460e-b522-c8d8f463ae6a",
        "tags" : [
        ]
      },
      {
        "id" : "fd7aba3f-5e5e-4d98-8976-3c6fa4ea7c05",
        "parentId" : "e46ed39b-8da7-40de-bcfa-a218682276ca",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "https://github.com/apache/airflow/pull/8721/commits/5644c899c2f12e5f79c9cbcbc4f87be960e6b7e5\r\n",
        "createdAt" : "2020-05-15T09:08:27Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 1608,
    "diffHunk" : "@@ -1,1 +1606,1610 @@        class_ref:\n          $ref: '#/components/schemas/ClassReference'\n        task_id:\n          type: string\n          readOnly: true"
  },
  {
    "id" : "c6712483-ffb0-45de-ae53-957341444119",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-412475688",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fcc943d3-6cfc-4528-968a-066001e01580",
        "parentId" : null,
        "authorId" : "5e7fd00f-f33a-460e-b522-c8d8f463ae6a",
        "body" : "```suggestion\r\n        id:\r\n```\r\nThe id field naming is inconsistent. `EventLog`, `ImportError` and `Pool` use `id`.\r\n",
        "createdAt" : "2020-05-14T15:08:27Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "5e7fd00f-f33a-460e-b522-c8d8f463ae6a",
        "tags" : [
        ]
      },
      {
        "id" : "035fc071-8363-4107-ae05-b702fb81cd9d",
        "parentId" : "fcc943d3-6cfc-4528-968a-066001e01580",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Fixed. Thanks: https://github.com/apache/airflow/pull/8721/commits/5644c899c2f12e5f79c9cbcbc4f87be960e6b7e5\r\nI used the `{resource}_id` convention, because some resources have multiple IDs in schema, e.g. TaskInstance has `dag_id` and `task_id`.\r\n",
        "createdAt" : "2020-05-15T09:08:19Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 1167,
    "diffHunk" : "@@ -1,1 +1165,1169 @@      type: object\n      properties:\n        dag_id:\n          type: string\n          readOnly: true"
  },
  {
    "id" : "da5530ed-34b4-4ed8-b020-be7dbfa93cbe",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-414828664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24ea6a11-c193-4615-91ad-cb0c0f1b8675",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "This yields a structure of:\r\n\r\n```json\r\n{\r\n  \"sections\": [\r\n    {\r\n      \"name\": \"string\",\r\n      \"options\": [\r\n        {\r\n          \"key\": \"string\",\r\n          \"value\": \"string\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nThe 'array of dict with keys \"key\" and \"value\"' is a bit on the unwieldy side. Was there a reason to not have this return be\r\n\r\n```json\r\n{\r\n  \"sections\": [\r\n    {\r\n      \"name\": \"string\",\r\n      \"options\": {\r\n        \"key1\": \"value1\",\r\n        \"key2\": \"value2\",\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nOr even\r\n\r\n```json\r\n{\r\n  \"section1\": {\r\n    \"key1\": \"value1\",\r\n    \"key2\": \"value2\",\r\n  }\r\n}\r\n```",
        "createdAt" : "2020-05-19T21:03:03Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "eb1e4308-3833-4ab2-86c3-9dafbd4fd298",
        "parentId" : "24ea6a11-c193-4615-91ad-cb0c0f1b8675",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This allows for future API extensions. After all, it is not recommended to use dynamic values in the keys. This makes it difficult to use this API on clients that are strongly typed. If we do this, we should provide a scheme that will contain all possible keys.",
        "createdAt" : "2020-05-19T21:15:01Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 1715,
    "diffHunk" : "@@ -1,1 +1713,1717 @@          type: array\n          items:\n            $ref: '#/components/schemas/ConfigSection'\n\n    # From"
  },
  {
    "id" : "46b9951a-d13a-4f98-a7fb-5f7873ebc214",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-414871708",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad4fd7d6-1b64-43ad-ada3-afdf3e6e841f",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "The extra for a connection always has to be JSON right? Rather than submitting a string, should we perhaps make this be\r\n```suggestion\r\n              type: object\r\n```\r\n\r\nSince this is not a required field - I think? - that equates to \"not provided, or must be an object (which we can than `json.dumps` to put in the DB.",
        "createdAt" : "2020-05-19T21:06:29Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "cda2b6ea-d006-4c0c-98a0-c7bb8e48526b",
        "parentId" : "ad4fd7d6-1b64-43ad-ada3-afdf3e6e841f",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I preferred to return a string here to facilitate the use of this API in languages that are strongly typed and in API client generators. Typed languages don't like it when the keys in the dictionaries are dynamic, and here it will be because extra is a user-provided value.",
        "createdAt" : "2020-05-19T21:18:00Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "4030ce1b-9fba-47c8-bd0f-a162ed5f617b",
        "parentId" : "ad4fd7d6-1b64-43ad-ada3-afdf3e6e841f",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "I guess that makes sense. \r\n\r\n(I mean Go would be able to cope with this without too much work, there aren't any other statically typed languages that people still use, are there? :wink: )",
        "createdAt" : "2020-05-19T22:37:25Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 1162,
    "diffHunk" : "@@ -1,1 +1160,1164 @@              writeOnly: true\n            extra:\n              type: string\n\n    DAG:"
  },
  {
    "id" : "549c1bf4-0702-454c-8ed7-eb56602c919b",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-417899601",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be056dae-97e5-43e3-af25-d164142eb284",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "The schema for this returns the password field. I don't think we should _ever_ return that. Passwords are set only and should not be readable in APIs or UI I think",
        "createdAt" : "2020-05-19T21:07:57Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "bb40885c-1045-4c8e-a420-cfb4bd9b2203",
        "parentId" : "be056dae-97e5-43e3-af25-d164142eb284",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Ah, I think this is where `writeOnly` form OpenAPI spec should be used.",
        "createdAt" : "2020-05-19T22:38:02Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "bc559524-f9e8-41e9-8a18-76af998c75a5",
        "parentId" : "be056dae-97e5-43e3-af25-d164142eb284",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Fixed: Here is commit: https://github.com/apache/airflow/pull/8721/commits/2b48598e7896c7a8ff7f665710d16cb785ea06e8",
        "createdAt" : "2020-05-25T23:27:40Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +96,100 @@            application/json:\n              schema:\n                $ref: '#/components/schemas/Connection'\n        '401':\n          $ref: '#/components/responses/Unauthenticated'"
  },
  {
    "id" : "379369a2-404a-4ea3-8576-90c76ca81194",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-414872780",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c94e56e0-129b-46cd-9df4-b8f96b5e0ea1",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "If we have patch, should we not also have PUT to accept a complete new definition?\r\n\r\n(Basing this of the Kube api which has both PUT and PATCH verbs.)",
        "createdAt" : "2020-05-19T21:09:08Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "a2865612-3fa0-4000-a2ac-80f7418d41f0",
        "parentId" : "c94e56e0-129b-46cd-9df4-b8f96b5e0ea1",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "(This probably applies universally to everywhere we have PATCH in the API spec, I'm just reading form top-to-bottom in the rendered Swagger version.)",
        "createdAt" : "2020-05-19T21:09:44Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "fe67d343-b305-4b7b-a733-2502441c5ba8",
        "parentId" : "c94e56e0-129b-46cd-9df4-b8f96b5e0ea1",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "https://google.aip.dev/134#patch-and-put\r\nPUT sometimes causes problems and now you can still perform all operations in the API. All you have to do is not pass the field mask. If you can do something with fewer end points, I think it's worth it.\r\n",
        "createdAt" : "2020-05-19T21:20:48Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "36b24e53-c19e-4aa1-8ca4-a36665ff9c6c",
        "parentId" : "c94e56e0-129b-46cd-9df4-b8f96b5e0ea1",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Oh, I missed that field mask is optional on first skim.\r\n\r\nGotcha. :+1: ",
        "createdAt" : "2020-05-19T22:40:02Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +104,108 @@          $ref: '#/components/responses/NotFound'\n\n    patch:\n      summary: Update a connection entry\n      operationId: updateConnection"
  },
  {
    "id" : "c345ae73-4220-4987-83a4-e96a9ee44e96",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-414833275",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55f0d0d9-d68e-4010-ba7f-a3b7fdd7aec6",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "This renders it as \r\n\r\n```\r\n\"tags\": [\r\n        {\r\n          \"name\": \"string\"\r\n        }\r\n      ]\r\n```\r\n\r\nThat seems a bit clunky to consume? Do we need more than a array of strings here?",
        "createdAt" : "2020-05-19T21:13:55Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "c664ce24-9a85-4b31-b6c3-f1ac1dee9862",
        "parentId" : "55f0d0d9-d68e-4010-ba7f-a3b7fdd7aec6",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This is very important when it comes to future API extensions. In the future, we can add a new attribute to the TAG object, e.g. color, without breaking backward compatibility.",
        "createdAt" : "2020-05-19T21:22:44Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 1202,
    "diffHunk" : "@@ -1,1 +1200,1204 @@          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n          readOnly: true\n"
  },
  {
    "id" : "faf51e9c-9caa-49a6-968a-b030dab9b1c3",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-417896518",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7863e90b-7833-4c59-92ed-401eb6163d3f",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "A generic point: This means we have to do a (possibly expensive?) count operation for every page.\r\n\r\nWould it be a better idea instead to have a flag saying \"more pages\", we then only need to select limit+1 rows to find out if there are more pages than the API caller asked for.\r\n\r\ni.e. something like this in pseudo-python\r\n\r\n```python\r\n  queryset = session.query(X).offset(req.offset).limit(req.limit + 1)\r\n\r\n  ret = { 'more_pages': False, x: [] }\r\n  for n, row in enumerate(queryset):\r\n    if n == req.limit:\r\n      ret['more_pages'] = True\r\n      break\r\n    ret['x'].append(row.to_api_representation())\r\n\r\n```",
        "createdAt" : "2020-05-19T21:18:17Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "84786ced-d4d9-4f17-a5d2-409e9c767443",
        "parentId" : "7863e90b-7833-4c59-92ed-401eb6163d3f",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This will make it harder to use the API, e.g. it will make it difficult to create pagination, or it will make it difficult to download many pages at the same time. \r\n![Screenshot 2020-05-26 at 00 59 15](https://user-images.githubusercontent.com/12058428/82847043-2c3eb900-9eec-11ea-9659-7d609ce01acc.png)\r\n![Screenshot 2020-05-26 at 01 06 55](https://user-images.githubusercontent.com/12058428/82847222-36ad8280-9eed-11ea-86e5-bb2d4cb49b92.png)\r\n\r\nInfinite pagination is useful when building an API for a site that is very often used and we need to optimize database usage very drastically or when we expect users to never go to the last page, e.g. a news site.  However, Airflow is a system used inside organizations, and therefore has relatively few users. Counting all objects should not be a problem. if this is a problem, I think it is worth to think about how to optimize it.",
        "createdAt" : "2020-05-25T23:07:09Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 2024,
    "diffHunk" : "@@ -1,1 +2022,2026 @@      properties:\n        total_entries:\n          type: integer\n\n    # Enums"
  },
  {
    "id" : "f39a6674-bd6d-4e11-b220-1f37fe20d024",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-414831615",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b96795a2-8e6e-430a-8d4b-7b932a35a590",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Why only need this POST version if we are also supporting filtering by dag_id.\r\n\r\nI do like the clear `/dags/~/dagRuns/` example though!\r\n\r\nIgnore me entirely here. I was just confused by the \"No parameters\" in Swagger. But that is talking about path params.",
        "createdAt" : "2020-05-19T21:19:51Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 281,
    "diffHunk" : "@@ -1,1 +279,283 @@\n  /dags/~/dagRuns/list:\n    post:\n      summary: Get all DAG Runs from aall DAGs.\n      description: >"
  },
  {
    "id" : "594bf5b2-3e86-4c3e-8ff6-6ec044fe0dd4",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-417900785",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d009dc9-6267-4c32-8cab-7f30e176489c",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Am I right in reading that all of those options are optional? If so this feels like a bit of a dangerous endpoint -- if you post with an empty body it would clear the _entire dag history_! Should we make dry_run default to True perhaps?",
        "createdAt" : "2020-05-19T21:30:07Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "897768c0-34f1-4ab8-8a05-47b27752a106",
        "parentId" : "9d009dc9-6267-4c32-8cab-7f30e176489c",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Fixed. Thanks.\r\nhttps://github.com/apache/airflow/pull/8721/commits/a8051ca57ad988ad2a2612fed79ac24a5efc1c32",
        "createdAt" : "2020-05-25T23:35:28Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 233,
    "diffHunk" : "@@ -1,1 +231,235 @@          application/json:\n            schema:\n              $ref: '#/components/schemas/ClearTaskInstance'\n\n      responses:"
  },
  {
    "id" : "c116b2aa-3881-4561-9ae0-94149111f9fd",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-417902188",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9752d7f8-08b1-49ff-8f1a-7c63cb3879fd",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "I don't see any way of getting this file token value for a DAG?",
        "createdAt" : "2020-05-19T21:37:31Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "200a1a48-7672-477d-ba6b-5333dec8388e",
        "parentId" : "9752d7f8-08b1-49ff-8f1a-7c63cb3879fd",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "It will be available through HATEOS, but I will add this token in every schema where there is fileloc too.",
        "createdAt" : "2020-05-19T21:42:27Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "ec3b2d87-3ccb-4e40-85ce-dc38d3fac21c",
        "parentId" : "9752d7f8-08b1-49ff-8f1a-7c63cb3879fd",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "My understanding of HATEOAS was it would have an extra `links` or something similar in the response, which if true should be captured in the response schemas.",
        "createdAt" : "2020-05-19T22:51:38Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "4b376ed6-099f-4476-9b03-3c374c76e7d7",
        "parentId" : "9752d7f8-08b1-49ff-8f1a-7c63cb3879fd",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Just seen the \"Links\" column in Swagger view -- everything says \"no links\" though. How do we populate those?",
        "createdAt" : "2020-05-20T09:27:04Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "001b616c-d15e-4057-8ab6-4bb4e7fe20af",
        "parentId" : "9752d7f8-08b1-49ff-8f1a-7c63cb3879fd",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I want to do it in the next step, when we have defined the basic specifications. A good example of an API supporting HATEOS is the Github API.  HATEOAS is used to link to the next and previous pages in the collection, but it can also be found in the object definition.\r\n\r\n```\r\nGET /users/:username/gists\r\n```\r\n```\r\n[\r\n  {\r\n    \"url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d\",\r\n    \"forks_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\r\n    \"commits_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\r\n    \"id\": \"aa5a315d61ae9438b18d\",\r\n    \"node_id\": \"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\r\n    \"git_pull_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\r\n    \"git_push_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\r\n    \"html_url\": \"https://gist.github.com/aa5a315d61ae9438b18d\",\r\n    \"files\": {\r\n      \"hello_world.rb\": {\r\n        \"filename\": \"hello_world.rb\",\r\n        \"type\": \"application/x-ruby\",\r\n        \"language\": \"Ruby\",\r\n        \"raw_url\": \"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\r\n        \"size\": 167\r\n      }\r\n    },\r\n    \"public\": true,\r\n    \"created_at\": \"2010-04-14T02:15:15Z\",\r\n    \"updated_at\": \"2011-06-20T11:34:15Z\",\r\n    \"description\": \"Hello World Examples\",\r\n    \"comments\": 0,\r\n    \"user\": null,\r\n    \"comments_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\r\n    \"owner\": {\r\n      \"login\": \"octocat\",\r\n      \"id\": 1,\r\n      \"node_id\": \"MDQ6VXNlcjE=\",\r\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\r\n      \"gravatar_id\": \"\",\r\n      \"url\": \"https://api.github.com/users/octocat\",\r\n      \"html_url\": \"https://github.com/octocat\",\r\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\r\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\r\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\r\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\r\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\r\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\r\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\r\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\r\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\r\n      \"type\": \"User\",\r\n      \"site_admin\": false\r\n    },\r\n    \"truncated\": false\r\n  }\r\n]\r\n```\r\nIn this case, all `* _url` fields are not a definition of the object, but are part of HATEOS. This makes using the API easier, but you can still do everything without these URLs, but you'll have to read them in the documentation.\r\n\r\nWhen it comes to links to the previous and next pages, the Github API uses headers, but it is not always obvious to everyone. It is also allowed to define these links in the response. \r\n```\r\nHTTP/1.1 200 OK\r\n\r\n{\r\n    \"count\": 2,\r\n    \"next\": \"http://localhost:8000/users/?page=1\",\r\n    \"previous\": \"http://localhost:8000/users/?page=2\",\r\n    \"users\": [\r\n        {\r\n            \"email\": \"admin@example.com\",\r\n            \"groups\": [],\r\n            \"url\": \"http://localhost:8000/users/1/\",\r\n            \"username\": \"paul\"\r\n        },\r\n        {\r\n            \"email\": \"tom@example.com\",\r\n            \"groups\": [                ],\r\n            \"url\": \"http://127.0.0.1:8000/users/2/\",\r\n            \"username\": \"tom\"\r\n        }\r\n    ]\r\n}\r\n```\r\nHere is ticket about HATEOS: https://github.com/apache/airflow/issues/8117",
        "createdAt" : "2020-05-25T18:18:10Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "308c4f47-8de2-4ed4-a616-62584d2a0b18",
        "parentId" : "9752d7f8-08b1-49ff-8f1a-7c63cb3879fd",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I added the `file_token` field.\r\nhttps://github.com/apache/airflow/pull/8721/commits/a0d14a074b3cfab64e36f4c93722b6f454e22fe0",
        "createdAt" : "2020-05-25T23:45:02Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 1078,
    "diffHunk" : "@@ -1,1 +1076,1080 @@  /dagSources/{file_token}:\n    parameters:\n      - $ref: '#/components/parameters/FileToken'\n\n    get:"
  },
  {
    "id" : "167c31c5-4274-49fb-9639-56ae2be73f1f",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-414844609",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4860b307-f241-4098-8a14-2c137edf84e1",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "In a similar vein to https://lists.apache.org/thread.html/rd4be3829627dcef8b40314c62c041f460992786f3bfcc634d25a6664%40%3Cdev.airflow.apache.org%3E I think this should move from `POST /dags/{dag_id}/dagRuns/{execution_date}` to `POST /dags/{dag_id}/dagRuns` and take run_id and/or execution_date parameters",
        "createdAt" : "2020-05-19T21:42:15Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 333,
    "diffHunk" : "@@ -1,1 +331,335 @@          $ref: '#/components/responses/NotFound'\n\n    post:\n      summary: Trigger a DAG Run\n      operationId: createDagRun"
  },
  {
    "id" : "b81b5689-cc87-4027-96dc-3e2954b792d9",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-417902489",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe3a3e1b-76e8-4340-8f44-a615a0b598d3",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "This allows us to post start_date, end_date, state, and external_trigger params, which I don't think should be allowed here.",
        "createdAt" : "2020-05-19T21:43:23Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "43874b57-16bc-4e5b-ade2-48303669411a",
        "parentId" : "fe3a3e1b-76e8-4340-8f44-a615a0b598d3",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "A large number of parameters are marked as read-only. If the user submits it, they will be ignored.",
        "createdAt" : "2020-05-19T21:50:59Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "b48b0075-4100-4a03-9f57-36fca032267c",
        "parentId" : "fe3a3e1b-76e8-4340-8f44-a615a0b598d3",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Ignored or an error? Silently ignoring extra parameters is Bad.",
        "createdAt" : "2020-05-19T22:49:41Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "6246a0b1-b6af-4cd6-a7ea-5e7a3ceb4bac",
        "parentId" : "fe3a3e1b-76e8-4340-8f44-a615a0b598d3",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Most APIs ignore parameters that they do not understand to improve compatibility, but we can be more strict on this point.",
        "createdAt" : "2020-05-25T18:22:21Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "4bce1916-ce8f-480d-8c39-813a65d850a5",
        "parentId" : "fe3a3e1b-76e8-4340-8f44-a615a0b598d3",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "We can't mark these fields as read-only, but I added a description. Here is the commit: \r\nhttps://github.com/apache/airflow/pull/8721/commits/5e23eb0ccad8116ed3cd4d4aa28f194dcece7a65",
        "createdAt" : "2020-05-25T23:46:58Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 342,
    "diffHunk" : "@@ -1,1 +340,344 @@          application/json:\n            schema:\n              $ref: '#/components/schemas/DAGRun'\n      responses:\n        '200':"
  },
  {
    "id" : "e1abe079-8a5f-4560-b075-e0bf16696450",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-421479991",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d4257be-6170-4df2-afdd-356264b16658",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Same comment here about conf parameter (accepting a JSON `string` vs accepting a `type: object` and then doing a json.dumps to store it)",
        "createdAt" : "2020-05-19T21:43:56Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "d6a8a292-cb0e-4a67-9694-5492a043f652",
        "parentId" : "2d4257be-6170-4df2-afdd-356264b16658",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This is needed for strongly typed languages. If we want the API to be usable by every client, we must provide a scheme for each field. If we are unable to provide schema then we must return JSON as a string.",
        "createdAt" : "2020-05-19T21:53:56Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "48aeb6f0-9b1d-47fb-a500-6d2af7aaf363",
        "parentId" : "2d4257be-6170-4df2-afdd-356264b16658",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "The schema can be `object`? We don't have to specify more than that.\r\n\r\nIt is totally possible to encode arbitrary data in staticly typed languages https://blog.golang.org/json#TOC_5. for example.",
        "createdAt" : "2020-05-28T11:17:49Z",
        "updatedAt" : "2020-06-01T19:05:12Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "c21847b3-7d77-46e0-9d36-f747fafdbdf7",
        "parentId" : "2d4257be-6170-4df2-afdd-356264b16658",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I'm afraid that it can still cause various problems. When I write about strongly typed language, I mean Java/C++. In Java,  there are two different libraries that are written with a completely different philosophy.\r\n* Unstructured JSON e.g. Json-Simple API - This creates special JSON objects that are used to store data. Thanks to this you can process any objects, but the API is not very pleasant and you don't have type hints. This is similar to the approach available in Python.\r\n```\r\nimport java.io.FileReader; \r\nimport java.util.Iterator; \r\nimport java.util.Map; \r\n  \r\nimport org.json.simple.JSONArray; \r\nimport org.json.simple.JSONObject; \r\nimport org.json.simple.parser.*; \r\n  \r\npublic class JSONReadExample  \r\n{ \r\n    public static void main(String[] args) throws Exception  \r\n    { \r\n        // parsing file \"JSONExample.json\" \r\n        Object obj = new JSONParser().parse(new FileReader(\"JSONExample.json\")); \r\n          \r\n        // typecasting obj to JSONObject \r\n        JSONObject jo = (JSONObject) obj; \r\n          \r\n        // getting firstName and lastName \r\n        String firstName = (String) jo.get(\"firstName\"); \r\n        String lastName = (String) jo.get(\"lastName\"); \r\n          \r\n        System.out.println(firstName); \r\n        System.out.println(lastName); \r\n          \r\n        // getting age \r\n        long age = (long) jo.get(\"age\"); \r\n        System.out.println(age); \r\n          \r\n        // getting address \r\n        Map address = ((Map)jo.get(\"address\")); \r\n          \r\n        // iterating address Map \r\n        Iterator<Map.Entry> itr1 = address.entrySet().iterator(); \r\n        while (itr1.hasNext()) { \r\n            Map.Entry pair = itr1.next(); \r\n            System.out.println(pair.getKey() + \" : \" + pair.getValue()); \r\n        } \r\n          \r\n        // getting phoneNumbers \r\n        JSONArray ja = (JSONArray) jo.get(\"phoneNumbers\"); \r\n          \r\n        // iterating phoneNumbers \r\n        Iterator itr2 = ja.iterator(); \r\n          \r\n        while (itr2.hasNext())  \r\n        { \r\n            itr1 = ((Map) itr2.next()).entrySet().iterator(); \r\n            while (itr1.hasNext()) { \r\n                Map.Entry pair = itr1.next(); \r\n                System.out.println(pair.getKey() + \" : \" + pair.getValue()); \r\n            } \r\n        } \r\n    } \r\n} \r\n```\r\n* Structured JSON e.g. GSON -  An approach that requires you to define classes for all objects before using them. This means that you must convert OpneAPI schemas to the corresponding class languages before use.\r\n```\r\npublic class Car {\r\n    public String brand = null;\r\n    public int    doors = 0;\r\n}\r\nString json = \"{\\\"brand\\\":\\\"Jeep\\\", \\\"doors\\\": 3}\";\r\n\r\nGson gson = new Gson();\r\n\r\nCar car = gson.fromJson(json, Car.class);\r\n```\r\nThis approach is very popular in the Java world because it provides type hints and is closest to the philosophy of the language.\r\n\r\nIn our API it is necessary to use both approaches because for conf field we are not able to specify a specific type. The easiest way to do this is to use two different libraries.\r\n\r\nOf course, there are workarounds that can also process unstructured JSON in a GSON also, but we cannot guarantee that such a workaround will exist in every language and library.  The processing of structured JSON objects and unstructured JSON objects are completely two different problems, and most often completely different libraries are used. To facilitate the connection of these two worlds, I think we should return this data as a text string. ",
        "createdAt" : "2020-05-28T14:28:06Z",
        "updatedAt" : "2020-06-01T19:05:12Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "4caa72a1-34eb-45b0-91d0-d1c7bfb001dc",
        "parentId" : "2d4257be-6170-4df2-afdd-356264b16658",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I tested it using generated apis and seems that it is super-easy to get it in Java using Jackson (this is what generated API uses).\r\n\r\nSeems that both read and write is simple and straightforward (and @houqp also wrote a Go example showing that it's also easy and straightforward). \r\n\r\nIn this case I am for \"object\" \r\n\r\n```\r\n @Test\r\n    public void dagTest() throws IOException {\r\n        DAGRun dagRun = new DAGRun();\r\n        HashMap<Object, Object> confObject = new HashMap<>();\r\n        String array[] = new String[] {\"1\", \"2\", \"3\"};\r\n        confObject.put(\"a\", array);\r\n        confObject.put(\"b\", \"c\");\r\n        dagRun.setConf(confObject);\r\n        ObjectMapper mapper = api.getApiClient().getObjectMapper();\r\n        String data = mapper.writer().writeValueAsString(dagRun);\r\n        System.out.println(data);\r\n        TypeReference<DAGRun> typeRef = new TypeReference<DAGRun>() {};\r\n        DAGRun dagRunRead = mapper.readValue(data, typeRef);\r\n        System.out.println();\r\n        System.out.println(dagRunRead);\r\n        System.out.println(dagRunRead.getConf().getClass());\r\n\r\n        DAGRun dagRun2 = new DAGRun();\r\n        HashMap confObject2 =\r\n                mapper.readValue(\"{\\\"a\\\":[\\\"1\\\", \\\"2\\\", \\\"3\\\"],\\\"b\\\":\\\"c\\\" }\", confObject.getClass());\r\n        dagRun2.setConf(confObject2);\r\n        String data2 = mapper.writer().writeValueAsString(dagRun2);\r\n        System.out.println(data2);\r\n        DAGRun dagRunRead2 = mapper.readValue(data2, typeRef);\r\n        System.out.println();\r\n        System.out.println(dagRunRead2);\r\n        System.out.println(dagRunRead2.getConf().getClass());\r\n}\r\n```\r\n\r\nProduces:\r\n\r\n```\r\n\"dag_run_id\":null,\"dag_id\":null,\"execution_date\":null,\"start_date\":null,\"end_date\":null,\"state\":null,\"external_trigger\":true,\"conf\":{\"a\":[\"1\",\"2\",\"3\"],\"b\":\"c\"}}\r\n\r\nclass DAGRun {\r\n    dagRunId: null\r\n    dagId: null\r\n    executionDate: null\r\n    startDate: null\r\n    endDate: null\r\n    state: null\r\n    externalTrigger: true\r\n    conf: {a=[1, 2, 3], b=c}\r\n}\r\nclass java.util.LinkedHashMap\r\n{\"dag_run_id\":null,\"dag_id\":null,\"execution_date\":null,\"start_date\":null,\"end_date\":null,\"state\":null,\"external_trigger\":true,\"conf\":{\"a\":[\"1\",\"2\",\"3\"],\"b\":\"c\"}}\r\n\r\nclass DAGRun {\r\n    dagRunId: null\r\n    dagId: null\r\n    executionDate: null\r\n    startDate: null\r\n    endDate: null\r\n    state: null\r\n    externalTrigger: true\r\n    conf: {a=[1, 2, 3], b=c}\r\n}\r\nclass java.util.LinkedHashMap\r\n```",
        "createdAt" : "2020-05-31T10:13:47Z",
        "updatedAt" : "2020-06-01T19:05:12Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 342,
    "diffHunk" : "@@ -1,1 +340,344 @@          application/json:\n            schema:\n              $ref: '#/components/schemas/DAGRun'\n      responses:\n        '200':"
  },
  {
    "id" : "cedc2836-999d-4299-97f2-6dc9b540fd06",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-417902582",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6c21fb3-b322-42d8-8201-49e77b1b5d2e",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Which fields does it make sense to allow editing on a DAGRun? I think state is possibly the only field that should be allowed.",
        "createdAt" : "2020-05-19T21:44:42Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "b38bcc5b-be6d-4162-9e82-e4f49e382222",
        "parentId" : "f6c21fb3-b322-42d8-8201-49e77b1b5d2e",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I updated the description:\r\nhttps://github.com/apache/airflow/pull/8721/commits/5e23eb0ccad8116ed3cd4d4aa28f194dcece7a65",
        "createdAt" : "2020-05-25T23:47:42Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 370,
    "diffHunk" : "@@ -1,1 +368,372 @@          application/json:\n            schema:\n              $ref: '#/components/schemas/DAGRun'\n\n      responses:"
  },
  {
    "id" : "fc639b19-1420-478b-9573-a16047498b29",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-417838927",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad91ac20-bb84-4f0b-b95c-382bab299fe1",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Do we want to let DAG Runs be deleted, or just cleared? Does the UI let you delete dag runs? (I know the CLI doesn't).",
        "createdAt" : "2020-05-19T21:45:27Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "0f7ccc01-4b57-4401-975a-28067cc0bf76",
        "parentId" : "ad91ac20-bb84-4f0b-b95c-382bab299fe1",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Yes the UI does let you delete the DagRun:\r\n\r\n![image](https://user-images.githubusercontent.com/8811558/82391265-d3c57280-9a38-11ea-9eb5-5a6a0f8e79b5.png)\r\n",
        "createdAt" : "2020-05-20T00:25:54Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "f3b07014-1e42-47b5-9bf9-9784200311c9",
        "parentId" : "ad91ac20-bb84-4f0b-b95c-382bab299fe1",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "K next question: show we allow this? What does this mean for any TIs under it? \r\n\r\na) Probably,\r\nb) Delete them too?\r\n\r\nProbably not a Q for here.",
        "createdAt" : "2020-05-20T09:16:05Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "ebbe506d-3d78-4282-9f6c-73a2ec724bc4",
        "parentId" : "ad91ac20-bb84-4f0b-b95c-382bab299fe1",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Yes. It seems to me that we should also delete all objects that are in this collection.",
        "createdAt" : "2020-05-25T18:32:08Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 388,
    "diffHunk" : "@@ -1,1 +386,390 @@          $ref: '#/components/responses/NotFound'\n\n    delete:\n      summary: Delete a DAG Run\n      operationId: deleteDagRun"
  },
  {
    "id" : "3bfe37b7-7a26-4b4f-a297-f88fcda40bdd",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-417902807",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4f6006f-6f4c-4ec0-b6ba-c78ec6e805ec",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "I think `pool_id` should be hidden, and name renamed to pool_id -- the numeric ID of the pool is never used in Airflow, just the name is, and it's unique, so that should be the identifier for Pools.",
        "createdAt" : "2020-05-19T21:51:13Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "5e23f9ed-4ebe-47a6-817b-383f00a86e7f",
        "parentId" : "c4f6006f-6f4c-4ec0-b6ba-c78ec6e805ec",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "The Pool endpoints already use pool_name, so I think this is the last/only appearance of a numeric pool ID and it should go.",
        "createdAt" : "2020-05-19T21:51:59Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "cf64e25a-5bd2-42ec-b8a7-54160c185b9d",
        "parentId" : "c4f6006f-6f4c-4ec0-b6ba-c78ec6e805ec",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I removed pool_id field.\r\nhttps://github.com/apache/airflow/pull/8721/commits/5b6840da99dd16188fcb8b3df89632565ce5bb48",
        "createdAt" : "2020-05-25T23:49:08Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 1342,
    "diffHunk" : "@@ -1,1 +1340,1344 @@      properties:\n        name:\n          type: string\n        slots:\n          type: integer"
  },
  {
    "id" : "41701abe-4e88-4ae4-ad6a-1562e67eb6ce",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-414879067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eeae7348-6861-4b62-b38c-49c60bc0cb72",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "This, (and a few other cases?) might be a suitable use of 201 Created -- is there any need to return the DagRun object which the user just posted to us?",
        "createdAt" : "2020-05-19T21:56:28Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "627927e6-6a87-46ad-87e1-77c8805c927b",
        "parentId" : "eeae7348-6861-4b62-b38c-49c60bc0cb72",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Yes. DagRun has some dynamic values, e.g. execution_date, if the user does not provide this field. ",
        "createdAt" : "2020-05-19T21:59:15Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "3261363f-b274-4951-805b-c3f7c0390926",
        "parentId" : "eeae7348-6861-4b62-b38c-49c60bc0cb72",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "201 HTTP Code is useful if the endpoint can not return a full resource, but had to provide a URL to that resource. Then the Location header should be used.\r\n```\r\nHTTP/1.1 201 OK\r\nLocation: /resource/{id}\r\n```",
        "createdAt" : "2020-05-19T22:05:41Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "ca2391b7-97ec-416a-859e-a99fb33ca7df",
        "parentId" : "eeae7348-6861-4b62-b38c-49c60bc0cb72",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Oh yeah, I forgot about \"execution_date = now\" default. Cool",
        "createdAt" : "2020-05-19T22:55:35Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 344,
    "diffHunk" : "@@ -1,1 +342,346 @@              $ref: '#/components/schemas/DAGRun'\n      responses:\n        '200':\n          description: Successful response.\n          content:"
  },
  {
    "id" : "84c219b4-0d5c-422f-9ff2-87f7445fecb4",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-417904081",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "692a1780-612b-4333-9bae-12cd14ce8778",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "```suggestion\r\n            password:\r\n              type: string\r\n              format: password\r\n              writeOnly: true\r\n```",
        "createdAt" : "2020-05-19T22:59:44Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "ba4ebf81-e035-4490-b803-bfbb8d91dc91",
        "parentId" : "692a1780-612b-4333-9bae-12cd14ce8778",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Thanks. I added `writeOnly` to this field. https://github.com/apache/airflow/pull/8721/commits/2b48598e7896c7a8ff7f665710d16cb785ea06e8",
        "createdAt" : "2020-05-25T23:57:34Z",
        "updatedAt" : "2020-06-01T19:05:12Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 1159,
    "diffHunk" : "@@ -1,1 +1157,1161 @@            password:\n              type: string\n              format: password\n              writeOnly: true\n            extra:"
  },
  {
    "id" : "6d423c04-d1ec-42ff-a39a-5724a7f7d759",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-417885859",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6099a2df-cf2c-4d6e-b977-e00d531a40e5",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Which logs are these ? Are these from the Log table ?",
        "createdAt" : "2020-05-20T00:27:12Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "7027b587-6d4b-404f-971e-0a9bfdb95c14",
        "parentId" : "6099a2df-cf2c-4d6e-b977-e00d531a40e5",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Yes. It is.\r\n![localhost_28080_log_list_](https://user-images.githubusercontent.com/12058428/82845047-2ee8e080-9ee3-11ea-8aa7-f0ef52b963fc.png)\r\n",
        "createdAt" : "2020-05-25T21:55:23Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 404,
    "diffHunk" : "@@ -1,1 +402,406 @@  /eventLogs:\n    get:\n      summary: Get all log entries from event log\n      operationId: getEventLog\n      tags: [EventLog]"
  },
  {
    "id" : "a9dda39a-7767-476b-b8f7-0e0a28ac9bb6",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-417887551",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0e09f65-b8d9-4d04-9b72-c2242ac43642",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Can be simplified to `error_id` or `id` I guess\r\n\r\n```suggestion\r\n        error_id:\r\n```",
        "createdAt" : "2020-05-20T00:47:23Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "976818c8-2524-4cf7-831b-771a7ace731c",
        "parentId" : "f0e09f65-b8d9-4d04-9b72-c2242ac43642",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I try to keep some conventions. If the object is called Import Error, the field with the identifier is `import_error_id`. The `id` field is too generic and can easily be confused. I would also like the object ID to have consequences throughout the API. If we use the name dag_id in one object, then `dag_id` must be used in every place, even if in the given situation the `id` will clearly describe the field.",
        "createdAt" : "2020-05-25T22:06:22Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 1316,
    "diffHunk" : "@@ -1,1 +1314,1318 @@      type: object\n      properties:\n        import_error_id:\n          type: integer\n          readOnly: true"
  },
  {
    "id" : "2cd4d477-f786-44d6-aa3c-3a1a646c6f46",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-417888862",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5080dc11-8228-46ac-af90-a81582faaaa0",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Hmm.. we have `filename` and `stracktrace` as Column names so we might want to use `stracktrace` here too instead of `stack_trace`",
        "createdAt" : "2020-05-20T00:48:12Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "91466b0b-f1e3-423f-b742-36ec45254e36",
        "parentId" : "5080dc11-8228-46ac-af90-a81582faaaa0",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "We should do what makes the most sense, not just blindly copy across the column names in to the API output.\r\n\r\n(I don't have an opinion on `stacktrace` vs `stack_trace`)",
        "createdAt" : "2020-05-20T09:23:47Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "c44edccf-3339-4c5e-996d-ccc239fa984f",
        "parentId" : "5080dc11-8228-46ac-af90-a81582faaaa0",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "stacktrace is probably not a valid name. \r\n\r\nPython docs use `stack trace` (with space)\r\nhttps://docs.python.org/3/library/pdb.html\r\n![Screenshot 2020-05-26 at 00 09 20](https://user-images.githubusercontent.com/12058428/82845516-37dab180-9ee5-11ea-92bc-abb577ff42b3.png)\r\nWikipedia also\r\nhttps://en.wikipedia.org/wiki/Stack_trace\r\n![Screenshot 2020-05-26 at 00 10 02](https://user-images.githubusercontent.com/12058428/82845540-432ddd00-9ee5-11ea-9734-e5efb9a19305.png)\r\nHowever, I don't have a strong opinion. I think stack trace is more popular, so it will be easier for you to use these APIs.\r\n",
        "createdAt" : "2020-05-25T22:12:17Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "db5f65b5-440f-4e08-be46-287f93bd785c",
        "parentId" : "5080dc11-8228-46ac-af90-a81582faaaa0",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Yeah, I don't have a strong opinion too :) so maybe then let's keep it as it is ",
        "createdAt" : "2020-05-25T22:15:41Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 1326,
    "diffHunk" : "@@ -1,1 +1324,1328 @@          type: string\n          readOnly: true\n        stack_trace:\n          type: string\n          readOnly: true"
  },
  {
    "id" : "7f14fd20-3006-4ac8-80d5-4befafb2aad9",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-417905694",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b587e415-0940-470c-bde9-3928db13128c",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "We are missing `none_failed_or_skipped`",
        "createdAt" : "2020-05-20T00:57:02Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "8f4bf1d6-4143-42e5-9061-3a3739db5758",
        "parentId" : "b587e415-0940-470c-bde9-3928db13128c",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I added it. https://github.com/apache/airflow/pull/8721/commits/a98185c154f3dd71d3a34a1a7d41b75574a65429",
        "createdAt" : "2020-05-26T00:07:49Z",
        "updatedAt" : "2020-06-01T19:05:12Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 2057,
    "diffHunk" : "@@ -1,1 +2055,2059 @@        - one_failed\n        - none_failed\n        - none_skipped\n        - none_failed_or_skipped\n        - dummy"
  },
  {
    "id" : "28f363d2-ff52-46fa-8d6a-cda5cea3a757",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-417845378",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11fc518a-e64a-4f06-b5e8-8ddd4fcb34cc",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Why is it called \"UpdateMask\" - Just curious, no comment here",
        "createdAt" : "2020-05-20T01:00:10Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "ad010ebf-b275-4fea-aee5-bfc7c38bfbd2",
        "parentId" : "11fc518a-e64a-4f06-b5e8-8ddd4fcb34cc",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Mostly just copying https://google.aip.dev/134#patch-and-put",
        "createdAt" : "2020-05-20T09:25:36Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "2c98c9a5-feb9-4083-b7ac-48c0915f2e6c",
        "parentId" : "11fc518a-e64a-4f06-b5e8-8ddd4fcb34cc",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Yes. I tried to stick to one recommendation on building an API. We don't have to come up with a new idea if we can rely on tested solutions.",
        "createdAt" : "2020-05-25T18:57:01Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 2322,
    "diffHunk" : "@@ -1,1 +2320,2324 @@    UpdateMask:\n      in: query\n      name: update_mask\n      schema:\n        type: array"
  },
  {
    "id" : "4e098c5f-2312-43e2-ba74-c26b0f2f5927",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-420663380",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bee4d447-00bd-48d4-b874-694956e85bb4",
        "parentId" : null,
        "authorId" : "8aed94d2-6aa0-4933-8a74-56c652d61ab6",
        "body" : "Have any filters been discussed? Such as getting DAGs filtered by name or by is_paused status?",
        "createdAt" : "2020-05-24T18:41:31Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "8aed94d2-6aa0-4933-8a74-56c652d61ab6",
        "tags" : [
        ]
      },
      {
        "id" : "e701e6e4-145b-4a9a-bcf3-c153e0b41a80",
        "parentId" : "bee4d447-00bd-48d4-b874-694956e85bb4",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Discussed, yes, but no conclusions reached as to the best form for them. Do you have options?",
        "createdAt" : "2020-05-25T09:22:27Z",
        "updatedAt" : "2020-06-01T19:05:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "e797c655-d84b-4fb1-b9af-ba6de16a835b",
        "parentId" : "bee4d447-00bd-48d4-b874-694956e85bb4",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "(We can add this later, we don't need to block the spec on deciding this)",
        "createdAt" : "2020-05-28T10:59:26Z",
        "updatedAt" : "2020-06-01T19:05:12Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "ebe7a9c6-bed4-40f0-b40a-c1e25feb44da",
        "parentId" : "bee4d447-00bd-48d4-b874-694956e85bb4",
        "authorId" : "8aed94d2-6aa0-4933-8a74-56c652d61ab6",
        "body" : "Agreed, easy enough to add later. I don't have specific options to suggest but wanted to bring it up since it's definitely a use case we have.",
        "createdAt" : "2020-05-29T05:35:15Z",
        "updatedAt" : "2020-06-01T19:05:12Z",
        "lastEditedBy" : "8aed94d2-6aa0-4933-8a74-56c652d61ab6",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +152,156 @@      operationId: getDags\n      tags: [DAG]\n      parameters:\n        - $ref: '#/components/parameters/PageLimit'\n        - $ref: '#/components/parameters/PageOffset'"
  },
  {
    "id" : "c0c71cbf-d54f-4563-b1f0-c64784e94810",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-419340692",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e078faa-d262-4e9b-b83f-d443899123a6",
        "parentId" : null,
        "authorId" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "body" : "should we support non-inclusive less than as well? it will make it easier to do range based filtering.",
        "createdAt" : "2020-05-26T22:10:17Z",
        "updatedAt" : "2020-06-01T19:05:12Z",
        "lastEditedBy" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "tags" : [
        ]
      },
      {
        "id" : "ac9fe601-287a-4da6-9f03-d9ea7d748b52",
        "parentId" : "1e078faa-d262-4e9b-b83f-d443899123a6",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I am afraid that this can significantly increase the number of filters and at the same time will not bring much benefit to the user. This date is given as ISO, so it has very high precision. I suspect it will be a very small difference.\r\n> date-time – the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z\r\n\r\nhttps://swagger.io/docs/specification/data-models/data-types/\r\n\r\nOn other hand, the user can filter the elements very easily or subtract/add a small number to ensure similar behavior.\r\n\r\nWe can also be inspired by Google. In Google BigQuery APi, they provide date range filter by minCreationTime and maxCreationTime parameter. \r\nhttps://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/list\r\n\r\n",
        "createdAt" : "2020-05-27T15:26:53Z",
        "updatedAt" : "2020-06-01T19:05:12Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 620,
    "diffHunk" : "@@ -1,1 +618,622 @@      - $ref: '#/components/parameters/DAGRunID'\n      - $ref: '#/components/parameters/FilterExecutionDateGTE'\n      - $ref: '#/components/parameters/FilterExecutionDateLTE'\n      - $ref: '#/components/parameters/FilterStartDateGTE'\n      - $ref: '#/components/parameters/FilterStartDateLTE'"
  },
  {
    "id" : "64e17460-8e12-42bb-91a8-55034fd8a3cd",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-419271580",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d96650ae-6ff1-4399-853a-ffa46c31f40c",
        "parentId" : null,
        "authorId" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "body" : "do we always return the full log regardless of the log size?",
        "createdAt" : "2020-05-26T22:29:48Z",
        "updatedAt" : "2020-06-01T19:05:12Z",
        "lastEditedBy" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "tags" : [
        ]
      },
      {
        "id" : "97429180-c674-4baa-8f56-7ab7d2de8ee2",
        "parentId" : "d96650ae-6ff1-4399-853a-ffa46c31f40c",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This endpoint supports [content negotiation](https://developer.mozilla.org/en-US/docs/Web/HTTP/Content_negotiation) and behavior depend on the content format. For JSON, only chunks of logs are returned. However, this mechanism can be turned off using the NoChunking parameter.  For text, a full response is returned.",
        "createdAt" : "2020-05-27T14:28:49Z",
        "updatedAt" : "2020-06-01T19:05:12Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 968,
    "diffHunk" : "@@ -1,1 +966,970 @@          $ref: '#/components/responses/NotFound'\n\n  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/logs/{task_try_number}:\n    parameters:\n      - $ref: '#/components/parameters/DAGID'"
  },
  {
    "id" : "bc66ab9a-1659-41da-b2b7-94cc4f027688",
    "prId" : 8721,
    "prUrl" : "https://github.com/apache/airflow/pull/8721#pullrequestreview-419345174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4e32b73-5eaf-4d0b-a0f8-f146f2dab6a5",
        "parentId" : null,
        "authorId" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "body" : "would be nice to add context here on why this endpoint is needed and when should one use this v.s. the other one.",
        "createdAt" : "2020-05-26T22:31:34Z",
        "updatedAt" : "2020-06-01T19:05:12Z",
        "lastEditedBy" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "tags" : [
        ]
      },
      {
        "id" : "fabac219-e06b-47f0-9f28-d219efd4aa10",
        "parentId" : "a4e32b73-5eaf-4d0b-a0f8-f146f2dab6a5",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I would like to write a guide that will describe the most common problems. I will add an explanation now.",
        "createdAt" : "2020-05-27T14:49:01Z",
        "updatedAt" : "2020-06-01T19:05:12Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "bda9ee86-3b5a-4db3-9455-c0008e06972f",
        "parentId" : "a4e32b73-5eaf-4d0b-a0f8-f146f2dab6a5",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I updated the spec: https://github.com/apache/airflow/pull/8721/commits/1f72862eb9910e1f6deb2c3d209905bbb77e6921",
        "createdAt" : "2020-05-27T15:31:37Z",
        "updatedAt" : "2020-06-01T19:05:12Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6153d5b4d68d1f8974fe599a5097d24a062dbf0a",
    "line" : 1011,
    "diffHunk" : "@@ -1,1 +1009,1013 @@\n    get:\n      summary: Get a simplified representation of DAG.\n      operationId: getDagDetail\n      description: >"
  }
]