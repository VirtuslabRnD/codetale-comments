[
  {
    "id" : "afd8a6d0-5a88-459a-9c41-ffd124c2ee48",
    "prId" : 3241,
    "prUrl" : "https://github.com/zio/zio/pull/3241#pullrequestreview-387184697",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "622ae0bb-e172-414c-aad6-142e1180d3dd",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Would be good to add some more tests that combinators preserve the `NonEmptyChunk` subtype where possible to prevent regressions.",
        "createdAt" : "2020-04-03T03:37:23Z",
        "updatedAt" : "2020-04-05T14:05:28Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "c3e5956b-6672-42e7-8dbc-ebf94aaf9489",
        "parentId" : "622ae0bb-e172-414c-aad6-142e1180d3dd",
        "authorId" : "1724c5b2-b76c-4a84-8962-52e808e74b8a",
        "body" : "https://github.com/zio/zio/pull/3241/files#diff-e70b1123afcb5d5449a81bc97a79a0d1R292-R323",
        "createdAt" : "2020-04-03T11:48:16Z",
        "updatedAt" : "2020-04-05T14:05:28Z",
        "lastEditedBy" : "1724c5b2-b76c-4a84-8962-52e808e74b8a",
        "tags" : [
        ]
      }
    ],
    "commit" : "636dde1f75b61da49bb21be2b721534817bc2454",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +278,282 @@      assert(Chunk(1, 2).zipAllWith(Chunk(3, 2, 1))(_ => 0, _ => 0)(_ + _))(equalTo(Chunk(4, 4, 0)))\n    },\n    testM(\"flatMap Non Empty\") {\n      val fn = Gen.function[Random with Sized, Int, Chunk[Int]](smallChunks(intGen))\n      check(smallChunks(intGen), fn) { (c_, f_) =>"
  },
  {
    "id" : "5e432ee2-d1a9-40f0-8ccd-f981c47e7ba5",
    "prId" : 1797,
    "prUrl" : "https://github.com/zio/zio/pull/1797#pullrequestreview-291524920",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc3325ba-71ce-4473-a87d-5150a55e258c",
        "parentId" : null,
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "Could  you add  @Jentsch 's testcase? `Chunk(1).filter(_ == 2).map(_.toString).toArray[String]`",
        "createdAt" : "2019-09-22T19:57:12Z",
        "updatedAt" : "2019-09-23T11:26:11Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      },
      {
        "id" : "1a8e4167-9fd6-4c43-bd32-f81b9f9fae72",
        "parentId" : "dc3325ba-71ce-4473-a87d-5150a55e258c",
        "authorId" : "4ace600a-1453-4cce-81f8-efdc7c98ad7a",
        "body" : "Sure",
        "createdAt" : "2019-09-22T20:02:09Z",
        "updatedAt" : "2019-09-23T11:26:11Z",
        "lastEditedBy" : "4ace600a-1453-4cce-81f8-efdc7c98ad7a",
        "tags" : [
        ]
      },
      {
        "id" : "75c25371-0548-44f4-a2d2-272521e14f14",
        "parentId" : "dc3325ba-71ce-4473-a87d-5150a55e258c",
        "authorId" : "4ace600a-1453-4cce-81f8-efdc7c98ad7a",
        "body" : "it works but sounds there is a problem in circleci will check",
        "createdAt" : "2019-09-22T20:07:05Z",
        "updatedAt" : "2019-09-23T11:26:11Z",
        "lastEditedBy" : "4ace600a-1453-4cce-81f8-efdc7c98ad7a",
        "tags" : [
        ]
      }
    ],
    "commit" : "1cec357c3d7d08c15a86774979671b92a69267d1",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +101,105 @@          val v: Vector[Any] = Vector(\"String\", 1, Value(2))\n          assert(Chunk.fromIterable(v).toArray.toVector, equalTo(v))\n        },\n        test(\"collect for empty Chunk\") {\n          assert(Chunk.empty.collect { case _ => 1 } == Chunk.empty, Assertion.isTrue)"
  },
  {
    "id" : "c4a94a9e-6687-493c-bf93-f9adefe3044d",
    "prId" : 1797,
    "prUrl" : "https://github.com/zio/zio/pull/1797#pullrequestreview-291695019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8792697f-2ef5-4463-a679-070c63c871cb",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "👍 ",
        "createdAt" : "2019-09-23T10:53:37Z",
        "updatedAt" : "2019-09-23T11:26:11Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      }
    ],
    "commit" : "1cec357c3d7d08c15a86774979671b92a69267d1",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +88,92 @@        },\n        test(\"toArray for an empty Chunk of type String\") {\n          assert(Chunk.empty.toArray[String], equalTo(Array.empty[String]))\n        },\n        test(\"to Array for an empty Chunk using filter\") {"
  },
  {
    "id" : "2c8da901-9aa6-4076-a079-4a182f8afc0f",
    "prId" : 1797,
    "prUrl" : "https://github.com/zio/zio/pull/1797#pullrequestreview-291695275",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "369a0ca5-69a1-4e3d-ae3f-7b10d47b25d0",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "Let's add a test of `collect` on `Empty`. 👍 ",
        "createdAt" : "2019-09-23T10:54:12Z",
        "updatedAt" : "2019-09-23T11:26:11Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      }
    ],
    "commit" : "1cec357c3d7d08c15a86774979671b92a69267d1",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +101,105 @@          val v: Vector[Any] = Vector(\"String\", 1, Value(2))\n          assert(Chunk.fromIterable(v).toArray.toVector, equalTo(v))\n        },\n        test(\"collect for empty Chunk\") {\n          assert(Chunk.empty.collect { case _ => 1 } == Chunk.empty, Assertion.isTrue)"
  }
]