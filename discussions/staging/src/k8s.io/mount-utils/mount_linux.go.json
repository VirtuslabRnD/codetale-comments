[
  {
    "id" : "36a0fc6c-c0be-4aee-a853-9f1e075f0a32",
    "prId" : 96844,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96844#pullrequestreview-555619849",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76ee3cdd-b5a2-4111-ae7c-893d6e1f0dfc",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "so should we consider to have a timeout even for force unmount?",
        "createdAt" : "2020-12-18T04:22:54Z",
        "updatedAt" : "2020-12-18T04:22:54Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "9ac3c501-42d6-43d8-83bb-3a90f0e8e0c2",
        "parentId" : "76ee3cdd-b5a2-4111-ae7c-893d6e1f0dfc",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "the same question for normal Unmount function",
        "createdAt" : "2020-12-18T04:23:56Z",
        "updatedAt" : "2020-12-18T04:23:56Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "18c47d1b-3b83-4076-bb84-bb6dcb23a24b",
        "parentId" : "76ee3cdd-b5a2-4111-ae7c-893d6e1f0dfc",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "> the same question for normal Unmount function.\r\n\r\nFor normal unmount it is bit problematic to change behaviour for all existing drivers. As we know that some storage types flush pending writes when a volume is unmounted - and hence unmount time could vary and it is not safe to kill unmount process when this happens. So I think we never want to use a universal timeout for normal unmount function for all drivers. \r\n\r\n> so should we consider to have a timeout even for force unmount?\r\n\r\nforce works best for unreachable NFS system. It is documented directly in the man page. But it is not guaranteed to not hang  and as far as I know if it hangs in other cases, it could be hanging for a legitimate reason (such as volume being used or something else) and in those cases using a timeout will basically kill the unmount process and it could be problematic. So, I think I would not want to use a timeout for force unmount. It could result in a leaked goroutine but that is okay (it is okay because we are not going to retry unmount if previous unmount is hung), we always leaked goroutines in this code path. \r\n\r\n",
        "createdAt" : "2020-12-18T16:09:30Z",
        "updatedAt" : "2020-12-18T16:10:37Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "95852d7b8ec6bff61f6bad456ba4a0e9ad4356e1",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +615,619 @@\nfunc forceUmount(path string) error {\n\tcmd := exec.Command(\"umount\", \"-f\", path)\n\tout, cmderr := cmd.CombinedOutput()\n"
  },
  {
    "id" : "b008fb51-63d9-4f8b-8b67-758dba23e761",
    "prId" : 94916,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94916#pullrequestreview-507030420",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "697f73cc-cf6a-4687-82b3-16697139000c",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Not your change, but we should find a way to make this configurable instead of hardcoded. Let's consider this in a followup. cc @mattcary ",
        "createdAt" : "2020-10-12T23:07:50Z",
        "updatedAt" : "2020-10-13T05:54:55Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "0cf94b35-7958-4824-b7bc-ea3db63c3693",
        "parentId" : "697f73cc-cf6a-4687-82b3-16697139000c",
        "authorId" : "2c84effb-dadc-459a-b62c-317a38c9f24d",
        "body" : "Yes, it is also an issue when i read this code. \r\nMaybe we need a struct as a argument for mount to enclosure these options like:\r\n```\r\ntype struct MountUtilsOptions {\r\n    MountOptions      []string\r\n    SensitiveOptions []string\r\n    MounterOptions  []string\r\n    OtherOptions       []string\r\n}\r\n```",
        "createdAt" : "2020-10-13T02:40:30Z",
        "updatedAt" : "2020-10-13T05:54:55Z",
        "lastEditedBy" : "2c84effb-dadc-459a-b62c-317a38c9f24d",
        "tags" : [
        ]
      }
    ],
    "commit" : "27cb5cf4f053c704a8be5c44021e824119b4cfc6",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +116,120 @@\t// The list of filesystems that require containerized mounter on GCI image cluster\n\tfsTypesNeedMounter := map[string]struct{}{\n\t\t\"nfs\":       {},\n\t\t\"glusterfs\": {},\n\t\t\"ceph\":      {},"
  },
  {
    "id" : "e32539fc-4c82-4dcd-a589-652349e3eb9b",
    "prId" : 103780,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103780#pullrequestreview-711134506",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d6b1baa-f03f-40d8-b101-ced07e430354",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "are you able to test it with this scenario?",
        "createdAt" : "2021-07-20T19:19:38Z",
        "updatedAt" : "2021-07-20T19:19:38Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "ceb3862a-ed24-4a14-bb36-3a157313fe9c",
        "parentId" : "8d6b1baa-f03f-40d8-b101-ced07e430354",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "I observed this on a customer prod cluster and couldn't reproduce it on my end so far. Seems to depend on the volume usage pattern and pod churn on their nodes.",
        "createdAt" : "2021-07-20T23:09:29Z",
        "updatedAt" : "2021-07-20T23:09:29Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d988acb558ac31cbe7c494327949c022ce5a06d",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +180,184 @@\tif err != nil {\n\t\tif err.Error() == errNoChildProcesses {\n\t\t\tif command.ProcessState.Success() {\n\t\t\t\t// We don't consider errNoChildProcesses an error if the process itself succeeded (see - k/k issue #103753).\n\t\t\t\treturn nil"
  }
]