[
  {
    "id" : "10de2376-7ac5-4d8d-bbf2-ab43f68484e3",
    "prId" : 97538,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97538#pullrequestreview-559397303",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5afb2985-3543-4cc7-8d43-8f7fb270541c",
        "parentId" : null,
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "Not following here, why change this?",
        "createdAt" : "2020-12-29T06:44:34Z",
        "updatedAt" : "2021-01-11T08:24:10Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1f8dc41eff5cb1e6c1e6e23b093dcf75dd057cd",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +151,155 @@\t\t\tnodeSelector, err := NewNodeSelector(&tt.nodeSelector)\n\t\t\tif diff := cmp.Diff(tt.wantErr, err, ignoreBadValue); diff != \"\" {\n\t\t\t\tt.Errorf(\"NewNodeSelector returned unexpected error (-want,+got):\\n%s\", diff)\n\t\t\t}\n\t\t\tif tt.wantErr != nil {"
  },
  {
    "id" : "7aaf7693-e562-4918-81a8-7598e29e8f15",
    "prId" : 97538,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97538#pullrequestreview-567295087",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c49595c-9b1a-4782-a5a3-4b326c26945b",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "\"name part\" what other part of the key is there?",
        "createdAt" : "2021-01-11T22:14:30Z",
        "updatedAt" : "2021-01-11T22:14:30Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "ebb3f3c3-4994-4066-9f0b-b8b44b35f581",
        "parentId" : "9c49595c-9b1a-4782-a5a3-4b326c26945b",
        "authorId" : "59920a9a-4a3d-4e8e-92f0-b4cd6a6d0c8e",
        "body" : "The \"name part\" generated by `IsQualifiedName`, here is the whole key (`.key` indicates it).\r\nhttps://github.com/kubernetes/kubernetes/blob/65395137b5c4354893408dcc8d078954210ffeff/staging/src/k8s.io/apimachinery/pkg/util/validation/validation.go#L67-L69\r\nhttps://github.com/kubernetes/kubernetes/blob/a1f8dc41eff5cb1e6c1e6e23b093dcf75dd057cd/staging/src/k8s.io/apimachinery/pkg/labels/selector.go#L874-L876",
        "createdAt" : "2021-01-12T09:33:55Z",
        "updatedAt" : "2021-01-12T09:34:00Z",
        "lastEditedBy" : "59920a9a-4a3d-4e8e-92f0-b4cd6a6d0c8e",
        "tags" : [
        ]
      },
      {
        "id" : "1d44a825-619b-4324-b77e-008f001c0a79",
        "parentId" : "9c49595c-9b1a-4782-a5a3-4b326c26945b",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Will a user understand this from the message?",
        "createdAt" : "2021-01-12T18:04:35Z",
        "updatedAt" : "2021-01-12T18:04:35Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "7cb0bbb7-a04d-4d4f-9d8c-2cdd11abf973",
        "parentId" : "9c49595c-9b1a-4782-a5a3-4b326c26945b",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "can we just remove \"name part\"?",
        "createdAt" : "2021-01-13T14:49:06Z",
        "updatedAt" : "2021-01-13T14:50:43Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1f8dc41eff5cb1e6c1e6e23b093dcf75dd057cd",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +220,224 @@\t\t\t\t\tType:   field.ErrorTypeInvalid,\n\t\t\t\t\tField:  \"[2].matchExpressions[0].key\",\n\t\t\t\t\tDetail: `name part must consist of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]')`,\n\t\t\t\t},\n\t\t\t}.ToAggregate(),"
  },
  {
    "id" : "16a15b81-687e-479b-b379-e36b4d6b823e",
    "prId" : 97538,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97538#pullrequestreview-567457060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6580d0a-e22f-42ad-98ba-d85d813a036a",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "If there are multiple keys (multiple expressions), how does the user know which one this message is about?",
        "createdAt" : "2021-01-11T22:15:35Z",
        "updatedAt" : "2021-01-11T22:15:35Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "0bd2312f-1ccb-480a-95b1-6c5e421fbd95",
        "parentId" : "d6580d0a-e22f-42ad-98ba-d85d813a036a",
        "authorId" : "59920a9a-4a3d-4e8e-92f0-b4cd6a6d0c8e",
        "body" : "Output contains field. It would like `[[2].matchExpressions[0].key: Invalid value: REASON, [2].matchExpressions[1].key: Invalid value: REASON]`\r\nhttps://github.com/kubernetes/kubernetes/blob/65395137b5c4354893408dcc8d078954210ffeff/staging/src/k8s.io/apimachinery/pkg/util/validation/field/errors.go#L41-L43",
        "createdAt" : "2021-01-12T09:28:06Z",
        "updatedAt" : "2021-01-12T09:34:00Z",
        "lastEditedBy" : "59920a9a-4a3d-4e8e-92f0-b4cd6a6d0c8e",
        "tags" : [
        ]
      },
      {
        "id" : "4d9e574d-0d3b-47b8-9f9e-d2cf155f1c52",
        "parentId" : "d6580d0a-e22f-42ad-98ba-d85d813a036a",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I'm really sorry to be so dense, but I've found that's often much more accurate to look at the actually rendered strings than mentally follow the string rendering code. Can you make a test that prints out the rendered error messages from the invalid cases and run it with and without your change here, so we can compare the difference? Or just manually put some invalid selectors through the API.\r\n\r\nIn a change like this I really want to be sure that the error messages are helping users more and not just making the code more regular.",
        "createdAt" : "2021-01-12T18:07:23Z",
        "updatedAt" : "2021-01-12T18:07:24Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "765ccb8c-1c03-4673-b603-c6e25db14f1d",
        "parentId" : "d6580d0a-e22f-42ad-98ba-d85d813a036a",
        "authorId" : "59920a9a-4a3d-4e8e-92f0-b4cd6a6d0c8e",
        "body" : "It would like:\r\n![image](https://user-images.githubusercontent.com/14567045/104431842-53551280-55c3-11eb-90e0-95cb5a1b6dd3.png)\r\n\r\ntest yaml:\r\n<details>\r\n\r\n```yaml\r\napiVersion: v1\r\nkind: Pod\r\nmetadata:\r\n  name: with-node-affinity\r\nspec:\r\n  affinity:\r\n    nodeAffinity:\r\n      requiredDuringSchedulingIgnoredDuringExecution:\r\n        nodeSelectorTerms:\r\n        - matchFields:\r\n          - key: \"metadata.name\"\r\n            operator: In\r\n            values:\r\n            - a\r\n            - b\r\n        - matchExpressions:\r\n          - key: \"invalid key\"\r\n            operator: In\r\n            values:\r\n            - b\r\n            - c\r\n  containers:\r\n  - name: with-node-affinity\r\n    image: k8s.gcr.io/pause:3.2\r\n```\r\n\r\n</details>",
        "createdAt" : "2021-01-13T09:19:03Z",
        "updatedAt" : "2021-01-13T09:19:03Z",
        "lastEditedBy" : "59920a9a-4a3d-4e8e-92f0-b4cd6a6d0c8e",
        "tags" : [
        ]
      },
      {
        "id" : "22c31e95-ba06-439c-ab6a-926a9d36a0ea",
        "parentId" : "d6580d0a-e22f-42ad-98ba-d85d813a036a",
        "authorId" : "59920a9a-4a3d-4e8e-92f0-b4cd6a6d0c8e",
        "body" : "`kube-scheduler` has a similar output, just not pretty print like `kubectl`, because `kubectl` formats a http response, `kube-scheduler` simply call `.Error()`.\r\n![image](https://user-images.githubusercontent.com/14567045/104444662-0ed17300-55d3-11eb-9640-4528974f82f7.png)\r\n",
        "createdAt" : "2021-01-13T11:14:28Z",
        "updatedAt" : "2021-01-13T11:14:28Z",
        "lastEditedBy" : "59920a9a-4a3d-4e8e-92f0-b4cd6a6d0c8e",
        "tags" : [
        ]
      },
      {
        "id" : "26349db6-f7e1-49be-9200-b2bb92965e44",
        "parentId" : "d6580d0a-e22f-42ad-98ba-d85d813a036a",
        "authorId" : "59920a9a-4a3d-4e8e-92f0-b4cd6a6d0c8e",
        "body" : "This PR doesn't introduce this error format, it just makes `labels.NewRequirement` return all parsing errors.\r\n\r\nExample (without/with this patch):\r\n![image](https://user-images.githubusercontent.com/14567045/104446742-dd0ddb80-55d5-11eb-91be-6149abc7b40e.png)\r\n\r\n<details>\r\n\r\n```yaml\r\napiVersion: kubescheduler.config.k8s.io/v1beta1\r\nkind: KubeSchedulerConfiguration\r\nprofiles:\r\n  - schedulerName: default-scheduler\r\n  - schedulerName: test-err-scheduler\r\n    pluginConfig:\r\n    - name: NodeAffinity\r\n      args:\r\n        addedAffinity:\r\n          requiredDuringSchedulingIgnoredDuringExecution:\r\n            nodeSelectorTerms:\r\n            - matchExpressions:\r\n              - key: \"invalid key\"\r\n                operator: Gt\r\n                values:\r\n                - b\r\n                - c\r\nclientConnection:\r\n  kubeconfig: kubeconfig\r\n```\r\n\r\n</details>",
        "createdAt" : "2021-01-13T11:33:36Z",
        "updatedAt" : "2021-01-13T11:33:36Z",
        "lastEditedBy" : "59920a9a-4a3d-4e8e-92f0-b4cd6a6d0c8e",
        "tags" : [
        ]
      },
      {
        "id" : "e1742bc4-2eba-4edf-b792-7b27993db06c",
        "parentId" : "d6580d0a-e22f-42ad-98ba-d85d813a036a",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "OK, thanks for humoring me :)\r\n\r\n...I wouldn't say this is amazingly clear, but it's maybe slightly better than it was, and I think people will be able to figure it out.",
        "createdAt" : "2021-01-13T17:27:57Z",
        "updatedAt" : "2021-01-13T17:27:58Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1f8dc41eff5cb1e6c1e6e23b093dcf75dd057cd",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +219,223 @@\t\t\t\t&field.Error{\n\t\t\t\t\tType:   field.ErrorTypeInvalid,\n\t\t\t\t\tField:  \"[2].matchExpressions[0].key\",\n\t\t\t\t\tDetail: `name part must consist of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]')`,\n\t\t\t\t},"
  }
]