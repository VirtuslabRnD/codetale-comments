[
  {
    "id" : "667b3810-5992-441d-9ed3-3f384b976e9d",
    "prId" : 95452,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95452#pullrequestreview-505922063",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b77c76e0-38c2-476c-9428-91e6af6884c4",
        "parentId" : null,
        "authorId" : "7e9fb5d8-50c6-43cb-99c1-327a2bc8005d",
        "body" : "@andrewsykim updated! PTAL",
        "createdAt" : "2020-10-09T19:01:05Z",
        "updatedAt" : "2020-10-13T00:46:21Z",
        "lastEditedBy" : "7e9fb5d8-50c6-43cb-99c1-327a2bc8005d",
        "tags" : [
        ]
      }
    ],
    "commit" : "588677e8987115488486664504d5ed52eb1ab19d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +418,422 @@\t// we will set up providerID for InstancesV2 if instanceMeta has non-empty providerID\n\t_, instancesV2Enabled := cnc.cloud.InstancesV2()\n\tif node.Spec.ProviderID == \"\" && !instancesV2Enabled {\n\t\tproviderID, err = cloudprovider.GetInstanceProviderID(ctx, cnc.cloud, types.NodeName(node.Name))\n\t\tif err == nil {"
  },
  {
    "id" : "85260887-e079-4846-9f9e-0c058ebcf3b1",
    "prId" : 95452,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95452#pullrequestreview-506042264",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d8e0f8c-a655-4b6e-a946-a6c8be8154d2",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "This probably needs a comment for why we're skipping the provider ID check when instance v2 is enabled.",
        "createdAt" : "2020-10-09T23:29:09Z",
        "updatedAt" : "2020-10-13T00:46:21Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "6f0089a9-2481-4f52-81b9-70ebd195b6b8",
        "parentId" : "4d8e0f8c-a655-4b6e-a946-a6c8be8154d2",
        "authorId" : "7e9fb5d8-50c6-43cb-99c1-327a2bc8005d",
        "body" : "@andrewsykim gotcha! \r\nupdated the notes",
        "createdAt" : "2020-10-10T00:01:31Z",
        "updatedAt" : "2020-10-13T00:46:21Z",
        "lastEditedBy" : "7e9fb5d8-50c6-43cb-99c1-327a2bc8005d",
        "tags" : [
        ]
      }
    ],
    "commit" : "588677e8987115488486664504d5ed52eb1ab19d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +418,422 @@\t// we will set up providerID for InstancesV2 if instanceMeta has non-empty providerID\n\t_, instancesV2Enabled := cnc.cloud.InstancesV2()\n\tif node.Spec.ProviderID == \"\" && !instancesV2Enabled {\n\t\tproviderID, err = cloudprovider.GetInstanceProviderID(ctx, cnc.cloud, types.NodeName(node.Name))\n\t\tif err == nil {"
  },
  {
    "id" : "d44bf414-eae9-4979-a4d0-04b8e9fdcbab",
    "prId" : 95452,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95452#pullrequestreview-512946906",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "143a3226-7244-432a-9a23-2846d74b968e",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "is this call expensive? should we only call it if `node.Spec.ProviderID == \"\"`",
        "createdAt" : "2020-10-20T13:31:12Z",
        "updatedAt" : "2020-10-20T13:31:13Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "bbd4a5b2-2382-4910-8a07-e46fab607be1",
        "parentId" : "143a3226-7244-432a-9a23-2846d74b968e",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "`InstancesV2` like `Instances` should only return an implementation of an interface and a bool for whether it's supported so it's fairly cheap. ",
        "createdAt" : "2020-10-20T13:46:19Z",
        "updatedAt" : "2020-10-20T13:46:30Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "7ae4ac01-53d5-4aca-8b06-f786e08bbfcc",
        "parentId" : "143a3226-7244-432a-9a23-2846d74b968e",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "thanks. looks like this already has approval from package owners.",
        "createdAt" : "2020-10-20T13:48:40Z",
        "updatedAt" : "2020-10-20T13:48:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "18da05e2-19d2-4a6e-88d6-96199dee7db5",
        "parentId" : "143a3226-7244-432a-9a23-2846d74b968e",
        "authorId" : "7e9fb5d8-50c6-43cb-99c1-327a2bc8005d",
        "body" : "@liggitt looks like this PR still have `do-not-merge` label so it cannot get merged, I think maybe it needs approval from Release Manager, can you help with it? :)",
        "createdAt" : "2020-10-20T16:59:04Z",
        "updatedAt" : "2020-10-20T16:59:04Z",
        "lastEditedBy" : "7e9fb5d8-50c6-43cb-99c1-327a2bc8005d",
        "tags" : [
        ]
      }
    ],
    "commit" : "588677e8987115488486664504d5ed52eb1ab19d",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +417,421 @@\t// skip the provider ID check for InstancesV2, GetInstanceProviderID only builds a ProviderID for Instances\n\t// we will set up providerID for InstancesV2 if instanceMeta has non-empty providerID\n\t_, instancesV2Enabled := cnc.cloud.InstancesV2()\n\tif node.Spec.ProviderID == \"\" && !instancesV2Enabled {\n\t\tproviderID, err = cloudprovider.GetInstanceProviderID(ctx, cnc.cloud, types.NodeName(node.Name))"
  },
  {
    "id" : "e399df15-686d-4295-a9c4-d4c46c78bfae",
    "prId" : 95342,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95342#pullrequestreview-504092656",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25ac3473-c8ba-438a-97cd-2e30d9ea719b",
        "parentId" : null,
        "authorId" : "7e9fb5d8-50c6-43cb-99c1-327a2bc8005d",
        "body" : "@andrewsykim updated, PTAL",
        "createdAt" : "2020-10-07T17:07:04Z",
        "updatedAt" : "2020-10-08T19:41:08Z",
        "lastEditedBy" : "7e9fb5d8-50c6-43cb-99c1-327a2bc8005d",
        "tags" : [
        ]
      }
    ],
    "commit" : "db8774391309cefa185668e5799c5f7f0b3d723a",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +534,538 @@\tif _, ok := cnc.cloud.InstancesV2(); ok {\n\t\t// We don't need providerID when we call InstanceMetadata for InstancesV2\n\t\treturn \"\", nil\n\t}\n"
  },
  {
    "id" : "e9ed5a9f-f132-4b04-9c62-04a5ef1af756",
    "prId" : 94736,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94736#pullrequestreview-487267866",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6353984-5eea-4760-bb57-2e42fc24c150",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "I think we want the AddFunc and UpdateFunc event handleres on line 147 and 148 to enqueue node objects to the workqueue, and likewise `syncHandler` should call `UpdateCloudNode` as well.",
        "createdAt" : "2020-09-12T00:54:38Z",
        "updatedAt" : "2020-09-16T22:42:03Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "3f2664cf-6135-451b-b3ea-fb6160dd056d",
        "parentId" : "f6353984-5eea-4760-bb57-2e42fc24c150",
        "authorId" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "body" : "same",
        "createdAt" : "2020-09-13T01:53:38Z",
        "updatedAt" : "2020-09-16T22:42:03Z",
        "lastEditedBy" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ba09a82227fa683d987c28aa10c59c629f15583",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +130,134 @@\t\tnodesLister:               nodeInformer.Lister(),\n\t\tnodesSynced:               nodeInformer.Informer().HasSynced,\n\t\tworkqueue:                 workqueue.NewNamedRateLimitingQueue(workqueue.DefaultControllerRateLimiter(), \"Nodes\"),\n\t}\n"
  },
  {
    "id" : "2418e908-e50f-4258-ab7a-150f58413d9b",
    "prId" : 94736,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94736#pullrequestreview-487271835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bced01f5-c6b8-4468-ac08-73458f0ab330",
        "parentId" : null,
        "authorId" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "body" : "Is it necessary for us to still call kubeclient api to list nodes?  we can just get all nodes info from the cache(nodelisterner).",
        "createdAt" : "2020-09-13T01:55:52Z",
        "updatedAt" : "2020-09-16T22:42:03Z",
        "lastEditedBy" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "tags" : [
        ]
      },
      {
        "id" : "7cbf7b78-144d-4020-9c27-a53b989206b9",
        "parentId" : "bced01f5-c6b8-4468-ac08-73458f0ab330",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "> Is it necessary for us to still call kubeclient api to list nodes? we can just get all nodes info from the cache(nodelisterner).\r\n\r\nDon't think so, we can probably update this to list nodes from the informer cache as well.",
        "createdAt" : "2020-09-13T03:40:18Z",
        "updatedAt" : "2020-09-16T22:42:03Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ba09a82227fa683d987c28aa10c59c629f15583",
    "line" : 152,
    "diffHunk" : "@@ -1,1 +230,234 @@// UpdateNodeStatus updates the node status, such as node addresses\nfunc (cnc *CloudNodeController) UpdateNodeStatus(ctx context.Context) error {\n\tnodes, err := cnc.kubeClient.CoreV1().Nodes().List(context.TODO(), metav1.ListOptions{ResourceVersion: \"0\"})\n\tif err != nil {\n\t\tklog.Errorf(\"Error monitoring node status: %v\", err)"
  },
  {
    "id" : "bcffdccc-7ba9-46d7-98c5-ec31219fae69",
    "prId" : 94736,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94736#pullrequestreview-488002650",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abab6599-469d-4df9-9261-4256ee0e1a1a",
        "parentId" : null,
        "authorId" : "7e9fb5d8-50c6-43cb-99c1-327a2bc8005d",
        "body" : "@andrewsykim updated! \r\nI think probably we don't need `AddCloudNode` function anymore since it is basically equivalent to `UpdateCloudNode ` but with different logs 🤔 ",
        "createdAt" : "2020-09-13T21:03:51Z",
        "updatedAt" : "2020-09-16T22:42:03Z",
        "lastEditedBy" : "7e9fb5d8-50c6-43cb-99c1-327a2bc8005d",
        "tags" : [
        ]
      },
      {
        "id" : "f8fe5bad-0a19-47f3-8d77-db4b4fdbd8ae",
        "parentId" : "abab6599-469d-4df9-9261-4256ee0e1a1a",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "+1 ",
        "createdAt" : "2020-09-14T17:59:02Z",
        "updatedAt" : "2020-09-16T22:42:03Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ba09a82227fa683d987c28aa10c59c629f15583",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +137,141 @@\tcnc.nodeInformer.Informer().AddEventHandler(cache.ResourceEventHandlerFuncs{\n\t\tAddFunc:    cnc.enqueueNode,\n\t\tUpdateFunc: func(oldObj, newObj interface{}) { cnc.enqueueNode(newObj) },\n\t})\n"
  },
  {
    "id" : "8ad7e5ff-8177-426e-9710-bc55ddd06c3a",
    "prId" : 94736,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94736#pullrequestreview-488185136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13d8db82-6759-49b3-9724-eb19b34bcd7d",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "nit: add new line after this line",
        "createdAt" : "2020-09-14T21:58:42Z",
        "updatedAt" : "2020-09-16T22:42:03Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ba09a82227fa683d987c28aa10c59c629f15583",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +193,197 @@\t\t\tutilruntime.HandleError(fmt.Errorf(\"expected string in workqueue but got %#v\", obj))\n\t\t\treturn nil\n\t\t}\n\n\t\t// Run the syncHandler, passing it the key of the"
  },
  {
    "id" : "50baf4b8-4650-440c-864a-9d25ef7997e1",
    "prId" : 94736,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94736#pullrequestreview-488185136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ea5a90b-2540-4267-8591-58590ea7fa3a",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "nit: add new line after this line",
        "createdAt" : "2020-09-14T21:58:50Z",
        "updatedAt" : "2020-09-16T22:42:03Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ba09a82227fa683d987c28aa10c59c629f15583",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +201,205 @@\t\t\tcnc.workqueue.AddRateLimited(key)\n\t\t\treturn fmt.Errorf(\"error syncing '%s': %s, requeuing\", key, err.Error())\n\t\t}\n\n\t\t// Finally, if no error occurs we Forget this item so it does not"
  },
  {
    "id" : "9df20c4b-0b07-46f8-b4ba-47a2aa0e923b",
    "prId" : 94736,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94736#pullrequestreview-488185136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3f212e4-800a-4f3b-a5e1-4759d12bee0e",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "nit: add new line after this line",
        "createdAt" : "2020-09-14T21:59:14Z",
        "updatedAt" : "2020-09-16T22:42:03Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ba09a82227fa683d987c28aa10c59c629f15583",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +185,189 @@\t// We wrap this block in a func so we can defer cnc.workqueue.Done.\n\terr := func(obj interface{}) error {\n\t\tdefer cnc.workqueue.Done(obj)\n\n\t\tvar key string"
  },
  {
    "id" : "12b9743c-17e8-4aff-86f0-9e4f4d7419e9",
    "prId" : 94736,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94736#pullrequestreview-488820210",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67753f75-a7e2-4b4a-899f-0fab5e2efc6a",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "I think we want to return an nil error if the node is not found anymore since that means we no longer need to initialize it.\r\n```\r\nif err != nil {\r\n  if apierrors.IsNotFound(err) {\r\n     return nil\r\n  }\r\n\r\n  return err\r\n}\r\n```",
        "createdAt" : "2020-09-15T15:46:31Z",
        "updatedAt" : "2020-09-16T22:42:03Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ba09a82227fa683d987c28aa10c59c629f15583",
    "line" : 251,
    "diffHunk" : "@@ -1,1 +378,382 @@\t\t}\n\n\t\treturn err\n\t}\n"
  },
  {
    "id" : "480648ec-ab13-4a23-bcd4-09305cd85d7a",
    "prId" : 94736,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94736#pullrequestreview-489923286",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a64a50fe-fd7c-4bc9-b04b-fd62a356586b",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "I think we actually want the GCE network unavailable condition to happen before the Update on line 442, since we want the condition in place before the cloud provider init taint is removed. Otherwise there will be a brief period where the node doesn't have the cloud taint and the condition.",
        "createdAt" : "2020-09-16T03:52:02Z",
        "updatedAt" : "2020-09-16T22:42:03Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "16045452-4ab1-492b-9a90-2b57369d5bc8",
        "parentId" : "a64a50fe-fd7c-4bc9-b04b-fd62a356586b",
        "authorId" : "7e9fb5d8-50c6-43cb-99c1-327a2bc8005d",
        "body" : "@andrewsykim The unit tests would fail if I move GCE network unavailable condition to happen before the **Update**\r\nNot sure why it causes the error, still investigating 🤔 ",
        "createdAt" : "2020-09-16T18:39:50Z",
        "updatedAt" : "2020-09-16T22:42:03Z",
        "lastEditedBy" : "7e9fb5d8-50c6-43cb-99c1-327a2bc8005d",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ba09a82227fa683d987c28aa10c59c629f15583",
    "line" : 303,
    "diffHunk" : "@@ -1,1 +416,420 @@\t\t\t// Since there are node taints, do we still need this?\n\t\t\t// This condition marks the node as unusable until routes are initialized in the cloud provider\n\t\t\tif err := cloudnodeutil.SetNodeCondition(cnc.kubeClient, types.NodeName(nodeName), v1.NodeCondition{\n\t\t\t\tType:               v1.NodeNetworkUnavailable,\n\t\t\t\tStatus:             v1.ConditionTrue,"
  },
  {
    "id" : "3fa7995f-53bd-49a2-bbf9-8800a030611b",
    "prId" : 94736,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94736#pullrequestreview-491000474",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56954875-d953-4ac5-8ae4-95a706bb08a5",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "FYI @cheftako we should probably discuss getting rid of this custom check for GCE, I can't recall the initial reason behind the GCE specific check. Would probably be nice to have something generic here.",
        "createdAt" : "2020-09-17T01:18:51Z",
        "updatedAt" : "2020-09-17T01:18:51Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "33b62a16-f7ed-4765-a07a-b2bafbf46f36",
        "parentId" : "56954875-d953-4ac5-8ae4-95a706bb08a5",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "+1. Most of these checks are because the test needs something which wasn't generally available. Not sure about this particular test but I've written a few of these. Its frequently something like the webhook tests. You need to create a special test container and deploy it to your registry. The intention was always that other cloud providers would follow adding the container to their registry. ",
        "createdAt" : "2020-09-17T21:26:22Z",
        "updatedAt" : "2020-09-17T21:26:23Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ba09a82227fa683d987c28aa10c59c629f15583",
    "line" : 299,
    "diffHunk" : "@@ -1,1 +412,416 @@\terr = clientretry.RetryOnConflict(UpdateNodeSpecBackoff, func() error {\n\t\tvar curNode *v1.Node\n\t\tif cnc.cloud.ProviderName() == \"gce\" {\n\t\t\t// TODO(wlan0): Move this logic to the route controller using the node taint instead of condition\n\t\t\t// Since there are node taints, do we still need this?"
  },
  {
    "id" : "985e1019-0c6c-4d4a-be12-dd857527090a",
    "prId" : 91319,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91319#pullrequestreview-440890919",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f8d13d3-de17-4eb7-964d-06d6284d1d3a",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "nice :) ",
        "createdAt" : "2020-07-01T13:53:57Z",
        "updatedAt" : "2020-07-08T10:35:34Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "153745c53cf265e97df1782fa308474ec8171262",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +224,228 @@\t}\n\n\tinstanceMetadataGetter := func(providerID string, node *v1.Node) (*cloudprovider.InstanceMetadata, error) {\n\t\tif instancesV2, ok := cnc.cloud.InstancesV2(); instancesV2 != nil && ok {\n\t\t\treturn instancesV2.InstanceMetadataByProviderID(ctx, providerID)"
  },
  {
    "id" : "431e8240-3594-451c-9162-53a0b01e7f95",
    "prId" : 91319,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91319#pullrequestreview-444382877",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2007b90e-9795-416d-a500-3266f7a710df",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Can we actually go one step further. With the current change, you still be calling GetInstanceMetadata twice:\r\n- in getNodeModifiersFromCloudProvider\r\n- here\r\n\r\nCan we actually call GetInstanceMetadata in this function and pass it to those two functions?",
        "createdAt" : "2020-07-01T14:05:19Z",
        "updatedAt" : "2020-07-08T10:35:34Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "26488f2f-13d1-4725-af6d-0e404519edf3",
        "parentId" : "2007b90e-9795-416d-a500-3266f7a710df",
        "authorId" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "body" : "Yes, I have thought it. But I'd rather do it as a follow-up work, since this is large enough and tests need to be addressed.",
        "createdAt" : "2020-07-01T14:08:47Z",
        "updatedAt" : "2020-07-08T10:35:34Z",
        "lastEditedBy" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "tags" : [
        ]
      },
      {
        "id" : "0548caea-df55-4474-a38c-5dbb3d6a257d",
        "parentId" : "2007b90e-9795-416d-a500-3266f7a710df",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "OK, cool. Can you please add a TODO so that we won't forget about it?",
        "createdAt" : "2020-07-01T14:10:25Z",
        "updatedAt" : "2020-07-08T10:35:34Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "d1fd4753-338e-47d4-b60d-58f37cbf416e",
        "parentId" : "2007b90e-9795-416d-a500-3266f7a710df",
        "authorId" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "body" : "Sure.",
        "createdAt" : "2020-07-01T14:29:44Z",
        "updatedAt" : "2020-07-08T10:35:34Z",
        "lastEditedBy" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "tags" : [
        ]
      },
      {
        "id" : "8b5b909d-8e3d-467d-919d-603f14a13935",
        "parentId" : "2007b90e-9795-416d-a500-3266f7a710df",
        "authorId" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "body" : "Added.",
        "createdAt" : "2020-07-08T03:11:20Z",
        "updatedAt" : "2020-07-08T10:35:34Z",
        "lastEditedBy" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "153745c53cf265e97df1782fa308474ec8171262",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +391,395 @@\t\t// After adding, call UpdateNodeAddress to set the CloudProvider provided IPAddresses\n\t\t// So that users do not see any significant delay in IP addresses being filled into the node\n\t\tcnc.updateNodeAddress(ctx, curNode)\n\n\t\tklog.Infof(\"Successfully initialized node %s with cloud provider\", node.Name)"
  }
]