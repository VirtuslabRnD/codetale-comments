[
  {
    "id" : "30735496-f5ae-4c34-89e2-d508ba331eb8",
    "prId" : 99291,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99291#pullrequestreview-596036991",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63463b98-f0a3-4226-8f38-39e86d230684",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "This means the user running the cloud controller manager needs serviceaccount/token create permissions. This is included in the `system:kube-controller-manager` role... is that what the cloud controller manager process is expected to be bound to?\r\n\r\ncc @jpbetz ",
        "createdAt" : "2021-02-22T14:05:02Z",
        "updatedAt" : "2021-02-22T14:05:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "747889b7-77be-4b1c-a5bd-dc3db26af96a",
        "parentId" : "63463b98-f0a3-4226-8f38-39e86d230684",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "I believe the KCM has these permission because its running the ServiceAccountController. The CCM is not running the ServiceAccountController, so ideally it should not have or need these elevated permissions. Ideally I think we should find a way to separate the controllers which need these elevated permissions from the KCM to minimize the surface area of privilege escalation attack.",
        "createdAt" : "2021-02-22T19:44:57Z",
        "updatedAt" : "2021-02-22T19:44:57Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "f2a6bf2c-6b4c-4e62-ad8d-a86422437549",
        "parentId" : "63463b98-f0a3-4226-8f38-39e86d230684",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "SAController is not the reason that KCM needs serviceaccount/token create permission. some volumes related controller requires that permission, but more direct, https://github.com/kubernetes/kubernetes/blob/186f934e4ccb23e7dca03cc836f11f89e7d99e08/staging/src/k8s.io/cloud-provider/config/types.go#L55 requires that as well, which is shared by both controllers.",
        "createdAt" : "2021-02-22T23:54:04Z",
        "updatedAt" : "2021-02-22T23:54:04Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      },
      {
        "id" : "1bc97931-0304-499a-b83f-ca27ff20da6d",
        "parentId" : "63463b98-f0a3-4226-8f38-39e86d230684",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> The CCM is not running the ServiceAccountController, so ideally it should not have or need these elevated permissions\r\n\r\nIt makes sense for CCM to be able to request tokens specifically for the service accounts for the control loops in the CCM. That is possible to grant in a narrow way (grant \"serviceaccounts/tokens\" on just the resourceNames for the expected service accounts), but I couldn't find where the CCM role is defined.",
        "createdAt" : "2021-02-23T04:58:16Z",
        "updatedAt" : "2021-02-23T04:58:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a98999ff-6a5c-454b-8e31-d505cbad33fb",
        "parentId" : "63463b98-f0a3-4226-8f38-39e86d230684",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "I was (understandably) unable to convince anyone to put the CCM SA as part of the standard bootstrap as its not a core component of K8s. So its up to each cloud provider to set this up. So for example the GCP setup can be found at https://github.com/kubernetes/cloud-provider-gcp/blob/0e9c8d0151f46b5a6c0beea7778c034c6984d5d0/cluster/addons/cloud-controller-manager/cloud-node-controller-binding.yaml#L13.",
        "createdAt" : "2021-02-23T06:58:42Z",
        "updatedAt" : "2021-02-23T06:58:42Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "1095778dcc4e42d2e8f765b262e225c5721e20bf",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +195,199 @@\t}\n\tif c.ComponentConfig.KubeCloudShared.UseServiceAccountCredentials {\n\t\tc.ClientBuilder = clientbuilder.NewDynamicClientBuilder(\n\t\t\trestclient.AnonymousClientConfig(c.Kubeconfig),\n\t\t\tc.Client.CoreV1(),"
  }
]