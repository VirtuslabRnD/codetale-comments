[
  {
    "id" : "b0661381-aee1-43ff-a5ec-6d58bd885e79",
    "prId" : 97029,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97029#pullrequestreview-549483085",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce618dbb-ef37-48f3-bdc4-9262c25e6a7b",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Contemplating if this is considered a breaking change since `AllocateNodeCIDRs` is false by default and `ConfigureCloudRoutes` is true by default. This means if you previously set neither of these flags, this check is now passing. I think it isn't because:\r\n1. the cloud provider still needs to implement `Routes()` to enable the controller.\r\n2. even if the cloud provider implements `Routes()`, routes controller itself is no-op if `node.spec.podCIDR` is not set. If `node.spec.podCIDR` is set, it means `--allocate-node-cidr` is enabled on kube-controller-manager, which means we should be running this controller.  ",
        "createdAt" : "2020-12-03T02:27:11Z",
        "updatedAt" : "2020-12-03T19:03:59Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "f7357707-9f9e-43d7-bb70-877aa033e807",
        "parentId" : "ce618dbb-ef37-48f3-bdc4-9262c25e6a7b",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "@cheftako would still like your thoughts/opinions on this",
        "createdAt" : "2020-12-09T14:55:50Z",
        "updatedAt" : "2020-12-09T14:55:50Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "83b96ea9-c128-49b4-9ddb-43ee2f7ba7b8",
        "parentId" : "ce618dbb-ef37-48f3-bdc4-9262c25e6a7b",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "My worry would be the managed vs unmanaged distinction. Take the GCP Cloud Provider; it has to implement Routes() as the same cloud provider impl is used in both managed (GKE) and unmanaged releases. The managed is not an issue as we have a dedicated team of experts keeping it working. \r\n\r\nFor unmanaged releases allocate-node-cidrs defaults to true and enable-ip-aliases to false (i.e. configure-cloud-routes to true). Given that allocate-node-cidrs defaults to true and routes() is implemented, the unmanaged instance would have failed this case but we're saved by configure-cloud-routes being true. Not sure I'm sanguine about being safe in the other cases where we may want different behaviors between managed and unmanaged kubernetes deployments.",
        "createdAt" : "2020-12-10T18:24:46Z",
        "updatedAt" : "2020-12-10T18:24:46Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c90d8ddd9ba6b8f5729223239bc86552f25b2a5",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +105,109 @@\nfunc startRouteController(ctx *config.CompletedConfig, cloud cloudprovider.Interface, stopCh <-chan struct{}) (http.Handler, bool, error) {\n\tif !ctx.ComponentConfig.KubeCloudShared.ConfigureCloudRoutes {\n\t\tklog.Infof(\"Will not configure cloud provider routes, --configure-cloud-routes: %v\", ctx.ComponentConfig.KubeCloudShared.ConfigureCloudRoutes)\n\t\treturn nil, false, nil"
  }
]