[
  {
    "id" : "2739e4a7-f07c-4852-bc9a-cbd79060b277",
    "prId" : 93569,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93569#pullrequestreview-486368979",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92e4fcc5-6fca-43f9-8792-ba478cdc3c27",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I'm fine with adding those (that sounds like a good direction to me), but given that all in-tree providers already support \"GetInstanceMetadata\", this basically will break supportability of it.\r\n\r\nCan you at least add appropriate TODOs for all cloud providers in the InstancesV2 method that those two will have to be propagated before enabling the inferface?",
        "createdAt" : "2020-08-07T06:27:19Z",
        "updatedAt" : "2020-08-07T06:27:19Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "3c7637e4-a22e-47c4-9d4c-00bbda8a136f",
        "parentId" : "92e4fcc5-6fca-43f9-8792-ba478cdc3c27",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "> I'm fine with adding those (that sounds like a good direction to me), but given that all in-tree providers already support \"GetInstanceMetadata\", this basically will break supportability of it.\r\n\r\nSo in https://github.com/kubernetes/kubernetes/pull/93582 I actually removed all the implementations of `InstanceMetadataByProviderID` since that code path isn't actually run anywhere. \r\n\r\n> Can you at least add appropriate TODOs for all cloud providers in the InstancesV2 method that those two will have to be propagated before enabling the inferface?\r\n\r\nAlso added TODOs comments in https://github.com/kubernetes/kubernetes/pull/93582 for providerse to implement InstanceV2 when out-of-tree.",
        "createdAt" : "2020-08-07T14:08:09Z",
        "updatedAt" : "2020-08-07T14:08:09Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "6c7c48df-e4f2-4d9d-b728-be0364aae293",
        "parentId" : "92e4fcc5-6fca-43f9-8792-ba478cdc3c27",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "As you correctly point out, this API is still marked as experimental. Do we have a graduation plan? It seems to suggest (but does not explicitly state) we should be graduating in 1.20",
        "createdAt" : "2020-09-10T23:05:16Z",
        "updatedAt" : "2020-09-10T23:05:16Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "d274971ff9443a4c47cb70b0f5d0fb0a5cdc4c36",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +300,304 @@\t//   * topology.kubernetes.io/zone=<zone>\n\t//   * failure-domain.beta.kubernetes.io/zone=<zone> (DEPRECATED)\n\tZone string\n\t// Region is the region that the instance is in.\n\t// The value set here is applied as the following labels on the node:"
  },
  {
    "id" : "1e32c446-79d9-49a3-8f1f-4d771ffd95b9",
    "prId" : 90894,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90894#pullrequestreview-411428557",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53f40557-ac54-435d-9e89-b125a764d4a3",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Once we have this, we should migrate all calls to NodeAddressesByProviderId and InstanceTypeByProviderId to this call.\r\nSo can you please add a comment:\r\n// Deprecated: Remove once all calls are migrated to InstanceMetadataByProviderID\r\nto both these methods.",
        "createdAt" : "2020-05-13T12:36:55Z",
        "updatedAt" : "2020-05-20T01:21:58Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "cc3585f9-b83d-40d4-be20-18f85b3d128e",
        "parentId" : "53f40557-ac54-435d-9e89-b125a764d4a3",
        "authorId" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "body" : "I plan to remove these in follow-up work(when node-controller uses InstanceMetadataByProviderID). It's ok to add this comment.",
        "createdAt" : "2020-05-13T13:05:35Z",
        "updatedAt" : "2020-05-20T01:21:58Z",
        "lastEditedBy" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "tags" : [
        ]
      },
      {
        "id" : "2b0d268c-4b03-4f1e-8019-0794cd8265d9",
        "parentId" : "53f40557-ac54-435d-9e89-b125a764d4a3",
        "authorId" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "body" : "Done.",
        "createdAt" : "2020-05-14T02:45:43Z",
        "updatedAt" : "2020-05-20T01:21:58Z",
        "lastEditedBy" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "24fe349ddf29ff599772cb9f3e640a8675cfa291",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +189,193 @@\tInstanceShutdownByProviderID(ctx context.Context, providerID string) (bool, error)\n\t// InstanceMetadataByProviderID returns the instance's metadata.\n\tInstanceMetadataByProviderID(ctx context.Context, providerID string) (*InstanceMetadata, error)\n}\n"
  },
  {
    "id" : "a835a8d1-cf8f-4653-a7ab-b4226e89d1fd",
    "prId" : 70038,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70038#pullrequestreview-166704646",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4e4dd78-ccc5-4820-81bb-257b5a9c201c",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This breaks go compatibility, is that OK? I think it won't be OK once there's out of tree implementors?",
        "createdAt" : "2018-10-19T21:33:15Z",
        "updatedAt" : "2018-10-19T21:52:10Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "b2fde6db-7dec-433e-a603-4e69e4e566c3",
        "parentId" : "b4e4dd78-ccc5-4820-81bb-257b5a9c201c",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "This is a discussion we (SIG Cloud Provider) are having right now. There are some differing opinions around if breaking the interface is okay as long as the behaviour is not changed. In my opinion at least, this is fine because the SIG that defines the interface works closely with the implementors and we can form consensus on breaking changes like this one before moving forward. But you are correct in that we should have a definitive answer for this when we have stable out-of-tree providers. For now we are incrementally trying to put the interface at a better spot while we are still \"beta\" so breaking changes like this are OK in my opinion (but feel free to disagree). ",
        "createdAt" : "2018-10-19T21:39:46Z",
        "updatedAt" : "2018-10-19T21:52:10Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "3521ebd1e7d75195fcb3468a51793baa5b00f58d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +45,49 @@\t// to perform housekeeping or run custom controllers specific to the cloud provider.\n\t// Any tasks started here should be cleaned up when the stop channel closes.\n\tInitialize(clientBuilder ControllerClientBuilder, stop <-chan struct{})\n\t// LoadBalancer returns a balancer interface. Also returns true if the interface is supported, false otherwise.\n\tLoadBalancer() (LoadBalancer, bool)"
  }
]