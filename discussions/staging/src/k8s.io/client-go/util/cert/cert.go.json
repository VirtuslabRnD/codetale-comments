[
  {
    "id" : "0702eec8-635b-4a8f-ae98-32d5807289a3",
    "prId" : 59966,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59966#pullrequestreview-202212130",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e35edce-5c81-44d3-a533-7a7fa0ed8e17",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Do we want to switch IsCA on line 185 to false (the one github won't let me comment on...)  Or are we worried that might be a breaking change?\r\n\r\n(And have we checked that the problematic curls tolerate this cert chain?)",
        "createdAt" : "2018-02-16T13:25:16Z",
        "updatedAt" : "2018-02-16T15:27:38Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "4876eb15-7a09-49ff-b569-24a9af183cac",
        "parentId" : "3e35edce-5c81-44d3-a533-7a7fa0ed8e17",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> You could avoid generating an additional cert if pathLenConstraint is 0, as it should remove the ability of any signed cert to sign certs that can be validated by the cert chain.\r\n\r\nI want to avoid the serving cert being able to be used as a client cert as well, which it could be with all ext key usages removed.\r\n\r\n> Do we want to switch IsCA on line 185 to false (the one github won't let me comment on...)\r\n\r\nyeah, forgot to drop that. done.\r\n\r\n> Or are we worried that might be a breaking change?\r\n\r\nanyone referencing the cert file as a trust root bundle will still pick up the CA with this change, so we're good.\r\n\r\n> have we checked that the problematic curls tolerate this cert chain?\r\n\r\nyes. before:\r\n```sh\r\n$ curl https://localhost:6443/api --cacert ./apiserver.crt\r\ncurl: (60) Certificate type not approved for application.\r\n```\r\n\r\nafter:\r\n```sh\r\n$ curl https://localhost:6443/api --cacert ./apiserver.crt \r\n{\r\n  \"kind\": \"APIVersions\",\r\n  \"versions\": [\r\n    \"v1\"\r\n  ],\r\n  \"serverAddressByClientCIDRs\": [\r\n    {\r\n      \"clientCIDR\": \"0.0.0.0/0\",\r\n      \"serverAddress\": \"localhost:6443\"\r\n    }\r\n  ]\r\n}\r\n```",
        "createdAt" : "2018-02-16T15:27:44Z",
        "updatedAt" : "2018-02-16T15:43:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "298d274d-3023-4b95-a2e1-3d06d10a7985",
        "parentId" : "3e35edce-5c81-44d3-a533-7a7fa0ed8e17",
        "authorId" : "02652a33-d295-4eb4-a1dc-1b86aff1fcca",
        "body" : "@liggitt , i've just filed https://github.com/kubernetes-sigs/cluster-api-provider-aws/issues/557, and am wondering whether or not we should do the same here and found this. Is there a reason not to set pathLenConstraint?",
        "createdAt" : "2019-02-08T19:28:22Z",
        "updatedAt" : "2019-02-08T19:28:22Z",
        "lastEditedBy" : "02652a33-d295-4eb4-a1dc-1b86aff1fcca",
        "tags" : [
        ]
      },
      {
        "id" : "ccfbccd6-6427-4dbe-830f-6b96404e4cd9",
        "parentId" : "3e35edce-5c81-44d3-a533-7a7fa0ed8e17",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Is there a reason not to set pathLenConstraint?\r\n\r\nis there a reason to, if we only generate a single serving cert and then throw away the CA signing key?",
        "createdAt" : "2019-02-11T16:43:01Z",
        "updatedAt" : "2019-02-11T16:43:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d3cde45b73ec31c81fadbfd494387d141858a40",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +154,158 @@\t\tKeyUsage:              x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature | x509.KeyUsageCertSign,\n\t\tBasicConstraintsValid: true,\n\t\tIsCA: true,\n\t}\n"
  },
  {
    "id" : "3e8ef6a8-921f-47fa-9fb8-20465ea5919f",
    "prId" : 59966,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59966#pullrequestreview-97215283",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59867a6f-ad7f-4397-ba5c-9d4741850a8e",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "At least in kops we use `\tKeyUsage:              x509.KeyUsageCertSign | x509.KeyUsageCRLSign,`, and I think GKE just has:\r\n\r\n```\r\n        X509v3 extensions:\r\n            X509v3 Key Usage: critical\r\n                Certificate Sign\r\n            X509v3 Basic Constraints: critical\r\n                CA:TRUE\r\n```\r\n\r\nNot sure if it matters...",
        "createdAt" : "2018-02-16T13:35:41Z",
        "updatedAt" : "2018-02-16T15:27:38Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "9b53acc8-59be-4b77-8240-3e1959131baa",
        "parentId" : "59867a6f-ad7f-4397-ba5c-9d4741850a8e",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "was copied from here:\r\nhttps://github.com/kubernetes/kubernetes/blob/7488d1c9210e60aef9ad49f07cb5d8a24152db88/staging/src/k8s.io/client-go/util/cert/cert.go#L62-L76\r\n\r\nadditional usages should be fine",
        "createdAt" : "2018-02-16T15:29:42Z",
        "updatedAt" : "2018-02-16T15:29:49Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d3cde45b73ec31c81fadbfd494387d141858a40",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +152,156 @@\t\tNotAfter:  time.Now().Add(time.Hour * 24 * 365),\n\n\t\tKeyUsage:              x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature | x509.KeyUsageCertSign,\n\t\tBasicConstraintsValid: true,\n\t\tIsCA: true,"
  }
]