[
  {
    "id" : "f56a4ef3-c892-4f1b-9f62-0be0a6888989",
    "prId" : 101252,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101252#pullrequestreview-639425972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "085d84c0-0a0e-4ec6-b5f5-a08e584f302f",
        "parentId" : null,
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "As a small non-blocking nit I'd suggest not doing this because it'll likely need to get ripped out when we migrate this to structured logs.",
        "createdAt" : "2021-04-19T17:06:05Z",
        "updatedAt" : "2021-04-20T02:10:46Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      },
      {
        "id" : "54b322b5-4714-4e52-ba0a-7db424e1f145",
        "parentId" : "085d84c0-0a0e-4ec6-b5f5-a08e584f302f",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "We can't just slam structured logs into client-go - it's a library, not a full featured function.  Or are you saying that everyone who uses client-go is required to use klog (which is something historically we've said we wouldn't do)?",
        "createdAt" : "2021-04-19T19:18:19Z",
        "updatedAt" : "2021-04-20T02:10:46Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "4634855f-b8f7-42c3-9017-90bc8d2af02b",
        "parentId" : "085d84c0-0a0e-4ec6-b5f5-a08e584f302f",
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "Oh, right, this is client-go and you're correct that we're not doing that; morning brain fog :)",
        "createdAt" : "2021-04-19T20:23:03Z",
        "updatedAt" : "2021-04-20T02:10:46Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      },
      {
        "id" : "eed588b1-55e4-4d22-8b2d-f840d40c60e9",
        "parentId" : "085d84c0-0a0e-4ec6-b5f5-a08e584f302f",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "it’s ok, i wasn’t positive it wasn’t me that missed something :)",
        "createdAt" : "2021-04-20T01:19:17Z",
        "updatedAt" : "2021-04-20T02:10:46Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "64c669bd0ac8fda39ba97f48ef887ac1f77fb014",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +262,266 @@\tif m.logf == nil {\n\t\tm.logf = func(format string, args ...interface{}) { klog.V(2).Infof(format, args...) }\n\t}\n\n\treturn &m, nil"
  },
  {
    "id" : "2216d6a9-8e3e-4c4c-95f2-84058cf287bb",
    "prId" : 99494,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99494#pullrequestreview-693358173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "136e050a-a84c-4182-b151-72ba3b242555",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "document this is done via the spec.expirationSeconds mechanism and is not guaranteed to be honored by the issuer.",
        "createdAt" : "2021-06-26T21:51:48Z",
        "updatedAt" : "2021-06-26T22:14:37Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d49502fcd498777e84c8b4da5141ffd2c25b0f0",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +89,93 @@\t// generated by the manager.\n\tSignerName string\n\t// RequestedCertificateLifetime is the requested lifetime length for certificates generated by the manager.\n\t// Optional.\n\t// This will set the spec.expirationSeconds field on the CSR.  Controlling the lifetime of"
  },
  {
    "id" : "92374fcf-b9de-4847-8220-65cf667d653c",
    "prId" : 84614,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84614#pullrequestreview-312099209",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8a6b73d-e818-4ac0-8b43-901003763a88",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Each failure scenario seems pretty different. Does it make sense to add a label that indicates the reason for the failure?",
        "createdAt" : "2019-11-05T06:53:40Z",
        "updatedAt" : "2019-11-05T22:52:58Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "973942a1-c461-4a0e-8e2e-d075065ee749",
        "parentId" : "e8a6b73d-e818-4ac0-8b43-901003763a88",
        "authorId" : "3eccedfc-5c53-4555-94cb-69f2b56e485c",
        "body" : "Tried out various scenarious with the CounterVec, but it seems hacky.",
        "createdAt" : "2019-11-05T22:55:36Z",
        "updatedAt" : "2019-11-05T22:55:37Z",
        "lastEditedBy" : "3eccedfc-5c53-4555-94cb-69f2b56e485c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e50c55e6bf715d9067376a9e7f136ffacb0a3ee",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +462,466 @@\tif err != nil {\n\t\tutilruntime.HandleError(fmt.Errorf(\"Unable to store the new cert/key pair: %v\", err))\n\t\tif m.certificateRenewFailure != nil {\n\t\t\tm.certificateRenewFailure.Inc()\n\t\t}"
  },
  {
    "id" : "faecc320-d066-4374-918a-17a3bc6be665",
    "prId" : 84534,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84534#pullrequestreview-310126259",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53eb0973-6275-40f7-aca5-498d7f3856e2",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Can you share more about the decision to make `CertificateRotation` a `Histogram`, when `CertificateExpiration` is a gauge? I don't have a ton of context on the actual date here... but at a high level I would expect us to use the same metric type for both.",
        "createdAt" : "2019-10-30T13:47:18Z",
        "updatedAt" : "2019-11-01T20:33:10Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "9e6a9b1b-dffc-423f-b605-02951a798e6b",
        "parentId" : "53eb0973-6275-40f7-aca5-498d7f3856e2",
        "authorId" : "b8626c03-9a5f-42c6-abcb-6855fc266a5c",
        "body" : "Yeah so...\r\nCertificateExpiration is a Gauge because it is like reading a static status. When does the kubelet's serving cert expire? \"June 6th 2020\" or something,  and that reading will be the same until its eventually rotated and reads something like \"March 16th 2021\" or some other future date. There isn't really a benefit in treating it like a history of values or a graph. E.g. [\"June 6th 2020\", \"March 16th 2010\", \"...\"] in some big pointless histogram.\r\n\r\nFor Certificate Rotation we do care about the history and trends. In efforts of lowering the TTL and increasing the rotation cadence of a cluster's certificates one can track certificate lifetimes when rotated:\r\n[\"cert lived for 250 days\", \"cert lived for 209 days\", \"cert lived for 244 days\", ...]\r\nTooling can then be setup to watch for cert rotations increasing or decreasing unexpected.",
        "createdAt" : "2019-10-30T23:36:07Z",
        "updatedAt" : "2019-11-01T20:33:10Z",
        "lastEditedBy" : "b8626c03-9a5f-42c6-abcb-6855fc266a5c",
        "tags" : [
        ]
      },
      {
        "id" : "219c83a0-f9f1-4ae7-8c4a-2d217a25c0eb",
        "parentId" : "53eb0973-6275-40f7-aca5-498d7f3856e2",
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Gotcha! That's definitely a helpful explanation. Thoughts on including what you wrote as comments for both `CertificateExpiration` and `CertificateRotation`? At least for me, it was non-obvious, so a comment about the \"why\" feels appropriate.",
        "createdAt" : "2019-10-31T13:35:59Z",
        "updatedAt" : "2019-11-01T20:33:10Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "312829f5-776b-4a2c-b90f-56a9de5ec3fd",
        "parentId" : "53eb0973-6275-40f7-aca5-498d7f3856e2",
        "authorId" : "b8626c03-9a5f-42c6-abcb-6855fc266a5c",
        "body" : "Done.",
        "createdAt" : "2019-10-31T19:20:11Z",
        "updatedAt" : "2019-11-01T20:33:10Z",
        "lastEditedBy" : "b8626c03-9a5f-42c6-abcb-6855fc266a5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e817d17a5eb7e6a5b35a0e5622177884abbc196",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +124,128 @@\t// allows one to setup monitoring and alerting of unexpected rotation\n\t// behavior and track trends in rotation frequency.\n\tCertificateRotation Histogram\n}\n"
  },
  {
    "id" : "74489dbf-237d-4c45-8010-110f06a775ee",
    "prId" : 84534,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84534#pullrequestreview-309880969",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb70cbe5-3077-405e-8959-e4801b1a4496",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Nit: I would find this slightly more readable if `old :=m .updateCached(cert)` was on a separate line. Given that its a state changing operation, it feels to me like it \"deserves\" its own line to make it stand out.\r\n\r\nDefinitely a personal opinion request so its up to you if you want to change it :)",
        "createdAt" : "2019-10-30T13:51:00Z",
        "updatedAt" : "2019-11-01T20:33:10Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "46549370-cc62-4eb3-a677-8e3c02c4d758",
        "parentId" : "fb70cbe5-3077-405e-8959-e4801b1a4496",
        "authorId" : "b8626c03-9a5f-42c6-abcb-6855fc266a5c",
        "body" : "I totally get where you're coming from. I did a little searching and the Effective Go style guide doesn't have an opinion either way. I am just going to keep it as is, I like it this way.",
        "createdAt" : "2019-10-30T23:40:56Z",
        "updatedAt" : "2019-11-01T20:33:10Z",
        "lastEditedBy" : "b8626c03-9a5f-42c6-abcb-6855fc266a5c",
        "tags" : [
        ]
      },
      {
        "id" : "e2a451d0-386a-49ba-9452-69daa52c7515",
        "parentId" : "fb70cbe5-3077-405e-8959-e4801b1a4496",
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : ":+1: ",
        "createdAt" : "2019-10-31T13:36:09Z",
        "updatedAt" : "2019-11-01T20:33:10Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e817d17a5eb7e6a5b35a0e5622177884abbc196",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +443,447 @@\t}\n\n\tif old := m.updateCached(cert); old != nil && m.certificateRotation != nil {\n\t\tm.certificateRotation.Observe(m.now().Sub(old.Leaf.NotBefore).Seconds())\n\t}"
  },
  {
    "id" : "63e00323-6938-461f-a585-9cbab38db457",
    "prId" : 77936,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77936#pullrequestreview-237953644",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9acf8074-3f2c-46f3-9255-d5e134b6988b",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Is it worthwhile to check the err type from `WaitForCertificate` and return a non-nil err here? Otherwise we would re-run rotateCert under `wait.ExponentialBackoff(backoff, m.rotateCerts)` but the context has already been cancelled. ",
        "createdAt" : "2019-05-15T16:29:55Z",
        "updatedAt" : "2019-05-16T19:15:30Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "1fda7f94-b1dc-41c4-91a2-d24f2a4efb76",
        "parentId" : "9acf8074-3f2c-46f3-9255-d5e134b6988b",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Ah, we would just assign a new context in that case, but still doing the extra work at that point of cancelling the context up to 5 times right?",
        "createdAt" : "2019-05-15T16:31:53Z",
        "updatedAt" : "2019-05-16T19:15:30Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "d93bc18a-b585-48e1-a6e6-e883e7dfdeaf",
        "parentId" : "9acf8074-3f2c-46f3-9255-d5e134b6988b",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the next time rotateCerts is called it will request the new template we want",
        "createdAt" : "2019-05-15T17:03:55Z",
        "updatedAt" : "2019-05-16T19:15:30Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "739a75fc32c5337ddbd13691e9bf6648fb13ff0d",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +413,417 @@\tif err != nil {\n\t\tutilruntime.HandleError(fmt.Errorf(\"Certificate request was not signed: %v\", err))\n\t\treturn false, nil\n\t}\n"
  },
  {
    "id" : "d1c31c97-7557-4fd3-9a28-cba6c7386f56",
    "prId" : 77936,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77936#pullrequestreview-238008276",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9654ff3b-8ac7-4582-94b3-34ec9cc7c533",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "this is a bit faux pas",
        "createdAt" : "2019-05-15T18:52:30Z",
        "updatedAt" : "2019-05-16T19:15:30Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "739a75fc32c5337ddbd13691e9bf6648fb13ff0d",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +154,158 @@\t// lastRequestLock guards lastRequestCancel and lastRequest\n\tlastRequestLock   sync.Mutex\n\tlastRequestCancel context.CancelFunc\n\tlastRequest       *x509.CertificateRequest\n"
  },
  {
    "id" : "55df1c0e-b07e-4f83-a0b9-332729f22a73",
    "prId" : 77936,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77936#pullrequestreview-238589874",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fbd1fca-949d-495b-b00e-1d5232881800",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "It would be nice if we didn't reason about certs here and just did\r\n\r\n```\r\ngo wait.Until(func() {\r\n  ctx, cancel : context.WithCancel(ctx)\r\n  defer cancel()\r\n  go wait.ExponentionBackoff(m.rotateCerts(ctx))\r\n\r\n  select {\r\n  case <-templateChange:\r\n  case <-timerChange:\r\n  }\r\n})\r\n```\r\n\r\nand move the checks like:\r\n```\r\nif m.getTemplate() == nil {\r\n```\r\nand\r\n```\r\nif reflect.DeepEqual(m.getLastRequest(), m.getTemplate()) {\r\n```\r\n\r\nInto rotateCerts. Then all this loop does is trigger restarts of rotateCerts. rotateCerts handles all the details of the cert (if it shouldn't do anything yet because template is nil, if the previously created CSR is sufficient to allow a resumption a WaitForCertificate, etc...).",
        "createdAt" : "2019-05-15T19:47:27Z",
        "updatedAt" : "2019-05-16T19:15:30Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "1892d572-5700-43f6-beb9-657b9de0e2b7",
        "parentId" : "0fbd1fca-949d-495b-b00e-1d5232881800",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I don't disagree this could be better structured, but I'd like to keep this PR targeted on fixing the 15-minute delay, and I don't think it makes it harder to do the kind of cleanup you describe as a follow-up",
        "createdAt" : "2019-05-16T19:21:03Z",
        "updatedAt" : "2019-05-16T19:21:03Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "739a75fc32c5337ddbd13691e9bf6648fb13ff0d",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +268,272 @@\t\t\tcase <-templateChanged:\n\t\t\t\t_, lastRequestTemplate := m.getLastRequest()\n\t\t\t\tif reflect.DeepEqual(lastRequestTemplate, m.getTemplate()) {\n\t\t\t\t\t// if the template now matches what we last requested, restart the rotation deadline loop\n\t\t\t\t\treturn"
  },
  {
    "id" : "4014712b-bddb-437b-a0ad-6e2791df9f6a",
    "prId" : 69991,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69991#pullrequestreview-167217010",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1758c029-1c32-4619-a3f2-e24c5054ec75",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "also check `sets.NewString(m.cert.Leaf.Subject.Organizations...).HasAll(template.Subject.Organizations...)`",
        "createdAt" : "2018-10-23T05:14:36Z",
        "updatedAt" : "2018-10-24T21:16:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9ab65d689cc48353ca5dae9f210ff408726a0d2",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +406,410 @@\t\t\tglog.V(2).Infof(\"Current certificate CN (%s) does not match requested CN (%s)\", m.cert.Leaf.Subject.CommonName, template.Subject.CommonName)\n\t\t\treturn false\n\t\t}\n\n\t\tcurrentDNSNames := sets.NewString(m.cert.Leaf.DNSNames...)"
  },
  {
    "id" : "f7040d7d-3275-4983-955e-b616c5174fa9",
    "prId" : 69991,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69991#pullrequestreview-167616890",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5132d77-f620-421c-b8ba-ed5f57c81271",
        "parentId" : null,
        "authorId" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "body" : "`certSatisfiesTemplate` already locks the mutex, this will deadlock.\r\nRecommend splitting `certSatisfiesTemplate` into two functions: unlocked one and a locking wrapper. Call the unlocked one here and the locked one in `manager.Start`",
        "createdAt" : "2018-10-23T20:18:50Z",
        "updatedAt" : "2018-10-24T21:16:02Z",
        "lastEditedBy" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9ab65d689cc48353ca5dae9f210ff408726a0d2",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +458,462 @@\t}\n\n\tm.certAccessLock.RLock()\n\tdefer m.certAccessLock.RUnlock()\n"
  },
  {
    "id" : "8640a9bf-b103-43a2-b517-a5ed24a7643a",
    "prId" : 58930,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58930#pullrequestreview-92814751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55a79c7d-8c83-43bf-96d6-f46981702b03",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "why? comment could use some justification.",
        "createdAt" : "2018-01-31T00:59:40Z",
        "updatedAt" : "2018-01-31T01:05:15Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "8079330a-c267-4b25-966b-5e054167683a",
        "parentId" : "55a79c7d-8c83-43bf-96d6-f46981702b03",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I was probably being overzealous, the only thing protected by certAccessLock is... cert.  Before, there was a set of local vars that were called in two different goroutines, now everything is in a single goroutine.  I can remove the comment.",
        "createdAt" : "2018-01-31T06:13:19Z",
        "updatedAt" : "2018-01-31T06:13:19Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "44493de195d89ec43cc7246af921e626e0002c16",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +335,339 @@// certificate.\nfunc (m *manager) nextRotationDeadline() time.Time {\n\t// forceRotation is not protected by locks\n\tif m.forceRotation {\n\t\tm.forceRotation = false"
  }
]