[
  {
    "id" : "041e2b43-048f-46a3-b4fb-6ed5bf1ac472",
    "prId" : 91754,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91754#pullrequestreview-427384632",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15814b06-27f1-4ded-885b-cb605240c101",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I'm still reading, but a bootleg conversion like this is going to need a test to go with it so we're sure we don't miss fields if new fields are added.",
        "createdAt" : "2020-06-09T17:04:07Z",
        "updatedAt" : "2020-06-10T06:32:41Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "9fa99462-7368-4533-9107-389d03d9250f",
        "parentId" : "15814b06-27f1-4ded-885b-cb605240c101",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if we hit this path, we're talking to a pre-1.19 server, which wouldn't have the new fields :-)",
        "createdAt" : "2020-06-09T17:15:33Z",
        "updatedAt" : "2020-06-10T06:32:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "81183539-043c-4167-827e-c3050e529001",
        "parentId" : "15814b06-27f1-4ded-885b-cb605240c101",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> if we hit this path, we're talking to a pre-1.19 server, which wouldn't have the new fields :-)\r\n\r\nSneaky.  I think technically I could turn off v1 csr intentionally, but I'll agree that's unlikely.",
        "createdAt" : "2020-06-09T17:20:05Z",
        "updatedAt" : "2020-06-10T06:32:41Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "4489c27f-96a7-487a-a603-1dd847abdddd",
        "parentId" : "15814b06-27f1-4ded-885b-cb605240c101",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> if we hit this path, we're talking to a pre-1.19 server, which wouldn't have the new fields :-)\r\n\r\nThat assumes defaults won't have value in this code.",
        "createdAt" : "2020-06-09T17:21:21Z",
        "updatedAt" : "2020-06-10T06:32:41Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "1f67b835-fc5c-47e6-ad16-f2d2d627869f",
        "parentId" : "15814b06-27f1-4ded-885b-cb605240c101",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "The same would apply to future fields added and defaulted in v1... if we start using new fields and depending on server-side defaults, we'll need a fallback when the field is absent from a v1 object read from a 1.19 server, not just in the conversion case",
        "createdAt" : "2020-06-09T17:26:18Z",
        "updatedAt" : "2020-06-10T06:32:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a298c14f18d4973a9ceaf21f1e0dc4e39b4c5bfb",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +97,101 @@\t}\n\n\tv1req = &certificatesv1.CertificateSigningRequest{\n\t\tObjectMeta: v1beta1req.ObjectMeta,\n\t\tSpec: certificatesv1.CertificateSigningRequestSpec{"
  },
  {
    "id" : "e3bae33d-d5ce-4c38-89a8-99db3fe4e80f",
    "prId" : 91754,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91754#pullrequestreview-427380048",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7b0ad86-b0fd-4e68-b834-89fa9bc316ff",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "seems like you should only fall through to this on a `NotFoundError`",
        "createdAt" : "2020-06-09T17:05:41Z",
        "updatedAt" : "2020-06-10T06:32:41Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "4e350cf0-0eee-454b-837d-dded4dbcd5ae",
        "parentId" : "d7b0ad86-b0fd-4e68-b834-89fa9bc316ff",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "done",
        "createdAt" : "2020-06-09T17:20:27Z",
        "updatedAt" : "2020-06-10T06:32:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a298c14f18d4973a9ceaf21f1e0dc4e39b4c5bfb",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +130,134 @@\t}\n\n\t// convert relevant bits to v1beta1\n\tv1beta1csr := &certificatesv1beta1.CertificateSigningRequest{\n\t\tObjectMeta: csr.ObjectMeta,"
  },
  {
    "id" : "7d92bbff-5f36-4860-976a-fafe72139e10",
    "prId" : 90191,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90191#pullrequestreview-420267300",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1addc84-ef3a-40e5-9bc8-92b1e3da2f31",
        "parentId" : null,
        "authorId" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "body" : "ðŸ˜¢ there are no tests for this function yet.. https://github.com/kubernetes/kubernetes/blob/a333e591b8e1bca4692eca136389de621979c5ed/staging/src/k8s.io/client-go/util/certificate/csr/csr_test.go\r\n\r\nProbably a good thing that can be done in a follow up",
        "createdAt" : "2020-05-28T15:57:01Z",
        "updatedAt" : "2020-05-28T20:53:43Z",
        "lastEditedBy" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "tags" : [
        ]
      },
      {
        "id" : "cfece97b-4da8-4f7c-8ca6-b82f2ab86fa4",
        "parentId" : "d1addc84-ef3a-40e5-9bc8-92b1e3da2f31",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the kubelet cert bootstrap unit tests exercise it",
        "createdAt" : "2020-05-28T16:05:40Z",
        "updatedAt" : "2020-05-28T20:53:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7049149181189eae304246cc49de78d08eef4f80",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +130,134 @@\t\t\t\t\treturn true, nil\n\t\t\t\t}\n\t\t\t\tklog.V(2).Infof(\"certificate signing request %s is approved, waiting to be issued\", csr.Name)\n\t\t\t}\n\t\t\treturn false, nil"
  },
  {
    "id" : "e7c75776-f1e9-4214-bb7d-bb3e6455fe7f",
    "prId" : 88760,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88760#pullrequestreview-367991983",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84a211ab-3ca4-46fa-a24f-3688e354a85c",
        "parentId" : null,
        "authorId" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "body" : "It's worth noting that `RequestCertificate` accepts `signerName` as a `string`, which means that `orig` can *never* be `nil` here. @liggitt was it a mistake that I made signerName (the arg) a non-ptr? Is it ever desirable to allow people to mark it as nil and defer the decision to the apiserver?",
        "createdAt" : "2020-03-03T13:20:17Z",
        "updatedAt" : "2020-03-03T13:20:17Z",
        "lastEditedBy" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "tags" : [
        ]
      },
      {
        "id" : "ee5128cd-8b99-4e10-8ef3-e4f224d93f8e",
        "parentId" : "84a211ab-3ca4-46fa-a24f-3688e354a85c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> was it a mistake that I made signerName (the arg) a non-ptr\r\n\r\nNo, making callers understand and choose their signer matches my expectations and the likely shape of the v1 API.",
        "createdAt" : "2020-03-03T13:50:15Z",
        "updatedAt" : "2020-03-03T13:50:16Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4144a2a1cf501107fc36078a98ce3bf968fb73eb",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +151,155 @@\t\treturn fmt.Errorf(\"csr subjects differ: new: %#v, orig: %#v\", newCSR.Subject, origCSR.Subject)\n\t}\n\tif new.Spec.SignerName != nil && orig.Spec.SignerName != nil && *new.Spec.SignerName != *orig.Spec.SignerName {\n\t\treturn fmt.Errorf(\"csr signerNames differ: new %q, orig: %q\", *new.Spec.SignerName, *orig.Spec.SignerName)\n\t}"
  },
  {
    "id" : "36c1a556-08d2-4050-923a-582efbc0a3d9",
    "prId" : 88246,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88246#pullrequestreview-366508783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5840430-4566-40dd-b060-f27f50249040",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "update ensureCompatible() to make sure that if `new.Spec.SignerName` and `orig.Spec.SignerName` are both non-nil, they match (and add unit tests for the nil, matching, and mismatching cases)",
        "createdAt" : "2020-02-28T16:06:03Z",
        "updatedAt" : "2020-02-28T16:06:03Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5dae048983cd299cdce9d2703f564bf4bd246ee",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +47,51 @@// certificate (pem-encoded). If there is any errors, or the watch timeouts, it\n// will return an error.\nfunc RequestCertificate(client certificatesclient.CertificateSigningRequestInterface, csrData []byte, name string, signerName string, usages []certificates.KeyUsage, privateKey interface{}) (req *certificates.CertificateSigningRequest, err error) {\n\tcsr := &certificates.CertificateSigningRequest{\n\t\t// Username, UID, Groups will be injected by API server."
  }
]