[
  {
    "id" : "574af050-891d-43b7-8ba9-8c80cfc30b64",
    "prId" : 99324,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99324#pullrequestreview-596696387",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "108813de-4c70-4aae-b905-9100669d6e3a",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "at the round-tripper level, wouldn't a 401 error come back as a resp (with code 401) and a nil `err`? I thought `err` was reserved for conditions that prevented us from making the request",
        "createdAt" : "2021-02-23T18:56:03Z",
        "updatedAt" : "2021-02-25T19:01:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "12d807a5-e43a-4018-bc63-b3435259f81d",
        "parentId" : "108813de-4c70-4aae-b905-9100669d6e3a",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "that's right",
        "createdAt" : "2021-02-23T19:02:46Z",
        "updatedAt" : "2021-02-25T19:01:04Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e7b60ba5fe218d8ac59496350dfdb9f43785d98",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +105,109 @@\t// and proceed.\n\tstart := time.Now()\n\tresp, err := tst.ort.RoundTrip(req)\n\tif err == nil && resp != nil && resp.StatusCode == 401 && tst.src != nil {\n\t\ttst.src.ResetTokenOlderThan(start)"
  },
  {
    "id" : "4004b2ee-836e-4e33-9b0e-a505102b47dc",
    "prId" : 72437,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72437#pullrequestreview-188439096",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0e42908-3ae8-4a6c-9771-4dff92937cea",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "- Does this period control the client-go reload of the token after it has been refreshed by the kubelet ? \r\n- Is it configurable ?\r\n- If yes to 1, isnt this dependent on the `expirationSeconds`  in the projected volume ? ",
        "createdAt" : "2018-12-30T07:50:08Z",
        "updatedAt" : "2018-12-30T07:50:08Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "d2aa98a5-6f9c-457e-8c42-a6a5d7b69c15",
        "parentId" : "a0e42908-3ae8-4a6c-9771-4dff92937cea",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "It does control the refresh period. It is not configurable. expirationSeconds must be at least 10 minutes",
        "createdAt" : "2018-12-30T13:19:10Z",
        "updatedAt" : "2018-12-30T13:19:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a432a7cf683e4ea304ae8e39e191a438e37a813e",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +55,59 @@\t\t\t// Default token lifetime is 10 minutes, and the kubelet starts refreshing at 80% of lifetime.\n\t\t\t// This should induce re-reading at a frequency that works with the token volume source.\n\t\t\tperiod: time.Minute,\n\t\t},\n\t}"
  }
]