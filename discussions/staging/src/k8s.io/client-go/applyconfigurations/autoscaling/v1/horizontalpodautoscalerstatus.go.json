[
  {
    "id" : "937e2e0a-69ee-41a0-a028-c8cb7b0a8b72",
    "prId" : 99012,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99012#pullrequestreview-603278415",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2c461f2-6176-4122-bfd6-c46be02dbf0c",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Maybe when go2 is here we can let users optionally instead pass in a real time.Time, this looks a little annoying to use.",
        "createdAt" : "2021-03-03T00:08:12Z",
        "updatedAt" : "2021-03-04T18:33:21Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "88b65dd3-c8ef-47e5-97cc-d26ebdc63988",
        "parentId" : "b2c461f2-6176-4122-bfd6-c46be02dbf0c",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "I agree. We're using the same type that is used on the `HorizontalPodAutoscalerStatus`, so we didn't make it any worse (generating a TimeApplyConfiguration would have been much worse). `time.Time` would be much nicer.",
        "createdAt" : "2021-03-03T04:50:36Z",
        "updatedAt" : "2021-03-04T18:33:21Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "e004a892-4c06-42b0-8863-382fa629c8cc",
        "parentId" : "b2c461f2-6176-4122-bfd6-c46be02dbf0c",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I almost suggested just using a time.Time, but then what if people want to explicitly manage the rounding? Hm maybe that's not that important. What bad thing happens if we auto-convert time.Time to v1.Time / v1.MicroTime as needed?",
        "createdAt" : "2021-03-03T18:33:03Z",
        "updatedAt" : "2021-03-04T18:33:22Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "a4ecd931-b5b7-47fa-9895-a4a059152a1e",
        "parentId" : "b2c461f2-6176-4122-bfd6-c46be02dbf0c",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "If we did try to leverage `time.Time` and avoid the conversions we still wouldn't be able to change the underlying struct use `time.Time` because it doesn't support json serialization. So we'd have `time.Time` as the argument for `WithTimeField()` functions but the `TimeField` field would be `v1.Time`, and developers would be able to see that.\r\n\r\nThe k/k codebase is full of `metav1.NewTime()` calls to convert `time.Time` `metav1.Time` so I'm not sure this a huge net win given that everything else would still require `NewTime()` conversions.\r\n\r\nMicroTime looks like the same situation since the `NewMicroTime()` function takes a `time.Time` and already handles the conversion.",
        "createdAt" : "2021-03-03T19:39:25Z",
        "updatedAt" : "2021-03-04T18:33:22Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "f1ba0993-833e-4800-baac-7f3ff3dab45e",
        "parentId" : "b2c461f2-6176-4122-bfd6-c46be02dbf0c",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "OK, sounds good.",
        "createdAt" : "2021-03-03T19:41:13Z",
        "updatedAt" : "2021-03-04T18:33:22Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "86184be5f1fb8fcf0dfc581b1c104dc0804e8083",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@// and returns the receiver, so that objects can be built by chaining \"With\" function invocations.\n// If called multiple times, the LastScaleTime field is set to the value of the last call.\nfunc (b *HorizontalPodAutoscalerStatusApplyConfiguration) WithLastScaleTime(value v1.Time) *HorizontalPodAutoscalerStatusApplyConfiguration {\n\tb.LastScaleTime = &value\n\treturn b"
  }
]