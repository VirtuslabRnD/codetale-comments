[
  {
    "id" : "b6d2a9f9-d80b-42dd-907c-b7006f781dcc",
    "prId" : 99012,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99012#pullrequestreview-599081029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e979953-31f0-4b63-bb91-d030ece2a5ea",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Can I construct this from a PVC?",
        "createdAt" : "2021-02-25T20:42:23Z",
        "updatedAt" : "2021-03-04T18:33:21Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "6798d783-6aac-4779-81da-72bed942ea5d",
        "parentId" : "4e979953-31f0-4b63-bb91-d030ece2a5ea",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "Yes, via the \"convert obj to apply object\" functions that we haven't implemented yet ([KEP section](https://github.com/kubernetes/enhancements/tree/master/keps/sig-api-machinery/2155-clientgo-apply#readmodifywrite-loop-support)). Once https://github.com/kubernetes-sigs/structured-merge-diff/pull/185 is merged I'll pick it up and generate the appropriate function (TBD if that will be in this PR or a follow up).",
        "createdAt" : "2021-02-25T21:36:05Z",
        "updatedAt" : "2021-03-04T18:33:21Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "5b180426-e8bc-4739-ba3e-f37e17500a13",
        "parentId" : "4e979953-31f0-4b63-bb91-d030ece2a5ea",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Yes if we're talking about constructing from extracting an existing object with the specific fieldmanager set.\r\nNo if it's about transforming a random non-apply object to an apply object, we should make that path as hard to implement as possible :-)",
        "createdAt" : "2021-02-25T22:07:15Z",
        "updatedAt" : "2021-03-04T18:33:21Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "86184be5f1fb8fcf0dfc581b1c104dc0804e8083",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@// PersistentVolumeClaim constructs an declarative configuration of the PersistentVolumeClaim type for use with\n// apply.\nfunc PersistentVolumeClaim(name, namespace string) *PersistentVolumeClaimApplyConfiguration {\n\tb := &PersistentVolumeClaimApplyConfiguration{}\n\tb.WithName(name)"
  }
]