[
  {
    "id" : "09785e93-7b66-4f2f-aa80-d46304830984",
    "prId" : 102890,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102890#pullrequestreview-694084682",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b606442-20a8-4e90-b393-7d383c8ad7b6",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "when promoting an API version, it's usually helpful to have a single commit that is a straight `cp -fr` of the previous version's package, to make it easy to see what, if anything changed\r\n\r\nIn this case, not much (this is a diff against the v1beta1 package):\r\n\r\n```diff\r\ndiff --git a/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/conversion.go b/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/conversion.go\r\nindex 6741114dd8d..5c5f70d259c 100644\r\n--- a/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/conversion.go\r\n+++ b/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/conversion.go\r\n@@ -1,5 +1,5 @@\r\n /*\r\n-Copyright 2018 The Kubernetes Authors.\r\n+Copyright 2021 The Kubernetes Authors.\r\n \r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n@@ -14,15 +14,15 @@ See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n \r\n-package v1beta1\r\n+package v1\r\n \r\n import (\r\n \t\"k8s.io/apimachinery/pkg/conversion\"\r\n \t\"k8s.io/client-go/pkg/apis/clientauthentication\"\r\n )\r\n \r\n-func Convert_clientauthentication_ExecCredentialSpec_To_v1beta1_ExecCredentialSpec(in *clientauthentication.ExecCredentialSpec, out *ExecCredentialSpec, s conversion.Scope) error {\r\n+func Convert_clientauthentication_ExecCredentialSpec_To_v1_ExecCredentialSpec(in *clientauthentication.ExecCredentialSpec, out *ExecCredentialSpec, s conversion.Scope) error {\r\n \t// This conversion intentionally omits the Response field, which were only\r\n \t// supported in v1alpha1.\r\n-\treturn autoConvert_clientauthentication_ExecCredentialSpec_To_v1beta1_ExecCredentialSpec(in, out, s)\r\n+\treturn autoConvert_clientauthentication_ExecCredentialSpec_To_v1_ExecCredentialSpec(in, out, s)\r\n }\r\ndiff --git a/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/doc.go b/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/doc.go\r\nindex 22d1c588bc7..94ca35c2c91 100644\r\n--- a/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/doc.go\r\n+++ b/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/doc.go\r\n@@ -1,5 +1,5 @@\r\n /*\r\n-Copyright 2018 The Kubernetes Authors.\r\n+Copyright 2021 The Kubernetes Authors.\r\n \r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n@@ -21,4 +21,4 @@ limitations under the License.\r\n \r\n // +groupName=client.authentication.k8s.io\r\n \r\n-package v1beta1 // import \"k8s.io/client-go/pkg/apis/clientauthentication/v1beta1\"\r\n+package v1 // import \"k8s.io/client-go/pkg/apis/clientauthentication/v1\"\r\ndiff --git a/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/register.go b/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/register.go\r\nindex 0bb92f16a44..bfc719a42aa 100644\r\n--- a/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/register.go\r\n+++ b/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/register.go\r\n@@ -1,5 +1,5 @@\r\n /*\r\n-Copyright 2018 The Kubernetes Authors.\r\n+Copyright 2021 The Kubernetes Authors.\r\n \r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n@@ -14,7 +14,7 @@ See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n \r\n-package v1beta1\r\n+package v1\r\n \r\n import (\r\n \tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\r\n@@ -26,7 +26,7 @@ import (\r\n const GroupName = \"client.authentication.k8s.io\"\r\n \r\n // SchemeGroupVersion is group version used to register these objects\r\n-var SchemeGroupVersion = schema.GroupVersion{Group: GroupName, Version: \"v1beta1\"}\r\n+var SchemeGroupVersion = schema.GroupVersion{Group: GroupName, Version: \"v1\"}\r\n \r\n // Resource takes an unqualified resource and returns a Group qualified GroupResource\r\n func Resource(resource string) schema.GroupResource {\r\ndiff --git a/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/types.go b/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/types.go\r\nindex 714b0273ae9..0c4754dd269 100644\r\n--- a/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/types.go\r\n+++ b/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/types.go\r\n@@ -1,5 +1,5 @@\r\n /*\r\n-Copyright 2018 The Kubernetes Authors.\r\n+Copyright 2021 The Kubernetes Authors.\r\n \r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n@@ -14,7 +14,7 @@ See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n \r\n-package v1beta1\r\n+package v1\r\n \r\n import (\r\n \tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\r\ndiff --git a/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/zz_generated.conversion.go b/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/zz_generated.conversion.go\r\nindex 8daed805240..39e7ef2597d 100644\r\n--- a/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/zz_generated.conversion.go\r\n+++ b/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/zz_generated.conversion.go\r\n@@ -18,12 +18,12 @@ limitations under the License.\r\n \r\n // Code generated by conversion-gen. DO NOT EDIT.\r\n \r\n-package v1beta1\r\n+package v1\r\n \r\n import (\r\n \tunsafe \"unsafe\"\r\n \r\n-\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\r\n+\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\r\n \tconversion \"k8s.io/apimachinery/pkg/conversion\"\r\n \truntime \"k8s.io/apimachinery/pkg/runtime\"\r\n \tclientauthentication \"k8s.io/client-go/pkg/apis/clientauthentication\"\r\n@@ -37,49 +37,49 @@ func init() {\r\n // Public to allow building arbitrary schemes.\r\n func RegisterConversions(s *runtime.Scheme) error {\r\n \tif err := s.AddGeneratedConversionFunc((*Cluster)(nil), (*clientauthentication.Cluster)(nil), func(a, b interface{}, scope conversion.Scope) error {\r\n-\t\treturn Convert_v1beta1_Cluster_To_clientauthentication_Cluster(a.(*Cluster), b.(*clientauthentication.Cluster), scope)\r\n+\t\treturn Convert_v1_Cluster_To_clientauthentication_Cluster(a.(*Cluster), b.(*clientauthentication.Cluster), scope)\r\n \t}); err != nil {\r\n \t\treturn err\r\n \t}\r\n \tif err := s.AddGeneratedConversionFunc((*clientauthentication.Cluster)(nil), (*Cluster)(nil), func(a, b interface{}, scope conversion.Scope) error {\r\n-\t\treturn Convert_clientauthentication_Cluster_To_v1beta1_Cluster(a.(*clientauthentication.Cluster), b.(*Cluster), scope)\r\n+\t\treturn Convert_clientauthentication_Cluster_To_v1_Cluster(a.(*clientauthentication.Cluster), b.(*Cluster), scope)\r\n \t}); err != nil {\r\n \t\treturn err\r\n \t}\r\n \tif err := s.AddGeneratedConversionFunc((*ExecCredential)(nil), (*clientauthentication.ExecCredential)(nil), func(a, b interface{}, scope conversion.Scope) error {\r\n-\t\treturn Convert_v1beta1_ExecCredential_To_clientauthentication_ExecCredential(a.(*ExecCredential), b.(*clientauthentication.ExecCredential), scope)\r\n+\t\treturn Convert_v1_ExecCredential_To_clientauthentication_ExecCredential(a.(*ExecCredential), b.(*clientauthentication.ExecCredential), scope)\r\n \t}); err != nil {\r\n \t\treturn err\r\n \t}\r\n \tif err := s.AddGeneratedConversionFunc((*clientauthentication.ExecCredential)(nil), (*ExecCredential)(nil), func(a, b interface{}, scope conversion.Scope) error {\r\n-\t\treturn Convert_clientauthentication_ExecCredential_To_v1beta1_ExecCredential(a.(*clientauthentication.ExecCredential), b.(*ExecCredential), scope)\r\n+\t\treturn Convert_clientauthentication_ExecCredential_To_v1_ExecCredential(a.(*clientauthentication.ExecCredential), b.(*ExecCredential), scope)\r\n \t}); err != nil {\r\n \t\treturn err\r\n \t}\r\n \tif err := s.AddGeneratedConversionFunc((*ExecCredentialSpec)(nil), (*clientauthentication.ExecCredentialSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {\r\n-\t\treturn Convert_v1beta1_ExecCredentialSpec_To_clientauthentication_ExecCredentialSpec(a.(*ExecCredentialSpec), b.(*clientauthentication.ExecCredentialSpec), scope)\r\n+\t\treturn Convert_v1_ExecCredentialSpec_To_clientauthentication_ExecCredentialSpec(a.(*ExecCredentialSpec), b.(*clientauthentication.ExecCredentialSpec), scope)\r\n \t}); err != nil {\r\n \t\treturn err\r\n \t}\r\n \tif err := s.AddGeneratedConversionFunc((*ExecCredentialStatus)(nil), (*clientauthentication.ExecCredentialStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {\r\n-\t\treturn Convert_v1beta1_ExecCredentialStatus_To_clientauthentication_ExecCredentialStatus(a.(*ExecCredentialStatus), b.(*clientauthentication.ExecCredentialStatus), scope)\r\n+\t\treturn Convert_v1_ExecCredentialStatus_To_clientauthentication_ExecCredentialStatus(a.(*ExecCredentialStatus), b.(*clientauthentication.ExecCredentialStatus), scope)\r\n \t}); err != nil {\r\n \t\treturn err\r\n \t}\r\n \tif err := s.AddGeneratedConversionFunc((*clientauthentication.ExecCredentialStatus)(nil), (*ExecCredentialStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {\r\n-\t\treturn Convert_clientauthentication_ExecCredentialStatus_To_v1beta1_ExecCredentialStatus(a.(*clientauthentication.ExecCredentialStatus), b.(*ExecCredentialStatus), scope)\r\n+\t\treturn Convert_clientauthentication_ExecCredentialStatus_To_v1_ExecCredentialStatus(a.(*clientauthentication.ExecCredentialStatus), b.(*ExecCredentialStatus), scope)\r\n \t}); err != nil {\r\n \t\treturn err\r\n \t}\r\n \tif err := s.AddConversionFunc((*clientauthentication.ExecCredentialSpec)(nil), (*ExecCredentialSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {\r\n-\t\treturn Convert_clientauthentication_ExecCredentialSpec_To_v1beta1_ExecCredentialSpec(a.(*clientauthentication.ExecCredentialSpec), b.(*ExecCredentialSpec), scope)\r\n+\t\treturn Convert_clientauthentication_ExecCredentialSpec_To_v1_ExecCredentialSpec(a.(*clientauthentication.ExecCredentialSpec), b.(*ExecCredentialSpec), scope)\r\n \t}); err != nil {\r\n \t\treturn err\r\n \t}\r\n \treturn nil\r\n }\r\n \r\n-func autoConvert_v1beta1_Cluster_To_clientauthentication_Cluster(in *Cluster, out *clientauthentication.Cluster, s conversion.Scope) error {\r\n+func autoConvert_v1_Cluster_To_clientauthentication_Cluster(in *Cluster, out *clientauthentication.Cluster, s conversion.Scope) error {\r\n \tout.Server = in.Server\r\n \tout.TLSServerName = in.TLSServerName\r\n \tout.InsecureSkipTLSVerify = in.InsecureSkipTLSVerify\r\n@@ -91,12 +91,12 @@ func autoConvert_v1beta1_Cluster_To_clientauthentication_Cluster(in *Cluster, ou\r\n \treturn nil\r\n }\r\n \r\n-// Convert_v1beta1_Cluster_To_clientauthentication_Cluster is an autogenerated conversion function.\r\n-func Convert_v1beta1_Cluster_To_clientauthentication_Cluster(in *Cluster, out *clientauthentication.Cluster, s conversion.Scope) error {\r\n-\treturn autoConvert_v1beta1_Cluster_To_clientauthentication_Cluster(in, out, s)\r\n+// Convert_v1_Cluster_To_clientauthentication_Cluster is an autogenerated conversion function.\r\n+func Convert_v1_Cluster_To_clientauthentication_Cluster(in *Cluster, out *clientauthentication.Cluster, s conversion.Scope) error {\r\n+\treturn autoConvert_v1_Cluster_To_clientauthentication_Cluster(in, out, s)\r\n }\r\n \r\n-func autoConvert_clientauthentication_Cluster_To_v1beta1_Cluster(in *clientauthentication.Cluster, out *Cluster, s conversion.Scope) error {\r\n+func autoConvert_clientauthentication_Cluster_To_v1_Cluster(in *clientauthentication.Cluster, out *Cluster, s conversion.Scope) error {\r\n \tout.Server = in.Server\r\n \tout.TLSServerName = in.TLSServerName\r\n \tout.InsecureSkipTLSVerify = in.InsecureSkipTLSVerify\r\n@@ -108,42 +108,42 @@ func autoConvert_clientauthentication_Cluster_To_v1beta1_Cluster(in *clientauthe\r\n \treturn nil\r\n }\r\n \r\n-// Convert_clientauthentication_Cluster_To_v1beta1_Cluster is an autogenerated conversion function.\r\n-func Convert_clientauthentication_Cluster_To_v1beta1_Cluster(in *clientauthentication.Cluster, out *Cluster, s conversion.Scope) error {\r\n-\treturn autoConvert_clientauthentication_Cluster_To_v1beta1_Cluster(in, out, s)\r\n+// Convert_clientauthentication_Cluster_To_v1_Cluster is an autogenerated conversion function.\r\n+func Convert_clientauthentication_Cluster_To_v1_Cluster(in *clientauthentication.Cluster, out *Cluster, s conversion.Scope) error {\r\n+\treturn autoConvert_clientauthentication_Cluster_To_v1_Cluster(in, out, s)\r\n }\r\n \r\n-func autoConvert_v1beta1_ExecCredential_To_clientauthentication_ExecCredential(in *ExecCredential, out *clientauthentication.ExecCredential, s conversion.Scope) error {\r\n-\tif err := Convert_v1beta1_ExecCredentialSpec_To_clientauthentication_ExecCredentialSpec(&in.Spec, &out.Spec, s); err != nil {\r\n+func autoConvert_v1_ExecCredential_To_clientauthentication_ExecCredential(in *ExecCredential, out *clientauthentication.ExecCredential, s conversion.Scope) error {\r\n+\tif err := Convert_v1_ExecCredentialSpec_To_clientauthentication_ExecCredentialSpec(&in.Spec, &out.Spec, s); err != nil {\r\n \t\treturn err\r\n \t}\r\n \tout.Status = (*clientauthentication.ExecCredentialStatus)(unsafe.Pointer(in.Status))\r\n \treturn nil\r\n }\r\n \r\n-// Convert_v1beta1_ExecCredential_To_clientauthentication_ExecCredential is an autogenerated conversion function.\r\n-func Convert_v1beta1_ExecCredential_To_clientauthentication_ExecCredential(in *ExecCredential, out *clientauthentication.ExecCredential, s conversion.Scope) error {\r\n-\treturn autoConvert_v1beta1_ExecCredential_To_clientauthentication_ExecCredential(in, out, s)\r\n+// Convert_v1_ExecCredential_To_clientauthentication_ExecCredential is an autogenerated conversion function.\r\n+func Convert_v1_ExecCredential_To_clientauthentication_ExecCredential(in *ExecCredential, out *clientauthentication.ExecCredential, s conversion.Scope) error {\r\n+\treturn autoConvert_v1_ExecCredential_To_clientauthentication_ExecCredential(in, out, s)\r\n }\r\n \r\n-func autoConvert_clientauthentication_ExecCredential_To_v1beta1_ExecCredential(in *clientauthentication.ExecCredential, out *ExecCredential, s conversion.Scope) error {\r\n-\tif err := Convert_clientauthentication_ExecCredentialSpec_To_v1beta1_ExecCredentialSpec(&in.Spec, &out.Spec, s); err != nil {\r\n+func autoConvert_clientauthentication_ExecCredential_To_v1_ExecCredential(in *clientauthentication.ExecCredential, out *ExecCredential, s conversion.Scope) error {\r\n+\tif err := Convert_clientauthentication_ExecCredentialSpec_To_v1_ExecCredentialSpec(&in.Spec, &out.Spec, s); err != nil {\r\n \t\treturn err\r\n \t}\r\n \tout.Status = (*ExecCredentialStatus)(unsafe.Pointer(in.Status))\r\n \treturn nil\r\n }\r\n \r\n-// Convert_clientauthentication_ExecCredential_To_v1beta1_ExecCredential is an autogenerated conversion function.\r\n-func Convert_clientauthentication_ExecCredential_To_v1beta1_ExecCredential(in *clientauthentication.ExecCredential, out *ExecCredential, s conversion.Scope) error {\r\n-\treturn autoConvert_clientauthentication_ExecCredential_To_v1beta1_ExecCredential(in, out, s)\r\n+// Convert_clientauthentication_ExecCredential_To_v1_ExecCredential is an autogenerated conversion function.\r\n+func Convert_clientauthentication_ExecCredential_To_v1_ExecCredential(in *clientauthentication.ExecCredential, out *ExecCredential, s conversion.Scope) error {\r\n+\treturn autoConvert_clientauthentication_ExecCredential_To_v1_ExecCredential(in, out, s)\r\n }\r\n \r\n-func autoConvert_v1beta1_ExecCredentialSpec_To_clientauthentication_ExecCredentialSpec(in *ExecCredentialSpec, out *clientauthentication.ExecCredentialSpec, s conversion.Scope) error {\r\n+func autoConvert_v1_ExecCredentialSpec_To_clientauthentication_ExecCredentialSpec(in *ExecCredentialSpec, out *clientauthentication.ExecCredentialSpec, s conversion.Scope) error {\r\n \tif in.Cluster != nil {\r\n \t\tin, out := &in.Cluster, &out.Cluster\r\n \t\t*out = new(clientauthentication.Cluster)\r\n-\t\tif err := Convert_v1beta1_Cluster_To_clientauthentication_Cluster(*in, *out, s); err != nil {\r\n+\t\tif err := Convert_v1_Cluster_To_clientauthentication_Cluster(*in, *out, s); err != nil {\r\n \t\t\treturn err\r\n \t\t}\r\n \t} else {\r\n@@ -153,18 +153,18 @@ func autoConvert_v1beta1_ExecCredentialSpec_To_clientauthentication_ExecCredenti\r\n \treturn nil\r\n }\r\n \r\n-// Convert_v1beta1_ExecCredentialSpec_To_clientauthentication_ExecCredentialSpec is an autogenerated conversion function.\r\n-func Convert_v1beta1_ExecCredentialSpec_To_clientauthentication_ExecCredentialSpec(in *ExecCredentialSpec, out *clientauthentication.ExecCredentialSpec, s conversion.Scope) error {\r\n-\treturn autoConvert_v1beta1_ExecCredentialSpec_To_clientauthentication_ExecCredentialSpec(in, out, s)\r\n+// Convert_v1_ExecCredentialSpec_To_clientauthentication_ExecCredentialSpec is an autogenerated conversion function.\r\n+func Convert_v1_ExecCredentialSpec_To_clientauthentication_ExecCredentialSpec(in *ExecCredentialSpec, out *clientauthentication.ExecCredentialSpec, s conversion.Scope) error {\r\n+\treturn autoConvert_v1_ExecCredentialSpec_To_clientauthentication_ExecCredentialSpec(in, out, s)\r\n }\r\n \r\n-func autoConvert_clientauthentication_ExecCredentialSpec_To_v1beta1_ExecCredentialSpec(in *clientauthentication.ExecCredentialSpec, out *ExecCredentialSpec, s conversion.Scope) error {\r\n+func autoConvert_clientauthentication_ExecCredentialSpec_To_v1_ExecCredentialSpec(in *clientauthentication.ExecCredentialSpec, out *ExecCredentialSpec, s conversion.Scope) error {\r\n \t// WARNING: in.Response requires manual conversion: does not exist in peer-type\r\n \tout.Interactive = in.Interactive\r\n \tif in.Cluster != nil {\r\n \t\tin, out := &in.Cluster, &out.Cluster\r\n \t\t*out = new(Cluster)\r\n-\t\tif err := Convert_clientauthentication_Cluster_To_v1beta1_Cluster(*in, *out, s); err != nil {\r\n+\t\tif err := Convert_clientauthentication_Cluster_To_v1_Cluster(*in, *out, s); err != nil {\r\n \t\t\treturn err\r\n \t\t}\r\n \t} else {\r\n@@ -173,28 +173,28 @@ func autoConvert_clientauthentication_ExecCredentialSpec_To_v1beta1_ExecCredenti\r\n \treturn nil\r\n }\r\n \r\n-func autoConvert_v1beta1_ExecCredentialStatus_To_clientauthentication_ExecCredentialStatus(in *ExecCredentialStatus, out *clientauthentication.ExecCredentialStatus, s conversion.Scope) error {\r\n-\tout.ExpirationTimestamp = (*v1.Time)(unsafe.Pointer(in.ExpirationTimestamp))\r\n+func autoConvert_v1_ExecCredentialStatus_To_clientauthentication_ExecCredentialStatus(in *ExecCredentialStatus, out *clientauthentication.ExecCredentialStatus, s conversion.Scope) error {\r\n+\tout.ExpirationTimestamp = (*metav1.Time)(unsafe.Pointer(in.ExpirationTimestamp))\r\n \tout.Token = in.Token\r\n \tout.ClientCertificateData = in.ClientCertificateData\r\n \tout.ClientKeyData = in.ClientKeyData\r\n \treturn nil\r\n }\r\n \r\n-// Convert_v1beta1_ExecCredentialStatus_To_clientauthentication_ExecCredentialStatus is an autogenerated conversion function.\r\n-func Convert_v1beta1_ExecCredentialStatus_To_clientauthentication_ExecCredentialStatus(in *ExecCredentialStatus, out *clientauthentication.ExecCredentialStatus, s conversion.Scope) error {\r\n-\treturn autoConvert_v1beta1_ExecCredentialStatus_To_clientauthentication_ExecCredentialStatus(in, out, s)\r\n+// Convert_v1_ExecCredentialStatus_To_clientauthentication_ExecCredentialStatus is an autogenerated conversion function.\r\n+func Convert_v1_ExecCredentialStatus_To_clientauthentication_ExecCredentialStatus(in *ExecCredentialStatus, out *clientauthentication.ExecCredentialStatus, s conversion.Scope) error {\r\n+\treturn autoConvert_v1_ExecCredentialStatus_To_clientauthentication_ExecCredentialStatus(in, out, s)\r\n }\r\n \r\n-func autoConvert_clientauthentication_ExecCredentialStatus_To_v1beta1_ExecCredentialStatus(in *clientauthentication.ExecCredentialStatus, out *ExecCredentialStatus, s conversion.Scope) error {\r\n-\tout.ExpirationTimestamp = (*v1.Time)(unsafe.Pointer(in.ExpirationTimestamp))\r\n+func autoConvert_clientauthentication_ExecCredentialStatus_To_v1_ExecCredentialStatus(in *clientauthentication.ExecCredentialStatus, out *ExecCredentialStatus, s conversion.Scope) error {\r\n+\tout.ExpirationTimestamp = (*metav1.Time)(unsafe.Pointer(in.ExpirationTimestamp))\r\n \tout.Token = in.Token\r\n \tout.ClientCertificateData = in.ClientCertificateData\r\n \tout.ClientKeyData = in.ClientKeyData\r\n \treturn nil\r\n }\r\n \r\n-// Convert_clientauthentication_ExecCredentialStatus_To_v1beta1_ExecCredentialStatus is an autogenerated conversion function.\r\n-func Convert_clientauthentication_ExecCredentialStatus_To_v1beta1_ExecCredentialStatus(in *clientauthentication.ExecCredentialStatus, out *ExecCredentialStatus, s conversion.Scope) error {\r\n-\treturn autoConvert_clientauthentication_ExecCredentialStatus_To_v1beta1_ExecCredentialStatus(in, out, s)\r\n+// Convert_clientauthentication_ExecCredentialStatus_To_v1_ExecCredentialStatus is an autogenerated conversion function.\r\n+func Convert_clientauthentication_ExecCredentialStatus_To_v1_ExecCredentialStatus(in *clientauthentication.ExecCredentialStatus, out *ExecCredentialStatus, s conversion.Scope) error {\r\n+\treturn autoConvert_clientauthentication_ExecCredentialStatus_To_v1_ExecCredentialStatus(in, out, s)\r\n }\r\ndiff --git a/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/zz_generated.deepcopy.go b/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/zz_generated.deepcopy.go\r\nindex 3a72ece0c6f..60ab25d81b3 100644\r\n--- a/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/zz_generated.deepcopy.go\r\n+++ b/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/zz_generated.deepcopy.go\r\n@@ -18,7 +18,7 @@ limitations under the License.\r\n \r\n // Code generated by deepcopy-gen. DO NOT EDIT.\r\n \r\n-package v1beta1\r\n+package v1\r\n \r\n import (\r\n \truntime \"k8s.io/apimachinery/pkg/runtime\"\r\ndiff --git a/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/zz_generated.defaults.go b/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/zz_generated.defaults.go\r\nindex 73e63fc114d..cce2e603a69 100644\r\n--- a/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/zz_generated.defaults.go\r\n+++ b/staging/src/k8s.io/client-go/pkg/apis/clientauthentication/v1/zz_generated.defaults.go\r\n@@ -18,7 +18,7 @@ limitations under the License.\r\n \r\n // Code generated by defaulter-gen. DO NOT EDIT.\r\n \r\n-package v1beta1\r\n+package v1\r\n \r\n import (\r\n \truntime \"k8s.io/apimachinery/pkg/runtime\"\r\n```",
        "createdAt" : "2021-06-27T01:26:32Z",
        "updatedAt" : "2021-06-27T01:33:12Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "995cc2e5-8b3c-4178-82be-f594bf92efb0",
        "parentId" : "9b606442-20a8-4e90-b393-7d383c8ad7b6",
        "authorId" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "body" : "https://github.com/kubernetes/kubernetes/pull/102890/commits/30a6812aa13d11422b7d03b7d662b4857bddf24f now only contains the v1 struct",
        "createdAt" : "2021-06-28T15:16:51Z",
        "updatedAt" : "2021-06-28T15:16:52Z",
        "lastEditedBy" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "tags" : [
        ]
      }
    ],
    "commit" : "20e1c4d7548de0b39a2d70a748ca0b9aab28f631",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@/*\nCopyright 2021 The Kubernetes Authors.\n"
  }
]