[
  {
    "id" : "de7a31d8-f5f0-4728-9c22-1109214f6f96",
    "prId" : 38058,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38058#pullrequestreview-12269379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "323733c7-9bda-48b3-aa16-967a0532bef9",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Why doesn't `GetItemsPtr` support `UnstructuredList`? Then this special case for `IsListType` would go away.",
        "createdAt" : "2016-12-08T11:49:07Z",
        "updatedAt" : "2016-12-10T23:07:43Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "b7d98e63-c143-40d7-8c20-23e46842f608",
        "parentId" : "323733c7-9bda-48b3-aa16-967a0532bef9",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "UnstructuredList is typed - i.e. it is tied to `meta/v1` which is a particular schema of meta.  IsList decouples the details of the underlying schema - it's the generic interface that needs no details of metadata.  Basically here's how i think of this hierarchy:\r\n\r\n```\r\nmeta/v1 - concrete types that access data\r\nmeta/v1/unstructured - concrete types that access a particular schema of metadata\r\nmeta/v1/interfaces.go#Object - interface exposing the v1 schema, not tied to concrete types\r\nruntime/interfaces#Unstructured - interface exposing the idea of unstructured, not tied to the v1 schema\r\n```\r\n\r\nDoes that make sense?",
        "createdAt" : "2016-12-08T17:44:41Z",
        "updatedAt" : "2016-12-10T23:07:43Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "98f1582c-305c-4745-80b6-91ec7965b88b",
        "parentId" : "323733c7-9bda-48b3-aa16-967a0532bef9",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "makes sense. But I think I meant something else: I would have moved the `obj.(runtime.Unstructured)` type check/cast into `GetItemsPtr`.",
        "createdAt" : "2016-12-09T07:45:02Z",
        "updatedAt" : "2016-12-10T23:07:43Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "23520606-1204-487d-83ef-299c566a79fb",
        "parentId" : "323733c7-9bda-48b3-aa16-967a0532bef9",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Ah.  Let me look at that.",
        "createdAt" : "2016-12-09T17:17:01Z",
        "updatedAt" : "2016-12-10T23:07:43Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "884e863a-e71c-4354-806e-7f821a1e1bf9",
        "parentId" : "323733c7-9bda-48b3-aa16-967a0532bef9",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I think we need to move GetItemsPtr over time to an interface ListItems() []runtime.Object, in which case we'd test for access.  So right now GetItemsPtr works correctly (because of UnstructuredList), but GetItemsPtr is what should be changed in the future.",
        "createdAt" : "2016-12-09T17:19:26Z",
        "updatedAt" : "2016-12-10T23:07:43Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "42e0eda3e41a2400863fe40bc684292b8c9d4e23",
    "line" : null,
    "diffHunk" : "@@ -1,1 +30,34 @@\t// TODO: refactor GetItemsPtr to use an interface that returns []runtime.Object\n\tif unstructured, ok := obj.(runtime.Unstructured); ok {\n\t\treturn unstructured.IsList()\n\t}\n"
  }
]