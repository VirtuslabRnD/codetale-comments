[
  {
    "id" : "7158fe06-9ae5-40d5-9b79-1dea170ff1b6",
    "prId" : 91305,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91305#pullrequestreview-438286597",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03efeb57-63b9-43e3-aa6d-4d99d9e15d1b",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Is this tested?",
        "createdAt" : "2020-06-24T22:11:54Z",
        "updatedAt" : "2020-07-07T17:54:12Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "6efc8c42-6cf5-4380-afd6-1cfc89ca7e80",
        "parentId" : "03efeb57-63b9-43e3-aa6d-4d99d9e15d1b",
        "authorId" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "body" : "I believe this was addressed in https://github.com/kubernetes/kubernetes/pull/91305#discussion_r445629883, but let me know if not.",
        "createdAt" : "2020-06-26T13:17:38Z",
        "updatedAt" : "2020-07-07T17:54:12Z",
        "lastEditedBy" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "tags" : [
        ]
      }
    ],
    "commit" : "eefed60e2300bdb9f5827e2da63d6949bb080d4c",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +320,324 @@// ANSI escape sequences that could put the terminal in a weird state (e.g.,\n// \"\\e[1m\" bolds text)\nfunc cleanANSIEscapeCodes(s string) string {\n\t// spaceControlCharacters includes tab, new line, vertical tab, new page, and\n\t// carriage return. These are in the unicode.Cc category, but that category also"
  },
  {
    "id" : "a1cc94bd-fede-40ec-9146-905cd7b36b9f",
    "prId" : 70606,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70606#pullrequestreview-181363906",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3982523d-f7d8-453e-9b09-d978a139becb",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This broke clients that depend on these methods.  We shouldn't have broken this without providing an alternate path.",
        "createdAt" : "2018-12-04T15:16:37Z",
        "updatedAt" : "2018-12-04T15:16:37Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "dd336e71-faff-4155-9201-6ec81e00f80a",
        "parentId" : "3982523d-f7d8-453e-9b09-d978a139becb",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I agree with Clayton here, `BearerToken` was never deprecated and we don't provide alternative, yet suddenly it's empty. We should deprecate this field and provide users with explanation what they should be using instead. ",
        "createdAt" : "2018-12-04T15:21:58Z",
        "updatedAt" : "2018-12-04T15:21:59Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "a545f24d-5e10-4639-a271-272dcaa3139b",
        "parentId" : "3982523d-f7d8-453e-9b09-d978a139becb",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the BearerToken field is not deprecated, setting a BearerToken in the config struct is still valid (if kubeconfig contains a bearer token, the resulting config also contains a bearer token)\r\n\r\nThe transformation of TokenFile -> bearer token (and what InClusterConfig returns) is what is in question.",
        "createdAt" : "2018-12-04T15:28:16Z",
        "updatedAt" : "2018-12-04T15:29:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "1ab78183-a226-4858-8999-fe40da88ef7e",
        "parentId" : "3982523d-f7d8-453e-9b09-d978a139becb",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "> The transformation of TokenFile -> bearer token (and what InClusterConfig returns) is what is in question.\r\n\r\nYes, sorry for my short-circuited answer :)",
        "createdAt" : "2018-12-04T16:03:52Z",
        "updatedAt" : "2018-12-04T16:03:52Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "4bc09cac-46f2-4540-b76c-182d31749ab1",
        "parentId" : "3982523d-f7d8-453e-9b09-d978a139becb",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I'm looking into plumbing both BearerToken and TokenFile out to the config and moving the refresh behavior into the round tripper constructed from the config",
        "createdAt" : "2018-12-04T16:06:48Z",
        "updatedAt" : "2018-12-04T16:06:49Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "2f5d4ad7-8364-4fbb-85c1-e58bffb5ba6e",
        "parentId" : "3982523d-f7d8-453e-9b09-d978a139becb",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "opened https://github.com/kubernetes/kubernetes/pull/71713",
        "createdAt" : "2018-12-04T16:48:23Z",
        "updatedAt" : "2018-12-04T16:48:24Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "718adb7473d2249d706b2031e0b8e0ffbd835be9",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +230,234 @@\t\tmergedConfig.BearerToken = configAuthInfo.Token\n\t} else if len(configAuthInfo.TokenFile) > 0 {\n\t\tts := restclient.NewCachedFileTokenSource(configAuthInfo.TokenFile)\n\t\tif _, err := ts.Token(); err != nil {\n\t\t\treturn nil, err"
  },
  {
    "id" : "f63ff17d-bfcf-4f8a-95c9-5e84e0eb6d84",
    "prId" : 47353,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47353#pullrequestreview-54547808",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7574247-b74b-482f-bd45-61a93959c55e",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Does this get set as the default for clients that get built from a kubeconfig (for example, the controller manager and kubelet)? If so, this needs more vetting than if it just affected kubectl ",
        "createdAt" : "2017-08-07T00:18:31Z",
        "updatedAt" : "2017-08-07T00:18:31Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6348cc1ff72be719e0830da2c64ef1689499956",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +45,49 @@\tDefaultClientConfig = DirectClientConfig{*clientcmdapi.NewConfig(), \"\", &ConfigOverrides{\n\t\tClusterDefaults: ClusterDefaults,\n\t\tCacheDir:        cacheDirDefault,\n\t}, nil, NewDefaultClientConfigLoadingRules(), promptedCredentials{}}\n)"
  },
  {
    "id" : "0731ae36-dc31-4558-89e7-df4487f4be20",
    "prId" : 40508,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40508#pullrequestreview-18969640",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06d84af7-66be-4609-9b4a-9e375ffb8277",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Important point: mergo.Merge merges map by keys. So this should work.",
        "createdAt" : "2017-01-26T07:41:12Z",
        "updatedAt" : "2017-01-26T07:41:12Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "2fed4e68-0b6f-4313-b362-72c5a96954b7",
        "parentId" : "06d84af7-66be-4609-9b4a-9e375ffb8277",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Just for my understanding: it looks like mergo.Merge does not check that dst.Extensions is actually non-nil. Was that the reason for the crash?",
        "createdAt" : "2017-01-26T07:42:15Z",
        "updatedAt" : "2017-01-28T07:35:24Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "c75db254-4740-4b27-977d-9571342c3106",
        "parentId" : "06d84af7-66be-4609-9b4a-9e375ffb8277",
        "authorId" : "869e7ab7-8798-46cf-97e5-5ef8e144a55f",
        "body" : "Yes. I am in the process of writing an Extension in the Context object and encountered a `nil pointer dereference or invalid memory address`. One other thing that was an issue is that there were no converter functions from and to runtime.Unknown and runtime.RawExtension. I will submit a PR for the same today as well.",
        "createdAt" : "2017-01-28T07:51:53Z",
        "updatedAt" : "2017-01-28T07:51:54Z",
        "lastEditedBy" : "869e7ab7-8798-46cf-97e5-5ef8e144a55f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4289c51b5c4f527f8f6533e499728fb1e3b8057",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +420,424 @@\n\tmergedClusterInfo := clientcmdapi.NewCluster()\n\tmergo.Merge(mergedClusterInfo, config.overrides.ClusterDefaults)\n\tif configClusterInfo, exists := clusterInfos[clusterInfoName]; exists {\n\t\tmergo.Merge(mergedClusterInfo, configClusterInfo)"
  }
]