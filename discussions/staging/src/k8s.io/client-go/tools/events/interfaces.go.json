[
  {
    "id" : "064e6bd3-fa30-43a1-8df7-054437c3a789",
    "prId" : 91798,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91798#pullrequestreview-431879932",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26727a3d-1946-4af9-9fa1-4b4daa6aed2c",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Let's also add and implement Shutdown() method.",
        "createdAt" : "2020-06-16T06:23:51Z",
        "updatedAt" : "2020-06-17T19:46:38Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "91128f03-60c6-4a89-9907-7bd60691441e",
        "parentId" : "26727a3d-1946-4af9-9fa1-4b4daa6aed2c",
        "authorId" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "body" : "Done.",
        "createdAt" : "2020-06-16T20:48:44Z",
        "updatedAt" : "2020-06-17T19:46:38Z",
        "lastEditedBy" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e0e12f25c9ccd33f5578fddef79d93eb7b62ea0c",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +88,92 @@\t// Shutdown shuts down the broadcaster.\n\tShutdown()\n}"
  },
  {
    "id" : "62190873-89a6-43e4-8b27-c4397415319a",
    "prId" : 65782,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65782#pullrequestreview-237430858",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fed42020-3159-4315-80b5-7c56b2f071a2",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "How do you pass a sink here?",
        "createdAt" : "2019-05-14T18:46:43Z",
        "updatedAt" : "2019-05-17T08:51:15Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "464a994a10b71c45583f3426fd970291f8a5b756",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@type EventBroadcaster interface {\n\t// StartRecordingToSink starts sending events received from the specified eventBroadcaster.\n\tStartRecordingToSink(stopCh <-chan struct{})\n\n\t// NewRecorder returns an EventRecorder that can be used to send events to this EventBroadcaster"
  }
]