[
  {
    "id" : "a89f7749-b9e4-4ac2-aaa8-e1531c9e7b3d",
    "prId" : 99654,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99654#pullrequestreview-603050453",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84f2d625-3107-4342-adaf-89c44ff9b7bc",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I wonder if the rationale here was that unless stdout was visible to the user, the exec plugin couldn't reasonably prompt for input?",
        "createdAt" : "2021-03-03T15:44:40Z",
        "updatedAt" : "2021-03-03T15:44:40Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "4155a35d-674d-4e82-a5c8-2b14b1061be4",
        "parentId" : "84f2d625-3107-4342-adaf-89c44ff9b7bc",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "talked with @enj, who pointed out that even if that were the case, this check wouldn't make sense, since the plugins prompted on stderr",
        "createdAt" : "2021-03-03T15:54:02Z",
        "updatedAt" : "2021-03-03T15:54:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "aea995c45ff057406b586144e28bd9575162b8df",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +199,203 @@\t\tstdin:       os.Stdin,\n\t\tstderr:      os.Stderr,\n\t\tinteractive: term.IsTerminal(int(os.Stdin.Fd())),\n\t\tnow:         time.Now,\n\t\tenviron:     os.Environ,"
  },
  {
    "id" : "a8a60653-fcc2-488b-9ea5-e068e1c5aa28",
    "prId" : 99310,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99310#pullrequestreview-635914997",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6bd8090-adc1-4209-9bb3-030488b683ad",
        "parentId" : null,
        "authorId" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "body" : "Open question: how do we ensure that a higher level entity is not using standard input?\r\n\r\nI think this is hard to do. Some discussion here:\r\n- https://github.com/kubernetes/kubernetes/issues/98451#issuecomment-783501007\r\n- https://kubernetes.slack.com/archives/C0EN96KUY/p1613768319115600?thread_ts=1613767745.112500&cid=C0EN96KUY",
        "createdAt" : "2021-02-22T16:37:29Z",
        "updatedAt" : "2021-05-10T21:40:51Z",
        "lastEditedBy" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "tags" : [
        ]
      },
      {
        "id" : "5777781c-e1c8-4786-a520-1b2ea310fb33",
        "parentId" : "c6bd8090-adc1-4209-9bb3-030488b683ad",
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "I am wondering if could probe `os.Stdin` somehow to tell if `kubectl` is already using it for something else (in `UpdateTransportConfig` or `getUserIdentificationPartialConfig` or ...).\r\n\r\nTODO: look into this more next week.",
        "createdAt" : "2021-02-26T22:06:26Z",
        "updatedAt" : "2021-05-10T21:40:51Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "f49b878e-97f3-4dc7-a19c-d3fc5d1adcdb",
        "parentId" : "c6bd8090-adc1-4209-9bb3-030488b683ad",
        "authorId" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "body" : "This is not necessarily a good example of the pattern to follow, but it looks like we have allowed other auth plugins to consume stdin freely in the past. Have there been any complaints of `kubectl` and these auth plugins fighting for stdin?\r\n- `gcp`: https://github.com/kubernetes/kubernetes/blob/a651804427dd9a15bb91e1c4fb7a79994e4817a2/staging/src/k8s.io/client-go/plugin/pkg/client/auth/gcp/gcp.go#L298\r\n- `openstack`: https://github.com/kubernetes/cloud-provider-openstack/blob/ef0206889cb7c39f04d215e8cbb6c69616e59ea4/cmd/client-keystone-auth/main.go#L69",
        "createdAt" : "2021-03-31T15:08:47Z",
        "updatedAt" : "2021-05-10T21:40:51Z",
        "lastEditedBy" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "tags" : [
        ]
      },
      {
        "id" : "b236ce6b-3523-4886-a7af-517d9368d8ff",
        "parentId" : "c6bd8090-adc1-4209-9bb3-030488b683ad",
        "authorId" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "body" : "I also have been looking into similar credential plugins to see if there is any prior art here. TLDR: I can't find anyone else that is hooking up a TTY to stdin on the credential plugin and running into the same issue as us.\r\n- Docker credential plugins (takes command input on stdin): https://docs.docker.com/engine/reference/commandline/login/#credential-helpers\r\n- Git credential plugins (takes command input on stdin): https://git-scm.com/book/en/v2/Git-Tools-Credential-Storage\r\n- (Other? I went through all of the CLI tools that I used to connect to infrastructure, but didn't find any good examples)",
        "createdAt" : "2021-03-31T15:58:19Z",
        "updatedAt" : "2021-05-10T21:40:51Z",
        "lastEditedBy" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "tags" : [
        ]
      },
      {
        "id" : "fc1ca31b-fe88-4333-8d4d-d0d9c65ae1b4",
        "parentId" : "c6bd8090-adc1-4209-9bb3-030488b683ad",
        "authorId" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "body" : "Redirecting this conversation to https://github.com/kubernetes/kubernetes/pull/99310#discussion_r613462261.",
        "createdAt" : "2021-04-14T18:01:13Z",
        "updatedAt" : "2021-05-10T21:40:51Z",
        "lastEditedBy" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "tags" : [
        ]
      }
    ],
    "commit" : "e427d2f22a703e977bec45e861980b46d7381dd9",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +214,218 @@}\n\nfunc isInteractive(isTerminalFunc func(int) bool, config *api.ExecConfig) (bool, error) {\n\tvar shouldBeInteractive bool\n\tswitch config.InteractiveMode {"
  },
  {
    "id" : "9bc5d819-8796-4b6d-b04d-6da7cca44976",
    "prId" : 91745,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91745#pullrequestreview-430253560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b2c765d-736f-477a-948b-dfeac8c5a48e",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "Please add a comment explaining in detail (i.e. https://github.com/kubernetes/kubernetes/issues/87369#issuecomment-585579312) why we basically need the same check twice.",
        "createdAt" : "2020-06-11T05:20:11Z",
        "updatedAt" : "2020-07-06T19:55:48Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "e66644c0-6290-45c3-b7e7-b92f8d898f5c",
        "parentId" : "9b2c765d-736f-477a-948b-dfeac8c5a48e",
        "authorId" : "83210bf9-1694-4aac-a381-3f2ca2c80337",
        "body" : "Done.",
        "createdAt" : "2020-06-14T21:27:46Z",
        "updatedAt" : "2020-07-06T19:55:48Z",
        "lastEditedBy" : "83210bf9-1694-4aac-a381-3f2ca2c80337",
        "tags" : [
        ]
      },
      {
        "id" : "f7e9ab53-f69d-477f-8510-5f07dff49963",
        "parentId" : "9b2c765d-736f-477a-948b-dfeac8c5a48e",
        "authorId" : "83210bf9-1694-4aac-a381-3f2ca2c80337",
        "body" : "Done.",
        "createdAt" : "2020-06-14T21:44:29Z",
        "updatedAt" : "2020-07-06T19:55:48Z",
        "lastEditedBy" : "83210bf9-1694-4aac-a381-3f2ca2c80337",
        "tags" : [
        ]
      }
    ],
    "commit" : "c595f983fa6b53383557ddbdf698873a38f2275d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +187,191 @@\t\treturn nil\n\t}\n\n\tc.Wrap(func(rt http.RoundTripper) http.RoundTripper {\n\t\treturn &roundTripper{a, rt}"
  },
  {
    "id" : "f94f093f-a3b6-4f4c-b218-478249746d90",
    "prId" : 91745,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91745#pullrequestreview-430253580",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "121ef77d-5d4f-42e9-a7ff-f4c3aeb3547c",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "Thinking on this a bit more, maybe this should be the first line in this function.  As it stands, it attempts to configure token auth via the `c.Wrap` call but then skips the cert auth.\r\n\r\nIt may make more sense for `UpdateTransportConfig` to do nothing when `c.HasTokenAuth()` returns `true` instead of doing \"half\" of what it is supposed to do.  We still want the `req.Header.Get(\"Authorization\") != \"\"` logic below because round trippers can be arbitrarily stacked via `c.Wrap`.",
        "createdAt" : "2020-06-11T05:37:50Z",
        "updatedAt" : "2020-07-06T19:55:48Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "c2cae9b8-b420-44da-91cc-295442200640",
        "parentId" : "121ef77d-5d4f-42e9-a7ff-f4c3aeb3547c",
        "authorId" : "83210bf9-1694-4aac-a381-3f2ca2c80337",
        "body" : "Agreed - moved to top of function.",
        "createdAt" : "2020-06-14T21:28:39Z",
        "updatedAt" : "2020-07-06T19:55:48Z",
        "lastEditedBy" : "83210bf9-1694-4aac-a381-3f2ca2c80337",
        "tags" : [
        ]
      },
      {
        "id" : "de0bd7c2-1717-4394-93e9-b96a4ee8314d",
        "parentId" : "121ef77d-5d4f-42e9-a7ff-f4c3aeb3547c",
        "authorId" : "83210bf9-1694-4aac-a381-3f2ca2c80337",
        "body" : "Agreed - done.",
        "createdAt" : "2020-06-14T21:44:47Z",
        "updatedAt" : "2020-07-06T19:55:48Z",
        "lastEditedBy" : "83210bf9-1694-4aac-a381-3f2ca2c80337",
        "tags" : [
        ]
      }
    ],
    "commit" : "c595f983fa6b53383557ddbdf698873a38f2275d",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +186,190 @@\tif c.HasTokenAuth() {\n\t\treturn nil\n\t}\n\n\tc.Wrap(func(rt http.RoundTripper) http.RoundTripper {"
  },
  {
    "id" : "a658dd73-bc75-4d8f-bc54-86f1f90de730",
    "prId" : 91745,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91745#pullrequestreview-444162803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88e3b528-d233-43aa-a107-ad4e9a75d311",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if we already have a client cert/key, should that take precedence as well and prevent calling the exec plugin?",
        "createdAt" : "2020-07-06T16:16:30Z",
        "updatedAt" : "2020-07-06T19:55:48Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a1e6c280-0f96-4bae-95e9-c51a59b4289e",
        "parentId" : "88e3b528-d233-43aa-a107-ad4e9a75d311",
        "authorId" : "83210bf9-1694-4aac-a381-3f2ca2c80337",
        "body" : "I think that makes sense, yes. This PR addressed a real problem we experienced with our exec plugin using tokens, and the client certificate scenario wasn't something I considered - I don't even know what the current behavior there is to be honest, but I could certainly look into supporting that case as well if you want. With that said, I think the single argument of `--token` makes it a _lot_ more likely to be used ad-hoc than client certificates, which requires something like three(?) file locations to be provided. ",
        "createdAt" : "2020-07-06T18:48:22Z",
        "updatedAt" : "2020-07-06T19:55:48Z",
        "lastEditedBy" : "83210bf9-1694-4aac-a381-3f2ca2c80337",
        "tags" : [
        ]
      },
      {
        "id" : "4eb38305-aee0-4fee-842b-fa8b5fbcad5b",
        "parentId" : "88e3b528-d233-43aa-a107-ad4e9a75d311",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I think the current state of the PR is coherent w.r.t. token auth. A follow up issue to discuss/resolve treatment of client cert auth is fine with me",
        "createdAt" : "2020-07-07T18:52:29Z",
        "updatedAt" : "2020-07-07T18:53:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c595f983fa6b53383557ddbdf698873a38f2275d",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +184,188 @@\t// like \"kubectl get --token (token) pods\" we should assume the intention is to\n\t// use the provided token for authentication.\n\tif c.HasTokenAuth() {\n\t\treturn nil\n\t}"
  },
  {
    "id" : "b499480a-3f15-4698-a6e4-22e500cd6097",
    "prId" : 91305,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91305#pullrequestreview-415680211",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6351f649-06ac-4034-bb24-10953017695f",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "Preemptively clean the string?\r\n\r\n```suggestion\r\n\t\tinstallHint: cleanANSIEscapeCodes(config.InstallHint),\r\n```",
        "createdAt" : "2020-05-20T18:46:39Z",
        "updatedAt" : "2020-07-07T17:54:12Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "77fbdc61-dd8d-42af-83eb-a441874e5a93",
        "parentId" : "6351f649-06ac-4034-bb24-10953017695f",
        "authorId" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "body" : "Love it. Done.",
        "createdAt" : "2020-05-20T20:14:00Z",
        "updatedAt" : "2020-07-07T17:54:12Z",
        "lastEditedBy" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "tags" : [
        ]
      }
    ],
    "commit" : "eefed60e2300bdb9f5827e2da63d6949bb080d4c",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +176,180 @@\t\tgroup: gv,\n\n\t\tinstallHint: config.InstallHint,\n\t\tsometimes: &sometimes{\n\t\t\tthreshold: 10,"
  },
  {
    "id" : "d0153505-52d5-4b6c-9e6a-539d559d9a45",
    "prId" : 91305,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91305#pullrequestreview-431837586",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cab6ef4-b18c-43cc-a7f7-843cf64cc2d0",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "These need to be synchronized?",
        "createdAt" : "2020-06-16T18:16:49Z",
        "updatedAt" : "2020-07-07T17:54:12Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "0942a016-6567-495b-a4d8-b0321564e7d2",
        "parentId" : "8cab6ef4-b18c-43cc-a7f7-843cf64cc2d0",
        "authorId" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "body" : "I think the reason why I didn't put a lock in `sometimes` is because I assumed it would be OK if it transitively used the synchronization mechanisms provided as a part of the `Authenticator`. WDYT?",
        "createdAt" : "2020-06-16T19:02:02Z",
        "updatedAt" : "2020-07-07T17:54:12Z",
        "lastEditedBy" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "tags" : [
        ]
      },
      {
        "id" : "5ae1e303-8e99-425e-a45c-838b99801cd2",
        "parentId" : "8cab6ef4-b18c-43cc-a7f7-843cf64cc2d0",
        "authorId" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "body" : "I went ahead and added synchronization in dd8cc37d5251c. I'm still interested in your thoughts in order to learn the best pattern here, but I don't feel strongly about my above design decision.",
        "createdAt" : "2020-06-16T19:45:20Z",
        "updatedAt" : "2020-07-07T17:54:12Z",
        "lastEditedBy" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "tags" : [
        ]
      }
    ],
    "commit" : "eefed60e2300bdb9f5827e2da63d6949bb080d4c",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +127,131 @@\tmu    sync.Mutex\n\n\tcount  int       // times we have called f() in this window\n\twindow time.Time // beginning of current window of length interval\n}"
  },
  {
    "id" : "1949f66b-c188-4bb0-9821-73b291d56a15",
    "prId" : 84382,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84382#pullrequestreview-308196497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8d4d950-7aca-49af-8c9a-abfdac0a40e7",
        "parentId" : null,
        "authorId" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "body" : "Why only report this when rotation happens?\r\nCan we report cert age every time in `getCreds` instead?",
        "createdAt" : "2019-10-28T18:45:51Z",
        "updatedAt" : "2019-11-14T23:18:59Z",
        "lastEditedBy" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "tags" : [
        ]
      },
      {
        "id" : "cba07246-9abf-4726-960e-76f1909e0a56",
        "parentId" : "b8d4d950-7aca-49af-8c9a-abfdac0a40e7",
        "authorId" : "b8626c03-9a5f-42c6-abcb-6855fc266a5c",
        "body" : "This metric is observing the age of the last certificate right before it is thrown out. It seems appropriate that it is a simple histogram that _ideally_ reports a data point every week or so.",
        "createdAt" : "2019-10-28T22:17:13Z",
        "updatedAt" : "2019-11-14T23:18:59Z",
        "lastEditedBy" : "b8626c03-9a5f-42c6-abcb-6855fc266a5c",
        "tags" : [
        ]
      },
      {
        "id" : "102f13cb-5f62-4438-a2eb-3c2139079e05",
        "parentId" : "b8d4d950-7aca-49af-8c9a-abfdac0a40e7",
        "authorId" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "body" : "Ah, I thought this was reporting the age of _new_ cert, not the _old_ one.\r\nMakes sense now.",
        "createdAt" : "2019-10-28T23:01:20Z",
        "updatedAt" : "2019-11-14T23:18:59Z",
        "lastEditedBy" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3b1cd14c31375e52e267ce7e4246f80ee26ddba",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +382,386 @@\t\t// Can be nil if the exec auth plugin only returned token auth.\n\t\tif oldCreds.cert != nil && oldCreds.cert.Leaf != nil {\n\t\t\tmetrics.ClientCertRotationAge.Observe(time.Now().Sub(oldCreds.cert.Leaf.NotBefore))\n\t\t}\n\t\tfor _, onRotate := range a.onRotateList {"
  },
  {
    "id" : "82c91314-13ac-46b8-b500-e6e4c6d73fd1",
    "prId" : 84382,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84382#pullrequestreview-315904653",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9665f075-771c-4905-9ded-df666253492e",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "where is `Leaf` being populated? X509KeyPair is documented to return a cert with Leaf unset. are there tests that demonstrate this metric is being set?",
        "createdAt" : "2019-11-12T02:37:36Z",
        "updatedAt" : "2019-11-14T23:18:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "87d0d073-94f7-4b0a-b9b8-8f9b78488bd3",
        "parentId" : "9665f075-771c-4905-9ded-df666253492e",
        "authorId" : "b8626c03-9a5f-42c6-abcb-6855fc266a5c",
        "body" : "Good point. This is very well likely nil. Fixed.",
        "createdAt" : "2019-11-12T23:03:35Z",
        "updatedAt" : "2019-11-14T23:18:59Z",
        "lastEditedBy" : "b8626c03-9a5f-42c6-abcb-6855fc266a5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3b1cd14c31375e52e267ce7e4246f80ee26ddba",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +381,385 @@\tif oldCreds != nil && !reflect.DeepEqual(oldCreds.cert, a.cachedCreds.cert) {\n\t\t// Can be nil if the exec auth plugin only returned token auth.\n\t\tif oldCreds.cert != nil && oldCreds.cert.Leaf != nil {\n\t\t\tmetrics.ClientCertRotationAge.Observe(time.Now().Sub(oldCreds.cert.Leaf.NotBefore))\n\t\t}"
  },
  {
    "id" : "9efdcb38-967d-4612-9535-10553431296c",
    "prId" : 61803,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61803#pullrequestreview-116447795",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46630699-0656-4713-9462-0df5704a164a",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this should switch to getting the whole creds set, and passing the whole creds set to `refresh()`",
        "createdAt" : "2018-04-30T19:14:38Z",
        "updatedAt" : "2018-05-30T21:04:14Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "b55f2b24-2bc1-4780-8f1a-35fd65c09abf",
        "parentId" : "46630699-0656-4713-9462-0df5704a164a",
        "authorId" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "body" : "Done",
        "createdAt" : "2018-04-30T21:43:20Z",
        "updatedAt" : "2018-05-30T21:04:14Z",
        "lastEditedBy" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd89f9473faa60c15b8e9d223e5c4f9dab53627a",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +218,222 @@\n\tcreds, err := r.a.getCreds()\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"getting credentials: %v\", err)\n\t}"
  },
  {
    "id" : "01f5fafc-9d2c-4792-8d5f-ad8f4a1b8e30",
    "prId" : 61803,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61803#pullrequestreview-124543790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "936461d3-21b3-45b2-8ee0-9a5889b16b8c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if no expiration was returned, and we have a certificate, do we want to compute an expiration time from the certificate Not After timestamp?",
        "createdAt" : "2018-05-30T16:45:58Z",
        "updatedAt" : "2018-05-30T21:04:14Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "41a04cf6-7412-4803-89b6-6f7c8fe54be8",
        "parentId" : "936461d3-21b3-45b2-8ee0-9a5889b16b8c",
        "authorId" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "body" : "I think that logic should live in the plugin itself.\r\nThis simplifies the contract between caller and plugin and makes it easier to reason about.",
        "createdAt" : "2018-05-30T18:35:37Z",
        "updatedAt" : "2018-05-30T21:04:14Z",
        "lastEditedBy" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "tags" : [
        ]
      },
      {
        "id" : "8111486f-84fb-43c1-b2c7-b39552e0aec3",
        "parentId" : "936461d3-21b3-45b2-8ee0-9a5889b16b8c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "that's probably fine to start. if we find it is burdensome for plugins to pull this info out of the cert, we can revisit",
        "createdAt" : "2018-05-30T18:50:53Z",
        "updatedAt" : "2018-05-30T21:04:14Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd89f9473faa60c15b8e9d223e5c4f9dab53627a",
    "line" : 224,
    "diffHunk" : "@@ -1,1 +338,342 @@\t\ta.exp = cred.Status.ExpirationTimestamp.Time\n\t} else {\n\t\ta.exp = time.Time{}\n\t}\n"
  },
  {
    "id" : "a32c5113-c52e-401d-b832-fbb6ad239e96",
    "prId" : 59495,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59495#pullrequestreview-95488122",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5fef556-0864-41c6-88c5-b1f7ed00c348",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "return c.m[s]",
        "createdAt" : "2018-02-09T04:43:48Z",
        "updatedAt" : "2018-02-28T05:21:29Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "12923f1a-33ae-442f-88a8-f6db1df3dce7",
        "parentId" : "d5fef556-0864-41c6-88c5-b1f7ed00c348",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "Doesn't seem like that works https://play.golang.org/p/2dzFfrrGBkR",
        "createdAt" : "2018-02-09T16:51:44Z",
        "updatedAt" : "2018-02-28T05:21:29Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "01801ae13a86c10cd343c329f5224ab47272f826",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +75,79 @@\tc.mu.Lock()\n\tdefer c.mu.Unlock()\n\ta, ok := c.m[s]\n\treturn a, ok\n}"
  },
  {
    "id" : "e4da0327-cb8f-452f-8380-4ee99ed3aa82",
    "prId" : 59495,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59495#pullrequestreview-99068888",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8901f664-7968-4562-9daf-44e344c8362c",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "This isn't a huge issue but there's a chance that two racing goroutines could call this at the same time with the same config and get two different Authenticators. This happens if both get from the cache before one puts into the cache. One way to avoid this is to move initialization of the authenticator into a get call and protect the body of the function with a singleflight: https://godoc.org/golang.org/x/sync/singleflight \r\n\r\nThis is the design of the golang groupcache and guava loading cache\r\n\r\nhttps://godoc.org/github.com/golang/groupcache#Getter\r\nhttps://github.com/google/guava/wiki/CachesExplained#from-a-cacheloader",
        "createdAt" : "2018-02-23T01:32:01Z",
        "updatedAt" : "2018-02-28T05:21:29Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "f7c90f8d-48c1-4506-b178-637bfdbf0a8f",
        "parentId" : "8901f664-7968-4562-9daf-44e344c8362c",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "`put` now returns the same Authenticator if it's called twice with the same key. I can switch it over to a singleflight equivalent later if that's okay.",
        "createdAt" : "2018-02-23T22:13:10Z",
        "updatedAt" : "2018-02-28T05:21:29Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "01801ae13a86c10cd343c329f5224ab47272f826",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +99,103 @@func newAuthenticator(c *cache, config *api.ExecConfig) (*Authenticator, error) {\n\tkey := cacheKey(config)\n\tif a, ok := c.get(key); ok {\n\t\treturn a, nil\n\t}"
  },
  {
    "id" : "91e0c5b4-709e-4eb7-bb6c-ca0aa9ead964",
    "prId" : 59495,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59495#pullrequestreview-99067434",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f5f8134-762f-4371-8258-e371028a8d2f",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "I think this does what you want:\r\n```golang\r\nif err := runtime.DecodeInto(codecs.UniversalDecoder(a.group), stdout.Bytes(), cred); err != nil {\r\n```\r\nIt does the gvk check for you as well.",
        "createdAt" : "2018-02-23T01:44:30Z",
        "updatedAt" : "2018-02-28T05:21:29Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "becc1ada-c565-4354-a4a8-1e17573697b1",
        "parentId" : "1f5f8134-762f-4371-8258-e371028a8d2f",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "This doesn't seem to work exactly as expected. It lets you not return an APIVersion. Making this change broke a test:\r\n\r\n```\r\n    --- FAIL: TestGetToken/no-group-version (0.00s)\r\n        exec_test.go:285: expected error getting token\r\n```",
        "createdAt" : "2018-02-23T22:06:27Z",
        "updatedAt" : "2018-02-28T05:21:29Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "01801ae13a86c10cd343c329f5224ab47272f826",
    "line" : 256,
    "diffHunk" : "@@ -1,1 +254,258 @@\t}\n\n\t_, gvk, err := codecs.UniversalDecoder(a.group).Decode(stdout.Bytes(), nil, cred)\n\tif err != nil {\n\t\treturn \"\", fmt.Errorf(\"decode stdout: %v\", err)"
  },
  {
    "id" : "e03c1dc2-79ee-480f-a865-d446fa3d8a5a",
    "prId" : 59495,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59495#pullrequestreview-99060073",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "224da649-1f8f-439b-a89b-9e1442ed3846",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "How are tty's forwarded? Should the subprocess just figure this out for itself?",
        "createdAt" : "2018-02-23T01:50:19Z",
        "updatedAt" : "2018-02-28T05:21:29Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "03127e2a-a1fc-4420-b9e9-a43f24c57d79",
        "parentId" : "224da649-1f8f-439b-a89b-9e1442ed3846",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "They're forwarded, but it seemed convenient to provide a flag for the plugin.\r\n\r\nSome background https://github.com/kubernetes/community/pull/1503#discussion_r164138852",
        "createdAt" : "2018-02-23T21:36:29Z",
        "updatedAt" : "2018-02-28T05:21:29Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "01801ae13a86c10cd343c329f5224ab47272f826",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +115,119 @@\t\tstdin:       os.Stdin,\n\t\tstderr:      os.Stderr,\n\t\tinteractive: terminal.IsTerminal(int(os.Stdout.Fd())),\n\t\tnow:         time.Now,\n\t\tenviron:     os.Environ,"
  },
  {
    "id" : "86b64ea1-81a2-477e-a493-57eb973a94f6",
    "prId" : 59495,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59495#pullrequestreview-99946775",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "175b7e05-19d7-473e-872f-9bedfc76820c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "it seems like there are three possibilities for this path:\r\n* relative (e.g. `./foo`)\r\n* absolute (e.g. `/path/to/foo`)\r\n* $PATH-based (e.g. `curl`)\r\n\r\nWas there discussion about how to resolve the referenced command here?\r\n\r\nThere is already code for resolving files referenced from kubeconfig files so that relative paths are resolved relative to the kubeconfig file (see ResolvePaths and GetAuthInfoFileReferences). \r\n\r\nMy instinct would be to resolve explicitly relative paths `./foo` in GetAuthInfoFileReferences, leave absolute paths alone, and resolve bare commands (e.g. `curl`) using $PATH. Thoughts?",
        "createdAt" : "2018-02-28T04:08:54Z",
        "updatedAt" : "2018-02-28T05:21:29Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "b37e80fc-9b13-4508-854a-dc700abb72ae",
        "parentId" : "175b7e05-19d7-473e-872f-9bedfc76820c",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "I like keeping the relative path logic the same as other files in kubeconfig files. Let me update this.",
        "createdAt" : "2018-02-28T04:40:19Z",
        "updatedAt" : "2018-02-28T05:21:29Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "a2c8e027-8af4-4a87-9867-423a63532136",
        "parentId" : "175b7e05-19d7-473e-872f-9bedfc76820c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I guess if you want `$PATH` behavior you can invoke a local script",
        "createdAt" : "2018-02-28T04:54:36Z",
        "updatedAt" : "2018-02-28T05:21:29Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "621b7ab8-06d4-4ffc-aa57-a5653b4aa93c",
        "parentId" : "175b7e05-19d7-473e-872f-9bedfc76820c",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "> I guess if you want $PATH behavior you can invoke a local script\r\n\r\nexec.Command already does that: https://golang.org/pkg/os/exec/#Command",
        "createdAt" : "2018-02-28T05:23:48Z",
        "updatedAt" : "2018-02-28T05:23:48Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "01801ae13a86c10cd343c329f5224ab47272f826",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +109,113 @@\n\ta := &Authenticator{\n\t\tcmd:   config.Command,\n\t\targs:  config.Args,\n\t\tgroup: gv,"
  }
]