[
  {
    "id" : "95aa55b5-d59b-4109-b61a-a7dee72d7d43",
    "prId" : 58752,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58752#pullrequestreview-91199193",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca448fcf-70e0-4e54-8fbd-8546541613a1",
        "parentId" : null,
        "authorId" : "f9ffbaf4-ac1c-459d-9f62-779b64686883",
        "body" : "Actually, this step in the setup in my case could only be done on Windows. However, that was because of some iOS specific settings in the ADFS (with which the AAD was connected) that were somehow also breaking Mac browsers. I'm not sure if I should mention that here, as it might just be a very specific edge case.",
        "createdAt" : "2018-01-24T14:46:04Z",
        "updatedAt" : "2018-04-11T10:03:52Z",
        "lastEditedBy" : "f9ffbaf4-ac1c-459d-9f62-779b64686883",
        "tags" : [
        ]
      }
    ],
    "commit" : "2709a7ee0d7d25463c9da00890a7b7db3e4419d1",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +44,48 @@   kubectl get pods\n\n   To sign in, use a web browser to open the page https://aka.ms/devicelogin and enter the code DEC7D48GA to authenticate.\n   ```\n"
  },
  {
    "id" : "2b9936f8-d054-4825-99f1-cb01a8271cf8",
    "prId" : 58752,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58752#pullrequestreview-102706375",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "532e6dc8-123c-41e8-b5ac-0cedf7a9ac2b",
        "parentId" : null,
        "authorId" : "f9ffbaf4-ac1c-459d-9f62-779b64686883",
        "body" : "`sub` is a very cryptic ID, which is not nice to map in a binding.",
        "createdAt" : "2018-01-24T14:47:13Z",
        "updatedAt" : "2018-04-11T10:03:52Z",
        "lastEditedBy" : "f9ffbaf4-ac1c-459d-9f62-779b64686883",
        "tags" : [
        ]
      },
      {
        "id" : "66563684-d784-407e-8df3-602f8268f7cf",
        "parentId" : "532e6dc8-123c-41e8-b5ac-0cedf7a9ac2b",
        "authorId" : "1861ea1e-bc82-42eb-8008-e18bf36757eb",
        "body" : "Agreed!  We use upn instead ourselves.",
        "createdAt" : "2018-03-09T16:31:27Z",
        "updatedAt" : "2018-04-11T10:03:52Z",
        "lastEditedBy" : "1861ea1e-bc82-42eb-8008-e18bf36757eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2709a7ee0d7d25463c9da00890a7b7db3e4419d1",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +21,25 @@   * Replace the `APISERVER_APPLICATION_ID` with the application ID of `apiserver` application\n   * Replace `TENANT_ID` with your tenant ID.\n Â  * For a list of alternative username claims that are supported by the OIDC issuer check the JSON response at `https://sts.windows.net/TENANT_ID/.well-known/openid-configuration`.\n\n5. Configure `kubectl` to use the `azure` authentication provider "
  },
  {
    "id" : "84ccf65e-1a97-4aab-a6ce-cae1eab58826",
    "prId" : 43987,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43987#pullrequestreview-35021986",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e042854f-f544-402f-8262-104180555f9a",
        "parentId" : null,
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "This code no longer prompts, right?",
        "createdAt" : "2017-04-26T15:49:08Z",
        "updatedAt" : "2017-05-16T14:44:50Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "583b1546-fb5a-491e-a3a3-2b1b9429e5aa",
        "parentId" : "e042854f-f544-402f-8262-104180555f9a",
        "authorId" : "2892af68-16a3-42b4-b41e-1a351380f2cc",
        "body" : "Please see the comment above.",
        "createdAt" : "2017-04-27T05:46:52Z",
        "updatedAt" : "2017-05-16T14:44:50Z",
        "lastEditedBy" : "2892af68-16a3-42b4-b41e-1a351380f2cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "682d5ec01f37c65117b2496865cc9bf0cd9e0902",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +1,5 @@# Azure Active Directory plugin for client authentication\n\nThis plugin provides an integration with Azure Active Directory device flow. If no tokens are present in the kubectl configuration, it will prompt a device code which can be used to login in a browser. After login it will automatically fetch the tokens and stored them in the kubectl configuration. In addition it will refresh and update the tokens in configuration when expired.\n\n"
  }
]