[
  {
    "id" : "0471a3a5-dd47-4475-af7b-e5fc0ed5122d",
    "prId" : 44320,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44320#pullrequestreview-32079369",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7014805-e839-4fba-973b-12e074dab70f",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "You need to wait for your caches to sync before running any worker. See for example [here](https://github.com/kubernetes/kubernetes/blob/e58d3dbf062e9e75c3517a26310fbfc98cf9167c/pkg/controller/deployment/deployment_controller.go#L154)",
        "createdAt" : "2017-04-11T09:40:16Z",
        "updatedAt" : "2017-04-21T10:41:57Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "081b0cde-b2e2-4644-8c4e-c803d3a4d668",
        "parentId" : "f7014805-e839-4fba-973b-12e074dab70f",
        "authorId" : "f6154816-291d-4b86-8b30-b5e2be7afb91",
        "body" : "Since I only have one cache, I don't think so. The key is dirtied for every entry anyway, right?\r\n\r\nBut maybe it would make the example more complete. What do you think?\r\n\r\n",
        "createdAt" : "2017-04-11T09:45:21Z",
        "updatedAt" : "2017-04-21T10:41:57Z",
        "lastEditedBy" : "f6154816-291d-4b86-8b30-b5e2be7afb91",
        "tags" : [
        ]
      },
      {
        "id" : "14619535-b57a-4ba8-9edb-adf0b649f2ab",
        "parentId" : "f7014805-e839-4fba-973b-12e074dab70f",
        "authorId" : "f6154816-291d-4b86-8b30-b5e2be7afb91",
        "body" : "Done",
        "createdAt" : "2017-04-11T09:53:41Z",
        "updatedAt" : "2017-04-21T10:41:57Z",
        "lastEditedBy" : "f6154816-291d-4b86-8b30-b5e2be7afb91",
        "tags" : [
        ]
      },
      {
        "id" : "20b3e776-516a-49ef-8782-f6c76a910ba2",
        "parentId" : "f7014805-e839-4fba-973b-12e074dab70f",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "The number of caches does not matter. When a cluster restarts, controllers that don't wait for their caches to sync may end up doing all sorts of weird things.",
        "createdAt" : "2017-04-11T09:57:00Z",
        "updatedAt" : "2017-04-21T10:41:57Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "b16024f8-5fe1-4fef-8395-b703c753e321",
        "parentId" : "f7014805-e839-4fba-973b-12e074dab70f",
        "authorId" : "f6154816-291d-4b86-8b30-b5e2be7afb91",
        "body" : "Really, could you elaborate on that? \r\n\r\nI think the informer has a well defined behaviour when you are using it's callback. So whenever something is added/updated/deleted in the underlying store, we dirty the key via the callbacks. This means that when we process the key in the controller, and fetch the item from the informer store, we get the object from this event or a newer version. Or do I miss something here?\r\n\r\nBut I totally agree, that when you have \"secondary\" caches, it is vital to sync.",
        "createdAt" : "2017-04-11T10:06:49Z",
        "updatedAt" : "2017-04-21T10:41:57Z",
        "lastEditedBy" : "f6154816-291d-4b86-8b30-b5e2be7afb91",
        "tags" : [
        ]
      },
      {
        "id" : "825cc50b-1b9e-4ffc-9dfd-4cfa2c4903aa",
        "parentId" : "f7014805-e839-4fba-973b-12e074dab70f",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "You are right, I was thinking of a bug we had with a secondary cache. Yet, I think it still makes sense to have the check here for all caches.",
        "createdAt" : "2017-04-11T11:14:08Z",
        "updatedAt" : "2017-04-21T10:41:57Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "767bdafe-9737-4a88-a261-8b0a9b44421e",
        "parentId" : "f7014805-e839-4fba-973b-12e074dab70f",
        "authorId" : "f6154816-291d-4b86-8b30-b5e2be7afb91",
        "body" : "Agreed.",
        "createdAt" : "2017-04-11T11:31:11Z",
        "updatedAt" : "2017-04-21T10:41:57Z",
        "lastEditedBy" : "f6154816-291d-4b86-8b30-b5e2be7afb91",
        "tags" : [
        ]
      }
    ],
    "commit" : "b39b3ba01675828c13bc0dea67d5114b4c225644",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +123,127 @@\n\tgo c.informer.Run(stopCh)\n\n\t// Wait for all involved caches to be synced, before processing items from the queue is started\n\tif !cache.WaitForCacheSync(stopCh, c.informer.HasSynced) {"
  }
]