[
  {
    "id" : "a27b908b-d08d-4d2e-b013-acd4b94c60b9",
    "prId" : 76513,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76513#pullrequestreview-227430182",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc05386a-71ba-4cd9-9ea8-2edee571d22e",
        "parentId" : null,
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "the deployment template could be shared between typed-client and dynamic-client examples (e.g. having the template in a yaml file and deserializing it to `appsv1.Deployment` or `unstructured.Unstructured` accordingly)",
        "createdAt" : "2019-04-12T23:06:01Z",
        "updatedAt" : "2019-06-04T14:53:57Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      },
      {
        "id" : "34de026c-86d9-4031-b658-cffe592a2888",
        "parentId" : "fc05386a-71ba-4cd9-9ea8-2edee571d22e",
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "Thanks for the suggestion, but the point of this example is to keep example simple and provide an analog of the typed example.",
        "createdAt" : "2019-04-16T07:44:56Z",
        "updatedAt" : "2019-06-04T14:53:57Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      },
      {
        "id" : "2b1d101b-5f8c-496c-921b-32edce4510ce",
        "parentId" : "fc05386a-71ba-4cd9-9ea8-2edee571d22e",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "I agree this way keeps the example self-contained",
        "createdAt" : "2019-04-16T20:35:46Z",
        "updatedAt" : "2019-06-04T14:53:57Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "103c71a2b576cf2557418df3f235744b1d7f1e4e",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +105,109 @@\t\t\t},\n\t\t},\n\t}\n\n\t// Create Deployment"
  },
  {
    "id" : "e0ac85a9-0e60-476f-8852-c7043c73836e",
    "prId" : 76513,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76513#pullrequestreview-227030681",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "219c8ca4-fb91-4ce1-ab26-fa1abbca5a2f",
        "parentId" : null,
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "nit: this function could be in a util package to be shared",
        "createdAt" : "2019-04-12T23:12:34Z",
        "updatedAt" : "2019-06-04T14:53:57Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      },
      {
        "id" : "4937cb67-e219-49ac-8253-ae6e8ab8b94c",
        "parentId" : "219c8ca4-fb91-4ce1-ab26-fa1abbca5a2f",
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "Again, the point example is to be an analogue of the typed example.",
        "createdAt" : "2019-04-16T07:45:23Z",
        "updatedAt" : "2019-06-04T14:53:57Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "103c71a2b576cf2557418df3f235744b1d7f1e4e",
    "line" : 198,
    "diffHunk" : "@@ -1,1 +196,200 @@}\n\nfunc prompt() {\n\tfmt.Printf(\"-> Press Return key to continue.\")\n\tscanner := bufio.NewScanner(os.Stdin)"
  },
  {
    "id" : "5c9916bb-0bf3-44f0-be17-16a420a7172f",
    "prId" : 76513,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76513#pullrequestreview-227032505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1afd9b0-ae06-41bd-b1d2-447dadd9692e",
        "parentId" : null,
        "authorId" : "5eb48c11-1b8e-4bd5-ad8f-26b669af0388",
        "body" : "I suggest before the program panics to log the reason for the error. The Create shouldn't probably panic if the deployment exists. What could also be interesting is to check if the resource exists before we create or update it. I am not sure if there is an example of selectors later but that would be great.",
        "createdAt" : "2019-04-15T12:17:16Z",
        "updatedAt" : "2019-06-04T14:53:57Z",
        "lastEditedBy" : "5eb48c11-1b8e-4bd5-ad8f-26b669af0388",
        "tags" : [
        ]
      },
      {
        "id" : "8e2eae2e-9c33-4945-bb0c-829ecf5cc6f0",
        "parentId" : "e1afd9b0-ae06-41bd-b1d2-447dadd9692e",
        "authorId" : "5eb48c11-1b8e-4bd5-ad8f-26b669af0388",
        "body" : "I saw an update later, so mainly an example of error handling and a graceful shutdown would be great with a clear explanation of how to recover.",
        "createdAt" : "2019-04-15T12:18:44Z",
        "updatedAt" : "2019-06-04T14:53:57Z",
        "lastEditedBy" : "5eb48c11-1b8e-4bd5-ad8f-26b669af0388",
        "tags" : [
        ]
      },
      {
        "id" : "09eaf91e-7c7e-451e-9f8f-8800382208b8",
        "parentId" : "e1afd9b0-ae06-41bd-b1d2-447dadd9692e",
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "I agree with the points made here. However, this example is supposed to be an analogue of the existing typed version.  Making changes to make the example better, would also mean changing the original typed version to keep them on parity. ",
        "createdAt" : "2019-04-16T07:49:37Z",
        "updatedAt" : "2019-06-04T14:53:57Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "103c71a2b576cf2557418df3f235744b1d7f1e4e",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +111,115 @@\tresult, err := client.Resource(deploymentRes).Namespace(namespace).Create(deployment, metav1.CreateOptions{})\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tfmt.Printf(\"Created deployment %q.\\n\", result.GetName())"
  }
]