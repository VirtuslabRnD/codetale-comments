[
  {
    "id" : "45c092c6-fdbc-46c6-8e7d-93c576d9b91d",
    "prId" : 102107,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102107#pullrequestreview-672828873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "955c5928-3260-440d-957c-1e9bfba68c5b",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Nice refactor!",
        "createdAt" : "2021-06-01T09:01:24Z",
        "updatedAt" : "2021-06-01T09:13:04Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "607d3819498e64d969407c3d7cbbb8f53d98f0d4",
    "line" : 325,
    "diffHunk" : "@@ -1,1 +1203,1207 @@\t\t\tif testCase.attemptsExpected != attemptsGot {\n\t\t\t\tt.Errorf(\"Expected RoundTrip to be invoked %d times, but got: %d\", testCase.attemptsExpected, attemptsGot)\n\t\t\t}\n\t\t\thasErr := err != nil\n\t\t\tif hasErr != testCase.Err {"
  },
  {
    "id" : "6bcc5747-3f34-4002-a5e8-625cd3a690c7",
    "prId" : 102107,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102107#pullrequestreview-672828873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "705c9f92-1660-42aa-943b-f18ba7421305",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "nit: empty line before the func",
        "createdAt" : "2021-06-01T09:07:55Z",
        "updatedAt" : "2021-06-01T09:13:04Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "607d3819498e64d969407c3d7cbbb8f53d98f0d4",
    "line" : 714,
    "diffHunk" : "@@ -1,1 +2593,2597 @@\tc.closes++\n}\nfunc (c *count) getCloseCount() int {\n\tc.lock.Lock()\n\tdefer c.lock.Unlock()"
  },
  {
    "id" : "c5a04c42-f3a4-4977-816b-d5010f153c3d",
    "prId" : 102107,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102107#pullrequestreview-672828873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "748840e8-1d58-4c69-a449-2526b65773ab",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "DoRaw",
        "createdAt" : "2021-06-01T09:10:13Z",
        "updatedAt" : "2021-06-01T09:13:04Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "686b140e-fa84-4f50-9ee5-47bf490adc61",
        "parentId" : "748840e8-1d58-4c69-a449-2526b65773ab",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Actually - I see below how it is used, never mind.",
        "createdAt" : "2021-06-01T09:10:29Z",
        "updatedAt" : "2021-06-01T09:13:04Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "607d3819498e64d969407c3d7cbbb8f53d98f0d4",
    "line" : 751,
    "diffHunk" : "@@ -1,1 +2761,2765 @@func TestRequestDoRawWithRetry(t *testing.T) {\n\t// both request.Do and request.DoRaw have the same behavior and expectations\n\ttestRequestWithRetry(t, \"Do\", func(ctx context.Context, r *Request) {\n\t\tr.DoRaw(ctx)\n\t})"
  },
  {
    "id" : "fc809fe7-00e8-410d-ab88-c9f50713637b",
    "prId" : 74363,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74363#pullrequestreview-209240548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb13d7b6-e69b-489d-bca3-952ec88a51a7",
        "parentId" : null,
        "authorId" : "f474bb7f-c91e-4c7f-8215-aa1a0f8eb05a",
        "body" : "adding client go dynamic client expert @roycaihw , would you please help check the correctness of the dynamic client format?",
        "createdAt" : "2019-02-24T01:34:41Z",
        "updatedAt" : "2020-11-05T09:12:49Z",
        "lastEditedBy" : "f474bb7f-c91e-4c7f-8215-aa1a0f8eb05a",
        "tags" : [
        ]
      },
      {
        "id" : "453ab1af-f60b-4902-9c11-bc4b5d7b9e65",
        "parentId" : "eb13d7b6-e69b-489d-bca3-952ec88a51a7",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "the problem also occurs when `baseURL` is something like `url.Parse(\"base/url\")`. It would be great if you can also handle that case. LGTM otherwise\r\n\r\nI don't see if we put restriction on what `baseURL` can be, but that's probably out of scope for this function",
        "createdAt" : "2019-02-28T18:38:10Z",
        "updatedAt" : "2020-11-05T09:12:49Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "c039b02fa7281fc061455e23b6530ed8b4d19645",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +488,492 @@\t\t},\n\t\t{\n\t\t\t// dynamic client with core group + namespace + resourceResource (with name) where baseURL is a single /\n\t\t\t// /api/$RESOURCEVERSION/namespaces/$NAMESPACE/$RESOURCE/%NAME\n\t\t\tRequest: NewRequestWithClient(uriSingleSlash, \"\", ClientContentConfig{GroupVersion: schema.GroupVersion{Group: \"test\"}}, nil).Verb(\"DELETE\")."
  },
  {
    "id" : "1442ddeb-ed22-475b-a047-c6df4596b03f",
    "prId" : 68530,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68530#pullrequestreview-156032777",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6606d8ed-dd1a-4ea9-90b6-db73a2150ceb",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Reminds me of https://en.wikipedia.org/wiki/Buffalo_buffalo_Buffalo_buffalo_buffalo_buffalo_Buffalo_buffalo",
        "createdAt" : "2018-09-17T17:23:04Z",
        "updatedAt" : "2018-09-17T17:23:04Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "99248b8fe1fe1c28188657d811dc7baf8cd12982",
    "line" : 164,
    "diffHunk" : "@@ -1,1 +486,490 @@\t\t\tRequest: NewRequest(nil, \"DELETE\", uri, \"\", ContentConfig{GroupVersion: &schema.GroupVersion{Group: \"test\"}}, Serializers{}, nil, nil, 0).\n\t\t\t\tPrefix(\"/pre1/namespaces/namespaces/namespaces/namespaces/namespaces/namespaces/finalize\"),\n\t\t\tExpectedFullURL:  \"http://localhost/some/base/url/path/pre1/namespaces/namespaces/namespaces/namespaces/namespaces/namespaces/finalize\",\n\t\t\tExpectedFinalURL: \"http://localhost/%7Bprefix%7D\",\n\t\t},"
  },
  {
    "id" : "b9078bbc-132e-41b7-9b08-5401dd7ee44f",
    "prId" : 68530,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68530#pullrequestreview-156034390",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e45a85b-0007-45b0-adcc-386530637742",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I would have expected `apis/namespaces/{namespace}/namespaces/{name}`?",
        "createdAt" : "2018-09-17T17:25:03Z",
        "updatedAt" : "2018-09-17T17:25:03Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "a2fea884-60d9-4f96-adc7-27b2c2e2f076",
        "parentId" : "3e45a85b-0007-45b0-adcc-386530637742",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "wait no I got confused :)\r\n\r\nThis is correct.",
        "createdAt" : "2018-09-17T17:27:14Z",
        "updatedAt" : "2018-09-17T17:27:14Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "99248b8fe1fe1c28188657d811dc7baf8cd12982",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +471,475 @@\t\t\t\tPrefix(\"/apis/namespaces/namespaces/namespaces/namespaces\"),\n\t\t\tExpectedFullURL:  \"http://localhost/some/base/url/path/apis/namespaces/namespaces/namespaces/namespaces\",\n\t\t\tExpectedFinalURL: \"http://localhost/some/base/url/path/apis/namespaces/namespaces/namespaces/%7Bname%7D\",\n\t\t},\n\t\t{"
  },
  {
    "id" : "38647417-ccfe-4bbb-80ac-c5dd8eb6b498",
    "prId" : 68530,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68530#pullrequestreview-156034631",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27585206-13ee-4118-8120-d8ccffa638f8",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I'd expect`{namespace}` here too?",
        "createdAt" : "2018-09-17T17:26:14Z",
        "updatedAt" : "2018-09-17T17:26:14Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "08ce5ba3-85fc-4ae5-b9d6-9a97d872c80f",
        "parentId" : "27585206-13ee-4118-8120-d8ccffa638f8",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Scratch this, it's correct.",
        "createdAt" : "2018-09-17T17:27:49Z",
        "updatedAt" : "2018-09-17T17:27:50Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "99248b8fe1fe1c28188657d811dc7baf8cd12982",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +463,467 @@\t\t\t\tPrefix(\"/apis/namespaces/namespaces/namespaces/namespaces/status\"),\n\t\t\tExpectedFullURL:  \"http://localhost/some/base/url/path/apis/namespaces/namespaces/namespaces/namespaces/status\",\n\t\t\tExpectedFinalURL: \"http://localhost/some/base/url/path/apis/namespaces/namespaces/namespaces/%7Bname%7D/status\",\n\t\t},\n\t\t{"
  },
  {
    "id" : "a9d65cf5-bc44-4172-9ea0-b2f447f4fe21",
    "prId" : 44523,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44523#pullrequestreview-34980040",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88b70eb5-efce-4a1c-8ee0-e26edca144e9",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah I don't get why there is this copy line.",
        "createdAt" : "2017-04-26T23:12:09Z",
        "updatedAt" : "2017-05-03T00:17:13Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "d978f22e04519f6eecfde839110c398dc28d4e8e",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +94,98 @@\nfunc TestRequestWithErrorWontChange(t *testing.T) {\n\tgvCopy := v1.SchemeGroupVersion\n\toriginal := Request{\n\t\terr:     errors.New(\"test\"),"
  },
  {
    "id" : "4cd1f693-8c3d-49f7-bdde-8c5b534ec3f2",
    "prId" : 44523,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44523#pullrequestreview-35908064",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b19a9b7-de38-457f-9eb6-9e32a291f3df",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "It's much better to get these things from a registry than to get them directly from the package. Can it be gotten from a registry living in apimachinery somewhere?",
        "createdAt" : "2017-04-27T23:01:23Z",
        "updatedAt" : "2017-05-03T00:17:13Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "66915d26-6e98-4985-b444-34f7904a27ac",
        "parentId" : "6b19a9b7-de38-457f-9eb6-9e32a291f3df",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "There is no existing Registry in apimachinery.\r\n\r\nIMO client should have a global test registry shared by all client tests. And if a client test needs aspecial registry, it creates its own.",
        "createdAt" : "2017-04-27T23:22:48Z",
        "updatedAt" : "2017-05-03T00:17:13Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "c79c9aff-ba30-4eb1-958b-7c7d498ab716",
        "parentId" : "6b19a9b7-de38-457f-9eb6-9e32a291f3df",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I do agree tests should probably be constructing their own registry.",
        "createdAt" : "2017-05-02T22:35:32Z",
        "updatedAt" : "2017-05-03T00:17:13Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "d978f22e04519f6eecfde839110c398dc28d4e8e",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +97,101 @@\toriginal := Request{\n\t\terr:     errors.New(\"test\"),\n\t\tcontent: ContentConfig{GroupVersion: &gvCopy},\n\t}\n\tr := original"
  }
]