[
  {
    "id" : "d37524b6-81e2-49fb-80f2-a731cfa4a649",
    "prId" : 95489,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95489#pullrequestreview-519867093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cdece54-96e0-435a-8704-b4d57def7faa",
        "parentId" : null,
        "authorId" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "body" : "In our kubeconfig loading logic, we ensure that the proxy URL's scheme is valid (http/https/socks5)[0]. Furthermore, we have some logic around the `rest.Config.Host`[1]. I didn't include any of that in here, hoping that the API contract for this function could be something like \"I'll do my best to copy over the fields one-for-one, but you are on your own if any of those fields are invalid\".\r\n\r\n[0] https://github.com/kubernetes/kubernetes/blob/2729b8e375143434fc4977fe49eaea572567dac3/staging/src/k8s.io/client-go/tools/clientcmd/helpers.go#L38\r\n[1] https://github.com/kubernetes/kubernetes/blob/2729b8e375143434fc4977fe49eaea572567dac3/staging/src/k8s.io/client-go/tools/clientcmd/client_config.go#L171",
        "createdAt" : "2020-10-29T14:48:38Z",
        "updatedAt" : "2020-10-29T21:03:57Z",
        "lastEditedBy" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "tags" : [
        ]
      },
      {
        "id" : "cfdc9fed-42dc-40ab-a8cd-5f6f35f3f576",
        "parentId" : "8cdece54-96e0-435a-8704-b4d57def7faa",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yeah, that's fine",
        "createdAt" : "2020-10-29T16:43:06Z",
        "updatedAt" : "2020-10-29T21:03:57Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "409f22832a9f949e7fa534379574ce4fb9802394",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +65,69 @@// any authentication-related fields set).\nfunc ExecClusterToConfig(cluster *clientauthentication.Cluster) (*Config, error) {\n\tvar proxy func(*http.Request) (*url.URL, error)\n\tif cluster.ProxyURL != \"\" {\n\t\tproxyURL, err := url.Parse(cluster.ProxyURL)"
  }
]