[
  {
    "id" : "ca76ef1b-72a6-44d0-88cd-fe172b32c781",
    "prId" : 102928,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102928#pullrequestreview-701127075",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6aec71a-8be0-428a-a29e-59c6438e6232",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I'd like to see a test case where the list isn't seeded at all and the response needs to be fully constructed.",
        "createdAt" : "2021-07-07T14:54:21Z",
        "updatedAt" : "2021-07-07T14:54:21Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "8aa7ac12-69da-4ece-b7bf-4dd255d4066d",
        "parentId" : "b6aec71a-8be0-428a-a29e-59c6438e6232",
        "authorId" : "e7dfaafa-4f67-4069-8354-f57f4d20d1f2",
        "body" : "Added `TestListWithNoFixturesAndTypedScheme`\r\n\r\nI'm testing with a typed scheme - otherwise I'd expect consumers to use the other constructor that requires a mapping of gvrs to list kinds",
        "createdAt" : "2021-07-07T15:06:07Z",
        "updatedAt" : "2021-07-07T15:06:07Z",
        "lastEditedBy" : "e7dfaafa-4f67-4069-8354-f57f4d20d1f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "418fa71b6b1d1fba930daaba1f8ecf55070b4bdf",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +308,312 @@// This test ensures list works when the fake dynamic client is seeded with a typed scheme and\n// unstructured type fixtures\nfunc TestListWithUnstructuredObjectsAndTypedScheme(t *testing.T) {\n\tgvr := schema.GroupVersionResource{Group: testGroup, Version: testVersion, Resource: testResource}\n\tgvk := gvr.GroupVersion().WithKind(testKind)"
  },
  {
    "id" : "02aaed8f-4e78-4d5b-a7ba-65a5ae696ff2",
    "prId" : 69330,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69330#pullrequestreview-163481313",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4dd27170-3fab-43b0-bbc0-da756799df3f",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Can you add a TODO and open a follow-up issue to add test for strategic merge patch?",
        "createdAt" : "2018-10-10T17:00:58Z",
        "updatedAt" : "2018-10-11T08:14:53Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "cf6a736e-1b07-48e9-a11d-deec2d8bdbe7",
        "parentId" : "4dd27170-3fab-43b0-bbc0-da756799df3f",
        "authorId" : "0e7d5ded-65a9-492a-be86-d40442e6ce0b",
        "body" : "https://github.com/kubernetes/client-go/issues/488",
        "createdAt" : "2018-10-10T17:46:41Z",
        "updatedAt" : "2018-10-11T08:14:53Z",
        "lastEditedBy" : "0e7d5ded-65a9-492a-be86-d40442e6ce0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a363b153851326ece7f81f4c1ae0a1ab8700a209",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +186,190 @@\t\t\tpatchType:  types.MergePatchType,\n\t\t\tpatchBytes: []byte(`{}`),\n\t\t\twantErrMsg: \"PatchType is not supported\",\n\t\t},\n\t\t// TODO: Add tests for strategic merge using v1.Pod for example to ensure the test cases"
  }
]