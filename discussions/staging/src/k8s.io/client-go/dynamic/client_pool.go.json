[
  {
    "id" : "7ebc4d3f-a78a-4e76-a6d8-c0908ab2e278",
    "prId" : 44983,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44983#pullrequestreview-34997109",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53ac176a-2965-42ab-9fa3-4285b8658e05",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@lavalamp this is a manual change.",
        "createdAt" : "2017-04-27T00:48:21Z",
        "updatedAt" : "2017-04-27T16:44:51Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "958903509c29fdfe216c0bbf0abce1ce0abd59a6",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +73,77 @@// Instantiates a new dynamic client pool with the given config.\nfunc NewDynamicClientPool(cfg *restclient.Config) ClientPool {\n\t// restMapper is not needed when using LegacyAPIPathResolverFunc\n\temptyMapper := meta.MultiRESTMapper{}\n\treturn NewClientPool(cfg, emptyMapper, LegacyAPIPathResolverFunc)"
  },
  {
    "id" : "388a1597-7922-4adf-846d-d874e667078d",
    "prId" : 35950,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35950#pullrequestreview-19417247",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64300755-e5bb-4ea8-8a91-c74de2012062",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "This is causing `hack/verify-staging-imports.sh` to fail with:\r\n```\r\nI0131 11:53:14.800] client-go has a forbidden dependency:\r\nI0131 11:53:14.800] \r\nI0131 11:53:14.802]   k8s.io/client-go/dynamic imports k8s.io/kubernetes/pkg/api\r\nI0131 11:53:14.802] \r\nI0131 11:53:14.803] FAILED   hack/make-rules/../../hack/verify-staging-imports.sh\r\n```\r\n\r\nSo I will have to move this elsewhere.\r\nI had it at `pkg/controller/client` earlier.\r\n@derekwaynecarr Is that fine or is there some other place you want me to put this at?",
        "createdAt" : "2017-01-31T20:39:08Z",
        "updatedAt" : "2017-02-06T18:52:30Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca6f821738ee84a84a46f0ed8d4b833b628864d7",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +73,77 @@\n// Instantiates a new dynamic client pool with the given config.\nfunc NewDynamicClientPool(cfg *restclient.Config) ClientPool {\n\t// TODO: should use a dynamic RESTMapper built from the discovery results.\n\trestMapper := api.Registry.RESTMapper()"
  },
  {
    "id" : "0a3e1c0a-f043-4fbf-8030-e4819969ad2e",
    "prId" : 35950,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35950#pullrequestreview-19658588",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6b0ab84-fabc-4a55-aed5-d764b333ad1a",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "There is also a registry for client-go. Note that there is a difference between client and kube types. Kube's api.Registry is relevant only on the apiserver side. If you talk to the apiserver via a client most probably you mean client-go's registry here.",
        "createdAt" : "2017-02-01T06:53:37Z",
        "updatedAt" : "2017-02-06T18:52:30Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "b73a5bb0-b624-46ee-bb2a-8ac26ca6262b",
        "parentId" : "d6b0ab84-fabc-4a55-aed5-d764b333ad1a",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "`client-go/pkg/api.Registry`",
        "createdAt" : "2017-02-01T06:53:53Z",
        "updatedAt" : "2017-02-06T18:52:30Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "d40719ea-62be-4b6a-ba3d-69716a49f667",
        "parentId" : "d6b0ab84-fabc-4a55-aed5-d764b333ad1a",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Thanks, updated to use `client-go/pkg/api.Registry`",
        "createdAt" : "2017-02-01T21:21:04Z",
        "updatedAt" : "2017-02-06T18:52:30Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca6f821738ee84a84a46f0ed8d4b833b628864d7",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +75,79 @@func NewDynamicClientPool(cfg *restclient.Config) ClientPool {\n\t// TODO: should use a dynamic RESTMapper built from the discovery results.\n\trestMapper := api.Registry.RESTMapper()\n\treturn NewClientPool(cfg, restMapper, LegacyAPIPathResolverFunc)\n}"
  }
]