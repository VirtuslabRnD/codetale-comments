[
  {
    "id" : "52e96841-9867-4b0f-8de4-9b152c0b8c29",
    "prId" : 83064,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83064#pullrequestreview-293047651",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09f4f2eb-ca17-42f3-9456-838ae0eaed79",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Fun.  You're not prepared to update a generator make the API consistent?",
        "createdAt" : "2019-09-25T12:32:34Z",
        "updatedAt" : "2019-09-25T12:32:34Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "da79ddaa-69a7-4bf0-a403-a7538bb28d7e",
        "parentId" : "09f4f2eb-ca17-42f3-9456-838ae0eaed79",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I still want the generator to produce methods taking a context as well (e.g. https://github.com/kubernetes/community/pull/1166), but these particular Create methods were already hand-written.",
        "createdAt" : "2019-09-25T12:44:45Z",
        "updatedAt" : "2019-09-25T12:44:45Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "282f0439-bc97-4599-826c-a6d1123f0fc5",
        "parentId" : "09f4f2eb-ca17-42f3-9456-838ae0eaed79",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I was talking with clayton about the shape we want for the generated changes, but I expect that to take quite a bit longer, and I don't want to block this on the generator bits. These clients are the only ones the API server uses internally to call to remote endpoints, so I think it's worth fixing them now.",
        "createdAt" : "2019-09-25T12:46:26Z",
        "updatedAt" : "2019-09-25T12:46:27Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b78edd86b8766b96278bcb46301f751d9e6e3631",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +28,32 @@}\n\nfunc (c *FakeTokenReviews) CreateContext(ctx context.Context, tokenReview *authenticationapi.TokenReview) (result *authenticationapi.TokenReview, err error) {\n\tobj, err := c.Fake.Invokes(core.NewRootCreateAction(authenticationapi.SchemeGroupVersion.WithResource(\"tokenreviews\"), tokenReview), &authenticationapi.TokenReview{})\n\treturn obj.(*authenticationapi.TokenReview), err"
  }
]