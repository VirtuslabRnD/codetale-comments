[
  {
    "id" : "a3c51e67-351c-48d3-8849-feeb2b1703f8",
    "prId" : 55981,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55981#pullrequestreview-77912711",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ecf20939-7067-4dc8-852c-d6396f55ce39",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I see this is a copy of apps/v1beta2 GetPodDaemonSets, but I'm wondering what the point of returning a daemonset that doesn't match the controllerref is",
        "createdAt" : "2017-11-20T17:41:27Z",
        "updatedAt" : "2017-11-20T17:41:27Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "4395cbef-a0a6-4066-a258-a3610687cf0f",
        "parentId" : "ecf20939-7067-4dc8-852c-d6396f55ce39",
        "authorId" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "body" : "It's needed for adoption of orphans.",
        "createdAt" : "2017-11-20T20:28:57Z",
        "updatedAt" : "2017-11-20T20:28:57Z",
        "lastEditedBy" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "tags" : [
        ]
      }
    ],
    "commit" : "421710f1324b078ee728b513876d13a06acc217d",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@// GetPodDaemonSets returns a list of DaemonSets that potentially match a pod.\n// Only the one specified in the Pod's ControllerRef will actually manage it.\n// Returns an error only if no matching DaemonSets are found.\nfunc (s *daemonSetLister) GetPodDaemonSets(pod *v1.Pod) ([]*apps.DaemonSet, error) {\n\tvar selector labels.Selector"
  },
  {
    "id" : "1cc77987-300e-49a8-8ae7-aa7761249458",
    "prId" : 55981,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55981#pullrequestreview-77912754",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b205bc8-0a91-4af5-a03e-97dab5f902e7",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "same here... what is the benefit of getting back a daemonset that happened to match the controllerrevision's labels, but not the controllerref name?",
        "createdAt" : "2017-11-20T17:44:32Z",
        "updatedAt" : "2017-11-20T17:44:32Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "549394a7-8561-451a-84a5-19cef34d51ec",
        "parentId" : "8b205bc8-0a91-4af5-a03e-97dab5f902e7",
        "authorId" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "body" : "Same as above.",
        "createdAt" : "2017-11-20T20:29:06Z",
        "updatedAt" : "2017-11-20T20:29:06Z",
        "lastEditedBy" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "tags" : [
        ]
      }
    ],
    "commit" : "421710f1324b078ee728b513876d13a06acc217d",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +81,85 @@// GetHistoryDaemonSets returns a list of DaemonSets that potentially\n// match a ControllerRevision. Only the one specified in the ControllerRevision's ControllerRef\n// will actually manage it.\n// Returns an error only if no matching DaemonSets are found.\nfunc (s *daemonSetLister) GetHistoryDaemonSets(history *apps.ControllerRevision) ([]*apps.DaemonSet, error) {"
  }
]