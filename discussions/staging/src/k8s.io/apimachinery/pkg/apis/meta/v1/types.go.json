[
  {
    "id" : "81fb7afe-a452-4511-bfa4-7381ad4e48b3",
    "prId" : 100970,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100970#pullrequestreview-636149807",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68c05daa-a0d2-408c-9df0-db71ed7205b1",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Where is the validation for this field? Can people write whatever they want to it?",
        "createdAt" : "2021-04-14T23:09:47Z",
        "updatedAt" : "2021-04-16T21:26:19Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "e477c313073d55f197d8906bc8892f09528db362",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1190,1194 @@\t// Note that the APIVersion field is not related to the Subresource field and\n\t// it always corresponds to the version of the main resource.\n\tSubresource string `json:\"subresource,omitempty\" protobuf:\"bytes,8,opt,name=subresource\"`\n}\n"
  },
  {
    "id" : "334f4d72-f357-4fa2-a167-6f93f3b78a1a",
    "prId" : 99214,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99214#pullrequestreview-604315677",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd2718f1-869d-4704-8691-43d451d87c15",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Say something about this being a convenience type for ease of use and actually being the same as PatchOptions?",
        "createdAt" : "2021-03-03T23:58:33Z",
        "updatedAt" : "2021-03-07T01:51:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "0ce8331d-eb81-41d6-80bd-f292012ff984",
        "parentId" : "fd2718f1-869d-4704-8691-43d451d87c15",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "+1. Added. The options fields documentation was all rewritten to focus on apply. I'll call that out too.",
        "createdAt" : "2021-03-04T16:11:11Z",
        "updatedAt" : "2021-03-07T01:51:01Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "57897a03-a177-428d-8330-704be4a0bb76",
        "parentId" : "fd2718f1-869d-4704-8691-43d451d87c15",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "```\r\n// ApplyOptions may be provided when applying an API object.\r\n// FieldManager is required for apply requests.\r\n// ApplyOptions is equivalent to PatchOptions. It is provided as a convenience with documentation\r\n// that speaks specifically to how the options fields relate to apply.\r\n```",
        "createdAt" : "2021-03-04T16:44:15Z",
        "updatedAt" : "2021-03-07T01:51:01Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b42cae1575066166d6e63e1f3f5364aeccb0ca3",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +581,585 @@}\n\n// ApplyOptions may be provided when applying an API object.\n// FieldManager is required for apply requests.\n// ApplyOptions is equivalent to PatchOptions. It is provided as a convenience with documentation"
  },
  {
    "id" : "e45a8cec-769b-464a-8fa9-cb917e9eae7a",
    "prId" : 92660,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92660#pullrequestreview-440980545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da8086fe-9663-41a9-8db3-2a4bc3f2281c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is an appropriate place for an enum (True, False, Unknown)",
        "createdAt" : "2020-07-01T15:32:33Z",
        "updatedAt" : "2020-07-08T14:21:39Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a32a70fcf050367905b37946d0b4c0c7fe57301",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +1380,1384 @@\t// +kubebuilder:validation:Required\n\t// +kubebuilder:validation:Enum=True;False;Unknown\n\tStatus ConditionStatus `json:\"status\" protobuf:\"bytes,2,opt,name=status\"`\n\t// observedGeneration represents the .metadata.generation that the condition was set based upon.\n\t// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date"
  },
  {
    "id" : "dfe6ab8c-f5d2-4d06-b214-4f16301b09c9",
    "prId" : 92660,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92660#pullrequestreview-441065763",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b18255f3-7111-4345-a45f-e1305ec974fe",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "is there a time format or RFC3339 regex we can use here?",
        "createdAt" : "2020-07-01T15:33:19Z",
        "updatedAt" : "2020-07-08T14:21:39Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e3ed179e-e90b-4132-8946-15c1caca0007",
        "parentId" : "b18255f3-7111-4345-a45f-e1305ec974fe",
        "authorId" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "body" : "it looks like we can use [type: string and format: date-time](https://book.kubebuilder.io/reference/markers/crd-validation.html)",
        "createdAt" : "2020-07-01T17:28:31Z",
        "updatedAt" : "2020-07-08T14:21:39Z",
        "lastEditedBy" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a32a70fcf050367905b37946d0b4c0c7fe57301",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +1390,1394 @@\t// This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n\t// +required\n\t// +kubebuilder:validation:Required\n\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Format=date-time"
  },
  {
    "id" : "a1b3022f-1a32-47f4-9d66-3c8ea2acbbd2",
    "prId" : 92660,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92660#pullrequestreview-444816482",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2115a5c3-5dcd-4d07-bccc-6ba479a2f7f6",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "it's not perfect, but the max length is 253+63=316",
        "createdAt" : "2020-07-08T13:29:46Z",
        "updatedAt" : "2020-07-08T14:21:39Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "92b674d5-b69d-4922-a838-a6c6a5883339",
        "parentId" : "2115a5c3-5dcd-4d07-bccc-6ba479a2f7f6",
        "authorId" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "body" : "added",
        "createdAt" : "2020-07-08T14:21:49Z",
        "updatedAt" : "2020-07-08T14:21:49Z",
        "lastEditedBy" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a32a70fcf050367905b37946d0b4c0c7fe57301",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1372,1376 @@\t// The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)\n\t// +required\n\t// +kubebuilder:validation:Required\n\t// +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`\n\t// +kubebuilder:validation:MaxLength=316"
  },
  {
    "id" : "e59d1a6a-b725-43e7-bb05-42e60eb246d7",
    "prId" : 92660,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92660#pullrequestreview-444847788",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a9d32e6-0744-47df-86f4-de9d45215585",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "we allow the message to be empty.  See two lines up.  The required bit is about serialization back to clients.",
        "createdAt" : "2020-07-08T14:33:13Z",
        "updatedAt" : "2020-07-08T14:33:13Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "169cbb0e-a287-4b4d-8d31-143cc32ba9b0",
        "parentId" : "5a9d32e6-0744-47df-86f4-de9d45215585",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "This looks correct to me. The value can be an empty string, but the field must be specified or openapi validation will complain (`\"message\":\"\"`)",
        "createdAt" : "2020-07-08T14:36:39Z",
        "updatedAt" : "2020-07-08T14:37:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "32e822b4-e197-4075-b818-15803613f5b7",
        "parentId" : "5a9d32e6-0744-47df-86f4-de9d45215585",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> This looks correct to me. The value can be an empty string, but the field must be specified or openapi validation will complain (`\"message\":\"\"`)\r\n\r\nFound it in my live test.  The CR validation doesn't give slice numbers, so I was looking at the wrong item.",
        "createdAt" : "2020-07-08T14:53:19Z",
        "updatedAt" : "2020-07-08T14:53:19Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a32a70fcf050367905b37946d0b4c0c7fe57301",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +1408,1412 @@\t// This may be an empty string.\n\t// +required\n\t// +kubebuilder:validation:Required\n\t// +kubebuilder:validation:MaxLength=32768\n\tMessage string `json:\"message\" protobuf:\"bytes,6,opt,name=message\"`"
  },
  {
    "id" : "9715b15e-ba55-4bc8-b3ee-304d06cf420b",
    "prId" : 91505,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91505#pullrequestreview-431810539",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d4a5c55-cae7-4bb0-9f6d-db511e2859f6",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "should we also disallow setting `resourceVersionMatch` alongside a `continue` token, like we do with `resourceVersion`+`continue`? should that be checked for in ValidateListOptions?",
        "createdAt" : "2020-06-12T04:49:07Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "37f7c57f-bdc0-4fec-8f7e-773c2651106e",
        "parentId" : "0d4a5c55-cae7-4bb0-9f6d-db511e2859f6",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "+1",
        "createdAt" : "2020-06-16T07:20:32Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "55635989-6e01-4fe8-a830-3ccd369913f7",
        "parentId" : "0d4a5c55-cae7-4bb0-9f6d-db511e2859f6",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "Yes, good catch. Adding.",
        "createdAt" : "2020-06-16T19:05:26Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "04676ff58cf0df69a9e098d0f2585073de81cef7",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +372,376 @@\t// Defaults to unset\n\t// +optional\n\tResourceVersionMatch ResourceVersionMatch `json:\"resourceVersionMatch,omitempty\" protobuf:\"bytes,10,opt,name=resourceVersionMatch,casttype=ResourceVersionMatch\"`\n\t// Timeout for the list/watch call.\n\t// This limits the duration of the call, regardless of any activity or inactivity."
  },
  {
    "id" : "c7fef277-a729-4eac-92ec-0b8b07e61739",
    "prId" : 91505,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91505#pullrequestreview-431826103",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4ab4ba0-8a06-4f29-8232-f83172321ae9",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "This should be added to validation.",
        "createdAt" : "2020-06-16T07:21:10Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "5a69101f-0577-41a2-ae9a-ab3f727ce63e",
        "parentId" : "e4ab4ba0-8a06-4f29-8232-f83172321ae9",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "Thanks. Added.",
        "createdAt" : "2020-06-16T19:28:06Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "04676ff58cf0df69a9e098d0f2585073de81cef7",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +413,417 @@\n// resourceVersionMatch specifies how the resourceVersion parameter is applied. resourceVersionMatch\n// may only be set if resourceVersion is also set.\n//\n// \"NotOlderThan\" matches data at least as new as the provided resourceVersion."
  },
  {
    "id" : "52a8648c-c85e-45ea-96b7-35bdd45272b0",
    "prId" : 90454,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90454#pullrequestreview-429092683",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c36ec104-ef55-4ae5-831f-896b1b10f27c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "also\r\n```go\r\n// +listType=map\r\n// +listMapKey=type\r\n```",
        "createdAt" : "2020-06-11T16:39:38Z",
        "updatedAt" : "2020-06-30T17:29:03Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "95c64c73d1b87f7a1e696ff31900121fb3f13027",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1352,1356 @@// This struct is intended for direct use as an array at the field path .status.conditions.  For example,\n// type FooStatus struct{\n//     // Represents the observations of a foo's current state.\n//     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n//     // +patchMergeKey=type"
  },
  {
    "id" : "df5d4728-653b-4797-a0f7-aced9bdb0d0d",
    "prId" : 90454,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90454#pullrequestreview-437693575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a6875f6-615b-4b9c-b6ef-02a4ca4bfdab",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "huh, I didn't know `+required` was a thing",
        "createdAt" : "2020-06-11T16:40:38Z",
        "updatedAt" : "2020-06-30T17:29:03Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d6e254df-1dd5-4291-b286-f9d7d58f0f48",
        "parentId" : "0a6875f6-615b-4b9c-b6ef-02a4ca4bfdab",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> huh, I didn't know `+required` was a thing\r\n\r\nYou can invert default requires or not default requires and then `// +required` does stuff.  I'd like to be compatible with the generators we know of.\r\n",
        "createdAt" : "2020-06-25T17:08:39Z",
        "updatedAt" : "2020-06-30T17:29:03Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "95c64c73d1b87f7a1e696ff31900121fb3f13027",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +1367,1371 @@\t// Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\n\t// useful (see .node.status.conditions), the ability to deconflict is important.\n\t// +required\n\tType string `json:\"type\" protobuf:\"bytes,1,opt,name=type\"`\n\t// status of the condition, one of True, False, Unknown."
  },
  {
    "id" : "2ea0cceb-f672-4aef-839c-36d17993e24f",
    "prId" : 90454,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90454#pullrequestreview-437727535",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b7141e2-40fb-4b78-96cb-00c1fd417f66",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "separate this from the API doc with `---`? I wouldn't expect to see a reference to node.status.conditions in the API doc for my CR",
        "createdAt" : "2020-06-25T17:55:25Z",
        "updatedAt" : "2020-06-30T17:29:03Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "95c64c73d1b87f7a1e696ff31900121fb3f13027",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +1366,1370 @@\t// ---\n\t// Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\n\t// useful (see .node.status.conditions), the ability to deconflict is important.\n\t// +required\n\tType string `json:\"type\" protobuf:\"bytes,1,opt,name=type\"`"
  },
  {
    "id" : "5fc468a3-d9ed-42b3-b612-7c95fc375441",
    "prId" : 85077,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85077#pullrequestreview-316117545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2190cc5e-977f-461f-a6ce-788d789c5db3",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "worth a comment why",
        "createdAt" : "2019-11-13T05:23:09Z",
        "updatedAt" : "2019-11-14T01:57:18Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "296ec7af-30cd-47cd-a538-3c3e6b4c7952",
        "parentId" : "2190cc5e-977f-461f-a6ce-788d789c5db3",
        "authorId" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "body" : "done",
        "createdAt" : "2019-11-13T08:47:51Z",
        "updatedAt" : "2019-11-14T01:57:18Z",
        "lastEditedBy" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "tags" : [
        ]
      },
      {
        "id" : "a34ad8b0-547e-4ceb-8446-eb3097167082",
        "parentId" : "2190cc5e-977f-461f-a6ce-788d789c5db3",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Maybe sth like:\r\n\"Converting url.Values to Preconditions requires manual conversion.\"",
        "createdAt" : "2019-11-13T09:10:39Z",
        "updatedAt" : "2019-11-14T01:57:18Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "28602a7a-41ce-4c65-8b16-8c53084a384f",
        "parentId" : "2190cc5e-977f-461f-a6ce-788d789c5db3",
        "authorId" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "body" : "> Maybe sth like:\r\n> \"Converting url.Values to Preconditions requires manual conversion.\"\r\n\r\naddressed.",
        "createdAt" : "2019-11-13T09:53:46Z",
        "updatedAt" : "2019-11-14T01:57:18Z",
        "lastEditedBy" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "aaa63d75327e49b986d0d02ad162f9c4d9f018ec",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +472,476 @@\t// Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be\n\t// returned.\n\t// +k8s:conversion-gen=false\n\t// +optional\n\tPreconditions *Preconditions `json:\"preconditions,omitempty\" protobuf:\"bytes,2,opt,name=preconditions\"`"
  },
  {
    "id" : "a6ddf83f-0029-45f1-b57d-19007139e6df",
    "prId" : 83110,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83110#pullrequestreview-293082122",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c5b39ba-8c30-4324-a970-cf105727897f",
        "parentId" : null,
        "authorId" : "2d9afee7-a404-4340-8fd9-d3187ed4f1da",
        "body" : "```suggestion\r\n\t// finalizers is a shared field; any actor with permission can reorder it.\r\n```\r\nShould the leading 'f' be capitalized? Is this documenting the Go field name, or the JSON field name?",
        "createdAt" : "2019-09-25T13:29:30Z",
        "updatedAt" : "2019-10-01T12:32:19Z",
        "lastEditedBy" : "2d9afee7-a404-4340-8fd9-d3187ed4f1da",
        "tags" : [
        ]
      },
      {
        "id" : "4abee2c1-7bd6-4584-9b9f-12a52bbb56f4",
        "parentId" : "0c5b39ba-8c30-4324-a970-cf105727897f",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "documentation should reference the API field, so lowercase `f`",
        "createdAt" : "2019-09-25T13:37:33Z",
        "updatedAt" : "2019-10-01T12:32:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f78484ced154a12000bd0bdd89b1d32e7c89656",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +253,257 @@\t// Finalizers may be processed and removed in any order.  Order is NOT enforced\n\t// because it introduces significant risk of stuck finalizers.\n\t// finalizers is a shared field, any actor with permission can reorder it.\n\t// If the finalizer list is processed in order, then this can lead to a situation\n\t// in which the component responsible for the first finalizer in the list is"
  },
  {
    "id" : "709c44cb-a6f8-4069-89c6-6c9688396822",
    "prId" : 83110,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83110#pullrequestreview-293076169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7a45220-bcf5-4cc8-9dc4-36a7d0eef4e3",
        "parentId" : null,
        "authorId" : "2d9afee7-a404-4340-8fd9-d3187ed4f1da",
        "body" : "Carrying on from the previous sentence, consider starting this one to clarify:\r\n> Since the finalizer order is difficult to coordinate, processing the finalizer list in order could lead to a situation in which the component responsible for the first finalizer in the list would be waiting for a signal (such as a particular field value to change or an external system to perform some operation) produced by a component responsible for a finalizer later in the list, resulting in a deadlock.",
        "createdAt" : "2019-09-25T13:34:25Z",
        "updatedAt" : "2019-10-01T12:32:19Z",
        "lastEditedBy" : "2d9afee7-a404-4340-8fd9-d3187ed4f1da",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f78484ced154a12000bd0bdd89b1d32e7c89656",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +254,258 @@\t// because it introduces significant risk of stuck finalizers.\n\t// finalizers is a shared field, any actor with permission can reorder it.\n\t// If the finalizer list is processed in order, then this can lead to a situation\n\t// in which the component responsible for the first finalizer in the list is\n\t// waiting for a signal (field value, external system, or other) produced by a"
  },
  {
    "id" : "25cb5ae6-2da5-4ff3-8dca-887d061b4108",
    "prId" : 77448,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77448#pullrequestreview-234560130",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce0862f5-fded-406f-a9d2-1fa9589507ed",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "is this comment order meaningful?",
        "createdAt" : "2019-05-06T18:50:13Z",
        "updatedAt" : "2019-05-10T19:29:24Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "33e739a6-cd7c-491a-93e2-a03359a38fb2",
        "parentId" : "ce0862f5-fded-406f-a9d2-1fa9589507ed",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "No, I just tried to make it consistent",
        "createdAt" : "2019-05-07T14:41:25Z",
        "updatedAt" : "2019-05-10T19:29:24Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "33a3e325f754d179b25558dee116fca1c67d353a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1152,1156 @@// object into a set of preferred columns for quickly reviewing the objects.\n// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n// +protobuf=false\ntype Table struct {\n\tTypeMeta `json:\",inline\"`"
  },
  {
    "id" : "4b92a704-ea08-463c-9a4e-d0cb14e6138b",
    "prId" : 77136,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77136#pullrequestreview-231928703",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81afcc30-0edd-4e6b-8bd2-8021736ca3d8",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Will pagination work on these?",
        "createdAt" : "2019-04-29T21:40:47Z",
        "updatedAt" : "2019-05-01T04:27:17Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "588d6070-c405-4043-9943-cf1493e83460",
        "parentId" : "81afcc30-0edd-4e6b-8bd2-8021736ca3d8",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yes, that was the bug in 1.15 (without ListMeta paging didn't work obv)",
        "createdAt" : "2019-04-29T22:17:02Z",
        "updatedAt" : "2019-05-01T04:27:17Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "f95f1db0becbd9719b2bbbe51c2d073e4ae6f88a",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +1158,1162 @@\t// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n\t// +optional\n\tListMeta `json:\"metadata,omitempty\"`\n\n\t// columnDefinitions describes each column in the returned items array. The number of cells per row"
  },
  {
    "id" : "ceff3b96-1d60-4c47-9b42-2b7e0132a2ff",
    "prId" : 77136,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77136#pullrequestreview-231928963",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61812702-3eae-472c-8d1a-2fefcdcd5419",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Can we say the media type (e.g. json / proto) will match that of the enclosing list?",
        "createdAt" : "2019-04-29T21:47:22Z",
        "updatedAt" : "2019-05-01T04:27:17Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "68981fcd-68cf-4a46-92c3-3fde87b28e63",
        "parentId" : "61812702-3eae-472c-8d1a-2fefcdcd5419",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yes.",
        "createdAt" : "2019-04-29T22:17:51Z",
        "updatedAt" : "2019-05-01T04:27:17Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "f95f1db0becbd9719b2bbbe51c2d073e4ae6f88a",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +1205,1209 @@\t// This field contains the requested additional information about each object based on the includeObject\n\t// policy when requesting the Table. If \"None\", this field is empty, if \"Object\" this will be the\n\t// default serialization of the object for the current API version, and if \"Metadata\" (the default) will\n\t// contain the object metadata. Check the returned kind and apiVersion of the object before parsing.\n\t// The media type of the object will always match the enclosing list - if this as a JSON table, these"
  },
  {
    "id" : "0c29976a-028c-41e3-bd60-0d20a004fb1a",
    "prId" : 77136,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77136#pullrequestreview-232293028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df955286-ee14-4712-be08-bcedef2e0f85",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Up until this point I had supposed that row conditions would be copied from the object's conditions field, if it had one. Is that not the case? I thought it would be clever. We should probably say it's not, up by the conditions field?",
        "createdAt" : "2019-04-29T21:53:47Z",
        "updatedAt" : "2019-05-01T04:27:17Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "65c747de-c748-4aaa-842d-975c12b510d4",
        "parentId" : "df955286-ee14-4712-be08-bcedef2e0f85",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Correct, conditions are decoupled from underlying object.  If you need that ask for type=IncludeObject",
        "createdAt" : "2019-04-29T22:18:29Z",
        "updatedAt" : "2019-05-01T04:27:17Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "6969aa86-6c18-4578-821a-3f65fe1cc674",
        "parentId" : "df955286-ee14-4712-be08-bcedef2e0f85",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "commented",
        "createdAt" : "2019-04-30T17:05:41Z",
        "updatedAt" : "2019-05-01T04:27:17Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "f95f1db0becbd9719b2bbbe51c2d073e4ae6f88a",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +1238,1242 @@\t// RowCompleted means the underlying resource has reached completion and may be given less\n\t// visual priority than other resources.\n\tRowCompleted RowConditionType = \"Completed\"\n)\n"
  },
  {
    "id" : "208b09da-4c57-4622-9ffa-10bf50ccd1b8",
    "prId" : 75993,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75993#pullrequestreview-234170883",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c98864ce-86a8-41a8-a489-37af05463758",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I recommend making it optional, so that at least in the label/field selector case, it won't contain a misleading 0.\r\n\r\nI guess it is already omitempty but I would also make it explicitly optional.",
        "createdAt" : "2019-05-06T17:34:30Z",
        "updatedAt" : "2019-05-06T21:16:33Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "cca481e0-97cf-4b1b-9d88-b1a6d3e94b15",
        "parentId" : "c98864ce-86a8-41a8-a489-37af05463758",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Added the `// optional` comment. ",
        "createdAt" : "2019-05-06T19:57:54Z",
        "updatedAt" : "2019-05-06T21:16:33Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d001a0fc86ffa6361265cc311c469d4c173fe019",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +89,93 @@\t// items and this field will also be unset.  Servers older than v1.15 do not set this field.\n\t// +optional\n\tRemainingItemCount int64 `json:\"remainingItemCount,omitempty\" protobuf:\"bytes,4,opt,name=remainingItemCount\"`\n}\n"
  },
  {
    "id" : "a802da45-9d0f-4691-b2cf-74ae3c0e5986",
    "prId" : 75993,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75993#pullrequestreview-236799011",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "072c35e9-f12a-487c-a024-da590b0d9cb8",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This should go through at least one version as an alpha field and be flag gated.\r\n\r\nYou also need to describe what \"do not set this field means\".\r\n\r\nYou used the wrong field name in the godoc, it should be `remainingItemCount`.\r\n\r\nYou need to describe that this field is only set when chunking is requested (do not calling it pagination, that is not the name we use in doc).  ",
        "createdAt" : "2019-05-13T16:51:56Z",
        "updatedAt" : "2019-05-13T16:51:57Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "7e5cd198-6d5b-4709-bc22-3430237cf8a9",
        "parentId" : "072c35e9-f12a-487c-a024-da590b0d9cb8",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This should be alpha in 1.15, and I'd like to see a KEP for this and updates to the public doc that describe how this is used (probably update the chunking KEP).",
        "createdAt" : "2019-05-13T16:52:35Z",
        "updatedAt" : "2019-05-13T16:52:35Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "47ef1b35-9f14-4ee7-8774-1bb4a2bf0311",
        "parentId" : "072c35e9-f12a-487c-a024-da590b0d9cb8",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I'm not 100% sold on the name, `remaining` is novel in our use.",
        "createdAt" : "2019-05-13T16:54:42Z",
        "updatedAt" : "2019-05-13T16:54:42Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "d001a0fc86ffa6361265cc311c469d4c173fe019",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +87,91 @@\t// remaining items is unknown and this field will be unset. If the list is complete (either\n\t// because it is unpaginated or because this is the last page), then there are no more remaining\n\t// items and this field will also be unset.  Servers older than v1.15 do not set this field.\n\t// +optional\n\tRemainingItemCount int64 `json:\"remainingItemCount,omitempty\" protobuf:\"bytes,4,opt,name=remainingItemCount\"`"
  },
  {
    "id" : "08128014-fa1c-4389-80b9-53c6ee8d5a37",
    "prId" : 73976,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73976#pullrequestreview-203873612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e91d2b73-0e95-4162-8f8e-bd3f706adac9",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "@liggitt FYI, new API constant.",
        "createdAt" : "2019-02-14T17:29:37Z",
        "updatedAt" : "2019-02-14T17:29:37Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7dba6fe90dde7724a0361a2a723c3255fdb23bcc",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +828,832 @@\t// FieldManagerConflict is used to report when another client claims to manage this field,\n\t// It should only be returned for a request using server-side apply.\n\tCauseTypeFieldManagerConflict CauseType = \"FieldManagerConflict\"\n)\n"
  },
  {
    "id" : "ca3fd8af-40b8-4ed6-a04e-03cc5037ba4a",
    "prId" : 72947,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72947#pullrequestreview-198860072",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e899acf2-2202-49e2-b782-48a2ab019515",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "What is the key format?",
        "createdAt" : "2019-01-30T18:30:02Z",
        "updatedAt" : "2019-02-04T21:52:39Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "a0900a0a-9fb5-4b4a-8949-f1d3418413af",
        "parentId" : "e899acf2-2202-49e2-b782-48a2ab019515",
        "authorId" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "body" : "// Map stores a set of fields in a data structure like a Trie.\r\n//\r\n// Each key is either a '.' representing the field itself, and will always map to an empty set,\r\n// or a string representing a sub-field or item. The string will follow one of these four formats:\r\n// 'f:\\<name\\>', where \\<name\\> is the name of a field in a struct, or key in a map\r\n// 'v:\\<value\\>', where \\<value\\> is the exact json formatted value of a list item\r\n// 'i:\\<index\\>', where \\<index\\> is position of a item in a list\r\n// 'k:\\<keys\\>',  where \\<keys\\> is a map of  a list item's key fields to their unique values\r\n//\r\n// If a key maps to an empty Fields value, the field that key represents is part of the set.\r\n\r\nAlthough, the format is probably best defined by https://github.com/kubernetes/kubernetes/blob/feature-serverside-apply/staging/src/k8s.io/apiserver/pkg/endpoints/handlers/fieldmanager/internal/pathelement.go",
        "createdAt" : "2019-01-30T22:17:08Z",
        "updatedAt" : "2019-02-04T21:52:39Z",
        "lastEditedBy" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "tags" : [
        ]
      },
      {
        "id" : "dec6bfc5-1c05-4573-8759-640bdc5b7a37",
        "parentId" : "e899acf2-2202-49e2-b782-48a2ab019515",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah, something like that or a link-- either one is fine.",
        "createdAt" : "2019-01-31T23:06:45Z",
        "updatedAt" : "2019-02-04T21:52:39Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "fcd4985ce4732be7c4dfa62f8e54d92d53496e15",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +1079,1083 @@// To understand how this is used, see: https://github.com/kubernetes-sigs/structured-merge-diff\ntype Fields struct {\n\t// Map stores a set of fields in a data structure like a Trie.\n\t//\n\t// Each key is either a '.' representing the field itself, and will always map to an empty set,"
  },
  {
    "id" : "e7bdc49c-90a5-4053-a20f-5495d6d86bcd",
    "prId" : 71858,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71858#pullrequestreview-185219903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fee38962-f227-41a1-a804-18b403095221",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Do we want to make it `omitempty` or do we want to keep the ability to differentiate between completely removed and set-to-null/empty? We could also differentiate based on the lack of \"VersionedFieldSet\" vs lack of Fields.",
        "createdAt" : "2018-12-14T17:58:05Z",
        "updatedAt" : "2018-12-15T02:36:00Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "70f5256f67a062f05546699a86c281c84e24fa2c",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +1047,1051 @@\tAPIVersion string `json:\"apiVersion,omitempty\" protobuf:\"bytes,1,opt,name=apiVersion\"`\n\t// Fields identifies a set of fields.\n\tFields Fields `json:\"fields,omitempty\" protobuf:\"bytes,2,opt,name=fields,casttype=Fields\"`\n}\n"
  },
  {
    "id" : "fb17388d-3d76-46c1-a8a6-257218ea5db2",
    "prId" : 49971,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49971#pullrequestreview-58366080",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45d30cd1-b94f-4966-b49d-0e9b04c60531",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Don't we expect there times when there are multiple versions of the APIResource? If we want to switch groups then there could even be multiple groups? Would preferred be the most stable? I assume that the preferred group must match the preferred version?",
        "createdAt" : "2017-08-16T22:34:17Z",
        "updatedAt" : "2017-08-31T12:05:09Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "c84dab14-5972-4151-8cec-6b095873049e",
        "parentId" : "45d30cd1-b94f-4966-b49d-0e9b04c60531",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> I assume that the preferred group must match the preferred version?\r\n\r\nI think this group and version should always match and be the preferred one (the one that most people will use.  Our internal code already handles this case today.\r\n\r\n\r\n\r\n> Don't we expect there times when there are multiple versions of the APIResource?\r\n\r\nEventually, yes.  Right now our code doesn't handle the condition and explicitly forbids it.  I think that we should reflect what we have now (and realistically for the next few releases).\r\n\r\n\r\n\r\n> If we want to switch groups then there could even be multiple groups? Would preferred be the most stable?\r\n\r\nI think we would handle this as we've done for our preferred versions.  We would add an array of possible GroupVersions and say that they are in the preferred ordering, leaving the choice to the individual api server.",
        "createdAt" : "2017-08-24T12:51:10Z",
        "updatedAt" : "2017-08-31T12:05:09Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "de4006b810a2f3d3cb77b5a37686c8594fd8f6d7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +779,783 @@\t// namespaced indicates if a resource is namespaced or not.\n\tNamespaced bool `json:\"namespaced\" protobuf:\"varint,2,opt,name=namespaced\"`\n\t// group is the preferred group of the resource.  Empty implies the group of the containing resource list.\n\t// For subresources, this may have a different value, for example: Scale\".\n\tGroup string `json:\"group,omitempty\" protobuf:\"bytes,8,opt,name=group\"`"
  },
  {
    "id" : "ae310b5c-be12-48c6-9bfa-17cffa7406ca",
    "prId" : 48921,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48921#pullrequestreview-58059319",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d31a1c59-430f-4af8-adaf-162c31a7320d",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Again - I would avoid mentioning this \"five to fifteen minutes\" here. Even though it may be true for etcd (btw - what is triggering this - churn on the cluster?), if at some point we will have a different backing storage, it may be different.\r\nSo I would avoid putting this information in the API definition.",
        "createdAt" : "2017-08-23T12:24:32Z",
        "updatedAt" : "2017-09-01T14:50:06Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b8e42afa6d6abb459c332690c931585c0177b9c",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +366,370 @@\t// identical query parameters (except for the value of continue) and the server may reject a continue\n\t// value it does not recognize. If the specified continue value is no longer valid whether due to\n\t// expiration (generally five to fifteen minutes) or a configuration change on the server the server\n\t// will respond with a 410 ResourceExpired error indicating the client must restart their list without\n\t// the continue field. This field is not supported when watch is true. Clients may start a watch from"
  },
  {
    "id" : "788b2e52-57ad-4c98-9466-236f13a89051",
    "prId" : 45937,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45937#pullrequestreview-38781873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a49299b1-fec6-4df0-857b-06bff72f28ab",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Shall we add the failure policy here? I think the resource owner has the right to know if the initializers are going to fail open or fail closed.",
        "createdAt" : "2017-05-17T20:15:51Z",
        "updatedAt" : "2017-05-18T14:08:08Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "f4fea09c-64d3-4bed-8ba6-2a6c090a0d6c",
        "parentId" : "a49299b1-fec6-4df0-857b-06bff72f28ab",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I don't think we want to denormalize it - if the admin sees that initializer X is down, he should be able to change that in one spot (core config) and not have to update every resource in the system",
        "createdAt" : "2017-05-17T20:38:29Z",
        "updatedAt" : "2017-05-18T14:08:08Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdd4d34c7d514ec2eaae67fa462491711e02c8b9",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +255,259 @@type Initializer struct {\n\t// name of the process that is responsible for initializing this object.\n\tName string `json:\"name\" protobuf:\"bytes,1,opt,name=name\"`\n}\n"
  },
  {
    "id" : "86dd7983-30fb-423a-8ff6-4bb23c99c9e5",
    "prId" : 43338,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43338#pullrequestreview-29431425",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2fdc3849-e3c0-4e8b-9ac7-7ad2f2107cf6",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "lgtm",
        "createdAt" : "2017-03-28T12:16:13Z",
        "updatedAt" : "2017-06-05T23:32:48Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "39e58128481c335ec055c7b7a0b6528cc9c4db3d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +742,746 @@\tShortNames []string `json:\"shortNames,omitempty\" protobuf:\"bytes,5,rep,name=shortNames\"`\n\t// categories is a list of the grouped resources this resource belongs to (e.g. 'all')\n\tCategories []string `json:\"categories,omitempty\" protobuf:\"bytes,7,rep,name=categories\"`\n}\n"
  },
  {
    "id" : "6f2880db-a421-4117-a6c0-0050b37f4778",
    "prId" : 43312,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43312#pullrequestreview-28221548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3148ae3e-3f8a-44a1-a764-5029e36a068f",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "@mbohlool only line of meat here.",
        "createdAt" : "2017-03-21T20:01:15Z",
        "updatedAt" : "2017-03-21T20:01:16Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "36cb9ed640862366cd7fce302ebedd438cd4bb45",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +688,692 @@\t// The singularName is more correct for reporting status on a single item and both singular and plural are allowed\n\t// from the kubectl CLI interface.\n\tSingularName string `json:\"singularName\" protobuf:\"bytes,6,opt,name=singularName\"`\n\t// namespaced indicates if a resource is namespaced or not.\n\tNamespaced bool `json:\"namespaced\" protobuf:\"varint,2,opt,name=namespaced\"`"
  },
  {
    "id" : "a53d88de-986b-46e6-b17b-b229f080c4b6",
    "prId" : 40312,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40312#pullrequestreview-18193596",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8e88471-1df0-4a50-a25e-ac9a893582b1",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "lgtm, let's get generated code for merge.",
        "createdAt" : "2017-01-24T15:57:07Z",
        "updatedAt" : "2017-01-25T21:06:13Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c924ccd7e5fade2bdd015d5c396962b426890b4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +650,654 @@\tVerbs Verbs `json:\"verbs\" protobuf:\"bytes,4,opt,name=verbs\"`\n\t// shortNames is a list of suggested short names of the resource.\n\tShortNames []string `json:\"shortNames,omitempty\" protobuf:\"bytes,5,rep,name=shortNames\"`\n}\n"
  },
  {
    "id" : "883c26bc-111e-42a2-9848-827cd4c08985",
    "prId" : 40178,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40178#pullrequestreview-17984599",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e875e422-98ee-4fd4-9106-7e07fc53aa35",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This one looks off.  Why does kube-system move?",
        "createdAt" : "2017-01-23T13:38:38Z",
        "updatedAt" : "2017-01-23T22:53:04Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "d40f203a-c610-448c-ba0f-f1d516cd60cf",
        "parentId" : "e875e422-98ee-4fd4-9106-7e07fc53aa35",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Mostly to break dependencies on pkg/api.  The kube-system namespace is no more or less special than \"default\" in that it has meaning for mirror pods.",
        "createdAt" : "2017-01-23T15:53:49Z",
        "updatedAt" : "2017-01-23T22:53:04Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "da26b64a-1014-48e0-931a-3b2343638446",
        "parentId" : "e875e422-98ee-4fd4-9106-7e07fc53aa35",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "This should go to either client-go or stay in kube. It's not generic and only used in kube components. k8s.io/apiserver doesn't need it.",
        "createdAt" : "2017-01-23T16:23:35Z",
        "updatedAt" : "2017-01-23T22:53:04Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "07374dd6-ff2d-4fc3-ba6c-f48a62d3bb8b",
        "parentId" : "e875e422-98ee-4fd4-9106-7e07fc53aa35",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I don't know that I agree.  The convention is that any Kube like API that knows about namespaces knows what `kube-system` is.  How about this, we argue more about where it should end up and then we move it separately (I'd rather not unwind it here).",
        "createdAt" : "2017-01-23T17:25:24Z",
        "updatedAt" : "2017-01-23T22:53:04Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "f749b040-d57c-4abf-b47e-0f50b3493ab5",
        "parentId" : "e875e422-98ee-4fd4-9106-7e07fc53aa35",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "No reason to stop this PR, sure. What can be assumed about`kube-system` under this convention? In a generic `k8s.io/apiserver` world we don't have any controller, no \"kubernetes\" service, no addons, not even namespaces as resources.",
        "createdAt" : "2017-01-23T17:57:31Z",
        "updatedAt" : "2017-01-23T22:53:04Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "c60809aead9a5d2db3bbad09c1897798018bb69c",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +228,232 @@\tNamespaceNone string = \"\"\n\t// NamespaceSystem is the system namespace where we place system components.\n\tNamespaceSystem string = \"kube-system\"\n)\n"
  }
]