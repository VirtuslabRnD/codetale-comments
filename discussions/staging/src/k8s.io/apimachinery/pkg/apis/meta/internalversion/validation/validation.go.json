[
  {
    "id" : "8658eeb3-3185-40f7-b24a-a08376fbe33f",
    "prId" : 91505,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91505#pullrequestreview-429439903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2742367a-465d-498f-9e4e-8f3e7d2e234d",
        "parentId" : null,
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "Adding validation on this internalversion is almost certainly wrong, but I was unclear on what to do instead. Some options I've thought of are:\r\n- Put validation inside the converter\r\n- Instead of decoding parameters directly to internalversion, decode to v1, then validate, then decode in: https://github.com/kubernetes/kubernetes/blob/ae1103726f9aea1f9bbad1b215edfa47e0747dce/staging/src/k8s.io/apiserver/pkg/endpoints/handlers/get.go#L194-L199\r\n\r\nAny suggestions?",
        "createdAt" : "2020-05-29T19:04:37Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "82cdf3f5-cd4d-4498-b1c0-7028e1efd834",
        "parentId" : "2742367a-465d-498f-9e4e-8f3e7d2e234d",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Actually, we do validate internal types, e.g.:\r\nhttps://github.com/kubernetes/kubernetes/tree/master/pkg/apis/core/validation\r\n\r\nI think that validating internalversion is consistent with everything else, but it's better to ask @liggitt ",
        "createdAt" : "2020-05-29T19:27:46Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "dc865b5e-6429-4aa6-bfdb-09cec0842fc9",
        "parentId" : "2742367a-465d-498f-9e4e-8f3e7d2e234d",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "For the other `*Options` types, we don't have an internal version, so their validation methods live at `staging/src/k8s.io/apimachinery/pkg/apis/meta/v1/validation/validation.go`. It looks like the only reason we have a distinct internal `ListOptions` type is for the label/field selector decoding, which apparently happens during conversion.\r\n\r\nValidation paired with the type we decode into is correct, so this location is fine.",
        "createdAt" : "2020-06-12T04:42:59Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "04676ff58cf0df69a9e098d0f2585073de81cef7",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +24,28 @@\n// ValidateListOptions returns all validation errors found while validating the ListOptions.\nfunc ValidateListOptions(options *internalversion.ListOptions) field.ErrorList {\n\tallErrs := field.ErrorList{}\n\tif match := options.ResourceVersionMatch; len(match) > 0 {"
  },
  {
    "id" : "62638332-71d2-40b5-a78c-fdb11825206e",
    "prId" : 91505,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91505#pullrequestreview-437556290",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86de7345-9237-4150-a413-03d61225e732",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "nit, these would be easier to read if nested inside a common block:\r\n```go\r\nif match := options.ResourceVersionMatch; len(match) > 0 {\r\n  if options.Watch {\r\n    allErrs = append(allErrs, field.Forbidden...\r\n  }\r\n\r\n  if len(options.ResourceVersion) == 0 {\r\n    allErrs = append(allErrs, field.Forbidden...\r\n  }\r\n\r\n  if len(options.Continue) > 0 {\r\n    allErrs = append(allErrs, field.Forbidden...\r\n  }\r\n\r\n  if match != metav1.ResourceVersionMatchExact && match != metav1.ResourceVersionMatchNotOlderThan {\r\n    allErrs = append(allErrs, field.NotSupported...\r\n  }\r\n}\r\n```",
        "createdAt" : "2020-06-25T17:03:57Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "04676ff58cf0df69a9e098d0f2585073de81cef7",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@// ValidateListOptions returns all validation errors found while validating the ListOptions.\nfunc ValidateListOptions(options *internalversion.ListOptions) field.ErrorList {\n\tallErrs := field.ErrorList{}\n\tif match := options.ResourceVersionMatch; len(match) > 0 {\n\t\tif options.Watch {"
  }
]