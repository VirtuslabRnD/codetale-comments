[
  {
    "id" : "5a7de273-61ef-4bfe-98a5-8744b7c7b745",
    "prId" : 40389,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40389#pullrequestreview-18655703",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92037999-68b7-4fbd-a75d-a53b3389aaa9",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Why do we have a dedicated `ListOptions` type, but not for the other three?",
        "createdAt" : "2017-01-25T06:35:00Z",
        "updatedAt" : "2017-01-27T06:25:41Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "c8985faa-f304-41df-ad83-396bd830d88e",
        "parentId" : "92037999-68b7-4fbd-a75d-a53b3389aaa9",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "We convert labels and fields into their internal form once, rather than having to parse it.  The storage paths use the selectors.",
        "createdAt" : "2017-01-25T21:42:19Z",
        "updatedAt" : "2017-01-27T06:25:41Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "68103a29-2a42-48ae-b8b4-94b33636e284",
        "parentId" : "92037999-68b7-4fbd-a75d-a53b3389aaa9",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "got it, so this is just an optimization because Get/Export/DeleteOption are (structurally) the same types internally and in v1, but ListOptions are not (due to the selector parsing). A comment wouldn't harm here.",
        "createdAt" : "2017-01-26T08:44:53Z",
        "updatedAt" : "2017-01-27T06:25:41Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "65d8db20-1dca-4857-ba9e-db458ec16464",
        "parentId" : "92037999-68b7-4fbd-a75d-a53b3389aaa9",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yeah",
        "createdAt" : "2017-01-26T16:06:04Z",
        "updatedAt" : "2017-01-27T06:25:41Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "a591242061742bfb651cb25f2dc7b3da160f9a0c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +66,70 @@\tscheme.AddKnownTypes(SchemeGroupVersion,\n\t\t&ListOptions{},\n\t\t&metav1.GetOptions{},\n\t\t&metav1.ExportOptions{},\n\t\t&metav1.DeleteOptions{},"
  },
  {
    "id" : "1d5ef029-483a-4b7a-8f8d-9f6f3fea1010",
    "prId" : 40178,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40178#pullrequestreview-17954851",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00549f1d-c9bb-4a7c-a669-6fb9394b1a0b",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Is this an intermediate step or do you anticipate parameters having their own scheme?  If so, can I get an updated comment and a better name when you rebase?",
        "createdAt" : "2017-01-23T13:32:38Z",
        "updatedAt" : "2017-01-23T22:53:04Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "890da18c-5e1e-4f61-9ca3-dedd3f4cbe9d",
        "parentId" : "00549f1d-c9bb-4a7c-a669-6fb9394b1a0b",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I think meta will have a scheme for the generic clients and generic server code - basically the server *stops* looking at the normal scheme for standard types (things that *must* behave a certain way in meta/v1 compatible servers).  That would include other things besides parameters.",
        "createdAt" : "2017-01-23T15:57:15Z",
        "updatedAt" : "2017-01-23T22:53:04Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "c60809aead9a5d2db3bbad09c1897798018bb69c",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +28,32 @@\n// Scheme is the registry for any type that adheres to the meta API spec.\nvar scheme = runtime.NewScheme()\n\n// Codecs provides access to encoding and decoding for the scheme"
  }
]