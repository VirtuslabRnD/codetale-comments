[
  {
    "id" : "54cdb13b-32f1-4d9f-990c-371607eeafb0",
    "prId" : 45543,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45543#pullrequestreview-37230942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53d80ece-d9bb-43e0-9420-5ba085899792",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Is it necessary to log the externalGoType? We know where the unit tests are located.",
        "createdAt" : "2017-05-09T16:48:03Z",
        "updatedAt" : "2017-05-10T12:45:15Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "3ac04e98-b68b-4bcf-ab96-c55aa261173f",
        "parentId" : "53d80ece-d9bb-43e0-9420-5ba085899792",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "It's just copying what the func above does for internal types. Would like to keep it symmetric.",
        "createdAt" : "2017-05-10T07:42:52Z",
        "updatedAt" : "2017-05-10T12:45:15Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "b498019f2f7aebe1c0e5c0d7a825069e25650fc6",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +228,232 @@\n\texternalGoType := reflect.TypeOf(object).PkgPath()\n\tt.Logf(\"\\tround tripping external type %v %v\", externalGVK, externalGoType)\n\n\ttypeAcc.SetKind(externalGVK.Kind)"
  },
  {
    "id" : "fb76f0e6-d8c0-4167-81f0-b71901f3aa55",
    "prId" : 45543,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45543#pullrequestreview-37232256",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85b840a3-862f-4943-8b74-59b855d6b3b7",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "This is a round-trip of marshalling/unmarshalling. Could you update the comment on `roundTrip`? I think it used to mean internal->external->internal.",
        "createdAt" : "2017-05-09T16:50:47Z",
        "updatedAt" : "2017-05-10T12:45:15Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "61f33a74-cc91-4672-b611-48ea22aa1b5b",
        "parentId" : "85b840a3-862f-4943-8b74-59b855d6b3b7",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "done",
        "createdAt" : "2017-05-10T07:49:52Z",
        "updatedAt" : "2017-05-10T12:45:15Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "b498019f2f7aebe1c0e5c0d7a825069e25650fc6",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +233,237 @@\ttypeAcc.SetAPIVersion(externalGVK.GroupVersion().String())\n\n\troundTrip(t, scheme, json.NewSerializer(json.DefaultMetaFactory, scheme, scheme, false), object)\n\n\t// TODO remove this hack after we're past the intermediate steps"
  },
  {
    "id" : "bb7123b8-4a95-4f35-84ae-d31d929d0d8c",
    "prId" : 41466,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41466#pullrequestreview-21990849",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf9dd4d1-35b5-4562-b38a-1edca1a8ec39",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Clever.",
        "createdAt" : "2017-02-15T12:48:48Z",
        "updatedAt" : "2017-02-16T09:20:17Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a963b0da5be907985c7443341618967b60607c4",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +276,280 @@\t// do structure-preserving fuzzing of the deep-copied object. If it shares anything with the original,\n\t// the deep-copy was actually only a shallow copy. Then original and obj3 will be different after fuzzing.\n\t// NOTE: we use the encoding+decoding here as an alternative, guaranteed deep-copy to compare against.\n\tValueFuzz(object)\n\tif !apiequality.Semantic.DeepEqual(original, obj3) {"
  },
  {
    "id" : "8821e9fc-8943-475b-ba2f-ce676923acee",
    "prId" : 41201,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41201#pullrequestreview-21192778",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e71cb4a4-1ee0-4144-bbb6-e94edaa4ce4b",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "globalNonRoundTrippableTypes",
        "createdAt" : "2017-02-10T07:42:32Z",
        "updatedAt" : "2017-02-10T07:42:32Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a74353118bcdc426ff738096f4c1dd19243d7b2",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@var FuzzIters = flag.Int(\"fuzz-iters\", 20, \"How many fuzzing iterations to do.\")\n\n// nonRoundTrippableTypes are kinds that are effectively reserved across all GroupVersions\n// They don't roundtrip\nvar globalNonRoundTrippableTypes = sets.NewString("
  },
  {
    "id" : "d9dafd68-4e59-4349-b342-ed0a1c8c7625",
    "prId" : 41201,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41201#pullrequestreview-21192845",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f1ea25c-7226-4549-ab9b-af467252bc5c",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "RoundTripTypesWithoutProtobuf",
        "createdAt" : "2017-02-10T07:43:06Z",
        "updatedAt" : "2017-02-10T07:43:06Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a74353118bcdc426ff738096f4c1dd19243d7b2",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@)\n\n// RoundTripTypes applies the round-trip test to all round-trippable Kinds\n// in the scheme.  It will skip all the GroupVersionKinds in the skip list.\nfunc RoundTripTypesWithoutProtobuf(t *testing.T, scheme *runtime.Scheme, codecFactory runtimeserializer.CodecFactory, fuzzer *fuzz.Fuzzer, nonRoundTrippableTypes map[schema.GroupVersionKind]bool) {"
  },
  {
    "id" : "7619bf21-68c3-4368-9999-04dffd50cf4e",
    "prId" : 41201,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41201#pullrequestreview-21193824",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbac2bcb-e77c-4cdc-b370-e130c98269a2",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "return",
        "createdAt" : "2017-02-10T07:52:05Z",
        "updatedAt" : "2017-02-10T07:52:05Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a74353118bcdc426ff738096f4c1dd19243d7b2",
    "line" : 211,
    "diffHunk" : "@@ -1,1 +209,213 @@\tif err != nil {\n\t\tt.Errorf(\"0: %v: %v\\nCodec: %#v\\nData: %s\\nSource: %#v\", name, err, codec, dataAsString(data), printer.Sprintf(\"%#v\", object))\n\t\tpanic(\"failed\")\n\t}\n"
  },
  {
    "id" : "c6ead9f4-c084-4c97-85c3-6d6f51ee2cc8",
    "prId" : 41201,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41201#pullrequestreview-21194061",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84d098ac-418e-48dd-b8e1-9d60dad47426",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "move this above the encoding",
        "createdAt" : "2017-02-10T07:52:34Z",
        "updatedAt" : "2017-02-10T07:52:34Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "992cd11e-46fe-433e-8374-3c1131a3e0f1",
        "parentId" : "84d098ac-418e-48dd-b8e1-9d60dad47426",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "actually this test is also fulfilled by any shallow copy. We should create 2 copies, fuzz one and compare the other copy with the original.",
        "createdAt" : "2017-02-10T07:54:24Z",
        "updatedAt" : "2017-02-10T07:54:24Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a74353118bcdc426ff738096f4c1dd19243d7b2",
    "line" : 202,
    "diffHunk" : "@@ -1,1 +200,204 @@\t// copy or conversion should alter the object\n\t// TODO eliminate this global\n\tif !apiequality.Semantic.DeepEqual(original, object) {\n\t\tt.Errorf(\"0: %v: encode altered the object, diff: %v\", name, diff.ObjectReflectDiff(original, object))\n\t\treturn"
  },
  {
    "id" : "4fb3f3c0-6551-4897-83e3-017d305ec191",
    "prId" : 41201,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41201#pullrequestreview-21194100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e979b1c4-629d-45af-a0e3-84a0abc46bc2",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "no need for \\n",
        "createdAt" : "2017-02-10T07:54:50Z",
        "updatedAt" : "2017-02-10T07:54:50Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a74353118bcdc426ff738096f4c1dd19243d7b2",
    "line" : 217,
    "diffHunk" : "@@ -1,1 +215,219 @@\t// to the original object\n\tif !apiequality.Semantic.DeepEqual(original, obj2) {\n\t\tt.Errorf(\"\\n1: %v: diff: %v\\nCodec: %#v\\nSource:\\n\\n%#v\\n\\nEncoded:\\n\\n%s\\n\\nFinal:\\n\\n%#v\", name, diff.ObjectReflectDiff(object, obj2), codec, printer.Sprintf(\"%#v\", object), dataAsString(data), printer.Sprintf(\"%#v\", obj2))\n\t\treturn\n\t}"
  }
]