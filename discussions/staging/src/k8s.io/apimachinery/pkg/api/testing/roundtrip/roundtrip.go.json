[
  {
    "id" : "8effa17d-8ebb-499f-bc0c-c3035fb1b177",
    "prId" : 59592,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59592#pullrequestreview-103848762",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fa69439-bc9f-44ec-a095-15a98bf3755a",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "lgtm. Can we wire this somewhere?",
        "createdAt" : "2018-03-14T14:45:59Z",
        "updatedAt" : "2018-03-20T13:56:16Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c5aad0d6fe7a2ba845184cbeafb750971341eca",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +141,145 @@// RoundTripExternalTypes applies the round-trip test to all external round-trippable Kinds\n// in the scheme.  It will skip all the GroupVersionKinds in the nonRoundTripExternalTypes list .\nfunc RoundTripExternalTypes(t *testing.T, scheme *runtime.Scheme, codecFactory runtimeserializer.CodecFactory, fuzzer *fuzz.Fuzzer, nonRoundTrippableTypes map[schema.GroupVersionKind]bool) {\n\tkinds := scheme.AllKnownTypes()\n\tfor gvk := range kinds {"
  }
]