[
  {
    "id" : "ae62eea5-3201-4feb-bf1f-3fc233be4d0a",
    "prId" : 77355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77355#pullrequestreview-259189572",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8117fe46-3a5c-4b74-82c2-02216e408faa",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Did this get changed in the other generated methods?  I didn't see sovGenerated changing but maybe I just missed it?",
        "createdAt" : "2019-07-08T22:30:38Z",
        "updatedAt" : "2019-07-25T18:54:18Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "c2e50603-4b9b-4f85-ba9b-54db49a766fc",
        "parentId" : "8117fe46-3a5c-4b74-82c2-02216e408faa",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Nm, I see it now.",
        "createdAt" : "2019-07-08T22:32:11Z",
        "updatedAt" : "2019-07-25T18:54:18Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "6568325ca2bef519e5c8228cd33887660b5ed7b0",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +89,93 @@\nfunc sovGenerated(x uint64) (n int) {\n\treturn (bits.Len64(x|1) + 6) / 7\n}\n"
  },
  {
    "id" : "01509022-ab29-4819-83a5-87e63a2f7534",
    "prId" : 77355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77355#pullrequestreview-260337543",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2aa0ea3-29b9-4186-8e6a-39c0e87e02fd",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Can you check something for me and see whether this allocates a buffer on the heap still?  There should be a benchmark that catches this (either in this package or one of the precanned API object benchmarks for protobuf encode in api) - I just want to know if we're paying the cost here because it might be something to follow up on.",
        "createdAt" : "2019-07-08T22:36:10Z",
        "updatedAt" : "2019-07-25T18:54:18Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "e3be9de7-fbf7-459f-a3e7-71805c832aca",
        "parentId" : "a2aa0ea3-29b9-4186-8e6a-39c0e87e02fd",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "I ran this: `go test -benchmem -bench=. -run=NONE ./vendor/k8s.io/apimachinery/pkg/api/resource/`, if that's what you meant:\r\n\r\n```\r\n$ benchcmp before after\r\nbenchmark                              old ns/op     new ns/op     delta\r\nBenchmarkQuantityString-12             175           169           -3.43%\r\nBenchmarkQuantityStringPrecalc-12      13.9          13.8          -0.72%\r\nBenchmarkQuantityStringBinarySI-12     233           233           +0.00%\r\nBenchmarkQuantityMarshalJSON-12        163           151           -7.36%\r\nBenchmarkQuantityUnmarshalJSON-12      155           154           -0.65%\r\nBenchmarkParseQuantity-12              92.1          88.6          -3.80%\r\nBenchmarkCanonicalize-12               71.1          73.4          +3.23%\r\nBenchmarkQuantityRoundUp-12            15.1          15.4          +1.99%\r\nBenchmarkQuantityCopy-12               106           103           -2.83%\r\nBenchmarkQuantityAdd-12                24.4          24.2          -0.82%\r\nBenchmarkQuantityCmp-12                18.2          18.1          -0.55%\r\nBenchmarkScaledValueSmall-12           29.3          29.5          +0.68%\r\nBenchmarkScaledValueLarge-12           422           416           -1.42%\r\n\r\nbenchmark                              old allocs     new allocs     delta\r\nBenchmarkQuantityString-12             2              2              +0.00%\r\nBenchmarkQuantityStringPrecalc-12      0              0              +0.00%\r\nBenchmarkQuantityStringBinarySI-12     2              2              +0.00%\r\nBenchmarkQuantityMarshalJSON-12        1              1              +0.00%\r\nBenchmarkQuantityUnmarshalJSON-12      0              0              +0.00%\r\nBenchmarkParseQuantity-12              0              0              +0.00%\r\nBenchmarkCanonicalize-12               0              0              +0.00%\r\nBenchmarkQuantityRoundUp-12            0              0              +0.00%\r\nBenchmarkQuantityCopy-12               1              1              +0.00%\r\nBenchmarkQuantityAdd-12                0              0              +0.00%\r\nBenchmarkQuantityCmp-12                0              0              +0.00%\r\nBenchmarkScaledValueSmall-12           0              0              +0.00%\r\nBenchmarkScaledValueLarge-12           1              1              +0.00%\r\n\r\nbenchmark                              old bytes     new bytes     delta\r\nBenchmarkQuantityString-12             38            38            +0.00%\r\nBenchmarkQuantityStringPrecalc-12      0             0             +0.00%\r\nBenchmarkQuantityStringBinarySI-12     48            48            +0.00%\r\nBenchmarkQuantityMarshalJSON-12        35            35            +0.00%\r\nBenchmarkQuantityUnmarshalJSON-12      2             2             +0.00%\r\nBenchmarkParseQuantity-12              0             0             +0.00%\r\nBenchmarkCanonicalize-12               3             3             +0.00%\r\nBenchmarkQuantityRoundUp-12            0             0             +0.00%\r\nBenchmarkQuantityCopy-12               64            64            +0.00%\r\nBenchmarkQuantityAdd-12                0             0             +0.00%\r\nBenchmarkQuantityCmp-12                0             0             +0.00%\r\nBenchmarkScaledValueSmall-12           0             0             +0.00%\r\nBenchmarkScaledValueLarge-12           48            48            +0.00%\r\n```",
        "createdAt" : "2019-07-09T23:37:32Z",
        "updatedAt" : "2019-07-25T18:54:18Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "c65da0ae-1e62-4b91-a29d-007b9593231c",
        "parentId" : "a2aa0ea3-29b9-4186-8e6a-39c0e87e02fd",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Also went ahead and ran `go test -benchmem -bench=. -run=NONE ./pkg/api/testing/`:\r\n\r\n```\r\nbenchmark                                                                 old ns/op     new ns/op     delta\r\nBenchmarkPodConversion-12                                                 4432          4605          +3.90%\r\nBenchmarkNodeConversion-12                                                3273          3472          +6.08%\r\nBenchmarkReplicationControllerConversion-12                               5600          5331          -4.80%\r\nBenchmarkPodCopy-12                                                       2508          2554          +1.83%\r\nBenchmarkNodeCopy-12                                                      2809          2796          -0.46%\r\nBenchmarkReplicationControllerCopy-12                                     4205          4196          -0.21%\r\nBenchmarkPodDefaulting-12                                                 437           419           -4.12%\r\nBenchmarkEncodeCodecProtobuf-12                                           11513         8241          -28.42%\r\nBenchmarkEncodeCodecFromInternalProtobuf-12                               15171         13003         -14.29%\r\nBenchmarkEncodeProtobufGeneratedMarshal-12                                8330          6188          -25.71%\r\nBenchmarkDecodeCodecToInternalProtobuf-12                                 21978         21988         +0.05%\r\nBenchmarkDecodeIntoProtobuf-12                                            13171         12427         -5.65%\r\nBenchmarkEncodeCodec-12                                                   35009         34713         -0.85%\r\nBenchmarkEncodeCodecFromInternal-12                                       40051         40297         +0.61%\r\nBenchmarkEncodeJSONMarshal-12                                             32782         31155         -4.96%\r\nBenchmarkDecodeCodec-12                                                   87037         85525         -1.74%\r\nBenchmarkDecodeIntoExternalCodec-12                                       79725         79624         -0.13%\r\nBenchmarkDecodeIntoInternalCodec-12                                       83725         81673         -2.45%\r\nBenchmarkDecodeIntoJSON-12                                                93709         94136         +0.46%\r\nBenchmarkDecodeIntoJSONCodecGenConfigFast-12                              37114         37356         +0.65%\r\nBenchmarkDecodeIntoJSONCodecGenConfigCompatibleWithStandardLibrary-12     38612         39392         +2.02%\r\nBenchmarkToUnstructured-12                                                97176         100176        +3.09%\r\nBenchmarkFromUnstructured-12                                              79672         80252         +0.73%\r\nBenchmarkToUnstructuredViaJSON-12                                         118233        114007        -3.57%\r\nBenchmarkFromUnstructuredViaJSON-12                                       211835        205791        -2.85%\r\nBenchmarkToUnstructuredViaJSONIter/compat-12                              126203        129046        +2.25%\r\nBenchmarkToUnstructuredViaJSONIter/default-12                             106798        114387        +7.11%\r\nBenchmarkToUnstructuredViaJSONIter/fastest-12                             106302        100864        -5.12%\r\nBenchmarkFromUnstructuredViaJSONIter/compat-12                            189745        187042        -1.42%\r\nBenchmarkFromUnstructuredViaJSONIter/default-12                           85923         81076         -5.64%\r\nBenchmarkFromUnstructuredViaJSONIter/fastest-12                           69991         71748         +2.51%\r\n\r\nbenchmark                                                                 old allocs     new allocs     delta\r\nBenchmarkPodConversion-12                                                 11             11             +0.00%\r\nBenchmarkNodeConversion-12                                                8              8              +0.00%\r\nBenchmarkReplicationControllerConversion-12                               14             14             +0.00%\r\nBenchmarkPodCopy-12                                                       10             10             +0.00%\r\nBenchmarkNodeCopy-12                                                      7              7              +0.00%\r\nBenchmarkReplicationControllerCopy-12                                     15             15             +0.00%\r\nBenchmarkPodDefaulting-12                                                 0              0              +0.00%\r\nBenchmarkEncodeCodecProtobuf-12                                           9              9              +0.00%\r\nBenchmarkEncodeCodecFromInternalProtobuf-12                               14             13             -7.14%\r\nBenchmarkEncodeProtobufGeneratedMarshal-12                                7              7              +0.00%\r\nBenchmarkDecodeCodecToInternalProtobuf-12                                 91             91             +0.00%\r\nBenchmarkDecodeIntoProtobuf-12                                            82             82             +0.00%\r\nBenchmarkEncodeCodec-12                                                   40             40             +0.00%\r\nBenchmarkEncodeCodecFromInternal-12                                       45             45             +0.00%\r\nBenchmarkEncodeJSONMarshal-12                                             35             35             +0.00%\r\nBenchmarkDecodeCodec-12                                                   189            189            +0.00%\r\nBenchmarkDecodeIntoExternalCodec-12                                       184            184            +0.00%\r\nBenchmarkDecodeIntoInternalCodec-12                                       189            189            +0.00%\r\nBenchmarkDecodeIntoJSON-12                                                123            123            +0.00%\r\nBenchmarkDecodeIntoJSONCodecGenConfigFast-12                              128            128            +0.00%\r\nBenchmarkDecodeIntoJSONCodecGenConfigCompatibleWithStandardLibrary-12     173            172            -0.58%\r\nBenchmarkToUnstructured-12                                                199            199            +0.00%\r\nBenchmarkFromUnstructured-12                                              178            178            +0.00%\r\nBenchmarkToUnstructuredViaJSON-12                                         305            305            +0.00%\r\nBenchmarkFromUnstructuredViaJSON-12                                       410            410            +0.00%\r\nBenchmarkToUnstructuredViaJSONIter/compat-12                              422            422            +0.00%\r\nBenchmarkToUnstructuredViaJSONIter/default-12                             403            403            +0.00%\r\nBenchmarkToUnstructuredViaJSONIter/fastest-12                             393            394            +0.25%\r\nBenchmarkFromUnstructuredViaJSONIter/compat-12                            550            550            +0.00%\r\nBenchmarkFromUnstructuredViaJSONIter/default-12                           268            268            +0.00%\r\nBenchmarkFromUnstructuredViaJSONIter/fastest-12                           184            184            +0.00%\r\n\r\nbenchmark                                                                 old bytes     new bytes     delta\r\nBenchmarkPodConversion-12                                                 2685          2685          +0.00%\r\nBenchmarkNodeConversion-12                                                1696          1696          +0.00%\r\nBenchmarkReplicationControllerConversion-12                               3152          3152          +0.00%\r\nBenchmarkPodCopy-12                                                       2064          2064          +0.00%\r\nBenchmarkNodeCopy-12                                                      2256          2256          +0.00%\r\nBenchmarkReplicationControllerCopy-12                                     3000          3000          +0.00%\r\nBenchmarkPodDefaulting-12                                                 4             4             +0.00%\r\nBenchmarkEncodeCodecProtobuf-12                                           2662          2652          -0.38%\r\nBenchmarkEncodeCodecFromInternalProtobuf-12                               4038          4028          -0.25%\r\nBenchmarkEncodeProtobufGeneratedMarshal-12                                1373          1362          -0.80%\r\nBenchmarkDecodeCodecToInternalProtobuf-12                                 7050          7050          +0.00%\r\nBenchmarkDecodeIntoProtobuf-12                                            4536          4536          +0.00%\r\nBenchmarkEncodeCodec-12                                                   4380          4385          +0.11%\r\nBenchmarkEncodeCodecFromInternal-12                                       5800          5799          -0.02%\r\nBenchmarkEncodeJSONMarshal-12                                             4062          4065          +0.07%\r\nBenchmarkDecodeCodec-12                                                   10188         10188         +0.00%\r\nBenchmarkDecodeIntoExternalCodec-12                                       8923          8923          +0.00%\r\nBenchmarkDecodeIntoInternalCodec-12                                       10188         10188         +0.00%\r\nBenchmarkDecodeIntoJSON-12                                                7537          7537          +0.00%\r\nBenchmarkDecodeIntoJSONCodecGenConfigFast-12                              5645          5645          +0.00%\r\nBenchmarkDecodeIntoJSONCodecGenConfigCompatibleWithStandardLibrary-12     6365          6353          -0.19%\r\nBenchmarkToUnstructured-12                                                13793         13793         +0.00%\r\nBenchmarkFromUnstructured-12                                              6648          6648          +0.00%\r\nBenchmarkToUnstructuredViaJSON-12                                         20581         20580         -0.00%\r\nBenchmarkFromUnstructuredViaJSON-12                                       22965         22981         +0.07%\r\nBenchmarkToUnstructuredViaJSONIter/compat-12                              25231         25243         +0.05%\r\nBenchmarkToUnstructuredViaJSONIter/default-12                             19024         19023         -0.01%\r\nBenchmarkToUnstructuredViaJSONIter/fastest-12                             18818         18830         +0.06%\r\nBenchmarkFromUnstructuredViaJSONIter/compat-12                            44136         44128         -0.02%\r\nBenchmarkFromUnstructuredViaJSONIter/default-12                           12235         12227         -0.07%\r\nBenchmarkFromUnstructuredViaJSONIter/fastest-12                           10939         10938         -0.01%\r\n```",
        "createdAt" : "2019-07-09T23:42:22Z",
        "updatedAt" : "2019-07-25T18:54:18Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "17636431-7812-4b42-b504-fd8882e20802",
        "parentId" : "a2aa0ea3-29b9-4186-8e6a-39c0e87e02fd",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "The most relevant is this:\r\n```\r\nBenchmarkEncodeProtobufGeneratedMarshal-12      8330     6188       -25.71%\r\n```\r\n\r\nAbout 25% speed improvement when serializing a pod.",
        "createdAt" : "2019-07-10T17:26:02Z",
        "updatedAt" : "2019-07-25T18:54:18Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "be4d1ccd-6f6b-4aa8-a1b1-2c08d4c465bc",
        "parentId" : "a2aa0ea3-29b9-4186-8e6a-39c0e87e02fd",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yeah, allocations being the same was what I was looking for.",
        "createdAt" : "2019-07-10T20:27:33Z",
        "updatedAt" : "2019-07-25T18:54:18Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "6568325ca2bef519e5c8228cd33887660b5ed7b0",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +53,57 @@\n\t// BEGIN CUSTOM MARSHAL\n\tout := m.String()\n\ti -= len(out)\n\tcopy(data[i:], out)"
  }
]