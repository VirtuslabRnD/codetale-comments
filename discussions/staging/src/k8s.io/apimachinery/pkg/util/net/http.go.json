[
  {
    "id" : "175228cd-398f-4fac-9654-d18555f38510",
    "prId" : 95981,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95981#pullrequestreview-522140995",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d7c6d8b-b01c-469d-97a7-663101891352",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "It looks like it defaults to zero if the user doesn't set it, is that what you intended? It doesn't seem to match the comment.",
        "createdAt" : "2020-11-02T16:31:33Z",
        "updatedAt" : "2020-11-15T21:40:21Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "f278d718-15b8-4ed4-9b3e-d157ef6af033",
        "parentId" : "3d7c6d8b-b01c-469d-97a7-663101891352",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "This was to test if pull-kubernetes-e2e-gce-large-performance would pass if this feature was disabled (see https://github.com/kubernetes/kubernetes/pull/95981#issuecomment-720680851). Reverted now.",
        "createdAt" : "2020-11-03T01:24:05Z",
        "updatedAt" : "2020-11-15T21:40:21Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "15648f1a7b51584df96dd5d6a422545b7f0f146b",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +143,147 @@func readIdleTimeoutSeconds() int {\n\tret := 30\n\t// User can set the readIdleTimeout to 0 to disable the HTTP/2\n\t// connection health check.\n\tif s := os.Getenv(\"HTTP2_READ_IDLE_TIMEOUT_SECONDS\"); len(s) > 0 {"
  },
  {
    "id" : "bc1b570f-5d61-4803-bab2-eb3bb1fb0b88",
    "prId" : 95981,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95981#pullrequestreview-522140505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6568200-0c15-44fc-875f-b457ec864773",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "How will we document this? We can only do this if we expect that basically no one will use it, which I hope is the case.",
        "createdAt" : "2020-11-02T16:32:20Z",
        "updatedAt" : "2020-11-15T21:40:21Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "cc6b4aaa-ad02-4970-a7e2-8687dd9b1086",
        "parentId" : "e6568200-0c15-44fc-875f-b457ec864773",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "> if we expect that basically no one will use it.\r\n\r\nThat's my assumption. Also this is similar to the [DISABLE_HTTP2](https://github.com/kubernetes/kubernetes/blob/43edb4063262751bbb6ba18daf3fe9582ae3b2f9/staging/src/k8s.io/apimachinery/pkg/util/net/http.go#L132) env var.",
        "createdAt" : "2020-11-03T01:22:05Z",
        "updatedAt" : "2020-11-15T21:40:21Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "15648f1a7b51584df96dd5d6a422545b7f0f146b",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +145,149 @@\t// User can set the readIdleTimeout to 0 to disable the HTTP/2\n\t// connection health check.\n\tif s := os.Getenv(\"HTTP2_READ_IDLE_TIMEOUT_SECONDS\"); len(s) > 0 {\n\t\ti, err := strconv.Atoi(s)\n\t\tif err != nil {"
  },
  {
    "id" : "3d79148c-a4a8-4243-8038-c06b2814f725",
    "prId" : 92941,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92941#pullrequestreview-445896090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cc27e07-95de-4f59-9603-ad2f63f68168",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This change doesn't immediately seem related to the release note, but seems ok.",
        "createdAt" : "2020-07-09T19:11:44Z",
        "updatedAt" : "2020-07-09T19:11:44Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f991f8a2f5a73d51683ce064b97324f83661621",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +454,458 @@\t\t// Only follow redirects to the same host. Otherwise, propagate the redirect response back.\n\t\tif requireSameHostRedirects && location.Hostname() != originalLocation.Hostname() {\n\t\t\treturn nil, nil, fmt.Errorf(\"hostname mismatch: expected %s, found %s\", originalLocation.Hostname(), location.Hostname())\n\t\t}\n"
  },
  {
    "id" : "a9bf7485-15d6-400b-92fc-2f6982e97b0d",
    "prId" : 87167,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87167#pullrequestreview-344915244",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a40b979-9cca-4d6b-8d2c-6c08615078f7",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "It looks like the only other usage of this is for trace logging, e.g. here:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/b008eda8b2dc0fdd884cb56065f7f1667a970a16/staging/src/k8s.io/apiserver/pkg/endpoints/handlers/get.go#L52\r\n\r\nDid you do a survey?",
        "createdAt" : "2020-01-14T01:32:17Z",
        "updatedAt" : "2020-01-15T01:29:24Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "5b3dd772-443d-49b5-9f74-538f5d969755",
        "parentId" : "1a40b979-9cca-4d6b-8d2c-6c08615078f7",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "I did a search, is that what you mean? The ClientIP logic doesn't change.",
        "createdAt" : "2020-01-15T01:17:01Z",
        "updatedAt" : "2020-01-15T01:29:24Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "8029d86b-dd38-4a74-a174-b9552e8a9d4b",
        "parentId" : "1a40b979-9cca-4d6b-8d2c-6c08615078f7",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Yup, thanks.",
        "createdAt" : "2020-01-18T01:29:15Z",
        "updatedAt" : "2020-01-18T01:29:15Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6821bd2926e44f25140c48e92c34a1034d0d9c0",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +212,216 @@// The req.RemoteAddr is always the last IP in the returned list.\n// It returns nil if all of these are empty or invalid.\nfunc SourceIPs(req *http.Request) []net.IP {\n\tvar srcIPs []net.IP\n"
  },
  {
    "id" : "f2ea73e8-a78b-42a0-b678-d50bfa112654",
    "prId" : 87167,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87167#pullrequestreview-366881735",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "137b80e2-9ced-4fcd-a859-cf3e4aae1f82",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Should x-real-ip  be prepended?",
        "createdAt" : "2020-01-14T01:38:35Z",
        "updatedAt" : "2020-01-15T01:29:24Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "77cf43ea-57e9-4413-b0fd-e0906f2a9b56",
        "parentId" : "137b80e2-9ced-4fcd-a859-cf3e4aae1f82",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Probably, except that would change the logic of ClientIP. Maybe the solution is to just break the dependency of ClientIP on SourceIPs, what do you think?",
        "createdAt" : "2020-01-15T01:17:44Z",
        "updatedAt" : "2020-01-15T01:29:24Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "fc44a185-cad8-42f7-a820-32048be65932",
        "parentId" : "137b80e2-9ced-4fcd-a859-cf3e4aae1f82",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Doesn't prepending it preserve ClientIP behavior? Before this change, it is always returned by ClientIP if present. To maintain that behavior, it needs to be prepended.",
        "createdAt" : "2020-01-21T18:07:08Z",
        "updatedAt" : "2020-01-21T18:07:08Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "762fadd4-2d22-47ac-88d9-dc394701d9cf",
        "parentId" : "137b80e2-9ced-4fcd-a859-cf3e4aae1f82",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "See:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/a9c7529f990159ef327716e7c61984d5b7197115/staging/src/k8s.io/apimachinery/pkg/util/net/http.go#L260-L266",
        "createdAt" : "2020-02-28T17:37:43Z",
        "updatedAt" : "2020-02-28T17:37:44Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "05b51812-9c5d-4994-98d6-c3cf0e6b4f46",
        "parentId" : "137b80e2-9ced-4fcd-a859-cf3e4aae1f82",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "| X-Forwarded-For | X-Real-IP | GetClientIP original | GetClientIP appended | GetClientIP prepended|\r\n|--|--|--|--|--|\r\n| true | true | first x-forwarded-for ip | first x-forwarded-for ip | x-real-ip |\r\n| true | false | first x-forwarded-for ip | first x-forwarded-for ip | first x-forwarded-for ip |\r\n| false | true | x-real-ip | x-real-ip | x-real-ip |\r\n| false | false | remote ip | remote ip | remote ip |\r\n\r\nPlease double check my logic, but I think in the case when both the x-forwarded-for & x-real-ip is provided, the x-real-ip needs to be appended to be consistent with the original GetClientIP behavior.",
        "createdAt" : "2020-02-28T23:32:26Z",
        "updatedAt" : "2020-02-28T23:32:27Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "6526901b-a4ae-4822-8619-a384232bdc0a",
        "parentId" : "137b80e2-9ced-4fcd-a859-cf3e4aae1f82",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Ah ya, you are right. Thanks for the truth table :). I think I was overlooking the early return of forwarded for.",
        "createdAt" : "2020-03-01T19:50:24Z",
        "updatedAt" : "2020-03-01T19:50:24Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6821bd2926e44f25140c48e92c34a1034d0d9c0",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +236,240 @@\t\t// Only append the X-Real-Ip if it's not already contained in the X-Forwarded-For chain.\n\t\tif ip != nil && !containsIP(srcIPs, ip) {\n\t\t\tsrcIPs = append(srcIPs, ip)\n\t\t}\n\t}"
  },
  {
    "id" : "ce50ba20-8d5c-41a4-b00c-7f13ab99983a",
    "prId" : 87167,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87167#pullrequestreview-344915309",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "977caa54-fe0c-4c38-8a14-60cc0f873a09",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Existing, but I don't see how this could ever be hit.",
        "createdAt" : "2020-01-14T01:44:35Z",
        "updatedAt" : "2020-01-15T01:29:24Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "43d34c1c-d51f-4c83-aa36-0bb5d40b46cf",
        "parentId" : "977caa54-fe0c-4c38-8a14-60cc0f873a09",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Sorry, I don't follow - what do you mean by \"Existing\"?",
        "createdAt" : "2020-01-15T01:19:17Z",
        "updatedAt" : "2020-01-15T01:29:24Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "d8abc2b6-0c75-48ad-aad7-1e12d550ed2d",
        "parentId" : "977caa54-fe0c-4c38-8a14-60cc0f873a09",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Just that this existed before your change. A comment on pre-existing code.",
        "createdAt" : "2020-01-18T01:29:51Z",
        "updatedAt" : "2020-01-18T01:29:52Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6821bd2926e44f25140c48e92c34a1034d0d9c0",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +250,254 @@\tif remoteIP == nil {\n\t\tremoteIP = net.ParseIP(req.RemoteAddr)\n\t}\n\n\t// Don't duplicate remote IP if it's already the last address in the chain."
  },
  {
    "id" : "ccb44fbf-f7a7-420b-8cf8-43f8897f45bb",
    "prId" : 82090,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82090#pullrequestreview-281109713",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3bca7beb-2398-481d-bf6b-09e2015f1fca",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Where is this behavior unit tested?",
        "createdAt" : "2019-08-28T19:43:02Z",
        "updatedAt" : "2019-08-28T21:19:36Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "ad211e20-618f-46ec-9fc3-ca7074ed344f",
        "parentId" : "3bca7beb-2398-481d-bf6b-09e2015f1fca",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "unit test added",
        "createdAt" : "2019-08-28T21:19:36Z",
        "updatedAt" : "2019-08-28T21:19:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddc697866afd1e58cd2ee504277b405052546202",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +115,119 @@\tif s := os.Getenv(\"DISABLE_HTTP2\"); len(s) > 0 {\n\t\tklog.Infof(\"HTTP2 has been explicitly disabled\")\n\t} else if allowsHTTP2(t) {\n\t\tif err := http2.ConfigureTransport(t); err != nil {\n\t\t\tklog.Warningf(\"Transport failed http2 configuration: %v\", err)"
  },
  {
    "id" : "910689ec-c136-4d1e-86b8-70a1942e2f45",
    "prId" : 73032,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73032#pullrequestreview-194269245",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04d470b7-016a-4f04-94d5-b1324a2ba8c3",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Could we structure the warning with json rather than having our own format, and then escape things etc?",
        "createdAt" : "2019-01-18T16:09:25Z",
        "updatedAt" : "2020-06-11T20:05:33Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "b367f782-3776-477e-8548-a08b258ed1f7",
        "parentId" : "04d470b7-016a-4f04-94d5-b1324a2ba8c3",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Should it be an API type? Should we consider versioning it?",
        "createdAt" : "2019-01-18T16:47:40Z",
        "updatedAt" : "2020-06-11T20:05:33Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "40034f6c-2b8e-4172-b88e-de4a6e4c44fa",
        "parentId" : "04d470b7-016a-4f04-94d5-b1324a2ba8c3",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "This follows the RFC for `Warning` headers. I don't think we should add to that.",
        "createdAt" : "2019-01-18T20:25:05Z",
        "updatedAt" : "2020-06-11T20:05:33Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "df6608dc998f4b403f10433809dfbc78e20c890d",
    "line" : 209,
    "diffHunk" : "@@ -1,1 +672,676 @@}\n\nfunc NewWarningHeader(code int, agent, text string) (string, error) {\n\tif code < 0 || code > 999 {\n\t\treturn \"\", errors.New(\"code must be between 0 and 999\")"
  },
  {
    "id" : "4ff174f6-32eb-4e94-b27f-c30850561797",
    "prId" : 66516,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66516#pullrequestreview-158726558",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "347456de-c6d7-4ab4-ad88-58110cdaffbd",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Shouldn't you be returning an error?",
        "createdAt" : "2018-09-25T17:44:31Z",
        "updatedAt" : "2018-09-26T00:19:08Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "6c3070c6-2635-4aca-b2dc-d31bb882d8b9",
        "parentId" : "347456de-c6d7-4ab4-ad88-58110cdaffbd",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "No, this returns the redirect response back to the client. See the discussion on this comment thread: https://github.com/kubernetes/kubernetes/pull/66516#discussion_r210757111",
        "createdAt" : "2018-09-25T19:47:11Z",
        "updatedAt" : "2018-09-26T00:19:08Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "181cfbb4-014b-406d-b1a6-09631b430218",
        "parentId" : "347456de-c6d7-4ab4-ad88-58110cdaffbd",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Do you think code calling this function is prepared to get a redirection response?",
        "createdAt" : "2018-09-25T20:04:40Z",
        "updatedAt" : "2018-09-26T00:19:08Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "112db52a-95e7-41f7-951b-1ca2208bd3d8",
        "parentId" : "347456de-c6d7-4ab4-ad88-58110cdaffbd",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "(not to argue with @liggitt's comment-like in that thread, but... given what you told me in person I think it's probably right to go ahead and return the error, and just explicitly say that hostname to IP redirections (or vice versa) are not supported even if they happen to refer to the same thing.)",
        "createdAt" : "2018-09-25T20:06:52Z",
        "updatedAt" : "2018-09-26T00:19:08Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "0bb90465-362d-4d1b-979d-17708c719920",
        "parentId" : "347456de-c6d7-4ab4-ad88-58110cdaffbd",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "If the CRI returned a different internal host address, then returning that to the client would be meaningless, and an error response would make more sense. However, if the pod returns a redirect  to an external service (trivial example: a pod that just returns a redirect response to a different external web address), then the expected behavior would be that the client can follow that redirect.\r\n\r\n> Do you think code calling this function is prepared to get a redirection response?\r\n\r\n Looking at all the call sites, yes - it shouldn't be a problem. Also, this method only handles 302 redirects, so all other redirects were already being returned to the client.",
        "createdAt" : "2018-09-25T20:14:55Z",
        "updatedAt" : "2018-09-26T00:19:08Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "4232bd3f-e03a-446d-9ead-5b0b3c7fd799",
        "parentId" : "347456de-c6d7-4ab4-ad88-58110cdaffbd",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "OK, sounds great :)",
        "createdAt" : "2018-09-25T20:18:53Z",
        "updatedAt" : "2018-09-26T00:19:08Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ee9f007cbc88cca5fa3e8576ff951a52a248e3c",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +405,409 @@\t\t// Only follow redirects to the same host. Otherwise, propagate the redirect response back.\n\t\tif requireSameHostRedirects && location.Hostname() != originalLocation.Hostname() {\n\t\t\tbreak redirectLoop\n\t\t}\n"
  }
]