[
  {
    "id" : "5c42975b-eb31-46a3-b5e2-a60b53698ee2",
    "prId" : 89482,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89482#pullrequestreview-481282216",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ec9c322-fde7-4fe6-be73-671bd5ba7cd6",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Returning `isPercent ` here is a safe change for in-tree uses, since all the string values we pass to this method were already well-formatted percentages (see https://github.com/kubernetes/kubernetes/pull/89482#discussion_r482433865).\r\n\r\nHowever, this is a breaking change for callers that passed in numeric strings (e.g. \"10\"). Previously, that would return `10, true, nil`. Now it returns `10, false, nil`.\r\n\r\nSearching usages (https://grep.app/search?q=.GetValueFromIntOrPercent%28&filter[lang][0]=Go) this method is called externally.\r\n\r\nIf someone had documented their API to mean \"integers are treated as absolute values, strings are treated as percentages\", this change will break them.",
        "createdAt" : "2020-09-02T20:58:41Z",
        "updatedAt" : "2020-09-30T20:23:34Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "316eff8dee1bb7a5929a28bc07bace910bb0e126",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +231,235 @@\t\t\treturn 0, false, fmt.Errorf(\"invalid value %q: %v\", intOrStr.StrVal, err)\n\t\t}\n\t\treturn int(v), isPercent, nil\n\t}\n\treturn 0, false, fmt.Errorf(\"invalid type: neither int nor percentage\")"
  },
  {
    "id" : "498ef60e-aae4-439b-81ae-7763a56f2820",
    "prId" : 89482,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89482#pullrequestreview-493644658",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f491cbec-aace-4350-af9a-c415b87c4e38",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "we want to limit the bad code to this public method... I would recommend the following:\r\n\r\n1. inline the old `getIntOrPercentValue` definition into `GetValueFromIntOrPercent` (so we contain the bad behavior to a single method)\r\n2. fix `getIntOrPercentValue` to have the behavior we want\r\n3. add a new public method which calls to `getIntOrPercentValue` (a clear name will be tricky to choose), with godocs clearly explaining the behavior for int values, numeric string values, percent string values, and malformed string values\r\n4. mark `GetValueFromIntOrPercent` as deprecated (as you've done) and make sure there are no in-tree calls to it\r\n5. add godocs to `GetValueFromIntOrPercent` explaining in detail the problematic behavior and the reason to switch to the new public method",
        "createdAt" : "2020-09-14T15:32:01Z",
        "updatedAt" : "2020-09-30T20:23:34Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "22958f5e-c0b3-4759-91a3-22fd08afa5d3",
        "parentId" : "f491cbec-aace-4350-af9a-c415b87c4e38",
        "authorId" : "270a30a0-8bed-45d9-b1ed-0bf4f94400e7",
        "body" : "Is GetIntFromIntOrPercent a good name for the new method?",
        "createdAt" : "2020-09-14T15:41:51Z",
        "updatedAt" : "2020-09-30T20:23:34Z",
        "lastEditedBy" : "270a30a0-8bed-45d9-b1ed-0bf4f94400e7",
        "tags" : [
        ]
      },
      {
        "id" : "0759041a-f497-4be2-882c-95e64991afc5",
        "parentId" : "f491cbec-aace-4350-af9a-c415b87c4e38",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "not sure... `GetScaledValueFromIntOrPercent` might be a little clearer?",
        "createdAt" : "2020-09-14T15:56:53Z",
        "updatedAt" : "2020-09-30T20:23:34Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "acac48c2-42b0-4979-b8c9-fb91a85a8765",
        "parentId" : "f491cbec-aace-4350-af9a-c415b87c4e38",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "GetValueFromIntOrPercentEx\r\nGetValueFromIntOrPercentSafe\r\nGetValueFromIntOrPercentWithErrorChecking",
        "createdAt" : "2020-09-14T15:59:18Z",
        "updatedAt" : "2020-09-30T20:23:34Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "f2a16519-d9c3-420e-bcf8-69abc417510f",
        "parentId" : "f491cbec-aace-4350-af9a-c415b87c4e38",
        "authorId" : "270a30a0-8bed-45d9-b1ed-0bf4f94400e7",
        "body" : "Went with GetScaledValueFromIntOrPercent as that's effectively what the function does but as @liggitt said naming the new version of a function is tricky. ",
        "createdAt" : "2020-09-20T22:27:38Z",
        "updatedAt" : "2020-09-30T20:23:34Z",
        "lastEditedBy" : "270a30a0-8bed-45d9-b1ed-0bf4f94400e7",
        "tags" : [
        ]
      },
      {
        "id" : "c9513104-d90c-4c2c-ba7b-94304a154dfa",
        "parentId" : "f491cbec-aace-4350-af9a-c415b87c4e38",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "\"Scaled\" is a very confusing name for this function. It isn't scaling anything.",
        "createdAt" : "2020-09-22T16:29:45Z",
        "updatedAt" : "2020-09-30T20:23:34Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "316eff8dee1bb7a5929a28bc07bace910bb0e126",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +179,183 @@// strings with or without a percent symbol as a percentage value.\n// Deprecated\nfunc GetValueFromIntOrPercent(intOrPercent *IntOrString, total int, roundUp bool) (int, error) {\n\tif intOrPercent == nil {\n\t\treturn 0, errors.New(\"nil value for IntOrString\")"
  },
  {
    "id" : "053ec679-b233-4307-ad60-890ff297276a",
    "prId" : 89482,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89482#pullrequestreview-493654517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cba443d0-f8dd-430f-a40b-3b6f54c9a9fe",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "You seem to have changed the name of the old function? You need to keep the old function the same name to not accidentally fix load bearing bugs.",
        "createdAt" : "2020-09-22T16:35:00Z",
        "updatedAt" : "2020-09-30T20:23:34Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "8844167c-fee3-4c09-aed6-bc040cfc3aa7",
        "parentId" : "cba443d0-f8dd-430f-a40b-3b6f54c9a9fe",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "that is git diffing unfortunately... `GetValueFromIntOrPercent` in this PR maintains the old code by inlining the old getIntOrPercentValue implementation as-is",
        "createdAt" : "2020-09-22T16:36:51Z",
        "updatedAt" : "2020-09-30T20:23:34Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a6273827-ce33-4884-aa32-a19f9b523888",
        "parentId" : "cba443d0-f8dd-430f-a40b-3b6f54c9a9fe",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "(per my request at https://github.com/kubernetes/kubernetes/pull/89482#discussion_r488027200)",
        "createdAt" : "2020-09-22T16:37:38Z",
        "updatedAt" : "2020-09-30T20:23:34Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "47acabe8-2c5b-4f39-a98a-ff7fd4198d71",
        "parentId" : "cba443d0-f8dd-430f-a40b-3b6f54c9a9fe",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "oh, I see, the code looks the same because the function it called changed.",
        "createdAt" : "2020-09-22T16:40:42Z",
        "updatedAt" : "2020-09-30T20:23:34Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "692cba44-d439-468c-8de3-153247590119",
        "parentId" : "cba443d0-f8dd-430f-a40b-3b6f54c9a9fe",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "right, I wanted to contain the badness to the single deprecated exported method",
        "createdAt" : "2020-09-22T16:41:49Z",
        "updatedAt" : "2020-09-30T20:23:34Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "316eff8dee1bb7a5929a28bc07bace910bb0e126",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +157,161 @@// in accordance to the total, if it's an int value it's treated as a a simple value and\n// if it is a string value which is either non-numeric or numeric but lacking a trailing '%' it returns an error.\nfunc GetScaledValueFromIntOrPercent(intOrPercent *IntOrString, total int, roundUp bool) (int, error) {\n\tif intOrPercent == nil {\n\t\treturn 0, errors.New(\"nil value for IntOrString\")"
  },
  {
    "id" : "1aec5f57-28e0-4e76-a186-c5d1599368bf",
    "prId" : 89482,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89482#pullrequestreview-493688949",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad11f7c7-2656-47f4-b168-091598fc9b95",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Can we delete the roundUp parameter and return a float?\r\n\r\nSince we have to change call sites anyway, and the \"rounding\" done here is not good :)",
        "createdAt" : "2020-09-22T16:44:30Z",
        "updatedAt" : "2020-09-30T20:23:34Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "3aa1da8c-193f-48a4-934e-95fe680c4ffe",
        "parentId" : "ad11f7c7-2656-47f4-b168-091598fc9b95",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Wait, I think I misunderstood what this does given that \"total\" is passed in. I have to run and will look more later.",
        "createdAt" : "2020-09-22T16:50:45Z",
        "updatedAt" : "2020-09-30T20:23:34Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "c083a7d3-8785-40fe-9dd9-aeb6d22d7085",
        "parentId" : "ad11f7c7-2656-47f4-b168-091598fc9b95",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "OK I see now that I completely misunderstood what this function does, so sorry for the noise. Given that this is returning a specific number of things, the \"scaled\" name and rounding makes more sense.\r\n\r\nThe rounding still doesn't make a lot of sense abstractly, because actually choosing between floor and ceil is not the same as rounding. But I won't ask for a change, since it makes some sense if you're consuming discreet thingies.",
        "createdAt" : "2020-09-22T17:25:38Z",
        "updatedAt" : "2020-09-30T20:23:34Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "316eff8dee1bb7a5929a28bc07bace910bb0e126",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +157,161 @@// in accordance to the total, if it's an int value it's treated as a a simple value and\n// if it is a string value which is either non-numeric or numeric but lacking a trailing '%' it returns an error.\nfunc GetScaledValueFromIntOrPercent(intOrPercent *IntOrString, total int, roundUp bool) (int, error) {\n\tif intOrPercent == nil {\n\t\treturn 0, errors.New(\"nil value for IntOrString\")"
  },
  {
    "id" : "27dfa647-50ae-44d0-945d-3800fecd1bac",
    "prId" : 67493,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67493#pullrequestreview-147637162",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ec4f961-2c24-4ee6-91a0-63034f425901",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "If you had a \r\n\r\n```go\r\nfunc NewZero() *IntOrPercent{\r\n    return the equivalent of zero\r\n}\r\n\r\nValOrDefault(intOrPercent *IntOrString, defaultValue *IntOrString){\r\n  if intOrPercent == nil{\r\n       return defaultValue\r\n    }\r\n}\r\n```\r\n\r\nThen you could use it in the above case and whereever it is in downstream too, right?",
        "createdAt" : "2018-08-17T20:04:20Z",
        "updatedAt" : "2018-08-20T13:16:29Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "c17f8f49-dbea-4785-92ad-2d3e81fe1312",
        "parentId" : "8ec4f961-2c24-4ee6-91a0-63034f425901",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Yeah, that make sense. Althogh `NewZero` is not needed we have `FromInt` and `FromString` helpers that should do it.",
        "createdAt" : "2018-08-20T13:15:01Z",
        "updatedAt" : "2018-08-20T13:16:36Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "53b4c6387a0a9aa1e39b703eb95cab97c950e78c",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +143,147 @@\t}\n}\n\nfunc ValueOrDefault(intOrPercent *IntOrString, defaultValue IntOrString) *IntOrString {\n\tif intOrPercent == nil {"
  }
]