[
  {
    "id" : "ee06218d-c846-4abd-8eff-e8feccaf7869",
    "prId" : 90172,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90172#pullrequestreview-430113509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95d2dc06-101f-4864-8baa-d3cec6beb54d",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I think you need to special-case the trailing '.' if present",
        "createdAt" : "2020-05-12T22:37:02Z",
        "updatedAt" : "2020-05-12T22:40:19Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "4df4e244-1710-4324-9460-1f1b3d4e6f96",
        "parentId" : "95d2dc06-101f-4864-8baa-d3cec6beb54d",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Please use something like \"www.dns-sd.org.\" as the test case thockin suggested.\r\nSee http://www.dns-sd.org/TrailingDotsInDomainNames.html for reference.",
        "createdAt" : "2020-05-28T17:58:24Z",
        "updatedAt" : "2020-05-28T17:58:25Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "a3a389a7-78f4-4d79-ad70-f71be30386b5",
        "parentId" : "95d2dc06-101f-4864-8baa-d3cec6beb54d",
        "authorId" : "2c011222-daa4-484c-a9c9-5e7b7334d758",
        "body" : "@thockin @cheftako sorry if I misunderstood, but the trailing dot already exists since before\r\nhttps://github.com/kubernetes/kubernetes/blob/413bc1a1d238efb7c4ba9e3aac2c381c93295aec/staging/src/k8s.io/apimachinery/pkg/util/validation/validation_test.go#L554\r\n\r\nDo you mean that we need to add another trailing dot test case?",
        "createdAt" : "2020-06-01T00:06:34Z",
        "updatedAt" : "2020-06-01T00:06:35Z",
        "lastEditedBy" : "2c011222-daa4-484c-a9c9-5e7b7334d758",
        "tags" : [
        ]
      },
      {
        "id" : "bc54b098-61d5-4233-bd34-9651b1b8646c",
        "parentId" : "95d2dc06-101f-4864-8baa-d3cec6beb54d",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Nevermind.  I missed that we strip the trailing dot above.",
        "createdAt" : "2020-06-13T04:50:40Z",
        "updatedAt" : "2020-06-13T04:51:11Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "18856dace935db46d3ba84374ce23438922e272b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +107,111 @@\t\treturn append(allErrors, field.Invalid(fldPath, name, \"should be a domain with at least two segments separated by dots\"))\n\t}\n\tfor _, label := range strings.Split(name, \".\") {\n\t\tif errs := IsDNS1123Label(label); len(errs) > 0 {\n\t\t\treturn append(allErrors, field.Invalid(fldPath, label, strings.Join(errs, \",\")))"
  },
  {
    "id" : "5c728e31-ca18-4413-96be-51164663082d",
    "prId" : 84971,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84971#pullrequestreview-315183639",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "003e32f2-0909-46fd-8cf5-d485495a2252",
        "parentId" : null,
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "k8s/utils/net has a short cut function. I would strongly advise to replace this with\r\n`\r\nparse() => error result into invalid ip\r\n\r\n\r\nnetutils.IsIPv4()=> error result into invalid ipv4\r\n` ",
        "createdAt" : "2019-11-08T23:18:20Z",
        "updatedAt" : "2019-11-12T17:04:31Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "f907de6e-7e8d-498f-9c2c-d2e9f0ac459d",
        "parentId" : "003e32f2-0909-46fd-8cf5-d485495a2252",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "So I tried that out, but it may have had some unintended consequences. It added `k8s.io/utils` as a dependency of `k8s.io/apimachinery`, I'm not actually sure if that's an issue or not. The diff is in this commit: https://github.com/robscott/kubernetes/commit/9e282ee078cc817e350622401219028e2e77eaa1. @liggitt Do you know if adding `k8s.io/utils` as a dependency of `k8s.io/apimachinery` is something we're trying to avoid?",
        "createdAt" : "2019-11-11T18:50:31Z",
        "updatedAt" : "2019-11-12T17:04:31Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      },
      {
        "id" : "db4dd202-bb28-4858-bfb8-d6039d982276",
        "parentId" : "003e32f2-0909-46fd-8cf5-d485495a2252",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "k8s.io/utils is intentionally a leaf repo, so it should be OK IMO.",
        "createdAt" : "2019-11-11T19:16:04Z",
        "updatedAt" : "2019-11-12T17:04:31Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "ed2169d1-f8b1-492c-a30a-657281f624bf",
        "parentId" : "003e32f2-0909-46fd-8cf5-d485495a2252",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yeah, that's fine",
        "createdAt" : "2019-11-11T21:55:39Z",
        "updatedAt" : "2019-11-12T17:04:31Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d512fb3a-dc8f-4a51-a51a-ec57938da2de",
        "parentId" : "003e32f2-0909-46fd-8cf5-d485495a2252",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "Thanks to everyone for clarifying that! I'd wrongly assumed that was another repo sourced from k/k, but since I would actually need to add IPv4 functions to netutils to make it useful for these tests I've rolled back that change. I will try to find some time to file a PR on k/utils with those additions at some point, but it didn't seem reasonable to fit it in in time for this PR.",
        "createdAt" : "2019-11-11T22:03:02Z",
        "updatedAt" : "2019-11-12T17:04:31Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fa9981e0106d7f0d6f9c88fc49d4cdf779c95c1",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +313,317 @@func IsValidIPv4Address(fldPath *field.Path, value string) field.ErrorList {\n\tvar allErrors field.ErrorList\n\tip := net.ParseIP(value)\n\tif ip == nil || ip.To4() == nil {\n\t\tallErrors = append(allErrors, field.Invalid(fldPath, value, \"must be a valid IPv4 address\"))"
  },
  {
    "id" : "1e688f07-d522-4be2-8029-c36211d26650",
    "prId" : 84971,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84971#pullrequestreview-315214980",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72ed3082-5b93-452a-b66c-569890119f7d",
        "parentId" : null,
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "same as above.",
        "createdAt" : "2019-11-08T23:18:33Z",
        "updatedAt" : "2019-11-12T17:04:31Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "fa5602e2-15d8-4e26-8972-7cecda1082ee",
        "parentId" : "72ed3082-5b93-452a-b66c-569890119f7d",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "Will make a note of updating this in the future, but since the methods I'd actually need here only partially exist in netutils (no IPv4 methods), I rolled back to the initial implementation here. Will make a note of filing a PR against `k/utils` in the future, but it didn't seem worth holding up this PR for another one since there are other PRs already waiting for this to get in.",
        "createdAt" : "2019-11-11T23:24:27Z",
        "updatedAt" : "2019-11-12T17:04:31Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fa9981e0106d7f0d6f9c88fc49d4cdf779c95c1",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +324,328 @@\tvar allErrors field.ErrorList\n\tip := net.ParseIP(value)\n\tif ip == nil || ip.To4() != nil {\n\t\tallErrors = append(allErrors, field.Invalid(fldPath, value, \"must be a valid IPv6 address\"))\n\t}"
  },
  {
    "id" : "5258dcfe-edc5-4c8a-a155-5f544485ba3b",
    "prId" : 84091,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84091#pullrequestreview-306874072",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "942f5c7b-334f-47ac-bfa6-a1971ac981e6",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah, this function is probably just plain wrongly named. The purpose of this (IIRC) is to make people use meaningful group names. (not asking for a change unless you feel like adding a TODO)",
        "createdAt" : "2019-10-24T19:49:53Z",
        "updatedAt" : "2019-10-24T20:56:20Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "d6f261ad-b069-48df-8536-a99761861c71",
        "parentId" : "942f5c7b-334f-47ac-bfa6-a1971ac981e6",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "I think it's actually got a really similar purpose to what we're doing with EndpointSlices. The only place I can find it used is for validating webhooks (https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/admissionregistration/validation/validation.go#L262 and https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/admissionregistration/validation/validation.go#L310). It's a shame to have 2 functions so similar but just slightly different, but I can't think of a great alternative.",
        "createdAt" : "2019-10-24T20:12:47Z",
        "updatedAt" : "2019-10-24T20:56:20Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      },
      {
        "id" : "2d76aed7-77bc-444b-bda7-d7daa5646953",
        "parentId" : "942f5c7b-334f-47ac-bfa6-a1971ac981e6",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Oh, this is probably some copy-and-paste inheritance, then. It probably should actually be the function you just wrote, but changing it is tricky. Can you add a \"TODO: this function is deprecated and preserved until all callers migrate to IsFullyQualifiedDomainName; please don't add new callers\"",
        "createdAt" : "2019-10-24T20:20:08Z",
        "updatedAt" : "2019-10-24T20:56:20Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "3a857c7d-f351-4672-b9ac-48aa4603bd09",
        "parentId" : "942f5c7b-334f-47ac-bfa6-a1971ac981e6",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : ":+1: That makes sense, added that comment.",
        "createdAt" : "2019-10-24T21:24:48Z",
        "updatedAt" : "2019-10-24T21:24:48Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d410bd28c371fbb8c9b07feb8c4bc1fef018173f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +71,75 @@}\n\n// IsFullyQualifiedName checks if the name is fully qualified. This is similar\n// to IsFullyQualifiedDomainName but requires a minimum of 3 segments instead of\n// 2 and does not accept a trailing . as valid."
  },
  {
    "id" : "0a1fa824-6f39-4ce2-885a-7e706ce98181",
    "prId" : 84091,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84091#pullrequestreview-306873546",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "572e56b9-2178-48a8-8a19-c0a1216bbb29",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "https://golang.org/pkg/strings/#Count might be a bit more natural?",
        "createdAt" : "2019-10-24T19:51:53Z",
        "updatedAt" : "2019-10-24T20:56:20Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "11d601cf-2360-4682-8828-84867b952487",
        "parentId" : "572e56b9-2178-48a8-8a19-c0a1216bbb29",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "I tried that but it ended up not testing precisely the same thing this does. Since the function is trying to validate a number of segments, not a number of `.` we get a different answer for a string like `.` that has one `.` but 0 segments.",
        "createdAt" : "2019-10-24T21:23:46Z",
        "updatedAt" : "2019-10-24T21:23:46Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d410bd28c371fbb8c9b07feb8c4bc1fef018173f",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +104,108 @@\t\treturn append(allErrors, field.Invalid(fldPath, name, strings.Join(errs, \",\")))\n\t}\n\tif len(strings.Split(name, \".\")) < 2 {\n\t\treturn append(allErrors, field.Invalid(fldPath, name, \"should be a domain with at least two segments separated by dots\"))\n\t}"
  },
  {
    "id" : "0fab967d-b3de-439c-bc96-89473879c6b7",
    "prId" : 51283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51283#pullrequestreview-58758341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "457c7460-a6bd-4bc3-bc0f-9520e8af2d6b",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I renamed the function as it's used by the admission webhook validation as well.",
        "createdAt" : "2017-08-25T20:40:09Z",
        "updatedAt" : "2017-08-28T23:18:07Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "85ee09e4c901e9fcf725bb4797ea2b3c278ee96c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +71,75 @@\n// IsFullyQualifiedName checks if the name is fully qualified.\nfunc IsFullyQualifiedName(fldPath *field.Path, name string) field.ErrorList {\n\tvar allErrors field.ErrorList\n\tif len(name) == 0 {"
  },
  {
    "id" : "58732fc6-03df-415e-b5c4-88f87867dd0a",
    "prId" : 49587,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49587#pullrequestreview-52663890",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ba05eed-4166-45f5-bd3e-017e98f4f31c",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This reads slightly differently.  I don't really care one way or the other.\r\n\r\n@adellape recommendation on phrasing for a terse-ish api level error message?",
        "createdAt" : "2017-07-27T13:29:51Z",
        "updatedAt" : "2017-07-27T13:29:52Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "ff141bbf-58c8-43df-ba9f-4f89fc22ef58",
        "parentId" : "4ba05eed-4166-45f5-bd3e-017e98f4f31c",
        "authorId" : "d0c9f699-03d8-4367-9366-49bd1787669d",
        "body" : "If the distinction is that it cannot start with a numeric character, I don't have a better suggestion.",
        "createdAt" : "2017-07-27T13:58:07Z",
        "updatedAt" : "2017-07-27T13:58:07Z",
        "lastEditedBy" : "d0c9f699-03d8-4367-9366-49bd1787669d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d717bf53b9ce5bd1c3f5fe54f74fce1b679e08e3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +127,131 @@\nconst dns1035LabelFmt string = \"[a-z]([-a-z0-9]*[a-z0-9])?\"\nconst dns1035LabelErrMsg string = \"a DNS-1035 label must consist of lower case alphanumeric characters or '-', start with an alphabetic character, and end with an alphanumeric character\"\nconst DNS1035LabelMaxLength int = 63\n"
  },
  {
    "id" : "bde94e9e-017a-4878-94a0-12b7bc519f6b",
    "prId" : 48986,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48986#pullrequestreview-51770844",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "674c3492-c752-45d9-adfe-c57477885588",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "This makes `.` and `..` valid names… does that cause any concerns?",
        "createdAt" : "2017-07-22T00:39:42Z",
        "updatedAt" : "2017-07-28T20:12:14Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "28e27726-4ecd-4cb9-9d19-84a35f9739fa",
        "parentId" : "674c3492-c752-45d9-adfe-c57477885588",
        "authorId" : "a108ef4e-ffb4-4060-8034-2cf30df3892e",
        "body" : "I can't fully judge on that on the Kubernetes end, though applications parsing such environment variables should not have any problems (if they decide to support names with leading dots). FWIW, ConfigMaps with leading dots are [still forbidden](https://github.com/kubernetes/kubernetes/blob/d86c267112f17cd0ded06c44db9308dd3375a553/staging/src/k8s.io/apimachinery/pkg/util/validation/validation.go#L294-L297).\r\n\r\nWould you like me to keep disallowing such names?",
        "createdAt" : "2017-07-24T11:46:16Z",
        "updatedAt" : "2017-07-28T20:12:14Z",
        "lastEditedBy" : "a108ef4e-ffb4-4060-8034-2cf30df3892e",
        "tags" : [
        ]
      },
      {
        "id" : "285625ca-0c3d-4ceb-81bf-0c9c210fdf2d",
        "parentId" : "674c3492-c752-45d9-adfe-c57477885588",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> FWIW, ConfigMaps with leading dots are still forbidden.\r\n\r\nA config map key may not be `.` or `..` or begin with `..`, but leading dots are otherwise allowed",
        "createdAt" : "2017-07-24T12:31:54Z",
        "updatedAt" : "2017-07-28T20:12:14Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "542bdba4-a649-4903-b7e9-3e339c39fa70",
        "parentId" : "674c3492-c752-45d9-adfe-c57477885588",
        "authorId" : "a108ef4e-ffb4-4060-8034-2cf30df3892e",
        "body" : "Yes, that's what I meant -- I was a bit sloppy, sorry.\r\n\r\nSo I understand we should stay on the safe side and make sure environment variables are subject to the same dot-specific restrictions. Will do that unless I hear objections.",
        "createdAt" : "2017-07-24T13:41:07Z",
        "updatedAt" : "2017-07-28T20:12:14Z",
        "lastEditedBy" : "a108ef4e-ffb4-4060-8034-2cf30df3892e",
        "tags" : [
        ]
      }
    ],
    "commit" : "604dfb319775090f715fbf2270ded63ce7474f15",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +278,282 @@}\n\nconst envVarNameFmt = \"[-._a-zA-Z][-._a-zA-Z0-9]*\"\nconst envVarNameFmtErrMsg string = \"a valid environment variable name must consist of alphabetic characters, digits, '_', '-', or '.', and must not start with a digit\"\n"
  }
]