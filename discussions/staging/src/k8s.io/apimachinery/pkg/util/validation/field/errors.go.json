[
  {
    "id" : "542967f6-2114-4a51-a463-1b9db62d623e",
    "prId" : 52383,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52383#pullrequestreview-68982521",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44e8a593-c4e1-4e68-83dc-9c14cdcaad8d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "any time quoting is involved, I'm biased to actually quote using `strconv.Quote`:\r\n\r\n```\r\n\tquotedValues := make([]string, len(validValues))\r\n\tfor i, v := range validValues {\r\n\t\tquotedValues[i] = strconv.Quote(v)\r\n\t}\r\n\tdetail = \"supported values: \" + strings.Join(quotedValues, \", \")\r\n```",
        "createdAt" : "2017-10-12T16:15:16Z",
        "updatedAt" : "2017-10-12T23:52:39Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7508afedd32369dc396da831e840a3ae0357349f",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +176,180 @@func NotSupported(field *Path, value interface{}, validValues []string) *Error {\n\tdetail := \"\"\n\tif validValues != nil && len(validValues) > 0 {\n\t\tquotedValues := make([]string, len(validValues))\n\t\tfor i, v := range validValues {"
  },
  {
    "id" : "36a42280-1746-47bc-807a-4c3862402cda",
    "prId" : 42253,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42253#pullrequestreview-24399386",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "255243e5-73bd-4247-a2f7-474b262a9181",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "How can value type be nil if value is not nil?",
        "createdAt" : "2017-03-01T03:31:27Z",
        "updatedAt" : "2017-03-01T03:31:27Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "601dec12-4eca-455a-98f9-321fcb0cd6f1",
        "parentId" : "255243e5-73bd-4247-a2f7-474b262a9181",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I guess it can't. I can remove the value compare if you want, it just saved me reasoning through reflection for simple cases.",
        "createdAt" : "2017-03-01T04:00:42Z",
        "updatedAt" : "2017-03-01T04:00:42Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "16a36012-c566-4d4c-a0e2-1f4c45bf1fd2",
        "parentId" : "255243e5-73bd-4247-a2f7-474b262a9181",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "It's some what confusing if it tricks some newb into thinking typeof can return nil, but it's not harmful ",
        "createdAt" : "2017-03-01T04:15:28Z",
        "updatedAt" : "2017-03-01T04:15:28Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "cfe1de34-4f18-4177-bd0b-0119b2a5544d",
        "parentId" : "255243e5-73bd-4247-a2f7-474b262a9181",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "reflect.TypeOf *can* return nil, but only when value is nil.",
        "createdAt" : "2017-03-01T04:27:25Z",
        "updatedAt" : "2017-03-01T04:27:25Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0cf9b0df5667b9086856c81e1928bad476d2eb64",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +52,56 @@\t\tvalue := v.BadValue\n\t\tvalueType := reflect.TypeOf(value)\n\t\tif value == nil || valueType == nil {\n\t\t\tvalue = \"null\"\n\t\t} else if valueType.Kind() == reflect.Ptr {"
  }
]