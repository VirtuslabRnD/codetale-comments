[
  {
    "id" : "32a01b7e-c249-44c9-afcf-ee8767c5bed6",
    "prId" : 98616,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98616#pullrequestreview-580790930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c40bd8b-ccf3-4dba-9816-99d21670c11a",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is no more correct than `GuessJSONStream` and still fails https://github.com/kubernetes/kubernetes/issues/78946",
        "createdAt" : "2021-02-01T20:10:41Z",
        "updatedAt" : "2021-02-01T20:10:42Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5aef6c13-87a0-4170-b866-c9c4ee807358",
        "parentId" : "2c40bd8b-ccf3-4dba-9816-99d21670c11a",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I'm not in any way addressing those other bugs.  This change isn't fixing known gaps with guess.",
        "createdAt" : "2021-02-01T21:37:08Z",
        "updatedAt" : "2021-02-01T21:37:09Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "84a62ffa-68bd-4d45-b8fa-f9e589fc594f",
        "parentId" : "2c40bd8b-ccf3-4dba-9816-99d21670c11a",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "(i'm all for improving guess as efficiently as possible, which means finding all callers and having them all consistently use a bigger buffer, but there is no solution other than reading it all into memory to get perfection)",
        "createdAt" : "2021-02-01T21:41:42Z",
        "updatedAt" : "2021-02-01T21:41:42Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f288610eba61dd7ea0eb85e6d8b755b2bccf92b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +344,348 @@}\n\n// IsJSONBuffer scans the provided buffer, looking\n// for an open brace indicating this is JSON.\nfunc IsJSONBuffer(buf []byte) bool {"
  },
  {
    "id" : "34d920e4-b4c8-49e4-bf14-de0170b655bc",
    "prId" : 95836,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95836#pullrequestreview-515818283",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2a90627-d382-4627-8d9d-5124d2d8f5fe",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "we should either:\r\n* make this consistent with util/json and handle all three types of interface objects, or\r\n* only set d.UseNumber() if v is a `*map[string]interface{}` and we're going to clean up the json.Number items",
        "createdAt" : "2020-10-23T15:42:02Z",
        "updatedAt" : "2020-10-24T09:36:37Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "bc9a3f08-9df0-470d-a8de-44122991dc17",
        "parentId" : "a2a90627-d382-4627-8d9d-5124d2d8f5fe",
        "authorId" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "body" : "Thanks for spotting! At first I thought to add only `*map[string]interface{}` until we have a use case for the others cases, however thinking about it I kind of like `yaml.Unmarshal` and `json.Unmarshal` to be consistent.\r\n\r\nWhat do you think about exposing all those `convert.*Numbers` methods?",
        "createdAt" : "2020-10-23T15:47:56Z",
        "updatedAt" : "2020-10-24T09:36:37Z",
        "lastEditedBy" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "tags" : [
        ]
      },
      {
        "id" : "25c9e57c-6731-4d66-a2eb-ac19cdc02ab1",
        "parentId" : "a2a90627-d382-4627-8d9d-5124d2d8f5fe",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yeah, I don't see a reason not to be consistent. that sounds good to me",
        "createdAt" : "2020-10-23T15:51:52Z",
        "updatedAt" : "2020-10-24T09:36:37Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "24465e62-dd90-4013-9fbd-8e977574c361",
        "parentId" : "a2a90627-d382-4627-8d9d-5124d2d8f5fe",
        "authorId" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "body" : "Cool, I have updated my commit and changed a bit the test as well.",
        "createdAt" : "2020-10-23T16:18:12Z",
        "updatedAt" : "2020-10-24T09:36:37Z",
        "lastEditedBy" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "tags" : [
        ]
      }
    ],
    "commit" : "04d972cb4bab108b12f181f86b7c0f0854a1037a",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +38,42 @@func Unmarshal(data []byte, v interface{}) error {\n\tpreserveIntFloat := func(d *json.Decoder) *json.Decoder {\n\t\td.UseNumber()\n\t\treturn d\n\t}"
  },
  {
    "id" : "211ce84e-f40d-4455-ad9f-344084d3ff07",
    "prId" : 38905,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38905#pullrequestreview-17314613",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ee4f86c-0d15-46e3-b843-9caa18349451",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This is fine.",
        "createdAt" : "2017-01-18T20:12:56Z",
        "updatedAt" : "2017-01-25T14:55:05Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce1200bf1f4b99907582cce4c6d31080303c33f8",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +243,247 @@\t\t\tstart := strings.LastIndex(js[:syntax.Offset], \"\\n\") + 1\n\t\t\tline := strings.Count(js[:start], \"\\n\")\n\t\t\treturn JSONSyntaxError{\n\t\t\t\tLine: line,\n\t\t\t\tErr:  fmt.Errorf(syntax.Error()),"
  }
]