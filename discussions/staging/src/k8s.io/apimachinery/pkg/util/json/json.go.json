[
  {
    "id" : "6a720e47-ffe1-4bd2-adf5-0b210051f36f",
    "prId" : 89833,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89833#pullrequestreview-387487004",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69860348-85ae-44b2-995d-0e6489eec8f9",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "could we see nil?",
        "createdAt" : "2020-04-03T18:22:42Z",
        "updatedAt" : "2020-04-04T02:20:17Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "b1223b2a-577e-4cfd-8118-4fc901f250d9",
        "parentId" : "69860348-85ae-44b2-995d-0e6489eec8f9",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "would fall through. But would make it explicit.",
        "createdAt" : "2020-04-03T18:23:30Z",
        "updatedAt" : "2020-04-04T02:20:17Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "b0ee0837-267f-433f-9d5f-1549852d9f48",
        "parentId" : "69860348-85ae-44b2-995d-0e6489eec8f9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "added TestUnmarshalNil just for you :)",
        "createdAt" : "2020-04-03T18:23:56Z",
        "updatedAt" : "2020-04-04T02:20:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ae082a6c-a7ca-491b-89de-cd90cf368bb7",
        "parentId" : "69860348-85ae-44b2-995d-0e6489eec8f9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "For our `json.Number -> int or float` transformation, a no-op on a nil is what we want.\r\n\r\nIf a nil is passed into Unmarshal(), our call to json.Unmarshal will error, we'll return early and we'll never make it here",
        "createdAt" : "2020-04-03T18:25:21Z",
        "updatedAt" : "2020-04-04T02:20:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "2e9a5a4b-5dd1-405a-b484-0717de2edd7e",
        "parentId" : "69860348-85ae-44b2-995d-0e6489eec8f9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> But would make it explicit.\r\n\r\nnot sure what you mean... the only three things we can transform are a json.Number, or a map or slice we can recurse into",
        "createdAt" : "2020-04-03T18:27:35Z",
        "updatedAt" : "2020-04-04T02:20:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b9165839f1f592262c6ac657649b0acff66d1e4",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +94,98 @@\t\terr = convertSliceNumbers(v2, depth+1)\n\t}\n\treturn err\n}\n"
  },
  {
    "id" : "e5dc14a7-c281-48d2-9cb0-a1c3eded8702",
    "prId" : 89833,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89833#pullrequestreview-391034238",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86386f31-e4b3-4c88-8770-a8c37cd81429",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "nit: comments don't add much, just the second one",
        "createdAt" : "2020-04-09T18:29:58Z",
        "updatedAt" : "2020-04-09T18:29:58Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "7a012692-63c0-4d46-a429-33b07e7b2e1f",
        "parentId" : "86386f31-e4b3-4c88-8770-a8c37cd81429",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "was a copy/paste from the other stanzas, I don't feel that strongly",
        "createdAt" : "2020-04-09T18:31:06Z",
        "updatedAt" : "2020-04-09T18:31:07Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b9165839f1f592262c6ac657649b0acff66d1e4",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +72,76 @@\t\t// Preserve numbers, rather than casting to float64 automatically\n\t\tdecoder.UseNumber()\n\t\t// Run the decode\n\t\tif err := decoder.Decode(v); err != nil {\n\t\t\treturn err"
  }
]