[
  {
    "id" : "f6a9296f-dec5-4998-8404-203d966c4230",
    "prId" : 84692,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84692#pullrequestreview-314641067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4e14f58-4eea-41bf-bf31-b045290297d0",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "what does it mean that params are ignored in these implementations?",
        "createdAt" : "2019-11-08T04:18:54Z",
        "updatedAt" : "2019-11-11T02:30:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "535b570e-ecc7-4507-afad-2f2cc32dda78",
        "parentId" : "b4e14f58-4eea-41bf-bf31-b045290297d0",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "It might mean `pretty` is broken.  I'll double check.",
        "createdAt" : "2019-11-10T18:56:17Z",
        "updatedAt" : "2019-11-11T02:30:50Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "a6f55506-bb5b-4083-b225-c0577e4a60bd",
        "parentId" : "b4e14f58-4eea-41bf-bf31-b045290297d0",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Pretty is handled in `NegotiateOutputMediaType`, none of the code that uses the client negotiator now previously handled Pretty.  I think that can be a follow up cleanup.",
        "createdAt" : "2019-11-10T19:08:15Z",
        "updatedAt" : "2019-11-11T02:30:50Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "73c74c8f-98a5-49f8-8bb3-0eada35c2612",
        "parentId" : "b4e14f58-4eea-41bf-bf31-b045290297d0",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Added a TODO",
        "createdAt" : "2019-11-10T19:09:02Z",
        "updatedAt" : "2019-11-11T02:30:50Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "48fbd882-8c7f-41c2-9cab-3a81bb2ca5af",
        "parentId" : "b4e14f58-4eea-41bf-bf31-b045290297d0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "it still feels broken to ignore the params... doesn't that mean it is really hard to use that to modify encoding/decoding in the future compatibly? Do we have scenarios that are populating these today? An initial implementation that returned an error if unknown params were required would make more sense to me (both for Encode/Decode/StreamDecoder)",
        "createdAt" : "2019-11-10T20:49:01Z",
        "updatedAt" : "2019-11-11T02:30:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5a44405a-dcc4-4b04-b1f4-94516b9cb064",
        "parentId" : "b4e14f58-4eea-41bf-bf31-b045290297d0",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This is no different than the old code.  Client previously ignored these during negotiation.  In a sense these are informational - the only behavior we key off of today is pretty (at a higher level).\r\n\r\nIf we did add future behavior here, it would be backward compatible because this is client focused and already has to depend on the values in serializer info.  If they were populated by a server (hypothetically) we'd completely ignore them on the way back, and then a client that was smarter would have to start handling them.  If we started failing in the client now on unrecognized options, it's possible that we'd be broken against one or more server implementations (although very unlikely).",
        "createdAt" : "2019-11-10T20:59:59Z",
        "updatedAt" : "2019-11-11T02:30:50Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "89181421-7487-4f8b-aa8b-c117fe8cd33d",
        "parentId" : "b4e14f58-4eea-41bf-bf31-b045290297d0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> If we started failing in the client now on unrecognized options, it's possible that we'd be broken against one or more server implementations\r\n\r\nYeah, that's what I was wondering (like a LB that rewrote to `Content-Type: application/json;charset=utf8` or something supposedly no-op)",
        "createdAt" : "2019-11-10T21:05:02Z",
        "updatedAt" : "2019-11-11T02:30:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b780c64b89606f4e6b21f48fb9c305d5998b9e5",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +42,46 @@}\n\nfunc (n *clientNegotiator) Encoder(contentType string, params map[string]string) (Encoder, error) {\n\t// TODO: `pretty=1` is handled in NegotiateOutputMediaType, consider moving it to this method\n\t// if client negotiators truly need to use it"
  }
]