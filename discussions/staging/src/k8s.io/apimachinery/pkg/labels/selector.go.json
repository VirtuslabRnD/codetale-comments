[
  {
    "id" : "2cec5a0a-25bb-4f69-83ed-c7960e7f38d7",
    "prId" : 89747,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89747#pullrequestreview-387378937",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f594d76-bb59-4d1f-b76e-69979d131447",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Set is a map[string]string; what's an example one that triggers an error here?",
        "createdAt" : "2020-04-01T22:43:10Z",
        "updatedAt" : "2020-04-01T23:53:30Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "5f317c16-3d7b-4f88-b61b-4edacf5b005d",
        "parentId" : "2f594d76-bb59-4d1f-b76e-69979d131447",
        "authorId" : "29b82984-f003-46e0-b583-e6a4392093af",
        "body" : "https://github.com/kubernetes/kubernetes/pull/89747/files#diff-12ebda951d92c7e0f1739fad4346b488R727",
        "createdAt" : "2020-04-01T22:59:26Z",
        "updatedAt" : "2020-04-01T23:53:30Z",
        "lastEditedBy" : "29b82984-f003-46e0-b583-e6a4392093af",
        "tags" : [
        ]
      },
      {
        "id" : "b2f3a18f-637e-41bd-a02a-d5f51a1928a8",
        "parentId" : "2f594d76-bb59-4d1f-b76e-69979d131447",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "That's kinda dumb to fail client side construction for. We should just construct the selector and let the server barf.",
        "createdAt" : "2020-04-01T23:01:37Z",
        "updatedAt" : "2020-04-01T23:53:30Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "61ed743d-b37e-48a6-8ad9-3c1ce2a1afaa",
        "parentId" : "2f594d76-bb59-4d1f-b76e-69979d131447",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "(no doubt I'm the original author that wrote the \"dumb\" thing ;) )",
        "createdAt" : "2020-04-01T23:05:12Z",
        "updatedAt" : "2020-04-01T23:53:30Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "06137a9e-c138-447f-bf43-2417138315a0",
        "parentId" : "2f594d76-bb59-4d1f-b76e-69979d131447",
        "authorId" : "29b82984-f003-46e0-b583-e6a4392093af",
        "body" : "Alternatively, we can make `SelectorFromSet` an alias for `ValidatedSelectorFromSet` which will then result in the selector being constructed and the server rejecting the request",
        "createdAt" : "2020-04-01T23:08:11Z",
        "updatedAt" : "2020-04-01T23:53:30Z",
        "lastEditedBy" : "29b82984-f003-46e0-b583-e6a4392093af",
        "tags" : [
        ]
      },
      {
        "id" : "0cb5f00d-aa2e-4872-ac24-b956c1aa8175",
        "parentId" : "2f594d76-bb59-4d1f-b76e-69979d131447",
        "authorId" : "29b82984-f003-46e0-b583-e6a4392093af",
        "body" : "(Now that you mentioned it I find that much nicer than the current behavior, it allows us to do the right thing without breaking anyones code)",
        "createdAt" : "2020-04-01T23:25:26Z",
        "updatedAt" : "2020-04-01T23:53:30Z",
        "lastEditedBy" : "29b82984-f003-46e0-b583-e6a4392093af",
        "tags" : [
        ]
      },
      {
        "id" : "a12bea5a-17c2-4371-8ed6-d71e21fe0e3c",
        "parentId" : "2f594d76-bb59-4d1f-b76e-69979d131447",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "It might be good to do both? It's rather annoying to not have a version that returns an error.",
        "createdAt" : "2020-04-01T23:28:02Z",
        "updatedAt" : "2020-04-01T23:53:30Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "10db867b-00d7-4b12-953d-9cedb2320ebe",
        "parentId" : "2f594d76-bb59-4d1f-b76e-69979d131447",
        "authorId" : "29b82984-f003-46e0-b583-e6a4392093af",
        "body" : "Yeah, that's what I meant. Then we don't really need to deprecate it anymore, right?",
        "createdAt" : "2020-04-01T23:31:25Z",
        "updatedAt" : "2020-04-01T23:53:30Z",
        "lastEditedBy" : "29b82984-f003-46e0-b583-e6a4392093af",
        "tags" : [
        ]
      },
      {
        "id" : "be9d1f1e-6e0f-474d-98f7-ad8e8d590b18",
        "parentId" : "2f594d76-bb59-4d1f-b76e-69979d131447",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah, better experience. (I'd still mention it in the godoc comment :) )",
        "createdAt" : "2020-04-01T23:34:49Z",
        "updatedAt" : "2020-04-01T23:53:30Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "0896d94e-e9b1-4e8a-9250-3de2e2df2861",
        "parentId" : "2f594d76-bb59-4d1f-b76e-69979d131447",
        "authorId" : "29b82984-f003-46e0-b583-e6a4392093af",
        "body" : "Updated, PTAL",
        "createdAt" : "2020-04-01T23:53:49Z",
        "updatedAt" : "2020-04-01T23:53:50Z",
        "lastEditedBy" : "29b82984-f003-46e0-b583-e6a4392093af",
        "tags" : [
        ]
      },
      {
        "id" : "c05b454b-6ee9-4b1c-89eb-57d49cdb1cd3",
        "parentId" : "2f594d76-bb59-4d1f-b76e-69979d131447",
        "authorId" : "29b82984-f003-46e0-b583-e6a4392093af",
        "body" : "From an API perspective its a bit weird to have both `SelectorFromSet` and `SelectorFromValidatedSet` though, I am inclined to remove the latter, WDYT?",
        "createdAt" : "2020-04-02T00:00:54Z",
        "updatedAt" : "2020-04-02T00:00:54Z",
        "lastEditedBy" : "29b82984-f003-46e0-b583-e6a4392093af",
        "tags" : [
        ]
      },
      {
        "id" : "84232d56-8ab8-4198-bf11-7060b92ea12b",
        "parentId" : "2f594d76-bb59-4d1f-b76e-69979d131447",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I probably would have called the latter `SelectorFromSetValidated` but that's just taste. I think it's OK to have a version of the function that can return an error.",
        "createdAt" : "2020-04-02T00:03:57Z",
        "updatedAt" : "2020-04-02T00:03:58Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "22f252c1-bc52-43ff-8c52-7bb370411182",
        "parentId" : "2f594d76-bb59-4d1f-b76e-69979d131447",
        "authorId" : "29b82984-f003-46e0-b583-e6a4392093af",
        "body" : "No, what I mean is: There is now `SelectorFromSet` (changed in this PR) and `SelectorFromValidatedSet` (pre-existing) that do the same thing: Construct an invalid Selector if they get invalid input. As a user of the `labels` package, its unclear which one I should use and whats the difference is (there is none).\r\n\r\nSo it would IMHO be good to just remove `SelectorFromValidatedSet` and migrate its users to use `SelectorFromSet` which (as of this PR) does the same thing.\r\n\r\nWDYT?",
        "createdAt" : "2020-04-02T00:20:20Z",
        "updatedAt" : "2020-04-02T00:20:20Z",
        "lastEditedBy" : "29b82984-f003-46e0-b583-e6a4392093af",
        "tags" : [
        ]
      },
      {
        "id" : "97a49a3a-6218-441f-b702-587ed924cbbd",
        "parentId" : "2f594d76-bb59-4d1f-b76e-69979d131447",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "If they are so similar that one can just call the other, you can do e.g.\r\n\r\n```\r\n// SelectorFromValidatedSet is an alias to preserve existing clients.\r\nvar SelectorFromValidatedSet = SelectorFromSet\r\n```",
        "createdAt" : "2020-04-03T15:52:19Z",
        "updatedAt" : "2020-04-03T15:52:20Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "bec6f08c585587152f9a6fe438a3bcd90331b77f",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +885,889 @@\trequirements := make([]Requirement, 0, len(ls))\n\tfor label, value := range ls {\n\t\tr, err := NewRequirement(label, selection.Equals, []string{value})\n\t\tif err != nil {\n\t\t\treturn nil, err"
  },
  {
    "id" : "2766da6f-0a6a-43ea-b74d-07e3fbe13d5e",
    "prId" : 85048,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85048#pullrequestreview-315359345",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be20975d-735c-4d6e-8aa1-0dea95ff59cf",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "return \"\", false\r\notherwise (fail fast)",
        "createdAt" : "2019-11-12T08:27:22Z",
        "updatedAt" : "2019-11-13T12:52:58Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a23bffd422e4b2a6056a68034d01f1942fbf856",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +374,378 @@\t\t\t\tif len(lsel[ix].strValues) == 1 {\n\t\t\t\t\treturn lsel[ix].strValues[0], true\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn \"\", false"
  },
  {
    "id" : "5b149d17-9a07-423d-957b-703d0b62a52d",
    "prId" : 39260,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39260#pullrequestreview-18233751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56f4163f-ed71-41d3-a461-b3f7d8e324db",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Just FYI, it's safe to call len on nil maps so you could have just replaced the == nil with the clause you added. ",
        "createdAt" : "2017-01-24T18:36:43Z",
        "updatedAt" : "2017-01-24T18:36:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "702fe31221ef1732a12576936fd24800339c164b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +794,798 @@// nil and empty Sets are considered equivalent to Everything().\nfunc SelectorFromSet(ls Set) Selector {\n\tif ls == nil || len(ls) == 0 {\n\t\treturn internalSelector{}\n\t}"
  }
]