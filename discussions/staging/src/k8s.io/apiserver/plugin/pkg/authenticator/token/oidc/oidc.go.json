[
  {
    "id" : "998c4ef7-ef52-4744-af42-c5771547560d",
    "prId" : 100868,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100868#pullrequestreview-630030958",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae69eb10-e54a-47ed-9aac-4575721d1a08",
        "parentId" : null,
        "authorId" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "body" : "Do we care to dynamically reload the `KeySet` like we do in the `else` block? This might be helpful for someone who wants to provide an out-of-band rotating set of keys dynamically.",
        "createdAt" : "2021-04-07T12:28:13Z",
        "updatedAt" : "2021-04-07T12:30:28Z",
        "lastEditedBy" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "tags" : [
        ]
      },
      {
        "id" : "b4e59e8c-7ab6-4395-8b20-1f5161e5574e",
        "parentId" : "ae69eb10-e54a-47ed-9aac-4575721d1a08",
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "`KeySet` is an interface, not a struct.  Users are free to rotate the keys as they see fit.  This is what the default `remoteKeySet` does automatically via the `jwks_uri` data.",
        "createdAt" : "2021-04-07T13:49:11Z",
        "updatedAt" : "2021-04-07T13:49:12Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5a1a45d48b4e90e54f512fc829b2ab9866b282e",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +315,319 @@\tif opts.KeySet != nil {\n\t\t// We already have a key set, synchronously initialize the verifier.\n\t\tauthenticator.setVerifier(oidc.NewVerifier(opts.IssuerURL, opts.KeySet, verifierConfig))\n\t} else {\n\t\t// Asynchronously attempt to initialize the authenticator. This enables"
  },
  {
    "id" : "c5a5c536-4e9e-4de4-8db6-182a36992aea",
    "prId" : 100868,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100868#pullrequestreview-630308218",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b692547-5f74-4cd8-8f9e-04cf3271705d",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Does this actually reload? It seems like we take the first and pass it to the transport.",
        "createdAt" : "2021-04-07T17:39:37Z",
        "updatedAt" : "2021-04-07T17:39:37Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "8e352184-dd87-4627-9749-efaf04235eea",
        "parentId" : "7b692547-5f74-4cd8-8f9e-04cf3271705d",
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "Right, this does not reload today.  There are two `TODO(enj)` in this PR that would need to be addressed to make CA reloading work.  I left those out since I would have to wire up a context through the authn stack to prevent go routine leaks and would need some custom logic in the OIDC authn code to update the root CA when it changed.",
        "createdAt" : "2021-04-07T17:43:52Z",
        "updatedAt" : "2021-04-07T17:43:52Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5a1a45d48b4e90e54f512fc829b2ab9866b282e",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +263,267 @@\t}\n\n\tvar roots *x509.CertPool\n\tif opts.CAContentProvider != nil {\n\t\t// TODO(enj): make this reload CA data dynamically"
  },
  {
    "id" : "85f4a2d1-140a-4b1b-874b-24ed7f5af151",
    "prId" : 69582,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69582#pullrequestreview-165150816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe6c62a4-6bc5-45cb-99fe-15d9b7316c3c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "TODO to take implicit audiences at Authenticator construction time, and if ctx is audience-limited, ensure it intersects with the implicit audiences, and echo an audience in the response. Interestingly, this will likely be totally different than the audience in the token itself.",
        "createdAt" : "2018-10-16T13:35:35Z",
        "updatedAt" : "2018-10-22T19:11:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "809f278b032103cd24fcbb5ea2196c6c7caa6f63",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +532,536 @@}\n\nfunc (a *Authenticator) AuthenticateToken(ctx context.Context, token string) (*authenticator.Response, bool, error) {\n\tif !hasCorrectIssuer(a.issuerURL, token) {\n\t\treturn nil, false, nil"
  },
  {
    "id" : "ba6175c6-1530-4ea4-92f5-5530bcd45486",
    "prId" : 68850,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68850#pullrequestreview-157483903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6453fb6d-0462-4391-a03c-739709cb1552",
        "parentId" : null,
        "authorId" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "body" : "do you need to ToLower(claims.Issuer) before the comparison?",
        "createdAt" : "2018-09-20T21:39:50Z",
        "updatedAt" : "2018-09-20T21:39:51Z",
        "lastEditedBy" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "tags" : [
        ]
      },
      {
        "id" : "756c8d2e-831e-4cf7-b185-ee11170cea96",
        "parentId" : "6453fb6d-0462-4391-a03c-739709cb1552",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "No, the issuer is case-sensitive",
        "createdAt" : "2018-09-20T22:03:01Z",
        "updatedAt" : "2018-09-20T22:03:01Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1873ad48d0ce626c9b8be21143cfcc8a608db21b",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +346,350 @@\t//\n\t// http://openid.net/specs/openid-connect-core-1_0.html#GoogleIss\n\tif claims.Issuer == \"accounts.google.com\" {\n\t\treturn \"https://accounts.google.com\", nil\n\t}"
  },
  {
    "id" : "8c423435-c286-4862-910a-38ae3c3b246d",
    "prId" : 63213,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63213#pullrequestreview-116058311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ae25f45-e6db-410d-a12d-94b5cb8e2184",
        "parentId" : null,
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "I'd think this has to be resolved before we turn on this functionality. These tokens are evaluated on every HTTP request. It's going to be incredibly slow if we leave this as a TODO.",
        "createdAt" : "2018-04-27T16:34:40Z",
        "updatedAt" : "2018-05-02T00:12:54Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "18d02800-9a76-48d8-a03d-83ca444f6122",
        "parentId" : "4ae25f45-e6db-410d-a12d-94b5cb8e2184",
        "authorId" : "8716272c-8e30-4919-a4d7-8314ab38137e",
        "body" : "Agreed, but it seemed like it would better be placed in a separate commit.  What do you advise? I'm fine with adding more code to this commit, but it's already large as it is.",
        "createdAt" : "2018-04-27T18:44:01Z",
        "updatedAt" : "2018-05-02T00:12:54Z",
        "lastEditedBy" : "8716272c-8e30-4919-a4d7-8314ab38137e",
        "tags" : [
        ]
      },
      {
        "id" : "feb85012-725f-46a0-9cd1-9b7f1ef5c6d4",
        "parentId" : "4ae25f45-e6db-410d-a12d-94b5cb8e2184",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "Add a private field to the config to let the tests enable this feature, and disable it by default?",
        "createdAt" : "2018-04-27T18:48:27Z",
        "updatedAt" : "2018-05-02T00:12:54Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "88aa8eae-9680-4878-b226-d840b9d7e2e9",
        "parentId" : "4ae25f45-e6db-410d-a12d-94b5cb8e2184",
        "authorId" : "8716272c-8e30-4919-a4d7-8314ab38137e",
        "body" : "Good idea! Done.",
        "createdAt" : "2018-04-27T19:32:51Z",
        "updatedAt" : "2018-05-02T00:12:54Z",
        "lastEditedBy" : "8716272c-8e30-4919-a4d7-8314ab38137e",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfb527843ca1720ad64383fa5d6baea4113daa3e",
    "line" : 323,
    "diffHunk" : "@@ -1,1 +495,499 @@// and inserts the lookup results into allClaims.\nfunc (r *claimResolver) resolve(endpoint endpoint, allClaims claims) error {\n\t// TODO: cache resolved claims.\n\tjwt, err := getClaimJWT(r.client, endpoint.URL, endpoint.AccessToken)\n\tif err != nil {"
  },
  {
    "id" : "e0ac53d8-131f-49fb-9707-f3396a101caa",
    "prId" : 58544,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58544#pullrequestreview-91991752",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d86d0593-7dc5-4592-a3d7-f01e0dbaf225",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "does this echo the value in errors? we weren't returning claim values in error messages before, just type info",
        "createdAt" : "2018-01-26T04:33:35Z",
        "updatedAt" : "2018-02-16T18:58:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c41824e8-8367-4ac6-a960-9ef4950a8495",
        "parentId" : "d86d0593-7dc5-4592-a3d7-f01e0dbaf225",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "It's doesn't appear to return the value: https://play.golang.org/p/Ed2vi-1gDEK\r\n\r\nI can add a test to make sure that behavior doesn't change in future releases of Go.",
        "createdAt" : "2018-01-26T18:49:36Z",
        "updatedAt" : "2018-02-16T18:58:19Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "0db7e39d-93f7-49ce-a185-be885a51a138",
        "parentId" : "d86d0593-7dc5-4592-a3d7-f01e0dbaf225",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "Test added.",
        "createdAt" : "2018-01-26T22:47:35Z",
        "updatedAt" : "2018-02-16T18:58:19Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "379af0405c318de9a009e339ee03a1d8ab0cde2f",
    "line" : 417,
    "diffHunk" : "@@ -1,1 +346,350 @@\t\treturn fmt.Errorf(\"claim not present\")\n\t}\n\treturn json.Unmarshal([]byte(val), v)\n}"
  },
  {
    "id" : "5f050988-8f6a-486e-9c98-f8f64520d473",
    "prId" : 58544,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58544#pullrequestreview-91991864",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eba6850c-ad62-4000-9a36-7d5e6a5aed2f",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "If you rename this, might as well rename OIDCOptions to Options.",
        "createdAt" : "2018-01-26T22:48:13Z",
        "updatedAt" : "2018-02-16T18:58:19Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "379af0405c318de9a009e339ee03a1d8ab0cde2f",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +103,107 @@}\n\ntype Authenticator struct {\n\tissuerURL string\n"
  },
  {
    "id" : "dc04312d-ca4c-4b47-b29a-ce131ebcdc16",
    "prId" : 58544,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58544#pullrequestreview-91992830",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f3ab276-7d7b-4117-b978-35a0b5721582",
        "parentId" : null,
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "~Right after I committed, I realized that this of course won't work with Google ID tokens (iss can be \"accounts.google.com\" instead of \"https://accounts.google.com\"). I'm inclined to add the same check we have in the oidc library.~\r\n\r\n~Edit: added~\r\n\r\nEdit #2: Google returns the right issuer with newer endpoints.",
        "createdAt" : "2018-01-26T22:53:45Z",
        "updatedAt" : "2018-02-16T18:58:19Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "379af0405c318de9a009e339ee03a1d8ab0cde2f",
    "line" : 274,
    "diffHunk" : "@@ -1,1 +253,257 @@\t\treturn false\n\t}\n\tif claims.Issuer != iss {\n\t\treturn false\n\t}"
  }
]