[
  {
    "id" : "838c1258-514e-4fd3-ae7d-9397fa2285d3",
    "prId" : 50577,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50577#pullrequestreview-56129766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cb1db04-4b68-4b3b-b32c-7b5d1fbd9a9c",
        "parentId" : null,
        "authorId" : "6f007220-e297-4289-a947-06c164b528d2",
        "body" : "Why not just `events := []*auditinternal.Event{&auditinternal.Event{}}`?",
        "createdAt" : "2017-08-14T15:18:46Z",
        "updatedAt" : "2017-08-15T12:21:37Z",
        "lastEditedBy" : "6f007220-e297-4289-a947-06c164b528d2",
        "tags" : [
        ]
      },
      {
        "id" : "c40e45a5-dda9-409a-948d-2ebdcea86a6f",
        "parentId" : "6cb1db04-4b68-4b3b-b32c-7b5d1fbd9a9c",
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "Because it's consistent with the rest of the code, that way it's clear how many events there are and you can easily change",
        "createdAt" : "2017-08-14T16:35:28Z",
        "updatedAt" : "2017-08-15T12:21:37Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7798d32fc787d79da617914259d9285e558054f7",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +204,208 @@\nfunc TestBatchWebhookProcessEventsAfterStop(t *testing.T) {\n\tevents := make([]*auditinternal.Event, 1) // less than max size.\n\tfor i := range events {\n\t\tevents[i] = &auditinternal.Event{}"
  },
  {
    "id" : "cb698fde-0819-4c98-b04d-ed5f1c6921bb",
    "prId" : 50577,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50577#pullrequestreview-56141145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "efcd2980-86e5-40c1-aeab-e4a34088396e",
        "parentId" : null,
        "authorId" : "6f007220-e297-4289-a947-06c164b528d2",
        "body" : "Can you read from `stopCh`? If so, and it is closed, it will return the zero value, so it would validate the assumption.",
        "createdAt" : "2017-08-14T15:24:38Z",
        "updatedAt" : "2017-08-15T12:21:37Z",
        "lastEditedBy" : "6f007220-e297-4289-a947-06c164b528d2",
        "tags" : [
        ]
      },
      {
        "id" : "dc3d1f8d-90ff-4176-8c95-07d0fd3135ac",
        "parentId" : "efcd2980-86e5-40c1-aeab-e4a34088396e",
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "There's no `stopCh` in this test, b/c `backend.Run` is not called",
        "createdAt" : "2017-08-14T16:37:05Z",
        "updatedAt" : "2017-08-15T12:21:37Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      },
      {
        "id" : "27be8fdf-c222-4667-8aec-2f9f817a4b14",
        "parentId" : "efcd2980-86e5-40c1-aeab-e4a34088396e",
        "authorId" : "6f007220-e297-4289-a947-06c164b528d2",
        "body" : "My question/comment wasn't terribly clear: the comment carried the word \"assume\". As an engineer I try to stop doing this. Why? Because assumptions often fail. I was trying to ask if the test could be enhanced so that we don't have to \"assume\".",
        "createdAt" : "2017-08-14T17:01:18Z",
        "updatedAt" : "2017-08-15T12:21:37Z",
        "lastEditedBy" : "6f007220-e297-4289-a947-06c164b528d2",
        "tags" : [
        ]
      },
      {
        "id" : "c6c07b51-aa47-4247-a1c2-c2d636df8f9e",
        "parentId" : "efcd2980-86e5-40c1-aeab-e4a34088396e",
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "Oh, I didn't understand your comment, sorry\r\n\r\nBy \"assume\" I mean the reference to the Shutdown method description in the Backend interface, where it's assumed that the method is called after the Run has been stopped by closing `stopCh` passed to it. Otherwise `collectLastEvents` method will hang forever. If we use `collectEvents` method instead, there's a race, b/c the order is not guaranteed in `select` clause and we can exit before collecting all events\r\n\r\nThe whole idea of `collectLastEvents` method is to overcome this race and collect all events, even if the `stopCh` was closed",
        "createdAt" : "2017-08-14T17:11:46Z",
        "updatedAt" : "2017-08-15T12:21:37Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7798d32fc787d79da617914259d9285e558054f7",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +244,248 @@\n\tgo func() {\n\t\t// Assume stopCh was closed.\n\t\tclose(backend.buffer)\n\t\tbackend.sendBatchEvents(backend.collectLastEvents())"
  },
  {
    "id" : "60d99a76-a40e-4d9e-ae10-e1bcdbfaadc3",
    "prId" : 49115,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49115#pullrequestreview-56596966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c250c6e0-3141-43d3-a774-b98bac205b96",
        "parentId" : null,
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "Let's move beta tests to a separate file in the same way it's done for alpha tests. We'll have to do this in the future anyway",
        "createdAt" : "2017-08-16T10:51:18Z",
        "updatedAt" : "2017-08-16T11:25:15Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      },
      {
        "id" : "eaea5300-372b-47f4-9bb3-dbfdd3179ae5",
        "parentId" : "c250c6e0-3141-43d3-a774-b98bac205b96",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Would be fine for me in a follow-up.",
        "createdAt" : "2017-08-16T11:11:55Z",
        "updatedAt" : "2017-08-16T11:25:15Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "1dc251a1604b1576258f123ac8dd8390bba2e4a9",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +38,42 @@\t\"k8s.io/apimachinery/pkg/runtime/serializer/json\"\n\tauditinternal \"k8s.io/apiserver/pkg/apis/audit\"\n\tauditv1beta1 \"k8s.io/apiserver/pkg/apis/audit/v1beta1\"\n\t\"k8s.io/apiserver/pkg/audit\"\n\t\"k8s.io/client-go/tools/clientcmd/api/v1\""
  },
  {
    "id" : "ee4e681b-ed5c-4fe2-9c49-f4a76177e5e1",
    "prId" : 45919,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45919#pullrequestreview-40585988",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c3c477f-e452-464c-b9f0-008c74cdffa6",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "(optional) For an alternative approach, see https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/audit/policy/reader_test.go#L75",
        "createdAt" : "2017-05-26T19:19:18Z",
        "updatedAt" : "2017-05-31T16:45:33Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "a88e0187f9f6083ed68d18e939a776c44c728e4b",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +110,114 @@\t}()\n\n\t// NOTE(ericchiang): Do we need to use a proper serializer?\n\trequire.NoError(t, stdjson.NewEncoder(f).Encode(config), \"writing kubeconfig\")\n"
  }
]