[
  {
    "id" : "49112ce7-4db5-4133-a52d-eb4057fcca50",
    "prId" : 95705,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95705#pullrequestreview-520111169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31addb93-47ba-4e93-99af-69e8a3e99e4a",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "wow that's long.  Leave it for now, but wow.",
        "createdAt" : "2020-10-29T21:44:41Z",
        "updatedAt" : "2020-11-01T15:22:55Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f812c31949d93add51acb70036f4df9862f3d46",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +40,44 @@\t// DefaultInitialBackoffDelay is the default amount of time to wait before\n\t// retrying sending audit events through a webhook.\n\tDefaultInitialBackoffDelay = 10 * time.Second\n)\n"
  },
  {
    "id" : "5863c7f4-6cc4-4a43-b9c0-813b943eafbb",
    "prId" : 83238,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83238#pullrequestreview-294996344",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4ebfdf3-a2ab-4797-9179-24e004cb6f54",
        "parentId" : null,
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "Comment here on when it might make sense to retry on all errors (versus DefaultShouldRetry) ?",
        "createdAt" : "2019-09-27T17:47:22Z",
        "updatedAt" : "2019-09-30T14:05:17Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "7bf9ed99-3b86-4f3d-b9a1-4d5f7ceaca3b",
        "parentId" : "d4ebfdf3-a2ab-4797-9179-24e004cb6f54",
        "authorId" : "a0c56dcb-fd8a-40d6-ab3c-d84c2122af88",
        "body" : "done",
        "createdAt" : "2019-09-30T14:01:38Z",
        "updatedAt" : "2019-09-30T14:05:17Z",
        "lastEditedBy" : "a0c56dcb-fd8a-40d6-ab3c-d84c2122af88",
        "tags" : [
        ]
      }
    ],
    "commit" : "4877b0b7b50bdc3eaaadd3f968fd846c1396b708",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +54,58 @@// sending audit events if there is even a slight chance that the\n// receiving service gets back to normal at some point.\nfunc retryOnError(err error) bool {\n\tif err != nil {\n\t\treturn true"
  },
  {
    "id" : "ec7c0ae2-f7ed-4f4d-ab38-716099300b77",
    "prId" : 70021,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70021#pullrequestreview-169429411",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0639f265-bd2c-44a5-a112-6cb69316d72c",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Let's override the PluginName for this to distinguish the error metrics from the static webhook.",
        "createdAt" : "2018-10-26T23:13:47Z",
        "updatedAt" : "2018-11-09T22:38:32Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "6f88a8b4-1b05-4ae9-8d3e-f1db65d5ed4c",
        "parentId" : "0639f265-bd2c-44a5-a112-6cb69316d72c",
        "authorId" : "5191e81d-8ec6-4a27-a48d-aba90da9ff08",
        "body" : "currently this plugin can be used in both a dynamic and static manner within the same runtime configuration so I had to add a field to map it to the object.",
        "createdAt" : "2018-10-29T17:36:17Z",
        "updatedAt" : "2018-11-09T22:38:32Z",
        "lastEditedBy" : "5191e81d-8ec6-4a27-a48d-aba90da9ff08",
        "tags" : [
        ]
      }
    ],
    "commit" : "54fd930d0e74635fc2a8318cc79d1b055d252d44",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +55,59 @@// NewDynamicBackend returns an audit backend configured from a REST client that\n// sends events over HTTP to an external service.\nfunc NewDynamicBackend(rc *rest.RESTClient, initialBackoff time.Duration) audit.Backend {\n\treturn &backend{\n\t\tw: &webhook.GenericWebhook{"
  },
  {
    "id" : "8a3c0bb0-bdd3-4357-a2b3-f0b05c9d7b8a",
    "prId" : 60739,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60739#pullrequestreview-101268099",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09368afc-0bf2-4c0f-abab-2a276d36af36",
        "parentId" : null,
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "Why not `Name()`?",
        "createdAt" : "2018-03-05T09:50:05Z",
        "updatedAt" : "2018-03-08T19:04:08Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      },
      {
        "id" : "c6843bd8-592a-4f77-8016-ba9b8896f88d",
        "parentId" : "09368afc-0bf2-4c0f-abab-2a276d36af36",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "This way just supports calling `fmt.Sprintf(\"%s\", ...)`, and resolves to something if String isn't set. I opted not to add it to the backend interface. But I don't have a strong preference, it's sort of a hack to get the test working.",
        "createdAt" : "2018-03-05T18:11:27Z",
        "updatedAt" : "2018-03-08T19:04:08Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "e004257919d779d56f27ad84c7f33799cc7ab580",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +103,107 @@}\n\nfunc (b *backend) String() string {\n\treturn PluginName\n}"
  },
  {
    "id" : "2e7c9d29-9d1c-415a-97c6-9fdd2733feca",
    "prId" : 50577,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50577#pullrequestreview-56314887",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0edd4cf-ac3c-48dd-9304-b9aa307e62bb",
        "parentId" : null,
        "authorId" : "6f007220-e297-4289-a947-06c164b528d2",
        "body" : "If we are shutting down do we need to give up the lock?",
        "createdAt" : "2017-08-14T15:02:32Z",
        "updatedAt" : "2017-08-15T12:21:37Z",
        "lastEditedBy" : "6f007220-e297-4289-a947-06c164b528d2",
        "tags" : [
        ]
      },
      {
        "id" : "0b99c348-394c-48ee-8258-d10590b08fa4",
        "parentId" : "b0edd4cf-ac3c-48dd-9304-b9aa307e62bb",
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "In case it's called the second time",
        "createdAt" : "2017-08-14T16:31:26Z",
        "updatedAt" : "2017-08-15T12:21:37Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      },
      {
        "id" : "0a814ffb-b332-4ceb-bf3e-7d310fef6038",
        "parentId" : "b0edd4cf-ac3c-48dd-9304-b9aa307e62bb",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "right, shouldn't matter. `shutdownCh` will be closed and taking the lock just works without sending go routines.",
        "createdAt" : "2017-08-15T11:11:34Z",
        "updatedAt" : "2017-08-15T12:21:37Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "7798d32fc787d79da617914259d9285e558054f7",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +233,237 @@\t// lock, because read lock is called in the same goroutine that closes\n\t// shutdownCh before exiting.\n\tb.reqMutex.Lock()\n\tb.reqMutex.Unlock()\n}"
  },
  {
    "id" : "d2604fa4-9a89-4b1f-a175-2181565ae15f",
    "prId" : 50577,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50577#pullrequestreview-56316350",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16fc823c-0333-4e08-baea-6cabcdd17160",
        "parentId" : null,
        "authorId" : "6f007220-e297-4289-a947-06c164b528d2",
        "body" : "This could be stateless on the receiver\r\n\r\n    func readBatch(buffer chan, int batchSize) []Event",
        "createdAt" : "2017-08-14T15:47:02Z",
        "updatedAt" : "2017-08-15T12:21:37Z",
        "lastEditedBy" : "6f007220-e297-4289-a947-06c164b528d2",
        "tags" : [
        ]
      },
      {
        "id" : "f8472d02-c026-4d40-8353-59829b1f4649",
        "parentId" : "16fc823c-0333-4e08-baea-6cabcdd17160",
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "Yes, but why? It has pretty specific purpose, so I don't want to generalize it that way",
        "createdAt" : "2017-08-14T16:34:47Z",
        "updatedAt" : "2017-08-15T12:21:37Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      },
      {
        "id" : "52abc8d0-a508-4383-920a-8c2ec0249d59",
        "parentId" : "16fc823c-0333-4e08-baea-6cabcdd17160",
        "authorId" : "6f007220-e297-4289-a947-06c164b528d2",
        "body" : "It simplifies what can and does happen to the object (i.e., the call is a functional-style). As a reviewer I can scan the function to see that it doesn't mutate the object in any way. All the things it needs can be satisfied from the functions parameters. Equally, if I come to modify this file I have a reduced set of functions to consider where state is held and mutated.",
        "createdAt" : "2017-08-14T16:56:46Z",
        "updatedAt" : "2017-08-15T12:21:37Z",
        "lastEditedBy" : "6f007220-e297-4289-a947-06c164b528d2",
        "tags" : [
        ]
      },
      {
        "id" : "c61a07b4-2349-450f-aeec-bc8f4bc046a2",
        "parentId" : "16fc823c-0333-4e08-baea-6cabcdd17160",
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "I'm sorry! I surely understand you argument and totally agree with that. What I wanted to say is that it doesn't make much sense to extract this variable, since this method is going to be used in one place and the method extracting was done more to emphasize the purpose of this piece of code, compared to regular `collectEvents`. Do you agree or do you think it will help to the code readability in this particular place to make this method a separate function?",
        "createdAt" : "2017-08-14T17:07:41Z",
        "updatedAt" : "2017-08-15T12:21:37Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      },
      {
        "id" : "180b11a0-cc99-4b3d-a458-dbd7e62850a7",
        "parentId" : "16fc823c-0333-4e08-baea-6cabcdd17160",
        "authorId" : "6f007220-e297-4289-a947-06c164b528d2",
        "body" : "I think any opportunity we have to remove state the better!",
        "createdAt" : "2017-08-14T17:18:23Z",
        "updatedAt" : "2017-08-15T12:21:37Z",
        "lastEditedBy" : "6f007220-e297-4289-a947-06c164b528d2",
        "tags" : [
        ]
      },
      {
        "id" : "3c14f4b1-edf1-4de0-949a-e571548cf231",
        "parentId" : "16fc823c-0333-4e08-baea-6cabcdd17160",
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "> I think any opportunity we have to remove state the better!\r\n\r\nI don't agree with that. Any private method can be made stateless. Stateless itself is not a goal, it should serve some purpose. In this particular case I think the private method with a meaningful name is better for readability than a stateless function\r\n\r\nLet's let @sttts decide on that, as a tiebreaker :)",
        "createdAt" : "2017-08-15T10:35:33Z",
        "updatedAt" : "2017-08-15T12:21:37Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      },
      {
        "id" : "ba19113b-fa82-4815-b191-b056b3f5f13b",
        "parentId" : "16fc823c-0333-4e08-baea-6cabcdd17160",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I am usually a fan of making it explicit if state is not used, and of functional style in general. Here though the complexity is very local, i.e. this is a private method. We don't win much by detaching it wrong `b`. I would leave it the way it is, while the alternative with a detached func would be fine as well.",
        "createdAt" : "2017-08-15T11:21:11Z",
        "updatedAt" : "2017-08-15T12:21:37Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "7798d32fc787d79da617914259d9285e558054f7",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +297,301 @@// collectLastEvents assumes that the buffer was closed. It collects the first\n// maxBatchSize events from the closed buffer into a batch and returns them.\nfunc (b *batchBackend) collectLastEvents() []auditinternal.Event {\n\tvar events []auditinternal.Event\n"
  },
  {
    "id" : "293b920c-30db-4c59-9ac2-99dc5f554989",
    "prId" : 50577,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50577#pullrequestreview-56314690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e82f5a39-3245-491d-8746-ae8a5e7b343d",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "a clojure in an if-clause is fun, never seen that.",
        "createdAt" : "2017-08-15T11:10:23Z",
        "updatedAt" : "2017-08-15T12:21:37Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "7798d32fc787d79da617914259d9285e558054f7",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +208,212 @@\t\t// events will come through.\n\t\tfor {\n\t\t\tif last := func() bool {\n\t\t\t\t// Recover from any panic in order to try to send all remaining events.\n\t\t\t\t// Note, that in case of a panic, the return value will be false and"
  },
  {
    "id" : "74cf1554-cf4d-437c-8b13-9e104076ae27",
    "prId" : 49115,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49115#pullrequestreview-56606486",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42700b29-eca2-4b8a-8f12-259a40975d10",
        "parentId" : null,
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "@sttts @crassirostris \r\nPlease take a look at here.",
        "createdAt" : "2017-08-16T09:31:25Z",
        "updatedAt" : "2017-08-16T11:25:15Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      },
      {
        "id" : "23858dd5-6413-4158-a977-1f8159802826",
        "parentId" : "42700b29-eca2-4b8a-8f12-259a40975d10",
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "Do I understand your idea right?",
        "createdAt" : "2017-08-16T10:30:26Z",
        "updatedAt" : "2017-08-16T11:25:15Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      },
      {
        "id" : "cdd3921a-2d0b-4523-b959-92360b8d4f90",
        "parentId" : "42700b29-eca2-4b8a-8f12-259a40975d10",
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "I'll repeat the question I had in the earlier PR. Is it possible to move this piece of code to the `NewBackend` method to activate only the version that was selected as preferred?",
        "createdAt" : "2017-08-16T10:50:11Z",
        "updatedAt" : "2017-08-16T11:25:15Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      },
      {
        "id" : "6bf8573a-9ceb-4539-bd11-239cc674c2dd",
        "parentId" : "42700b29-eca2-4b8a-8f12-259a40975d10",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "we need both GroupVersions. This looks correct now.",
        "createdAt" : "2017-08-16T11:11:25Z",
        "updatedAt" : "2017-08-16T11:25:15Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "7879d4cf-4075-467e-bd9f-d3027d014c0e",
        "parentId" : "42700b29-eca2-4b8a-8f12-259a40975d10",
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "Codes in another place requires this init() function.\r\nhttps://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/endpoints/filters/audit_test.go#L46\r\nThat naive code is wrote by me :(\r\n\r\nI will get ride of the dependency when address another comment:\r\nhttps://github.com/kubernetes/kubernetes/pull/49115#discussion_r133416080",
        "createdAt" : "2017-08-16T11:53:27Z",
        "updatedAt" : "2017-08-16T11:53:27Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      },
      {
        "id" : "c042016d-b149-405c-a346-03f97ddc8040",
        "parentId" : "42700b29-eca2-4b8a-8f12-259a40975d10",
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "Either SGTM, just asking whether it's possible and makes sense. Thanks!",
        "createdAt" : "2017-08-16T11:59:31Z",
        "updatedAt" : "2017-08-16T11:59:41Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1dc251a1604b1576258f123ac8dd8390bba2e4a9",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +94,98 @@\nfunc init() {\n\tallGVs := []schema.GroupVersion{auditv1alpha1.SchemeGroupVersion, auditv1beta1.SchemeGroupVersion}\n\tregistry.RegisterVersions(allGVs)\n\tif err := registry.EnableVersions(allGVs...); err != nil {"
  },
  {
    "id" : "9be96b47-d97a-4d02-84d0-d1fada62d599",
    "prId" : 49115,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49115#pullrequestreview-56601359",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37b0a3ff-579e-491a-8911-492712574639",
        "parentId" : null,
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "Why this TODO is here? I think it should be in the `options/audit.go` or at least closer to the `NewBackend`",
        "createdAt" : "2017-08-16T10:53:30Z",
        "updatedAt" : "2017-08-16T11:25:15Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      },
      {
        "id" : "0fbe0ec6-006d-4a9e-8673-f3825406d2b7",
        "parentId" : "37b0a3ff-579e-491a-8911-492712574639",
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "I will address it in another PR.",
        "createdAt" : "2017-08-16T11:34:16Z",
        "updatedAt" : "2017-08-16T11:34:16Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      }
    ],
    "commit" : "1dc251a1604b1576258f123ac8dd8390bba2e4a9",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +89,93 @@\t// Can we make these passable to NewGenericWebhook?\n\tgroupFactoryRegistry = make(announced.APIGroupFactoryRegistry)\n\t// TODO(audit): figure out a general way to let the client choose their preferred version\n\tregistry = registered.NewOrDie(\"\")\n)"
  },
  {
    "id" : "d03d1a40-0860-4798-b765-454c62ec9fec",
    "prId" : 45919,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45919#pullrequestreview-41215558",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ef4f451-262a-4939-be48-4e406e9e9663",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "break on stopCh.",
        "createdAt" : "2017-05-31T12:50:35Z",
        "updatedAt" : "2017-05-31T16:45:33Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "a88e0187f9f6083ed68d18e939a776c44c728e4b",
    "line" : 208,
    "diffHunk" : "@@ -1,1 +206,210 @@\n\tgo func() {\n\t\tfor {\n\t\t\tf()\n"
  },
  {
    "id" : "b12c5c60-cad8-4e9b-9d5e-f7aaeb29f271",
    "prId" : 45919,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45919#pullrequestreview-41272208",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31ea97a9-1386-47e2-b321-5b8a80e98f02",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "👍 ",
        "createdAt" : "2017-05-31T15:48:16Z",
        "updatedAt" : "2017-05-31T16:45:33Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "a88e0187f9f6083ed68d18e939a776c44c728e4b",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +95,99 @@\t\tpanic(fmt.Sprintf(\"failed to enable version %v\", groupVersions))\n\t}\n\tinstall.Install(groupFactoryRegistry, registry, audit.Scheme)\n}\n"
  },
  {
    "id" : "b5eeaa2b-80fa-4fc0-9ddd-edeb0d8aaf2d",
    "prId" : 45919,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45919#pullrequestreview-41272930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50bae084-6b39-495f-929e-090e973fbbeb",
        "parentId" : null,
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "@sttts ",
        "createdAt" : "2017-05-31T15:49:02Z",
        "updatedAt" : "2017-05-31T16:45:33Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "17fa2e25-6393-43d0-90e1-dddb9cdbb578",
        "parentId" : "50bae084-6b39-495f-929e-090e973fbbeb",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "also the audit deepcopy funcs. Feel free to re-apply lgtm after that.",
        "createdAt" : "2017-05-31T15:50:41Z",
        "updatedAt" : "2017-05-31T16:45:33Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "a88e0187f9f6083ed68d18e939a776c44c728e4b",
    "line" : 158,
    "diffHunk" : "@@ -1,1 +156,160 @@\tc := conversion.NewCloner()\n\tfor _, f := range metav1.GetGeneratedDeepCopyFuncs() {\n\t\tif err := c.RegisterGeneratedDeepCopyFunc(f); err != nil {\n\t\t\treturn nil, fmt.Errorf(\"registering meta deep copy method: %v\", err)\n\t\t}"
  },
  {
    "id" : "444a8f10-202b-4dc1-bd97-59031153b5e3",
    "prId" : 45919,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45919#pullrequestreview-41289171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06a7e28f-befe-440c-bb58-4bebdc22b881",
        "parentId" : null,
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "Going to follow up with a change to not have this copied from the audit package. It's currently in a generated file that I don't want to mess with:\r\n\r\nhttps://github.com/kubernetes/apiserver/blob/c809cf8581e1e44c6174bf5ab4415e6ee39965ca/pkg/apis/audit/zz_generated.deepcopy.go#L37-L45\r\n\r\n@sttts",
        "createdAt" : "2017-05-31T16:48:18Z",
        "updatedAt" : "2017-05-31T16:48:18Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "a88e0187f9f6083ed68d18e939a776c44c728e4b",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +136,140 @@// Copied from generated code in k8s.io/apiserver/pkg/apis/audit.\n//\n// TODO(ericchiang): Have the generated code expose these methods like metav1.GetGeneratedDeepCopyFuncs().\nvar auditDeepCopyFuncs = []conversion.GeneratedDeepCopyFunc{\n\t{Fn: auditinternal.DeepCopy_audit_Event, InType: reflect.TypeOf(&auditinternal.Event{})},"
  }
]