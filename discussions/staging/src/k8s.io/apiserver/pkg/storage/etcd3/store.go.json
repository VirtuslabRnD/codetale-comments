[
  {
    "id" : "d5de6e1a-e4fb-4316-bcf7-f4ceb69f35cf",
    "prId" : 91505,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91505#pullrequestreview-431856007",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24b2e2ad-7011-40f9-a126-6bd608b0d9e5",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "just below, is the call to ensureMinimumResourceVersion is only needed if `match == metav1.ResourceVersionMatchNotOlderThan || match == \"\"`?",
        "createdAt" : "2020-06-12T05:01:02Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5aa13a94-2a49-401e-a8eb-cc3a9dafdedd",
        "parentId" : "24b2e2ad-7011-40f9-a126-6bd608b0d9e5",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Calling it for ExactMatch doesn't break anything, because it should be equal then (so also <=). Just additional safety check.",
        "createdAt" : "2020-06-16T07:23:49Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "4a87dc70-876e-4ed3-b4b2-c3e77ee4b879",
        "parentId" : "24b2e2ad-7011-40f9-a126-6bd608b0d9e5",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "Yeah, it looks like we can always run the check.\r\n\r\nTo be consistent about it, if we're always going to do the check here, then I should also always do it in `List` and `GetToList`. I've updated the code.",
        "createdAt" : "2020-06-16T20:13:09Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "04676ff58cf0df69a9e098d0f2585073de81cef7",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +415,419 @@\tmetrics.RecordEtcdRequestLatency(\"get\", getTypeName(listPtr), startTime)\n\tif err != nil {\n\t\treturn err\n\t}\n\tif err = s.validateMinimumResourceVersion(resourceVersion, uint64(getResp.Header.Revision)); err != nil {"
  },
  {
    "id" : "93eaf596-ece3-42ac-9d70-fd30ac9c98d9",
    "prId" : 91505,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91505#pullrequestreview-429439903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e53bf17e-5d84-4071-ba64-9b28d61121e1",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "add a `default:` switch case that errors with unknown resourceVersionMatch",
        "createdAt" : "2020-06-12T05:13:20Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "04676ff58cf0df69a9e098d0f2585073de81cef7",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +613,617 @@\t\t\tdefault:\n\t\t\t\treturn fmt.Errorf(\"unknown ResourceVersionMatch value: %v\", match)\n\t\t\t}\n\t\t}\n"
  },
  {
    "id" : "47461d7b-84e2-4fd2-b9f4-e905823f8adc",
    "prId" : 91505,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91505#pullrequestreview-429439903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70435ab5-6008-4605-a7c6-ce6242758db0",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "add a `default:` switch case that errors with unknown resourceVersionMatch",
        "createdAt" : "2020-06-12T05:13:33Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "04676ff58cf0df69a9e098d0f2585073de81cef7",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +630,634 @@\t\t\tdefault:\n\t\t\t\treturn fmt.Errorf(\"unknown ResourceVersionMatch value: %v\", match)\n\t\t\t}\n\t\t}\n"
  },
  {
    "id" : "e00c6a1f-829c-4150-b6f8-daa4d2df63f6",
    "prId" : 91505,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91505#pullrequestreview-437758903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ffe6cf9-a3e2-4f3a-9a74-52fb806a7088",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this can modify the memory pointed to by `s.getOps` and cause races and ops pollution between goroutines. see https://play.golang.org/p/Y38uhlMH10v\r\n\r\neither of the following approaches would fix this:\r\n* preferred: remove `s.getOps` entirely (I don't see it used anywhere... I think it's a holdover from when quorum reads were configurable)\r\n* truncate capacity to length when copying s.getOps to opts: `opts := s.getOps[:len(s.getOps):len(s.getOps)]`\r\n",
        "createdAt" : "2020-06-25T16:58:37Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "83e03151-6f65-47f2-8bdd-df3b23879b66",
        "parentId" : "1ffe6cf9-a3e2-4f3a-9a74-52fb806a7088",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "Removing `s.getOps` since it seems like a landmine and isn't used for anything anymore.",
        "createdAt" : "2020-06-25T18:14:07Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "fd576a7f-9ecc-40ba-a41f-130fb3c6a090",
        "parentId" : "1ffe6cf9-a3e2-4f3a-9a74-52fb806a7088",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "Huge thanks for catching this, BTW.",
        "createdAt" : "2020-06-25T18:37:36Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "04676ff58cf0df69a9e098d0f2585073de81cef7",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +409,413 @@\t\t\treturn apierrors.NewBadRequest(fmt.Sprintf(\"invalid resource version: %v\", err))\n\t\t}\n\t\topts = append(opts, clientv3.WithRev(int64(rv)))\n\t}\n"
  },
  {
    "id" : "4c8ce30e-35bb-49e0-856a-afcd2fcc8702",
    "prId" : 91505,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91505#pullrequestreview-437556290",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "430b02e4-3ab4-4dcc-ba3b-97462b9f7e2c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "nit, comment that this is verified after we get a response and that returnedRV is set to the revision we get in the response",
        "createdAt" : "2020-06-25T17:14:14Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "04676ff58cf0df69a9e098d0f2585073de81cef7",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +600,604 @@\t\tif fromRV != nil {\n\t\t\tswitch match {\n\t\t\tcase metav1.ResourceVersionMatchNotOlderThan:\n\t\t\t\t// The not older than constraint is checked after we get a response from etcd,\n\t\t\t\t// and returnedRV is then set to the revision we get from the etcd response."
  },
  {
    "id" : "1d65ff36-dea0-447a-8bc7-319c233340f1",
    "prId" : 91505,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91505#pullrequestreview-437556290",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d39ed49-abf8-4a5c-8c3d-beae7fd5c35a",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "nit, comment that this is verified after we get a response and that returnedRV is set to the revision we get in the response\r\n\r\n",
        "createdAt" : "2020-06-25T17:27:15Z",
        "updatedAt" : "2020-06-26T03:55:07Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "04676ff58cf0df69a9e098d0f2585073de81cef7",
    "line" : 147,
    "diffHunk" : "@@ -1,1 +621,625 @@\t\tif fromRV != nil {\n\t\t\tswitch match {\n\t\t\tcase metav1.ResourceVersionMatchNotOlderThan:\n\t\t\t\t// The not older than constraint is checked after we get a response from etcd,\n\t\t\t\t// and returnedRV is then set to the revision we get from the etcd response."
  },
  {
    "id" : "d7bf16d4-fadf-40e9-af91-7c0a2bdf84cf",
    "prId" : 89828,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89828#pullrequestreview-553411539",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "119cd4a7-7bbd-4f7d-b7b6-33da8aae27f3",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "run unit tests with code coverage and make sure we're hitting all the new paths introduced (something like `go test ... -coverprofile=coverage.out && go tool cover -html=cp.out`)",
        "createdAt" : "2020-12-15T14:57:00Z",
        "updatedAt" : "2020-12-16T07:53:27Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d156b84d-a28e-4bfb-9352-0211e7118bf1",
        "parentId" : "119cd4a7-7bbd-4f7d-b7b6-33da8aae27f3",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Done.\r\nI added one more thing to `TestValidateDeletionWithSuggestion` test.\r\nThe remaining uncovered path are error handling from etcd layer (but this is simple returning on error - those paths:\r\n```\r\nif err != nil {\r\n  return err\r\n}\r\n```\r\n\r\nOther than everything is covered.",
        "createdAt" : "2020-12-16T07:58:09Z",
        "updatedAt" : "2020-12-16T07:58:43Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bab6a9c6ed7d4e54da3e010a7bf0a30786d28f9",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +186,190 @@\n// Delete implements storage.Interface.Delete.\nfunc (s *store) Delete(\n\tctx context.Context, key string, out runtime.Object, preconditions *storage.Preconditions,\n\tvalidateDeletion storage.ValidateObjectFunc, cachedExistingObject runtime.Object) error {"
  },
  {
    "id" : "34f293be-a85f-4d5f-aa44-edfcc2fa5835",
    "prId" : 89828,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89828#pullrequestreview-554325817",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6dc9078a-a24d-4c40-87c0-e32e4f2e3556",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "add a unit test to make sure the right thing happens if the suggestion is stale and the key no longer exists (was already deleted). I think we would get a NotFound here and return, but verify the right thing happens",
        "createdAt" : "2020-12-15T15:12:01Z",
        "updatedAt" : "2020-12-16T07:53:27Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "8ec73069-41c7-479a-9ef0-22b567e8c925",
        "parentId" : "6dc9078a-a24d-4c40-87c0-e32e4f2e3556",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Added \"TestDeleteWithSuggestionOfDeletedObject\" test.\r\n\r\nThat said - it doesn't exercise this path. What happens is that the transation fails, we get into\r\n```\r\nif !txnResp.Succeeded {\r\n```\r\nbranch and this is handled in getState (getResp contains empty KV field and that is handled as returning \"not-found\" error).",
        "createdAt" : "2020-12-16T07:27:51Z",
        "updatedAt" : "2020-12-16T07:58:43Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "dfc866b3-b15b-4a97-8bb0-d3a37983c4b8",
        "parentId" : "6dc9078a-a24d-4c40-87c0-e32e4f2e3556",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "`txnResp.Responses[0]` exists for a NotFound response?",
        "createdAt" : "2020-12-16T21:32:36Z",
        "updatedAt" : "2020-12-16T21:32:37Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "af2a904f-8985-421c-bdd4-a8bbed40a7d5",
        "parentId" : "6dc9078a-a24d-4c40-87c0-e32e4f2e3556",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Yes - it exists and being GetResponse contains empty set of KV pairs.",
        "createdAt" : "2020-12-17T07:04:19Z",
        "updatedAt" : "2020-12-17T07:04:20Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bab6a9c6ed7d4e54da3e010a7bf0a30786d28f9",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +267,271 @@\t\tmetrics.RecordEtcdRequestLatency(\"delete\", getTypeName(out), startTime)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tif !txnResp.Succeeded {"
  },
  {
    "id" : "00314c2d-b4bf-4761-89e2-c3457c53585e",
    "prId" : 82303,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82303#pullrequestreview-283359397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f71499e-624a-4015-b9f3-454d6b3e04fe",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Can the new code be put in a helper func so that code is reused between this and the s.updateState case below ?",
        "createdAt" : "2019-09-04T03:22:46Z",
        "updatedAt" : "2019-09-04T03:22:47Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "a3534963-36e3-446a-a98f-feb7183d1ab7",
        "parentId" : "1f71499e-624a-4015-b9f3-454d6b3e04fe",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if it doesn't make it harder to follow, that's possible. I wanted to keep this very very simple for backports.",
        "createdAt" : "2019-09-04T03:25:55Z",
        "updatedAt" : "2019-09-04T03:25:55Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "88f0be6e59aa56570deaa2a9163d0eb3a3ae20f8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +275,279 @@\tfor {\n\t\tif err := preconditions.Check(key, origState.obj); err != nil {\n\t\t\t// If our data is already up to date, return the error\n\t\t\tif !mustCheckData {\n\t\t\t\treturn err"
  },
  {
    "id" : "2be737f4-54a2-4386-825d-b29443033d8e",
    "prId" : 79848,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79848#pullrequestreview-259164701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "435ecc39-ed23-4f5a-a4b9-320c5447fb9c",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "resourceVersion was not used in the Get call to etcd and had no effect on the response-- I think it's confusing to return it like this. Can we revert this change?",
        "createdAt" : "2019-07-08T21:24:15Z",
        "updatedAt" : "2019-07-08T21:24:15Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "6459b61bca8ea8d02ccd1771288345af498ae176",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +126,130 @@\t\t}\n\t\tif len(resourceVersion) > 0 {\n\t\t\tif rv, err := s.versioner.ParseResourceVersion(resourceVersion); err == nil {\n\t\t\t\treturn storage.NewKeyNotFoundError(key, int64(rv))\n\t\t\t}"
  },
  {
    "id" : "fcd2f619-11f2-45cb-8ec0-feb79b90c29e",
    "prId" : 78713,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78713#pullrequestreview-246135698",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28c5efcf-98ad-4b5b-bd7c-7534215b55ff",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "check using `CanAddr()`? test seems to be panic'ing\r\n\r\n```\r\n--- FAIL: TestCreateWithKeyExist (0.10s)\r\npanic: reflect.Value.Addr of unaddressable value [recovered]\r\n\tpanic: reflect.Value.Addr of unaddressable value\r\n```",
        "createdAt" : "2019-06-05T16:41:05Z",
        "updatedAt" : "2019-06-06T13:18:26Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "acfab555-da15-4c84-9dd5-75ded0a64c55",
        "parentId" : "28c5efcf-98ad-4b5b-bd7c-7534215b55ff",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "all real places that call this use `conversion.EnforcePtr(...)` which ensures addressability",
        "createdAt" : "2019-06-05T16:58:09Z",
        "updatedAt" : "2019-06-06T13:18:26Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c6b5995f-a056-4cfd-a402-210077d54548",
        "parentId" : "28c5efcf-98ad-4b5b-bd7c-7534215b55ff",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "switched the test to use that as well",
        "createdAt" : "2019-06-05T16:58:24Z",
        "updatedAt" : "2019-06-06T13:18:26Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3bb81ff327bc4daa7bc7c9819d9ab18343d69a7",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +689,693 @@\t}\n\n\tif u, ok := v.Addr().Interface().(runtime.Unstructured); ok {\n\t\tstate.obj = u.NewEmptyInstance()\n\t} else {"
  },
  {
    "id" : "4667124e-2ce7-41b8-b5ac-51ebd32313b0",
    "prId" : 76346,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76346#pullrequestreview-228025915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5aacb2d-8daf-4304-ab60-03d1a35a2772",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if we got a decode error, then deleted unconditionally, and that delete succeeded, I wouldn't expect an error to be returned",
        "createdAt" : "2019-04-17T13:38:12Z",
        "updatedAt" : "2019-05-17T16:54:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "01a41966-0937-48f2-a917-85dd1e639354",
        "parentId" : "e5aacb2d-8daf-4304-ab60-03d1a35a2772",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "The original code behaved the same. If you feel strongly, I'd prefer fix it in another pull.",
        "createdAt" : "2019-04-17T22:18:32Z",
        "updatedAt" : "2019-05-17T16:54:41Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d40e3c9e98ecade4a62d18f20163164d3e5e862",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +201,205 @@\t\torigState, err := s.getState(getResp, key, v, false)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tif preconditions != nil {"
  },
  {
    "id" : "36d4710b-200e-466c-98eb-a271e4de081c",
    "prId" : 59757,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59757#pullrequestreview-98531734",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52440c27-d265-46e0-a8f8-75921ddc6d12",
        "parentId" : null,
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "we should not issue large range to etcd. just to count the keys, we should use keys only option with limit and maybe also with pagination.",
        "createdAt" : "2018-02-21T21:08:04Z",
        "updatedAt" : "2018-02-23T12:33:36Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      },
      {
        "id" : "e91e8804-c260-4b0b-b9ad-4dc5adc0ab3a",
        "parentId" : "52440c27-d265-46e0-a8f8-75921ddc6d12",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "is `WithCountOnly` not more efficient than `WithKeysOnly`?",
        "createdAt" : "2018-02-21T21:12:48Z",
        "updatedAt" : "2018-02-23T12:33:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "898af13c-7b4f-4223-a2a6-9d2a3d506c25",
        "parentId" : "52440c27-d265-46e0-a8f8-75921ddc6d12",
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "oh. i did not see count only is already there. but still if we know the count is going to be huge, probably need pagination as well. etcd does not maintain a index for count(*), but scan everything internally. ",
        "createdAt" : "2018-02-21T21:56:46Z",
        "updatedAt" : "2018-02-23T12:33:36Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      },
      {
        "id" : "f7cb0d41-1bdf-4c08-978d-9e311cf45550",
        "parentId" : "52440c27-d265-46e0-a8f8-75921ddc6d12",
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "doing a micro-benchmark could be helpful. if count 1M keys take <1s, it might be ok.",
        "createdAt" : "2018-02-21T21:58:35Z",
        "updatedAt" : "2018-02-23T12:33:36Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      },
      {
        "id" : "ba9da082-91ac-41d0-86d1-577d8731679e",
        "parentId" : "52440c27-d265-46e0-a8f8-75921ddc6d12",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "If we would have 1M keys, we would have other problems than this metric...",
        "createdAt" : "2018-02-22T07:25:30Z",
        "updatedAt" : "2018-02-23T12:33:36Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "024195bb-bd8f-428f-93c7-2af4208de84b",
        "parentId" : "52440c27-d265-46e0-a8f8-75921ddc6d12",
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "counting 1M keys just to make the test result more reliable and safer. you can divide that by 10 to get 100k for an upper bound, etc.. periodically blocking etcd for more than 50ms is not good in general (for node kinds there can be 5k, for pods there can be 50k). i have not really looked into this pr. so just some random suggestions and thoughts on this.",
        "createdAt" : "2018-02-22T07:47:57Z",
        "updatedAt" : "2018-02-23T12:33:36Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      },
      {
        "id" : "f937744a-0e85-4a60-86be-28fbf86e5fd4",
        "parentId" : "52440c27-d265-46e0-a8f8-75921ddc6d12",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "@xiang90\r\n\r\nI can run benchmarks after the freeze, as it's not enough time now. It shouldn't be an issue, as it's a 1-word change to disable this functionality.\r\n\r\nAs for pagination I'm not sure I follow. I believe that etcd-side 'WithLimit' restricts response size (i.e. number of items returned), which shouldn't apply to \"count only\" requests, as they always return single value. Or is the 'countOnly' implemented on the client side, thus \"limit\" will effectively cap the returned value to, well, limit?\r\n\r\nOr maybe you meant doing some kind of manual pagination by dividing the range into multiple subranges, querying them separately and combining the result?",
        "createdAt" : "2018-02-22T11:30:03Z",
        "updatedAt" : "2018-02-23T12:33:36Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb7101ef7c9892e0a5d3a718038b93e84b9314b5",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +415,419 @@func (s *store) Count(key string) (int64, error) {\n\tkey = path.Join(s.pathPrefix, key)\n\tgetResp, err := s.client.KV.Get(context.Background(), key, clientv3.WithRange(clientv3.GetPrefixRangeEnd(key)), clientv3.WithCountOnly())\n\tif err != nil {\n\t\treturn 0, err"
  },
  {
    "id" : "b6af769a-93f2-4db0-a163-0ddd96f8bd49",
    "prId" : 58376,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58376#pullrequestreview-89516073",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb21f1d5-18a5-46fa-82b5-506624c25299",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Could you please link to root issues when adding glue logic. ",
        "createdAt" : "2018-01-17T15:57:45Z",
        "updatedAt" : "2018-01-17T15:58:20Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "37026355-49b2-44c4-851d-a805f1a3d028",
        "parentId" : "eb21f1d5-18a5-46fa-82b5-506624c25299",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "you mean like a github issue? I trust the added test more than a comment",
        "createdAt" : "2018-01-17T16:27:18Z",
        "updatedAt" : "2018-01-17T16:27:18Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f58b092b-cf30-4f1c-9b9d-760433704243",
        "parentId" : "eb21f1d5-18a5-46fa-82b5-506624c25299",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "It's more of a general request, not anything blocking. \r\nFolks who want to refactor code it helps having history behind the changes.  \r\n\r\nFor example \"Guaranteed Update\" is a throwback from the original design and as this PR shows that's a hard thing to \"Guarantee\". ",
        "createdAt" : "2018-01-17T17:01:53Z",
        "updatedAt" : "2018-01-17T17:01:53Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "7695ed4f7931a85c082294a75f67b4959e86e94b",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +339,343 @@\t\t\t\t}\n\t\t\t}\n\t\t\t// recheck that the data from etcd is not stale before short-circuiting a write\n\t\t\tif !origState.stale {\n\t\t\t\treturn decode(s.codec, s.versioner, origState.data, out, origState.rev)"
  },
  {
    "id" : "fb4c0685-b802-4928-848e-a9ddb0ca29cf",
    "prId" : 54780,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54780#pullrequestreview-75675700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "355c9893-5236-490f-aca7-77685817c8d0",
        "parentId" : null,
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "> How does this fix #53379?\r\n\r\nWithout this change, we will restart loop anyway.\r\nFor crds, we will fail in the second loop.",
        "createdAt" : "2017-11-06T02:44:55Z",
        "updatedAt" : "2017-11-07T01:45:32Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      },
      {
        "id" : "4ae944fd-4f60-4284-81b1-10b86f335732",
        "parentId" : "355c9893-5236-490f-aca7-77685817c8d0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I'm ok with the change, I just don't see how it fixes #53379... doesn't that have more to do with CRD not supporting strategic merge patch?",
        "createdAt" : "2017-11-06T20:53:18Z",
        "updatedAt" : "2017-11-07T01:45:32Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f91cc37a-7b48-4851-85ff-064e1e07f92f",
        "parentId" : "355c9893-5236-490f-aca7-77685817c8d0",
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "> doesn't that have more to do with CRD not supporting strategic merge patch?\r\n\r\nYes, we have more to do.\r\nAfter this change,, #53379  will be difficult to reproduce. But we do have some problem with CRD not supporting strategic merge patch.\r\n\r\nI have changed the description:\r\n`fix` ---->`patial fix`",
        "createdAt" : "2017-11-07T01:55:15Z",
        "updatedAt" : "2017-11-07T01:55:15Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      },
      {
        "id" : "d57b7151-3e21-4c5b-88f8-ac56c36f9a9b",
        "parentId" : "355c9893-5236-490f-aca7-77685817c8d0",
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "Hi, @liggitt @sttts \r\nI did some research.\r\n[This](https://github.com/kubernetes/kubernetes/pull/48394/files#diff-0f11327dd3daafdfe8e326e895616f66R302) logic is designed to make make sure a no-op patch will cause object stored in etcd to upgrade to the new preferred version.\r\nFor example:\r\n1. in etcd, we have apiversion v1alpha1\r\n2. we `do patch -p ‘{}' `\r\n3. in etcd, the object is stored as v1beta1\r\n\r\nSo, for CRD, we will never run into [this](https://github.com/kubernetes/kubernetes/blob/687c8d329790472ac0fa9a6f1d785fdc27710d79/staging/src/k8s.io/apiserver/pkg/storage/etcd3/store.go#L335) if scope. So, there is no second loop for CRDs, #53379 is totally fixed(or shadowed) as far as I can see.",
        "createdAt" : "2017-11-10T07:02:56Z",
        "updatedAt" : "2017-11-10T07:02:57Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e800350a2e05899f7435385bebe7fc101142d95",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +333,337 @@\t\t\t\t\treturn err\n\t\t\t\t}\n\t\t\t\tif !bytes.Equal(data, origState.data) {\n\t\t\t\t\t// original data changed, restart loop\n\t\t\t\t\tmustCheckData = false"
  },
  {
    "id" : "19f5b15a-fe65-410c-8d1f-252aeab9ba8a",
    "prId" : 52949,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52949#pullrequestreview-68148596",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "533d139d-39a2-4194-94cd-16892bca1c05",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "we have constants for this",
        "createdAt" : "2017-10-09T06:27:55Z",
        "updatedAt" : "2017-10-10T13:12:02Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "d061f6bc-1818-46e0-99e1-723ddf1308bd",
        "parentId" : "533d139d-39a2-4194-94cd-16892bca1c05",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "These are not publicly accessible - even if we have constants I think we reserve the right to change this.",
        "createdAt" : "2017-10-10T01:15:19Z",
        "updatedAt" : "2017-10-10T13:12:02Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "13b887e0-29fc-4be9-b626-8dfd8086a5c8",
        "parentId" : "533d139d-39a2-4194-94cd-16892bca1c05",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Also we don't take dependencies on metav1 in this package because the storage interface is supposed to abstract that.",
        "createdAt" : "2017-10-10T01:28:55Z",
        "updatedAt" : "2017-10-10T13:12:02Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce0dc76901bd1ce36ca20c5cf96b89088d0e95a2",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +430,434 @@\t}\n\tswitch c.APIVersion {\n\tcase \"meta.k8s.io/v1\":\n\t\tif c.ResourceVersion == 0 {\n\t\t\treturn \"\", 0, fmt.Errorf(\"continue key is not valid: incorrect encoded start resourceVersion (version meta.k8s.io/v1)\")"
  },
  {
    "id" : "78c14ca3-c11e-4830-b0ad-94e58cc0fccd",
    "prId" : 48921,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48921#pullrequestreview-59305403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6630bbec-f279-4201-b30f-ed57d6d6c620",
        "parentId" : null,
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "nit: bool arg on public func is not preferred. it is not readable.",
        "createdAt" : "2017-08-16T04:59:49Z",
        "updatedAt" : "2017-09-01T14:50:06Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      },
      {
        "id" : "fd27c77b-1f96-4eb9-8bf0-a209675d9c79",
        "parentId" : "6630bbec-f279-4201-b30f-ed57d6d6c620",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yeah, don't have any easy way to refactor.  We should refactor in the future.",
        "createdAt" : "2017-08-29T16:39:22Z",
        "updatedAt" : "2017-09-01T14:50:06Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b8e42afa6d6abb459c332690c931585c0177b9c",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +93,97 @@// NewWithNoQuorumRead returns etcd3 implementation of storage.Interface\n// where Get operations don't require quorum read.\nfunc NewWithNoQuorumRead(c *clientv3.Client, codec runtime.Codec, prefix string, transformer value.Transformer, pagingEnabled bool) storage.Interface {\n\treturn newStore(c, false, pagingEnabled, codec, prefix, transformer)\n}"
  },
  {
    "id" : "9f274905-68e9-44d0-8f43-e1f5956b4de6",
    "prId" : 48921,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48921#pullrequestreview-59304777",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb780b47-b967-4d96-80d5-fa6e4a983fa8",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Can't we merge this if with the one above?",
        "createdAt" : "2017-08-23T12:32:31Z",
        "updatedAt" : "2017-09-01T14:50:06Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "6a9c847c-31de-4e67-aae7-34db0906df71",
        "parentId" : "bb780b47-b967-4d96-80d5-fa6e4a983fa8",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Could, but I wanted a specific message for the user",
        "createdAt" : "2017-08-29T16:37:02Z",
        "updatedAt" : "2017-09-01T14:50:06Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b8e42afa6d6abb459c332690c931585c0177b9c",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +432,436 @@\t\t\treturn \"\", 0, fmt.Errorf(\"continue key is not valid: %s\", cleaned)\n\t\t}\n\t\tif len(cleaned) == 0 {\n\t\t\treturn \"\", 0, fmt.Errorf(\"continue key is not valid: encoded start key empty (version 0)\")\n\t\t}"
  },
  {
    "id" : "96083436-ee82-4830-aa72-9891e699378b",
    "prId" : 48394,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48394#pullrequestreview-74273372",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dc7b7a9-e90b-4683-a66e-798182722876",
        "parentId" : null,
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "if `bytes.Equal(origState.data, neworigState.data) == true` here, can we return directly?\r\n\r\nhttps://github.com/kubernetes/kubernetes/pull/54780",
        "createdAt" : "2017-11-05T06:33:27Z",
        "updatedAt" : "2017-11-05T06:33:27Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      }
    ],
    "commit" : "b851614adfe2b39941d518485480ff527fa4f0c1",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +312,316 @@\t\t\t\t\treturn err\n\t\t\t\t}\n\t\t\t\tmustCheckData = false\n\t\t\t\tcontinue\n\t\t\t}"
  },
  {
    "id" : "0af28e13-b9c3-4fa2-a2da-103c9584b117",
    "prId" : 46460,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46460#pullrequestreview-45231102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfc09bf4-c676-4d0e-ba86-df960f08cd64",
        "parentId" : null,
        "authorId" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "body" : "@sakshamsharma Could you explain what this change does, please?",
        "createdAt" : "2017-06-20T14:08:07Z",
        "updatedAt" : "2017-06-20T14:08:07Z",
        "lastEditedBy" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "tags" : [
        ]
      },
      {
        "id" : "8f1691e1-f0e3-49e7-8472-35139e468fae",
        "parentId" : "dfc09bf4-c676-4d0e-ba86-df960f08cd64",
        "authorId" : "992c4ffe-40aa-4314-8c54-4b38052f13fd",
        "body" : "The intention is to have the location of the resource as the key. Since the key was written using its own location, it must be authenticated (while decrypting) using its own location as well. `kv.Key` is its location. `key` was a top level location (example: `/api/Secrets/`). When I was attempting to write integration tests (which couldn't get done at that time though), I discovered this issue.\r\n\r\nLet me know if I went wrong somewhere.",
        "createdAt" : "2017-06-20T18:44:22Z",
        "updatedAt" : "2017-06-20T18:44:22Z",
        "lastEditedBy" : "992c4ffe-40aa-4314-8c54-4b38052f13fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "9760d00d08ef0619e30a7b1b90fd290cab960069",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +389,393 @@\telems := make([]*elemForDecode, 0, len(getResp.Kvs))\n\tfor _, kv := range getResp.Kvs {\n\t\tdata, _, err := s.transformer.TransformFromStorage(kv.Value, authenticatedDataString(kv.Key))\n\t\tif err != nil {\n\t\t\tutilruntime.HandleError(fmt.Errorf(\"unable to transform key %q: %v\", key, err))"
  },
  {
    "id" : "4ff9c05f-08da-4b0f-a8df-31112fea2f3b",
    "prId" : 43152,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43152#pullrequestreview-63093678",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e598bb65-4ab1-4390-b2e0-ece2ba4ed42e",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "Lets make this logic a function since its the same as above https://github.com/kubernetes/kubernetes/pull/43152/files#diff-0f11327dd3daafdfe8e326e895616f66R284",
        "createdAt" : "2017-09-15T16:10:01Z",
        "updatedAt" : "2017-09-15T18:02:13Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "c02ac80d-862f-44e2-8c21-8b16e41043c4",
        "parentId" : "e598bb65-4ab1-4390-b2e0-ece2ba4ed42e",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "I'm not sure that's entirely necessary given that it's only used in 2 places. If it's 3+, definitely... but if you want it, I can do it. Have a suggestion for a name?",
        "createdAt" : "2017-09-15T16:15:56Z",
        "updatedAt" : "2017-09-15T18:02:13Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "cdc5ae8f-9505-4575-94b5-093a1bd30825",
        "parentId" : "e598bb65-4ab1-4390-b2e0-ece2ba4ed42e",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "It's going to end up having to be\r\n\r\n```go\r\nfunc (s *store) yourNameHere(ctx context.Contect, key string, v reflect.Value, ignoreNotFound bool) (*objState, error)\r\n```\r\n\r\nNot convinced we need it.",
        "createdAt" : "2017-09-15T16:20:18Z",
        "updatedAt" : "2017-09-15T18:02:13Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "9318b0f7-eba7-46da-bbed-80756a35d406",
        "parentId" : "e598bb65-4ab1-4390-b2e0-ece2ba4ed42e",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Ha ok I do see it used in 3 places",
        "createdAt" : "2017-09-15T16:21:13Z",
        "updatedAt" : "2017-09-15T18:02:13Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf33df16b52508974ddedacd814010cfe0fb79f0",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +306,310 @@\t\tif err != nil {\n\t\t\t// It's possible we were working with stale data\n\t\t\tif mustCheckData && apierrors.IsConflict(err) {\n\t\t\t\t// Actually fetch\n\t\t\t\torigState, err = getCurrentState()"
  },
  {
    "id" : "d3f7e067-92ea-4493-ba9f-afd74b1356ea",
    "prId" : 40664,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40664#pullrequestreview-20368670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4c4e643-9e0f-4fba-b495-91c9a4363c35",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Is the only reason this isn't abstracted is because of byte[] vs string?   Can't we de-dupe?",
        "createdAt" : "2017-02-06T19:41:41Z",
        "updatedAt" : "2017-02-06T19:48:20Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "89a85d67-eb19-49ef-97f7-80be2e0dd635",
        "parentId" : "b4c4e643-9e0f-4fba-b495-91c9a4363c35",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I was hoping we'd drop etcd2 first.  For now, I'd like to avoid unnecessary copies on every store (etcd3 is forcing it), but I would expect that someone would implement both interfaces as efficiently as possible.",
        "createdAt" : "2017-02-06T21:07:41Z",
        "updatedAt" : "2017-02-06T21:07:41Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc4b50640b7f57a0ea5294d69aa939f9de3cbd60",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +43,47 @@// ValueTransformer allows a string value to be transformed before being read from or written to the underlying store. The methods\n// must be able to undo the transformation caused by the other.\ntype ValueTransformer interface {\n\t// TransformFromStorage may transform the provided data from its underlying storage representation or return an error.\n\t// Stale is true if the object on disk is stale and a write to etcd should be issued, even if the contents of the object"
  }
]