[
  {
    "id" : "8b56f4e6-0c6a-4522-8fb9-fa1d1d9c9e0a",
    "prId" : 94364,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94364#pullrequestreview-484051081",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98f50361-9933-4cef-8c0a-96b2b46988bf",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Unit tests are still missing for changes in this file, but they are blocked on our ability to tun etcd for testing:\r\nhttps://github.com/etcd-io/etcd/issues/12265\r\n\r\nWill work on making that happen.",
        "createdAt" : "2020-09-02T14:15:55Z",
        "updatedAt" : "2020-09-15T06:19:46Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "07afad7d-9eec-4ffc-adfb-b299a19e9ba7",
        "parentId" : "98f50361-9933-4cef-8c0a-96b2b46988bf",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "The tests are now added.",
        "createdAt" : "2020-09-08T11:44:17Z",
        "updatedAt" : "2020-09-15T06:19:46Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "af61e8fbdf3d83e2b287721fe0d57dd4a2234450",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +92,96 @@}\n\nfunc newWatcher(client *clientv3.Client, codec runtime.Codec, newFunc func() runtime.Object, versioner storage.Versioner, transformer value.Transformer) *watcher {\n\tres := &watcher{\n\t\tclient:      client,"
  },
  {
    "id" : "cd1ab9bb-e915-4698-a349-7e7baa5f8861",
    "prId" : 94364,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94364#pullrequestreview-494976700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "942055b1-ea84-4cee-9e02-e14f2156912c",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I guess I would have expected a new bookmark type of object rather than a object that has the same type as the other objects. Is there a reason you did it this way?",
        "createdAt" : "2020-09-02T20:01:32Z",
        "updatedAt" : "2020-09-15T06:19:46Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "eba5da4a-766f-46dd-a703-aa0fdb9327ee",
        "parentId" : "942055b1-ea84-4cee-9e02-e14f2156912c",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Two reasons:\r\nCompatibility: this is exactly what we did for watch bookmarks https://github.com/kubernetes/enhancements/blob/master/keps/sig-api-machinery/20190206-watch-bookmark.md#proposal:\r\n```\r\nAs a result, we will represent bookmark event by setting Bookmark type and Object of appropriate type with just ObjectMeta.ResourceVersion field set.\r\n```\r\n\r\n[The other reason is also that our client libraries (reflector, etc.) assume that incoming objects are all of the exact same type.]",
        "createdAt" : "2020-09-03T05:43:30Z",
        "updatedAt" : "2020-09-15T06:19:46Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "99b8f6d1-e41a-44ee-aa8a-3bff73a87ef3",
        "parentId" : "942055b1-ea84-4cee-9e02-e14f2156912c",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I see. I guess I didn't see/understand that originally, I wish we hadn't done it that way. I'm a little concerned unsophisticated clients might confuse this for a real object. I probably assumed \"of appropriate type\" meant bookmark-typed, not object-typed.\r\n\r\nI guess, clients have to opt-in for bookmarks anyway, which kind of destroys my argument here. But it also means we could have made a bookmark type and fixed our libraries that made bad assumptions.\r\n\r\nI guess it's too late to fix now without making clients opt-in again :(",
        "createdAt" : "2020-09-03T16:27:15Z",
        "updatedAt" : "2020-09-15T06:19:46Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "e78d8336-1814-4a28-aa16-1b2f5700a69c",
        "parentId" : "942055b1-ea84-4cee-9e02-e14f2156912c",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Yeah - I wouldn't change that in this PR at least (we may consider doing that independently from that change for watch bookmarks, but even for that I'm not sure it's really worth it).\r\n\r\n-- edited --",
        "createdAt" : "2020-09-08T11:45:00Z",
        "updatedAt" : "2020-09-15T06:19:46Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "d705c131-bf3a-4c9a-babe-d432550468ea",
        "parentId" : "942055b1-ea84-4cee-9e02-e14f2156912c",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "It'll probably never be worth it :'(",
        "createdAt" : "2020-09-23T19:00:06Z",
        "updatedAt" : "2020-09-23T19:00:07Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "5963aa52-1bf7-4d86-8f65-5c4af39414c1",
        "parentId" : "942055b1-ea84-4cee-9e02-e14f2156912c",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I guess code-wise it seems like this change is a lot bigger than it needs to be because of the need to plumb the newFunc everywhere. Would it make sense to keep a bookmark-type object internally and only convert to the \"real\" type object right before encoding to the wire? (which I believe is here?)",
        "createdAt" : "2020-09-23T19:04:41Z",
        "updatedAt" : "2020-09-23T19:04:41Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "81e66fa8-0158-4aab-9ab0-13814a50c80c",
        "parentId" : "942055b1-ea84-4cee-9e02-e14f2156912c",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I think it could make sense in the past. But given we already did it like that for watch bookmarks, I think it's a bit too late.\r\n\r\n> right before encoding to the wire? (which I believe is here?)\r\n\r\nIt actually isn't here. There are a number of layers that this event goes through (watchache, the fixup part (which sets selflink) etc.) so that actually wouldn't be easier codewise.\r\n\r\nI agree that that passing newFunc is a bit unfortunate, but it's also boilerplate easy to review (and super low-risk change).",
        "createdAt" : "2020-09-23T19:21:03Z",
        "updatedAt" : "2020-09-23T19:21:03Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "af61e8fbdf3d83e2b287721fe0d57dd4a2234450",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +333,337 @@\t\tres = &watch.Event{\n\t\t\tType:   watch.Bookmark,\n\t\t\tObject: object,\n\t\t}\n\tcase e.isDeleted:"
  },
  {
    "id" : "d075614c-98e7-4f8b-bc15-44cad3576672",
    "prId" : 94364,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94364#pullrequestreview-494981429",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd837a7d-9278-4d02-9125-e1d1da2f1a27",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I'm a little surprised you can't get this out of the codec or versioner already.",
        "createdAt" : "2020-09-23T18:58:23Z",
        "updatedAt" : "2020-09-23T18:58:23Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "28219fd8-242e-47b3-83bd-5131e6edc52b",
        "parentId" : "dd837a7d-9278-4d02-9125-e1d1da2f1a27",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Unfortunately you can't.\r\nCodec only supports encoding and decoding:\r\nhttps://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/runtime/interfaces.go#L94\r\nVersioner is only about conversions:\r\nhttps://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/runtime/interfaces.go#L220\r\n\r\nThere is ObjectCreater interface:\r\nhttps://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/runtime/interfaces.go#L254\r\nthat our runtime.Scheme implements, but that doesn't really change much in terms of passing arguments.",
        "createdAt" : "2020-09-23T19:27:52Z",
        "updatedAt" : "2020-09-23T19:27:52Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "af61e8fbdf3d83e2b287721fe0d57dd4a2234450",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +96,100 @@\t\tclient:      client,\n\t\tcodec:       codec,\n\t\tnewFunc:     newFunc,\n\t\tversioner:   versioner,\n\t\ttransformer: transformer,"
  },
  {
    "id" : "47eaaee1-bd00-47d6-a777-9779842d39b3",
    "prId" : 91833,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91833#pullrequestreview-435130480",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f16b93bb-85cf-48df-9d6c-958a3dd487e3",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This and the below message are actually important. I think we should make them V(2) or more, but wrap in a AtMost construct, since when they happen they could happen a lot. We added this to another such log message, I can search if you can't find it.",
        "createdAt" : "2020-06-22T17:24:50Z",
        "updatedAt" : "2020-06-22T17:24:50Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "af60e7b34d59d635740880a03e7e2587ec9ba041",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +262,266 @@\t\t\t}\n\t\t\tif len(wc.resultChan) == outgoingBufSize {\n\t\t\t\tklog.V(3).InfoS(\"Fast watcher, slow processing. Probably caused by slow dispatching events to watchers\", \"outgoingEvents\", outgoingBufSize)\n\t\t\t}\n\t\t\t// If user couldn't receive results fast enough, we also block incoming events from watcher."
  },
  {
    "id" : "d92a3aad-6927-44eb-85a5-4f00849377af",
    "prId" : 89881,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89881#pullrequestreview-389892234",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0ba74be-2de6-4957-b0e1-fcd590fda563",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I'm wondering what does it mean for leader reelections. Are we also going to break *all* watches?\r\nLeader reelections may happen in perfectly healthy cluster (e.g. during rolling upgrade of masters), so I would like to ensure this is exactly what we want - what is the exact semantic of `WithRequireLeader`?\r\n\r\nAnother thing is that if this is infrequently changing resource type, it may trigger relists of all the watchers (even with watch-cache):\r\nhttps://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/storage/cacher/cacher.go#L422\r\n[that can potentially overload and kill control plane]\r\n\r\nIt's not a newly added thing with this PR, but it may make it happen much more frequently....",
        "createdAt" : "2020-04-06T15:11:51Z",
        "updatedAt" : "2020-04-07T20:42:42Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "47a1b0fd-6761-465d-83ad-dbdde598cb83",
        "parentId" : "f0ba74be-2de6-4957-b0e1-fcd590fda563",
        "authorId" : "24ab4292-a16f-4d8f-b5cb-bf0e1ea4f6ff",
        "body" : "> I'm wondering what does it mean for leader reelections. Are we also going to break all watches?\r\n\r\nThe etcd server waits until it cannot find a leader for 3 election timeouts to cancel existing streams. 3 is currently a hard coded constant. The election timeout defaults to 1000ms.\r\n\r\nIf the cluster is healthy, when the leader is stopped, the leadership transfer should be smooth. (leader transfers its leadership before stopping). If leader is hard killed, other servers will take an election timeout to realize leader lost and start campaign.",
        "createdAt" : "2020-04-06T15:30:08Z",
        "updatedAt" : "2020-04-07T20:42:42Z",
        "lastEditedBy" : "24ab4292-a16f-4d8f-b5cb-bf0e1ea4f6ff",
        "tags" : [
        ]
      },
      {
        "id" : "9c9f55dc-2c77-453a-aba8-82867a38d2f9",
        "parentId" : "f0ba74be-2de6-4957-b0e1-fcd590fda563",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "OK - that sounds fine from my perspective.\r\n\r\nThough it would be useful to add this explanation in the comment. @embano1 - can you please add comment like what @jingyih wrote?",
        "createdAt" : "2020-04-06T17:31:11Z",
        "updatedAt" : "2020-04-07T20:42:42Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "e6ba18a1-818c-495a-9a12-351bf0e6fce6",
        "parentId" : "f0ba74be-2de6-4957-b0e1-fcd590fda563",
        "authorId" : "91363a4f-8f21-40b3-86ed-dc59c306e0cf",
        "body" : "Updated the PR comment and the commit message with the explanation from @jingyih ",
        "createdAt" : "2020-04-07T08:23:50Z",
        "updatedAt" : "2020-04-07T20:42:42Z",
        "lastEditedBy" : "91363a4f-8f21-40b3-86ed-dc59c306e0cf",
        "tags" : [
        ]
      },
      {
        "id" : "a4836d21-e143-4bca-a80a-05774cce0044",
        "parentId" : "f0ba74be-2de6-4957-b0e1-fcd590fda563",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Please add this comment to this file - it's much easier to understand it than look for the PR that added it.",
        "createdAt" : "2020-04-07T13:28:53Z",
        "updatedAt" : "2020-04-07T20:42:42Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "0b55e105-e0b6-4aa0-af38-b9a05abd7791",
        "parentId" : "f0ba74be-2de6-4957-b0e1-fcd590fda563",
        "authorId" : "91363a4f-8f21-40b3-86ed-dc59c306e0cf",
        "body" : "@wojtek-t sorry, I misunderstood you then. With comment you mean in the code comment section (file) not the Github comment here, correct? Just wanted to clarify.",
        "createdAt" : "2020-04-07T20:38:40Z",
        "updatedAt" : "2020-04-07T20:42:42Z",
        "lastEditedBy" : "91363a4f-8f21-40b3-86ed-dc59c306e0cf",
        "tags" : [
        ]
      },
      {
        "id" : "2586e6f2-ab09-48f6-894d-218c36323cfa",
        "parentId" : "f0ba74be-2de6-4957-b0e1-fcd590fda563",
        "authorId" : "91363a4f-8f21-40b3-86ed-dc59c306e0cf",
        "body" : "Added comment to the file.",
        "createdAt" : "2020-04-07T20:43:04Z",
        "updatedAt" : "2020-04-07T20:43:05Z",
        "lastEditedBy" : "91363a4f-8f21-40b3-86ed-dc59c306e0cf",
        "tags" : [
        ]
      },
      {
        "id" : "4ee29b2e-63b2-4aef-99c7-d7d46e958230",
        "parentId" : "f0ba74be-2de6-4957-b0e1-fcd590fda563",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Yes - sorry for not being clear.\r\nAnd thanks for adding.",
        "createdAt" : "2020-04-08T11:38:30Z",
        "updatedAt" : "2020-04-08T11:38:30Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "70c9f770d7aa2194bfd3f58fe01756a7d200b866",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +135,139 @@\t// hard killed, other servers will take an election timeout to realize\n\t// leader lost and start campaign.\n\twc.ctx, wc.cancel = context.WithCancel(clientv3.WithRequireLeader(ctx))\n\treturn wc\n}"
  },
  {
    "id" : "68fc2fcd-ebf8-4cde-9784-2e90db8c6914",
    "prId" : 77756,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77756#pullrequestreview-240192495",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c652e24-7cb4-42cb-a9d5-a8e8eb637f65",
        "parentId" : null,
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "I need to find a better way to disable this test flag. Suggestions welcome.",
        "createdAt" : "2019-05-14T06:01:22Z",
        "updatedAt" : "2019-05-21T20:07:59Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "2ae2a1e4-3f35-46ea-9ada-df22dc561c19",
        "parentId" : "2c652e24-7cb4-42cb-a9d5-a8e8eb637f65",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "ugly, but I don't feel too strongly about it.",
        "createdAt" : "2019-05-15T08:14:42Z",
        "updatedAt" : "2019-05-21T20:07:59Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "9e5114d9-8b7e-4fad-ab54-0009d1f4ab2d",
        "parentId" : "2c652e24-7cb4-42cb-a9d5-a8e8eb637f65",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I believe to remember that our CI has some mechanism to detect debug symbols in built binaries. I haven't found it on a quick search. Trying with https://github.com/kubernetes/kubernetes/pull/77917. Maybe it was also in OpenShift though. That way one could verify that we do not ship binaries using this hook.",
        "createdAt" : "2019-05-15T09:11:33Z",
        "updatedAt" : "2019-05-21T20:07:59Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "afffcd6d-6001-4ad5-b429-8a5e0784f8ed",
        "parentId" : "2c652e24-7cb4-42cb-a9d5-a8e8eb637f65",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Found it: https://github.com/kubernetes/kubernetes/blob/master/hack/verify-symbols.sh\r\n\r\nCan we add a pattern or make this func match an existing pattern?",
        "createdAt" : "2019-05-15T09:15:56Z",
        "updatedAt" : "2019-05-21T20:07:59Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "12031110-8345-4a03-8a3b-da54068f30d7",
        "parentId" : "2c652e24-7cb4-42cb-a9d5-a8e8eb637f65",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "Good find. I'll look into it.",
        "createdAt" : "2019-05-16T15:38:57Z",
        "updatedAt" : "2019-05-21T20:07:59Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "c825525d-2eaf-4e85-b378-c57ba7105d05",
        "parentId" : "2c652e24-7cb4-42cb-a9d5-a8e8eb637f65",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "Looks like `verify-symbols` is no longer doing it's job. Both locally and from a recent `pull-kubernetes-verify` runs I see:\r\n\r\n```\r\nVerifying verify-symbols.sh\r\n\r\n+++ Running case: verify.symbols \r\n+++ working dir: /home/prow/go/src/k8s.io/kubernetes\r\n+++ command: bash \"hack/make-rules/../../hack/verify-symbols.sh\"\r\n+++ [0516 15:44:46] Building go targets for linux/amd64:\r\n    cmd/hyperkube\r\nnm: /home/prow/go/src/k8s.io/kubernetes/_output/local/bin/linux/amd64/hyperkube: no symbols\r\n```\r\n\r\nI'll open a separate issue since that hypercube build done by the script has a cost associated with it, and we should only do it if we're going to get some benefit, and without any symbol tables in the binary, we're currently not.",
        "createdAt" : "2019-05-16T16:56:43Z",
        "updatedAt" : "2019-05-21T20:07:59Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "02e89a9a-e2c1-41e3-b187-37c5df65a9b0",
        "parentId" : "2c652e24-7cb4-42cb-a9d5-a8e8eb637f65",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "https://github.com/kubernetes/kubernetes/issues/77983",
        "createdAt" : "2019-05-16T17:03:39Z",
        "updatedAt" : "2019-05-21T20:07:59Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "3d523277-de68-427d-875a-7730f8ea9f2c",
        "parentId" : "2c652e24-7cb4-42cb-a9d5-a8e8eb637f65",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Fixed: https://github.com/kubernetes/kubernetes/pull/78018",
        "createdAt" : "2019-05-17T09:34:09Z",
        "updatedAt" : "2019-05-21T20:07:59Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "cf30a375-6dcf-4d5e-b6e2-253a64a52815",
        "parentId" : "2c652e24-7cb4-42cb-a9d5-a8e8eb637f65",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "Thanks @sttts , I've added the symbol.",
        "createdAt" : "2019-05-21T17:27:55Z",
        "updatedAt" : "2019-05-21T20:07:59Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e23769f018ff50763656f99edd907e91e8bfff3e",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +65,69 @@\tfatalOnDecodeError = b\n}\n\ntype watcher struct {\n\tclient      *clientv3.Client"
  },
  {
    "id" : "2619a970-94be-4d96-913b-34538af32351",
    "prId" : 56198,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56198#pullrequestreview-83806789",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df613f22-144a-4f6a-9b10-a4cb162af487",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "why is this necessary if the acceptAll() func already returns true based on `Empty()`?",
        "createdAt" : "2017-12-15T13:24:22Z",
        "updatedAt" : "2017-12-15T13:24:23Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ae7bdd211e3df1350446b6def142b4d31c75e52",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +119,123 @@\tif pred.Empty() {\n\t\t// The filter doesn't filter out any object.\n\t\twc.internalPred = storage.Everything\n\t}\n\twc.ctx, wc.cancel = context.WithCancel(ctx)"
  }
]