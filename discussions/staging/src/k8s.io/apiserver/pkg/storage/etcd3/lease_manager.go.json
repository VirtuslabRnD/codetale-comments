[
  {
    "id" : "d9b9d8f3-6f81-41b9-8cd6-144067836b97",
    "prId" : 100084,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100084#pullrequestreview-610671120",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "147dd435-06f0-4961-bb77-42a17d08cab8",
        "parentId" : null,
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "nit: `< 1` is a character shorter :) ",
        "createdAt" : "2021-03-11T18:10:31Z",
        "updatedAt" : "2021-03-11T18:20:28Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "6dda8f63-6067-40a9-b59c-264a4648ab40",
        "parentId" : "147dd435-06f0-4961-bb77-42a17d08cab8",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "one-liner: `config.MaxObjectCount  = int64(math.Max(float64(config.MaxObjectCount), float64(defaultLeaseMaxObjectCount)))` \r\n\r\npractically we're likely not to hit conversion issues here due to the expectation of low numbers (or else why would we be doing this at all?)\r\n",
        "createdAt" : "2021-03-11T18:18:37Z",
        "updatedAt" : "2021-03-11T18:20:28Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "70ffd5c3-4be8-4067-bc99-568036848380",
        "parentId" : "147dd435-06f0-4961-bb77-42a17d08cab8",
        "authorId" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "body" : "Thanks for note. I would like to avoid making any changes at this point as this is exactly the code we have in master.",
        "createdAt" : "2021-03-12T10:58:30Z",
        "updatedAt" : "2021-03-12T10:58:30Z",
        "lastEditedBy" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c06bdd0529a7279cd5f092d0425f101fced3c54",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +68,72 @@// newDefaultLeaseManager creates a new lease manager using default setting.\nfunc newDefaultLeaseManager(client *clientv3.Client, config LeaseManagerConfig) *leaseManager {\n\tif config.MaxObjectCount <= 0 {\n\t\tconfig.MaxObjectCount = defaultLeaseMaxObjectCount\n\t}"
  },
  {
    "id" : "19cbfcc7-1be1-4014-99bb-ddc9bd669d5e",
    "prId" : 98257,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98257#pullrequestreview-574420794",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8ffff58-fc33-4c35-89f2-b78bf90b8893",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "If config.MaxObjectCount is <= 0, I think you should either choose a reasonable value or panic. Otherwise callers we didn't notice (I'm mostly thinking of tests) might end up with zero as the value, which definitely seems wrong.",
        "createdAt" : "2021-01-22T16:31:35Z",
        "updatedAt" : "2021-02-01T10:21:12Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8db72c38c34a965800bd9d570c495c45f142186",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +71,75 @@\t\tconfig.MaxObjectCount = defaultLeaseMaxObjectCount\n\t}\n\treturn newLeaseManager(client, config.ReuseDurationSeconds, 0.05, config.MaxObjectCount)\n}\n"
  },
  {
    "id" : "aba68b66-8b98-4396-a3a0-2154c05fa804",
    "prId" : 97480,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97480#pullrequestreview-564175676",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd625ee8-b370-4147-9432-900b9e668538",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I like this.\r\nYou may want to extract the introduction of this LeaseManagerConfig to a separate PR (with just a single ReuseDurationSeconds field) as this is clear improvement and we can have that already merged.",
        "createdAt" : "2021-01-07T19:05:48Z",
        "updatedAt" : "2021-01-11T13:22:23Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "44c453f0-b005-4a41-ab49-31bc6ef28d64",
        "parentId" : "fd625ee8-b370-4147-9432-900b9e668538",
        "authorId" : "59920a9a-4a3d-4e8e-92f0-b4cd6a6d0c8e",
        "body" : ":thinking: I think in previous PR [we decide](https://github.com/kubernetes/kubernetes/pull/97009#discussion_r535950842) to make a LeaseManagerConfig at this PR ",
        "createdAt" : "2021-01-08T10:57:43Z",
        "updatedAt" : "2021-01-11T13:22:23Z",
        "lastEditedBy" : "59920a9a-4a3d-4e8e-92f0-b4cd6a6d0c8e",
        "tags" : [
        ]
      },
      {
        "id" : "c7272718-3061-47e0-9f1e-628a74c3a1c3",
        "parentId" : "fd625ee8-b370-4147-9432-900b9e668538",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I didn't know if this PR will happen or not back then - now I see it :)\r\nBut if you want to leave in this PR - that's fine too.",
        "createdAt" : "2021-01-08T11:01:22Z",
        "updatedAt" : "2021-01-11T13:22:23Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e9fe39cd7c3ee67fcc29e6ca0836917c5a4e9e1",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +33,37 @@\n// LeaseManagerConfig is configuration for creating a lease manager.\ntype LeaseManagerConfig struct {\n\t// ReuseDurationSeconds specifies time in seconds that each lease is reused\n\tReuseDurationSeconds int64"
  },
  {
    "id" : "96b96a72-b452-4fcf-9322-b070c73902c8",
    "prId" : 97480,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97480#pullrequestreview-565161439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d84785cf-a7fa-40b7-af1d-40e95fa0489b",
        "parentId" : null,
        "authorId" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "body" : "Can we also log large leases? I'm thinking about something like:\r\n\r\nif l.count > largeLeaseThreshold {\r\nklog.Infof(\"The object count for lease %x is large: %v\", l.prevLeaseID, l.count)\r\n}\r\n\r\nThe value from logging is that we know from our experience that the largest leases are created in tests before we start gathering metrics.",
        "createdAt" : "2021-01-08T14:42:32Z",
        "updatedAt" : "2021-01-11T13:22:23Z",
        "lastEditedBy" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "tags" : [
        ]
      },
      {
        "id" : "f59ae418-994d-4ce4-b649-b1222378f8bf",
        "parentId" : "d84785cf-a7fa-40b7-af1d-40e95fa0489b",
        "authorId" : "59920a9a-4a3d-4e8e-92f0-b4cd6a6d0c8e",
        "body" : "What value of largeLeaseThreshold do you suggest?",
        "createdAt" : "2021-01-11T08:50:32Z",
        "updatedAt" : "2021-01-11T13:22:23Z",
        "lastEditedBy" : "59920a9a-4a3d-4e8e-92f0-b4cd6a6d0c8e",
        "tags" : [
        ]
      },
      {
        "id" : "ff61d4b4-82f5-4c2f-874a-4e58bbc29a2b",
        "parentId" : "d84785cf-a7fa-40b7-af1d-40e95fa0489b",
        "authorId" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "body" : "This should be relatively easy to change later so let's start with e.g. 5k. We will see if this makes sense.",
        "createdAt" : "2021-01-11T09:00:55Z",
        "updatedAt" : "2021-01-11T13:22:23Z",
        "lastEditedBy" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e9fe39cd7c3ee67fcc29e6ca0836917c5a4e9e1",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +107,111 @@\tl.prevLeaseID = lcr.ID\n\tl.prevLeaseExpirationTime = now.Add(time.Duration(ttl) * time.Second)\n\t// refresh count\n\tif l.leaseAttachedObjectCount > largeLeaseThreshold {\n\t\tklog.Infof(\"The object count for lease %x is large: %v\", l.prevLeaseID, l.leaseAttachedObjectCount)"
  },
  {
    "id" : "7c25e9ad-aee3-4b08-8a30-0d8851f2ac43",
    "prId" : 97009,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97009#pullrequestreview-544780030",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc1548d4-123c-4634-b7b2-1c43c6982f34",
        "parentId" : null,
        "authorId" : "59920a9a-4a3d-4e8e-92f0-b4cd6a6d0c8e",
        "body" : "We could change this to an option struct if we can config a max size of a lease further.",
        "createdAt" : "2020-12-02T10:09:20Z",
        "updatedAt" : "2020-12-04T11:20:03Z",
        "lastEditedBy" : "59920a9a-4a3d-4e8e-92f0-b4cd6a6d0c8e",
        "tags" : [
        ]
      },
      {
        "id" : "910e73db-fead-4ff8-b777-870bde8136be",
        "parentId" : "fc1548d4-123c-4634-b7b2-1c43c6982f34",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Let's do that when we will be adding the next argument.",
        "createdAt" : "2020-12-04T09:18:13Z",
        "updatedAt" : "2020-12-04T11:20:03Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c99567005db15d220f2b792e98af735c5aa24f6e",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +44,48 @@// newDefaultLeaseManager creates a new lease manager using default setting.\nfunc newDefaultLeaseManager(client *clientv3.Client, leaseReuseDurationSeconds int64) *leaseManager {\n\treturn newLeaseManager(client, leaseReuseDurationSeconds, 0.05)\n}\n"
  }
]