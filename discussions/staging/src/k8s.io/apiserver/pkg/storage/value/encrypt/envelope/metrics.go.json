[
  {
    "id" : "c5e366ed-c78d-49eb-87e9-e8b5e63f440b",
    "prId" : 88294,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88294#pullrequestreview-362851963",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20f70d9e-2485-4c8a-a57a-b66dd572e047",
        "parentId" : null,
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "You still need `lastFromStorage = start` as the last line of the case statement.",
        "createdAt" : "2020-02-21T19:01:10Z",
        "updatedAt" : "2020-02-21T19:08:05Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "2db8049f-7366-4d02-aad4-34606e14a098",
        "parentId" : "20f70d9e-2485-4c8a-a57a-b66dd572e047",
        "authorId" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "body" : "Yup, thanks for catching this.",
        "createdAt" : "2020-02-21T19:08:20Z",
        "updatedAt" : "2020-02-21T19:08:21Z",
        "lastEditedBy" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "tags" : [
        ]
      }
    ],
    "commit" : "684d6fb0ade6ac088af391cedd70bc847941a54f",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +88,92 @@\t\t\tlastFromStorage = start\n\t\t}\n\t\tdekCacheInterArrivals.WithLabelValues(transformationType).Observe(start.Sub(lastFromStorage).Seconds())\n\t\tlastFromStorage = start\n\tcase toStorageLabel:"
  },
  {
    "id" : "10ca41d8-ff55-449d-9861-165ee7c90447",
    "prId" : 88294,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88294#pullrequestreview-362852593",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55d12e52-e86a-43dd-89f8-9c8b5bd21026",
        "parentId" : null,
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "Below this line too.",
        "createdAt" : "2020-02-21T19:01:21Z",
        "updatedAt" : "2020-02-21T19:08:05Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "0a5dbdaa-e09e-4974-97a5-72f4876426a4",
        "parentId" : "55d12e52-e86a-43dd-89f8-9c8b5bd21026",
        "authorId" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "body" : "Done.",
        "createdAt" : "2020-02-21T19:09:21Z",
        "updatedAt" : "2020-02-21T19:09:21Z",
        "lastEditedBy" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "tags" : [
        ]
      }
    ],
    "commit" : "684d6fb0ade6ac088af391cedd70bc847941a54f",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +97,101 @@\t\t\tlastToStorage = start\n\t\t}\n\t\tdekCacheInterArrivals.WithLabelValues(transformationType).Observe(start.Sub(lastToStorage).Seconds())\n\t\tlastToStorage = start\n\t}"
  },
  {
    "id" : "f6a79134-99ff-4372-82fb-62b6d3296a64",
    "prId" : 88294,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88294#pullrequestreview-362989404",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a09841c-2614-48e7-a854-b99c8bce00f8",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "Do concurrent reads/writes have a chance to cause lock contention?  Just wondering if the existing scale issues with KMS get worse with this change.",
        "createdAt" : "2020-02-22T00:30:12Z",
        "updatedAt" : "2020-02-22T00:30:54Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "684d6fb0ade6ac088af391cedd70bc847941a54f",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +82,86 @@\tswitch transformationType {\n\tcase fromStorageLabel:\n\t\tlockLastFromStorage.Lock()\n\t\tdefer lockLastFromStorage.Unlock()\n"
  },
  {
    "id" : "647959a4-2af7-4a04-a680-ec7a7391726a",
    "prId" : 88294,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88294#pullrequestreview-363106675",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2030c4d5-a81f-47b7-a821-057257ba25a0",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Since there is no early return from this func, lockLastFromStorage.Unlock() can be placed toward the end of the case statement",
        "createdAt" : "2020-02-23T16:26:59Z",
        "updatedAt" : "2020-02-23T16:26:59Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "684d6fb0ade6ac088af391cedd70bc847941a54f",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +83,87 @@\tcase fromStorageLabel:\n\t\tlockLastFromStorage.Lock()\n\t\tdefer lockLastFromStorage.Unlock()\n\n\t\tif lastFromStorage.IsZero() {"
  }
]