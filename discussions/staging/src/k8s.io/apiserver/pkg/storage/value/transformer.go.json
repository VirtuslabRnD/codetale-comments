[
  {
    "id" : "2c447c03-9b4a-4170-81d4-1c74ebc98387",
    "prId" : 82638,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82638#pullrequestreview-287790010",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3544e6ac-a871-4ae5-9500-f3e42c9dd06c",
        "parentId" : null,
        "authorId" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "body" : "Could we handle this error in the same way as below - append it to errors.",
        "createdAt" : "2019-09-12T20:34:25Z",
        "updatedAt" : "2019-09-12T20:34:25Z",
        "lastEditedBy" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "tags" : [
        ]
      },
      {
        "id" : "ae216522-171d-4845-b800-9aaa04ba3d84",
        "parentId" : "3544e6ac-a871-4ae5-9500-f3e42c9dd06c",
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "I am not against such a change in master but it does not make sense for a backport fix.\r\n\r\nThis error is special in the sense that it is never an actual error since it represents the identity code saying \"I saw encrypted data.\"  Including it in the final set of errors will mostly produce noise.",
        "createdAt" : "2019-09-13T02:32:59Z",
        "updatedAt" : "2019-09-13T02:32:59Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "496c1aae7aad55088fe15e1cbfba2efa0623e8cf",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +145,149 @@\t\t\t// identify (during reads from disk) whether the data being read is encrypted or not. If the data is encrypted,\n\t\t\t// it shall throw an error, but that error should not prevent subsequent transformers from being tried.\n\t\t\tif len(transformer.Prefix) == 0 && err != nil {\n\t\t\t\tcontinue\n\t\t\t}"
  },
  {
    "id" : "6e5becff-bd53-45a4-b211-1dac60d055f1",
    "prId" : 80874,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80874#pullrequestreview-269914015",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7c4b615-9380-48ca-86f5-143658262865",
        "parentId" : null,
        "authorId" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "body" : "Should not this be moved into the loop?\r\nOtherwise the start time for all transformations will be the same.",
        "createdAt" : "2019-08-01T22:17:16Z",
        "updatedAt" : "2019-08-19T20:29:50Z",
        "lastEditedBy" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "tags" : [
        ]
      },
      {
        "id" : "6789dfef-ffdb-4a0f-a09c-8c66c2ca832f",
        "parentId" : "a7c4b615-9380-48ca-86f5-143658262865",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "line#146 requires start time being set before for loop. it also makes sense because only one of the transformers will be called.",
        "createdAt" : "2019-08-01T22:32:26Z",
        "updatedAt" : "2019-08-19T20:29:50Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      },
      {
        "id" : "f008d0ae-2653-4da7-b4a8-5e8c0deeae74",
        "parentId" : "a7c4b615-9380-48ca-86f5-143658262865",
        "authorId" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "body" : "You are correct.",
        "createdAt" : "2019-08-01T22:36:06Z",
        "updatedAt" : "2019-08-19T20:29:50Z",
        "lastEditedBy" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "tags" : [
        ]
      },
      {
        "id" : "fb250f9e-7e65-4fa6-bb22-4885fa2ae5a6",
        "parentId" : "a7c4b615-9380-48ca-86f5-143658262865",
        "authorId" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "body" : "/assign @liggitt ",
        "createdAt" : "2019-08-01T22:43:49Z",
        "updatedAt" : "2019-08-19T20:29:50Z",
        "lastEditedBy" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "tags" : [
        ]
      }
    ],
    "commit" : "099484ee5fb185e92cd154e29c63cf34201e803f",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +129,133 @@// the first transformer.\nfunc (t *prefixTransformers) TransformFromStorage(data []byte, context Context) ([]byte, bool, error) {\n\tstart := time.Now()\n\tfor i, transformer := range t.transformers {\n\t\tif bytes.HasPrefix(data, transformer.Prefix) {"
  },
  {
    "id" : "059b14f8-7b87-4dfb-883d-8c7a5119f226",
    "prId" : 80874,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80874#pullrequestreview-276203199",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffdaa58e-03c0-4a17-8911-320a5260c6be",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this does work that is not attributed to the prefix, right?",
        "createdAt" : "2019-08-02T15:11:26Z",
        "updatedAt" : "2019-08-19T20:29:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "1bda982e-f50a-4d80-8631-778b2473caa1",
        "parentId" : "ffdaa58e-03c0-4a17-8911-320a5260c6be",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "yes, if there is no prefix found, it will still record the errors.",
        "createdAt" : "2019-08-02T17:12:55Z",
        "updatedAt" : "2019-08-19T20:29:50Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      },
      {
        "id" : "a4289672-21a3-4369-89de-de0d6e7957a0",
        "parentId" : "ffdaa58e-03c0-4a17-8911-320a5260c6be",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "it looks like `transformer.Transformer.TransformFromStorage` does work and returns an error that we throw away, then record a `none` prefix and a \"the provided value does not match any of the supported transformers\" error (that is not actually accurate, right?)",
        "createdAt" : "2019-08-02T18:08:16Z",
        "updatedAt" : "2019-08-19T20:29:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "98bfab9c-d182-4274-801c-1c5e01ddad4c",
        "parentId" : "ffdaa58e-03c0-4a17-8911-320a5260c6be",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "this case (`transformer.Transformer.TransformFromStorage` does work and returns an error that we throw away) only happens when we have identity transformer in the `t.transformers` and it cannot transform from storage and there is no subsequent transformers or subsequent transformers fail `bytes.HasPrefix(data, transformer.Prefix)`. `len(transformer.Prefix) == 0` means identity transformer.\r\n\r\nif there is no transformer match the passed-in data, recording a none prefix and a \"the provided value does not match any of the supported transformers\" error seems accurate.\r\n\r\nbtw, the comment “but that error should not prevent subsequent transformers from being tried.” is a bit misleading cause it is only preventing the next subsequent transformer from being tried not all subsequent transformers. will update that in the next push.",
        "createdAt" : "2019-08-02T20:11:57Z",
        "updatedAt" : "2019-08-19T20:29:50Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      },
      {
        "id" : "a1dae182-3f27-4ed7-a073-7310e0d19e34",
        "parentId" : "ffdaa58e-03c0-4a17-8911-320a5260c6be",
        "authorId" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "body" : "I think that there could be two potential scenarios here:\r\n1. Prefix on a record coming from etcd does not match any prefixes in the EncryptionConfig - bad configuration. This is what this second call to RecordTransformation will catch. In this case, sending prefix of \"none\" is probably misleading (perhaps \"unexpected\" or \"unknown\").\r\n\r\n2. kube-apiserver is in the decryption mode - Identity provider is the first on the list, and we have not yet decrypted all the secrets - this the line where we check the length of the transformer.Prefix against 0 - Identity transformer.\r\nHere we could inject a call to RecordTransformation and specify \"identity\" as the name of the prefix.\r\n\r\nAdding unit tests to confirm the above would be great.",
        "createdAt" : "2019-08-02T20:57:10Z",
        "updatedAt" : "2019-08-19T20:29:50Z",
        "lastEditedBy" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "tags" : [
        ]
      },
      {
        "id" : "4e2c8a9e-317c-4eed-9e03-1a963e208fad",
        "parentId" : "ffdaa58e-03c0-4a17-8911-320a5260c6be",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "Done",
        "createdAt" : "2019-08-16T23:16:20Z",
        "updatedAt" : "2019-08-19T20:29:50Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      }
    ],
    "commit" : "099484ee5fb185e92cd154e29c63cf34201e803f",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +137,141 @@\t\t\t// identify (during reads from disk) whether the data being read is encrypted or not. If the data is encrypted,\n\t\t\t// it shall throw an error, but that error should not prevent the next subsequent transformer from being tried.\n\t\t\tif len(transformer.Prefix) == 0 && err != nil {\n\t\t\t\tcontinue\n\t\t\t}"
  },
  {
    "id" : "4965a8fe-158e-48c5-b797-4f6a49fbcceb",
    "prId" : 80874,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80874#pullrequestreview-276817520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a863a26-a3e9-48eb-9188-cf5c7de686ba",
        "parentId" : null,
        "authorId" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "body" : "Should we record the fact that the identity transformer was called, but returned an error due to the record being encrypted?",
        "createdAt" : "2019-08-19T19:49:55Z",
        "updatedAt" : "2019-08-19T20:29:50Z",
        "lastEditedBy" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "tags" : [
        ]
      },
      {
        "id" : "5e72fead-8b49-477b-8dfa-001eb7a3ee3c",
        "parentId" : "8a863a26-a3e9-48eb-9188-cf5c7de686ba",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "this error shows our intention to remove encryption right?",
        "createdAt" : "2019-08-19T20:25:39Z",
        "updatedAt" : "2019-08-19T20:29:50Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      },
      {
        "id" : "26292b40-1a9d-46ff-8a43-a6c839ff04f2",
        "parentId" : "8a863a26-a3e9-48eb-9188-cf5c7de686ba",
        "authorId" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "body" : "Yes.\r\nIt would be interesting to get a count of clusters that are in the decryption mode. However, there is probably an easier way to do this. For example, by examining EncryptionConfig. So, I think this is probably OK not to record this failure.",
        "createdAt" : "2019-08-19T21:11:41Z",
        "updatedAt" : "2019-08-19T21:11:41Z",
        "lastEditedBy" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "tags" : [
        ]
      }
    ],
    "commit" : "099484ee5fb185e92cd154e29c63cf34201e803f",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +137,141 @@\t\t\t// identify (during reads from disk) whether the data being read is encrypted or not. If the data is encrypted,\n\t\t\t// it shall throw an error, but that error should not prevent the next subsequent transformer from being tried.\n\t\t\tif len(transformer.Prefix) == 0 && err != nil {\n\t\t\t\tcontinue\n\t\t\t}"
  },
  {
    "id" : "66e34032-3bc9-4f59-98c5-939430909a39",
    "prId" : 41939,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41939#pullrequestreview-38769147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f3a3b32-0280-4274-b8d7-95f5a0a043ef",
        "parentId" : null,
        "authorId" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "body" : "Is it possible that the `transformers` is nil here? Should we add a check for that case in `NewPrefixTransformers()`?",
        "createdAt" : "2017-05-17T18:06:53Z",
        "updatedAt" : "2017-05-17T18:06:54Z",
        "lastEditedBy" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "tags" : [
        ]
      },
      {
        "id" : "d3cc4a3d-ed27-41c7-92f1-6773b403f008",
        "parentId" : "6f3a3b32-0280-4274-b8d7-95f5a0a043ef",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "We generally don't guard against passing nil to constructors since it's coding error to get to that point.",
        "createdAt" : "2017-05-17T19:44:04Z",
        "updatedAt" : "2017-05-17T19:44:04Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "7827899b1dd22074eb230e241f63e69499046fb6",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +135,139 @@// TransformToStorage uses the first transformer and adds its prefix to the data.\nfunc (t *prefixTransformers) TransformToStorage(data []byte, context Context) ([]byte, error) {\n\ttransformer := t.transformers[0]\n\tprefixedData := make([]byte, len(transformer.Prefix), len(data)+len(transformer.Prefix))\n\tcopy(prefixedData, transformer.Prefix)"
  }
]