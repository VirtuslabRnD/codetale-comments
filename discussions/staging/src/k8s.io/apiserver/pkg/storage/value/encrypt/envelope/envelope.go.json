[
  {
    "id" : "0f1bd93c-6142-451c-9175-ffaf74694690",
    "prId" : 85363,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85363#pullrequestreview-325753696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7828b90-43b0-4637-83a5-bed0d371e6a3",
        "parentId" : null,
        "authorId" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "body" : "This is a behavior change - previously `cacheSize == 0` meant default cacheSize.\r\nIt wasn't possible to run this transformer without a cache.\r\n\r\nNow, cache is optional, which complicates the code.\r\n\r\nDoes it ever make sense to run without a cache?",
        "createdAt" : "2019-11-22T00:41:21Z",
        "updatedAt" : "2019-12-02T21:21:26Z",
        "lastEditedBy" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "tags" : [
        ]
      },
      {
        "id" : "3904a4bf-6cc4-4966-a7c7-434331052d9b",
        "parentId" : "d7828b90-43b0-4637-83a5-bed0d371e6a3",
        "authorId" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "body" : "1. Security conscious users may choose to trade performance for security by opting out of cache. This is consistent with the best practices of not keeping secrets in memory after use.\r\n2. When users explicitly set CacheSize to 0 (prior to this PR) the resulting CacheSize will be 1000 - probably not what users would expect. ",
        "createdAt" : "2019-11-22T00:46:03Z",
        "updatedAt" : "2019-12-02T21:21:26Z",
        "lastEditedBy" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "tags" : [
        ]
      },
      {
        "id" : "22907e04-668a-46bc-9a14-718566209eed",
        "parentId" : "d7828b90-43b0-4637-83a5-bed0d371e6a3",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Security conscious users may choose to trade performance for security by opting out of cache.\r\n\r\nDoesn't that mean a list API call makes potentially thousands (or even tens or hundreds of thousands) of KMS calls? Is that even workable?",
        "createdAt" : "2019-11-25T21:10:48Z",
        "updatedAt" : "2019-12-02T21:21:26Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "76ee56ca-faf6-4f3b-839f-3c844fa1d7db",
        "parentId" : "d7828b90-43b0-4637-83a5-bed0d371e6a3",
        "authorId" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "body" : "Added validation check for the case where cachesize is set to 0. Such condition will result in a validation error.\r\n",
        "createdAt" : "2019-12-02T21:26:29Z",
        "updatedAt" : "2019-12-02T21:26:29Z",
        "lastEditedBy" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "tags" : [
        ]
      }
    ],
    "commit" : "a151aa35dc21881d178e498141e5f58df13fb400",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +66,70 @@\t)\n\n\tif cacheSize > 0 {\n\t\tcache, err = lru.New(cacheSize)\n\t\tif err != nil {"
  },
  {
    "id" : "0623eb33-d300-4a43-84e6-f620eb34dfad",
    "prId" : 82543,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82543#pullrequestreview-286555970",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09b73ec2-5eb8-45b9-830e-7c817e480429",
        "parentId" : null,
        "authorId" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "body" : "We should add a comment that explains why we don't wrap (add more information) to the error message.\r\nIt may be better to be explicit and use status.FromError - this way we make it explicit that our contract is to produce an error with Status.",
        "createdAt" : "2019-09-10T23:39:31Z",
        "updatedAt" : "2019-09-10T23:57:28Z",
        "lastEditedBy" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "tags" : [
        ]
      },
      {
        "id" : "b5062b23-8311-4e3f-8950-46ba22af5bb8",
        "parentId" : "09b73ec2-5eb8-45b9-830e-7c817e480429",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "`status.FromError` is producing `status.Status`, not an error.\r\n`status.FromError(err).Err() == err`",
        "createdAt" : "2019-09-10T23:45:23Z",
        "updatedAt" : "2019-09-10T23:57:28Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      },
      {
        "id" : "2e7cbdc2-d6b7-45de-b4ab-2cd4134a7d7c",
        "parentId" : "09b73ec2-5eb8-45b9-830e-7c817e480429",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "The %q should definitely be a %v. As of go1.13 which we are upgrading to [imminently](https://github.com/kubernetes/kubernetes/issues/82531), you can call https://godoc.org/errors#As. Are we using status.FromErr yet?",
        "createdAt" : "2019-09-11T03:53:08Z",
        "updatedAt" : "2019-09-11T03:53:09Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "d701fe4d-6c97-4754-bb12-763d5f63b8ae",
        "parentId" : "09b73ec2-5eb8-45b9-830e-7c817e480429",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "yep, https://godoc.org/errors#As can be used to unwrap the error before we record the metric. \r\n\r\nno, we are not using status.FromError.",
        "createdAt" : "2019-09-11T05:03:44Z",
        "updatedAt" : "2019-09-11T05:03:45Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      }
    ],
    "commit" : "cba43530d77d7f28bc302912e8f43c4a69fdec3b",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +98,102 @@\t\t\t// because this gRPC status error has useful error code when\n\t\t\t// record the metric.\n\t\t\treturn nil, false, err\n\t\t}\n\t\ttransformer, err = t.addTransformer(encKey, key)"
  },
  {
    "id" : "982cb760-d6c0-497a-a641-50b0c8e2682a",
    "prId" : 55184,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55184#pullrequestreview-82627914",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03f59f24-1094-4c3a-9901-64ec0bb6bbbe",
        "parentId" : null,
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "Is there a reason this `nil` isn't checked above?\r\n\r\n```\r\ntransformer := t.getTransformer(encKey)\r\n```",
        "createdAt" : "2017-12-11T19:22:11Z",
        "updatedAt" : "2017-12-11T19:22:11Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "994fd88a-eb31-4fa8-82be-b7af557d6dd2",
        "parentId" : "03f59f24-1094-4c3a-9901-64ec0bb6bbbe",
        "authorId" : "992c4ffe-40aa-4314-8c54-4b38052f13fd",
        "body" : "Where is it not checked? Line 87 contains the check.",
        "createdAt" : "2017-12-11T19:48:00Z",
        "updatedAt" : "2017-12-11T19:48:00Z",
        "lastEditedBy" : "992c4ffe-40aa-4314-8c54-4b38052f13fd",
        "tags" : [
        ]
      },
      {
        "id" : "a532cdd8-dfff-4fce-a0a6-5b661993e414",
        "parentId" : "03f59f24-1094-4c3a-9901-64ec0bb6bbbe",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "Ah, you're right. my bad.",
        "createdAt" : "2017-12-11T20:29:54Z",
        "updatedAt" : "2017-12-11T20:29:54Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "5005a541d6b5b7d950ed621d9c9fd247abb9b4af",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +153,157 @@\t\treturn _transformer.(value.Transformer)\n\t}\n\treturn nil\n}\n"
  }
]