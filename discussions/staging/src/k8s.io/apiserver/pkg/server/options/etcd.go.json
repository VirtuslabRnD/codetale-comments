[
  {
    "id" : "3a9538b3-b8bb-46f3-8c9b-5be8729f4152",
    "prId" : 100450,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100450#pullrequestreview-618318823",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04877d5d-cc4d-4930-a113-05beaf9fe17d",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "nit: empty line after } and no empty line before this flag",
        "createdAt" : "2021-03-22T13:09:04Z",
        "updatedAt" : "2021-03-23T08:31:59Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "e2e479ad-77bf-4028-a7e8-2b1163c8b5e6",
        "parentId" : "04877d5d-cc4d-4930-a113-05beaf9fe17d",
        "authorId" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "body" : "Added empty line after }\r\n\r\nPlease note that there is only one line before this flag (line. 183), which matches other flags in this file.\r\n\r\nThe \"new line\" in 184 is simply github's line wrapping of 184 line into two lines (you can use \"...\" > \"View file\" to see the full file).",
        "createdAt" : "2021-03-23T08:33:47Z",
        "updatedAt" : "2021-03-23T08:33:47Z",
        "lastEditedBy" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "3820a5d819582d4f6b4652757a3cc6c1a04692b4",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +184,188 @@\tfs.Int64Var(&s.StorageConfig.LeaseManagerConfig.ReuseDurationSeconds, \"lease-reuse-duration-seconds\", s.StorageConfig.LeaseManagerConfig.ReuseDurationSeconds,\n\t\t\"The time in seconds that each lease is reused. A lower value could avoid large number of objects reusing the same lease. Notice that a too small value may cause performance problems at storage layer.\")\n}\n\nfunc (s *EtcdOptions) ApplyTo(c *server.Config) error {"
  },
  {
    "id" : "7ee8f172-3920-4bad-8229-a3104b9c5ce9",
    "prId" : 57114,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57114#pullrequestreview-89267019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67f15d29-5af3-488e-825f-b0e51d09bb04",
        "parentId" : null,
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "Based on the code in https://github.com/kubernetes/apiserver/blob/f5fd0005b06697e897cbeb10c97b7cb5f5b85232/pkg/server/options/etcd.go#L194-L203 it seems to me that although the parser considers the group to be optional, the larger context requires that the group be specified.\r\n\r\nAnd I wonder what the user should write for resources in the default group.",
        "createdAt" : "2018-01-12T19:43:05Z",
        "updatedAt" : "2018-01-12T19:46:30Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      },
      {
        "id" : "c8a864f2-b178-4a35-9ec2-0aba7cad5cce",
        "parentId" : "67f15d29-5af3-488e-825f-b0e51d09bb04",
        "authorId" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "body" : "group is optional, when group is not present, the resource is treated as in legacy/v1 group\r\n\r\nhttps://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md#bookkeeping-for-groups\r\n\r\n\"For backward compatibility, v1 objects belong to the group with an empty name, so existing v1 config files will remain valid.\"",
        "createdAt" : "2018-01-16T18:17:53Z",
        "updatedAt" : "2018-01-16T18:17:53Z",
        "lastEditedBy" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "tags" : [
        ]
      },
      {
        "id" : "f15cad6b-7293-4c80-9a7d-017f0606f73f",
        "parentId" : "67f15d29-5af3-488e-825f-b0e51d09bb04",
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "While the group is optional as far as the parser is concerned, and perhaps other code as well, a brief glance at the code in https://github.com/kubernetes/apiserver/blob/f5fd0005b06697e897cbeb10c97b7cb5f5b85232/pkg/server/options/etcd.go#L194-L203 shows that the group is not optional in the configuration of watch cache sizes.  `cacheSize, ok := sizes[resource]` is used to look up a particular resource.  Only one key is sought in the `sizes` map.  Other keys may be present, but they will have no effect.  BTW, that leads to a bad UX.  A mistaken key leads to a silent misconfiguration.",
        "createdAt" : "2018-01-16T19:36:42Z",
        "updatedAt" : "2018-01-16T19:37:04Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      },
      {
        "id" : "8bd739e3-f098-420b-b0ab-5fcd8d280b3a",
        "parentId" : "67f15d29-5af3-488e-825f-b0e51d09bb04",
        "authorId" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "body" : "the code you mentioned (https://github.com/kubernetes/apiserver/blob/f5fd0005b06697e897cbeb10c97b7cb5f5b85232/pkg/server/options/etcd.go#L194-L203) is called by (https://github.com/kubernetes/apiserver/blob/73f85001b53a0adc72b5d3dc68abbcda0837fe3a/pkg/registry/generic/registry/store.go#L1288) where e.DefaultQualifiedResource is passed.\r\n\r\nFor resources in core group (v1/legacy), the group name is \"\" (https://github.com/kubernetes/kubernetes/blob/a1921f665be1b8c6151f8131a4474ad660268430/pkg/apis/core/register.go#L26)\r\n\r\nFor example, for \"pods\", its DefaultQualifiedResource is defined as api.Resource(\"pods\") (https://github.com/kubernetes/kubernetes/blob/dd9981d038012c120525c9e6df98b3beb3ef19e1/pkg/registry/core/pod/storage/storage.go#L71)",
        "createdAt" : "2018-01-16T21:03:40Z",
        "updatedAt" : "2018-01-16T21:03:40Z",
        "lastEditedBy" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "tags" : [
        ]
      },
      {
        "id" : "03d04727-773a-4c8d-8198-54e1f98a5c07",
        "parentId" : "67f15d29-5af3-488e-825f-b0e51d09bb04",
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "So the cluster operator must use exactly the string present in `e.DefaultQualifiedResource`; any other string appearing in a watch cache sizes spec will be accepted and ignored.\r\n\r\nI think you are telling me that for resources in the core group, `e.DefaultQualifiedResource` has the empty string as the group name.  I presume that for all the other groups, `e.DefaultQualifiedResource` does *not* have the empty string as the group name.\r\n\r\nIf I understand correctly, the operator needs to be told that --- in a watch cache sizes spec --- the group MUST be _omitted_ for resources in the default group and MUST NOT be omitted for resources in other groups.",
        "createdAt" : "2018-01-16T22:11:39Z",
        "updatedAt" : "2018-01-16T22:11:39Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb7be2699bcbecb2703d3c046b27c2a8e8b1b6dd",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +121,125 @@\t\t\"List of watch cache sizes for every resource (pods, nodes, etc.), comma separated. \"+\n\t\t\"The individual override format: resource[.group]#size, where resource is lowercase plural (no version), \"+\n\t\t\"group is optional, and size is a number. It takes effect when watch-cache is enabled. \"+\n\t\t\"Some resources (replicationcontrollers, endpoints, nodes, pods, services, apiservices.apiregistration.k8s.io) \"+\n\t\t\"have system defaults set by heuristics, others default to default-watch-cache-size\")"
  },
  {
    "id" : "aa344c27-e56c-4948-9264-4c4815aa00f1",
    "prId" : 52112,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52112#pullrequestreview-61531118",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72a2223b-4eff-4f38-beb0-556fa2be3006",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Isn't this effectively switching off the changes from: cmd/kube-apiserver/app/server.go (to use the heuristic)?",
        "createdAt" : "2017-09-08T07:12:53Z",
        "updatedAt" : "2017-09-08T17:42:33Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "b48ecbf1-822e-4333-8506-27acd5e10cfe",
        "parentId" : "72a2223b-4eff-4f38-beb0-556fa2be3006",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "No, the code in the app/server.go gets applied first to update f.Options.WatchCacheSizes",
        "createdAt" : "2017-09-08T14:57:06Z",
        "updatedAt" : "2017-09-08T17:42:33Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc2d201e155296f311ae0a9278b00dcae2d68708",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +193,197 @@\t}\n\tif f.Options.EnableWatchCache {\n\t\tsizes, err := ParseWatchCacheSizes(f.Options.WatchCacheSizes)\n\t\tif err != nil {\n\t\t\treturn generic.RESTOptions{}, err"
  },
  {
    "id" : "dfba4172-0844-45c3-8486-ed99690c93b8",
    "prId" : 41093,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41093#pullrequestreview-20945416",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29318f7a-9076-4137-88fe-1101825b16d2",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "this is odd here to mention kube's controllers.",
        "createdAt" : "2017-02-09T07:42:30Z",
        "updatedAt" : "2017-02-09T07:42:30Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "a463540d47f16f14899b2ec60779f420df9368f4",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +81,85 @@\t\t\"Number of workers spawned for DeleteCollection call. These are used to speed up namespace cleanup.\")\n\n\tfs.BoolVar(&s.EnableGarbageCollection, \"enable-garbage-collector\", s.EnableGarbageCollection, \"\"+\n\t\t\"Enables the generic garbage collector. MUST be synced with the corresponding flag \"+\n\t\t\"of the kube-controller-manager.\")"
  }
]