[
  {
    "id" : "401f3e58-c0f5-46fb-ad2a-1a0b069ad12a",
    "prId" : 98858,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98858#pullrequestreview-603140596",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b40637b-69e9-4b58-a531-b66920ea8cc2",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "indicate the specific version (v1.24) rather than \"a future release\"",
        "createdAt" : "2021-03-03T17:10:25Z",
        "updatedAt" : "2021-03-03T17:10:25Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cad9c245b84fd16cbb5bf240622af07ce7bc3585",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +249,253 @@\t}\n\tif gv != auditv1.SchemeGroupVersion {\n\t\tklog.Warningf(\"%q is deprecated and will be removed in a future release, use %q instead\", gv, auditv1.SchemeGroupVersion)\n\t}\n\treturn nil"
  },
  {
    "id" : "6f2eabc8-d5a2-46bd-a513-58d4df491ee5",
    "prId" : 67257,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67257#pullrequestreview-173916027",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16ac7405-e3e2-48f2-8531-551f0ca71fb9",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Do we need this? The feature gate should be sufficient for now, the question is whether people will want to be able to disable it after the feature goes to GA.",
        "createdAt" : "2018-11-12T07:02:23Z",
        "updatedAt" : "2018-11-15T01:04:17Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "09edccc8-47ec-4113-8997-7144e533a040",
        "parentId" : "16ac7405-e3e2-48f2-8531-551f0ca71fb9",
        "authorId" : "5191e81d-8ec6-4a27-a48d-aba90da9ff08",
        "body" : "yeah this could be removed now and added before GA, I'll do that for simplicity sake",
        "createdAt" : "2018-11-12T14:01:58Z",
        "updatedAt" : "2018-11-15T01:04:17Z",
        "lastEditedBy" : "5191e81d-8ec6-4a27-a48d-aba90da9ff08",
        "tags" : [
        ]
      },
      {
        "id" : "2635320f-340b-4009-bc54-b7d59b716762",
        "parentId" : "16ac7405-e3e2-48f2-8531-551f0ca71fb9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "feature gates are not intended to be long term enablement/disablement options. if the feature will need an option to be enabled/disabled as the feature graduates, it should have an explicit option for it",
        "createdAt" : "2018-11-12T14:11:21Z",
        "updatedAt" : "2018-11-15T01:04:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5cb70e369f0835c71d672a38bf69d2085f3f3add",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +144,148 @@\ntype AuditDynamicOptions struct {\n\t// Enabled tells whether the dynamic audit capability is enabled.\n\tEnabled bool\n}"
  },
  {
    "id" : "5c72f54e-fa14-441b-8007-7c5712c73033",
    "prId" : 67257,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67257#pullrequestreview-174708640",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3047b03d-f2ab-4a49-91f2-3323ac447df9",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "does this mean setting `--audit-dynamic-configuration` without setting the feature gate silently does nothing?",
        "createdAt" : "2018-11-14T06:39:23Z",
        "updatedAt" : "2018-11-15T01:04:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d9ea0c5c-980e-4528-9e69-e2b05b584986",
        "parentId" : "3047b03d-f2ab-4a49-91f2-3323ac447df9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "add and call a `AuditDynamicOptions#Validate` function, and if they enabled `audit-dynamic-configuration` and did not enable the feature, error",
        "createdAt" : "2018-11-14T06:40:17Z",
        "updatedAt" : "2018-11-15T01:04:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5cb70e369f0835c71d672a38bf69d2085f3f3add",
    "line" : 246,
    "diffHunk" : "@@ -1,1 +579,583 @@\nfunc (o *AuditDynamicOptions) enabled() bool {\n\treturn o.Enabled && utilfeature.DefaultFeatureGate.Enabled(features.DynamicAuditing)\n}\n"
  },
  {
    "id" : "8397a225-d077-489b-b077-75f1372f6610",
    "prId" : 67257,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67257#pullrequestreview-175129857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc76a10f-11f0-4e66-9e8a-bd44c70490c4",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "to make sure I understand correctly:\r\n* `BatchOptions` (`--audit-webhook-batch-...`) only apply to the command-line-configured webhook, so it wraps here\r\n* Dynamic config uses `plugindynamic.NewDefaultWebhookBatchConfig()` for batch settings, and is not configurable\r\n* `TruncateOptions` (`--audit-webhook-truncate-...`) apply to both command-line and dynamic backends, so it isn't wrapped here, and instead is wrapped around the unioned webhook audit backends in `ApplyTo`?\r\n\r\nif that is accurate, it's worth a comment here explaining why we're not using the `TruncateOptions`, and maybe a comment on the method and rename it to `newUntruncatedBackend()`... as it is, it looks like a bug",
        "createdAt" : "2018-11-14T23:02:28Z",
        "updatedAt" : "2018-11-15T01:04:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "15d9c1b2-9713-404b-8340-b92630b0e3ce",
        "parentId" : "bc76a10f-11f0-4e66-9e8a-bd44c70490c4",
        "authorId" : "5191e81d-8ec6-4a27-a48d-aba90da9ff08",
        "body" : "yes that is correct, we plan on possibly exposing batch options in the future as well but @tallclair and I were pushing that off for now. I'll update the naming and comments to clarify",
        "createdAt" : "2018-11-14T23:33:36Z",
        "updatedAt" : "2018-11-15T01:04:17Z",
        "lastEditedBy" : "5191e81d-8ec6-4a27-a48d-aba90da9ff08",
        "tags" : [
        ]
      }
    ],
    "commit" : "5cb70e369f0835c71d672a38bf69d2085f3f3add",
    "line" : 233,
    "diffHunk" : "@@ -1,1 +569,573 @@\t\treturn nil, fmt.Errorf(\"initializing audit webhook: %v\", err)\n\t}\n\twebhook = o.BatchOptions.wrapBackend(webhook)\n\treturn webhook, nil\n}"
  },
  {
    "id" : "3a0f78ef-aab3-43f9-9e00-2b51f0035f0b",
    "prId" : 67257,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67257#pullrequestreview-175129857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "685a2a01-31f7-4d02-ac4a-777ff3f41ac5",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "slightly surprised the static policy-based checker isn't passed in to help inform the dynamic checker... seems like that would be necessary to keep the event population as lightweight as possible. is that on a list for follow-ups as we progress to beta?",
        "createdAt" : "2018-11-14T23:14:32Z",
        "updatedAt" : "2018-11-15T01:04:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "03a0b711-3b28-4e78-a016-bbb43e275d83",
        "parentId" : "685a2a01-31f7-4d02-ac4a-777ff3f41ac5",
        "authorId" : "5191e81d-8ec6-4a27-a48d-aba90da9ff08",
        "body" : "yea thats part of the scalability testing and potential upgrades https://github.com/kubernetes/kubernetes/issues/70814. There are a couple ways this can be solved, some of which depend on the outcome of the API policy talks, so were pushing it to be done before beta.",
        "createdAt" : "2018-11-14T23:35:43Z",
        "updatedAt" : "2018-11-15T01:04:17Z",
        "lastEditedBy" : "5191e81d-8ec6-4a27-a48d-aba90da9ff08",
        "tags" : [
        ]
      }
    ],
    "commit" : "5cb70e369f0835c71d672a38bf69d2085f3f3add",
    "line" : 151,
    "diffHunk" : "@@ -1,1 +335,339 @@\t\t}\n\t\t// build dynamic backend\n\t\tdynamicBackend, checker, err = o.DynamicOptions.newBackend(c.ExternalAddress, kubeClientConfig, informers, processInfo, webhookOptions)\n\t\tif err != nil {\n\t\t\treturn err"
  },
  {
    "id" : "94975d6b-492e-440d-ad11-1935807d7b38",
    "prId" : 65763,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65763#pullrequestreview-147946286",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "869f0e6b-8c51-48a6-b640-2cc5e53a88bc",
        "parentId" : null,
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "Looks like type safeBackend should be put in package `pluginbuffered`",
        "createdAt" : "2018-08-21T03:38:04Z",
        "updatedAt" : "2018-11-16T09:33:15Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      },
      {
        "id" : "049a91e9-6dea-456e-81ea-ae597c519baa",
        "parentId" : "869f0e6b-8c51-48a6-b640-2cc5e53a88bc",
        "authorId" : "e2aaf386-2908-41e6-860b-bcb2cffa1cc7",
        "body" : "I initially had a separate package for this, but @tallclair convinced me this makes more sense here, as it is quite trivial. Since nothing in safeBackend is pluginbuffered-specific, I'd rather leave it here.",
        "createdAt" : "2018-08-21T08:05:11Z",
        "updatedAt" : "2018-11-16T09:33:15Z",
        "lastEditedBy" : "e2aaf386-2908-41e6-860b-bcb2cffa1cc7",
        "tags" : [
        ]
      },
      {
        "id" : "1ee192bc-1cfe-4e2e-8d89-e3e50e13e0b5",
        "parentId" : "869f0e6b-8c51-48a6-b640-2cc5e53a88bc",
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "Sure. Thanks.",
        "createdAt" : "2018-08-21T08:08:47Z",
        "updatedAt" : "2018-11-16T09:33:15Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a10f4eda725f55bec9893eb1c03f2402dbcd32f",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +402,406 @@type ignoreErrorsBackend struct {\n\taudit.Backend\n}\n\nfunc (i *ignoreErrorsBackend) ProcessEvents(ev ...*auditinternal.Event) bool {"
  },
  {
    "id" : "da62f518-3053-40d4-9a1a-2314b09a910a",
    "prId" : 65040,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65040#pullrequestreview-133523312",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9c049ec-e6b8-4694-a0c1-77169d7690a6",
        "parentId" : null,
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "ping @sttts  for approve this trivial fix.\r\nThanks.",
        "createdAt" : "2018-07-02T07:55:05Z",
        "updatedAt" : "2018-07-02T07:55:06Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      }
    ],
    "commit" : "42b93ab7244765dd744257a793b0b9c138146bb3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +356,360 @@\tfs.Int64Var(&o.TruncateConfig.MaxEventSize, fmt.Sprintf(\"audit-%s-truncate-max-event-size\", pluginName),\n\t\to.TruncateConfig.MaxEventSize, \"Maximum size of the audit event sent to the underlying backend. \"+\n\t\t\t\"If the size of an event is greater than this number, first request and response are removed, and \"+\n\t\t\t\"if this doesn't reduce the size enough, event is discarded.\")\n}"
  },
  {
    "id" : "1f6ec20e-79dd-4f93-a59c-1718b3996edf",
    "prId" : 60739,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60739#pullrequestreview-102042702",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "958050ea-34dd-4266-b3e4-53b8edce0aea",
        "parentId" : null,
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "What will happen if --audit-log-batch-max-wait is set to zero?",
        "createdAt" : "2018-03-05T07:27:33Z",
        "updatedAt" : "2018-03-08T19:04:08Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      },
      {
        "id" : "559ecd52-64e7-4c2b-b572-b05b362a3413",
        "parentId" : "958050ea-34dd-4266-b3e4-53b8edce0aea",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "It will hotloop. Not great, but not exactly invalid. I'd prefer to leave it as-is here.",
        "createdAt" : "2018-03-07T18:25:52Z",
        "updatedAt" : "2018-03-08T19:04:08Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "e004257919d779d56f27ad84c7f33799cc7ab580",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +171,175 @@\t\treturn nil\n\t}\n\tconfig := options.BatchConfig\n\tif config.BufferSize <= 0 {\n\t\treturn fmt.Errorf(\"invalid audit batch %s buffer size %v, must be a positive number\", pluginName, config.BufferSize)"
  },
  {
    "id" : "c7aa2415-7890-4384-8bd6-2a4edd7f876b",
    "prId" : 60739,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60739#pullrequestreview-102287941",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c1f5b16-4b84-4eb3-ab00-96efb96c8fc6",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "@crassirostris please confirm that these settings are what we want.",
        "createdAt" : "2018-03-08T07:46:03Z",
        "updatedAt" : "2018-03-08T19:04:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "7ea4e6c6-a2a2-45a1-8562-c49c69305051",
        "parentId" : "0c1f5b16-4b84-4eb3-ab00-96efb96c8fc6",
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "Yes, though it's preferrable to merge this PR after https://github.com/kubernetes/kubernetes/pull/60926, to avoid showing regressions in the scale tests",
        "createdAt" : "2018-03-08T13:16:51Z",
        "updatedAt" : "2018-03-08T19:04:08Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      }
    ],
    "commit" : "e004257919d779d56f27ad84c7f33799cc7ab580",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +117,121 @@\t\t\tBatchOptions: AuditBatchOptions{\n\t\t\t\tMode:        ModeBatch,\n\t\t\t\tBatchConfig: pluginbuffered.NewDefaultBatchConfig(),\n\t\t\t},\n\t\t\tInitialBackoff: pluginwebhook.DefaultInitialBackoff,"
  },
  {
    "id" : "ad875188-0651-4f59-9c9b-b5d2722bdc71",
    "prId" : 60237,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60237#pullrequestreview-100236154",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73fbde94-04b8-443a-b417-aaea84335e29",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Unfortunately you can't just change flags (see [deprecation policy, #5b](https://kubernetes.io/docs/reference/deprecation-policy/#deprecating-a-flag-or-cli)). I suggest marking the old one as deprecated, and making it an alias for the new one.",
        "createdAt" : "2018-02-27T19:26:35Z",
        "updatedAt" : "2018-03-01T13:31:00Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "6d40102d-f6ce-408c-9e50-9708327d0999",
        "parentId" : "73fbde94-04b8-443a-b417-aaea84335e29",
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "Good point, thanks, done",
        "createdAt" : "2018-02-28T21:30:20Z",
        "updatedAt" : "2018-03-01T13:31:00Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      }
    ],
    "commit" : "881e6d4f6f905079b2c27299e7b631b6903b6815",
    "line" : 255,
    "diffHunk" : "@@ -1,1 +352,356 @@\t\t\"Path to a kubeconfig formatted file that defines the audit webhook configuration.\"+\n\t\t\t\" Requires the 'AdvancedAuditing' feature gate.\")\n\tfs.DurationVar(&o.InitialBackoff, \"audit-webhook-initial-backoff\",\n\t\to.InitialBackoff, \"The amount of time to wait before retrying the first failed request.\")\n\tfs.DurationVar(&o.InitialBackoff, \"audit-webhook-batch-initial-backoff\","
  },
  {
    "id" : "d516c772-7805-401b-898d-70e6a7330540",
    "prId" : 60237,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60237#pullrequestreview-101098954",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd9bfae3-8068-482d-a2d4-77baea6edbef",
        "parentId" : null,
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "This changes default behavior of log backend.\r\n\r\nhttps://github.com/kubernetes/kubernetes/pull/60773",
        "createdAt" : "2018-03-05T06:21:52Z",
        "updatedAt" : "2018-03-05T06:21:52Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      },
      {
        "id" : "0a9a7ed4-98d0-4d9a-8e1b-0ba764096a46",
        "parentId" : "cd9bfae3-8068-482d-a2d4-77baea6edbef",
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "There is already a pull request: https://github.com/kubernetes/kubernetes/pull/60739",
        "createdAt" : "2018-03-05T06:37:01Z",
        "updatedAt" : "2018-03-05T06:37:01Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      },
      {
        "id" : "85f2ccb2-c6b8-44aa-84e4-04d62262e87c",
        "parentId" : "cd9bfae3-8068-482d-a2d4-77baea6edbef",
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "I know, this is a conscious decision. I believe batching is always better by default than blocking",
        "createdAt" : "2018-03-05T09:52:28Z",
        "updatedAt" : "2018-03-05T09:52:28Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      }
    ],
    "commit" : "881e6d4f6f905079b2c27299e7b631b6903b6815",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +124,128 @@\t\t\tFormat: pluginlog.FormatJson,\n\t\t\tBatchOptions: AuditBatchOptions{\n\t\t\t\tMode:        ModeBatch,\n\t\t\t\tBatchConfig: pluginbuffered.NewDefaultBatchConfig(),\n\t\t\t},"
  },
  {
    "id" : "b056208d-c80f-4117-a2fe-3911667adb1b",
    "prId" : 60056,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60056#pullrequestreview-106086648",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8d2d718-c75e-4395-8ea0-5fcb400feb67",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "how does %q look like with an array?",
        "createdAt" : "2018-03-22T10:12:02Z",
        "updatedAt" : "2018-03-22T10:12:03Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "558b5fa9-f054-4e55-a257-d51c4833c941",
        "parentId" : "f8d2d718-c75e-4395-8ea0-5fcb400feb67",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "https://play.golang.org/p/38dO_hlw0K5: `[\"foo\" \"bar\"]`",
        "createdAt" : "2018-03-22T12:02:42Z",
        "updatedAt" : "2018-03-22T12:02:42Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad25d1f9ec398e5f9e91fd225cbbfdc5aa00973f",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +208,212 @@\t}\n\tif !knownGroupVersion(gv) {\n\t\treturn fmt.Errorf(\"invalid group version, allowed versions are %q\", knownGroupVersions)\n\t}\n\treturn nil"
  },
  {
    "id" : "ab0cbfc9-b94c-4536-98ab-c9709c2bab65",
    "prId" : 60056,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60056#pullrequestreview-106070960",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7eb4f3c5-41ed-4392-9369-7cf2f124b68e",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "audit-log-group-version",
        "createdAt" : "2018-03-22T10:12:29Z",
        "updatedAt" : "2018-03-22T10:12:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "efc186f9-507a-41b1-970e-f0015a7874dd",
        "parentId" : "7eb4f3c5-41ed-4392-9369-7cf2f124b68e",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I'd keep it short `audit-log-version`. Everyone familiar with k8s will expect version to be group + actual version",
        "createdAt" : "2018-03-22T11:06:57Z",
        "updatedAt" : "2018-03-22T11:06:57Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad25d1f9ec398e5f9e91fd225cbbfdc5aa00973f",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +323,327 @@\t\t\t\" \\\"json\\\" indicates structured json format. Requires the 'AdvancedAuditing' feature\"+\n\t\t\t\" gate. Known formats are \"+strings.Join(pluginlog.AllowedFormats, \",\")+\".\")\n\tfs.StringVar(&o.GroupVersionString, \"audit-log-version\", o.GroupVersionString,\n\t\t\"API group and version used for serializing audit events written to log.\")\n}"
  },
  {
    "id" : "c131fb9b-c9bb-4da5-af38-ec0002f20a6c",
    "prId" : 56638,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56638#pullrequestreview-80468790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b4d25e1-d3bd-4168-9c08-cfe2317da4cf",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "nit: burst should probably be >= QPS?",
        "createdAt" : "2017-11-30T22:25:25Z",
        "updatedAt" : "2017-11-30T22:32:15Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "d67634d6-0ac4-4c67-892c-fda205416d9e",
        "parentId" : "4b4d25e1-d3bd-4168-9c08-cfe2317da4cf",
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "Not necessarily. Burst is the max number of requests simultaneously sent (max number of accumulated tokens in the bucket),  QPS is how fast burst regenerates (rate with which new tokens arrive).",
        "createdAt" : "2017-12-01T11:16:22Z",
        "updatedAt" : "2017-12-01T11:16:22Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e717ef3a6a57d31251ccee94d9e2dd29a70c27b",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +130,134 @@\t\t\tallErrors = append(allErrors, fmt.Errorf(\"invalid audit batch webhook throttle QPS %v, must be a positive number\", o.WebhookOptions.BatchConfig.ThrottleQPS))\n\t\t}\n\t\tif o.WebhookOptions.BatchConfig.ThrottleBurst <= 0 {\n\t\t\tallErrors = append(allErrors, fmt.Errorf(\"invalid audit batch webhook throttle burst %v, must be a positive number\", o.WebhookOptions.BatchConfig.ThrottleBurst))\n\t\t}"
  },
  {
    "id" : "3edfddd5-0216-410d-a972-f7143e488f4d",
    "prId" : 56638,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56638#pullrequestreview-80469052",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5af598e6-8516-4e25-95a4-9f48e49fb61e",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Given that we're adding a more general buffering mechanism in 1.10, should these flags be more generic? Or do we still want the option for setting different batch params for the log and webhook backends?",
        "createdAt" : "2017-11-30T22:28:17Z",
        "updatedAt" : "2017-11-30T22:32:15Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "a29418a1-493d-4fcc-bb50-295de596c2c2",
        "parentId" : "5af598e6-8516-4e25-95a4-9f48e49fb61e",
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "I had in mind making it configurable separately & creating those flags automatically with a given prefix (`audit-webhook-` or `audit-log-`)",
        "createdAt" : "2017-12-01T11:17:43Z",
        "updatedAt" : "2017-12-01T11:17:44Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e717ef3a6a57d31251ccee94d9e2dd29a70c27b",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +269,273 @@\t\t\t\" server responses. Batch causes the webhook to buffer and send events\"+\n\t\t\t\" asynchronously. Known modes are \"+strings.Join(pluginwebhook.AllowedModes, \",\")+\".\")\n\tfs.IntVar(&o.BatchConfig.BufferSize, \"audit-webhook-batch-buffer-size\",\n\t\to.BatchConfig.BufferSize, \"The size of the buffer to store events before \"+\n\t\t\t\"batching and sending to the webhook. Only used in batch mode.\")"
  },
  {
    "id" : "73cadb72-8176-4302-b0d8-9c1753151ae4",
    "prId" : 56638,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56638#pullrequestreview-80471050",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd6a943e-1acb-4c74-b258-3100c1f3c782",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "The effective max buffer is actually buffer size + max batch size. Might be worth saying here? Although I think the total number of events that could be held in memory is actually unbounded (see this comment: https://github.com/kubernetes/kubernetes/pull/53105#discussion_r148090336)",
        "createdAt" : "2017-11-30T22:31:33Z",
        "updatedAt" : "2017-11-30T22:32:15Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "4cb7587b-5229-41c0-a7ba-9b1a2c8509c3",
        "parentId" : "bd6a943e-1acb-4c74-b258-3100c1f3c782",
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "> Might be worth saying here?\r\n\r\nWon't introducing another \"buffer\" in the help text cause confusion? I'm not sure how to phrase it to avoid that\r\n\r\n> Although I think the total number of events that could be held in memory is actually unbounded\r\n\r\nWell, not unbounded, it's bounded by `buffer size + (batch size * throttle QPS * (request timeout * number of retries + backoff time))` which is ~2 millions. Though I think apiserver will die before reaching this number",
        "createdAt" : "2017-12-01T11:27:18Z",
        "updatedAt" : "2017-12-01T11:27:19Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e717ef3a6a57d31251ccee94d9e2dd29a70c27b",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +271,275 @@\tfs.IntVar(&o.BatchConfig.BufferSize, \"audit-webhook-batch-buffer-size\",\n\t\to.BatchConfig.BufferSize, \"The size of the buffer to store events before \"+\n\t\t\t\"batching and sending to the webhook. Only used in batch mode.\")\n\tfs.IntVar(&o.BatchConfig.MaxBatchSize, \"audit-webhook-batch-max-size\",\n\t\to.BatchConfig.MaxBatchSize, \"The maximum size of a batch sent to the webhook. \"+"
  },
  {
    "id" : "f6e14e9d-915a-4bf4-b435-da6d34e3f3ba",
    "prId" : 49115,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49115#pullrequestreview-56591177",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "558456f2-dd45-483e-a9be-44d59db626fa",
        "parentId" : null,
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "`switch to beta` -> `switch to preferred version`?",
        "createdAt" : "2017-08-16T10:46:48Z",
        "updatedAt" : "2017-08-16T11:25:15Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1dc251a1604b1576258f123ac8dd8390bba2e4a9",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +240,244 @@\t}\n\n\t// TODO: switch to beta\n\twebhook, err := pluginwebhook.NewBackend(o.ConfigFile, o.Mode, []schema.GroupVersion{auditv1alpha1.SchemeGroupVersion})\n\tif err != nil {"
  },
  {
    "id" : "c21994c1-fecf-42c8-9723-412c1f6e052f",
    "prId" : 48605,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48605#pullrequestreview-48748011",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e195aee-cf54-498b-aa11-e61f09d8672b",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "can we use a type alias plus constants?",
        "createdAt" : "2017-07-07T13:13:52Z",
        "updatedAt" : "2017-07-08T03:51:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "07bd0309-0591-451e-8a8b-6024bc9b16ab",
        "parentId" : "5e195aee-cf54-498b-aa11-e61f09d8672b",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "if that plays well with `fs.StringVar`",
        "createdAt" : "2017-07-07T13:14:41Z",
        "updatedAt" : "2017-07-08T03:51:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "32fb6d3a-cfeb-45ec-a311-86ca4a23c47d",
        "parentId" : "5e195aee-cf54-498b-aa11-e61f09d8672b",
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "Yeap, it will get such error:\r\ncannot use &o.Format (type *format) as type *string in argument to fs.StringVar\r\ncannot use o.Format (type format) as type string in argument to fs.StringVar",
        "createdAt" : "2017-07-08T03:26:07Z",
        "updatedAt" : "2017-07-08T03:51:08Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc94370e9cbf3e54dc7dab1dbfc7404815eafb4c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +64,68 @@\tMaxBackups int\n\tMaxSize    int\n\tFormat     string\n}\n"
  }
]