[
  {
    "id" : "0db4b480-c4bf-43fb-8bc3-a18c071a018b",
    "prId" : 68273,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68273#pullrequestreview-152377893",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d5cbbc3-c3d4-4a75-924a-647298a0e7f8",
        "parentId" : null,
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "then i wonder if this check could be gone? ",
        "createdAt" : "2018-09-05T07:53:41Z",
        "updatedAt" : "2018-09-05T07:53:41Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      },
      {
        "id" : "d60d7a3d-ce26-4914-8151-591ae9d0e939",
        "parentId" : "8d5cbbc3-c3d4-4a75-924a-647298a0e7f8",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "No. The warning below is only for in-cluster usage. Even in cluster, there might be no service account and therefore no token (in static pods). So the warning will make that clear. But it would be misleading for the out-of-cluster use-case.",
        "createdAt" : "2018-09-05T08:08:20Z",
        "updatedAt" : "2018-09-05T08:08:20Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "04e793e65ad70df5c4ab280c42740864e54163cd",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +155,159 @@\t\tclientConfig, err = rest.InClusterConfig()\n\t\tif err != nil && s.RemoteKubeConfigFileOptional {\n\t\t\tif err != rest.ErrNotInCluster {\n\t\t\t\tglog.Warningf(\"failed to read in-cluster kubeconfig for delegated authorization: %v\", err)\n\t\t\t}"
  },
  {
    "id" : "0e731ac4-9f37-49b6-bcbf-12e57c03586e",
    "prId" : 67545,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67545#pullrequestreview-150081949",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed2c30ba-328c-4ba8-b42d-494b5d063c01",
        "parentId" : null,
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "if we donâ€™t add it to the flagsetï¼Œwhere can we set its value?",
        "createdAt" : "2018-08-28T05:27:20Z",
        "updatedAt" : "2018-08-28T17:08:14Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      },
      {
        "id" : "4b5a9e5e-cdb2-4e7c-877c-e94eadf4ad58",
        "parentId" : "ed2c30ba-328c-4ba8-b42d-494b5d063c01",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "the component using the option struct sets it.",
        "createdAt" : "2018-08-28T08:05:38Z",
        "updatedAt" : "2018-08-28T17:08:14Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "ac6eb4ac-2ec5-4b9c-b8c6-c79294548eab",
        "parentId" : "ed2c30ba-328c-4ba8-b42d-494b5d063c01",
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "i thought that every field in option struct should be added to flagset",
        "createdAt" : "2018-08-28T10:41:36Z",
        "updatedAt" : "2018-08-28T17:08:14Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      },
      {
        "id" : "87183c15-ddd4-4bda-9633-0b7340b73fb2",
        "parentId" : "ed2c30ba-328c-4ba8-b42d-494b5d063c01",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "No, why? We have many which are not.",
        "createdAt" : "2018-08-28T11:44:45Z",
        "updatedAt" : "2018-08-28T17:08:14Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "fb411651-4f88-4b57-b948-3ee835494c6f",
        "parentId" : "ed2c30ba-328c-4ba8-b42d-494b5d063c01",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "look into SecureServing as an example.",
        "createdAt" : "2018-08-28T11:45:02Z",
        "updatedAt" : "2018-08-28T17:08:14Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "a671d65673590f0dfcf5c2b673e1518d11510bdb",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +45,49 @@\t// RemoteKubeConfigFileOptional is specifying whether not specifying the kubeconfig or\n\t// a missing in-cluster config will be fatal.\n\tRemoteKubeConfigFileOptional bool\n\n\t// AllowCacheTTL is the length of time that a successful authorization response will be cached"
  },
  {
    "id" : "6b7bd2ca-a51e-461e-a759-7305ca458967",
    "prId" : 67545,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67545#pullrequestreview-150007651",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b950f4fb-772a-4b18-a653-9f3506621e49",
        "parentId" : null,
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "nit: what about straightly return the union hereï¼Ÿa long else block looks odd to me ðŸ‘€",
        "createdAt" : "2018-08-28T05:46:23Z",
        "updatedAt" : "2018-08-28T17:08:14Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      },
      {
        "id" : "c0b088ea-abe8-4bf2-899b-80caec9a90b3",
        "parentId" : "b950f4fb-772a-4b18-a653-9f3506621e49",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I prefer the if block. The `authorizers` slice is constructed one by one by appending new authorizers. I think it is easier to reason about the code the way it is. The pattern is clear when another authorizer is added with another if block. Then an early return wouldn't work anymore.",
        "createdAt" : "2018-08-28T08:08:17Z",
        "updatedAt" : "2018-08-28T17:08:14Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "a671d65673590f0dfcf5c2b673e1518d11510bdb",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +125,129 @@\n\tif client == nil {\n\t\tglog.Warningf(\"No authorization-kubeconfig provided, so SubjectAccessReview of authorization tokens won't work.\")\n\t} else {\n\t\tcfg := authorizerfactory.DelegatingAuthorizerConfig{"
  },
  {
    "id" : "d2464224-1d0c-4d90-88c7-fee3616d2d50",
    "prId" : 67543,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67543#pullrequestreview-148217134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27f15405-f1f8-4ea9-8860-abdf82cec27e",
        "parentId" : null,
        "authorId" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "body" : "`ToAuthorizer` ? Or just `Authorizer`",
        "createdAt" : "2018-08-21T18:32:16Z",
        "updatedAt" : "2018-08-22T06:50:09Z",
        "lastEditedBy" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "tags" : [
        ]
      },
      {
        "id" : "7680116b-492c-40ce-99c0-f2906b8781b8",
        "parentId" : "27f15405-f1f8-4ea9-8860-abdf82cec27e",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "that's the style here.",
        "createdAt" : "2018-08-21T19:36:59Z",
        "updatedAt" : "2018-08-22T06:50:09Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "6142e2f8f7c8b1c5d32a2f9aa3715ea0b5baf167",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +104,108 @@}\n\nfunc (s *DelegatingAuthorizationOptions) ToAuthorization() (authorizer.Authorizer, error) {\n\tvar authorizers []authorizer.Authorizer\n"
  }
]