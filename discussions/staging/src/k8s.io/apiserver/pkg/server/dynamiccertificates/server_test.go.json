[
  {
    "id" : "85483e37-5e42-4f7b-bab2-7f9079706599",
    "prId" : 85308,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85308#pullrequestreview-338147160",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3c115c8-4263-4e7d-8416-9ec81b20b0c7",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "can we add an IPv6 test case?\r\nthis test worked for me locally\r\n```\r\ndiff --git a/staging/src/k8s.io/apiserver/pkg/server/dynamiccertificates/server_test.go b/staging/src/k8s.io/apiserver/pkg/server/dynamiccertificates/server_test.go\r\nindex 8f0780440e..c8da0eb9df 100644\r\n--- a/staging/src/k8s.io/apiserver/pkg/server/dynamiccertificates/server_test.go\r\n+++ b/staging/src/k8s.io/apiserver/pkg/server/dynamiccertificates/server_test.go\r\n@@ -61,6 +61,11 @@ func TestServingCert(t *testing.T) {\r\n                        ips:   []string{\"127.0.0.1\"},\r\n                        names: []string{\"localhost\"},\r\n                },\r\n+               {\r\n+                       host:  \"2001:abcd:bcda::1\",\r\n+                       ips:   []string{\"2001:abcd:bcda::1\"},\r\n+                       names: []string{\"openshiftv6\", \"openshiftv6.default.svc.cluster.local\"},\r\n+               },\r\n        }\r\n \r\n        for _, certSpec := range certSpecs {\r\n@@ -114,6 +119,7 @@ func TestServingCert(t *testing.T) {\r\n        expectedDefaultCertBytes, _ := defaultCertProvider.CurrentCertKeyContent()\r\n        expectedServiceCertBytes, _ := sniCerts[0].CurrentCertKeyContent()\r\n        expectedLocalhostCertBytes, _ := sniCerts[1].CurrentCertKeyContent()\r\n+       expectedServiceV6CertBytes, _ := sniCerts[2].CurrentCertKeyContent()\r\n \r\n        tests := []struct {\r\n                name       string\r\n@@ -135,6 +141,11 @@ func TestServingCert(t *testing.T) {\r\n                        serverName: \"openshift\",\r\n                        expected:   []byte(strings.TrimSpace(string(expectedServiceCertBytes))),\r\n                },\r\n+               {\r\n+                       name:       \"service v6 by dns\",\r\n+                       serverName: \"openshiftv6\",\r\n+                       expected:   []byte(strings.TrimSpace(string(expectedServiceV6CertBytes))),\r\n+               },\r\n                {\r\n                        name:       \"localhost by dns\",\r\n                        serverName: \"localhost\",\r\n```",
        "createdAt" : "2019-11-27T04:06:40Z",
        "updatedAt" : "2020-01-06T18:24:12Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "15dea97c-fd94-4058-997d-9d4034416a0a",
        "parentId" : "a3c115c8-4263-4e7d-8416-9ec81b20b0c7",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "+1 for ipv6 test",
        "createdAt" : "2020-01-02T13:37:25Z",
        "updatedAt" : "2020-01-06T18:24:12Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "17d6fa1c-cdb0-4174-8d9e-951a33012a17",
        "parentId" : "a3c115c8-4263-4e7d-8416-9ec81b20b0c7",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "added",
        "createdAt" : "2020-01-03T15:59:24Z",
        "updatedAt" : "2020-01-06T18:24:12Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c8639deb70c5934109022372caa32ca029db473",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +54,58 @@\t\t{\n\t\t\thost:  \"172.30.0.1\",\n\t\t\tips:   []string{\"172.30.0.1\"},\n\t\t\tnames: []string{\"openshift\", \"openshift.default.svc.cluster.local\"},\n\t\t},"
  },
  {
    "id" : "a02acc53-bb78-4db8-a413-8ad88f360ed0",
    "prId" : 85308,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85308#pullrequestreview-338720227",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91fe1a7c-2e21-4edd-9aa5-dbd6ffa5edd7",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "just saw the `func GetServingCertificates` impl... looks like that will make the server log `http: TLS handshake error from 127.0.0.1:62829: EOF` on every invocation... mind spawning an issue/follow-up to improve that?",
        "createdAt" : "2020-01-06T14:52:51Z",
        "updatedAt" : "2020-01-06T18:24:12Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "160ee80e-fd01-44bc-9e75-15d6f58732bb",
        "parentId" : "91fe1a7c-2e21-4edd-9aa5-dbd6ffa5edd7",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "nevermind, I misread the utility method and accidentally caused the issue locally by switching the server to `.ServeTLS` and didn't notice you already had a tls listener",
        "createdAt" : "2020-01-06T15:47:55Z",
        "updatedAt" : "2020-01-06T18:24:12Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c8639deb70c5934109022372caa32ca029db473",
    "line" : 167,
    "diffHunk" : "@@ -1,1 +165,169 @@\tfor _, test := range tests {\n\t\tt.Run(test.name, func(t *testing.T) {\n\t\t\t_, actualDefaultCertBytes, err := cert.GetServingCertificates(apiPort, test.serverName)\n\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)"
  },
  {
    "id" : "9414bb3c-2277-47c0-ab1f-3be4aece177b",
    "prId" : 85308,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85308#pullrequestreview-338668545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "662d8595-0c2d-47e9-926e-df31760eab7b",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "also `panic(err)` here, otherwise the test hangs",
        "createdAt" : "2020-01-06T14:53:36Z",
        "updatedAt" : "2020-01-06T18:24:12Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c8639deb70c5934109022372caa32ca029db473",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +110,114 @@\t\tlistener = tls.NewListener(listener, server.TLSConfig)\n\t\tif err := server.ServeTLS(listener, \"\", \"\"); err != nil {\n\t\t\tt.Error(err)\n\t\t\tpanic(err)\n\t\t}"
  }
]