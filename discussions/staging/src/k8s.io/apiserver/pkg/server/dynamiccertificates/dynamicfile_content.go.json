[
  {
    "id" : "a2008067-1daf-4d74-81ff-75afc3214626",
    "prId" : 83579,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83579#pullrequestreview-298437729",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f5f81f4-7fb9-418f-94d1-b5598f035145",
        "parentId" : null,
        "authorId" : "c8bfafed-d184-4111-b0f7-47520a7dc6f5",
        "body" : "It seems to me that we cache the overall tls.Config in an atomic.Value, and cache the consituent dynamic elements also. Why not simply have `CurrentCABundleContent` always do a read off of disk, and have the only stateful element be the `caBundleContent`",
        "createdAt" : "2019-10-07T18:33:54Z",
        "updatedAt" : "2019-10-23T15:02:12Z",
        "lastEditedBy" : "c8bfafed-d184-4111-b0f7-47520a7dc6f5",
        "tags" : [
        ]
      },
      {
        "id" : "6173c199-09d8-403b-91a1-1f9232606c8b",
        "parentId" : "7f5f81f4-7fb9-418f-94d1-b5598f035145",
        "authorId" : "c8bfafed-d184-4111-b0f7-47520a7dc6f5",
        "body" : "I feel like if we have 10 SNI certs using a similar approach, thats a lot of controllers polling, or we would need a separate SNIProvider that could unify them. If we always read the file on `CurrentCABundleContent`, then really we just have one goroutine polling, and maybe some file watches too\r\n\r\nI feel like it makes sense for a `Provider` to know how to build a completely fresh certificate; and callers cache it as desired",
        "createdAt" : "2019-10-07T18:36:25Z",
        "updatedAt" : "2019-10-23T15:02:12Z",
        "lastEditedBy" : "c8bfafed-d184-4111-b0f7-47520a7dc6f5",
        "tags" : [
        ]
      },
      {
        "id" : "6a6e0f34-dc45-4e21-b54b-3553266cdcf2",
        "parentId" : "7f5f81f4-7fb9-418f-94d1-b5598f035145",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Files are only one implementation.  I'm actually driving this towards consuming a list/watch from the API.  It's comparatively expensive to pull fresh state from that.  We're still only talking about o(10) loops/",
        "createdAt" : "2019-10-07T22:03:47Z",
        "updatedAt" : "2019-10-23T15:02:12Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "6beb96261e29754f2b7d0e44829eb6d15422cebf",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +126,130 @@\t\treturn err\n\t}\n\tc.caBundle.Store(caBundleAndVerifier)\n\n\tfor _, listener := range c.listeners {"
  },
  {
    "id" : "5f959cc1-aab3-44c6-ba01-72b185dbf3c8",
    "prId" : 83579,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83579#pullrequestreview-298438063",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ad546e9-35a5-474d-b52b-1b8d30665355",
        "parentId" : null,
        "authorId" : "c8bfafed-d184-4111-b0f7-47520a7dc6f5",
        "body" : "It looks like we cause an enqueue irrelevant of whether the bundle changes",
        "createdAt" : "2019-10-07T18:34:31Z",
        "updatedAt" : "2019-10-23T15:02:12Z",
        "lastEditedBy" : "c8bfafed-d184-4111-b0f7-47520a7dc6f5",
        "tags" : [
        ]
      },
      {
        "id" : "ecf55c1f-2782-4cc2-b2df-c5cfba1cd6dd",
        "parentId" : "9ad546e9-35a5-474d-b52b-1b8d30665355",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> It looks like we cause an enqueue irrelevant of whether the bundle changes\r\n\r\nwe returned early a few lines up if nothing changed.",
        "createdAt" : "2019-10-07T22:04:35Z",
        "updatedAt" : "2019-10-23T15:02:12Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "6beb96261e29754f2b7d0e44829eb6d15422cebf",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +129,133 @@\n\tfor _, listener := range c.listeners {\n\t\tlistener.Enqueue()\n\t}\n"
  }
]