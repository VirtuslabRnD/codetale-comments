[
  {
    "id" : "4c59d85f-e57f-4eac-9f15-cc8b1460b754",
    "prId" : 97428,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97428#pullrequestreview-634817365",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "406aa533-cbeb-43f1-b20d-91ec7fd88d64",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "why does this block forever.  I would expect to see similar: \"this gofunc must end\" logic.",
        "createdAt" : "2021-04-13T13:03:08Z",
        "updatedAt" : "2021-04-28T15:09:02Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "b283d4c8-32f6-43f3-980b-0e5854cbedbd",
        "parentId" : "406aa533-cbeb-43f1-b20d-91ec7fd88d64",
        "authorId" : "3e6e337f-0beb-4609-abc3-11b8e8cf5688",
        "body" : "this is in keeping with the current implementation of the timeout filter. If I make this change I would like to add a test for it, and a proper test necessitates a refactor of the timeout filter. \r\n@deads2k I would like to do a follow up PR for this. Let me know if you want me to address it in this PR.  ",
        "createdAt" : "2021-04-13T16:49:05Z",
        "updatedAt" : "2021-04-28T15:09:02Z",
        "lastEditedBy" : "3e6e337f-0beb-4609-abc3-11b8e8cf5688",
        "tags" : [
        ]
      }
    ],
    "commit" : "66587afb60b10569aa4ed35d53a4a91fcc40abd2",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +122,126 @@\t\t\tgo func() {\n\t\t\t\ttimedOutAt := time.Now()\n\t\t\t\tres := <-resultCh\n\n\t\t\t\tstatus := metrics.PostTimeoutHandlerOK"
  },
  {
    "id" : "c95662ff-8e2a-4ad2-a922-0f940a9a919c",
    "prId" : 83333,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83333#pullrequestreview-297860682",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56b5362c-f96f-4abd-9b9e-22d0822f56f5",
        "parentId" : null,
        "authorId" : "2d9afee7-a404-4340-8fd9-d3187ed4f1da",
        "body" : "```suggestion\r\n\t\t\t// even if the post timeout work itself panics.\r\n```",
        "createdAt" : "2019-10-06T21:04:50Z",
        "updatedAt" : "2019-10-06T21:04:50Z",
        "lastEditedBy" : "2d9afee7-a404-4340-8fd9-d3187ed4f1da",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4ae7b9081f3ddedd0d588688215ddbe26274f75",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +124,128 @@\t\t\t// resultCh needs to have a reader, since the function doing\n\t\t\t// the work needs to send to it. This is defer'd to ensure it runs\n\t\t\t// ever if the post timeout work itself panics.\n\t\t\tgo func() {\n\t\t\t\tres := <-resultCh"
  },
  {
    "id" : "23df33d9-dbec-41df-a292-e04affcc8735",
    "prId" : 83333,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83333#pullrequestreview-300015992",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25ecf65f-ade9-4da7-a1f6-06bb418396cb",
        "parentId" : null,
        "authorId" : "a097dedf-39b9-4150-82ce-b4beb3b8d606",
        "body" : "How about using `resultCh := make(chan interface{}, 1)`, maybe there is no need to create a new goroutine",
        "createdAt" : "2019-10-10T11:25:27Z",
        "updatedAt" : "2019-10-10T11:25:28Z",
        "lastEditedBy" : "a097dedf-39b9-4150-82ce-b4beb3b8d606",
        "tags" : [
        ]
      },
      {
        "id" : "ea92681c-f6e6-4967-8a56-d08a6298f10a",
        "parentId" : "25ecf65f-ade9-4da7-a1f6-06bb418396cb",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "That can swallow a non-nil panic in time out cases, which we don't want",
        "createdAt" : "2019-10-10T11:51:55Z",
        "updatedAt" : "2019-10-10T11:51:56Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "8aec44a8-21de-4708-aa21-42bed37a05a0",
        "parentId" : "25ecf65f-ade9-4da7-a1f6-06bb418396cb",
        "authorId" : "a097dedf-39b9-4150-82ce-b4beb3b8d606",
        "body" : "Maybe we can call `utilruntime.HandleError`  just before `resultCh <- err`",
        "createdAt" : "2019-10-10T12:09:07Z",
        "updatedAt" : "2019-10-10T12:09:08Z",
        "lastEditedBy" : "a097dedf-39b9-4150-82ce-b4beb3b8d606",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4ae7b9081f3ddedd0d588688215ddbe26274f75",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +121,125 @@\t\treturn\n\tcase <-after:\n\t\tdefer func() {\n\t\t\t// resultCh needs to have a reader, since the function doing\n\t\t\t// the work needs to send to it. This is defer'd to ensure it runs"
  },
  {
    "id" : "da78263b-4bbc-4ad3-8349-d279457c5ec2",
    "prId" : 75853,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75853#pullrequestreview-220335497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7cd1a6f-9040-4c22-bfc0-8ba71d7afa9e",
        "parentId" : null,
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "Nice, I like the rename. It makes more sense.",
        "createdAt" : "2019-03-29T00:43:58Z",
        "updatedAt" : "2019-04-05T19:50:40Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "999a02ceb6476fa2dd344ce37d820884ae4674ce",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +93,97 @@\t}\n\n\t// resultCh is used as both errCh and stopCh\n\tresultCh := make(chan interface{})\n\ttw := newTimeoutWriter(w)"
  },
  {
    "id" : "4dde103b-80cf-4ba4-af4c-270cbe0ae20d",
    "prId" : 68001,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68001#pullrequestreview-150562544",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2feb25df-f251-4d8f-8f32-d453b64e1b8f",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "so easy to start a gofunc, so easy to forget to recover panics in it.",
        "createdAt" : "2018-08-29T13:27:48Z",
        "updatedAt" : "2018-08-29T13:27:48Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "a529b82c-f6ec-46ad-b94e-3e252aeaa073",
        "parentId" : "2feb25df-f251-4d8f-8f32-d453b64e1b8f",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Now go through all go funcs in Kube and prepare for new grey hair.",
        "createdAt" : "2018-08-29T13:34:23Z",
        "updatedAt" : "2018-08-29T13:34:23Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "eec1b521117aa7271be3a3f0919c88caf5b73c54",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +96,100 @@\tgo func() {\n\t\tdefer func() {\n\t\t\tresult <- recover()\n\t\t}()\n\t\tt.handler.ServeHTTP(tw, r)"
  },
  {
    "id" : "982d1034-868a-4696-bdfa-00c64c39a092",
    "prId" : 62810,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62810#pullrequestreview-113456342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ed8bae6-cae3-473d-9bbe-d9b3b568d7c2",
        "parentId" : null,
        "authorId" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "body" : "same here",
        "createdAt" : "2018-04-19T03:06:57Z",
        "updatedAt" : "2018-04-19T03:06:57Z",
        "lastEditedBy" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "tags" : [
        ]
      },
      {
        "id" : "a5c90252-bdf0-4518-9484-c1e8881e3072",
        "parentId" : "7ed8bae6-cae3-473d-9bbe-d9b3b568d7c2",
        "authorId" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "body" : "ignore this",
        "createdAt" : "2018-04-19T03:16:19Z",
        "updatedAt" : "2018-04-19T03:16:19Z",
        "lastEditedBy" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ea88a5092c767fc3141512db924fd0435f7670e",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +39,43 @@\t\treturn handler\n\t}\n\ttimeoutFunc := func(req *http.Request) (*http.Request, <-chan time.Time, func(), *apierrors.StatusError) {\n\t\t// TODO unify this with apiserver.MaxInFlightLimit\n\t\tctx := req.Context()"
  },
  {
    "id" : "23e104d3-38ed-4c19-9b36-67195e3e1903",
    "prId" : 48583,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48583#pullrequestreview-48643795",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34cd5855-5775-4320-a075-6ef83ddb76f8",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : ":+1:",
        "createdAt" : "2017-07-07T15:47:27Z",
        "updatedAt" : "2017-07-07T19:50:59Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e33a2f0bc8ac82aecadcb19cf6e41259454d182",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +75,79 @@// the handler times out, writes by h to its http.ResponseWriter will return\n// http.ErrHandlerTimeout. If timeoutFunc returns a nil timeout channel, no\n// timeout will be enforced. recordFn is a function that will be invoked whenever\n// a timeout happens.\nfunc WithTimeout(h http.Handler, timeoutFunc func(*http.Request) (timeout <-chan time.Time, recordFn func(), err *apierrors.StatusError)) http.Handler {"
  }
]