[
  {
    "id" : "fa64a42f-4cd1-42db-b934-349ba256d7e3",
    "prId" : 102967,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102967#pullrequestreview-688586948",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bdfc6f84-b2e0-4bef-9f5a-101da74a87d1",
        "parentId" : null,
        "authorId" : "f3e672e5-b55c-4e3f-9443-b9abf25195da",
        "body" : "`mu` also can be removed I think.",
        "createdAt" : "2021-06-21T14:59:15Z",
        "updatedAt" : "2021-06-21T14:59:15Z",
        "lastEditedBy" : "f3e672e5-b55c-4e3f-9443-b9abf25195da",
        "tags" : [
        ]
      },
      {
        "id" : "45ba4837-c8cd-46d6-a24c-883e037670e6",
        "parentId" : "bdfc6f84-b2e0-4bef-9f5a-101da74a87d1",
        "authorId" : "f3e672e5-b55c-4e3f-9443-b9abf25195da",
        "body" : "`mu` is introduced by https://github.com/kubernetes/kubernetes/pull/94530 try to solve this issue, but did not solve the problem at all I think.",
        "createdAt" : "2021-06-21T15:02:11Z",
        "updatedAt" : "2021-06-21T15:02:11Z",
        "lastEditedBy" : "f3e672e5-b55c-4e3f-9443-b9abf25195da",
        "tags" : [
        ]
      },
      {
        "id" : "604a0745-e5b8-408b-96e8-556749311086",
        "parentId" : "bdfc6f84-b2e0-4bef-9f5a-101da74a87d1",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "yeah, or we add it in both places or we don't add it at all.\r\nI tried adding it in both places  with the same result ... so I think that we can remove it",
        "createdAt" : "2021-06-21T15:36:15Z",
        "updatedAt" : "2021-06-21T15:37:53Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d11c3cd8cb18c1e246a7a6b8e9a791177c49d31",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +315,319 @@\n\t\t\t// create the http client\n\t\t\tdialFn := func(network, addr string, cfg *tls.Config) (conn net.Conn, err error) {\n\t\t\t\tconn, err = tls.Dial(network, addr, cfg)\n\t\t\t\tif err != nil {"
  },
  {
    "id" : "5ec47037-7aff-4bee-8b23-3a784918ac4e",
    "prId" : 94390,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94390#pullrequestreview-483064497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0913944-5454-4ebc-a9cc-0d4e241daa81",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this test fails 100% of the time when run with `go test -race k8s.io/apiserver/pkg/server/filters -run TestGOAWAYConcurrency`, disabling in https://github.com/kubernetes/kubernetes/pull/94529 and opened https://github.com/kubernetes/kubernetes/issues/94532 to track fixing the test or the component",
        "createdAt" : "2020-09-04T16:07:38Z",
        "updatedAt" : "2020-09-04T16:07:38Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ed1f8cc8-e71b-4a42-8b40-1120d0408836",
        "parentId" : "d0913944-5454-4ebc-a9cc-0d4e241daa81",
        "authorId" : "f3e672e5-b55c-4e3f-9443-b9abf25195da",
        "body" : "caused by golang http/http2 pkg, I have already opened an issue [#41234 at golang repo](https://github.com/golang/go/issues/41234) .",
        "createdAt" : "2020-09-05T16:19:15Z",
        "updatedAt" : "2020-09-05T16:22:32Z",
        "lastEditedBy" : "f3e672e5-b55c-4e3f-9443-b9abf25195da",
        "tags" : [
        ]
      }
    ],
    "commit" : "434fd2a976b8ecf8a85c9b00ef7c6ccf8f6f5ca3",
    "line" : 411,
    "diffHunk" : "@@ -1,1 +435,439 @@// TestGOAWAYConcurrency tests GOAWAY frame will not affect concurrency requests in a single http client instance.\n// Known issues in history: https://github.com/kubernetes/kubernetes/issues/91131.\nfunc TestGOAWAYConcurrency(t *testing.T) {\n\ts, err := newTestGOAWAYServer()\n\tif err != nil {"
  },
  {
    "id" : "f1280c25-5aec-4855-96aa-e7c1a143373b",
    "prId" : 94390,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94390#pullrequestreview-483640741",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec2e5cf3-e7ef-42e1-9e07-2a2aeb2f9796",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this added a data race on unguarded localAddr, fixed in https://github.com/kubernetes/kubernetes/pull/94530",
        "createdAt" : "2020-09-04T16:09:11Z",
        "updatedAt" : "2020-09-04T16:09:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e21729b0-cc4c-4f1f-a9b8-40fdb6a61137",
        "parentId" : "ec2e5cf3-e7ef-42e1-9e07-2a2aeb2f9796",
        "authorId" : "f3e672e5-b55c-4e3f-9443-b9abf25195da",
        "body" : "As far as I know, it's not the root cause of TestClientReceivedGOAWAY flake, because dial a new connection only when client send a new request, and in this case, requests are sent one by one. In other words, if this line cause data race, then the additional unexpected connection set up, which means the test case or the configuration has problem.\r\n\r\nI'm still debug the root cause of TestClientReceivedGOAWAY flake, for now, I doubt that I used an incorrect http2 server/client configuration(`http.Transport.MaxConnsPerHost=1` or SETTINGS_MAX_CONCURRENT_STREAMS limited), or the dial function ignored context.Context which will cause more than one goroutine dial the connection when the first canceled.\r\n\r\nAnother interesting thing is I got a data race result that read at `if tc.expectConnections != len(localAddr)`(main testing goroutine)  and write at `localAddr = append(localAddr, conn.LocalAddr().String())`, I'm very confused why the client try to set-up a new connection when we finished all requests.",
        "createdAt" : "2020-09-07T15:45:22Z",
        "updatedAt" : "2020-09-07T16:05:44Z",
        "lastEditedBy" : "f3e672e5-b55c-4e3f-9443-b9abf25195da",
        "tags" : [
        ]
      }
    ],
    "commit" : "434fd2a976b8ecf8a85c9b00ef7c6ccf8f6f5ca3",
    "line" : 323,
    "diffHunk" : "@@ -1,1 +351,355 @@\t\t\t\t\tt.Fatalf(\"unexpect connection err: %v\", err)\n\t\t\t\t}\n\t\t\t\tlocalAddr = append(localAddr, conn.LocalAddr().String())\n\t\t\t\treturn\n\t\t\t})"
  }
]