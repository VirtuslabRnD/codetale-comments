[
  {
    "id" : "9f282311-219d-4d59-9317-036964957203",
    "prId" : 81969,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81969#pullrequestreview-281196164",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "020033d1-6c6d-4e9c-a653-d2afe1ad807f",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "there are exactly two calls to this in-tree (ssh-tunnel setup and aggregator auto-registration)... should they switch to AddBootSequenceHealthChecks?",
        "createdAt" : "2019-08-28T02:03:00Z",
        "updatedAt" : "2019-08-29T21:14:14Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "cc4c672b-6102-4338-b7a6-8fca398ff732",
        "parentId" : "020033d1-6c6d-4e9c-a653-d2afe1ad807f",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "I've modified the usages a bit. Currently the key difference between AddHealthChecks and AddBootSequenceHealthChecks is that AddHealthChecks defaults livez grace period to 0s. AddBootSequenceHealthChecks sets the delay to whatever the value is of the command-line-parameter. ",
        "createdAt" : "2019-08-28T05:12:39Z",
        "updatedAt" : "2019-08-29T21:14:14Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "26499ff9-b183-4858-b406-8474392b10f1",
        "parentId" : "020033d1-6c6d-4e9c-a653-d2afe1ad807f",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "understood... don't ssh-tunnel setup and aggregator auto-registration count as boot sequence checks we'd want the user-specified livez grace period to apply to?",
        "createdAt" : "2019-08-29T02:29:55Z",
        "updatedAt" : "2019-08-29T21:14:14Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "53539045-111e-41c2-9987-e9b292db8226",
        "parentId" : "020033d1-6c6d-4e9c-a653-d2afe1ad807f",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "As they are not post-start-hooks, my interpretation would be that the expectation is that they either should immediately/synchronously become healthy. Is this incorrect?",
        "createdAt" : "2019-08-29T02:34:53Z",
        "updatedAt" : "2019-08-29T21:14:14Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "1db131cb-c668-4adc-8d2a-9f6ee53ff0d8",
        "parentId" : "020033d1-6c6d-4e9c-a653-d2afe1ad807f",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the autoregister-completion health check depends on the kube-apiserver-autoregistration post-start hook completing, and on the autoregistered services becoming available. it's not a task that needs to be performed, but is definitely a boot sequence health check.\r\n\r\nthe ssh-tunnel health check looks like it should be healthy immediately, so that's fine to leave as-is",
        "createdAt" : "2019-08-29T02:52:25Z",
        "updatedAt" : "2019-08-29T21:14:14Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa1b2d6d35c92a31be17357fc66cfc1eca8a67e0",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +29,33 @@// configures the liveness grace period to be zero, which means we expect this health check\n// to immediately indicate that the apiserver is unhealthy.\nfunc (s *GenericAPIServer) AddHealthChecks(checks ...healthz.HealthChecker) error {\n\t// we opt for a delay of zero here, because this entrypoint adds generic health checks\n\t// and not health checks which are specifically related to kube-apiserver boot-sequences."
  },
  {
    "id" : "b9af7c6f-19b0-4115-be5e-eca31eb9682c",
    "prId" : 79112,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79112#pullrequestreview-253413133",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c858d13-e80d-4642-8369-755b7f653d7b",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "this change is not needed, is it?",
        "createdAt" : "2019-06-24T10:18:40Z",
        "updatedAt" : "2019-06-24T10:18:40Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "17e39f6f-191d-4b33-9b8f-ab3daf03951f",
        "parentId" : "5c858d13-e80d-4642-8369-755b7f653d7b",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "the lock should be acquired prior to calling AddReadyzChecks().\r\nHence the change.",
        "createdAt" : "2019-06-24T13:32:39Z",
        "updatedAt" : "2019-06-24T13:32:40Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2c7226ca45f2c9ebb2e66056b6b2694d6587eb1",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +107,111 @@\ts.readyzLock.Lock()\n\tdefer s.readyzLock.Unlock()\n\treturn s.addReadyzChecks(checks...)\n}\n"
  },
  {
    "id" : "fb783158-8122-4f33-8210-58879569e5d4",
    "prId" : 78458,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78458#pullrequestreview-243473068",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36aead8c-7181-483e-8f5c-1f7beed22dd9",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "order, golang imports first, separated",
        "createdAt" : "2019-05-29T19:34:42Z",
        "updatedAt" : "2019-06-17T18:16:46Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "54dcf5c9c46fc4782d4861936309349b5a71a1ac",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +19,23 @@import (\n\t\"fmt\"\n\t\"net/http\"\n\t\"time\"\n"
  },
  {
    "id" : "5d313438-7909-4a74-8a53-0ff55f3caafc",
    "prId" : 78458,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78458#pullrequestreview-243474445",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e501281d-0484-4c12-b4f3-6a524922cb49",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "if we use \"health check\" as the general term, better drop the `z` everywhere where don't mean the actual `/healthz` endpoint",
        "createdAt" : "2019-05-29T19:37:46Z",
        "updatedAt" : "2019-06-17T18:16:46Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "54dcf5c9c46fc4782d4861936309349b5a71a1ac",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +34,38 @@\n// AddReadyzChecks allows you to add a HealthzCheck to readyz.\nfunc (s *GenericAPIServer) AddReadyzChecks(checks ...healthz.HealthzChecker) error {\n\ts.readyzLock.Lock()\n\tdefer s.readyzLock.Unlock()"
  },
  {
    "id" : "2bbd6a20-9022-4b5b-9043-29809dca7dc4",
    "prId" : 78458,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78458#pullrequestreview-243483322",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77883ee2-aea4-4680-8cad-ca0aeb039b48",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : ":+1:",
        "createdAt" : "2019-05-29T19:56:03Z",
        "updatedAt" : "2019-06-17T18:16:46Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "54dcf5c9c46fc4782d4861936309349b5a71a1ac",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +104,108 @@\n// delayedHealthCheck wraps a health check which will not fail until the explicitly defined delay has elapsed.\nfunc delayedHealthCheck(check healthz.HealthzChecker, clock clock.Clock, delay time.Duration) healthz.HealthzChecker {\n\treturn delayedHealthzCheck{\n\t\tcheck,"
  },
  {
    "id" : "aa00f525-4860-4033-af0f-c98199e3a51a",
    "prId" : 78458,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78458#pullrequestreview-244088525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b4be125-0177-441e-87e3-defc095c9198",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Do we expect this to be called multiple times? It seems a little odd for the clock to be created each time this is called. Maybe not important to fix.",
        "createdAt" : "2019-05-30T23:28:04Z",
        "updatedAt" : "2019-06-17T18:16:46Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "1b8bb44c-4ffb-410b-b09d-fb21e68fe2b7",
        "parentId" : "3b4be125-0177-441e-87e3-defc095c9198",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "Yeah, I will admit that I thought about this but didn't do anything about it. I'll move it up into the GenericAPIServer object. ",
        "createdAt" : "2019-05-31T00:23:01Z",
        "updatedAt" : "2019-06-17T18:16:46Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "54dcf5c9c46fc4782d4861936309349b5a71a1ac",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +90,94 @@// the kubelet from restarting the kube-apiserver due to long-ish boot sequences. Readyz health\n// checks have no grace period, since we want readyz to fail while boot has not completed.\nfunc (s *GenericAPIServer) AddDelayedHealthzChecks(delay time.Duration, checks ...healthz.HealthzChecker) error {\n\ts.healthzLock.Lock()\n\tdefer s.healthzLock.Unlock()"
  }
]