[
  {
    "id" : "ed80b02c-fb4c-40ad-bf3e-871a20430d0a",
    "prId" : 103126,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103126#pullrequestreview-692961758",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c34062d4-c97d-47a3-913e-aa76c7ad4da3",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "we should also plumb ctx to the `proxier, err := d.connector.connect()` call on line 233 so the request lifetime informs how long we wait for a dial",
        "createdAt" : "2021-06-25T12:21:19Z",
        "updatedAt" : "2021-06-25T12:21:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "496bc2f6-9e53-46ae-84cb-b1cb026dd850",
        "parentId" : "c34062d4-c97d-47a3-913e-aa76c7ad4da3",
        "authorId" : "a564be8e-65a9-4e71-a35e-9089ef1d89d1",
        "body" : "correct, tho proxier is only updated out of necessity. The goal was just to update the singleUseGrpcTunnel in this change",
        "createdAt" : "2021-06-25T15:46:28Z",
        "updatedAt" : "2021-06-25T15:46:28Z",
        "lastEditedBy" : "a564be8e-65a9-4e71-a35e-9089ef1d89d1",
        "tags" : [
        ]
      }
    ],
    "commit" : "21fd224ebdb17fbaafbb73a36a18aafcab6e4efa",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +236,240 @@\t\t\treturn nil, err\n\t\t}\n\t\tconn, err := proxier.proxy(ctx, addr)\n\t\tif err != nil {\n\t\t\tegressmetrics.Metrics.ObserveDialFailure(d.options.protocol, d.options.transport, egressmetrics.StageProxy)"
  },
  {
    "id" : "b998a0d1-d070-4697-8efc-22688dc85d53",
    "prId" : 103126,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103126#pullrequestreview-693101391",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8efbe424-0f2c-4401-bafe-ac9738a005f0",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "context.TODO() here is not good... it means the timeout of the dial is not connected to the timeout of the triggering request... plumbing the request context into connect() would let us connect those",
        "createdAt" : "2021-06-25T12:21:58Z",
        "updatedAt" : "2021-06-25T12:21:58Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "3e09e7d5-e08d-4288-9d3b-063e3ce3ec09",
        "parentId" : "8efbe424-0f2c-4401-bafe-ac9738a005f0",
        "authorId" : "a564be8e-65a9-4e71-a35e-9089ef1d89d1",
        "body" : "This is intended to be a placeholder while we determine what actual context should be plumbed through",
        "createdAt" : "2021-06-25T15:45:21Z",
        "updatedAt" : "2021-06-25T15:45:21Z",
        "lastEditedBy" : "a564be8e-65a9-4e71-a35e-9089ef1d89d1",
        "tags" : [
        ]
      },
      {
        "id" : "d0d14cac-5965-48a4-896c-d50a4d129e53",
        "parentId" : "8efbe424-0f2c-4401-bafe-ac9738a005f0",
        "authorId" : "a564be8e-65a9-4e71-a35e-9089ef1d89d1",
        "body" : "@cheftako can elaborate",
        "createdAt" : "2021-06-25T15:45:36Z",
        "updatedAt" : "2021-06-25T15:45:36Z",
        "lastEditedBy" : "a564be8e-65a9-4e71-a35e-9089ef1d89d1",
        "tags" : [
        ]
      },
      {
        "id" : "cab1d201-2ea0-47f2-820a-ef207d4d36ed",
        "parentId" : "8efbe424-0f2c-4401-bafe-ac9738a005f0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "ok. @cheftako will follow-up to wire this up once he confirms the lifetime of the request context matches\r\n\r\nas is, this PR gets us context timeouts on the dial and connection to the backend, which is the most critical",
        "createdAt" : "2021-06-25T18:41:08Z",
        "updatedAt" : "2021-06-25T18:41:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "21fd224ebdb17fbaafbb73a36a18aafcab6e4efa",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +205,209 @@\n\tctx := context.TODO()\n\ttunnel, err := client.CreateSingleUseGrpcTunnel(ctx, udsName, dialOption, grpc.WithInsecure())\n\tif err != nil {\n\t\treturn nil, err"
  },
  {
    "id" : "0f1f5500-a179-4ac2-89d1-4218f99ed6b9",
    "prId" : 103126,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103126#pullrequestreview-692959212",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c272be6-f096-4f4a-96b2-5316ceba1ea8",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "are we not using the context for http connect at all?",
        "createdAt" : "2021-06-25T12:23:41Z",
        "updatedAt" : "2021-06-25T12:23:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f82e34f1-0654-4d20-8c99-137ac8d699cf",
        "parentId" : "0c272be6-f096-4f4a-96b2-5316ceba1ea8",
        "authorId" : "a564be8e-65a9-4e71-a35e-9089ef1d89d1",
        "body" : "Not currently, just had to add it to all implementations of Proxier because of a breaking change in 0.0.21. This PR is intended to only update gRPC, but this change is unavoidable",
        "createdAt" : "2021-06-25T15:44:52Z",
        "updatedAt" : "2021-06-25T15:44:52Z",
        "lastEditedBy" : "a564be8e-65a9-4e71-a35e-9089ef1d89d1",
        "tags" : [
        ]
      }
    ],
    "commit" : "21fd224ebdb17fbaafbb73a36a18aafcab6e4efa",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +145,149 @@}\n\nfunc (t *httpConnectProxier) proxy(ctx context.Context, addr string) (net.Conn, error) {\n\treturn tunnelHTTPConnect(t.conn, t.proxyAddress, addr)\n}"
  },
  {
    "id" : "d536e7c7-d236-4360-b9b1-6e62097f4292",
    "prId" : 88549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88549#pullrequestreview-365101311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "717f4d8d-98ef-4dcf-8858-45b31627c597",
        "parentId" : null,
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "nit: This should be grouped separately",
        "createdAt" : "2020-02-26T17:34:32Z",
        "updatedAt" : "2020-03-06T06:27:17Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e78fc0bf03c344165f792331999b590c602708d",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +30,34 @@\t\"time\"\n\n\t\"google.golang.org/grpc\"\n\n\tutilnet \"k8s.io/apimachinery/pkg/util/net\""
  },
  {
    "id" : "644c0a87-0a18-4f75-8ad2-55ab1c27e556",
    "prId" : 88549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88549#pullrequestreview-366035323",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "088f242f-23ca-4c79-94bb-f876a54e5209",
        "parentId" : null,
        "authorId" : "3f579bf7-089d-41f0-abf9-3bf5462ec695",
        "body" : "We're using net and httpconnect synonymously. Maybe include a note somewhere that using net Dial <-> HTTP Connect?",
        "createdAt" : "2020-02-27T01:18:32Z",
        "updatedAt" : "2020-03-06T06:27:17Z",
        "lastEditedBy" : "3f579bf7-089d-41f0-abf9-3bf5462ec695",
        "tags" : [
        ]
      },
      {
        "id" : "5a670326-016c-4c1e-b1ca-c831c4e545f7",
        "parentId" : "088f242f-23ca-4c79-94bb-f876a54e5209",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Renamed to httpConnectProxier",
        "createdAt" : "2020-02-27T22:09:18Z",
        "updatedAt" : "2020-03-06T06:27:17Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e78fc0bf03c344165f792331999b590c602708d",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +142,146 @@\nfunc (t *httpConnectProxier) proxy(addr string) (net.Conn, error) {\n\treturn tunnelHTTPConnect(t.conn, t.proxyAddress, addr)\n}\n"
  },
  {
    "id" : "9e6351b0-aa8f-4e5b-b9af-20c0ff0b9300",
    "prId" : 88549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88549#pullrequestreview-370072559",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0416ab99-9899-40f9-a50e-e438a90be24f",
        "parentId" : null,
        "authorId" : "3f579bf7-089d-41f0-abf9-3bf5462ec695",
        "body" : "Is this number a good representation of our expected latency?",
        "createdAt" : "2020-02-27T01:42:31Z",
        "updatedAt" : "2020-03-06T06:27:17Z",
        "lastEditedBy" : "3f579bf7-089d-41f0-abf9-3bf5462ec695",
        "tags" : [
        ]
      },
      {
        "id" : "5afdc686-3b3a-463a-beca-49c5d547936f",
        "parentId" : "0416ab99-9899-40f9-a50e-e438a90be24f",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "This is the amount used by apiserver to decide if logging the trace of an API request. Considering that an API request might go through an admission webhook which is goes through the egress dialer, we should record the trace here if it's >500ms. I don't know if we should make the threshold here lower. I think 500ms is a good start.",
        "createdAt" : "2020-02-27T22:24:55Z",
        "updatedAt" : "2020-03-06T06:27:17Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "477f8dd2-e742-4038-816e-dd76b1a7839b",
        "parentId" : "0416ab99-9899-40f9-a50e-e438a90be24f",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This is just establishing a connection to the proxy, and not the entire network call through to the destination, correct?",
        "createdAt" : "2020-03-05T22:51:29Z",
        "updatedAt" : "2020-03-06T06:27:17Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "a8aa32a1-caf6-4bdc-970d-3799795588a2",
        "parentId" : "0416ab99-9899-40f9-a50e-e438a90be24f",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "(in which case 500ms sounds overly generous)",
        "createdAt" : "2020-03-05T23:01:15Z",
        "updatedAt" : "2020-03-06T06:27:17Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "f21c37ca-4930-45b4-be49-4adc6be4610c",
        "parentId" : "0416ab99-9899-40f9-a50e-e438a90be24f",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "No, this is establishing the entire tunnel all the way to the destination. ",
        "createdAt" : "2020-03-06T04:11:43Z",
        "updatedAt" : "2020-03-06T06:27:17Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e78fc0bf03c344165f792331999b590c602708d",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +224,228 @@\treturn func(ctx context.Context, network, addr string) (net.Conn, error) {\n\t\ttrace := utiltrace.New(fmt.Sprintf(\"Proxy via HTTP Connect over %s\", d.options.transport), utiltrace.Field{Key: \"address\", Value: addr})\n\t\tdefer trace.LogIfLong(500 * time.Millisecond)\n\t\tstart := egressmetrics.Metrics.Clock().Now()\n\t\tproxier, err := d.connector.connect()"
  },
  {
    "id" : "5b7b54dd-b9df-48a6-8542-4ed767eb5c97",
    "prId" : 88549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88549#pullrequestreview-366035323",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b056053d-fbd5-4169-8dd4-d13358f4cf85",
        "parentId" : null,
        "authorId" : "3f579bf7-089d-41f0-abf9-3bf5462ec695",
        "body" : "nit: Does it make sense to wire the entire UDS object here in case we add more fields in the future?",
        "createdAt" : "2020-02-27T01:48:10Z",
        "updatedAt" : "2020-03-06T06:27:17Z",
        "lastEditedBy" : "3f579bf7-089d-41f0-abf9-3bf5462ec695",
        "tags" : [
        ]
      },
      {
        "id" : "53202679-4a0f-4dd5-b2a1-74fc24db600f",
        "parentId" : "b056053d-fbd5-4169-8dd4-d13358f4cf85",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Let's keep it simple for now. It's easy to refactor when needed, because all the interfaces are private.",
        "createdAt" : "2020-02-27T22:26:00Z",
        "updatedAt" : "2020-03-06T06:27:17Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e78fc0bf03c344165f792331999b590c602708d",
    "line" : 252,
    "diffHunk" : "@@ -1,1 +317,321 @@\t\t\treturn &dialerCreator{\n\t\t\t\tconnector: &udsGRPCConnector{\n\t\t\t\t\tudsName: c.Transport.UDS.UDSName,\n\t\t\t\t},\n\t\t\t\toptions: metricsOptions{"
  },
  {
    "id" : "7701fa33-b93a-4a80-af6b-c65be7ca91aa",
    "prId" : 88549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88549#pullrequestreview-365357489",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20506e51-8570-4055-9efe-db6c1cee5dec",
        "parentId" : null,
        "authorId" : "3f579bf7-089d-41f0-abf9-3bf5462ec695",
        "body" : "nit: `transport` and `protocol` seem to be specific to metrics. Perhaps it would be helpful to put them into a separate struct.",
        "createdAt" : "2020-02-27T01:50:08Z",
        "updatedAt" : "2020-03-06T06:27:17Z",
        "lastEditedBy" : "3f579bf7-089d-41f0-abf9-3bf5462ec695",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e78fc0bf03c344165f792331999b590c602708d",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +214,218 @@\ntype metricsOptions struct {\n\ttransport string\n\tprotocol  string\n}"
  },
  {
    "id" : "e80d778f-17f2-4f59-bbd4-3c6f35a60dd7",
    "prId" : 88549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88549#pullrequestreview-370465051",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67cf5622-a21f-4a6d-98af-d1eba947c6bf",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "nit: It's not clear to me why this is an embedded function rather than a method. I think it would be easier to read/document that way.",
        "createdAt" : "2020-03-06T16:41:58Z",
        "updatedAt" : "2020-03-06T16:41:58Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e78fc0bf03c344165f792331999b590c602708d",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +222,226 @@\t\treturn directDialer\n\t}\n\treturn func(ctx context.Context, network, addr string) (net.Conn, error) {\n\t\ttrace := utiltrace.New(fmt.Sprintf(\"Proxy via HTTP Connect over %s\", d.options.transport), utiltrace.Field{Key: \"address\", Value: addr})\n\t\tdefer trace.LogIfLong(500 * time.Millisecond)"
  },
  {
    "id" : "0029990f-b415-4bbd-b1fa-fb747fa1137f",
    "prId" : 87179,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87179#pullrequestreview-361521533",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e64f5634-eb43-4637-9e9e-02dd118faf76",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "So it's default to nil, not system root?",
        "createdAt" : "2020-02-19T00:00:48Z",
        "updatedAt" : "2020-02-20T20:46:07Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "0f2f84ce-cb54-4278-95f3-60fe80d5d446",
        "parentId" : "e64f5634-eb43-4637-9e9e-02dd118faf76",
        "authorId" : "3f579bf7-089d-41f0-abf9-3bf5462ec695",
        "body" : "According to https://golang.org/pkg/crypto/tls/, \"If RootCAs is nil, TLS uses the host's root CA set.\"",
        "createdAt" : "2020-02-19T00:59:53Z",
        "updatedAt" : "2020-02-20T20:46:07Z",
        "lastEditedBy" : "3f579bf7-089d-41f0-abf9-3bf5462ec695",
        "tags" : [
        ]
      },
      {
        "id" : "934673c7-9737-4477-b4a6-f0a847a96b91",
        "parentId" : "e64f5634-eb43-4637-9e9e-02dd118faf76",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Can you add a comment to note this fact?",
        "createdAt" : "2020-02-19T23:51:55Z",
        "updatedAt" : "2020-02-20T20:46:07Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d798ccbba166449971c8579dce57870abec9131b",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +150,154 @@\t} else {\n\t\t// Use host's root CA set instead of providing our own\n\t\tcertPool = nil\n\t}\n\tcontextDialer := func(ctx context.Context, network, addr string) (net.Conn, error) {"
  },
  {
    "id" : "7d317202-d7e0-4b58-af6a-fb7872e23644",
    "prId" : 82048,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82048#pullrequestreview-280996575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd75ef3e-f202-469f-ab57-abc8cef35252",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Huge fan of the package and func name change, thanks.",
        "createdAt" : "2019-08-28T16:57:29Z",
        "updatedAt" : "2019-08-30T17:39:47Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "1056e67c-f3f9-4752-9781-7be30c9c0a99",
        "parentId" : "cd75ef3e-f202-469f-ab57-abc8cef35252",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "NP",
        "createdAt" : "2019-08-28T17:45:30Z",
        "updatedAt" : "2019-08-30T17:39:47Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "edbb0fa2fe2084d5d9ce0cf9dc0d1b2d820bb392",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +15,19 @@*/\n\npackage egressselector\n\nimport ("
  }
]