[
  {
    "id" : "330f1d6a-98d2-4137-9870-73cc198a3082",
    "prId" : 103232,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103232#pullrequestreview-693963901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb7c52f7-ff61-40ec-84f4-b1c2e447e2c0",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if CheckGracefulDelete returns true, options.GracePeriodSeconds must be non-nil (that's what tells the deletion how \"graceful\" to be).\r\n\r\nA nil check could be ok, but it's an internal error if options.GracePeriodSeconds is nil at this point, and the error should fail the request with an internal error. The docs on the RESTGracefulDeleteStrategy method should be updated as well.",
        "createdAt" : "2021-06-27T00:58:09Z",
        "updatedAt" : "2021-06-27T00:58:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e5212585-a419-4767-9070-511d4898dee8",
        "parentId" : "fb7c52f7-ff61-40ec-84f4-b1c2e447e2c0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I expected something more like this inserted at line 135, without any other changes:\r\n```go\r\nif options.GracePeriodSeconds == nil {\r\n  return false, false, ... internal error ...\r\n}\r\n```",
        "createdAt" : "2021-06-28T13:35:12Z",
        "updatedAt" : "2021-06-28T13:35:12Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "af19d7f415d70a1de3d67a00921865ba2868b425",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +133,137 @@\t\treturn false, false, nil\n\t}\n\n\tif options.GracePeriodSeconds == nil {\n\t\treturn false, false, errors.NewInternalError(fmt.Errorf(\"options.GracePeriodSeconds should not be nil\"))"
  },
  {
    "id" : "d5f9a069-9174-4d4e-bbbe-b849930e38bf",
    "prId" : 98866,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98866#pullrequestreview-693356139",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbf957a1-36e2-4dce-8363-f14def7ff5a3",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "adding another options mutation looks like it will exacerbate the issue being fixed in https://github.com/kubernetes/kubernetes/pull/100101\r\n\r\n@deads2k, is that PR close? is there something this PR should do differently to avoid that issue?",
        "createdAt" : "2021-06-26T21:02:32Z",
        "updatedAt" : "2021-06-26T21:02:33Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8d4cfac933485b9b4e5e802e267723ce9d2b90f",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +91,95 @@\t// Negative values will be treated as the value `1s` on the delete path.\n\tif gracePeriodSeconds := options.GracePeriodSeconds; gracePeriodSeconds != nil && *gracePeriodSeconds < 0 {\n\t\toptions.GracePeriodSeconds = utilpointer.Int64(1)\n\t}\n\tif deletionGracePeriodSeconds := objectMeta.GetDeletionGracePeriodSeconds(); deletionGracePeriodSeconds != nil && *deletionGracePeriodSeconds < 0 {"
  },
  {
    "id" : "39523bb7-e763-45ba-80b8-9aa253a77eb5",
    "prId" : 76346,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76346#pullrequestreview-226979793",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d2ab3a3-30ab-4b84-9c2c-321ba965e23e",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "could hoist the `mutatingAdmission.Handles(admission.Delete)` check outside and short-circuit the expensive attribute building if it doesn't handle delete",
        "createdAt" : "2019-04-16T04:29:01Z",
        "updatedAt" : "2019-05-17T16:54:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d40e3c9e98ecade4a62d18f20163164d3e5e862",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +147,151 @@\tmutatingAdmission, isMutatingAdmission := admit.(admission.MutationInterface)\n\tvalidatingAdmission, isValidatingAdmission := admit.(admission.ValidationInterface)\n\n\tmutating := isMutatingAdmission && mutatingAdmission.Handles(staticAttributes.GetOperation())\n\tvalidating := isValidatingAdmission && validatingAdmission.Handles(staticAttributes.GetOperation())"
  }
]