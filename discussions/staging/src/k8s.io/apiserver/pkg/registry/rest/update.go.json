[
  {
    "id" : "5796f122-90f4-42b8-80e0-2aee8ab4b1bc",
    "prId" : 101688,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101688#pullrequestreview-658337453",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4293aadc-1439-4529-822e-5840f985c863",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Maybe given an example so people don't do `pod.spec.foo` like they did in validation?",
        "createdAt" : "2021-05-12T20:16:42Z",
        "updatedAt" : "2021-05-12T20:16:42Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "f669796dfdc001c4426751a419c0fc29b5b66d60",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +60,64 @@\t// Be brief; limit warnings to 120 characters if possible.\n\t// Don't include a \"Warning:\" prefix in the message (that is added by clients on output).\n\t// Warnings returned about a specific field should be formatted as \"path.to.field: message\".\n\t// For example: `spec.imagePullSecrets[0].name: invalid empty name \"\"`\n\t//"
  },
  {
    "id" : "fe04e99e-3014-4d96-8146-50b298fcbdbb",
    "prId" : 101688,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101688#pullrequestreview-658337875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f37fe63-7a5a-4799-868b-02029240eae6",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "What other guidance can we give?  Maybe examples of how you plan to use it (2-3)?",
        "createdAt" : "2021-05-12T20:17:11Z",
        "updatedAt" : "2021-05-12T20:17:11Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "f669796dfdc001c4426751a419c0fc29b5b66d60",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +63,67 @@\t// For example: `spec.imagePullSecrets[0].name: invalid empty name \"\"`\n\t//\n\t// Use warning messages to describe problems the client making the API request should correct or be aware of.\n\t// For example:\n\t// - use of deprecated fields/labels/annotations that will stop working in a future release"
  },
  {
    "id" : "b97b3064-3c8f-4bc9-8f34-8e6ac734a6ea",
    "prId" : 72947,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72947#pullrequestreview-198860072",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5613ce30-71fd-4441-99c4-453cda4f2a8e",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This could remove existing managed fields. I guess that's OK?",
        "createdAt" : "2019-01-31T23:15:21Z",
        "updatedAt" : "2019-02-04T21:52:39Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "fcd4985ce4732be7c4dfa62f8e54d92d53496e15",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +109,113 @@\tobjectMeta.SetInitializers(nil)\n\n\t// Ensure managedFields state is removed unless ServerSideApply is enabled\n\tif !utilfeature.DefaultFeatureGate.Enabled(features.ServerSideApply) {\n\t\toldMeta.SetManagedFields(nil)"
  },
  {
    "id" : "74a9c4f9-ef97-423d-afe4-b46fa264b3dc",
    "prId" : 51436,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51436#pullrequestreview-59019994",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "445b4397-8409-44b6-91bf-7fb5d137993f",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Why setting the oldMeta?",
        "createdAt" : "2017-08-28T17:41:38Z",
        "updatedAt" : "2017-08-28T17:51:53Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "3fc1d16f-3ddd-4657-8b51-cc9e77dcc799",
        "parentId" : "445b4397-8409-44b6-91bf-7fb5d137993f",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if the feature is disabled, the server should behave as if it doesn't know about the field at all. ideally that would be done in decoding of the existing object from etcd and the sent object from the request based on field gates, but until then, we mimic that by dropping it from all objects here.",
        "createdAt" : "2017-08-28T18:04:50Z",
        "updatedAt" : "2017-08-28T18:05:07Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "658956f0631c6bd3ecf9f756db4a0710efea98ea",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +104,108 @@\t// Ensure Initializers are not set unless the feature is enabled\n\tif !utilfeature.DefaultFeatureGate.Enabled(features.Initializers) {\n\t\toldMeta.SetInitializers(nil)\n\t\tobjectMeta.SetInitializers(nil)\n\t}"
  }
]