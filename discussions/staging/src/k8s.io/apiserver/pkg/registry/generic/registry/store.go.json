[
  {
    "id" : "d3b4eba8-c511-40fb-9791-00be376760bc",
    "prId" : 98287,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98287#pullrequestreview-579225702",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2187e2d8-1969-4b45-9341-f2448108ac20",
        "parentId" : null,
        "authorId" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "body" : "Possibly it would be better to pass only `prefix`, but best to ask directory owner.\r\n```suggestion\r\n\tklog.V(2).InfoS(\"Monitoring resource count at path\", \"resource\", resourceName, \"prefix\", prefix)\r\n```",
        "createdAt" : "2021-01-29T12:50:05Z",
        "updatedAt" : "2021-03-11T02:31:10Z",
        "lastEditedBy" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e7b5ff480b04342f78b6d321814f05e31abc4bb",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +1427,1431 @@\tprefix := e.KeyRootFunc(genericapirequest.NewContext())\n\tresourceName := e.DefaultQualifiedResource.String()\n\tklog.V(2).InfoS(\"Monitoring resource count at path\", \"resource\", resourceName, \"path\", \"<storage-prefix>/\"+prefix)\n\tstopCh := make(chan struct{})\n\tgo wait.JitterUntil(func() {"
  },
  {
    "id" : "e5aa698a-0209-4edd-8532-1a0f75d810a4",
    "prId" : 98287,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98287#pullrequestreview-609339784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "058ee135-b440-43e3-bc2a-7c532b64e78c",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "`klog.KObj(accessor)`  translates to the name?",
        "createdAt" : "2021-03-10T10:40:37Z",
        "updatedAt" : "2021-03-11T02:31:10Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "8eda0326-909d-47ad-a644-c185e3fdb7ce",
        "parentId" : "058ee135-b440-43e3-bc2a-7c532b64e78c",
        "authorId" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "body" : "By default it will translate to `<namespace>/<name>` if namespace is not empty or `<name>` otherwise\r\nIt also supports JSON format and will translate into `{\"namespace\": \"<namespace>\", \"name\": \"name\"}`",
        "createdAt" : "2021-03-10T11:20:45Z",
        "updatedAt" : "2021-03-11T02:31:10Z",
        "lastEditedBy" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "tags" : [
        ]
      },
      {
        "id" : "5aeb3de1-4fca-4376-b283-48853bc73394",
        "parentId" : "058ee135-b440-43e3-bc2a-7c532b64e78c",
        "authorId" : "5fcdc717-54e1-453d-b59d-1ebc30e5755b",
        "body" : "before:\r\nI0126 15:29:45.366832   27464 store.go:1146] Delete foo in DeleteCollection failed: this is for test\r\nafter:\r\nI0126 15:29:45.366850   27464 store.go:1147] \"Deleted object in DeleteCollection failed\" object=\"test/foo\" err=\"this is for test\"",
        "createdAt" : "2021-03-11T02:14:32Z",
        "updatedAt" : "2021-03-11T02:31:10Z",
        "lastEditedBy" : "5fcdc717-54e1-453d-b59d-1ebc30e5755b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e7b5ff480b04342f78b6d321814f05e31abc4bb",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +1150,1154 @@\t\t\t\t}\n\t\t\t\tif _, _, err := e.Delete(ctx, accessor.GetName(), deleteValidation, options); err != nil && !apierrors.IsNotFound(err) {\n\t\t\t\t\tklog.V(4).InfoS(\"Delete object in DeleteCollection failed\", \"object\", klog.KObj(accessor), \"err\", err)\n\t\t\t\t\terrs <- err\n\t\t\t\t\treturn"
  },
  {
    "id" : "80045553-806e-4654-a5ed-4293d98a4a9a",
    "prId" : 96393,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96393#pullrequestreview-527298045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5da24b22-6c7f-467c-8e43-5cc4b886e8d6",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "don't we need to set `success = true` before returning in L563?",
        "createdAt" : "2020-11-10T14:58:25Z",
        "updatedAt" : "2021-01-08T19:14:39Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "945b3304-c6e5-4d14-bdd1-5b2541213036",
        "parentId" : "5da24b22-6c7f-467c-8e43-5cc4b886e8d6",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "ahh this runs inside `e.Storage.GuaranteedUpdate(`\r\nsorry",
        "createdAt" : "2020-11-10T15:07:15Z",
        "updatedAt" : "2021-01-08T19:14:39Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "37b34f5b53edec78ca33929443bb4ba9a9534ed1",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +558,562 @@\t\t\t\t}()\n\t\t\t}\n\n\t\t\tcreating = true\n\t\t\tcreatingObj = obj"
  },
  {
    "id" : "649bb6ca-f3d1-4699-933a-708e63c009e4",
    "prId" : 96393,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96393#pullrequestreview-527387537",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec691db4-d87a-4d59-867e-6965d41119c7",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "The decorator is no longer the \"last\" exit hook , should we clarify it in the comment?\r\n",
        "createdAt" : "2020-11-10T15:04:41Z",
        "updatedAt" : "2021-01-08T19:14:39Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "8fa42a55-1a95-4721-9f3f-3fdfeacfb8ef",
        "parentId" : "ec691db4-d87a-4d59-867e-6965d41119c7",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Good point, will add to comments",
        "createdAt" : "2020-11-10T16:33:03Z",
        "updatedAt" : "2021-01-08T19:14:39Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "ecc9ae59-3c14-4151-b5cb-c82bddd79d88",
        "parentId" : "ec691db4-d87a-4d59-867e-6965d41119c7",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "re-pushed",
        "createdAt" : "2020-11-10T16:33:22Z",
        "updatedAt" : "2021-01-08T19:14:39Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "37b34f5b53edec78ca33929443bb4ba9a9534ed1",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +161,165 @@\t// they cannot be watched.\n\tDecorator func(runtime.Object)\n\n\t// CreateStrategy implements resource-specific behavior during creation.\n\tCreateStrategy rest.RESTCreateStrategy"
  },
  {
    "id" : "a9369599-6226-40dd-b60f-a0373fea3a8b",
    "prId" : 96393,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96393#pullrequestreview-527538460",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87b71ef1-b373-4919-859f-cf857c06594f",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I can't remember if populating the type meta is important, but patch does when converting PatchOptions to `{Create,Update}Options`:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/0ad06e991ab0d0708593e3e6415c521c6b76b7d1/staging/src/k8s.io/apiserver/pkg/endpoints/handlers/patch.go#L647-L671",
        "createdAt" : "2020-11-10T17:09:53Z",
        "updatedAt" : "2021-01-08T19:14:39Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ca1f72de-f55c-4f0c-8b8e-338b872733cd",
        "parentId" : "87b71ef1-b373-4919-859f-cf857c06594f",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "ACK",
        "createdAt" : "2020-11-10T19:28:44Z",
        "updatedAt" : "2021-01-08T19:14:39Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "37b34f5b53edec78ca33929443bb4ba9a9534ed1",
    "line" : 296,
    "diffHunk" : "@@ -1,1 +691,695 @@\t\tDryRun:       in.DryRun,\n\t\tFieldManager: in.FieldManager,\n\t}\n\tco.TypeMeta.SetGroupVersionKind(metav1.SchemeGroupVersion.WithKind(\"CreateOptions\"))\n\treturn co"
  },
  {
    "id" : "3967ee8c-1294-4193-a3a1-c04a01b7d865",
    "prId" : 96393,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96393#pullrequestreview-553194852",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "999dee0f-f12e-482d-a094-783450cf4900",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Can we get a test that ensures we're handling all fields? Something like we did for the `rest.CopyConfig`, that makes us look at this method every time we add a value to UpdateOptions or to CreateOptions.",
        "createdAt" : "2020-12-10T18:55:48Z",
        "updatedAt" : "2021-01-08T19:14:39Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "d5f14516-9d97-42dc-9138-caef5f4912eb",
        "parentId" : "999dee0f-f12e-482d-a094-783450cf4900",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "context https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/rest/config_test.go#L395-L493",
        "createdAt" : "2020-12-15T19:30:34Z",
        "updatedAt" : "2021-01-08T19:14:39Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "be22fc0f-8ac7-4306-b782-f65d648fc8ef",
        "parentId" : "999dee0f-f12e-482d-a094-783450cf4900",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "ACK.. It's a little gross, but it works.",
        "createdAt" : "2020-12-16T00:44:38Z",
        "updatedAt" : "2021-01-08T19:14:39Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "37b34f5b53edec78ca33929443bb4ba9a9534ed1",
    "line" : 292,
    "diffHunk" : "@@ -1,1 +687,691 @@// This is a helper to convert UpdateOptions to CreateOptions for the\n// create-on-update path.\nfunc newCreateOptionsFromUpdateOptions(in *metav1.UpdateOptions) *metav1.CreateOptions {\n\tco := &metav1.CreateOptions{\n\t\tDryRun:       in.DryRun,"
  },
  {
    "id" : "6aef0a76-ceb5-4905-a2e8-4b2754d8aca9",
    "prId" : 96393,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96393#pullrequestreview-553246076",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03da47b4-d3bd-4cb1-b8db-edc585576612",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "```go\r\nfunc cleanNothing(ctx, bool){}\r\n\r\nCreate() {\r\n  var cleanupFn cleanupFunc = cleanNothing\r\n  success := false\r\n  defer func(){\r\n    cleanup(ctx, success)\r\n  }\r\n\r\n  if e.BeginCreate != nil{\r\n    fn, err := e.BeginCreate\r\n    if err != nil{\r\n    }\r\n    cleanFn = fn\r\n  }\r\n\r\n  // where the existing duplicate cleanup block is\r\n  success = true\r\n```\r\n\r\nreads easier to me",
        "createdAt" : "2020-12-15T15:24:38Z",
        "updatedAt" : "2021-01-08T19:14:39Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "60454b08-0170-4b0b-b964-412935183958",
        "parentId" : "03da47b4-d3bd-4cb1-b8db-edc585576612",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Given the ordering we talked about, I can do something similar but not quite this.  I'm going to add it as a distinct commit.  If you like it, we keep it.  If not, we abandon just that.  ",
        "createdAt" : "2020-12-16T01:21:57Z",
        "updatedAt" : "2021-01-08T19:14:39Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "37b34f5b53edec78ca33929443bb4ba9a9534ed1",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +367,371 @@\n// Create inserts a new item according to the unique key from the object.\nfunc (e *Store) Create(ctx context.Context, obj runtime.Object, createValidation rest.ValidateObjectFunc, options *metav1.CreateOptions) (runtime.Object, error) {\n\tvar finishCreate FinishFunc = finishNothing\n"
  },
  {
    "id" : "2e6f3227-4f64-4573-917c-e00f4f9538d3",
    "prId" : 85516,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85516#pullrequestreview-323314854",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e499763-200f-4595-9c02-0ecb8bcf0914",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if `preconditions.ResourceVersion` is set, that also means `options.Preconditions.ResourceVersion` is set, right? do we need to update that as well? if so, do we need to copy delete options first to avoid mutating what was passed in?",
        "createdAt" : "2019-11-26T21:34:41Z",
        "updatedAt" : "2019-11-26T21:34:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ee6e5389-e774-44cf-9891-f223887d342f",
        "parentId" : "8e499763-200f-4595-9c02-0ecb8bcf0914",
        "authorId" : "c924ff9d-2ff6-4d00-98bc-1de4b935110f",
        "body" : "We don't need to copy delete options, we don't pass it anywhere, it dead-ends in this function and we access the variables directly as we need them (we set preconditions earlier in the function and never refer to the ones in options again).\r\n\r\nWith the test I've added we should be safe against regression.  Delete options is specifically for this function, so not sure what the benefit of copying would be at this time.",
        "createdAt" : "2019-11-26T22:00:36Z",
        "updatedAt" : "2019-11-26T22:00:37Z",
        "lastEditedBy" : "c924ff9d-2ff6-4d00-98bc-1de4b935110f",
        "tags" : [
        ]
      },
      {
        "id" : "65d7b847-670d-44a7-ac40-62c3646046e5",
        "parentId" : "8e499763-200f-4595-9c02-0ecb8bcf0914",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "got it, I misread the later use of `options.DryRun` and thought we were passing the entire options struct into subcalls",
        "createdAt" : "2019-11-26T22:05:12Z",
        "updatedAt" : "2019-11-26T22:05:12Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "494629ef58c6d01607d610d3e757666356c0b18d",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +938,942 @@\t\t\t}\n\t\t\tresourceVersion := accessor.GetResourceVersion()\n\t\t\tpreconditions.ResourceVersion = &resourceVersion\n\t\t}\n\t}"
  },
  {
    "id" : "f5e99279-46da-4a8f-b634-f187c74a4729",
    "prId" : 76346,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76346#pullrequestreview-227968006",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6dee5f6f-3b2d-40b4-ba57-ac9216fa1294",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "was this change significant?",
        "createdAt" : "2019-04-16T04:24:59Z",
        "updatedAt" : "2019-05-17T16:54:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "8510150f-80e7-4077-87d6-969d4441c848",
        "parentId" : "6dee5f6f-3b2d-40b4-ba57-ac9216fa1294",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "No, I think it's my IDE needs update.",
        "createdAt" : "2019-04-17T20:00:36Z",
        "updatedAt" : "2019-05-17T16:54:41Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d40e3c9e98ecade4a62d18f20163164d3e5e862",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +893,897 @@\tobj := e.NewFunc()\n\tqualifiedResource := e.qualifiedResourceFromContext(ctx)\n\tif err = e.Storage.Get(ctx, key, \"\", obj, false); err != nil {\n\t\treturn nil, false, storeerr.InterpretDeleteError(err, qualifiedResource, name)\n\t}"
  },
  {
    "id" : "757fb64b-5904-4745-8138-d71580ee68ad",
    "prId" : 63309,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63309#pullrequestreview-116633264",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9553d3b-135e-4522-a562-4f75fcd4161f",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "Haha",
        "createdAt" : "2018-05-01T17:19:41Z",
        "updatedAt" : "2018-05-01T17:24:46Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ae62517da5eff6d6bad21badfd39ee88463ad42",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +252,256 @@\t}\n\n\tpanic(\"programmer error: no CRUD for resource, you're crazy, override NamespaceScoped too\")\n}\n"
  },
  {
    "id" : "b1bed4f3-9516-4350-835a-389695bd4cf4",
    "prId" : 61894,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61894#pullrequestreview-108029174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5425f3c6-16fc-40d6-89fb-20e49c8381cd",
        "parentId" : null,
        "authorId" : "06a18a1b-6ca5-44b8-9cdc-5bb944ae4e29",
        "body" : "This seems like a bug to me. Without this `return` the loop becomes a hot loop once the context is done.",
        "createdAt" : "2018-03-29T12:34:49Z",
        "updatedAt" : "2018-03-29T12:34:50Z",
        "lastEditedBy" : "06a18a1b-6ca5-44b8-9cdc-5bb944ae4e29",
        "tags" : [
        ]
      }
    ],
    "commit" : "c23a8a85cce80a1015797e9c76aae709d9910791",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +446,450 @@\t\t\t}\n\t\tcase <-ctx.Done():\n\t\t\treturn nil, ctx.Err()\n\t\t}\n\t}"
  },
  {
    "id" : "ac570d76-4ea4-4b57-a994-d834ea8e7ec5",
    "prId" : 55148,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55148#pullrequestreview-75305438",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52d150ea-14f9-45b4-99d6-c1a6467ae0ae",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Why do you need to change these lines? It seems you only need to pass `ctx` to `DefaultGarbageCollectionPolicy()`?",
        "createdAt" : "2017-11-08T21:02:25Z",
        "updatedAt" : "2017-11-22T02:10:07Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "059132be-1f96-4b29-b36c-0ef3de85fc2c",
        "parentId" : "52d150ea-14f9-45b4-99d6-c1a6467ae0ae",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "`DefaultGarbageCollectionPolicy` is called twice in L704 and L737.\r\n\r\nI think we should call it once and get the value.",
        "createdAt" : "2017-11-09T01:18:35Z",
        "updatedAt" : "2017-11-22T02:10:07Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      }
    ],
    "commit" : "344fe56ed30c0b83ab0a01e3b1344ecea3925863",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +702,706 @@func shouldOrphanDependents(ctx genericapirequest.Context, e *Store, accessor metav1.Object, options *metav1.DeleteOptions) bool {\n\t// Get default GC policy from this REST object type\n\tgcStrategy, ok := e.DeleteStrategy.(rest.GarbageCollectionDeleteStrategy)\n\tvar defaultGCPolicy rest.GarbageCollectionPolicy\n\tif ok {"
  },
  {
    "id" : "fdb62a24-e1a2-467d-b22b-bac4bba15d5e",
    "prId" : 50681,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50681#pullrequestreview-56332290",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0bcf993-25bc-468c-a143-f874817a7ed9",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "pre-existing, but this looks weird, right?",
        "createdAt" : "2017-08-15T12:33:35Z",
        "updatedAt" : "2017-08-15T12:33:35Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "8a74187b-e3f7-40e0-b30a-5e2c9d03ca66",
        "parentId" : "a0bcf993-25bc-468c-a143-f874817a7ed9",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "not necessarily. It means that listOptions is never nil. And indeed line 1071 looks like it needs this.",
        "createdAt" : "2017-08-15T12:56:34Z",
        "updatedAt" : "2017-08-15T12:56:34Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2442224e79f480409806c2ccfa24a9acb708162",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +1061,1065 @@func (e *Store) DeleteCollection(ctx genericapirequest.Context, options *metav1.DeleteOptions, listOptions *metainternalversion.ListOptions) (runtime.Object, error) {\n\tif listOptions == nil {\n\t\tlistOptions = &metainternalversion.ListOptions{}\n\t} else {\n\t\tlistOptions = listOptions.DeepCopy()"
  },
  {
    "id" : "eb2281fa-abac-49e8-8715-05b0af760946",
    "prId" : 49868,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49868#pullrequestreview-53942032",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07b1c880-94a7-4b38-8d1f-1a8a9a04d6e1",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "DefaultQualifiedResource is the pluralized name of the resource.\r\nThis field is used if there is no request info present in the context.\r\nSee qualifiedResourceFromContext for details.",
        "createdAt" : "2017-08-02T22:36:41Z",
        "updatedAt" : "2017-08-07T08:31:09Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2eda19da7be9b8e0fad294bf902684f23a795dd2",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +84,88 @@\tNewListFunc func() runtime.Object\n\n\t// DefaultQualifiedResource is the pluralized name of the resource.\n\t// This field is used if there is no request info present in the context.\n\t// See qualifiedResourceFromContext for details."
  },
  {
    "id" : "a403b678-c7fa-4af0-8e3c-c8ce61fd89b7",
    "prId" : 45403,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45403#pullrequestreview-36488397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1dd2b2c0-517f-4860-bfc8-e69244abe681",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "above you're testing for `> 0`, not `>= 0`, so I think zero currently does `defaultWatchCacheSize`",
        "createdAt" : "2017-05-05T11:52:40Z",
        "updatedAt" : "2017-05-08T09:29:11Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "6742b1b1-38b5-46f9-9a29-5db3a0b0d94c",
        "parentId" : "1dd2b2c0-517f-4860-bfc8-e69244abe681",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Good spot. `>=0` (= off) is correct.",
        "createdAt" : "2017-05-05T11:55:59Z",
        "updatedAt" : "2017-05-08T09:29:11Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "b799e62e1aa82a1f1ff87597e762734cd702cdee",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +163,167 @@\t// Maximum size of the watch history cached in memory, in number of entries.\n\t// This value is ignored if Storage is non-nil. Nil is replaced with a default value.\n\t// A zero integer will disable caching.\n\tWatchCacheSize *int\n}"
  },
  {
    "id" : "233ffc4e-412f-49be-b3ec-ddb41cfa9a59",
    "prId" : 40848,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40848#pullrequestreview-32922046",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ba7decd-d2d7-47be-957c-285f987938f9",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Barring `ExportStrategy`, the rest of this interface is about managing basic CRUD.  Can you keep the layers separate so we have one layer for CRUD which can be wrapped by something which can do a TableConversion separately?",
        "createdAt" : "2017-04-11T17:50:55Z",
        "updatedAt" : "2017-05-29T22:30:17Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "c476be1b-c2c1-410d-99ff-33e265879312",
        "parentId" : "6ba7decd-d2d7-47be-957c-285f987938f9",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "ExportStrategy and Tables are the same.  Store isn't about CRUD, it's about REST.  Export/Table are Representations of State.",
        "createdAt" : "2017-04-15T06:25:54Z",
        "updatedAt" : "2017-05-29T22:30:17Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ce63eb608cdf95df429d6138ccf8dbf8b47a740",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +159,163 @@\t// TableConvertor is an optional interface for transforming items or lists\n\t// of items into tabular output. If unset, the default will be used.\n\tTableConvertor rest.TableConvertor\n\n\t// Storage is the interface for the underlying storage for the resource."
  },
  {
    "id" : "20294d5e-eb54-4f52-aebb-6da693cfabfb",
    "prId" : 38676,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38676#pullrequestreview-23793226",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e09f18d2-e86b-4fe7-bccd-4006c07ab30b",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "What about default?",
        "createdAt" : "2017-02-24T05:35:20Z",
        "updatedAt" : "2017-03-01T07:05:50Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "b9b895d2-2186-4696-8536-bd76f081840e",
        "parentId" : "e09f18d2-e86b-4fe7-bccd-4006c07ab30b",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Default is the same as nil, so it's ignored here.",
        "createdAt" : "2017-02-24T06:52:15Z",
        "updatedAt" : "2017-03-01T07:05:50Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "71df8184-05a5-46b6-91dd-ecc7d6b268fe",
        "parentId" : "e09f18d2-e86b-4fe7-bccd-4006c07ab30b",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Default means \"respect the REST strategy or the existing finalizer\". [edit] Actually as lavalamp suggested, we can remove Default, and just use nil to represent Default.",
        "createdAt" : "2017-02-24T06:53:51Z",
        "updatedAt" : "2017-03-01T07:05:50Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "8346d8d0-c689-4f54-a228-7a9fb576091e",
        "parentId" : "e09f18d2-e86b-4fe7-bccd-4006c07ab30b",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I removed Default from the API, since it's the same as nil.",
        "createdAt" : "2017-02-24T19:29:39Z",
        "updatedAt" : "2017-03-01T07:05:50Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "31cb266340ac5d702a650ea30c730bb909cd99b5",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +571,575 @@\t\tcase metav1.DeletePropagationOrphan:\n\t\t\tshouldOrphan = true\n\t\tcase metav1.DeletePropagationBackground, metav1.DeletePropagationForeground:\n\t\t\tshouldOrphan = false\n\t\t}"
  },
  {
    "id" : "c492254d-91c8-4b8c-90a8-e21dc9fd7a7f",
    "prId" : 36721,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36721#pullrequestreview-40435938",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e496ce8-a575-4597-956a-c07ea3784bc4",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "What if the connection to etcd is interrupted?",
        "createdAt" : "2017-05-25T23:30:17Z",
        "updatedAt" : "2017-06-03T02:09:49Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "5475fb5d-f1ea-42e6-a31b-c73c3ea4260c",
        "parentId" : "1e496ce8-a575-4597-956a-c07ea3784bc4",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "On a watch disconnection we'll retry, and if we retry and the version is too old, we get a `Gone` (410).  So to get to this line something unexpected has to happen.\r\n\r\nIn general, a legacy client doesn't expect to retry a create.  We cannot safely send a retriable status code, since the object has already been created and a retry would be return already exists.  It's really not much different than a timeout",
        "createdAt" : "2017-05-26T02:47:48Z",
        "updatedAt" : "2017-06-03T02:09:49Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "b993f7d303aa72961d6b0a32a42e7fcc5cb26190",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +380,384 @@\t\t\t\t\treturn nil, &kubeerr.StatusError{ErrStatus: *status}\n\t\t\t\t}\n\t\t\t\treturn nil, kubeerr.NewInternalError(fmt.Errorf(\"unexpected object in watch stream, can't complete initialization %T\", event.Object))\n\t\t\tcase watch.Modified:\n\t\t\t\tlatest = event.Object"
  },
  {
    "id" : "0c86d3f9-7f54-4c24-8238-ad01c16770da",
    "prId" : 36721,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36721#pullrequestreview-41094507",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2e8d517-482f-423e-b309-dbb8924aed3c",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Assuming we don't implement fail-open for 1.7, can we generate a warning here if the initializers haven't been updated, to give an early signal of inactive initializer controller?",
        "createdAt" : "2017-05-30T22:22:33Z",
        "updatedAt" : "2017-06-03T02:09:49Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "02354271-5755-43d0-be6e-83a7447f255b",
        "parentId" : "a2e8d517-482f-423e-b309-dbb8924aed3c",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I could add a metric.  ",
        "createdAt" : "2017-05-30T22:24:11Z",
        "updatedAt" : "2017-06-03T02:09:49Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "5dd7228e-ca9f-4aa6-8024-43dfd7c1e276",
        "parentId" : "a2e8d517-482f-423e-b309-dbb8924aed3c",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@lavalamp reminded me that \"wait\" is the default behavior, so all existing clients' CREATE request will invoke this code path. So how about implementing the fail-open in this function for 1.7, and implement a full-fledged controller (with performance impacts sorted out) in later releases?",
        "createdAt" : "2017-05-30T22:42:15Z",
        "updatedAt" : "2017-06-03T02:09:49Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "b993f7d303aa72961d6b0a32a42e7fcc5cb26190",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +362,366 @@\t\tcase event, ok := <-ch:\n\t\t\tif !ok {\n\t\t\t\t// TODO: should we just expose the partially initialized object?\n\t\t\t\treturn nil, kubeerr.NewServerTimeout(e.QualifiedResource, \"create\", 0)\n\t\t\t}"
  },
  {
    "id" : "c49e746b-9c6c-4932-a039-800d00512918",
    "prId" : 36721,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36721#pullrequestreview-41267753",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7cfbf706-cf21-463c-989c-1c42251cc4e0",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "You want to return a `nil` error here? Or is this the case where `obj` doesn't have `ObjectMeta`?",
        "createdAt" : "2017-05-31T15:06:38Z",
        "updatedAt" : "2017-06-03T02:09:49Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "7963bf90-e1bc-48d5-98c5-1ec71d70301a",
        "parentId" : "7cfbf706-cf21-463c-989c-1c42251cc4e0",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "ObjectMeta is not required for resources.  ",
        "createdAt" : "2017-05-31T15:35:02Z",
        "updatedAt" : "2017-06-03T02:09:49Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "b993f7d303aa72961d6b0a32a42e7fcc5cb26190",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +331,335 @@\taccessor, err := meta.Accessor(obj)\n\tif err != nil {\n\t\treturn obj, nil\n\t}\n\tinitializers := accessor.GetInitializers()"
  }
]