[
  {
    "id" : "df29da0e-5f28-4a19-a925-f2f5a2fc814f",
    "prId" : 58025,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58025#pullrequestreview-88366248",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de85ae82-3d96-4c9a-beb3-534afea49366",
        "parentId" : null,
        "authorId" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "body" : "What is the %v supposed to resolve to?",
        "createdAt" : "2018-01-11T19:28:49Z",
        "updatedAt" : "2018-01-11T19:28:49Z",
        "lastEditedBy" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "tags" : [
        ]
      },
      {
        "id" : "31788f16-d539-4485-8293-81653605eb46",
        "parentId" : "de85ae82-3d96-4c9a-beb3-534afea49366",
        "authorId" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "body" : "I think it will say \"%!v(MISSING)\"",
        "createdAt" : "2018-01-11T19:29:41Z",
        "updatedAt" : "2018-01-11T19:29:41Z",
        "lastEditedBy" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "tags" : [
        ]
      },
      {
        "id" : "e781a429-f5fd-47b9-9626-4848df1d33df",
        "parentId" : "de85ae82-3d96-4c9a-beb3-534afea49366",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Thanks. Sent https://github.com/kubernetes/kubernetes/pull/58187.",
        "createdAt" : "2018-01-12T02:25:49Z",
        "updatedAt" : "2018-01-12T02:25:49Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "5029bb56c434c0099fd1d2e78de7531c69430753",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +175,179 @@\t}\n\tif a.defaulter == nil {\n\t\treturn fmt.Errorf(\"MutatingWebhook.defaulter is not properly setup: %v\")\n\t}\n\tgo a.hookSource.Run(wait.NeverStop)"
  },
  {
    "id" : "6bbcf8e0-67cf-46b9-9bfc-fb575b75ac0c",
    "prId" : 54892,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54892#pullrequestreview-77282421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b48ae6ec-d7a7-4f10-9582-35f77f023521",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "// TODO: if we have multiple mutating webhooks, we can remember the json instead of encoding and decoding for each one.",
        "createdAt" : "2017-11-16T07:29:05Z",
        "updatedAt" : "2017-11-18T05:03:02Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "df98c00c-8be2-4803-b5c8-6ae1f7e51a7d",
        "parentId" : "b48ae6ec-d7a7-4f10-9582-35f77f023521",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I actually had it implemented in my prototype. I'll add the code back in another PR.",
        "createdAt" : "2017-11-16T19:18:12Z",
        "updatedAt" : "2017-11-18T05:03:02Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "11ce0813-1f9b-46a9-a0f5-15b12dc8e8ac",
        "parentId" : "b48ae6ec-d7a7-4f10-9582-35f77f023521",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Added.",
        "createdAt" : "2017-11-16T22:16:39Z",
        "updatedAt" : "2017-11-18T05:03:02Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b3ee5407699b07357db6e187fac2cd5e2f7aeb7",
    "line" : 304,
    "diffHunk" : "@@ -1,1 +302,306 @@\t\treturn apierrors.NewInternalError(err)\n\t}\n\tobjJS, err := runtime.Encode(a.jsonSerializer, attr.Object)\n\tif err != nil {\n\t\treturn apierrors.NewInternalError(err)"
  },
  {
    "id" : "175f41ed-1029-4957-b499-a4e1c69a2947",
    "prId" : 54892,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54892#pullrequestreview-77283875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48b44380-a237-4074-a2d6-e441a6bcbc2d",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "commented in another PR before: return early here.",
        "createdAt" : "2017-11-16T09:09:26Z",
        "updatedAt" : "2017-11-18T05:03:02Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "52d492ff-5a4e-4297-8782-526d73cde6c9",
        "parentId" : "48b44380-a237-4074-a2d6-e441a6bcbc2d",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "It still has to pass the namespaceSelector's check. (maybe in the other PR the namesapceSelector's check is before the rule matching, the order was changed recently)",
        "createdAt" : "2017-11-16T19:23:45Z",
        "updatedAt" : "2017-11-18T05:03:02Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "cad758f2-64aa-442d-b568-c0a285bb087b",
        "parentId" : "48b44380-a237-4074-a2d6-e441a6bcbc2d",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "at least break?",
        "createdAt" : "2017-11-16T20:20:55Z",
        "updatedAt" : "2017-11-18T05:03:02Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "e6f74d3d-0b86-4d34-9337-559cca88e47c",
        "parentId" : "48b44380-a237-4074-a2d6-e441a6bcbc2d",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "There is a break after this line :)",
        "createdAt" : "2017-11-16T22:21:54Z",
        "updatedAt" : "2017-11-18T05:03:02Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b3ee5407699b07357db6e187fac2cd5e2f7aeb7",
    "line" : 268,
    "diffHunk" : "@@ -1,1 +266,270 @@\t\tm := rules.Matcher{Rule: r, Attr: attr}\n\t\tif m.Matches() {\n\t\t\tmatches = true\n\t\t\tbreak\n\t\t}"
  },
  {
    "id" : "1a470e20-4f44-46b4-a9cb-9f4e31aad968",
    "prId" : 54892,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54892#pullrequestreview-77582920",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "220704e1-75f4-4b66-9e92-b1bad8887436",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "The only way we get here is if the namespace selector failed to parse, I think?\r\n\r\nShould never happen. But maybe we shouldn't fail the whole request if the hook is also a fail-open hook?\r\n\r\nMaybe something to think about in a follow-up.",
        "createdAt" : "2017-11-17T22:48:19Z",
        "updatedAt" : "2017-11-18T05:03:02Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b3ee5407699b07357db6e187fac2cd5e2f7aeb7",
    "line" : 207,
    "diffHunk" : "@@ -1,1 +205,209 @@\t\tcall, err := a.shouldCallHook(&hooks[i], attr)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tif call {"
  },
  {
    "id" : "61f12433-bd25-4140-bb7e-10ac389bdce7",
    "prId" : 54892,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54892#pullrequestreview-77623489",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69975ab8-811c-4d16-94f5-8b936e92c689",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Why is this here?  NegotiatedSerializerWrapper is not intended to be used.  Why aren't you passing the scheme's codec factory?",
        "createdAt" : "2017-11-18T18:42:49Z",
        "updatedAt" : "2017-11-18T18:42:49Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "f872a428-e407-45cd-9d10-3cca4db9ba41",
        "parentId" : "69975ab8-811c-4d16-94f5-8b936e92c689",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Let me check that in a follow up.",
        "createdAt" : "2017-11-18T19:27:25Z",
        "updatedAt" : "2017-11-18T19:27:25Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b3ee5407699b07357db6e187fac2cd5e2f7aeb7",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +132,136 @@\tif scheme != nil {\n\t\ta.clientManager.SetNegotiatedSerializer(serializer.NegotiatedSerializerWrapper(runtime.SerializerInfo{\n\t\t\tSerializer: serializer.NewCodecFactory(scheme).LegacyCodec(admissionv1alpha1.SchemeGroupVersion),\n\t\t}))\n\t\ta.convertor.Scheme = scheme"
  }
]