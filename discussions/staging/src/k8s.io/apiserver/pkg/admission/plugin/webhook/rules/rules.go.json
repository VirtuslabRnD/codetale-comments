[
  {
    "id" : "2b641981-75bb-405c-afd2-757128933faf",
    "prId" : 74477,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74477#pullrequestreview-209233064",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4da55f93-fa36-4c84-9fe2-1876b8683797",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Namespace of Namespace should be empty string?  Or is this an admission quirk?  Deserves a comment.\r\n\r\nElsewhere (in resource builder) namespace of namespace is empty.",
        "createdAt" : "2019-02-28T18:20:33Z",
        "updatedAt" : "2019-03-05T00:30:27Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "6ecddce2-6e9b-4a07-ac20-1eb73faf244a",
        "parentId" : "4da55f93-fa36-4c84-9fe2-1876b8683797",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "request attributes populate namespace attribute based on path segments, so an individual namespace populates that attribute. will comment on the method",
        "createdAt" : "2019-02-28T18:22:06Z",
        "updatedAt" : "2019-03-05T00:30:27Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d4655c8ef17948801a67703decfdfc6ab1a0a63",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +64,68 @@\tcase v1beta1.NamespacedScope:\n\t\t// first make sure that we are not requesting a namespace object (namespace objects are cluster-scoped)\n\t\treturn r.Attr.GetResource() != namespaceResource && r.Attr.GetNamespace() != metav1.NamespaceNone\n\tcase v1beta1.ClusterScope:\n\t\t// also return true if the request is for a namespace object (namespace objects are cluster-scoped)"
  },
  {
    "id" : "96383d9f-6c9d-4544-84a2-63779d55f7e9",
    "prId" : 74477,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74477#pullrequestreview-209232723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bff7b130-b92f-4715-804b-0fa8b04b2d91",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "deserves a bit more comments I think - nuanced code.  fine to put it on the method.",
        "createdAt" : "2019-02-28T18:21:24Z",
        "updatedAt" : "2019-03-05T00:30:27Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d4655c8ef17948801a67703decfdfc6ab1a0a63",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +67,71 @@\tcase v1beta1.ClusterScope:\n\t\t// also return true if the request is for a namespace object (namespace objects are cluster-scoped)\n\t\treturn r.Attr.GetResource() == namespaceResource || r.Attr.GetNamespace() == metav1.NamespaceNone\n\tdefault:\n\t\treturn false"
  },
  {
    "id" : "976a46e6-b371-425f-92a4-642a5f6d08e6",
    "prId" : 55132,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55132#pullrequestreview-76296137",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f807e3ae-95e8-48f6-b2ff-6cc01a68e9a7",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Nice, very readable as rules.Matcher.",
        "createdAt" : "2017-11-14T00:24:39Z",
        "updatedAt" : "2017-11-15T00:00:14Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "1adfacc7eb41da109e970a9c2985fd55b4cbbdfd",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +24,28 @@)\n\n// Matcher determines if the Attr matches the Rule.\ntype Matcher struct {\n\tRule v1alpha1.RuleWithOperations"
  }
]