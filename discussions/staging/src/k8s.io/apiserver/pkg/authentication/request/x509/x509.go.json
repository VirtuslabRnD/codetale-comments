[
  {
    "id" : "9a575f24-9d05-4cb8-bf9e-e7e61e96bafb",
    "prId" : 69582,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69582#pullrequestreview-165150816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3925efd-2925-43e6-9756-1f40e555beef",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "TODO to take implicit audiences at Authenticator construction time, and if ctx is audience-limited, ensure it intersects with the implicit audiences, and echo an audience in the response",
        "createdAt" : "2018-10-16T13:28:33Z",
        "updatedAt" : "2018-10-22T19:11:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "809f278b032103cd24fcbb5ea2196c6c7caa6f63",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +84,88 @@\n// AuthenticateRequest authenticates the request using presented client certificates\nfunc (a *Authenticator) AuthenticateRequest(req *http.Request) (*authenticator.Response, bool, error) {\n\tif req.TLS == nil || len(req.TLS.PeerCertificates) == 0 {\n\t\treturn nil, false, nil"
  },
  {
    "id" : "e920f1bc-fa9f-42f4-986c-1dfbfb8b0d5d",
    "prId" : 50387,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50387#pullrequestreview-63616011",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ba19be4-5e2a-4173-a71d-ee35fbc19514",
        "parentId" : null,
        "authorId" : "4108cff4-d61c-4717-862b-6c3be3b73be2",
        "body" : "Wouldn't it make sense to measure this _after_ verifying? If I understand this correctly a client could now influence these metrics by generating certificates with random expiry dates, not that I can see a particularly useful attack here, just a potential for distortion. It would be simple to just move this measurement after the certificate verification 4 lines below :slightly_smiling_face:. Please let me know if I'm missing something.",
        "createdAt" : "2017-09-19T10:36:26Z",
        "updatedAt" : "2017-09-19T10:37:39Z",
        "lastEditedBy" : "4108cff4-d61c-4717-862b-6c3be3b73be2",
        "tags" : [
        ]
      }
    ],
    "commit" : "49a19c6011e05363a8baf8e99c917d11a9496568",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +97,101 @@\n\tremaining := req.TLS.PeerCertificates[0].NotAfter.Sub(time.Now())\n\tclientCertificateExpirationHistogram.Observe(remaining.Seconds())\n\tchains, err := req.TLS.PeerCertificates[0].Verify(optsCopy)\n\tif err != nil {"
  }
]