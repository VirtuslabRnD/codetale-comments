[
  {
    "id" : "74da840b-ed58-4b48-9af0-3504a6169899",
    "prId" : 90140,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90140#pullrequestreview-430926273",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68eaf475-adfe-4d4e-9c93-aa8e8e622780",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "embed the float64 in an annotation with Sprint.",
        "createdAt" : "2020-06-15T19:20:42Z",
        "updatedAt" : "2020-06-17T19:55:12Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "6039451d358c20b8161e08eb1d3626134195026f",
    "line" : 184,
    "diffHunk" : "@@ -1,1 +483,487 @@\t\t\tif f := rr.Float64(); f < 0.2 {\n\t\t\t\tr.annotations = map[string]string{\n\t\t\t\t\t\"audience.authentication.kubernetes.io\":  \"e8357258-88b1-11ea-bc55-0242ac130003\",\n\t\t\t\t\t\"namespace.authentication.kubernetes.io\": \"kube-system\",\n\t\t\t\t\t\"float.authentication.kubernetes.io\":     fmt.Sprint(f),"
  },
  {
    "id" : "df50441a-83ed-4234-b3aa-530b31b49ff4",
    "prId" : 85242,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85242#pullrequestreview-330149164",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "beb8280f-8a09-4e9c-a2cc-56d36f90f2d7",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "Do you actually need this with the wait group?",
        "createdAt" : "2019-11-14T04:17:09Z",
        "updatedAt" : "2019-12-10T21:12:27Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "b7959b85-fc5e-4b13-a4d6-dfa824cfa96e",
        "parentId" : "beb8280f-8a09-4e9c-a2cc-56d36f90f2d7",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "I need to wait for the goroutines to block inside of AuthenticateToken which isn't something that the wg provides. I picked the sleep time by running this test 10k times without a flake.",
        "createdAt" : "2019-11-14T16:23:01Z",
        "updatedAt" : "2019-12-10T21:12:27Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "099edbac-f10a-4865-a8d2-1fa3aa285f3a",
        "parentId" : "beb8280f-8a09-4e9c-a2cc-56d36f90f2d7",
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "There is probably some approach with a channel + drain that would avoid the sleep.\r\n\r\nSince CI can be a lot slower than our machines, can we at least use a sleep time in the order of seconds?",
        "createdAt" : "2019-11-14T17:03:39Z",
        "updatedAt" : "2019-12-10T21:12:27Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "646f23bf-bba9-49a3-8f66-1e930286a98a",
        "parentId" : "beb8280f-8a09-4e9c-a2cc-56d36f90f2d7",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "I bumped to a second. I could throw in a second waitgroup that gets decremented when the AuthenticateToken goroutines start, but I'd still need a sleep to deschedule the test goroutine.",
        "createdAt" : "2019-11-14T17:13:57Z",
        "updatedAt" : "2019-12-10T21:12:27Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "7d45be02-2260-4bf7-89bd-d859b9f91378",
        "parentId" : "beb8280f-8a09-4e9c-a2cc-56d36f90f2d7",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Since you're caching for a minute, I guess this must have been demonstrating the race I was talking about.",
        "createdAt" : "2019-12-04T21:38:50Z",
        "updatedAt" : "2019-12-10T21:12:27Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "7735ce4b-41b6-461c-a248-1b24ea29e780",
        "parentId" : "beb8280f-8a09-4e9c-a2cc-56d36f90f2d7",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I was expecting the race to be really rare but if we have to sleep a whole second to make this non-racy for just 10 callers I'm wondering if maybe we should think about doing something about it?",
        "createdAt" : "2019-12-04T21:42:12Z",
        "updatedAt" : "2019-12-10T21:12:27Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "90b31a93-6248-43da-96a1-bd1a620693d8",
        "parentId" : "beb8280f-8a09-4e9c-a2cc-56d36f90f2d7",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "The race is basically fixed by double checking the cache after entering the singleflight. I suppose there's not a good way to test this because it's an internal detail of the singleflight. However, I've left the test around because it's not flaky and doesn't seem like much of a burden.",
        "createdAt" : "2019-12-10T21:14:56Z",
        "updatedAt" : "2019-12-10T21:14:56Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8647e75cec684fce64280b6079ef174643548c53",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +196,200 @@\t\t}\n\n\t\t// no good way to make sure that all the callers are queued so we sleep.\n\t\ttime.Sleep(1 * time.Second)\n\t\tclose(c)"
  },
  {
    "id" : "928cff36-09f2-470d-87aa-f51aa6db15eb",
    "prId" : 85152,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85152#pullrequestreview-316391146",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "729ed7cc-28e5-43b9-8efb-a6b56a440a03",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "Uh, did you mean to drop the `s.doAuthForTokenN(r.Intn(len(s.tokens)), a)`?",
        "createdAt" : "2019-11-13T16:07:27Z",
        "updatedAt" : "2019-11-13T16:46:21Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "d61afd52-d32f-4ab7-84ef-a3f8f8e53425",
        "parentId" : "729ed7cc-28e5-43b9-8efb-a6b56a440a03",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "I reordered it to before the comment on line 302, because it seemed like it was explaining the second doAuthForTokenN but reading it again, it looks like it was in the right spot.",
        "createdAt" : "2019-11-13T16:43:34Z",
        "updatedAt" : "2019-11-13T16:46:21Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5bfea65b9b45c01a09dfefeedffd13b8927140a",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +300,304 @@\t\tfor pb.Next() {\n\t\t\t// some problems appear with random access, some appear with many\n\t\t\t// requests for a single entry, so we do both.\n\t\t\ts.doAuthForTokenN(r.Intn(s.tokenCount), a)\n\t\t\ts.doAuthForTokenN(0, a)"
  },
  {
    "id" : "a0215b38-cd6c-4c35-b351-39b554914b85",
    "prId" : 85152,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85152#pullrequestreview-316394312",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5e77e36-443e-4644-a8f3-0fe82d8b07f8",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "~~While I do not think it matters, this is technically `defer func() { atomic.AddUint64(&lookups, 1) }()` right since we want to count a lookup after it is complete?~~",
        "createdAt" : "2019-11-13T16:17:27Z",
        "updatedAt" : "2019-11-13T16:46:21Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "ad444291-adc1-4bde-98d9-f96a4fcc26ce",
        "parentId" : "c5e77e36-443e-4644-a8f3-0fe82d8b07f8",
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "Actually no that is wrong, you just want to count that you attempted to do a lookup at all (i.e. cache miss).",
        "createdAt" : "2019-11-13T16:21:24Z",
        "updatedAt" : "2019-11-13T16:46:21Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "444213ce-ba4e-462a-b812-690a24fdf722",
        "parentId" : "c5e77e36-443e-4644-a8f3-0fe82d8b07f8",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Yep. I'm trying to gauge \"how many expensive things do we do per op\" so that we can compare the goodness (TM) of our cache strategy.",
        "createdAt" : "2019-11-13T16:47:46Z",
        "updatedAt" : "2019-11-13T16:47:46Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5bfea65b9b45c01a09dfefeedffd13b8927140a",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +279,283 @@\ta := newWithClock(\n\t\tauthenticator.TokenFunc(func(ctx context.Context, token string) (*authenticator.Response, bool, error) {\n\t\t\tatomic.AddUint64(&lookups, 1)\n\n\t\t\tchokepoint <- struct{}{}"
  },
  {
    "id" : "ebba59ac-a040-4eae-b146-3939f9f8a2ce",
    "prId" : 83797,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83797#pullrequestreview-303387520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8ac0b50-0427-44a7-8d2b-9177c3704aa9",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "ReportMetric on the number of lookups that fell through would be sweet but it looks like we'll have to wait until we upgrade to go1.13:\r\n\r\nhttps://godoc.org/testing#B.ReportMetric",
        "createdAt" : "2019-10-16T03:59:59Z",
        "updatedAt" : "2019-10-23T18:50:50Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "255d8226-2409-4ab8-9ecc-3e1f267c565b",
        "parentId" : "b8ac0b50-0427-44a7-8d2b-9177c3704aa9",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yes, we couldn't use that last I knew.",
        "createdAt" : "2019-10-17T16:27:41Z",
        "updatedAt" : "2019-10-23T18:50:50Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "420a44da0138cb64fa5d4e9fab79d8be3527ffd8",
    "line" : 164,
    "diffHunk" : "@@ -1,1 +300,304 @@\ts.b = b\n\ta := newWithClock(\n\t\tauthenticator.TokenFunc(s.lookup),\n\t\ttrue,\n\t\t4*time.Second,"
  },
  {
    "id" : "fabe6939-85d7-4d58-bfb3-87fdc7486393",
    "prId" : 83797,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83797#pullrequestreview-303451103",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d8cff83-74f1-483f-80d4-9ae69899d264",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "A comment describing how the benchmark works at the high level would probably be useful to future readers.",
        "createdAt" : "2019-10-17T18:15:26Z",
        "updatedAt" : "2019-10-23T18:50:50Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "420a44da0138cb64fa5d4e9fab79d8be3527ffd8",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +188,192 @@// question this benchmark answers is, \"what's the average latency added by the\n// cache for N concurrent tokens?\"\ntype singleBenchmark struct {\n\t// These token.* variables are set by makeTokens()\n\ttokenCount int"
  }
]