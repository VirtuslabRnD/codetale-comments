[
  {
    "id" : "e377f8e3-3d69-4eca-b4bf-ff5b3fbdd4e2",
    "prId" : 84423,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84423#pullrequestreview-310676751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65ca4ce1-227e-454e-b2a4-1c57a4071dad",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I know I did a weird thing with this benchmark; the whole point was to measure the average time as a function of the number of unique keys being tested, to demonstrate that performance had an inflection point.\r\n\r\nWith this change that will be constant? What does the benchmark test now? I think there is a comment that needs to be changed to match the new behavior?",
        "createdAt" : "2019-10-28T16:49:24Z",
        "updatedAt" : "2019-11-11T19:29:25Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "c76b74fd-14db-4bba-8d8a-1ee23082e969",
        "parentId" : "65ca4ce1-227e-454e-b2a4-1c57a4071dad",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yeah, we shouldn't use b.N for that. we probably do need to run the benchmark at a variety of key counts to see inflection points, but not use b.N for that",
        "createdAt" : "2019-10-28T16:58:26Z",
        "updatedAt" : "2019-11-11T19:29:25Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "50b416a6-a071-48b0-8ec9-924336567bfa",
        "parentId" : "65ca4ce1-227e-454e-b2a4-1c57a4071dad",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I'm fine with doing that.\r\n\r\nIt's actually a 2 dimensional space, though-- tokens x qps.",
        "createdAt" : "2019-10-28T17:11:06Z",
        "updatedAt" : "2019-11-11T19:29:25Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "2b938cc1-c76b-40cb-a549-fd4a55e6e04c",
        "parentId" : "65ca4ce1-227e-454e-b2a4-1c57a4071dad",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "> run the benchmark at a variety of key counts\r\n\r\nCan you do this before we merge, since measuring this is the purpose of the benchmark? Sorry for not being clear that I was waiting on this. It shouldn't be a big change from what you have, I think?",
        "createdAt" : "2019-11-01T19:36:14Z",
        "updatedAt" : "2019-11-11T19:29:25Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "33bf8e14-01e5-4c15-a41f-88622e6a5ff8",
        "parentId" : "65ca4ce1-227e-454e-b2a4-1c57a4071dad",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "@lavalamp, ya, I meant to poke you on #84408. Will make the change.",
        "createdAt" : "2019-11-01T20:21:59Z",
        "updatedAt" : "2019-11-11T19:29:25Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "43d34882c9b3612d933b97b6e470fd8d36fe492b",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +54,58 @@func benchmarkCache(cache cache, b *testing.B, numKeys int) {\n\tkeys := []string{}\n\tfor i := 0; i < numKeys; i++ {\n\t\tkey := uuid.New().String()\n\t\tkeys = append(keys, key)"
  }
]