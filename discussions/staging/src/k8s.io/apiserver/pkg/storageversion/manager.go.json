[
  {
    "id" : "632e902d-8279-4a60-a456-d0a1d126d8f7",
    "prId" : 99951,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99951#pullrequestreview-606606276",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f73c297-6c5f-47fc-ae6b-7e9d7368338d",
        "parentId" : null,
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "Do you have an example where `directlyDecodableVersions` contains versions that `decodingGVRs` doesn't have?",
        "createdAt" : "2021-03-08T18:30:16Z",
        "updatedAt" : "2021-03-09T13:36:38Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      },
      {
        "id" : "b674a5c5-7d4e-4ad5-9dd8-222117726803",
        "parentId" : "2f73c297-6c5f-47fc-ae6b-7e9d7368338d",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Do you have an example where `directlyDecodableVersions` contains versions that `decodingGVRs` doesn't have?\r\n\r\nin https://github.com/kubernetes/kubernetes/pull/99840, simulating 1.22, apiextensions.k8s.io/v1beta1 is not listed as decodable by apiextensions/v1 without this change.",
        "createdAt" : "2021-03-08T18:54:28Z",
        "updatedAt" : "2021-03-09T13:36:38Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa03dee68cea605b285b00ae5b6ce22659d95026",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +286,290 @@\t\t\t}\n\t\t}\n\t\tif found {\n\t\t\tcontinue\n\t\t}"
  },
  {
    "id" : "069b3b76-d90f-4e7e-af6e-a64bc599fc9f",
    "prId" : 93873,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93873#pullrequestreview-514089227",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa376d7b-4687-4eb8-9210-620fd321fbf4",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "We need to sort the infos to make sure the dedup always the pick the same GR to represent its equvalent resources, e.g., always pick network.k8s.io/ingress over extensions/ingress.",
        "createdAt" : "2020-10-21T05:47:06Z",
        "updatedAt" : "2020-11-09T23:23:29Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "36eacbbc-783c-421e-bc43-16a40446741c",
        "parentId" : "fa376d7b-4687-4eb8-9210-620fd321fbf4",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "Good catch. I squashed the previous commits and added the sort.",
        "createdAt" : "2020-10-21T18:59:40Z",
        "updatedAt" : "2020-11-09T23:23:29Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "23f77ce7c62db3761580d06622fbfb1cedaa1293",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +164,168 @@\tvar ret []ResourceInfo\n\tseen := make(map[schema.GroupResource]struct{})\n\tfor _, info := range infos {\n\t\tgr := info.GroupResource\n\t\tif _, ok := seen[gr]; ok {"
  },
  {
    "id" : "a912b4c0-ea9b-468b-91ef-522a65bb2c7f",
    "prId" : 93873,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93873#pullrequestreview-518051204",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f37b1e0-78c0-45c9-9e3f-e55e75cad469",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "why do we sort?",
        "createdAt" : "2020-10-27T15:03:54Z",
        "updatedAt" : "2020-11-09T23:23:29Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "ee73eaf0-8902-473d-b30c-1b985541897a",
        "parentId" : "3f37b1e0-78c0-45c9-9e3f-e55e75cad469",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "To make sure we have a consistent dedup result, and therefore avoid creating unnecessarily duplicated StorageVersion objects. \r\n\r\nFor example, `extensions.ingresses` and `networking.k8s.io.ingresses` share the same underlying storage. Without sorting, in an HA cluster, one apiserver may dedup and update StorageVersion for `extensions.ingresses`, while another apiserver may dedup and update StorageVersion for `networking.k8s.io.ingresses`. The storage migrator (which migrates objects per GroupResource) will migrate these resources twice, since both StorageVersion objects have `CommonEncodingVersion` (each with one server registered).",
        "createdAt" : "2020-10-27T18:29:33Z",
        "updatedAt" : "2020-11-09T23:23:29Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      },
      {
        "id" : "231ddb75-d290-45bf-b322-a945b929e5d3",
        "parentId" : "3f37b1e0-78c0-45c9-9e3f-e55e75cad469",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "Added the explanation to comments. ",
        "createdAt" : "2020-10-27T19:10:06Z",
        "updatedAt" : "2020-11-09T23:23:29Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "23f77ce7c62db3761580d06622fbfb1cedaa1293",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +132,136 @@\t// per GroupResource) will migrate these resources twice, since both\n\t// StorageVersion objects have CommonEncodingVersion (each with one server registered).\n\tsortResourceInfosByGroupResource(resources)\n\tfor _, r := range dedupResourceInfos(resources) {\n\t\tdv := decodableVersions(r.EquivalentResourceMapper, r.GroupResource)"
  },
  {
    "id" : "e5dd17e3-79a3-41ea-b8f3-406cbd1dbfad",
    "prId" : 93873,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93873#pullrequestreview-524959740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59647b39-8190-42c4-986e-efc83e5a74e6",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "What happens if apiservers disagree about which groups are in what storage? e.g., I restart an apiserver with new flags that moves events?\r\n\r\n(I actually think lots of things probably break but I want to know how it affects this system...)",
        "createdAt" : "2020-11-05T00:45:38Z",
        "updatedAt" : "2020-11-09T23:23:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "48e94dc1-97da-43a7-8665-4ac392337880",
        "parentId" : "59647b39-8190-42c4-986e-efc83e5a74e6",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "The storage migrator won't be able to tell from the storage versions, if you move events to a different storage. Say server A and B keep events in etcd 1, and now server C keep events in etcd 2. Their records look the same: \r\n\r\n```\r\napiVersion: internal.apiserver.k8s.io/v1alpha1\r\nkind: StorageVersion\r\nmetadata:\r\n  name: core.events\r\nstatus:\r\n  storageVersions:\r\n  - apiServerID: A\r\n    decodableVersions:\r\n    - v1\r\n    - events.k8s.io/v1beta1\r\n    - events.k8s.io/v1\r\n    encodingVersion: v1\r\n  - apiServerID: B\r\n    decodableVersions:\r\n    - v1\r\n    - events.k8s.io/v1beta1\r\n    - events.k8s.io/v1\r\n    encodingVersion: v1\r\n  - apiServerID: C\r\n    decodableVersions:\r\n    - v1\r\n    - events.k8s.io/v1beta1\r\n    - events.k8s.io/v1\r\n    encodingVersion: v1\r\n```\r\n\r\nso migration will be triggered even though it shouldn't. Now you have events stored in two places (assume the writes get load balanced) in the cluster. And when you read events from apisevers, different apiservers have different vision. ",
        "createdAt" : "2020-11-05T08:14:22Z",
        "updatedAt" : "2020-11-09T23:23:29Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      },
      {
        "id" : "52aabee8-a663-4947-a63e-6cb8d0a1949e",
        "parentId" : "59647b39-8190-42c4-986e-efc83e5a74e6",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah, that's a disaster, but I think it already is. We can document that for now, you have to shut everything down and manually move things in etcd if you want to do this.",
        "createdAt" : "2020-11-05T23:40:47Z",
        "updatedAt" : "2020-11-09T23:23:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "e81c677d-023a-4460-a44d-f6c0de369a28",
        "parentId" : "59647b39-8190-42c4-986e-efc83e5a74e6",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "ack. Will mention it in storage migrator doc. ",
        "createdAt" : "2020-11-06T08:53:13Z",
        "updatedAt" : "2020-11-09T23:23:29Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "23f77ce7c62db3761580d06622fbfb1cedaa1293",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +127,131 @@\t// For example, extensions.ingresses and networking.k8s.io.ingresses share\n\t// the same underlying storage. Without sorting, in an HA cluster, one\n\t// apiserver may dedup and update StorageVersion for extensions.ingresses,\n\t// while another apiserver may dedup and update StorageVersion for\n\t// networking.k8s.io.ingresses. The storage migrator (which migrates objects"
  }
]