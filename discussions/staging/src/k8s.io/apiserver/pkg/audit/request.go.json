[
  {
    "id" : "86860784-c2dc-4d86-9a49-a8ca2836e974",
    "prId" : 99237,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99237#pullrequestreview-617524892",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1674f45-9f03-46bf-b8b9-bb00cf1c067b",
        "parentId" : null,
        "authorId" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "body" : "won't it be set by the `WithAuditID` filter?",
        "createdAt" : "2021-03-18T12:06:25Z",
        "updatedAt" : "2021-03-18T13:12:02Z",
        "lastEditedBy" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "tags" : [
        ]
      },
      {
        "id" : "02f5dbde-8c17-4bee-9c3a-87232ea0138f",
        "parentId" : "c1674f45-9f03-46bf-b8b9-bb00cf1c067b",
        "authorId" : "3e6e337f-0beb-4609-abc3-11b8e8cf5688",
        "body" : "yes, it is set when the builder chain has `WithAuditID` filter. Here, it is just handling an error case.",
        "createdAt" : "2021-03-19T18:52:54Z",
        "updatedAt" : "2021-03-19T18:52:55Z",
        "lastEditedBy" : "3e6e337f-0beb-4609-abc3-11b8e8cf5688",
        "tags" : [
        ]
      },
      {
        "id" : "255f3e6c-7d3a-4d89-9f09-b56ceccf7774",
        "parentId" : "c1674f45-9f03-46bf-b8b9-bb00cf1c067b",
        "authorId" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "body" : "could you point me to the error case?",
        "createdAt" : "2021-03-22T09:01:46Z",
        "updatedAt" : "2021-03-22T09:01:46Z",
        "lastEditedBy" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "tags" : [
        ]
      },
      {
        "id" : "77c34488-85c1-46d8-af5f-e2ed48f0a577",
        "parentId" : "c1674f45-9f03-46bf-b8b9-bb00cf1c067b",
        "authorId" : "3e6e337f-0beb-4609-abc3-11b8e8cf5688",
        "body" : "by `error case` i meant handling the case where `found` is false, instead of doing `auditID, _ := request.AuditIDFrom(req.Context())` ",
        "createdAt" : "2021-03-22T13:33:47Z",
        "updatedAt" : "2021-03-22T13:33:48Z",
        "lastEditedBy" : "3e6e337f-0beb-4609-abc3-11b8e8cf5688",
        "tags" : [
        ]
      }
    ],
    "commit" : "b607ca1bf3e1cf6152c446ea61ac7fdd9014e1f1",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +54,58 @@\t}\n\n\tauditID, found := request.AuditIDFrom(req.Context())\n\tif !found {\n\t\tauditID = types.UID(uuid.New().String())"
  },
  {
    "id" : "528aae91-5a3e-490e-923a-f53fd98c5d4f",
    "prId" : 89305,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89305#pullrequestreview-382121076",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ff4ba00-2914-4694-999a-512468ac1860",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Should we silently ignore unfortunately placed annotations added after the request is setup? Do we want to make those calls panic instead? Can we reorg this in a way that supports e.g. annotations in an outbound portion of a filter?",
        "createdAt" : "2020-03-25T19:45:15Z",
        "updatedAt" : "2020-04-08T23:53:25Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "fe241ee9-c3d0-4196-a235-990af0320201",
        "parentId" : "9ff4ba00-2914-4694-999a-512468ac1860",
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "See what you think of the diff I proposed in 49bd215.  It should make it impossible to use `AuditAnnotationsFrom` later in the stack.",
        "createdAt" : "2020-03-25T19:53:54Z",
        "updatedAt" : "2020-04-08T23:53:25Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "8c2b02bb-4b6a-451a-ac3d-576f6e9bfc47",
        "parentId" : "9ff4ba00-2914-4694-999a-512468ac1860",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Ah, this is the same as jordans comment.",
        "createdAt" : "2020-03-26T15:24:18Z",
        "updatedAt" : "2020-04-08T23:53:25Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "0bc62112adf270ef4efada37286319c229324c7b",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +91,95 @@\tfor _, kv := range auditAnnotationsFrom(req.Context()) {\n\t\tLogAnnotation(ev, kv.key, kv.value)\n\t}\n\n\treturn ev, nil"
  },
  {
    "id" : "c226ecca-b19e-4ce5-b755-867366ea56cf",
    "prId" : 64812,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64812#pullrequestreview-131017916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3db8d641-58d2-4370-84ce-1ed8933c40b6",
        "parentId" : null,
        "authorId" : "547883a0-e393-4667-97e5-f58a84a83ecc",
        "body" : "Can we put this at 8k so it's in line with other defaults ie apache:\r\nhttp://httpd.apache.org/docs/2.2/mod/core.html#limitrequestfieldsize\r\n\r\nI realize most use cases may only need 1k, however I specifically started this issue (https://github.com/kubernetes/kubernetes/issues/64791#issue-329640478) so that I could send a very specific per call user-agent.\r\n\r\n:pray: /cc @hzxuzhonghu @tallclair",
        "createdAt" : "2018-06-21T22:40:07Z",
        "updatedAt" : "2018-06-22T02:00:16Z",
        "lastEditedBy" : "547883a0-e393-4667-97e5-f58a84a83ecc",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0b1f1c2f67877ddb2eceac5eb7c9c4ea22b4b6b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +39,43 @@\nconst (\n\tmaxUserAgentLength      = 1024\n\tuserAgentTruncateSuffix = \"...TRUNCATED\"\n)"
  },
  {
    "id" : "a708e4f5-6fa5-46de-ac4f-0af5ba103a94",
    "prId" : 45766,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45766#pullrequestreview-38763330",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac45c87c-74de-4d4e-a202-22c740d4eb85",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "forgot Resource?",
        "createdAt" : "2017-05-17T12:55:28Z",
        "updatedAt" : "2017-05-23T09:23:08Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "20a0293d-8b62-4ea4-98ce-ebc7edddc301",
        "parentId" : "ac45c87c-74de-4d4e-a202-22c740d4eb85",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "and subresource",
        "createdAt" : "2017-05-17T12:55:54Z",
        "updatedAt" : "2017-05-23T09:23:08Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "61181126-515e-481a-ae4e-501df5550469",
        "parentId" : "ac45c87c-74de-4d4e-a202-22c740d4eb85",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "ObjectReference has kind only. We don't know here. Should we change the ObjectReference type?",
        "createdAt" : "2017-05-17T15:35:27Z",
        "updatedAt" : "2017-05-23T09:23:09Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "0e7f96e2-33c5-4be7-b7fd-13e354ca2903",
        "parentId" : "ac45c87c-74de-4d4e-a202-22c740d4eb85",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "/cc @timstclair ",
        "createdAt" : "2017-05-17T15:37:39Z",
        "updatedAt" : "2017-05-23T09:23:09Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "5af59809-fc75-4d4e-b5c8-891865b26c30",
        "parentId" : "ac45c87c-74de-4d4e-a202-22c740d4eb85",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "If we need information that's not there, I'm open to forking the ObjectReference definition. I think that information is encoded in the URI we're logging, but it's certainly much cleaner to put it here...",
        "createdAt" : "2017-05-17T16:56:28Z",
        "updatedAt" : "2017-05-23T09:23:09Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "07222368-3c36-4f29-9e69-9d99d6ed8683",
        "parentId" : "ac45c87c-74de-4d4e-a202-22c740d4eb85",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "In the URI you have the resource, not the kind. It's what you get from `attribs`.",
        "createdAt" : "2017-05-17T19:18:12Z",
        "updatedAt" : "2017-05-23T09:23:09Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "9fdc36a47ada0bc34ee53b68edd085d368ed9012",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +104,108 @@\n\tif attribs.IsResourceRequest() {\n\t\tev.ObjectRef = &auditinternal.ObjectReference{\n\t\t\tNamespace:  attribs.GetNamespace(),\n\t\t\tName:       attribs.GetName(),"
  },
  {
    "id" : "d09456f8-696d-44d8-b671-5476650d3bbd",
    "prId" : 45766,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45766#pullrequestreview-39138717",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a9696b7-bba8-4ddb-a5a9-4d1ff210ecc6",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "subresource",
        "createdAt" : "2017-05-18T13:09:51Z",
        "updatedAt" : "2017-05-23T09:23:09Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "4a755813-791f-4f9c-a124-1d2033744459",
        "parentId" : "1a9696b7-bba8-4ddb-a5a9-4d1ff210ecc6",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "We don't have that in the types. We can store `\"resource/subresource\"`, but I would prefer to add SubResource to the types. /cc @timstclair ",
        "createdAt" : "2017-05-18T15:11:23Z",
        "updatedAt" : "2017-05-23T09:23:09Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "ed0a312b-e00c-4cab-b19a-f037c4da0c0d",
        "parentId" : "1a9696b7-bba8-4ddb-a5a9-4d1ff210ecc6",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Does subresource make sense on an object reference? Maybe `ObjectRef` needs to be renamed to `ResourceRef`?",
        "createdAt" : "2017-05-18T18:51:17Z",
        "updatedAt" : "2017-05-23T09:23:09Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "5ba1efbc-3fb3-4e8c-a224-2f454683ca4e",
        "parentId" : "1a9696b7-bba8-4ddb-a5a9-4d1ff210ecc6",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "true. We also have the http path which shows the subresource. I would leave it out from the ObjectRef.",
        "createdAt" : "2017-05-19T08:37:10Z",
        "updatedAt" : "2017-05-23T09:23:09Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "9fdc36a47ada0bc34ee53b68edd085d368ed9012",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +104,108 @@\n\tif attribs.IsResourceRequest() {\n\t\tev.ObjectRef = &auditinternal.ObjectReference{\n\t\t\tNamespace:  attribs.GetNamespace(),\n\t\t\tName:       attribs.GetName(),"
  }
]