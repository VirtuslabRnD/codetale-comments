[
  {
    "id" : "923655cb-8ecb-452e-904c-2f4673931277",
    "prId" : 54634,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54634#pullrequestreview-74612431",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9f2154a-e997-40fe-bc7f-83ea593abb58",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "nit: prefer:\r\n```\r\npolicy.Rules[i].OmitStages = sets.NewString(policy.OmitStages, rule.OmitStages).UnsortedList()\r\n```",
        "createdAt" : "2017-11-03T19:18:06Z",
        "updatedAt" : "2017-11-19T04:45:34Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "3df933fd-4b48-44e0-8143-97d210baa23d",
        "parentId" : "e9f2154a-e997-40fe-bc7f-83ea593abb58",
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "This will get such error:\r\n```\r\ncannot use rule.OmitStages (type []\"k8s.io/kubernetes/vendor/k8s.io/apiserver/pkg/apis/audit\".Stage) as type []string in argument to sets.NewString\r\n```\r\n\r\nI don't want to convert them to string and convert back, so I wrote this util function.",
        "createdAt" : "2017-11-05T03:10:41Z",
        "updatedAt" : "2017-11-19T04:45:34Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      },
      {
        "id" : "6e41a04c-c6c4-45cf-98ba-9681008a4dc6",
        "parentId" : "e9f2154a-e997-40fe-bc7f-83ea593abb58",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Ugh, yeah, makes sense. Not the first time I've run into this...",
        "createdAt" : "2017-11-07T00:53:30Z",
        "updatedAt" : "2017-11-19T04:45:34Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a20d729cc22a9d5adef1f778c0b81960f3b10f3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +38,42 @@func NewChecker(policy *audit.Policy) Checker {\n\tfor i, rule := range policy.Rules {\n\t\tpolicy.Rules[i].OmitStages = unionStages(policy.OmitStages, rule.OmitStages)\n\t}\n\treturn &policyChecker{*policy}"
  },
  {
    "id" : "10ec0d4f-b8aa-4ddd-98d2-554b2675278a",
    "prId" : 46009,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46009#pullrequestreview-39007178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4b21325-c1e1-4c5d-8d35-add3d4aa23e4",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "why the first clause? We have cluster-scope resources.",
        "createdAt" : "2017-05-18T08:19:56Z",
        "updatedAt" : "2017-05-25T14:44:14Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "81192e1f-8298-4e06-9aaf-a0f1beef6f00",
        "parentId" : "f4b21325-c1e1-4c5d-8d35-add3d4aa23e4",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "`ruleMatchesResource` checks whether the request matches any Namespaces or Resources from the rule. If neither are set, there's nothing to check :)",
        "createdAt" : "2017-05-18T17:35:25Z",
        "updatedAt" : "2017-05-25T14:44:14Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "90371c1d-d37e-44de-9694-9971b6c2ea9b",
        "parentId" : "f4b21325-c1e1-4c5d-8d35-add3d4aa23e4",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "misread the operator, it's `||` not `&&`",
        "createdAt" : "2017-05-18T17:40:55Z",
        "updatedAt" : "2017-05-25T14:44:14Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5de309ee261aea15bb1cc12647b32640c2ac196",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +83,87 @@\t}\n\n\tif len(r.Namespaces) > 0 || len(r.Resources) > 0 {\n\t\treturn ruleMatchesResource(r, attrs)\n\t}"
  }
]