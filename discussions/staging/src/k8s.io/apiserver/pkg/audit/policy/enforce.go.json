[
  {
    "id" : "cbe62237-0482-4336-bbdd-b594d94e531d",
    "prId" : 70021,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70021#pullrequestreview-168905465",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4256d1a2-ea58-4386-8940-4ad65e973bd4",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is likely to drift if new levels are added. would like a default case that returns an error so we know we have an unhandled case",
        "createdAt" : "2018-10-26T14:50:05Z",
        "updatedAt" : "2018-11-09T22:38:32Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c5fd996b-c2a1-41a2-a8fb-3d174798a51f",
        "parentId" : "4256d1a2-ea58-4386-8940-4ad65e973bd4",
        "authorId" : "5191e81d-8ec6-4a27-a48d-aba90da9ff08",
        "body" : "So I agree with this but to do that i'll have to remove the early bail out  https://github.com/pbarker/kubernetes/blob/audit-plugins/staging/src/k8s.io/apiserver/pkg/audit/policy/enforce.go#L26 because of https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/apis/audit/helpers.go#L32. This should be fine, just a bit of a performance hit. If we wanted to change the `Less` function that would probably be its own piece.",
        "createdAt" : "2018-10-26T16:35:23Z",
        "updatedAt" : "2018-11-09T22:38:32Z",
        "lastEditedBy" : "5191e81d-8ec6-4a27-a48d-aba90da9ff08",
        "tags" : [
        ]
      }
    ],
    "commit" : "54fd930d0e74635fc2a8318cc79d1b055d252d44",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +44,48 @@\t\tevent.ResponseObject = nil\n\tcase audit.LevelRequestResponse:\n\t\tevent.Level = audit.LevelRequestResponse\n\tcase audit.LevelNone:\n\t\treturn nil, nil"
  },
  {
    "id" : "4978cf4d-ee2d-4912-a69d-b35e3259df9a",
    "prId" : 70021,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70021#pullrequestreview-168861443",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1ce7606-fc85-4b58-8c8f-345a1f784647",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "these are likely to drift if new fields are added to event. one way to catch that is with a unit test that fuzzes all fields in an Event, then passes it into this function for every level and verifies the only fields the remain set are the ones we expect for each level. then if a new field is added, we'll need to explicitly categorize whether that field gets sent for each level.",
        "createdAt" : "2018-10-26T14:51:28Z",
        "updatedAt" : "2018-11-09T22:38:32Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "54fd930d0e74635fc2a8318cc79d1b055d252d44",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@\tswitch level {\n\tcase audit.LevelMetadata:\n\t\tevent.Level = audit.LevelMetadata\n\t\tevent.ResponseObject = nil\n\t\tevent.RequestObject = nil"
  }
]