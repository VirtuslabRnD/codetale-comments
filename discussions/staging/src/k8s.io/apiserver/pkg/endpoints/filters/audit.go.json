[
  {
    "id" : "2f62b95f-b923-45c6-aa79-3a19881a90e2",
    "prId" : 62810,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62810#pullrequestreview-113456362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cad98fcb-6d50-4275-8820-446f36a844b8",
        "parentId" : null,
        "authorId" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "body" : "Can we not return a *http.Request?",
        "createdAt" : "2018-04-19T02:56:29Z",
        "updatedAt" : "2018-04-19T02:56:29Z",
        "lastEditedBy" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "tags" : [
        ]
      },
      {
        "id" : "8f65f31d-c7fc-4a96-a129-aa29a76494f3",
        "parentId" : "cad98fcb-6d50-4275-8820-446f36a844b8",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "If you want to modify the context, you have to return the result of req.WithContext for use by the rest of the handler chain",
        "createdAt" : "2018-04-19T03:04:47Z",
        "updatedAt" : "2018-04-19T03:04:47Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "9a515c1c-9290-432f-9656-a29b0f638e40",
        "parentId" : "cad98fcb-6d50-4275-8820-446f36a844b8",
        "authorId" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "body" : "~~the input req is modified, they are equal~~",
        "createdAt" : "2018-04-19T03:11:58Z",
        "updatedAt" : "2018-04-19T03:14:06Z",
        "lastEditedBy" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "tags" : [
        ]
      },
      {
        "id" : "50bd3592-0295-43e2-98c4-9b89a6f312c3",
        "parentId" : "cad98fcb-6d50-4275-8820-446f36a844b8",
        "authorId" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "body" : "Sorryï¼Œ I just notified \r\n```\r\n// WithContext returns a shallow copy of r with its context changed\r\n// to ctx. The provided ctx must be non-nil.\r\nfunc (r *Request) WithContext(ctx context.Context) *Request {\r\n\tif ctx == nil {\r\n\t\tpanic(\"nil context\")\r\n\t}\r\n\tr2 := new(Request)\r\n\t*r2 = *r\r\n\tr2.ctx = ctx\r\n\r\n\t// Deep copy the URL because it isn't\r\n\t// a map and the URL is mutable by users\r\n\t// of WithContext.\r\n\tif r.URL != nil {\r\n\t\tr2URL := new(url.URL)\r\n\t\t*r2URL = *r.URL\r\n\t\tr2.URL = r2URL\r\n\t}\r\n\r\n\treturn r2\r\n}\r\n```",
        "createdAt" : "2018-04-19T03:13:54Z",
        "updatedAt" : "2018-04-19T03:13:54Z",
        "lastEditedBy" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "tags" : [
        ]
      },
      {
        "id" : "8562dd7e-21f9-4974-8c87-5896920d5d08",
        "parentId" : "cad98fcb-6d50-4275-8820-446f36a844b8",
        "authorId" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "body" : "actually a new address, a small trap",
        "createdAt" : "2018-04-19T03:15:36Z",
        "updatedAt" : "2018-04-19T03:15:36Z",
        "lastEditedBy" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "tags" : [
        ]
      },
      {
        "id" : "3fac65f0-5d31-4ba8-ad7c-6cd730ab7480",
        "parentId" : "cad98fcb-6d50-4275-8820-446f36a844b8",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Yeah, not the same object",
        "createdAt" : "2018-04-19T03:16:32Z",
        "updatedAt" : "2018-04-19T03:16:32Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ea88a5092c767fc3141512db924fd0435f7670e",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +113,117 @@// - created audit event\n// - error if anything bad happened\nfunc createAuditEventAndAttachToContext(req *http.Request, policy policy.Checker) (*http.Request, *auditinternal.Event, []auditinternal.Stage, error) {\n\tctx := req.Context()\n"
  },
  {
    "id" : "be893ddd-752a-409b-b146-8efc02e66961",
    "prId" : 62810,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62810#pullrequestreview-114062304",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87a4b079-2e0a-40e4-911f-e72c5600d7a7",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "ctx can't be nil here",
        "createdAt" : "2018-04-20T17:33:32Z",
        "updatedAt" : "2018-04-23T14:49:34Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ea88a5092c767fc3141512db924fd0435f7670e",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +51,55 @@\t\t}\n\t\tctx := req.Context()\n\t\tif ev == nil || ctx == nil {\n\t\t\thandler.ServeHTTP(w, req)\n\t\t\treturn"
  },
  {
    "id" : "a5dc759a-ea9b-4788-a7e2-6c6e57e21029",
    "prId" : 52030,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52030#pullrequestreview-61518498",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ad4914b-6b8b-4c36-b7ef-ebc4023d0db5",
        "parentId" : null,
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "I am not very sure.\r\nIf ev.meta == nil, will  this panic ?",
        "createdAt" : "2017-09-08T14:09:01Z",
        "updatedAt" : "2017-09-08T14:09:01Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      },
      {
        "id" : "aa8aa7e9-8fde-4121-8775-edcc1fa2aaca",
        "parentId" : "0ad4914b-6b8b-4c36-b7ef-ebc4023d0db5",
        "authorId" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "body" : "No, it won't",
        "createdAt" : "2017-09-08T14:14:53Z",
        "updatedAt" : "2017-09-08T14:14:54Z",
        "lastEditedBy" : "fb41b733-ba12-42d8-b026-942db6e3696f",
        "tags" : [
        ]
      }
    ],
    "commit" : "3dd3e7aa5243228b49211f4bb40022a719cc57ac",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +149,153 @@\t\t}\n\t}\n\tev.CreationTimestamp = metav1.NewTime(time.Now())\n\taudit.ObserveEvent()\n\tsink.ProcessEvents(ev)"
  },
  {
    "id" : "bf6cf11d-9294-44ee-b406-920d209a49bf",
    "prId" : 49280,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49280#pullrequestreview-54347057",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14471708-efca-49af-a22b-9dee04d5e98a",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "please add a comment: omitStages are skipped, i.e. not sent to the backend. But their information is still recorded in the context Event for later stages.",
        "createdAt" : "2017-08-03T05:50:54Z",
        "updatedAt" : "2017-09-04T09:52:41Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "3bc80b91-ee54-4df9-9bc1-35eb02d3dd12",
        "parentId" : "14471708-efca-49af-a22b-9dee04d5e98a",
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "Done.",
        "createdAt" : "2017-08-04T11:54:41Z",
        "updatedAt" : "2017-09-04T09:52:41Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      }
    ],
    "commit" : "b50acbdf0152f59e5fd6b065560aed4f85717a7a",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +180,184 @@\tonce       sync.Once\n\tsink       audit.Sink\n\tomitStages []auditinternal.Stage\n}\n"
  },
  {
    "id" : "4d077be9-f4cf-47b2-9838-5349f82acbc2",
    "prId" : 46854,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46854#pullrequestreview-42708100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d7b6c4f-a5fd-47d6-b2d0-914a6db3f049",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "not all hijacks switch protocols... for example, streaming logs hijacks",
        "createdAt" : "2017-06-07T17:24:41Z",
        "updatedAt" : "2017-06-07T17:24:42Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "b8cfa166-f085-4544-9026-576f1e6626a9",
        "parentId" : "8d7b6c4f-a5fd-47d6-b2d0-914a6db3f049",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Which means that in the case of Hijacking we actually have no clue what will happen. The hijacker might write headers or another code, i.e. manually via \"binary\" write. The only thing we can do is to introduce another audit stage without any http code (similar to the panic stage). /cc @timstclair @soltysh @CaoShuFeng is it worth it to add that?",
        "createdAt" : "2017-06-07T18:51:22Z",
        "updatedAt" : "2017-06-07T18:51:22Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "d82991f4-56f6-452c-b6ca-139f8c740e34",
        "parentId" : "8d7b6c4f-a5fd-47d6-b2d0-914a6db3f049",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "until we figure that out, please revert this change... setting 101 in non-switching cases is an API break",
        "createdAt" : "2017-06-07T18:55:04Z",
        "updatedAt" : "2017-06-07T18:55:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "b515e9ce-aa89-472f-a767-533e2839a942",
        "parentId" : "8d7b6c4f-a5fd-47d6-b2d0-914a6db3f049",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "unless I'm misreading this and this is just recording the status for audit",
        "createdAt" : "2017-06-07T18:55:56Z",
        "updatedAt" : "2017-06-07T18:55:56Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "11ac4975-ff31-4d8f-814f-e1fe7b9b1c6a",
        "parentId" : "8d7b6c4f-a5fd-47d6-b2d0-914a6db3f049",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "It's audit only. We don't have a proper way to express the hijack state. So neither the new nor the old audit event was correct. No need to revert IMO.",
        "createdAt" : "2017-06-07T19:12:47Z",
        "updatedAt" : "2017-06-07T19:12:47Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "ef0e7130-efd9-47fb-8a23-55c7365e1d1f",
        "parentId" : "8d7b6c4f-a5fd-47d6-b2d0-914a6db3f049",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yeah, that's fine, I misread",
        "createdAt" : "2017-06-07T19:21:03Z",
        "updatedAt" : "2017-06-07T19:21:03Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "541935b13f87e55199840a73cd3f158e7f0d7b63",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +210,214 @@func (f *fancyResponseWriterDelegator) Hijack() (net.Conn, *bufio.ReadWriter, error) {\n\t// fake a response status before protocol switch happens\n\tf.processCode(http.StatusSwitchingProtocols)\n\treturn f.ResponseWriter.(http.Hijacker).Hijack()\n}"
  },
  {
    "id" : "1041e4e3-aa84-4ec0-ab8c-610661675511",
    "prId" : 45766,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45766#pullrequestreview-38877534",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4773c0a6-196b-466e-b268-6a418ca20caa",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "We should set the `Status.Status` field too (`StatusSuccess` or `StatusFailure`)",
        "createdAt" : "2017-05-16T16:53:41Z",
        "updatedAt" : "2017-05-23T09:23:08Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "154aa358-9357-4ea4-96d4-6632a44fa38d",
        "parentId" : "4773c0a6-196b-466e-b268-6a418ca20caa",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "same as abobe. Let's not make up data for meta logic of the auditing system.",
        "createdAt" : "2017-05-17T11:47:05Z",
        "updatedAt" : "2017-05-23T09:23:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "a4d52c67-7098-431f-88d6-7fb48bbe27e4",
        "parentId" : "4773c0a6-196b-466e-b268-6a418ca20caa",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "abobe?",
        "createdAt" : "2017-05-17T13:06:28Z",
        "updatedAt" : "2017-05-23T09:23:08Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "fe2872ba-26ae-41d0-9abb-02c7c1266045",
        "parentId" : "4773c0a6-196b-466e-b268-6a418ca20caa",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "above",
        "createdAt" : "2017-05-17T15:36:05Z",
        "updatedAt" : "2017-05-23T09:23:09Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "6538f1fb-17f1-4175-a3f0-4529b408ce5d",
        "parentId" : "4773c0a6-196b-466e-b268-6a418ca20caa",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "I'm not sure filling in Status.Status should be considered making up data. It should just be a summary of the response code. Is there anywhere that it's not a direct mapping from the code?\r\n\r\nOf course we could easily do this on the receiving side of the audit event, but I thought it would be cleaner to always populate it...",
        "createdAt" : "2017-05-17T16:52:42Z",
        "updatedAt" : "2017-05-23T09:23:09Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "03941e26-6624-4967-a6e5-8f2c57ca0e80",
        "parentId" : "4773c0a6-196b-466e-b268-6a418ca20caa",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "We have `Status` returned from the handlers (and seen by the client). So this is similar to `ResponseBody`, but for status. We now also use this for meta data about the event. Doesn't feel clean.\r\n\r\nWe could write handler `Status` objects into `ResponseBody` (as JSON as anything else) and use the `ResponseStatus` for the meta level only.",
        "createdAt" : "2017-05-17T19:15:52Z",
        "updatedAt" : "2017-05-23T09:23:09Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "d94bb7d1-d646-486d-813c-cb8cdcd14cf1",
        "parentId" : "4773c0a6-196b-466e-b268-6a418ca20caa",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "done",
        "createdAt" : "2017-05-18T08:57:22Z",
        "updatedAt" : "2017-05-23T09:23:09Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "9fdc36a47ada0bc34ee53b68edd085d368ed9012",
    "line" : 155,
    "diffHunk" : "@@ -1,1 +105,109 @@\n\t\t\tif ev.ResponseStatus == nil {\n\t\t\t\tev.ResponseStatus = &metav1.Status{\n\t\t\t\t\tCode: 200,\n\t\t\t\t}"
  },
  {
    "id" : "2c7b514b-ca8e-48c6-b379-c33d53088b6a",
    "prId" : 45766,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45766#pullrequestreview-38767980",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "956d8e9b-c9dd-4e06-8e28-ca3f588bc26f",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Would it ever happen that the HTTP response code is different from the ResponseStatus.Code from the response body? If so, which one do we want? Should this line be in the above `if` block?",
        "createdAt" : "2017-05-17T18:13:48Z",
        "updatedAt" : "2017-05-23T09:23:09Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "761214fc-57cb-4bcb-aa27-5c9f070f5c7f",
        "parentId" : "956d8e9b-c9dd-4e06-8e28-ca3f588bc26f",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "It could be technically (if you write your custom `Status`), but probably isn't in the current code. Nobody knows what a user provided apiserver does.",
        "createdAt" : "2017-05-17T19:38:50Z",
        "updatedAt" : "2017-05-23T09:23:09Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "9fdc36a47ada0bc34ee53b68edd085d368ed9012",
    "line" : 212,
    "diffHunk" : "@@ -1,1 +157,161 @@\t\t\ta.event.ResponseStatus = &metav1.Status{}\n\t\t}\n\t\ta.event.ResponseStatus.Code = int32(code)\n\t})\n}"
  }
]