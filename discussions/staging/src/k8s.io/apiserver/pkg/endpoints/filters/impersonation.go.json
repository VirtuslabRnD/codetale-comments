[
  {
    "id" : "3cad827a-a446-4d44-8c14-ca689cd552ba",
    "prId" : 99961,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99961#pullrequestreview-613476162",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bb371b8-e8f8-411c-87cc-4dcd011e6563",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "Maybe in a separate PR, can you move `groupsSpecified` to its single point of use and update the comment to note that it only applies to service accounts (the newer group logic below has superseded this comment).",
        "createdAt" : "2021-03-25T21:15:54Z",
        "updatedAt" : "2021-04-12T18:26:43Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "74f5ed6b17287100b339a2b3a43fd4c6fb200978",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +68,72 @@\t\tgroups := []string{}\n\t\tuserExtra := map[string][]string{}\n\t\tuid := \"\"\n\t\tfor _, impersonationRequest := range impersonationRequests {\n\t\t\tgvk := impersonationRequest.GetObjectKind().GroupVersionKind()"
  },
  {
    "id" : "731f91f6-4135-4f19-a7be-2f9da9e93474",
    "prId" : 99961,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99961#pullrequestreview-613476162",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82ef2187-7de9-42ee-8f5f-9a6291d10f2f",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "Mentioned earlier, but I think we want this to be `APIVersion: authenticationv1.SchemeGroupVersion.String(),`\r\n\r\n@deads2k is this comment from above still valid?  What internal version?\r\n\r\n```\r\n// we only parse out a group above, but the parsing will fail if there isn't SOME version\r\n// using the internal version will help us fail if anyone starts using it\r\n```",
        "createdAt" : "2021-03-26T13:37:09Z",
        "updatedAt" : "2021-04-12T18:26:43Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "74f5ed6b17287100b339a2b3a43fd4c6fb200978",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +242,246 @@\thasUID := len(requestedUID) > 0\n\tif hasUID {\n\t\timpersonationRequests = append(impersonationRequests, v1.ObjectReference{\n\t\t\tKind:       \"UID\",\n\t\t\tName:       requestedUID,"
  },
  {
    "id" : "f721a275-95e3-4507-9f3e-d53d3fb92294",
    "prId" : 99961,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99961#pullrequestreview-698371069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "acae011b-5ecf-4eee-b3c1-acc2a1c5f0f6",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "@deads2k https://github.com/kubernetes/kubernetes/pull/99961#discussion_r602296616 ?",
        "createdAt" : "2021-06-22T17:56:49Z",
        "updatedAt" : "2021-06-22T18:16:53Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "3ec271ae-896d-472a-a28e-a41bb746dc8f",
        "parentId" : "acae011b-5ecf-4eee-b3c1-acc2a1c5f0f6",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "We capitalize all of  UID https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/meta/meta.go#L501",
        "createdAt" : "2021-07-02T17:08:45Z",
        "updatedAt" : "2021-07-02T17:08:56Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "74f5ed6b17287100b339a2b3a43fd4c6fb200978",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +105,109 @@\t\t\t\tuserExtra[extraKey] = append(userExtra[extraKey], extraValue)\n\n\t\t\tcase authenticationv1.SchemeGroupVersion.WithKind(\"UID\").GroupKind():\n\t\t\t\tuid = string(impersonationRequest.Name)\n\t\t\t\tactingAsAttributes.Resource = \"uids\""
  },
  {
    "id" : "a108ab8c-57a2-4f52-a583-0ee3e71e98c4",
    "prId" : 99961,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99961#pullrequestreview-698367950",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fef080be-428e-45a9-b3b8-6d28306da558",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "For the case below:\r\n\r\n```go\r\n\t\t\tswitch gvk.GroupKind() {\r\n\t\t\tcase v1.SchemeGroupVersion.WithKind(\"ServiceAccount\").GroupKind():\r\n\t\t\t\tactingAsAttributes.Resource = \"serviceaccounts\"\r\n\t\t\t\tusername = serviceaccount.MakeUsername(impersonationRequest.Namespace, impersonationRequest.Name)\r\n\t\t\t\tif !groupsSpecified {\r\n\t\t\t\t\t// if groups aren't specified for a service account, we know the groups because its a fixed mapping.  Add them\r\n\t\t\t\t\tgroups = serviceaccount.MakeGroupNames(impersonationRequest.Namespace)\r\n\t\t\t\t}\r\n```\r\n\r\nShould we do something similar for SA UIDs?  @deads2k ",
        "createdAt" : "2021-06-22T18:09:59Z",
        "updatedAt" : "2021-06-22T18:16:53Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "e812ffeb-fcd5-4d7b-8eeb-6f0569913b8c",
        "parentId" : "fef080be-428e-45a9-b3b8-6d28306da558",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Should we do something similar for SA UIDs? @deads2k\r\n\r\nWe cannot know serviceaccount uids without looking up the serviceaccount in question, right?  And we may not even have a serviceaccount present.",
        "createdAt" : "2021-07-02T17:03:45Z",
        "updatedAt" : "2021-07-02T17:03:46Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "74f5ed6b17287100b339a2b3a43fd4c6fb200978",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +71,75 @@\t\tfor _, impersonationRequest := range impersonationRequests {\n\t\t\tgvk := impersonationRequest.GetObjectKind().GroupVersionKind()\n\t\t\tactingAsAttributes := &authorizer.AttributesRecord{\n\t\t\t\tUser:            requestor,\n\t\t\t\tVerb:            \"impersonate\","
  },
  {
    "id" : "960e754d-14b2-494c-8f6e-f2653c156526",
    "prId" : 94204,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94204#pullrequestreview-474834416",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "704a333b-7b5a-4330-969c-eb4bddddc045",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I'd like to an `else` on this that ensure that system:anonymous always has `system:unauthenticated` as a group too.",
        "createdAt" : "2020-08-25T18:02:18Z",
        "updatedAt" : "2020-08-25T19:01:44Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "a4ffe4d1-98d3-4de7-8af7-1aa0101c8c76",
        "parentId" : "704a333b-7b5a-4330-969c-eb4bddddc045",
        "authorId" : "3e6e337f-0beb-4609-abc3-11b8e8cf5688",
        "body" : "@deads2k does not look like we are adding `system:unauthenticated` group for a `system:anonymous` user in the authenticated group adder -  https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/authentication/group/authenticated_group_adder.go#L46. \r\n\r\nI am not sure if we are doing it elsewhere. Do you want me to fix this?",
        "createdAt" : "2020-08-25T18:48:32Z",
        "updatedAt" : "2020-08-25T19:01:44Z",
        "lastEditedBy" : "3e6e337f-0beb-4609-abc3-11b8e8cf5688",
        "tags" : [
        ]
      },
      {
        "id" : "f9322e5e-c3f7-4dea-b68f-42e18643bf9d",
        "parentId" : "704a333b-7b5a-4330-969c-eb4bddddc045",
        "authorId" : "3e6e337f-0beb-4609-abc3-11b8e8cf5688",
        "body" : "I am wrong, it gets added here - https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/authentication/request/anonymous/anonymous.go#L38",
        "createdAt" : "2020-08-25T19:00:05Z",
        "updatedAt" : "2020-08-25T19:01:44Z",
        "lastEditedBy" : "3e6e337f-0beb-4609-abc3-11b8e8cf5688",
        "tags" : [
        ]
      },
      {
        "id" : "86179fbc-d57c-4262-a204-8400e56dd06e",
        "parentId" : "704a333b-7b5a-4330-969c-eb4bddddc045",
        "authorId" : "3e6e337f-0beb-4609-abc3-11b8e8cf5688",
        "body" : "> I'd like to an `else` on this that ensure that system:anonymous always has `system:unauthenticated` as a group too.\r\n\r\n@deads2k  done, please check.\r\n",
        "createdAt" : "2020-08-25T20:32:36Z",
        "updatedAt" : "2020-08-25T20:32:37Z",
        "lastEditedBy" : "3e6e337f-0beb-4609-abc3-11b8e8cf5688",
        "tags" : [
        ]
      }
    ],
    "commit" : "01619cfaf6d2b1bcd96c65239e40add5c046f1e4",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +118,122 @@\t\t}\n\n\t\tif username != user.Anonymous {\n\t\t\t// When impersonating a non-anonymous user, include the 'system:authenticated' group\n\t\t\t// in the impersonated user info:"
  },
  {
    "id" : "c4ada4bb-cfd2-48f2-8f71-649d11a737c1",
    "prId" : 44076,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44076#pullrequestreview-32740389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87d2e389-d475-4d17-9841-abe0343dec7e",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "If any groups have been specified, I don't think that we should auto-add something else to the list.  The caller knew how to send the groups and chose not to.",
        "createdAt" : "2017-04-10T13:42:16Z",
        "updatedAt" : "2017-04-13T21:11:21Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "09ba30a5-20b2-4bb9-82e3-d8b4714d528b",
        "parentId" : "87d2e389-d475-4d17-9841-abe0343dec7e",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I'm hard pressed to think of any scenario where that behavior would be helpful and not confusing. ",
        "createdAt" : "2017-04-11T00:58:41Z",
        "updatedAt" : "2017-04-13T21:11:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a8349252-7011-4591-9bea-802f5fe71215",
        "parentId" : "87d2e389-d475-4d17-9841-abe0343dec7e",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> I'm hard pressed to think of any scenario where that behavior would be helpful and not confusing.\r\n\r\nIf you don't do that, you're stealing power from the API.  I can see why you'd add the group for cases where its not found (same as the downstream \"groupify for me\"), but to take what the user requested and decide, \"I'll add this too\" (which we don't do downstream), seems wrong to me.",
        "createdAt" : "2017-04-11T12:22:37Z",
        "updatedAt" : "2017-04-13T21:11:21Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "9fb05c39-020e-4bdb-8ddd-d5f01d92d8f8",
        "parentId" : "87d2e389-d475-4d17-9841-abe0343dec7e",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "updated",
        "createdAt" : "2017-04-13T21:11:41Z",
        "updatedAt" : "2017-04-13T21:11:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "86623ed2414d98d6ddc7f28028b88d17d8d8f6ec",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +129,133 @@\t\t\t}\n\t\t\tif !found {\n\t\t\t\tgroups = append(groups, user.AllAuthenticated)\n\t\t\t}\n\t\t}"
  }
]