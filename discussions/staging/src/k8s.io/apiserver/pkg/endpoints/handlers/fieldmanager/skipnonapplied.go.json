[
  {
    "id" : "db77b384-407d-4b97-bd1e-2acf660bea55",
    "prId" : 87044,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87044#pullrequestreview-341310582",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3972a1f5-5344-4bbe-8a71-44be659e7091",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I have a preference for computing a number by e.g. hashing namespace and name so that it'll be repeatable based on the object. (e.g., if we break an e2e test, let's try to always break the same one)",
        "createdAt" : "2020-01-10T00:12:52Z",
        "updatedAt" : "2020-01-10T19:15:07Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "79eac672-a301-4961-b39f-3600b05fea24",
        "parentId" : "3972a1f5-5344-4bbe-8a71-44be659e7091",
        "authorId" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "body" : "That sounds reasonable to me, at least if we are planning to get this to 100% before 1.18. \r\n\r\nDo you think we want this probability to be configurable by end users though?",
        "createdAt" : "2020-01-10T00:14:34Z",
        "updatedAt" : "2020-01-10T19:15:07Z",
        "lastEditedBy" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "tags" : [
        ]
      },
      {
        "id" : "695f89eb-dc66-4054-b3cd-84754e10efb3",
        "parentId" : "3972a1f5-5344-4bbe-8a71-44be659e7091",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I don't think that's necessary, and we can always add that if it looks like we won't get to 100% by the release day.",
        "createdAt" : "2020-01-10T00:18:50Z",
        "updatedAt" : "2020-01-10T19:15:07Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "95db9e06-7aea-405e-a968-f1d86da1eff5",
        "parentId" : "3972a1f5-5344-4bbe-8a71-44be659e7091",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> if we break an e2e test, let's try to always break the same one\r\n\r\nI'm pretty sure e2e tests generate a namespace with a randomized suffix, fyi",
        "createdAt" : "2020-01-10T06:46:31Z",
        "updatedAt" : "2020-01-10T19:15:07Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f0d86de6-d98c-4079-9afc-a4bcce4a26df",
        "parentId" : "3972a1f5-5344-4bbe-8a71-44be659e7091",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "That's true, and makes this less important. I still think it'd be better if it were deterministic :/",
        "createdAt" : "2020-01-10T17:24:55Z",
        "updatedAt" : "2020-01-10T19:15:07Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "4db3822ebbac30248463eb529d88176f8b258fd9",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +66,70 @@\t\t// If the operation is update, skip tracking managed fields, since we already know managed fields is empty.\n\t\tif len(accessor.GetUID()) == 0 {\n\t\t\tif f.probability <= rand.Float32() {\n\t\t\t\treturn newObj, managed, nil\n\t\t\t}"
  }
]