[
  {
    "id" : "09c9c5bd-4cd0-4cc6-b9d3-6e3210d7dddb",
    "prId" : 82553,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82553#pullrequestreview-287668170",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cba3c7c4-c75f-4e94-9c39-159d6921fde7",
        "parentId" : null,
        "authorId" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "body" : "isConflict makes sure that err will be an APIStatus",
        "createdAt" : "2019-09-12T19:55:53Z",
        "updatedAt" : "2019-09-12T20:09:28Z",
        "lastEditedBy" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c67bf47db8557b6481a5181bdae924e91665988",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +99,103 @@\terr := f.Apply(appliedBytes, \"fieldmanager_test_apply\", false)\n\tapiStatus, _ := err.(apierrors.APIStatus)\n\tif err == nil || !apierrors.IsConflict(err) || len(apiStatus.Status().Details.Causes) != 1 {\n\t\tt.Fatalf(\"Expecting to get one conflict but got %v\", err)\n\t}"
  },
  {
    "id" : "c5be696e-f02c-4315-a99e-acb054f7bc00",
    "prId" : 82553,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82553#pullrequestreview-287674353",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70df1e12-3648-4748-a53b-3fc9f6e5958f",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "We don't really have a test that shows that it skips?",
        "createdAt" : "2019-09-12T20:02:24Z",
        "updatedAt" : "2019-09-12T20:09:28Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "cff0dcc3-766b-4d08-8722-671a6c397863",
        "parentId" : "70df1e12-3648-4748-a53b-3fc9f6e5958f",
        "authorId" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "body" : "I included the same checks after the first update in this test (TestUpateBeforeFirstApply) that I had in the old test which just showed it skipped\r\n",
        "createdAt" : "2019-09-12T20:05:25Z",
        "updatedAt" : "2019-09-12T20:09:28Z",
        "lastEditedBy" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "tags" : [
        ]
      },
      {
        "id" : "6a5976b8-7351-4c00-987e-62b4c9105fbd",
        "parentId" : "70df1e12-3648-4748-a53b-3fc9f6e5958f",
        "authorId" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "body" : "```\r\n\tupdatedObj := &corev1.Pod{}\r\n\tupdatedObj.ObjectMeta.Labels = map[string]string{\"app\": \"nginx\"}\r\n\r\n\tif err := f.Update(updatedObj, \"fieldmanager_test_update\"); err != nil {\r\n\t\tt.Fatalf(\"failed to update object: %v\", err)\r\n\t}\r\n\r\n\tif m := f.ManagedFields(); len(m) != 0 {\r\n\t\tt.Fatalf(\"managedFields were tracked on update only: %v\", m)\r\n\t}\r\n```",
        "createdAt" : "2019-09-12T20:06:26Z",
        "updatedAt" : "2019-09-12T20:09:28Z",
        "lastEditedBy" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "tags" : [
        ]
      },
      {
        "id" : "310c4e1f-42e8-4a79-8691-ae47711b1744",
        "parentId" : "70df1e12-3648-4748-a53b-3fc9f6e5958f",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Yes",
        "createdAt" : "2019-09-12T20:07:34Z",
        "updatedAt" : "2019-09-12T20:09:28Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c67bf47db8557b6481a5181bdae924e91665988",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +67,71 @@}\n\nfunc TestUpateBeforeFirstApply(t *testing.T) {\n\tf := NewTestFieldManager()\n\tf.fieldManager = fieldmanager.NewSkipNonAppliedManager(f.fieldManager, &fakeObjectCreater{}, schema.GroupVersionKind{})"
  }
]