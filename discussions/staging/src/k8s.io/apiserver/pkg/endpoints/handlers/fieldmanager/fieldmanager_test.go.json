[
  {
    "id" : "762ed94b-0fd6-4ee7-9f1d-12ffb3ab2388",
    "prId" : 93162,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93162#pullrequestreview-450228220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ae80796-57ae-41ab-84df-708425f2ab9b",
        "parentId" : null,
        "authorId" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "body" : "I also tried this test by adding the [skipNonAppliedManager (which always adds the before-first-apply field manager)](https://github.com/kubernetes/kubernetes/blob/36e40fb850293076b415ae3d376f5f81dc897105/staging/src/k8s.io/apiserver/pkg/endpoints/handlers/fieldmanager/skipnonapplied.go#L40) and it works.\r\n\r\n```\r\n\tf := NewTestFieldManager(schema.FromAPIVersionAndKind(\"apps/v1\", \"Deployment\"),\r\n\t\tfunc(m fieldmanager.Manager) fieldmanager.Manager {\r\n\t\t\treturn fieldmanager.NewSkipNonAppliedManager(\r\n\t\t\t\tm,\r\n\t\t\t\t&fakeObjectCreater{gvk: schema.GroupVersionKind{Version: \"apps/v1\", Kind: \"Deployment\"}},\r\n\t\t\t\tschema.GroupVersionKind{},\r\n\t\t\t)\r\n\t\t})\r\n```",
        "createdAt" : "2020-07-16T21:26:35Z",
        "updatedAt" : "2020-08-05T22:23:07Z",
        "lastEditedBy" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2deb2417a6c542c54606ab17376b26ef1552b87",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +1042,1046 @@\nfunc TestNoTrackManagedFieldsForClientSideApply(t *testing.T) {\n\tf := NewDefaultTestFieldManager(schema.FromAPIVersionAndKind(\"apps/v1\", \"Deployment\"))\n\n\t// create object"
  },
  {
    "id" : "12381507-3cc1-4212-ad3a-410c9408a21b",
    "prId" : 93162,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93162#pullrequestreview-462065523",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b256df6-f95f-46c4-987a-529fc0c77630",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "interesting, does this actually stop the tracking?",
        "createdAt" : "2020-08-05T20:04:51Z",
        "updatedAt" : "2020-08-05T22:23:07Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "afeb652b-e2c9-43db-b115-2d6147e16d8c",
        "parentId" : "0b256df6-f95f-46c4-987a-529fc0c77630",
        "authorId" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "body" : "Yes, confirmed also in this integration test:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/f2deb2417a6c542c54606ab17376b26ef1552b87/test/integration/apiserver/apply/apply_test.go#L1583-L1665",
        "createdAt" : "2020-08-05T22:24:29Z",
        "updatedAt" : "2020-08-05T22:24:29Z",
        "lastEditedBy" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "tags" : [
        ]
      },
      {
        "id" : "91f0e78a-4c09-42c0-af76-bcaa2f86950f",
        "parentId" : "0b256df6-f95f-46c4-987a-529fc0c77630",
        "authorId" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "body" : "Just a note that it's possible to only clear/stop tracking managed fields like this on an update, but not on a create.",
        "createdAt" : "2020-08-05T22:25:36Z",
        "updatedAt" : "2020-08-05T22:25:36Z",
        "lastEditedBy" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2deb2417a6c542c54606ab17376b26ef1552b87",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +1073,1077 @@metadata:\n  name: my-deployment\n  managedFields: [] # stop tracking managed fields\n  labels:\n    app: my-app"
  },
  {
    "id" : "bc2e0405-7080-4ee1-9b81-44e862614fea",
    "prId" : 93162,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93162#pullrequestreview-462065013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22891e4c-82d5-4976-b64d-42c44d13993d",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Since you're already checking the length before that, can you make sure that this is not going to crash by checking you have at least 2 items?\r\n\r\nThen LGTM.",
        "createdAt" : "2020-08-05T20:07:54Z",
        "updatedAt" : "2020-08-05T22:23:07Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "295b4395-6a38-41eb-9a74-928fea523be0",
        "parentId" : "22891e4c-82d5-4976-b64d-42c44d13993d",
        "authorId" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "body" : "Ah done",
        "createdAt" : "2020-08-05T22:24:18Z",
        "updatedAt" : "2020-08-05T22:24:18Z",
        "lastEditedBy" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2deb2417a6c542c54606ab17376b26ef1552b87",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +1146,1150 @@\t\tt.Fatalf(\"exected first manager name to be %v, but got %v: %#v\", e, a, f.ManagedFields())\n\t}\n\tif e, a := \"before-first-apply\", f.ManagedFields()[1].Manager; e != a {\n\t\tt.Fatalf(\"exected second manager name to be %v, but got %v: %#v\", e, a, f.ManagedFields())\n\t}"
  },
  {
    "id" : "5b66bd49-4db6-49f2-8648-865f24772793",
    "prId" : 91993,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91993#pullrequestreview-450739524",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06a47e52-da56-4397-9201-2d5991697270",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Given the way this test works, I think you should have been able to set the managed fields directly on the initial object, and see that it doesn't keep what's in it.",
        "createdAt" : "2020-07-14T17:54:09Z",
        "updatedAt" : "2020-08-18T11:35:03Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "0e845080-4076-4e4d-85f5-0f3b0416a5fd",
        "parentId" : "06a47e52-da56-4397-9201-2d5991697270",
        "authorId" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "body" : "Do you mean set directly the `liveObj`field?",
        "createdAt" : "2020-07-15T16:49:29Z",
        "updatedAt" : "2020-08-18T11:35:03Z",
        "lastEditedBy" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "tags" : [
        ]
      },
      {
        "id" : "11d091e6-f8d5-4ca3-89e0-b8c6c86ab41b",
        "parentId" : "06a47e52-da56-4397-9201-2d5991697270",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "I think you can add the managedFields in the object just below when you run the first update, which would eliminate the need to run 2 \"Update\" (by the way, update doesn't take a patch, it takes the full patched object)",
        "createdAt" : "2020-07-15T16:55:13Z",
        "updatedAt" : "2020-08-18T11:35:03Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "fd45ec90-4fae-441e-986b-f0487b034dfe",
        "parentId" : "06a47e52-da56-4397-9201-2d5991697270",
        "authorId" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "body" : "aha! makes sense, I will change it! üëç ",
        "createdAt" : "2020-07-15T17:05:08Z",
        "updatedAt" : "2020-08-18T11:35:03Z",
        "lastEditedBy" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "tags" : [
        ]
      },
      {
        "id" : "6be32b1a-414d-4a4a-b352-aa986be11ba0",
        "parentId" : "06a47e52-da56-4397-9201-2d5991697270",
        "authorId" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "body" : "Done in b4786b8",
        "createdAt" : "2020-07-17T15:10:47Z",
        "updatedAt" : "2020-08-18T11:35:03Z",
        "lastEditedBy" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "tags" : [
        ]
      }
    ],
    "commit" : "c522ee08a3d248ec1097e3673119ffa7a4e1ef7b",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +1100,1104 @@\nfunc TestUpdateViaSubresources(t *testing.T) {\n\tf := NewSubresourceTestFieldManager(schema.FromAPIVersionAndKind(\"v1\", \"Pod\"))\n\n\tobj := &unstructured.Unstructured{Object: map[string]interface{}{}}"
  },
  {
    "id" : "1dd5b4fc-089d-43c7-8e01-3bc76c596c14",
    "prId" : 91993,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91993#pullrequestreview-452863283",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f234ad21-c20b-4e67-b703-8f4b488fa560",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Why are you able to set the manager here, but not the second time? I'm confused.",
        "createdAt" : "2020-07-21T19:39:20Z",
        "updatedAt" : "2020-08-18T11:35:03Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "d9e848f1-adc0-48f1-a178-ed196d1a4f65",
        "parentId" : "f234ad21-c20b-4e67-b703-8f4b488fa560",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "OK No, I misread that's actually correct, thanks!",
        "createdAt" : "2020-07-21T22:06:26Z",
        "updatedAt" : "2020-08-18T11:35:03Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "c522ee08a3d248ec1097e3673119ffa7a4e1ef7b",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +1130,1134 @@\tif err := f.Update(obj, expectedManager); err != nil {\n\t\tt.Fatalf(\"failed to apply object: %v\", err)\n\t}\n\n\tmanagedFields := f.ManagedFields()"
  },
  {
    "id" : "17ef55c7-7a34-4552-843f-68a3e975389c",
    "prId" : 88875,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88875#pullrequestreview-370563469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15a26aab-aac8-4adb-bc03-9e39a2694dd9",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "‡≤†_‡≤†",
        "createdAt" : "2020-03-06T19:14:06Z",
        "updatedAt" : "2020-03-06T19:14:07Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "141e7576-6f46-492d-b115-8bd79d705c0e",
        "parentId" : "15a26aab-aac8-4adb-bc03-9e39a2694dd9",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "We're planning on inserting a Clock to mock with a fake clock and have more tests here. Not much time right now :-/",
        "createdAt" : "2020-03-06T19:14:55Z",
        "updatedAt" : "2020-03-06T19:14:56Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "5231c6815c7b06248575892f3ec96c15c634d368",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +757,761 @@\tbefore := f.liveObj.DeepCopyObject()\n\t// Wait to make sure the timestamp is different\n\ttime.Sleep(time.Second)\n\t// Applying with a different fieldmanager will create an entry..\n\tif err := f.Apply(obj, \"fieldmanager_test_apply_other\", false); err != nil {"
  },
  {
    "id" : "750fcc2d-8888-48f4-9a54-78fd141db140",
    "prId" : 82847,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82847#pullrequestreview-293378633",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5f3435e-87e4-48d1-93d4-f4d5e2228bf7",
        "parentId" : null,
        "authorId" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "body" : "Is it okay to create this here and update it within each of the b.Run cases below?",
        "createdAt" : "2019-09-25T20:20:30Z",
        "updatedAt" : "2019-09-25T20:20:31Z",
        "lastEditedBy" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "tags" : [
        ]
      },
      {
        "id" : "51c6ee0c-46d5-45b4-a887-68468a32881f",
        "parentId" : "e5f3435e-87e4-48d1-93d4-f4d5e2228bf7",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Yeah, I think it is. It's also using `f.Reset` so that it doesn't save the \"live object\".",
        "createdAt" : "2019-09-25T21:09:41Z",
        "updatedAt" : "2019-09-25T21:09:42Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "29ecce4e-16ab-49a1-b823-025cc266ed98",
        "parentId" : "e5f3435e-87e4-48d1-93d4-f4d5e2228bf7",
        "authorId" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "body" : "Sure, I was just worried if this would be run in parallel",
        "createdAt" : "2019-09-25T21:36:29Z",
        "updatedAt" : "2019-09-25T21:36:29Z",
        "lastEditedBy" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b7ea8bb0e9cc10335044f9ef75920d59462a4ca",
    "line" : 418,
    "diffHunk" : "@@ -1,1 +332,336 @@\tfor _, test := range tests {\n\t\tb.Run(test.gvk.Kind, func(b *testing.B) {\n\t\t\tf := NewTestFieldManager(test.gvk)\n\n\t\t\tnewObj := &unstructured.Unstructured{Object: map[string]interface{}{}}"
  },
  {
    "id" : "490d7e61-eec5-43f3-80c8-c5eebc82bd08",
    "prId" : 82175,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82175#pullrequestreview-282135473",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02bc0922-7f18-42e7-8490-d0f908b445af",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Technically you're parsing JSON, but I think that's fine ;-)",
        "createdAt" : "2019-08-30T16:36:41Z",
        "updatedAt" : "2019-08-30T21:47:52Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "9828f986afd4db79a10c78bee1cc2e449faee3a6",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +133,137 @@\t}`)\n\tnewObj := &unstructured.Unstructured{Object: map[string]interface{}{}}\n\tif err := yaml.Unmarshal(patch, &newObj.Object); err != nil {\n\t\tt.Fatalf(\"error decoding YAML: %v\", err)\n\t}"
  },
  {
    "id" : "e9e6aa56-3896-494d-8350-df2771adfc9d",
    "prId" : 81453,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81453#pullrequestreview-276172145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "866c02c2-bf15-4770-91d8-ba70002ab72e",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "What you should be testing is that this object (the one in YAML, which is the one that is applied) has or has not the `managedFields`.",
        "createdAt" : "2019-08-16T21:13:37Z",
        "updatedAt" : "2019-08-30T04:28:22Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "2efc617a3c111e3c3cb189ddd21c0396152bc671",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +449,453 @@\t\t\"apiVersion\": \"apps/v1\",\n\t\t\"kind\": \"Pod\",\n\t\t\"metadata\": {\n\t\t\t\"managedFields\": [\n\t\t\t\t{"
  },
  {
    "id" : "cb8da312-878a-4ff9-a305-f05aa58f75e8",
    "prId" : 79946,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79946#pullrequestreview-259763603",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b3b9298-4ca1-4307-b3f8-691d7c9ea4c0",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Probably doesn't matter on these timescales, but technically a b.Reset() might be good to exclude the time it takes to construct `f`. (below, too)",
        "createdAt" : "2019-07-09T21:12:30Z",
        "updatedAt" : "2019-07-09T23:00:24Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "ecb5d47d-faca-40f3-9df9-318de34b3670",
        "parentId" : "0b3b9298-4ca1-4307-b3f8-691d7c9ea4c0",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "It doesn't hurt to have it ..",
        "createdAt" : "2019-07-09T21:14:29Z",
        "updatedAt" : "2019-07-09T23:00:24Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "92cf3764f979e63317c8f483d8e841e0358599f4",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +183,187 @@\tobj := &corev1.Pod{}\n\n\tb.ReportAllocs()\n\tb.ResetTimer()\n\tfor n := 0; n < b.N; n++ {"
  },
  {
    "id" : "4dc5b2b6-37c8-47fc-844e-a5943ed99852",
    "prId" : 79946,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79946#pullrequestreview-259766429",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cab9a73-357c-43b1-a8aa-cd40eea473d6",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Would it be better to make a new object each time? I don't think we would hit any caching, but maybe better to stay safe?",
        "createdAt" : "2019-07-09T21:15:23Z",
        "updatedAt" : "2019-07-09T23:00:24Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "7b1ce48b-81da-4039-af21-daf4637c0dec",
        "parentId" : "5cab9a73-357c-43b1-a8aa-cd40eea473d6",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Yes, and this is free anyway so ...",
        "createdAt" : "2019-07-09T21:18:10Z",
        "updatedAt" : "2019-07-09T23:00:24Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "f82c937d-94b9-44bc-90bb-a3b5cd750f4a",
        "parentId" : "5cab9a73-357c-43b1-a8aa-cd40eea473d6",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Probably doesn't matter, and it doesn't seem feasible for the other tests, so ignore this :)",
        "createdAt" : "2019-07-09T21:20:43Z",
        "updatedAt" : "2019-07-09T23:00:24Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "92cf3764f979e63317c8f483d8e841e0358599f4",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +181,185 @@\tf := NewTestFieldManager()\n\n\tobj := &corev1.Pod{}\n\n\tb.ReportAllocs()"
  },
  {
    "id" : "3aff3c9e-b68c-4c05-b31d-9b11b0495bf2",
    "prId" : 79946,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79946#pullrequestreview-259813285",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a50cebe6-1ab0-4804-9c80-cae536370379",
        "parentId" : null,
        "authorId" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "body" : "Can this be into a corev1.Pod{} ?",
        "createdAt" : "2019-07-09T23:51:49Z",
        "updatedAt" : "2019-07-09T23:51:49Z",
        "lastEditedBy" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "tags" : [
        ]
      }
    ],
    "commit" : "92cf3764f979e63317c8f483d8e841e0358599f4",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +267,271 @@\n\t}`\n\tnewObj := &unstructured.Unstructured{Object: map[string]interface{}{}}\n\tif err := yaml.Unmarshal([]byte(y), &newObj.Object); err != nil {\n\t\tb.Fatalf(\"Failed to parse yaml object: %v\", err)"
  },
  {
    "id" : "a33adbb3-1c92-4a8e-bec5-a9a1791a33e4",
    "prId" : 75157,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75157#pullrequestreview-212143523",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e3f694f-0929-4e0b-a95b-421013626a99",
        "parentId" : null,
        "authorId" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "body" : "I like this test, can you also check that the status code is the Bad Request one?",
        "createdAt" : "2019-03-08T05:24:30Z",
        "updatedAt" : "2019-03-12T05:08:41Z",
        "lastEditedBy" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5bd17cda0c134e5ef5c03c3eac79a9ce4e18003",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +138,142 @@\tswitch typ := err.(type) {\n\tdefault:\n\t\tt.Fatalf(\"expected error to be of type %T was %T\", apierrors.StatusError{}, typ)\n\tcase apierrors.APIStatus:\n\t\tif typ.Status().Code != http.StatusBadRequest {"
  },
  {
    "id" : "7ab841d3-3b38-4b1c-8891-ae8012fd7ecc",
    "prId" : 74207,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74207#pullrequestreview-205402789",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01566428-fee6-4ac6-8c8e-0414b6e8bb1a",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "This method is hiding \"important\" details from the actual test, I'm not a big fan. They are not so important, so no big deal.",
        "createdAt" : "2019-02-18T16:25:58Z",
        "updatedAt" : "2019-02-19T19:17:43Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "8b222343-eef6-4062-bcf3-059a1334895f",
        "parentId" : "01566428-fee6-4ac6-8c8e-0414b6e8bb1a",
        "authorId" : "500960f8-0ed2-4739-b582-fd7135d2ce87",
        "body" : "hiding?\r\nIt's like a setup() function which I've seen across many places in the repo.\r\nBut sure, can move this into every single function as well.",
        "createdAt" : "2019-02-19T19:18:59Z",
        "updatedAt" : "2019-02-19T19:18:59Z",
        "lastEditedBy" : "500960f8-0ed2-4739-b582-fd7135d2ce87",
        "tags" : [
        ]
      }
    ],
    "commit" : "332bb15476ed6f7ef0b55a5a3a3a735b915ccee3",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +49,53 @@func (d *fakeObjectDefaulter) Default(in runtime.Object) {}\n\nfunc NewTestFieldManager(t *testing.T) *fieldmanager.FieldManager {\n\tgv := schema.GroupVersion{\n\t\tGroup:   \"apps\","
  },
  {
    "id" : "6ae2f589-9587-409a-93fe-1e53187a190f",
    "prId" : 74207,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74207#pullrequestreview-204869513",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a29b0507-8f0d-4076-856b-bb8e8b717814",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Cool, I didn't realize this was going to test the strip method.",
        "createdAt" : "2019-02-18T16:27:46Z",
        "updatedAt" : "2019-02-19T19:17:43Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "332bb15476ed6f7ef0b55a5a3a3a735b915ccee3",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +102,106 @@\t}\n\n\tif m := accessor.GetManagedFields(); len(m) != 0 {\n\t\tt.Fatalf(\"fields did not get stripped on apply: %v\", m)\n\t}"
  },
  {
    "id" : "da07a4bb-c38a-404e-90c7-95f3c62b85e7",
    "prId" : 74207,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74207#pullrequestreview-205902804",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4591d81a-621f-4174-959e-475a5612af70",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "That really shouldn't happen though (applying with a different name/namespace), it might not matter in this test but that's confusing.",
        "createdAt" : "2019-02-20T17:11:09Z",
        "updatedAt" : "2019-02-20T17:13:54Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "ea8fb22f-e258-4131-a408-79a092614da6",
        "parentId" : "4591d81a-621f-4174-959e-475a5612af70",
        "authorId" : "500960f8-0ed2-4739-b582-fd7135d2ce87",
        "body" : "Sure, it's my only way of testing if the fields get stripped on changes. Or is there another one?",
        "createdAt" : "2019-02-20T17:41:01Z",
        "updatedAt" : "2019-02-20T17:41:02Z",
        "lastEditedBy" : "500960f8-0ed2-4739-b582-fd7135d2ce87",
        "tags" : [
        ]
      }
    ],
    "commit" : "332bb15476ed6f7ef0b55a5a3a3a735b915ccee3",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +85,89 @@\t\t\"kind\": \"Deployment\",\n\t\t\"metadata\": {\n\t\t\t\"name\": \"b\",\n\t\t\t\"namespace\": \"b\",\n\t\t\t\"creationTimestamp\": \"2016-05-19T09:59:00Z\","
  },
  {
    "id" : "7190fee4-9dcd-453b-8c5d-7c04895bdc35",
    "prId" : 74207,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74207#pullrequestreview-205887269",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d76792f-2b5e-4b1e-a5f5-553e29d7bdb1",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "what happens if you keep this empty?",
        "createdAt" : "2019-02-20T17:11:56Z",
        "updatedAt" : "2019-02-20T17:13:54Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "332bb15476ed6f7ef0b55a5a3a3a735b915ccee3",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +72,76 @@\tf := NewTestFieldManager(t)\n\n\tobj := &corev1.Pod{\n\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\tName:              \"a\","
  }
]