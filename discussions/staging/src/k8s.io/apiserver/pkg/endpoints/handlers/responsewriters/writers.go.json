[
  {
    "id" : "7254f4f2-0be6-4288-93a3-151d0201514a",
    "prId" : 97953,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97953#pullrequestreview-566084068",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33086f7a-ad65-4dd7-9a46-aad00edb5c51",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "How many Write() calls we can have per serialization?\r\n\r\nI think protobuf encoder does O(1), but what about json/yaml? I would like to ensure that we can't end up with gazillions of those and we won't introduce visible overhead with those...",
        "createdAt" : "2021-01-12T09:23:35Z",
        "updatedAt" : "2021-01-12T09:23:41Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "72f74a62-6f3f-45d9-acb5-4e1c93e0989c",
        "parentId" : "33086f7a-ad65-4dd7-9a46-aad00edb5c51",
        "authorId" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "body" : "For json/yaml it's a single call as well (see [1] for yaml, [2] for json) We already use assumption about single call for gzip compression (see comment for defaultGzipThresholdBytes constant)\r\n\r\n[1] https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/runtime/serializer/json/json.go#L314\r\n[2] https://golang.org/src/encoding/json/stream.go?s=5070:5117#L231 called here: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/runtime/serializer/json/json.go#L327",
        "createdAt" : "2021-01-12T09:32:08Z",
        "updatedAt" : "2021-01-12T09:32:09Z",
        "lastEditedBy" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "e93836d9b35f5ec231da91807f00dab3d1a28fd9",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +200,204 @@\t\tfirstWrite := !w.hasWritten\n\t\tdefer func() {\n\t\t\tw.trace.Step(\"Write call finished\",\n\t\t\t\tutiltrace.Field{\"writer\", fmt.Sprintf(\"%T\", w.w)},\n\t\t\t\tutiltrace.Field{\"size\", len(p)},"
  },
  {
    "id" : "8ad477a1-3384-40fd-bdec-ec00c07c443a",
    "prId" : 97953,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97953#pullrequestreview-572231099",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61f1a330-5277-47fa-baa6-650c17ea051d",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "@liggitt @sttts @deads2k - just to be on the safe side - is the URL always set in non-test code?",
        "createdAt" : "2021-01-12T14:04:26Z",
        "updatedAt" : "2021-01-12T14:04:54Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "244bf305-5528-4f42-ab08-e76250526e84",
        "parentId" : "61f1a330-5277-47fa-baa6-650c17ea051d",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "We do the same in k8s.io/apiserver/pkg/endpoints/handlers all over the place. So I think this is fine.",
        "createdAt" : "2021-01-20T13:17:29Z",
        "updatedAt" : "2021-01-20T13:17:30Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "efce8826-3ab9-4e3c-88b2-02e7d184cd60",
        "parentId" : "61f1a330-5277-47fa-baa6-650c17ea051d",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Thanks!",
        "createdAt" : "2021-01-20T13:44:03Z",
        "updatedAt" : "2021-01-20T13:44:16Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e93836d9b35f5ec231da91807f00dab3d1a28fd9",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +91,95 @@\ttrace := utiltrace.New(\"SerializeObject\",\n\t\tutiltrace.Field{\"method\", req.Method},\n\t\tutiltrace.Field{\"url\", req.URL.Path},\n\t\tutiltrace.Field{\"protocol\", req.Proto},\n\t\tutiltrace.Field{\"mediaType\", mediaType},"
  },
  {
    "id" : "6a9c84fa-62ec-4945-919e-e4ff91c19daf",
    "prId" : 94589,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94589#pullrequestreview-483591332",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "daece3c3-ed2c-42fe-b04a-e71ea6d98c7f",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "// we cannot write an error to the writer anymore as the Encode call was succesful.",
        "createdAt" : "2020-09-07T11:47:12Z",
        "updatedAt" : "2020-09-07T14:07:40Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "d67720ff-da16-4a9f-92db-49527c219432",
        "parentId" : "daece3c3-ed2c-42fe-b04a-e71ea6d98c7f",
        "authorId" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "body" : "done.",
        "createdAt" : "2020-09-07T14:20:08Z",
        "updatedAt" : "2020-09-07T14:20:08Z",
        "lastEditedBy" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6f98311d00f083c1b980ed7434d2e9769fa921f",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +99,103 @@\t\tif err != nil {\n\t\t\t// we cannot write an error to the writer anymore as the Encode call was successful.\n\t\t\tutilruntime.HandleError(fmt.Errorf(\"apiserver was unable to close cleanly the response writer: %v\", err))\n\t\t}\n\t\treturn"
  },
  {
    "id" : "ad11063b-9fbd-4419-9faf-2f20d0bb3022",
    "prId" : 94589,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94589#pullrequestreview-483671444",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc52e387-00dc-44de-99da-dbe98379e4a0",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "change looks good otherwise.",
        "createdAt" : "2020-09-07T12:03:22Z",
        "updatedAt" : "2020-09-07T14:07:40Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "2182d02f-91ed-4f6f-a4b4-e7d336b85fc7",
        "parentId" : "cc52e387-00dc-44de-99da-dbe98379e4a0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "The whole point of &deferredResponseWriter was to be able to write useful errors to the response if there was an encoding error. We should be able to determine if the error came from writing to the underlying http writer, and if not, we should continue trying to write an error to the http response\r\n\r\n/hold",
        "createdAt" : "2020-09-07T17:12:59Z",
        "updatedAt" : "2020-09-07T17:13:00Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "1938ab1d-0745-41ed-a51f-3a78f117c37d",
        "parentId" : "cc52e387-00dc-44de-99da-dbe98379e4a0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "edit: never mind, misread the error flowâ€¦ was thrown off by the non-standard ` if err == nil` early return pattern\r\n\r\n/hold cancel",
        "createdAt" : "2020-09-07T17:16:13Z",
        "updatedAt" : "2020-09-07T17:16:13Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6f98311d00f083c1b980ed7434d2e9769fa921f",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +101,105 @@\t\t\tutilruntime.HandleError(fmt.Errorf(\"apiserver was unable to close cleanly the response writer: %v\", err))\n\t\t}\n\t\treturn\n\t}\n"
  },
  {
    "id" : "bd46beea-9df9-429e-8758-b9dc59789c32",
    "prId" : 77449,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77449#pullrequestreview-259291960",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f61d56c1-b58b-4099-9c05-cde5ae6e24a9",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "How do we know that it was JSON?",
        "createdAt" : "2019-07-08T06:25:08Z",
        "updatedAt" : "2019-07-08T07:07:18Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "d1f4785a-7e5d-4c6a-9e44-febe85e878cc",
        "parentId" : "f61d56c1-b58b-4099-9c05-cde5ae6e24a9",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I see it's moved from a different place, but if I'm not missing something it would make sense to fix this comment if you're touching this code.",
        "createdAt" : "2019-07-08T06:28:03Z",
        "updatedAt" : "2019-07-08T07:07:18Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "f0635a20-8cf6-4c73-9ae2-d68f8576b6fc",
        "parentId" : "f61d56c1-b58b-4099-9c05-cde5ae6e24a9",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "If encode fails, the response is always JSON.  The assumption being that encode will not fail (and thus exit early) above.  If encode fails, we just spit out what we have.",
        "createdAt" : "2019-07-08T22:19:31Z",
        "updatedAt" : "2019-07-08T22:19:32Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "4df6adef-71a4-4196-9c97-c721eaf01133",
        "parentId" : "f61d56c1-b58b-4099-9c05-cde5ae6e24a9",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "ok - that makes sense now",
        "createdAt" : "2019-07-09T06:32:17Z",
        "updatedAt" : "2019-07-09T06:34:40Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ed2b9875d0498b5c577095075bda341e96fcec2",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +103,107 @@\n\t// make a best effort to write the object if a failure is detected\n\tutilruntime.HandleError(fmt.Errorf(\"apiserver was unable to write a JSON response: %v\", err))\n\tstatus := ErrorToAPIStatus(err)\n\tcandidateStatusCode := int(status.Code)"
  },
  {
    "id" : "f3c02034-95d1-47fa-8442-7dd7fa8dc174",
    "prId" : 77449,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77449#pullrequestreview-259291960",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9be3fa6f-3007-4ab6-b866-06cae6457521",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "We probably want to check it as a first thing in this method (to avoid unnecessary work otherwise).",
        "createdAt" : "2019-07-08T06:29:11Z",
        "updatedAt" : "2019-07-08T07:07:18Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "8e6be446-97ee-43d4-bf77-4c387b0f6850",
        "parentId" : "9be3fa6f-3007-4ab6-b866-06cae6457521",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I had it this way because the feature gate check is probably more expensive than the map lookup.  But it could be the other way if you think it's easier to read (I think it would perform *slightly* worse).",
        "createdAt" : "2019-07-08T22:17:53Z",
        "updatedAt" : "2019-07-08T22:17:54Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "16bfc595-6db8-4c2c-b81b-e44e41e63f7b",
        "parentId" : "9be3fa6f-3007-4ab6-b866-06cae6457521",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I don't have strong opinion - we can change that later too if needed.",
        "createdAt" : "2019-07-09T06:32:59Z",
        "updatedAt" : "2019-07-09T06:34:40Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ed2b9875d0498b5c577095075bda341e96fcec2",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +148,152 @@\t\treturn \"\"\n\t}\n\tif !utilfeature.DefaultFeatureGate.Enabled(features.APIResponseCompression) {\n\t\treturn \"\"\n\t}"
  },
  {
    "id" : "a1fbdb62-2a1a-426c-aecb-beb3691708bd",
    "prId" : 77449,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77449#pullrequestreview-259638793",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a65646f5-1f48-49bc-b7b8-e4ced188a566",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Should an error be returned here ?\r\n\r\nIn deferredResponseWriter#Write, the error can be returned to caller.\r\n\r\nSee #79943",
        "createdAt" : "2019-07-09T17:04:35Z",
        "updatedAt" : "2019-07-09T17:18:43Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ed2b9875d0498b5c577095075bda341e96fcec2",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +125,129 @@\t\tgw, err := gzip.NewWriterLevel(nil, defaultGzipContentEncodingLevel)\n\t\tif err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t\treturn gw"
  },
  {
    "id" : "308b18ee-bebd-4cb7-b4a0-0023753cf530",
    "prId" : 55704,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55704#pullrequestreview-79619561",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df6de429-5a5c-4bac-81af-3a76327751a7",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "@smarterclayton when content negotiation fails, the original errors were getting hidden.  This won't be the content type the receiver wanted, but we're going to be sending them json either way, let's send them the json for the error that failed their request.",
        "createdAt" : "2017-11-14T13:16:33Z",
        "updatedAt" : "2017-11-28T11:52:45Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "a6577a73-f67a-4752-a240-fa4c99eda85d",
        "parentId" : "df6de429-5a5c-4bac-81af-3a76327751a7",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "That's how the spec tells us to do it.  Why should users be allowed to get a different error code here?",
        "createdAt" : "2017-11-28T19:03:32Z",
        "updatedAt" : "2017-11-28T19:03:32Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "7c83e736624d9861da44459269925e8a127f5a44",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +105,109 @@\tserializer, err := negotiation.NegotiateOutputSerializer(req, s)\n\tif err != nil {\n\t\t// if original statusCode was not successful we need to return the original error\n\t\t// we cannot hide it behind negotiation problems\n\t\tif statusCode < http.StatusOK || statusCode >= http.StatusBadRequest {"
  },
  {
    "id" : "02a0b874-959c-4805-b980-a95d06e60be4",
    "prId" : 55704,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55704#pullrequestreview-79619277",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9764930b-cfb4-4a68-afc9-e36a3b3ac285",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Use actual constants here (don't use http.StatusOK in a greater than or less than).  Also add a test case.",
        "createdAt" : "2017-11-28T19:02:40Z",
        "updatedAt" : "2017-11-28T19:02:40Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "7c83e736624d9861da44459269925e8a127f5a44",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +107,111 @@\t\t// if original statusCode was not successful we need to return the original error\n\t\t// we cannot hide it behind negotiation problems\n\t\tif statusCode < http.StatusOK || statusCode >= http.StatusBadRequest {\n\t\t\tWriteRawJSON(int(statusCode), object, w)\n\t\t\treturn"
  }
]