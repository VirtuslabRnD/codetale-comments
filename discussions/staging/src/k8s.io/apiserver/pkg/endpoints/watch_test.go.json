[
  {
    "id" : "734238c0-077c-4a7b-ad77-4fe4be890e05",
    "prId" : 93895,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93895#pullrequestreview-465320124",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98882386-31b3-4b1c-8a34-a3e201c8559f",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "suggest verifying watcher.IsStopped() here once the result chan has been closed",
        "createdAt" : "2020-08-11T18:25:08Z",
        "updatedAt" : "2020-08-11T18:34:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "50e8287e6df67428ab5871af530fb10f6eee19de",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +850,854 @@\t\t\tif opened {\n\t\t\t\tt.Errorf(\"Watcher received unexpected event\")\n\t\t\t}\n\t\t\tif !watcher.IsStopped() {\n\t\t\t\tt.Errorf(\"Watcher is not stopped\")"
  },
  {
    "id" : "9347a6f3-d3a9-467b-b38a-e134146ba239",
    "prId" : 85408,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85408#pullrequestreview-319495875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1bdf107-b04f-4186-a7b9-1ff5dc9935cf",
        "parentId" : null,
        "authorId" : "e43db36b-4d97-4af1-b3ab-37904831eff1",
        "body" : "perhaps add a comment here saying `// Close response without reading it to cause a cancel on the server`\r\n\r\nEDIT: Also, I am aware that this Github approval does not count as a k8s LGTM",
        "createdAt" : "2019-11-19T23:14:54Z",
        "updatedAt" : "2019-11-20T03:49:59Z",
        "lastEditedBy" : "e43db36b-4d97-4af1-b3ab-37904831eff1",
        "tags" : [
        ]
      },
      {
        "id" : "1b7189f6-f1c7-47ff-8be7-e9bdd4fb33b5",
        "parentId" : "c1bdf107-b04f-4186-a7b9-1ff5dc9935cf",
        "authorId" : "f3e672e5-b55c-4e3f-9443-b9abf25195da",
        "body" : "I have added comment, thanks\r\n\r\n",
        "createdAt" : "2019-11-20T03:52:06Z",
        "updatedAt" : "2019-11-20T03:52:06Z",
        "lastEditedBy" : "f3e672e5-b55c-4e3f-9443-b9abf25195da",
        "tags" : [
        ]
      }
    ],
    "commit" : "1daa08c5c8634af762b0352ff4a49bdef6924c5f",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +241,245 @@\n\t// Close response to cause a cancel on the server\n\tif err := response.Body.Close(); err != nil {\n\t\tt.Fatalf(\"Unexpected close client err: %v\", err)\n\t}"
  },
  {
    "id" : "18576529-e919-40af-a178-6f650242f2ef",
    "prId" : 84692,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84692#pullrequestreview-314634188",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87307d2a-25bd-4d92-87b7-be6cce38dfbd",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this looks to be testing something really different now... what changed so we couldn't check the error we previously did?",
        "createdAt" : "2019-11-08T04:53:22Z",
        "updatedAt" : "2019-11-11T02:30:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "69291400-fa11-4dbd-9f37-d2b018bae468",
        "parentId" : "87307d2a-25bd-4d92-87b7-be6cce38dfbd",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This is strictly better - we are now in the client library, as part of watch establishment, able to detect that whatever the client gave us is invalid.  This means you fail immediately upon watch establishment if you asked for something impossible, and the error is not eaten (this is really the entire change the PR is trying to result in - sane negotiation at the time the request is dispatched).  The commit containing only this test change has more description.",
        "createdAt" : "2019-11-10T18:55:28Z",
        "updatedAt" : "2019-11-11T02:30:50Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b780c64b89606f4e6b21f48fb9c305d5998b9e5",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +670,674 @@\t\tt.Fatal(err)\n\t}\n\tif err.Error() != \"no stream serializers registered for testcase/json\" {\n\t\tt.Fatalf(\"unexpected error: %v\", err)\n\t}"
  }
]