[
  {
    "id" : "8f734ed9-99a0-4bba-b03e-2cb896fdb131",
    "prId" : 74021,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74021#pullrequestreview-234064725",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48f5299e-6cff-4119-a4b9-de6549acadb9",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Can we move this to component-base with the rest of the feature gate code? There are several places we use this outside of the apiserver including some controllers and the gce_disks portions of the gce cloud provider. I feel it would be cleaner to keep the feature gate code in one place and minimize the dependencies which are pulled in when accessing features.",
        "createdAt" : "2019-05-03T17:10:39Z",
        "updatedAt" : "2019-05-08T14:13:11Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "77381251-47ce-4545-8a9c-5c79a4799303",
        "parentId" : "48f5299e-6cff-4119-a4b9-de6549acadb9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "hmm, see discussion at https://github.com/kubernetes/kubernetes/pull/74021#discussion_r257702497",
        "createdAt" : "2019-05-03T17:16:31Z",
        "updatedAt" : "2019-05-08T14:13:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e1e57f1e-96ff-4e79-81ae-2c49ae9195b3",
        "parentId" : "48f5299e-6cff-4119-a4b9-de6549acadb9",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "There was a comment on this previously https://github.com/kubernetes/kubernetes/pull/74021#discussion_r257702497. The `DefaultFeatureGate` is a global state that currently (sort of?) belongs to the apiserver. I think it may not make much sense to move it into `k8s.io/component-base` since what we add there may not apply to all components in the future. I don't have strong opinions on this though and happy to move it if it makes sense",
        "createdAt" : "2019-05-03T17:18:56Z",
        "updatedAt" : "2019-05-08T14:13:11Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "e53c34f5-3734-4a35-b1b3-fd9fe1b4476a",
        "parentId" : "48f5299e-6cff-4119-a4b9-de6549acadb9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "https://github.com/kubernetes/kubernetes/pull/77412 removed the need to do this for gce_disks' benefit",
        "createdAt" : "2019-05-06T16:09:32Z",
        "updatedAt" : "2019-05-08T14:13:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcad650bfe419753a94fb632903c6273fdcd0099",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +30,34 @@\t// DefaultFeatureGate is a shared global FeatureGate.\n\t// Top-level commands/options setup that needs to modify this feature gate should use DefaultMutableFeatureGate.\n\tDefaultFeatureGate featuregate.FeatureGate = DefaultMutableFeatureGate\n)"
  },
  {
    "id" : "a5b072a4-7a4f-4c7a-a8bb-e7de599cf747",
    "prId" : 52860,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52860#pullrequestreview-65336287",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ee2d57d-4f16-4df7-850e-e7cca28f5709",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "I wonder if we should just rename this to `setAlphaGates`.",
        "createdAt" : "2017-09-26T19:39:10Z",
        "updatedAt" : "2017-09-26T21:00:14Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "55692c52e1d6f3922bf4af2b6cbe2b0eef886fbd",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +100,104 @@}\n\nfunc setUnsetAlphaGates(known map[Feature]FeatureSpec, enabled map[Feature]bool, val bool) {\n\tfor k, v := range known {\n\t\tif v.PreRelease == Alpha {"
  },
  {
    "id" : "d359d9f6-a0f1-4e87-b74a-ac1c8a0b4c61",
    "prId" : 52860,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52860#pullrequestreview-66767659",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e300f1f0-35b3-4c0b-baaa-b41eb38db99a",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "It probably isn't necessary to copy `f.known` here, as neither `Set` nor any of the existing `specialFeatures` handlers mutate it. That said, if we stop copying it, a comment here and another near `specialFeatures` is probably a good idea.",
        "createdAt" : "2017-09-26T20:44:36Z",
        "updatedAt" : "2017-09-26T21:00:14Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "07fb30ad-5ab1-4a3f-82ec-f54eb0bbe0a7",
        "parentId" : "e300f1f0-35b3-4c0b-baaa-b41eb38db99a",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "This is true, but OTOh this should be called pretty rarely and in that case i prefer easier and more readable code that this micro-optimization.",
        "createdAt" : "2017-10-03T14:04:48Z",
        "updatedAt" : "2017-10-03T14:06:14Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "55692c52e1d6f3922bf4af2b6cbe2b0eef886fbd",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +142,146 @@\t// Copy existing state\n\tknown := map[Feature]FeatureSpec{}\n\tfor k, v := range f.known.Load().(map[Feature]FeatureSpec) {\n\t\tknown[k] = v\n\t}"
  },
  {
    "id" : "a6fee20d-1835-418f-ac99-623d6036ffda",
    "prId" : 51707,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51707#pullrequestreview-59876969",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c0d87c0-87b6-4f85-9806-25a408e4e9b2",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I strongly prefer the `defer` to unlock.  Some reason I can't?  I'm betting something else is trying to grab it underneath.  I really hate the golang sync library. ",
        "createdAt" : "2017-08-31T14:28:29Z",
        "updatedAt" : "2017-08-31T14:28:29Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "3c6615dc-972a-45b8-8c5e-cbd2268a4747",
        "parentId" : "6c0d87c0-87b6-4f85-9806-25a408e4e9b2",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "both KnownFeatures and the flag set up called later in the method make use of methods that RLock. Started to split into private methods I could call directly, but Set() is part of the interface pflag uses, so I couldn't",
        "createdAt" : "2017-08-31T14:28:57Z",
        "updatedAt" : "2017-08-31T14:30:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3546434b7252167b851a40a339d8ed2049ee5e5",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +215,219 @@\tf.lock.Lock()\n\tf.closed = true\n\tf.lock.Unlock()\n\n\tknown := f.KnownFeatures()"
  },
  {
    "id" : "593239dd-e617-4760-b9f7-0207b160dada",
    "prId" : 50638,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50638#pullrequestreview-56194390",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8c21b0d-4fe1-4233-9b70-e3353ceb76ba",
        "parentId" : null,
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "These functions are not generated in the docs because `featureGate` is private. Is there any harm in making it exported?\r\n\r\nOf course, if this is made exported, the name needs to be changed since `FeatureGate` already exists.",
        "createdAt" : "2017-08-14T20:33:12Z",
        "updatedAt" : "2017-08-14T20:58:25Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      }
    ],
    "commit" : "fea5a8bc8a7ef2f956d2b11cb54248ec9545ef15",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +186,190 @@\n// Enabled returns true if the key is enabled.\nfunc (f *featureGate) Enabled(key Feature) bool {\n\tdefaultValue := f.known[key].Default\n\tif f.enabled != nil {"
  }
]