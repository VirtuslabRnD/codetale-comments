[
  {
    "id" : "4f3ae97f-b06b-44dc-9a2b-279ea272c2a8",
    "prId" : 85192,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85192#pullrequestreview-316716697",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ef5e5a0-d87e-4e7f-862f-3e76609f1382",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "but does not -> and does not",
        "createdAt" : "2019-11-14T03:09:32Z",
        "updatedAt" : "2019-11-14T03:40:41Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "fde8522b-33f0-40ae-b8c4-1f95839b01d0",
        "parentId" : "8ef5e5a0-d87e-4e7f-862f-3e76609f1382",
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "I am surprised at this suggestion.  I thought \"but\" was good because it highlights the contrast with the normal behavior.  What is the thinking behind preferring \"and\"?",
        "createdAt" : "2019-11-14T04:13:52Z",
        "updatedAt" : "2019-11-14T04:13:52Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      },
      {
        "id" : "e7b9c248-58ce-4d0b-b1f4-624d826b3581",
        "parentId" : "8ef5e5a0-d87e-4e7f-862f-3e76609f1382",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Here is how I understand the two actions: draining implies not admitting any more request - otherwise the draining may never end.\r\nHence the 'and'",
        "createdAt" : "2019-11-14T04:18:44Z",
        "updatedAt" : "2019-11-14T04:19:44Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "af3fc4d0-f044-4fd9-8960-ee8f07af25db",
        "parentId" : "8ef5e5a0-d87e-4e7f-862f-3e76609f1382",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "\"but\" reads much more naturally. The draining is normal, but the admission is not.",
        "createdAt" : "2019-11-14T05:14:34Z",
        "updatedAt" : "2019-11-14T05:14:35Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "e10acc78dee5d90d93fc7bc0e76e97bc7bc0b3a3",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@\n\t// Quiesce controls whether the QueueSet is operating normally or is quiescing.\n\t// A quiescing QueueSet drains as normal but does not admit any\n\t// new requests. Passing a non-nil handler means the system should\n\t// be quiescing, a nil handler means the system should operate"
  },
  {
    "id" : "c08f49d8-0e7e-468e-864d-a9df04a67fd6",
    "prId" : 80956,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80956#pullrequestreview-270556379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79fbc8ae-55a5-432d-a142-c3764c2b61d7",
        "parentId" : null,
        "authorId" : "4b705187-d40c-4e59-968b-5be3a91465c5",
        "body" : "Is it better to have handSize as uint32?",
        "createdAt" : "2019-08-05T02:46:41Z",
        "updatedAt" : "2019-08-05T06:57:13Z",
        "lastEditedBy" : "4b705187-d40c-4e59-968b-5be3a91465c5",
        "tags" : [
        ]
      },
      {
        "id" : "4d5819a1-f004-42d0-9625-ae1b60a1e05a",
        "parentId" : "79fbc8ae-55a5-432d-a142-c3764c2b61d7",
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "`handSize` is ensured to be a positive int32 value by validation. so int32 or uint32 doesn't make a difference i think?",
        "createdAt" : "2019-08-05T03:58:50Z",
        "updatedAt" : "2019-08-05T06:57:13Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      },
      {
        "id" : "f3602e8f-e7fb-4ed7-a2f5-fc58106e1552",
        "parentId" : "79fbc8ae-55a5-432d-a142-c3764c2b61d7",
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#primitive-types says to avoid unsigned primitive types.  Given that the API object uses `int32`, it is more convenient to follow suit here.",
        "createdAt" : "2019-08-05T04:48:55Z",
        "updatedAt" : "2019-08-05T06:57:13Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a6f3cec03a8b0b4b2826de7d1a8ddb141f82f4e",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +73,77 @@\t// executing.  The hash value and hand size are used to do the\n\t// shuffle sharding.\n\tWait(hashValue uint64, handSize int32) (quiescent, execute bool, afterExecution func())\n}\n"
  }
]