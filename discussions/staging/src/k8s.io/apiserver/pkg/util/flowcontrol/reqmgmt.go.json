[
  {
    "id" : "22fb7c35-fe66-496d-869a-edc0715a523d",
    "prId" : 81707,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81707#pullrequestreview-277940985",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55c250fc-2605-4b13-add5-9cc6750eb65b",
        "parentId" : null,
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "I would put this after the observation of the execution duration, the `afterExecute()` is about other work not the request just finished.",
        "createdAt" : "2019-08-21T06:01:00Z",
        "updatedAt" : "2019-08-22T04:29:44Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      },
      {
        "id" : "d28b1c29-6b54-4df0-8890-b3401cd0ff66",
        "parentId" : "55c250fc-2605-4b13-add5-9cc6750eb65b",
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "done",
        "createdAt" : "2019-08-21T13:25:14Z",
        "updatedAt" : "2019-08-22T04:29:44Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      },
      {
        "id" : "a153a97f-150c-47b6-934d-9987d1133f7d",
        "parentId" : "55c250fc-2605-4b13-add5-9cc6750eb65b",
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "This has been fixed and can be marked resolved.",
        "createdAt" : "2019-08-21T17:17:38Z",
        "updatedAt" : "2019-08-22T04:29:45Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e700482c2058b773cd2e3df743118c92bef3e121",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +274,278 @@\t\treturn execute, func() {\n\t\t\tmetrics.ObserveExecutionDuration(matchingpriorityLevelName, fs.Name, time.Now().Sub(startExecutionTime))\n\t\t\tafterExecute()\n\t\t}\n\t}"
  },
  {
    "id" : "9b6422e7-0da7-4869-90a3-b702f02834d0",
    "prId" : 81224,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81224#pullrequestreview-274563709",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abe56837-854b-4317-a550-296d6fb28a75",
        "parentId" : null,
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "If we are going to allow `fs == nil` then there should be a flow identifier and a hash value computed in this case.",
        "createdAt" : "2019-08-13T04:23:30Z",
        "updatedAt" : "2019-08-16T04:36:31Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      },
      {
        "id" : "dca794b8-8a0c-48ce-b152-a6feae150299",
        "parentId" : "abe56837-854b-4317-a550-296d6fb28a75",
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "refactored, please take another look",
        "createdAt" : "2019-08-13T15:26:58Z",
        "updatedAt" : "2019-08-16T04:36:31Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      },
      {
        "id" : "168cc708-c172-4d8f-9b07-e6d6ddd1206f",
        "parentId" : "abe56837-854b-4317-a550-296d6fb28a75",
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "The KEP specifies different default handling for requests that should be exempt vs requests that should not be exempt.",
        "createdAt" : "2019-08-13T21:37:45Z",
        "updatedAt" : "2019-08-16T04:36:31Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a531c6ac594fac1835a231a83b4ec0b552bd2d6",
    "line" : 261,
    "diffHunk" : "@@ -1,1 +230,234 @@\t\tdefault: // reject\n\t\t\treturn false, func() {}\n\t\t}\n\n\t\t// 2. computing hash"
  },
  {
    "id" : "c5e706f8-c76b-42af-93f5-40e194ab180e",
    "prId" : 81224,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81224#pullrequestreview-274367895",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e6a2f29-ff33-4390-b55d-f2a91d618ec1",
        "parentId" : null,
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "OK for an initial implementation, but note that it is not necessary to concatenate the slices; instead we can make a Table and then call `crc64.Update` a few times (I suggest three: one for fsName, one for a separator, and one for fDistinguisher).",
        "createdAt" : "2019-08-13T04:32:29Z",
        "updatedAt" : "2019-08-16T04:36:31Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      },
      {
        "id" : "2418573a-07be-44d6-80d2-9875177a5a3d",
        "parentId" : "7e6a2f29-ff33-4390-b55d-f2a91d618ec1",
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "i will need to investigate into the differences between the two..",
        "createdAt" : "2019-08-13T15:27:47Z",
        "updatedAt" : "2019-08-16T04:36:31Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a531c6ac594fac1835a231a83b4ec0b552bd2d6",
    "line" : 315,
    "diffHunk" : "@@ -1,1 +278,282 @@// HashFlowID hashes the inputs into 64-bits\nfunc hashFlowID(fsName, fDistinguisher string) uint64 {\n\treturn crc64.Checksum([]byte(fsName+fDistinguisher), crc64.MakeTable(crc64.ECMA))\n}"
  },
  {
    "id" : "2b19a96c-7626-48df-b55f-a9199d6ec0c8",
    "prId" : 81224,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81224#pullrequestreview-275137975",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c0b96a2-0c44-4f7c-b7bc-0c887706790a",
        "parentId" : null,
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "The hash only needs to be computed if the chosen priority level is not exempt.",
        "createdAt" : "2019-08-14T21:09:42Z",
        "updatedAt" : "2019-08-16T04:36:31Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a531c6ac594fac1835a231a83b4ec0b552bd2d6",
    "line" : 263,
    "diffHunk" : "@@ -1,1 +232,236 @@\t\t}\n\n\t\t// 2. computing hash\n\t\tflowDistinguisher := requestDigest.ComputeFlowDistinguisher(matchingFlowDistinguisherMethod)\n\t\thashValue := hashFlowID(matchingflowSchemaName, flowDistinguisher)"
  },
  {
    "id" : "cd4c1368-cb8c-477a-926f-8df82776811a",
    "prId" : 81224,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81224#pullrequestreview-275137975",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ee1d7e5-8131-4c66-9250-218b947917dc",
        "parentId" : null,
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "That's too harsh, and is not what the KEP calls for.  The KEP says no requests are rejected due to lack of configuration objects, there is a default way to handle any given request.",
        "createdAt" : "2019-08-14T21:17:21Z",
        "updatedAt" : "2019-08-16T04:36:31Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a531c6ac594fac1835a231a83b4ec0b552bd2d6",
    "line" : 260,
    "diffHunk" : "@@ -1,1 +229,233 @@\t\t\tmatchingFlowDistinguisherMethod = fs.Spec.DistinguisherMethod\n\t\tdefault: // reject\n\t\t\treturn false, func() {}\n\t\t}\n"
  },
  {
    "id" : "38205669-7543-4d36-b9ed-f577ab5edbef",
    "prId" : 81224,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81224#pullrequestreview-276195209",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99e44286-3ac3-443e-a8a4-f7f0d136ea85",
        "parentId" : null,
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "This means that an apiserver constructed using this function, such as an aggregated apiserver, uses an instance of the priority and fairness filter that has no access to the default objects and can not behave reasonably until its config informers sync AND something else has created a sufficient set of configuration objects.  That is bad and contrary to the KEP.  The filter needs to give usable service as soon as the apiserver starts handling requests.",
        "createdAt" : "2019-08-14T23:13:51Z",
        "updatedAt" : "2019-08-16T04:36:31Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      },
      {
        "id" : "e2bcd88f-5024-4451-b6d4-19453b83cc71",
        "parentId" : "99e44286-3ac3-443e-a8a4-f7f0d136ea85",
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "In the merged revision of this PR, a requestManagementSystem has a `readyFunc` field that is used to delay when the config controller launches its worker until all the objects defined in the `preservingFlowSchemas` and `preservingPriorityLevels` parameters to `NewRequestManagementSystemWithPreservation` appear to actually exist.  Making those `preserving...` slices have length zero means that there is no such restraint on the config controller.  This did not solve the problem with behavior before the config informers sync, and does not add a solution for behavior after they sync.",
        "createdAt" : "2019-08-16T22:52:11Z",
        "updatedAt" : "2019-08-17T00:08:17Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a531c6ac594fac1835a231a83b4ec0b552bd2d6",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +140,144 @@\t\tserverConcurrencyLimit,\n\t\trequestWaitLimit,\n\t\tnil, nil)\n}\n"
  },
  {
    "id" : "a236d936-9895-4cd0-a09c-4798e4cf67cf",
    "prId" : 81224,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81224#pullrequestreview-275676683",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1517786-6fdb-42be-8dc6-75d0aee1e2dc",
        "parentId" : null,
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "This produces log entries like the following.\r\n```\r\nI0815 21:01:28.555153    5092 reqmgmt.go:241] Serving {0xc0082711e0 0xc003cc2640} without delay\r\n```\r\n--- which are pretty uninformative.  The more verbose log statements like\r\n```\r\n\t\t\tklog.V(6).Infof(\"Serving RequestInfo=%#+v, user.Info=%#+v after queuing\\n\", requestInfo, user)\r\n```\r\nproduce more informative log statements, like\r\n```\r\nI0815 21:01:28.555169    5092 reqmgmt.go:70] Serving RequestInfo=&request.RequestInfo{IsResourceRequest:true, Path:\"/apis/flowcontrol.apiserver.k8s.io/v1alpha1/prioritylevelconfigurations\", Verb:\"list\", APIPrefix:\"apis\", APIGroup:\"flowcontrol.apiserver.k8s.io\", APIVersion:\"v1alpha1\", Namespace:\"\", Resource:\"prioritylevelconfigurations\", Subresource:\"\", Name:\"\", Parts:[]string{\"prioritylevelconfigurations\"}}, user.Info=&user.DefaultInfo{Name:\"system:apiserver\", UID:\"0c86221d-db07-40dd-b150-9fa17227bbef\", Groups:[]string{\"system:masters\"}, Extra:map[string][]string(nil)} after queuing\r\n```",
        "createdAt" : "2019-08-15T21:20:46Z",
        "updatedAt" : "2019-08-16T04:36:31Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a531c6ac594fac1835a231a83b4ec0b552bd2d6",
    "line" : 270,
    "diffHunk" : "@@ -1,1 +239,243 @@\t\tps := rmState.priorityLevelStates[matchingpriorityLevelName]\n\t\tif ps.config.Exempt {\n\t\t\tklog.V(7).Infof(\"Serving %v without delay\", requestDigest)\n\t\t\treturn true, func() {}\n\t\t}"
  },
  {
    "id" : "4fa651df-b8dd-40f8-9075-dff7d178e615",
    "prId" : 81224,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81224#pullrequestreview-276195209",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b945fef8-cba4-4ebb-bb5a-ed692db0f95c",
        "parentId" : null,
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "This function is only used to delay when the config controller launches its queue worker.  It does nothing about preserving objects after that point in time.",
        "createdAt" : "2019-08-16T23:47:17Z",
        "updatedAt" : "2019-08-17T00:08:18Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a531c6ac594fac1835a231a83b4ec0b552bd2d6",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +105,109 @@\tflowcontrolClient rmclientv1alpha1.FlowcontrolV1alpha1Interface\n\n\treadyFunc func() bool\n\n\t// serverConcurrencyLimit is the limit on the server's total"
  },
  {
    "id" : "30564c19-1a3f-4650-8aaf-b79a9491c999",
    "prId" : 81224,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81224#pullrequestreview-276195209",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05f05022-69f0-4471-b80e-8af15851e316",
        "parentId" : null,
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "`else` the filter will reject all requests until the config controller has digested enough config objects.  That's not very good behavior.",
        "createdAt" : "2019-08-17T00:02:53Z",
        "updatedAt" : "2019-08-17T00:08:18Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a531c6ac594fac1835a231a83b4ec0b552bd2d6",
    "line" : 194,
    "diffHunk" : "@@ -1,1 +170,174 @@\t\t\tpreservingFlowSchemas,\n\t\t)\n\t}\n\treqMgmt.readyFunc = func() bool {\n\t\texistingFSNames, existingPLNames := sets.NewString(), sets.NewString()"
  }
]