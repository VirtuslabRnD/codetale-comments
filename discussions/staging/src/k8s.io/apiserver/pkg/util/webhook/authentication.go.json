[
  {
    "id" : "03856b59-7b15-4f1d-9a17-b9c46960cb4f",
    "prId" : 85168,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85168#pullrequestreview-327924341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6de95743-d4f4-4b6e-b16e-3e95ca63349f",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I think this makes sense because this traffic is for non-services and those should be hosted similar to authenticator and authorization webhooks.\r\n\r\ncc @cheftako for a second opinion.",
        "createdAt" : "2019-12-05T13:41:44Z",
        "updatedAt" : "2020-01-08T23:01:53Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "d5eae798-1fc3-4ed8-8015-473a97814fbe",
        "parentId" : "6de95743-d4f4-4b6e-b16e-3e95ca63349f",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Agreed",
        "createdAt" : "2019-12-05T23:44:20Z",
        "updatedAt" : "2020-01-08T23:01:53Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "1289bdaba41848c0d19892cc749798e540b56e8a",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +56,60 @@\n\t\t\t\tif egressSelector != nil {\n\t\t\t\t\tnetworkContext := egressselector.Master.AsNetworkContext()\n\t\t\t\t\tvar egressDialer utilnet.DialFunc\n\t\t\t\t\tegressDialer, err = egressSelector.Lookup(networkContext)"
  },
  {
    "id" : "e6cda444-cf3b-46f8-acd1-6e56ed694418",
    "prId" : 85168,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85168#pullrequestreview-327933966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5aeb837-18b7-414a-9b90-61887f6cdde5",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "And this choice makes sense to me for services.",
        "createdAt" : "2019-12-05T13:44:15Z",
        "updatedAt" : "2020-01-08T23:01:53Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "63b63548-e8d7-492c-b7ee-196792aff054",
        "parentId" : "d5aeb837-18b7-414a-9b90-61887f6cdde5",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Agreed. A little uncomfortable that our only authentication webhook options are running on the Kube API Server or running in the cluster. However that does not appear to be a new restriction.",
        "createdAt" : "2019-12-06T00:15:40Z",
        "updatedAt" : "2020-01-08T23:01:53Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "1289bdaba41848c0d19892cc749798e540b56e8a",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +78,82 @@\n\t\t\t\tif egressSelector != nil {\n\t\t\t\t\tnetworkContext := egressselector.Cluster.AsNetworkContext()\n\t\t\t\t\tvar egressDialer utilnet.DialFunc\n\t\t\t\t\tegressDialer, err = egressSelector.Lookup(networkContext)"
  },
  {
    "id" : "b01224a4-2f11-4827-b013-99666438a7e7",
    "prId" : 76919,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76919#pullrequestreview-230861168",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fafc26e1-fe71-4862-b5b2-7007a32854fc",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "any other webhooks need this as well? this was likely to have been copied/pasted",
        "createdAt" : "2019-04-23T02:35:21Z",
        "updatedAt" : "2019-04-23T02:35:22Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "32f8cdf0-d3d6-43fc-977c-3655ff025591",
        "parentId" : "fafc26e1-fe71-4862-b5b2-7007a32854fc",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "This looks to be the only spot this is copy pasted. It looks like it was copy pasted from client-go. I'll double check that this works as expected.",
        "createdAt" : "2019-04-25T20:14:03Z",
        "updatedAt" : "2019-04-25T20:14:04Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b45296661de1f12f441736ae44895ac30f320d4",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +197,201 @@\t\tconfig.Password = configAuthInfo.Password\n\t}\n\tif configAuthInfo.Exec != nil {\n\t\tconfig.ExecProvider = configAuthInfo.Exec.DeepCopy()\n\t}"
  },
  {
    "id" : "b981e6dd-bc56-44db-8494-22efa4c71fc5",
    "prId" : 70553,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70553#pullrequestreview-171199707",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d672188a-918d-4fcc-bd96-b2be9752e58e",
        "parentId" : null,
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "the hard-coding looks odd tho ðŸ˜¥but it should be another issue",
        "createdAt" : "2018-11-02T16:31:58Z",
        "updatedAt" : "2018-11-02T17:42:20Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      },
      {
        "id" : "186c997d-6a59-4601-bb18-3701b9b520a6",
        "parentId" : "d672188a-918d-4fcc-bd96-b2be9752e58e",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> the hard-coding looks odd tho but it should be another issue\r\n\r\nThe hardcoding is based on the idea that the kube apiserver (in that hardcoded location in a cluster), can be trusted with a token intended for the API.  Since SA tokens are auto-mounted and intended for the API, that host is safe to trust.",
        "createdAt" : "2018-11-02T17:18:02Z",
        "updatedAt" : "2018-11-02T17:42:20Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "0483c2d9-03ab-4089-bf06-caeb376699b8",
        "parentId" : "d672188a-918d-4fcc-bd96-b2be9752e58e",
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "then we shouldnt move these hardcoding (L44 also) into generic apiserver, amright? since it only applies to kube apiserver. i suppose we can put them into a `ResolveAuthenticationConfig` in which we defined how we inteprete svr-name/svc-name to rest config. wdyt?",
        "createdAt" : "2018-11-02T17:31:04Z",
        "updatedAt" : "2018-11-02T17:42:20Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      }
    ],
    "commit" : "d33f347ba8759d786d115cc60762f3e7e3f861d1",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +48,52 @@\t\t\t},\n\t\t\tClientConfigForServiceFunc: func(serviceName, serviceNamespace string) (*rest.Config, error) {\n\t\t\t\tif serviceName == \"kubernetes\" && serviceNamespace == corev1.NamespaceDefault {\n\t\t\t\t\treturn kubeapiserverClientConfig, nil\n\t\t\t\t}"
  }
]