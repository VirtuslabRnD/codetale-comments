[
  {
    "id" : "ef68c50a-b38d-48b9-82f4-d654489cf986",
    "prId" : 54823,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54823#pullrequestreview-75639450",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97d9e305-a4d4-4233-92bb-fbc8812527be",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Was this space trimming done before? If not, I prefer to avoid normalization since it limits expressable values in a generic flag var parser",
        "createdAt" : "2017-11-09T00:01:06Z",
        "updatedAt" : "2017-11-17T02:35:37Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "50c8a8a3-2045-4069-ba4b-48184e0fad55",
        "parentId" : "97d9e305-a4d4-4233-92bb-fbc8812527be",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "No, it wasn't. I was trying to be consistent with the ConfigurationMap shim. Wouldn't a user expect something like `--flag \"a < 1, b < 2\"` to produce `map[string]string{\"a\": \"1\", \"b\": \"2\"}`, rather than `map[string]string{\"a \": \" 1 \", \" b \": \" 2\"}`, where they don't target their intended keys, and values may be malformed depending on their interpretation? \r\n\r\nI understand that this prevents us from using prefix/postfix whitespace, but I'd say that none of our APIs should depend on prefix/postfix whitespace anyway, because it's very confusing to read and easy to mess up (is that arbitrary-width bit of nothingness one space or two?).",
        "createdAt" : "2017-11-09T19:06:43Z",
        "updatedAt" : "2017-11-17T02:35:37Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "1daad96b-6317-4481-9d05-d40ec867e0b0",
        "parentId" : "97d9e305-a4d4-4233-92bb-fbc8812527be",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I can buy that, and it becomes moot once config is specified via structured files anyway",
        "createdAt" : "2017-11-09T19:31:26Z",
        "updatedAt" : "2017-11-17T02:35:37Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "8086b61f-6ac3-4ece-b260-ed824c523d0e",
        "parentId" : "97d9e305-a4d4-4233-92bb-fbc8812527be",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Right, that too.",
        "createdAt" : "2017-11-10T01:08:48Z",
        "updatedAt" : "2017-11-17T02:35:37Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "617b49858fad83a72ce072356bb2808a259943c5",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +66,70 @@\t\t}\n\t\tk := strings.TrimSpace(arr[0])\n\t\tv := strings.TrimSpace(arr[1])\n\t\t(*m.Map)[k] = v\n\t}"
  }
]