[
  {
    "id" : "01fab2b4-e2db-4c3e-b25a-347c7c323bc3",
    "prId" : 62918,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62918#pullrequestreview-116720834",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "176c9f06-7f18-48e2-9706-50a39a43088f",
        "parentId" : null,
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Can the aggregated API server code reuse this Downloader? I know the downloader in the aggregation does more than this, so maybe you can refactor that a little to use this downloader. No need to do it in this PR though.",
        "createdAt" : "2018-05-01T21:33:44Z",
        "updatedAt" : "2018-05-01T22:43:45Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      },
      {
        "id" : "0c501fd3-64a1-4e47-b04e-343fb87d9d70",
        "parentId" : "176c9f06-7f18-48e2-9706-50a39a43088f",
        "authorId" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "body" : "Yes i definitely want to do that, I think it will be much easier to do once the aggregator no longer needs to retry with the \"/swagger.json\" endpoint. A comment in the code suggests that the retry will be removed in 1.11 so I think I should just wait for that. It would be possible to do before the retry is removed but I think it would be too risky of a change to try and lump in with the future server-side-apply PR",
        "createdAt" : "2018-05-01T22:19:07Z",
        "updatedAt" : "2018-05-01T22:43:45Z",
        "lastEditedBy" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "tags" : [
        ]
      }
    ],
    "commit" : "4331f974ae4293073d4a6c215a8d4c13650e33a6",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +44,48 @@// If the handler returns http.StatusNotModified then Download will not return the bytes, if it returns StatusOK\n// then the bytes will be returned along with the new etag. Otherwise it will return an error.\nfunc (d *handlerDownloader) Download(lastEtag string) (specBytes []byte, newEtag string, httpStatus int, err error) {\n\treq, err := http.NewRequest(\"GET\", d.path, nil)\n\tif err != nil {"
  },
  {
    "id" : "172b374e-531c-4000-8efd-76511f4de817",
    "prId" : 62918,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62918#pullrequestreview-116660348",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8443f66-fed8-489e-b5fe-038fd02d0f16",
        "parentId" : null,
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "If there is no Etag, we should fail here too? probably I am nit-picking on my own creation again :)",
        "createdAt" : "2018-05-01T21:39:17Z",
        "updatedAt" : "2018-05-01T22:43:45Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "4331f974ae4293073d4a6c215a8d4c13650e33a6",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +65,69 @@\tcase http.StatusOK:\n\t\tspecBytes = writer.Data\n\t\tnewEtag = writer.Header().Get(\"Etag\")\n\t\tif len(newEtag) == 0 {\n\t\t\treturn nil, \"\", 0, fmt.Errorf(\"An etag must be present in the response if http.StatusOK is returned\")"
  }
]