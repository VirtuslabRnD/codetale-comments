[
  {
    "id" : "fdac6abc-91b6-4e88-936f-d5b1784bb487",
    "prId" : 99759,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99759#pullrequestreview-604358455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a217ab2-2939-47af-8383-b7bc4cc12dce",
        "parentId" : null,
        "authorId" : "f4ac3f8f-7ffb-4966-8247-0d4dc4a5bca1",
        "body" : "Should we have a test in the client integration test for this case (where an extracted ac contains fewer fields than what that fieldManager had originally applied), since we call it out here explicitly?",
        "createdAt" : "2021-03-04T16:59:17Z",
        "updatedAt" : "2021-03-10T15:41:34Z",
        "lastEditedBy" : "f4ac3f8f-7ffb-4966-8247-0d4dc4a5bca1",
        "tags" : [
        ]
      },
      {
        "id" : "7516226a-ce3a-420f-854d-d0823747ba17",
        "parentId" : "0a217ab2-2939-47af-8383-b7bc4cc12dce",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "Yes, good catch. I'll add it.",
        "createdAt" : "2021-03-04T17:22:29Z",
        "updatedAt" : "2021-03-10T15:41:34Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5a98bba6144935279509ec4defbb120d387e3fb",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +328,332 @@// $.Struct|private$ must be a unmodified $.Struct|public$ API object that was retrieved from the Kubernetes API.\n// Extract$.ApplyConfig.Type|public$ provides a way to perform a extract/modify-in-place/apply workflow.\n// Note that an extracted apply configuration will contain fewer fields than what the fieldManager previously\n// applied if another fieldManager has updated or force applied any of the previously applied fields.\n// Experimental!"
  },
  {
    "id" : "16d68701-23dd-4451-9ac1-0392841ad520",
    "prId" : 99759,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99759#pullrequestreview-605459274",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "759ea5d1-0484-49c2-a519-3602281c4f0c",
        "parentId" : null,
        "authorId" : "f4ac3f8f-7ffb-4966-8247-0d4dc4a5bca1",
        "body" : "*It is possible",
        "createdAt" : "2021-03-05T17:44:59Z",
        "updatedAt" : "2021-03-10T15:41:34Z",
        "lastEditedBy" : "f4ac3f8f-7ffb-4966-8247-0d4dc4a5bca1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5a98bba6144935279509ec4defbb120d387e3fb",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +323,327 @@// $.Struct|private$. If no managedFields are found in $.Struct|private$ for fieldManager, a\n// $.ApplyConfig.ApplyConfiguration|public$ is returned with only the Name, Namespace (if applicable),\n// APIVersion and Kind populated. Is is possible that no managed fields were found for because other\n// field managers have taken ownership of all the fields previously owned by fieldManager, or because\n// the fieldManager never owned fields any fields."
  },
  {
    "id" : "b6efc4be-334b-4526-ada3-25a17bd9f36e",
    "prId" : 99012,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99012#pullrequestreview-603220103",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc5799ef-da6a-4f77-aa4b-d4322b2abce7",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I believe all these functions should give advice on whether they should be called multiple times or not, or what happens if they are?",
        "createdAt" : "2021-03-03T00:00:14Z",
        "updatedAt" : "2021-03-04T18:33:21Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "263ab0a8-b9db-406f-9ccb-c4af2c1da2ae",
        "parentId" : "cc5799ef-da6a-4f77-aa4b-d4322b2abce7",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "+1. For slices, I think I should change the behavior so that `WithElements(a, b).WithElements(c, d)` results in `[]{a, b, c, d}` since that seems to be more intuitive given that we're using the \"with\" prefix. Maps are a bit different since we don't use varargs, but I feel like they should be the same as for slices (append instead of overwriting).  For everything else If called multiple times, the field is set to the value of the last call\" seems appropriate?",
        "createdAt" : "2021-03-03T04:13:40Z",
        "updatedAt" : "2021-03-04T18:33:21Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "a06b2c65-6bfd-4d1b-9187-ef1ef72215b6",
        "parentId" : "cc5799ef-da6a-4f77-aa4b-d4322b2abce7",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "What I've gone with:\r\n\r\nMap:\r\n```go\r\n// WithLabels puts the entries into the Labels field in the declarative configuration\r\n// and returns the receiver, so that objects can be build by chaining \"With\" function invocations.\r\n// If called multiple times, the entries provided by each call will be put on the Labels field,\r\n// overwriting an existing map entries in Labels field with the same key.\r\nfunc (b *HorizontalPodAutoscalerApplyConfiguration) WithLabels(entries map[string]string) *HorizontalPodAutoscalerApplyConfiguration\r\n```\r\n\r\nSlice:\r\n\r\n```go\r\n// WithOwnerReferences adds the given value to the OwnerReferences field in the declarative configuration\r\n// and returns the receiver, so that objects can be build by chaining \"With\" function invocations.\r\n// If called multiple times, values provided by each call will be appended to the OwnerReferences field.\r\nfunc (b *DeploymentApplyConfiguration) WithOwnerReferences(values ...*v1.OwnerReferenceApplyConfiguration) *DeploymentApplyConfiguration\r\n```\r\n\r\nbasic field:\r\n\r\n```go\r\n// WithCreationTimestamp sets the CreationTimestamp field in the declarative configuration to the given value\r\n// and returns the receiver, so that objects can be built by chaining \"With\" function invocations.\r\n// If called multiple times, the CreationTimestamp field is set to the value of the last call.\r\nfunc (b *DeploymentApplyConfiguration) WithCreationTimestamp(value metav1.Time) *DeploymentApplyConfiguration\r\n",
        "createdAt" : "2021-03-03T04:53:15Z",
        "updatedAt" : "2021-03-04T18:33:21Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "3b121992-9205-458f-a489-845ec6d57044",
        "parentId" : "cc5799ef-da6a-4f77-aa4b-d4322b2abce7",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "That looks great-- but reminds me of my other question that I think I didn't write down, how do I intentionally delete something?",
        "createdAt" : "2021-03-03T18:31:49Z",
        "updatedAt" : "2021-03-04T18:33:22Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "86184be5f1fb8fcf0dfc581b1c104dc0804e8083",
    "line" : 210,
    "diffHunk" : "@@ -1,1 +208,212 @@\nfunc (g *applyConfigurationGenerator) generateMemberWith(sw *generator.SnippetWriter, memberParams memberParams) {\n\tsw.Do(\"// With$.Member.Name$ sets the $.Member.Name$ field in the declarative configuration to the given value\\n\", memberParams)\n\tsw.Do(\"// and returns the receiver, so that objects can be built by chaining \\\"With\\\" function invocations.\\n\", memberParams)\n\tsw.Do(\"// If called multiple times, the $.Member.Name$ field is set to the value of the last call.\\n\", memberParams)"
  }
]