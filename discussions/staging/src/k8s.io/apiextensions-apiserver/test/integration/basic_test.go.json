[
  {
    "id" : "d90978e2-8732-4cf4-8257-6462d0d34443",
    "prId" : 65140,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65140#pullrequestreview-129649629",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63ed91aa-43fc-4ebf-915b-b0786ef68878",
        "parentId" : null,
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : ":+1:",
        "createdAt" : "2018-06-18T16:54:26Z",
        "updatedAt" : "2018-06-18T16:54:27Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      }
    ],
    "commit" : "927d1b1045aa1f69e2ef054db5cf28668c7e026d",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +203,207 @@\t\tfor version2, noxuResourceClient2 := range noxuResourceClients {\n\t\t\tvar gottenNoxuInstance *unstructured.Unstructured\n\t\t\tif disabledVersions[version2] {\n\t\t\t\tgottenNoxuInstance = &unstructured.Unstructured{}\n\t\t\t\tgottenNoxuInstance.SetName(\"foo\")"
  },
  {
    "id" : "931c1b3c-4a6a-4777-aa9e-135c9240de25",
    "prId" : 64204,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64204#pullrequestreview-122908877",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88845be4-6eee-433b-b44a-dd4d4142a7b2",
        "parentId" : null,
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "just to make sure, this is the exact same code of `testSimpleVersionedCRUD`? I can skip reviewing it if it is :)",
        "createdAt" : "2018-05-23T23:49:14Z",
        "updatedAt" : "2018-05-24T10:00:21Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      },
      {
        "id" : "dd8273f6-6814-4bfa-88a1-bfbe00f8aa46",
        "parentId" : "88845be4-6eee-433b-b44a-dd4d4142a7b2",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "it is of course.",
        "createdAt" : "2018-05-24T09:20:37Z",
        "updatedAt" : "2018-05-24T10:00:21Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6d2668f28a2edc3fed1b01a985093bc004b43b1",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +81,85 @@}\n\nfunc testSimpleCRUD(t *testing.T, ns string, noxuDefinition *apiextensionsv1beta1.CustomResourceDefinition, dynamicClient dynamic.Interface) {\n\tnoxuResourceClients := map[string]dynamic.ResourceInterface{}\n\tnoxuWatchs := map[string]watch.Interface{}"
  },
  {
    "id" : "85525353-7dd9-474e-aba6-6b7e624a40e8",
    "prId" : 63619,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63619#pullrequestreview-119005874",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf727f38-eff7-47ac-aad8-d383eb00258c",
        "parentId" : null,
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "~~nit: `if err = ...; err != nil`~~\r\n\r\nMulti-line casing, so it makes sense as-is. :)",
        "createdAt" : "2018-05-10T07:51:43Z",
        "updatedAt" : "2018-05-11T16:21:34Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      }
    ],
    "commit" : "3900b69da003bf80312d8a377b381de9d93c073b",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +828,832 @@\n\t// make sure we don't get 405 Method Not Allowed from Patching CRD/status subresource\n\t_, err = apiExtensionClient.ApiextensionsV1beta1().CustomResourceDefinitions().\n\t\tPatch(noxuDefinition.Name, types.StrategicMergePatchType,\n\t\t\t[]byte(fmt.Sprintf(`{\"labels\":{\"test-label\":\"dummy\"}}`)),"
  },
  {
    "id" : "a41d395f-e770-49e1-838e-b04013f2dfd7",
    "prId" : 53345,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53345#pullrequestreview-67199603",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08007b08-b40e-416d-8fe3-ce308f355131",
        "parentId" : null,
        "authorId" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "body" : "Could you arrange for the objects to differ in a custom spec field, and select for that here? It would be good to test that it works for fields outside metadata.",
        "createdAt" : "2017-10-03T16:57:30Z",
        "updatedAt" : "2017-10-04T13:32:15Z",
        "lastEditedBy" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "tags" : [
        ]
      },
      {
        "id" : "be24ec93-86fe-4efa-a235-e21ac7ae8426",
        "parentId" : "08007b08-b40e-416d-8fe3-ce308f355131",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "That doesn't work. I believe it's because of https://github.com/kubernetes/kubernetes/blob/2bf7a20a542ac54ccb6c284aa0b01559bf02a43b/staging/src/k8s.io/apiextensions-apiserver/pkg/registry/customresource/strategy.go#L98-L109",
        "createdAt" : "2017-10-03T17:00:39Z",
        "updatedAt" : "2017-10-04T13:32:15Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "bcdf5e5c-cb5f-4ab6-b30b-d44ef1ea1342",
        "parentId" : "08007b08-b40e-416d-8fe3-ce308f355131",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "I could write some code that creates a `fields.Set` of every possible field leaf (excluding slices); e.g., if we have this:\r\n```yaml\r\na: b\r\nc: 1\r\nd:\r\n  - a\r\n  - b\r\ne:\r\n  f: g\r\n  h:\r\n    i: j\r\n```\r\nthe field set would be\r\n```yaml\r\na: b\r\nc: 1\r\ne.f: g\r\ne.h.i: j\r\n```",
        "createdAt" : "2017-10-03T17:46:33Z",
        "updatedAt" : "2017-10-04T13:32:15Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "88a6f0e3-9466-44c2-ae23-9d8a63d7d91d",
        "parentId" : "08007b08-b40e-416d-8fe3-ce308f355131",
        "authorId" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "body" : "I think you're right. I must have misremembered that it worked for other fields in my earlier experiment. Should we specify in the release note that CRD field selectors only support name and namespace?",
        "createdAt" : "2017-10-03T17:47:06Z",
        "updatedAt" : "2017-10-04T13:32:15Z",
        "lastEditedBy" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "tags" : [
        ]
      },
      {
        "id" : "177e44eb-d5b7-40fd-9bf7-dc9a41af3546",
        "parentId" : "08007b08-b40e-416d-8fe3-ce308f355131",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Sample code that works: https://gist.github.com/ncdc/edc1ed3abefa36d9650a524ebd5f3f8c",
        "createdAt" : "2017-10-03T17:51:17Z",
        "updatedAt" : "2017-10-04T13:32:15Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "84a844be-61fd-49eb-9169-dcea69f6d100",
        "parentId" : "08007b08-b40e-416d-8fe3-ce308f355131",
        "authorId" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "body" : "Would metadata.name and metadata.namespace solve the original concern that caused you to file #51046? If so, I'd rather not add the full field dump before anyone has asked for it, mainly because of the precedent set by other resources like Pod, which is very conservative in its field selector whitelist:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/659a68978265df1c48838a18c31016b9da095722/pkg/registry/core/pod/strategy.go#L240-L244\r\n\r\nIf the feature is ever requested, perhaps it would make more sense to let CRD authors decide the whitelist in the CRD spec.",
        "createdAt" : "2017-10-03T18:01:16Z",
        "updatedAt" : "2017-10-04T13:32:15Z",
        "lastEditedBy" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "tags" : [
        ]
      },
      {
        "id" : "fa5092e5-bbc8-4db7-bd0e-52ff8dcfa18c",
        "parentId" : "08007b08-b40e-416d-8fe3-ce308f355131",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "I don't 100% remember what I was doing when I filed that issue, but I'm pretty confident that being able to use metadata.name as a field selector for a custom resource would be sufficient for my immediate needs.\r\n\r\nI also assume that the sample code in my gist could have very negative performance implications, so I'm fine not pulling it in for now.\r\n\r\n+1 to finding a way to specify the whitelist in the CRD spec.",
        "createdAt" : "2017-10-03T18:29:00Z",
        "updatedAt" : "2017-10-04T13:32:15Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "7408bef7-f6ee-40c7-b406-3e8cac70691f",
        "parentId" : "08007b08-b40e-416d-8fe3-ce308f355131",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "I would love to be able to use arbitrary fields from a CR spec in a field selector. It's not clear to me whether there are any actual concerns/issues with allowing users to make queries using whatever field they want. Unfortunately, the metadata fields are useless in my case.",
        "createdAt" : "2017-10-03T22:04:07Z",
        "updatedAt" : "2017-10-04T13:32:15Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "65d720a0-c05f-4387-979b-9494d5a56ddd",
        "parentId" : "08007b08-b40e-416d-8fe3-ce308f355131",
        "authorId" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "body" : "@kargakis I don't have any concerns with the UX of allowing arbitrary fields; that was my plan when I thought all we needed to do was stop blocking it. However, it turns out we also have to recursively flatten the whole custom object into a map, for every object returned by a list, in order to make filtering work for arbitrary fields.\r\n\r\nThat seems extreme given how conservative other objects are with their supported field selectors. For example, Pod only picks out 3 fields from spec that you're allowed to use in fieldSelector.\r\n\r\nIf you have a use case for filtering on arbitrary fields, would you be ok with having to specify a whitelist in the CRD spec, so we don't have to export every field regardless of whether anyone wants it?\r\n\r\nWe could discuss that on a separate feature request issue. Either way I think we should go ahead and merge this fix for metadata.name, since that's important for watching single objects.",
        "createdAt" : "2017-10-03T22:22:01Z",
        "updatedAt" : "2017-10-04T13:32:15Z",
        "lastEditedBy" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "tags" : [
        ]
      },
      {
        "id" : "55677f40-6116-4429-ad73-b9399f660e76",
        "parentId" : "08007b08-b40e-416d-8fe3-ce308f355131",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Agreeing to go ahead with this PR before discussing abritrary keys in a follow-up.",
        "createdAt" : "2017-10-04T07:17:50Z",
        "updatedAt" : "2017-10-04T13:32:15Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "ddb9a705-30f4-4626-b6bb-f7cc93f7903e",
        "parentId" : "08007b08-b40e-416d-8fe3-ce308f355131",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "@enisoc yeah, a whitelist would be great to have. Please cc me one the new issue when one is made.",
        "createdAt" : "2017-10-04T07:34:02Z",
        "updatedAt" : "2017-10-04T13:32:15Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "5377a788-adb2-4b9e-a73c-5a6095b758f7",
        "parentId" : "08007b08-b40e-416d-8fe3-ce308f355131",
        "authorId" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "body" : "@kargakis I think it's better if you file the issue. I don't actually have any use case in mind for needing arbitrary field selectors, so I can't explain why the feature is being requested.",
        "createdAt" : "2017-10-04T19:33:41Z",
        "updatedAt" : "2017-10-04T19:33:41Z",
        "lastEditedBy" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "tags" : [
        ]
      },
      {
        "id" : "0e09bec4-f496-42ff-a5cc-f8bdb505f483",
        "parentId" : "08007b08-b40e-416d-8fe3-ce308f355131",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Opened https://github.com/kubernetes/kubernetes/issues/53459",
        "createdAt" : "2017-10-04T20:39:12Z",
        "updatedAt" : "2017-10-04T20:39:12Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "74b4db24898b51948271e94b21d468df007c5c58",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +287,291 @@\t}\n\n\tlistWithItem, err := noxuResourceClient.List(metav1.ListOptions{FieldSelector: \"metadata.name=foo\"})\n\tif err != nil {\n\t\tt.Fatal(err)"
  },
  {
    "id" : "bb0aa8d7-9eed-4912-a7b8-b22c0547ee55",
    "prId" : 53345,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53345#pullrequestreview-67031389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f30736b2-44b5-46b2-b886-1a0be280ee6e",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "is 5 seconds enough to avoid flakes? ",
        "createdAt" : "2017-10-04T07:17:04Z",
        "updatedAt" : "2017-10-04T13:32:15Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "ebb2926f-ad4a-4063-b41b-af3fe140c178",
        "parentId" : "f30736b2-44b5-46b2-b886-1a0be280ee6e",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Perhaps not, but this is not net new (I copied an existing test)",
        "createdAt" : "2017-10-04T11:21:45Z",
        "updatedAt" : "2017-10-04T13:32:15Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "74b4db24898b51948271e94b21d468df007c5c58",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +339,343 @@\n\tcase <-time.After(5 * time.Second):\n\t\tt.Errorf(\"missing watch event\")\n\t}\n}"
  }
]