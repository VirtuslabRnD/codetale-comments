[
  {
    "id" : "b3846202-03ac-4b1d-a11c-0919a2b5a573",
    "prId" : 103248,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103248#pullrequestreview-694777294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8306fbc0-049e-4ede-a423-48359aee44a9",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "looks good... also add a `default:` case that errors to catch any other ineffective loop values",
        "createdAt" : "2021-06-28T15:18:55Z",
        "updatedAt" : "2021-06-28T15:18:55Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "79615c2b-ac37-4514-a00d-5907327e9925",
        "parentId" : "8306fbc0-049e-4ede-a423-48359aee44a9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "same issue exists below with with subresource looping over `udpate`... add the default cases to the switch statements there as well",
        "createdAt" : "2021-06-28T15:19:40Z",
        "updatedAt" : "2021-06-28T15:19:40Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a5881e15-0dc1-4d9b-af0b-7fc228bf6423",
        "parentId" : "8306fbc0-049e-4ede-a423-48359aee44a9",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "done",
        "createdAt" : "2021-06-29T09:03:45Z",
        "updatedAt" : "2021-06-29T09:03:45Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "903d76f558ebb8909fdacfe1fe63e8197f485435",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +697,701 @@\t\t\t\tcase \"patch\":\n\t\t\t\t\t_, err = clients[\"v1beta2\"].Patch(context.TODO(), obj.GetName(), types.MergePatchType, []byte(`{\"metadata\":{\"annotations\":{\"patch\":\"true\"}}}`), metav1.PatchOptions{})\n\t\t\t\tcase \"delete\":\n\t\t\t\t\terr = clients[\"v1beta2\"].Delete(context.TODO(), obj.GetName(), metav1.DeleteOptions{})\n\t\t\t\tcase \"deletecollection\":"
  },
  {
    "id" : "f69980f5-c04f-4415-954f-948813ec917b",
    "prId" : 77868,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77868#pullrequestreview-242321207",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "326024a5-6d3f-424f-afdb-48e073c2f38c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "naming the subtests `mixed-<version>` or `served-<version>`, etc, would make it possible to tell which test failed by the name. would suggest tweaking this in a follow-up, this PR looks reasonable to merge as is and would like to unblock.",
        "createdAt" : "2019-05-27T14:29:59Z",
        "updatedAt" : "2019-05-27T14:34:45Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "cf1bac14-b3fb-45a3-b8aa-cfe64de87b04",
        "parentId" : "326024a5-6d3f-424f-afdb-48e073c2f38c",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "yes, was near to change that as well.",
        "createdAt" : "2019-05-27T15:12:51Z",
        "updatedAt" : "2019-05-27T15:12:51Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee4f1847f5cd5199685aed66cee6ba394d4b2d25",
    "line" : 173,
    "diffHunk" : "@@ -1,1 +217,221 @@\t\t// Ensure copies of an object have the same fields and values at each custom resource definition version regardless of storage version\n\t\tfor clientVersion, client := range clients {\n\t\t\tt.Run(clientVersion, func(t *testing.T) {\n\t\t\t\to1, err := client.Get(objNames[0], metav1.GetOptions{})\n\t\t\t\tif err != nil {"
  },
  {
    "id" : "2f2df533-9ba4-421f-a13e-d7ba33f17e9b",
    "prId" : 77868,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77868#pullrequestreview-242303978",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42d07c05-d2ec-4792-97fd-ca19b86b3bc5",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this gets used as the test name and should be more succinct (for use with -run, etc). suggest `nontrivial-converted-<version>`. (include in a follow-up PR)",
        "createdAt" : "2019-05-27T14:31:17Z",
        "updatedAt" : "2019-05-27T14:34:45Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee4f1847f5cd5199685aed66cee6ba394d4b2d25",
    "line" : 226,
    "diffHunk" : "@@ -1,1 +263,267 @@\n\tfor _, createVersion := range ctc.crd.Spec.Versions {\n\t\tt.Run(fmt.Sprintf(\"getting objects created as %s\", createVersion.Name), func(t *testing.T) {\n\t\t\tname := \"converted-\" + createVersion.Name\n\t\t\tclient := ctc.versionedClient(ns, createVersion.Name)"
  },
  {
    "id" : "5ce037c4-0a23-4f6f-8375-fcfc50a76d4f",
    "prId" : 77868,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77868#pullrequestreview-242303978",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c94a2dd-9f3d-4585-9189-9c7293fb8335",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "suggest `nontrivial-converted-list-<version>`. (include in a follow-up PR)",
        "createdAt" : "2019-05-27T14:31:51Z",
        "updatedAt" : "2019-05-27T14:34:45Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee4f1847f5cd5199685aed66cee6ba394d4b2d25",
    "line" : 273,
    "diffHunk" : "@@ -1,1 +296,300 @@\n\tfor _, listVersion := range ctc.crd.Spec.Versions {\n\t\tt.Run(fmt.Sprintf(\"listing objects as %s\", listVersion.Name), func(t *testing.T) {\n\t\t\tclient := ctc.versionedClient(ns, listVersion.Name)\n\t\t\tobj, err := client.List(metav1.ListOptions{})"
  },
  {
    "id" : "b2cf105e-4174-4e9d-ad67-2a211cffb282",
    "prId" : 77558,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77558#pullrequestreview-243232759",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6c0e06d-b11b-4878-937b-e8a06699211f",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "@liggitt added this: defaulting should happen in the request version when entering the request pipeline, and for the storage version when reading from etcd.",
        "createdAt" : "2019-05-29T12:46:18Z",
        "updatedAt" : "2019-05-29T13:04:51Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbd192041d958cbe57f12e9d1c107798c30831be",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +536,540 @@}\n\nfunc validateDefaulting(t *testing.T, ctc *conversionTestContext) {\n\tif _, defaulting := ctc.crd.Spec.Versions[0].Schema.OpenAPIV3Schema.Properties[\"defaults\"]; !defaulting {\n\t\treturn"
  }
]