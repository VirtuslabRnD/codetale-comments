[
  {
    "id" : "0b7402e5-bc72-4a01-a403-9ce31fce34e4",
    "prId" : 77354,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77354#pullrequestreview-281574296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c6a603a-8610-4452-93de-2fb4a53af377",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "this only is permitted for  `type: array`? Better refer to that explicitly (and add validation as noted elsewhere already).",
        "createdAt" : "2019-08-26T18:46:48Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "bfd36d2f-3f1c-49e5-b5f0-3158223462a1",
        "parentId" : "7c6a603a-8610-4452-93de-2fb4a53af377",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "nit: still outstanding?",
        "createdAt" : "2019-08-29T16:22:26Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7303df0b2161600c47f49034e120fa2065ef539c",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +103,107 @@\n\t// x-kubernetes-list-type annotates an array to further describe its topology.\n\t// This extension must only be used on lists and may have 3 possible values:\n\t//\n\t// 1) `atomic`: the list is treated as a single entity, like a scalar."
  },
  {
    "id" : "436af0c3-982a-499a-a4ed-be50674bcc32",
    "prId" : 77354,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77354#pullrequestreview-281807267",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07a53414-81e5-4acb-8452-fd39d64133bd",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I expected to see validation that made sure values specified here were also defined as scalar properties in the schema.",
        "createdAt" : "2019-08-29T16:39:19Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "436719ac-b025-4d81-ad19-99e97526ea71",
        "parentId" : "07a53414-81e5-4acb-8452-fd39d64133bd",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "how do we handle computing the key for an object if one of these attributes is not defined for it? do we default to null/\"\" or should we also validate that the specified key is a required property in the schema?",
        "createdAt" : "2019-08-29T16:40:28Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "2c9a9319-d2fc-4e67-b29c-5c4e2feb0510",
        "parentId" : "07a53414-81e5-4acb-8452-fd39d64133bd",
        "authorId" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "body" : "These keys are defaulted to null/\"\" right now. In the future we plan to also support defaulting for some of these keys (like the containerPort / protocol example from the built in apis)\r\n\r\nI'll add validation for these keys having scalar type values",
        "createdAt" : "2019-08-29T19:48:35Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "tags" : [
        ]
      },
      {
        "id" : "182df57c-8a63-4510-9aba-7652852bdc90",
        "parentId" : "07a53414-81e5-4acb-8452-fd39d64133bd",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : ">> how do we handle computing the key for an object if one of these attributes is not defined for it? do we default to null/\"\"\r\n>\r\n> These keys are defaulted to null/\"\" right now\r\n\r\nWhat happens if there's a default value for a field (e.g. `protocol` defaulting to \"TCP\") and the user doesn't specify it? Does the merge key get computed with `protocol:\"\"` or `protocol:\"TCP\"`? We need a test to verify SSA interacts with CRD defaults the same way as built-in resources, since the handling chain is so different.",
        "createdAt" : "2019-08-30T03:23:28Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7303df0b2161600c47f49034e120fa2065ef539c",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +97,101 @@\t// This tag MUST only be used on lists that have the \"x-kubernetes-list-type\"\n\t// extension set to \"map\". Also, the values specified for this attribute must\n\t// be a scalar typed field of the child structure (no nesting is supported).\n\t//\n\t// +optional"
  },
  {
    "id" : "d5987b06-e558-4669-b487-d1f0734a9c14",
    "prId" : 65256,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65256#pullrequestreview-130325093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be5b63d6-d414-4c31-85d1-46ba1620d0d5",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "what is the slice for? Multple types with quantors don't make much sense.",
        "createdAt" : "2018-06-20T08:27:54Z",
        "updatedAt" : "2018-06-20T20:22:31Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "4066892a-98c7-4425-ad83-0aeb4151e478",
        "parentId" : "be5b63d6-d414-4c31-85d1-46ba1620d0d5",
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "> what is the slice for? \r\n\r\ngo-openapi treats `type` as a slice because json schema treats type as a slice.\r\n\r\nOpenAPI (v2 and v3), however, treats `type` as a string.\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/27c327cd33db8c91f1c6ad6c701b0457c780bce2/vendor/github.com/go-openapi/spec/schema.go#L211\r\n\r\nkube-openapi uses go-openapi and hence needs `[]string{}`\r\n\r\n>  Multple types with quantors don't make much sense.\r\n\r\nIn our `JSONSchemaProps`, we treat it as a string:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/27c327cd33db8c91f1c6ad6c701b0457c780bce2/staging/src/k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1beta1/types_jsonschema.go#L25\r\n\r\n",
        "createdAt" : "2018-06-20T10:10:18Z",
        "updatedAt" : "2018-06-20T20:22:31Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      }
    ],
    "commit" : "f78230881c53d57530ab273fe5cba080342e7302",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +69,73 @@func (_ JSON) OpenAPISchemaType() []string {\n\t// TODO: return actual types when anyOf is supported\n\treturn []string{}\n}\n"
  }
]