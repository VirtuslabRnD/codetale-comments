[
  {
    "id" : "a6cfb4ad-2acf-4b5e-a419-84c7e784375c",
    "prId" : 78234,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78234#pullrequestreview-241897703",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ae83513-5476-434d-8615-8e988479c086",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "the text misses that the path must be under status or spec.",
        "createdAt" : "2019-05-24T08:59:12Z",
        "updatedAt" : "2019-05-27T20:20:34Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "c940b9e6-b6fc-4382-b757-549b3a0a46b9",
        "parentId" : "5ae83513-5476-434d-8615-8e988479c086",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "fixed. Thanks",
        "createdAt" : "2019-05-24T18:52:39Z",
        "updatedAt" : "2019-05-27T20:20:34Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "63e2bb56886e5361986163c91677705f9f81f33a",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +417,421 @@\t// The field pointed by this JSON path must be a string field (not a complex selector struct)\n\t// which contains a serialized label selector in string form.\n\t// More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource\n\t// If there is no value under the given path in the CustomResource, the status label selector value in the /scale\n\t// subresource will default to the empty string."
  },
  {
    "id" : "b8d99058-420d-4070-b1fd-fc80e7bbfa48",
    "prId" : 67795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67795#pullrequestreview-151285246",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a473419d-1538-4685-b2e4-700f75f41da2",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This is a bizarre requirement that we should fix in the next version everywhere (IMO).",
        "createdAt" : "2018-08-30T21:08:01Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "66c3fcde-6cbe-4998-b1bc-2291ef91ebd6",
        "parentId" : "a473419d-1538-4685-b2e4-700f75f41da2",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "(not asking for a change now since our other webhooks do this, too.)",
        "createdAt" : "2018-08-30T21:08:27Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "5c46c78e-a2be-41a4-84c3-e4bf3698f59e",
        "parentId" : "a473419d-1538-4685-b2e4-700f75f41da2",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Our long running discussion. +1 for bizarre.",
        "createdAt" : "2018-08-31T07:32:09Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "e27096cdb468ace668f4f333e9acb46daf33df3f",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +125,129 @@\t// If the webhook is running within the cluster, then you should use `service`.\n\t//\n\t// Port 443 will be used if it is open, otherwise it is an error.\n\t//\n\t// +optional"
  },
  {
    "id" : "ac4375e0-1a04-4e73-a922-a12eb24c23cb",
    "prId" : 67795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67795#pullrequestreview-151429246",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a46a6776-35f0-4e22-bb03-4378f7fd1248",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "the Godoc shows up in api docs later. Wondering whether you should refer to the string literal `None` instead. Please compare with constants in other types.go files.",
        "createdAt" : "2018-08-31T07:26:34Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "5cccbe4c-f100-4bab-b8b8-4f62b986a872",
        "parentId" : "a46a6776-35f0-4e22-bb03-4378f7fd1248",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Example:https://github.com/kubernetes/kubernetes/blob/ae2edc439e54fef7182b9e9c51aa7369cb32d567/pkg/apis/apps/types.go#L54\r\nLook like the name is used not the string value.",
        "createdAt" : "2018-08-31T14:51:57Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "e27096cdb468ace668f4f333e9acb46daf33df3f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +28,32 @@const (\n\t// NoneConverter is a converter that only sets apiversion of the CR and leave everything else unchanged.\n\tNoneConverter ConversionStrategyType = \"None\"\n\t// WebhookConverter is a converter that calls to an external webhook to convert the CR.\n\tWebhookConverter ConversionStrategyType = \"Webhook\""
  },
  {
    "id" : "152cb251-f13f-4d45-8d04-254a2c31da63",
    "prId" : 67795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67795#pullrequestreview-151470157",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd53b12c-e476-49a1-9e9f-22aa3755ec8a",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "depends on the setup. If it runs in a pod, why not. I would not go into so much detail here. Just say that it is resolved within the kube-apiserver process.",
        "createdAt" : "2018-08-31T07:29:40Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "b1c17fe1-8368-4acb-bf4d-2d815741ccbe",
        "parentId" : "bd53b12c-e476-49a1-9e9f-22aa3755ec8a",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Should we have different comments here and in AdmissionWebhooks? These are the same things, I prefer to fix both later if we find any problem here.",
        "createdAt" : "2018-08-31T14:53:44Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      },
      {
        "id" : "9c865977-31c4-4bfb-8d5e-a5fc03ce1f75",
        "parentId" : "bd53b12c-e476-49a1-9e9f-22aa3755ec8a",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "The commentary is accurate, please don't change it. We do not require apiservers to operate in an environment that will respond to kubernetes specific DNS queries--that would create a subtle runtime circular dependency.",
        "createdAt" : "2018-08-31T16:41:45Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "e27096cdb468ace668f4f333e9acb46daf33df3f",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +97,101 @@\t// The `host` should not refer to a service running in the cluster; use\n\t// the `service` field instead. The host might be resolved via external\n\t// DNS in some apiservers (e.g., `kube-apiserver` cannot resolve\n\t// in-cluster DNS as that would be a layering violation). `host` may\n\t// also be an IP address."
  },
  {
    "id" : "2ca43947-956e-4481-bbde-2d4e41bedc13",
    "prId" : 67795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67795#pullrequestreview-151470749",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd590c0b-0b1c-4b2f-a6fd-ee8fb2a8fc20",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "this depends again on the setup. localhost is totally valid, but it is resolved within kube-apiserver, with all consequences this has.",
        "createdAt" : "2018-08-31T07:30:16Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "943ad754-dc5a-458b-81ea-81f61af4f144",
        "parentId" : "bd590c0b-0b1c-4b2f-a6fd-ee8fb2a8fc20",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "ditto my previous comment,.",
        "createdAt" : "2018-08-31T14:54:02Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      },
      {
        "id" : "d1d09b17-4094-4ca2-b01f-4aa573a2519a",
        "parentId" : "bd590c0b-0b1c-4b2f-a6fd-ee8fb2a8fc20",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This sentence is adequately qualified--the very next clause is \"unless you take great care...\"; the message here might be non-obvious to potential operators of webhooks, so I think it's important to leave the wording as is.",
        "createdAt" : "2018-08-31T16:43:40Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "e27096cdb468ace668f4f333e9acb46daf33df3f",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +101,105 @@\t// also be an IP address.\n\t//\n\t// Please note that using `localhost` or `127.0.0.1` as a `host` is\n\t// risky unless you take great care to run this webhook on all hosts\n\t// which run an apiserver which might need to make calls to this"
  },
  {
    "id" : "bce77256-85ac-44c1-b701-b733a6598caf",
    "prId" : 67795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67795#pullrequestreview-152431589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ac45192-8d27-42df-8365-c8c24d1871c8",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "above you say that the scheme is optional, not it is not.",
        "createdAt" : "2018-08-31T07:30:42Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "5669d171-8578-4938-b360-7597c0c5ec3b",
        "parentId" : "6ac45192-8d27-42df-8365-c8c24d1871c8",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Is it validated?",
        "createdAt" : "2018-08-31T07:31:27Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "c5e0d697-9547-4e85-85a3-896f50879fcc",
        "parentId" : "6ac45192-8d27-42df-8365-c8c24d1871c8",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "admission webhooks do validate it.\r\n\r\nLet's check this in as-is and fix the documentation for this and the admission webhooks in a followup.",
        "createdAt" : "2018-08-31T16:45:26Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "5d13071f-d274-4e24-8770-07545d39af2d",
        "parentId" : "6ac45192-8d27-42df-8365-c8c24d1871c8",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Just remove the `[]` around the scheme in the url syntax above and it is fine.",
        "createdAt" : "2018-09-05T10:31:21Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "e27096cdb468ace668f4f333e9acb46daf33df3f",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +107,111 @@\t// to turn up in a new cluster.\n\t//\n\t// The scheme must be \"https\"; the URL must begin with \"https://\".\n\t//\n\t// A path is optional, and if present may be any string permissible in"
  },
  {
    "id" : "ce0beb52-23e7-4d25-8076-c0265fdba6f0",
    "prId" : 67795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67795#pullrequestreview-151471695",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "026d2bc6-232e-4a32-89d7-35cd89f3b2c7",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "above you say that the path is non-optional, now it is optional.",
        "createdAt" : "2018-08-31T07:31:00Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "ab1477aa-9c41-4f28-868c-95dd074ca475",
        "parentId" : "026d2bc6-232e-4a32-89d7-35cd89f3b2c7",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This doesn't seem like a big deal to me, since \"\" is a valid path... If we want to clarify, a follow up is better so that it can fix all webhook specs at once.",
        "createdAt" : "2018-08-31T16:46:38Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "e27096cdb468ace668f4f333e9acb46daf33df3f",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +109,113 @@\t// The scheme must be \"https\"; the URL must begin with \"https://\".\n\t//\n\t// A path is optional, and if present may be any string permissible in\n\t// a URL. You may use the path to pass an arbitrary string to the\n\t// webhook, for example, a cluster identifier."
  },
  {
    "id" : "c69e79cb-bf61-4f5b-a775-537ff32306dd",
    "prId" : 67795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67795#pullrequestreview-170449362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63c95832-ee58-4ce0-9092-4242f6d57599",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "what is legacy.k8s.io? This does not exist. ",
        "createdAt" : "2018-08-31T07:32:41Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "ca3c2880-a106-4e29-a388-0a759aae5808",
        "parentId" : "63c95832-ee58-4ce0-9092-4242f6d57599",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yes, that's confusing--if it's copied, let's fix in a follow up. Do we have an official way to refer to the \"core\" group?",
        "createdAt" : "2018-08-31T16:48:40Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "aedd81ad-e0bd-4f5f-80ff-7a48759e4d19",
        "parentId" : "63c95832-ee58-4ce0-9092-4242f6d57599",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I don't think we have. This syntax is the one of kubectl, right? Probably `Service` without any postfix is correct there.",
        "createdAt" : "2018-09-05T10:39:47Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "6a4e6ad3-13bf-4c9b-bfac-5420745bb684",
        "parentId" : "63c95832-ee58-4ce0-9092-4242f6d57599",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "@mbohlool can you open an issue collecting the follow ups like this?",
        "createdAt" : "2018-10-31T20:09:37Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e27096cdb468ace668f4f333e9acb46daf33df3f",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +136,140 @@}\n\n// ServiceReference holds a reference to Service.legacy.k8s.io\ntype ServiceReference struct {\n\t// `namespace` is the namespace of the service."
  },
  {
    "id" : "6ad6498d-b59b-4646-b83e-bbdb9afd5486",
    "prId" : 67795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67795#pullrequestreview-152433382",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c64ce16a-63fb-42a6-ae90-82bd3a980883",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "do we differentiate between nil and `\"\"`? Why do we? In other words: why a pointer.",
        "createdAt" : "2018-08-31T07:33:35Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "9a1e2624-b6b0-45ea-8645-e1cfb7af89c8",
        "parentId" : "c64ce16a-63fb-42a6-ae90-82bd3a980883",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I suspect in the source Path was added after the fact and therefore needed to be optional.\r\n\r\nI think it is not harmful to remain an exact copy-- we can change both in v2.",
        "createdAt" : "2018-08-31T16:50:41Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "316d778a-9442-4828-aa72-296262babb5e",
        "parentId" : "c64ce16a-63fb-42a6-ae90-82bd3a980883",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Certainly not harmful.",
        "createdAt" : "2018-09-05T10:37:34Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "e27096cdb468ace668f4f333e9acb46daf33df3f",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +148,152 @@\t// this service.\n\t// +optional\n\tPath *string `json:\"path,omitempty\" protobuf:\"bytes,3,opt,name=path\"`\n}\n"
  },
  {
    "id" : "fbfbba5e-7f68-445f-b8fd-224e4a75b8e6",
    "prId" : 67795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67795#pullrequestreview-167129323",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8542e986-3a20-412e-bea8-94b361952a0d",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "perhaps this field should actually be called conversionStrategy?",
        "createdAt" : "2018-10-22T21:58:31Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "58765ba2-8ca2-42e3-8075-46738c8f6ab8",
        "parentId" : "8542e986-3a20-412e-bea8-94b361952a0d",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I guess not, since the enclosing object is called \"conversion\".",
        "createdAt" : "2018-10-22T22:03:23Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "e27096cdb468ace668f4f333e9acb46daf33df3f",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +80,84 @@\t// - `None`: The converter only change the apiVersion and would not touch any other field in the CR.\n\t// - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information is needed for this option.\n\tStrategy ConversionStrategyType `json:\"strategy\" protobuf:\"bytes,1,name=strategy\"`\n\n\t// `webhookClientConfig` is the instructions for how to call the webhook if strategy is `Webhook`. This field is"
  },
  {
    "id" : "37ca8150-4c49-4089-9537-78e3681412aa",
    "prId" : 67795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67795#pullrequestreview-169225820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92596ea7-1514-47d8-ba91-4ec74e21bfb5",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Should this be in the same api group? I expected it in a different api group since that's how the existing webhooks seem to work. I'm not sure we have a great reason for doing it that way-- maybe @liggitt knows.",
        "createdAt" : "2018-10-22T22:01:57Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "9b55e65e-a937-4e04-9558-43590b7c3796",
        "parentId" : "92596ea7-1514-47d8-ba91-4ec74e21bfb5",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This is my only question on the PR I think.",
        "createdAt" : "2018-10-22T22:05:14Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "f98094aa-0c11-4823-8983-75a54570b0a3",
        "parentId" : "92596ea7-1514-47d8-ba91-4ec74e21bfb5",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Putting the webhook types in this group means that someone's conversion webhook would have to depend on `k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1beta1` to get the versioned struct, which seems slightly odd.\r\n\r\nIf these types make sense for conversion in general, even apart from custom resources, I could see putting them in `k8s.io/api/...`. Not sure which group.\r\n\r\n@deads2k @sttts, do you remember more of the context around placement of the admission types?",
        "createdAt" : "2018-10-24T14:13:10Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d5f37b5f-43d1-4f22-bf6c-3cf5723102a0",
        "parentId" : "92596ea7-1514-47d8-ba91-4ec74e21bfb5",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "I think something like `k8s.io/api/conversion/v1beta1` make sense. AdmissionReview is in `k8s.io/api/admission/v1beta1`.",
        "createdAt" : "2018-10-25T18:20:08Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      },
      {
        "id" : "7dbe240c-661a-4d94-9cd2-904cbfa23747",
        "parentId" : "92596ea7-1514-47d8-ba91-4ec74e21bfb5",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> @deads2k @sttts, do you remember more of the context around placement of the admission types?\r\n\r\nHonestly, I don't remember an explicit choice.  I would choose to place them in the genericapiserver since that's what I would choose to build my conversion webhook from and we know that that kube-apiserver isn't going to serve these, but I don't feel super strongly.",
        "createdAt" : "2018-10-26T11:51:43Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "5f697dbd-16ea-49c9-b33c-fa3c1850385e",
        "parentId" : "92596ea7-1514-47d8-ba91-4ec74e21bfb5",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "I don't think we would use conversion webhooks for anything other than CRDs (a point agains `k8s.io/api/conversion/v1beta1`).\r\n\r\nConcerning imports, we have a [sample conversion webhook](https://github.com/kubernetes/kubernetes/pull/67006/commits/b31503af5365263544ad36e73abbd268085d65c5) we can look at \r\n\r\nThe imports there are apimachinery and apiextensions-apiserver. Between those `apimachinery` is to generic in my opinion and `apiextensions-apiserver` is a better option. I think we should keep the location as is.",
        "createdAt" : "2018-10-26T16:59:22Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      },
      {
        "id" : "98a6ae48-6c5e-4de7-a55c-0f448745373b",
        "parentId" : "92596ea7-1514-47d8-ba91-4ec74e21bfb5",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I don't think it belongs in apimachinery. Between api, apiserver, and extensions-apiserver I don't feel strongly.  I do think that I would keep the CRD API local to the extensions-apiserver though.  Generated clients are composeable, so we don't need to bundle them all together and we haven't had significant trouble related to the two packages so far.",
        "createdAt" : "2018-10-26T17:07:09Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "b5f69b79-ec2d-4e8e-88f7-d40c3ad09fca",
        "parentId" : "92596ea7-1514-47d8-ba91-4ec74e21bfb5",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "keeping them in the `apiextensions.k8s.io` group seems ok",
        "createdAt" : "2018-10-27T21:27:52Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a6ea74fb-43c0-481a-aad2-62ce4a28299d",
        "parentId" : "92596ea7-1514-47d8-ba91-4ec74e21bfb5",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "+1 for apiextensions-apiserver, if we don't have a strong reason for some other place.",
        "createdAt" : "2018-10-29T10:10:43Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "e27096cdb468ace668f4f333e9acb46daf33df3f",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +361,365 @@\n// ConversionReview describes a conversion request/response.\ntype ConversionReview struct {\n\tmetav1.TypeMeta `json:\",inline\"`\n\t// `request` describes the attributes for the conversion request."
  },
  {
    "id" : "ac153030-5293-4b18-9c66-9844635e5c4b",
    "prId" : 66102,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66102#pullrequestreview-136812444",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68e54b49-aecd-408d-b0cc-fe9edf4020f3",
        "parentId" : null,
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "A CRD with no spec is probably wrong, but is this a backward incompatible change to make an optional field required?",
        "createdAt" : "2018-07-12T20:16:08Z",
        "updatedAt" : "2018-07-12T20:16:08Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      },
      {
        "id" : "c58f6f33-34b9-449b-b0ae-af72b9a291c3",
        "parentId" : "68e54b49-aecd-408d-b0cc-fe9edf4020f3",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "it wasn't actually optional. if you submitted that object to the server, the server rejected it.",
        "createdAt" : "2018-07-12T20:19:04Z",
        "updatedAt" : "2018-07-12T20:19:05Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "245c21b449b6f473412afe8d2b7ceb7a88719b0f",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +201,205 @@\n\t// Spec describes how the user wants the resources to appear\n\tSpec CustomResourceDefinitionSpec `json:\"spec\" protobuf:\"bytes,2,opt,name=spec\"`\n\t// Status indicates the actual state of the CustomResourceDefinition\n\t// +optional"
  },
  {
    "id" : "95ae4807-e78c-4381-a5ff-20b02193e920",
    "prId" : 64996,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64996#pullrequestreview-276535988",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77923e38-4c5e-456e-98c2-4b99552972f7",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "shouldn't this also set omitempty?",
        "createdAt" : "2019-08-19T12:51:34Z",
        "updatedAt" : "2019-08-20T21:33:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "2c67c204-30c6-42a5-9b8c-b7e9205512fe",
        "parentId" : "77923e38-4c5e-456e-98c2-4b99552972f7",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> I'm going to withdraw omitempty from this pull, since there could be existing clients expecting .status.conditions: null from apiserver\r\n\r\njust saw that comment, and the reasoning makes sense to me. nevermind.",
        "createdAt" : "2019-08-19T12:52:51Z",
        "updatedAt" : "2019-08-20T21:33:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b61487962b9b20ceb1e8bda060a7c56056de0c85",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +339,343 @@\t// Conditions indicate state for particular aspects of a CustomResourceDefinition\n\t// +optional\n\tConditions []CustomResourceDefinitionCondition `json:\"conditions\" protobuf:\"bytes,1,opt,name=conditions\"`\n\n\t// AcceptedNames are the names that are actually being used to serve discovery"
  },
  {
    "id" : "13abb52a-1041-4c99-8cd6-bba2f97f13cd",
    "prId" : 54647,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54647#pullrequestreview-76996389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88caedfe-b9ce-4685-aee4-1c2e479db73c",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Was this cleared before storage if the flag was off?\r\n\r\nIf not, you have a bunch of clusters out there with time-bombs.",
        "createdAt" : "2017-11-15T23:03:18Z",
        "updatedAt" : "2017-11-15T23:03:18Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "04e2ec4f-2ea7-4f39-9a7a-074f8fc6449f",
        "parentId" : "88caedfe-b9ce-4685-aee4-1c2e479db73c",
        "authorId" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "body" : "To check my understanding, this is a time-bomb if someone has submitted resources with validation enabled, but without having the feature actually enabled? Hence if we activate it by default in 1.8, they could have custom resources in the API that do not actually validate?\r\n\r\nIf that understanding is not correct then I'm not sure I'm groking the problem.\r\n\r\nI can investigate whether or not the field was being cleared. If it weren't being cleared, what are our options for moving forward and/or minimizing breakage short of changing the field name?",
        "createdAt" : "2017-11-15T23:28:29Z",
        "updatedAt" : "2017-11-15T23:28:29Z",
        "lastEditedBy" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "tags" : [
        ]
      },
      {
        "id" : "253f46a7-6bbb-4477-a61f-6fe9c4b252ff",
        "parentId" : "88caedfe-b9ce-4685-aee4-1c2e479db73c",
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "> Was this cleared before storage if the flag was off?\r\n\r\nYes, it was cleared if the feature was disabled. https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/pkg/registry/customresourcedefinition/strategy.go#L57",
        "createdAt" : "2017-11-16T02:44:27Z",
        "updatedAt" : "2017-11-16T02:44:27Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae88efb24927c1719dcce79e6f58b9bcd02a16ed",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +31,35 @@\t// Validation describes the validation methods for CustomResources\n\t// +optional\n\tValidation *CustomResourceValidation `json:\"validation,omitempty\" protobuf:\"bytes,5,opt,name=validation\"`\n}\n"
  }
]