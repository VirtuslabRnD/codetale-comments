[
  {
    "id" : "ed3dfac2-e2be-4711-bc0c-641d9a687727",
    "prId" : 88076,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88076#pullrequestreview-360360390",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bd6f301-edf2-45b8-a5a6-04b177013658",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I wonder, we could combine the code above and this func, and just check whether the validation error list is empty. I fear a bit these two logics might divert otherwise eventually.",
        "createdAt" : "2020-02-18T13:39:57Z",
        "updatedAt" : "2020-02-28T15:01:15Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "9263930e-b74c-4e35-b1b1-120c43aa85ab",
        "parentId" : "0bd6f301-edf2-45b8-a5a6-04b177013658",
        "authorId" : "837ffb5a-9f47-4590-9d87-0f208d8950d0",
        "body" : "You're right. I've combined the logic into a single function.",
        "createdAt" : "2020-02-18T14:02:52Z",
        "updatedAt" : "2020-02-28T15:01:15Z",
        "lastEditedBy" : "837ffb5a-9f47-4590-9d87-0f208d8950d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e187415fd582ea80bc316fb76cb30c3ad1aead4",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +1331,1335 @@}\n\nfunc hasInvalidMapListKeysMapSet(schema *apiextensions.JSONSchemaProps) bool {\n\treturn schemaHas(schema, func(schema *apiextensions.JSONSchemaProps) bool {\n\t\treturn len(validateMapListKeysMapSet(schema, field.NewPath(\"\"))) > 0"
  },
  {
    "id" : "f00de845-ea75-444e-8f75-f404ed910f3d",
    "prId" : 88076,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88076#pullrequestreview-364515307",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3be50b8b-06b2-472f-8743-290606324dcb",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "would be easier to read with early returns, e.g.\r\n\r\n```go\r\nif schema.Items == nil || schema.Items.Schema == nil {\r\n    return nil\r\n}\r\nif schema.XListType == nil {\r\n    return nil\r\n}\r\nif *schema.XListType != \"set\" && *schema.XListType != \"map\" {\r\n    return nil\r\n}\r\n\r\n// set and map list items cannot be nullable\r\nif schema.Items.Schema.Nullable {\r\n    allErrs = append(allErrs, field.Forbidden(fldPath.Child(\"items\").Child(\"nullable\"), \"cannot be nullable when x-kubernetes-list-type is set\"))\r\n}\r\n\r\nswitch *schema.XListType {\r\ncase \"map\":\r\n    // ensure all map keys are required or have a default\r\n    requiredMap := make(map[string]struct{}, len(schema.Items.Schema.Required))\r\n    ...\r\n\r\ncase \"set\":\r\n    // no other set-specific validation\r\n}\r\n\r\nreturn allErrs\r\n```",
        "createdAt" : "2020-02-26T03:55:35Z",
        "updatedAt" : "2020-02-28T15:01:15Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e187415fd582ea80bc316fb76cb30c3ad1aead4",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +882,886 @@func validateMapListKeysMapSet(schema *apiextensions.JSONSchemaProps, fldPath *field.Path) field.ErrorList {\n\tallErrs := field.ErrorList{}\n\n\tif schema.Items == nil || schema.Items.Schema == nil {\n\t\treturn nil"
  },
  {
    "id" : "4a33313d-183d-4231-9efe-6bc2f9101696",
    "prId" : 88076,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88076#pullrequestreview-366398307",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "811a8f50-618b-45a7-9cae-2e21f48f9d17",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "worth a comment that we validate all XListMapKeys are existing properties in ValidateCustomResourceDefinitionOpenAPISchema, so skipping here is ok",
        "createdAt" : "2020-02-28T13:30:15Z",
        "updatedAt" : "2020-02-28T15:01:15Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "9665bbf1-fb25-4e94-9b79-47e02b0fffce",
        "parentId" : "811a8f50-618b-45a7-9cae-2e21f48f9d17",
        "authorId" : "837ffb5a-9f47-4590-9d87-0f208d8950d0",
        "body" : "added",
        "createdAt" : "2020-02-28T13:33:08Z",
        "updatedAt" : "2020-02-28T15:01:15Z",
        "lastEditedBy" : "837ffb5a-9f47-4590-9d87-0f208d8950d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e187415fd582ea80bc316fb76cb30c3ad1aead4",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +910,914 @@\t\t\tif !ok {\n\t\t\t\t// we validate that all XListMapKeys are existing properties in ValidateCustomResourceDefinitionOpenAPISchema, so skipping here is ok\n\t\t\t\tcontinue\n\t\t\t}\n"
  },
  {
    "id" : "4cdbce46-b8c7-48e1-b45c-f5a900465771",
    "prId" : 84722,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84722#pullrequestreview-317739594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9bcf416-337d-488c-9ee1-f264ad9fe7d8",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "nice cleanup",
        "createdAt" : "2019-11-15T16:44:47Z",
        "updatedAt" : "2019-11-15T21:40:29Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3b15a9e260ac65edfa14dd80add9046f3fa9b1f",
    "line" : 434,
    "diffHunk" : "@@ -1,1 +1362,1366 @@// SchemaHasInvalidTypes returns true if it contains invalid offending openapi-v3 specification.\nfunc SchemaHasInvalidTypes(s *apiextensions.JSONSchemaProps) bool {\n\treturn schemaHas(s, func(s *apiextensions.JSONSchemaProps) bool {\n\t\treturn len(s.Type) > 0 && !openapiV3Types.Has(s.Type)\n\t})"
  },
  {
    "id" : "0276065f-f024-4d31-a82a-800af5aaa843",
    "prId" : 84113,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84113#pullrequestreview-305725080",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa430ff9-6e5e-477e-b888-0eb7881544f2",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "hm, tiny optional nit, personally I'd flip this error report-- x-kubernetes-map-type may only be set on objects (type == \"object\").",
        "createdAt" : "2019-10-22T16:40:17Z",
        "updatedAt" : "2019-10-25T09:18:22Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "8eefb763-0c30-488e-a3f2-f2482feba8c6",
        "parentId" : "fa430ff9-6e5e-477e-b888-0eb7881544f2",
        "authorId" : "dee4bfe3-85a8-4847-8d5a-eb30399b4272",
        "body" : "Happy to do that, this format is being consistent with the `if schema.XListType != nil && schema.Type != \"array\" {` error below though. So if we want to, may be better change all in one go to a preferred format in a different PR",
        "createdAt" : "2019-10-23T08:47:38Z",
        "updatedAt" : "2019-10-25T09:18:22Z",
        "lastEditedBy" : "dee4bfe3-85a8-4847-8d5a-eb30399b4272",
        "tags" : [
        ]
      }
    ],
    "commit" : "b598b3e9e952783606b0ab62d31d97d49ed59f15",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +792,796 @@\tif schema.XMapType != nil && schema.Type != \"object\" {\n\t\tif len(schema.Type) == 0 {\n\t\t\tallErrs = append(allErrs, field.Required(fldPath.Child(\"type\"), \"must be object if x-kubernetes-map-type is set\"))\n\t\t} else {\n\t\t\tallErrs = append(allErrs, field.Invalid(fldPath.Child(\"type\"), schema.Type, \"must be object if x-kubernetes-map-type is set\"))"
  },
  {
    "id" : "cd317b07-719f-4410-af65-1248e79986ef",
    "prId" : 79604,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79604#pullrequestreview-275568128",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a76f8a95-9ac9-455c-99e5-ebee17d25aa5",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "*twitch*",
        "createdAt" : "2019-08-15T17:19:57Z",
        "updatedAt" : "2019-08-16T17:15:10Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "92df9777-ec27-4d3f-9ee8-9589b8c4ebc5",
        "parentId" : "a76f8a95-9ac9-455c-99e5-ebee17d25aa5",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yay compatibility",
        "createdAt" : "2019-08-15T17:38:11Z",
        "updatedAt" : "2019-08-16T17:15:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa05715c0ef01762f2349f49324489a84429e8a8",
    "line" : 280,
    "diffHunk" : "@@ -1,1 +1272,1276 @@\nfunc validatePreserveUnknownFields(crd, oldCRD *apiextensions.CustomResourceDefinition, requestGV schema.GroupVersion) field.ErrorList {\n\tif requestGV == v1beta1.SchemeGroupVersion {\n\t\t// no-op for compatibility with v1beta1\n\t\treturn nil"
  },
  {
    "id" : "2fcbc765-2fe7-4e3c-9261-d8c7910ecf34",
    "prId" : 78863,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78863#pullrequestreview-247709846",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f16b8fd3-091d-4e0f-8b70-15a87fd2db18",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "@liggitt take a careful look at this ^",
        "createdAt" : "2019-06-10T16:25:34Z",
        "updatedAt" : "2019-06-10T17:47:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "e521fb8fe72a63ab268aa2b63609969b6acbc9b7",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +801,805 @@\t\t\t\t\t\t// validate an embedded resource\n\t\t\t\t\t\tschemaobjectmeta.Validate(fldPath, interface{}(*schema.Default), nil, true)\n\t\t\t\t\t}\n\t\t\t\t}\n"
  },
  {
    "id" : "bbeaa556-5cbe-4dac-bf4c-c19851977433",
    "prId" : 78788,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78788#pullrequestreview-247654525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1c96e14-0c33-4003-9e32-c4962ab5266e",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the validation here did not catch invalid metadata label values inside a default resource:\r\n```yaml\r\napiVersion: apiextensions.k8s.io/v1beta1\r\nkind: CustomResourceDefinition\r\nmetadata:\r\n  name: foos.example.com\r\nspec:\r\n  group: example.com\r\n  version: v1\r\n  scope: Namespaced\r\n  names:\r\n    plural: foos\r\n    singular: foo\r\n    kind: Foo\r\n    listKind: FooList\r\n  preserveUnknownFields: false\r\n  validation:\r\n    openAPIV3Schema:\r\n      type: object\r\n      properties:\r\n        spec:\r\n          type: object\r\n          properties:\r\n            template:\r\n              type: object\r\n              x-kubernetes-embedded-resource: true\r\n              default:\r\n                metadata:\r\n                  labels:\r\n                    c: \"a value\"\r\n              properties:\r\n                spec:\r\n                  type: object\r\n        metadata:\r\n          type: object\r\n          properties:\r\n            name:\r\n              type: string\r\n```",
        "createdAt" : "2019-06-09T03:53:54Z",
        "updatedAt" : "2019-06-10T14:36:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "130b51b5-68da-4726-9714-42aa0e4a2ddf",
        "parentId" : "f1c96e14-0c33-4003-9e32-c4962ab5266e",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "it did catch invalid schema types, like this:\r\n```yaml\r\n              default:\r\n                metadata:\r\n                  labels:\r\n                    c: 42\r\n```",
        "createdAt" : "2019-06-09T03:54:44Z",
        "updatedAt" : "2019-06-10T14:36:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "690449eb-1441-4f77-9dac-318e9219db66",
        "parentId" : "f1c96e14-0c33-4003-9e32-c4962ab5266e",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "It can't. See my comment in Slack. I have changed this to forbid defaults inside of metadata. We could relax this, this would require to construct an ObjectMeta object here and check that. Note that default can be arbitrarily deep in the ObjectMeta structure.\r\n\r\nAlternatively, we could allow defaults in metadata, but be relaxed about validating them (other than for other defaults).",
        "createdAt" : "2019-06-09T10:04:54Z",
        "updatedAt" : "2019-06-10T14:36:04Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "b3fd9f08-c0e4-48c3-b24d-c49c15aff508",
        "parentId" : "f1c96e14-0c33-4003-9e32-c4962ab5266e",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "This is postponed to https://github.com/kubernetes/kubernetes/pull/78788 for 1.16.",
        "createdAt" : "2019-06-10T14:43:15Z",
        "updatedAt" : "2019-06-10T14:43:16Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "d86cc85448dbb733eef1c864742c043484a6661e",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +800,804 @@\t\t\t\t\t// validate an embedded resource\n\t\t\t\t\tschemaobjectmeta.Validate(fldPath, interface{}(*schema.Default), nil, true)\n\t\t\t\t}\n\n\t\t\t\t// validate the default value with user the provided schema."
  },
  {
    "id" : "40fd05b3-f551-414e-995e-9c98c05f13f8",
    "prId" : 77558,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77558#pullrequestreview-242909879",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab38ac7a-eda2-4cf2-9b04-59d304086348",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "what will happen here w.r.t. https://github.com/kubernetes/kubernetes/issues/65470? we don't have to fix that issue in this PR, but I want to make sure we're not making the problem worse",
        "createdAt" : "2019-05-28T19:12:08Z",
        "updatedAt" : "2019-05-29T13:04:51Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "bb2d2035-7c85-47aa-bcac-dc4d6b0f4c5c",
        "parentId" : "ab38ac7a-eda2-4cf2-9b04-59d304086348",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Adding a test, and at worst a `recover()` handler.",
        "createdAt" : "2019-05-28T20:28:27Z",
        "updatedAt" : "2019-05-29T13:04:51Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "4743aace-863e-4fbf-93bf-653a52106c52",
        "parentId" : "ab38ac7a-eda2-4cf2-9b04-59d304086348",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Test was enough. All fine.",
        "createdAt" : "2019-05-28T20:41:07Z",
        "updatedAt" : "2019-05-29T13:04:51Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbd192041d958cbe57f12e9d1c107798c30831be",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +752,756 @@\n\t\t\t\t// validate the default value. Only validating and pruned defaults are allowed.\n\t\t\t\tvalidator := govalidate.NewSchemaValidator(s.ToGoOpenAPI(), nil, \"\", strfmt.Default)\n\t\t\t\tif err := apiservervalidation.ValidateCustomResource(pruned, validator); err != nil {\n\t\t\t\t\tallErrs = append(allErrs, field.Invalid(fldPath.Child(\"default\"), schema.Default, fmt.Sprintf(\"must validate: %v\", err)))"
  },
  {
    "id" : "dfdd7301-47ae-429c-9e47-ccfc19c9e088",
    "prId" : 77558,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77558#pullrequestreview-242872489",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c25af428-4c3d-4982-bd29-6de95d98a5c8",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "do we actually allow/use/honor default fields under `allOf/anyOf/oneOf/not/patternProperties/definitions/dependencies`, or is this just checking all schemas recursively?",
        "createdAt" : "2019-05-28T19:15:05Z",
        "updatedAt" : "2019-05-29T13:04:51Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "fd37133f-866e-498e-b01e-4a594c8ea043",
        "parentId" : "c25af428-4c3d-4982-bd29-6de95d98a5c8",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "ah, adding a default triggers `mustBeStructural`, which triggers calling `ValidateStructural`, which prevents use of default inside the allOf/anyOf/oneOf/not/... subfields. I see the unit test verifying this.",
        "createdAt" : "2019-05-28T19:21:31Z",
        "updatedAt" : "2019-05-29T13:04:51Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbd192041d958cbe57f12e9d1c107798c30831be",
    "line" : 187,
    "diffHunk" : "@@ -1,1 +901,905 @@\t}\n\tfor _, s := range s.AllOf {\n\t\tif schemaHasDefaults(&s) {\n\t\t\treturn true\n\t\t}"
  },
  {
    "id" : "c4c288cf-9651-4b16-acad-33fbee0b6f63",
    "prId" : 77354,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77354#pullrequestreview-281845053",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68ff723e-cb0f-4684-ae4f-a1297bf49b12",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "up to you, but you might consider moving the next four checks into a block like this and factoring out the XListType == map check (I might be alone, but I'm going slightly cross-eyed with the strings of nil checks)\r\n\r\n```go\r\nif schema.XListType != nil && *schema.XListType == \"map\" {\r\n  if len(schema.XListMapKeys) == 0 {\r\n    ... required error\r\n  }\r\n  if schema.Items != nil && schema.Items.Schema == nil {\r\n    ... invalid error\r\n  }\r\n  if schema.Items != nil && schema.Items.Schema != nil && schema.Items.Schema.Type != \"object\" {\r\n    ... invalid error\r\n  }\r\n  if schema.Items != nil && schema.Items.Schema != nil && schema.Items.Schema.Type == \"object\" {\r\n    ... check keys/properties\r\n  }\r\n}\r\n```\r\n",
        "createdAt" : "2019-08-30T03:17:57Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "6076caa1-4622-4016-aea2-b42d3966d3db",
        "parentId" : "68ff723e-cb0f-4684-ae4f-a1297bf49b12",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I also didn't see an error if `schema.Items == nil` for a map list... did I miss that?",
        "createdAt" : "2019-08-30T03:28:43Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "01cf5f28-a060-437e-b1dc-643e68aa240d",
        "parentId" : "68ff723e-cb0f-4684-ae4f-a1297bf49b12",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "~~did you discuss to actually validate the `XListMapKeys` values as field names in the schema? Both that they exist and that they are scalars.~~ you do below.",
        "createdAt" : "2019-08-30T06:18:02Z",
        "updatedAt" : "2019-08-30T06:18:28Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "7303df0b2161600c47f49034e120fa2065ef539c",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +808,812 @@\t\t}\n\t}\n\n\tif schema.XListType != nil && *schema.XListType == \"map\" {\n\t\tif len(schema.XListMapKeys) == 0 {"
  },
  {
    "id" : "cc0cfbfc-3b3b-4a02-9cee-b262761f3c91",
    "prId" : 77354,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77354#pullrequestreview-281848289",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b6d7835-a72b-4b87-9c62-91c883d80c3b",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "we don't support multiple schemas. They are invalidated elsewhere.",
        "createdAt" : "2019-08-30T06:19:58Z",
        "updatedAt" : "2019-08-30T06:19:58Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "66dddabb-803e-4eca-a772-d9c804dca2c3",
        "parentId" : "9b6d7835-a72b-4b87-9c62-91c883d80c3b",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Can we fix in a followup?",
        "createdAt" : "2019-08-30T06:23:02Z",
        "updatedAt" : "2019-08-30T06:23:03Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "d6ceab8d-a72c-4d40-be13-f265116d8e56",
        "parentId" : "9b6d7835-a72b-4b87-9c62-91c883d80c3b",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "we can",
        "createdAt" : "2019-08-30T06:29:35Z",
        "updatedAt" : "2019-08-30T06:29:35Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "7303df0b2161600c47f49034e120fa2065ef539c",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +819,823 @@\n\t\tif schema.Items != nil && schema.Items.Schema == nil {\n\t\t\tallErrs = append(allErrs, field.Invalid(fldPath.Child(\"items\"), schema.Items, \"must only have a single schema if x-kubernetes-list-type is map\"))\n\t\t}\n"
  },
  {
    "id" : "e75aac66-c547-45b7-a675-0636dfe7db28",
    "prId" : 77354,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77354#pullrequestreview-282321562",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7652d40-d6ee-4b17-8fa8-68f3f6b674f8",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Key(k)",
        "createdAt" : "2019-08-30T06:21:23Z",
        "updatedAt" : "2019-08-30T06:21:23Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "8ed884a5-b81d-4e26-86b9-412644c98e19",
        "parentId" : "f7652d40-d6ee-4b17-8fa8-68f3f6b674f8",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "In a followup?",
        "createdAt" : "2019-08-30T06:23:25Z",
        "updatedAt" : "2019-08-30T06:23:26Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "4bdc03c6-2086-44ce-8c68-88ee909abcf6",
        "parentId" : "f7652d40-d6ee-4b17-8fa8-68f3f6b674f8",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "sure",
        "createdAt" : "2019-08-30T06:31:29Z",
        "updatedAt" : "2019-08-30T06:31:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "1ad3aa14-d546-419d-9206-c623c3d4ad9c",
        "parentId" : "f7652d40-d6ee-4b17-8fa8-68f3f6b674f8",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "See #82210",
        "createdAt" : "2019-08-31T22:24:05Z",
        "updatedAt" : "2019-08-31T22:24:05Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "7303df0b2161600c47f49034e120fa2065ef539c",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +831,835 @@\t\t\t\tif s, ok := schema.Items.Schema.Properties[k]; ok {\n\t\t\t\t\tif s.Type == \"array\" || s.Type == \"object\" {\n\t\t\t\t\t\tallErrs = append(allErrs, field.Invalid(fldPath.Child(\"items\").Child(\"properties\").Child(k).Child(\"type\"), schema.Items.Schema.Type, \"must be a scalar type if parent array's x-kubernetes-list-type is map\"))\n\t\t\t\t\t}\n\t\t\t\t} else {"
  },
  {
    "id" : "7bf527e5-2cb6-41ac-803c-8136ec5fd289",
    "prId" : 77354,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77354#pullrequestreview-281846521",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b902bcc-16bc-431b-b639-e9ebdb236e46",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "nullable scalars are ok?",
        "createdAt" : "2019-08-30T06:22:23Z",
        "updatedAt" : "2019-08-30T06:22:23Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "a4402c7a-8772-425f-883d-a5c38d5182cd",
        "parentId" : "1b902bcc-16bc-431b-b639-e9ebdb236e46",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yes",
        "createdAt" : "2019-08-30T06:22:32Z",
        "updatedAt" : "2019-08-30T06:22:32Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "98550681-9487-400e-ab0e-36ac934c4ccb",
        "parentId" : "1b902bcc-16bc-431b-b639-e9ebdb236e46",
        "authorId" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "body" : "Technically anything is okay from smd's perspective, but to keep in line with kubernetes types we did this",
        "createdAt" : "2019-08-30T06:23:28Z",
        "updatedAt" : "2019-08-30T06:23:28Z",
        "lastEditedBy" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7303df0b2161600c47f49034e120fa2065ef539c",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +830,834 @@\t\t\tfor _, k := range schema.XListMapKeys {\n\t\t\t\tif s, ok := schema.Items.Schema.Properties[k]; ok {\n\t\t\t\t\tif s.Type == \"array\" || s.Type == \"object\" {\n\t\t\t\t\t\tallErrs = append(allErrs, field.Invalid(fldPath.Child(\"items\").Child(\"properties\").Child(k).Child(\"type\"), schema.Items.Schema.Type, \"must be a scalar type if parent array's x-kubernetes-list-type is map\"))\n\t\t\t\t\t}"
  },
  {
    "id" : "a2874179-033e-4677-aac2-237762addada",
    "prId" : 77333,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77333#pullrequestreview-239052324",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ce27c22-4a45-4ee2-90a0-5b6baff94a3f",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Should schemaPath be included in the error message ?",
        "createdAt" : "2019-05-17T17:18:23Z",
        "updatedAt" : "2019-05-17T17:30:37Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "84e6f8de-0cc5-4252-ab31-3ac3b72fc4a6",
        "parentId" : "6ce27c22-4a45-4ee2-90a0-5b6baff94a3f",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "it gets included when printed",
        "createdAt" : "2019-05-17T17:43:48Z",
        "updatedAt" : "2019-05-17T17:43:49Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d10f8c1ad3e00bd7c690e833f79b342159e06819",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +140,144 @@\t\t\t\tschemaPath := fldPath.Child(\"versions\").Index(i).Child(\"schema\", \"openAPIV3Schema\")\n\t\t\t\tif v.Served && (v.Schema == nil || v.Schema.OpenAPIV3Schema == nil) {\n\t\t\t\t\tallErrs = append(allErrs, field.Required(schemaPath, \"because otherwise all fields are pruned\"))\n\t\t\t\t}\n\t\t\t}"
  },
  {
    "id" : "57246c59-33f7-4fd2-9d08-df2b28030a37",
    "prId" : 74998,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74998#pullrequestreview-211985275",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cfdf865-51ce-4884-a02a-7448e0185e37",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "limit version string to `utilvalidation.IsDNS1035Label`",
        "createdAt" : "2019-03-07T19:48:49Z",
        "updatedAt" : "2019-03-08T05:00:38Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbe00023c02c1bb08f9111e40c26c3c73dfa48bf",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +250,254 @@\t\tseen := map[string]bool{}\n\t\thasAcceptedVersion := false\n\t\tfor i, v := range versions {\n\t\t\tif seen[v] {\n\t\t\t\tallErrs = append(allErrs, field.Invalid(fldPath.Index(i), v, \"duplicate version\"))"
  },
  {
    "id" : "0eb1e386-49b6-4927-8815-1dd9a833d79c",
    "prId" : 70211,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70211#pullrequestreview-168180502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b919cfd-dce2-4225-a3db-42eba4b68340",
        "parentId" : null,
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "IIUC the validation error shows the jsonpath of the problematic field, so this should've been `additionalPrinterColumns` instead of `columns`",
        "createdAt" : "2018-10-25T01:29:43Z",
        "updatedAt" : "2018-11-07T17:39:27Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b545bbc13095f9708cf0d352451137fe841157f",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +211,215 @@\n\tfor i := range spec.AdditionalPrinterColumns {\n\t\tif errs := ValidateCustomResourceColumnDefinition(&spec.AdditionalPrinterColumns[i], fldPath.Child(\"additionalPrinterColumns\").Index(i)); len(errs) > 0 {\n\t\t\tallErrs = append(allErrs, errs...)\n\t\t}"
  },
  {
    "id" : "03480ccb-7b0b-4c19-9ebb-3687ba051934",
    "prId" : 70211,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70211#pullrequestreview-170819927",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6c1a2f3-1d69-4eb5-b21e-ffae155df0d3",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this doesn't correctly handle per-version subresource config combined with top-level validation schema (it assumes there will be per-version schema as well). line 220 assumes the opposite, that top-level subresources imply top-level schema.\r\n\r\neach place we verify the schema for a version, we probably need the equivalent of `getSchemaForVersion(crd *apiextensions.CustomResourceDefinitionSpec, version string)`",
        "createdAt" : "2018-11-01T04:52:36Z",
        "updatedAt" : "2018-11-07T17:39:27Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ad0d06f2-3e87-4d80-8abc-4f775e50b91a",
        "parentId" : "a6c1a2f3-1d69-4eb5-b21e-ffae155df0d3",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "You're right. Nice catch!\r\n\r\nIf schema/validation is nil, `ValidateCustomResourceDefinitionValidation` returns no error, so I think passing per-version schema currently is fine (passing `getSchemaForVersion` when top-level validation is used will result in redundant validation errors). \r\n\r\nThe problem is to determine `statusEnabled` based on the right subresources. Since `ValidateCustomResourceDefinitionVersion` only has scope of a single version, I would pass `statusEnabled` to `ValidateCustomResourceDefinitionVersion`.\r\n\r\nFor line 220 (validating top-level validation), `statusEnabled` should be true if any top-level/per-version subresources have status enabled, because `statusEnabled=true` is a stricter case compared to `statusEnabled=false`",
        "createdAt" : "2018-11-01T18:27:26Z",
        "updatedAt" : "2018-11-07T17:39:27Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b545bbc13095f9708cf0d352451137fe841157f",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +104,108 @@func ValidateCustomResourceDefinitionVersion(version *apiextensions.CustomResourceDefinitionVersion, fldPath *field.Path, statusEnabled bool) field.ErrorList {\n\tallErrs := field.ErrorList{}\n\tallErrs = append(allErrs, ValidateCustomResourceDefinitionValidation(version.Schema, statusEnabled, fldPath.Child(\"schema\"))...)\n\tallErrs = append(allErrs, ValidateCustomResourceDefinitionSubresources(version.Subresources, fldPath.Child(\"subresources\"))...)\n\tfor i := range version.AdditionalPrinterColumns {"
  },
  {
    "id" : "d330d978-3a3e-4971-8ba2-e1e4173e4536",
    "prId" : 67795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67795#pullrequestreview-169597498",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7af4a405-3db7-4350-b51d-5084468184df",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "need to validate non-nil webhookClientConfig here? (url/service mutual exclusivity, valid url, valid service, etc)",
        "createdAt" : "2018-10-30T02:26:37Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c89796d7-cac3-4697-b766-b1f4d66f268d",
        "parentId" : "7af4a405-3db7-4350-b51d-5084468184df",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "you mean validating `webhookClientConfig` itself? I am checking for non-nil `webhookClientConfig` some lines later.",
        "createdAt" : "2018-10-30T03:03:37Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      },
      {
        "id" : "486823e4-4e59-4e2f-950b-861ec102b0de",
        "parentId" : "7af4a405-3db7-4350-b51d-5084468184df",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> you mean validating webhookClientConfig itself?\r\n\r\nyes, not seeing where the subfields of webhookClientConfig are validated",
        "createdAt" : "2018-10-30T03:08:18Z",
        "updatedAt" : "2018-10-31T21:47:29Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e27096cdb468ace668f4f333e9acb46daf33df3f",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +227,231 @@\t\t\t\tallErrs = append(allErrs, webhook.ValidateWebhookService(fldPath.Child(\"webhookClientConfig\").Child(\"service\"), cc.Service.Name, cc.Service.Namespace, cc.Service.Path)...)\n\t\t\t}\n\t\t}\n\t} else if conversion.WebhookClientConfig != nil {\n\t\tallErrs = append(allErrs, field.Forbidden(fldPath.Child(\"webhookClientConfig\"), \"should not be set when strategy is not set to Webhook\"))"
  },
  {
    "id" : "b3c66f7f-cf4f-46d1-8991-0ad9690cd384",
    "prId" : 66102,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66102#pullrequestreview-139734100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "745249dc-b064-4ea4-89d4-4d4c5fb13403",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "is this serialized upper case?",
        "createdAt" : "2018-07-12T13:54:05Z",
        "updatedAt" : "2018-07-12T14:59:15Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "8f18d642-b384-40e3-b299-953182b6efad",
        "parentId" : "745249dc-b064-4ea4-89d4-4d4c5fb13403",
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "> is this serialized upper case?\r\n\r\nYes.\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/bc98f7a5f2086a62af80ad92f7201e7af5e0ef03/staging/src/k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1beta1/types.go#L88",
        "createdAt" : "2018-07-12T14:03:12Z",
        "updatedAt" : "2018-07-12T14:59:15Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      },
      {
        "id" : "6214878c-4155-4da1-a0da-27b7e160e50b",
        "parentId" : "745249dc-b064-4ea4-89d4-4d4c5fb13403",
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "ref https://github.com/kubernetes/kubernetes/issues/66531",
        "createdAt" : "2018-07-24T04:52:05Z",
        "updatedAt" : "2018-07-24T04:52:05Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      }
    ],
    "commit" : "245c21b449b6f473412afe8d2b7ceb7a88719b0f",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +271,275 @@\tif len(col.JSONPath) == 0 {\n\t\tallErrs = append(allErrs, field.Required(fldPath.Child(\"JSONPath\"), \"\"))\n\t} else if errs := validateSimpleJSONPath(col.JSONPath, fldPath.Child(\"JSONPath\")); len(errs) > 0 {\n\t\tallErrs = append(allErrs, errs...)\n\t}"
  },
  {
    "id" : "6e308dc9-aec8-43d5-a2b4-ac581749fc8d",
    "prId" : 65357,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65357#pullrequestreview-131132521",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b515090-5633-4bf6-89f0-c9109899a973",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "none of these are harmful, most are useless. But for uniformity I would tend to allow all these.",
        "createdAt" : "2018-06-22T09:45:05Z",
        "updatedAt" : "2018-06-22T09:45:09Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "411e9eb6-131d-451b-8333-ffa190f13b89",
        "parentId" : "6b515090-5633-4bf6-89f0-c9109899a973",
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "> most are useless.\r\n\r\nyeah, most of them don't make sense once we have restricted the type to `object` as well.",
        "createdAt" : "2018-06-22T09:48:09Z",
        "updatedAt" : "2018-06-22T09:48:19Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      }
    ],
    "commit" : "b38e1a9e42777103fdd491a9f76d1aa73bb32454",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +535,539 @@}\n\nvar allowedFieldsAtRootSchema = []string{\"Description\", \"Type\", \"Format\", \"Title\", \"Maximum\", \"ExclusiveMaximum\", \"Minimum\", \"ExclusiveMinimum\", \"MaxLength\", \"MinLength\", \"Pattern\", \"MaxItems\", \"MinItems\", \"UniqueItems\", \"MultipleOf\", \"Required\", \"Items\", \"Properties\", \"ExternalDocs\", \"Example\"}\n\nfunc allowedAtRootSchema(field string) bool {"
  },
  {
    "id" : "7e133cc8-f856-4c6d-80fd-1156811aab9f",
    "prId" : 64766,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64766#pullrequestreview-125971309",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31c77f45-872a-46e5-a30f-b85321a07d87",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "we should start to have a slice when we add the next one",
        "createdAt" : "2018-06-05T13:35:40Z",
        "updatedAt" : "2018-06-05T13:35:40Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "46d7ae41-94c8-4ff0-9f78-c079cca43ace",
        "parentId" : "31c77f45-872a-46e5-a30f-b85321a07d87",
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : ":+1:",
        "createdAt" : "2018-06-05T13:36:16Z",
        "updatedAt" : "2018-06-05T13:36:16Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      }
    ],
    "commit" : "0528e96928a976bce6aa60192339eee1d447e7e3",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +301,305 @@\t\t\t\t}\n\n\t\t\t\tif name := v.Type().Field(i).Name; name != \"Properties\" && name != \"Required\" && name != \"Description\" {\n\t\t\t\t\tallErrs = append(allErrs, field.Invalid(fldPath.Child(\"openAPIV3Schema\"), *schema, fmt.Sprintf(`must only have \"properties\", \"required\" or \"description\" at the root if the status subresource is enabled`)))\n\t\t\t\t\tbreak"
  },
  {
    "id" : "79568850-e66b-47d2-b2ca-c0eabb8c48b9",
    "prId" : 63830,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63830#pullrequestreview-120315002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e258471b-71d2-4fc1-826a-24dd13a8569f",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "To be clear here: we **do not** check that `obj` has a superset of the StoredVersions of `old`. So everybody (who is cluster admin) can modify this.",
        "createdAt" : "2018-05-15T16:30:55Z",
        "updatedAt" : "2018-05-22T20:54:46Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "c25514a1ee513e1a7ad1c3c572ab9dd32a395d28",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +82,86 @@\t\tallErrs = append(allErrs, field.Invalid(fldPath.Index(i), v, \"must appear in spec.versions\"))\n\t}\n\n\treturn allErrs\n}"
  },
  {
    "id" : "44343552-6c56-4e60-84a3-19846eb91c26",
    "prId" : 63830,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63830#pullrequestreview-122046989",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b12eb03-d25f-4926-a8fa-1b88f556dc84",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "also verify the version that currently has `stored:true` appears in `status.storedVersions`",
        "createdAt" : "2018-05-21T19:47:18Z",
        "updatedAt" : "2018-05-22T20:54:46Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "518fa833-4459-4419-8021-59e6b53cfb13",
        "parentId" : "2b12eb03-d25f-4926-a8fa-1b88f556dc84",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "looks like this is done",
        "createdAt" : "2018-05-22T07:29:08Z",
        "updatedAt" : "2018-05-22T20:54:46Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "c25514a1ee513e1a7ad1c3c572ab9dd32a395d28",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +60,64 @@\n// ValidateCustomResourceDefinitionStoredVersions statically validates\nfunc ValidateCustomResourceDefinitionStoredVersions(storedVersions []string, versions []apiextensions.CustomResourceDefinitionVersion, fldPath *field.Path) field.ErrorList {\n\tif len(storedVersions) == 0 {\n\t\treturn field.ErrorList{field.Invalid(fldPath, storedVersions, \"must have at least one stored version\")}"
  },
  {
    "id" : "8fece4a4-47fd-41ed-bb2e-18c02b49f2eb",
    "prId" : 62333,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62333#pullrequestreview-110798396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4389e001-ccbe-464f-abbb-ac4381db5b89",
        "parentId" : null,
        "authorId" : "7d4431c9-bc49-4ec4-a8c6-55ee343d6ab5",
        "body" : "Is this extra check necessary?",
        "createdAt" : "2018-04-10T11:31:35Z",
        "updatedAt" : "2018-04-10T12:12:26Z",
        "lastEditedBy" : "7d4431c9-bc49-4ec4-a8c6-55ee343d6ab5",
        "tags" : [
        ]
      },
      {
        "id" : "3c72795a-faf3-4264-ac4d-23281ebfc110",
        "parentId" : "4389e001-ccbe-464f-abbb-ac4381db5b89",
        "authorId" : "7d4431c9-bc49-4ec4-a8c6-55ee343d6ab5",
        "body" : "If allowed= true and schema = nil, that will cause panic. I can see that it is not possible to generate such object when unmarshaling.",
        "createdAt" : "2018-04-10T11:33:12Z",
        "updatedAt" : "2018-04-10T12:12:26Z",
        "lastEditedBy" : "7d4431c9-bc49-4ec4-a8c6-55ee343d6ab5",
        "tags" : [
        ]
      },
      {
        "id" : "1055cb60-70a6-4ea6-aa66-c79b0fb523e7",
        "parentId" : "4389e001-ccbe-464f-abbb-ac4381db5b89",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "the implicit default of `additionalProperties` is `true`. So `schema.AdditionalProperties.Allows == true` must be allowed.",
        "createdAt" : "2018-04-10T11:33:57Z",
        "updatedAt" : "2018-04-10T12:12:26Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "674eecd0-94bc-4061-abd1-a4400b23bb34",
        "parentId" : "4389e001-ccbe-464f-abbb-ac4381db5b89",
        "authorId" : "7d4431c9-bc49-4ec4-a8c6-55ee343d6ab5",
        "body" : "My bad, there is not issue with panic when allowed= true and schema = nil.",
        "createdAt" : "2018-04-10T11:45:11Z",
        "updatedAt" : "2018-04-10T12:12:26Z",
        "lastEditedBy" : "7d4431c9-bc49-4ec4-a8c6-55ee343d6ab5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9df44e347ac590011c39b3e378ac5357856d91f",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +252,256 @@\tif schema.AdditionalProperties != nil {\n\t\tif len(schema.Properties) != 0 {\n\t\t\tif schema.AdditionalProperties.Allows == false || schema.AdditionalProperties.Schema != nil {\n\t\t\t\tallErrs = append(allErrs, field.Forbidden(fldPath.Child(\"additionalProperties\"), \"additionalProperties and properties are mutual exclusive\"))\n\t\t\t}"
  },
  {
    "id" : "3b762f82-099c-4e1f-9d97-1e5883c6fc58",
    "prId" : 58438,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58438#pullrequestreview-89713994",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc66c634-808d-47ed-b266-991edde2f577",
        "parentId" : null,
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "just `ref` here i.e. `$ref` -> `ref`",
        "createdAt" : "2018-01-18T08:21:42Z",
        "updatedAt" : "2018-01-22T13:52:01Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      },
      {
        "id" : "a4b15c1f-ad1a-4b5b-83fb-85d0ac094fd4",
        "parentId" : "fc66c634-808d-47ed-b266-991edde2f577",
        "authorId" : "6bc21d49-bdab-413c-b469-948dd1554b98",
        "body" : "changed",
        "createdAt" : "2018-01-18T09:20:16Z",
        "updatedAt" : "2018-01-22T13:52:01Z",
        "lastEditedBy" : "6bc21d49-bdab-413c-b469-948dd1554b98",
        "tags" : [
        ]
      }
    ],
    "commit" : "5819a608b9fd96587774332513562fb7a46b439a",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +314,318 @@\n\tif schema.Ref != nil {\n\t\tallErrs = append(allErrs, field.Forbidden(fldPath.Child(\"$ref\"), \"$ref is not supported\"))\n\t}\n"
  },
  {
    "id" : "2c940ef4-aca1-4598-a95c-14792143d559",
    "prId" : 58438,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58438#pullrequestreview-90427201",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "718a7a66-0eea-459a-8733-444f614d138e",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Does this mean we forbid schemata like described in https://spacetelescope.github.io/understanding-json-schema/structuring.html with local definitions? Then I do not agree with this PR.\r\n\r\n",
        "createdAt" : "2018-01-22T08:49:39Z",
        "updatedAt" : "2018-01-22T13:52:01Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "c865119c-d692-4e62-856c-9ccdc5c064ce",
        "parentId" : "718a7a66-0eea-459a-8733-444f614d138e",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "To my understanding the `id` of a document is only used as a base for relative references. With `#/definitions/foo` you can reference absolute definitions. The later is completely fine and users might use them. If we forbid that suddenly, we break compatibility.",
        "createdAt" : "2018-01-22T08:58:15Z",
        "updatedAt" : "2018-01-22T13:52:01Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "cb90eef3-1d1d-4a1e-b192-d66d29d37630",
        "parentId" : "718a7a66-0eea-459a-8733-444f614d138e",
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "@sttts We don't support definitions now:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/23226c24d4fd11bcb7aafda128aecbe3de3a0732/staging/src/k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/validation/validation.go#L313-L315\r\n\r\nbecause OpenAPI v3 does not support definitions (https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject)\r\n\r\n`Ref` is used in OpenAPI v3 like this: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#reference-object.",
        "createdAt" : "2018-01-22T09:07:11Z",
        "updatedAt" : "2018-01-22T13:52:01Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      },
      {
        "id" : "4223f1ba-a71a-45f7-bf1f-8e20a9baad17",
        "parentId" : "718a7a66-0eea-459a-8733-444f614d138e",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Alright. Poor OpenAPI (again). Then, without definitions my concerns are gone.\r\n\r\n/unhold\r\n",
        "createdAt" : "2018-01-22T09:11:33Z",
        "updatedAt" : "2018-01-22T13:52:01Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "ff4f7154-159d-45d3-ba56-3da698e6c642",
        "parentId" : "718a7a66-0eea-459a-8733-444f614d138e",
        "authorId" : "6bc21d49-bdab-413c-b469-948dd1554b98",
        "body" : "thanks for your review",
        "createdAt" : "2018-01-22T10:36:29Z",
        "updatedAt" : "2018-01-22T13:52:01Z",
        "lastEditedBy" : "6bc21d49-bdab-413c-b469-948dd1554b98",
        "tags" : [
        ]
      }
    ],
    "commit" : "5819a608b9fd96587774332513562fb7a46b439a",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +313,317 @@\t}\n\n\tif schema.Ref != nil {\n\t\tallErrs = append(allErrs, field.Forbidden(fldPath.Child(\"$ref\"), \"$ref is not supported\"))\n\t}"
  },
  {
    "id" : "d547d23e-bc67-4afb-b1f3-01f593919eb0",
    "prId" : 47263,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47263#pullrequestreview-57244781",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd766fba-fbdf-4dbc-8a3a-bdc47746f89a",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "can you check that the error message include the field name usually? I thought the output would be something like `fldPath + \" \" + err`",
        "createdAt" : "2017-08-18T14:35:58Z",
        "updatedAt" : "2017-08-29T16:05:36Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "97d0e959-0ae1-4e52-b134-1dc6fe7a8a72",
        "parentId" : "bd766fba-fbdf-4dbc-8a3a-bdc47746f89a",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "compare e.g. https://github.com/kubernetes/kubernetes/pull/47263/commits/cbab6d02ec026d6c7808a9d89a41e79bcf84b818#diff-34aedeefa7784abbe7531bae68833ba6R144",
        "createdAt" : "2017-08-18T14:41:30Z",
        "updatedAt" : "2017-08-29T16:05:36Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "6350fb53-754f-4050-9a41-542817ce5b25",
        "parentId" : "bd766fba-fbdf-4dbc-8a3a-bdc47746f89a",
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "the error message is: `CustomResourceDefinition.apiextensions.k8s.io \"noxus.mygroup.example.com\" is invalid: spec.validation.openAPIV3Schema.additionalProperties: Forbidden: additionalProperties cannot be set to false` which looks fine. So, leaving this as-is.",
        "createdAt" : "2017-08-18T16:08:43Z",
        "updatedAt" : "2017-08-29T16:05:36Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ba1523a8e36c3121a9e08bfac7b4f342bb8ccb3",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +203,207 @@\n\tif schema.UniqueItems == true {\n\t\tallErrs = append(allErrs, field.Forbidden(fldPath.Child(\"uniqueItems\"), \"uniqueItems cannot be set to true since the runtime complexity becomes quadratic\"))\n\t}\n"
  },
  {
    "id" : "3edf7e4b-2207-415c-9d27-78f451b2d406",
    "prId" : 47263,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47263#pullrequestreview-57245489",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0395a2cc-add7-46e0-8c4b-31d69a68813e",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "if the flag is off, you should disallow setting it: https://github.com/kubernetes/community/pull/869",
        "createdAt" : "2017-08-18T14:59:26Z",
        "updatedAt" : "2017-08-29T16:05:36Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "3dfdb6a0-b95a-4de3-8100-9da40e81440a",
        "parentId" : "0395a2cc-add7-46e0-8c4b-31d69a68813e",
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "@deads2k Had done that earlier. But after this discussion: https://github.com/kubernetes/community/pull/913#discussion_r133227732, it was decided to drop the feature: https://github.com/kubernetes/kubernetes/pull/47263/files#diff-18bbf71961e0d43572fc7357183260feR51",
        "createdAt" : "2017-08-18T15:04:02Z",
        "updatedAt" : "2017-08-29T16:05:36Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      },
      {
        "id" : "22dfb08f-18c3-484f-be7a-7353cd98985f",
        "parentId" : "0395a2cc-add7-46e0-8c4b-31d69a68813e",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "belt and suspenders... I would clear it (but not in validation... maybe in PrepareForCreate/PrepareForUpdate?) *and* ensure it is not set in validation",
        "createdAt" : "2017-08-18T15:25:11Z",
        "updatedAt" : "2017-08-29T16:05:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "029ab283-2088-47cd-939a-7607df374529",
        "parentId" : "0395a2cc-add7-46e0-8c4b-31d69a68813e",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "That's done as well.",
        "createdAt" : "2017-08-18T16:11:48Z",
        "updatedAt" : "2017-08-29T16:05:36Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ba1523a8e36c3121a9e08bfac7b4f342bb8ccb3",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +106,110 @@\tallErrs = append(allErrs, ValidateCustomResourceDefinitionNames(&spec.Names, fldPath.Child(\"names\"))...)\n\n\tif utilfeature.DefaultFeatureGate.Enabled(apiextensionsfeatures.CustomResourceValidation) {\n\t\tallErrs = append(allErrs, ValidateCustomResourceDefinitionValidation(spec.Validation, fldPath.Child(\"validation\"))...)\n\t} else if spec.Validation != nil {"
  }
]