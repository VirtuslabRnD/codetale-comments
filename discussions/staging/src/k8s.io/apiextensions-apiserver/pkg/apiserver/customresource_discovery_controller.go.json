[
  {
    "id" : "79c11ced-4bb1-4a59-a4e2-07f5f72528cb",
    "prId" : 89145,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89145#pullrequestreview-376322015",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3662187a-a7ae-43ec-90ff-04c60fbcf39e",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "panic on these please.  Based on the code it should never happen, but I don't want to ever silently *not* run this.",
        "createdAt" : "2020-03-16T12:24:39Z",
        "updatedAt" : "2020-03-17T13:05:18Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "c4d9ee2d-3796-45fe-a685-8e17f938687c",
        "parentId" : "3662187a-a7ae-43ec-90ff-04c60fbcf39e",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "ok, timeout happens only when stopCh closed, so we can simply error",
        "createdAt" : "2020-03-17T19:00:20Z",
        "updatedAt" : "2020-03-17T19:00:20Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "34f57377ae8692fc8a4a6e887e12d78ea5739464",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +232,236 @@\t\treturn true, nil\n\t}, stopCh); err == wait.ErrWaitTimeout {\n\t\tutilruntime.HandleError(fmt.Errorf(\"timed out waiting for discovery endpoint to initialize\"))\n\t\treturn\n\t} else if err != nil {"
  },
  {
    "id" : "807dc559-85ca-491a-a4b0-9d7a52af0bbc",
    "prId" : 67205,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67205#pullrequestreview-174602399",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4b4b896-0c62-418b-8050-32cf65a57570",
        "parentId" : null,
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Add a comment here that explains we do not to continue even if versionedSchema is nil as it maybe a removal of the schema for this CRD.",
        "createdAt" : "2018-11-13T22:26:49Z",
        "updatedAt" : "2018-11-16T00:40:04Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "4625bf7dadb1ecc1d87c0f5d0c2ea22a7d698e41",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +143,147 @@\t\t\t// We aggregate the schema even if it's nil as it maybe a removal of the schema for this CRD,\n\t\t\t// and the aggreated OpenAPI spec should reflect this change.\n\t\t\tcrdspec, etag, err := apiextensionsopenapi.CustomResourceDefinitionOpenAPISpec(&crd.Spec, version.Version, versionedSchema)\n\t\t\tif err != nil {\n\t\t\t\treturn err"
  },
  {
    "id" : "ac26376e-354c-4a12-91b9-55d4aad3b7d9",
    "prId" : 63830,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63830#pullrequestreview-120272013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62bd345a-806f-40b7-9c77-ccc6b21863b8",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "with multiple versions supported, this statement is no longer true:\r\n> Versions: apiVersionsForDiscovery,\r\n> // the preferred versions for a group is arbitrary since there cannot be duplicate resources\r\n> PreferredVersion: apiVersionsForDiscovery[0],\r\n\r\nthe ordering of apiVersionsForDiscovery needs to reflect the ordering of the versions in the CRDs for the group (and the [open question](https://github.com/kubernetes/kubernetes/pull/63830/commits/4b38b4966a2c6c74f6c57b4363e15d5f7079267b#r188299377) about conflicting order needs resolving).",
        "createdAt" : "2018-05-15T14:53:38Z",
        "updatedAt" : "2018-05-22T20:54:46Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c25514a1ee513e1a7ad1c3c572ab9dd32a395d28",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +119,123 @@\t\t\tcontinue\n\t\t}\n\t\tfoundVersion = true\n\n\t\tverbs := metav1.Verbs([]string{\"delete\", \"deletecollection\", \"get\", \"list\", \"patch\", \"create\", \"update\", \"watch\"})"
  },
  {
    "id" : "44de3928-6ce6-469b-8de6-d539ccef9d63",
    "prId" : 63830,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63830#pullrequestreview-120273951",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "103166f7-fef1-48f7-a4c8-d1b2d386238d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "same change needed to enqueue both old and new in updateCustomResourceDefinition?",
        "createdAt" : "2018-05-15T14:57:01Z",
        "updatedAt" : "2018-05-22T20:54:46Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c25514a1ee513e1a7ad1c3c572ab9dd32a395d28",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +241,245 @@}\n\nfunc (c *DiscoveryController) addCustomResourceDefinition(obj interface{}) {\n\tcastObj := obj.(*apiextensions.CustomResourceDefinition)\n\tglog.V(4).Infof(\"Adding customresourcedefinition %s\", castObj.Name)"
  }
]