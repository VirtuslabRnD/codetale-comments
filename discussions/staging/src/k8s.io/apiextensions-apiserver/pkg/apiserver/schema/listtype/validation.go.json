[
  {
    "id" : "3a0e1ada-7fb6-48b8-9cf4-88e3177607b5",
    "prId" : 84920,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84920#pullrequestreview-319495825",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55e7f8ba-8764-4e12-8a67-79c7c09b2a62",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I would have guessed a null item was treated like an empty map for key-computation purposes? e.g. the key of `null` is `{}` and the key of {} is `{}`. I wouldn't expect to be allowed to have `null` and `{}` both present in a map-list.",
        "createdAt" : "2019-11-13T06:49:06Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ea957724-a8f7-4f9e-9136-b0744257f77c",
        "parentId" : "55e7f8ba-8764-4e12-8a67-79c7c09b2a62",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "If that turns out to be the case, make sure there's a unit test for this",
        "createdAt" : "2019-11-13T06:49:18Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "2a4b328b-4e9e-4907-a033-5433541f8c3b",
        "parentId" : "55e7f8ba-8764-4e12-8a67-79c7c09b2a62",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "adding a `map[string]interface{}{}` here would let us use the index as-is in case of a duplicate\r\n\r\ncould share a single empty map between all nil items to avoid useless allocations",
        "createdAt" : "2019-11-13T06:50:05Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "bd61d690-06b7-47e4-a637-e0d64382c40b",
        "parentId" : "55e7f8ba-8764-4e12-8a67-79c7c09b2a62",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I implemented strict comparison now. Should we unify enpty and null? We have to decided => Slack.",
        "createdAt" : "2019-11-16T10:14:15Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "4c06d41b-0326-4cf2-9698-a3a599daa3f8",
        "parentId" : "55e7f8ba-8764-4e12-8a67-79c7c09b2a62",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "talked offline. for list-type: map, a null object and an object missing the key attribute should be equivalent for that key. an object with the key attribute explicitly set to null is distinct\r\n\r\n\r\n```\r\nlist-type: map\r\nlist-map-keys: [foo]\r\n\r\n[\r\n    null,       --> {foo:undefined}\r\n    {},         --> {foo:undefined}\r\n    {foo:null}  --> {foo:null}\r\n]\r\n```",
        "createdAt" : "2019-11-20T01:26:18Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ecd2f550-0d19-4593-b015-179625e342b3",
        "parentId" : "55e7f8ba-8764-4e12-8a67-79c7c09b2a62",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "for `list-type: set`, we compare list items strictly (`null != {} != [] != \"\"`). this would be another candidate for a normalization pass that would normalize {} and [] to null prior to comparison.",
        "createdAt" : "2019-11-20T01:37:12Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "8066a4c6-d010-4dda-aa45-46f41caa7594",
        "parentId" : "55e7f8ba-8764-4e12-8a67-79c7c09b2a62",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Updated the algorithm for maps (sets is unchanged), and also added test cases for single-key and multi-key cases with nil items, nil fields and undefined fields.",
        "createdAt" : "2019-11-20T03:51:55Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea45da7e52a77709aa762965e28072830ef89984",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +191,195 @@\t\tif x == nil {\n\t\t\tkeys = append(keys, key)\n\t\t\tcontinue\n\t\t}\n"
  },
  {
    "id" : "68bc5071-f182-4020-8eff-3033de8de80c",
    "prId" : 84920,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84920#pullrequestreview-317963664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4f2ee06-66a9-4619-946f-14436cdc369d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "should we check that k is scalar and error early if not?",
        "createdAt" : "2019-11-13T06:54:15Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c3922822-0958-4636-8349-83b19d3e6007",
        "parentId" : "d4f2ee06-66a9-4619-946f-14436cdc369d",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Don't we check that in the schema already that the field types are scalar? Then we should never get here, although this code will even work if they are not scalar.",
        "createdAt" : "2019-11-16T10:15:45Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea45da7e52a77709aa762965e28072830ef89984",
    "line" : 200,
    "diffHunk" : "@@ -1,1 +198,202 @@\t\tfor _, keyField := range s.XListMapKeys {\n\t\t\tif k, ok := x[keyField]; ok {\n\t\t\t\tkey[keyField] = k\n\t\t\t}\n\t\t}"
  },
  {
    "id" : "38599d11-f643-46b7-b933-3ade71ecc1fd",
    "prId" : 84920,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84920#pullrequestreview-317962369",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "336d88d5-9226-4741-806e-fef6def2fcd6",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "same comments about treating null items like empty maps",
        "createdAt" : "2019-11-13T06:55:29Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "66cf876d-6fc3-48fd-9be3-820abbfc3c82",
        "parentId" : "336d88d5-9226-4741-806e-fef6def2fcd6",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "would appending null be sensible here?",
        "createdAt" : "2019-11-13T07:00:08Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "4b698ce3-daa9-4858-b075-bb0d60859bab",
        "parentId" : "336d88d5-9226-4741-806e-fef6def2fcd6",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Nil is used for the null (single-) key value. Hence, we have to exclude the object nulls here. Those are handled above already. Adding comment.",
        "createdAt" : "2019-11-16T09:41:25Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea45da7e52a77709aa762965e28072830ef89984",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +152,156 @@\t\t\tif x == nil {\n\t\t\t\tkeys = append(keys, unspecifiedKeyValue{}) // nil object means unspecified key\n\t\t\t\tcontinue\n\t\t\t}\n"
  },
  {
    "id" : "af3cbdf8-75bc-4ead-b7e3-bde01312df7d",
    "prId" : 84920,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84920#pullrequestreview-317963459",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ebb0cf3c-1170-4dc5-a1e0-7db8a9dbc86d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if we treat nil/no-key items consistently by appending them, I think we can drop this",
        "createdAt" : "2019-11-13T07:01:48Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "67ae3f35-7353-46c4-9467-29c3256ec5cb",
        "parentId" : "ebb0cf3c-1170-4dc5-a1e0-7db8a9dbc86d",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Fixed with `struct{}` aliases.",
        "createdAt" : "2019-11-16T10:13:02Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea45da7e52a77709aa762965e28072830ef89984",
    "line" : 181,
    "diffHunk" : "@@ -1,1 +179,183 @@\t\t\tdefault:\n\t\t\t\terrs = append(errs, field.Duplicate(fldPath.Index(i), map[string]interface{}{keyField: keys[i]}))\n\t\t\t}\n\t\t}\n"
  },
  {
    "id" : "00105eda-a85a-4bdc-93c5-d0b560111446",
    "prId" : 84920,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84920#pullrequestreview-360384610",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1f0ad8b-b563-4257-a8db-463568ee6136",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I forgot about this bit... is there a cheaper object hash check we can do? how expensive is marshaling in validation for big lists?",
        "createdAt" : "2019-11-20T22:02:38Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d5661815-6ed7-4a06-b37d-b0a9b3c307f4",
        "parentId" : "d1f0ad8b-b563-4257-a8db-463568ee6136",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "@jpbetz, do you have an opinion on that?",
        "createdAt" : "2020-02-12T18:52:14Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "01cb1a03-7bee-4935-ade4-fb0dc8a12e9e",
        "parentId" : "d1f0ad8b-b563-4257-a8db-463568ee6136",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "If marshalling is written properly with minimal allocations (which I assume) and string escpaing is optimal, I don't think there is a much more performant way theoretically than marshalling. We could potentially use a mechanism that does not need reflection. The string that comes out of that is hashed anyway in the map implementation of Golang.",
        "createdAt" : "2020-02-18T14:32:49Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea45da7e52a77709aa762965e28072830ef89984",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +103,107 @@\t\tswitch x.(type) {\n\t\tcase map[string]interface{}, []interface{}:\n\t\t\tbs, err := json.Marshal(x)\n\t\t\tif err != nil {\n\t\t\t\treturn nil, field.Invalid(fldPath.Index(i), x, \"internal error\")"
  },
  {
    "id" : "73464937-1e7d-45b3-bd7a-69b533c9166b",
    "prId" : 84920,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84920#pullrequestreview-360896428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a30b57a3-c0de-452c-bb4e-dee1f9f08580",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Can we aggregate more of these?",
        "createdAt" : "2020-02-18T22:57:48Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "dc629c34-f4b3-4d65-80dc-ca80cef99e84",
        "parentId" : "a30b57a3-c0de-452c-bb4e-dee1f9f08580",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "done",
        "createdAt" : "2020-02-19T07:46:14Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea45da7e52a77709aa762965e28072830ef89984",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +135,139 @@\tfor i, x := range obj {\n\t\tif _, ok := x.(map[string]interface{}); x != nil && !ok {\n\t\t\treturn field.ErrorList{field.Invalid(fldPath.Index(i), x, \"must be an object for an array of list-type map\")}\n\t\t}\n\t}"
  },
  {
    "id" : "92c1e3a5-e635-423b-b218-1b0916865032",
    "prId" : 84920,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84920#pullrequestreview-360888089",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b03043ef-b0e8-43aa-bf4c-ab3089408f77",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "which also happens to be the vast majority of the use-cases",
        "createdAt" : "2020-02-18T22:59:20Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "aeb26a12-b834-446a-8dd2-fce7e3766b7e",
        "parentId" : "b03043ef-b0e8-43aa-bf4c-ab3089408f77",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "we can add more special cases if it turns out to be helpful for performance.",
        "createdAt" : "2020-02-19T07:26:37Z",
        "updatedAt" : "2020-02-25T17:35:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea45da7e52a77709aa762965e28072830ef89984",
    "line" : 145,
    "diffHunk" : "@@ -1,1 +143,147 @@\t}\n\n\t// optimize simple case of one key\n\tif len(s.XListMapKeys) == 1 {\n\t\ttype unspecifiedKeyValue struct{}"
  }
]