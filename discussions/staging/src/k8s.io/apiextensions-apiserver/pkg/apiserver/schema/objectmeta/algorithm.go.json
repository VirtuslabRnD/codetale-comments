[
  {
    "id" : "55761f67-0eeb-42dc-8141-ee090a82aa25",
    "prId" : 78788,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78788#pullrequestreview-247388796",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f00ed51e-5014-4343-a75a-cd3f43f32941",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "does this drop `metadata` completely in cases where the existing data is not an object type and `dropInvalidFields` is true? (e.g. `metadata: []`, `metadata: true`)?",
        "createdAt" : "2019-06-09T03:24:28Z",
        "updatedAt" : "2019-06-10T14:36:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "eb8603e5-d07c-4852-a30f-71a9fb27d11d",
        "parentId" : "f00ed51e-5014-4343-a75a-cd3f43f32941",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "that wasn't an issue before for CRD top-level metadata because our API validation ensured that at least name was set, so metadata must be an object. for existing persisted data on a CRD that just flipped a property to `x-kubernetes-embedded-resource: true`, we have no guarantees on what the data in etcd could be",
        "createdAt" : "2019-06-09T03:25:49Z",
        "updatedAt" : "2019-06-10T14:36:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d86cc85448dbb733eef1c864742c043484a6661e",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +59,63 @@\t\t\t\t\t}\n\t\t\t\tcase \"metadata\":\n\t\t\t\t\tmeta, found, err := GetObjectMeta(x, c.dropInvalidFields)\n\t\t\t\t\tif err != nil {\n\t\t\t\t\t\tif !c.dropInvalidFields {"
  },
  {
    "id" : "daba58e8-e64e-4428-853e-c2bb08ba9886",
    "prId" : 78788,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78788#pullrequestreview-247388886",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb99c3bc-6519-4661-b792-80befe71d465",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I guess a metadata of the wrong type would hit this case and we'd return the existing invalid `metadata` content, rather than drop it",
        "createdAt" : "2019-06-09T03:27:08Z",
        "updatedAt" : "2019-06-10T14:36:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e61c572a-0e35-4283-b4ff-d7a627a8323d",
        "parentId" : "cb99c3bc-6519-4661-b792-80befe71d465",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "just got to the testcases below, looks good",
        "createdAt" : "2019-06-09T03:30:58Z",
        "updatedAt" : "2019-06-10T14:36:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d86cc85448dbb733eef1c864742c043484a6661e",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +64,68 @@\t\t\t\t\t\t\treturn field.Invalid(pth.Child(\"metadata\"), v, err.Error())\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// pass through on error if dropInvalidFields is true\n\t\t\t\t\t} else if found {\n\t\t\t\t\t\tif err := SetObjectMeta(x, meta); err != nil {"
  }
]