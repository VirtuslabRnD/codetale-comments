[
  {
    "id" : "9a8a96a7-52e4-4638-94c4-cd1f4f557ad4",
    "prId" : 77207,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77207#pullrequestreview-235450463",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c3e0e53-7336-421b-ab21-4ffbc694ef8e",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "checking each individual field and adding specific errors is good. what will detect if a new field is added to generics we need to forbid here? we've used fuzzing or reflection unit tests in the past to catch this",
        "createdAt" : "2019-05-08T16:21:02Z",
        "updatedAt" : "2019-05-09T19:41:12Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "45fd0886-e406-4af4-ac62-c3c716a2fe91",
        "parentId" : "8c3e0e53-7336-421b-ab21-4ffbc694ef8e",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "added a randomized completeness check.\r\n\r\nWe could also add a fallback in the validation comparing to the zero value. But I prefer CI to show this than some hidden, strange validation error.",
        "createdAt" : "2019-05-09T08:07:02Z",
        "updatedAt" : "2019-05-09T19:41:12Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "c836a2518913c90d266fdd3919fabc55b6893b63",
    "line" : 230,
    "diffHunk" : "@@ -1,1 +228,232 @@\t\tallErrs = append(allErrs, field.Forbidden(fldPath.Child(\"nullable\"), \"must be false to be structural\"))\n\t}\n\n\tif v.ForbiddenExtensions.XPreserveUnknownFields {\n\t\tallErrs = append(allErrs, field.Forbidden(fldPath.Child(\"x-kubernetes-preserve-unknown-fields\"), \"must be false to be structural\"))"
  },
  {
    "id" : "fa113402-7f40-445f-9d7f-54c14e1fe3ee",
    "prId" : 77207,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77207#pullrequestreview-235450974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13bfd82e-71bd-4532-b926-da4dfd2a694a",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "same question about detecting new fields in ForbiddenExtensions we should fail on",
        "createdAt" : "2019-05-08T16:21:17Z",
        "updatedAt" : "2019-05-09T19:41:12Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5af09e97-2bb9-45dd-a4f3-27422abdc572",
        "parentId" : "13bfd82e-71bd-4532-b926-da4dfd2a694a",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "same test",
        "createdAt" : "2019-05-09T08:08:27Z",
        "updatedAt" : "2019-05-09T19:41:12Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "c836a2518913c90d266fdd3919fabc55b6893b63",
    "line" : 240,
    "diffHunk" : "@@ -1,1 +238,242 @@\t\tallErrs = append(allErrs, field.Forbidden(fldPath.Child(\"x-kubernetes-int-or-string\"), \"must be false to be structural\"))\n\t}\n\n\treturn allErrs\n}"
  },
  {
    "id" : "30489ec8-e31f-47af-84bb-09e9ea942110",
    "prId" : 77207,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77207#pullrequestreview-235464295",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37370f8e-9fb6-41ed-8fcd-37610f6da2dc",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "is there a reason to export ValidateStructural and ValidateStructuralCompleteness separately (validateStructural is used internally multiple times and makes sense... I'm just referring to the exported entry point(s))? when would we use one and not the other on a top-level CRD schema? I'd have a hard time explaining the difference between these to someone, and I'm concerned callers will accidentally only call one when they should call both",
        "createdAt" : "2019-05-08T20:10:03Z",
        "updatedAt" : "2019-05-09T19:41:12Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f0bd36cb-6376-4400-b0e7-044d7b297c54",
        "parentId" : "37370f8e-9fb6-41ed-8fcd-37610f6da2dc",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "good point. Have made all sub-funcs (including completeness) private and only export `ValidateStructural`.",
        "createdAt" : "2019-05-09T08:39:46Z",
        "updatedAt" : "2019-05-09T19:41:12Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "c836a2518913c90d266fdd3919fabc55b6893b63",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@// * every specified field or array in s is also specified outside of value validation.\n// * additionalProperties at the root is not allowed.\nfunc ValidateStructural(s *Structural, fldPath *field.Path) field.ErrorList {\n\tallErrs := field.ErrorList{}\n"
  }
]