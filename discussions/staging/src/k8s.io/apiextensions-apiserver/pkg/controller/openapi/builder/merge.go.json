[
  {
    "id" : "d1015b91-e1e0-4ea8-8442-14e38692f317",
    "prId" : 81436,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81436#pullrequestreview-280996685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c0d046d-2b59-4667-b355-248bbbcfe339",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "we cannot assume that staticSpec has all kube-apiserver paths. Assume it only has apiextension, and maybe some discovery/status paths.",
        "createdAt" : "2019-08-28T17:45:42Z",
        "updatedAt" : "2019-08-29T11:25:36Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a10b0dc3158d714214c7364de0277f8146dd202",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +25,29 @@// The static spec has the highest priority, and its paths and definitions won't get overlapped by\n// user-defined CRDs. None of the input is mutated, but input and output share data structures.\nfunc MergeSpecs(staticSpec *spec.Swagger, crdSpecs ...*spec.Swagger) (*spec.Swagger, error) {\n\t// create shallow copy of staticSpec, but replace paths and definitions because we modify them.\n\tspecToReturn := *staticSpec"
  },
  {
    "id" : "7a6df3e4-e5ab-4944-9fb8-e5e9f80048c7",
    "prId" : 81436,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81436#pullrequestreview-281242647",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d9649ec-98eb-43e4-852c-d293ddce8117",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "please comment why we do this in the given order.",
        "createdAt" : "2019-08-29T06:30:20Z",
        "updatedAt" : "2019-08-29T11:25:36Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a10b0dc3158d714214c7364de0277f8146dd202",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +52,56 @@\t// The static spec has the highest priority. Resolve conflicts to prevent user-defined\n\t// CRDs potentially overlapping the built-in apiextensions API\n\tif err := aggregator.MergeSpecsIgnorePathConflict(&specToReturn, crdSpec); err != nil {\n\t\treturn nil, err\n\t}"
  }
]