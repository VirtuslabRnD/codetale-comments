[
  {
    "id" : "53b88e0d-8f58-46f5-879b-a48e512f86fa",
    "prId" : 99661,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99661#pullrequestreview-606741594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "457e7057-0786-467f-82e0-b3b387236ae2",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Is a.status going to be set prior to calling this method?",
        "createdAt" : "2021-03-08T21:32:12Z",
        "updatedAt" : "2021-03-10T01:02:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "c5c3e0ab-bab0-471f-a04e-ad38f1faff18",
        "parentId" : "457e7057-0786-467f-82e0-b3b387236ae2",
        "authorId" : "f4ac3f8f-7ffb-4966-8247-0d4dc4a5bca1",
        "body" : "Yes, it looks like it gets created here https://github.com/kubernetes/kubernetes/pull/99661/files#diff-01e7a2059fe62e95ec32e2589c01b7218100de327647c641c334d38f2c5aa06eL737-R752\r\n\r\non the condition that subresources.Status is not nil.\r\n\r\nI believe this is the only place `customresource.NewStrategy` is called.",
        "createdAt" : "2021-03-08T21:53:25Z",
        "updatedAt" : "2021-03-10T01:02:29Z",
        "lastEditedBy" : "f4ac3f8f-7ffb-4966-8247-0d4dc4a5bca1",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1fac8cbd9289d95db4831a83239292ed56ce59d",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +80,84 @@\tfields := map[fieldpath.APIVersion]*fieldpath.Set{}\n\n\tif a.status != nil {\n\t\tfields[fieldpath.APIVersion(a.kind.GroupVersion().String())] = fieldpath.NewSet(\n\t\t\tfieldpath.MakePathOrDie(\"status\"),"
  },
  {
    "id" : "66e525f9-8208-4102-b838-582a118250d6",
    "prId" : 69059,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69059#pullrequestreview-165394039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cc08062-feae-4f51-a717-9ca6e591bd72",
        "parentId" : null,
        "authorId" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "body" : "It seems like if you do this before the if/else branch that sets `incrementGeneration`, you can delete everything in the `if` branch and just do the stuff in `else` every time, assuming that you accept the suggestion from @smarterclayton on what Generation means when the resource has opted into spec/status convention.",
        "createdAt" : "2018-10-16T22:41:25Z",
        "updatedAt" : "2018-10-17T18:02:59Z",
        "lastEditedBy" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "tags" : [
        ]
      }
    ],
    "commit" : "417db5f70812f1d5018b188fc6e56c70ff291216",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +94,98 @@\toldCustomResource := oldCustomResourceObject.UnstructuredContent()\n\n\t// If the /status subresource endpoint is installed, update is not allowed to set status.\n\tif utilfeature.DefaultFeatureGate.Enabled(apiextensionsfeatures.CustomResourceSubresources) && a.status != nil {\n\t\t_, ok1 := newCustomResource[\"status\"]"
  },
  {
    "id" : "85ae38b4-f63a-4120-a657-9e0b84a98201",
    "prId" : 47263,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47263#pullrequestreview-52773825",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04f552ec-6d9c-460a-9575-1a536bb28141",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "is there are reason `obj` is not a `*unstructured.Unstructured` in the function signature? Do we need the type case below?",
        "createdAt" : "2017-07-27T20:13:34Z",
        "updatedAt" : "2017-08-29T16:05:36Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "801bdd0a-86d7-4087-866f-1d503b00a4b5",
        "parentId" : "04f552ec-6d9c-460a-9575-1a536bb28141",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Oh, there is a reason: this is part of the Strategy interface, isn't it? So we should be pretty sure the type cast below won't error out.",
        "createdAt" : "2017-07-27T20:14:38Z",
        "updatedAt" : "2017-08-29T16:05:36Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "c9bf104e-92b2-46cc-b06f-d8930a0a3a2e",
        "parentId" : "04f552ec-6d9c-460a-9575-1a536bb28141",
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "Yes :)",
        "createdAt" : "2017-07-27T20:18:30Z",
        "updatedAt" : "2017-08-29T16:05:36Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ba1523a8e36c3121a9e08bfac7b4f342bb8ccb3",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +123,127 @@}\n\nfunc (a customResourceValidator) Validate(ctx genericapirequest.Context, obj runtime.Object) field.ErrorList {\n\taccessor, err := meta.Accessor(obj)\n\tif err != nil {"
  }
]