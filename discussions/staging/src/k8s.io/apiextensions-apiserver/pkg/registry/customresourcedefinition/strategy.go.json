[
  {
    "id" : "ff28048d-f671-4084-8bae-bfd383becb3d",
    "prId" : 70211,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70211#pullrequestreview-168601402",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81238336-caa0-4332-8f44-e0010b74c6de",
        "parentId" : null,
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "I'm okay with auto-clearing when gate is off to make the apiserver close to if the feature doesn't exist (auto-clearing on CREATE has been approved in the KEP, but for UPDATE it wasn't clear to me). I still kept the redundant validation for now.\r\n\r\ncc @mbohlool @liggitt ",
        "createdAt" : "2018-10-25T01:34:43Z",
        "updatedAt" : "2018-11-07T17:39:27Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      },
      {
        "id" : "965a27de-1a3b-4387-a073-e3b890d987c8",
        "parentId" : "81238336-caa0-4332-8f44-e0010b74c6de",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "keeping validation rules as stateless as possible would be better, I think. what @mbohlool ended up with in https://github.com/kubernetes/kubernetes/pull/67795/files#diff-54fdd67617b0f2ef1b5a09148f77303eR202 seems easier to understand:\r\n\r\n- clear in PrepareForCreate when feature is disabled (like you did here)\r\n- clear in PrepareForUpdate when feature is disabled and old object isn't using the feature (like you did here)\r\n- make validation rules look only at data in the object to determine validity (not feature enablement or previous object use)\r\n\r\nlet's stick to that approach for the new fields added here (dropping allowingPerVersionField and feature-gate checks from your new validation code)\r\n\r\nI plan to sweep existing strategies and validation in the next week to get them behaving more consistently.",
        "createdAt" : "2018-10-30T02:58:16Z",
        "updatedAt" : "2018-11-07T17:39:27Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b545bbc13095f9708cf0d352451137fe841157f",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +137,141 @@\t// use per-version fields.\n\tif !utilfeature.DefaultFeatureGate.Enabled(apiextensionsfeatures.CustomResourceWebhookConversion) &&\n\t\t!hasPerVersionField(oldCRD.Spec.Versions) {\n\t\tfor i := range newCRD.Spec.Versions {\n\t\t\tnewCRD.Spec.Versions[i].Schema = nil"
  },
  {
    "id" : "6955ea2c-e25b-45c4-8449-11637273a2ac",
    "prId" : 70211,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70211#pullrequestreview-172410545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffcd24e1-26fd-4a2a-b00b-9eda44b248f6",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "why the hasPerVersionField call?",
        "createdAt" : "2018-11-06T09:31:36Z",
        "updatedAt" : "2018-11-07T17:39:27Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "42253383-45df-40a8-98c6-623d16f116bf",
        "parentId" : "ffcd24e1-26fd-4a2a-b00b-9eda44b248f6",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "We allow a CRD to continue updating per-version fields if it already has set any one of them (schema/subresources/columns), even when the gate is off.\r\n\r\nIt's around the topic of how feature gate should work.",
        "createdAt" : "2018-11-06T18:16:07Z",
        "updatedAt" : "2018-11-07T17:39:27Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      },
      {
        "id" : "7c974acd-a447-4512-a392-3388e69f208e",
        "parentId" : "ffcd24e1-26fd-4a2a-b00b-9eda44b248f6",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "missed oldCRD in the check and newCRD in the loop. Sgtm.",
        "createdAt" : "2018-11-07T09:54:08Z",
        "updatedAt" : "2018-11-07T17:39:27Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b545bbc13095f9708cf0d352451137fe841157f",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +137,141 @@\t// use per-version fields.\n\tif !utilfeature.DefaultFeatureGate.Enabled(apiextensionsfeatures.CustomResourceWebhookConversion) &&\n\t\t!hasPerVersionField(oldCRD.Spec.Versions) {\n\t\tfor i := range newCRD.Spec.Versions {\n\t\t\tnewCRD.Spec.Versions[i].Schema = nil"
  },
  {
    "id" : "fec70f66-8101-4926-9966-6d66b66b79be",
    "prId" : 50764,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50764#pullrequestreview-56833255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d762ea6-f788-4e60-aaa9-0e899f7128f0",
        "parentId" : null,
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "Deletion won't work without updating finalizers (it will time out). However, this means we are touching some part of objectmeta while updating status...\r\n\r\nAlso, when `ResetObjectMetaForStatus` is added (https://github.com/kubernetes/kubernetes/pull/45552), it will not allow finalizers to be  updated.",
        "createdAt" : "2017-08-17T06:18:34Z",
        "updatedAt" : "2017-08-17T06:19:52Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c354615e08e7711c1be03ac7ef6e43178f2e80f",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +109,113 @@\n\t// Status updates are for only for updating status, not objectmeta.\n\t// TODO: Update after ResetObjectMetaForStatus is added to meta/v1.\n\tnewObj.Labels = oldObj.Labels\n\tnewObj.Annotations = oldObj.Annotations"
  },
  {
    "id" : "11b9c3ef-558f-4952-a233-275ab541d274",
    "prId" : 50764,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50764#pullrequestreview-57417531",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae99303d-1291-44bf-9277-c8a502bed8ca",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Why reset the status? ",
        "createdAt" : "2017-08-21T07:12:56Z",
        "updatedAt" : "2017-08-21T07:12:56Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "f5797e90-9455-4e2a-8250-b166f32b6f48",
        "parentId" : "ae99303d-1291-44bf-9277-c8a502bed8ca",
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "We don't allow end users to set status on creation.\r\n\r\nWe do that for core objects too: https://github.com/kubernetes/kubernetes/blob/master/pkg/registry/core/replicationcontroller/strategy.go#L64.",
        "createdAt" : "2017-08-21T07:16:34Z",
        "updatedAt" : "2017-08-21T07:16:34Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c354615e08e7711c1be03ac7ef6e43178f2e80f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +49,53 @@func (strategy) PrepareForCreate(ctx genericapirequest.Context, obj runtime.Object) {\n\tcrd := obj.(*apiextensions.CustomResourceDefinition)\n\tcrd.Status = apiextensions.CustomResourceDefinitionStatus{}\n\tcrd.Generation = 1\n}"
  },
  {
    "id" : "8962d3dc-ec9c-4166-bb33-695ba2c8af71",
    "prId" : 50764,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50764#pullrequestreview-57419812",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "721f0731-d84a-4d8d-af12-6590ced433be",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Why does this work without updating the controllers to use the status subresource? Do we have that? Or do we use that already? ðŸ‘€ ",
        "createdAt" : "2017-08-21T07:15:10Z",
        "updatedAt" : "2017-08-21T07:15:10Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "eee00ec9-468b-4bbc-94fb-3caefa7e4361",
        "parentId" : "721f0731-d84a-4d8d-af12-6590ced433be",
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/pkg/registry/customresourcedefinition/etcd.go#L170 :)",
        "createdAt" : "2017-08-21T07:22:05Z",
        "updatedAt" : "2017-08-21T07:22:06Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      },
      {
        "id" : "1fc96a98-9773-4d0b-b010-11be53c1931d",
        "parentId" : "721f0731-d84a-4d8d-af12-6590ced433be",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "If the controllers use /status already, all this looks fine.",
        "createdAt" : "2017-08-21T07:29:50Z",
        "updatedAt" : "2017-08-21T07:29:50Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c354615e08e7711c1be03ac7ef6e43178f2e80f",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +56,60 @@\tnewCRD := obj.(*apiextensions.CustomResourceDefinition)\n\toldCRD := old.(*apiextensions.CustomResourceDefinition)\n\tnewCRD.Status = oldCRD.Status\n\n\t// Any changes to the spec increment the generation number, any changes to the"
  }
]