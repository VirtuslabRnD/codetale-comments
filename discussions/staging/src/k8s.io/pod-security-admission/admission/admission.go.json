[
  {
    "id" : "9211969d-47fd-49f2-9be0-a02cca8a2787",
    "prId" : 103099,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103099#pullrequestreview-693383259",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0ec835e-654c-4d51-b28b-15bd4400de18",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "note to self, track this down.",
        "createdAt" : "2021-06-25T13:35:50Z",
        "updatedAt" : "2021-06-25T13:35:50Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "74c9c58d-a648-426c-9eb8-74fb4c003b61",
        "parentId" : "e0ec835e-654c-4d51-b28b-15bd4400de18",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "will clean up, this is trying to make sure Complete() was run and the results match (to avoid mutating in validation)",
        "createdAt" : "2021-06-25T15:15:24Z",
        "updatedAt" : "2021-06-25T15:15:24Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "df8c04df-cffb-47f4-86ae-2850920bef8e",
        "parentId" : "e0ec835e-654c-4d51-b28b-15bd4400de18",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "after frowning at this a bit, I still don't want to mutate in validation, or after calling validation... this feels awkward, but I might leave it for now (externally, calling Complete, then Validate feels ok)",
        "createdAt" : "2021-06-27T06:47:43Z",
        "updatedAt" : "2021-06-27T06:47:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f9011a4ae44605107cac329851c6e08985b38b8",
    "line" : 172,
    "diffHunk" : "@@ -1,1 +170,174 @@\t\tif p, err := admissionapi.ToPolicy(a.Configuration.Defaults); err != nil {\n\t\t\treturn err\n\t\t} else if !reflect.DeepEqual(p, a.defaultPolicy) {\n\t\t\treturn fmt.Errorf(\"default policy does not match; CompleteConfiguration() was not called before ValidateConfiguration()\")\n\t\t}"
  },
  {
    "id" : "5d8cff14-810d-46f5-967b-1a1319d434b2",
    "prId" : 103099,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103099#pullrequestreview-692925308",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfac441a-fc67-4adf-968b-e9d6d0d46fcc",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This allows by default instead of fully enumerating and denying unknown?  If this is used as a library by a webhook which may skew levels, I would expect enumeration and deny-by-default.",
        "createdAt" : "2021-06-25T13:39:34Z",
        "updatedAt" : "2021-06-25T13:39:34Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "a016d1e5-7f85-45ef-93ca-5c85cd5a44af",
        "parentId" : "bfac441a-fc67-4adf-968b-e9d6d0d46fcc",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yeah, enumerating seems fine",
        "createdAt" : "2021-06-25T15:13:09Z",
        "updatedAt" : "2021-06-25T15:13:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f9011a4ae44605107cac329851c6e08985b38b8",
    "line" : 289,
    "diffHunk" : "@@ -1,1 +287,291 @@\t// short-circuit on ignored subresources\n\tif ignoredPodSubresources[attrs.GetSubresource()] {\n\t\treturn allowedResponse()\n\t}\n\t// short-circuit on exempt namespaces and users"
  },
  {
    "id" : "e3478b94-e609-4933-90c5-abf5abedc770",
    "prId" : 103099,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103099#pullrequestreview-693385439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66f9d953-3ba9-45f3-8fc8-33e7c0e9c3d7",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Is there a shortcut link to which pod fields are mutable to help with reasoning about whether we got everything?\r\n",
        "createdAt" : "2021-06-25T13:41:59Z",
        "updatedAt" : "2021-06-25T13:41:59Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "7dc1276b-1d09-4891-9e8a-971370a545d7",
        "parentId" : "66f9d953-3ba9-45f3-8fc8-33e7c0e9c3d7",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "only API validation :-/\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/release-1.21/pkg/apis/core/validation/validation.go#L3947-L3949",
        "createdAt" : "2021-06-27T07:19:34Z",
        "updatedAt" : "2021-06-27T07:19:35Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f9011a4ae44605107cac329851c6e08985b38b8",
    "line" : 471,
    "diffHunk" : "@@ -1,1 +469,473 @@}\n\n// isSignificantPodUpdate determines whether a pod update should trigger a policy evaluation.\n// Relevant mutable pod fields as of 1.21 are image and seccomp annotations:\n// * https://github.com/kubernetes/kubernetes/blob/release-1.21/pkg/apis/core/validation/validation.go#L3947-L3949"
  },
  {
    "id" : "53749369-0078-49fc-b751-36c5ca5420f5",
    "prId" : 103099,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103099#pullrequestreview-693380802",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "755a6237-2610-4868-be9a-af2317d6426c",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I haven't read yet, but I'm betting this is here because namespace admission reuses this method.  There's a unit test ensuring someone doesn't optimize this into the pod evaluation method?",
        "createdAt" : "2021-06-25T13:43:01Z",
        "updatedAt" : "2021-06-25T13:43:01Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "bc2c52ae-ba62-4410-945a-aacde7a2e96c",
        "parentId" : "755a6237-2610-4868-be9a-af2317d6426c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Both pod-controller and pod validation route here. Namespace evaluation was missing this. Added and added a unit test.",
        "createdAt" : "2021-06-27T06:10:11Z",
        "updatedAt" : "2021-06-27T06:10:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f9011a4ae44605107cac329851c6e08985b38b8",
    "line" : 342,
    "diffHunk" : "@@ -1,1 +340,344 @@func (a *Admission) EvaluatePod(ctx context.Context, namespaceName string, podMetadata *metav1.ObjectMeta, podSpec *corev1.PodSpec, enforce bool) admissionv1.AdmissionResponse {\n\t// short-circuit on exempt runtimeclass\n\tif a.exemptRuntimeClass(podSpec.RuntimeClassName) {\n\t\treturn allowedResponse()\n\t}"
  },
  {
    "id" : "097d2ac5-b6c3-4670-843e-6d5bd5de4dd8",
    "prId" : 103099,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103099#pullrequestreview-693376017",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61d291a7-e924-4865-b147-244842cb2a74",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "nit: move up to the block where you set these?",
        "createdAt" : "2021-06-25T13:46:27Z",
        "updatedAt" : "2021-06-25T13:46:27Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "d2d2ce63-bcf4-4826-a635-08e0c33d138b",
        "parentId" : "61d291a7-e924-4865-b147-244842cb2a74",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "we set annotations in a couple different blocks (an error annotation if the namespace labels didn't parse right)... doing it at the end seems easier to reason about to me",
        "createdAt" : "2021-06-27T04:17:39Z",
        "updatedAt" : "2021-06-27T04:17:40Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f9011a4ae44605107cac329851c6e08985b38b8",
    "line" : 377,
    "diffHunk" : "@@ -1,1 +375,379 @@\t}\n\n\tresponse.AuditAnnotations = auditAnnotations\n\treturn response\n}"
  },
  {
    "id" : "2a5dd20a-5280-4762-bc96-9fdfa30fd678",
    "prId" : 103099,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103099#pullrequestreview-692948331",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5559531f-1e83-41d1-8b0e-fdf65de944fc",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "note to self, come back to ensure this punches through on misses, possibly using the LRU cache approach we used elsewhere",
        "createdAt" : "2021-06-25T13:47:33Z",
        "updatedAt" : "2021-06-25T13:47:33Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "babce710-badc-44a4-b86c-b9440c0ea312",
        "parentId" : "5559531f-1e83-41d1-8b0e-fdf65de944fc",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the implementation we're using punches through:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/eaa0a432f56e732473dc79fdcb370d50de70577d/staging/src/k8s.io/pod-security-admission/admission/namespace.go#L42-L50\r\n\r\nI expect misses to be exceptionally rare, since this is after namespace admission, so I didn't bother caching",
        "createdAt" : "2021-06-25T15:34:20Z",
        "updatedAt" : "2021-06-25T15:34:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f9011a4ae44605107cac329851c6e08985b38b8",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +61,65 @@\n\t// API connections\n\tNamespaceGetter NamespaceGetter\n\tPodLister       PodLister\n"
  }
]