[
  {
    "id" : "2f7525b6-b81e-4145-aee7-ea32d6714435",
    "prId" : 102431,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102431#pullrequestreview-676570437",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43d66a49-2124-431c-9c15-12db60eeae54",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Setting up defaults like this means we break compatibility with consumers that embed the log config options.\r\n\r\nThe expectation is that any consuming component that embeds the log config struct will get stable defaults for the duration of that version.\r\n\r\nThe normal approach is to:\r\n\r\n1. define API defaults for the config struct, which are versioned (e.g. pkg/scheduler/apis/config/v1beta1/defaults.go)\r\n2. construct default options by creating a versioned config struct and applying defaults (e.g. cmd/kube-scheduler/app/options/options.go#newDefaultComponentConfig())",
        "createdAt" : "2021-06-04T15:17:07Z",
        "updatedAt" : "2021-06-04T15:24:40Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "0dee2819-ee09-4ef1-b368-2711ebdfbbaf",
        "parentId" : "43d66a49-2124-431c-9c15-12db60eeae54",
        "authorId" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "body" : "Ok, looks like still some components (for example kube-apiserver) don't use config structs. This means that we will still need to maintain Options as a way to configure logging flags.\r\n\r\nFor components that allow using Configs, like kube-scheduler you mentioned, I will created dedicated PRs to migrate them. ",
        "createdAt" : "2021-06-04T18:39:03Z",
        "updatedAt" : "2021-06-04T18:39:04Z",
        "lastEditedBy" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9343f837dc2fc1025336514fa83a7b4939470cf",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +33,37 @@\n// NewOptions return new klog options\nfunc NewOptions() *Options {\n\tc := v1alpha1.LoggingConfiguration{}\n\tv1alpha1.RecommendedLoggingConfiguration(&c)"
  },
  {
    "id" : "744c6cf4-76eb-4cb8-9823-327808d9bbfe",
    "prId" : 89683,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89683#pullrequestreview-418582354",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78afe642-d697-4998-9756-19dc3eef18e9",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Would it be more clear that this mutates global state if this was named something like `SetGlobalLogger` or `ApplyToGlobalLogger`? ",
        "createdAt" : "2020-05-26T18:50:37Z",
        "updatedAt" : "2020-05-26T18:50:38Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "c60179260c013623a5b3fe4720a3858cd1e6bc13",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +55,59 @@\n// Apply set klog logger from LogFormat type\nfunc (o *Options) Apply() {\n\t// if log format not exists, use nil loggr\n\tloggr, _ := o.Get()"
  }
]