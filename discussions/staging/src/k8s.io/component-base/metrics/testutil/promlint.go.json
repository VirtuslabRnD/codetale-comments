[
  {
    "id" : "75f9fd15-6e71-4baa-89bd-c84da47ec805",
    "prId" : 92071,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92071#pullrequestreview-431141967",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cb2612a-2516-4ee2-b938-ebc005cb9017",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "```suggestion\r\n\treturn fmt.Errorf(\"lint errors: %s\", mergeProblems(filteredProblems))\r\n```",
        "createdAt" : "2020-06-16T03:54:48Z",
        "updatedAt" : "2020-06-16T04:01:10Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee146e24ffd8a37e0f4d347a69eb4eac997b358",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +161,165 @@\t}\n\n\treturn fmt.Errorf(\"lint error: %s\", mergeProblems(filteredProblems))\n}"
  },
  {
    "id" : "ff7fc6f2-4015-4fb1-b749-f633cce66d41",
    "prId" : 92071,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92071#pullrequestreview-432752744",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed62c22a-63ea-4eab-8e7f-c66d8677a067",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "nit: why not convert the array of exception metrics to a map instead of implementing another iterator?",
        "createdAt" : "2020-06-16T03:55:43Z",
        "updatedAt" : "2020-06-16T04:01:10Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "d379538d-57e5-4e21-92cf-5cdd715cef02",
        "parentId" : "ed62c22a-63ea-4eab-8e7f-c66d8677a067",
        "authorId" : "ae15cfb8-5436-4398-94e0-d443e413b257",
        "body" : "I've thought about it. The exception list originally organized by components, some metrics with the same name may exist in more than one component.\r\n\r\nIt's worth to reconsider it. Maybe map[string]struct{}.",
        "createdAt" : "2020-06-16T08:00:58Z",
        "updatedAt" : "2020-06-16T08:00:58Z",
        "lastEditedBy" : "ae15cfb8-5436-4398-94e0-d443e413b257",
        "tags" : [
        ]
      },
      {
        "id" : "9f89b53a-2601-4679-a808-242cd6719570",
        "parentId" : "ed62c22a-63ea-4eab-8e7f-c66d8677a067",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "You'll have collisions either way, no?",
        "createdAt" : "2020-06-17T20:32:13Z",
        "updatedAt" : "2020-06-17T20:32:42Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee146e24ffd8a37e0f4d347a69eb4eac997b358",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +137,141 @@// shouldIgnore returns true if metric in the exception list, otherwise returns false.\nfunc shouldIgnore(metricName string) bool {\n\tfor i := range exceptionMetrics {\n\t\tif metricName == exceptionMetrics[i] {\n\t\t\treturn true"
  }
]