[
  {
    "id" : "04e8875c-a36e-4052-b0c9-323d5bb1b938",
    "prId" : 93134,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93134#pullrequestreview-450043564",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dce57305-3550-4e99-99e8-d0f7d3030401",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Do you really want to add it to the resettable list if registering it gives an error?",
        "createdAt" : "2020-07-16T16:15:45Z",
        "updatedAt" : "2020-07-16T16:54:44Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "056dfdaa-08c5-4646-b8c0-d2ab1d79acb3",
        "parentId" : "dce57305-3550-4e99-99e8-d0f7d3030401",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "It's in a conditional, so it will only happen if Create returned true.",
        "createdAt" : "2020-07-16T16:28:59Z",
        "updatedAt" : "2020-07-16T16:54:44Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "f1a46b8b-6493-46af-ae58-2674d9617517",
        "parentId" : "dce57305-3550-4e99-99e8-d0f7d3030401",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Right, but the function could still return an error overall? (Honestly this function is already problematic, since it can return an error but leave things in a half completed state.)",
        "createdAt" : "2020-07-16T16:48:38Z",
        "updatedAt" : "2020-07-16T16:54:44Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "65d74069-971b-4dd7-b388-450dac50a8c2",
        "parentId" : "dce57305-3550-4e99-99e8-d0f7d3030401",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "It shouldn't error in that spot, but we had to keep the signature consistent. But you are correct about this function being kinda broken, we should kick back an error if the create fails. ",
        "createdAt" : "2020-07-16T17:03:37Z",
        "updatedAt" : "2020-07-16T17:03:38Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "45af3ae0cb9ad9055ef605756be32296df373149",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +145,149 @@func (kr *kubeRegistry) Register(c Registerable) error {\n\tif c.Create(&kr.version) {\n\t\tdefer kr.addResettable(c)\n\t\treturn kr.PromRegistry.Register(c)\n\t}"
  },
  {
    "id" : "f2977a74-806d-4a00-9268-8d0134cef195",
    "prId" : 93134,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93134#pullrequestreview-450009761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7c3daa9-d03e-4bec-88e4-4b1346c7dbac",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Why not take the lock here? At least a read lock?",
        "createdAt" : "2020-07-16T16:17:10Z",
        "updatedAt" : "2020-07-16T16:54:44Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "7b4231cb-aa19-4243-8bcb-2f87d0ca5e77",
        "parentId" : "c7c3daa9-d03e-4bec-88e4-4b1346c7dbac",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "ack",
        "createdAt" : "2020-07-16T16:25:03Z",
        "updatedAt" : "2020-07-16T16:54:44Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "45af3ae0cb9ad9055ef605756be32296df373149",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +296,300 @@\n// Reset invokes Reset on all metrics that are resettable.\nfunc (kr *kubeRegistry) Reset() {\n\tkr.resetLock.RLock()\n\tdefer kr.resetLock.RUnlock()"
  },
  {
    "id" : "0908e55f-fd0c-4367-a5bd-4c1bdba14083",
    "prId" : 85845,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85845#pullrequestreview-326150864",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "595e1978-225f-42ef-98cc-3f5f28c00205",
        "parentId" : null,
        "authorId" : "ae15cfb8-5436-4398-94e0-d443e413b257",
        "body" : "I think we can share Unregister(collector Collector) between `normal metric`、custome collector and value functions.",
        "createdAt" : "2019-12-03T13:50:00Z",
        "updatedAt" : "2019-12-03T13:50:00Z",
        "lastEditedBy" : "ae15cfb8-5436-4398-94e0-d443e413b257",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2f0435e7187945239d1a58e659f2a2417a71db5",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +122,126 @@\tRegister(Registerable) error\n\tMustRegister(...Registerable)\n\tUnregister(collector Collector) bool\n\tGather() ([]*dto.MetricFamily, error)\n}"
  },
  {
    "id" : "9c2fee2c-ba5a-42c0-903c-d0babc4d2b4c",
    "prId" : 84292,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84292#pullrequestreview-316492379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "187110ce-e1a3-4460-9567-d262735d49f2",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I don't think we're ever going to have a v2, but if we did, it would print 2.-1 which is not right :)\r\n\r\nFeel free to fix in a follow-up if you want.",
        "createdAt" : "2019-11-13T19:19:41Z",
        "updatedAt" : "2019-11-13T19:19:42Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2fbdee9bb811685e0fb316015bebb1c268b1503",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +55,59 @@\t}\n\n\tvalidVersionStr := fmt.Sprintf(\"%d.%d\", currentVersion.Major, currentVersion.Minor-1)\n\tif targetVersionStr != validVersionStr {\n\t\treturn fmt.Errorf(\"--show-hidden-metrics-for-version must be omitted or have the value '%v'. Only the previous minor version is allowed\", validVersionStr)"
  },
  {
    "id" : "7e90de87-2281-4ad9-9b2e-700a139a3958",
    "prId" : 81173,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81173#pullrequestreview-275309342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "259da0d5-b53d-49bd-99db-f0e9de1ee39e",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "this breaks old code, no?",
        "createdAt" : "2019-08-15T07:44:52Z",
        "updatedAt" : "2019-08-21T17:58:42Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "eccbe9da-63e2-4ecb-96d3-fdbd2769d547",
        "parentId" : "259da0d5-b53d-49bd-99db-f0e9de1ee39e",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "Nothing is migrated yet.",
        "createdAt" : "2019-08-15T08:16:24Z",
        "updatedAt" : "2019-08-21T17:58:42Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "94b612fbd6bee1d88a3193763249d4244070dbee",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +155,159 @@// NewKubeRegistry creates a new vanilla Registry without any Collectors\n// pre-registered.\nfunc NewKubeRegistry() KubeRegistry {\n\tr := newKubeRegistry(version.Get())\n\tregisterMetadataMetrics(r)"
  },
  {
    "id" : "4c5257ad-b936-477c-9b66-dd881ee2f153",
    "prId" : 79237,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79237#pullrequestreview-253224204",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4c32963-bd96-4f43-aea3-fb1854cc75c1",
        "parentId" : null,
        "authorId" : "4108cff4-d61c-4717-862b-6c3be3b73be2",
        "body" : "why is this not a property on the registry?",
        "createdAt" : "2019-06-21T11:09:05Z",
        "updatedAt" : "2019-06-21T11:09:05Z",
        "lastEditedBy" : "4108cff4-d61c-4717-862b-6c3be3b73be2",
        "tags" : [
        ]
      },
      {
        "id" : "538f9c72-5894-4197-a39b-0711c76a872f",
        "parentId" : "c4c32963-bd96-4f43-aea3-fb1854cc75c1",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "My initial iteration actually did that but I ended up changing my mind.\r\n\r\nMy reasoning was this: we are not guaranteed to have a single registry per component (kubelet already doesn't), if we were to have this as a property on the registry, we would either need to have an individual flag added per registry for each component, (i.e. `--show-deprecated-hidden-metrics-for-endpoint-1` and `--show-deprecated-hidden-metrics-for-endpoint-2`), rather a single flag for that component (i.e. `--show-deprecated-hidden-metrics`). It felt reasonable to trade the ability to configure individual registries with keeping the API surface area a bit simpler but provide a single option to configure all registries for that component, but that is definitely a subjective call. What do you think?",
        "createdAt" : "2019-06-21T21:50:06Z",
        "updatedAt" : "2019-06-21T21:50:06Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "a014364a-8e79-406e-86cc-990eaad532e0",
        "parentId" : "c4c32963-bd96-4f43-aea3-fb1854cc75c1",
        "authorId" : "4108cff4-d61c-4717-862b-6c3be3b73be2",
        "body" : "I’d prefer not to introduce more global state and instead pass it into each registry as a parameter, which is not mutually exclusive with having a single flag to do so.",
        "createdAt" : "2019-06-24T06:48:37Z",
        "updatedAt" : "2019-06-24T06:48:37Z",
        "lastEditedBy" : "4108cff4-d61c-4717-862b-6c3be3b73be2",
        "tags" : [
        ]
      }
    ],
    "commit" : "334a5aeda5e654586b61a22da2592da9fb601643",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +30,34 @@var (\n\tshowHiddenOnce sync.Once\n\tshowHidden     atomic.Value\n)\n"
  }
]