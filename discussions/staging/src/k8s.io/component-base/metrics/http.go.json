[
  {
    "id" : "c7fd6dab-1008-4c88-9104-90107822f2aa",
    "prId" : 93134,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93134#pullrequestreview-450040102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f48df7a4-4863-41cc-a208-7722a3073854",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "It doesn't feel right for this to be just loose in the package. Could it be a method on `reg`?",
        "createdAt" : "2020-07-16T16:10:45Z",
        "updatedAt" : "2020-07-16T16:54:44Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "e79d424b-ca0e-4843-a999-9d20ee052c7f",
        "parentId" : "f48df7a4-4863-41cc-a208-7722a3073854",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "Prometheus decouples these on purpose (I think), because it is possible to reuse a registry with different metric endpoints (and have custom behavior). I would be okay with hanging it off the registry (since I don't we rely off of that behavior in Kubernetes) but I'd feel more comfortable if @brancz ok'd that particular suggestion first.",
        "createdAt" : "2020-07-16T16:23:42Z",
        "updatedAt" : "2020-07-16T16:54:44Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "3e6a9465-46e9-467d-a63b-0c32002e81fa",
        "parentId" : "f48df7a4-4863-41cc-a208-7722a3073854",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I must not understand what a registry is. Wouldn't all handlers that get passed the same registry show the same data?",
        "createdAt" : "2020-07-16T16:28:34Z",
        "updatedAt" : "2020-07-16T16:54:44Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "676cc951-869d-44fd-85cf-b01e0bc4dae2",
        "parentId" : "f48df7a4-4863-41cc-a208-7722a3073854",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "Technically, it doesn't actually take a registry, it takes a prometheus.Gatherer (which is an interface the Registry satisfies), so you could do things with the registry that would produce a different Gatherer. ",
        "createdAt" : "2020-07-16T16:50:25Z",
        "updatedAt" : "2020-07-16T16:54:44Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "b7cf026b-2b1e-4653-8a40-a8dbb36cb7c4",
        "parentId" : "f48df7a4-4863-41cc-a208-7722a3073854",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I see. Except now it takes a KubeRegistry because Gatherer doesn't have a Reset() function? `func HandlerWithReset(reg Gatherer, r Resetter, opts HandlerOpts) http.Handler` as a function signature would make that more obvious.\r\n\r\n(no need to change, we've already talked about this longer than it merits)",
        "createdAt" : "2020-07-16T16:55:17Z",
        "updatedAt" : "2020-07-16T16:55:18Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "2785e348-0841-4e00-b021-9cdf5ce164b4",
        "parentId" : "f48df7a4-4863-41cc-a208-7722a3073854",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "Yes, I've overloaded the Registry a lot already... :( ",
        "createdAt" : "2020-07-16T16:59:07Z",
        "updatedAt" : "2020-07-16T16:59:08Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "45af3ae0cb9ad9055ef605756be32296df373149",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +65,69 @@\n// HandlerWithReset return an http.Handler with Reset\nfunc HandlerWithReset(reg KubeRegistry, opts HandlerOpts) http.Handler {\n\tdefaultHandler := promhttp.HandlerFor(reg, opts.toPromhttpHandlerOpts())\n\treturn http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {"
  }
]