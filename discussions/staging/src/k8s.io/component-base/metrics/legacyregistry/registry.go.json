[
  {
    "id" : "993d6cb3-05f1-490e-b3df-0b175126ec66",
    "prId" : 83987,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83987#pullrequestreview-306906220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5999386-8634-48dd-886d-6d9c1d035766",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "@logicalhan PTAL",
        "createdAt" : "2019-10-24T14:56:50Z",
        "updatedAt" : "2019-10-24T21:10:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "03d29759-f88e-4f44-aece-08c7d1a8cf95",
        "parentId" : "a5999386-8634-48dd-886d-6d9c1d035766",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "Why are we doing this?",
        "createdAt" : "2019-10-24T17:29:21Z",
        "updatedAt" : "2019-10-24T21:10:19Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "575d8b42-aca2-461b-9c29-045f1b414c0b",
        "parentId" : "a5999386-8634-48dd-886d-6d9c1d035766",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "prometheus 1.0.0 dropped the InstrumentHandler method",
        "createdAt" : "2019-10-24T17:37:00Z",
        "updatedAt" : "2019-10-24T21:10:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5e891abe-519a-4bdd-ad60-dec0876538eb",
        "parentId" : "a5999386-8634-48dd-886d-6d9c1d035766",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "https://github.com/kubernetes/kubernetes/pull/83987/files#diff-fb2a0310eaebea082d9732696d1e4e02",
        "createdAt" : "2019-10-24T17:37:46Z",
        "updatedAt" : "2019-10-24T21:10:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a8be5c4a-dd35-4f99-9239-0171786621df",
        "parentId" : "a5999386-8634-48dd-886d-6d9c1d035766",
        "authorId" : "f474bb7f-c91e-4c7f-8215-aa1a0f8eb05a",
        "body" : "I changed this part because otherwise it conflict updated prometheous",
        "createdAt" : "2019-10-24T18:01:09Z",
        "updatedAt" : "2019-10-24T21:10:19Z",
        "lastEditedBy" : "f474bb7f-c91e-4c7f-8215-aa1a0f8eb05a",
        "tags" : [
        ]
      },
      {
        "id" : "083d1d40-958f-493a-889e-d06a4094ab39",
        "parentId" : "a5999386-8634-48dd-886d-6d9c1d035766",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "This will end up being backwards incompatible, since the metrics exposed are actually different. ",
        "createdAt" : "2019-10-24T19:41:43Z",
        "updatedAt" : "2019-10-24T21:10:19Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "25c68180-20a7-4ca8-8d7b-221ef0fbeac4",
        "parentId" : "a5999386-8634-48dd-886d-6d9c1d035766",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "what's the backwards compatible way to emulate this registration?",
        "createdAt" : "2019-10-24T20:33:29Z",
        "updatedAt" : "2019-10-24T21:10:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "7e01f652-7388-4ddf-8f1c-697ee4c7b8cf",
        "parentId" : "a5999386-8634-48dd-886d-6d9c1d035766",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "Literally copying over the old handler code. I don't think it's worth it though.\r\n\r\nWhile this may break some people's instrumented setups, it breaks a more meta-level of monitoring (scrape frequency and metric endpoint request stuff) and is less critical than control-plane health metrics. \r\n\r\nMy preference is to keep @wenjiaswe's changes and have an accompanying release note on the removal of the old prometheus meta-metrics.",
        "createdAt" : "2019-10-24T20:48:33Z",
        "updatedAt" : "2019-10-24T21:10:19Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "d9ced959-d8e5-4109-a6c3-bede31e846c5",
        "parentId" : "a5999386-8634-48dd-886d-6d9c1d035766",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> My preference is to keep @wenjiaswe's changes and have an accompanying release note on the removal of the old prometheus meta-metrics.\r\n\r\nOk, I thought you were saying we could not make this change",
        "createdAt" : "2019-10-24T21:30:27Z",
        "updatedAt" : "2019-10-24T21:30:27Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "89902b84-1712-4ef3-8e2b-03ebac36d2d5",
        "parentId" : "a5999386-8634-48dd-886d-6d9c1d035766",
        "authorId" : "f474bb7f-c91e-4c7f-8215-aa1a0f8eb05a",
        "body" : "@logicalhan do you have a suggested release note in mind or could you check what I have below? Not sure how to write release note for breaking changes. Do we include in the PR note or is there a separate place? \r\n\r\n```\r\nUse [promhttp.InstrumentMetricHandler](https://godoc.org/github.com/prometheus/client_golang/prometheus/promhttp#InstrumentMetricHandler) instead of [prometheus.InstrumentHandler](https://godoc.org/github.com/dnesting/client_golang/prometheus#InstrumentHandler) for metrics handler, please refer to the linked doc for the difference.\r\n```",
        "createdAt" : "2019-10-24T22:18:39Z",
        "updatedAt" : "2019-10-24T22:18:39Z",
        "lastEditedBy" : "f474bb7f-c91e-4c7f-8215-aa1a0f8eb05a",
        "tags" : [
        ]
      },
      {
        "id" : "4ebda02e-c4c8-42de-95f3-f76eec91ec0f",
        "parentId" : "a5999386-8634-48dd-886d-6d9c1d035766",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "> Ok, I thought you were saying we could not make this change\r\n\r\nThat is what I was initially thinking, but after looking into the actual metrics this would end up breaking, it seems both low risk/value. \r\n\r\n> do you have a suggested release note in mind\r\n\r\nSince we're removing metrics, maybe it would be a good idea to list them? Something like this maybe?\r\n```\r\nDeprecated prometheus request meta-metrics have been removed (http_request_duration_microseconds, http_request_duration_microseconds_sum, http_request_duration_microseconds_count, http_request_size_bytes, http_request_size_bytes_sum, http_request_size_bytes_count, http_requests_total, http_response_size_bytes, http_response_size_bytes_sum, http_response_size_bytes_count) due to removal from the prometheus client library. Prometheus http request meta-metrics are now generated from [promhttp.InstrumentMetricHandler](https://godoc.org/github.com/prometheus/client_golang/prometheus/promhttp#InstrumentMetricHandler) instead.\r\n```",
        "createdAt" : "2019-10-24T22:44:18Z",
        "updatedAt" : "2019-10-24T22:44:18Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "dae7d669-6ac6-4c12-a9ed-4efaf721609c",
        "parentId" : "a5999386-8634-48dd-886d-6d9c1d035766",
        "authorId" : "f474bb7f-c91e-4c7f-8215-aa1a0f8eb05a",
        "body" : "Thanks! Updated in release note. ",
        "createdAt" : "2019-10-24T22:50:36Z",
        "updatedAt" : "2019-10-24T22:50:36Z",
        "lastEditedBy" : "f474bb7f-c91e-4c7f-8215-aa1a0f8eb05a",
        "tags" : [
        ]
      }
    ],
    "commit" : "454a339f3afb9834c52ff5cace40ee6305a75d0c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +44,48 @@// InstrumentHandler. You might want to consider using promhttp.Handler instead.\nfunc Handler() http.Handler {\n\treturn promhttp.InstrumentMetricHandler(prometheus.DefaultRegisterer, promhttp.HandlerFor(defaultRegistry, promhttp.HandlerOpts{}))\n}\n"
  },
  {
    "id" : "e60fb6c8-8aac-4f8a-9568-0a66d2935a32",
    "prId" : 81173,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81173#pullrequestreview-275577047",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5168968c-4aaa-4223-908d-d33d73de124a",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "if it is deprecated, why do we change the signature?",
        "createdAt" : "2019-08-15T07:43:44Z",
        "updatedAt" : "2019-08-21T17:58:42Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "5875bb04-eb4c-4391-9654-ab791ee6c508",
        "parentId" : "5168968c-4aaa-4223-908d-d33d73de124a",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "This method intends to replace the method calls to the original prometheus global Handler (https://github.com/prometheus/client_golang/blob/7ed96b33bd86448bfd5915bf4f0f96b7eb826108/prometheus/http.go#L47-L55), which has the same method signature as this method and is also similarly deprecated (but in use in our codebase).",
        "createdAt" : "2019-08-15T08:13:56Z",
        "updatedAt" : "2019-08-21T17:58:42Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "9a35aed3-26d9-456f-a21d-b7e63bf35feb",
        "parentId" : "5168968c-4aaa-4223-908d-d33d73de124a",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "Specifically, we require this for backwards compatibility reasons. The InstrumentedHandler effectively adds a series of summary metrics which are, by default, added to the global prometheus registry. This method allows us to maintain parity with the metrics that the native global prometheus registry.",
        "createdAt" : "2019-08-15T17:55:19Z",
        "updatedAt" : "2019-08-21T17:58:42Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "94b612fbd6bee1d88a3193763249d4244070dbee",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +41,45 @@// Deprecated: Please note the issues described in the doc comment of\n// InstrumentHandler. You might want to consider using promhttp.Handler instead.\nfunc Handler() http.Handler {\n\treturn prometheus.InstrumentHandler(\"prometheus\", promhttp.HandlerFor(defaultRegistry, promhttp.HandlerOpts{}))\n}"
  },
  {
    "id" : "a8689ef2-cde1-482b-88fa-9a2361333a5c",
    "prId" : 81173,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81173#pullrequestreview-275306783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b24b0eaf-9453-4262-84fe-21c3e567ff23",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "why do we add a deprecated func?",
        "createdAt" : "2019-08-15T07:44:17Z",
        "updatedAt" : "2019-08-21T17:58:42Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "1a102ec1-0422-4947-a849-acccd104d653",
        "parentId" : "b24b0eaf-9453-4262-84fe-21c3e567ff23",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "same as below.",
        "createdAt" : "2019-08-15T08:09:47Z",
        "updatedAt" : "2019-08-21T17:58:42Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "94b612fbd6bee1d88a3193763249d4244070dbee",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +66,70 @@//\n// Deprecated\nfunc RawMustRegister(cs ...prometheus.Collector) {\n\tdefaultRegistry.RawMustRegister(cs...)\n\t// sideload global prom registry as fallback"
  },
  {
    "id" : "15f5a49d-235f-42ff-92eb-3b632dd6ba1a",
    "prId" : 81173,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81173#pullrequestreview-277776987",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe321ed5-1c3c-4713-b85a-d2fc2d38a2a5",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "why do we add a deprecated func?",
        "createdAt" : "2019-08-15T07:44:22Z",
        "updatedAt" : "2019-08-21T17:58:42Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "09e3e108-095f-40f3-aef5-358fb1c05eac",
        "parentId" : "fe321ed5-1c3c-4713-b85a-d2fc2d38a2a5",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "Because we eventually do not want to be registering native prometheus Collectors at all, since they cannot be annotated with stability information. We require them at the moment due to the pervasive use of custom prometheus collectors in the kubelet, though we do not want to encourage or increase usage of this method going forward. @serathius is working on additional static analysis checks to aid that effort. ",
        "createdAt" : "2019-08-15T08:09:35Z",
        "updatedAt" : "2019-08-21T17:58:42Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "741c34b4-9796-4c59-b1d4-3c85c5bdb6ea",
        "parentId" : "fe321ed5-1c3c-4713-b85a-d2fc2d38a2a5",
        "authorId" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "body" : "good call for the immediate deprecation :+1: Can we add some explicit sentence in the godoc that this is not meant to be used for new code and point them to an alternative, i.e. native metrics? deprecated methods do tend to be used in newly added code.",
        "createdAt" : "2019-08-21T13:02:30Z",
        "updatedAt" : "2019-08-21T17:58:42Z",
        "lastEditedBy" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "tags" : [
        ]
      }
    ],
    "commit" : "94b612fbd6bee1d88a3193763249d4244070dbee",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +78,82 @@//\n// Deprecated\nfunc RawRegister(c prometheus.Collector) error {\n\terr := defaultRegistry.RawRegister(c)\n\t// sideload global prom registry as fallback"
  },
  {
    "id" : "68c3ad0e-0c38-4bc5-8d06-6920c5954c9a",
    "prId" : 78877,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78877#pullrequestreview-248339256",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad7c021b-9cae-423b-bec8-e551d00d5f89",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "Actually I don't really get why we need such `noopRegistry` here.\r\nAnd I prefer not to preset `globalRegistryFactory` with `noopRegistry`, since functions like `SetRegistryFactoryVersion` will make changes to `globalRegistryFactory` as well.",
        "createdAt" : "2019-06-11T15:57:02Z",
        "updatedAt" : "2019-06-17T01:41:25Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "62f33a0d-629d-4f44-91a0-c31f80df633f",
        "parentId" : "ad7c021b-9cae-423b-bec8-e551d00d5f89",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "I personally prefer the explicitness of overriding a default noop registry. Otherwise, the behavior is dependent on implications of having a global registry version registered. ",
        "createdAt" : "2019-06-11T17:41:55Z",
        "updatedAt" : "2019-06-17T01:41:25Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "632f468b-e71d-4005-9335-f51e927090ac",
        "parentId" : "ad7c021b-9cae-423b-bec8-e551d00d5f89",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "It's also more consistent with other usages in Kubernetes: https://github.com/kubernetes/kubernetes/blob/61fa0fd44a3513b94d7c29ff859340804c107ea0/staging/src/k8s.io/client-go/tools/cache/reflector_metrics.go#L77.",
        "createdAt" : "2019-06-11T17:48:46Z",
        "updatedAt" : "2019-06-17T01:41:25Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8a04aecc6a51a3e90313e5620d8d932a9c8fe2c",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +35,39 @@\t\tregisterQueue:     make([]metrics.Registerable, 0),\n\t\tmustRegisterQueue: make([]metrics.Registerable, 0),\n\t\tglobalRegistry:    noopRegistry{},\n\t}\n)"
  },
  {
    "id" : "33ce21c1-8f1d-4aa3-91d9-fb238b490345",
    "prId" : 77037,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77037#pullrequestreview-235217542",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7504eb4-faab-4078-b9af-8e25248a67f1",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I wouldn't mind to see a panic on the second call, or at least a klog.Warning.",
        "createdAt" : "2019-05-08T09:33:27Z",
        "updatedAt" : "2019-05-08T17:54:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "7e65d353-e6b4-4b95-8a5c-1bb70dad052d",
        "parentId" : "a7504eb4-faab-4078-b9af-8e25248a67f1",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "done.",
        "createdAt" : "2019-05-08T18:26:09Z",
        "updatedAt" : "2019-05-08T18:26:10Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d839235c2e6bf47c7f0f7c354572e59e025fb96",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@\n// SetRegistryFactoryVersion sets the kubernetes version information for all\n// subsequent metrics registry initializations. Only the first call has an effect.\n// If a version is not set, then metrics registry creation will no-opt\nfunc SetRegistryFactoryVersion(ver apimachineryversion.Info) []error {"
  }
]