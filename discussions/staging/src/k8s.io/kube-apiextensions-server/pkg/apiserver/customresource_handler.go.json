[
  {
    "id" : "52b61a32-d097-4908-b9fb-28a828a1079c",
    "prId" : 46536,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46536#pullrequestreview-40942820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33ba1376-3216-4fd7-a09d-e5a99cbd9c88",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "now with fixed typo",
        "createdAt" : "2017-05-30T13:13:26Z",
        "updatedAt" : "2017-05-30T13:13:26Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "8170cf0fd30bb0c2bb74866d1a3b44300c1c8ff8",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +280,284 @@\t// can get a different RV because etcd can be touched in between the initial list operation (if that's what you're doing first)\n\t// and the storage cache reflector starting.\n\t// Later, you can issue a watch with the REST apis list.RV and end up earlier than the storage cacher.\n\t// The time window is really narrow, but it can happen.  The simplest \"solution\" is to wait\n\t// briefly for the storage cache to start before we return out new storage so its more likely that we'll have valid"
  },
  {
    "id" : "d9bf92cc-3a53-461b-92b5-8973715551a8",
    "prId" : 46501,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46501#pullrequestreview-40509835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d592808-4c26-400a-9dd8-4245330ab64a",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "meat lgtm",
        "createdAt" : "2017-05-26T12:33:04Z",
        "updatedAt" : "2017-05-26T12:37:30Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "60c48628bfcd693dc45b9d321a9ad6260d855c49",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +249,253 @@// the given uid, or nil if one does not exist.\nfunc (r *crdHandler) GetCustomResourceListerCollectionDeleter(crd *apiextensions.CustomResourceDefinition) finalizer.ListerCollectionDeleter {\n\tinfo := r.getServingInfoFor(crd)\n\treturn info.storage\n}"
  },
  {
    "id" : "903fdc74-2110-41d6-b571-db7d88de42a4",
    "prId" : 45985,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45985#pullrequestreview-38973072",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60a9d657-09f1-4126-99bb-a2df3024b0a9",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "not via status? We have mixture, some things are returned as status, some are not.",
        "createdAt" : "2017-05-18T12:58:30Z",
        "updatedAt" : "2017-05-18T19:05:06Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "5e0e7346-d161-4bb0-a594-81fe8eb6f2e7",
        "parentId" : "60a9d657-09f1-4126-99bb-a2df3024b0a9",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> not via status? We have mixture, some things are returned as status, some are not.\r\n\r\nConsistency sweep separate from this pull?",
        "createdAt" : "2017-05-18T13:24:59Z",
        "updatedAt" : "2017-05-18T19:05:06Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "e7b278a1-aeb9-42c7-a192-0d773d86706b",
        "parentId" : "60a9d657-09f1-4126-99bb-a2df3024b0a9",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Consistently broken windows ;)",
        "createdAt" : "2017-05-18T15:26:59Z",
        "updatedAt" : "2017-05-18T19:05:06Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "6e703522-bc97-4929-8b54-49222fddedbd",
        "parentId" : "60a9d657-09f1-4126-99bb-a2df3024b0a9",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "But, a follow-up is ok.",
        "createdAt" : "2017-05-18T15:27:12Z",
        "updatedAt" : "2017-05-18T19:05:06Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d1afb4933d44e502765c3ed8fb5147c2a7e333b",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +178,182 @@\tcase \"create\":\n\t\tif terminating {\n\t\t\thttp.Error(w, fmt.Sprintf(\"%v not allowed while CustomResourceDefinition is terminating\", requestInfo.Verb), http.StatusMethodNotAllowed)\n\t\t\treturn\n\t\t}"
  },
  {
    "id" : "902dfe0a-4606-489e-a679-26b7c956ac92",
    "prId" : 45182,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45182#pullrequestreview-36453970",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04f7979a-53bc-4d23-8bbd-e5bddc67288d",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "disregard my comment above about Get'ability. above we have to see all group versions for a given group. So this does not help there.",
        "createdAt" : "2017-05-05T08:21:03Z",
        "updatedAt" : "2017-05-05T14:50:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb143d3e33458aa1b21bbded4ced98120ed42eb3",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +135,139 @@\n\tcustomResourceName := requestInfo.Resource + \".\" + requestInfo.APIGroup\n\tcustomResource, err := r.customResourceLister.Get(customResourceName)\n\tif apierrors.IsNotFound(err) {\n\t\tr.delegate.ServeHTTP(w, req)"
  },
  {
    "id" : "6337fd16-a341-4313-8833-f53c77cb3258",
    "prId" : 45182,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45182#pullrequestreview-36525842",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b34a5cbb-b77a-4443-a6f4-eed3fc4dd0db",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "you can steal a better deepcopy from https://github.com/kubernetes/kubernetes/pull/40725",
        "createdAt" : "2017-05-05T08:33:52Z",
        "updatedAt" : "2017-05-05T14:50:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "e0b86c70-1150-4402-8cc2-296887b2121e",
        "parentId" : "b34a5cbb-b77a-4443-a6f4-eed3fc4dd0db",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> you can steal a better deepcopy from #40725\r\n\r\nswitch when your pull merges?",
        "createdAt" : "2017-05-05T14:39:03Z",
        "updatedAt" : "2017-05-05T14:50:08Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "9bbaba5f-8d75-4927-b6d5-33cea947b517",
        "parentId" : "b34a5cbb-b77a-4443-a6f4-eed3fc4dd0db",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Ok. It had some import cycle issues when registering deepcopies into the scheme. Have to come back to that PR",
        "createdAt" : "2017-05-05T14:45:17Z",
        "updatedAt" : "2017-05-05T14:50:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb143d3e33458aa1b21bbded4ced98120ed42eb3",
    "line" : 336,
    "diffHunk" : "@@ -1,1 +334,338 @@type UnstructuredCopier struct{}\n\nfunc (UnstructuredCopier) Copy(obj runtime.Object) (runtime.Object, error) {\n\t// serialize and deserialize to ensure a clean copy\n\tbuf := &bytes.Buffer{}"
  }
]