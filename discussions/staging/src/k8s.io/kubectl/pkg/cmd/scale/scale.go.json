[
  {
    "id" : "f5aee4ea-78da-48c6-9e7e-8fa884b67de9",
    "prId" : 91858,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91858#pullrequestreview-444797163",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3cba2d8-92fc-44fa-b4eb-3c618f2210a6",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "what is the difference between this and the retry params that still use 5 minutes? should we default o.Timeout to 5 minutes (rather than 0 meaning \"no timeout\") to preserve current behavior by default?",
        "createdAt" : "2020-06-08T14:13:48Z",
        "updatedAt" : "2020-06-08T14:13:48Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "8ba8ab3b-ca3f-4a58-b364-cff239a022fc",
        "parentId" : "e3cba2d8-92fc-44fa-b4eb-3c618f2210a6",
        "authorId" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "body" : "Thanks for your review @liggitt !\r\n\r\nBefore #63198 merged, the code like this:\r\n```go\r\ncmd.Flags().DurationVar(&o.Duration, \"timeout\", o.Duration, \"The length of time to wait before giving up on a scale operation, zero means don't wait. Any other values should contain a corresponding time unit (e.g. 1s, 2m, 3h).\")\r\nretry := kubectl.NewRetryParams(kubectl.Interval, kubectl.Timeout)\r\nvar waitForReplicas *kubectl.RetryParams\r\nif timeout := o.Duration; timeout != 0 {\r\n    waitForReplicas = kubectl.NewRetryParams(kubectl.Interval, timeout)\r\n}\r\n```\r\nNotice that the `timeout` of `waitForReplicas = kubectl.NewRetryParams(kubectl.Interval, timeout)` is equal to `o.Duration` !\r\n\r\nAfter #63198, we rename `o.Duration` as `o.Timeout`, but its meaning hasn't changed. \r\n\r\n```go\r\ncmd.Flags().DurationVar(&o.Timeout, \"timeout\", 0, \"The length of time to wait before giving up on a scale operation, zero means don't wait. Any other values should contain a corresponding time unit (e.g. 1s, 2m, 3h).\")\r\nretry := kubectl.NewRetryParams(kubectl.Interval, kubectl.Timeout)\r\nvar waitForReplicas *kubectl.RetryParams\r\nif o.Timeout != 0 {\r\n    waitForReplicas = kubectl.NewRetryParams(kubectl.Interval, timeout)\r\n}\r\n```\r\n\r\nHowever, we confused global `timeout` with local `timeout`, the `timeout` of `waitForReplicas = kubectl.NewRetryParams(kubectl.Interval, timeout)` is not equal to `o.Timeout`. Obviously, we should use `o.Timoeout` here for consistency!\r\n\r\nIf I understand it correctly, the default value zero means do not wait for condition `scaleHasDesiredReplicas` is satisfied rather than \"no timeout\". This behavior is consistent with the original behavior before #63198. \r\n\r\nIf I misunderstand, please point out @liggitt ðŸ˜„ \r\n\r\n\r\n\r\n",
        "createdAt" : "2020-06-09T02:49:37Z",
        "updatedAt" : "2020-06-09T02:49:37Z",
        "lastEditedBy" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "tags" : [
        ]
      },
      {
        "id" : "cc660924-d5d8-4df8-8285-6c8b08aa9e3e",
        "parentId" : "e3cba2d8-92fc-44fa-b4eb-3c618f2210a6",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "@SataQiu honestly, we could make both configurable, I don't see any objections in that. Feel free to open a followup. ",
        "createdAt" : "2020-07-08T14:02:39Z",
        "updatedAt" : "2020-07-08T14:02:48Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d37c3b8f24478fe36da23f3ac453767f438e80b",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +231,235 @@\tvar waitForReplicas *scale.RetryParams\n\tif o.Timeout != 0 && o.dryRunStrategy == cmdutil.DryRunNone {\n\t\twaitForReplicas = scale.NewRetryParams(1*time.Second, o.Timeout)\n\t}\n"
  }
]