[
  {
    "id" : "d5fb5482-df29-40c2-baf7-75f9d8e28e0e",
    "prId" : 89840,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89840#pullrequestreview-495808424",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b8b7680-b270-4568-bb36-4c677d7bc226",
        "parentId" : null,
        "authorId" : "5ba8956e-ec1f-452c-959a-ae0daad08298",
        "body" : "Question: Does it make sense to validate against args directly?\r\n\r\nAlternatively, in `Validate()` you could do something like this...\r\n```\r\nif o.user == nil {\r\n        return fmt.Errorf(\"user to delete is required\")\r\n}\r\n```\r\n\r\nI guess it comes down to the question of: Is this something we want to validate in general, or is it something we only want to validate for command line usage.\r\n\r\nTo me it seems like o.user should not ever be nil, so it should be validated in general (not just for command line).\r\n\r\nThoughts?",
        "createdAt" : "2020-04-28T13:09:01Z",
        "updatedAt" : "2020-06-30T18:02:32Z",
        "lastEditedBy" : "5ba8956e-ec1f-452c-959a-ae0daad08298",
        "tags" : [
        ]
      },
      {
        "id" : "97df96fd-d98f-49fc-baab-36c41f5c92b7",
        "parentId" : "9b8b7680-b270-4568-bb36-4c677d7bc226",
        "authorId" : "5ba8956e-ec1f-452c-959a-ae0daad08298",
        "body" : "Let me back up.  I think the problem might be that `Complete()` should not take a dependency on cobra.Command.  Check out this WIP PR to see what I mean:  https://github.com/kubernetes/kubernetes/pull/88737/files\r\n\r\nBut I would like to ask the question to everyone else, should validation be done at all in `Complete()` , or should it just fill out the options and leave **all** validation for `Validate()`?",
        "createdAt" : "2020-04-28T13:14:31Z",
        "updatedAt" : "2020-06-30T18:02:32Z",
        "lastEditedBy" : "5ba8956e-ec1f-452c-959a-ae0daad08298",
        "tags" : [
        ]
      },
      {
        "id" : "da9b8f2d-93e7-4dd5-819f-58c06c7f8ea9",
        "parentId" : "9b8b7680-b270-4568-bb36-4c677d7bc226",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Yeah, going forward I think it would be nice to throw the validation into `Validate`, so I'd be :+1: for what Brian said above. ",
        "createdAt" : "2020-05-26T12:07:44Z",
        "updatedAt" : "2020-06-30T18:02:32Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "df54d716-2b5c-4b25-abf7-c3d316254f4c",
        "parentId" : "9b8b7680-b270-4568-bb36-4c677d7bc226",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "At least in those places where that's possible, b/c some commands will require further parsing of args, but let's make the general rule to move all possible validation to `Validate`.",
        "createdAt" : "2020-05-26T12:08:24Z",
        "updatedAt" : "2020-06-30T18:02:32Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "336214e5-2d47-452f-9b6b-7d345f52c75a",
        "parentId" : "9b8b7680-b270-4568-bb36-4c677d7bc226",
        "authorId" : "38ac0bf1-ca6b-4f18-9b32-48fd80cf36fd",
        "body" : "Paired with @soltysh and using [create job](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/pkg/cmd/create/create_job.go) as a reference this is ok to be done here.",
        "createdAt" : "2020-09-24T17:45:41Z",
        "updatedAt" : "2020-09-24T17:45:41Z",
        "lastEditedBy" : "38ac0bf1-ca6b-4f18-9b32-48fd80cf36fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "95b189fd8f69812738ba9ea472237ab946863d23",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +83,87 @@\to.config = config\n\n\tif len(args) != 1 {\n\t\treturn cmdutil.UsageErrorf(cmd, \"user to delete is required\")\n\t}"
  },
  {
    "id" : "f32cef65-27d3-427c-b2ad-c55ef2626f88",
    "prId" : 89840,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89840#pullrequestreview-495807402",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2ee3be2-ef26-4279-8af8-842eb421ab33",
        "parentId" : null,
        "authorId" : "5ba8956e-ec1f-452c-959a-ae0daad08298",
        "body" : "can o.config be nil?  If I never called Complete() it seems like it could be.",
        "createdAt" : "2020-04-28T13:10:09Z",
        "updatedAt" : "2020-06-30T18:02:32Z",
        "lastEditedBy" : "5ba8956e-ec1f-452c-959a-ae0daad08298",
        "tags" : [
        ]
      },
      {
        "id" : "71a9b33b-44ab-4e56-8d33-652854975de1",
        "parentId" : "b2ee3be2-ef26-4279-8af8-842eb421ab33",
        "authorId" : "38ac0bf1-ca6b-4f18-9b32-48fd80cf36fd",
        "body" : "Paired with @soltysh and we agreed that it would be a programmer error if this was `nil` and not a user error.\r\n\r\nThe expectation is a programmer calling this elsewhere should have set the object up correctly and it's easy to catch.",
        "createdAt" : "2020-09-24T17:44:20Z",
        "updatedAt" : "2020-09-24T17:44:21Z",
        "lastEditedBy" : "38ac0bf1-ca6b-4f18-9b32-48fd80cf36fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "95b189fd8f69812738ba9ea472237ab946863d23",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +99,103 @@// Validate ensures the command has enough info to run\nfunc (o *DeleteUserOptions) Validate() error {\n\t_, ok := o.config.AuthInfos[o.user]\n\tif !ok {\n\t\treturn fmt.Errorf(\"cannot delete user %s, not in %s\", o.user, o.configFile)"
  },
  {
    "id" : "167ae52f-3ce4-4073-89f7-bc6a7579332a",
    "prId" : 89840,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89840#pullrequestreview-418228553",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8090f455-14ed-437d-9e9b-e7898c8c0a6c",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Nit, but the import order we try to have is:\r\n1. builtin\r\n2. 3rd party \r\n3. k8s ",
        "createdAt" : "2020-05-26T12:02:09Z",
        "updatedAt" : "2020-06-30T18:02:32Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "95b189fd8f69812738ba9ea472237ab946863d23",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +20,24 @@\t\"fmt\"\n\n\t\"github.com/spf13/cobra\"\n\n\t\"k8s.io/cli-runtime/pkg/genericclioptions\""
  },
  {
    "id" : "cd43e32e-d607-4942-9f1e-2cab81fbce51",
    "prId" : 89840,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89840#pullrequestreview-418228553",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11540027-584e-4b06-8fc4-d1e59e65571e",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I'd move `configAccess` as a parameter to `Complete`, similarly to how we pass `Factory` in other commands. The reason for that is this will simplify testing, `IOStreams` are pretty easy to inject, it's a bit harder with `ConfigAccess`. `New*Options` should be more of a defaulting method. ",
        "createdAt" : "2020-05-26T12:04:52Z",
        "updatedAt" : "2020-06-30T18:02:32Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "95b189fd8f69812738ba9ea472237ab946863d23",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@func NewDeleteUserOptions(ioStreams genericclioptions.IOStreams, configAccess clientcmd.ConfigAccess) *DeleteUserOptions {\n\treturn &DeleteUserOptions{\n\t\tconfigAccess: configAccess,\n\t\tIOStreams:    ioStreams,\n\t}"
  }
]