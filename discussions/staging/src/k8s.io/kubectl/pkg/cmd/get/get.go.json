[
  {
    "id" : "948d4c6c-beb6-43af-bddb-aee74283da4c",
    "prId" : 91423,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91423#pullrequestreview-478212333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b89047f5-a546-4604-ae8d-1d6ebac56acb",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "Better to use %q here?",
        "createdAt" : "2020-08-28T09:22:33Z",
        "updatedAt" : "2020-09-05T14:24:08Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "eaab118b-6b89-4082-9c7e-7fad61befb64",
        "parentId" : "b89047f5-a546-4604-ae8d-1d6ebac56acb",
        "authorId" : "b08d1703-f122-41b6-aec0-0e1960a51745",
        "body" : "Yeah, I believe %q is better option. Changes done.",
        "createdAt" : "2020-08-30T15:24:39Z",
        "updatedAt" : "2020-09-05T14:24:08Z",
        "lastEditedBy" : "b08d1703-f122-41b6-aec0-0e1960a51745",
        "tags" : [
        ]
      }
    ],
    "commit" : "b326948a9a317dbc17c6f32dfeea26e090bde3b0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +587,591 @@\t\t// if we wrote no output, and had no errors, and are not ignoring NotFound, be sure we output something\n\t\tif allResourcesNamespaced {\n\t\t\tfmt.Fprintf(o.ErrOut, \"No resources found in %s namespace.\\n\", o.Namespace)\n\t\t} else {\n\t\t\tfmt.Fprintln(o.ErrOut, \"No resources found\")"
  },
  {
    "id" : "ad351ed7-4989-4ffe-babe-793e31c05eb6",
    "prId" : 85644,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85644#pullrequestreview-323138840",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3bb78f43-ec47-4bda-b49b-258e1bba46d7",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this prefers meta.k8s.io/v1 ",
        "createdAt" : "2019-11-26T14:53:42Z",
        "updatedAt" : "2019-11-26T18:21:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e56b9635-9b5b-48f6-be4d-e9391c444436",
        "parentId" : "3bb78f43-ec47-4bda-b49b-258e1bba46d7",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "How are you dealing with getting v1beta1 as a go struct in the code path?",
        "createdAt" : "2019-11-26T16:51:05Z",
        "updatedAt" : "2019-11-26T18:21:10Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "e398c896-eb2f-4814-aeed-4dfa7acd43ae",
        "parentId" : "3bb78f43-ec47-4bda-b49b-258e1bba46d7",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Table is type aliased, so type checks do not distinguish between them",
        "createdAt" : "2019-11-26T16:51:50Z",
        "updatedAt" : "2019-11-26T18:21:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "dd696fea-f054-4ccd-89c0-c380ad51d185",
        "parentId" : "3bb78f43-ec47-4bda-b49b-258e1bba46d7",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Nm, saw it.  Had a question there, ignore this.",
        "createdAt" : "2019-11-26T16:56:26Z",
        "updatedAt" : "2019-11-26T18:21:10Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "deb75da17bb1fa95e5b56fb1207ba247cd9953dd",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +439,443 @@\t\tfmt.Sprintf(\"application/json;as=Table;v=%s;g=%s\", metav1beta1.SchemeGroupVersion.Version, metav1beta1.GroupName),\n\t\t\"application/json\",\n\t}, \",\"))\n\n\t// if sorting, ensure we receive the full object in order to introspect its fields via jsonpath"
  }
]