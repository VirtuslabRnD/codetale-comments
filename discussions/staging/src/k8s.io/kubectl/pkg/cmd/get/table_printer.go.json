[
  {
    "id" : "0a81b45c-05f1-4028-af8d-a55f67d9fe97",
    "prId" : 85644,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85644#pullrequestreview-323188894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6db4d412-8c34-4ca8-9b67-e6c3cb0a7d54",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Huh.  I had thought we actually got a real object back.  Technically this is more expensive than it has to be because of that.\r\n\r\nThis also makes the assumption metav1 to metav1beta1 are equiv, which I don't really think is safe.  I'd expect something in this code block to statically assert that (maybe `var _ metav1.Table = metav1beta1.Table`) just on the off chance it breaks and we forget.",
        "createdAt" : "2019-11-26T16:54:31Z",
        "updatedAt" : "2019-11-26T18:21:10Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "2ae3e99f-ce44-4a32-9ae3-f75dcb6c09d2",
        "parentId" : "6db4d412-8c34-4ca8-9b67-e6c3cb0a7d54",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "(safe in the sense of \"will we remember\")",
        "createdAt" : "2019-11-26T16:54:45Z",
        "updatedAt" : "2019-11-26T18:21:10Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "a5790109-b2e7-4fb5-9b3f-0c7ff6d1d3e9",
        "parentId" : "6db4d412-8c34-4ca8-9b67-e6c3cb0a7d54",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "added type-casts as tests",
        "createdAt" : "2019-11-26T18:17:06Z",
        "updatedAt" : "2019-11-26T18:21:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "deb75da17bb1fa95e5b56fb1207ba247cd9953dd",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +71,75 @@\t}\n\ttable := &metav1.Table{}\n\tif err := runtime.DefaultUnstructuredConverter.FromUnstructured(unstr.Object, table); err != nil {\n\t\treturn nil, err\n\t}"
  }
]