[
  {
    "id" : "b1ebaf8c-a8a1-41b0-a054-725eb8594544",
    "prId" : 100435,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100435#pullrequestreview-662542926",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc39ca9a-5001-4030-911d-7cdee2d2eef7",
        "parentId" : null,
        "authorId" : "b1f0d506-e4a7-4426-9b32-185f93f5e39d",
        "body" : "Is it actually possible to hit both this case and the one at L185? I'm new to this code, but since the target is always structured the same, I'd expect to always hit the same case (well, one consistent case for a unstructured.Unstructured resource input and a second consistent case for a proper type containing resource.Quantity, as discussed in the other thread). Experimentation suggests to me that this is the one hit by the Unstructured case.",
        "createdAt" : "2021-05-11T01:45:17Z",
        "updatedAt" : "2021-05-11T01:45:18Z",
        "lastEditedBy" : "b1f0d506-e4a7-4426-9b32-185f93f5e39d",
        "tags" : [
        ]
      },
      {
        "id" : "f7eebeb3-5624-4116-83aa-40e7aebd5f3a",
        "parentId" : "cc39ca9a-5001-4030-911d-7cdee2d2eef7",
        "authorId" : "b1f0d506-e4a7-4426-9b32-185f93f5e39d",
        "body" : "Thinking about this some more, maybe the one at L185 would take effect if the quantity were in an annotation? It would be nice to have test coverage showing that/why both are needed.",
        "createdAt" : "2021-05-11T16:23:42Z",
        "updatedAt" : "2021-05-11T16:23:42Z",
        "lastEditedBy" : "b1f0d506-e4a7-4426-9b32-185f93f5e39d",
        "tags" : [
        ]
      },
      {
        "id" : "0fbdb1a6-a9c3-4b96-b139-ad3cdf62caa7",
        "parentId" : "cc39ca9a-5001-4030-911d-7cdee2d2eef7",
        "authorId" : "8ae0caa5-9a81-4ec6-a72e-2c1411c61418",
        "body" : "You are right, it's not needed üëçüèº ",
        "createdAt" : "2021-05-18T20:29:46Z",
        "updatedAt" : "2021-05-18T20:29:46Z",
        "lastEditedBy" : "8ae0caa5-9a81-4ec6-a72e-2c1411c61418",
        "tags" : [
        ]
      }
    ],
    "commit" : "e43e9696cc69d835c98b5d590af702677675419a",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +273,277 @@\t\tcase string:\n\t\t\tif jtype, ok := j.Interface().(string); ok {\n\t\t\t\t// check if it's a Quantity\n\t\t\t\titypeQuantity, err := resource.ParseQuantity(itype)\n\t\t\t\tif err != nil {"
  },
  {
    "id" : "dda38f59-b4c2-486a-b8e0-7b50436047a1",
    "prId" : 100435,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100435#pullrequestreview-668043634",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f7afc73-ba8a-4e48-90f6-8e9b1a42ee5f",
        "parentId" : null,
        "authorId" : "b1f0d506-e4a7-4426-9b32-185f93f5e39d",
        "body" : "instead of ignoring the error parsing jtypeQuanity below, I think we should return this default behavior if either one cannot be parsed to a quantity.",
        "createdAt" : "2021-05-25T16:21:52Z",
        "updatedAt" : "2021-05-25T18:45:38Z",
        "lastEditedBy" : "b1f0d506-e4a7-4426-9b32-185f93f5e39d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e43e9696cc69d835c98b5d590af702677675419a",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +276,280 @@\t\t\t\titypeQuantity, err := resource.ParseQuantity(itype)\n\t\t\t\tif err != nil {\n\t\t\t\t\treturn sortorder.NaturalLess(itype, jtype), nil\n\t\t\t\t}\n\t\t\t\tjtypeQuantity, _ := resource.ParseQuantity(jtype)"
  }
]