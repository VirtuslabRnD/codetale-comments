[
  {
    "id" : "1b34ebd5-783e-4248-8238-5f6362b47faa",
    "prId" : 96556,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96556#pullrequestreview-581528657",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dce908f1-4593-4910-b086-a4341eb17cd0",
        "parentId" : null,
        "authorId" : "8ae0caa5-9a81-4ec6-a72e-2c1411c61418",
        "body" : "Based on the code walk through [video](https://www.youtube.com/watch?v=sQTATR_X_sU)(Check out the video starting from 43.30) usually it has Complete, Validate, and Run",
        "createdAt" : "2021-01-31T15:13:38Z",
        "updatedAt" : "2021-02-02T16:53:34Z",
        "lastEditedBy" : "8ae0caa5-9a81-4ec6-a72e-2c1411c61418",
        "tags" : [
        ]
      },
      {
        "id" : "95e94d37-3200-4043-ad24-5b97dc33b9f4",
        "parentId" : "dce908f1-4593-4910-b086-a4341eb17cd0",
        "authorId" : "7cdf591c-5b87-4588-b48e-a40560f96eb5",
        "body" : "I don't really know if we need the Validate() as this is a really simple function and the validation of the name is already done by `NameFromCommandArgs`, but for now let's keep this and maybe cleanup later",
        "createdAt" : "2021-02-02T13:59:40Z",
        "updatedAt" : "2021-02-02T16:53:34Z",
        "lastEditedBy" : "7cdf591c-5b87-4588-b48e-a40560f96eb5",
        "tags" : [
        ]
      },
      {
        "id" : "3ec95d28-7869-4014-812f-eaf5f476650a",
        "parentId" : "dce908f1-4593-4910-b086-a4341eb17cd0",
        "authorId" : "497199e3-7c59-4cad-849c-b309c4b5f375",
        "body" : "Perhaps we need a more  complicated validation here.As described in the [url](https://kubernetes.io/docs/tasks/administer-cluster/namespaces/#creating-a-new-namespace),the name of a namespace must be a valid DNS label which is described [here](https://kubernetes.io/docs/tasks/administer-cluster/namespaces/#creating-a-new-namespace).But it  conflicts with previous [code](https://github.com/kubernetes/kubernetes/blob/1119a505aca14467accedf850daf30aa9c532ef2/staging/src/k8s.io/kubectl/pkg/generate/versioned/namespace.go#L75)",
        "createdAt" : "2021-02-02T16:06:38Z",
        "updatedAt" : "2021-02-02T16:53:34Z",
        "lastEditedBy" : "497199e3-7c59-4cad-849c-b309c4b5f375",
        "tags" : [
        ]
      },
      {
        "id" : "8c59142b-2b87-4c78-b53a-1afe77d656fb",
        "parentId" : "dce908f1-4593-4910-b086-a4341eb17cd0",
        "authorId" : "7cdf591c-5b87-4588-b48e-a40560f96eb5",
        "body" : "hum, but we can improve the code. I guess anyway who returns an error if the name is or is not  DNS formated is the APIServer.\r\n\r\nLet me test your PR here and see how things happen :)",
        "createdAt" : "2021-02-02T16:18:07Z",
        "updatedAt" : "2021-02-02T16:53:34Z",
        "lastEditedBy" : "7cdf591c-5b87-4588-b48e-a40560f96eb5",
        "tags" : [
        ]
      },
      {
        "id" : "41622c2c-b53a-49b4-a8bc-a27eb8f844a3",
        "parentId" : "dce908f1-4593-4910-b086-a4341eb17cd0",
        "authorId" : "7cdf591c-5b87-4588-b48e-a40560f96eb5",
        "body" : "Following up with the test:\r\n\r\n```\r\n_output/bin/kubectl create ns lalala###123\r\nThe Namespace \"lalala###123\" is invalid: metadata.name: Invalid value: \"lalala###123\": a lowercase RFC 1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?')\r\n```\r\n\r\nBecause all the objects are validated against the validation.IsDNS1123Label() function (from api-machinery) I guess this is the normal behavior and we don't need to take care of this (for now, but maybe an improvement in the future validating this before sending to the APIServer and making also dry-run complain, wdyt @soltysh @pwittrock ?)\r\n\r\nSo for now what you can do is keep the Validate() as is (porting the code from the generator), and removing the call of Validate() from createNamespace() :)\r\n",
        "createdAt" : "2021-02-02T16:26:42Z",
        "updatedAt" : "2021-02-02T16:53:34Z",
        "lastEditedBy" : "7cdf591c-5b87-4588-b48e-a40560f96eb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "37496366fa10fcbb80d9272323801f7608249877",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +85,89 @@\t\tExample:               namespaceExample,\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tcmdutil.CheckErr(o.Complete(f, cmd, args))\n\t\t\tcmdutil.CheckErr(o.Validate())\n\t\t\tcmdutil.CheckErr(o.Run())"
  },
  {
    "id" : "1598e9a8-4724-49a4-bb39-5a436759c0cb",
    "prId" : 96556,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96556#pullrequestreview-584456859",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb05b025-8423-4a03-8182-e745aedca99a",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "`CreateNamespaceOptions`",
        "createdAt" : "2021-02-05T15:41:25Z",
        "updatedAt" : "2021-02-05T15:44:07Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "37496366fa10fcbb80d9272323801f7608249877",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +46,50 @@\n// NamespaceOptions is the options for 'create namespace' sub command\ntype NamespaceOptions struct {\n\t// PrintFlags holds options necessary for obtaining a printer\n\tPrintFlags *genericclioptions.PrintFlags"
  }
]