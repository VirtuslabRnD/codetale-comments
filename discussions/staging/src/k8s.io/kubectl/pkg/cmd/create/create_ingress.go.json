[
  {
    "id" : "e14f495a-d982-4443-8584-599dba7d1326",
    "prId" : 95660,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95660#pullrequestreview-510727185",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03cfd2d6-90f6-4530-aa00-6dee71681d9d",
        "parentId" : null,
        "authorId" : "7cdf591c-5b87-4588-b48e-a40560f96eb5",
        "body" : "This not existing is generating a panic in the command :) ",
        "createdAt" : "2020-10-16T18:57:15Z",
        "updatedAt" : "2020-10-16T18:57:15Z",
        "lastEditedBy" : "7cdf591c-5b87-4588-b48e-a40560f96eb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "45d6672a98516faecd94263b9d8e4e9d760c7c1e",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +157,161 @@\tcmdutil.AddApplyAnnotationFlags(cmd)\n\tcmdutil.AddValidateFlags(cmd)\n\tcmdutil.AddDryRunFlag(cmd)\n\tcmd.Flags().StringVar(&o.IngressClass, \"class\", o.IngressClass, \"Ingress Class to be used\")\n\tcmd.Flags().StringArrayVar(&o.Rules, \"rule\", o.Rules, \"Rule in format host/path=service:port[,tls=secretname]. Paths containing the leading character '*' are considered pathType=Prefix. tls argument is optional.\")"
  },
  {
    "id" : "6a5c0bb5-e5c7-472e-b44c-72489ef0b5fa",
    "prId" : 94327,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94327#pullrequestreview-510725184",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4d42388-a558-4b51-85e0-d6c5c1fc76c9",
        "parentId" : null,
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "maybe an even simpler first example, mad. a PR for this to your fork .  that `_` is confusing and, its nice to see quickly that you can add secrets as well since that's usually the thing people need to do (a single service w/ a pls)\r\n\r\nminor so feel free to ignore me on this one :) ",
        "createdAt" : "2020-10-11T15:10:09Z",
        "updatedAt" : "2020-10-15T12:07:55Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "bfc23dc3-e41c-42b2-a1d8-aca3d6260874",
        "parentId" : "d4d42388-a558-4b51-85e0-d6c5c1fc76c9",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Is the _ really needed?  `host.com/foo` and `/foo` are not ambiguous...",
        "createdAt" : "2020-10-15T20:44:13Z",
        "updatedAt" : "2020-10-15T20:44:14Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "759cf63d-2680-4c44-9826-b0d95ccfc78d",
        "parentId" : "d4d42388-a558-4b51-85e0-d6c5c1fc76c9",
        "authorId" : "7cdf591c-5b87-4588-b48e-a40560f96eb5",
        "body" : "The idea of _ was exactly to remove the ambiguity before I started using the regex. But yes, this might be an improvement. Putting in my TODO for tomorrow, to check the impact on simply using \"/foo\" directly and verifying in the code if the len of the hostpath array is bigger than 1 then consider the first field as host and the second as path, otherwise just path :)",
        "createdAt" : "2020-10-15T20:57:41Z",
        "updatedAt" : "2020-10-15T20:57:42Z",
        "lastEditedBy" : "7cdf591c-5b87-4588-b48e-a40560f96eb5",
        "tags" : [
        ]
      },
      {
        "id" : "d92a43e8-a77c-4aaf-b9b3-765309f77ad7",
        "parentId" : "d4d42388-a558-4b51-85e0-d6c5c1fc76c9",
        "authorId" : "7cdf591c-5b87-4588-b48e-a40560f96eb5",
        "body" : "@thockin created a new PR to solve this (https://github.com/kubernetes/kubernetes/pull/95660) and also another...well... bug because in the final past I've removed the generators flag but forgot to add the dryrun flag and now the command simply panics",
        "createdAt" : "2020-10-16T18:54:00Z",
        "updatedAt" : "2020-10-16T18:54:00Z",
        "lastEditedBy" : "7cdf591c-5b87-4588-b48e-a40560f96eb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "73aa0a92f8c79d18a53dd39d3064ac3b0257f11b",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +68,72 @@\n\t\t# Create a catch all ingress pointing to service svc:port and Ingress Class as \"otheringress\"\n\t\tkubectl create ingress catch-all --class=otheringress --rule=\"_/=svc:port\"\n\n\t\t# Create an ingress with two annotations: ingress.annotation1 and ingress.annotations2"
  },
  {
    "id" : "f613365f-472d-4ba0-b25f-38df02f0130f",
    "prId" : 94327,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94327#pullrequestreview-507385333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8100920d-e9bb-418d-b30f-5762cae11015",
        "parentId" : null,
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "just a quick thought, is it common to look the TLS up or would it be helpful to provide feedback \"this secret doesn't exist\" yet if its not in the namespace?  no strong opinion but if that's valuable I might be able to PR  against it.  its always a mistake I make, misnaming the secret.",
        "createdAt" : "2020-10-11T15:12:03Z",
        "updatedAt" : "2020-10-15T12:07:55Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "a8657296-8c5e-49b7-878d-0dc29e27eb34",
        "parentId" : "8100920d-e9bb-418d-b30f-5762cae11015",
        "authorId" : "7cdf591c-5b87-4588-b48e-a40560f96eb5",
        "body" : "I think it's 'hard' because when the secret doesn't exists Ingress Controllers (don't know if all of them) fallback into the default secret.\r\n\r\nAlso this would be useless when using dry-run, so IMO create should try to create the object and rely on the apiserver validation. If the api-server does not return an error/warning when you create an YAML with a non-existing secret, it should not return an error/warning when you use kubectl create command either :)",
        "createdAt" : "2020-10-13T12:36:10Z",
        "updatedAt" : "2020-10-15T12:07:55Z",
        "lastEditedBy" : "7cdf591c-5b87-4588-b48e-a40560f96eb5",
        "tags" : [
        ]
      },
      {
        "id" : "c27da41e-7f0d-44dc-81d0-d9082bd28b0f",
        "parentId" : "8100920d-e9bb-418d-b30f-5762cae11015",
        "authorId" : "7cdf591c-5b87-4588-b48e-a40560f96eb5",
        "body" : "Also this was my first thought also, like 'should we validate the existence of a secret' but then I realized that for me, it doesn't make sense ",
        "createdAt" : "2020-10-13T12:36:43Z",
        "updatedAt" : "2020-10-15T12:07:55Z",
        "lastEditedBy" : "7cdf591c-5b87-4588-b48e-a40560f96eb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "73aa0a92f8c79d18a53dd39d3064ac3b0257f11b",
    "line" : 166,
    "diffHunk" : "@@ -1,1 +158,162 @@\tcmdutil.AddValidateFlags(cmd)\n\tcmd.Flags().StringVar(&o.IngressClass, \"class\", o.IngressClass, \"Ingress Class to be used\")\n\tcmd.Flags().StringArrayVar(&o.Rules, \"rule\", o.Rules, \"Rule in format host/path=service:port[,tls=secretname]. Paths containing the leading character '*' are considered pathType=Prefix. tls argument is optional.\")\n\tcmd.Flags().StringVar(&o.DefaultBackend, \"default-backend\", o.DefaultBackend, \"Default service for backend, in format of svcname:port\")\n\tcmd.Flags().StringArrayVar(&o.Annotations, \"annotation\", o.Annotations, \"Annotation to insert in the ingress object, in the format annotation=value\")"
  },
  {
    "id" : "e011e5b7-4aa0-400f-97ac-451398543de4",
    "prId" : 94327,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94327#pullrequestreview-509278078",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b61c9b17-aa5b-446a-b9b9-b14b91d53b81",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : ":+1: ",
        "createdAt" : "2020-10-15T11:28:07Z",
        "updatedAt" : "2020-10-15T12:07:55Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "73aa0a92f8c79d18a53dd39d3064ac3b0257f11b",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +47,51 @@\t// Separator from svcname to svcport -> \":\"\n\t// (?P<svcport>[\\w\\-]+) -> Service Port (letters, numbers, '-') -> 1-N characters\n\tregexHostPathSvc = `^(?P<host>.+)(?P<path>/.*)=(?P<svcname>[\\w\\-]+):(?P<svcport>[\\w\\-]+)`\n\n\t// This Regex is optional -> (....)?"
  },
  {
    "id" : "3956bca6-043e-419a-9d65-66d5fe659f72",
    "prId" : 78153,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78153#pullrequestreview-446664115",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09496bfe-ca12-4540-b4b0-da446eb45909",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Please split imports into following sections:\r\n1. builtin go\r\n2. 3-rd party\r\n3. k8s\r\nSee other files, for example. ",
        "createdAt" : "2020-07-10T19:52:03Z",
        "updatedAt" : "2020-10-13T14:54:57Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "be45584a03aa9f3a3fd73e3d9cc69545da92616e",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@\t\"strconv\"\n\n\t\"github.com/spf13/cobra\"\n\n\t\"k8s.io/api/networking/v1\""
  }
]