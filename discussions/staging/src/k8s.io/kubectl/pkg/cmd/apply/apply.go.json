[
  {
    "id" : "f30dca98-8247-4191-a78a-20449cf71164",
    "prId" : 89799,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89799#pullrequestreview-392196869",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2112f30-08fa-4aae-acac-e2da5500b65b",
        "parentId" : null,
        "authorId" : "d995a87c-4064-4495-9753-d0cf8a45072f",
        "body" : "Please add a simple comment here about what this is validating (e.g. Ensure the APIServer supports server-side dry run), and maybe what the consequences are (e.g. if we send a mutating call with server-side dry-run, but the APIServer doesn't support it; then it will inadvertently mutate).",
        "createdAt" : "2020-04-06T17:25:23Z",
        "updatedAt" : "2020-05-19T21:04:28Z",
        "lastEditedBy" : "d995a87c-4064-4495-9753-d0cf8a45072f",
        "tags" : [
        ]
      },
      {
        "id" : "86d61b96-aa13-4be1-b6e0-1d361b6d10a8",
        "parentId" : "c2112f30-08fa-4aae-acac-e2da5500b65b",
        "authorId" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "body" : "Commented",
        "createdAt" : "2020-04-13T14:55:52Z",
        "updatedAt" : "2020-05-19T21:04:28Z",
        "lastEditedBy" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0eb68c0cfcff6d50d9d5ec278f96820e3cb3f9a",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +412,416 @@\t\tWithFieldManager(o.FieldManager)\n\n\tif o.DryRunStrategy == cmdutil.DryRunServer {\n\t\t// Ensure the APIServer supports server-side dry-run for the resource,\n\t\t// otherwise fail early."
  },
  {
    "id" : "74ebff09-5e93-4a7d-b351-1b186fb672f7",
    "prId" : 89799,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89799#pullrequestreview-392197203",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25ffb319-0d1c-4abc-9c0d-0cc83837a937",
        "parentId" : null,
        "authorId" : "d995a87c-4064-4495-9753-d0cf8a45072f",
        "body" : "The tri-state nature of dry-run is what makes it slightly confusing. I think we should add a lengthy comment about the tri-state nature of the dry-run. We should point out:\r\n\r\n1) client-side dry-run means the client will prevent mutating calls (e.g. create/patch/delete).\r\n2) server-side dry-run means the client will send the mutating calls (with server-side dry-run set, verifying the APIServer supports server-side dry-run).\r\n3) no dry-run means the client makes all calls.\r\n\r\nWe should probably add that above the DryRunStrategy field in the ApplyOptions.\r\n ",
        "createdAt" : "2020-04-06T17:34:32Z",
        "updatedAt" : "2020-05-19T21:04:28Z",
        "lastEditedBy" : "d995a87c-4064-4495-9753-d0cf8a45072f",
        "tags" : [
        ]
      },
      {
        "id" : "299f437c-9ed5-4f4c-8e0b-b49b29c3abc3",
        "parentId" : "25ffb319-0d1c-4abc-9c0d-0cc83837a937",
        "authorId" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "body" : "Added a comment to cmdutil for the enums",
        "createdAt" : "2020-04-13T14:56:24Z",
        "updatedAt" : "2020-05-19T21:04:28Z",
        "lastEditedBy" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0eb68c0cfcff6d50d9d5ec278f96820e3cb3f9a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +408,412 @@\t}\n\n\thelper := resource.NewHelper(info.Client, info.Mapping).\n\t\tDryRun(o.DryRunStrategy == cmdutil.DryRunServer).\n\t\tWithFieldManager(o.FieldManager)"
  },
  {
    "id" : "ccb51a9d-30f5-4992-8c44-32a04a9fa31c",
    "prId" : 88675,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88675#pullrequestreview-366737855",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e264e6e5-94a1-4403-9701-e50ccb1e59b6",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Ah! I thought MarkDeprecated made it hidden too, good catch!",
        "createdAt" : "2020-02-28T23:12:25Z",
        "updatedAt" : "2020-02-28T23:12:34Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b214c96b01bf34345d4d7d82fcf5a85fd8318dd",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +193,197 @@\tcmd.Flags().Bool(\"server-dry-run\", false, \"If true, request will be sent to server with dry-run flag, which means the modifications won't be persisted.\")\n\tcmd.Flags().MarkDeprecated(\"server-dry-run\", \"--server-dry-run is deprecated and can be replaced with --dry-run=server.\")\n\tcmd.Flags().MarkHidden(\"server-dry-run\")\n\tcmdutil.AddDryRunFlag(cmd)\n\tcmdutil.AddServerSideApplyFlags(cmd)"
  },
  {
    "id" : "83f9d2db-5413-457a-9b65-96af8b68a09b",
    "prId" : 87714,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87714#pullrequestreview-351661559",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8070d0a7-87b9-481a-b4f6-15113aa391e9",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "that's better actually :-)",
        "createdAt" : "2020-01-31T17:35:37Z",
        "updatedAt" : "2020-02-13T01:47:13Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "13b80b48cd02b8263d910f2423a1f5b92cdf7644",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +480,484 @@\t\t\t\t\t\treturn cmdutil.AddSourceToErr(\"creating\", info.Source, err)\n\t\t\t\t\t}\n\t\t\t\t\thelper.DryRun(true)\n\t\t\t\t}\n\t\t\t\tobj, err := helper.Create(info.Namespace, true, info.Object)"
  },
  {
    "id" : "5b3b7d1a-e8c6-4203-b7f6-c8f9331a0789",
    "prId" : 87714,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87714#pullrequestreview-351748922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cadfc588-bebf-4aff-9d2e-c78f325f275e",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Line 402 in this file, you're still using `ServerDryRun` as being the authoritative source of dry-run, which is wrong. I suspect you should remove the `ServerDryRun` variable and merge its value with the DryRunStrategy early, so that there is no source of confusion later on.",
        "createdAt" : "2020-01-31T19:28:05Z",
        "updatedAt" : "2020-02-13T01:47:13Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "9b89a41f-82d2-448e-8124-f3a78501ed5a",
        "parentId" : "cadfc588-bebf-4aff-9d2e-c78f325f275e",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "It won't be easy unfortunately. We could make sync it the other way to make sure that if something uses it, it's not going to break.",
        "createdAt" : "2020-01-31T19:31:33Z",
        "updatedAt" : "2020-02-13T01:47:13Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "2283ad7f-39dc-46f6-b1aa-5b514f2a6b41",
        "parentId" : "cadfc588-bebf-4aff-9d2e-c78f325f275e",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Can't wait for this flag to go for real.",
        "createdAt" : "2020-01-31T19:37:14Z",
        "updatedAt" : "2020-02-13T01:47:13Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "d16d679f-dc71-4d5d-85d7-12db5b925b1f",
        "parentId" : "cadfc588-bebf-4aff-9d2e-c78f325f275e",
        "authorId" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "body" : "Oops fixed! Removed the struct value, which is merged early, so we don't use it anywhere anymore",
        "createdAt" : "2020-01-31T20:09:14Z",
        "updatedAt" : "2020-02-13T01:47:13Z",
        "lastEditedBy" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "tags" : [
        ]
      }
    ],
    "commit" : "13b80b48cd02b8263d910f2423a1f5b92cdf7644",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +60,64 @@\tFieldManager    string\n\tSelector        string\n\tDryRunStrategy  cmdutil.DryRunStrategy\n\tDryRunVerifier  *resource.DryRunVerifier\n\tPrune           bool"
  },
  {
    "id" : "c58fdfad-97fe-492e-8f5b-36abce5b08de",
    "prId" : 87714,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87714#pullrequestreview-351804804",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b22703f-4e7d-42e1-be82-2c908c8a2942",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Ah, nice one! That's exactly what we needed to do!",
        "createdAt" : "2020-01-31T22:04:31Z",
        "updatedAt" : "2020-02-13T01:47:13Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "13b80b48cd02b8263d910f2423a1f5b92cdf7644",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +191,195 @@\tcmd.Flags().StringArrayVar(&o.PruneWhitelist, \"prune-whitelist\", o.PruneWhitelist, \"Overwrite the default whitelist with <group/version/kind> for --prune\")\n\tcmd.Flags().BoolVar(&o.OpenAPIPatch, \"openapi-patch\", o.OpenAPIPatch, \"If true, use openapi to calculate diff when the openapi presents and the resource can be found in the openapi spec. Otherwise, fall back to use baked-in types.\")\n\tcmd.Flags().Bool(\"server-dry-run\", false, \"If true, request will be sent to server with dry-run flag, which means the modifications won't be persisted.\")\n\tcmd.Flags().MarkDeprecated(\"server-dry-run\", \"--server-dry-run is deprecated and can be replaced with --dry-run=server.\")\n\tcmdutil.AddDryRunFlag(cmd)"
  },
  {
    "id" : "f4403f37-d834-44b7-ab1c-a05b325b2dad",
    "prId" : 87714,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87714#pullrequestreview-351804804",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "379801e2-a31a-48dd-a064-4826ed52302a",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Yeah, that's the part that was missing before, but now that the variable is gone, there is no way to miss this.",
        "createdAt" : "2020-01-31T22:06:09Z",
        "updatedAt" : "2020-02-13T01:47:13Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "13b80b48cd02b8263d910f2423a1f5b92cdf7644",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +403,407 @@\t\t\t\t\treturn err\n\t\t\t\t}\n\t\t\t\thelper.DryRun(true)\n\t\t\t}\n\t\t\tobj, err := helper.Patch("
  },
  {
    "id" : "20d14b57-86e0-4a6f-bb78-388cdc9f74f1",
    "prId" : 86408,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86408#pullrequestreview-343664416",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "498617cd-728a-43f4-b79a-7ec79b398dae",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Are we supposed to not print/fail on this error?",
        "createdAt" : "2020-01-13T18:23:22Z",
        "updatedAt" : "2020-01-17T17:34:28Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "bf04c60e-728f-4f51-8b79-a4f3e0c944aa",
        "parentId" : "498617cd-728a-43f4-b79a-7ec79b398dae",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Yeah, that's very dubious and might be the source of the broken test. If you have an error verifying if it's dry-runnable, then you're just going to apply non-dry-run, which should absolutely not happen.",
        "createdAt" : "2020-01-13T18:45:18Z",
        "updatedAt" : "2020-01-17T17:34:28Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "19af7957-c40f-42bb-b8bc-37c571690eee",
        "parentId" : "498617cd-728a-43f4-b79a-7ec79b398dae",
        "authorId" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "body" : "Yikes, thanks",
        "createdAt" : "2020-01-16T03:22:48Z",
        "updatedAt" : "2020-01-17T17:34:28Z",
        "lastEditedBy" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "tags" : [
        ]
      },
      {
        "id" : "bf768286-6959-4e1d-8ef0-814ef1ec49ee",
        "parentId" : "498617cd-728a-43f4-b79a-7ec79b398dae",
        "authorId" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "body" : "Fixed",
        "createdAt" : "2020-01-16T04:12:04Z",
        "updatedAt" : "2020-01-17T17:34:28Z",
        "lastEditedBy" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bea0e469bcfe4967cbf2656a998d60e0b684747",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +398,402 @@\t\t\thelper := resource.NewHelper(info.Client, info.Mapping)\n\t\t\tif o.ServerDryRun {\n\t\t\t\tif err := resource.VerifyDryRun(info.Mapping.GroupVersionKind, o.DynamicClient, o.DiscoveryClient); err != nil {\n\t\t\t\t\treturn err\n\t\t\t\t}"
  },
  {
    "id" : "ad7c8881-0b56-4b2b-8350-5dc1a6cdab2d",
    "prId" : 86408,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86408#pullrequestreview-343664451",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8595faf-79ca-44a3-aa57-fe29c1d41f37",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Same here, we can't ignore the error, otherwise it's going to apply the object :-/",
        "createdAt" : "2020-01-13T18:47:02Z",
        "updatedAt" : "2020-01-17T17:34:28Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "9d9c5106-124e-4ab7-98c9-f0c7cb2f784d",
        "parentId" : "a8595faf-79ca-44a3-aa57-fe29c1d41f37",
        "authorId" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "body" : "Fixed!",
        "createdAt" : "2020-01-16T04:12:16Z",
        "updatedAt" : "2020-01-17T17:34:28Z",
        "lastEditedBy" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bea0e469bcfe4967cbf2656a998d60e0b684747",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +475,479 @@\t\t\t\thelper := resource.NewHelper(info.Client, info.Mapping)\n\t\t\t\tif o.ServerDryRun {\n\t\t\t\t\tif err := resource.VerifyDryRun(info.Mapping.GroupVersionKind, o.DynamicClient, o.DiscoveryClient); err != nil {\n\t\t\t\t\t\treturn cmdutil.AddSourceToErr(\"creating\", info.Source, err)\n\t\t\t\t\t}"
  },
  {
    "id" : "0ce94a33-3374-46fc-a520-2a171f8545ce",
    "prId" : 86361,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86361#pullrequestreview-333539698",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef8d6eee-2ba4-4c3f-bf17-7914933f0681",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "add a comment explaining why we do this",
        "createdAt" : "2019-12-17T19:54:10Z",
        "updatedAt" : "2019-12-19T01:20:58Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "79bc63fb4b79caea4b141d318b11a0892ca14c95",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +152,156 @@\t\tIOStreams: ioStreams,\n\n\t\tobjects:       []*resource.Info{},\n\t\tobjectsCached: false,\n"
  },
  {
    "id" : "08bd09fe-d6f4-487e-851e-dbc9c2897599",
    "prId" : 86361,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86361#pullrequestreview-333542235",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5e0a9e8-2e2f-455b-923e-1d1466d5bda5",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "you can reduce the size of this change by wrapping the logic in an local function -- e.g.\r\n\r\n```go\r\nfor ... {\r\n  err := func() error { ... }\r\n}\r\n```",
        "createdAt" : "2019-12-17T19:58:18Z",
        "updatedAt" : "2019-12-19T01:20:58Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "79bc63fb4b79caea4b141d318b11a0892ca14c95",
    "line" : 244,
    "diffHunk" : "@@ -1,1 +382,386 @@\t\treturn fmt.Errorf(\"no objects passed to apply\")\n\t}\n\tfor _, info := range infos {\n\n\t\t// If server-dry-run is requested but the type doesn't support it, fail right away."
  },
  {
    "id" : "af7f3e2b-df47-4cc6-8462-2132b703c117",
    "prId" : 86361,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86361#pullrequestreview-334352281",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5d16887-3b56-4307-8d0f-e210adce8f13",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Lets move this above the first GetObjects call",
        "createdAt" : "2019-12-19T00:47:35Z",
        "updatedAt" : "2019-12-19T01:20:58Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "79bc63fb4b79caea4b141d318b11a0892ca14c95",
    "line" : 215,
    "diffHunk" : "@@ -1,1 +366,370 @@\t}\n\n\tif o.PreProcessorFn != nil {\n\t\tklog.V(4).Infof(\"Running apply pre-processor function\")\n\t\tif err := o.PreProcessorFn(); err != nil {"
  },
  {
    "id" : "6f05b13b-ed19-42c9-b5d5-50f6f68cf74b",
    "prId" : 82477,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82477#pullrequestreview-285795169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1f7fe06-b513-44cf-8236-b6c14b92456a",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "This one is fine. It returns an interface, which I assume will be nil if an error is returned, it would crash if it fails.",
        "createdAt" : "2019-09-09T21:28:34Z",
        "updatedAt" : "2019-09-09T21:28:35Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef0fe263aa9f24147370c22f923988ad8f8aa172",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +252,256 @@\to.OpenAPISchema, _ = f.OpenAPISchema()\n\to.Validator, err = f.Validator(cmdutil.GetFlagBool(cmd, \"validate\"))\n\tif err != nil {\n\t\treturn err\n\t}"
  }
]