[
  {
    "id" : "6298d2ec-aa6b-4054-b175-083ecfc7f9ce",
    "prId" : 86476,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86476#pullrequestreview-358409130",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7bae8af3-8e6e-49bd-99ac-9a0bf3f4648e",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "also add to pkg/printers/internalversion/printers.go as a new column:\r\n```go\r\n\tcertificateSigningRequestColumnDefinitions := []metav1.TableColumnDefinition{\r\n\t\t{Name: \"Name\", Type: \"string\", Format: \"name\", Description: metav1.ObjectMeta{}.SwaggerDoc()[\"name\"]},\r\n\t\t{Name: \"Age\", Type: \"string\", Description: metav1.ObjectMeta{}.SwaggerDoc()[\"creationTimestamp\"]},\r\n\t\t{Name: \"SignerName\", Type: \"string\", Description: certificatesv1beta1.CertificateSigningRequestSpec{}.SwaggerDoc()[\"signerName\"]},\r\n\t\t{Name: \"Requestor\", Type: \"string\", Description: certificatesv1beta1.CertificateSigningRequestSpec{}.SwaggerDoc()[\"request\"]},\r\n\t\t{Name: \"Condition\", Type: \"string\", Description: certificatesv1beta1.CertificateSigningRequestStatus{}.SwaggerDoc()[\"conditions\"]},\r\n\t}\r\n```\r\n\r\n```go\r\nfunc printCertificateSigningRequest(obj *certificates.CertificateSigningRequest, options printers.GenerateOptions) ([]metav1.TableRow, error) {\r\n\trow := metav1.TableRow{\r\n\t\tObject: runtime.RawExtension{Object: obj},\r\n\t}\r\n\tstatus, err := extractCSRStatus(obj)\r\n\tif err != nil {\r\n\t\treturn nil, err\r\n\t}\r\n\tsignerName := \"<none>\"\r\n\tif obj.Spec.SignerName != nil {\r\n\t\tsignerName = *obj.Spec.SignerName\r\n\t}\r\n\trow.Cells = append(row.Cells, obj.Name, translateTimestampSince(obj.CreationTimestamp), signerName, obj.Spec.Username, status)\r\n\treturn []metav1.TableRow{row}, nil\r\n}\r\n```",
        "createdAt" : "2020-02-12T17:56:32Z",
        "updatedAt" : "2020-02-27T10:18:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "3391e369-ff16-4ca4-b6b5-3dcfd4e3bf67",
        "parentId" : "7bae8af3-8e6e-49bd-99ac-9a0bf3f4648e",
        "authorId" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "body" : ":+1: although worth noting that the internal version does not use a `*string` anymore, so the `if` needs to check for `\"\"` instead (which I think is okay)",
        "createdAt" : "2020-02-13T17:25:24Z",
        "updatedAt" : "2020-02-27T10:18:17Z",
        "lastEditedBy" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "tags" : [
        ]
      }
    ],
    "commit" : "a983356caa9876079eafc5e8dd7806473022e958",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3241,3245 @@\t\tw.Write(LEVEL_0, \"Requesting User:\\t%s\\n\", csr.Spec.Username)\n\t\tif csr.Spec.SignerName != nil {\n\t\t\tw.Write(LEVEL_0, \"Signer:\\t%s\\n\", *csr.Spec.SignerName)\n\t\t}\n\t\tw.Write(LEVEL_0, \"Status:\\t%s\\n\", status)"
  },
  {
    "id" : "800fe95d-01fa-4499-b25b-e5e7974be81b",
    "prId" : 84194,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84194#pullrequestreview-314315833",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7b2a034-8c9c-4309-98e3-99ea32665c29",
        "parentId" : null,
        "authorId" : "87ab1d19-ad39-40d0-a045-817039414280",
        "body" : "If you have a combined policy within the spec, won't this ignore the egress part?",
        "createdAt" : "2019-11-04T19:56:30Z",
        "updatedAt" : "2019-11-12T21:36:02Z",
        "lastEditedBy" : "87ab1d19-ad39-40d0-a045-817039414280",
        "tags" : [
        ]
      },
      {
        "id" : "fe03b9ba-4367-4e01-8c91-06dc8c2885de",
        "parentId" : "d7b2a034-8c9c-4309-98e3-99ea32665c29",
        "authorId" : "c8bfafed-d184-4111-b0f7-47520a7dc6f5",
        "body" : "It will return true true, no? Maybe I'm misunderstanding you",
        "createdAt" : "2019-11-05T11:30:33Z",
        "updatedAt" : "2019-11-12T21:36:02Z",
        "lastEditedBy" : "c8bfafed-d184-4111-b0f7-47520a7dc6f5",
        "tags" : [
        ]
      },
      {
        "id" : "f7c3b786-8795-4139-83f7-6e8f23d9263b",
        "parentId" : "d7b2a034-8c9c-4309-98e3-99ea32665c29",
        "authorId" : "87ab1d19-ad39-40d0-a045-817039414280",
        "body" : "For whatever reason I thought the case statement hitting the first entry would exit the loop but then I realized that this is iterating over the actual PolicyTypes within the Spec. Can you please add some unit tests the describe_tests file to verify these behaviors?",
        "createdAt" : "2019-11-06T22:32:01Z",
        "updatedAt" : "2019-11-12T21:36:02Z",
        "lastEditedBy" : "87ab1d19-ad39-40d0-a045-817039414280",
        "tags" : [
        ]
      },
      {
        "id" : "60c6bd05-5566-4d3c-a657-7eb01dd02c9f",
        "parentId" : "d7b2a034-8c9c-4309-98e3-99ea32665c29",
        "authorId" : "c8bfafed-d184-4111-b0f7-47520a7dc6f5",
        "body" : "Pushed two tests, thanks",
        "createdAt" : "2019-11-08T16:31:19Z",
        "updatedAt" : "2019-11-12T21:36:02Z",
        "lastEditedBy" : "c8bfafed-d184-4111-b0f7-47520a7dc6f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "7753bfa3a418d95795420d03193732e024456466",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +3768,3772 @@\tfor _, pt := range nps.PolicyTypes {\n\t\tswitch pt {\n\t\tcase networkingv1.PolicyTypeIngress:\n\t\t\tingress = true\n\t\tcase networkingv1.PolicyTypeEgress:"
  },
  {
    "id" : "6eb42b4c-24d7-43b0-9d64-d2b604483606",
    "prId" : 83899,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83899#pullrequestreview-301675866",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14a6bb82-ec5d-48f4-8448-8f80aa843de6",
        "parentId" : null,
        "authorId" : "4186ed58-9575-4126-b730-073268bc67cb",
        "body" : "I remember there was a feature gate. Have we removed that? If not, maybe still guard this behind the feature gate?",
        "createdAt" : "2019-10-14T17:12:14Z",
        "updatedAt" : "2019-10-14T17:12:44Z",
        "lastEditedBy" : "4186ed58-9575-4126-b730-073268bc67cb",
        "tags" : [
        ]
      },
      {
        "id" : "1de90455-80a8-44df-9754-07f7524f36dc",
        "parentId" : "14a6bb82-ec5d-48f4-8448-8f80aa843de6",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I don't think it's needed - we're going to GA it in 1.17 anyway and with GA the process is to just leave the feature gate itself but remove all checks on it.\r\n\r\nSo I'm going to leave as is. Note that if the feature is disabled, the only consequence is that we will write, e.g. \"holder identity: <unset>\", so I don't think it's actuallu a big deal.",
        "createdAt" : "2019-10-15T06:28:12Z",
        "updatedAt" : "2019-10-15T06:28:26Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b44f8948a4ec4105ce3e989132199dd6757c65e4",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +3002,3006 @@\t}\n\n\tlease, err := d.CoordinationV1().Leases(corev1.NamespaceNodeLease).Get(name, metav1.GetOptions{})\n\tif err != nil {\n\t\tif !errors.IsNotFound(err) {"
  },
  {
    "id" : "cfa0e222-ea2b-4f0a-a620-8aa1904dae9a",
    "prId" : 83899,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83899#pullrequestreview-301675866",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a74c034-6101-49ed-b03c-310d863cad08",
        "parentId" : null,
        "authorId" : "4186ed58-9575-4126-b730-073268bc67cb",
        "body" : "Same here. Maybe put those prints behind feature gate?",
        "createdAt" : "2019-10-14T17:13:25Z",
        "updatedAt" : "2019-10-14T17:13:25Z",
        "lastEditedBy" : "4186ed58-9575-4126-b730-073268bc67cb",
        "tags" : [
        ]
      },
      {
        "id" : "beeb461e-a8a8-4c86-8a68-b0e486d4707a",
        "parentId" : "7a74c034-6101-49ed-b03c-310d863cad08",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Same answer as above.",
        "createdAt" : "2019-10-15T06:28:24Z",
        "updatedAt" : "2019-10-15T06:28:26Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b44f8948a4ec4105ce3e989132199dd6757c65e4",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +3055,3059 @@\t\tw.Write(LEVEL_0, \"Unschedulable:\\t%v\\n\", node.Spec.Unschedulable)\n\n\t\tw.Write(LEVEL_0, \"Lease:\\n\")\n\t\tholderIdentity := \"<unset>\"\n\t\tif lease != nil && lease.Spec.HolderIdentity != nil {"
  },
  {
    "id" : "d0f46467-3275-4e02-9413-dfaec581e048",
    "prId" : 83749,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83749#pullrequestreview-300734685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b658b0a4-6f07-471a-ae4f-04b6996e67b2",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Nit: Should this be `No LimitRange resources...`? (plural instead of singular)",
        "createdAt" : "2019-10-11T14:20:25Z",
        "updatedAt" : "2019-10-11T14:20:34Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "1195411d-1f70-419e-a1fb-65903436673a",
        "parentId" : "b658b0a4-6f07-471a-ae4f-04b6996e67b2",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "By 'No LimitRange resource' I meant there isn't a single LimitRange resource.",
        "createdAt" : "2019-10-11T14:44:18Z",
        "updatedAt" : "2019-10-11T14:44:18Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "3553de332e9367a9126937c5840da00f8001f2a0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +475,479 @@func DescribeLimitRanges(limitRanges *corev1.LimitRangeList, w PrefixWriter) {\n\tif len(limitRanges.Items) == 0 {\n\t\tw.Write(LEVEL_0, \"No LimitRange resource.\\n\")\n\t\treturn\n\t}"
  },
  {
    "id" : "b115845c-c649-42e3-be83-c08ad4027195",
    "prId" : 82464,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82464#pullrequestreview-285874361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3a277e6-d64c-4b28-bd93-21017614553f",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Should we put Name after Kind?",
        "createdAt" : "2019-09-09T21:06:55Z",
        "updatedAt" : "2019-09-10T15:47:57Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "fa9af285-9dc3-44bb-b986-6e4a6c50a02f",
        "parentId" : "c3a277e6-d64c-4b28-bd93-21017614553f",
        "authorId" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "body" : "That's better, thanks!\r\n\r\ndone",
        "createdAt" : "2019-09-10T02:15:58Z",
        "updatedAt" : "2019-09-10T15:47:57Z",
        "lastEditedBy" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "9157df47e8db6e10edcd398294e6a4c04b3572e9",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +1553,1557 @@\t\t\t\tw.Write(LEVEL_1, \"APIGroup:\\t%v\\n\", *pvc.Spec.DataSource.APIGroup)\n\t\t\t}\n\t\t\tw.Write(LEVEL_1, \"Kind:\\t%v\\n\", pvc.Spec.DataSource.Kind)\n\t\t\tw.Write(LEVEL_1, \"Name:\\t%v\\n\", pvc.Spec.DataSource.Name)\n\t\t}"
  },
  {
    "id" : "1e5d8da9-c3b3-4137-8f21-5dd5e0289937",
    "prId" : 82464,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82464#pullrequestreview-286256146",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5dc35468-8522-4a5f-8f94-139a92f2f14e",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Should the order be large->small, or small->large? ie\r\n\r\n* apigroup, kind, name\r\n* name, kind, apigroup\r\n\r\nIt looks like other places do the first, so we should try to be consistent.",
        "createdAt" : "2019-09-10T14:07:56Z",
        "updatedAt" : "2019-09-10T15:47:57Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "309742eb-e99a-4e40-8ee0-ebecd441abd8",
        "parentId" : "5dc35468-8522-4a5f-8f94-139a92f2f14e",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I'd expect group, kind, name",
        "createdAt" : "2019-09-10T14:19:19Z",
        "updatedAt" : "2019-09-10T15:47:57Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d48679c9-b0b0-4515-a1bd-d849bbc323fa",
        "parentId" : "5dc35468-8522-4a5f-8f94-139a92f2f14e",
        "authorId" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "body" : "> I'd expect group, kind, name\r\n\r\nI also expect this. wdyt? @msau42 ",
        "createdAt" : "2019-09-10T14:50:39Z",
        "updatedAt" : "2019-09-10T15:47:57Z",
        "lastEditedBy" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "tags" : [
        ]
      },
      {
        "id" : "047fe24a-afec-47d5-8f07-e1836f68ca5a",
        "parentId" : "5dc35468-8522-4a5f-8f94-139a92f2f14e",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "sgtm",
        "createdAt" : "2019-09-10T15:03:50Z",
        "updatedAt" : "2019-09-10T15:47:57Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "8c18778b-3d21-4171-bbaf-4ae6828e1a50",
        "parentId" : "5dc35468-8522-4a5f-8f94-139a92f2f14e",
        "authorId" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "body" : "done",
        "createdAt" : "2019-09-10T15:48:07Z",
        "updatedAt" : "2019-09-10T15:48:08Z",
        "lastEditedBy" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "9157df47e8db6e10edcd398294e6a4c04b3572e9",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1550,1554 @@\t\tif pvc.Spec.DataSource != nil {\n\t\t\tw.Write(LEVEL_0, \"DataSource:\\n\")\n\t\t\tif pvc.Spec.DataSource.APIGroup != nil {\n\t\t\t\tw.Write(LEVEL_1, \"APIGroup:\\t%v\\n\", *pvc.Spec.DataSource.APIGroup)\n\t\t\t}"
  },
  {
    "id" : "9c3275d5-b5fa-4e3f-a904-5701440436e8",
    "prId" : 81795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81795#pullrequestreview-282284216",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be3658fd-cfd0-41c6-9dfb-43d3148b605a",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Shouldn't the error return be checked ?\r\n```\r\n\t\tif events, err = d.CoreV1().Events(namespace).Search(scheme.Scheme, eps); err != nil {\r\n\t\t\tevents = nil\r\n\t\t}\r\n```",
        "createdAt" : "2019-08-31T00:39:33Z",
        "updatedAt" : "2019-08-31T00:54:34Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab1943e00bff372c362ba1a04353cb000c07d0ea",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +2619,2623 @@\tvar events *corev1.EventList\n\tif describerSettings.ShowEvents {\n\t\tevents, _ = d.CoreV1().Events(namespace).Search(scheme.Scheme, eps)\n\t}\n"
  },
  {
    "id" : "1d445543-3181-4c38-9106-9a4323d6e13c",
    "prId" : 80605,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80605#pullrequestreview-332211681",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00b6dc91-e909-4444-8f11-c455e118ffac",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Do we want to list Pods here?",
        "createdAt" : "2019-11-14T19:00:32Z",
        "updatedAt" : "2019-12-14T19:34:05Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "f13c85a2-acf3-4f22-aee7-daa808b8ba65",
        "parentId" : "00b6dc91-e909-4444-8f11-c455e118ffac",
        "authorId" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "body" : "I guess that would make sense! Ill make a separate PR for it! :smile: ",
        "createdAt" : "2019-12-14T12:28:41Z",
        "updatedAt" : "2019-12-14T19:34:05Z",
        "lastEditedBy" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "tags" : [
        ]
      },
      {
        "id" : "dfba563f-8fa0-4cb6-8c94-aed26d23047e",
        "parentId" : "00b6dc91-e909-4444-8f11-c455e118ffac",
        "authorId" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "body" : "Guess we can add pids as well.\r\n\r\nNow that we have tests it would be much easier to refactor the code and add support for that. :)",
        "createdAt" : "2019-12-14T13:11:18Z",
        "updatedAt" : "2019-12-14T19:34:05Z",
        "lastEditedBy" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "tags" : [
        ]
      }
    ],
    "commit" : "51bff87b18d6482f7383fb2151c7e483a1641ca7",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +3532,3536 @@\thugePageResources := make([]string, 0, len(allocatable))\n\tfor resource := range allocatable {\n\t\tif resourcehelper.IsHugePageResourceName(resource) {\n\t\t\thugePageResources = append(hugePageResources, string(resource))\n\t\t} else if !resourcehelper.IsStandardContainerResourceName(string(resource)) && resource != corev1.ResourcePods {"
  },
  {
    "id" : "36018f42-c912-4858-ae36-6353dd3aae80",
    "prId" : 80605,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80605#pullrequestreview-362917045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04bf12a9-ca0a-4aa4-b378-be362b7ef9bb",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "@soltysh should we flag-enable this?",
        "createdAt" : "2019-11-14T19:01:50Z",
        "updatedAt" : "2019-12-14T19:34:05Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "f712d631-7980-44d5-ac15-a4de8990d797",
        "parentId" : "04bf12a9-ca0a-4aa4-b378-be362b7ef9bb",
        "authorId" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "body" : "ping @soltysh ",
        "createdAt" : "2019-12-14T12:28:49Z",
        "updatedAt" : "2019-12-14T19:34:05Z",
        "lastEditedBy" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "tags" : [
        ]
      },
      {
        "id" : "35eece96-2960-47f5-b62c-3d1e27be236e",
        "parentId" : "04bf12a9-ca0a-4aa4-b378-be362b7ef9bb",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "let's keep it simple and no flags for now at least.",
        "createdAt" : "2020-02-21T21:07:09Z",
        "updatedAt" : "2020-02-21T21:07:18Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "51bff87b18d6482f7383fb2151c7e483a1641ca7",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +3542,3546 @@\tsort.Strings(hugePageResources)\n\n\tfor _, resource := range hugePageResources {\n\t\thugePageSizeRequests, hugePageSizeLimits, hugePageSizeAllocable := reqs[corev1.ResourceName(resource)], limits[corev1.ResourceName(resource)], allocatable[corev1.ResourceName(resource)]\n\t\tfractionHugePageSizeRequests := float64(0)"
  },
  {
    "id" : "6d459723-fde0-42ae-ad6b-ac18d0e3ffc7",
    "prId" : 76463,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76463#pullrequestreview-285198869",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a30577ab-5060-4d33-9928-e7dc5288c5b4",
        "parentId" : null,
        "authorId" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "body" : "I am confused why not print pvc.Spec.DataSource.APIGroup at the same time",
        "createdAt" : "2019-09-06T06:07:33Z",
        "updatedAt" : "2019-09-06T06:07:33Z",
        "lastEditedBy" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "tags" : [
        ]
      },
      {
        "id" : "43a028e1-28b8-484a-a562-1a6b0fe261cd",
        "parentId" : "a30577ab-5060-4d33-9928-e7dc5288c5b4",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Yes, I think printing out api group makes sense too. Can you open a PR to add it? Right now, since only cloning is beta and on by default, then this can only be PVC type.  ",
        "createdAt" : "2019-09-06T17:43:51Z",
        "updatedAt" : "2019-09-06T17:43:51Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "b97d90ad-174b-41cc-9fce-b69b2b92232c",
        "parentId" : "a30577ab-5060-4d33-9928-e7dc5288c5b4",
        "authorId" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "body" : "> Yes, I think printing out api group makes sense too. Can you open a PR to add it? Right now, since only cloning is beta and on by default, then this can only be PVC type.\r\n\r\nSure, I will open a pr.",
        "createdAt" : "2019-09-08T06:18:30Z",
        "updatedAt" : "2019-09-08T06:18:30Z",
        "lastEditedBy" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "5cc2ea777efaa72dce83ea8c79f73846d1924bfa",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1537,1541 @@\t\tif pvc.Spec.DataSource != nil {\n\t\t\tw.Write(LEVEL_0, \"DataSource:\\n\")\n\t\t\tw.Write(LEVEL_1, \"Name:\\t%v\\n\", pvc.Spec.DataSource.Name)\n\t\t\tw.Write(LEVEL_1, \"Kind:\\t%v\\n\", pvc.Spec.DataSource.Kind)\n\t\t}"
  }
]