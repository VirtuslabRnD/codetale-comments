[
  {
    "id" : "a4958bc7-187a-478c-bb21-d00ed737fcd4",
    "prId" : 81929,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81929#pullrequestreview-281527636",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a3949c1-484e-42dd-8cca-cc50bcb2ba6c",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "If the feature gate is disabled in apiserver, we have logic setting it to nil, right?",
        "createdAt" : "2019-08-27T16:29:52Z",
        "updatedAt" : "2019-08-27T16:33:07Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "97d65878-db14-421f-8722-3ae59225269d",
        "parentId" : "4a3949c1-484e-42dd-8cca-cc50bcb2ba6c",
        "authorId" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "body" : "~~No.~~\r\n\r\n~~If someone is explicitly setting this in the Pod.Spec when the feature gate is not enabled, the value will persist.~~ if the feature gate is enabled, the RuntimeClass admission controller will validate the Pod.Spec to make sure the defined overhead matches what is defined in a given RuntimeClass. If it doesn't match, the pod is rejected.",
        "createdAt" : "2019-08-28T07:06:05Z",
        "updatedAt" : "2019-08-28T23:50:13Z",
        "lastEditedBy" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "tags" : [
        ]
      },
      {
        "id" : "02ce3ccb-4239-4cd9-9ee7-81a4e097233f",
        "parentId" : "4a3949c1-484e-42dd-8cca-cc50bcb2ba6c",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "We are dropping it server-side if the feature gate is disabled: https://github.com/kubernetes/kubernetes/blob/master/pkg/api/pod/util.go#L399-L402",
        "createdAt" : "2019-08-28T22:08:38Z",
        "updatedAt" : "2019-08-28T22:08:39Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "fd3104c4-1dc2-437b-9ef8-e02658ac6ede",
        "parentId" : "4a3949c1-484e-42dd-8cca-cc50bcb2ba6c",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "That makes sense then.",
        "createdAt" : "2019-08-29T15:07:03Z",
        "updatedAt" : "2019-08-29T15:07:03Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "7922d73f98aa8cc41bb27c3a819c0092bf753bc9",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +45,49 @@\n\t// Add overhead for running a pod to the sum of requests and to non-zero limits:\n\tif pod.Spec.Overhead != nil {\n\t\taddResourceList(reqs, pod.Spec.Overhead)\n"
  },
  {
    "id" : "8b00ef9f-eb44-4bdb-b8d6-b39f6a618766",
    "prId" : 81929,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81929#pullrequestreview-280630224",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "100b15de-3777-4c46-bdef-a54ab70f643f",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "It seems the rule here is:\r\n\r\n- add overhead to reqs no matter each container has `req` defined or not.\r\n- add overhead to limits only when at least one container has `limit` defined.\r\n\r\nIs it the case?",
        "createdAt" : "2019-08-27T16:32:22Z",
        "updatedAt" : "2019-08-27T16:33:07Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "1e6d327c-cbd6-47cd-a063-cb2daa6b4511",
        "parentId" : "100b15de-3777-4c46-bdef-a54ab70f643f",
        "authorId" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "body" : "Correct.",
        "createdAt" : "2019-08-28T07:15:30Z",
        "updatedAt" : "2019-08-28T07:15:31Z",
        "lastEditedBy" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "tags" : [
        ]
      }
    ],
    "commit" : "7922d73f98aa8cc41bb27c3a819c0092bf753bc9",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +48,52 @@\t\taddResourceList(reqs, pod.Spec.Overhead)\n\n\t\tfor name, quantity := range pod.Spec.Overhead {\n\t\t\tif value, ok := limits[name]; ok && !value.IsZero() {\n\t\t\t\tvalue.Add(quantity)"
  }
]