[
  {
    "id" : "25f9cb57-52cf-4a4c-9f24-1f2279d7fafe",
    "prId" : 92791,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92791#pullrequestreview-443133291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d79f8dc-ec89-4f9f-b6a9-688407d1a1fe",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "this conforms to an interface? You'll want explain why.",
        "createdAt" : "2020-07-06T13:22:57Z",
        "updatedAt" : "2020-07-08T09:24:49Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "5b3999a1-760f-42cf-8dfd-7858f2523c1b",
        "parentId" : "5d79f8dc-ec89-4f9f-b6a9-688407d1a1fe",
        "authorId" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "body" : "done.",
        "createdAt" : "2020-07-06T14:34:48Z",
        "updatedAt" : "2020-07-08T09:24:49Z",
        "lastEditedBy" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "tags" : [
        ]
      }
    ],
    "commit" : "25f0ebc827e598fcad7de8a84c2a7b7dc7d0363c",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +196,200 @@}\n\n// Enqueue queues all apiservices to be rehandled.\n// This method is used by the controller to notify when the proxy cert content changes.\nfunc (c *APIServiceRegistrationController) Enqueue() {"
  },
  {
    "id" : "b48c196f-736a-4e52-b0fe-3f9d847919d5",
    "prId" : 89147,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89147#pullrequestreview-376007687",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee55ebba-5cc5-4a15-9a3e-1cc49a8fb3cc",
        "parentId" : null,
        "authorId" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "body" : "oh, so at this point, we won't run the controller.",
        "createdAt" : "2020-03-16T11:23:17Z",
        "updatedAt" : "2020-03-17T13:03:46Z",
        "lastEditedBy" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "tags" : [
        ]
      },
      {
        "id" : "ed3d50a5-3ec8-4017-a627-5496e1875a3c",
        "parentId" : "ee55ebba-5cc5-4a15-9a3e-1cc49a8fb3cc",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "it only happen when stopCh is closed",
        "createdAt" : "2020-03-16T11:25:19Z",
        "updatedAt" : "2020-03-17T13:03:46Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "4baf2419-a14a-4632-9466-1168480f8c8e",
        "parentId" : "ee55ebba-5cc5-4a15-9a3e-1cc49a8fb3cc",
        "authorId" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "body" : "okay, but:\r\nwho will run the controller? \r\nwho will unblock `apiservice-registration-controller` as it waits on `handlerSyncedCh`",
        "createdAt" : "2020-03-16T11:28:57Z",
        "updatedAt" : "2020-03-17T13:03:46Z",
        "lastEditedBy" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "tags" : [
        ]
      },
      {
        "id" : "a9d78aaf-53f5-4e00-a932-f8b08722d88d",
        "parentId" : "ee55ebba-5cc5-4a15-9a3e-1cc49a8fb3cc",
        "authorId" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "body" : "ah, so `apiservice-registration-controller` will be unblocked by `stopCh`",
        "createdAt" : "2020-03-16T11:30:20Z",
        "updatedAt" : "2020-03-17T13:03:46Z",
        "lastEditedBy" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "tags" : [
        ]
      },
      {
        "id" : "cf56dc27-9d1b-495c-ab05-82a35c66cde7",
        "parentId" : "ee55ebba-5cc5-4a15-9a3e-1cc49a8fb3cc",
        "authorId" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "body" : " ah, if `stopCh` is closed we would have to stop the controller anyway",
        "createdAt" : "2020-03-16T11:31:37Z",
        "updatedAt" : "2020-03-17T13:03:46Z",
        "lastEditedBy" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "tags" : [
        ]
      },
      {
        "id" : "5e71cd69-4d00-49fd-9542-96ea1351cce1",
        "parentId" : "ee55ebba-5cc5-4a15-9a3e-1cc49a8fb3cc",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I'd like the line above to panic please.  As you say, it should never happen.",
        "createdAt" : "2020-03-16T12:25:47Z",
        "updatedAt" : "2020-03-17T13:03:46Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "d6494eda-64d3-4dbe-8fcc-6eee373abdc8",
        "parentId" : "ee55ebba-5cc5-4a15-9a3e-1cc49a8fb3cc",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "@deads2k which case do you have in mind? `ErrWaitTimeout` for closed `stopCh` does not need a panic. All other cases don't return an error. A panic inside of the poll func is caught by usual `runtime.HandleCrash`.",
        "createdAt" : "2020-03-17T12:58:12Z",
        "updatedAt" : "2020-03-17T13:03:46Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "e77ef0e64919b6fbea78dacef94a584da2c04014",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +115,119 @@\t}, stopCh); err == wait.ErrWaitTimeout {\n\t\tutilruntime.HandleError(fmt.Errorf(\"timed out waiting for proxy handler to initialize\"))\n\t\treturn\n\t} else if err != nil {\n\t\tpanic(fmt.Errorf(\"unexpected error: %v\", err))"
  },
  {
    "id" : "38c3fd75-c7f5-46c9-a719-ec8efe78b5ca",
    "prId" : 89147,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89147#pullrequestreview-376012214",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "815e778a-e3c8-44c4-a52d-efa1e58c0143",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "@deads2k added this panic. I hope that's what you meant.",
        "createdAt" : "2020-03-17T13:04:11Z",
        "updatedAt" : "2020-03-17T13:04:12Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "e77ef0e64919b6fbea78dacef94a584da2c04014",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +117,121 @@\t\treturn\n\t} else if err != nil {\n\t\tpanic(fmt.Errorf(\"unexpected error: %v\", err))\n\t}\n\tclose(handlerSyncedCh)"
  }
]