[
  {
    "id" : "3387b513-0143-42e6-8e2e-7fe4ee857467",
    "prId" : 93873,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93873#pullrequestreview-526738782",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "062ea1a7-71d3-432a-b0da-adc2b0e4ab4f",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "It'd be great to somewhere capture what actions authors of aggregated apiservers need to take. Maybe in the release notes?",
        "createdAt" : "2020-11-09T22:36:04Z",
        "updatedAt" : "2020-11-09T23:23:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "037913bd-abef-44e2-951e-b3d22fd851ef",
        "parentId" : "062ea1a7-71d3-432a-b0da-adc2b0e4ab4f",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "will add it to storage migrator doc. ",
        "createdAt" : "2020-11-09T23:33:21Z",
        "updatedAt" : "2020-11-09T23:33:21Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "23f77ce7c62db3761580d06622fbfb1cedaa1293",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +282,286 @@\t\t\t\t// All apiservers (aggregator-apiserver, kube-apiserver, apiextensions-apiserver)\n\t\t\t\t// share the same generic apiserver config. The same StorageVersion manager is used\n\t\t\t\t// to register all built-in resources when the generic apiservers install APIs.\n\t\t\t\ts.GenericAPIServer.StorageVersionManager.UpdateStorageVersions(context.LoopbackClientConfig, s.GenericAPIServer.APIServerID)\n\t\t\t\treturn false, nil"
  },
  {
    "id" : "c522b32e-6c95-4db7-9d0c-5bf230dd6a58",
    "prId" : 92791,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92791#pullrequestreview-443134950",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27e975a3-8735-4b3e-b896-0680ff07c3a5",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "we need to fail if the files aren't specified. That would match previous behavior, right?\r\n",
        "createdAt" : "2020-07-06T13:21:14Z",
        "updatedAt" : "2020-07-08T09:24:49Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "32859c8d-7151-4e78-a468-23f0ca7778e4",
        "parentId" : "27e975a3-8735-4b3e-b896-0680ff07c3a5",
        "authorId" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "body" : "I identified only https://github.com/kubernetes/kubernetes/pull/92791/files#diff-c070121c775ca8660b40b691e24bc6c4L156 as a potential place that could have failed when the files were missing.",
        "createdAt" : "2020-07-06T14:36:36Z",
        "updatedAt" : "2020-07-08T09:24:49Z",
        "lastEditedBy" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "tags" : [
        ]
      }
    ],
    "commit" : "25f0ebc827e598fcad7de8a84c2a7b7dc7d0363c",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +213,217 @@\n\tapiserviceRegistrationController := NewAPIServiceRegistrationController(informerFactory.Apiregistration().V1().APIServices(), s)\n\tif len(c.ExtraConfig.ProxyClientCertFile) > 0 && len(c.ExtraConfig.ProxyClientKeyFile) > 0 {\n\t\taggregatorProxyCerts, err := dynamiccertificates.NewDynamicServingContentFromFiles(\"aggregator-proxy-cert\", c.ExtraConfig.ProxyClientCertFile, c.ExtraConfig.ProxyClientKeyFile)\n\t\tif err != nil {"
  },
  {
    "id" : "bd61e734-95ff-4e6e-b208-7f2cacd6a174",
    "prId" : 79840,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79840#pullrequestreview-258831625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35f0fcc0-57ca-442a-b87b-bd89611c4ca2",
        "parentId" : null,
        "authorId" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "body" : "shouldn't we return `*preparedAPIAggregator, error` ? Just to be consistend with `s *APIAggregator`",
        "createdAt" : "2019-07-08T10:50:08Z",
        "updatedAt" : "2019-07-08T11:59:29Z",
        "lastEditedBy" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "tags" : [
        ]
      },
      {
        "id" : "11835752-9f5b-471e-b094-2b9f1b3de1a8",
        "parentId" : "35f0fcc0-57ca-442a-b87b-bd89611c4ca2",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "no, it's just a type wrapper. A pointer does not add anything.",
        "createdAt" : "2019-07-08T11:03:34Z",
        "updatedAt" : "2019-07-08T11:59:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "f82bc712decd41db48cd81aded5ddddf7bca9e16",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +233,237 @@// PrepareRun prepares the aggregator to run, by setting up the OpenAPI spec and calling\n// the generic PrepareRun.\nfunc (s *APIAggregator) PrepareRun() (preparedAPIAggregator, error) {\n\t// add post start hook before generic PrepareRun in order to be before /healthz installation\n\tif s.openAPIConfig != nil {"
  },
  {
    "id" : "cf90fc37-6eaa-4d3e-8c36-b287bc76a2a1",
    "prId" : 62116,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62116#pullrequestreview-110084914",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0edcd867-83d4-480e-be4f-ac271583378f",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "missing the corresponding (file) removals to the aggregator changes.",
        "createdAt" : "2018-04-05T07:25:13Z",
        "updatedAt" : "2018-04-24T13:06:41Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "0f2d0fb4-eed7-4469-91f7-c9ce20553a64",
        "parentId" : "0edcd867-83d4-480e-be4f-ac271583378f",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "fixed",
        "createdAt" : "2018-04-06T14:28:22Z",
        "updatedAt" : "2018-04-24T13:06:41Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "78dab175dd4652d10c4ded4eb6005b3cb4f905d5",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +46,50 @@\nvar (\n\tgroupFactoryRegistry = make(announced.APIGroupFactoryRegistry)\n\tregistry             = registered.NewOrDie(\"\")\n\tScheme               = runtime.NewScheme()"
  },
  {
    "id" : "8289e003-a2b7-44f8-b4b2-ebb4e70f51ce",
    "prId" : 48861,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48861#pullrequestreview-52811166",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "824d1852-7294-41cf-826b-3e25f68ec125",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "what are the consequences of such an error? If I see it correctly, we keep the old handler installed? Will the aggregator still be able to serve the old openapi spec?",
        "createdAt" : "2017-07-27T12:42:16Z",
        "updatedAt" : "2017-08-02T04:10:02Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "eeee5ef2-4c85-453a-800c-10553e301322",
        "parentId" : "824d1852-7294-41cf-826b-3e25f68ec125",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Unless the call succeed, neither the handler nor its state would change (at least that was my intention). Returning error here will force the controller to retry later.",
        "createdAt" : "2017-07-27T23:19:04Z",
        "updatedAt" : "2017-08-02T04:10:02Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "10d9a475bed67059f46f45b34b7ef7a7484ce1f6",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +262,266 @@\tproxyHandler.updateAPIService(apiService)\n\tif err := s.openAPIAggregator.loadApiServiceSpec(proxyHandler, apiService); err != nil {\n\t\treturn err\n\t}\n\ts.proxyHandlers[apiService.Name] = proxyHandler"
  },
  {
    "id" : "727e324c-d222-457e-89b5-e26045f80549",
    "prId" : 48861,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48861#pullrequestreview-53777270",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c00d60e-1d63-4720-b6f1-52490c259b61",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "What about the delegate of the delegate? The chain is not necesserily depth 1. Already today we have the apiextensions server behind the main kube-apiserver.",
        "createdAt" : "2017-08-01T15:13:26Z",
        "updatedAt" : "2017-08-02T04:10:02Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "e874d955-3088-4433-9143-6757f0929f99",
        "parentId" : "4c00d60e-1d63-4720-b6f1-52490c259b61",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Is this issue #49878? I think CRDs need to register themselves with aggregator api server. Whatever we decide, though, I think it should be in another PR. The purpose of this PR was reintegrating the same functionality of the original PR. Do you agree?",
        "createdAt" : "2017-08-01T17:53:45Z",
        "updatedAt" : "2017-08-02T04:10:02Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      },
      {
        "id" : "0fecf0c2-dd79-47aa-a188-892fa63eebb4",
        "parentId" : "4c00d60e-1d63-4720-b6f1-52490c259b61",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "It's a different issue I think. The solution to #49878 might also solve the issue here though. It's the same thing as with the swagger comment. The swagger route has to query all go-restful containers in all delegates on the chain.",
        "createdAt" : "2017-08-02T12:07:36Z",
        "updatedAt" : "2017-08-02T12:07:36Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "2fc33abf-1e86-4f05-b8c5-ae7471794fd6",
        "parentId" : "4c00d60e-1d63-4720-b6f1-52490c259b61",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "But a follow-up is fine. This is broken in master and 1.7 as well. We have to fix this for 1.8.",
        "createdAt" : "2017-08-02T12:08:44Z",
        "updatedAt" : "2017-08-02T12:08:44Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "10d9a475bed67059f46f45b34b7ef7a7484ce1f6",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +222,226 @@\tif openApiConfig != nil {\n\t\ts.openAPIAggregator, err = buildAndRegisterOpenAPIAggregator(\n\t\t\ts.delegateHandler,\n\t\t\ts.GenericAPIServer.Handler.GoRestfulContainer.RegisteredWebServices(),\n\t\t\topenApiConfig,"
  },
  {
    "id" : "85326f32-37e1-4388-8d45-be0682970758",
    "prId" : 46734,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46734#pullrequestreview-41650602",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d7e3dbf-b7f9-4e48-bd18-430af3ac080d",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I think you need a sync.Mutex protecting these two maps.",
        "createdAt" : "2017-06-01T21:33:13Z",
        "updatedAt" : "2017-06-05T06:10:11Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "45e03dc1-a487-4d4b-87f9-93c5dae75053",
        "parentId" : "8d7e3dbf-b7f9-4e48-bd18-430af3ac080d",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Done. Please review this one again :)",
        "createdAt" : "2017-06-01T22:08:27Z",
        "updatedAt" : "2017-06-05T06:10:11Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "63e3e84e7ec982ae25fd5b2adbef87924fe5f34a",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +141,145 @@\t// Map values are retry counts. After a preset retries, it will stop\n\t// trying.\n\ttoLoadAPISpec map[string]int\n\n\t// protecting toLoadAPISpec and apiServiceSpecs"
  },
  {
    "id" : "6d2bee09-d86a-4573-b7c8-113c4352bb07",
    "prId" : 46734,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46734#pullrequestreview-41829301",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d23b319a-c0dd-45e3-90b9-595d1f2a0613",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "we should probably do this in a background thread, but we can fix that later.",
        "createdAt" : "2017-06-01T21:33:55Z",
        "updatedAt" : "2017-06-05T06:10:11Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "a9110fc6-0caf-4dfd-8866-8017a4893ab7",
        "parentId" : "d23b319a-c0dd-45e3-90b9-595d1f2a0613",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "ack.",
        "createdAt" : "2017-06-01T22:08:41Z",
        "updatedAt" : "2017-06-05T06:10:11Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      },
      {
        "id" : "2afebde4-f125-486a-b8d2-5240e0487140",
        "parentId" : "d23b319a-c0dd-45e3-90b9-595d1f2a0613",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "func (c *APIServiceRegistrationController) Run(stopCh <-chan struct{})  in apiservice_controller.go seems to be a background thread set up in NewWithDelegate for exactly this sort of thing.",
        "createdAt" : "2017-06-02T17:21:12Z",
        "updatedAt" : "2017-06-05T06:10:11Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "63e3e84e7ec982ae25fd5b2adbef87924fe5f34a",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +389,393 @@}\n\nfunc (_ *APIAggregator) loadOpenAPISpec(p *proxyHandler, r *http.Request) (*spec.Swagger, error) {\n\tvalue := p.handlingInfo.Load()\n\tif value == nil {"
  },
  {
    "id" : "25d35376-5689-45a5-9476-865333811806",
    "prId" : 46734,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46734#pullrequestreview-48714862",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54b99e6a-ce77-4495-8535-b0a975a34343",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Ugly. Put this into the variable name at the very least: `toLoadAPISpecRetries`.  Though, if a retry mechnism is really necessary, this ought to be in some separate controller instead of \"globally\" in the aggregator.",
        "createdAt" : "2017-06-06T12:08:23Z",
        "updatedAt" : "2017-06-06T12:08:23Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "70f612ff-5831-4be7-932e-e77a1ae62363",
        "parentId" : "54b99e6a-ce77-4495-8535-b0a975a34343",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Will fix.",
        "createdAt" : "2017-07-07T20:49:26Z",
        "updatedAt" : "2017-07-07T20:49:27Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "63e3e84e7ec982ae25fd5b2adbef87924fe5f34a",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +139,143 @@\t// List of the specs that needs to be loaded. When a spec is successfully loaded\n\t// it will be removed from this list and added to apiServiceSpecs.\n\t// Map values are retry counts. After a preset retries, it will stop\n\t// trying.\n\ttoLoadAPISpec map[string]int"
  },
  {
    "id" : "4360bb40-bc2e-4bdf-91e8-35cca19363b8",
    "prId" : 46734,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46734#pullrequestreview-48752278",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a368aded-fd2e-4772-a9ea-190042090d86",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "godoc",
        "createdAt" : "2017-06-06T12:09:50Z",
        "updatedAt" : "2017-06-06T12:09:51Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "8fb2d3fc-a1bd-4c75-9791-569611d654eb",
        "parentId" : "a368aded-fd2e-4772-a9ea-190042090d86",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Will fix. (do we force godoc for private methods? not that I think having godocs is bad)",
        "createdAt" : "2017-07-07T20:49:32Z",
        "updatedAt" : "2017-07-07T20:49:54Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      },
      {
        "id" : "54fb77ec-ed66-4ca4-8ebd-02f2bec232d3",
        "parentId" : "a368aded-fd2e-4772-a9ea-190042090d86",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "no, we don't. Only in not obvious cases, a godoc helps to read the code.",
        "createdAt" : "2017-07-08T08:26:20Z",
        "updatedAt" : "2017-07-08T08:26:20Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "63e3e84e7ec982ae25fd5b2adbef87924fe5f34a",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +389,393 @@}\n\nfunc (_ *APIAggregator) loadOpenAPISpec(p *proxyHandler, r *http.Request) (*spec.Swagger, error) {\n\tvalue := p.handlingInfo.Load()\n\tif value == nil {"
  },
  {
    "id" : "6367f273-6c14-4502-b12a-97da40161e56",
    "prId" : 46734,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46734#pullrequestreview-48715060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b83cd6dc-1c1b-46fc-a3a0-a4357adf63b6",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "These should all be abstracted into an interface that accepts Add/Remove apiServices and the logic should be contained close to the handler you're coding.",
        "createdAt" : "2017-06-06T12:10:41Z",
        "updatedAt" : "2017-06-06T12:10:41Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "71807f14-8763-4fc5-a7f8-8414cbbc6084",
        "parentId" : "b83cd6dc-1c1b-46fc-a3a0-a4357adf63b6",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Will fix.",
        "createdAt" : "2017-07-07T20:50:17Z",
        "updatedAt" : "2017-07-07T20:50:17Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "63e3e84e7ec982ae25fd5b2adbef87924fe5f34a",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +135,139 @@\n\t// Swagger spec for each api service\n\tapiServiceSpecs map[string]*spec.Swagger\n\n\t// List of the specs that needs to be loaded. When a spec is successfully loaded"
  },
  {
    "id" : "cb1028f8-6a16-463b-b8ab-30638311374f",
    "prId" : 46734,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46734#pullrequestreview-48715101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5350e8b6-dfd8-406b-af44-20c1ccdde528",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "sort your imports please. this is a mess.",
        "createdAt" : "2017-06-06T12:12:07Z",
        "updatedAt" : "2017-06-06T12:12:07Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "434ea0e5-75b4-4f43-8312-9994ef8d8af5",
        "parentId" : "5350e8b6-dfd8-406b-af44-20c1ccdde528",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Will fix.",
        "createdAt" : "2017-07-07T20:50:28Z",
        "updatedAt" : "2017-07-07T20:50:28Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "63e3e84e7ec982ae25fd5b2adbef87924fe5f34a",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +42,46 @@\n\t\"bytes\"\n\t\"fmt\"\n\t\"github.com/go-openapi/spec\"\n\t\"github.com/golang/glog\""
  },
  {
    "id" : "0f58caa3-c29e-41dc-aa3f-530a07a91a13",
    "prId" : 46734,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46734#pullrequestreview-48715140",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2b70347-8bbc-44f5-a99b-62ccaade4085",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "godoc. Make it CamelCase. We don't use capital case anywhere else.",
        "createdAt" : "2017-06-06T12:12:51Z",
        "updatedAt" : "2017-06-06T12:12:51Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "fdaa7fa8-1f0a-43f8-828a-c73119d9be2e",
        "parentId" : "f2b70347-8bbc-44f5-a99b-62ccaade4085",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Will fix.",
        "createdAt" : "2017-07-07T20:50:40Z",
        "updatedAt" : "2017-07-07T20:50:40Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "63e3e84e7ec982ae25fd5b2adbef87924fe5f34a",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +67,71 @@\nconst (\n\tLOAD_OPENAPI_SPEC_MAX_RETRIES = 10\n)\n"
  },
  {
    "id" : "70e6298e-5405-4641-b5ac-0272bfed7315",
    "prId" : 46734,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46734#pullrequestreview-48715581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a76af5e9-1ae5-49f3-a6e7-1be480b5142b",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This should fall out more cleanly once you refactor for the above comments.  I think aggregator should always server openapi, so once it's all contained in the correct repos and packages I suspect you'll end up with a cleaner end product.  This reads like coding by coincidence.",
        "createdAt" : "2017-06-06T12:15:10Z",
        "updatedAt" : "2017-06-06T12:15:10Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "540a2a0e-c170-4dd8-811a-9aa5b8dd7251",
        "parentId" : "a76af5e9-1ae5-49f3-a6e7-1be480b5142b",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Will fix.",
        "createdAt" : "2017-07-07T20:52:38Z",
        "updatedAt" : "2017-07-07T20:52:38Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "63e3e84e7ec982ae25fd5b2adbef87924fe5f34a",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +283,287 @@\ts.GenericAPIServer.PrepareOpenAPIService()\n\n\tif s.GenericAPIServer.OpenAPIService != nil {\n\t\ts.rootSpec = s.GenericAPIServer.OpenAPIService.GetSpec()\n\t\tif err := s.updateOpenAPISpec(); err != nil {"
  },
  {
    "id" : "464fb971-af76-495b-bc0c-83d9fd748e1c",
    "prId" : 46734,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46734#pullrequestreview-48752338",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1229506f-31a1-4296-8ec5-190e13bb006c",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Ah ha.  This is what broke kops.  No reason for you to run before the proxy path handling completes.",
        "createdAt" : "2017-06-06T12:18:03Z",
        "updatedAt" : "2017-06-06T12:18:03Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "437b7ac7-ee52-45b0-a887-2cae5030719d",
        "parentId" : "1229506f-31a1-4296-8ec5-190e13bb006c",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "And is there anything that triggers an update when resources of a user apiserver change? An APIService only changes when the group is modified (which doesn't know anything about the served resources). The whole design of the aggregator is around this very idea that knowing the group is enough and everything more detailed is proxied to the actual server.",
        "createdAt" : "2017-06-06T12:43:57Z",
        "updatedAt" : "2017-06-06T12:43:57Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "d9ef0681-c3ae-46bc-ad7b-9d900e7b5d18",
        "parentId" : "1229506f-31a1-4296-8ec5-190e13bb006c",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Do you mean the spec for the Resource can change and hence the OpenAPI spec can change dynamically? For that reason, we need to periodically check with API servers or have a mechanism to listen on OpenAPI changes. With etag support, periodically checking doesn't look bad. On a general note, I think in previous comments we assumed ApiServer does serve static OpenAPI spec. We may need to agree on that point before some of these changes. ",
        "createdAt" : "2017-07-07T20:57:11Z",
        "updatedAt" : "2017-07-07T20:57:11Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      },
      {
        "id" : "43986833-b248-41e9-b80f-9c4dc376db8e",
        "parentId" : "1229506f-31a1-4296-8ec5-190e13bb006c",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Yes, we need another channel for resource changes. The APIService informer is not enough.\r\n\r\nStatic in which sense? Resources can come and go. With CRD validation, we will also get JSON Schema snippets that can change any moment and should be part of the OpenAPI spec served by the aggregator.",
        "createdAt" : "2017-07-08T08:30:38Z",
        "updatedAt" : "2017-07-08T08:30:38Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "63e3e84e7ec982ae25fd5b2adbef87924fe5f34a",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +326,330 @@\ts.proxyHandlers[apiService.Name] = proxyHandler\n\n\ts.deferLoadAPISpec(apiService.Name)\n\n\ts.GenericAPIServer.Handler.NonGoRestfulMux.Handle(proxyPath, proxyHandler)"
  },
  {
    "id" : "0b6111bc-33e2-4705-9a12-cebce55e63a1",
    "prId" : 46734,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46734#pullrequestreview-48716608",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e33aae8b-64c1-4158-8f50-327cd56e1668",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "why is this call needed? Don't we have the PrepareRun call for this?",
        "createdAt" : "2017-06-06T12:18:22Z",
        "updatedAt" : "2017-06-06T12:18:22Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "25c4d4e8-7ac5-4a17-8490-02e2bcafc95c",
        "parentId" : "e33aae8b-64c1-4158-8f50-327cd56e1668",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Will fix.",
        "createdAt" : "2017-07-07T20:57:26Z",
        "updatedAt" : "2017-07-07T20:57:26Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "63e3e84e7ec982ae25fd5b2adbef87924fe5f34a",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +281,285 @@\t})\n\n\ts.GenericAPIServer.PrepareOpenAPIService()\n\n\tif s.GenericAPIServer.OpenAPIService != nil {"
  },
  {
    "id" : "437bd46c-d5e5-4998-8f3c-1438e940527a",
    "prId" : 46734,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46734#pullrequestreview-48716738",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1b3b4a7-3d99-4b3d-b432-01ab2da4d426",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This doesn't belong here, move to where your new handler lives.",
        "createdAt" : "2017-06-06T12:19:00Z",
        "updatedAt" : "2017-06-06T12:19:00Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "8e289e75-a74a-4a93-8d08-5fa6b7504179",
        "parentId" : "a1b3b4a7-3d99-4b3d-b432-01ab2da4d426",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This entire methods reads like duplication of function elsewhere.  How about refactoring for the common bits that you need instead of copy/paste?",
        "createdAt" : "2017-06-06T12:20:47Z",
        "updatedAt" : "2017-06-06T12:20:47Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "d72c6ff8-51eb-450a-8897-1edb212e5e10",
        "parentId" : "a1b3b4a7-3d99-4b3d-b432-01ab2da4d426",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "I tried refactoring for this one, it didn't make sense at the time. Will try again. Will move it to the handler anyway.",
        "createdAt" : "2017-07-07T20:58:02Z",
        "updatedAt" : "2017-07-07T20:58:18Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "63e3e84e7ec982ae25fd5b2adbef87924fe5f34a",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +389,393 @@}\n\nfunc (_ *APIAggregator) loadOpenAPISpec(p *proxyHandler, r *http.Request) (*spec.Swagger, error) {\n\tvalue := p.handlingInfo.Load()\n\tif value == nil {"
  },
  {
    "id" : "9baa1839-f592-41d2-b9d2-e85781324e9c",
    "prId" : 46734,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46734#pullrequestreview-48716960",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "384d4035-51b5-4134-b89e-087698a73d3d",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "golang even allows this?  It looks like a concurrent modification exception.\r\n\r\nWhy not structure it as a channel you requeue to with a single consumer and counts maintained separately.  Simple for producers, simple for consumers, no locks, no mutating a collection you're iterating through.",
        "createdAt" : "2017-06-06T12:22:18Z",
        "updatedAt" : "2017-06-06T12:22:18Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "fd220967-2b82-4d19-a19c-d85fbe53adfc",
        "parentId" : "384d4035-51b5-4134-b89e-087698a73d3d",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Wow, this is kind of weird.  So I think you're counting on having the pointer resolution for the loop get pinned, then you're mutating that pointer with a series of incorrect data until you've made it through the entire map and finally reassigned it to be correct?  This construct should be removed and replaced.",
        "createdAt" : "2017-06-06T12:26:25Z",
        "updatedAt" : "2017-06-06T12:26:25Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "4653e495-05bc-484c-98e7-4f8d4ffc9981",
        "parentId" : "384d4035-51b5-4134-b89e-087698a73d3d",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Will fix.",
        "createdAt" : "2017-07-07T20:59:15Z",
        "updatedAt" : "2017-07-07T20:59:15Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "63e3e84e7ec982ae25fd5b2adbef87924fe5f34a",
    "line" : 212,
    "diffHunk" : "@@ -1,1 +461,465 @@\t\t\tloaded = true\n\t\t}\n\t\ts.toLoadAPISpec = newList\n\t}\n\treturn loaded"
  },
  {
    "id" : "74ddbdcb-3c92-4313-907b-5bab0a5413a2",
    "prId" : 46734,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46734#pullrequestreview-48717052",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f310bc4c-ec3a-48c1-bbe1-a866885db7ce",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "shouldn't this be `>`? Otherwise, the first failure will set it to 1 and this if-clause ignores it.",
        "createdAt" : "2017-06-06T12:30:25Z",
        "updatedAt" : "2017-06-06T12:30:25Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "1fb17e8f-2cec-4e21-8118-e6ed8bc8589a",
        "parentId" : "f310bc4c-ec3a-48c1-bbe1-a866885db7ce",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Will fix.",
        "createdAt" : "2017-07-07T20:59:38Z",
        "updatedAt" : "2017-07-07T20:59:38Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "63e3e84e7ec982ae25fd5b2adbef87924fe5f34a",
    "line" : 201,
    "diffHunk" : "@@ -1,1 +450,454 @@\tnewList := map[string]int{}\n\tfor name, retries := range s.toLoadAPISpec {\n\t\tif retries >= LOAD_OPENAPI_SPEC_MAX_RETRIES {\n\t\t\tcontinue\n\t\t}"
  },
  {
    "id" : "0c3f53b5-62e2-4a56-bf3d-c04afc97722b",
    "prId" : 46734,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46734#pullrequestreview-48717099",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9acba2c8-b4ff-484b-8475-6a6cbcc02252",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "lower-case errors",
        "createdAt" : "2017-06-06T12:35:17Z",
        "updatedAt" : "2017-06-06T12:35:17Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "745ac655-bbc9-4b3d-89ee-1da8d13ba9d6",
        "parentId" : "9acba2c8-b4ff-484b-8475-6a6cbcc02252",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "Will fix.",
        "createdAt" : "2017-07-07T20:59:48Z",
        "updatedAt" : "2017-07-07T20:59:48Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "63e3e84e7ec982ae25fd5b2adbef87924fe5f34a",
    "line" : 229,
    "diffHunk" : "@@ -1,1 +478,482 @@\topenapi.FilterSpecByPaths(sp, []string{\"/apis/apiregistration.k8s.io/\"})\n\tif _, found := sp.Paths.Paths[\"/version/\"]; found {\n\t\treturn fmt.Errorf(\"Cleanup didn't work\")\n\t}\n\tif err := openapi.MergeSpecs(sp, s.delegationSpec); err != nil {"
  },
  {
    "id" : "2065865f-3dd0-4a83-bdc7-74753060f352",
    "prId" : 46734,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46734#pullrequestreview-48717247",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "932b3db7-1c08-401e-85e1-1da615878880",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Do I get this right that this only puts the name onto the radar for the next update call which is triggered through a OpenAPI download request at https://github.com/kubernetes/kubernetes/pull/46734/files#diff-50c8cb84572c056e12063729607ca9edR149 ? If so, if we want such a interaction complexity at all,  this deserves a decent comment. Where is this tested that we don't break that link?",
        "createdAt" : "2017-06-06T12:48:32Z",
        "updatedAt" : "2017-06-06T12:48:32Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "c6913f9b-d0e6-4609-a1cf-cfcee376c5e2",
        "parentId" : "932b3db7-1c08-401e-85e1-1da615878880",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "This logic will be moved to a new (or existing) controller.",
        "createdAt" : "2017-07-07T21:00:30Z",
        "updatedAt" : "2017-07-07T21:00:30Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "63e3e84e7ec982ae25fd5b2adbef87924fe5f34a",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +356,360 @@}\n\nfunc (s *APIAggregator) deferLoadAPISpec(name string) {\n\ts.specMutex.Lock()\n\tdefer s.specMutex.Unlock()"
  },
  {
    "id" : "01be3512-89cc-4521-9a1f-4695a37f98f1",
    "prId" : 44742,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44742#pullrequestreview-40630973",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec306cec-72ac-4c39-89ea-5351b6504aa6",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "rather than a bool, I'd expect an optional routing interface here (if unset, defaults to sending to the service clusterIP)",
        "createdAt" : "2017-05-17T01:22:42Z",
        "updatedAt" : "2017-05-26T23:10:35Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f61dd924-d605-46d7-a95f-965c218356d0",
        "parentId" : "ec306cec-72ac-4c39-89ea-5351b6504aa6",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "different approach",
        "createdAt" : "2017-05-18T17:45:40Z",
        "updatedAt" : "2017-05-26T23:10:35Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "84e87f2e-917d-4f4e-99f0-ec3b74f16d26",
        "parentId" : "ec306cec-72ac-4c39-89ea-5351b6504aa6",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I think a bool here is OK...",
        "createdAt" : "2017-05-22T22:06:50Z",
        "updatedAt" : "2017-05-26T23:10:35Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "fa608260-906a-426c-99b2-ffb315878d8a",
        "parentId" : "ec306cec-72ac-4c39-89ea-5351b6504aa6",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> rather than a bool, I'd expect an optional routing interface here (if unset, defaults to sending to the service clusterIP)\r\n\r\nI think the need for an interface in the handler bubbles all the way out to here and since this is a non-serializable config, this is the right spot to set it.",
        "createdAt" : "2017-05-23T13:39:46Z",
        "updatedAt" : "2017-05-26T23:10:35Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "e273e7d6-1279-4fb7-b6b9-c9f3b345c740",
        "parentId" : "ec306cec-72ac-4c39-89ea-5351b6504aa6",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Added two levels of interface to handle the explicit hostname when routing is disabled.",
        "createdAt" : "2017-05-25T01:12:07Z",
        "updatedAt" : "2017-05-26T23:10:35Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "81137f4e-6392-4556-b4e2-837023bdbc5a",
        "parentId" : "ec306cec-72ac-4c39-89ea-5351b6504aa6",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I can live with this one being as-is, but when you try to wire up the ssh tunnel, that must be an interface passed through at this level and a future refactor may choose to combine them.",
        "createdAt" : "2017-05-26T18:32:00Z",
        "updatedAt" : "2017-05-26T23:10:35Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "4b3028ab-35e5-490b-b486-1c466aaa4a32",
        "parentId" : "ec306cec-72ac-4c39-89ea-5351b6504aa6",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "ok, considering where else we will need this logic, I think I agree that this should have an interface passed in.",
        "createdAt" : "2017-05-26T22:29:11Z",
        "updatedAt" : "2017-05-26T23:10:35Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad8a83a7c1741efb507d924a17eb809748ee2e06",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +97,101 @@\n\t// Indicates if the Aggregator should send to the cluster IP (false) or route to the endpoints IP (true)\n\tEnableAggregatorRouting bool\n}\n"
  },
  {
    "id" : "ba103c3c-994b-4f11-a5f2-6ef18ff9bb1f",
    "prId" : 44742,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44742#pullrequestreview-40590291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3f32719-569c-41c7-b2cc-df912dd00c43",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I think this function can actually be `ResolveEndpoint(serviceNamespace, serviceName, serviceDestinationHost)` and that will allow you to plumb it into the proxyhandler and deal with both the \"cheap\" return from the \"proxy to service IP\" impl and the more expensive endpoint lookup handler without having to have the intervening generator interface which is a little odd to read.",
        "createdAt" : "2017-05-25T15:01:48Z",
        "updatedAt" : "2017-05-26T23:10:35Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "dc196279-529e-431a-8811-019be6ba5d2d",
        "parentId" : "a3f32719-569c-41c7-b2cc-df912dd00c43",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "what would serviceDestinationHost mean?",
        "createdAt" : "2017-05-26T00:13:03Z",
        "updatedAt" : "2017-05-26T23:10:35Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "916930da-daad-434d-a3e7-88e00e161367",
        "parentId" : "a3f32719-569c-41c7-b2cc-df912dd00c43",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> what would serviceDestinationHost mean?\r\n\r\nIt's the current value (before this pull) being passed through.  Passing it along means that in the case of using a static mapping, it can be computed once.",
        "createdAt" : "2017-05-26T18:29:48Z",
        "updatedAt" : "2017-05-26T23:10:35Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad8a83a7c1741efb507d924a17eb809748ee2e06",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +75,79 @@\ntype ServiceResolver interface {\n\tResolveEndpoint(namespace, name string) (*url.URL, error)\n}\n"
  },
  {
    "id" : "02b1969e-8e9b-4020-85b0-5cb65602eb9c",
    "prId" : 44742,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44742#pullrequestreview-40631148",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "354cbed4-0c5d-42db-bdc9-733a2eb36b76",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "ahhhh so much cleaner without that parameter",
        "createdAt" : "2017-05-26T22:30:50Z",
        "updatedAt" : "2017-05-26T23:10:35Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad8a83a7c1741efb507d924a17eb809748ee2e06",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +248,252 @@// AddAPIService adds an API service.  It is not thread-safe, so only call it on one thread at a time please.\n// It's a slow moving API, so its ok to run the controller on a single thread\nfunc (s *APIAggregator) AddAPIService(apiService *apiregistration.APIService) {\n\t// if the proxyHandler already exists, it needs to be updated. The aggregation bits do not\n\t// since they are wired against listers because they require multiple resources to respond"
  },
  {
    "id" : "06d1ea6b-a091-4bd6-8269-7ec631b11d62",
    "prId" : 44021,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44021#pullrequestreview-31999190",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3d8ea6a-7edc-49d6-a839-57b78bda65ae",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this has the side-effect of making any subpath of `/apis/` (like `/apis/foo/bar/baz`) be handled by `apisHandler`. Is that what we want?",
        "createdAt" : "2017-04-04T06:16:24Z",
        "updatedAt" : "2017-04-04T06:16:24Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "618ef8b5-56a0-4a7a-a3b0-54fecf55738c",
        "parentId" : "e3d8ea6a-7edc-49d6-a839-57b78bda65ae",
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "Thanks for your review.\r\nI test this pr with both legal and illegal URLs with my patch.\r\nI can't find any difference except when  accessing \"/apis/\". I thinks this is because the subpath has been registered in other places.\r\nWithout this pr when accessing \"/apis\" we use this handler:\r\nhttps://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/pkg/apiserver/handler_apis.go#L77\r\nbut when accessing \"/apis/\"  we use this handler:\r\nhttps://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/endpoints/handlers/discovery.go#L35\r\nAnd these two handlers return different values in my cluster.",
        "createdAt" : "2017-04-05T03:22:59Z",
        "updatedAt" : "2017-04-05T03:23:32Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      },
      {
        "id" : "e9e693e8-c456-4448-98a9-6a645a10075e",
        "parentId" : "e3d8ea6a-7edc-49d6-a839-57b78bda65ae",
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "This provides consistency with line 224, I think.",
        "createdAt" : "2017-04-05T03:32:43Z",
        "updatedAt" : "2017-04-05T03:32:52Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      },
      {
        "id" : "de6213d5-7a88-4fbc-851b-d0ffbbf234f9",
        "parentId" : "e3d8ea6a-7edc-49d6-a839-57b78bda65ae",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> This provides consistency with line 224, I think.\r\n\r\nThat line does something different.  It's more narrowly scoped.\r\n\r\n\r\n\r\n> this has the side-effect of making any subpath of /apis/ (like /apis/foo/bar/baz) be handled by apisHandler. Is that what we want?\r\n\r\nThere's a double check to make sure that we delegate through if there's a subpath.",
        "createdAt" : "2017-04-10T13:37:28Z",
        "updatedAt" : "2017-04-10T13:37:29Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "7d590b16-000d-43d6-bc06-c3c7cf17626e",
        "parentId" : "e3d8ea6a-7edc-49d6-a839-57b78bda65ae",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Even subpaths that are not handled by specifically registered handlers?",
        "createdAt" : "2017-04-11T01:00:26Z",
        "updatedAt" : "2017-04-11T01:00:26Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "91fa0e31-6c16-4bdb-89bc-3e1965afba23",
        "parentId" : "e3d8ea6a-7edc-49d6-a839-57b78bda65ae",
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "> Even subpaths that are not handled by specifically registered handlers?\r\n\r\nWe will use FallThroughHandler for URLs that are not /apis or /apis/\r\nhttps://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/pkg/apiserver/handler_apis.go#L83",
        "createdAt" : "2017-04-11T01:56:36Z",
        "updatedAt" : "2017-04-11T01:56:36Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab70e5f58cc38fd78aedf9f7e6b86bc1d213ed64",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +179,183 @@\t}\n\ts.GenericAPIServer.HandlerContainer.Handle(\"/apis\", apisHandler)\n\ts.GenericAPIServer.HandlerContainer.Handle(\"/apis/\", apisHandler)\n\n\tapiserviceRegistrationController := NewAPIServiceRegistrationController(informerFactory.Apiregistration().InternalVersion().APIServices(), kubeInformers.Core().V1().Services(), s)"
  },
  {
    "id" : "51155f2c-97d1-4d67-9061-3a1d5dc6e70f",
    "prId" : 43383,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43383#pullrequestreview-29267831",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee93373f-cb63-4ec7-9eb7-6dd80dd6326c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "can the group and version change on update, or are they immutable?",
        "createdAt" : "2017-03-27T18:39:17Z",
        "updatedAt" : "2017-03-27T18:39:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "2d168848-8f5f-488e-9741-f191411be8ec",
        "parentId" : "ee93373f-cb63-4ec7-9eb7-6dd80dd6326c",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> can the group and version change on update, or are they immutable?\r\n\r\nImmutable because the name is derived from them.",
        "createdAt" : "2017-03-27T18:43:42Z",
        "updatedAt" : "2017-03-27T18:43:42Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "3414231672e59b750fe135bdccc076eb3a72498d",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +201,205 @@\t// since they are wired against listers because they require multiple resources to respond\n\tif proxyHandler, exists := s.proxyHandlers[apiService.Name]; exists {\n\t\tproxyHandler.updateAPIService(apiService, destinationHost)\n\t\treturn\n\t}"
  },
  {
    "id" : "9d9aec45-ec1e-46c8-a189-43296bad8f97",
    "prId" : 43383,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43383#pullrequestreview-29268274",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc3239e5-f422-48e6-bad7-0df541c88eaa",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if we allow `apiService.Spec.Group == \"\"` (which it appears we do), we should make sure we don't ever have a case where `apiService.Spec.Group == \"\"` and `apiService.Spec.Version != \"v1\"`\r\n\r\nas it is now, that could give us a proxyPath of `/apis//vX`",
        "createdAt" : "2017-03-27T18:42:09Z",
        "updatedAt" : "2017-03-27T18:42:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "1230cd85-8257-4a4d-91a6-1d0ed700e953",
        "parentId" : "cc3239e5-f422-48e6-bad7-0df541c88eaa",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> if we allow apiService.Spec.Group == \"\" (which it appears we do), we should make sure we don't ever have a case where apiService.Spec.Group == \"\" and apiService.Spec.Version != \"v1\"\r\n\r\nAlready restricted to just \"v1\"",
        "createdAt" : "2017-03-27T18:44:14Z",
        "updatedAt" : "2017-03-27T18:44:15Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "ef1e7ca5-db35-41e1-bb7c-45edcd9e32ce",
        "parentId" : "cc3239e5-f422-48e6-bad7-0df541c88eaa",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "here https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/pkg/apis/apiregistration/validation/validation.go#L48 and here https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/pkg/apis/apiregistration/validation/validation.go#L31-L39",
        "createdAt" : "2017-03-27T18:45:27Z",
        "updatedAt" : "2017-03-27T18:45:27Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "3414231672e59b750fe135bdccc076eb3a72498d",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +204,208 @@\t\treturn\n\t}\n\n\tproxyPath := \"/apis/\" + apiService.Spec.Group + \"/\" + apiService.Spec.Version\n\t// v1. is a special case for the legacy API.  It proxies to a wider set of endpoints."
  },
  {
    "id" : "50756080-b23e-427e-a7a3-719001446b35",
    "prId" : 42672,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42672#pullrequestreview-26061522",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e05d170-5899-4436-8b2e-dbc0edda7028",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Is there a way to do this in a normal func instead of init?",
        "createdAt" : "2017-03-09T15:31:23Z",
        "updatedAt" : "2017-03-09T15:45:09Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "208b806d-909f-4c2b-91ef-92b5c9b653a8",
        "parentId" : "0e05d170-5899-4436-8b2e-dbc0edda7028",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Is there a way to do this in a normal func instead of init?\r\n\r\nMaybe.  We've always initialized a scheme on init, you want to change it to run through an accessor calling a func using a global `sync.Once`?  I can if you feel strongly.",
        "createdAt" : "2017-03-09T15:39:57Z",
        "updatedAt" : "2017-03-09T15:45:09Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "dfb02cf0-1e85-4d1e-a6bc-5adbb51face0",
        "parentId" : "0e05d170-5899-4436-8b2e-dbc0edda7028",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "It's not like you're differing from current patterns. Long-term, I'd like to get away from `init` but it's fine for now.",
        "createdAt" : "2017-03-09T15:42:46Z",
        "updatedAt" : "2017-03-09T15:45:09Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "1dc8ae9b57e4bf3ee225c3899f2289d898fec9c9",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +55,59 @@)\n\nfunc init() {\n\tinstall.Install(groupFactoryRegistry, registry, Scheme)\n"
  }
]