[
  {
    "id" : "f03983e8-7469-4b53-8fd5-2af415ece0d2",
    "prId" : 91525,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91525#pullrequestreview-420251607",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "102fd4bc-a231-4f21-aa3c-f2addea0c391",
        "parentId" : null,
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "what's the point of this line?",
        "createdAt" : "2020-05-28T14:51:47Z",
        "updatedAt" : "2020-06-09T05:30:40Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      },
      {
        "id" : "179c69af-4000-4c68-a2e1-4eccfe800550",
        "parentId" : "102fd4bc-a231-4f21-aa3c-f2addea0c391",
        "authorId" : "171bb666-1454-4ba5-866b-e46f2bd90421",
        "body" : "The openapiConfig is assigned to the APIAggregator (`server` in the code), prepareRun the genericAPIServer won't invoke openapi setup, but prepareRun the server will do. ",
        "createdAt" : "2020-05-28T15:49:29Z",
        "updatedAt" : "2020-06-09T05:30:40Z",
        "lastEditedBy" : "171bb666-1454-4ba5-866b-e46f2bd90421",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8ac95321d6470e476ed878ef1e3a3c760f7fdae",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +168,172 @@\t}\n\n\tprepared, err := server.PrepareRun()\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "97f9ef4f-03a0-449c-bdb2-1b81d401e9fa",
    "prId" : 91525,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91525#pullrequestreview-420571306",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5484f7b6-02e6-4320-a168-a607cbaa7707",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Won't this double-register the flags in the kube-apiserver binary?",
        "createdAt" : "2020-05-28T16:46:52Z",
        "updatedAt" : "2020-06-09T05:30:40Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "fa57c154-fb82-48b9-8b53-cc513591dafb",
        "parentId" : "5484f7b6-02e6-4320-a168-a607cbaa7707",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Or, wait, maybe this is correct, I need to double check which layer kube-apiserver imports",
        "createdAt" : "2020-05-28T16:48:45Z",
        "updatedAt" : "2020-06-09T05:30:40Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "2eda9ca5-7a21-4267-b0a1-9dcc77deea43",
        "parentId" : "5484f7b6-02e6-4320-a168-a607cbaa7707",
        "authorId" : "171bb666-1454-4ba5-866b-e46f2bd90421",
        "body" : "It won't. The AggregatorOptions is used when the kube-aggregator starts standalone. ",
        "createdAt" : "2020-05-29T00:04:50Z",
        "updatedAt" : "2020-06-09T05:30:40Z",
        "lastEditedBy" : "171bb666-1454-4ba5-866b-e46f2bd90421",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8ac95321d6470e476ed878ef1e3a3c760f7fdae",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +81,85 @@// AddFlags is necessary because hyperkube doesn't work using cobra, so we have to have different registration and execution paths\nfunc (o *AggregatorOptions) AddFlags(fs *pflag.FlagSet) {\n\to.ServerRunOptions.AddUniversalFlags(fs)\n\to.RecommendedOptions.AddFlags(fs)\n\to.APIEnablement.AddFlags(fs)"
  },
  {
    "id" : "7d5a0bf9-1416-4702-9446-9acfeb3975e2",
    "prId" : 58937,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58937#pullrequestreview-95728587",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31e161ea-db8f-49ae-98f3-7af10d88b285",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "`o := *defaults`. Now, operating on defaults is strange.",
        "createdAt" : "2018-02-12T08:16:56Z",
        "updatedAt" : "2018-02-13T12:47:16Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "a885f0b4-385b-4d2b-b3b8-8ea36662f903",
        "parentId" : "31e161ea-db8f-49ae-98f3-7af10d88b285",
        "authorId" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "body" : "ic",
        "createdAt" : "2018-02-12T09:39:39Z",
        "updatedAt" : "2018-02-13T12:47:16Z",
        "lastEditedBy" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "468b8bf021cc6488ce16cfad1f471c47021ce78d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +51,55 @@// NewCommandStartAggregator provides a CLI handler for 'start master' command\n// with a default AggregatorOptions.\nfunc NewCommandStartAggregator(defaults *AggregatorOptions, stopCh <-chan struct{}) *cobra.Command {\n\to := *defaults\n\tcmd := &cobra.Command{"
  },
  {
    "id" : "97559d27-fe46-47c5-b44c-df4c048ad624",
    "prId" : 47857,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47857#pullrequestreview-45501448",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e82bbfb0-9186-474f-bbf7-d11c7129ac4f",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This should respect the flag, IMO.",
        "createdAt" : "2017-06-21T17:11:10Z",
        "updatedAt" : "2017-06-21T19:15:03Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "8c905e11-d489-41a3-9440-6d26e7ec6b08",
        "parentId" : "e82bbfb0-9186-474f-bbf7-d11c7129ac4f",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> This should respect the flag, IMO.\r\n\r\nThere isn't a flag when run as a separate processes since its probably in a pod which would use `kube-proxy`.",
        "createdAt" : "2017-06-21T17:14:23Z",
        "updatedAt" : "2017-06-21T19:15:03Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "f525c0815e06a3e32971756047fb2f8135fbfe11",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +146,150 @@\t}\n\tkubeInformers := kubeinformers.NewSharedInformerFactory(coreAPIServerClient, 5*time.Minute)\n\tserviceResolver := apiserver.NewClusterIPServiceResolver(kubeInformers.Core().V1().Services().Lister())\n\n\tconfig := apiserver.Config{"
  }
]