[
  {
    "id" : "50ecf8b8-7116-4cdc-bd1f-db586f94341d",
    "prId" : 92608,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92608#pullrequestreview-468144148",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac8d7055-116c-4bc8-ac70-a68f2327bc33",
        "parentId" : null,
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "We do not have any other power state other than 3 mentioned here. What is the objective of checking against them?\r\n\r\nI think the main objective of this function `Exists` is to make sure VM is present on the inventory, regardless of the it's power state.",
        "createdAt" : "2020-07-21T17:54:33Z",
        "updatedAt" : "2020-08-17T04:51:12Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      },
      {
        "id" : "7e163a62-f36d-40b9-8564-2d9a0c1bfbd5",
        "parentId" : "ac8d7055-116c-4bc8-ac70-a68f2327bc33",
        "authorId" : "2a288db3-996a-46e4-9e0e-9922688682b3",
        "body" : "Hi @divyenpatel , there are only 3 states for VM https://github.com/vmware/govmomi/blob/3decde69e9aa0bcc8a831e3f87acae26c2151c4a/vim25/types/enum.go#L4573-L4575\r\nAlso I cherry picked this changes from this commit https://github.com/kubernetes/kubernetes/pull/70291/files\r\nHemant explained here why he added this check https://github.com/kubernetes/kubernetes/pull/70291/files#r229045231\r\nIt's to protect against any other state in the future sdk",
        "createdAt" : "2020-08-17T03:23:56Z",
        "updatedAt" : "2020-08-17T04:51:12Z",
        "lastEditedBy" : "2a288db3-996a-46e4-9e0e-9922688682b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "566c0d735a377f827f370c54035de3945e3e2bf3",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +224,228 @@\t// We check for VMs which are still available in vcenter and has not been terminated/removed from\n\t// disk and hence we consider PoweredOn,PoweredOff and Suspended as alive states.\n\taliveStates := []types.VirtualMachinePowerState{\n\t\ttypes.VirtualMachinePowerStatePoweredOff,\n\t\ttypes.VirtualMachinePowerStatePoweredOn,"
  },
  {
    "id" : "bbad8318-c7f7-44fb-89b3-b5c905cd16da",
    "prId" : 92608,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92608#pullrequestreview-527903781",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca08f57d-07f7-4164-a72d-fd12a9f80351",
        "parentId" : null,
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "Do you anticipate not found fault here? if yes then we need to interpret it as VM not exist and return true.",
        "createdAt" : "2020-10-21T23:59:57Z",
        "updatedAt" : "2020-10-21T23:59:57Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      },
      {
        "id" : "f5dadfec-7efe-4634-bd7f-1f9594308356",
        "parentId" : "ca08f57d-07f7-4164-a72d-fd12a9f80351",
        "authorId" : "2a288db3-996a-46e4-9e0e-9922688682b3",
        "body" : "Hi @divyenpatel , it anticipated not found fault so it will return false as not Exist",
        "createdAt" : "2020-11-11T06:40:51Z",
        "updatedAt" : "2020-11-11T06:40:52Z",
        "lastEditedBy" : "2a288db3-996a-46e4-9e0e-9922688682b3",
        "tags" : [
        ]
      },
      {
        "id" : "21c26fd2-e916-45b0-abd8-fa380697eba7",
        "parentId" : "ca08f57d-07f7-4164-a72d-fd12a9f80351",
        "authorId" : "2a288db3-996a-46e4-9e0e-9922688682b3",
        "body" : "I created a custom binary and tested it out inside k8s environment. If VM is deleted, then node will be deleted as well",
        "createdAt" : "2020-11-11T06:42:51Z",
        "updatedAt" : "2020-11-11T06:42:51Z",
        "lastEditedBy" : "2a288db3-996a-46e4-9e0e-9922688682b3",
        "tags" : [
        ]
      },
      {
        "id" : "2b307bd7-a107-45b1-8ca3-e0083668a299",
        "parentId" : "ca08f57d-07f7-4164-a72d-fd12a9f80351",
        "authorId" : "2a288db3-996a-46e4-9e0e-9922688682b3",
        "body" : "```\r\nI1111 06:26:45.027867       7 node_lifecycle_controller.go:773] Controller observed a new Node: \"d5924270-2588-44f7-a44f-59063b5646f0\"\r\nI1111 06:26:45.027910       7 controller_utils.go:172] Recording Registered Node d5924270-2588-44f7-a44f-59063b5646f0 in Controller event message for node d5924270-2588-44f7-a44f-59063b5646f0\r\nW1111 06:26:45.028007       7 node_lifecycle_controller.go:1044] Missing timestamp for Node d5924270-2588-44f7-a44f-59063b5646f0. Assuming now as a timestamp.\r\nI1111 06:26:45.028023       7 node_lifecycle_controller.go:872] Node d5924270-2588-44f7-a44f-59063b5646f0 is NotReady as of 2020-11-11 06:26:45.02801646 +0000 UTC m=+470.966198179. Adding it to the Taint queue.\r\nI1111 06:26:45.028342       7 event.go:291] \"Event occurred\" [object d5924270-2588-44f7-a44f-59063b5646f0 kind Node apiVersion v1 type Normal reason RegisteredNode message Node d5924270-2588-44f7-a44f-59063b5646f0 event: Registered Node d5924270-2588-44f7-a44f-59063b5646f0 in Controller]=\"(MISSING)\"\r\n\r\n```\r\n\r\n```\r\nI1111 06:34:40.072935       7 controller_utils.go:172] Recording Removing Node d5924270-2588-44f7-a44f-59063b5646f0 from Controller event message for node d5924270-2588-44f7-a44f-59063b5646f0\r\nI1111 06:34:40.077904       7 event.go:291] \"Event occurred\" [object d5924270-2588-44f7-a44f-59063b5646f0 kind Node apiVersion v1 type Normal reason RemovingNode message Node d5924270-2588-44f7-a44f-59063b5646f0 event: Removing Node d5924270-2588-44f7-a44f-59063b5646f0 from Controller]=\"(MISSING)\"\r\n```\r\n\r\nand volume attached to it are removed in the end\r\n```\r\nW1111 06:41:35.199254       7 reconciler.go:206] attacherDetacher.DetachVolume started for volume \"pvc-e560795e-5736-4f0d-8ca3-48c1443d5909\" (UniqueName: \"kubernetes.io/vsphere-volume/[vsanDatastore] 64ac5c5e-1447-dc56-80b1-e4434bbb68dc/test2-dynamic-pvc-e560795e-5736-4f0d-8ca3-48c1443d5909.vmdk\") on node \"d5924270-2588-44f7-a44f-59063b5646f0\" This volume is not safe to detach, but maxWaitForUnmountDuration 6m0s expired, force detaching\r\n```",
        "createdAt" : "2020-11-11T06:47:23Z",
        "updatedAt" : "2020-11-11T06:47:24Z",
        "lastEditedBy" : "2a288db3-996a-46e4-9e0e-9922688682b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "566c0d735a377f827f370c54035de3945e3e2bf3",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +218,222 @@func (vm *VirtualMachine) Exists(ctx context.Context) (bool, error) {\n\tvmMoList, err := vm.Datacenter.GetVMMoList(ctx, []*VirtualMachine{vm}, []string{\"summary.runtime.powerState\"})\n\tif err != nil {\n\t\tklog.Errorf(\"Failed to get VM Managed object with property summary. err: +%v\", err)\n\t\treturn false, err"
  }
]