[
  {
    "id" : "4bf18c9f-50cb-439c-8847-9c8aa31b0113",
    "prId" : 88094,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88094#pullrequestreview-360761535",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6be3d24-a82c-46d9-87e4-44a760a69a7b",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Could we add some jiffies to the delay? in case the default vmssVMInstanceUpdateDelay is not enough for some cases",
        "createdAt" : "2020-02-13T08:00:51Z",
        "updatedAt" : "2020-02-18T21:33:06Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "c3484801-be9c-4004-9353-c1ec43e4e472",
        "parentId" : "c6be3d24-a82c-46d9-87e4-44a760a69a7b",
        "authorId" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "body" : "@feiskyer We delay launching the goroutines but don't actual see if there is an error until we finish the aggregation of routines. Do you have something in mind?",
        "createdAt" : "2020-02-18T21:33:59Z",
        "updatedAt" : "2020-02-18T21:34:00Z",
        "lastEditedBy" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "tags" : [
        ]
      },
      {
        "id" : "409b4957-be96-44dc-8194-decfa698cdb0",
        "parentId" : "c6be3d24-a82c-46d9-87e4-44a760a69a7b",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "OK, let's keep it as is",
        "createdAt" : "2020-02-19T00:05:06Z",
        "updatedAt" : "2020-02-19T00:05:06Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "fdefdff2225e4590957ef9ec6cdf269826e381d8",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +86,90 @@\tfor _, f := range funcs {\n\t\tgo func(f func() error) { errChan <- f() }(f)\n\t\ttime.Sleep(delay)\n\t}\n\terrs := make([]error, 0)"
  },
  {
    "id" : "7969f7cc-4d30-4a79-91ae-efd4969eb38f",
    "prId" : 88094,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88094#pullrequestreview-360681246",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1814cd0c-e138-4ea2-84f9-0e798b5ecefb",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "could you add a uni test for the new func?",
        "createdAt" : "2020-02-13T08:02:03Z",
        "updatedAt" : "2020-02-18T21:33:06Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "993a1284-b881-4ca9-8008-358d6d0c4c71",
        "parentId" : "1814cd0c-e138-4ea2-84f9-0e798b5ecefb",
        "authorId" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "body" : "added the same unit test the other func was using. Will see if we can test anything more in this func.",
        "createdAt" : "2020-02-18T21:21:29Z",
        "updatedAt" : "2020-02-18T21:33:06Z",
        "lastEditedBy" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "tags" : [
        ]
      }
    ],
    "commit" : "fdefdff2225e4590957ef9ec6cdf269826e381d8",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +81,85 @@// aggregateGoroutinesWithDelay aggregates goroutines and runs them\n// in parallel with delay before starting each goroutine\nfunc aggregateGoroutinesWithDelay(delay time.Duration, funcs ...func() error) utilerrors.Aggregate {\n\terrChan := make(chan error, len(funcs))\n"
  },
  {
    "id" : "3b12b493-56a3-4857-ae3a-db933f5eab16",
    "prId" : 85115,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85115#pullrequestreview-316444252",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a064d991-9ec2-44e8-93db-3d0a660a9c10",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "would you write a ut for this class?",
        "createdAt" : "2019-11-13T06:24:03Z",
        "updatedAt" : "2019-11-14T01:08:10Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "28be38f7-f994-46f8-80b7-49c2ec5392de",
        "parentId" : "a064d991-9ec2-44e8-93db-3d0a660a9c10",
        "authorId" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "body" : "Have added unit tests for the class.",
        "createdAt" : "2019-11-13T18:02:32Z",
        "updatedAt" : "2019-11-14T01:08:10Z",
        "lastEditedBy" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "tags" : [
        ]
      }
    ],
    "commit" : "57df6250690a27b486f2d95255a784e3917aa4e7",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@// +build !providerless\n\n/*"
  },
  {
    "id" : "cda71a7f-7362-4d1e-842c-23fc577f3a69",
    "prId" : 85115,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85115#pullrequestreview-316444608",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "182a9cad-14e2-4251-a447-adbeec6b78d5",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "Pls always use lowercase, otherwise if nodeName changed case, this lock may not work.\r\n```\r\nentry = strings.ToLower(entry)\r\n```",
        "createdAt" : "2019-11-13T06:26:16Z",
        "updatedAt" : "2019-11-14T01:08:10Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "68ca3374-1e9e-473a-9f9b-30d9d2d43a2e",
        "parentId" : "182a9cad-14e2-4251-a447-adbeec6b78d5",
        "authorId" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "body" : "the entry should be decided by the caller. So added `strings.ToLower(string(nodeName))` at the caller level. ",
        "createdAt" : "2019-11-13T18:03:12Z",
        "updatedAt" : "2019-11-14T01:08:10Z",
        "lastEditedBy" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "tags" : [
        ]
      }
    ],
    "commit" : "57df6250690a27b486f2d95255a784e3917aa4e7",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@// LockEntry acquires a lock associated with the specific entry\nfunc (lm *lockMap) LockEntry(entry string) {\n\tlm.Lock()\n\t// check if entry does not exists, then add entry\n\tif _, exists := lm.mutexMap[entry]; !exists {"
  }
]