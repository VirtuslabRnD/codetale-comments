[
  {
    "id" : "6cf2f1bd-4316-4230-833e-1f94db282720",
    "prId" : 91723,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91723#pullrequestreview-425998179",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9518043b-1717-4fc4-bbb4-ff04e6c27867",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "could you add an unit test for this?",
        "createdAt" : "2020-06-04T08:42:09Z",
        "updatedAt" : "2020-06-04T08:42:10Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "f6b8e69e-5f04-468f-b832-3125d52e1db3",
        "parentId" : "9518043b-1717-4fc4-bbb4-ff04e6c27867",
        "authorId" : "1fb95b3f-bcb1-456b-927f-cb13d92f6f43",
        "body" : "Currently, could not add the unit test. Because `storage.FileSharesClient` is a struct, we can't mock it now. After updating the azure-sdk-for-go in the future, it will be switched to use interface. Then we can mock it. ",
        "createdAt" : "2020-06-08T02:03:40Z",
        "updatedAt" : "2020-06-08T02:03:41Z",
        "lastEditedBy" : "1fb95b3f-bcb1-456b-927f-cb13d92f6f43",
        "tags" : [
        ]
      },
      {
        "id" : "6cf403d7-a745-464b-837e-d4e9f5c53d25",
        "parentId" : "9518043b-1717-4fc4-bbb4-ff04e6c27867",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "makes sense.",
        "createdAt" : "2020-06-08T08:06:32Z",
        "updatedAt" : "2020-06-08T08:06:33Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2b20df2c70f6888d71705955cfedc89b0fd4386",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +52,56 @@\t\tklog.V(2).Infof(\"file share(%s) under account(%s) rg(%s) already exists\", name, accountName, resourceGroupName)\n\t\treturn nil\n\t} else if err != nil && result.Response.StatusCode != http.StatusNotFound && !strings.Contains(err.Error(), \"ShareNotFound\") {\n\t\treturn fmt.Errorf(\"failed to get file share(%s), err: %v\", name, err)\n\t}"
  },
  {
    "id" : "0915ed49-4d86-4ba6-902a-63df03e71ff5",
    "prId" : 90350,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90350#pullrequestreview-423356789",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2db9cb3c-7fb9-4b04-a346-afa161b48807",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "https://docs.microsoft.com/en-us/rest/api/storageservices/create-share\r\n```\r\nThe Create Share operation creates a new share under the specified account. If the share with the same name already exists, the operation fails.\r\n```\r\n\r\nI think if it return error, check error message, keep same behavior as old code.",
        "createdAt" : "2020-04-26T13:09:08Z",
        "updatedAt" : "2020-05-12T05:35:52Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "08258e03-de0c-443e-8fce-43420d2c7fce",
        "parentId" : "2db9cb3c-7fb9-4b04-a346-afa161b48807",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "It is by design. The management plane API silent ignores the error and takes it as an update operation.",
        "createdAt" : "2020-04-28T13:39:32Z",
        "updatedAt" : "2020-05-12T05:35:52Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "76bc5f7d-6241-4d6e-b2cc-f3a37bf84f74",
        "parentId" : "2db9cb3c-7fb9-4b04-a346-afa161b48807",
        "authorId" : "1fb95b3f-bcb1-456b-927f-cb13d92f6f43",
        "body" : "make the logic consistent with the original. See https://github.com/kubernetes/kubernetes/pull/91723",
        "createdAt" : "2020-06-03T09:01:56Z",
        "updatedAt" : "2020-06-03T09:02:04Z",
        "lastEditedBy" : "1fb95b3f-bcb1-456b-927f-cb13d92f6f43",
        "tags" : [
        ]
      }
    ],
    "commit" : "01713f2411d8be01aa2742a5a2646dd8e3d923a4",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +53,57 @@\t\t},\n\t}\n\t_, err := c.fileSharesClient.Create(context.Background(), resourceGroupName, accountName, name, fileShare)\n\n\treturn err"
  }
]