[
  {
    "id" : "ab7dc3fe-6f3b-4ac8-88b2-cd1e514f4da0",
    "prId" : 95578,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95578#pullrequestreview-508970868",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02f9f5e3-006f-4572-a73c-7c69cbca98f7",
        "parentId" : null,
        "authorId" : "bd801719-01e4-4ead-9ae6-b0797ef220b5",
        "body" : "this and the delete one were added to better track metrics. I'll remove `WaitForAsyncResult` once autoscaler switches to using `WaitForCreateOrUpdateResult` and `WaitForDeleteInstancesResult`",
        "createdAt" : "2020-10-15T05:48:15Z",
        "updatedAt" : "2020-10-15T05:48:15Z",
        "lastEditedBy" : "bd801719-01e4-4ead-9ae6-b0797ef220b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ede9d8ce12f059ab2f6d0453fd0925c3dae1296c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +274,278 @@\n// WaitForCreateOrUpdateResult waits for the response of the create or update request\nfunc (c *Client) WaitForCreateOrUpdateResult(ctx context.Context, future *azure.Future, resourceGroupName string) (*http.Response, error) {\n\tmc := metrics.NewMetricContext(\"vmss\", \"wait_for_create_or_update_result\", resourceGroupName, c.subscriptionID, \"\")\n\tres, err := c.armClient.WaitForAsyncOperationResult(ctx, future, \"VMSSWaitForCreateOrUpdateResult\")"
  },
  {
    "id" : "b50e39c4-6fa7-4c0f-a59c-31de50bbcd95",
    "prId" : 88155,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88155#pullrequestreview-359375494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42e3b914-422e-402c-bf5a-a81feecbc1ff",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "shall we make it as V(2) ?",
        "createdAt" : "2020-02-14T13:07:56Z",
        "updatedAt" : "2020-02-14T13:08:00Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "d88e70de-e25b-4e71-aa16-3c899164d130",
        "parentId" : "42e3b914-422e-402c-bf5a-a81feecbc1ff",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Those errors would also be logged at client consumers, so V(2) is not needed here.",
        "createdAt" : "2020-02-16T01:47:06Z",
        "updatedAt" : "2020-02-16T01:47:06Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1383e99af59939038d36cf8fe68071f989adb30",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +409,413 @@\terr := autorest.Respond(response, azure.WithErrorUnlessStatusCode(http.StatusOK, http.StatusAccepted))\n\tif err != nil {\n\t\tklog.V(5).Infof(\"Received error in %s: resourceID: %s, error: %s\", \"vmss.deletevms.respond\", resourceID, rerr.Error())\n\t\treturn retry.GetError(response, err)\n\t}"
  }
]