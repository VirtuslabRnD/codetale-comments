[
  {
    "id" : "a261b95f-8908-4d86-a5e2-e9c3eaf83c7e",
    "prId" : 98350,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98350#pullrequestreview-657036340",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84cc0e86-3504-4d29-b7e4-5890a7b7be6d",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Might be good to add a comment explaining why you are shadowing this variable.",
        "createdAt" : "2021-05-11T17:47:25Z",
        "updatedAt" : "2021-05-11T17:47:25Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "715a4c41120def4430a6697ffa159546065439d4",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +1433,1437 @@\terrors := make([]error, 0, len(vmssNamesMap))\n\tfor vmssName := range vmssNamesMap {\n\t\tvmssName := vmssName\n\t\tvmss, err := ss.getVMSS(vmssName, azcache.CacheReadTypeDefault)\n\t\tif err != nil {"
  },
  {
    "id" : "496880b5-9c35-4eb5-be09-be80e51e1b03",
    "prId" : 93043,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93043#pullrequestreview-448551964",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46c7474e-2b04-49a5-9e33-484adb3a359a",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "more comments on this? why ipv6 and ipv4 get from different config?",
        "createdAt" : "2020-07-14T05:54:27Z",
        "updatedAt" : "2020-07-15T00:27:35Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "13a9a4ec-de78-440c-9792-85e8805a724d",
        "parentId" : "46c7474e-2b04-49a5-9e33-484adb3a359a",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "and there must be a issue related to this PR if it's going to cherry-pick to old release",
        "createdAt" : "2020-07-14T05:56:17Z",
        "updatedAt" : "2020-07-15T00:27:35Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "9788a447-f391-4b8f-9d87-b0e4c4466f18",
        "parentId" : "46c7474e-2b04-49a5-9e33-484adb3a359a",
        "authorId" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "body" : "Thank you. Added a comment and opened an issue #93085 ",
        "createdAt" : "2020-07-15T00:28:14Z",
        "updatedAt" : "2020-07-15T00:28:15Z",
        "lastEditedBy" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1f0e9884a989265bc31229ef192598c0607bb88",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +997,1001 @@\t\t}\n\t\tvar primaryIPConfig *compute.VirtualMachineScaleSetIPConfiguration\n\t\tipv6 := utilnet.IsIPv6String(service.Spec.ClusterIP)\n\t\t// Find primary network interface configuration.\n\t\tif !ss.Cloud.ipv6DualStackEnabled && !ipv6 {"
  },
  {
    "id" : "99df9e40-e841-4bc8-9512-7db88aa50d35",
    "prId" : 90273,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90273#pullrequestreview-396100197",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd44fd8d-197c-467e-95bd-98abe4f942a0",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "thanks for fixing the bug here",
        "createdAt" : "2020-04-20T02:09:26Z",
        "updatedAt" : "2020-04-20T03:20:02Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fdceba86f4c464926545047e57e01dffb120ac4",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +713,717 @@\t\tif realErr != nil {\n\t\t\tklog.Errorf(\"error: ss.GetPrimaryInterface(%s), ss.GetVirtualMachineScaleSetNetworkInterface.Get(%s, %s, %s), err=%v\", nodeName, resourceGroup, ssName, nicName, realErr)\n\t\t\treturn network.Interface{}, realErr.Error()\n\t\t}\n"
  },
  {
    "id" : "ca9b9e03-cda8-4474-95a2-27fb30160080",
    "prId" : 89604,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89604#pullrequestreview-383274810",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6d789fb-59cc-4529-acd9-aba5ed085d56",
        "parentId" : null,
        "authorId" : "aa111d77-fac6-440e-b034-3710cc9b43f3",
        "body" : "I don't suppose we could UT this to ensure that the `meta` and `update` variable references are discrete in the callback functions inside this enumeration? (or maybe they aren't callbacks per se, but let's make this implemented in such a way that we don't erroneously hold a common reference in the stack when we think the references are distinct)",
        "createdAt" : "2020-03-28T00:09:29Z",
        "updatedAt" : "2020-03-28T00:09:30Z",
        "lastEditedBy" : "aa111d77-fac6-440e-b034-3710cc9b43f3",
        "tags" : [
        ]
      },
      {
        "id" : "27404b4a-d178-487c-bf3b-8e1ed8c8bf22",
        "parentId" : "a6d789fb-59cc-4529-acd9-aba5ed085d56",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "agreed, this is hard to catch and because AggregateGoroutines() is used here, we couldn't pass the values as parameters.",
        "createdAt" : "2020-03-28T02:20:25Z",
        "updatedAt" : "2020-03-28T02:20:26Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "43c45edf88eb5810a5ae131329124b21d334c22c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1102,1106 @@\t// Update VMs with best effort that have already been added to nodeUpdates.\n\tfor meta, update := range nodeUpdates {\n\t\t// create new instance of meta and update for passing to anonymous function\n\t\tmeta := meta\n\t\tupdate := update"
  },
  {
    "id" : "9bd35af8-eaa1-4863-8f05-433a10f1ed76",
    "prId" : 87555,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87555#pullrequestreview-348424232",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6ac6bf5-ef7a-4da0-9100-cfaaac9210fa",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "why adding this const, it's not used in current code",
        "createdAt" : "2020-01-27T02:15:26Z",
        "updatedAt" : "2020-01-27T02:15:27Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "bf3ad3d5-1e69-4d6d-b73f-369a479144e6",
        "parentId" : "f6ac6bf5-ef7a-4da0-9100-cfaaac9210fa",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "it's moving from azure_client.go to azure_vmss.go, and it is used in `ensureVMSSInPool()`",
        "createdAt" : "2020-01-27T02:25:48Z",
        "updatedAt" : "2020-01-27T02:25:48Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7650e582ec8da003f40442260a33d42a7173d31",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +42,46 @@var (\n\t// virtualMachineScaleSetsDeallocating indicates VMSS instances are in Deallocating state.\n\tvirtualMachineScaleSetsDeallocating = \"Deallocating\"\n\n\t// ErrorNotVmssInstance indicates an instance is not belongint to any vmss."
  },
  {
    "id" : "092d135e-09a7-4c8c-9b3b-aca033682499",
    "prId" : 87531,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87531#pullrequestreview-349132654",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2535d6fb-e60d-46ab-80c6-25b4fc4f9c7f",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "I would suggest set as `klog.V(2).Infof`, so that we could check how many ForceRefresh in controller-manager easilly",
        "createdAt" : "2020-01-28T02:54:36Z",
        "updatedAt" : "2020-01-28T02:54:36Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "abc4883c-7046-49ba-825a-9cb434ebb4ac",
        "parentId" : "2535d6fb-e60d-46ab-80c6-25b4fc4f9c7f",
        "authorId" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "body" : "@andyzhangx yes, I'll update that in the new PR.",
        "createdAt" : "2020-01-28T05:07:39Z",
        "updatedAt" : "2020-01-28T05:07:39Z",
        "lastEditedBy" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "tags" : [
        ]
      }
    ],
    "commit" : "e2d7153a133b44053d3c244e7ac4ddde3d63b9e6",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +229,233 @@\t}\n\tif !found {\n\t\tklog.V(3).Infof(\"Couldn't find VMSS VM with scaleSetName %q and instanceID %q, refreshing the cache\", scaleSetName, instanceID)\n\t\tvm, found, err = getter(cacheReadTypeForceRefresh)\n\t\tif err != nil {"
  },
  {
    "id" : "3cf662df-a5ba-4e72-a893-92710f295174",
    "prId" : 87531,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87531#pullrequestreview-349107108",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a396d259-8c80-417e-a912-58109d6cb0f1",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "klog.V(2).Infof",
        "createdAt" : "2020-01-28T03:01:56Z",
        "updatedAt" : "2020-01-28T03:01:56Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "e2d7153a133b44053d3c244e7ac4ddde3d63b9e6",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +159,163 @@\n\tif !found {\n\t\tklog.V(3).Infof(\"Couldn't find VMSS VM with nodeName %s, refreshing the cache\", nodeName)\n\t\tvmssName, instanceID, vm, found, err = getter(nodeName, cacheReadTypeForceRefresh)\n\t\tif err != nil {"
  },
  {
    "id" : "95ed31d9-c7ee-49f8-abc4-564e8d51ed6e",
    "prId" : 83102,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83102#pullrequestreview-293121721",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4996d9a-682f-4386-becc-93414aef5914",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "return false means skip inner function? I am curious why use such inner function, it makes the code logic complex...",
        "createdAt" : "2019-09-25T09:35:43Z",
        "updatedAt" : "2019-09-27T00:59:04Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "e9f7b6aa-66ce-4d7f-9467-1eb9eafe07ff",
        "parentId" : "d4996d9a-682f-4386-becc-93414aef5914",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "right. this is the recommended way to iterate a sync.Map.",
        "createdAt" : "2019-09-25T14:28:36Z",
        "updatedAt" : "2019-09-27T00:59:04Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "197892d2db28d8bb34f2821ff1f5a509b89e7689",
    "line" : 136,
    "diffHunk" : "@@ -1,1 +170,174 @@\t\t\t\tvm = vmEntry.virtualMachine\n\t\t\t\tfound = true\n\t\t\t\treturn false\n\t\t\t}\n"
  },
  {
    "id" : "7ce5412e-5be3-45f4-88a7-0fe383031e64",
    "prId" : 81411,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81411#pullrequestreview-275301670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97f10415-2d16-4b8c-a1b1-694717230f2f",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Node is belonging to VMAS in such case. we need to log an info message and continue to next nodes",
        "createdAt" : "2019-08-15T07:55:05Z",
        "updatedAt" : "2019-08-19T06:45:44Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "b20256d296cf8894bd7235a0d2809e0c63e2ec70",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +821,825 @@\t\t\t// in this scenario the vmSetName is an empty string and the name of vmss should be obtained from the provider IDs of nodes\n\t\t\tvmssName, resourceGroupName, err := getVmssAndResourceGroupNameByVMProviderID(node.Spec.ProviderID)\n\t\t\tif err != nil {\n\t\t\t\tklog.V(4).Infof(\"ensureVMSSInPool: found VMAS node %s, will skip checking and continue\", node.Name)\n\t\t\t\tcontinue"
  },
  {
    "id" : "a44ea7e1-c41a-46b9-928c-e57e62b2a1b8",
    "prId" : 81411,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81411#pullrequestreview-275304696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e99c9c58-8ffb-4fda-a1c7-e22aade47ee7",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "same here, log an info message and skip the node",
        "createdAt" : "2019-08-15T08:03:43Z",
        "updatedAt" : "2019-08-19T06:45:44Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "b20256d296cf8894bd7235a0d2809e0c63e2ec70",
    "line" : 262,
    "diffHunk" : "@@ -1,1 +1127,1131 @@\t\t\t// in this scenario the vmSetName is an empty string and the name of vmss should be obtained from the provider IDs of nodes\n\t\t\tvmssName, resourceGroupName, err := getScaleSetAndResourceGroupNameByIPConfigurationID(ipConfigurationID)\n\t\t\tif err != nil {\n\t\t\t\tklog.V(4).Infof(\"ensureBackendPoolDeletedFromVMSS: found VMAS ipcConfigurationID %s, will skip checking and continue\", ipConfigurationID)\n\t\t\t\tcontinue"
  }
]