[
  {
    "id" : "7708608b-4b0c-4c36-b967-39484b056a0c",
    "prId" : 84865,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84865#pullrequestreview-313561661",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8618bd3-ee78-4825-b05a-60b1fb77c149",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Thanks. Looks like it can't be made private, or I would definitely ask for that. Oh well.",
        "createdAt" : "2019-11-07T18:55:32Z",
        "updatedAt" : "2019-11-07T18:55:32Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d897d5f77fa91b0b1026d6819b5fcb98640b33a",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +273,277 @@}\n\n// NewCloudWithoutFeatureGates returns a Cloud without trying to wire the feature gates.  This is used by the unit tests\n// that don't load the actual features being used in the cluster.\nfunc NewCloudWithoutFeatureGates(configReader io.Reader) (*Cloud, error) {"
  },
  {
    "id" : "c07e74ea-9192-45f7-a9ef-2d4fee6a28c2",
    "prId" : 81279,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81279#pullrequestreview-273553416",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73cd2dc5-34df-4015-a4e0-89fc7874f81d",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "`doesn't decrease` ?",
        "createdAt" : "2019-08-12T07:57:51Z",
        "updatedAt" : "2019-08-12T08:42:31Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "f0d826c7-5b4f-4c9b-a69c-3e171b121e1a",
        "parentId" : "73cd2dc5-34df-4015-a4e0-89fc7874f81d",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "`doesn't increase` means the request is counted as an attempt (it's a little odd within go-autorest logic).",
        "createdAt" : "2019-08-12T08:12:20Z",
        "updatedAt" : "2019-08-12T08:42:31Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e53c57a30796c22275b43a40b985e76749929085",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +241,245 @@func init() {\n\t// In go-autorest SDK https://github.com/Azure/go-autorest/blob/master/autorest/sender.go#L258-L287,\n\t// if ARM returns http.StatusTooManyRequests, the sender doesn't increase the retry attempt count,\n\t// hence the Azure clients will keep retrying forever until it get a status code other than 429.\n\t// So we explicitly removes http.StatusTooManyRequests from autorest.StatusCodesForRetry."
  },
  {
    "id" : "18fab527-9f32-4898-9cbf-369dd504ce1e",
    "prId" : 81279,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81279#pullrequestreview-274646044",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "875e8e30-62f4-4c00-a22d-83c9415e00f1",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "How about creating a Set with http.StatusTooManyRequests so that adding more status code in this category is easier in the future ?",
        "createdAt" : "2019-08-13T19:36:44Z",
        "updatedAt" : "2019-08-13T19:36:44Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "eb3a0b5e-4436-482f-a2eb-e96f3f87e327",
        "parentId" : "875e8e30-62f4-4c00-a22d-83c9415e00f1",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "this is workaround currently. In the future, we would switch to `autorest.SendDecorator` and remvote the workaround here.",
        "createdAt" : "2019-08-14T02:47:33Z",
        "updatedAt" : "2019-08-14T02:47:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e53c57a30796c22275b43a40b985e76749929085",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +248,252 @@\tstatusCodesForRetry := make([]int, 0)\n\tfor _, code := range autorest.StatusCodesForRetry {\n\t\tif code != http.StatusTooManyRequests {\n\t\t\tstatusCodesForRetry = append(statusCodesForRetry, code)\n\t\t}"
  }
]