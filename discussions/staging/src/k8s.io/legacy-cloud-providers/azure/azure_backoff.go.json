[
  {
    "id" : "7f9b6263-0b53-41a6-be8b-692f0739236e",
    "prId" : 98133,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98133#pullrequestreview-571793089",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0557f45-7aab-4a0c-9b68-4bdf4c26047d",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "What's the reason for checking if `LoadBalancerPropertiesFormat` is nil? I don't see it used below",
        "createdAt" : "2021-01-19T18:08:05Z",
        "updatedAt" : "2021-01-19T18:08:10Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "50e79025-b703-46f1-9795-c148c1b6ce71",
        "parentId" : "d0557f45-7aab-4a0c-9b68-4bdf4c26047d",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "+1",
        "createdAt" : "2021-01-19T23:25:14Z",
        "updatedAt" : "2021-01-19T23:25:14Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "c6d5384a-1c0f-4190-9a16-920e28ad9001",
        "parentId" : "d0557f45-7aab-4a0c-9b68-4bdf4c26047d",
        "authorId" : "64fc929e-883a-48a0-9455-8a7e0828d4fa",
        "body" : "`lb.FrontendIPConfigurations` is actually `lb.LoadBalancerPropertiesFormat.FrontendIPConfigurations `",
        "createdAt" : "2021-01-20T01:11:59Z",
        "updatedAt" : "2021-01-20T01:12:00Z",
        "lastEditedBy" : "64fc929e-883a-48a0-9455-8a7e0828d4fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d6330fd0df85776888f421daec6f2af9a405c7e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +185,189 @@\nfunc cleanupSubnetInFrontendIPConfigurations(lb *network.LoadBalancer) network.LoadBalancer {\n\tif lb.LoadBalancerPropertiesFormat == nil || lb.FrontendIPConfigurations == nil {\n\t\treturn *lb\n\t}"
  },
  {
    "id" : "a647c9d0-0bad-4c3c-8426-278fefa81b94",
    "prId" : 86078,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86078#pullrequestreview-330259183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd4ea05c-9847-4f13-830a-a677c8ba662b",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "if `resp != nil` && `err != nil`, then we only get second error msg, is that what you want? @feiskyer ",
        "createdAt" : "2019-12-11T01:29:31Z",
        "updatedAt" : "2019-12-11T01:29:31Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "018a9081-c85d-4a7d-81c1-73e96d4e9b0a",
        "parentId" : "bd4ea05c-9847-4f13-830a-a677c8ba662b",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "it would include both",
        "createdAt" : "2019-12-11T01:58:08Z",
        "updatedAt" : "2019-12-11T01:58:08Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "96084a5198c11aaeaa5ad6c1648a9c48c4f913a3",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +752,756 @@\t\t\tmessage = fmt.Sprintf(\"%s, HTTP response: %d\", message, resp.StatusCode)\n\t\t}\n\t\tif err != nil {\n\t\t\tmessage = fmt.Sprintf(\"%s, error: %v\", message, err)\n\t\t}"
  },
  {
    "id" : "97a8be27-e6f7-43d1-ade0-113200afbdc2",
    "prId" : 83685,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83685#pullrequestreview-305769792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f114ff07-51c7-4b05-88d4-c53396b1b93e",
        "parentId" : null,
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "@feiskyer - do we still need the  `wait.ExponentialBackoff` even when the SDK does that on behalf? ",
        "createdAt" : "2019-10-17T20:23:01Z",
        "updatedAt" : "2019-10-23T17:21:59Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "7e674e10-7a10-4b35-9503-4cd37d89c592",
        "parentId" : "f114ff07-51c7-4b05-88d4-c53396b1b93e",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "I have plans to remove the backoff logic from SDK, and let the cloud provider fully control it. We have seen a lot of issues because of SDK retries, e.g. infinite 429 retries. @khenidak WDYT?",
        "createdAt" : "2019-10-22T00:48:38Z",
        "updatedAt" : "2019-10-23T17:21:59Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "828b317a-1de5-40f1-a832-4dcccca2b0ae",
        "parentId" : "f114ff07-51c7-4b05-88d4-c53396b1b93e",
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "I think better off relying on SDK, not our code. the SDK can then adapt the RP interface as it changes. i.e. supporting retry-after etc. ",
        "createdAt" : "2019-10-22T15:58:48Z",
        "updatedAt" : "2019-10-23T17:21:59Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "16d6b530-6562-4ea1-9d13-347a4b6237db",
        "parentId" : "f114ff07-51c7-4b05-88d4-c53396b1b93e",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "with the SDK, we couldn't get the retry-after header back. So it's hard to determine when could cloud-provider to send new requests again, especially on throttling.\r\n\r\nAnd also, the retry-after returned by ARM may be too long for us, e.g. we have observed the cloud-provider hang for 15 minutes without any actions just because of silent retries in SDK.  \r\n\r\n@khenidak so, to achieve the final goal of large clusters, I think getting the retry-after back and let cloud-provider do the retry is better. WDYH?",
        "createdAt" : "2019-10-23T09:57:58Z",
        "updatedAt" : "2019-10-23T17:21:59Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d496861c458f015423a699cb55bc6b979fcaec2",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +70,74 @@\tvar retryErr error\n\terr := wait.ExponentialBackoff(az.RequestBackoff(), func() (bool, error) {\n\t\tmachine, retryErr = az.getVirtualMachine(name, crt)\n\t\tif retryErr == cloudprovider.InstanceNotFound {\n\t\t\treturn true, cloudprovider.InstanceNotFound"
  },
  {
    "id" : "120cc8c0-54f7-4c20-ae37-d4c47df77ad7",
    "prId" : 81054,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81054#pullrequestreview-272535953",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "beffa1c1-bf9a-4c30-bd40-8eba4c0e4446",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Could you also fix this on L457 and L478:\r\n\r\n```go\r\naz.LoadBalancerClient.Delete(ctx, az.ResourceGroup, lbName)\r\n```",
        "createdAt" : "2019-08-08T12:30:22Z",
        "updatedAt" : "2019-08-09T06:16:06Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "659e857a1de60596ba163af581885bd357ba770d",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +309,313 @@\n\t\trgName := az.getLoadBalancerResourceGroup()\n\t\tallLBs, retryErr = az.LoadBalancerClient.List(ctx, rgName)\n\t\tif retryErr != nil {\n\t\t\taz.Event(service, v1.EventTypeWarning, \"ListLoadBalancers\", retryErr.Error())"
  },
  {
    "id" : "401acfb0-3d9c-4109-99be-7729a3033474",
    "prId" : 81054,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81054#pullrequestreview-272536828",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ec3718e-0742-4b91-a7f0-73ba8c6ba1b5",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Please also use rgName in logs below.",
        "createdAt" : "2019-08-08T12:31:58Z",
        "updatedAt" : "2019-08-09T06:16:06Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "659e857a1de60596ba163af581885bd357ba770d",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +287,291 @@\t\trgName := az.getLoadBalancerResourceGroup()\n\t\tallLBs, err := az.LoadBalancerClient.List(ctx, rgName)\n\t\tif err != nil {\n\t\t\taz.Event(service, v1.EventTypeWarning, \"ListLoadBalancers\", err.Error())\n\t\t\tklog.Errorf(\"LoadBalancerClient.List(%v) failure with err=%v\", rgName, err)"
  },
  {
    "id" : "5564d6ab-a907-4f56-9b08-3561eac06e45",
    "prId" : 80419,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80419#pullrequestreview-264833336",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91f865dc-d5ed-455d-9a5f-baf535b1fbc0",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "what do you mean by \"not active\"? not exists?",
        "createdAt" : "2019-07-22T11:47:34Z",
        "updatedAt" : "2019-07-22T13:59:56Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "8f1c5c32-cc7f-4ae5-806f-ab62c75bfc9f",
        "parentId" : "91f865dc-d5ed-455d-9a5f-baf535b1fbc0",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "it looks like error msg return by azure API, may add comments about \"not active\" meaning.",
        "createdAt" : "2019-07-22T11:48:56Z",
        "updatedAt" : "2019-07-22T13:59:56Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "b3935f52-0be5-4a66-96c5-bede62267a4d",
        "parentId" : "91f865dc-d5ed-455d-9a5f-baf535b1fbc0",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "and this is only for VMSS? what about VMAS?",
        "createdAt" : "2019-07-22T11:49:55Z",
        "updatedAt" : "2019-07-22T13:59:56Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "cb1f8af2-d9cf-4cd6-b962-dd9642b46a07",
        "parentId" : "91f865dc-d5ed-455d-9a5f-baf535b1fbc0",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Yep, the error message is coming from VMSS API, so it is VMSS only.",
        "createdAt" : "2019-07-22T13:51:59Z",
        "updatedAt" : "2019-07-22T13:59:56Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "d00bd0bd-6ba9-4990-8a23-d2b9061e0d7d",
        "parentId" : "91f865dc-d5ed-455d-9a5f-baf535b1fbc0",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Would add a comment for this.",
        "createdAt" : "2019-07-22T13:58:39Z",
        "updatedAt" : "2019-07-22T13:59:56Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a62bc74ad6e3cf24a5479f364674509f1031e19",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +36,40 @@const (\n\t// not active means the instance is under deleting from Azure VMSS.\n\tvmssVMNotActiveErrorMessage = \"not an active Virtual Machine Scale Set VM instanceId\"\n)\n"
  },
  {
    "id" : "b61dba3f-afbc-4148-be59-32ef9de6133d",
    "prId" : 80419,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80419#pullrequestreview-264828346",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c55b078-0718-49e6-8d99-206397ef559a",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "any reason why changing log level?",
        "createdAt" : "2019-07-22T11:48:04Z",
        "updatedAt" : "2019-07-22T13:59:56Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "2670dd23-9985-440a-85bd-0638ea55e04f",
        "parentId" : "6c55b078-0718-49e6-8d99-206397ef559a",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "V(2) would produce too much noise for large clusters. Changing to V(3) for reducing it.",
        "createdAt" : "2019-07-22T13:51:34Z",
        "updatedAt" : "2019-07-22T13:59:56Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a62bc74ad6e3cf24a5479f364674509f1031e19",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +147,151 @@\t\t\treturn false, nil\n\t\t}\n\t\tklog.V(3).Infof(\"GetPrivateIPsByNodeName(%s): backoff success\", nodeName)\n\t\treturn true, nil\n\t})"
  },
  {
    "id" : "21f1e830-f69c-4b05-b227-7aa793256668",
    "prId" : 78298,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78298#pullrequestreview-241731662",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cf26d01-a877-44c6-89de-c0a26abd8760",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Also add the same condition at L624?",
        "createdAt" : "2019-05-24T13:04:03Z",
        "updatedAt" : "2019-05-24T13:12:49Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "a016ca88-908c-4dbf-8b83-f86a769a643e",
        "parentId" : "9cf26d01-a877-44c6-89de-c0a26abd8760",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "good catch! fixed",
        "createdAt" : "2019-05-24T13:13:01Z",
        "updatedAt" : "2019-05-24T13:13:01Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a45ba19814d612df04a5d3290795cc2797a1f13",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +599,603 @@// processHTTPRetryResponse : return true means stop retry, false means continue retry\nfunc (az *Cloud) processHTTPRetryResponse(service *v1.Service, reason string, resp *http.Response, err error) (bool, error) {\n\tif err == nil && resp != nil && isSuccessHTTPResponse(resp) {\n\t\t// HTTP 2xx suggests a successful response\n\t\treturn true, nil"
  },
  {
    "id" : "7c489fa9-8de6-4423-ace9-6dbdde055c0e",
    "prId" : 77490,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77490#pullrequestreview-235457715",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "213be1e0-9be9-44c1-a2ca-5ed348d82422",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "if it's <false, error> , then why keep the cache? what about always clean the cache?",
        "createdAt" : "2019-05-09T07:42:34Z",
        "updatedAt" : "2019-05-09T07:43:18Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "71fb6787-dbfd-4dc3-8874-cf838fa20410",
        "parentId" : "213be1e0-9be9-44c1-a2ca-5ed348d82422",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "for those cases, cloud provider should backoff retry with exactly same data. re-get the data from ARM API is not needed, as the ETAG is not conflicted.",
        "createdAt" : "2019-05-09T08:24:51Z",
        "updatedAt" : "2019-05-09T08:24:51Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ca1c832d21c7b6181dd445c453d3fd67061b07b",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +481,485 @@\t\t\treturn true, err\n\t\t}\n\t\treturn done, retryError\n\t})\n}"
  },
  {
    "id" : "ecc95719-d6f8-477d-b074-e91140351907",
    "prId" : 77490,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77490#pullrequestreview-235458016",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f948abdb-90d2-40fc-869b-9f95a7cbf2bc",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "what about always clean the cache for error condition?",
        "createdAt" : "2019-05-09T07:43:04Z",
        "updatedAt" : "2019-05-09T07:43:18Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "b60ba85c-b5db-4157-bbc1-dce337ee737d",
        "parentId" : "f948abdb-90d2-40fc-869b-9f95a7cbf2bc",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "same with above, re-get the data is not needed because etag is still same.",
        "createdAt" : "2019-05-09T08:25:34Z",
        "updatedAt" : "2019-05-09T08:25:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ca1c832d21c7b6181dd445c453d3fd67061b07b",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +521,525 @@\t\t\treturn true, err\n\t\t}\n\t\treturn done, retryError\n\t})\n}"
  }
]