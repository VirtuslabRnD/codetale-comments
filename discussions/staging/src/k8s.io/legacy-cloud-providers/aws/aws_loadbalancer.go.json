[
  {
    "id" : "c1e2a554-95e9-4211-ad21-e21d3a638ad7",
    "prId" : 101592,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101592#pullrequestreview-649694525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3a7ca14-08ba-401e-9af2-b91609d1595a",
        "parentId" : null,
        "authorId" : "ddc05ecb-1a86-4393-8e22-f1bb528c2d50",
        "body" : "Instead of creating the map first, I think you can get the same logic by just creating the empty set and inserting into it, which is a little easier to read IMO: \r\n\r\n```\r\nfunc (c *Cloud) diffTargetGroupTargets(expectedTargets []*elbv2.TargetDescription, actualTargets []*elbv2.TargetDescription) (targetsToRegister []*elbv2.TargetDescription, targetsToDeregister []*elbv2.TargetDescription) {\r\n\texpectedTargetsUIDs := sets.StringKeySet()\r\n\tactualTargetsUIDs := sets.StringKeySet()\r\n\r\n\tfor _, target := range expectedTargets {\r\n\t\texpectedTargetsUIDs.Insert(fmt.Sprintf(\"%v:%v\", aws.StringValue(target.Id), aws.Int64Value(target.Port)))\r\n\t}\r\n\tactualTargetsByUID := make(map[string]*elbv2.TargetDescription, len(actualTargets))\r\n\tfor _, target := range actualTargets {\r\n\t\tactualTargetsUIDs.Insert(fmt.Sprintf(\"%v:%v\", aws.StringValue(target.Id), aws.Int64Value(target.Port)))\r\n\t}\r\n\r\n\tfor _, targetUID := range expectedTargetsUIDs.Difference(actualTargetsUIDs).List() {\r\n\t\ttargetsToRegister = append(targetsToRegister, expectedTargetsByUID[targetUID])\r\n\t}\r\n\tfor _, targetUID := range actualTargetsUIDs.Difference(expectedTargetsUIDs).List() {\r\n\t\ttargetsToDeregister = append(targetsToDeregister, actualTargetsByUID[targetUID])\r\n\t}\r\n\treturn targetsToRegister, targetsToDeregister\r\n}\r\n\r\n```",
        "createdAt" : "2021-04-30T23:56:23Z",
        "updatedAt" : "2021-05-01T00:00:44Z",
        "lastEditedBy" : "ddc05ecb-1a86-4393-8e22-f1bb528c2d50",
        "tags" : [
        ]
      },
      {
        "id" : "0a5f111b-2c88-4c60-b333-dda3f4455e8a",
        "parentId" : "c3a7ca14-08ba-401e-9af2-b91609d1595a",
        "authorId" : "ffc18181-54e6-47cb-b4d7-20ba5f2495ba",
        "body" : "humm, we need the expectedTargetsByUID, which is UID->target mapping :D ",
        "createdAt" : "2021-05-01T00:09:31Z",
        "updatedAt" : "2021-05-01T00:09:31Z",
        "lastEditedBy" : "ffc18181-54e6-47cb-b4d7-20ba5f2495ba",
        "tags" : [
        ]
      },
      {
        "id" : "55bd52ce-c5b9-4a75-a5d8-a849140a683f",
        "parentId" : "c3a7ca14-08ba-401e-9af2-b91609d1595a",
        "authorId" : "ddc05ecb-1a86-4393-8e22-f1bb528c2d50",
        "body" : "Yeah makes sense, I wasn't paying close attention and thought it was just being used for set construction.  ",
        "createdAt" : "2021-05-01T00:12:09Z",
        "updatedAt" : "2021-05-01T00:12:10Z",
        "lastEditedBy" : "ddc05ecb-1a86-4393-8e22-f1bb528c2d50",
        "tags" : [
        ]
      }
    ],
    "commit" : "a10dd9474ba166f4a8bdac4cbe54a5e1f2cb3047",
    "line" : 179,
    "diffHunk" : "@@ -1,1 +740,744 @@\n// diffTargetGroupTargets computes the targets to register and targets to deregister based on existingTargets and desired instances.\nfunc (c *Cloud) diffTargetGroupTargets(expectedTargets []*elbv2.TargetDescription, actualTargets []*elbv2.TargetDescription) (targetsToRegister []*elbv2.TargetDescription, targetsToDeregister []*elbv2.TargetDescription) {\n\texpectedTargetsByUID := make(map[string]*elbv2.TargetDescription, len(expectedTargets))\n\tfor _, target := range expectedTargets {"
  },
  {
    "id" : "2ccf28f6-a725-4676-8135-28da9e5d8086",
    "prId" : 101592,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101592#pullrequestreview-649693904",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65bc877f-83cc-4717-952c-4fd0a96afa95",
        "parentId" : null,
        "authorId" : "ddc05ecb-1a86-4393-8e22-f1bb528c2d50",
        "body" : "Is 100 the highest we can go?  How many targets does it take to start to cause problems?",
        "createdAt" : "2021-04-30T23:58:19Z",
        "updatedAt" : "2021-05-01T00:00:44Z",
        "lastEditedBy" : "ddc05ecb-1a86-4393-8e22-f1bb528c2d50",
        "tags" : [
        ]
      },
      {
        "id" : "c270a667-facc-4b8a-962c-d15de0fe647c",
        "parentId" : "65bc877f-83cc-4717-952c-4fd0a96afa95",
        "authorId" : "ffc18181-54e6-47cb-b4d7-20ba5f2495ba",
        "body" : "yes, it's the safest number of targets they give us",
        "createdAt" : "2021-05-01T00:08:06Z",
        "updatedAt" : "2021-05-01T00:08:06Z",
        "lastEditedBy" : "ffc18181-54e6-47cb-b4d7-20ba5f2495ba",
        "tags" : [
        ]
      }
    ],
    "commit" : "a10dd9474ba166f4a8bdac4cbe54a5e1f2cb3047",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +68,72 @@\n\t// Defaults for ELB Target operations\n\tdefaultRegisterTargetsChunkSize   = 100\n\tdefaultDeregisterTargetsChunkSize = 100\n)"
  },
  {
    "id" : "b3acbd03-45de-43a6-9047-37c93f276158",
    "prId" : 101592,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101592#pullrequestreview-649694033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4caf631f-b3fb-4c7f-a49e-872bc876478a",
        "parentId" : null,
        "authorId" : "ddc05ecb-1a86-4393-8e22-f1bb528c2d50",
        "body" : "Is there any chance for an \"operation in progress\" type of error here that we would need to check for now?",
        "createdAt" : "2021-05-01T00:00:23Z",
        "updatedAt" : "2021-05-01T00:00:44Z",
        "lastEditedBy" : "ddc05ecb-1a86-4393-8e22-f1bb528c2d50",
        "tags" : [
        ]
      },
      {
        "id" : "5f4d92e5-1d63-4a66-af12-2a27ff56271c",
        "parentId" : "4caf631f-b3fb-4c7f-a49e-872bc876478a",
        "authorId" : "ffc18181-54e6-47cb-b4d7-20ba5f2495ba",
        "body" : "no, there isn't such error as far as i'm aware of. (we used chunked calls for load balancer controller and tested with 1000 targets, haven't saw such error).",
        "createdAt" : "2021-05-01T00:09:03Z",
        "updatedAt" : "2021-05-01T00:09:03Z",
        "lastEditedBy" : "ffc18181-54e6-47cb-b4d7-20ba5f2495ba",
        "tags" : [
        ]
      }
    ],
    "commit" : "a10dd9474ba166f4a8bdac4cbe54a5e1f2cb3047",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +691,695 @@\t\t\t}\n\t\t\tif _, err := c.elbv2.RegisterTargets(req); err != nil {\n\t\t\t\treturn fmt.Errorf(\"error trying to register targets in target group: %q\", err)\n\t\t\t}\n\t\t}"
  },
  {
    "id" : "699b21bb-87bb-4405-bdf4-5226ba5b2964",
    "prId" : 95247,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95247#pullrequestreview-515831325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3fe28e9b-dfe9-4f15-8213-1a0c065c94aa",
        "parentId" : null,
        "authorId" : "0244e65c-a836-449a-bdc5-e89e1afb7ab1",
        "body" : "This is just my $0.02 as a very infrequent contributor, but this code seems to be copy-pasted from here: https://github.com/kubernetes/kubernetes/pull/95247/files#diff-3847bd7a991eef9e3fc1c058562e9a7eac0dbfbcefb28d60c9ce03080eb4caffR371\r\n\r\nI wonder if that code can be taken out of this greater if/else to reduce duplication. The only snag I see is this brief section that comes after where this was copy-pasted from: https://github.com/kubernetes/kubernetes/pull/95247/files#diff-3847bd7a991eef9e3fc1c058562e9a7eac0dbfbcefb28d60c9ce03080eb4caffR375-R388\r\n\r\nHowever, I would think that running it regardless of the great if/else case would not be harmful... not sure what the core maintainers think about this.\r\n\r\nRegardless, I think a comment is needed here. It seems unintuitive to have to do this on creation, so future generations will thank you for explaining it and not relying on git history.",
        "createdAt" : "2020-10-21T18:10:34Z",
        "updatedAt" : "2020-10-21T18:10:39Z",
        "lastEditedBy" : "0244e65c-a836-449a-bdc5-e89e1afb7ab1",
        "tags" : [
        ]
      },
      {
        "id" : "fa66412a-ec1b-4180-8909-18eed44fc764",
        "parentId" : "3fe28e9b-dfe9-4f15-8213-1a0c065c94aa",
        "authorId" : "ba0afbcf-5c9d-474a-8aa1-0440347c4d34",
        "body" : "Thanks for the review and the comments. Your concerns on the maintainability are valid.\r\n\r\nSince the ELBv2 `CreateLoadBalancer` API doesn't support specifying the load balancer attributes, they need to be reconciled separately. Hence the reconcile call immediately after creation. I feel the if-else  block is  ripe for refactor.",
        "createdAt" : "2020-10-23T16:36:32Z",
        "updatedAt" : "2020-10-23T16:36:33Z",
        "lastEditedBy" : "ba0afbcf-5c9d-474a-8aa1-0440347c4d34",
        "tags" : [
        ]
      }
    ],
    "commit" : "53fc51fc2832ec52adc6429d34b0a4d9fefa48fc",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +192,196 @@\t\tif err := c.reconcileLBAttributes(aws.StringValue(loadBalancer.LoadBalancerArn), annotations); err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t} else {\n\t\t// TODO: Sync internal vs non-internal"
  },
  {
    "id" : "b5300ebd-edb8-40d4-860b-cd1330431a19",
    "prId" : 92109,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92109#pullrequestreview-431057159",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "386668ec-f907-431c-b21f-b411e43a9b20",
        "parentId" : null,
        "authorId" : "9be482a0-90db-482a-8b45-44658adcfdf1",
        "body" : "Being a single value for all the ports, won't this misset the security groups if a service exposes some TCP and some UDP services?",
        "createdAt" : "2020-06-13T10:46:47Z",
        "updatedAt" : "2020-06-13T10:46:47Z",
        "lastEditedBy" : "9be482a0-90db-482a-8b45-44658adcfdf1",
        "tags" : [
        ]
      },
      {
        "id" : "e3eb5c18-c588-4815-92b6-0f6c997b11d3",
        "parentId" : "386668ec-f907-431c-b21f-b411e43a9b20",
        "authorId" : "9be482a0-90db-482a-8b45-44658adcfdf1",
        "body" : "Oops, that's not yet supported in k8s either, pending https://github.com/kubernetes/enhancements/pull/1438, which will require more work in here, as we'll need to support the TCP_UDP NLB port type when TCP and UDP services are both requesting the same port, e.g., DNS.",
        "createdAt" : "2020-06-13T11:00:11Z",
        "updatedAt" : "2020-06-13T11:00:11Z",
        "lastEditedBy" : "9be482a0-90db-482a-8b45-44658adcfdf1",
        "tags" : [
        ]
      },
      {
        "id" : "f19ff0b4-c49c-4219-881d-6449bceab06d",
        "parentId" : "386668ec-f907-431c-b21f-b411e43a9b20",
        "authorId" : "ba0afbcf-5c9d-474a-8aa1-0440347c4d34",
        "body" : "This feature requires additional changes.",
        "createdAt" : "2020-06-15T23:22:48Z",
        "updatedAt" : "2020-06-15T23:22:48Z",
        "lastEditedBy" : "ba0afbcf-5c9d-474a-8aa1-0440347c4d34",
        "tags" : [
        ]
      }
    ],
    "commit" : "f76c21cce6237b89f81883cef27b182f825dbab5",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +774,778 @@\t{\n\t\tclientPorts := sets.Int64{}\n\t\tclientProtocol := \"tcp\"\n\t\thealthCheckPorts := sets.Int64{}\n\t\tfor _, port := range portMappings {"
  },
  {
    "id" : "a787533c-87b4-472b-b336-a65003b5132c",
    "prId" : 92109,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92109#pullrequestreview-431113489",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8462dd2-0344-416f-b4d4-fa54c6740e69",
        "parentId" : null,
        "authorId" : "9be482a0-90db-482a-8b45-44658adcfdf1",
        "body" : "This is going to open the tcp port with the same number as the UDP port for health-checks, as the health-check `updateInstanceSecurityGroupForNLBTraffic` call still specifies TCP.",
        "createdAt" : "2020-06-13T10:47:35Z",
        "updatedAt" : "2020-06-13T10:47:35Z",
        "lastEditedBy" : "9be482a0-90db-482a-8b45-44658adcfdf1",
        "tags" : [
        ]
      },
      {
        "id" : "6e19efbe-0ebd-40ef-aac8-8605e0cdce39",
        "parentId" : "e8462dd2-0344-416f-b4d4-fa54c6740e69",
        "authorId" : "9be482a0-90db-482a-8b45-44658adcfdf1",
        "body" : "Note that as far as I can tell, when `externalTrafficPolicy: Local` is set, this is the correct behaviour, as all the ports should have the same `HealthCheckPort`, which was reset earlier to be the relevant `healthCheckNodePort`. So this part might be fine, and the issue needs to be resolved elsewhere.",
        "createdAt" : "2020-06-13T11:28:08Z",
        "updatedAt" : "2020-06-13T11:28:08Z",
        "lastEditedBy" : "9be482a0-90db-482a-8b45-44658adcfdf1",
        "tags" : [
        ]
      },
      {
        "id" : "2202f855-99ef-407b-88a4-663882ed4c35",
        "parentId" : "e8462dd2-0344-416f-b4d4-fa54c6740e69",
        "authorId" : "ba0afbcf-5c9d-474a-8aa1-0440347c4d34",
        "body" : "Ack.",
        "createdAt" : "2020-06-16T02:17:20Z",
        "updatedAt" : "2020-06-16T02:17:21Z",
        "lastEditedBy" : "ba0afbcf-5c9d-474a-8aa1-0440347c4d34",
        "tags" : [
        ]
      }
    ],
    "commit" : "f76c21cce6237b89f81883cef27b182f825dbab5",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +778,782 @@\t\tfor _, port := range portMappings {\n\t\t\tclientPorts.Insert(port.TrafficPort)\n\t\t\thealthCheckPorts.Insert(port.HealthCheckPort)\n\t\t\tif port.TrafficProtocol == string(v1.ProtocolUDP) {\n\t\t\t\tclientProtocol = \"udp\""
  },
  {
    "id" : "b3c5be34-764c-4e32-9794-b7bfbabcb88f",
    "prId" : 78497,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78497#pullrequestreview-244021678",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "237872df-02c3-450d-9c4a-2e80b67d9d75",
        "parentId" : null,
        "authorId" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "body" : "nit: Can you add a doc comment?",
        "createdAt" : "2019-05-30T20:48:02Z",
        "updatedAt" : "2019-05-30T21:55:45Z",
        "lastEditedBy" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "33e6465084c9de9e21a8b796b35479567a6ecc96",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +47,51 @@\tSSLNegotiationPolicyNameFormat = \"k8s-SSLNegotiationPolicy-%s\"\n\n\tlbAttrLoadBalancingCrossZoneEnabled = \"load_balancing.cross_zone.enabled\"\n\tlbAttrAccessLogsS3Enabled           = \"access_logs.s3.enabled\"\n\tlbAttrAccessLogsS3Bucket            = \"access_logs.s3.bucket\""
  },
  {
    "id" : "48ed774c-abd9-4734-bb6b-d43308c19953",
    "prId" : 69263,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69263#pullrequestreview-245771372",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9dbd441a-61b3-4252-8cfd-2ac87d9c6166",
        "parentId" : null,
        "authorId" : "ffc18181-54e6-47cb-b4d7-20ba5f2495ba",
        "body" : "`len(allocationIDs)>index+1` might be better to understand. \r\nBut keep it as it is good enough too(relying on the fact allocationIDs will be either 0 or equal to length of subnetIDs at caller-side).",
        "createdAt" : "2019-06-05T01:10:23Z",
        "updatedAt" : "2019-06-23T01:28:23Z",
        "lastEditedBy" : "ffc18181-54e6-47cb-b4d7-20ba5f2495ba",
        "tags" : [
        ]
      }
    ],
    "commit" : "7767535426b29fc14461083528b0d15493a3262e",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +1361,1365 @@\tfor index, id := range subnetIDs {\n\t\tsm := &elbv2.SubnetMapping{SubnetId: aws.String(id)}\n\t\tif len(allocationIDs) > 0 {\n\t\t\tsm.AllocationId = aws.String(allocationIDs[index])\n\t\t}"
  },
  {
    "id" : "9703735e-81dc-473c-b709-3e5c4a93f5e7",
    "prId" : 102927,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102927#pullrequestreview-704411754",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "993e2979-bd0f-411f-988e-776d8f28ded7",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Would it possible to add a test case to exercise this behavior?",
        "createdAt" : "2021-07-08T16:03:28Z",
        "updatedAt" : "2021-07-08T16:03:32Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "1313b78b-c983-4aad-acb5-c3c7e487a6e2",
        "parentId" : "993e2979-bd0f-411f-988e-776d8f28ded7",
        "authorId" : "ba0afbcf-5c9d-474a-8aa1-0440347c4d34",
        "body" : "I've added the UTs",
        "createdAt" : "2021-07-12T18:18:57Z",
        "updatedAt" : "2021-07-12T18:19:01Z",
        "lastEditedBy" : "ba0afbcf-5c9d-474a-8aa1-0440347c4d34",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc5ff6ab345d9426df47f73e7b91c6636562079",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +1611,1615 @@\n\tcacheCriteria := cacheCriteria{\n\t\tMaxAge:       defaultEC2InstanceCacheMaxAge,\n\t\tHasInstances: instanceIDs, // Refresh if any of the instance ids are missing\n\t}"
  }
]