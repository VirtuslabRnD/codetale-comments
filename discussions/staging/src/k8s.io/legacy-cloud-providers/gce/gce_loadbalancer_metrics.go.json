[
  {
    "id" : "2d038271-b2b1-4f53-b799-b9e90c794a57",
    "prId" : 91700,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91700#pullrequestreview-423975181",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b94110a-4fef-4076-b992-47d8d940c1c8",
        "parentId" : null,
        "authorId" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "body" : "It would be great to have an InError bool to expose a count of ILB services which are in error state. It can be a follow up.",
        "createdAt" : "2020-06-03T18:44:35Z",
        "updatedAt" : "2020-06-04T17:28:30Z",
        "lastEditedBy" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "tags" : [
        ]
      },
      {
        "id" : "2e27efb0-ccac-40a5-a767-708b9983a992",
        "parentId" : "6b94110a-4fef-4076-b992-47d8d940c1c8",
        "authorId" : "c2ad5c1e-821a-42c7-b311-cb3c38848770",
        "body" : "Yes, good idea. But we can only monitor the errors that originate from `ensureInternalLoadBalancer` or its caller `ensureLoadBalancer`. \r\n\r\nWould it be okay to count the services those error out in just `ensureInternalLoadBalancer` method?",
        "createdAt" : "2020-06-03T22:15:18Z",
        "updatedAt" : "2020-06-04T17:28:30Z",
        "lastEditedBy" : "c2ad5c1e-821a-42c7-b311-cb3c38848770",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ca62b80ad5529374b6e2f47bf6afbd9d685b9ed",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +83,87 @@\tEnabledGlobalAccess bool\n\t// EnabledCustomSubNet specifies if Custom Subnet is enabled.\n\tEnabledCustomSubnet bool\n\t// InSuccess specifies if the ILB service VIP is configured.\n\tInSuccess bool"
  },
  {
    "id" : "81b32112-78a2-4aa0-8ab3-d7a97b491a1f",
    "prId" : 91700,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91700#pullrequestreview-423972257",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eef4a746-4837-4fb7-834d-b8c0bb494039",
        "parentId" : null,
        "authorId" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "body" : "Do you need time.Sleep? Looks like wait.Until will block anyway until stopped?",
        "createdAt" : "2020-06-03T18:53:25Z",
        "updatedAt" : "2020-06-04T17:28:30Z",
        "lastEditedBy" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "tags" : [
        ]
      },
      {
        "id" : "360131d5-ec11-4568-a6f4-85225de96922",
        "parentId" : "eef4a746-4837-4fb7-834d-b8c0bb494039",
        "authorId" : "c2ad5c1e-821a-42c7-b311-cb3c38848770",
        "body" : "This is to ensure that the metrics are not exported immediately on controller start up. Maybe we would want to wait for some initial time (in this case 10 minutes) for all the services to sync, before exporting the metrics. ",
        "createdAt" : "2020-06-03T22:03:50Z",
        "updatedAt" : "2020-06-04T17:28:30Z",
        "lastEditedBy" : "c2ad5c1e-821a-42c7-b311-cb3c38848770",
        "tags" : [
        ]
      },
      {
        "id" : "d475c512-5f9d-4ada-876e-23bba2a367a0",
        "parentId" : "eef4a746-4837-4fb7-834d-b8c0bb494039",
        "authorId" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "body" : "ok, makes sense.",
        "createdAt" : "2020-06-03T22:09:08Z",
        "updatedAt" : "2020-06-04T17:28:30Z",
        "lastEditedBy" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ca62b80ad5529374b6e2f47bf6afbd9d685b9ed",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +113,117 @@\tgo func() {\n\t\t// Wait for service states to be populated in the cache before computing metrics.\n\t\ttime.Sleep(metricsInterval)\n\t\twait.Until(lm.export, metricsInterval, stopCh)\n\t}()"
  }
]