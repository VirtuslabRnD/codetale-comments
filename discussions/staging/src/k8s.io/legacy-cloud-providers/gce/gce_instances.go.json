[
  {
    "id" : "9a5f9fbe-6746-45c3-be54-c6cf44a735a2",
    "prId" : 95559,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95559#pullrequestreview-512235876",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bebc6f24-76ea-45f2-b91d-6860c862cd7f",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Maybe not an issue - would there be any risk that we failed to find any node mistakenly and still update the LB?",
        "createdAt" : "2020-10-14T18:49:19Z",
        "updatedAt" : "2020-10-19T23:48:30Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "1345c8ed-65c3-4c42-b794-5344fa7a50b4",
        "parentId" : "bebc6f24-76ea-45f2-b91d-6860c862cd7f",
        "authorId" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "body" : "The one risk I can think of - If GCE instance get calls are failing due to some reason (rate limiting or backend is really down), we will end up updating the TargetPool with 0 instances. Made a change to return error if we got 0 instances back.",
        "createdAt" : "2020-10-19T23:48:39Z",
        "updatedAt" : "2020-10-19T23:48:39Z",
        "lastEditedBy" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d535f1ada39acfd3ca041c0c78c45e58898788c",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +566,570 @@\t\t\treturn nil, cloudprovider.InstanceNotFound\n\t\t}\n\t\tklog.Warningf(\"getFoundInstanceByNames - input instances %d, found %d. Continuing LoadBalancer Update\", len(names), len(foundInstances))\n\t}\n\treturn foundInstances, nil"
  },
  {
    "id" : "dea31f1f-fc99-4bb1-95cc-c6b48b00e918",
    "prId" : 94894,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94894#pullrequestreview-492762858",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6acb865c-944c-4665-9804-b92f9ba1cd88",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "This looks fine to me, but given we merged with this bug, this deserves some unit test.\r\n\r\nCan you please add one?",
        "createdAt" : "2020-09-21T07:05:43Z",
        "updatedAt" : "2020-09-22T09:47:45Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "518c3b11-e2d7-4a0e-9317-9c728649dc00",
        "parentId" : "6acb865c-944c-4665-9804-b92f9ba1cd88",
        "authorId" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "body" : "Done, PTAL.",
        "createdAt" : "2020-09-21T15:59:43Z",
        "updatedAt" : "2020-09-22T09:47:45Z",
        "lastEditedBy" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "7380a58c1955332d328e41092a80284e095fed4a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +265,269 @@\tif providerID == \"\" {\n\t\tvar err error\n\t\tif providerID, err = cloudprovider.GetInstanceProviderID(ctx, g, types.NodeName(node.Name)); err != nil {\n\t\t\tif err == cloudprovider.InstanceNotFound {\n\t\t\t\treturn false, nil"
  },
  {
    "id" : "d845d906-5d29-493f-8d7c-1d7a50a95463",
    "prId" : 94846,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94846#pullrequestreview-491562966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8bcd546c-3f15-4650-bd69-f2838fed5d9a",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Last time I checked, `InstanceID` doesn't actually return the providerID, you need to call `cloudprovider.GetInstanceProviderID` which will call InstanceID.",
        "createdAt" : "2020-09-18T14:07:57Z",
        "updatedAt" : "2020-09-18T14:08:48Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "f23e1e4c-d157-46d0-8767-1b5c1d74aa8d",
        "parentId" : "8bcd546c-3f15-4650-bd69-f2838fed5d9a",
        "authorId" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "body" : "How about raising a new pr to fix it?",
        "createdAt" : "2020-09-18T14:30:25Z",
        "updatedAt" : "2020-09-18T14:30:25Z",
        "lastEditedBy" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "tags" : [
        ]
      },
      {
        "id" : "cf730edc-c9fa-42dc-a394-31a18870f013",
        "parentId" : "8bcd546c-3f15-4650-bd69-f2838fed5d9a",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "great catch - @gongguan - can you please fix?\r\n\r\nAlso - it would be good to add a test for this to avoid regressing in the future.",
        "createdAt" : "2020-09-18T14:30:45Z",
        "updatedAt" : "2020-09-18T14:30:45Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "f4c9d12d-68c0-4d0d-b979-7f26562ad4ff",
        "parentId" : "8bcd546c-3f15-4650-bd69-f2838fed5d9a",
        "authorId" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "body" : "See #94894",
        "createdAt" : "2020-09-18T15:20:52Z",
        "updatedAt" : "2020-09-18T15:20:52Z",
        "lastEditedBy" : "ffdbc0a5-19fd-4509-a56e-a4979ac0c1d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "16cc4ef823b90fdcd8fb774d72b2bdf2b258c4de",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +265,269 @@\tif providerID == \"\" {\n\t\tvar err error\n\t\tif providerID, err = g.InstanceID(ctx, types.NodeName(node.Name)); err != nil {\n\t\t\treturn false, err\n\t\t}"
  },
  {
    "id" : "52cf052d-9106-49a3-b3bd-0dfd3e5afea8",
    "prId" : 94846,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94846#pullrequestreview-491499442",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc17144e-5a24-4b6f-b99b-a3e51e0f4935",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "same comment here about provider ID",
        "createdAt" : "2020-09-18T14:08:21Z",
        "updatedAt" : "2020-09-18T14:08:48Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "16cc4ef823b90fdcd8fb774d72b2bdf2b258c4de",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +280,284 @@\tif providerID == \"\" {\n\t\tvar err error\n\t\tif providerID, err = g.InstanceID(ctx, types.NodeName(node.Name)); err != nil {\n\t\t\treturn nil, err\n\t\t}"
  },
  {
    "id" : "45c8c2f0-9b2f-4bc0-ae8a-f799b0a10b63",
    "prId" : 90894,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90894#pullrequestreview-410877462",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60152014-325c-4e2f-9ad9-756fdd545f22",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Can you please factor this out to a separate function (nodeAddressesFromGCEInstance) and share it between this and the NodeAddressesByProviderID functions?",
        "createdAt" : "2020-05-13T12:46:32Z",
        "updatedAt" : "2020-05-20T01:21:58Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "2bc41361-0cd8-467e-ab0d-3d2775feebcb",
        "parentId" : "60152014-325c-4e2f-9ad9-756fdd545f22",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "It seems the same comment holds for some other cloud providers (vsphere is what I looked at).",
        "createdAt" : "2020-05-13T12:53:03Z",
        "updatedAt" : "2020-05-20T01:21:58Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "24fe349ddf29ff599772cb9f3e640a8675cfa291",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +183,187 @@\nfunc nodeAddressesFromInstance(instance *compute.Instance) ([]v1.NodeAddress, error) {\n\tif len(instance.NetworkInterfaces) < 1 {\n\t\treturn nil, fmt.Errorf(\"could not find network interfaces for instanceID %q\", instance.Id)\n\t}"
  },
  {
    "id" : "a83002ee-9c1b-4a31-b96e-a9a45e8fa263",
    "prId" : 90738,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90738#pullrequestreview-409687723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce71a72b-b44d-4979-85fd-4330bb08a03a",
        "parentId" : null,
        "authorId" : "0d33f77d-3ab4-4399-8f80-b3875b915446",
        "body" : "What is the point of creating new context here?",
        "createdAt" : "2020-05-11T14:35:03Z",
        "updatedAt" : "2020-06-02T11:38:35Z",
        "lastEditedBy" : "0d33f77d-3ab4-4399-8f80-b3875b915446",
        "tags" : [
        ]
      },
      {
        "id" : "7f1edd61-95e3-4750-b243-f14fb0ef0424",
        "parentId" : "ce71a72b-b44d-4979-85fd-4330bb08a03a",
        "authorId" : "9bbbb190-9c87-44c2-ac87-898d95fc4d70",
        "body" : "To pass to the GCE API, consistent with the NodeAddressesByProviderID function",
        "createdAt" : "2020-05-11T19:02:29Z",
        "updatedAt" : "2020-06-02T11:38:35Z",
        "lastEditedBy" : "9bbbb190-9c87-44c2-ac87-898d95fc4d70",
        "tags" : [
        ]
      },
      {
        "id" : "5ed0a106-f80e-43a2-a8cc-3db37d1fca97",
        "parentId" : "ce71a72b-b44d-4979-85fd-4330bb08a03a",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Still not sure the point of creating a new context with a 1 hour timeout. I agree we need to pass the context to the GCE API but we can just pass in the passed in context. The 1 hour timeout seems too long to be useful but if we want to do this we should probably make the timeout configurable.",
        "createdAt" : "2020-05-12T04:20:20Z",
        "updatedAt" : "2020-06-02T11:38:35Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd1f029cd99c3d6ae02fa199d0afce7d9362d59a",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +85,89 @@// NodeAddresses is an implementation of Instances.NodeAddresses.\nfunc (g *Cloud) NodeAddresses(ctx context.Context, nodeName types.NodeName) ([]v1.NodeAddress, error) {\n\ttimeoutCtx, cancel := context.WithTimeout(ctx, 1*time.Hour)\n\tdefer cancel()\n"
  },
  {
    "id" : "0987618f-a161-4c24-bb53-bd241a20fc3f",
    "prId" : 90738,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90738#pullrequestreview-409221065",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1436c5d4-a59a-4ecd-adb0-c1380433a1f4",
        "parentId" : null,
        "authorId" : "0d33f77d-3ab4-4399-8f80-b3875b915446",
        "body" : "Nit: mind avoiding excessive empty lines so that future readers can have a easier time reading through?\r\n```suggestion\r\n// Use metadata server if possible\r\n```",
        "createdAt" : "2020-05-11T14:39:37Z",
        "updatedAt" : "2020-06-02T11:38:35Z",
        "lastEditedBy" : "0d33f77d-3ab4-4399-8f80-b3875b915446",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd1f029cd99c3d6ae02fa199d0afce7d9362d59a",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +93,97 @@\t\t// Use metadata server if possible\n\t\tif g.isCurrentInstance(instanceName) {\n\n\t\t\tinternalIP, err := metadata.Get(\"instance/network-interfaces/0/ip\")\n\t\t\tif err != nil {"
  },
  {
    "id" : "d7b6c19a-d6e2-4a0d-bb82-be53753bcdc1",
    "prId" : 81771,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81771#pullrequestreview-279257346",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b982ef4-2495-4a23-956b-2649193b2eaf",
        "parentId" : null,
        "authorId" : "f4cbfe41-7752-4307-82ba-fe488b014827",
        "body" : "Isn't this still inherently ignoring the context that was passed in as an argument? What happens if the provided context already has a timeout associated with it, or gets cancelled?",
        "createdAt" : "2019-08-22T14:18:00Z",
        "updatedAt" : "2019-08-24T02:16:03Z",
        "lastEditedBy" : "f4cbfe41-7752-4307-82ba-fe488b014827",
        "tags" : [
        ]
      },
      {
        "id" : "22f3acb2-b187-4697-8788-ed978f1303ff",
        "parentId" : "3b982ef4-2495-4a23-956b-2649193b2eaf",
        "authorId" : "ae15cfb8-5436-4398-94e0-d443e413b257",
        "body" : "Good question :) \r\n\r\nRefer this: #64630  by @nicksardo \r\n\r\nMaybe we can do something to remove doubts.  Can @nicksardo share comments?\r\n",
        "createdAt" : "2019-08-22T15:53:41Z",
        "updatedAt" : "2019-08-24T02:16:03Z",
        "lastEditedBy" : "ae15cfb8-5436-4398-94e0-d443e413b257",
        "tags" : [
        ]
      },
      {
        "id" : "13777580-c316-46cc-aed4-e4dee35d9664",
        "parentId" : "3b982ef4-2495-4a23-956b-2649193b2eaf",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Seems like this is an existing bug. I don't know the best way to fix it --- we can't just change the function signature and remove the outer context as that is defined on the [cloud interface](https://github.com/kubernetes/cloud-provider/blob/master/cloud.go). It might also be risky to simply respect the outer context as we added timeout the context due to reasons stated in https://github.com/kubernetes/kubernetes/pull/64630.\r\n\r\nFile https://github.com/kubernetes/kubernetes/issues/81874 as for tracking purpose. Can we probably keep the existing logic and focus on the static analysis issues here?",
        "createdAt" : "2019-08-23T23:25:10Z",
        "updatedAt" : "2019-08-24T02:16:03Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b6ac364f8efaf6d2e9aeebe9f6c6017178ec801",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +112,116 @@// i.e. metadata service and other local methods cannot be used here\nfunc (g *Cloud) NodeAddressesByProviderID(ctx context.Context, providerID string) ([]v1.NodeAddress, error) {\n\ttimeoutCtx, cancel := cloud.ContextWithCallTimeout()\n\tdefer cancel()\n"
  }
]