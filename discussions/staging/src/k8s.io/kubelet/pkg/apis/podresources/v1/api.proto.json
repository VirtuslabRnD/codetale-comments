[
  {
    "id" : "51ff1220-e6cd-4dc5-af87-26bcc268f1f6",
    "prId" : 95734,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95734#pullrequestreview-539978630",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27231afb-0f3e-4c96-bd06-f4c63efa7b3d",
        "parentId" : null,
        "authorId" : "0256f278-5fde-47c1-903d-e6c066b15f1b",
        "body" : "for the sake of completeness, this should be made to include *all* container resources. There are use cases where, e.g., extended resources add value to get the big picture so be able to monitor full set of container resources is important.",
        "createdAt" : "2020-11-27T10:08:28Z",
        "updatedAt" : "2021-03-09T15:40:18Z",
        "lastEditedBy" : "0256f278-5fde-47c1-903d-e6c066b15f1b",
        "tags" : [
        ]
      },
      {
        "id" : "47789c3a-8d71-4bd2-a801-6ae397256802",
        "parentId" : "27231afb-0f3e-4c96-bd06-f4c63efa7b3d",
        "authorId" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "body" : "AFAIU this is an implementation detail and don't requires API (or KEP) changes, right?",
        "createdAt" : "2020-11-27T10:50:51Z",
        "updatedAt" : "2021-03-09T15:40:18Z",
        "lastEditedBy" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "tags" : [
        ]
      },
      {
        "id" : "09a46109-7e04-4b8b-8814-6fc90b19075d",
        "parentId" : "27231afb-0f3e-4c96-bd06-f4c63efa7b3d",
        "authorId" : "0256f278-5fde-47c1-903d-e6c066b15f1b",
        "body" : "`AllocatableResourceResponse`  likely needs changes but it's in this PR so changes are possible.\r\n\r\nTo give an idea about the gap: I have a device plugin (`sgx.intel.com/enclave`) to allow containers to use devices nodes (`/dev/sgx_enclave`) and a separate extended resource to track how much SGX memory is needed (`sgx.intel.com/epc`).\r\n\r\nWith this API, I'm currently not able to monitor how much SGX memory each container is using. I can only see who are using the device node (which carries no resource information a such).",
        "createdAt" : "2020-11-27T11:53:13Z",
        "updatedAt" : "2021-03-09T15:40:18Z",
        "lastEditedBy" : "0256f278-5fde-47c1-903d-e6c066b15f1b",
        "tags" : [
        ]
      },
      {
        "id" : "7699d648-f95c-4607-b14e-df670d60b7e0",
        "parentId" : "27231afb-0f3e-4c96-bd06-f4c63efa7b3d",
        "authorId" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "body" : "Thanks for presenting this use case. \r\n\r\nThis use case seems more a possible a gap in the List() endpoint rather in the `GetAllocatableResources` endpoint (which this PR concerns to).\r\nIn `GetAllocatableResources` we want to report how many resources does the node have, not the details of their usage (both in the sense of which pod uses them and the details of each resource usage, in this example the memory amount).\r\nIt still seems to me we need no changes in the `api,proto` spec. We can implement the reporting of the external resources, possibly in another PR.\r\n\r\nIn any case, should we need an `api.proto` extension, we will need to amend the KEP, which calls for more, separate PRs.\r\n",
        "createdAt" : "2020-11-27T12:02:46Z",
        "updatedAt" : "2021-03-09T15:40:18Z",
        "lastEditedBy" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "tags" : [
        ]
      },
      {
        "id" : "9398e9e9-66fd-4c92-8a87-fad017ebc7f1",
        "parentId" : "27231afb-0f3e-4c96-bd06-f4c63efa7b3d",
        "authorId" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "body" : "KEP describing the original podresources API: https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/606-compute-device-assignment\r\nKEP extension this PR is (partially) implementing: https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/2043-pod-resource-concrete-assigments",
        "createdAt" : "2020-11-27T12:09:06Z",
        "updatedAt" : "2021-03-09T15:40:18Z",
        "lastEditedBy" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "tags" : [
        ]
      },
      {
        "id" : "bf553e11-9718-4b27-a1f1-43c9151a1860",
        "parentId" : "27231afb-0f3e-4c96-bd06-f4c63efa7b3d",
        "authorId" : "0256f278-5fde-47c1-903d-e6c066b15f1b",
        "body" : "> In any case, should we need an api.proto extension, we will need to amend the KEP, which calls for more, separate PRs.\r\n\r\n@frobware thanks for sharing the KEPs! I had missed the original one. I'll need to take a closer look which one (or is it both) need updates ",
        "createdAt" : "2020-11-27T13:26:15Z",
        "updatedAt" : "2021-03-09T15:40:18Z",
        "lastEditedBy" : "0256f278-5fde-47c1-903d-e6c066b15f1b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e7bb20c52e452a7ca061ca1dda1936e9df1f266",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +27,31 @@message AllocatableResourcesResponse {\n    repeated ContainerDevices devices = 1;\n    repeated int64 cpu_ids = 2;\n}\n"
  },
  {
    "id" : "40f6f839-29e0-439c-8e16-4f870647394e",
    "prId" : 95734,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95734#pullrequestreview-604913390",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6095649-40c8-4c47-9fae-8516cc247b06",
        "parentId" : null,
        "authorId" : "8eff55b7-2f52-4dd6-b8a6-b75a1c427179",
        "body" : "Why not just have this return a `repeated ContainerResources` instead of duplicating the fields of this in here?",
        "createdAt" : "2021-03-04T12:02:32Z",
        "updatedAt" : "2021-03-09T15:40:18Z",
        "lastEditedBy" : "8eff55b7-2f52-4dd6-b8a6-b75a1c427179",
        "tags" : [
        ]
      },
      {
        "id" : "a8f2f242-4ce2-448e-9d7c-4247ed918ee9",
        "parentId" : "f6095649-40c8-4c47-9fae-8516cc247b06",
        "authorId" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "body" : "I need to doublecheck the revision history, but I think we can change as you suggested, which seems nicer indeed.",
        "createdAt" : "2021-03-04T13:11:50Z",
        "updatedAt" : "2021-03-09T15:40:18Z",
        "lastEditedBy" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "tags" : [
        ]
      },
      {
        "id" : "c627a639-63a6-4ad1-a599-304123ce7ad6",
        "parentId" : "f6095649-40c8-4c47-9fae-8516cc247b06",
        "authorId" : "38db888a-e196-4a62-9357-0fcd42a50015",
        "body" : "`AllocatableResourcesResponse`  should return cumulative data of all the devices and cpus known to kubelet i.e. data corresponding to not only resources allocated to containers but also the ones that haven't been allocated. Therefore, we should keep it the way we have it now instead of using `repeated ContainerResources` because changing to `repeated ContainerResources` would mean we would only account for resources that have been allocated to containers.",
        "createdAt" : "2021-03-04T17:15:46Z",
        "updatedAt" : "2021-03-09T15:40:18Z",
        "lastEditedBy" : "38db888a-e196-4a62-9357-0fcd42a50015",
        "tags" : [
        ]
      },
      {
        "id" : "7d687320-4ca9-4154-b35e-e6a25f0d5b2b",
        "parentId" : "f6095649-40c8-4c47-9fae-8516cc247b06",
        "authorId" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "body" : "Thanks @swatisehgal! It boils down to how resources are accounted indeed and how we report to clients; yes, there are similarities, but reusing the `ContainerResources`, albeit doable (the fields are indeed similar) will make harder for the clients to consume the data. Therefore I'm keeping the current API.",
        "createdAt" : "2021-03-05T08:40:15Z",
        "updatedAt" : "2021-03-09T15:40:18Z",
        "lastEditedBy" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e7bb20c52e452a7ca061ca1dda1936e9df1f266",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +27,31 @@message AllocatableResourcesResponse {\n    repeated ContainerDevices devices = 1;\n    repeated int64 cpu_ids = 2;\n}\n"
  }
]