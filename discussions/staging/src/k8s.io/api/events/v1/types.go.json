[
  {
    "id" : "67e29f9b-c1be-4a1b-8f2a-5b2cdad5a12e",
    "prId" : 94910,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94910#pullrequestreview-494954143",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07ed6ca2-f5e7-4d10-bef2-ffef20cc34eb",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Given you touch this file, if you create objects with the new API, more fields are actually required\r\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/apis/core/validation/events.go#L41\r\n\r\nxref https://github.com/kubernetes/kubernetes/issues/94748\r\n\r\nCan you please fix that in the same PR too?",
        "createdAt" : "2020-09-22T06:47:22Z",
        "updatedAt" : "2020-10-05T09:59:59Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "47c4d549-551b-4052-9770-c7abe18ab52e",
        "parentId" : "07ed6ca2-f5e7-4d10-bef2-ffef20cc34eb",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Also, please fix the v1beta1 api group.",
        "createdAt" : "2020-09-22T06:48:09Z",
        "updatedAt" : "2020-10-05T09:59:59Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "1d9dc20b-6f12-4ab8-bc5c-5b53637e50e7",
        "parentId" : "07ed6ca2-f5e7-4d10-bef2-ffef20cc34eb",
        "authorId" : "8feb1afb-5c8c-48d9-95b8-2818c56c81e4",
        "body" : "> Given you touch this file, if you create objects with the new API, more fields are actually required\r\n> https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/core/validation/events.go#L41\r\n> \r\n> xref #94748\r\n> \r\n> Can you please fix that in the same PR too?\r\n\r\n I have a doubt here. So, by \"fixing\", do you mean that I should edit the validation checks for events so that the strict validations should not be necessary even in case of `events.k8s.io/Event` and a minimal event can be successfully generated even by the following manifest:  (because this seems to be what is asked and requested in [ #94748  ])\r\n```\r\napiVersion: events.k8s.io/v1\r\nkind: Event\r\nmetadata:\r\n   name: sample-event\r\n```\r\n**OR**\r\nDo you mean that I should just add \"_Required_\" comments under `type Event` (inside `staging/src/k8s.io/api/events/v1/types.go`) so as to convey that the corresponding fields are actually required by the Validator function?\r\n\r\nPS: for v1beta1 api group, I have made the rightful changes locally.\r\n\r\n",
        "createdAt" : "2020-09-23T18:36:22Z",
        "updatedAt" : "2020-10-05T09:59:59Z",
        "lastEditedBy" : "8feb1afb-5c8c-48d9-95b8-2818c56c81e4",
        "tags" : [
        ]
      },
      {
        "id" : "c2b4e61d-2763-4f14-8fdd-0b3da165b770",
        "parentId" : "07ed6ca2-f5e7-4d10-bef2-ffef20cc34eb",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "> Do you mean that I should just add \"Required\" comments under type Event (inside staging/src/k8s.io/api/events/v1/types.go) so as to convey that the corresponding fields are actually required by the Validator function?\r\n\r\nYes - this one.",
        "createdAt" : "2020-09-23T18:44:02Z",
        "updatedAt" : "2020-10-05T09:59:59Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "2cd44a2a-5c02-4673-a550-4936018a4125",
        "parentId" : "07ed6ca2-f5e7-4d10-bef2-ffef20cc34eb",
        "authorId" : "8feb1afb-5c8c-48d9-95b8-2818c56c81e4",
        "body" : "Alright. On it!",
        "createdAt" : "2020-09-23T18:49:39Z",
        "updatedAt" : "2020-10-05T09:59:59Z",
        "lastEditedBy" : "8feb1afb-5c8c-48d9-95b8-2818c56c81e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "07d0b4a8bcbb0ebd942ed485376e3f08cdf3b43e",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +28,32 @@type Event struct {\n\tmetav1.TypeMeta `json:\",inline\"`\n\n\tmetav1.ObjectMeta `json:\"metadata\" protobuf:\"bytes,1,opt,name=metadata\"`\n"
  },
  {
    "id" : "cf49d4b6-4234-461e-9e3e-9703768d4898",
    "prId" : 91645,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91645#pullrequestreview-422727588",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac9b7600-fda4-4592-bc34-19e05cccd701",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "FYI: we generally auto-generated the protobuf tags instead of manually writing them. But given you did that already, that's fine :)",
        "createdAt" : "2020-06-02T11:21:11Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "e1624dd5-3dbe-4862-a7fd-644d4b8154ec",
        "parentId" : "ac9b7600-fda4-4592-bc34-19e05cccd701",
        "authorId" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "body" : "Good to know. Thanks!",
        "createdAt" : "2020-06-02T14:19:11Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c90330d8f4ca9fd980df24044960a4d8bb28a780",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@\tmetav1.TypeMeta `json:\",inline\"`\n\t// +optional\n\tmetav1.ObjectMeta `json:\"metadata,omitempty\" protobuf:\"bytes,1,opt,name=metadata\"`\n\n\t// eventTime is the time when this Event was first observed. It is required."
  },
  {
    "id" : "accea35e-c6bd-49ff-b08f-d6ac765f347a",
    "prId" : 91645,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91645#pullrequestreview-427556174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "105423c6-7826-4f0d-a0f5-7f7e63f4394a",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "global doc comments:\r\n\r\n1. start each field's godoc with the json-serialized name\r\n2. note any validation requirements (max length, format restrictions, enum valid values, etc)\r\n3. note the purpose of string fields when needed (are they machine-readable? human-readable?)\r\n",
        "createdAt" : "2020-06-08T21:40:58Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "853e18f8-a79b-4db3-a588-ddd004832a89",
        "parentId" : "105423c6-7826-4f0d-a0f5-7f7e63f4394a",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I passed that, because it is exact copy of v1beta1 (which apparently passed API review in the past?)\r\nSo if we will be changing it here, we should also change the v1beta1 types.\r\n\r\n",
        "createdAt" : "2020-06-09T07:49:03Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "cd1c00c5-5357-459e-bb8e-28d8a362bee9",
        "parentId" : "105423c6-7826-4f0d-a0f5-7f7e63f4394a",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "then we should also change the v1beta1 docs... by promoting this to v1 we are effectively saying it is done... the documentation quality and completeness should reflect that.",
        "createdAt" : "2020-06-09T13:48:30Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e7f05b75-4692-4fe0-a3c9-7632f4e7a5ec",
        "parentId" : "105423c6-7826-4f0d-a0f5-7f7e63f4394a",
        "authorId" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "body" : "Hi Jordan, I'm a bit confused about the requirements you mentioned:\r\n1. What do you mean by starting godoc with json-serialized name? Do you mean the doc for each field should start with the field name? Could you give me an example?\r\n2. I didn't find any explicit docs talking about the validation requirements. Do you have any links or examples?\r\n3. Do you mean I should mention in the godoc whether it's machine or human readable for string fields?",
        "createdAt" : "2020-06-09T16:52:48Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "tags" : [
        ]
      },
      {
        "id" : "ac6858e9-5c91-4a3f-89dc-5fddc4cb789c",
        "parentId" : "105423c6-7826-4f0d-a0f5-7f7e63f4394a",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "In general, event producers and consumers should be able to write against the API by reading our API docs. As a concrete example, running this command should describe what I need to know to write against the `events.k8s.io/v1` API:\r\n\r\n```sh\r\nkubectl explain events --api-version events.k8s.io/v1\r\n```\r\n\r\n> What do you mean by starting godoc with json-serialized name? Do you mean the doc for each field should start with the field name? Could you give me an example?\r\n\r\nFor example, for the `ReportingController` field, since its JSON tag is `reportingController`, the doc would start with something like `reportingController contains the name of the controller ...`\r\n\r\n> I didn't find any explicit docs talking about the validation requirements. Do you have any links or examples?\r\n\r\nThe format requirements, maximum lengths, or allowed values expressed in `ValidateEvent()` should be briefly described in the godocs, so a producer doesn't have to experiment with the API or read the source code to write against it successfully.\r\n\r\n> Do you mean I should mention in the godoc whether it's machine or human readable for string fields?\r\n\r\nYes, especially for fields like `action` and `reason`, it's not clear if these are supposed to be selected from a known set, or are programmatic identifiers, etc",
        "createdAt" : "2020-06-09T20:06:15Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "3d38db8b-ee62-43a6-9d1e-293e79d45e29",
        "parentId" : "105423c6-7826-4f0d-a0f5-7f7e63f4394a",
        "authorId" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "body" : "Thanks Jordan for the detailed explanation! I've updated docs for both v1 and v1beta. Please take a look and let me know if there's anything I should change. Thanks!",
        "createdAt" : "2020-06-09T21:24:07Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c90330d8f4ca9fd980df24044960a4d8bb28a780",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n\n// Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system.\ntype Event struct {\n\tmetav1.TypeMeta `json:\",inline\"`"
  },
  {
    "id" : "78ca990a-71b0-4cd2-8e8f-fc1b98902be2",
    "prId" : 91645,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91645#pullrequestreview-432118385",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71408f2c-7125-4965-8583-2bea23718e96",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "looking at ValidateEvent, it's unclear to me how the validation actually works... it looks like:\r\n\r\nif this field is zero-value:\r\n* only the namespace of the event and of involvedObject is verified to match\r\n* none of the other fields are validated\r\n\r\nif this field is non-zero-value:\r\n* the involved object namespace is allowed to mismatch\r\n\r\nThere's the following comment in ValidateEvent:\r\n```go\r\n// \"New\" Events need to have EventTime set, so it's validating old object.\r\n```\r\nbut I don't see where that is enforced (the event strategy and defaulting doesn't populate EventTime that I can see, and the strategy and validation don't seem to prevent clearing EventTime on update of an existing event)",
        "createdAt" : "2020-06-08T21:46:55Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "6c600b0a-9033-46ac-8b09-4be8f6542db4",
        "parentId" : "71408f2c-7125-4965-8583-2bea23718e96",
        "authorId" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "body" : "@wojtek-t \r\n@yastij \r\nI'm not sure how Strategy is being used when creating and updating Events. To me it seems only to check fields based on EventTime availability, but doesn't do anything with EventTime field. Any thoughts about how to improve this?",
        "createdAt" : "2020-06-09T20:35:07Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "tags" : [
        ]
      },
      {
        "id" : "d2e5768e-8fe0-46b1-b845-389174056ae0",
        "parentId" : "71408f2c-7125-4965-8583-2bea23718e96",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the if/else has a comment that the looser validation is for compatibility with existing clients. API version boundaries are the right time to start enforcing validation consistently via the new API (since existing clients won't be using the v1 API, and we can validate event creation more strictly via the new v1 API). As an example, you can see how we validate CertificateSigningRequests more strictly via the v1 API (https://github.com/kubernetes/kubernetes/blob/master/pkg/registry/certificates/certificates/strategy.go#L96-L100)",
        "createdAt" : "2020-06-09T20:37:56Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "91bc0e5c-9985-443c-b2a4-19579ee89639",
        "parentId" : "71408f2c-7125-4965-8583-2bea23718e96",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I agree with Jordan. And it shouldn't be hard to separate that logic - it's already well splited between old and new event.",
        "createdAt" : "2020-06-10T10:09:57Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "5f1eece6-8635-41a5-b312-5fdd3c527053",
        "parentId" : "71408f2c-7125-4965-8583-2bea23718e96",
        "authorId" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "body" : "I've added a new validation lib under pkg/apis/events. Please take a look and let me know if there's anything missing.",
        "createdAt" : "2020-06-10T15:10:02Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "tags" : [
        ]
      },
      {
        "id" : "3feaac7d-f81c-4613-8a78-67aabe27a684",
        "parentId" : "71408f2c-7125-4965-8583-2bea23718e96",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "The new validation was added - I'm resolving this comment. We can continue discussing on the new validation file.",
        "createdAt" : "2020-06-17T07:18:14Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c90330d8f4ca9fd980df24044960a4d8bb28a780",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@\n\t// eventTime is the time when this Event was first observed. It is required.\n\tEventTime metav1.MicroTime `json:\"eventTime\" protobuf:\"bytes,2,opt,name=eventTime\"`\n\n\t// series is data about the Event series this event represents or nil if it's a singleton Event."
  },
  {
    "id" : "d8a47031-c095-4940-adda-0bb4f95ba1f3",
    "prId" : 91645,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91645#pullrequestreview-428156367",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d0f8451-7161-48ec-b90f-85a833744baf",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "is the value in this field validated and limited to \"\", \"Normal\", and \"Warning\"? I don't see it referenced in ValidateEvent. If it isn't, and we decide to add validation, the tighter validation would need to be limited to requests made via the `v1` API",
        "createdAt" : "2020-06-10T05:04:56Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d90b4a52-31ac-4d97-a0ae-0e2f83cbf3a0",
        "parentId" : "4d0f8451-7161-48ec-b90f-85a833744baf",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Yes - we do validate at the reporting library level:\r\nhttps://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/tools/events/event_recorder.go#L56\r\n\r\nWe should also add that validation at the API level as Jordan suggested.",
        "createdAt" : "2020-06-10T10:16:10Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "e45a294e-5f72-4356-b935-8f8df90a7db0",
        "parentId" : "4d0f8451-7161-48ec-b90f-85a833744baf",
        "authorId" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "body" : "To clarify, do you mean to add the validation in ValidateEvent function?",
        "createdAt" : "2020-06-10T13:23:36Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "tags" : [
        ]
      },
      {
        "id" : "6103686e-87b1-492d-b9a3-4d4a18f756a4",
        "parentId" : "4d0f8451-7161-48ec-b90f-85a833744baf",
        "authorId" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "body" : "I've added a check in the ValidateEvent function in new validation lib.",
        "createdAt" : "2020-06-10T15:11:08Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c90330d8f4ca9fd980df24044960a4d8bb28a780",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +78,82 @@\t// It is machine-readable.\n\t// +optional\n\tType string `json:\"type,omitempty\" protobuf:\"bytes,11,opt,name=type\"`\n\n\t// deprecatedSource is the deprecated field assuring backward compatibility with core.v1 Event type."
  },
  {
    "id" : "108c4721-7bd6-452d-bc23-8ebf3a038366",
    "prId" : 91645,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91645#pullrequestreview-436745577",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ca42789-86a7-434f-aa17-89c2c0045bb5",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Add a comments whether it is optional or required.",
        "createdAt" : "2020-06-24T08:54:19Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "895bed2e-8b5b-4a5e-8417-ed36afb11688",
        "parentId" : "4ca42789-86a7-434f-aa17-89c2c0045bb5",
        "authorId" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "body" : "Done. Also updated v1beta1.",
        "createdAt" : "2020-06-24T15:11:23Z",
        "updatedAt" : "2020-07-01T14:50:59Z",
        "lastEditedBy" : "781e3c0d-abea-40c3-b85c-b2e6c69c0f1b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c90330d8f4ca9fd980df24044960a4d8bb28a780",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +56,60 @@\t// This field can have at most 128 characters.\n\t// +optional\n\tReason string `json:\"reason,omitempty\" protobuf:\"bytes,7,name=reason\"`\n\n\t// regarding contains the object this Event is about. In most cases it's an Object reporting controller"
  }
]