[
  {
    "id" : "eace2d77-0a00-4cc7-aba0-0ebb9594cec8",
    "prId" : 51638,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51638#pullrequestreview-59836471",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d44239a-4688-4f0d-8b01-e7821631a4a3",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This looks very wrong.  Having scale defined locally like this means that either someone tweaked the hpa controller (very naughty) or it doesn't work with hpa, right?",
        "createdAt" : "2017-08-30T16:53:30Z",
        "updatedAt" : "2017-09-01T12:26:04Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "7907d2db-c425-422c-87b6-a6bbab5db3a0",
        "parentId" : "9d44239a-4688-4f0d-8b01-e7821631a4a3",
        "authorId" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "body" : "@deads2k yeah, I wondered why apps.Scale exists... Thought there is just one Scale that should be used everywhere.",
        "createdAt" : "2017-08-30T16:55:01Z",
        "updatedAt" : "2017-09-01T12:26:04Z",
        "lastEditedBy" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "tags" : [
        ]
      },
      {
        "id" : "c034271b-19c9-46f1-a4af-14177f53157b",
        "parentId" : "9d44239a-4688-4f0d-8b01-e7821631a4a3",
        "authorId" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "body" : "@DirectXMan12 @deads2k I check the `podautoscaler/horizontal.go` and what it does is `scale = Get() -> ext.Scale`  and then `Update(kind, scale)`...\r\n\r\nIt seems like the Scale struct in this group was copied by mistake and it is not used anywhere? Also I guess we should have just one Scale (looks like autoscaling group would be a good destination for this). WDYT?",
        "createdAt" : "2017-08-31T10:04:04Z",
        "updatedAt" : "2017-09-01T12:26:04Z",
        "lastEditedBy" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "tags" : [
        ]
      },
      {
        "id" : "4133471f-b514-4cb4-8c2c-74fc643a0b90",
        "parentId" : "9d44239a-4688-4f0d-8b01-e7821631a4a3",
        "authorId" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "body" : "@deads2k i don't think this is a blocker for this PR, once we start plumbing the code to use this new client methods, the first thing we have to do is reconcile the `Scale` usage in kube and regenerate the client to pickup whatever destination we pick for it. Agree?",
        "createdAt" : "2017-08-31T10:05:08Z",
        "updatedAt" : "2017-09-01T12:26:04Z",
        "lastEditedBy" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "tags" : [
        ]
      },
      {
        "id" : "92f2e271-d6b0-4dda-9dc1-f5c51eeb93e4",
        "parentId" : "9d44239a-4688-4f0d-8b01-e7821631a4a3",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> @deads2k i don't think this is a blocker for this PR, once we start plumbing the code to use this new client methods, the first thing we have to do is reconcile the Scale usage in kube and regenerate the client to pickup whatever destination we pick for it. Agree?\r\n\r\nIt's not a blocker.  I don't want you to change types here.  I think someone was confused.",
        "createdAt" : "2017-08-31T12:06:42Z",
        "updatedAt" : "2017-09-01T12:26:04Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d2be1c521dc7f93ae3f83dd123199963598c938",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +78,82 @@\n// +genclient\n// +genclient:method=GetScale,verb=get,subresource=scale,result=Scale\n// +genclient:method=UpdateScale,verb=update,subresource=scale,input=Scale,result=Scale\n// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object"
  },
  {
    "id" : "c9486fa0-b6fc-45b0-9361-df6bc036f9ed",
    "prId" : 49607,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49607#pullrequestreview-52801854",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed624004-ab70-43de-9e0a-b54df08b491f",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Can we do this? Isn't it a backward incompatible change?\r\n@deads2k @smarterclayton ",
        "createdAt" : "2017-07-27T17:49:51Z",
        "updatedAt" : "2017-08-02T05:01:52Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "84c40d5a-aaa9-4698-b17c-6dee02f01299",
        "parentId" : "ed624004-ab70-43de-9e0a-b54df08b491f",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Can we do this? Isn't it a backward incompatible change?\r\n> @deads2k @smarterclayton\r\n\r\nIsn't the `v1beta2` serialization net new in 1.8?  If it is, then the proto serialization won't be a problem.  Not sure how you'd roundtrip through it though.  The compatibility of that bit depends on the meaning of nil versus 0 in the API itself.",
        "createdAt" : "2017-07-27T18:22:37Z",
        "updatedAt" : "2017-08-02T05:01:52Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "a36629df-48bf-4a16-91ed-4789d27cf408",
        "parentId" : "ed624004-ab70-43de-9e0a-b54df08b491f",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Yes, apps/v1beta2 is new and WIP so it's safe to break it. ",
        "createdAt" : "2017-07-27T22:15:56Z",
        "updatedAt" : "2017-08-02T05:01:52Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "92779979e873c9afdca0b859e400ba85dc5b0e13",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +226,230 @@\t// StatefulSet's generation, which is updated on mutation by the API Server.\n\t// +optional\n\tObservedGeneration int64 `json:\"observedGeneration,omitempty\" protobuf:\"varint,1,opt,name=observedGeneration\"`\n\n\t// replicas is the number of Pods created by the StatefulSet controller."
  },
  {
    "id" : "eb454261-58a2-45f5-8270-16f558d4e230",
    "prId" : 49340,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49340#pullrequestreview-54688044",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c76e3dd1-abac-4eb7-b3f0-816575a90423",
        "parentId" : null,
        "authorId" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "body" : "Is this the right naming convention?",
        "createdAt" : "2017-08-07T15:26:22Z",
        "updatedAt" : "2017-08-08T02:11:54Z",
        "lastEditedBy" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "tags" : [
        ]
      }
    ],
    "commit" : "e245fbc2b2ff42d917b4c4f48cde3f9efee20bfd",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +26,30 @@\tControllerRevisionHashLabelKey = \"controller-revision-hash\"\n\tStatefulSetRevisionLabel       = ControllerRevisionHashLabelKey\n\tDeprecatedRollbackTo           = \"deprecated.deployment.rollback.to\"\n)\n"
  },
  {
    "id" : "26ad7191-0717-4ea2-9ba7-7af37450c8fc",
    "prId" : 49071,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49071#pullrequestreview-51929765",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b1c9036-ad81-4b01-a7ac-9e1905c9f531",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "Should remove this deprecated `TemplateGeneration`. @janetkuo Right?",
        "createdAt" : "2017-07-23T09:10:45Z",
        "updatedAt" : "2017-07-25T20:33:41Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "17fdc297-30ff-4dc7-a0f6-4b6b894a9db0",
        "parentId" : "8b1c9036-ad81-4b01-a7ac-9e1905c9f531",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "We still need to store `templateGeneration` information somewhere to be able to round-trip. Prefer to remove this field and implement that round-trip logic in a follow-up PR. ",
        "createdAt" : "2017-07-24T23:47:59Z",
        "updatedAt" : "2017-07-25T20:33:41Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "7efa60ef-9217-4681-81b2-6ec9a8fe30da",
        "parentId" : "8b1c9036-ad81-4b01-a7ac-9e1905c9f531",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "@janetkuo I've already created a PR #49454 that based on this PR. PTAL. Thanks.",
        "createdAt" : "2017-07-24T23:56:44Z",
        "updatedAt" : "2017-07-25T20:33:41Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      }
    ],
    "commit" : "c168a3faebfa40fdffd1cac1f307f524786bf11b",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +584,588 @@\t// Populated by the system. It can be set only during the creation.\n\t// +optional\n\tTemplateGeneration int64 `json:\"templateGeneration,omitempty\" protobuf:\"varint,5,opt,name=templateGeneration\"`\n\n\t// The number of old history to retain to allow rollback."
  }
]