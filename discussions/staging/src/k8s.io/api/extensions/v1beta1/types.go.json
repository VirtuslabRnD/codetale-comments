[
  {
    "id" : "ae0d5b32-c937-4d95-a47b-c4c665494d0e",
    "prId" : 100008,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100008#pullrequestreview-650331449",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5ccdca4-3a4a-4bec-b943-cfc41f49f25c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "cc @robscott for review",
        "createdAt" : "2021-05-03T13:06:14Z",
        "updatedAt" : "2021-05-11T14:03:53Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb4b86bb98a4e671bdba3a93e26cf5ac7f6b8ff1",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +740,744 @@\t// as defined by RFC 3986. Paths must begin with a '/'.\n\t// A backend defines the referenced service endpoint to which the traffic\n\t// will be forwarded to.\n\tHTTP *HTTPIngressRuleValue `json:\"http,omitempty\" protobuf:\"bytes,1,opt,name=http\"`\n}"
  },
  {
    "id" : "dad93bf4-c70f-4d9b-8e13-71e5353bc9da",
    "prId" : 88775,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88775#pullrequestreview-368501203",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6061c8b3-241c-4e33-9b8c-be88e31c2d53",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "adding a new field that is mutually exclusive to serviceName/servicePort will effectively change those two fields from required to optional, right? they are currently marked as required in the schema, and kubectl will fail to apply manifests that do not contain a serviceName/servicePort field. If we want the schema to reflect that those two fields are considered optional now, add an `+optional` comment to those two fields (applies to all external versions)\r\n\r\nThat means that eventually (once we start allowing data into the resource field in 1.19, v1beta1 Ingress objects with a resource backend will also serialize with `serviceName: \"\", servicePort: 0`. Are ingress controllers prepared to handle that?",
        "createdAt" : "2020-03-04T04:42:57Z",
        "updatedAt" : "2020-03-05T21:09:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "912f05bafbb07ec8c296adaa7dc4d722e57b3ea6",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +770,774 @@\t// must not be specified.\n\t// +optional\n\tResource *v1.TypedLocalObjectReference `json:\"resource,omitempty\" protobuf:\"bytes,3,opt,name=resource\"`\n}\n"
  },
  {
    "id" : "19351617-059c-4577-b258-b3aaf42af7b1",
    "prId" : 74747,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74747#pullrequestreview-214653749",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1905d1ab-0067-4fa0-9378-4278ace7bdf9",
        "parentId" : null,
        "authorId" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "body" : "not directly related to this PR, this is an oversight, better to prevent it from happening in the future",
        "createdAt" : "2019-03-14T17:21:11Z",
        "updatedAt" : "2019-03-27T03:16:17Z",
        "lastEditedBy" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "tags" : [
        ]
      }
    ],
    "commit" : "bef996d0a4e7a8ca887f1a6aa8165daf200fa016",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1187,1191 @@}\n\n// +genclient\n// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n"
  },
  {
    "id" : "ec105f0b-59b0-431b-8ce2-f1402e1c2fa5",
    "prId" : 73795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73795#pullrequestreview-230336633",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "107eeb4d-86b6-412d-87e8-6ae8fe00f090",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "squash the types.go changes into the non-generated commit",
        "createdAt" : "2019-04-24T20:24:23Z",
        "updatedAt" : "2019-05-01T20:43:55Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c666bd00123b1d636b42914cc46f4c3154a3d89e",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +961,965 @@\t// Enforcement of this field depends on the RuntimeClass feature gate being enabled.\n\t// +optional\n\tRuntimeClass *RuntimeClassStrategyOptions `json:\"runtimeClass,omitempty\" protobuf:\"bytes,24,opt,name=runtimeClass\"`\n}\n"
  },
  {
    "id" : "1cc919df-5946-4399-80a4-6c244a15214d",
    "prId" : 67802,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67802#pullrequestreview-152214477",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bea17009-de85-408d-99df-5a4f69856803",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "@liggitt do you know how this works as a multi-group API? Do we need to add it here, or can we just add new fields to the policy group API?",
        "createdAt" : "2018-08-30T23:38:39Z",
        "updatedAt" : "2018-10-10T00:32:30Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "45f4aa30-0b8a-487e-b481-8c81d79689da",
        "parentId" : "bea17009-de85-408d-99df-5a4f69856803",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yeah, needs to be added here for round trip support",
        "createdAt" : "2018-09-04T19:17:01Z",
        "updatedAt" : "2018-10-10T00:32:30Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc3e3afc469516f472d05a276c867e1fa95a3850",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +1081,1085 @@\n// RunAsGroupStrategyOptions defines the strategy type and any options used to create the strategy.\n// Deprecated: use RunAsGroupStrategyOptions from policy API Group instead.\ntype RunAsGroupStrategyOptions struct {\n\t// rule is the strategy that will dictate the allowable RunAsGroup values that may be set."
  },
  {
    "id" : "1b8c71ee-4154-42af-b8d9-61d4e22ba2bf",
    "prId" : 53443,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53443#pullrequestreview-67139418",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b3e1608-3677-44b7-9cb4-6992f2d39735",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Is this an API change? undefined was leading to `false` before.\r\n\r\nMoreover, I expected to be safe by default, i.e. default to false.",
        "createdAt" : "2017-10-04T17:02:34Z",
        "updatedAt" : "2017-10-04T17:55:12Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "5544b8fb-6a7b-400a-88df-d5c9e9f308fc",
        "parentId" : "7b3e1608-3677-44b7-9cb4-6992f2d39735",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Prior to 1.8, `AllowPrivilegeEscalation` was implicitly always true. But I think this needs to be true to fix https://github.com/kubernetes/kubernetes/issues/53437, which motivated this change.",
        "createdAt" : "2017-10-04T17:14:59Z",
        "updatedAt" : "2017-10-04T17:55:12Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "ad655249-7259-4624-8022-29d334215766",
        "parentId" : "7b3e1608-3677-44b7-9cb4-6992f2d39735",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Is this an API change? undefined was leading to false before.\r\n\r\nCorrect, which was a breaking change in 1.8.0.\r\n\r\n> Moreover, I expected to be safe by default, i.e. default to false.\r\n\r\nCompatibility wins. The ability to restrict this did not exist prior to 1.8.0, so policies that do not include this field must continue pre-1.8.0 behavior.",
        "createdAt" : "2017-10-04T17:15:37Z",
        "updatedAt" : "2017-10-04T17:55:12Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bed6d0f5ea694ce3aa3641667916cdee6c88b3a1",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +976,980 @@\tDefaultAllowPrivilegeEscalation *bool `json:\"defaultAllowPrivilegeEscalation,omitempty\" protobuf:\"varint,15,opt,name=defaultAllowPrivilegeEscalation\"`\n\t// AllowPrivilegeEscalation determines if a pod can request to allow\n\t// privilege escalation. If unspecified, defaults to true.\n\t// +optional\n\tAllowPrivilegeEscalation *bool `json:\"allowPrivilegeEscalation,omitempty\" protobuf:\"varint,16,opt,name=allowPrivilegeEscalation\"`"
  }
]