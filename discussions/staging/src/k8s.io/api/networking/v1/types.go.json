[
  {
    "id" : "23ab3ff2-6472-4145-b7dd-aaacffa67527",
    "prId" : 103003,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103003#pullrequestreview-692357679",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06bfa965-730c-4973-9324-c81417828613",
        "parentId" : null,
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "If we're removing omitempty shouldn't this type also change to a pointer? I'm not sure if that's backwards compatible though.",
        "createdAt" : "2021-06-25T01:07:37Z",
        "updatedAt" : "2021-06-25T01:07:37Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e72effbf12ea2d195935f29003ede1b8db62f6e2",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +427,431 @@\t//   or treat it identically to Prefix or Exact path types.\n\t// Implementations are required to support all path types.\n\tPathType *PathType `json:\"pathType\" protobuf:\"bytes,3,opt,name=pathType\"`\n\n\t// Backend defines the referenced service endpoint to which the traffic"
  },
  {
    "id" : "4691381f-fd53-4a9b-a493-f311e9328daa",
    "prId" : 89778,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89778#pullrequestreview-389425797",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5bac503e-a18d-434f-a5a2-998fa6763046",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I expected v1 Ingress and IngressClass types to be added to:\r\n* `staging/src/k8s.io/api/networking/v1/register.go#addKnownTypes`\r\n* `pkg/registry/networking/rest.RESTStorageProvider#v1Storage`\r\n* `test/integration/etcd/data.go`",
        "createdAt" : "2020-04-07T19:46:22Z",
        "updatedAt" : "2020-05-22T15:58:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b091f60ca09d3d03923a26b7cd02fb3dc6c47e2",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +210,214 @@// externally-reachable urls, load balance traffic, terminate SSL, offer name\n// based virtual hosting etc.\ntype Ingress struct {\n\tmetav1.TypeMeta `json:\",inline\"`\n\t// Standard object's metadata."
  },
  {
    "id" : "11c3334e-5efd-44fb-b4c0-51418316de1c",
    "prId" : 89778,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89778#pullrequestreview-419489156",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2503483d-e979-4bd1-b41f-b5ad6b349eda",
        "parentId" : null,
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "A [thread in Slack](https://kubernetes.slack.com/archives/C09QYUH5W/p1590602376197600) pointed out that it's unclear which namespace this Secret should be in. We should clarify that the Secret referred to here is in the same namespace as the Ingress.",
        "createdAt" : "2020-05-27T18:14:49Z",
        "updatedAt" : "2020-05-27T18:15:29Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b091f60ca09d3d03923a26b7cd02fb3dc6c47e2",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +293,297 @@\t// hostname alone. If the SNI host in a listener conflicts with the \"Host\"\n\t// header field used by an IngressRule, the SNI host is used for termination\n\t// and value of the Host header is used for routing.\n\t// +optional\n\tSecretName string `json:\"secretName,omitempty\" protobuf:\"bytes,2,opt,name=secretName\"`"
  },
  {
    "id" : "5d54039c-8c90-4981-ab4b-6aad0e09381d",
    "prId" : 50033,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50033#pullrequestreview-58586379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c382c6f6-46f5-484e-912b-041142755a24",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Don't we usually avoid putting the field name into the description? For some doc generation reason I believe.",
        "createdAt" : "2017-08-25T07:37:50Z",
        "updatedAt" : "2017-08-25T07:37:50Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "02735c3fb25aa1f014cfbcde0690802262b40f25",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +97,101 @@// not be included within this rule.\ntype IPBlock struct {\n\t// CIDR is a string representing the IP Block\n\t// Valid examples are \"192.168.1.1/24\"\n\tCIDR string `json:\"cidr\" protobuf:\"bytes,1,name=cidr\"`"
  }
]