[
  {
    "id" : "1442997a-ea0a-429d-a18e-86bab74516a6",
    "prId" : 98817,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98817#pullrequestreview-696398536",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93815930-cf6c-4da2-9d4d-affacb5ec1e8",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "rename since this is no longer being used as a finalizer, and add godoc explaining what object this is added to and why",
        "createdAt" : "2021-06-26T20:33:31Z",
        "updatedAt" : "2021-06-26T20:45:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c67bf0e5-3790-495f-80a8-9eb9009258fa",
        "parentId" : "93815930-cf6c-4da2-9d4d-affacb5ec1e8",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "It's still a finalizer, just for Pods. I added a godoc, also explaining that it's temporarily (for some releases) used as a marker annotation.",
        "createdAt" : "2021-06-28T13:31:53Z",
        "updatedAt" : "2021-06-28T14:26:25Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "47979487-4dee-438a-b145-7215b5d8957d",
        "parentId" : "93815930-cf6c-4da2-9d4d-affacb5ec1e8",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "suggest framing this in terms of \"X releases after GA of feature Y\" instead of a specific release more than a year in the future\r\n\r\nI'm also trying to envision the transition when this goes GA and we no longer need to decorate the job to get this behavior... is that sketched out anywhere, at what point the controller will unconditionally track pods this way? How will the controller decide it is safe to switch to using the finalizer pod mechanism on existing jobs that may already have pods created?",
        "createdAt" : "2021-06-29T20:11:55Z",
        "updatedAt" : "2021-06-29T20:27:44Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "bc29922c-5aed-4b4b-b138-dc3dc54aa427",
        "parentId" : "93815930-cf6c-4da2-9d4d-affacb5ec1e8",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Changed to \"two releases after GA\".\r\n\r\n> I'm also trying to envision the transition when this goes GA and we no longer need to decorate the job to get this behavior.\r\n\r\nI either have to find a safe way to add the finalizer to existing pods or we wait long enough to make sure that there shouldn't be existing Jobs that are tracked with the legacy behavior (or a combination of both).\r\nAdding finalizers is tricky because we can't tell for sure if a finished pod doesn't have a finalizer because it's from the legacy tracking or because we counted it already. We can probably add the finalizer to running pods.\r\n\r\nIn our favor, we have that Jobs are run-to-completion. So eventually there shouldn't be non-finished Jobs with legacy behavior. Worst case scenario, we would recreate a few pods, once we get rid of the legacy tracking.\r\n\r\nI was deferring these discussions to beta. I will add some notes when I update the KEP to match the implementation (the use of the finalizer as annotation and the extra work queue).",
        "createdAt" : "2021-06-29T20:44:07Z",
        "updatedAt" : "2021-06-29T20:44:08Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "30999f99-3e00-4eaa-8e39-bbd27aca8f1d",
        "parentId" : "93815930-cf6c-4da2-9d4d-affacb5ec1e8",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> I was deferring these discussions to beta. I will add some notes when I update the KEP to match the implementation (the use of the finalizer as annotation and the extra work queue).\r\n\r\na clear picture of what will happen for this at each transition is important to have before we start adding annotations to things and implementing controllers. This definitely needs to happen before beta, but I would recommend doing it before alpha so you don't lose a release if you realize you needed some additional bit of data. Up to you.",
        "createdAt" : "2021-06-29T20:48:58Z",
        "updatedAt" : "2021-06-29T21:58:16Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "10f7c0bd-58d9-4c40-944e-85b4eb24cf2a",
        "parentId" : "93815930-cf6c-4da2-9d4d-affacb5ec1e8",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "> I either have to find a safe way to add the finalizer to existing pods or we wait long enough to make sure that there shouldn't be existing Jobs that are tracked with the legacy behavior (or a combination of both).\r\n\r\nHonestly, that was what I was imagining that we'd keep both ways for more than usual supported time just to give folks the time to complete their jobs. All the new ones will always be tracked with the new mechanism when it gets beta, and old ones will eventually complete, as Aldo mentions. We just need to clearly define how long we'll keep the legacy behavior and explain that in the release notes. ",
        "createdAt" : "2021-06-30T16:41:46Z",
        "updatedAt" : "2021-06-30T16:41:47Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb56a0bd04891ae0a4aebeaeb4d145b32d9ad2d9",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +32,36 @@\t// the JobTrackingWithFinalizers graduates to GA, JobTrackingFinalizer will\n\t// no longer be used as a Job annotation.\n\tJobTrackingFinalizer = \"batch.kubernetes.io/job-tracking\"\n)\n"
  },
  {
    "id" : "a7c6102f-e90d-40a6-b5e9-08ec3cf0e995",
    "prId" : 98727,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98727#pullrequestreview-605653378",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8516c49e-f6d1-47f3-8eb4-93de6e7b79db",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Looks good now.\r\n\r\nI'm not looking at the implementation here, but please note this line from our [condition guidance](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties):\r\n\r\n> Controllers should apply their conditions to a resource the first time they visit the resource, even if the status is Unknown. This allows other components in the system to know that the condition exists ...",
        "createdAt" : "2021-03-05T19:56:32Z",
        "updatedAt" : "2021-03-08T20:08:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "179f23c9-822c-45bb-8572-750ac203b7fc",
        "parentId" : "8516c49e-f6d1-47f3-8eb4-93de6e7b79db",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "That hasn't been respected so far :(\r\n\r\nShould we fix that?\r\nI feel like we can potentially break people that might just be relying on the existence of the condition without checking the status.",
        "createdAt" : "2021-03-05T20:03:03Z",
        "updatedAt" : "2021-03-08T20:08:43Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "ac995270-9180-495c-b0f2-87d100d436eb",
        "parentId" : "8516c49e-f6d1-47f3-8eb4-93de6e7b79db",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yes it should probably be fixed, perhaps not in this PR.\r\n\r\nChecking for the condition but not its value doesn't seem like a super plausible mistake to me--hopefully I'm not wrong about that haha",
        "createdAt" : "2021-03-05T22:14:00Z",
        "updatedAt" : "2021-03-08T20:08:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0844da8f799e6f360193ecfd02c84d61a62958b",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +191,195 @@\t// status true; when the Job is resumed, the status of this condition will\n\t// become false. When a Job is completed, one of the conditions will have\n\t// type \"Complete\" and status true.\n\t// More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/\n\t// +optional"
  },
  {
    "id" : "863a1072-be95-46ec-aec6-876d33b9a852",
    "prId" : 87919,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87919#pullrequestreview-356102810",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcdcd6c9-469b-476b-a4e3-3a2abd5ceaff",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Please update both places, even though this is the canonical one :)\r\n\r\nAlso you'll need to regenerate the generated files. The \"verify\" test suite is not flaky, if it's failing something needs to be fixed :)",
        "createdAt" : "2020-02-10T16:42:29Z",
        "updatedAt" : "2020-07-10T07:35:12Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "f09c153f-f503-4f98-8fed-27ea303c3a36",
        "parentId" : "bcdcd6c9-469b-476b-a4e3-3a2abd5ceaff",
        "authorId" : "22515b04-c867-4fcf-b452-dd43b19f6838",
        "body" : "Alright. I will do that now",
        "createdAt" : "2020-02-10T16:57:48Z",
        "updatedAt" : "2020-07-10T07:35:12Z",
        "lastEditedBy" : "22515b04-c867-4fcf-b452-dd43b19f6838",
        "tags" : [
        ]
      }
    ],
    "commit" : "49751e33e962829e2461a53ee019866806aadc7d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +132,136 @@type JobStatus struct {\n\t// The latest available observations of an object's current state.\n\t// When a job fails, one of the conditions will have type == \"Failed\".\n\t// More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/\n\t// +optional"
  }
]