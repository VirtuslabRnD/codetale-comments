[
  {
    "id" : "9afe42bf-b67e-4d47-a8d9-6c08bd2a2bb6",
    "prId" : 93130,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93130#pullrequestreview-527570222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13b58e3f-4ee4-4f6c-bf10-2fedafd3143f",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Looks good to me. I would keep the code that validates that you only have one audience at most, and I would default unspecified audience to empty string so that you can smoothly use audience as a key in a future release without breaking compatibility.",
        "createdAt" : "2020-11-10T20:11:19Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "c21dc3d3-d5bd-4611-952e-cb4f1465caf8",
        "parentId" : "13b58e3f-4ee4-4f6c-bf10-2fedafd3143f",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Looks like that's what we have!",
        "createdAt" : "2020-11-10T20:12:36Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2859cd89b0ec00054219ed9988c6dccff39a0c8",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +366,370 @@\t//\n\t// +optional\n\t// +listType=atomic\n\tTokenRequests []TokenRequest `json:\"tokenRequests,omitempty\" protobuf:\"bytes,6,opt,name=tokenRequests\"`\n"
  },
  {
    "id" : "cc442630-bb1e-4eb4-8274-33687c0315db",
    "prId" : 84814,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84814#pullrequestreview-368699176",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a363c38-5123-47a5-991f-87bd0c0ef991",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Please add a note that this field is beta.",
        "createdAt" : "2020-03-04T11:27:55Z",
        "updatedAt" : "2020-03-06T13:57:21Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0890533a99bcb7f3ee173846863960d15064577",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +314,318 @@\t// more modes may be added in the future.\n\t// This field is beta.\n\t// +optional\n\t// +listType=set\n\tVolumeLifecycleModes []VolumeLifecycleMode `json:\"volumeLifecycleModes,omitempty\" protobuf:\"bytes,3,opt,name=volumeLifecycleModes\"`"
  },
  {
    "id" : "fabcb0d2-5703-484c-b989-7f5701017647",
    "prId" : 84814,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84814#pullrequestreview-369958788",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79684b4b-ac9e-438e-b948-426b06ac59c1",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This is not actually true after this PR?  Or is it?",
        "createdAt" : "2020-03-05T19:37:00Z",
        "updatedAt" : "2020-03-06T13:57:21Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "0f18dd51-4620-4e46-a0f8-2f95576c6e27",
        "parentId" : "79684b4b-ac9e-438e-b948-426b06ac59c1",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Isn't there another PR in flight that changes the description of this field?  If so, you need to incorporate those changes before I'll approve it (I *think* it got approved yesterday).",
        "createdAt" : "2020-03-05T19:37:25Z",
        "updatedAt" : "2020-03-06T13:57:21Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "1485b687-7d3f-49f4-814d-d4b2d99f4b5a",
        "parentId" : "79684b4b-ac9e-438e-b948-426b06ac59c1",
        "authorId" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "body" : "The `volumeLifecycleModes` field is still beta, while the rest of the types should be GA",
        "createdAt" : "2020-03-05T19:37:46Z",
        "updatedAt" : "2020-03-06T13:57:21Z",
        "lastEditedBy" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "tags" : [
        ]
      },
      {
        "id" : "54e8f62e-b1ff-421d-923b-ca9719e3bdd6",
        "parentId" : "79684b4b-ac9e-438e-b948-426b06ac59c1",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Did a PR change description of `volumeLifecycle` mode recently? I might have missed it. @smarterclayton which PR you are referring to? cc @msau42 ",
        "createdAt" : "2020-03-05T20:19:56Z",
        "updatedAt" : "2020-03-06T13:57:21Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "4accec6f-a2d9-4c1e-afd0-b5b7f489e966",
        "parentId" : "79684b4b-ac9e-438e-b948-426b06ac59c1",
        "authorId" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "body" : "I looked and wasn't able to find a PR that changed this description, either open or recently merged.",
        "createdAt" : "2020-03-05T20:53:02Z",
        "updatedAt" : "2020-03-06T13:57:21Z",
        "lastEditedBy" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "tags" : [
        ]
      },
      {
        "id" : "7306ba75-d01f-45aa-8b77-fa5972673e0e",
        "parentId" : "79684b4b-ac9e-438e-b948-426b06ac59c1",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Ok, that's fine.",
        "createdAt" : "2020-03-05T22:24:37Z",
        "updatedAt" : "2020-03-06T13:57:21Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0890533a99bcb7f3ee173846863960d15064577",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +313,317 @@\t// A driver can support one or more of these modes and\n\t// more modes may be added in the future.\n\t// This field is beta.\n\t// +optional\n\t// +listType=set"
  },
  {
    "id" : "4f46f733-f173-4674-acaa-ab165bfc8e01",
    "prId" : 84814,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84814#pullrequestreview-370020388",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eac9bf1c-6036-404d-b669-0ab8ad69e432",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I don't see the note that this field is beta?",
        "createdAt" : "2020-03-06T00:53:33Z",
        "updatedAt" : "2020-03-06T13:57:21Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "4409672c-f505-4116-b97e-c53ce06f2d07",
        "parentId" : "eac9bf1c-6036-404d-b669-0ab8ad69e432",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "It is there below your comment.",
        "createdAt" : "2020-03-06T00:57:02Z",
        "updatedAt" : "2020-03-06T13:57:21Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "ae604e65-896f-4822-b2f3-c9e0db2f4f6b",
        "parentId" : "eac9bf1c-6036-404d-b669-0ab8ad69e432",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "i swear it wasn't there..... ok :-)",
        "createdAt" : "2020-03-06T00:58:43Z",
        "updatedAt" : "2020-03-06T13:57:21Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0890533a99bcb7f3ee173846863960d15064577",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +312,316 @@\t// https://kubernetes-csi.github.io/docs/ephemeral-local-volumes.html\n\t// A driver can support one or more of these modes and\n\t// more modes may be added in the future.\n\t// This field is beta.\n\t// +optional"
  },
  {
    "id" : "35939033-4b64-48fe-bdb5-48cf6c04160e",
    "prId" : 69929,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69929#pullrequestreview-169334775",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e48e578-ccbd-4e6a-a07a-2db2e6208ea9",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "since we know we intend to make this a union type in the future (either persistentVolumeName or inlineVolumeSource), we should resolve how an apiserver that doesn't yet know about inlineVolumeSource should validate this object.",
        "createdAt" : "2018-10-17T12:57:32Z",
        "updatedAt" : "2018-11-14T22:58:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "417f1927-6fc6-48f2-a1b5-da1c7cccacc6",
        "parentId" : "7e48e578-ccbd-4e6a-a07a-2db2e6208ea9",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Current plan is to follow what worked in the past. For example, when `CSIPersistentVolume` feature was alpha and enabled, v1.PersistentVolumeSource.CSI was recognized. If someone turned off the feature or downgraded, the field became invisible and there could be PersistentVolumeSource without any item that does not pass validation. I don't remember anyone complaining\r\n\r\nIs the process different now?",
        "createdAt" : "2018-10-18T08:32:24Z",
        "updatedAt" : "2018-11-14T22:58:11Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "d24eef91-41db-4585-84a9-2843ffa639f9",
        "parentId" : "7e48e578-ccbd-4e6a-a07a-2db2e6208ea9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "That was an alpha feature, and the \"enable / populate data / disable\" scenario was not supported.\r\n\r\nThis is introducing a v1 type with validation that will fail when objects with the planned inline volume source field are submitted. That seems like something we should get in place before promoting to GA.",
        "createdAt" : "2018-10-18T14:56:32Z",
        "updatedAt" : "2018-11-14T22:58:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "38cec5cf-126d-4e33-96b8-871aa53291be",
        "parentId" : "7e48e578-ccbd-4e6a-a07a-2db2e6208ea9",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "I don't understand. \r\n\r\n> This is introducing a v1 type with validation that will fail when objects with the planned inline volume source field are submitted\r\n\r\nSo was `v1.PersistentVolumeSource` - it's an union. We added CSI:\r\n\r\n```\r\ntype PersistentVolumeSource struct {\r\n...\r\n\r\n    // CSI (Container Storage Interface) represents storage that handled by an external CSI driver (Beta feature).\r\n    // +optional\r\n    CSI *CSIPersistentVolumeSource\r\n}\r\n```\r\n\r\n`PersistentVolumeSource.CSI` field was behind alpha feature. If there was a PV with CSI and the feature was disabled, such PV could not be validated. Nobody complained. In future \"CSI inline volume PR\", we will add a field to another union, `VolumeAttachmentSource`. Is there any difference that I miss?",
        "createdAt" : "2018-10-22T14:48:54Z",
        "updatedAt" : "2018-11-14T22:58:11Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "ce3bb125-96fc-4b3f-b34c-212bec0a6f81",
        "parentId" : "7e48e578-ccbd-4e6a-a07a-2db2e6208ea9",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "For the record, we had several meetings how to add in-line CSI volumes later without breaking downgrade. My understanding is that we can promote persistent CSI volumes to GA now and refactor everything when adding in-line volumes later.\r\n\r\n@liggitt, is there anything else blocking this PR?",
        "createdAt" : "2018-10-29T14:38:48Z",
        "updatedAt" : "2018-11-14T22:58:11Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "eaff4fd4d227321b69616f264d86dcf785d1b5ae",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +165,169 @@\t// Name of the persistent volume to attach.\n\t// +optional\n\tPersistentVolumeName *string `json:\"persistentVolumeName,omitempty\" protobuf:\"bytes,1,opt,name=persistentVolumeName\"`\n\n\t// Placeholder for *VolumeSource to accommodate inline volumes in pods."
  },
  {
    "id" : "b906b3d2-8d30-42ad-9cb1-3ec2c47c6d8d",
    "prId" : 69929,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69929#pullrequestreview-173583065",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eef592c8-86b8-4fcd-899c-eb554046c616",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "it doesn't appear this object follows normal spec/status conventions:\r\n\r\n* there is no status subresource\r\n* the rest handler allows any part of the object to be modified via the primary resource (typically, there would be a primary resource strategy which would clear status in PrepareForCreate and preserve existing status in PrepareForUpdate, and a status strategy which would do the opposite, only allowing status to be updated on update\r\n* generation is not incremented on update when the spec changes\r\n\r\nI also don't see this PR registering this resource to be served under `storage.k8s.io/v1`:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/0aba5577412ea9b2fd89a0c0843e9b0c94e8848d/pkg/registry/storage/rest/storage_storage.go#L63-L83",
        "createdAt" : "2018-11-07T02:47:34Z",
        "updatedAt" : "2018-11-14T22:58:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "7a930fec-b29f-4872-b660-7dc4d893eeec",
        "parentId" : "eef592c8-86b8-4fcd-899c-eb554046c616",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "@liggitt iiuc, we need to do something like this https://github.com/kubernetes/kubernetes/blob/0aba5577412ea9b2fd89a0c0843e9b0c94e8848d/pkg/registry/core/rest/storage_core.go#L191 to add the subresource?",
        "createdAt" : "2018-11-07T17:07:35Z",
        "updatedAt" : "2018-11-14T22:58:11Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "efc56e06-3a5c-4813-b45a-df2127c5c2b0",
        "parentId" : "eef592c8-86b8-4fcd-899c-eb554046c616",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "that surfaces the subresource, yes, but more is involved than that\r\n\r\nspec/status resources ensure the status is not modified via the main resource (in PrepareForCreate/PrepareForUpdate), and ensure only the status is modified via the status subresource (in a statusStorageStrategy PrepareForCreate/PrepareForUpdate)\r\n\r\nwe'd need to make those changes in a way that preserved the v1beta1 behavior (the version being dealt with is passed into PrepareForCreate/PrepareForUpdate in the context)",
        "createdAt" : "2018-11-07T17:28:23Z",
        "updatedAt" : "2018-11-14T22:58:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "353be44d-ffd6-47e1-b1ba-4791f06bca93",
        "parentId" : "eef592c8-86b8-4fcd-899c-eb554046c616",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "@bertinatto to help give you a head start, I went ahead and added the status subresource here: https://github.com/msau42/kubernetes/commit/b673f6129720c494a41730c097b28384b9a3348b. You can go ahead and pull it into your branch.\r\n\r\nUnit tests are passing, but it still needs to be tested e2e.  I am running e2es now, which will test that current v1beta API did not break.\r\n\r\n",
        "createdAt" : "2018-11-09T00:40:44Z",
        "updatedAt" : "2018-11-14T22:58:11Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "f0ee662a-d73d-44c1-b294-91b3f5a5f873",
        "parentId" : "eef592c8-86b8-4fcd-899c-eb554046c616",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Sorry, didn't get around to running the e2es, and I g2g.  The hostpath tests are run as part of pull, but GCE PD tests which really test VolumeAttachment are serial.  If you need help running them, ask @davidz627 ",
        "createdAt" : "2018-11-09T01:39:51Z",
        "updatedAt" : "2018-11-14T22:58:11Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "6d7b4df1-baf2-49e8-8910-40bc23a4b3bc",
        "parentId" : "eef592c8-86b8-4fcd-899c-eb554046c616",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "I ran e2e btw and they passing. But - since we are still using beta version of `VolumeAttachment` objects, we aren't really testing new type via e2e yet. ",
        "createdAt" : "2018-11-09T20:42:10Z",
        "updatedAt" : "2018-11-14T22:58:11Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "eaff4fd4d227321b69616f264d86dcf785d1b5ae",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +128,132 @@\t// operation, i.e. the external-attacher.\n\t// +optional\n\tStatus VolumeAttachmentStatus `json:\"status,omitempty\" protobuf:\"bytes,3,opt,name=status\"`\n}\n"
  }
]