[
  {
    "id" : "239272f1-ba40-413e-a92c-c1db96bd4a82",
    "prId" : 90301,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90301#pullrequestreview-398331076",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d59a688-5f55-4dc0-b8c2-edb0487fa739",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "add `// +k8s:prerelease-lifecycle-gen:replacement=<group>,<version>,<kind>` tags where applicable",
        "createdAt" : "2020-04-22T15:50:03Z",
        "updatedAt" : "2020-04-24T13:52:48Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d32fc4e4794d72db30401e6c26d6acd6a677758d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +118,122 @@// +k8s:prerelease-lifecycle-gen:removed=1.22\n// +k8s:prerelease-lifecycle-gen:replacement=admissionregistration.k8s.io,v1,ValidatingWebhookConfiguration\n\n// ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it.\n// Deprecated in v1.16, planned for removal in v1.19. Use admissionregistration.k8s.io/v1 ValidatingWebhookConfiguration instead."
  },
  {
    "id" : "769f0b72-3d26-48a2-b1d9-b04fbe2ae349",
    "prId" : 78505,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78505#pullrequestreview-243633040",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5671e493-27a3-4783-aada-f8bdbe10369c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this needs to be validated in API validation to be sure we can successfully construct a label selector from it",
        "createdAt" : "2019-05-30T05:47:59Z",
        "updatedAt" : "2019-05-31T00:23:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7738c7ee8fbbaa79aed2ca221141a6b3b4f826be",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +272,276 @@\t// Default to the empty LabelSelector, which matches everything.\n\t// +optional\n\tObjectSelector *metav1.LabelSelector `json:\"objectSelector,omitempty\" protobuf:\"bytes,10,opt,name=objectSelector\"`\n\n\t// SideEffects states whether this webhookk has side effects."
  },
  {
    "id" : "e47bd614-83e5-4107-ad10-47d7e2487308",
    "prId" : 74477,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74477#pullrequestreview-209232691",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67ef1328-d671-4611-a98e-b4cba4a37560",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I'm wondering if we should make this `Namespace`.  We call scopes `Cluster` and `Namespace` in other places (technical doc, mostly).  I guess we used `namespaced: true` in APIResource for discovery.  Shame we didn't use `scope: Namespaced` there too.",
        "createdAt" : "2019-02-28T18:18:29Z",
        "updatedAt" : "2019-03-05T00:30:27Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "fc92bc51-5a9a-4b6c-a5cf-f815b016331b",
        "parentId" : "67ef1328-d671-4611-a98e-b4cba4a37560",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "CRD scope uses \"Cluster\" and \"Namespaced\", was intended to match that",
        "createdAt" : "2019-02-28T18:21:20Z",
        "updatedAt" : "2019-03-05T00:30:27Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d4655c8ef17948801a67703decfdfc6ab1a0a63",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +55,59 @@\t// \"Cluster\" means that only cluster-scoped resources will match this rule.\n\t// Namespace API objects are cluster-scoped.\n\t// \"Namespaced\" means that only namespaced resources will match this rule.\n\t// \"*\" means that there are no scope restrictions.\n\t// Subresources match the scope of their parent resource."
  },
  {
    "id" : "6aed8a1b-4e2d-4c2d-abb5-784ef469515c",
    "prId" : 62496,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62496#pullrequestreview-111819556",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11c4eeed-532c-4f73-8883-2e9f6cacccd9",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Same change on internal types.go file?",
        "createdAt" : "2018-04-12T22:30:27Z",
        "updatedAt" : "2018-04-13T17:20:22Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6994a36c4dc4f818cb6c405ad67b14999e3d625c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +255,259 @@\t// If the webhook is running within the cluster, then you should use `service`.\n\t//\n\t// Port 443 will be used if it is open, otherwise it is an error.\n\t//\n\t// +optional"
  }
]