[
  {
    "id" : "819af0bd-6905-4fae-86a8-5bc78ec4a315",
    "prId" : 99130,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99130#pullrequestreview-595683173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "147d536f-f2bc-4747-bd03-1fa12349634f",
        "parentId" : null,
        "authorId" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "body" : "what about copying/using https://github.com/kubernetes/kubernetes/blob/f48972e671e5f338d0d6adfe6055aba4534569ad/staging/src/k8s.io/legacy-cloud-providers/aws/aws.go#L1240 ? seems simpler and less likely to break",
        "createdAt" : "2021-02-22T18:51:34Z",
        "updatedAt" : "2021-02-22T18:51:35Z",
        "lastEditedBy" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "tags" : [
        ]
      },
      {
        "id" : "0f2f7a13-b299-4a2e-816e-e35e8da2ace6",
        "parentId" : "147d536f-f2bc-4747-bd03-1fa12349634f",
        "authorId" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "body" : "u r right it will break on wavelength zone .",
        "createdAt" : "2021-02-22T18:59:57Z",
        "updatedAt" : "2021-02-22T18:59:58Z",
        "lastEditedBy" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "tags" : [
        ]
      }
    ],
    "commit" : "e500271b4af8970adfff99b90c91e9cae3064b90",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +267,271 @@\t}\n\n\t// AWS zones can be in four forms:\n\t// us-west-2a, us-gov-east-1a, us-west-2-lax-1a (local zone) and us-east-1-wl1-bos-wlz-1 (wavelength).\n\tfor _, zone := range zones {"
  },
  {
    "id" : "b5b33323-491a-4a13-aff5-4a3ec8fcbd31",
    "prId" : 96821,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96821#pullrequestreview-563919169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c666692-591c-4384-96dd-5fff2bbe1efb",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "unit test?",
        "createdAt" : "2021-01-08T00:15:20Z",
        "updatedAt" : "2021-01-12T00:23:35Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "28f2355c72d70aa3636adfc79a903e032e05a6e6",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +99,103 @@\t\t\t// Must be unique per disk as it is used as the unique part of the\n\t\t\t// staging path\n\t\t\tName: fmt.Sprintf(\"%s-%s\", AWSEBSDriverName, volumeHandle),\n\t\t},\n\t\tSpec: v1.PersistentVolumeSpec{"
  },
  {
    "id" : "f4f1d253-75ef-4006-9b11-332c75114547",
    "prId" : 85010,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85010#pullrequestreview-315883264",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4473f9d-a5ba-4298-a57f-cd994f76d6ba",
        "parentId" : null,
        "authorId" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "body" : "Do you also plan to convert zones to topologies here in the future like in https://github.com/kubernetes/kubernetes/blob/41d9522a54b1faaadf1b1814777b626a98bf7eb4/staging/src/k8s.io/csi-translation-lib/plugins/gce_pd.go#L120",
        "createdAt" : "2019-11-09T21:15:33Z",
        "updatedAt" : "2019-11-09T21:17:03Z",
        "lastEditedBy" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "tags" : [
        ]
      },
      {
        "id" : "b75c2c66-1b5c-4ebf-9808-f2a2cde5c31e",
        "parentId" : "c4473f9d-a5ba-4298-a57f-cd994f76d6ba",
        "authorId" : "41981c80-b404-4c55-bd22-5f96c0512a61",
        "body" : "Since `zone` and `zones` are deprecated, I would like to not to do these translations if possible. Let me know if you think otherwise @ddebroy @davidz627 ",
        "createdAt" : "2019-11-11T02:06:59Z",
        "updatedAt" : "2019-11-11T02:06:59Z",
        "lastEditedBy" : "41981c80-b404-4c55-bd22-5f96c0512a61",
        "tags" : [
        ]
      },
      {
        "id" : "a361d245-aca2-4b6c-8b0d-3ca14217f793",
        "parentId" : "c4473f9d-a5ba-4298-a57f-cd994f76d6ba",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "IMO we need to support the API. A cluster that is updated to migrated version and uses `zone` and `zones` should keep working.",
        "createdAt" : "2019-11-11T13:53:25Z",
        "updatedAt" : "2019-11-11T13:53:25Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "7a18718d-15e5-4cd7-beae-5b1bc2e8470c",
        "parentId" : "c4473f9d-a5ba-4298-a57f-cd994f76d6ba",
        "authorId" : "41981c80-b404-4c55-bd22-5f96c0512a61",
        "body" : "Does that mean `zone` and `zones` are not really deprecated? And thinking further, any parameters within storageclass parameters are not deprecateale? If this is the case, the deprecation [here](https://kubernetes.io/docs/concepts/storage/storage-classes/#aws-ebs) is confusing",
        "createdAt" : "2019-11-11T17:13:52Z",
        "updatedAt" : "2019-11-11T17:13:52Z",
        "lastEditedBy" : "41981c80-b404-4c55-bd22-5f96c0512a61",
        "tags" : [
        ]
      },
      {
        "id" : "0971598c-3ada-473e-862c-90a8602c4d6c",
        "parentId" : "c4473f9d-a5ba-4298-a57f-cd994f76d6ba",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "@leakingtapan deprecation does not mean we do not support it anymore - I believe it means we don't recommend usage and that support will be removed in a future release. Therefore until that functionality is \"removed\" (not sure when) we will need to support it during migration",
        "createdAt" : "2019-11-11T22:27:59Z",
        "updatedAt" : "2019-11-11T22:28:00Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "2aa2a8a9-8d87-4852-8303-d4856bb00efc",
        "parentId" : "c4473f9d-a5ba-4298-a57f-cd994f76d6ba",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "We can argue under which paragraph in deprecation policy it falls, IMO it's part of storage.k8s.io/v1 StorageClass API object. And thus we may remove things from there only after introducing storage.k8s.io/v2.",
        "createdAt" : "2019-11-12T10:29:11Z",
        "updatedAt" : "2019-11-12T10:29:12Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "91124a70-364f-4010-82f6-8f11f83160c0",
        "parentId" : "c4473f9d-a5ba-4298-a57f-cd994f76d6ba",
        "authorId" : "41981c80-b404-4c55-bd22-5f96c0512a61",
        "body" : "@jsafrane @davidz627 thx for the inputs and they are fair enough. I will add this translation then. But could I open a new PR for the zone/zones translation? since I'm not sure if I have time for it this week since the code freeze is soon.",
        "createdAt" : "2019-11-12T22:17:28Z",
        "updatedAt" : "2019-11-12T22:17:28Z",
        "lastEditedBy" : "41981c80-b404-4c55-bd22-5f96c0512a61",
        "tags" : [
        ]
      }
    ],
    "commit" : "33b740cfd21edeed86428580c2f024557df8e34a",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +53,57 @@\t\tswitch strings.ToLower(k) {\n\t\tcase \"fstype\":\n\t\t\tparams[\"csi.storage.k8s.io/fstype\"] = v\n\t\tdefault:\n\t\t\tparams[k] = v"
  },
  {
    "id" : "b76cd683-961f-48fe-908c-33f8775c073b",
    "prId" : 80048,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80048#pullrequestreview-261419157",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a373df86-1aef-439c-82ed-552f1d6a255d",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Where does this get used?  Since inner volume name for inline is user-specified, what happens if 2 users have the give the same volume name in their Pod spec, but the underlying disks are different?",
        "createdAt" : "2019-07-11T20:41:31Z",
        "updatedAt" : "2019-07-11T20:41:34Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "470aab49-0184-422e-9a43-26311a4908b3",
        "parentId" : "a373df86-1aef-439c-82ed-552f1d6a255d",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "We can see in `Mount` we use the `spec.Name()`:\r\nhttps://github.com/kubernetes/kubernetes/blob/d4d8daea7368e5fc9ad8c375efff74a65d0f91bf/pkg/volume/csi/csi_plugin.go#L410\r\nto determine the path in which we mount the volume and save the volData. This corresponds to the `PV.name` of the migrated volume.\r\n\r\nHowever, in `Unmount`, we use the `volumeToUnmount.InnerVolumeSpecName` (I assume because in some cases `PV` or `Volume` may have been lost and this info is cached somewhere):\r\nhttps://github.com/kubernetes/kubernetes/blob/d4d8daea7368e5fc9ad8c375efff74a65d0f91bf/pkg/volume/util/operationexecutor/operation_generator.go#L838\r\nwhich corresponds to the original `volume.Name` of the inline volume.\r\n\r\nAnd as we can see here, both `PV.name` and `Volume.Name` values are the `InnerVolumeSpecName`:\r\nhttps://github.com/kubernetes/kubernetes/blob/d4d8daea7368e5fc9ad8c375efff74a65d0f91bf/pkg/volume/util/operationexecutor/operation_executor.go#L455\r\nand therefore the assumption has been made in the code that they are equivalent and that's why I have to make them equivalent here\r\n\r\nYou cannot give the same volume name for 2 volumes in the same pod as those are the reference to the underlying PD. It would be the same conceptually as trying to create two PV's with the same name",
        "createdAt" : "2019-07-11T20:50:18Z",
        "updatedAt" : "2019-07-11T20:52:17Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "cb53f6a8-f447-4101-a454-59b4eaa3ed76",
        "parentId" : "a373df86-1aef-439c-82ed-552f1d6a255d",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I mean the same volume name in two different pods.  Is podUID always included in the directory name, dsw, asw, etc?",
        "createdAt" : "2019-07-12T01:02:19Z",
        "updatedAt" : "2019-07-12T01:02:20Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "b371f8ef-cfdc-4d56-8ff3-8ee2ba4b50eb",
        "parentId" : "a373df86-1aef-439c-82ed-552f1d6a255d",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "yes, I saw the directory contains pod UID, ASW definitely distinguishes between pods, and I believe dsw does.\r\n\r\nMigrated volumes are all treated like their original volumes (in this case the in-tree inline volume) in the internal caches. They are only shimmed for the last mile where CSI needs to understand what to do.",
        "createdAt" : "2019-07-12T18:46:05Z",
        "updatedAt" : "2019-07-12T18:46:06Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "93d6356d2f1cc6013e9fea2f9935928e101c8407",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +61,65 @@\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\t// A.K.A InnerVolumeSpecName required to match for Unmount\n\t\t\tName: volume.Name,\n\t\t},\n\t\tSpec: v1.PersistentVolumeSpec{"
  },
  {
    "id" : "3963fc3c-e9ce-4177-9133-e168d530c895",
    "prId" : 74858,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74858#pullrequestreview-210430918",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc1c0c88-b5db-494c-90b0-526a690d6486",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "seems like if its a url schema we regmatch the ID to sanity check, yet if it isn't prefixed in the url format we let it straight through. Should we be doing a sanity regmatch here too?",
        "createdAt" : "2019-03-04T19:06:19Z",
        "updatedAt" : "2019-03-05T23:11:45Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "715ae219-9360-4aa1-b1ba-653750f30d3b",
        "parentId" : "fc1c0c88-b5db-494c-90b0-526a690d6486",
        "authorId" : "41981c80-b404-4c55-bd22-5f96c0512a61",
        "body" : "I simply copied original implementation. Don't want to expand the scope too much. Maybe we can do it later?",
        "createdAt" : "2019-03-04T23:58:46Z",
        "updatedAt" : "2019-03-05T23:11:45Z",
        "lastEditedBy" : "41981c80-b404-4c55-bd22-5f96c0512a61",
        "tags" : [
        ]
      }
    ],
    "commit" : "001d9c694e67d5e5b4ed501fb19bcbfdbc1be57a",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +146,150 @@\t// want the AZ in the host.\n\tif !strings.HasPrefix(kubernetesID, \"aws://\") {\n\t\t// Assume a bare aws volume id (vol-1234...)\n\t\treturn kubernetesID, nil\n\t}"
  }
]