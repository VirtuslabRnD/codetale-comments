[
  {
    "id" : "0696391c-4ec1-4e43-9a2a-8f8e0c02f247",
    "prId" : 101235,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101235#pullrequestreview-639461279",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6ed6484-b218-4a1b-a90a-a7b9ac6202b0",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "In what scenarios is \"default\" namespace still used?",
        "createdAt" : "2021-04-19T16:54:28Z",
        "updatedAt" : "2021-04-20T07:23:30Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "0d26b020-828d-4bc1-abcc-e41385af3e8a",
        "parentId" : "d6ed6484-b218-4a1b-a90a-a7b9ac6202b0",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "if original `secretNamespace` is set as nil, then `default` should be set, anyway, it should have a default value.",
        "createdAt" : "2021-04-20T02:57:43Z",
        "updatedAt" : "2021-04-20T07:23:30Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "3be1959c-5666-4542-b64d-b2b28e9c12c9",
        "parentId" : "d6ed6484-b218-4a1b-a90a-a7b9ac6202b0",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "`podNamespace` may have an empty value? That's for the sake of that condition.",
        "createdAt" : "2021-04-20T02:59:40Z",
        "updatedAt" : "2021-04-20T07:23:30Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "e10d3948f575f4e28629d9dda66b5dd7c4838067",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +78,82 @@\t}\n\n\tsecretNamespace := defaultSecretNamespace\n\tif podNamespace != \"\" {\n\t\tsecretNamespace = podNamespace"
  },
  {
    "id" : "f13acdd3-8a52-4b58-9b99-f7aee60418c3",
    "prId" : 97877,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97877#pullrequestreview-569206512",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63981aa0-f91f-4763-8114-e44315dee5e8",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "thanks @liggitt, I have verified, this line fixed the node auth issue. Original `TranslateCSIPVToInTree` set `SecretNamespace` as nil by default, this PR set `default` by default.",
        "createdAt" : "2021-01-15T12:11:32Z",
        "updatedAt" : "2021-01-22T09:01:07Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "1df2fcf8d48da1b4d0d0749b093d70d6ee742ddc",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +197,201 @@\tif azureSource.SecretNamespace == nil {\n\t\tns := defaultSecretNamespace\n\t\tazureSource.SecretNamespace = &ns\n\t}\n"
  },
  {
    "id" : "f4ff67be-2bc1-40c1-b209-07a6eea06968",
    "prId" : 97877,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97877#pullrequestreview-574014575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c5679d7-513d-4275-aa65-00c4700448ef",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "When does the CSI driver set this field? Can we have it use only NodeStageSecretRef?",
        "createdAt" : "2021-01-20T01:23:13Z",
        "updatedAt" : "2021-01-22T09:01:07Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "6179eb57-cdb8-4633-8955-86e578c7ccd5",
        "parentId" : "9c5679d7-513d-4275-aa65-00c4700448ef",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "It's up to user, user could use `NodeStageSecretRef` or use `secretName` parameter to set secret, anyway, we supports both.",
        "createdAt" : "2021-01-20T14:13:16Z",
        "updatedAt" : "2021-01-22T09:01:07Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "3626624a-b6c1-4ada-89bb-e4feb8215247",
        "parentId" : "9c5679d7-513d-4275-aa65-00c4700448ef",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can we deprecate the use of `secretName` in the CSI driver since it is equivalent to `NodeStageSecretRef`? The advantage of NodeStageSecretRef is that the driver does not need broad permissions for accessing Kubernetes secrets.",
        "createdAt" : "2021-01-21T17:57:58Z",
        "updatedAt" : "2021-01-22T09:01:07Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "69db6625-7ff0-4cf1-9f17-0c3170276179",
        "parentId" : "9c5679d7-513d-4275-aa65-00c4700448ef",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "Yes, in CSI driver, we could suggest using `NodeStageSecretRef`, while in this translation lib, we still need to handle such scenario.",
        "createdAt" : "2021-01-22T07:43:20Z",
        "updatedAt" : "2021-01-22T09:01:07Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "1df2fcf8d48da1b4d0d0749b093d70d6ee742ddc",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +170,174 @@\t\tcase secretNameField:\n\t\t\tazureSource.SecretName = v\n\t\tcase secretNamespaceField:\n\t\t\tns := v\n\t\t\tazureSource.SecretNamespace = &ns"
  },
  {
    "id" : "959d340c-2906-496c-a9a8-baadadb994b8",
    "prId" : 97877,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97877#pullrequestreview-574721823",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8c7854c-7df7-43c0-a244-354d77d2a667",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Similar question for shareName. Will it always be identifiable from the volumeHandle?\r\n\r\nIt would be simpler to eliminate duplicate fields. Then we don't need to think about cases like if the 2 fields have different values.",
        "createdAt" : "2021-01-21T18:21:12Z",
        "updatedAt" : "2021-01-22T09:01:07Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "887ea19c-de50-4cbd-944c-ee10c87923f7",
        "parentId" : "a8c7854c-7df7-43c0-a244-354d77d2a667",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "there is also cases there `volumeHandle` is arbitrary string, user input shareName by storage class or PV parameters, we also supports that. If no such input, will parse from volumeHandle",
        "createdAt" : "2021-01-22T07:42:12Z",
        "updatedAt" : "2021-01-22T09:01:07Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "d686384c-6cb9-41fb-b05d-0e709aa91ac1",
        "parentId" : "a8c7854c-7df7-43c0-a244-354d77d2a667",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can we consolidate on the volumeHandle format? For example, if the shareName is a storageclass parameter, then the provisioned PV object will have the shareName in the volumeHandle and not the attributes. And for a preprovisioned PV case, the share name has to be provided in the volumeHandle?",
        "createdAt" : "2021-01-22T21:17:12Z",
        "updatedAt" : "2021-01-22T21:17:12Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "d8f6ea16-8e16-4a81-8d94-b909c28ea1ec",
        "parentId" : "a8c7854c-7df7-43c0-a244-354d77d2a667",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "https://github.com/kubernetes-sigs/azurefile-csi-driver/issues/536",
        "createdAt" : "2021-01-23T01:43:58Z",
        "updatedAt" : "2021-01-23T01:43:58Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "1df2fcf8d48da1b4d0d0749b093d70d6ee742ddc",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +166,170 @@\tfor k, v := range csiSource.VolumeAttributes {\n\t\tswitch strings.ToLower(k) {\n\t\tcase shareNameField:\n\t\t\tazureSource.ShareName = v\n\t\tcase secretNameField:"
  },
  {
    "id" : "02c3e7fe-7c02-417e-bd82-b3055bddcd9d",
    "prId" : 97877,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97877#pullrequestreview-615966743",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4724d628-3210-4556-9caf-f584d036da98",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this may need to be adjusted as part of undoing the regression in https://github.com/kubernetes/kubernetes/pull/97417\r\n\r\nsee https://github.com/kubernetes/kubernetes/issues/99061#issuecomment-801953931 for details",
        "createdAt" : "2021-03-18T14:02:45Z",
        "updatedAt" : "2021-03-18T14:02:46Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f4a0ac23-dc0b-4f67-a6c1-7dfc2b8b59b1",
        "parentId" : "4724d628-3210-4556-9caf-f584d036da98",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "in csi migration translation, there is no way to get pod namespace, unless we address this, otherwise in CSI migration would break also. We are planning to turn on csi migration in 1.21, it will break in that scenario too.\r\n\r\nThe main issue is that original inline azure file volume does not have a `secretNamespace` field, while azure file persistent volume has that field.",
        "createdAt" : "2021-03-18T14:13:52Z",
        "updatedAt" : "2021-03-18T14:14:07Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "18b3aad3-9cea-41a9-9002-93e930d07c73",
        "parentId" : "4724d628-3210-4556-9caf-f584d036da98",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the backwards compatibility issue has to be solved before that can be enabled",
        "createdAt" : "2021-03-18T14:17:18Z",
        "updatedAt" : "2021-03-18T14:17:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5c18e505-443f-458f-8a02-2870fbc7b972",
        "parentId" : "4724d628-3210-4556-9caf-f584d036da98",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "is it possible to add a new field(`secretNamespace`) in azure file inline volume, that's the best way I could see to solve this issue. In csi migration translation lib, there is no way to get pod namespace.",
        "createdAt" : "2021-03-18T14:22:58Z",
        "updatedAt" : "2021-03-18T14:22:58Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "95ae70e6-eaf6-4d15-9fac-ac2b965f6eba",
        "parentId" : "4724d628-3210-4556-9caf-f584d036da98",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> is it possible to add a new field(`secretNamespace`) in azure file inline volume, that's the best way I could see to solve this issue.\r\n\r\nNo, secret references in pod specs cannot reference cross-namespace secrets.\r\n\r\n> In csi migration translation lib, there is no way to get pod namespace.\r\n\r\nThat sounds like an issue that could be solved by plumbing the pod namespace through the go API.",
        "createdAt" : "2021-03-18T14:35:11Z",
        "updatedAt" : "2021-03-18T14:35:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "508e4136-f9ac-4d72-9cd1-7b0d0c547506",
        "parentId" : "4724d628-3210-4556-9caf-f584d036da98",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "@andyzhangx do you need the secret only for node operations or also attach? If only node, then plumbing in pod namespace should not be difficult:\r\nhttps://github.com/kubernetes/kubernetes/blob/54449be03127f883e52df48b95adef36925ae2cf/pkg/kubelet/volumemanager/populator/desired_state_of_world_populator.go#L556\r\n\r\nPlumbing it through attach will be more effort as we would need to add a field to the VolumeAttachment:\r\nhttps://github.com/kubernetes/kubernetes/blob/54449be03127f883e52df48b95adef36925ae2cf/pkg/apis/storage/types.go#L164\r\n\r\ncc @Jiawei0227 ",
        "createdAt" : "2021-03-18T16:24:01Z",
        "updatedAt" : "2021-03-18T16:24:01Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "67531ddf-eec4-4031-a0c8-9f6a6f2925a6",
        "parentId" : "4724d628-3210-4556-9caf-f584d036da98",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "hi @msau42 we need pod namespace in mount(node operation), expand & delete(controller operations), is that possible? thanks.  https://github.com/kubernetes/kubernetes/pull/97417",
        "createdAt" : "2021-03-18T23:36:38Z",
        "updatedAt" : "2021-03-18T23:37:05Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "2e47d503-b249-43b8-87a1-df0421aef9b3",
        "parentId" : "4724d628-3210-4556-9caf-f584d036da98",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Expand and delete operations are not supported for inline volumes.",
        "createdAt" : "2021-03-19T00:04:54Z",
        "updatedAt" : "2021-03-19T00:04:55Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "1df2fcf8d48da1b4d0d0749b093d70d6ee742ddc",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +196,200 @@\n\tif azureSource.SecretNamespace == nil {\n\t\tns := defaultSecretNamespace\n\t\tazureSource.SecretNamespace = &ns\n\t}"
  },
  {
    "id" : "f4a4eaef-476a-44b3-92af-2e150f91beaf",
    "prId" : 90162,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90162#pullrequestreview-394296368",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b5ae275-7083-41fa-b1c8-74ab35645ea5",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "could you also remove Line114, thanks:\r\n```\r\npv.Spec.AccessModes = backwardCompatibleAccessModes(pv.Spec.AccessModes)\r\n```",
        "createdAt" : "2020-04-16T04:50:34Z",
        "updatedAt" : "2020-04-20T11:19:15Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "17d2e00e680a9082413522236d25bec998efdee1",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +133,137 @@\t)\n\n\tif azureSource.SecretNamespace != nil {\n\t\tcsiSource.NodeStageSecretRef.Namespace = *azureSource.SecretNamespace\n\t}"
  },
  {
    "id" : "42dd2962-14c8-43bc-b40f-ca7a0b932faf",
    "prId" : 90162,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90162#pullrequestreview-396942056",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ebf07d1-d3ce-463c-865a-5bb37e1b7a36",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Is this a normal condition? Should it fail instead?",
        "createdAt" : "2020-04-21T01:00:04Z",
        "updatedAt" : "2020-04-21T01:03:35Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "843b6b44-c05b-4566-b9d0-167c92857ca8",
        "parentId" : "6ebf07d1-d3ce-463c-865a-5bb37e1b7a36",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "in such condition, secret is spedified by user, so it does not obey the naming rule, and this is only for volumeid generation, we will use NodeStageSecret for secret passing:\r\n```\r\n\t\t\t\t\t\tNodeStageSecretRef: &v1.SecretReference{\r\n\t\t\t\t\t\t\tName:      azureSource.SecretName,\r\n\t\t\t\t\t\t\tNamespace: defaultSecretNamespace,\r\n\t\t\t\t\t\t},\r\n```",
        "createdAt" : "2020-04-21T02:19:08Z",
        "updatedAt" : "2020-04-21T03:09:14Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "17d2e00e680a9082413522236d25bec998efdee1",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +73,77 @@\tif err != nil {\n\t\tklog.Warningf(\"getStorageAccountName(%s) returned with error: %v\", azureSource.SecretName, err)\n\t\taccountName = azureSource.SecretName\n\t}\n"
  }
]