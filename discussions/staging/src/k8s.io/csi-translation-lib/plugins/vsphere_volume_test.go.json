[
  {
    "id" : "f741ce8b-eeb6-41e5-b2e9-e70b70c488c8",
    "prId" : 102414,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102414#pullrequestreview-686584305",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "156bed25-1276-420c-8176-c3e6f1c9edcc",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can we have both beta and v1 unit tests?",
        "createdAt" : "2021-06-15T02:28:50Z",
        "updatedAt" : "2021-06-15T02:30:32Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "0692846b-f28a-4286-96b7-507b4a0ae635",
        "parentId" : "156bed25-1276-420c-8176-c3e6f1c9edcc",
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "adding unit test for beta labels\r\n\r\n```golang\r\n\ttopologySelectorTermWithBetaLabels := v1.TopologySelectorTerm{[]v1.TopologySelectorLabelRequirement{\r\n\t\t{\r\n\t\t\tKey:    v1.LabelFailureDomainBetaZone,\r\n\t\t\tValues: []string{\"zone-a\"},\r\n\t\t},\r\n\t\t{\r\n\t\t\tKey:    v1.LabelFailureDomainBetaRegion,\r\n\t\t\tValues: []string{\"region-a\"},\r\n\t\t},\r\n\t}}\r\n```\r\n\r\n```golang\r\n                {\r\n\t\t\tname:  \"translate with storagepolicyname and allowedTopology beta labels\",\r\n\t\t\tsc:    NewStorageClass(map[string]string{\"storagepolicyname\": \"test-policy-name\"}, []v1.TopologySelectorTerm{topologySelectorTermWithBetaLabels}),\r\n\t\t\texpSc: NewStorageClass(map[string]string{\"storagepolicyname\": \"test-policy-name\", paramcsiMigration: \"true\"}, []v1.TopologySelectorTerm{topologySelectorTermWithBetaLabels}),\r\n\t\t},\r\n```",
        "createdAt" : "2021-06-17T17:00:08Z",
        "updatedAt" : "2021-06-17T17:39:47Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      }
    ],
    "commit" : "518844fd25f593326340d936bab3cedda0f7dda9",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +31,35 @@\ttopologySelectorTerm := v1.TopologySelectorTerm{[]v1.TopologySelectorLabelRequirement{\n\t\t{\n\t\t\tKey:    v1.LabelTopologyZone,\n\t\t\tValues: []string{\"zone-a\"},\n\t\t},"
  },
  {
    "id" : "1c279b32-581e-45ac-8a7b-e92c6fd7e4c7",
    "prId" : 90911,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90911#pullrequestreview-414872468",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a2ac7da-51f4-4030-b93d-c34d164ae263",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "Do you want to add a negative case here?",
        "createdAt" : "2020-05-18T23:02:13Z",
        "updatedAt" : "2020-06-08T23:17:44Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "037f56ab-3ec4-4da1-9686-e7481e50d45d",
        "parentId" : "5a2ac7da-51f4-4030-b93d-c34d164ae263",
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "The driver will always send a valid spec. the function `TranslateCSIPVToInTree` does return error for just two cases  pv is nil and pv.Spec.CSI  is nil.\r\n\r\n```\r\n\tif pv == nil || pv.Spec.CSI == nil {\r\n\t\treturn nil, fmt.Errorf(\"pv is nil or CSI source not defined on pv\")\r\n\t}\r\n```\r\n\r\nAdded tests for both.\r\n\r\n```\r\n=== RUN   TestTranslateVSphereCSIPVToInTree\r\n--- PASS: TestTranslateVSphereCSIPVToInTree (0.00s)\r\n    vsphere_volume_test.go:176: Testing expect error when pv is nil\r\n    vsphere_volume_test.go:176: Testing expect error when pv.Spec.CSI is nil\r\n    vsphere_volume_test.go:176: Testing translate valid vSphere CSI PV to vSphere in-tree PV\r\n```\r\n\r\n\r\n",
        "createdAt" : "2020-05-19T22:39:16Z",
        "updatedAt" : "2020-06-08T23:17:44Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      }
    ],
    "commit" : "148ef06a3d1a0442078bccc945e05826cd6ae29a",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +144,148 @@\t\t},\n\t\t{\n\t\t\tname: \"translate valid vSphere CSI PV to vSphere in-tree PV\",\n\t\t\tcsiPV: &v1.PersistentVolume{\n\t\t\t\tObjectMeta: metav1.ObjectMeta{"
  },
  {
    "id" : "83645fb1-c832-4f96-825f-53b5303d69c3",
    "prId" : 90911,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90911#pullrequestreview-414872883",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cac9db2b-426d-44c0-9eaa-f120613e6107",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "Did you confirm that spaces and square brackets are valid characters for resource names?\r\n\r\nEDIT: I guess it's actually OK because the translated object never goes to the API server. Just seemed a bit weird.",
        "createdAt" : "2020-05-18T23:03:45Z",
        "updatedAt" : "2020-06-08T23:17:44Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "d274fc7e-e328-4ae7-9dce-36c9dd30e4ef",
        "parentId" : "cac9db2b-426d-44c0-9eaa-f120613e6107",
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "since PV is not created using this name. it is ok.",
        "createdAt" : "2020-05-19T22:40:19Z",
        "updatedAt" : "2020-06-08T23:17:44Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      }
    ],
    "commit" : "148ef06a3d1a0442078bccc945e05826cd6ae29a",
    "line" : 297,
    "diffHunk" : "@@ -1,1 +295,299 @@\t\t\tcsiPV: &v1.PersistentVolume{\n\t\t\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\t\t\tName: fmt.Sprintf(\"%s-%s\", VSphereDriverName, \"[vsanDatastore] volume/inlinevolume.vmdk\"),\n\t\t\t\t},\n\t\t\t\tSpec: v1.PersistentVolumeSpec{"
  }
]