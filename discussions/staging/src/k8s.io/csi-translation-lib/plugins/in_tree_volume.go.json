[
  {
    "id" : "03ddbbb9-1e1c-4811-81aa-3f0f3da0a660",
    "prId" : 101235,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101235#pullrequestreview-639594277",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5277bc6d-3d03-4534-a9fc-a05cd323a1da",
        "parentId" : null,
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "Add comments podNamespace is only needed for azurefile to fetch secret namespace. No need to be set for other plugins.",
        "createdAt" : "2021-04-20T06:14:42Z",
        "updatedAt" : "2021-04-20T07:23:30Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      },
      {
        "id" : "418cb576-bb9d-40b6-82cd-52955d901bf0",
        "parentId" : "5277bc6d-3d03-4534-a9fc-a05cd323a1da",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "fixed, thanks.",
        "createdAt" : "2021-04-20T07:23:32Z",
        "updatedAt" : "2021-04-20T07:23:32Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "e10d3948f575f4e28629d9dda66b5dd7c4838067",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +37,41 @@\t// TranslateInTreeInlineVolumeToCSI takes a inline volume and will translate\n\t// the in-tree inline volume source to a CSIPersistentVolumeSource\n\t// A PV object containing the CSIPersistentVolumeSource in it's spec is returned\n\t// podNamespace is only needed for azurefile to fetch secret namespace, no need to be set for other plugins.\n\tTranslateInTreeInlineVolumeToCSI(volume *v1.Volume, podNamespace string) (*v1.PersistentVolume, error)"
  },
  {
    "id" : "1418bb25-c37a-4646-9fd3-4cc030be1f1e",
    "prId" : 97823,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97823#pullrequestreview-566801376",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf0a91c8-8cfc-41b8-b29a-34db030cc67f",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "any reason why we need an intermediate map instead of directly appending to an array?",
        "createdAt" : "2021-01-12T21:17:18Z",
        "updatedAt" : "2021-01-20T18:53:04Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "85349619-9746-4882-8726-97a0132a894c",
        "parentId" : "cf0a91c8-8cfc-41b8-b29a-34db030cc67f",
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "Because we will get duplicate values. For example, a PV has two NodeSelectorTerms and each of them has a region kubernetes topology which points to the same region.",
        "createdAt" : "2021-01-13T00:10:27Z",
        "updatedAt" : "2021-01-20T18:53:04Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      }
    ],
    "commit" : "f83df5d1621e967a140e4e3aafbd602de1848638",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +116,120 @@\t\t\tif r.Key == key {\n\t\t\t\tfor _, v := range r.Values {\n\t\t\t\t\tvalues[v] = true\n\t\t\t\t}\n\t\t\t}"
  },
  {
    "id" : "b5ba6a1a-36b8-4fc9-b6ff-af05b73edc63",
    "prId" : 97823,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97823#pullrequestreview-568782694",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbaed926-8816-411d-add2-29d3a71aff4b",
        "parentId" : null,
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "Should `zoneVals` be sorted before joining? To reduce the risk of having just string equality checks somewhere.",
        "createdAt" : "2021-01-14T22:58:31Z",
        "updatedAt" : "2021-01-20T18:53:04Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "d370c198-90f0-4d32-b37c-ee6dabe787d5",
        "parentId" : "bbaed926-8816-411d-add2-29d3a71aff4b",
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "zoneVals have already been sorted in the `getTopologyValues` return. I will add a comment in the func",
        "createdAt" : "2021-01-15T02:54:39Z",
        "updatedAt" : "2021-01-20T18:53:04Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      }
    ],
    "commit" : "f83df5d1621e967a140e4e3aafbd602de1848638",
    "line" : 250,
    "diffHunk" : "@@ -1,1 +298,302 @@\t\t_, zoneOK := pv.Labels[zoneLabel]\n\t\tif !zoneOK {\n\t\t\tzoneValStr := strings.Join(zoneVals, labelMultiZoneDelimiter)\n\t\t\tpv.Labels[zoneLabel] = zoneValStr\n\t\t}"
  },
  {
    "id" : "cff9cd65-67e7-4149-812d-9ccebb0287ab",
    "prId" : 97823,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97823#pullrequestreview-569799386",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8dce030e-4210-4f3f-988c-d5f5e088739c",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "do you need to initialize MatchExpressions first?",
        "createdAt" : "2021-01-16T00:42:25Z",
        "updatedAt" : "2021-01-20T18:53:04Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "b8a0d3a1-6215-4cfe-9906-89e0dac45bd2",
        "parentId" : "8dce030e-4210-4f3f-988c-d5f5e088739c",
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "I thought array does not need initialization? https://play.golang.org/p/r7D8bx7DSXc",
        "createdAt" : "2021-01-16T01:43:26Z",
        "updatedAt" : "2021-01-20T18:53:04Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      }
    ],
    "commit" : "f83df5d1621e967a140e4e3aafbd602de1848638",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +167,171 @@\t// add the CSI topology to each term\n\tfor i := range pv.Spec.NodeAffinity.Required.NodeSelectorTerms {\n\t\tpv.Spec.NodeAffinity.Required.NodeSelectorTerms[i].MatchExpressions = append(\n\t\t\tpv.Spec.NodeAffinity.Required.NodeSelectorTerms[i].MatchExpressions,\n\t\t\ttopology,"
  },
  {
    "id" : "8578c715-be2f-407d-be03-70eecbeb25a8",
    "prId" : 97823,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97823#pullrequestreview-569812541",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3a3db9d-f5b2-48be-92a5-950f1e47c15d",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Why do we need `re` instead of sorting `values` directly? Also, why do we need to sort?",
        "createdAt" : "2021-01-16T00:48:45Z",
        "updatedAt" : "2021-01-20T18:53:04Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "db196c74-1051-4e99-bbb6-678f69b89026",
        "parentId" : "f3a3db9d-f5b2-48be-92a5-950f1e47c15d",
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "Hmm, because values is a map so that we can get rid of duplicate values.\r\nThere will be cases in different terms we have same key, value so there will be duplication. Sort is because we will probably use the slice to generate PV label and we want that in order.",
        "createdAt" : "2021-01-16T01:45:40Z",
        "updatedAt" : "2021-01-20T18:53:04Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      },
      {
        "id" : "b6d051b7-f3c5-4546-bee2-a6382c1fdef6",
        "parentId" : "f3a3db9d-f5b2-48be-92a5-950f1e47c15d",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Ok, that seems reasonable. Can you add some comments explaining those?\r\n\r\nAlso it may be worth commenting that this function collapses multiple zones into a list that is ORed. It assumes the plugin doesn't support a constraint like \"zone1\" and \"zone2\"",
        "createdAt" : "2021-01-16T03:19:32Z",
        "updatedAt" : "2021-01-20T18:53:04Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "594c57c0-e7fa-4048-8196-690fe5b45cab",
        "parentId" : "f3a3db9d-f5b2-48be-92a5-950f1e47c15d",
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "Done",
        "createdAt" : "2021-01-16T04:48:42Z",
        "updatedAt" : "2021-01-20T18:53:04Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      }
    ],
    "commit" : "f83df5d1621e967a140e4e3aafbd602de1848638",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +122,126 @@\t}\n\t// remove duplication and sort them in order for better usage\n\tvar re []string\n\tfor k := range values {\n\t\tre = append(re, k)"
  },
  {
    "id" : "dfc8aec0-8846-4ba2-8f9b-c3d049f0207a",
    "prId" : 83394,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83394#pullrequestreview-316686650",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc255167-6c45-4f5e-9f1b-d69c9017bb34",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "It seems we can break out of the inner loop and continue with the outer loop.",
        "createdAt" : "2019-11-14T02:56:01Z",
        "updatedAt" : "2019-11-14T02:56:01Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbfc6ef4506e2144a9abdfb038386c2bac1fba08",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +71,75 @@\t\tfor j, r := range pv.Spec.NodeAffinity.Required.NodeSelectorTerms[i].MatchExpressions {\n\t\t\tif r.Key == oldKey {\n\t\t\t\tpv.Spec.NodeAffinity.Required.NodeSelectorTerms[i].MatchExpressions[j].Key = newKey\n\t\t\t}\n\t\t}"
  },
  {
    "id" : "e283e378-b7b5-489d-ba38-6baae955c67f",
    "prId" : 83394,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83394#pullrequestreview-316688426",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24385754-c47c-4837-a294-05347d3b99e8",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "we can break out of the inner loop and continue with the outer loop.",
        "createdAt" : "2019-11-14T03:03:08Z",
        "updatedAt" : "2019-11-14T03:03:09Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbfc6ef4506e2144a9abdfb038386c2bac1fba08",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +90,94 @@\t\tfor _, r := range pv.Spec.NodeAffinity.Required.NodeSelectorTerms[i].MatchExpressions {\n\t\t\tif r.Key == key {\n\t\t\t\tvalues = append(values, r.Values...)\n\t\t\t}\n\t\t}"
  }
]