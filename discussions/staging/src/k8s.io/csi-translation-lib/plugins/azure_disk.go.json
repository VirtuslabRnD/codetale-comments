[
  {
    "id" : "e07123b0-42ff-46c5-ade8-5b8869e94519",
    "prId" : 83249,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83249#pullrequestreview-294623460",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "144a2b6a-ff1b-4d55-be68-ab19c31cc606",
        "parentId" : null,
        "authorId" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "body" : "Slightly unrelated to the specific nil checks (which looks lgtm), Q for @andyzhangx: why do we need FSType passed twice - as a field in CSI source as well as a volume attribute. If not needed, can one of them be removed?",
        "createdAt" : "2019-09-27T21:06:21Z",
        "updatedAt" : "2019-09-27T21:06:37Z",
        "lastEditedBy" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "tags" : [
        ]
      },
      {
        "id" : "c8053159-5cd3-4faf-9d30-ca1d45f61157",
        "parentId" : "144a2b6a-ff1b-4d55-be68-ab19c31cc606",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "@ddebroy we support fstype in both CSI and driver parameter settings, this PR lgtm, thanks.",
        "createdAt" : "2019-09-28T06:07:52Z",
        "updatedAt" : "2019-09-28T06:08:26Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "55583be725dcde2bac9ab82096f5dd146770eb48",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +93,97 @@\t}\n\tif azureSource.FSType != nil {\n\t\tpv.Spec.PersistentVolumeSource.CSI.FSType = *azureSource.FSType\n\t\tpv.Spec.PersistentVolumeSource.CSI.VolumeAttributes[azureDiskFSType] = *azureSource.FSType\n\t}"
  },
  {
    "id" : "6e099323-d77a-4a32-a69f-2c29018f11b2",
    "prId" : 81633,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81633#pullrequestreview-276946171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12368a06-c360-4b9e-ba46-0d9def326b41",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "also check for empty string here? Is there any default value if it is empty string?",
        "createdAt" : "2019-08-20T06:04:37Z",
        "updatedAt" : "2019-08-20T06:04:37Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "fdb75340-2495-4342-ae4c-6f13236f38a6",
        "parentId" : "12368a06-c360-4b9e-ba46-0d9def326b41",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Oh, I see it's already checked below.",
        "createdAt" : "2019-08-20T06:05:05Z",
        "updatedAt" : "2019-08-20T06:05:06Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "979075839443eb47c1558f6761f38c5d2ed852f0",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +123,127 @@\t}\n\n\tif azureSource.FSType != nil {\n\t\tcsiSource.VolumeAttributes[azureDiskFSType] = *azureSource.FSType\n\t}"
  },
  {
    "id" : "c01c3861-e067-4596-8aee-bc8b0eaf8bce",
    "prId" : 81633,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81633#pullrequestreview-277435524",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a81f104-64d2-41b6-930c-32657d7a71d5",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "could you write a quick unit test?",
        "createdAt" : "2019-08-20T20:56:45Z",
        "updatedAt" : "2019-08-20T20:56:45Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "979075839443eb47c1558f6761f38c5d2ed852f0",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +81,85 @@\t\t\t\t\tReadOnly:         *azureSource.ReadOnly,\n\t\t\t\t\tFSType:           *azureSource.FSType,\n\t\t\t\t\tVolumeAttributes: map[string]string{azureDiskKind: \"Managed\"},\n\t\t\t\t},\n\t\t\t},"
  },
  {
    "id" : "546b2af5-920b-4728-a890-7de1eb239bfd",
    "prId" : 77703,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77703#pullrequestreview-243843305",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09c47229-7d2d-4a15-be19-bd1fae05a54b",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "should this be `if azureSource.CachingMode != nil && *azureSource.CachingMode {`?",
        "createdAt" : "2019-05-30T13:34:37Z",
        "updatedAt" : "2019-05-30T13:34:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "01cb0812-1c29-4047-84ea-d1f4e00e1ee0",
        "parentId" : "09c47229-7d2d-4a15-be19-bd1fae05a54b",
        "authorId" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "body" : "good catch! I think we should just check for `if azureSource.CachingMode != nil` rather than something along the lines of `if azureSource.CachingMode != nil && *azureSource.CachingMode != \"\"` So:\r\n\r\n```\r\n        if azureSource.CachingMode != nil {\r\n                pv.Spec.PersistentVolumeSource.CSI.VolumeAttributes[azureDiskCachingMode] = string(*azureSource.CachingMode)\r\n        }\r\n```\r\n\r\nSeems like this is something applicable to the above code as well for the regular `TranslateInTreePVToCSI` already there for AzureDisk at https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/csi-translation-lib/plugins/azure_disk.go#L79. \r\n\r\nhttps://github.com/kubernetes/kubernetes/issues/78524 to fix it it both places.",
        "createdAt" : "2019-05-30T14:56:02Z",
        "updatedAt" : "2019-05-30T15:02:24Z",
        "lastEditedBy" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "tags" : [
        ]
      }
    ],
    "commit" : "de7be9d6133bb985d9f1d0fa029e03166f6cd0f4",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +82,86 @@\t}\n\n\tif *azureSource.CachingMode != \"\" {\n\t\tpv.Spec.PersistentVolumeSource.CSI.VolumeAttributes[azureDiskCachingMode] = string(*azureSource.CachingMode)\n\t}"
  },
  {
    "id" : "369414da-1281-4434-8ffe-6c236139ab7c",
    "prId" : 77703,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77703#pullrequestreview-243844778",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ad5939c-c09f-42b4-ab39-ccaa963cd07c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "should this be `if azureSource.FSType != nil && *azureSource.FSType {`?",
        "createdAt" : "2019-05-30T13:35:01Z",
        "updatedAt" : "2019-05-30T13:35:01Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "10afa2ad-99e2-4a4f-bb7a-e7ea90a08b61",
        "parentId" : "8ad5939c-c09f-42b4-ab39-ccaa963cd07c",
        "authorId" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "body" : "Thinking of changing this block to:\r\n```\r\n        if azureSource.FSType != nil {\r\n                pv.Spec.PersistentVolumeSource.CSI.FSType = *azureSource.FSType\r\n                pv.Spec.PersistentVolumeSource.CSI.VolumeAttributes[azureDiskFSType] = *azureSource.FSType\r\n        }\r\n```\r\nApplies to both inline portion in this PR as well as https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/csi-translation-lib/plugins/azure_disk.go#L83 . \r\n\r\nhttps://github.com/kubernetes/kubernetes/issues/78524 to fix it in both places.\r\n\r\nNot quite sure @andyzhangx why the FSType needs to be passed as a VolumeAttribute parameter on top of the field?",
        "createdAt" : "2019-05-30T14:58:22Z",
        "updatedAt" : "2019-05-30T15:02:42Z",
        "lastEditedBy" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "tags" : [
        ]
      }
    ],
    "commit" : "de7be9d6133bb985d9f1d0fa029e03166f6cd0f4",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +85,89 @@\t\tpv.Spec.PersistentVolumeSource.CSI.VolumeAttributes[azureDiskCachingMode] = string(*azureSource.CachingMode)\n\t}\n\tif *azureSource.FSType != \"\" {\n\t\tpv.Spec.PersistentVolumeSource.CSI.VolumeAttributes[azureDiskFSType] = *azureSource.FSType\n\t}"
  },
  {
    "id" : "1bbc1b8c-9073-439b-8ea5-3f8fa5e1ea3e",
    "prId" : 77703,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77703#pullrequestreview-243847580",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5e94db8-498d-48fc-9fb9-dac1a280f4ce",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "similar comments about nil checks on these fields before dereferencing them",
        "createdAt" : "2019-05-30T13:35:32Z",
        "updatedAt" : "2019-05-30T13:35:32Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "36ba722a-0b0b-44a9-b68e-474ef74d0e33",
        "parentId" : "b5e94db8-498d-48fc-9fb9-dac1a280f4ce",
        "authorId" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "body" : "https://github.com/kubernetes/kubernetes/issues/78524 to fix this both above and in `TranslateInTreePVToCSI`",
        "createdAt" : "2019-05-30T15:03:12Z",
        "updatedAt" : "2019-05-30T15:03:12Z",
        "lastEditedBy" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "tags" : [
        ]
      }
    ],
    "commit" : "de7be9d6133bb985d9f1d0fa029e03166f6cd0f4",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +74,78 @@\t\t\t\t\tVolumeHandle:     azureSource.DataDiskURI,\n\t\t\t\t\tReadOnly:         *azureSource.ReadOnly,\n\t\t\t\t\tFSType:           *azureSource.FSType,\n\t\t\t\t\tVolumeAttributes: map[string]string{},\n\t\t\t\t},"
  },
  {
    "id" : "9b01ee51-5d87-40ee-9de3-d5dbf458d500",
    "prId" : 103439,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103439#pullrequestreview-709123946",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6468cdf6-1076-426b-9ec9-66920d2f84c6",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "> Does this mean if we put lower case intree, it will still translate to upper case?\r\n\r\nYes, here is the key fix. @Jiawei0227 \r\n@msau42 could you approve? thanks.",
        "createdAt" : "2021-07-03T03:09:55Z",
        "updatedAt" : "2021-07-03T03:09:55Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "d12e5648-8894-42ea-9257-fe06547595ae",
        "parentId" : "6468cdf6-1076-426b-9ec9-66920d2f84c6",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can we make the CSI driver case insensitive?",
        "createdAt" : "2021-07-14T00:43:19Z",
        "updatedAt" : "2021-07-14T00:43:56Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "3b514231-df98-4b74-88da-5fbb7550f6a0",
        "parentId" : "6468cdf6-1076-426b-9ec9-66920d2f84c6",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "there is already a fix in CSI driver to make case insensitive",
        "createdAt" : "2021-07-19T03:24:43Z",
        "updatedAt" : "2021-07-19T03:24:43Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9b8c5f992cdeeda33180f5ac2683e9445cbc146",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +212,216 @@\t\t\tazureSource.FSType = &fsType\n\t\t}\n\t\tazureSource.Kind = &managed\n\t}\n"
  },
  {
    "id" : "eabf7cf9-641b-447a-98ba-39a0c7b61ef5",
    "prId" : 103439,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103439#pullrequestreview-711130950",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80ebfa4f-e01b-405b-8bdf-0e328aa5f508",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can something not managed be specified?",
        "createdAt" : "2021-07-14T00:40:50Z",
        "updatedAt" : "2021-07-14T00:43:56Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "96b9b45a-ff9d-48a8-ba73-d4f2dbd82be1",
        "parentId" : "80ebfa4f-e01b-405b-8bdf-0e328aa5f508",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "since CSI driver only supports managed, we can only support `managed` in csi migration.",
        "createdAt" : "2021-07-14T02:53:24Z",
        "updatedAt" : "2021-07-14T02:53:24Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "bbe17177-4efe-441e-93fe-f90b7bda28c4",
        "parentId" : "80ebfa4f-e01b-405b-8bdf-0e328aa5f508",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "> Can we make the CSI driver case insensitive?\r\n\r\nIn theory, we could fix it in volume validation, while since this issue only exists in csi migration, may be not necessary now",
        "createdAt" : "2021-07-14T02:55:06Z",
        "updatedAt" : "2021-07-14T02:55:06Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "834c97b9-99b2-4128-80a4-996ad3b5da05",
        "parentId" : "80ebfa4f-e01b-405b-8bdf-0e328aa5f508",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "What happens if someone is using a volume that is unmanaged with CSI migration?",
        "createdAt" : "2021-07-14T03:06:36Z",
        "updatedAt" : "2021-07-14T03:06:36Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "9a03a9ce-b0d1-467e-b8ad-4a3c542d1457",
        "parentId" : "80ebfa4f-e01b-405b-8bdf-0e328aa5f508",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "> What happens if someone is using a volume that is unmanaged with CSI migration?\r\n\r\nit's not supported, volume would be in unattached state forever. unmanaged disk is actually deprecated in Azure, if user still wants to use unmanaged disk, they need to turn off csi migration for disk.",
        "createdAt" : "2021-07-14T03:16:18Z",
        "updatedAt" : "2021-07-14T03:16:18Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "94d3aad7-48c4-4154-9f1f-27d293eca661",
        "parentId" : "80ebfa4f-e01b-405b-8bdf-0e328aa5f508",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can a user use unmanaged disks with in-tree driver today? If so, we may need to also send a deprecation notice for this.\r\n\r\nAlso, should we return an error if the kind is not supported?",
        "createdAt" : "2021-07-16T03:32:36Z",
        "updatedAt" : "2021-07-16T03:32:36Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "934f2a06-a794-48f3-810b-a0f824362074",
        "parentId" : "80ebfa4f-e01b-405b-8bdf-0e328aa5f508",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "already added the error code and depreciation notice in doc notes if kind is not supported.",
        "createdAt" : "2021-07-19T03:28:45Z",
        "updatedAt" : "2021-07-19T03:28:45Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "7c1eaab2-fa6c-43ca-8250-3eb9fc27e22d",
        "parentId" : "80ebfa4f-e01b-405b-8bdf-0e328aa5f508",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Thanks, can you also clarify, is there any documentation we can point to users on how to migrate their disks from unmanaged to managed?",
        "createdAt" : "2021-07-20T23:01:41Z",
        "updatedAt" : "2021-07-20T23:01:41Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9b8c5f992cdeeda33180f5ac2683e9445cbc146",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +132,136 @@\t\tpv.Spec.PersistentVolumeSource.CSI.VolumeAttributes[azureDiskFSType] = *azureSource.FSType\n\t}\n\tpv.Spec.PersistentVolumeSource.CSI.VolumeAttributes[azureDiskKind] = managed\n\n\treturn pv, nil"
  }
]