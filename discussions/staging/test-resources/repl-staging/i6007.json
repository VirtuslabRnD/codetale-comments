[
  {
    "id" : "74f71247-37f2-423f-83fb-103c35a18072",
    "prId" : 11129,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/11129#pullrequestreview-570461091",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d4ca1d1-d7c2-4335-ae91-c8dc1733472d",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "I had to rename it here due to some strange interaction with `java.lang.Compiler` import\r\n\r\n```\r\nscala> import quoted._\r\nscala> import quoted.staging._\r\nscala> implicit def compiler: Compiler = Compiler.make(getClass.getClassLoader)\r\n1 | implicit def compiler: Compiler = Compiler.make(getClass.getClassLoader)\r\n  |                        ^^^^^^^^\r\n  |                       Reference to Compiler is ambiguous,\r\n  |                       it is both imported by import quoted.staging._\r\n  |                       and imported subsequently by import java.lang.{...}\r\n```\r\n",
        "createdAt" : "2021-01-18T12:17:25Z",
        "updatedAt" : "2021-01-18T12:56:10Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "2bbe645a-0357-4d45-a321-a5226cd801b3",
        "parentId" : "7d4ca1d1-d7c2-4335-ae91-c8dc1733472d",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "`StagingCompiler` sounds like an even better name than `Compiler`.",
        "createdAt" : "2021-01-18T12:19:51Z",
        "updatedAt" : "2021-01-18T12:56:10Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "1e827c44-4925-4fba-bc48-8b4a5aa1d96e",
        "parentId" : "7d4ca1d1-d7c2-4335-ae91-c8dc1733472d",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "This is a more general issue. I opened #11146.",
        "createdAt" : "2021-01-18T12:26:05Z",
        "updatedAt" : "2021-01-18T12:56:10Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "9de962bc-708d-4147-89c0-e9b86ac408fc",
        "parentId" : "7d4ca1d1-d7c2-4335-ae91-c8dc1733472d",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "If staging compiler sound better, maybe we could rewrite the docs to use\r\n```scala\r\nimport scala.quoted._\r\n\r\ngiven staging.Compiler = staging.Compiler.make(...)\r\n\r\nstaging.run {\r\n  ...\r\n}\r\n```\r\n\r\nThat does not affect the API changes and could be done later.",
        "createdAt" : "2021-01-18T12:42:10Z",
        "updatedAt" : "2021-01-18T12:56:10Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "4ad13aac-7902-4248-b9bb-bfd4c4c68185",
        "parentId" : "7d4ca1d1-d7c2-4335-ae91-c8dc1733472d",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "I think it will help in avoiding misuse of the staging API --- the users are forced to think what's staging and its difference from macros.",
        "createdAt" : "2021-01-18T12:50:39Z",
        "updatedAt" : "2021-01-18T12:56:10Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c2c8cfbd64885b7491f5f9f7c577c8abe6e6331",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1,5 @@scala> import scala.quoted._\nscala> import quoted.staging.{Compiler => StagingCompiler, _}\nscala> implicit def compiler: StagingCompiler = StagingCompiler.make(getClass.getClassLoader)\ndef compiler: quoted.staging.Compiler\nscala> def v(using Quotes) = '{ (if true then Some(1) else None).map(v => v+1) }"
  }
]