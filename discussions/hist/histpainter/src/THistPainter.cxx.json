[
  {
    "id" : "e493832f-f2ea-46a2-883d-15ff77cf4c6b",
    "prId" : 3779,
    "prUrl" : "https://github.com/root-project/root/pull/3779#pullrequestreview-241578626",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aebac780-949f-43bb-a091-77f8098dc6f5",
        "parentId" : null,
        "authorId" : "1bc667d2-9dd0-460f-b0ea-593cc2b4f7cd",
        "body" : "But what if this histogram is also drawn with option \"SAME\"? Don't you need to keep going until you find one that doesn't have \"SAME\" set?",
        "createdAt" : "2019-05-16T11:52:59Z",
        "updatedAt" : "2019-05-16T11:52:59Z",
        "lastEditedBy" : "1bc667d2-9dd0-460f-b0ea-593cc2b4f7cd",
        "tags" : [
        ]
      },
      {
        "id" : "ef0d002e-b6a4-4063-9c01-2570f953477d",
        "parentId" : "aebac780-949f-43bb-a091-77f8098dc6f5",
        "authorId" : "7b94eadb-dc83-4d04-8ff7-04ac4f7a9da7",
        "body" : "Seems to me it is correct. The first in the list of primitives defines the X and Y ranges of the plot. It cannot have the option SAME. The histograms are displayed in order. So if the 1st in the list has option SAME it means it will not define the plot ranges .. it will use undefined ranges and the plot will be very likely wrong. If you have a macro illustrating this case I'll be happy to try it.",
        "createdAt" : "2019-05-24T06:56:54Z",
        "updatedAt" : "2019-05-24T06:56:54Z",
        "lastEditedBy" : "7b94eadb-dc83-4d04-8ff7-04ac4f7a9da7",
        "tags" : [
        ]
      }
    ],
    "commit" : "4669713de8af0e976876387eb22bf7e11cb98269",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +3424,3428 @@      TIter next(gPad->GetListOfPrimitives());\n      while ((h1 = (TH1 *)next())) {\n         if (!h1->InheritsFrom(TH1::Class())) continue;\n         xaxis    = h1->GetXaxis();\n         yaxis    = h1->GetYaxis();"
  },
  {
    "id" : "8226e303-5b6a-44aa-a5d6-c4bc58cf4c2a",
    "prId" : 3883,
    "prUrl" : "https://github.com/root-project/root/pull/3883#pullrequestreview-244270833",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e6f8e55-42f3-4b7d-bf32-cab251acd21d",
        "parentId" : null,
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "As before, better use `tt.Form()` instead of `tt = TString.Format()`",
        "createdAt" : "2019-05-31T11:34:36Z",
        "updatedAt" : "2019-05-31T14:17:52Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "c8c15c2d-8607-4bb8-97a6-1132ddbd9a5c",
        "parentId" : "7e6f8e55-42f3-4b7d-bf32-cab251acd21d",
        "authorId" : "7b94eadb-dc83-4d04-8ff7-04ac4f7a9da7",
        "body" : "in that case that's every where... not only here ... ?",
        "createdAt" : "2019-05-31T11:59:44Z",
        "updatedAt" : "2019-05-31T14:17:52Z",
        "lastEditedBy" : "7b94eadb-dc83-4d04-8ff7-04ac4f7a9da7",
        "tags" : [
        ]
      },
      {
        "id" : "b41b02ea-6f1f-433b-b1be-475eea90c610",
        "parentId" : "7e6f8e55-42f3-4b7d-bf32-cab251acd21d",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "Yes, tt.Form() potentially can reuse already allocated memory in TString, therefore it is preferable",
        "createdAt" : "2019-05-31T12:01:41Z",
        "updatedAt" : "2019-05-31T14:17:52Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "b0f834ad-f5a1-4674-860b-312492a22fe1",
        "parentId" : "7e6f8e55-42f3-4b7d-bf32-cab251acd21d",
        "authorId" : "7b94eadb-dc83-4d04-8ff7-04ac4f7a9da7",
        "body" : "Ok. I will revisit this PR.",
        "createdAt" : "2019-05-31T12:02:43Z",
        "updatedAt" : "2019-05-31T14:17:52Z",
        "lastEditedBy" : "7b94eadb-dc83-4d04-8ff7-04ac4f7a9da7",
        "tags" : [
        ]
      }
    ],
    "commit" : "9cb54d6d844ad5eff9875cf48b5b9f20c9147c0b",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +8515,8519 @@      if (fH->GetEntries() < 1e7) tt.Form(\"%s = %-7d\",gStringEntries.Data(),Int_t(fH->GetEntries()+0.5));\n      else                        tt.Form(\"%s = %14.7g\",gStringEntries.Data(),Float_t(fH->GetEntries()));\n      stats->AddText(tt.Data());\n   }\n   if (print_mean) {"
  },
  {
    "id" : "a04b917e-4d27-4ae6-9795-d18b31f745f9",
    "prId" : 6697,
    "prUrl" : "https://github.com/root-project/root/pull/6697#pullrequestreview-515483231",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88da8f99-1146-4a16-8728-b98eb6bfcfc7",
        "parentId" : null,
        "authorId" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "body" : "`goto`? really?",
        "createdAt" : "2020-10-23T09:11:52Z",
        "updatedAt" : "2020-10-23T09:34:09Z",
        "lastEditedBy" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "tags" : [
        ]
      }
    ],
    "commit" : "042b742ef42e79ad2887c1cbadbd2bed7e8dec17",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +6432,6436 @@      if (option2) {\n         if (yi3 >= ymax) goto L30;\n         if (yi4 <= ymin) goto L30;\n         gPad->PaintBox(xi1,yi3,xi2,yi4);\n      }"
  }
]