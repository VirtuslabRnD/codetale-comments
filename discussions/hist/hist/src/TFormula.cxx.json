[
  {
    "id" : "23b2ccfb-3a92-4b8b-a10a-977d34d62715",
    "prId" : 6218,
    "prUrl" : "https://github.com/root-project/root/pull/6218#pullrequestreview-471643287",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39254bb0-33b8-419a-9fde-fc05251308dc",
        "parentId" : null,
        "authorId" : "a1f51663-8978-4ce2-af58-def5da7af333",
        "body" : "Should fClingInitialized be atomic?",
        "createdAt" : "2020-08-20T12:53:15Z",
        "updatedAt" : "2020-08-25T15:52:29Z",
        "lastEditedBy" : "a1f51663-8978-4ce2-af58-def5da7af333",
        "tags" : [
        ]
      },
      {
        "id" : "82160043-8d5e-4428-8063-e454de382d68",
        "parentId" : "39254bb0-33b8-419a-9fde-fc05251308dc",
        "authorId" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "body" : "I think fClingInitialized should be  protected by the gROOTMutex above. \r\nIt would be great if you can try of this fixes the problem",
        "createdAt" : "2020-08-20T13:51:22Z",
        "updatedAt" : "2020-08-25T15:52:29Z",
        "lastEditedBy" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "tags" : [
        ]
      },
      {
        "id" : "81df92f0-31fc-4bd2-8ed5-e1c3ce741d9c",
        "parentId" : "39254bb0-33b8-419a-9fde-fc05251308dc",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "It looks like the update of `fClingInitialized` is protected by the mutex by not the reads (and they probably should not).  \r\nIf this is the case, then indeed `fClingInitialized` should be an atomic.\r\n\r\nAlso with this pattern (atomic read and behind-a-lock write), one need might need to check after entering the critical section whether another thread updated it in the mean time. (because 2 threads may have concurrently check the value and found it false and both try to initialize, the lock will (as wanted) serialize the initialize but the check-after-taking the lock should be done unless doing the initialization twice is both harmless and cheap.\r\n\r\n",
        "createdAt" : "2020-08-20T13:59:27Z",
        "updatedAt" : "2020-08-25T15:52:29Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "69dce03350f501949b94c2c0ccb4fd47ba638f8b",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +3349,3353 @@      // try recompiling the formula. We need to lock because this is not anymore thread safe\n      R__LOCKGUARD(gROOTMutex);\n      // check again in case another thread has initialized the formula (see ROOT-10994)\n      if (!fClingInitialized) {\n         auto thisFormula = const_cast<TFormula*>(this);"
  }
]