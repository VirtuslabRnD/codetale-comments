[
  {
    "id" : "ddba4489-b86b-40c9-ae14-c0d118462a4b",
    "prId" : 2519,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c95420d2-f8f2-4bf0-99f3-d083ea27ec95",
        "parentId" : null,
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "if it is up to me, I would always encode DAML Optional as `JsArray`: [], just for consistency.\r\n```\r\n[]      --> None\r\n[42]     --> Some 42\r\n[[42]]   --> Some (Some 42)\r\n```\r\n",
        "createdAt" : "2019-08-13T20:42:45Z",
        "updatedAt" : "2019-08-13T21:22:29Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "56a52d10-362e-45cd-a96c-2f8c2c995202",
        "parentId" : "c95420d2-f8f2-4bf0-99f3-d083ea27ec95",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "but at the same time this would require specifying empty `JsArray` for every optional field in the JSON command. Which is a bit too much, I guess. So, scratch the above.",
        "createdAt" : "2019-08-13T20:44:57Z",
        "updatedAt" : "2019-08-13T21:22:29Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      }
    ],
    "commit" : "70cc02900954a1f1f691b8c55656b187ea98b10b",
    "line" : 309,
    "diffHunk" : "@@ -1,1 +307,311 @@~~~~~\n\nOptionals are encoded using ``null`` if the value is None, and with the\nvalue itself if it's Some. However, this alone does not let us encode\nnested optionals unambiguously. Therefore, nested Optionals are encoded"
  },
  {
    "id" : "9b40e29c-85ea-49fc-b1cb-b1c81707ab4b",
    "prId" : 2519,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b9f8b15-c848-4626-abfd-77997541177f",
        "parentId" : null,
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "Enums are represented as JSON strings.",
        "createdAt" : "2019-08-13T20:47:17Z",
        "updatedAt" : "2019-08-13T21:22:29Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "72245530-ac8b-48dd-858b-32d27adc2c78",
        "parentId" : "1b9f8b15-c848-4626-abfd-77997541177f",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "Is that not clear?",
        "createdAt" : "2019-08-13T20:48:17Z",
        "updatedAt" : "2019-08-13T21:22:29Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      },
      {
        "id" : "a7dfd838-b5af-4754-85e3-5265a53b522a",
        "parentId" : "1b9f8b15-c848-4626-abfd-77997541177f",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "you are saying above that records represented as JSON objects.... so for consistency, I would say as JSON strings here too.",
        "createdAt" : "2019-08-13T20:49:44Z",
        "updatedAt" : "2019-08-13T21:22:29Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "22aade39-c35a-4ffd-be9b-b6801067bf5a",
        "parentId" : "1b9f8b15-c848-4626-abfd-77997541177f",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "I'll delete the JSON prefix from objects. 70cc029009",
        "createdAt" : "2019-08-13T21:19:22Z",
        "updatedAt" : "2019-08-13T21:22:39Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "70cc02900954a1f1f691b8c55656b187ea98b10b",
    "line" : 432,
    "diffHunk" : "@@ -1,1 +430,434 @@----\n\nEnums are represented as strings. So if we have\n\n::"
  }
]