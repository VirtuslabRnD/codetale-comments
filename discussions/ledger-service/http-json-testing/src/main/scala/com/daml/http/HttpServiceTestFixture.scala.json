[
  {
    "id" : "d0c38164-066c-4cf6-907a-efc55b153515",
    "prId" : 10261,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10261",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1cad352d-8f11-4033-803f-0b18902365e6",
        "parentId" : null,
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "Please don't use import cleaning in any way. We don't have an idempotent approach.\r\n\r\nIf an automated refactor has spammed a bunch of this, `git add -p` (with `s` for split) can be used to exclude the useless hunks.",
        "createdAt" : "2021-07-13T22:17:22Z",
        "updatedAt" : "2021-07-13T22:19:32Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      },
      {
        "id" : "756846ce-1a18-40b1-8b0a-abdd8ef299a7",
        "parentId" : "1cad352d-8f11-4033-803f-0b18902365e6",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I know it's not always idempotent, but I did verify that reordering these imports won't affect any behavior.\r\n\r\nThere are large parts of the codebase where import ordering is standard (e.g. pretty much everything under _ledger_), so I'd rather not turn it off. If you like, I can revert the imports for this file.",
        "createdAt" : "2021-07-14T07:40:25Z",
        "updatedAt" : "2021-07-14T07:42:21Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "d0559723-6d7b-40d0-b314-da03a0d5f0f0",
        "parentId" : "1cad352d-8f11-4033-803f-0b18902365e6",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "> I did verify that reordering these imports won't affect any behavior.\r\n\r\nI don't think this is a good reason to add such hunks. I can do lots of import reordering that doesn't affect their behavior; even so, I'm still gumming up the review (and potentially forcing conflicts) with totally irrelevant diff lines.\r\n\r\n> There are large parts of the codebase where import ordering is standard\r\n\r\nI would say that it is more the case that they _look_ standard by the eye test, but do not actually match up to any specific standard. You will never reach an equilibrium with this approach, as things stand, but instead will add diff/conflict churn multiplied by however many people also do import reordering.",
        "createdAt" : "2021-07-14T14:44:52Z",
        "updatedAt" : "2021-07-14T14:44:52Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      },
      {
        "id" : "ed1d4246-e257-4958-ab34-fa35f8d79c82",
        "parentId" : "1cad352d-8f11-4033-803f-0b18902365e6",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "That's fair. I agree that it's kind of a mess and not everyone follows the same conventions, uses the same version of the IDE, remembers to run the import reorganizer, or is in a situation where there is no equilibrium.\r\n\r\nBRB gonna go write a tool to do this in a \"standard\" way.",
        "createdAt" : "2021-07-14T14:59:35Z",
        "updatedAt" : "2021-07-14T14:59:35Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "6d7c73a3-9376-4c95-9a5d-3f415588d30f",
        "parentId" : "1cad352d-8f11-4033-803f-0b18902365e6",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "Alright, see you in a couple years ðŸ¤£ ",
        "createdAt" : "2021-07-14T15:00:31Z",
        "updatedAt" : "2021-07-14T15:00:31Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "b698b20ac59d1657baa1fef375dd8c2b914e9732",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +36,40 @@  LedgerIdRequirement,\n}\nimport com.daml.ledger.client.{LedgerClient => DamlLedgerClient}\nimport com.daml.logging.LoggingContextOf\nimport com.daml.metrics.Metrics"
  }
]