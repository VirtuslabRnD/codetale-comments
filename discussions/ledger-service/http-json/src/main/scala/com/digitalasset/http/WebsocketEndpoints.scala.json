[
  {
    "id" : "2aa9e09c-5c93-467c-ab27-47245d666f20",
    "prId" : 3796,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3796",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18878942-9ac6-40ee-b629-1f95bbab2fa1",
        "parentId" : null,
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "I would call this endpoint `/transactions`, `connect` does not add anything to it. Unless it is a common practice to call websocket endpoints this way.\r\ncc @bame-da ",
        "createdAt" : "2019-12-11T20:37:53Z",
        "updatedAt" : "2019-12-11T21:29:33Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "6f880ced-4b0b-48eb-b421-263e5ebb686f",
        "parentId" : "18878942-9ac6-40ee-b629-1f95bbab2fa1",
        "authorId" : "e18aaaa4-367e-4ddf-8d14-651b9ff7c44f",
        "body" : "yeah, I added this trying to follow `contracts/search`, `command/create` convention and imply it's not a REST endpoint by `/connect` . On the other hand client may know from `ws://` so I can remove `/connect` if more people think it's useless",
        "createdAt" : "2019-12-11T21:17:21Z",
        "updatedAt" : "2019-12-11T21:29:33Z",
        "lastEditedBy" : "e18aaaa4-367e-4ddf-8d14-651b9ff7c44f",
        "tags" : [
        ]
      }
    ],
    "commit" : "de976ed59d6d521657884322490436c95dece760",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +30,34 @@\n  lazy val transactionWebSocket: PartialFunction[HttpRequest, Future[HttpResponse]] = {\n    case req@HttpRequest(GET, Uri.Path(\"/transaction/connect\"), _, _, _) =>\n      req.header[UpgradeToWebSocket] match {\n        case Some(upgradeReq) =>"
  },
  {
    "id" : "45be4209-55e5-4e3f-b4bf-8bbfff477646",
    "prId" : 3796,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3796",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c902d50d-8726-41ab-b28b-061b9800ee42",
        "parentId" : null,
        "authorId" : "e18aaaa4-367e-4ddf-8d14-651b9ff7c44f",
        "body" : "Note: here we use subprotocols to find jwts, it should be in this format: `jwt.token.{bearer_token}, daml.ws.auth`\r\nThis `daml.ws.auth` is necessary to pass along the handshake to a specific subprotocol we accept. cc @bame-da @leo-da ",
        "createdAt" : "2019-12-11T21:21:24Z",
        "updatedAt" : "2019-12-11T21:42:46Z",
        "lastEditedBy" : "e18aaaa4-367e-4ddf-8d14-651b9ff7c44f",
        "tags" : [
        ]
      }
    ],
    "commit" : "de976ed59d6d521657884322490436c95dece760",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +56,60 @@\n  private def findJwtFromSubProtocol(upgradeToWebSocket: UpgradeToWebSocket): Unauthorized \\/ Jwt = {\n    upgradeToWebSocket.requestedProtocols.collectFirst {\n      case p if p startsWith tokenPrefix => Jwt(p.replace(tokenPrefix, \"\"))\n    }.toRightDisjunction(Unauthorized(s\"Missing required $tokenPrefix.[token] in subprotocol\"))"
  }
]