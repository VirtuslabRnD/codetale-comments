[
  {
    "id" : "b3cb5a07-465b-4a3d-a957-edcfc3c14261",
    "prId" : 9847,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e88c9e4c-e87f-4185-a3c1-f78c960fbbcd",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "unrelated side note but I think it would be nice if readAcsN reads the offset and returns it. Let’s leave that refactoring for a separate PR though.",
        "createdAt" : "2021-06-16T08:59:05Z",
        "updatedAt" : "2021-06-16T09:06:18Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "86783ded-32f6-472b-8019-af1a63c8e926",
        "parentId" : "e88c9e4c-e87f-4185-a3c1-f78c960fbbcd",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "After some playing around with `updateAcs` it'll probably be better to do this as part of this PR to make the tests run in a reasonable amount of time.",
        "createdAt" : "2021-06-16T11:41:17Z",
        "updatedAt" : "2021-06-16T11:41:17Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "58853091ac6f22cb2c46f79b55c20e87ee0456e9",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +977,981 @@        Consume.interpret(\n          for {\n            _ <- readAcsN(expectedContracts)\n            ContractDelta(Vector(), Vector(), Some(offset)) <- readOne\n            _ = killSwitch.shutdown()"
  },
  {
    "id" : "e1d8991f-b463-4f30-91e5-24f95290aad7",
    "prId" : 9847,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75cfb203-06e2-4c17-b37e-13a2d93a2f4a",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "you are probably paying some overhead for establishing separate streams for each call to `getLedgerEnd`. What I’d probably try is to hardcode the offsets temporarily and see if `getLedgerEnd` plays a significant role in the slowdown or note.",
        "createdAt" : "2021-06-16T09:00:33Z",
        "updatedAt" : "2021-06-16T09:06:18Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "2409e994-a85f-49d4-8b65-6e41c98d212a",
        "parentId" : "75cfb203-06e2-4c17-b37e-13a2d93a2f4a",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I was looking at that and measured the gap between retrieving the ACS and getting the ledger end and it's consistently ~300 micros.",
        "createdAt" : "2021-06-16T09:20:35Z",
        "updatedAt" : "2021-06-16T09:20:36Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "58853091ac6f22cb2c46f79b55c20e87ee0456e9",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +983,987 @@          } yield offset\n        )\n      val (killSwitch, source) =\n        singleClientQueryStream(jwt, uri, \"\"\"{\"templateIds\":[\"Iou:Iou\"]}\"\"\")\n          .viaMat(KillSwitches.single)(Keep.right)"
  }
]