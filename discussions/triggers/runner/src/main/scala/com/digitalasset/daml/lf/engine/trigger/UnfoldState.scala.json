[
  {
    "id" : "7c988224-9d97-40df-bb86-a49de2347de6",
    "prId" : 7812,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7812",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39e288bd-301d-47c5-a9f3-31eca5c5458c",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I find the use of `BidiShape` a bit confusing. The initial state and the messages are both inputs on the “same” side in my mental model. I realize Akka doesn’t care about this and `BidiShape` is just something with two inputs and two outputs without any requirements on the connection between those but maybe it would still be useful to define something custom to avoid confusion?\r\n\r\nThe single element initial state stream also feels slightly weird to me but I don’t have a better solution for that unfortunately.",
        "createdAt" : "2020-10-27T16:34:26Z",
        "updatedAt" : "2020-10-27T17:17:30Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "3132b187-75ca-4b16-89a8-1112dc4fdc52",
        "parentId" : "39e288bd-301d-47c5-a9f3-31eca5c5458c",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "> I realize Akka doesn’t care about this and `BidiShape` is just something with two inputs and two outputs without any requirements on the connection between those but maybe it would still be useful to define something custom to avoid confusion?\r\n\r\nSure. You think type alias, or something like `SourceShape2` (also in this PR)? Words, more code...\r\n\r\nI don't like redefining shapes, but I think adding methods implicitly to replace names like `out1` might be useful. What do you think of that?\r\n\r\n> The single element initial state stream also feels slightly weird to me but I don’t have a better solution for that unfortunately.\r\n\r\nIn general variants of `Inlet` and `Outlet` limited to exactly one element would be a useful abstraction in several ways, but not something we can add ourselves, I think. We cope with this lack of distinction in JSON API's streams, too. It is unfortunate.",
        "createdAt" : "2020-10-27T16:55:39Z",
        "updatedAt" : "2020-10-27T17:17:30Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      },
      {
        "id" : "db88d8e2-f5de-4d26-b2d4-b89964cf396c",
        "parentId" : "39e288bd-301d-47c5-a9f3-31eca5c5458c",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I probably would have defined something like `SourceShape2` but I’m also happy with just a type alias or an implicit method. Whatever you prefer.",
        "createdAt" : "2020-10-27T17:00:36Z",
        "updatedAt" : "2020-10-27T17:17:30Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "50010da8-0c45-48a2-8160-80eeec2daf0f",
        "parentId" : "39e288bd-301d-47c5-a9f3-31eca5c5458c",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "eb276b36d6",
        "createdAt" : "2020-10-27T17:17:49Z",
        "updatedAt" : "2020-10-27T17:17:50Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb276b36d6afbbc0ef08b66b73e27bda3a0144bb",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +133,137 @@    * on out2.\n    */\n  def flatMapConcatNode[T, A, B](\n      f: (T, A) => UnfoldState[T, B]): Graph[UnfoldStateShape[T, A, B], NotUsed] =\n    GraphDSL.create() { implicit gb =>"
  }
]