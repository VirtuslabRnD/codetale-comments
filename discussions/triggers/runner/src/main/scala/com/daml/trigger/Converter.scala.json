[
  {
    "id" : "9c62d6f3-9a33-4503-9fcc-c41a03bef579",
    "prId" : 3341,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78d94556-228c-4b95-84a8-3ba8ba0649a7",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Why do we throw the exception only to immediately catch it? Is there something stopping us from returning `Left`?",
        "createdAt" : "2019-11-05T14:25:37Z",
        "updatedAt" : "2019-11-05T15:53:01Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "e7fc47ac-3d26-4ca0-836e-0815bb947860",
        "parentId" : "78d94556-228c-4b95-84a8-3ba8ba0649a7",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Yes, the exception is thrown within a callback passed to [`mapContractId`](https://github.com/digital-asset/daml/blob/288576682606272a030ac73b2be3ffce30a18812/daml-lf/interpreter/src/main/scala/com/digitalasset/daml/lf/speedy/SValue.scala#L81). The callback has to be of type `V.ContractId => V.ContractId`, so it can't return `Either`.",
        "createdAt" : "2019-11-05T15:46:50Z",
        "updatedAt" : "2019-11-05T15:53:01Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "3881fcbf-e58d-4925-b6be-531a075ec5cc",
        "parentId" : "78d94556-228c-4b95-84a8-3ba8ba0649a7",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "That makes a lot of sense, thanks for the explanation!",
        "createdAt" : "2019-11-05T16:20:56Z",
        "updatedAt" : "2019-11-05T16:20:57Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3fe342274d41c33d0bef94e7eb4b2b0ad501bd8",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +92,96 @@\n  private def toLedgerRecord(v: SValue): Either[String, value.Record] = {\n    try {\n      lfValueToApiRecord(\n        true,"
  }
]