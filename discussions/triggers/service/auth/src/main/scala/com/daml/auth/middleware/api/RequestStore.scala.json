[
  {
    "id" : "7f283682-bd18-4ee8-b5f9-0cf4e9bc00b1",
    "prId" : 8351,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19616006-a69f-4f1f-99e2-a0b751a8329a",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Hm, the fact that this is linear in the number of items seems a bit annoying but probably fine at least for now.",
        "createdAt" : "2021-01-06T14:09:18Z",
        "updatedAt" : "2021-01-06T15:43:04Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "5c43ec7d-bdfa-425d-aee4-f095c059805d",
        "parentId" : "19616006-a69f-4f1f-99e2-a0b751a8329a",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "It's linear in the number of timed-out items. Items are stored in increasing order of timestamp and this uses `.takeWhile` to find the prefix of timed out items.",
        "createdAt" : "2021-01-06T15:34:09Z",
        "updatedAt" : "2021-01-06T15:43:10Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "a66f799e08231e3166a086da40ad100f50a6fe38",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +35,39 @@  }\n\n  private def evictTimedOut(now: Long): Unit = {\n    // Remove items until their timestamp is more recent than the configured timeout.\n    store.iterator"
  },
  {
    "id" : "56470861-95ce-416e-8fd4-32451aa1f3ff",
    "prId" : 8351,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d495ddc-a4b1-4c9f-8e0a-e98057cd46eb",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This will still return potentially timed out elements. Is that intentional? I guess there is no harm in having a longer timeout for a few elements.",
        "createdAt" : "2021-01-06T14:13:00Z",
        "updatedAt" : "2021-01-06T15:43:04Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "65016b63-295b-4a0c-8591-3602a18c4866",
        "parentId" : "5d495ddc-a4b1-4c9f-8e0a-e98057cd46eb",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "How so? There's a check whether the retrieved item is timed out and if so `pop` returns `None`.",
        "createdAt" : "2021-01-06T15:36:10Z",
        "updatedAt" : "2021-01-06T15:43:10Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "7a91b548-2c8a-44b1-9b4f-977a830ee835",
        "parentId" : "5d495ddc-a4b1-4c9f-8e0a-e98057cd46eb",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "duh, sorry I missed that check.",
        "createdAt" : "2021-01-06T15:46:19Z",
        "updatedAt" : "2021-01-06T15:46:19Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "a66f799e08231e3166a086da40ad100f50a6fe38",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +68,72 @@    */\n  def pop(key: K): Option[V] = {\n    synchronized {\n      store.remove(key).flatMap {\n        case (t, _) if timedOut(monotonicClock(), t) => None"
  }
]