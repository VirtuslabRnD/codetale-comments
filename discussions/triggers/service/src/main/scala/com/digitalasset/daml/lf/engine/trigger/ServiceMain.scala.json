[
  {
    "id" : "e8160778-2bff-4058-9020-97302619dd85",
    "prId" : 6491,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6491",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84e33f78-e3ec-442d-a6af-7522eea98f7c",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I'm all for making this stuff top-level if it makes your life easier, but perhaps put it in _Message.scala_.",
        "createdAt" : "2020-06-25T07:54:07Z",
        "updatedAt" : "2020-06-25T07:57:31Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "b877ba59-48d3-4a21-a91a-645a0067cebe",
        "parentId" : "84e33f78-e3ec-442d-a6af-7522eea98f7c",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Yeah, will do in a follow-up.",
        "createdAt" : "2020-06-25T14:15:21Z",
        "updatedAt" : "2020-06-25T14:15:21Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3311337d595f77f26a888e3fbed8133a8761a27",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +87,91 @@    runningTrigger: RunningTrigger,\n    cause: String\n) extends Message\n\nclass Server("
  },
  {
    "id" : "5e4ebff3-4792-4edb-bb4a-779206e02b34",
    "prId" : 6491,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6491",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c154532d-4be5-4f73-8f75-90a98c023dd5",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Likewise, these and other surrounding case classes can be moved to the package object in _package.scala_.",
        "createdAt" : "2020-06-25T07:54:32Z",
        "updatedAt" : "2020-06-25T07:57:31Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3311337d595f77f26a888e3fbed8133a8761a27",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +62,66 @@\nfinal case class SecretKey(value: String)\nfinal case class UserCredentials(token: EncryptedToken)\n\nfinal case class RunningTrigger("
  },
  {
    "id" : "aab2e142-2195-4f20-b2eb-b96ad384277e",
    "prId" : 6491,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6491",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b54e6bf-b4ce-4ee7-827e-96b9d7041665",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Did any of the methods here change or did you just shuffle them around? Unfortunately hard to spot in the diff.",
        "createdAt" : "2020-06-25T08:15:03Z",
        "updatedAt" : "2020-06-25T08:16:33Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "e9f7f9c1-9e67-400a-9916-fed31d1e98c4",
        "parentId" : "1b54e6bf-b4ce-4ee7-827e-96b9d7041665",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Just shuffled!",
        "createdAt" : "2020-06-25T14:16:11Z",
        "updatedAt" : "2020-06-25T14:16:11Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3311337d595f77f26a888e3fbed8133a8761a27",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +142,146 @@      .asInstanceOf[Option[ActorRef[TriggerRunner.Message]]]\n\n  private def startTrigger(\n      credentials: UserCredentials,\n      triggerName: Identifier): Either[String, JsValue] = {"
  },
  {
    "id" : "e88183df-72b5-4d38-adb2-79a1f86808e8",
    "prId" : 6309,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6309",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fba8da2-60dd-4985-84a6-26e0cefaa43c",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "I would give slightly different warnings in each of the cases below, rather than saying \"if you haven't used 'no-secret-key'\", since you have that information on hand.",
        "createdAt" : "2020-06-11T22:15:51Z",
        "updatedAt" : "2020-06-11T22:19:34Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "df38038340aa1699372867c97fee63f61f3bd093",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +201,205 @@        case None => {\n          ctx.log.warn(\n            \"The environment variable 'TRIGGER_SERVICE_SECRET_KEY' is not defined. It is highly recommended that a non-empty value for this variable be set. If the service startup parameters do not include the '--no-secret-key' option, the service will now terminate.\")\n          if (noSecretKey) {\n            \"secret key\" // Provided for testing."
  },
  {
    "id" : "2e07a571-692f-4bb8-abfa-dc29f14f4b82",
    "prId" : 6296,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c49a75d-340e-4d62-a017-1511124e6b52",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "This gives an Unauthorized error when the party string fails validation as well. Seems reasonable but pointing out in case it's unintended",
        "createdAt" : "2020-06-10T20:02:50Z",
        "updatedAt" : "2020-06-10T20:58:15Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "55b6854d7b7c96e69bc1c9cd22b4ed7f8dffb80f",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +373,377 @@                  .findCredentials(key, request)\n                  .fold(\n                    message => complete(errorResponse(StatusCodes.Unauthorized, message)),\n                    credentials =>\n                      stopTrigger(uuid, credentials) match {"
  },
  {
    "id" : "31b2d7d9-a7a6-4736-b156-4a5b619bcf99",
    "prId" : 6296,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a03442f5-070b-48dd-81dd-d62b0391906c",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "We could abstract out this pattern in a `withAuthorization` function in future. Also, do we not need this for upload_dar requests as well? (though the format is a bit funky there)",
        "createdAt" : "2020-06-10T20:06:58Z",
        "updatedAt" : "2020-06-10T20:58:15Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "55b6854d7b7c96e69bc1c9cd22b4ed7f8dffb80f",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +348,352 @@                  .findCredentials(key, request)\n                  .fold(\n                    message => complete(errorResponse(StatusCodes.Unauthorized, message)),\n                    credentials =>\n                      listTriggers(credentials) match {"
  },
  {
    "id" : "eb166536-b778-4032-beff-8923bd65c46e",
    "prId" : 6296,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32f4e174-231d-4f52-9472-545b901ddc3a",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "At this point do we need this type? Seems like there is now only `EncryptedToken`, `DecryptedToken` and the `(Party, String)` pair that we care about. This is not doing any harm atm though.",
        "createdAt" : "2020-06-10T20:10:33Z",
        "updatedAt" : "2020-06-10T20:58:15Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "55b6854d7b7c96e69bc1c9cd22b4ed7f8dffb80f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +58,62 @@)\n\nfinal case class UserCredentials(token: EncryptedToken)\n\nfinal case class RunningTrigger("
  },
  {
    "id" : "fff57280-d8b4-4703-b281-80e922640457",
    "prId" : 6279,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6279",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90cda6e5-0725-4f0a-9dd5-e25d0b5f845c",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Just to confirm, this will later map from some `EncryptedToken` type right?",
        "createdAt" : "2020-06-10T13:27:51Z",
        "updatedAt" : "2020-06-10T13:34:38Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      },
      {
        "id" : "24f23583-7c8e-4020-a2e7-e2acf603bdbf",
        "parentId" : "90cda6e5-0725-4f0a-9dd5-e25d0b5f845c",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "yes\r\n",
        "createdAt" : "2020-06-10T13:37:11Z",
        "updatedAt" : "2020-06-10T13:37:11Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9464687f8f030036b33ef328663eeb5ef13160c",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +73,77 @@\n  private var triggers: Map[UUID, RunningTrigger] = Map.empty;\n  private var triggersByParty: Map[UserCredentials, Set[UUID]] = Map.empty;\n  private var triggerLog: Map[UUID, Vector[(LocalDateTime, String)]] = Map.empty;\n"
  },
  {
    "id" : "7099e3ae-c0b9-4c89-b7ec-76c057448e7b",
    "prId" : 6219,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6219",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e52b9609-2732-49f2-86b8-047f8fa0034e",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I donâ€™t think you need the `.right` here. `Either` has been right-biased for a while.",
        "createdAt" : "2020-06-04T06:47:57Z",
        "updatedAt" : "2020-06-04T06:48:05Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "899cdc55868a70a5815562628785f3f7b413188b",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +200,204 @@    def startTrigger(token: (Jwt, JwtPayload), triggerName: Identifier): Either[String, JsValue] = {\n      for {\n        trigger <- Trigger.fromIdentifier(server.compiledPackages, triggerName).right\n        jwt = token._1\n        jwtPayload = token._2"
  },
  {
    "id" : "aaff6c88-2b15-4985-863b-afe1f63212d3",
    "prId" : 6180,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6180",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f8e998e-2a3a-4c15-8e61-3b0254077cd6",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Since we're returning the whole history here, would it make more sense to call this endpoint `history` or `log`?",
        "createdAt" : "2020-06-01T19:14:38Z",
        "updatedAt" : "2020-06-01T20:06:10Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      },
      {
        "id" : "2373debb-297f-4486-8dc2-8f9b9ab628b6",
        "parentId" : "5f8e998e-2a3a-4c15-8e61-3b0254077cd6",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "I have thought about that. Don't want to get analysis paralysis on something so trivial. I think status is the right word (even acknowledging that the entire history is returned).",
        "createdAt" : "2020-06-01T19:46:03Z",
        "updatedAt" : "2020-06-01T20:06:10Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "83521744518854aaa6eb08638a03c747bd6bb707",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +334,338 @@          },\n          // Produce logs for the given trigger.\n          pathPrefix(\"v1\" / \"status\" / JavaUUID) { uuid =>\n            complete(successResponse(JsObject((\"logs\", server.getTriggerStatus(uuid).toJson))))\n          }"
  },
  {
    "id" : "55dfe02a-573e-4051-9f58-aa13ab195e79",
    "prId" : 6180,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6180",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "408eadaf-fb6c-4827-9da6-c3f0d3f65a4e",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I would recommend to store at least `(LocalDateTime, String)` and render it as a string when you need to.",
        "createdAt" : "2020-06-02T06:39:48Z",
        "updatedAt" : "2020-06-02T07:02:29Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "ed52fb63-6acf-4bdc-bb81-3ef9997753e8",
        "parentId" : "408eadaf-fb6c-4827-9da6-c3f0d3f65a4e",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "Yes, @rohanjr advocated for this as well. I'll take care of it.",
        "createdAt" : "2020-06-02T11:13:01Z",
        "updatedAt" : "2020-06-02T11:13:01Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "83521744518854aaa6eb08638a03c747bd6bb707",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +73,77 @@  private var triggers: Map[UUID, RunningTrigger] = Map.empty;\n  private var triggersByToken: Map[Jwt, Set[UUID]] = Map.empty;\n  private var triggerLog: Map[UUID, Vector[(String, String)]] = Map.empty;\n\n  val compiledPackages: MutableCompiledPackages = ConcurrentCompiledPackages()"
  },
  {
    "id" : "07370fd3-d7ac-475d-b6fb-26724c2c657e",
    "prId" : 6180,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6180",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14e261df-a674-4a2d-833d-a23e5c57bf0b",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Please donâ€™t invent your own date/time format. Use RFC 3339 (or ISO 8601 they are basically identical).",
        "createdAt" : "2020-06-02T06:42:27Z",
        "updatedAt" : "2020-06-02T07:02:29Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "fe145705-59b1-4267-90eb-f70750786835",
        "parentId" : "14e261df-a674-4a2d-833d-a23e5c57bf0b",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "Dang SO :) Ok.",
        "createdAt" : "2020-06-02T11:13:38Z",
        "updatedAt" : "2020-06-02T11:13:38Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "83521744518854aaa6eb08638a03c747bd6bb707",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +118,122 @@\n  private def timeStamp(): String = {\n    DateTimeFormatter.ofPattern(\"yyyy-MM-dd_HH:mmss\").format(LocalDateTime.now)\n  }\n"
  },
  {
    "id" : "674912a1-317e-4c3c-a300-134fd5384af9",
    "prId" : 6180,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6180",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "440fc983-7d93-4239-8dd6-f66049a3ce86",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "It looks like your logs are a memory leak. You only ever write to them but never delete anything. This is probably not a huge issue atm but we should move them to postgres to avoid that.",
        "createdAt" : "2020-06-02T07:01:48Z",
        "updatedAt" : "2020-06-02T07:02:29Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "4ac41201-e444-4507-b8db-4f1b5dd0f360",
        "parentId" : "440fc983-7d93-4239-8dd6-f66049a3ce86",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "Yes, there is no attempt to control the memory here at this time. I hadn't considered having this data written to the DB - not against it.",
        "createdAt" : "2020-06-02T11:16:19Z",
        "updatedAt" : "2020-06-02T11:16:19Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      },
      {
        "id" : "da38d52b-f23a-455c-8729-914d4fdb82f6",
        "parentId" : "440fc983-7d93-4239-8dd6-f66049a3ce86",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "@rohanjr Thoughts?",
        "createdAt" : "2020-06-02T15:15:48Z",
        "updatedAt" : "2020-06-02T15:15:48Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      },
      {
        "id" : "5fe551dd-fcd1-4fea-8f88-2f0a555a07c6",
        "parentId" : "440fc983-7d93-4239-8dd6-f66049a3ce86",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Makes sense (if the user supplies a db connection)",
        "createdAt" : "2020-06-02T15:21:14Z",
        "updatedAt" : "2020-06-02T15:21:14Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "83521744518854aaa6eb08638a03c747bd6bb707",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +397,401 @@            // The trigger has failed. Remove it from the running\n            // triggers tables.\n            server.logTriggerStatus(runningTrigger, \"stopped: runtime failure\")\n            server.removeRunningTrigger(runningTrigger)\n            // Don't send any messages to the runner. Its supervision"
  },
  {
    "id" : "89e93350-8e5e-4b1a-977f-fc4cb9e0a8be",
    "prId" : 6153,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6153",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09309be3-b624-408a-bb24-4890d65aa2a5",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "If you donâ€™t want to go down the route of using sqlite with an in-memory backend so you always have a DB, I think it would be useful to have an abstraction layer somewhere. Inlining this every time we write to the DB is going to become a mess and itâ€™s super easy to have the in-memory mode diverge from the DB-backed mode.",
        "createdAt" : "2020-06-02T07:16:09Z",
        "updatedAt" : "2020-06-02T16:34:36Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "ff93df1f-d762-4aef-8141-8c8eaccbb6e8",
        "parentId" : "09309be3-b624-408a-bb24-4890d65aa2a5",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Yes, I'll refactor the in-memory logic into the TriggerDao in a future PR (either next or after `stop` is implemented).",
        "createdAt" : "2020-06-02T15:56:33Z",
        "updatedAt" : "2020-06-02T16:34:36Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e27d8a43e27c8fcdaccc26c506fee4f3359edba",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +110,114 @@\n  private def addRunningTrigger(t: RunningTrigger): Either[String, Unit] = {\n    triggerDao match {\n      case None =>\n        triggers = triggers + (t.triggerInstance -> t)"
  },
  {
    "id" : "f79b2154-b42b-4972-abc1-73ff120f2647",
    "prId" : 6153,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6153",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46f8ebaa-4bee-4de7-9be7-5ea64b0464a0",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I guess you are leaving this for a separate PR?",
        "createdAt" : "2020-06-02T07:22:12Z",
        "updatedAt" : "2020-06-02T16:34:36Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "514adb50-f92a-45ed-82f6-5fdb9ef4d782",
        "parentId" : "46f8ebaa-4bee-4de7-9be7-5ea64b0464a0",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Yeah.",
        "createdAt" : "2020-06-02T15:56:50Z",
        "updatedAt" : "2020-06-02T16:34:36Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e27d8a43e27c8fcdaccc26c506fee4f3359edba",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +126,130 @@  private def removeRunningTrigger(t: RunningTrigger): Unit = {\n    triggers = triggers - t.triggerInstance\n    triggersByToken = triggersByToken + (t.jwt -> (triggersByToken(t.jwt) - t.triggerInstance))\n  }\n"
  },
  {
    "id" : "eac2a14a-1fe4-4082-b7db-0175498251a2",
    "prId" : 6134,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10e231fc-d693-42fb-91db-7326c3f880e6",
        "parentId" : null,
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "I think it's time to have a parameter pack here. The list of parameters just keeps growing. Maybe not in this PR but if it were to be it would be very much in keeping with the rest.",
        "createdAt" : "2020-05-28T13:28:14Z",
        "updatedAt" : "2020-05-28T17:27:58Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e0206ac92946e702b287c50cac840706caa3d8e",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +147,151 @@      failureRetryTimeRange: Duration,\n      dar: Option[Dar[(PackageId, Package)]],\n      jdbcConfig: Option[JdbcConfig],\n  ): Behavior[Message] = Behaviors.setup { ctx =>\n    val server = new Server(dar, jdbcConfig)"
  },
  {
    "id" : "8e498983-20d4-4efc-8ae9-7431125bb324",
    "prId" : 6134,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06282c21-c68d-461a-98e4-ccf5a055bb2c",
        "parentId" : null,
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "There's quite a lot of options going in here now. There are roughly 3 or 4 parameter groups. It would be nice in the fullness of time to have a little more structure.",
        "createdAt" : "2020-05-28T13:29:58Z",
        "updatedAt" : "2020-05-28T17:27:58Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e0206ac92946e702b287c50cac840706caa3d8e",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +173,177 @@      val ref = ctx.spawn(\n        TriggerRunner(\n          new TriggerRunner.Config(\n            ctx.self,\n            triggerInstance,"
  },
  {
    "id" : "083f77bb-2cb4-4909-9ea0-ad8c89091396",
    "prId" : 6134,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f474594-e00d-4fa0-856f-6006e34b572c",
        "parentId" : null,
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "As mentioned above, a parameter pack here would be tidy.",
        "createdAt" : "2020-05-28T13:34:12Z",
        "updatedAt" : "2020-05-28T17:27:58Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e0206ac92946e702b287c50cac840706caa3d8e",
    "line" : 309,
    "diffHunk" : "@@ -1,1 +500,504 @@              config.failureRetryTimeRange,\n              dar,\n              config.jdbcConfig\n            ),\n            \"TriggerService\""
  },
  {
    "id" : "a1cf68a8-0b9a-4fee-aa52-5bd9adf0e648",
    "prId" : 6079,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6079",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50c0c8f8-925b-4679-9fd6-26873fc86e94",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Do you have a plan for how to do better than this?",
        "createdAt" : "2020-05-25T14:23:03Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "8f22fb66-7c15-4157-b5a4-5bf5e85dc1d5",
        "parentId" : "50c0c8f8-925b-4679-9fd6-26873fc86e94",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "As a matter of a fact I think I do. My idea is that if presented with a token that doesn't match the start token, if the old and new token agree in party, the old token has expired and (in the absence of a better API) we can use the new token to get an ACS (or establish the conditions that starting a trigger would entail), we might conclude we are indeed looking at a valid stop. ",
        "createdAt" : "2020-05-25T14:41:45Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      },
      {
        "id" : "f3012f33-2b02-431f-b518-0c7c2c8bd454",
        "parentId" : "50c0c8f8-925b-4679-9fd6-26873fc86e94",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "This idea has the nice property that it does not require the user presenting a token that has expired. Anyway, what do you think of that?",
        "createdAt" : "2020-05-25T14:45:34Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbdb87590a19aa1bb81b8b704105db5a774d8efd",
    "line" : 205,
    "diffHunk" : "@@ -1,1 +200,204 @@      //TODO(SF, 2020-05-20): At least check that the provided token\n      //is the same as the one used to start the trigger and fail with\n      //'Unauthorized' if not (expect we'll be able to do better than\n      //this).\n      val actorWithToken = server.actorWithToken(uuid)"
  },
  {
    "id" : "3817eb35-8a28-483a-b647-df6119ebd03a",
    "prId" : 6079,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6079",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a87fa689-01a9-4283-b710-17d23496557d",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Is there a timeout on the time between starting and started? If not, should there be one? (not in this PR)",
        "createdAt" : "2020-05-25T14:24:24Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "a020046f-01a7-47fa-a9a6-2c38f13a4558",
        "parentId" : "a87fa689-01a9-4283-b710-17d23496557d",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "There currently isn't. Not a bad idea.",
        "createdAt" : "2020-05-25T14:42:38Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbdb87590a19aa1bb81b8b704105db5a774d8efd",
    "line" : 267,
    "diffHunk" : "@@ -1,1 +354,358 @@      Behaviors\n        .receiveMessage[Message] {\n          case TriggerStarting(uuid, jwt, runner) =>\n            // Nothing to do at this time.\n            Behaviors.same"
  },
  {
    "id" : "89393145-6ed7-40c7-af8b-df16a9ca35e5",
    "prId" : 6079,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6079",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e6cf1fa-79e2-4113-90fb-5aee801271fe",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "```suggestion\r\n    // The running server.\r\n```",
        "createdAt" : "2020-05-26T16:00:12Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbdb87590a19aa1bb81b8b704105db5a774d8efd",
    "line" : 261,
    "diffHunk" : "@@ -1,1 +350,354 @@    }\n\n    // The server running server.\n    def running(binding: ServerBinding): Behavior[Message] =\n      Behaviors"
  },
  {
    "id" : "70a66149-72cd-4775-a15b-7fd112303c4f",
    "prId" : 6055,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8c5524b-8d26-461f-87e3-99a291fd574a",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I donâ€™t think the abbreviation helps here.",
        "createdAt" : "2020-05-20T17:55:06Z",
        "updatedAt" : "2020-05-20T19:05:20Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "5b5e96ec-93f1-4c5a-8bb0-a459ea96bde4",
        "parentId" : "d8c5524b-8d26-461f-87e3-99a291fd574a",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "I could call this `Token` or `TokenManagement`. In the json-api, I think they use `EndpointsCompaion` for this code. Let's go with `TokenManagement` for now?",
        "createdAt" : "2020-05-20T18:12:34Z",
        "updatedAt" : "2020-05-20T19:05:20Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "34d1295521392ecc8352dedf4c334bbf942ec958",
    "line" : 266,
    "diffHunk" : "@@ -1,1 +425,429 @@}\n\nobject TokenMgt {\n\n  case class Unauthorized(message: String) extends Error(message)"
  },
  {
    "id" : "e5a59b92-d6a8-442e-837e-730f0272ee25",
    "prId" : 6055,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c820061-cd41-41c6-b748-9aa01344262e",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "You import this here but then you use `TokenMgt.*` most of the time. Can we just kill the import and use the object-qualified version everywhere?",
        "createdAt" : "2020-05-20T17:56:55Z",
        "updatedAt" : "2020-05-20T19:05:20Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "eb6d770f-1972-41d2-9e0a-3e1cfa04a74f",
        "parentId" : "0c820061-cd41-41c6-b748-9aa01344262e",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "Yes. I mean in a refactoring - I'll get this done today - to move that code out into a dedicated module. I'll sort this at the same time.",
        "createdAt" : "2020-05-20T18:11:36Z",
        "updatedAt" : "2020-05-20T19:05:20Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "34d1295521392ecc8352dedf4c334bbf942ec958",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +80,84 @@  final case object Stop extends Message\n\n  import TokenMgt._\n\n  private def addDar(compiledPackages: MutableCompiledPackages, dar: Dar[(PackageId, Package)]) = {"
  },
  {
    "id" : "97a66157-8373-4610-82d6-f5a39647bac7",
    "prId" : 6055,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a4abd9b-691e-498b-b8f6-9fcb556df3c9",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Note that the triggers per party will almost certainly not be correct since I can create the actor without having a valid token.",
        "createdAt" : "2020-05-20T17:57:34Z",
        "updatedAt" : "2020-05-20T19:05:20Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "d894a787-df4a-43d4-830b-d3ef6847b49e",
        "parentId" : "5a4abd9b-691e-498b-b8f6-9fcb556df3c9",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "Indeed. Fully agree that only successfully started triggers should get added to any running triggers table. Will work on it.",
        "createdAt" : "2020-05-20T18:10:56Z",
        "updatedAt" : "2020-05-20T19:05:20Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "34d1295521392ecc8352dedf4c334bbf942ec958",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +105,109 @@\n  private var triggers: Map[UUID, TriggerRunnerWithParty] = Map.empty\n  private var triggersByParty: Map[Party, Set[UUID]] = Map.empty\n  private val compiledPackages: MutableCompiledPackages = ConcurrentCompiledPackages()\n"
  },
  {
    "id" : "a25eec6f-e12d-468d-8892-3da96beda64f",
    "prId" : 6055,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a905b712-45f3-4241-8c97-62b7cd47a073",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This will also need to validate the token and by my comment above, you probably want to make sure that this only returns triggers that have been started with a valid token.",
        "createdAt" : "2020-05-20T17:59:34Z",
        "updatedAt" : "2020-05-20T19:05:20Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "cce07901-0af6-49a6-82c4-66e840ff45f1",
        "parentId" : "a905b712-45f3-4241-8c97-62b7cd47a073",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "Yes.",
        "createdAt" : "2020-05-20T18:10:27Z",
        "updatedAt" : "2020-05-20T19:05:20Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "34d1295521392ecc8352dedf4c334bbf942ec958",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +155,159 @@  }\n\n  private def listTriggers(token: (Jwt, JwtPayload))(\n      implicit esf: ExecutionSequencerFactory,\n      mat: Materializer): JsValue = {"
  },
  {
    "id" : "9257be11-0bae-40be-80d8-ed9f38c146e9",
    "prId" : 5970,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5970",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6850bcdf-77b9-4764-a378-f7452c962ddb",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Should we factor this out instead of duplicating it everywhere?",
        "createdAt" : "2020-05-13T18:33:42Z",
        "updatedAt" : "2020-05-13T18:33:58Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "86dc7b7d-f532-415b-8e39-5fff101f9cfd",
        "parentId" : "6850bcdf-77b9-4764-a378-f7452c962ddb",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "I've done something in that direction. Have to say, a completely unreasonable amount of time was spent on working out something so simple ðŸ˜¢ ",
        "createdAt" : "2020-05-13T19:59:30Z",
        "updatedAt" : "2020-05-13T19:59:31Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "db7bee544f8aeaf1fc188dafc0daf000afe5166f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +115,119 @@          // should be running as.  Returns a UUID for the newly\n          // started trigger.\n          path(\"v1\" / \"start\") {\n            entity(as[StartParams]) {\n              params =>"
  },
  {
    "id" : "eaccb12a-7936-4bb4-95bc-8af3c5355456",
    "prId" : 5951,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5951",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42832d21-a11d-4035-8b99-f80e6fefca48",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Sorry I just saw this, but this response format is not quite right. The `\"status\"` field is supposed to mirror the status code, and there should be a `\"result\"` field with whatever successful response body you want, i.e. `{\"status\": 200, \"result\": value}`. I suggest using the `successResponse` helper function as in the `list` command, where you pass in the JSON `value` you want (could be the string \"pass\" in this case).",
        "createdAt" : "2020-05-13T16:40:14Z",
        "updatedAt" : "2020-05-13T16:40:14Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      },
      {
        "id" : "eff87088-42af-48b7-b62a-b1a40f943fea",
        "parentId" : "42832d21-a11d-4035-8b99-f80e6fefca48",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "> Sorry I just saw this, but this response format is not quite right. The `\"status\"` field is supposed to mirror the status code, and there should be a `\"result\"` field with whatever successful response body you want, i.e. `{\"status\": 200, \"result\": value}`. I suggest using the `successResponse` helper function as in the `list` command, where you pass in the JSON `value` you want (could be the string \"pass\" in this case).\r\n\r\nThis case intentionally breaks with our internal conventions in order to conform to the referenced RFC (internet standard proposal).",
        "createdAt" : "2020-05-13T16:43:35Z",
        "updatedAt" : "2020-05-13T16:43:35Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "88440beeca4e2e8e9bb47a6356a58b006670b0f3",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +174,178 @@        concat(\n          path(\"health\") {\n            complete((StatusCodes.OK, JsObject((\"status\", \"pass\".toJson))))\n          },\n          // List triggers currently running for the given party"
  },
  {
    "id" : "8e4c30f8-90cc-4502-9716-b32864367e1b",
    "prId" : 5916,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0582b234-e88b-46dc-800a-240b06036e36",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "I think you don't need `new` here because it's a case class, but I don't think it matters either.",
        "createdAt" : "2020-05-08T18:57:32Z",
        "updatedAt" : "2020-05-08T19:08:40Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      },
      {
        "id" : "5ab0855c-9f04-4aaa-bed7-dde6817e6176",
        "parentId" : "0582b234-e88b-46dc-800a-240b06036e36",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "I found in practice that you do. If you don't put a `new` on it the compiler goes looking for a *value* in `object TriggerRunner` called `Config`.",
        "createdAt" : "2020-05-08T19:17:04Z",
        "updatedAt" : "2020-05-08T19:17:04Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      },
      {
        "id" : "e58bb8e1-f793-4470-95fe-ec901506881c",
        "parentId" : "0582b234-e88b-46dc-800a-240b06036e36",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "ah, ok thanks",
        "createdAt" : "2020-05-08T19:24:46Z",
        "updatedAt" : "2020-05-08T19:24:46Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "af232941b942e74dba8060b1a9b12c00425ead19",
    "line" : 211,
    "diffHunk" : "@@ -1,1 +127,131 @@                    val ref = ctx.spawn(\n                      TriggerRunner(\n                        new TriggerRunner.Config(compiledPackages, trigger, ledgerConfig, party),\n                        ident),\n                      ident + \"-monitor\")"
  },
  {
    "id" : "c058b25f-1d08-4799-8d84-4269cf737ebd",
    "prId" : 5916,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "877ee018-4ab9-468a-a92a-f19cc1fd260c",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Maybe something like `triggerId` would be more descriptive here?",
        "createdAt" : "2020-05-08T18:58:04Z",
        "updatedAt" : "2020-05-08T19:08:40Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "af232941b942e74dba8060b1a9b12c00425ead19",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +124,128 @@                    val party = params.party\n                    val uuid = UUID.randomUUID\n                    val ident = uuid.toString\n                    val ref = ctx.spawn(\n                      TriggerRunner("
  },
  {
    "id" : "5010d519-927e-4aa9-b8ce-a496ffa8ef68",
    "prId" : 5916,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e156525-993f-4ba1-9aaf-f47bcc905134",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This makes less sense to me than before? itâ€™s not just the runner. Itâ€™s a reference to an actor for the runner. Either way, please separate refactorings from the actual change.",
        "createdAt" : "2020-05-11T07:14:11Z",
        "updatedAt" : "2020-05-11T07:30:19Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "9b652f2c-45e4-4e0a-9a00-2610343b3172",
        "parentId" : "8e156525-993f-4ba1-9aaf-f47bcc905134",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "The reference it contains is now a `TriggerRunner`.",
        "createdAt" : "2020-05-11T12:48:22Z",
        "updatedAt" : "2020-05-11T12:48:23Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "af232941b942e74dba8060b1a9b12c00425ead19",
    "line" : 166,
    "diffHunk" : "@@ -1,1 +82,86 @@  }\n\n  case class TriggerRunnerWithParty(\n      ref: ActorRef[TriggerRunner.Message],\n      party: Party,"
  },
  {
    "id" : "df16635f-0a00-4ee6-a5bc-d198200a447c",
    "prId" : 5829,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5829",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2d49601-019e-4e88-9e81-76250d0d1409",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This should probably be changed at some point to a more structured response instead of a simple string but letâ€™s leave it for this PR.",
        "createdAt" : "2020-05-05T08:13:33Z",
        "updatedAt" : "2020-05-05T08:13:38Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "858e2f3f-973b-4619-8284-5df4a978e0af",
        "parentId" : "c2d49601-019e-4e88-9e81-76250d0d1409",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Maybe a simple object `{\"mainPackageId\": ...}` within the `results` field would suffice?",
        "createdAt" : "2020-05-05T15:33:08Z",
        "updatedAt" : "2020-05-05T15:33:08Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "51ec255dc5d871ada52ec3bdd29d9a6308db6c8c",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +270,274 @@                          addDar(compiledPackages, dar)\n                          complete(\n                            successResponse(s\"DAR uploaded, main package id: ${dar.main._1}\"))\n                        } catch {\n                          case err: ParseError =>"
  },
  {
    "id" : "00fa8641-9d56-4c70-a35e-cae385a44994",
    "prId" : 5770,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5770",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "367f9768-0a2b-419d-80dd-1db4e8353810",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Something like `RunningTrigger` might be a better name. I wouldnâ€™t be surprised if you end up adding more metadata here.",
        "createdAt" : "2020-04-29T18:21:42Z",
        "updatedAt" : "2020-04-29T18:24:05Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b141236e74168079b83c0ed40b234a5f7119dcb",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +208,212 @@  }\n\n  case class TriggerActorWithParty(\n      ref: ActorRef[TriggerActor.Message],\n      party: String,"
  },
  {
    "id" : "968c7d07-2dd0-4e07-b64a-02eb245eacc4",
    "prId" : 5770,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5770",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "159aec58-5f6c-4641-9f15-00d14e3d37a9",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "There is a `Party` newtype in `com.daml.ledger.api.refinements`",
        "createdAt" : "2020-04-29T18:22:39Z",
        "updatedAt" : "2020-04-29T18:24:05Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "59e35354-c009-466d-acdc-5cfe87278672",
        "parentId" : "159aec58-5f6c-4641-9f15-00d14e3d37a9",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Thanks, will look into it in a follow on PR",
        "createdAt" : "2020-04-29T18:43:52Z",
        "updatedAt" : "2020-04-29T18:43:52Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b141236e74168079b83c0ed40b234a5f7119dcb",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +226,230 @@\n    var triggers: Map[UUID, TriggerActorWithParty] = Map.empty\n    var triggersByParty: Map[String, Set[UUID]] = Map.empty\n\n    // Mutable in preparation for dynamic package upload."
  },
  {
    "id" : "b735891d-84cb-439e-88a0-a1825e072da3",
    "prId" : 5038,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5038",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd7e82a8-f367-4ccd-a3b7-7d8d331e8fe2",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This deliberately doesnâ€™t use `fromDar` in preparation for dynamic package uploads.",
        "createdAt" : "2020-03-17T09:54:18Z",
        "updatedAt" : "2020-03-17T09:54:26Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "5cff5df7c8ddada578757bb1298720a07e4aa66a",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +135,139 @@          .flatMap { client =>\n            val trigger = Runner.getTrigger(compiledPackages, config.triggerId)\n            val runner = new Runner(\n              client,\n              config.ledgerConfig.timeProvider,"
  }
]