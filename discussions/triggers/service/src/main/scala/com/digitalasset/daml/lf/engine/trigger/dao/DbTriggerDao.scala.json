[
  {
    "id" : "82f16ea6-d032-4a5e-8020-b885ee3f1ce8",
    "prId" : 9286,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9286",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91b06776-ac23-441c-a1a3-8f23862d79ee",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "yes magic comments are how you do `on conflict do nothing` in oracle. This is fine.gif",
        "createdAt" : "2021-03-30T14:19:41Z",
        "updatedAt" : "2021-03-31T08:28:55Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3cbb7cfe5d582d0470ac96635b4c767ed8c3200",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +317,321 @@  ): ConnectionIO[Unit] = {\n    val insert: Fragment = sql\"\"\"\n      insert /*+  ignore_row_on_dupkey_index ( dalfs ( package_id ) ) */\n      into dalfs values (${packageId.toString}, ${pkg.toByteArray})\n    \"\"\""
  },
  {
    "id" : "8efd16c2-eb22-4647-8ae6-3bdcf92a8b86",
    "prId" : 9286,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9286",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c67085f1-e496-41d3-9416-6e20d0677695",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "flyway names things slightly differently depending on the driver and there really seems no point in reinventing what `Flyway.clean` does.",
        "createdAt" : "2021-03-30T14:56:34Z",
        "updatedAt" : "2021-03-31T08:28:55Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3cbb7cfe5d582d0470ac96635b4c767ed8c3200",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +202,206 @@  // Drop all tables and other objects associated with the database.\n  // Only used between tests for now.\n  private def dropTables: ConnectionIO[Unit] = flywayMigrations.clean()\n\n  final class DatabaseError(errorContext: String, e: Throwable)"
  },
  {
    "id" : "1aafe790-b843-4d39-b6d5-ddab6e7739d0",
    "prId" : 7967,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7967",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65e6af3e-6d75-4735-b152-f0f0879fe680",
        "parentId" : null,
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Not sure what `cos` stands for. Maybe a more descriptive name?",
        "createdAt" : "2020-11-16T10:46:13Z",
        "updatedAt" : "2020-11-16T10:46:18Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "aba60764-2d6e-45ea-8dab-b45bf5e3321e",
        "parentId" : "65e6af3e-6d75-4735-b152-f0f0879fe680",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "coded stream, it’s what we use in all other places. I agree that it’s a bit confusing. Does it make sense to just change it here or is that just making it even more confusing?",
        "createdAt" : "2020-11-16T10:47:40Z",
        "updatedAt" : "2020-11-16T10:47:40Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "e693e996-835f-4a43-af93-db416cbc38c2",
        "parentId" : "65e6af3e-6d75-4735-b152-f0f0879fe680",
        "authorId" : "53547dc7-8070-4a52-98eb-2b5482c7e418",
        "body" : "Fair enough, if it's used in other places it makes sense to be consistent.",
        "createdAt" : "2020-11-16T10:55:29Z",
        "updatedAt" : "2020-11-16T10:55:29Z",
        "lastEditedBy" : "53547dc7-8070-4a52-98eb-2b5482c7e418",
        "tags" : [
        ]
      }
    ],
    "commit" : "72af5a36904896cf38a2a5569d2569a92038eaab",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +156,160 @@      cos = Reader.damlLfCodedInputStreamFromBytes(pkgPayload)\n      payload <- Try(DamlLf.ArchivePayload.parseFrom(cos)) match {\n        case Failure(err) => Left(s\"Failed to parse package with id $pkgId.\\n\" ++ err.toString)\n        case Success(pkg) => Right(pkg)\n      }"
  },
  {
    "id" : "3c1c34d4-fcc1-4fa7-b6de-ba285e6ccf00",
    "prId" : 7890,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7890",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2619859-7a5e-400d-9c60-a4b060e9cac9",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I’m confused, how did this work before? The column name isn’t changed by this PR.",
        "createdAt" : "2020-11-05T08:11:11Z",
        "updatedAt" : "2020-11-05T09:13:04Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "e2a08b67-5fd1-456c-b69d-fd4ab8dcc090",
        "parentId" : "b2619859-7a5e-400d-9c60-a4b060e9cac9",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "It didn't work before, this code was untested so far. See https://github.com/digital-asset/daml/pull/7750#discussion_r508597331.",
        "createdAt" : "2020-11-05T09:10:11Z",
        "updatedAt" : "2020-11-05T09:13:04Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a853947f849869ac31b977821070b5fc462cacd",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +102,106 @@  private def queryRunningTrigger(triggerInstance: UUID): ConnectionIO[Option[RunningTrigger]] = {\n    val select: Fragment = sql\"\"\"\n        select trigger_instance, full_trigger_name, trigger_party, access_token from running_triggers\n        where trigger_instance = $triggerInstance\n      \"\"\""
  },
  {
    "id" : "9ff0c10e-8986-4911-946b-701583f018fc",
    "prId" : 7890,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7890",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4236bbae-1f79-4cdc-afb6-50ad4430db9d",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Maybe worth newtyping the token?",
        "createdAt" : "2020-11-05T08:11:39Z",
        "updatedAt" : "2020-11-05T09:13:04Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "13368416-d98f-4ca8-8f10-5c4aad99d824",
        "parentId" : "4236bbae-1f79-4cdc-afb6-50ad4430db9d",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Good idea, I'll do that in a follow up since it'll touch a couple places out of scope of this PR.",
        "createdAt" : "2020-11-05T09:12:12Z",
        "updatedAt" : "2020-11-05T09:13:04Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "fb165720-6a30-4762-94b4-64f636a40faf",
        "parentId" : "4236bbae-1f79-4cdc-afb6-50ad4430db9d",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Tracked in https://github.com/digital-asset/daml/issues/7901",
        "createdAt" : "2020-11-05T09:18:08Z",
        "updatedAt" : "2020-11-05T09:18:08Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a853947f849869ac31b977821070b5fc462cacd",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +106,110 @@      \"\"\"\n    select\n      .query[(UUID, Identifier, Party, Option[String])]\n      .map(RunningTrigger.tupled)\n      .option"
  },
  {
    "id" : "79e40f1e-70c0-423e-b03a-1ae4057ad8a1",
    "prId" : 7750,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c7e5152-af47-4b7d-ae3c-12804f25d870",
        "parentId" : null,
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Note, this part is not tested, yet. This depends on https://github.com/digital-asset/daml/issues/7720.",
        "createdAt" : "2020-10-20T15:16:04Z",
        "updatedAt" : "2020-10-20T15:16:04Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "911b10a70cc6890841b96b11280469778a11baeb",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +196,200 @@\n  override def getRunningTrigger(triggerInstance: UUID): Either[String, Option[RunningTrigger]] =\n    run(queryRunningTrigger(triggerInstance))\n\n  override def removeRunningTrigger(triggerInstance: UUID): Either[String, Boolean] ="
  },
  {
    "id" : "f86ab3e9-f991-40cb-8d7a-8e5bad107aa3",
    "prId" : 7654,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7654",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14cc3e94-9815-4969-bfc3-2ab28c3bf16e",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Probably worth starting to open a few issues for the things that are still missing around auth (persistence, refresh, missing endpoints, …) so we can keep track of it.",
        "createdAt" : "2020-10-16T14:55:42Z",
        "updatedAt" : "2020-10-16T15:18:15Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b1adc8e2e9d1b4d7828d6b222879ebaabd6947a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +144,148 @@      party: String,\n      fullTriggerName: String): Either[String, RunningTrigger] = {\n    // TODO[AH] Persist the access and refresh token.\n    Identifier.fromString(fullTriggerName).map(RunningTrigger(triggerInstance, _, Tag(party), None))\n  }"
  }
]