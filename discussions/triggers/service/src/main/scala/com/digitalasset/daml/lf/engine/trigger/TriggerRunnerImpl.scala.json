[
  {
    "id" : "94bbe682-b65d-4e34-9266-586b3fceced3",
    "prId" : 7205,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7205",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a1c029e-3257-4f40-ab42-12a6cb920e22",
        "parentId" : null,
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "20:58:59.499 [TriggerService-akka.actor.default-dispatcher-9] INFO  c.d.l.e.trigger.TriggerRunnerImpl - Trigger 61bc6730-fcbe-4613-a93f-ad588906e511 stopped (context: {triggerDefinition=cc176cffd4667d83c42c1cba4402a21a24a05deb7ba6684cd1a7462809de72b1:TestTrigger:trigger, triggerId=61bc6730-fcbe-4613-a93f-ad588906e511})",
        "createdAt" : "2020-09-02T21:05:30Z",
        "updatedAt" : "2020-09-03T15:40:53Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5d5af3d7402e279de3eb423f6bf09c7b274c605",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +174,178 @@              // here. It won't receive it (many Bothans died to bring\n              // us this information).\n              logger.info(s\"Trigger $name stopped\")\n              killSwitch.shutdown\n              Behaviors.stopped"
  },
  {
    "id" : "263d76b2-225b-4823-b4e0-e08fce33fc64",
    "prId" : 7205,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7205",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f821b341-4a8b-40f5-8526-9d90495eab0e",
        "parentId" : null,
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "20:57:35.926 [TriggerService-akka.actor.default-dispatcher-8] INFO  c.d.l.e.trigger.TriggerRunnerImpl - Trigger 821fb28a-bec4-4047-b4e0-80275157711f is being restarted (context: {triggerDefinition=cc176cffd4667d83c42c1cba4402a21a24a05deb7ba6684cd1a7462809de72b1:TestTrigger:trigger, triggerId=821fb28a-bec4-4047-b4e0-80275157711f})",
        "createdAt" : "2020-09-02T21:06:05Z",
        "updatedAt" : "2020-09-03T15:40:53Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5d5af3d7402e279de3eb423f6bf09c7b274c605",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +182,186 @@              // the process of being restarted, will be informed of\n              // the start along the way.\n              logger.info(s\"Trigger $name is being restarted\")\n              Behaviors.same\n          }"
  },
  {
    "id" : "dba66a43-03a2-4682-b348-42320ad3f00e",
    "prId" : 7205,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7205",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3af99572-e19c-40ae-8b87-cfe06d33cadf",
        "parentId" : null,
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "20:58:59.462 [TriggerService-akka.actor.default-dispatcher-8] INFO  c.d.l.e.trigger.TriggerRunnerImpl - Trigger 61bc6730-fcbe-4613-a93f-ad588906e511 is starting (context: {triggerDefinition=cc176cffd4667d83c42c1cba4402a21a24a05deb7ba6684cd1a7462809de72b1:TestTrigger:trigger, triggerId=61bc6730-fcbe-4613-a93f-ad588906e511})",
        "createdAt" : "2020-09-02T21:06:31Z",
        "updatedAt" : "2020-09-03T15:40:53Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5d5af3d7402e279de3eb423f6bf09c7b274c605",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +60,64 @@      // Report to the server that this trigger is starting.\n      config.server ! TriggerStarting(triggerInstance)\n      logger.info(s\"Trigger $name is starting\")\n      val appId = ApplicationId(name)\n      val clientConfig = LedgerClientConfiguration("
  },
  {
    "id" : "3fc9a411-ee49-4382-b46a-dbce4369e383",
    "prId" : 6248,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6248",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "700b8bf0-1661-4523-ab76-1f925f677ce3",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Maybe there's an opportunity to refactor here as the behaviour when `wasStopped` is the basically the same for 2/3 messages, i.e. you could check `wasStopped` before the message. Not for this PR though.",
        "createdAt" : "2020-06-05T20:48:19Z",
        "updatedAt" : "2020-06-05T21:07:51Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "d418228cbcdf661bd90d9677f958b857e988d2ef",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +82,86 @@        Behaviors.receiveMessagePartial[Message] {\n          case QueryACSFailed(cause) =>\n            if (wasStopped) {\n              // The stop endpoint can't send a message to a runner\n              // that isn't in the running triggers table so this is"
  },
  {
    "id" : "226994b9-5059-4a51-b123-937a98e43ab9",
    "prId" : 6079,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6079",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61f5cf1b-17b6-4442-b4ce-8c873bf72cf0",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "If I have a token that gives me `readAs` but not `actAs` the trigger will start up successfully but fail as soon as it tries to do anything. A trigger without `actAs` is completely useless so maybe it would make sense to change the logic for detecting that you only have a single party to verify that the party has `actAs`?",
        "createdAt" : "2020-05-25T14:30:54Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "acd1aa0b-b0c1-4fab-9df0-08f4dca4133d",
        "parentId" : "61f5cf1b-17b6-4442-b4ce-8c873bf72cf0",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "That's a good suggestion. I'll think about that (read, will almost certainly implement that).\r\n\r\nFWIW, the current (expected) behavior is that the actor running the trigger will hit the max retries almost immediately and will be terminated so this idea probably won't add much new except perhaps less resources consumed and maybe better error reporting.",
        "createdAt" : "2020-05-25T14:43:30Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbdb87590a19aa1bb81b8b704105db5a774d8efd",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +137,141 @@                  Failed(cause)\n              }\n              // Report to the server that this trigger is entering\n              // the running state.\n              config.server ! TriggerStarted(config.triggerId, config.jwt, parent)"
  },
  {
    "id" : "0e06bc1a-807c-48c3-8557-aea015788bde",
    "prId" : 6079,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6079",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "563d5ddb-1800-4932-ac6f-f56f0f79d8c8",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Could we send a `Stop` message to the parent TriggerRunner directly here instead of going through the Server? It looks like the Server doesn't do anything besides stop the TriggerRunner, and we have access to the parent here too.",
        "createdAt" : "2020-05-26T16:09:10Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbdb87590a19aa1bb81b8b704105db5a774d8efd",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +86,90 @@                config.jwt,\n                parent,\n                cause.toString)\n              // Tell our monitor there's been a failure. The\n              // monitor's supervision strategy will respond to this"
  },
  {
    "id" : "d4e05795-25ee-48b9-b0a7-b359845258e1",
    "prId" : 6079,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6079",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad391f08-7783-46af-b470-b642f806a0a9",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Same comment here",
        "createdAt" : "2020-05-26T16:10:55Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbdb87590a19aa1bb81b8b704105db5a774d8efd",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +98,102 @@                config.jwt,\n                parent,\n                cause.toString)\n              // Tell our monitor there's been a failure. The\n              // monitor's supervisor strategy will respond to this by"
  },
  {
    "id" : "b822cb62-9af6-4085-8cf0-83a215d852fc",
    "prId" : 6079,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6079",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8faefdf4-af41-4af5-8853-c91792dc4df8",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "The parent will retry this actor until the Server stops the parent, right?",
        "createdAt" : "2020-05-26T16:12:11Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbdb87590a19aa1bb81b8b704105db5a774d8efd",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +91,95 @@              // by writing the exception to the log and stopping this\n              // actor.\n              throw new InitializationException(\"User stopped\")\n            } else {\n              // Report the failure to the server."
  },
  {
    "id" : "489440dc-f79e-4f92-b71b-4199878ce3bf",
    "prId" : 6079,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6079",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a287f5f-b935-4428-a6c5-f294b9bd3a52",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "These two `Failed` cases are where the parent will use the retry strategy (without being stopped by the Server). Is that right?",
        "createdAt" : "2020-05-26T16:14:29Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      },
      {
        "id" : "679ba2d7-680e-4349-8a48-1d2f59401990",
        "parentId" : "6a287f5f-b935-4428-a6c5-f294b9bd3a52",
        "authorId" : null,
        "body" : "yes",
        "createdAt" : "2020-05-26T16:44:07Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "cbdb87590a19aa1bb81b8b704105db5a774d8efd",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +135,139 @@                  Failed(new RuntimeException(\"Trigger exited unexpectedly\"))\n                case Failure(cause) =>\n                  Failed(cause)\n              }\n              // Report to the server that this trigger is entering"
  },
  {
    "id" : "f3f3738f-148a-412d-91e9-b7e9a499caff",
    "prId" : 6079,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6079",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10f5d9e9-993b-4b3d-bc7d-31725acdd15e",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Why do we need to report that we are starting? The server doesn't do anything in that case, but do you expect that to change?",
        "createdAt" : "2020-05-26T16:24:51Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      },
      {
        "id" : "c905f547-1cd1-4c45-ae91-e807bd75f0c9",
        "parentId" : "10f5d9e9-993b-4b3d-bc7d-31725acdd15e",
        "authorId" : null,
        "body" : "yes, i plan to introduce a table tracking changes so that we can report on the status of a trigger",
        "createdAt" : "2020-05-26T16:44:39Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "cbdb87590a19aa1bb81b8b704105db5a774d8efd",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +64,68 @@      implicit val ec: ExecutionContext = ctx.executionContext\n      // Report to the server that this trigger is starting.\n      config.server ! TriggerStarting(config.triggerId, config.jwt, parent)\n      ctx.log.info(s\"Trigger ${name} is starting\")\n      val appId = ApplicationId(name)"
  },
  {
    "id" : "91eae585-eeff-442d-a162-9a469d00485a",
    "prId" : 5916,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "396f4b40-7b81-4da5-b818-90287735c7ec",
        "parentId" : null,
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "This is new. Previously, `Failed` messages were not handled.",
        "createdAt" : "2020-05-08T17:47:58Z",
        "updatedAt" : "2020-05-08T17:50:49Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "af232941b942e74dba8060b1a9b12c00425ead19",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +99,103 @@            case Stop =>\n              Behaviors.stopped\n            case Failed(cause) =>\n              // In the event 'runWithACS' completes it's because the\n              // stream is broken. Throw an exception allowing our"
  },
  {
    "id" : "1e3cd21b-5de9-4da1-b37a-b81a532c906c",
    "prId" : 5916,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "933e766b-d5b0-483a-9226-1a8bc6ff4527",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Maybe this is an akka-pattern I’m not aware off but I’ve only seen `Impl` be used if you have an abstract interface that you are implementing. This is not what is going on here so it seems rather confusing.",
        "createdAt" : "2020-05-11T07:23:41Z",
        "updatedAt" : "2020-05-11T07:30:19Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "66f0ebd3-00ea-4584-a9b9-3ca581913e8a",
        "parentId" : "933e766b-d5b0-483a-9226-1a8bc6ff4527",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "Maybe the nomenclature is non-idiomatic for Scala (it's common in C++ e.g. `pImpl`) but at the end of the day, it's nothing more than the classic \"handle-body\" or \"letter-envelope\" pattern.",
        "createdAt" : "2020-05-11T13:02:04Z",
        "updatedAt" : "2020-05-11T13:02:04Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "af232941b942e74dba8060b1a9b12c00425ead19",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@}\n\nobject TriggerRunnerImpl {\n  case class Config(\n      compiledPackages: CompiledPackages,"
  },
  {
    "id" : "6e01f660-21a8-4301-adbb-ee5f492652d1",
    "prId" : 5916,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c7f7293-2c36-49d2-b4bb-d55d67be5ec0",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Can you please try to not shuffle all of this code around in the same PR where you are making actual changes.",
        "createdAt" : "2020-05-11T07:24:11Z",
        "updatedAt" : "2020-05-11T07:30:19Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "28ca20fe-0207-4f74-9f62-43ac35b98024",
        "parentId" : "6c7f7293-2c36-49d2-b4bb-d55d67be5ec0",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "That's fair. I'll resist the urge in future and land such things in two parts.",
        "createdAt" : "2020-05-11T13:03:14Z",
        "updatedAt" : "2020-05-11T13:03:14Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "af232941b942e74dba8060b1a9b12c00425ead19",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n"
  }
]