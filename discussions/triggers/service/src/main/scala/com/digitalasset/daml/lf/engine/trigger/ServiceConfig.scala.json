[
  {
    "id" : "8ca1680a-70db-4d33-98da-4e1819a5c637",
    "prId" : 9286,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9286",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e91cc8db-8c2e-4cb2-81fc-c4fd612f0a5e",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This is what prevents this from being user-facing at the moment.",
        "createdAt" : "2021-03-30T14:55:45Z",
        "updatedAt" : "2021-03-31T08:28:55Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3cbb7cfe5d582d0470ac96635b4c767ed8c3200",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +58,62 @@      password <- requiredField(x)(\"password\")\n    } yield JdbcConfig(\n      driver = \"org.postgresql.Driver\", // TODO make this configurable\n      url = url,\n      user = user,"
  },
  {
    "id" : "b718cf01-3890-49ee-9730-e5a40511583a",
    "prId" : 8193,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8193",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93d251b3-295a-493d-8020-a53f8126c874",
        "parentId" : null,
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "The auth feature is not yet exposed (`.hidden`) so it doesn't make sense to expose these flags independently.",
        "createdAt" : "2020-12-08T11:13:46Z",
        "updatedAt" : "2020-12-08T16:20:44Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53df42416a4329ad1f6910358d4d07dba04c2c1",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +144,148 @@      .text(s\"Optional max HTTP entity upload size. Defaults to ${DefaultMaxHttpEntityUploadSize}.\")\n      // TODO[AH] Expose once the auth feature is fully implemented.\n      .hidden()\n\n    opt[Long](\"http-entity-upload-timeout\")"
  },
  {
    "id" : "0c6bfb90-99c9-4a55-9411-f1934ce2c996",
    "prId" : 7090,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83a2351a-ccf2-4fa2-90f8-1287349eb033",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Side note: We should add a port file option but let’s keep that for a later PR. I’ll add an issue.",
        "createdAt" : "2020-08-12T08:55:05Z",
        "updatedAt" : "2020-08-12T16:14:23Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "de914c456c01e489580cb73d807dffb3acd3c6bc",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +96,100 @@      httpPort = (f, c) => c.copy(httpPort = f(c.httpPort)),\n      defaultHttpPort = Some(DefaultHttpPort),\n      portFile = None,\n    )\n"
  },
  {
    "id" : "ee27815f-2234-4ed5-99fa-453405d3d53b",
    "prId" : 6309,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6309",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f926ca1-b60a-42fd-a2a3-f4f41bf265ff",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "I think you can specify the default value here, like\r\n```suggestion\r\n    noSecretKey: Boolean = false,\r\n```",
        "createdAt" : "2020-06-11T22:07:22Z",
        "updatedAt" : "2020-06-11T22:19:34Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "df38038340aa1699372867c97fee63f61f3bd093",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +25,29 @@    commandTtl: Duration,\n    init: Boolean,\n    noSecretKey: Boolean, // Default false\n    jdbcConfig: Option[JdbcConfig],\n)"
  },
  {
    "id" : "3bc450d9-0d90-4170-ad0d-9c08cc09ccf6",
    "prId" : 6309,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6309",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8325fe79-1c6c-4910-a78b-e9c157efd460",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Some more warning here might be helpful, e.g.\r\n```suggestion\r\n      .text(\"Allow running without a secret encryption key. This means that user credentials are not secure so this should not be used if security is a concern.\")\r\n```",
        "createdAt" : "2020-06-11T22:12:15Z",
        "updatedAt" : "2020-06-11T22:19:34Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "df38038340aa1699372867c97fee63f61f3bd093",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +143,147 @@    opt[Unit](\"no-secret-key\")\n      .action((_, c) => c.copy(noSecretKey = true))\n      .text(\"Allow running without a secret key.\")\n\n    cmd(\"init-db\")"
  },
  {
    "id" : "da2a391f-ddd3-46a2-9292-0cf1cab89b7e",
    "prId" : 6062,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6062",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1b7524f-e54c-4eb6-bea8-b463e0d0f90e",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I assume you copied this from some other place in our codebase? Can we share this?",
        "createdAt" : "2020-05-21T06:36:47Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "449519f1-9d32-4c14-8b28-ebeb87cf58a5",
        "parentId" : "b1b7524f-e54c-4eb6-bea8-b463e0d0f90e",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Copied from the JSON API but slightly reduced to omit the driver (which can only be one thing in the JSON API as well) and a flag they use to indicate initialization in place of my `init-db` command. I'm sure there should be reuse here but I wanted to figure out the right format/interface for this thing first (including addressing your next comment).",
        "createdAt" : "2020-05-21T19:39:03Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "30baa950bdb2fc1851cd1b480587cacb471b9a2f",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +30,34 @@)\n\nobject JdbcConfig {\n  implicit val showInstance: Show[JdbcConfig] =\n    Show.shows(a => s\"JdbcConfig(url=${a.url}, user=${a.user})\")"
  },
  {
    "id" : "6c98cdb9-6637-41f5-849b-e9892ae746e3",
    "prId" : 6062,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6062",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a088514-efb8-45ca-9a3c-18d382e29fbb",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "We now have `--jdbc` for the trigger service, `--query-store-jdbc-config` for the JSON API and `--sql-backend-jdbcurl` for sandbox the latter even has a different format :crying_cat_face: ",
        "createdAt" : "2020-05-21T06:40:37Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "a3da2f79-bc00-4570-8e94-cf59d2941f35",
        "parentId" : "5a088514-efb8-45ca-9a3c-18d382e29fbb",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Good point, I could use the sandbox format and argument name, by including the username and password in the url string. I'll think about tweaking this in a later PR if that's ok.",
        "createdAt" : "2020-05-21T19:43:17Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      },
      {
        "id" : "c1002131-474b-491f-b59e-6b4e2fe9c59b",
        "parentId" : "5a088514-efb8-45ca-9a3c-18d382e29fbb",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Happy to do it separately, I’d just like to not have to remember 3 different ways of specifying a jdbc url in the long term :slightly_smiling_face: ",
        "createdAt" : "2020-05-22T06:28:46Z",
        "updatedAt" : "2020-05-22T06:34:05Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "30baa950bdb2fc1851cd1b480587cacb471b9a2f",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +114,118 @@      .text(\"TTL in seconds used for commands emitted by the trigger. Defaults to 30s.\")\n\n    opt[Map[String, String]](\"jdbc\")\n      .action((x, c) =>\n        c.copy(jdbcConfig = Some(JdbcConfig.create(x).fold(e => sys.error(e), identity))))"
  },
  {
    "id" : "9f3e4a5e-a463-4834-91f3-37226d113c0a",
    "prId" : 6062,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6062",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d40615df-8cef-4f06-b313-25f329f2171a",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This is a bit confusing. You still require all the parameters that are required if you do not use the command due to the way `scopt` works so you have to pass in the ledger-host even though it is not used.",
        "createdAt" : "2020-05-21T06:41:44Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "5e8454be-968c-4092-b612-4349804f8ce6",
        "parentId" : "d40615df-8cef-4f06-b313-25f329f2171a",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Agreed. The problem I ran into is that the `TriggerDao` object requires an implicit execution context (for connecting to the database), and that is obtained from the actor system which is initialized with those config parameters.. Perhaps I could instead use the global execution context in the `init-db` case?",
        "createdAt" : "2020-05-21T19:56:25Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      },
      {
        "id" : "93360b03-14be-4635-ad65-8a04ed253461",
        "parentId" : "d40615df-8cef-4f06-b313-25f329f2171a",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Or a custom one. I never really understood which execution context you are supposed to use tbh :slightly_smiling_face:. Happy to keep it for now.",
        "createdAt" : "2020-05-22T06:31:35Z",
        "updatedAt" : "2020-05-22T06:34:05Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "30baa950bdb2fc1851cd1b480587cacb471b9a2f",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +121,125 @@      .text(\"JDBC configuration parameters. If omitted the service runs without a database.\")\n\n    cmd(\"init-db\")\n      .action((_, c) => c.copy(init = true))\n      .text(\"Initialize database and terminate.\")"
  },
  {
    "id" : "684c9165-5d40-4929-b291-3700bc1251d4",
    "prId" : 4287,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4287",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85117a5d-7f6c-42ee-b2fb-bfbd2f9ef06c",
        "parentId" : null,
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Do we want to support loading DARs dynamically in the long run?",
        "createdAt" : "2020-01-31T08:55:57Z",
        "updatedAt" : "2020-01-31T09:30:36Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "85a726f5-f656-4741-ac04-605445cc5e13",
        "parentId" : "85117a5d-7f6c-42ee-b2fb-bfbd2f9ef06c",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Yep.",
        "createdAt" : "2020-01-31T09:23:03Z",
        "updatedAt" : "2020-01-31T09:30:36Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "066ec07af8b619d03c7d54bc324fed6b4ac7b4de",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +10,14 @@\ncase class ServiceConfig(\n    // For now, we only support one dar.\n    darPath: Path,\n    ledgerHost: String,"
  }
]