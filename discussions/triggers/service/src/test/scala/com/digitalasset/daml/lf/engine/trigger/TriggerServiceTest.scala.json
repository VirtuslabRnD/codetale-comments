[
  {
    "id" : "185de2ab-17b8-4ab1-9150-17181621b134",
    "prId" : 8037,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8037",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e85982e2-78d3-4492-bdab-d9b4c44f6e38",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I assume by ‘trigger service transparently requests a new token” you mean that the user gets directed through an auth flow on the middleware? We’re not actually refreshing a token here right?",
        "createdAt" : "2020-11-23T16:51:29Z",
        "updatedAt" : "2020-12-02T15:35:48Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "006f8206-8350-494a-a07f-09a041536a93",
        "parentId" : "e85982e2-78d3-4492-bdab-d9b4c44f6e38",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Yes, this is not using the refresh endpoint. ",
        "createdAt" : "2020-11-25T10:29:46Z",
        "updatedAt" : "2020-12-02T15:35:48Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "632515e90d652374fe2bbed365818b95b2378697",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +568,572 @@        resp <- listTriggers(uri, alice)\n        _ <- resp.status shouldBe StatusCodes.OK\n        // Expire old token and test the trigger service transparently requests a new token.\n        _ = authClock.fastForward(\n          JDuration.ofSeconds(authServer.tokenLifetimeSeconds.asInstanceOf[Long] + 1))"
  },
  {
    "id" : "dc4e98c7-e5b6-4d15-b8e2-7a517978d6ee",
    "prId" : 7952,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7952",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f13aaae4-80c9-4e6d-b384-8edda466e0ac",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Why do we need to delete cookies? Even if we have a cookie we still call `/authorize` right? Should we make that fail for cookies corresponding to tokens where the party has been revoked? It’s only a test server so you can argue both ways here and I don’t have particularly strong feelings.",
        "createdAt" : "2020-11-12T10:02:24Z",
        "updatedAt" : "2020-11-12T16:58:01Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "a63cb57e-2b2b-4f36-8618-1b8b54ff1465",
        "parentId" : "f13aaae4-80c9-4e6d-b384-8edda466e0ac",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "As described in the PR description this is meant to emulate two different users accessing the trigger service. So, deleting cookies corresponds to the second user not having the first user's cookies available in the first place. I've added a comment to that effect as well.\r\n\r\nThe revoking of access to parties happens at the oauth2 test server in this case not at the middleware. So, it controls token issuing, not token validation.\r\n\r\n> Even if we have a cookie we still call /authorize right?\r\n\r\nNo, the middleware's /auth endpoint never calls the oauth2 server's /authorize endpoint, that only happens on the middleware's /login endpoint. If the /auth endpoint detects a valid token in the cookie that grants access to the requested claims then it will just return the access token.",
        "createdAt" : "2020-11-12T14:25:55Z",
        "updatedAt" : "2020-11-12T16:58:01Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "f4787245-d70f-4afd-aaa8-0124efb4694a",
        "parentId" : "f13aaae4-80c9-4e6d-b384-8edda466e0ac",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "> > Even if we have a cookie we still call /authorize right?\r\n> \r\n> No, the middleware's /auth endpoint never calls the oauth2 server's /authorize endpoint, that only happens on the middleware's /login endpoint. If the /auth endpoint detects a valid token in the cookie that grants access to the requested claims then it will just return the access token.\r\n\r\nSorry I meant the trigger service calls `/auth` on the middleware and that could fail. But your explanation with two users makes sense :+1: ",
        "createdAt" : "2020-11-12T14:29:29Z",
        "updatedAt" : "2020-11-12T16:58:01Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "15141e7528b1720f2546c848298b9fabca5dfddc",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +519,523 @@      // emulate access by a different user by revoking access to alice and deleting the current token cookie\n      _ = authServer.revokeParty(alice)\n      _ = deleteCookies()\n      resp <- triggerStatus(uri, triggerId)\n      _ <- resp.status shouldBe StatusCodes.Forbidden"
  }
]