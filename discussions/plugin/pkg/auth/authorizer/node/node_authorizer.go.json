[
  {
    "id" : "9b3c43c2-314a-4498-9889-0000ff7abe6c",
    "prId" : 91591,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91591#pullrequestreview-425604000",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "is \"err\" a standard name?",
        "createdAt" : "2020-06-03T13:40:08Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "2cba3b2c-7af7-4c98-9290-4cd03245c982",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "do you have example output from this change?",
        "createdAt" : "2020-06-03T13:41:11Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f951ac18-d78a-46ce-ace6-759fc6bef65b",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "body" : "Yes, more details: https://github.com/kubernetes/community/blob/5e71635bb60dd7684e1afd820a1a61b9dd975211/contributors/devel/sig-instrumentation/migration-to-structured-logging.md#name-arguments",
        "createdAt" : "2020-06-03T14:06:13Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "tags" : [
        ]
      },
      {
        "id" : "aa17c545-6572-492c-9e67-ca0af5e0c6b3",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "body" : "> is \"err\" a standard name?\r\n\r\nit seems to be. i used the \"err\" name because @serathius recommended that elsewhere: https://github.com/kubernetes/kubernetes/pull/91576#discussion_r432474929.\r\n\r\n> do you have example output from this change?\r\n\r\nah, yeah, sorry, i forgot to put the output from this change in this pr.\r\n\r\nbefore:\r\n```\r\nI0603 09:59:27.676862   54009 node_authorizer.go:209] NODE DENY: node \"node2\" cannot get secret ns1/node1-only, no relationship to this object was found in the node authorizer graph\r\n```\r\n\r\nafter:\r\n```\r\nI0603 09:57:29.759232   53238 node_authorizer.go:209] \"NODE DENY\" err=&errors.errorString{s:\"node \\\"node2\\\" cannot get secret ns1/node1-only, no relationship to this object was found in the node authorizer graph\"}\r\n```",
        "createdAt" : "2020-06-03T14:08:04Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "tags" : [
        ]
      },
      {
        "id" : "e20db3e3-422b-4e33-9eb8-71021289f975",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "body" : "@ankeesler Can you use instructions provided here https://github.com/kubernetes/community/blob/5e71635bb60dd7684e1afd820a1a61b9dd975211/contributors/devel/sig-instrumentation/migration-to-structured-logging.md#verify-log-output \r\nTo generate comparison of log output?",
        "createdAt" : "2020-06-03T14:08:04Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "tags" : [
        ]
      },
      {
        "id" : "ff431780-4eff-4f49-b959-a5299c1753b9",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "so for existing log consumers, this results in much less readable output:\r\n\r\n> I0603 09:59:27.676862   54009 node_authorizer.go:209] NODE DENY: node \"node2\" cannot get secret ns1/node1-only, no relationship to this object was found in the node authorizer graph\r\n\r\nvs\r\n\r\n> I0603 09:57:29.759232   53238 node_authorizer.go:209] \"NODE DENY\" err=&errors.errorString{s:\"node \\\"node2\\\" cannot get secret ns1/node1-only, no relationship to this object was found in the node authorizer graph\"}\r\n",
        "createdAt" : "2020-06-03T14:10:01Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "bc37d0c1-6ee8-4b53-974b-9ab9ded40832",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "body" : "This looks like a bug. We intended to use `%q` for errors.\r\nFiled: https://github.com/kubernetes/klog/issues/158",
        "createdAt" : "2020-06-03T14:17:39Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "tags" : [
        ]
      },
      {
        "id" : "5f09e169-da9a-4ebb-8f45-97f9081e2095",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "body" : "Is there action that needs to be taken on this PR in the interim before the bug is fixed?\r\n\r\nI could pass `err.Error()` instead of `err`?",
        "createdAt" : "2020-06-03T14:20:55Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "tags" : [
        ]
      },
      {
        "id" : "0a28a60e-fcf2-41df-8b1b-bf949cc0af00",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "body" : "We should wait until bug is fixed. We shouldn't pass `err.Error()` as it drops information about type that could be used by `InfoS` implementation.",
        "createdAt" : "2020-06-03T14:27:45Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "tags" : [
        ]
      },
      {
        "id" : "b3b75f32-8711-405b-9708-c98df5a23969",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "body" : "@ankeesler I have created PR with fix to serialization. https://github.com/kubernetes/kubernetes/pull/91792\r\nPlease to generate output with this change",
        "createdAt" : "2020-06-05T08:43:51Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "tags" : [
        ]
      },
      {
        "id" : "f9e95fea-c69a-424d-ad65-04559e3ff62e",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "body" : "Using @serathius's branch from the above PR, here is what the output diff is.\r\n\r\n`Infof`:\r\n```\r\nI0605 14:45:43.330939   41909 node_authorizer.go:209] NODE DENY: node \"node2\" cannot get secret ns1/node1-only, no relationship to this object was found in the node authorizer graph\r\n```\r\n\r\n`InfoS`:\r\n```\r\nI0605 14:43:40.047434   41115 node_authorizer.go:209] \"NODE DENY\" err=\"node \\\"node2\\\" cannot get secret ns1/node1-only, no relationship to this object was found in the node authorizer graph\"\r\n```",
        "createdAt" : "2020-06-05T18:48:39Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "tags" : [
        ]
      },
      {
        "id" : "80e95e66-4424-4a4b-ad20-73223e3a15ce",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the quote escaping is unfortunate... I didn't really expect non-json log output to change here, but if it's going to, we should avoid quoting things that will be escaped in ugly ways. I guess that means sweeping where we construct these messages to drop double quotes (which is also unfortunate)?",
        "createdAt" : "2020-06-05T18:51:32Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "9a151acc-f4f2-48ca-96cd-06ddb7c38e5a",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "body" : "Quoting in InfoS here is needed to ensure logs can be parsed. I would be useful to move information stored in errors to logs (like node name). For this PR I think we should remove quotes used in error. \r\n@ankeesler can you change original error to not add quotes?",
        "createdAt" : "2020-06-05T19:02:27Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "tags" : [
        ]
      },
      {
        "id" : "3065639b-48b9-429d-a2d5-e4f00705dc32",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Quoting in InfoS here is needed to ensure logs can be parsed\r\n\r\nwhen output as JSON, sure... when output as text, I didn't expect so",
        "createdAt" : "2020-06-05T19:19:28Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "af7b949a-a23a-409b-953a-5b6dd6885f25",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "body" : "After 0715ecfbb96, the structured log line looks like this.\r\n```\r\nI0605 15:14:45.707400   53254 node_authorizer.go:209] \"NODE DENY\" err=\"node node2 cannot get secret ns1/node1-only, no relationship to this object was found in the node authorizer graph\"\r\n```\r\n\r\nNote - there was a pattern[0][1][2][3][4] of quoting the node name in log lines from this file. The log lines could potentially have different variations of quoting/not quoting the node name now. Is this OK?\r\n\r\nAlso note - I am seeing a general pattern in Kube where we use `%q` a lot to emphasis `string` names of code entities. By removing this instance of `%q`, am I breaking that pattern? Is that OK?\r\n\r\n[0] https://github.com/kubernetes/kubernetes/blob/b8b4186a14045ab66b150b5a92276d02b8a73a3e/plugin/pkg/auth/authorizer/node/node_authorizer.go#L210\r\n[1] https://github.com/kubernetes/kubernetes/blob/b8b4186a14045ab66b150b5a92276d02b8a73a3e/plugin/pkg/auth/authorizer/node/node_authorizer.go#L213\r\n[2] https://github.com/kubernetes/kubernetes/blob/b8b4186a14045ab66b150b5a92276d02b8a73a3e/plugin/pkg/auth/authorizer/node/node_authorizer.go#L238\r\n[3] https://github.com/kubernetes/kubernetes/blob/b8b4186a14045ab66b150b5a92276d02b8a73a3e/plugin/pkg/auth/authorizer/node/node_authorizer.go#L308\r\n[4] https://github.com/kubernetes/kubernetes/blob/b8b4186a14045ab66b150b5a92276d02b8a73a3e/plugin/pkg/auth/authorizer/node/node_authorizer.go#L313",
        "createdAt" : "2020-06-05T19:20:01Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "tags" : [
        ]
      },
      {
        "id" : "29dbc89d-e404-46a2-869e-44af67ad8071",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I guess replace those with `'%s'`?",
        "createdAt" : "2020-06-05T19:47:48Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "0237acee-1e5d-482e-98bf-8531148b265b",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "body" : "Gave that a go in 1b7352645bc.",
        "createdAt" : "2020-06-05T20:04:02Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "tags" : [
        ]
      },
      {
        "id" : "2c9d24e0-e2e7-4029-9e2e-9b94d6891659",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I would still wrap in single-quotes so it is clear which part is the name",
        "createdAt" : "2020-06-05T20:08:20Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "4dce79bf-88d8-423b-be68-890c3bd88f13",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "body" : "Ahh...yeah that makes sense. I skimmed over your previous comment too quickly, time for some more coffee. e37c6fa47d0.\r\n\r\nSo here is where we are now with `InfoS` logging:\r\n```\r\nI0605 16:13:56.401788   75841 node_authorizer.go:209] \"NODE DENY\" err=\"node 'node2' cannot get secret ns1/node1-only, no relationship to this object was found in the node authorizer graph\"\r\n```\r\n\r\nAnd here is where we are at with `Infof` logging.\r\n```\r\nI0605 16:14:30.996413   76058 node_authorizer.go:281] NODE DENY: 'node0' authorizer.AttributesRecord{User:(*user.DefaultInfo)(0xc0003b16c0), Verb:\"watch\", Namespace:\"\", APIGroup:\"storage.k8s.io\", APIVersion:\"\", Resource:\"csinodes\", Subresource:\"\", Name:\"\", ResourceRequest:true, Path:\"\"}\r\n```",
        "createdAt" : "2020-06-05T20:18:44Z",
        "updatedAt" : "2020-06-05T20:18:52Z",
        "lastEditedBy" : "3facb628-1605-4337-a02a-e4886173f7bf",
        "tags" : [
        ]
      },
      {
        "id" : "8168a059-464b-4ceb-9cdf-88b4eda422fb",
        "parentId" : "562102ca-4c3e-4ce4-b771-229a2f445a90",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "edit: nevermind, those were two different lines. switching the quote to single quote looks fine to me",
        "createdAt" : "2020-06-05T20:25:22Z",
        "updatedAt" : "2020-06-05T20:25:22Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e37c6fa47d08e996ca76c6d8ecb6668857c61683",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +207,211 @@\tok, err := r.hasPathFrom(nodeName, startingType, attrs.GetNamespace(), attrs.GetName())\n\tif err != nil {\n\t\tklog.V(2).InfoS(\"NODE DENY\", \"err\", err)\n\t\treturn authorizer.DecisionNoOpinion, fmt.Sprintf(\"no relationship found between node '%s' and this object\", nodeName), nil\n\t}"
  },
  {
    "id" : "303edcc1-2715-4b0b-b192-9f9a42dea588",
    "prId" : 67684,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67684#pullrequestreview-152305266",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd8f38e8-389c-4ada-afe5-261ac5654735",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Unless we're intending to authorize all subresources as well, ensure the subresource attribute is empty",
        "createdAt" : "2018-09-05T01:08:46Z",
        "updatedAt" : "2018-09-08T00:45:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "94d649b5904bac29fcea9269ce98753604be1258",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +262,266 @@\n// authorizeCSINodeInfo authorizes node requests to CSINodeInfo csi.storage.k8s.io/csinodeinfos\nfunc (r *NodeAuthorizer) authorizeCSINodeInfo(nodeName string, attrs authorizer.Attributes) (authorizer.Decision, string, error) {\n\t// allowed verbs: get, create, update, patch, delete\n\tverb := attrs.GetVerb()"
  },
  {
    "id" : "25670209-8c01-4ba1-8122-da2a098115bb",
    "prId" : 66257,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66257#pullrequestreview-147739206",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "678cd316-32a6-411b-b653-ac5eba07633a",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I expected a `return authorizer.DecisionNoOpinion, fmt.Sprintf(\"disabled by feature gate %s\", features.NodeLease), nil` if the feature gate was disabled, like svcAcctResource",
        "createdAt" : "2018-08-16T17:18:51Z",
        "updatedAt" : "2018-08-26T23:03:47Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5961184b-0702-4b1e-898d-e5b388f918a7",
        "parentId" : "678cd316-32a6-411b-b653-ac5eba07633a",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Thanks, updated.",
        "createdAt" : "2018-08-20T17:14:57Z",
        "updatedAt" : "2018-08-26T23:03:47Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b7d06e025fef842a4323d786ad80507f509dcd2",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +119,123 @@\t\t\tif r.features.Enabled(features.NodeLease) {\n\t\t\t\treturn r.authorizeLease(nodeName, attrs)\n\t\t\t}\n\t\t\treturn authorizer.DecisionNoOpinion, fmt.Sprintf(\"disabled by feature gate %s\", features.NodeLease), nil\n\t\t}"
  },
  {
    "id" : "d1166618-5c08-4a07-920d-020f52d16b1f",
    "prId" : 66257,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66257#pullrequestreview-148724508",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4111dd7b-feda-4307-8e2c-28f46656033c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "oh, also need a rule in `NodeRules()` for those still using RBAC only with nodes:\r\n\r\n```go\r\n// Node leases\r\nif utilfeature.DefaultFeatureGate.Enabled(features.NodeLease) {\r\n\tnodePolicyRules = append(nodePolicyRules, rbacv1helpers.NewRule(\"get\",\"list\",\"watch\",\"create\",\"update\",\"patch\",\"delete\").Groups(\"coordination.k8s.io\").Resources(\"leases\").RuleOrDie())\r\n}\r\n```",
        "createdAt" : "2018-08-22T12:47:05Z",
        "updatedAt" : "2018-08-26T23:03:47Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f719b793-4cd4-4621-a846-b7e5de942bc1",
        "parentId" : "4111dd7b-feda-4307-8e2c-28f46656033c",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Do we need list and watch permission in that list? They aren't allowed by the authz bits.",
        "createdAt" : "2018-08-22T17:01:25Z",
        "updatedAt" : "2018-08-26T23:03:47Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "2a3d3096-186b-4d4d-af33-7340ef17f947",
        "parentId" : "4111dd7b-feda-4307-8e2c-28f46656033c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Do we need list and watch permission in that list? They aren't allowed by the authz bits.\r\n\r\nif they're not needed, you can omit them. for some reason I thought the leader election bits watched the resource",
        "createdAt" : "2018-08-22T17:15:24Z",
        "updatedAt" : "2018-08-26T23:03:47Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ded724ae-bae3-4cdd-8531-2e8ab4fe6ca6",
        "parentId" : "4111dd7b-feda-4307-8e2c-28f46656033c",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "`NodeRules()` is just for `system:node` right? Which just applies to Kubelet right? Kubelet doesn't need to watch its own lease.",
        "createdAt" : "2018-08-22T17:46:05Z",
        "updatedAt" : "2018-08-26T23:03:47Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "05a63e7b-0950-43d8-a568-7105d9379014",
        "parentId" : "4111dd7b-feda-4307-8e2c-28f46656033c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> NodeRules() is just for system:node right? Which just applies to Kubelet right? Kubelet doesn't need to watch its own lease.\r\n\r\nyes",
        "createdAt" : "2018-08-23T00:49:32Z",
        "updatedAt" : "2018-08-26T23:03:47Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b7d06e025fef842a4323d786ad80507f509dcd2",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +121,125 @@\t\t\t}\n\t\t\treturn authorizer.DecisionNoOpinion, fmt.Sprintf(\"disabled by feature gate %s\", features.NodeLease), nil\n\t\t}\n\t}\n"
  },
  {
    "id" : "1573d47d-b303-4a4d-856b-d03d7e10e879",
    "prId" : 55815,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55815#pullrequestreview-77891291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33477330-955c-4ea2-b49f-32bf89970476",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "why this change?",
        "createdAt" : "2017-11-20T18:50:25Z",
        "updatedAt" : "2017-11-22T21:25:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "9e114d62-3810-4827-ad39-329a5a668d26",
        "parentId" : "33477330-955c-4ea2-b49f-32bf89970476",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "I am not entirely sure (it was there in your original PR).  As I understand , name will not be available in all requests but ideally should always be available for Get requests. I don't know what the Name check guards against. ",
        "createdAt" : "2017-11-20T18:59:49Z",
        "updatedAt" : "2017-11-22T21:25:11Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "0272ec4e-276a-4e2a-9340-f12b8a8faa57",
        "parentId" : "33477330-955c-4ea2-b49f-32bf89970476",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Name check is still present in `authorize` function below.",
        "createdAt" : "2017-11-20T19:00:52Z",
        "updatedAt" : "2017-11-22T21:25:11Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "c8f1f0d6-1dfd-443e-8823-c5c065ac6352",
        "parentId" : "33477330-955c-4ea2-b49f-32bf89970476",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "ah, that's why :)",
        "createdAt" : "2017-11-20T19:13:50Z",
        "updatedAt" : "2017-11-22T21:25:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ee4d2bbf5b61d5d8fc71b57f68955effc96e2d7",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +126,130 @@// authorizeGet authorizes \"get\" requests to objects of the specified type if they are related to the specified node\nfunc (r *NodeAuthorizer) authorizeGet(nodeName string, startingType vertexType, attrs authorizer.Attributes) (authorizer.Decision, string, error) {\n\tif attrs.GetVerb() != \"get\" {\n\t\tglog.V(2).Infof(\"NODE DENY: %s %#v\", nodeName, attrs)\n\t\treturn authorizer.DecisionNoOpinion, \"can only get individual resources of this type\", nil"
  },
  {
    "id" : "dc2f7756-4273-4644-9098-3f5b6254940c",
    "prId" : 55815,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55815#pullrequestreview-78172575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4aba7372-2b4b-402f-a1a9-ccd18bd247eb",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "should deny if feature is off",
        "createdAt" : "2017-11-21T15:48:56Z",
        "updatedAt" : "2017-11-22T21:25:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "48fa0b2e-6ab3-4a6c-bc02-093541b69690",
        "parentId" : "4aba7372-2b4b-402f-a1a9-ccd18bd247eb",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the feature gate check probably belongs in\r\n```\r\ncase pvcResource:\r\n  if attrs.GetSubresource() == \"status\" {\r\n    ... check feature gate ...\r\n    ...\r\n```",
        "createdAt" : "2017-11-21T15:50:06Z",
        "updatedAt" : "2017-11-22T21:25:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "8e92c9fc-9625-4091-a54e-59c9ce7ad93b",
        "parentId" : "4aba7372-2b4b-402f-a1a9-ccd18bd247eb",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "fixed",
        "createdAt" : "2017-11-21T16:24:24Z",
        "updatedAt" : "2017-11-22T21:25:11Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ee4d2bbf5b61d5d8fc71b57f68955effc96e2d7",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +107,111 @@\n// authorizeStatusUpdate authorizes get/update/patch requests to status subresources of the specified type if they are related to the specified node\nfunc (r *NodeAuthorizer) authorizeStatusUpdate(nodeName string, startingType vertexType, attrs authorizer.Attributes) (authorizer.Decision, string, error) {\n\tswitch attrs.GetVerb() {\n\tcase \"update\", \"patch\":"
  },
  {
    "id" : "cb7d9a95-d9ba-47f0-8943-ef48c9a51f1c",
    "prId" : 55019,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55019#pullrequestreview-99088986",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66ae0ca2-505e-48ab-a560-2f60069d5f11",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "nit: shouldn't this be an error return?",
        "createdAt" : "2018-02-23T23:24:47Z",
        "updatedAt" : "2018-02-26T21:46:28Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "cc7715af-fc9e-4ca5-9f76-f69b3ad71f4c",
        "parentId" : "66ae0ca2-505e-48ab-a560-2f60069d5f11",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "No, I don't think this is an error. This gets hit if a node requests a token for a service account when no pods running that service account are scheduled on that node. This should only return an error on server errors, not client errors.",
        "createdAt" : "2018-02-24T00:17:22Z",
        "updatedAt" : "2018-02-26T21:46:28Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "363e861aeb19b362e0ef0fa7fcd8f034d0dce17c",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +188,192 @@\tif err != nil {\n\t\tglog.V(2).Infof(\"NODE DENY: %v\", err)\n\t\treturn authorizer.DecisionNoOpinion, \"no path found to object\", nil\n\t}\n\tif !ok {"
  }
]