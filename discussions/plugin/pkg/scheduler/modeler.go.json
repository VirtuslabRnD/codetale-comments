[
  {
    "id" : "119cfb6a-af9f-4cfd-b530-7bfdd63154be",
    "prId" : 5446,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aebaca36-83e3-45d7-8f4e-496a20cdbd4e",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "I would drop this comment; it doesn't add much.\n",
        "createdAt" : "2015-03-13T21:31:51Z",
        "updatedAt" : "2015-03-14T00:48:33Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "12f8a0d2-75e8-47b5-b30d-bade487534be",
        "parentId" : "aebaca36-83e3-45d7-8f4e-496a20cdbd4e",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "`go vet` again... Yeah, I don't know, I try to follow 'godoc style' which requires a comment of this form for all public items. Will leave unless you feel realllly strongly.\n",
        "createdAt" : "2015-03-14T00:50:46Z",
        "updatedAt" : "2015-03-14T00:50:46Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "992d78a32e41348c9c599739a5257afa4a6682d9",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +46,50 @@}\n\n// AssumePod calls the function variable if it is not nil.\nfunc (f *FakeModeler) AssumePod(pod *api.Pod) {\n\tif f.AssumePodFunc != nil {"
  },
  {
    "id" : "df494b92-86d7-4b95-ae37-2c014f47d4a5",
    "prId" : 5446,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac592fac-cda0-4489-9e40-942bed69259e",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Also comment assumedPods, for completeness?\n",
        "createdAt" : "2015-03-13T21:32:00Z",
        "updatedAt" : "2015-03-14T00:48:33Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "18c19af0-ec9f-4f16-a6d2-03df62965ede",
        "parentId" : "ac592fac-cda0-4489-9e40-942bed69259e",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Added documentation in the struct-- the godoc comment isn't a good place to document private members.\n",
        "createdAt" : "2015-03-14T00:49:00Z",
        "updatedAt" : "2015-03-14T00:49:00Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "992d78a32e41348c9c599739a5257afa4a6682d9",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +66,70 @@// NewSimpleModeler returns a new SimpleModeler.\n//   queuedPods: a PodLister that will return pods that have not been scheduled yet.\n//   scheduledPods: a PodLister that will return pods that we know for sure have been scheduled.\nfunc NewSimpleModeler(queuedPods, scheduledPods ExtendedPodLister) *SimpleModeler {\n\treturn &SimpleModeler{"
  },
  {
    "id" : "3041d1d8-f792-4b60-9280-aebbbda38e80",
    "prId" : 5446,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c2073ab-ab88-4b38-bc70-21962f06d20d",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "Hi @lavalamp \nSorry for disturbing on this old commit.\nI'm wondering why it adds `queuePods` here? It looks like it's the queue for pods to schedule. But if a pod is assumed, it's already made upon a schedule decision. If it succeed, it will go into `scheduledPods`; otw, it will still get deleted. Right?\n",
        "createdAt" : "2015-12-15T03:50:53Z",
        "updatedAt" : "2015-12-15T03:55:11Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "c423054b-03de-4953-9e59-627fa38d7a4b",
        "parentId" : "6c2073ab-ab88-4b38-bc70-21962f06d20d",
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "To be more specific, I am pointing to this code block:\nhttps://github.com/kubernetes/kubernetes/blob/f4c5d00b0cc55a3ace09b26db835736ae509fe16/plugin/pkg/scheduler/factory/factory.go#L104\n\n``` Go\nc.ScheduledPodLister.Store, c.scheduledPodPopulator = framework.NewInformer(\n        c.createAssignedPodLW(),\n        ...\n            DeleteFunc: func(obj interface{}) {\n                c.modeler.LockedAction(func() {\n                    switch t := obj.(type) {\n                    case *api.Pod:\n                        c.modeler.ForgetPod(t)\n                    case cache.DeletedFinalStateUnknown:\n                        c.modeler.ForgetPodByKey(t.Key)\n                    }\n                })\n```\n\nIf a pod is rejected or removed, it's gonna be deleted and notified with delete event. Right?\n",
        "createdAt" : "2015-12-15T04:02:38Z",
        "updatedAt" : "2015-12-15T04:04:27Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "07a642c0-adb7-42ab-bd03-492931a0575f",
        "parentId" : "6c2073ab-ab88-4b38-bc70-21962f06d20d",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "@hongchaodeng IIRC, at the time there was a race where a rejected pod could show up in the watch before the binding failure propagated back? Note that this code was written before the informer was created. So this race might not be possible any more.\n",
        "createdAt" : "2016-01-04T20:01:19Z",
        "updatedAt" : "2016-01-04T20:01:19Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "992d78a32e41348c9c599739a5257afa4a6682d9",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +55,59 @@// SimpleModeler implements the SystemModeler interface with a timed pod cache.\ntype SimpleModeler struct {\n\tqueuedPods    ExtendedPodLister\n\tscheduledPods ExtendedPodLister\n"
  }
]