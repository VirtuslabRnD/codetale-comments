[
  {
    "id" : "66288932-3da4-48b4-aa5e-3a5f22068a00",
    "prId" : 44883,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44883#pullrequestreview-40153291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb31b05e-204b-4569-ac1d-d6f4d35f6c16",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Do we actually need all the three pieces of information about pod? Isn't PodUID enough to uniquely identify the pod?",
        "createdAt" : "2017-05-11T01:27:57Z",
        "updatedAt" : "2017-06-05T20:24:10Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "cedd444c-a979-4b11-a9ed-019d73f88d58",
        "parentId" : "fb31b05e-204b-4569-ac1d-d6f4d35f6c16",
        "authorId" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "body" : "In order to post the binding to apiserver, the Binding object in pkg/api/types.go needs to be filled with pod name, namespace also.",
        "createdAt" : "2017-05-24T21:16:08Z",
        "updatedAt" : "2017-06-05T20:24:10Z",
        "lastEditedBy" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f179bf9364e8fafda7164698d3ee9b8360dcfb8",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +181,185 @@\tPodNamespace string\n\t// PodUID is the UID of the pod being bound\n\tPodUID types.UID\n\t// Node selected by the scheduler\n\tNode string"
  },
  {
    "id" : "c8f23da5-051c-42b3-b772-9ee0ec166662",
    "prId" : 44159,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44159#pullrequestreview-40453014",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4dbbe076-8e40-44c0-b05c-354b0aff80d4",
        "parentId" : null,
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "`in the range 1-100` ? Any check for it?",
        "createdAt" : "2017-05-22T00:15:17Z",
        "updatedAt" : "2017-05-26T06:04:55Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "68f37d8f-a43f-426b-9ca6-8e663475183e",
        "parentId" : "4dbbe076-8e40-44c0-b05c-354b0aff80d4",
        "authorId" : "8f672b1e-0513-4363-b383-ad8d8de0cdb9",
        "body" : "See: https://github.com/kubernetes/kubernetes/pull/44159/files#diff-77bdee21550bc698bfa654de11c64324R393",
        "createdAt" : "2017-05-26T06:06:57Z",
        "updatedAt" : "2017-05-26T06:06:57Z",
        "lastEditedBy" : "8f672b1e-0513-4363-b383-ad8d8de0cdb9",
        "tags" : [
        ]
      },
      {
        "id" : "470bf2c7-9528-4339-a859-17e64c6dac14",
        "parentId" : "4dbbe076-8e40-44c0-b05c-354b0aff80d4",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "wow, great, thanks.",
        "createdAt" : "2017-05-26T06:26:46Z",
        "updatedAt" : "2017-05-26T06:26:46Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      }
    ],
    "commit" : "31d2f452d2b5f7cd0af168905d2429018e1b8602",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +35,39 @@\t// RequiredDuringScheduling affinity is not symmetric, but there is an implicit PreferredDuringScheduling affinity rule\n\t// corresponding to every RequiredDuringScheduling affinity rule.\n\t// HardPodAffinitySymmetricWeight represents the weight of implicit PreferredDuringScheduling affinity rule, in the range 1-100.\n\tHardPodAffinitySymmetricWeight int `json:\"hardPodAffinitySymmetricWeight\"`\n}"
  },
  {
    "id" : "06f7f1f7-c4b1-4cc0-a92b-c536ed9f0d8c",
    "prId" : 41119,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41119#pullrequestreview-23572503",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc963e25-358a-4b5c-a77e-bcff7a98e424",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "See all the aforementioned comments for the other types.go file",
        "createdAt" : "2017-02-22T06:05:46Z",
        "updatedAt" : "2017-02-23T18:26:16Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "c3f8f13a-052f-4362-a692-c23459bf415f",
        "parentId" : "fc963e25-358a-4b5c-a77e-bcff7a98e424",
        "authorId" : "fe0e9a27-e9b1-4660-8d05-27e5f8b842d7",
        "body" : "@timothysc @davidopp @ravigadde \r\nI fixed all the comments as suggested and pushed the changes. Also, added omitempty tag for node list in ExtenderArgs. When the node list is empty, older implementations will just see empty list of nodes and they should be able to handle that.",
        "createdAt" : "2017-02-23T20:00:38Z",
        "updatedAt" : "2017-02-23T20:00:39Z",
        "lastEditedBy" : "fe0e9a27-e9b1-4660-8d05-27e5f8b842d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "dda62ec2071c9e981a353fdaecb561521689cb96",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +129,133 @@\t// timeout is ignored, k8s/other extenders priorities are used to select the node.\n\tHTTPTimeout time.Duration `json:\"httpTimeout,omitempty\"`\n\t// NodeCacheCapable specifies that the extender is capable of caching node information,\n\t// so the scheduler should only send minimal information about the eligible nodes\n\t// assuming that the extender already cached full details of all nodes in the cluster"
  },
  {
    "id" : "c8f9f049-dbfc-48a1-b1e7-5b7db14e27d7",
    "prId" : 28104,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4e8898b-85e6-4b42-86ca-fa83fa413c28",
        "parentId" : null,
        "authorId" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "body" : "Same as above\n",
        "createdAt" : "2016-07-12T18:50:21Z",
        "updatedAt" : "2016-08-04T06:05:18Z",
        "lastEditedBy" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "tags" : [
        ]
      }
    ],
    "commit" : "4106eb70b0b8b729184b95c20a721fae5d333aef",
    "line" : null,
    "diffHunk" : "@@ -1,1 +141,145 @@\n// FailedNodesMap represents the filtered out nodes, with node names and failure messages\ntype FailedNodesMap map[string]string\n\n// ExtenderFilterResult represents the results of a filter call to an extender"
  },
  {
    "id" : "3657895c-7cba-410c-be3c-16f8e6415ce7",
    "prId" : 13580,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ff0a5a9-9f6e-4a66-9141-bb53f4e37389",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Explain what is the scheduler behavior if the filter/prioritize call times out.\n",
        "createdAt" : "2015-11-13T01:33:56Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "82f4aff5-486d-4cbb-8d11-f56b1a4f5ac6",
        "parentId" : "3ff0a5a9-9f6e-4a66-9141-bb53f4e37389",
        "authorId" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "body" : "Done\n",
        "createdAt" : "2015-11-13T02:45:59Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "tags" : [
        ]
      }
    ],
    "commit" : "cadc24e9fd7f2bccc972df4d67985aa33a4cd823",
    "line" : null,
    "diffHunk" : "@@ -1,1 +128,132 @@\t// HTTPTimeout specifies the timeout duration for a call to the extender. Filter timeout fails the scheduling of the pod. Prioritize\n\t// timeout is ignored, k8s/other extenders priorities are used to select the node.\n\tHTTPTimeout time.Duration `json:\"httpTimeout,omitempty\"`\n}\n"
  },
  {
    "id" : "af5a8e5f-54b1-4091-95ed-ae008ef4403f",
    "prId" : 13580,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0d67b5e-1100-402f-89c7-b4a421cb57dc",
        "parentId" : null,
        "authorId" : "766f642e-1622-4803-803b-05ce306fc30e",
        "body" : "Just starting to look, so ignore the dumb question as I keep looking, but why does `plugin/pkg/scheduler/api/types.go::ExtenderConfig` have a `Weight` but this doesn't?\n",
        "createdAt" : "2015-11-13T14:04:16Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "766f642e-1622-4803-803b-05ce306fc30e",
        "tags" : [
        ]
      },
      {
        "id" : "16fc814e-9c8b-45e7-bdb1-a399a3fb4c29",
        "parentId" : "e0d67b5e-1100-402f-89c7-b4a421cb57dc",
        "authorId" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "body" : "Thanks, I missed it.\n",
        "createdAt" : "2015-11-13T16:36:57Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "tags" : [
        ]
      }
    ],
    "commit" : "cadc24e9fd7f2bccc972df4d67985aa33a4cd823",
    "line" : null,
    "diffHunk" : "@@ -1,1 +129,133 @@\t// timeout is ignored, k8s/other extenders priorities are used to select the node.\n\tHTTPTimeout time.Duration `json:\"httpTimeout,omitempty\"`\n}\n\n// ExtenderArgs represents the arguments needed by the extender to filter/prioritize"
  },
  {
    "id" : "ab2f54bf-36d6-43c2-b802-c6e2078e4d09",
    "prId" : 13580,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73b6755e-d8ac-4d62-82f7-3c1223882926",
        "parentId" : null,
        "authorId" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "body" : "Same Godoc comment for these.\n",
        "createdAt" : "2015-11-13T14:59:10Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "tags" : [
        ]
      },
      {
        "id" : "4593685a-a3de-4beb-8a8d-6bbf50df0218",
        "parentId" : "73b6755e-d8ac-4d62-82f7-3c1223882926",
        "authorId" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "body" : "Done\n",
        "createdAt" : "2015-11-16T22:57:26Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "tags" : [
        ]
      }
    ],
    "commit" : "cadc24e9fd7f2bccc972df4d67985aa33a4cd823",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +158,162 @@type HostPriorityList []HostPriority\n\nfunc (h HostPriorityList) Len() int {\n\treturn len(h)\n}"
  },
  {
    "id" : "014303d6-96fe-4805-874d-4c81b4b138dd",
    "prId" : 13580,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de08144c-ad4b-436d-8bcd-f89458845650",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "It would be helpful to know the precedence of `FilterVerb` and `PrioritizeVerb` relative to one another\n",
        "createdAt" : "2015-11-14T04:16:09Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "9921af25-3569-415a-8225-531803fe82b1",
        "parentId" : "de08144c-ad4b-436d-8bcd-f89458845650",
        "authorId" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "body" : "There is no precedence, they work very similar to the base scheduler. Filter does hard constraint matching, prioritize assigns (weighted) scores to the remaining nodes. If the config has a non empty string, it is assumed that the extender is interested in that call out. If not, the call out is skipped.\n",
        "createdAt" : "2015-11-16T22:00:42Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "tags" : [
        ]
      }
    ],
    "commit" : "cadc24e9fd7f2bccc972df4d67985aa33a4cd823",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +118,122 @@\tFilterVerb string `json:\"filterVerb,omitempty\"`\n\t// Verb for the prioritize call, empty if not supported. This verb is appended to the URLPrefix when issuing the prioritize call to extender.\n\tPrioritizeVerb string `json:\"prioritizeVerb,omitempty\"`\n\t// The numeric multiplier for the node scores that the prioritize call generates.\n\t// The weight should be a positive integer"
  }
]