[
  {
    "id" : "091339d8-be42-49a6-94c4-ae8fcf5b525d",
    "prId" : 2906,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d44b3058-922f-48c9-8835-efd9a4262754",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "This package should be imported in plugin/pkg/scheduler/algorithmprovider/plugins.go to force the linking and registration of this plugin. Also \"AffinityProvider\" can be added to the algorithmProviderNames var in plugin/pkg/scheduler/algorithmprovider/plugins_test.go to test that the provider is well formed.\n",
        "createdAt" : "2014-12-23T08:32:52Z",
        "updatedAt" : "2015-01-13T18:09:43Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "2145086e-bb80-4614-b780-d4659a4ae696",
        "parentId" : "d44b3058-922f-48c9-8835-efd9a4262754",
        "authorId" : "4ae12efd-7e98-4c8b-9218-1ed35d1a2df1",
        "body" : "Done.\n",
        "createdAt" : "2015-01-05T23:01:53Z",
        "updatedAt" : "2015-01-13T18:09:43Z",
        "lastEditedBy" : "4ae12efd-7e98-4c8b-9218-1ed35d1a2df1",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbac18a909b09f32bbee792fc748a7f97a4079f6",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +16,20 @@\n// This algorithm provider has predicates and priorities related to affinity/anti-affinity for the scheduler.\npackage affinity\n\nimport ("
  },
  {
    "id" : "b33268e7-98ae-4c91-9a49-6a4cde209963",
    "prId" : 2906,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0a4da84-6e60-4358-93ce-487095e537e0",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "I think it makes more sense to put these comments where you define the functions, rather than here.\n",
        "createdAt" : "2015-01-13T04:08:10Z",
        "updatedAt" : "2015-01-13T18:09:43Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "0743fd23-fb01-4f47-9325-11098bdb197a",
        "parentId" : "a0a4da84-6e60-4358-93ce-487095e537e0",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Sorry, ignore that.\n",
        "createdAt" : "2015-01-13T04:08:32Z",
        "updatedAt" : "2015-01-13T18:09:43Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbac18a909b09f32bbee792fc748a7f97a4079f6",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@\t\t\"PodFitsResources\",\n\t\t\"NoDiskConflict\",\n\t\t// Ensures that all pods within the same service are hosted on minions within the same region as defined by the \"region\" label\n\t\tfactory.RegisterFitPredicate(\"ServiceAffinity\", algorithm.NewServiceAffinityPredicate(factory.PodLister, factory.ServiceLister, factory.MinionLister, []string{\"region\"})),\n\t\t// Fit is defined based on the presence of the \"region\" label on a minion, regardless of value."
  }
]