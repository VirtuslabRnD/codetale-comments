[
  {
    "id" : "0c20c8e0-1776-4eb1-81a1-49f62f58802e",
    "prId" : 55933,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55933#pullrequestreview-77663721",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ccf77562-b29f-4586-843e-c71e8585c5c9",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Add to this comment (or somewhere else if it makes more sense) why you remove nominated node name from the lower-priority pods.",
        "createdAt" : "2017-11-19T04:16:19Z",
        "updatedAt" : "2017-11-21T06:17:25Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "d43693c7-2b32-40ae-b09f-3fb5f5cbf0f4",
        "parentId" : "ccf77562-b29f-4586-843e-c71e8585c5c9",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "I added a comment to Preempt() in generic_scheduler.go where it collects and returns pods for removal of their nomination.",
        "createdAt" : "2017-11-20T01:01:42Z",
        "updatedAt" : "2017-11-21T06:17:25Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "eda3df87325f82b8dfa6817c1373d17414982a13",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +51,55 @@\t// the pod by preempting lower priority pods if possible.\n\t// It returns the node where preemption happened, a list of preempted pods, a\n\t// list of pods whose nominated node name should be removed, and error if any.\n\tPreempt(*v1.Pod, NodeLister, error) (selectedNode *v1.Node, preemptedPods []*v1.Pod, cleanupNominatedPods []*v1.Pod, err error)\n\t// Predicates() returns a pointer to a map of predicate functions. This is"
  },
  {
    "id" : "82194470-c09a-4217-8c1d-704be94940f4",
    "prId" : 50949,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50949#pullrequestreview-60119492",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1078b99-a5b4-443b-8524-bbab8269f5b1",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Why do we need to pass scheduling error? Does it change anything?\r\n\r\nI mean passing an error here doesn't sound impacting here (especially since you're passing one error and there could have been multiple).",
        "createdAt" : "2017-08-30T09:42:20Z",
        "updatedAt" : "2017-09-07T22:32:06Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "c9086337-7315-4ff5-a4db-86ec3c492bee",
        "parentId" : "d1078b99-a5b4-443b-8524-bbab8269f5b1",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "As you have probably seen in the implementation of the Preempt function, we look at the error and only when the error is a FitError we start the preemption process. It is for performance reasons so that we don't attempt to preempt in case scheduling failed for other reasons. The internal scheduler returns a FitError in case it cannot schedule a pod, so the current implementation works fine. ",
        "createdAt" : "2017-08-30T17:29:01Z",
        "updatedAt" : "2017-09-07T22:32:06Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "3480e5a4-a072-4d7d-8925-ffb856bc7213",
        "parentId" : "d1078b99-a5b4-443b-8524-bbab8269f5b1",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "SGTM",
        "createdAt" : "2017-09-01T12:25:43Z",
        "updatedAt" : "2017-09-07T22:32:06Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0b718373befb2168befc0c4579fd9a02155d5bc",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +48,52 @@type ScheduleAlgorithm interface {\n\tSchedule(*v1.Pod, NodeLister) (selectedMachine string, err error)\n\t// Preempt receives scheduling errors for a pod and tries to create room for\n\t// the pod by preempting lower priority pods if possible.\n\t// It returns the node where preemption happened, a list of preempted pods, and error if any."
  },
  {
    "id" : "18059701-5abb-4f24-9b98-65374a1f2481",
    "prId" : 43892,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43892#pullrequestreview-31714901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82a7e213-548f-4581-8c8f-3df8d65aa565",
        "parentId" : null,
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "d/a pointer to/\r\nor\r\ns/pointer/reference/",
        "createdAt" : "2017-04-09T03:19:16Z",
        "updatedAt" : "2017-04-09T03:19:16Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9d1333144f145c215d10b67fd6fd1d59e2254c7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +42,46 @@type ScheduleAlgorithm interface {\n\tSchedule(*v1.Pod, NodeLister) (selectedMachine string, err error)\n\t// Predicates() returns a pointer to a map of predicate functions. This is\n\t// exposed for testing.\n\tPredicates() map[string]FitPredicate"
  }
]