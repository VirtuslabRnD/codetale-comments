[
  {
    "id" : "571f3b5c-f264-4464-932b-78dbc2a15488",
    "prId" : 53647,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53647#pullrequestreview-80382202",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "710163cb-02bc-461a-868f-d1cc7f5cd579",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "I don't think this check is necessary.",
        "createdAt" : "2017-11-30T23:00:40Z",
        "updatedAt" : "2017-12-01T11:32:57Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "624927eb-e4f4-4878-88d8-f0cdc3cc1056",
        "parentId" : "710163cb-02bc-461a-868f-d1cc7f5cd579",
        "authorId" : "0dc4901f-ee41-4b0e-85e8-9f5ec36ce184",
        "body" : "@bsalamat  Thanks for your comments, Can you share more your thoughts?",
        "createdAt" : "2017-12-01T00:50:24Z",
        "updatedAt" : "2017-12-01T11:32:57Z",
        "lastEditedBy" : "0dc4901f-ee41-4b0e-85e8-9f5ec36ce184",
        "tags" : [
        ]
      },
      {
        "id" : "11e26af1-b629-49b6-8b86-a98aceff7377",
        "parentId" : "710163cb-02bc-461a-868f-d1cc7f5cd579",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "nodeInfo.Node() can be nil when scheduler has received a delete for the node, but scheduler has not yet received delete events for all the pods on the node. In this kind of scenario it may be ok to consider those pods for affinity/anti-affinity. That said, I don't see a problem with adding this check.",
        "createdAt" : "2017-12-01T01:09:06Z",
        "updatedAt" : "2017-12-01T11:32:57Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "130941ce-2cd0-4de0-b735-41792100a7fa",
        "parentId" : "710163cb-02bc-461a-868f-d1cc7f5cd579",
        "authorId" : "0dc4901f-ee41-4b0e-85e8-9f5ec36ce184",
        "body" : "Can you check my followed comments about this issue?\r\nIt is used to fix another scenario that pod delete event may never received.\r\n",
        "createdAt" : "2017-12-01T01:13:28Z",
        "updatedAt" : "2017-12-01T11:32:57Z",
        "lastEditedBy" : "0dc4901f-ee41-4b0e-85e8-9f5ec36ce184",
        "tags" : [
        ]
      }
    ],
    "commit" : "82e02cc98690096e3d1a43a8613ecf0c6d42656c",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +195,199 @@\tprocessNode := func(i int) {\n\t\tnodeInfo := nodeNameToInfo[allNodeNames[i]]\n\t\tif nodeInfo.Node() != nil {\n\t\t\tif hasAffinityConstraints || hasAntiAffinityConstraints {\n\t\t\t\t// We need to process all the nodes."
  },
  {
    "id" : "307ca4ee-fc73-4a2f-8d59-6d5a99968a15",
    "prId" : 48805,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48805#pullrequestreview-50229469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54be1866-a48c-4fae-ab54-fba6c1029cb6",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "optional: The corresponding test files also use literal \"10\" a lot. It would be great to replace those with `MaxPriority` as well.",
        "createdAt" : "2017-07-14T22:08:32Z",
        "updatedAt" : "2017-07-17T02:33:47Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "9b2e7982-1f3c-4b70-a75d-83e05899fd1e",
        "parentId" : "54be1866-a48c-4fae-ab54-fba6c1029cb6",
        "authorId" : "4e7a67a6-9bdd-40bf-80a9-1c7ae015862d",
        "body" : "Ok.",
        "createdAt" : "2017-07-17T02:12:48Z",
        "updatedAt" : "2017-07-17T02:33:47Z",
        "lastEditedBy" : "4e7a67a6-9bdd-40bf-80a9-1c7ae015862d",
        "tags" : [
        ]
      },
      {
        "id" : "822df09b-158b-432a-8e8f-9ae29cc6fa13",
        "parentId" : "54be1866-a48c-4fae-ab54-fba6c1029cb6",
        "authorId" : "4e7a67a6-9bdd-40bf-80a9-1c7ae015862d",
        "body" : "Fixed",
        "createdAt" : "2017-07-17T02:34:36Z",
        "updatedAt" : "2017-07-17T02:34:36Z",
        "lastEditedBy" : "4e7a67a6-9bdd-40bf-80a9-1c7ae015862d",
        "tags" : [
        ]
      }
    ],
    "commit" : "6aeb77aa6a55dbda2a294a7c359078fff9a8ede3",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +225,229 @@\t\tfScore := float64(0)\n\t\tif (maxCount - minCount) > 0 {\n\t\t\tfScore = float64(schedulerapi.MaxPriority) * ((pm.counts[node.Name] - minCount) / (maxCount - minCount))\n\t\t}\n\t\tresult = append(result, schedulerapi.HostPriority{Host: node.Name, Score: int(fScore)})"
  },
  {
    "id" : "64c05f4e-ae67-4cb9-9839-20adb0c59333",
    "prId" : 29109,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f50a16cf-591b-483c-a5bc-8323b63d6b25",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "just curious, why did you do this instead of the most recent error?\n",
        "createdAt" : "2016-07-21T23:35:30Z",
        "updatedAt" : "2016-07-22T06:49:38Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "e1f7cd1a-30b3-473f-a38a-920a2f5b1a55",
        "parentId" : "f50a16cf-591b-483c-a5bc-8323b63d6b25",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I think it doesn't matter :)\nIf you want, I can change that.\n",
        "createdAt" : "2016-07-22T06:08:03Z",
        "updatedAt" : "2016-07-22T06:49:38Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fad876b6f904b474403052a1da0305b957547f8c",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +61,65 @@\tfailureDomains priorityutil.Topologies\n\t// The first error that we faced.\n\tfirstError error\n}\n"
  },
  {
    "id" : "3951f73b-4938-4834-bac8-bbffcb2c259f",
    "prId" : 28952,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e38943a-5d69-47f1-ba2f-ffe7f6e6dc9a",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "write a comment explaining what the map key and value represent (I realize it's the same thing as previously)\n",
        "createdAt" : "2016-07-15T07:45:12Z",
        "updatedAt" : "2016-07-15T08:06:48Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "37e154b7-6197-4d52-9a1f-c9890abd98e6",
        "parentId" : "1e38943a-5d69-47f1-ba2f-ffe7f6e6dc9a",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "done\n",
        "createdAt" : "2016-07-15T08:07:12Z",
        "updatedAt" : "2016-07-15T08:07:12Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a538045d7b16b1d3c0d8d578cba3af5eb6ebf0d2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +92,96 @@\t// counts store the mapping from node name to so-far computed score of\n\t// the node.\n\tcounts := make(map[string]float64, len(nodes))\n\n\tprocessTerm := func(term *api.PodAffinityTerm, affinityPod, podToCheck *api.Pod, fixedNode *api.Node, weight float64) error {"
  },
  {
    "id" : "4d4a3395-79e3-4b75-a42d-7d51ae0da571",
    "prId" : 28952,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8dd2bfc-7c24-45bb-81ec-eca6a353d843",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Here I'd make a more detailed comment, like\nFor every soft pod affinity term of <pod>, if <existingPod> matches the term, increment <counts> for every node in the cluster with the same term.TopologyKey value as that of <existingPod>'s node by the term's weight.\n(I know comments aren't supposed to say \"how\" but the code is sufficiently complicated that I think this merits an exception.)\n",
        "createdAt" : "2016-07-15T07:46:01Z",
        "updatedAt" : "2016-07-15T08:06:48Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "85b4f326-e28f-4f6a-af05-2406c246a91e",
        "parentId" : "a8dd2bfc-7c24-45bb-81ec-eca6a353d843",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "done\n",
        "createdAt" : "2016-07-15T08:07:08Z",
        "updatedAt" : "2016-07-15T08:07:08Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a538045d7b16b1d3c0d8d578cba3af5eb6ebf0d2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +131,135 @@\t\t\t// increment <counts> for every node in the cluster with the same <term.TopologyKey>\n\t\t\t// value as that of <existingPods>`s node by the term`s weight.\n\t\t\tterms := affinity.PodAffinity.PreferredDuringSchedulingIgnoredDuringExecution\n\t\t\tif err := processTerms(terms, pod, existingPod, existingPodNode, 1); err != nil {\n\t\t\t\treturn nil, err"
  },
  {
    "id" : "beb235f2-fb7f-43e2-931d-0cf663d8bf92",
    "prId" : 28952,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35324fef-4349-4e39-8241-f5f50b0d3ebd",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Similar comment here, like:\nFor every soft pod anti-affinity term of <pod>, if <existingPod> matches the term, decrement <counts> for every node in the cluster with the same term.TopologyKey value as that of <existingPod>'s node by the term's weight.\n",
        "createdAt" : "2016-07-15T07:46:03Z",
        "updatedAt" : "2016-07-15T08:06:48Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "b1d452ce-353b-4f8b-bfb6-0ec684143dd0",
        "parentId" : "35324fef-4349-4e39-8241-f5f50b0d3ebd",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "done\n",
        "createdAt" : "2016-07-15T08:07:05Z",
        "updatedAt" : "2016-07-15T08:07:05Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a538045d7b16b1d3c0d8d578cba3af5eb6ebf0d2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +140,144 @@\t\t\t// decrement <counts> for every node in the cluster with the same <term.TopologyKey>\n\t\t\t// value as that of <existingPod>`s node by the term`s weight.\n\t\t\tterms := affinity.PodAntiAffinity.PreferredDuringSchedulingIgnoredDuringExecution\n\t\t\tif err := processTerms(terms, pod, existingPod, existingPodNode, -1); err != nil {\n\t\t\t\treturn nil, err"
  },
  {
    "id" : "1c091746-9a00-4010-8d72-7c3b3e27dabf",
    "prId" : 28952,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "290e6bd2-a122-4e5f-84ff-b0dbd5414e42",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "For every hard pod affinity term of <existingPod>, if <pod> matches the term, increment <counts> for every node in the cluster with the same term.TopologyKey value as that of <existingPod>'s node by the constant <ipa.hardPodAffinityWeight>\n",
        "createdAt" : "2016-07-15T07:46:26Z",
        "updatedAt" : "2016-07-15T08:06:48Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "f9872ff6-be00-4046-a548-342b7ed4617f",
        "parentId" : "290e6bd2-a122-4e5f-84ff-b0dbd5414e42",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "done\n",
        "createdAt" : "2016-07-15T08:07:01Z",
        "updatedAt" : "2016-07-15T08:07:01Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a538045d7b16b1d3c0d8d578cba3af5eb6ebf0d2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +151,155 @@\t\t\t// value as that of <existingPod>'s node by the constant <ipa.hardPodAffinityWeight>\n\t\t\tif ipa.hardPodAffinityWeight > 0 {\n\t\t\t\tterms := existingPodAffinity.PodAffinity.RequiredDuringSchedulingIgnoredDuringExecution\n\t\t\t\t// TODO: Uncomment this block when implement RequiredDuringSchedulingRequiredDuringExecution.\n\t\t\t\t//if len(existingPodAffinity.PodAffinity.RequiredDuringSchedulingRequiredDuringExecution) != 0 {"
  },
  {
    "id" : "728ce8ea-c9f8-4a34-9081-735bb6884807",
    "prId" : 28952,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fa14c1d-a971-4544-bfd2-3298bbbb4c53",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "For every soft pod affinity term of <existingPod>, if <pod> matches the term, increment <counts> for every node in the cluster with the same TopologyKey value as that of <existingPod>'s node by the term's weight.\n",
        "createdAt" : "2016-07-15T07:47:15Z",
        "updatedAt" : "2016-07-15T08:06:48Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "5b564e9c-bc5d-4f55-84c1-9dfc25ca4a6d",
        "parentId" : "4fa14c1d-a971-4544-bfd2-3298bbbb4c53",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "done\n",
        "createdAt" : "2016-07-15T08:06:58Z",
        "updatedAt" : "2016-07-15T08:06:58Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a538045d7b16b1d3c0d8d578cba3af5eb6ebf0d2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +165,169 @@\t\t\t// increment <counts> for every node in the cluster with the same <term.TopologyKey>\n\t\t\t// value as that of <existingPod>'s node by the term's weight.\n\t\t\tterms := existingPodAffinity.PodAffinity.PreferredDuringSchedulingIgnoredDuringExecution\n\t\t\tif err := processTerms(terms, existingPod, pod, existingPodNode, 1); err != nil {\n\t\t\t\treturn nil, err"
  },
  {
    "id" : "df6c927d-bcc4-4444-8df3-18aed0be06d9",
    "prId" : 28952,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a75e785d-47c1-48e1-9d26-74233e72eaca",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "For every soft pod anti-affinity term of <existingPod>, if <pod> matches the term, decrement <counts> for every node in the cluster with the same term.TopologyKey value as that of <existingPod>'s node by the term's weight.\n",
        "createdAt" : "2016-07-15T07:47:22Z",
        "updatedAt" : "2016-07-15T08:06:48Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "c70e2525-fdaa-4bd7-88ed-5955debe4e7d",
        "parentId" : "a75e785d-47c1-48e1-9d26-74233e72eaca",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "done\n",
        "createdAt" : "2016-07-15T08:06:53Z",
        "updatedAt" : "2016-07-15T08:06:53Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a538045d7b16b1d3c0d8d578cba3af5eb6ebf0d2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +174,178 @@\t\t\t// decrement <counts> for every node in the cluster with the same <term.TopologyKey>\n\t\t\t// value as that of <existingPod>'s node by the term's weight.\n\t\t\tterms := existingPodAffinity.PodAntiAffinity.PreferredDuringSchedulingIgnoredDuringExecution\n\t\t\tif err := processTerms(terms, existingPod, pod, existingPodNode, -1); err != nil {\n\t\t\t\treturn nil, err"
  }
]