[
  {
    "id" : "38ed3f8d-a21f-4903-90fe-0ff37be9286f",
    "prId" : 50949,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50949#pullrequestreview-60997369",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65230097-d041-4aec-8a75-1d3704696265",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "probably needs tests to catch drift if the struct changes",
        "createdAt" : "2017-09-01T03:08:27Z",
        "updatedAt" : "2017-09-07T22:32:06Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f48f21ab-ed51-44d4-9b2a-70f74d4e2938",
        "parentId" : "65230097-d041-4aec-8a75-1d3704696265",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "+1",
        "createdAt" : "2017-09-01T12:24:41Z",
        "updatedAt" : "2017-09-07T22:32:06Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "0c4469e2-152c-40b9-997e-bbf08582eec2",
        "parentId" : "65230097-d041-4aec-8a75-1d3704696265",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "This is already done.",
        "createdAt" : "2017-09-06T17:55:36Z",
        "updatedAt" : "2017-09-07T22:32:06Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0b718373befb2168befc0c4579fd9a02155d5bc",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +166,170 @@// ShallowCopy copies a metadata struct into a new struct and creates a copy of\n// its maps and slices, but it does not copy the contents of pointer values.\nfunc (meta *predicateMetadata) ShallowCopy() algorithm.PredicateMetadata {\n\tnewPredMeta := &predicateMetadata{\n\t\tpod:                  meta.pod,"
  },
  {
    "id" : "585d1033-ee2f-44df-9afa-eb4ebf26878e",
    "prId" : 50805,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50805#pullrequestreview-56854669",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1abba1a6-8d53-48fc-93b0-9f44dc1327c1",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Do we really need this method?\r\n\r\nMy personal feeling is that RemovePod is the only think you need to implement preemption. Why do you want to add pods?",
        "createdAt" : "2017-08-17T07:30:30Z",
        "updatedAt" : "2017-08-28T07:13:08Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "721405ee-ed5a-4b33-8dd7-e869ad17414c",
        "parentId" : "1abba1a6-8d53-48fc-93b0-9f44dc1327c1",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "We do need this. The preemption first removes all the lower priority pods and after adding the pending pod, tries to reprieve as many removed pods as possible. This method is useful when adding the pending pod and adding those removed pods back.",
        "createdAt" : "2017-08-17T08:28:03Z",
        "updatedAt" : "2017-08-28T07:13:08Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "87d406569d7cfee2e8f8aa371fae6ebb507b0de3",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +125,129 @@// AddPod changes predicateMetadata assuming that `newPod` is added to the\n// system.\nfunc (meta *predicateMetadata) AddPod(addedPod *v1.Pod, nodeInfo *schedulercache.NodeInfo) error {\n\taddedPodFullName := schedutil.GetPodFullName(addedPod)\n\tif addedPodFullName == schedutil.GetPodFullName(meta.pod) {"
  },
  {
    "id" : "09e3328f-d362-4f44-ac95-79d33edec889",
    "prId" : 50805,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50805#pullrequestreview-58000872",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13b4b95b-e912-48f9-9dd3-df528fb56cad",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "> This bool tells us whether the service affinity predicate is actually enabled. The affinity predicate may be enabled, but the two slices may still be empty because the pod matches no services and no other pods with the same labels exist.\r\n\r\nCorrect. But in that case, I think that if both slices are empty no matter if this bool is true or false, the results will be exactly the same.\r\nSo basically, what I'm saying is that removing this doesn't change anything and will make the code a bit easier :)",
        "createdAt" : "2017-08-22T08:25:19Z",
        "updatedAt" : "2017-08-28T07:13:08Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "e39b31cc-1ac5-4c5d-8160-39fa1d302215",
        "parentId" : "13b4b95b-e912-48f9-9dd3-df528fb56cad",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "We would still need to process a new pod in `AddPod` even when the two slices were empty if we didn't have this bool. This bool helps avoid that.\r\nSince service affinity is not one of the default predicates and is not enabled in most deployments, we would like to avoid wasting cpu cycles processing the rules unnecessarily.",
        "createdAt" : "2017-08-22T17:24:04Z",
        "updatedAt" : "2017-08-28T07:13:08Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "9479729f-c70b-4dcc-aec5-3622e4af7ab6",
        "parentId" : "13b4b95b-e912-48f9-9dd3-df528fb56cad",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "OK - the argument with AddPod is reasonable. \r\n\r\nSGTM",
        "createdAt" : "2017-08-23T08:05:10Z",
        "updatedAt" : "2017-08-28T07:13:08Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "87d406569d7cfee2e8f8aa371fae6ebb507b0de3",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +48,52 @@\t//key is a pod full name with the anti-affinity rules.\n\tmatchingAntiAffinityTerms          map[string][]matchingPodAntiAffinityTerm\n\tserviceAffinityInUse               bool\n\tserviceAffinityMatchingPodList     []*v1.Pod\n\tserviceAffinityMatchingPodServices []*v1.Service"
  },
  {
    "id" : "61f555c8-bbf7-4391-ba01-0e3add1c9a73",
    "prId" : 50805,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50805#pullrequestreview-57851635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edeeb66b-e5d0-4759-a686-d9c8aeee191e",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "This condition is not needed - if the length is zero, the for inside if will simply be no-op.\r\nLet's remove it.",
        "createdAt" : "2017-08-22T08:26:37Z",
        "updatedAt" : "2017-08-28T07:13:08Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "9c6c1170-16b0-4bf9-84c4-aa0d1dcf7592",
        "parentId" : "edeeb66b-e5d0-4759-a686-d9c8aeee191e",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "[In Go you can safely iterate over nil slices].",
        "createdAt" : "2017-08-22T08:26:57Z",
        "updatedAt" : "2017-08-28T07:13:08Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "9782ab19-6256-44f3-8159-7411806ad4dc",
        "parentId" : "edeeb66b-e5d0-4759-a686-d9c8aeee191e",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "The check is there to protect against indexing an empty slice in the same \"if\" condition.",
        "createdAt" : "2017-08-22T17:28:26Z",
        "updatedAt" : "2017-08-28T07:13:08Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "87d406569d7cfee2e8f8aa371fae6ebb507b0de3",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +109,113 @@\t// deletedPod, we don't need to check the list, as deletedPod isn't in the list.\n\tif meta.serviceAffinityInUse &&\n\t\tlen(meta.serviceAffinityMatchingPodList) > 0 &&\n\t\tdeletedPod.Namespace == meta.serviceAffinityMatchingPodList[0].Namespace {\n\t\tfor i, pod := range meta.serviceAffinityMatchingPodList {"
  },
  {
    "id" : "dea3ed03-7e9d-4f16-9e82-baa014b2a1e0",
    "prId" : 50805,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50805#pullrequestreview-58473562",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5fb24b8-d8c6-40cb-af31-ebe1a3ac88b0",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I don't understand it. Are we checking if selector created from pod labels is maching a newly added pod? This seems incorrect to me...",
        "createdAt" : "2017-08-22T08:32:33Z",
        "updatedAt" : "2017-08-28T07:13:08Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "9618a7c2-98b7-4d5b-a29c-58fe1bd5ba8f",
        "parentId" : "a5fb24b8-d8c6-40cb-af31-ebe1a3ac88b0",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I mean, serviceAffinity is about services - there should be some service-related computation here...",
        "createdAt" : "2017-08-22T08:33:01Z",
        "updatedAt" : "2017-08-28T07:13:08Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "07eeeba4-0011-4319-bb9c-6b4191903c66",
        "parentId" : "a5fb24b8-d8c6-40cb-af31-ebe1a3ac88b0",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Isn't this what `serviceAffinityPrecomputation` does:\r\nhttps://github.com/kubernetes/kubernetes/blob/master/plugin/pkg/scheduler/algorithm/predicates/predicates.go#L772\r\nIt creates a selector from pod labels and then lists all the pods matching the selector and filters them by namespace.",
        "createdAt" : "2017-08-22T17:41:23Z",
        "updatedAt" : "2017-08-28T07:13:08Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "020090ba-27f3-4f9c-9287-1fb3479c132d",
        "parentId" : "a5fb24b8-d8c6-40cb-af31-ebe1a3ac88b0",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Yeah - sorry.\r\n\r\nThis predicate surprises me every time I'm seeing it....",
        "createdAt" : "2017-08-23T08:12:51Z",
        "updatedAt" : "2017-08-28T07:13:08Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "bc252820-8013-4cf4-8f06-31f578378dc3",
        "parentId" : "a5fb24b8-d8c6-40cb-af31-ebe1a3ac88b0",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Me too. I was actually telling davidopp the same thing several days ago.",
        "createdAt" : "2017-08-23T18:12:28Z",
        "updatedAt" : "2017-08-28T07:13:08Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "f197ebfd-782a-4c7c-b998-65c81d1b132f",
        "parentId" : "a5fb24b8-d8c6-40cb-af31-ebe1a3ac88b0",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "In fact, I think we should get rid of this predicate. I'ts  unfortunate that we can't do it due to backward compatibility reasons...",
        "createdAt" : "2017-08-24T13:17:15Z",
        "updatedAt" : "2017-08-28T07:13:08Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "7d86fd0c-ea9c-4098-b357-706c9498d49b",
        "parentId" : "a5fb24b8-d8c6-40cb-af31-ebe1a3ac88b0",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Yes. Luckily it is not enabled by default.",
        "createdAt" : "2017-08-24T19:10:38Z",
        "updatedAt" : "2017-08-28T07:13:08Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "87d406569d7cfee2e8f8aa371fae6ebb507b0de3",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +151,155 @@\tif meta.serviceAffinityInUse && addedPod.Namespace == meta.pod.Namespace {\n\t\tselector := CreateSelectorFromLabels(meta.pod.Labels)\n\t\tif selector.Matches(labels.Set(addedPod.Labels)) {\n\t\t\tmeta.serviceAffinityMatchingPodList = append(meta.serviceAffinityMatchingPodList,\n\t\t\t\taddedPod)"
  },
  {
    "id" : "ec50aac5-634d-4541-ba80-10845e6cc832",
    "prId" : 33763,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33763#pullrequestreview-3882034",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "368d3beb-f5c4-4571-b28c-d2ee2d896875",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "@jayunit100 - thanks this is exactly what I was asking for.\n\nAs you wrote somewhere, this PR became pretty big. Would you be able to separate this change (I mean this metadata file together with all the changes to integrate it in factory etc.) to a separate PR? And then in this PR you would leave the changes related to service-affinity?\nIt would be easier to detect the problem if it appear (and easier for me to review it :))\n",
        "createdAt" : "2016-10-12T09:01:32Z",
        "updatedAt" : "2016-10-20T12:27:25Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "9865b4a4-0807-4c6a-8898-05ae284e321c",
        "parentId" : "368d3beb-f5c4-4571-b28c-d2ee2d896875",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "@wojtek-t i _could_ break it up, but my first question would be - how should we separate the changes? \n- the metadata.go changes  effect predicates.go, because now predicates.go doesnt implement the CheckService algorithm\n- the changes to types.go are only meaningfull in the context of enabling matching pod metadata / node information when calcualting predicates via a factory\n- the changes to plugins.go are simply machinery to enable the predicates.go metadata to be plugged in via a factory\n-  also the changes to generic_scheduler are really only there for enabling factoy-ization\n\nso its a pretty cohesive change set.   \n\nEither way is ok, just let me know... but figured i would double-check that you think its necessary... \n",
        "createdAt" : "2016-10-12T13:29:14Z",
        "updatedAt" : "2016-10-20T12:27:25Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "d17aab10-57f9-4832-aad3-61a9ad969d78",
        "parentId" : "368d3beb-f5c4-4571-b28c-d2ee2d896875",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I think that what you can separate is all the changes to ServiceAffinity (which means all the changes in \"checkServiceAffinity\" and the utils and utils_test.go files). This would significantly reduce the size of this PR.\nDo you agree?\n",
        "createdAt" : "2016-10-12T14:06:28Z",
        "updatedAt" : "2016-10-20T12:27:25Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "4abd4935-f3d8-451f-ac29-fbc6f78bfca0",
        "parentId" : "368d3beb-f5c4-4571-b28c-d2ee2d896875",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "hmmm...\n- checkServiceAffinity: _functionally_ all of the changes to checkServiceAffinity are dependent on precomputation working properly though :) .   without it, checkServiceAffinity will still compile - but it wont ever have a complete pod affinity cache, so the match will  return true for all nodes, because it wont see any affinity constraints, and then the unit tests would fail.. \n- unit tests: indeed you are right, they _are_ an atomic functional patch, but i doubt that would really make your life easier - its just a trivial PR in an isolated fileset .  \n\nhowever, if you want i can think more deeply about separating it.   \n\n_ill let you make the final call_ either way is ok with me, i know youre very busy, so anything i can do to help ill do :) \n",
        "createdAt" : "2016-10-12T14:16:14Z",
        "updatedAt" : "2016-10-20T12:27:25Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "08cff0157da92133fa25bfcd3faf0b2a96cc76c5",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@/*\nCopyright 2016 The Kubernetes Authors.\n"
  }
]