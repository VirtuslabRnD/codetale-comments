[
  {
    "id" : "2c148e2f-5c6c-4c55-a110-528387a6cfa5",
    "prId" : 39491,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39491#pullrequestreview-15722321",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fff180f6-54ad-4c30-8d0c-79daae099d0a",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "why not string match the the entire expected string? \r\n\r\n1. It makes it easier to read\r\n2. It gives a clear example of the flattening  \r\n... etc. ",
        "createdAt" : "2017-01-06T20:44:37Z",
        "updatedAt" : "2017-01-09T15:24:28Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "356140e9-471f-4e60-8dfe-277068900603",
        "parentId" : "fff180f6-54ad-4c30-8d0c-79daae099d0a",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "Ah yes, this is  to avoid Overtesting: We shouldn't be testing the order in which the predicate failures are listed, as thats neither a requirement nor a gauranteed quality of maps in golang: https://nathanleclaire.com/blog/2014/04/27/a-surprising-feature-of-golang-that-colored-me-impressed/.\r\n\r\nWe could print it multiple times and gaurantee that the exact string is eventually provided, but that would be awkward.",
        "createdAt" : "2017-01-06T20:49:27Z",
        "updatedAt" : "2017-01-09T15:24:28Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "838439b6-6539-4e58-bd92-682cb3b4636b",
        "parentId" : "fff180f6-54ad-4c30-8d0c-79daae099d0a",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Your \"No nodes ...\" should be a const btw, otherwise subtle change in 2 locs.  ",
        "createdAt" : "2017-01-06T20:55:53Z",
        "updatedAt" : "2017-01-09T15:24:28Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "529aab2a-07ba-4941-bbbd-df00644e87ca",
        "parentId" : "fff180f6-54ad-4c30-8d0c-79daae099d0a",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "I liked the constant idea, but kept the constant unused in the unit test -- simply because it would make a \"self-fulfilling pass\" .  The decoupling of unit test from the code is necessary for this feature since otherwise, regression in the readability of the message could go unchecked.  just updated and pushed ",
        "createdAt" : "2017-01-09T15:27:16Z",
        "updatedAt" : "2017-01-09T15:27:27Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "9cdc4ae0ad733b0c1c24e8156ada835b499eb7ae",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +408,412 @@\t\t},\n\t}\n\tif strings.Contains(error.Error(), \"No nodes are available that match all of the following predicates\") {\n\t\tif strings.Contains(error.Error(), \"NodeUnderDiskPressure (2)\") && strings.Contains(error.Error(), \"NodeUnderMemoryPressure (1)\") {\n\t\t\treturn"
  },
  {
    "id" : "018cf985-3395-4227-a173-f0798d4d2d94",
    "prId" : 22568,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47ffc1e8-e30a-4aa8-ad1c-2f47cef152c9",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "better to call second return value failedPredicatedMap\n",
        "createdAt" : "2016-04-03T08:53:31Z",
        "updatedAt" : "2016-06-08T21:45:41Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f12f7c51ce72dec77147c65676aa022a8c66436b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +343,347 @@\t}\n\n\t_, predicateMap, err := findNodesThatFit(pod, nodeNameToInfo, predicates, makeNodeList(nodes), nil)\n\tif err != nil && !reflect.DeepEqual(err, algorithmpredicates.ErrFakePredicate) {\n\t\tt.Errorf(\"unexpected error: %v\", err)"
  }
]