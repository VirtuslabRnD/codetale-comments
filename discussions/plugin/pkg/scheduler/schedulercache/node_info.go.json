[
  {
    "id" : "6065e0c0-c9a7-4fb4-9f99-a9de78454e21",
    "prId" : 52421,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52421#pullrequestreview-74339941",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bb08d00-8f73-4d1d-92aa-5763a9fe0b02",
        "parentId" : null,
        "authorId" : "fa37bbb4-59dd-42f0-8202-52d5717aff5e",
        "body" : "better to put this logic together with `decode`. Otherwise it looks like a magic. ",
        "createdAt" : "2017-10-31T23:44:32Z",
        "updatedAt" : "2017-11-10T07:44:44Z",
        "lastEditedBy" : "fa37bbb4-59dd-42f0-8202-52d5717aff5e",
        "tags" : [
        ]
      },
      {
        "id" : "75825550-f06c-4358-9b1d-05211e4faecf",
        "parentId" : "1bb08d00-8f73-4d1d-92aa-5763a9fe0b02",
        "authorId" : "b208abb9-a197-491b-8925-71987861491b",
        "body" : "You have the same concern as @k82cn. As I explained before, I don't want to wrap this `Sprintf` logic here in another function here (need to construct a new hostPortInfo Object and then do Sprintf, which will have less performance). Besides the api validation logic is just use `fmt.Sprintf` which you can check",
        "createdAt" : "2017-11-01T02:03:18Z",
        "updatedAt" : "2017-11-10T07:44:44Z",
        "lastEditedBy" : "b208abb9-a197-491b-8925-71987861491b",
        "tags" : [
        ]
      },
      {
        "id" : "330e7a53-a75f-4b82-a395-08cbaf0b8f7d",
        "parentId" : "1bb08d00-8f73-4d1d-92aa-5763a9fe0b02",
        "authorId" : "fa37bbb4-59dd-42f0-8202-52d5717aff5e",
        "body" : "If we want to change the encode/decode method in future, it'll be really helpful to have it together. otherwise, it will be really hard. Even if you find it here, you are still not confident if there is other place that needs change. \r\n",
        "createdAt" : "2017-11-01T17:48:05Z",
        "updatedAt" : "2017-11-10T07:44:44Z",
        "lastEditedBy" : "fa37bbb4-59dd-42f0-8202-52d5717aff5e",
        "tags" : [
        ]
      },
      {
        "id" : "24a08315-4962-408b-97db-ab5a0c08a701",
        "parentId" : "1bb08d00-8f73-4d1d-92aa-5763a9fe0b02",
        "authorId" : "b208abb9-a197-491b-8925-71987861491b",
        "body" : "@anfernee I knew your concern.It's all trade-off here. I think we value performance here in scheduler.",
        "createdAt" : "2017-11-02T02:56:52Z",
        "updatedAt" : "2017-11-10T07:44:44Z",
        "lastEditedBy" : "b208abb9-a197-491b-8925-71987861491b",
        "tags" : [
        ]
      },
      {
        "id" : "5e17cf31-7a45-4325-9ff2-102734cc6457",
        "parentId" : "1bb08d00-8f73-4d1d-92aa-5763a9fe0b02",
        "authorId" : "b208abb9-a197-491b-8925-71987861491b",
        "body" : "Besides about what you said \" really hard\" and \"not confident\", I think it is exaggerated.",
        "createdAt" : "2017-11-02T03:02:11Z",
        "updatedAt" : "2017-11-10T07:44:44Z",
        "lastEditedBy" : "b208abb9-a197-491b-8925-71987861491b",
        "tags" : [
        ]
      },
      {
        "id" : "174e89fa-668e-477c-958a-468f73d62c0a",
        "parentId" : "1bb08d00-8f73-4d1d-92aa-5763a9fe0b02",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "`decode` is better, but it's not a blocker comments of this PR. @anfernee , please create a new PR for it if you're interesting :).",
        "createdAt" : "2017-11-06T08:10:31Z",
        "updatedAt" : "2017-11-10T07:44:44Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      }
    ],
    "commit" : "954c97fe6dbbd786dd1e662758087dafe0103f68",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +421,425 @@\t\t\t\t}\n\n\t\t\t\tstr := fmt.Sprintf(\"%s/%s/%d\", portProtocol, portHostIP, podPort.HostPort)\n\n\t\t\t\tif used {"
  },
  {
    "id" : "e600baf2-79b4-424c-bbb3-6d40a23db538",
    "prId" : 50949,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50949#pullrequestreview-60997369",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5293fe62-e8a9-4fc1-a70d-9ebdb25f83d3",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I'm wondering about performance impact of this change. Maybe it will be negligible, but we should keep an eye on it.",
        "createdAt" : "2017-09-06T11:26:55Z",
        "updatedAt" : "2017-09-07T22:32:06Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "a4b4cc2b-0ca1-41e5-90c2-e66e5a7d1d8f",
        "parentId" : "5293fe62-e8a9-4fc1-a70d-9ebdb25f83d3",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Ack.",
        "createdAt" : "2017-09-06T18:54:47Z",
        "updatedAt" : "2017-09-07T22:32:06Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0b718373befb2168befc0c4579fd9a02155d5bc",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +470,474 @@\t\t}\n\t}\n\treturn filtered\n}\n"
  },
  {
    "id" : "4d57c7e7-ff6d-4756-94cb-9c2c6897d602",
    "prId" : 46456,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46456#pullrequestreview-41390202",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5ec7b8f-bbe8-41cc-8485-65bda6afd8ba",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "What about `StorageScratch`?",
        "createdAt" : "2017-05-31T22:28:55Z",
        "updatedAt" : "2017-06-01T22:57:59Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "86357a9d-14f2-4fa8-be39-2e3ad3c5083b",
        "parentId" : "c5ec7b8f-bbe8-41cc-8485-65bda6afd8ba",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "This is used in test which for resource request, we don't support StorageScratch as a resource request. Only StorageOverlay for container",
        "createdAt" : "2017-06-01T00:09:12Z",
        "updatedAt" : "2017-06-01T22:57:59Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "943fc53bf727ff6e005378a872710071042abf72",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +80,84 @@\t\tv1.ResourceMemory:         *resource.NewQuantity(r.Memory, resource.BinarySI),\n\t\tv1.ResourceNvidiaGPU:      *resource.NewQuantity(r.NvidiaGPU, resource.DecimalSI),\n\t\tv1.ResourceStorageOverlay: *resource.NewQuantity(r.StorageOverlay, resource.BinarySI),\n\t}\n\tfor rName, rQuant := range r.OpaqueIntResources {"
  },
  {
    "id" : "8b2f9cc7-bdb3-4857-af65-fdf17d56b070",
    "prId" : 46456,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46456#pullrequestreview-41375103",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61452808-f076-460f-9249-33c387eebf45",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "What about `StorageScratch`?",
        "createdAt" : "2017-05-31T22:29:57Z",
        "updatedAt" : "2017-06-01T22:57:59Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "7cf7b3b6-28c7-48df-874f-fd3077801311",
        "parentId" : "61452808-f076-460f-9249-33c387eebf45",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "nvm I see it below",
        "createdAt" : "2017-05-31T22:30:11Z",
        "updatedAt" : "2017-06-01T22:57:59Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "943fc53bf727ff6e005378a872710071042abf72",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +353,357 @@\t\t\tcase v1.ResourceNvidiaGPU:\n\t\t\t\tres.NvidiaGPU += rQuant.Value()\n\t\t\tcase v1.ResourceStorageOverlay:\n\t\t\t\tres.StorageOverlay += rQuant.Value()\n\t\t\tdefault:"
  },
  {
    "id" : "61ced7aa-028f-4e55-8e15-58463fdc3930",
    "prId" : 45331,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45331#pullrequestreview-40640770",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc5163b1-e992-4ada-9bf0-358ddf163b15",
        "parentId" : null,
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "+1.",
        "createdAt" : "2017-05-27T00:43:34Z",
        "updatedAt" : "2017-05-31T13:25:59Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd2575e43e8b33249afb4e47c0478035ac4d97f8",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +223,227 @@\t\tmemoryPressureCondition: n.memoryPressureCondition,\n\t\tdiskPressureCondition:   n.diskPressureCondition,\n\t\tusedPorts:               make(map[int]bool),\n\t\tgeneration:              n.generation,\n\t}"
  },
  {
    "id" : "73e88295-88c0-47b0-afe1-12b84a681936",
    "prId" : 29539,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "811a6dac-efe3-4b84-b7fc-8d08cf60238e",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Just curious, how is this different from `copy(clone.pods, n.pods) ?\n(same question for next few lines, of course)\n",
        "createdAt" : "2016-07-28T05:57:44Z",
        "updatedAt" : "2016-07-28T14:57:41Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "97d9af75-f056-4eef-a271-28c0ea64ffde",
        "parentId" : "811a6dac-efe3-4b84-b7fc-8d08cf60238e",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I'm not sure - it was already like that before (I just moved this line below).\nI think both can work, this may be more efficient, but I'm not 100% - can I check it as part of the next PR?\n",
        "createdAt" : "2016-07-28T14:59:07Z",
        "updatedAt" : "2016-07-28T14:59:07Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3b9d583a2f7b03f409592169a2066219b25795f",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +145,149 @@\t}\n\tif len(n.pods) > 0 {\n\t\tclone.pods = append([]*api.Pod(nil), n.pods...)\n\t}\n\tif len(n.podsWithAffinity) > 0 {"
  },
  {
    "id" : "0bd2d856-3309-4304-973c-e3f386893038",
    "prId" : 28680,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74ea272c-d5ba-4591-abd0-4f44dcb866ca",
        "parentId" : null,
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "do we use generation in other places inside the k8s codebase? I feel version might be more consistent.\n",
        "createdAt" : "2016-07-08T13:33:07Z",
        "updatedAt" : "2016-07-08T16:10:49Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      },
      {
        "id" : "15385919-d138-48e3-b1d5-64325d8f15c4",
        "parentId" : "74ea272c-d5ba-4591-abd0-4f44dcb866ca",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Yes - there is a concept of generation (which is basically exactly what we have here).\nSee:\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/api/types.go#L102\n",
        "createdAt" : "2016-07-08T13:35:12Z",
        "updatedAt" : "2016-07-08T16:10:49Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "49934c05c087c52c538c3df7b439007154da0f1c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +43,47 @@\t// Whenever NodeInfo changes, generation is bumped.\n\t// This is used to avoid cloning it if the object didn't change.\n\tgeneration int64\n}\n"
  },
  {
    "id" : "c784625b-ed21-4115-9a80-46750e2386a3",
    "prId" : 24598,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1360b3b4-da58-4eb9-a148-49e73bebbf34",
        "parentId" : null,
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "Doc string public function?\n",
        "createdAt" : "2016-04-21T14:29:30Z",
        "updatedAt" : "2016-04-25T08:08:12Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      },
      {
        "id" : "b150d59c-e63c-49d5-8c4e-1710e894f200",
        "parentId" : "1360b3b4-da58-4eb9-a148-49e73bebbf34",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "done\n",
        "createdAt" : "2016-04-22T07:39:29Z",
        "updatedAt" : "2016-04-25T08:08:12Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1835c8528d784816b9555931392831840082d333",
    "line" : null,
    "diffHunk" : "@@ -1,1 +167,171 @@\n// Sets the overall node information.\nfunc (n *NodeInfo) SetNode(node *api.Node) error {\n\tn.node = node\n\treturn nil"
  },
  {
    "id" : "62e008eb-37aa-402a-a155-f58853951217",
    "prId" : 24598,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab829431-2c24-458a-b9de-5b8dbe4751fb",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "Well, if we remove node,  we should just remove that entry in the cache \n",
        "createdAt" : "2016-04-22T08:00:12Z",
        "updatedAt" : "2016-04-25T08:08:12Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "32df7f5a-67de-45bd-af20-05a4b1d0fe30",
        "parentId" : "ab829431-2c24-458a-b9de-5b8dbe4751fb",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I didn't do that on purpose - potentially there may be some race, that in the system pods are removed and then node is removed, but since pods & nodes are delivered in different watch channels, there may be a race and node deletion may be delivered first. In that case, we don't want to remove it until all pods are also removed. This is handled in cache.go\n",
        "createdAt" : "2016-04-22T08:06:59Z",
        "updatedAt" : "2016-04-25T08:08:12Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "3adffa2b-00e1-4816-9a82-ee2255baca3e",
        "parentId" : "ab829431-2c24-458a-b9de-5b8dbe4751fb",
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : ">  since pods & nodes are delivered in different watch channels, there may be a race and node deletion may be delivered first. \n\nAh. I see. That sounds not right though. If a node is deleted, but we still know of some pods on it... Is there any explicit docs or discussion on this?\n",
        "createdAt" : "2016-04-22T08:46:58Z",
        "updatedAt" : "2016-04-25T08:08:12Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "f5bcf626-734f-4322-be9e-2924def074a1",
        "parentId" : "ab829431-2c24-458a-b9de-5b8dbe4751fb",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I think you don't understand. If the node is deleted, there shouldn't by any pods assigned to in in db.\nBut we don't controller watches - they may be delivered in different orders, because those are different watches.\nIt's not a bug- it's like distributed system work.\n",
        "createdAt" : "2016-04-22T09:27:38Z",
        "updatedAt" : "2016-04-25T08:08:12Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "da83e6d0-a1c7-4860-91b5-13f1a9e9b864",
        "parentId" : "ab829431-2c24-458a-b9de-5b8dbe4751fb",
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "Got that!\n",
        "createdAt" : "2016-04-22T11:26:35Z",
        "updatedAt" : "2016-04-25T08:08:12Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "a5de36c6-3e4e-4ad0-b0ff-bd7d632799c9",
        "parentId" : "ab829431-2c24-458a-b9de-5b8dbe4751fb",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Please add a comment here explaining why you do not remove the entry from the cache; I think other people may have the same question @hongchaodeng had. Also maybe mention it in cache.go\n",
        "createdAt" : "2016-04-25T05:24:22Z",
        "updatedAt" : "2016-04-25T08:08:12Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "f24ae767-1d2a-44ab-9cc1-ed897d8d4838",
        "parentId" : "ab829431-2c24-458a-b9de-5b8dbe4751fb",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "done\n",
        "createdAt" : "2016-04-25T07:33:13Z",
        "updatedAt" : "2016-04-25T08:08:12Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1835c8528d784816b9555931392831840082d333",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +173,177 @@\n// Removes the overall information about the node.\nfunc (n *NodeInfo) RemoveNode(node *api.Node) error {\n\t// We don't remove NodeInfo for because there can still be some pods on this node -\n\t// this is because notifications about pods are delivered in a different watch,"
  }
]