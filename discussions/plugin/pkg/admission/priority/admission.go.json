[
  {
    "id" : "f6fa5628-98cd-4175-b308-0d4ecddfc6ec",
    "prId" : 74614,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74614#pullrequestreview-226984929",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c40452ab-3287-4ac4-a929-bbdf4a06270a",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "The head of the master branch must already have these changes. You should probably update your branch.",
        "createdAt" : "2019-04-16T01:11:08Z",
        "updatedAt" : "2019-05-31T04:42:34Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "9f6661c9-b02b-4f88-8b24-6a6464e2fd68",
        "parentId" : "c40452ab-3287-4ac4-a929-bbdf4a06270a",
        "authorId" : "89bff7d0-c420-41e1-9e5e-db63c4cccd93",
        "body" : "Done I update my branch~ thank you~",
        "createdAt" : "2019-04-16T05:01:55Z",
        "updatedAt" : "2019-05-31T04:42:34Z",
        "lastEditedBy" : "89bff7d0-c420-41e1-9e5e-db63c4cccd93",
        "tags" : [
        ]
      }
    ],
    "commit" : "52f3380ef3a5d5de4d75ff92defd1c9af9d775bc",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +22,26 @@\n\tapiv1 \"k8s.io/api/core/v1\"\n\tschedulingv1 \"k8s.io/api/scheduling/v1\"\n\t\"k8s.io/apimachinery/pkg/api/errors\"\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\""
  },
  {
    "id" : "9d5f5a4d-824d-4d03-a738-4c3de2898a79",
    "prId" : 74614,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74614#pullrequestreview-243516575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfe06c21-66db-4ee1-9da0-f7c9cd7faf0c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if the feature gate is enabled, I'd expect us to check if the incoming pod has a non-nil preemption policy that conflicts with the computed one and fail rather than just stomp it. Need to make sure tests cover these cases:\r\n* pods with nil policy succeed\r\n* pods with non-nil policy that matches the computed policy succeed\r\n* pods with non-nil policy that does not match the computed policy are rejected",
        "createdAt" : "2019-05-29T21:51:33Z",
        "updatedAt" : "2019-05-31T04:42:34Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "52f3380ef3a5d5de4d75ff92defd1c9af9d775bc",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +220,224 @@\t\tif pod.Spec.Priority != nil && *pod.Spec.Priority != priority {\n\t\t\treturn admission.NewForbidden(a, fmt.Errorf(\"the integer value of priority (%d) must not be provided in pod spec; priority admission controller computed %d from the given PriorityClass name\", *pod.Spec.Priority, priority))\n\t\t}\n\t\tpod.Spec.Priority = &priority\n"
  },
  {
    "id" : "63dd596f-3580-4299-9bfc-fc0c899a1a86",
    "prId" : 65739,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65739#pullrequestreview-134030679",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d616886-6eb9-4a25-a9c9-00b296fd68b1",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Now that we have this check here, someone who reads the code may not realize that changes to the values are not allowed. I would add to the comment that changes to the priority value or the priority class name are not allowed by the API validation.",
        "createdAt" : "2018-07-03T08:43:42Z",
        "updatedAt" : "2018-07-03T14:44:11Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "a1b74706-1ffc-477f-bf9d-323bd4e7297b",
        "parentId" : "7d616886-6eb9-4a25-a9c9-00b296fd68b1",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "comment added",
        "createdAt" : "2018-07-03T14:44:10Z",
        "updatedAt" : "2018-07-03T14:44:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfd966c4c2ff442e4a05b0a29dee21078180677f",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +169,173 @@\n\t\t// This admission plugin set pod.Spec.Priority on create.\n\t\t// Ensure the existing priority is preserved on update.\n\t\t// API validation prevents mutations to Priority and PriorityClassName, so any other changes will fail update validation and not be persisted.\n\t\tif pod.Spec.Priority == nil && oldPod.Spec.Priority != nil {"
  },
  {
    "id" : "00cef7dc-41bc-424a-a0e8-15967d054722",
    "prId" : 65593,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65593#pullrequestreview-133369305",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "642ab97c-a09c-491b-bdfe-76b8bd43398a",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this check still needs to be limited to create operations. otherwise we can strand 1.11.0 pod data in a state where it cannot be updated",
        "createdAt" : "2018-06-29T19:17:56Z",
        "updatedAt" : "2018-06-29T19:17:56Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "72e73a2e-9291-4a01-835f-df4ee5dbf657",
        "parentId" : "642ab97c-a09c-491b-bdfe-76b8bd43398a",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "sorry, just traced this back, and this function only gets called in create cases:\r\n\r\n```\r\nif operation == admission.Create {\r\n\treturn p.admitPod(a)\r\n}\r\n```",
        "createdAt" : "2018-06-29T19:18:41Z",
        "updatedAt" : "2018-06-29T19:18:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "09dde39b-00ef-4fe6-bd46-0a5febdf8fb9",
        "parentId" : "642ab97c-a09c-491b-bdfe-76b8bd43398a",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Yes, as I said before and you found as well, this function is called only on create.",
        "createdAt" : "2018-06-29T20:33:02Z",
        "updatedAt" : "2018-06-29T20:33:02Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1472459a57dae25906c8e5638cc652112dd86b0",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +178,182 @@\t\t\t}\n\t\t} else {\n\t\t\tpcName := pod.Spec.PriorityClassName\n\t\t\tif !priorityClassPermittedInNamespace(pcName, a.GetNamespace()) {\n\t\t\t\treturn admission.NewForbidden(a, fmt.Errorf(\"pods with %v priorityClass is not permitted in %v namespace\", pcName, a.GetNamespace()))"
  },
  {
    "id" : "b2ab753b-6557-4c07-99e7-c2f692457146",
    "prId" : 59991,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59991#pullrequestreview-97360131",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ad50352-2555-4261-8f0d-9859b0899746",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Heh, this is still non-deterministic, since two names can have the same priority. Sort by lowest priority, then by name?",
        "createdAt" : "2018-02-17T01:11:52Z",
        "updatedAt" : "2018-02-19T02:20:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "751abb4a-dd47-4613-ba8c-3cec093ac99a",
        "parentId" : "6ad50352-2555-4261-8f0d-9859b0899746",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "But that's fine, right? We care about the value of the PriorityClass and also care whether any default class exists or not. If two names have the same priority, the value that we pick will still be the same. We are able to detect whether a default class exists as well.",
        "createdAt" : "2018-02-17T01:13:50Z",
        "updatedAt" : "2018-02-19T02:20:21Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "07290eda-dcd9-4121-8cbc-996a6bd9a576",
        "parentId" : "6ad50352-2555-4261-8f0d-9859b0899746",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Doesn't this set the priority class on the pod? So the name it chose would be visible? Seems like we'd want the same name chosen consistently for multiple pods submitted",
        "createdAt" : "2018-02-17T01:34:03Z",
        "updatedAt" : "2018-02-19T02:20:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "dbd8779c-49fc-4c83-9fdf-2407555b834d",
        "parentId" : "6ad50352-2555-4261-8f0d-9859b0899746",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Ah, looks like it doesn't set priority class, just priority ",
        "createdAt" : "2018-02-17T01:35:16Z",
        "updatedAt" : "2018-02-19T02:20:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "54685cff-f4d8-40d0-8ee0-a4194f4992e2",
        "parentId" : "6ad50352-2555-4261-8f0d-9859b0899746",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Right, it only sets the value of priority. ",
        "createdAt" : "2018-02-17T01:41:48Z",
        "updatedAt" : "2018-02-19T02:20:21Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "af0d7459a7fe65d6ea970754f209e16032dd0521",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +237,241 @@\tfor _, pci := range list {\n\t\tif pci.GlobalDefault {\n\t\t\tif defaultPC == nil || defaultPC.Value > pci.Value {\n\t\t\t\tdefaultPC = pci\n\t\t\t}"
  },
  {
    "id" : "a5d45fe4-848f-4ef7-8189-b0f1d68c2215",
    "prId" : 59382,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59382#pullrequestreview-95515201",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78284041-ce40-4fb1-becf-241dc6322dbf",
        "parentId" : null,
        "authorId" : "33ab9fbe-6f55-45c0-a58d-be01aec201d9",
        "body" : "Should we manage the magic numbers like 1000? At least we should indicate why it is 1000. \r\nWDYT, Bobby?",
        "createdAt" : "2018-02-09T16:21:44Z",
        "updatedAt" : "2018-02-09T16:21:44Z",
        "lastEditedBy" : "33ab9fbe-6f55-45c0-a58d-be01aec201d9",
        "tags" : [
        ]
      },
      {
        "id" : "60aa6710-47a0-4e4b-b6bb-a3933195f3a0",
        "parentId" : "78284041-ce40-4fb1-becf-241dc6322dbf",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "@wgliang, the exact value of priority does not have any significance, only the relative value of priority compared to other priorites matters. So, if `system-node-critical` value was `SystemCriticalPriority + 1`, it would have had the same effect as `SystemCriticalPriority + 1000`, but we choose to use a larger number so that we can add more priority classes between the two existing ones if there is a need in the future.",
        "createdAt" : "2018-02-09T18:22:45Z",
        "updatedAt" : "2018-02-09T18:22:45Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bad08ab0c3ea52eef071bab351ce2b968efc87f",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +49,53 @@var SystemPriorityClasses = map[string]int32{\n\t\"system-cluster-critical\": SystemCriticalPriority,\n\t\"system-node-critical\":    SystemCriticalPriority + 1000,\n}\n"
  },
  {
    "id" : "c6f25116-492b-434d-b8c9-da83c9ea12e9",
    "prId" : 54983,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54983#pullrequestreview-86146910",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f079c85b-ff6d-419a-9ac5-5f55633307b2",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Move outside of this if block to avoid nesting.",
        "createdAt" : "2018-01-02T14:10:51Z",
        "updatedAt" : "2018-01-03T02:46:53Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "dca1447f5fff20687575e90d3ba46d55114a3f23",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +165,169 @@\n\t\t\t\tif err != nil {\n\t\t\t\t\tif errors.IsNotFound(err) {\n\t\t\t\t\t\treturn admission.NewForbidden(a, fmt.Errorf(\"no PriorityClass with name %v was found\", pod.Spec.PriorityClassName))\n\t\t\t\t\t}"
  },
  {
    "id" : "824008e0-d282-4473-b042-78739502017f",
    "prId" : 49322,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49322#pullrequestreview-51665053",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7538ba19-93ba-4d8d-8cc0-90aab5d6cf26",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "What is expected to go in between HighestUserDefinablePriority and SystemCriticalPriority?\r\n",
        "createdAt" : "2017-07-21T19:47:14Z",
        "updatedAt" : "2017-08-08T00:07:34Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "c4eaf248-84df-45aa-a908-a672a15ed61b",
        "parentId" : "7538ba19-93ba-4d8d-8cc0-90aab5d6cf26",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "I thought to keep some room for unforeseen use-cases which may be found in the future.",
        "createdAt" : "2017-07-24T02:53:50Z",
        "updatedAt" : "2017-08-08T00:07:34Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "bef83fbeb94bdad0650fa2eef84b182f380b3202",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@\tHighestUserDefinablePriority = 1000000000\n\t// SystemCriticalPriority is the beginning of the range of priority values for critical system components.\n\tSystemCriticalPriority = 2 * HighestUserDefinablePriority\n)\n"
  },
  {
    "id" : "9a17732c-63c8-4a96-b617-411a46f208d8",
    "prId" : 49322,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49322#pullrequestreview-51665737",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05924e1f-c2db-49f4-8b76-a7061a81444a",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Is there any way to un-mark a PriorityClass as default? Or are you just supposed to delete it and re-create it?",
        "createdAt" : "2017-07-22T07:39:45Z",
        "updatedAt" : "2017-08-08T00:07:34Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "f37f1afe-dfd3-4019-8629-20e3616bad80",
        "parentId" : "05924e1f-c2db-49f4-8b76-a7061a81444a",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "GlobalDefault and Description of a priority class can be updated.",
        "createdAt" : "2017-07-24T03:03:49Z",
        "updatedAt" : "2017-08-08T00:07:34Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "bef83fbeb94bdad0650fa2eef84b182f380b3202",
    "line" : 198,
    "diffHunk" : "@@ -1,1 +196,200 @@\t\t\t// Throw an error if a second default priority class is being created, or an existing priority class is being marked as default, while another default already exists.\n\t\t\tif operation == admission.Create || (operation == admission.Update && dpc.GetName() != pc.GetName()) {\n\t\t\t\treturn admission.NewForbidden(a, fmt.Errorf(\"PriorityClass %v is already marked as default. Only one default can exist\", dpc.GetName()))\n\t\t\t}\n\t\t}"
  },
  {
    "id" : "94ab07e8-dd68-4f4f-84d0-3c6dcd55c82c",
    "prId" : 49322,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49322#pullrequestreview-54806071",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94a2b3d3-1c88-4454-9e57-c8965cb4743c",
        "parentId" : null,
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "why only the globaldefault is cached?",
        "createdAt" : "2017-08-05T17:37:35Z",
        "updatedAt" : "2017-08-08T00:07:34Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      },
      {
        "id" : "8260f864-a886-48ed-84d9-ae3cf8d773b6",
        "parentId" : "94a2b3d3-1c88-4454-9e57-c8965cb4743c",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Finding globaldefault requires iterating over all the priorityclasses. Other priorityclasses do not need this.",
        "createdAt" : "2017-08-08T00:03:04Z",
        "updatedAt" : "2017-08-08T00:07:34Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "bef83fbeb94bdad0650fa2eef84b182f380b3202",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +62,66 @@\tlister schedulinglisters.PriorityClassLister\n\t// globalDefaultPriority caches the value of global default priority class.\n\tglobalDefaultPriority *int32\n}\n"
  },
  {
    "id" : "e6cd1458-f938-43e3-a488-767d3cee5f03",
    "prId" : 49322,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49322#pullrequestreview-55415740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "935350a6-f9fa-4399-ae73-1de7e81c6dcd",
        "parentId" : null,
        "authorId" : "8f672b1e-0513-4363-b383-ad8d8de0cdb9",
        "body" : "Why we need `admission.Delete` here?",
        "createdAt" : "2017-08-06T15:27:25Z",
        "updatedAt" : "2017-08-08T00:07:34Z",
        "lastEditedBy" : "8f672b1e-0513-4363-b383-ad8d8de0cdb9",
        "tags" : [
        ]
      },
      {
        "id" : "688da4e4-d1e4-4afe-9c69-912cee78cb3a",
        "parentId" : "935350a6-f9fa-4399-ae73-1de7e81c6dcd",
        "authorId" : "8f672b1e-0513-4363-b383-ad8d8de0cdb9",
        "body" : "hmm, seems you are using for priorityClassResource",
        "createdAt" : "2017-08-06T15:34:51Z",
        "updatedAt" : "2017-08-08T00:07:34Z",
        "lastEditedBy" : "8f672b1e-0513-4363-b383-ad8d8de0cdb9",
        "tags" : [
        ]
      },
      {
        "id" : "942faf6e-1161-47f8-83be-cee578646164",
        "parentId" : "935350a6-f9fa-4399-ae73-1de7e81c6dcd",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "In order to monitor deletion of priorityclasses and invalidate cached default priority.",
        "createdAt" : "2017-08-08T00:04:40Z",
        "updatedAt" : "2017-08-08T00:07:34Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "58c537ce-3fa4-4d86-9c2a-4c3c5ba7adc7",
        "parentId" : "935350a6-f9fa-4399-ae73-1de7e81c6dcd",
        "authorId" : "8f672b1e-0513-4363-b383-ad8d8de0cdb9",
        "body" : "Would you mind tell me why we not bootstrap a default priority class?",
        "createdAt" : "2017-08-10T01:16:33Z",
        "updatedAt" : "2017-08-10T01:16:34Z",
        "lastEditedBy" : "8f672b1e-0513-4363-b383-ad8d8de0cdb9",
        "tags" : [
        ]
      },
      {
        "id" : "35302596-acc6-4dae-a9f6-699a7ec7ae9b",
        "parentId" : "935350a6-f9fa-4399-ae73-1de7e81c6dcd",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "There was a section in [the design proposal](https://github.com/kubernetes/community/pull/604) that explains our reasons and there was some discussion about it. The main reason is that we don't want to create defacto standards which would be hard to change in the future.\r\nThat said, we have two \"reserved\" class names that the admission controller knows and resolves. They are reserved for critical system pods.",
        "createdAt" : "2017-08-10T01:26:10Z",
        "updatedAt" : "2017-08-10T01:26:10Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "bef83fbeb94bdad0650fa2eef84b182f380b3202",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +71,75 @@func NewPlugin() admission.Interface {\n\treturn &priorityPlugin{\n\t\tHandler: admission.NewHandler(admission.Create, admission.Update, admission.Delete),\n\t}\n}"
  }
]