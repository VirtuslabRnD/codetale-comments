[
  {
    "id" : "0450c7e5-e62b-4584-a15c-e37753785f3c",
    "prId" : 98147,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98147#pullrequestreview-571596604",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63696342-6fd9-4705-b082-c76d651e7177",
        "parentId" : null,
        "authorId" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "body" : "so the idea is to run a single request to check if the user can update any `finalizer` instead of sending multiple requests?",
        "createdAt" : "2021-01-19T17:06:34Z",
        "updatedAt" : "2021-01-27T21:53:40Z",
        "lastEditedBy" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "tags" : [
        ]
      },
      {
        "id" : "11e50508-ce8c-4f3a-8ee3-510df4278aff",
        "parentId" : "63696342-6fd9-4705-b082-c76d651e7177",
        "authorId" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "body" : "ah, okay, I see that the mapper is used in `ownerRefToDeleteAttributeRecords` method to find the owners.",
        "createdAt" : "2021-01-19T19:54:48Z",
        "updatedAt" : "2021-01-27T21:53:40Z",
        "lastEditedBy" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff6684d90f5fd304bba1795b2bcac1df020c2141",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +132,136 @@\t// Because the timeout is wrapper on admission/request, we can run a single check to see if the user can finalize any\n\t// possible resource.\n\tif decision, _, _ := a.authorizer.Authorize(ctx, finalizeAnythingRecord(attributes.GetUserInfo())); decision == authorizer.DecisionAllow {\n\t\treturn nil\n\t}"
  },
  {
    "id" : "5f3c1ef6-4fca-42c2-b978-e58e4e26e36e",
    "prId" : 98147,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98147#pullrequestreview-572625792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13c53249-9adc-4c53-8606-0b49becbafa2",
        "parentId" : null,
        "authorId" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "body" : "@deads2k how about changing the mapper to accept the `context` with the request deadline instead? The authorizer attributes set below seems to be covering only privileged users.",
        "createdAt" : "2021-01-19T20:15:47Z",
        "updatedAt" : "2021-01-27T21:53:40Z",
        "lastEditedBy" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "tags" : [
        ]
      },
      {
        "id" : "fdff3be7-a9c9-48e3-9bc2-014e9b843b66",
        "parentId" : "13c53249-9adc-4c53-8606-0b49becbafa2",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> @deads2k how about changing the mapper to accept the `context` with the request deadline instead? The authorizer attributes set below seems to be covering only privileged users.\r\n\r\nThat wouldn't fix the overall problem we face since we want to have the request succeed.  As a separate effort, that improvement makes sense, but it wouldn't fix this problem.\r\n",
        "createdAt" : "2021-01-19T21:12:36Z",
        "updatedAt" : "2021-01-27T21:53:40Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "ae66a9ae-ac61-4bbf-8acc-e5f57184d75f",
        "parentId" : "13c53249-9adc-4c53-8606-0b49becbafa2",
        "authorId" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "body" : "> That wouldn't fix the overall problem we face since we want to have the request succeed\r\n\r\nhow do we ensure that the next admission won't run into the discovery issue?",
        "createdAt" : "2021-01-20T09:40:54Z",
        "updatedAt" : "2021-01-27T21:53:40Z",
        "lastEditedBy" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "tags" : [
        ]
      },
      {
        "id" : "fac65597-0221-4741-a120-18ea312d1814",
        "parentId" : "13c53249-9adc-4c53-8606-0b49becbafa2",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> how do we ensure that the next admission won't run into the discovery issue?\r\n\r\nWell, in this case because this is the only admission plugin that is a `WantsRESTMapper`.  I would say that if another admission plugin grows that requires it, we first discourage them and then consider repercussions for that admission plugin before making a change.",
        "createdAt" : "2021-01-20T20:37:18Z",
        "updatedAt" : "2021-01-27T21:53:40Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff6684d90f5fd304bba1795b2bcac1df020c2141",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +129,133 @@\n\t// There can be a case where a restMapper tries to hit discovery endpoints and times out if the network is inaccessible.\n\t// This can prevent creating the pod to run the network to be able to do discovery and it appears as a timeout, not a rejection.\n\t// Because the timeout is wrapper on admission/request, we can run a single check to see if the user can finalize any\n\t// possible resource."
  },
  {
    "id" : "b32161d3-7ce1-40e4-82f9-8868a1db022a",
    "prId" : 43876,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43876#pullrequestreview-32199267",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd4754d6-d1ee-476b-82d9-307e99b4ec77",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "if this list is empty, return.",
        "createdAt" : "2017-04-11T19:05:03Z",
        "updatedAt" : "2017-04-13T18:55:30Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d7a8df5eea3a6f06f9023fa191fb031e2fc483d",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +185,189 @@\t}\n\tnewRefs := newMeta.GetOwnerReferences()\n\tblockingNewRefs := blockingOwnerRefs(newRefs)\n\tif len(blockingNewRefs) == 0 {\n\t\treturn nil"
  },
  {
    "id" : "2fd2f4cd-35ab-42f4-9b9f-3044d058e553",
    "prId" : 43876,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43876#pullrequestreview-32199584",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca2fa80d-ac5c-4051-8fcd-6ba94096c343",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I would actually bet on it being just as fast to iterate the n-squared loop, but I don't really care.",
        "createdAt" : "2017-04-11T19:06:33Z",
        "updatedAt" : "2017-04-13T18:55:30Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d7a8df5eea3a6f06f9023fa191fb031e2fc483d",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +200,204 @@\n\tvar ret []metav1.OwnerReference\n\tindexedOldRefs := indexByUID(oldMeta.GetOwnerReferences())\n\tfor _, ref := range blockingNewRefs {\n\t\toldRef, ok := indexedOldRefs[ref.UID]"
  },
  {
    "id" : "ebc3d29a-9e26-4c41-b4ad-bd0422709fcb",
    "prId" : 43876,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43876#pullrequestreview-32200523",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e2514ef-352b-4b1d-a3e0-c06459f9b86c",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "check that you have this in `Validate`",
        "createdAt" : "2017-04-11T19:10:48Z",
        "updatedAt" : "2017-04-13T18:55:30Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d7a8df5eea3a6f06f9023fa191fb031e2fc483d",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +221,225 @@\nfunc (a *gcPermissionsEnforcement) SetRESTMapper(restMapper meta.RESTMapper) {\n\ta.restMapper = restMapper\n}\n"
  },
  {
    "id" : "cb10e068-5177-49a9-b1fe-f6384fb79e16",
    "prId" : 34829,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34829#pullrequestreview-4318711",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7725bf1a-c14e-4362-9757-7f68c64014d2",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "could have false positives here (reordering, removing instead of adding), but I'm not sure how much we care\n",
        "createdAt" : "2016-10-14T16:00:28Z",
        "updatedAt" : "2016-10-17T13:38:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "16c6499d-a30d-4f33-a1b7-6a964528e88c",
        "parentId" : "7725bf1a-c14e-4362-9757-7f68c64014d2",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> could have false positives here (reordering, removing instead of adding), but I'm not sure how much we care\n\nI don't care.  Also, I intentionally reject removing since you're messing with whether something can be deleted and that seems unreasonable to do without delete powers.\n",
        "createdAt" : "2016-10-14T16:43:25Z",
        "updatedAt" : "2016-10-17T13:38:09Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "848f97ce-a581-4f6a-9e36-fec88f52b92c",
        "parentId" : "7725bf1a-c14e-4362-9757-7f68c64014d2",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Is the call to authorizer expensive?\n",
        "createdAt" : "2016-10-14T18:09:46Z",
        "updatedAt" : "2016-10-17T13:38:09Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "71c5e078-a17b-4915-8b1c-a04283bb6356",
        "parentId" : "7725bf1a-c14e-4362-9757-7f68c64014d2",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Is the call to authorizer expensive?\n\nNo. Authorizers should be one of the most efficient code paths in the system.\n",
        "createdAt" : "2016-10-14T18:13:18Z",
        "updatedAt" : "2016-10-17T13:38:09Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "cfe155ca-f4ae-4988-82fe-0578a3828bcb",
        "parentId" : "7725bf1a-c14e-4362-9757-7f68c64014d2",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Ok. I'm fine with the false positives then.\n",
        "createdAt" : "2016-10-14T18:15:21Z",
        "updatedAt" : "2016-10-17T13:38:09Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "14c164a3287a53758c4d1a4c3e44fcb89de42489",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +70,74 @@}\n\nfunc isChangingOwnerReference(newObj, oldObj runtime.Object) bool {\n\tnewMeta, err := meta.Accessor(newObj)\n\tif err != nil {"
  }
]