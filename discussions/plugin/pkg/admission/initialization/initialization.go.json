[
  {
    "id" : "42a65bab-c0c4-421a-a9aa-2537167e6dbb",
    "prId" : 51436,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51436#pullrequestreview-58846195",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3723981c-82d5-4af0-9aa0-d2c275e9e876",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "utilruntime.HandleError",
        "createdAt" : "2017-08-28T03:15:32Z",
        "updatedAt" : "2017-08-28T15:11:57Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "658956f0631c6bd3ecf9f756db4a0710efea98ea",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +80,84 @@\tif !utilfeature.DefaultFeatureGate.Enabled(features.Initializers) {\n\t\tif err := utilfeature.DefaultFeatureGate.Set(string(features.Initializers) + \"=true\"); err != nil {\n\t\t\tglog.Errorf(\"error enabling Initializers feature as part of admission plugin setup: %v\", err)\n\t\t} else {\n\t\t\tglog.Infof(\"enabled Initializers feature as part of admission plugin setup\")"
  },
  {
    "id" : "b2411817-a16e-441d-8096-dfb7b055be1a",
    "prId" : 51436,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51436#pullrequestreview-87363405",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51e0407b-4b4c-4e61-884b-4f44d6681706",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Should adding the admission controller really override the feature flag?",
        "createdAt" : "2018-01-08T22:40:31Z",
        "updatedAt" : "2018-01-08T22:40:31Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "658956f0631c6bd3ecf9f756db4a0710efea98ea",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +79,83 @@\n\tif !utilfeature.DefaultFeatureGate.Enabled(features.Initializers) {\n\t\tif err := utilfeature.DefaultFeatureGate.Set(string(features.Initializers) + \"=true\"); err != nil {\n\t\t\tglog.Errorf(\"error enabling Initializers feature as part of admission plugin setup: %v\", err)\n\t\t} else {"
  },
  {
    "id" : "ed7d8957-c2db-4ed1-a558-7d91bab6ef08",
    "prId" : 51082,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51082#pullrequestreview-58467050",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9dafe155-ac4b-49be-945f-0e4974b7bf24",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "The unit test for this class should be updated",
        "createdAt" : "2017-08-24T00:35:16Z",
        "updatedAt" : "2017-08-24T20:35:33Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "1d1035f9-f783-48c3-b955-cc95c4c6d33a",
        "parentId" : "9dafe155-ac4b-49be-945f-0e4974b7bf24",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Added a unit test.",
        "createdAt" : "2017-08-24T18:24:32Z",
        "updatedAt" : "2017-08-24T20:35:33Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "14dc1d8cb1c80affe6a76105fc326f2bafe82950",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +209,213 @@\t\tglog.V(5).Infof(\"Modifying uninitialized resource %s\", a.GetResource())\n\n\t\tif updated != nil && len(updated.Pending) == 0 && updated.Result == nil {\n\t\t\taccessor.SetInitializers(nil)\n\t\t}"
  },
  {
    "id" : "a03b04d1-bea3-45ec-bf83-10274df3d3ef",
    "prId" : 46672,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46672#pullrequestreview-41350662",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ba7995b-ea23-433e-b731-e33f18fabb8d",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "The validation rule allows coexistence of `*` and `x/*`, so `*` might not be resources[0].\r\n\r\n`*/*` is fine.",
        "createdAt" : "2017-05-31T17:47:21Z",
        "updatedAt" : "2017-06-05T23:12:49Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "c5d1054f-fb7e-4b2a-9417-e0c48a90f7d4",
        "parentId" : "5ba7995b-ea23-433e-b731-e33f18fabb8d",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Why would we allow both `*` and `*/*` in validation?",
        "createdAt" : "2017-05-31T17:56:21Z",
        "updatedAt" : "2017-06-05T23:12:49Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "a4c4f4d7-37d7-4c8b-9feb-8eb566fc6204",
        "parentId" : "5ba7995b-ea23-433e-b731-e33f18fabb8d",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "(allow in the same array)?",
        "createdAt" : "2017-05-31T17:56:47Z",
        "updatedAt" : "2017-06-05T23:12:49Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "ad90f221-c624-47a9-a2bd-fe3e51f66c07",
        "parentId" : "5ba7995b-ea23-433e-b731-e33f18fabb8d",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "No, we don't allow `*` and `*/*` in one array, but we allow `*` and `x/*`, because `*` means any resource without subresource, `x/*` means any subresource of x. ",
        "createdAt" : "2017-05-31T18:14:22Z",
        "updatedAt" : "2017-06-05T23:12:49Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "c09bb098-9737-4045-a668-d1dfd55466c7",
        "parentId" : "5ba7995b-ea23-433e-b731-e33f18fabb8d",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Right, so in one array if we see either of these (we don't support sub resources in initialization right now because it may not make sense) we know that the base resource is supported.",
        "createdAt" : "2017-05-31T18:57:03Z",
        "updatedAt" : "2017-06-05T23:12:49Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "6ec90260-6a38-4fdb-88a7-2e96a396b9f7",
        "parentId" : "5ba7995b-ea23-433e-b731-e33f18fabb8d",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Yes, but `*` is not guaranteed to be resources[0], could be anywhere in the array.",
        "createdAt" : "2017-05-31T19:29:42Z",
        "updatedAt" : "2017-06-05T23:12:49Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "dd628404-ccdb-4882-b842-d199234bc22a",
        "parentId" : "5ba7995b-ea23-433e-b731-e33f18fabb8d",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I thought if you specify \"*\" then you can only have one entry?\r\n\r\n```\r\n\tif len(rule.Resources) > 1 && hasWildcard(rule.Resources) {\r\n\t\tallErrors = append(allErrors, field.Invalid(fldPath.Child(\"Resources\"), rule.Resources, \"if '*' is present, must not specify other resources\"))\r\n\t}\r\n```\r\n?",
        "createdAt" : "2017-05-31T20:08:12Z",
        "updatedAt" : "2017-06-05T23:12:49Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "76e124c4-d691-452a-88af-72d4d14125ab",
        "parentId" : "5ba7995b-ea23-433e-b731-e33f18fabb8d",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Sorry, i thought my fix was merged: https://github.com/kubernetes/kubernetes/pull/46551",
        "createdAt" : "2017-05-31T20:40:20Z",
        "updatedAt" : "2017-06-05T23:12:49Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "772ab8e1b4163c17d285a2789321762a8f2dc9f3",
    "line" : 338,
    "diffHunk" : "@@ -1,1 +368,372 @@\nfunc hasResource(resources []string, resource string) bool {\n\tif resources[0] == \"*\" || resources[0] == \"*/*\" {\n\t\treturn true\n\t}"
  },
  {
    "id" : "23de7321-698e-4a32-9778-ff3e316d57e4",
    "prId" : 46672,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46672#pullrequestreview-41669049",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6305099-f6bd-4d2e-ab34-bbe7f02723bf",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "In a followup we should reconcile this with the rule matcher the webhook system uses -- I like that one better ;)",
        "createdAt" : "2017-06-02T00:20:46Z",
        "updatedAt" : "2017-06-05T23:12:49Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "772ab8e1b4163c17d285a2789321762a8f2dc9f3",
    "line" : 286,
    "diffHunk" : "@@ -1,1 +316,320 @@// findInitializers returns the list of initializer names that apply to a config. It returns an empty list\n// if no initializers apply.\nfunc findInitializers(initializers *v1alpha1.InitializerConfiguration, gvr schema.GroupVersionResource) []string {\n\tvar names []string\n\tfor _, init := range initializers.Initializers {"
  },
  {
    "id" : "a409269b-254c-46de-944f-ab8a9f60a2a7",
    "prId" : 46672,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46672#pullrequestreview-42180603",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb0ca924-41b2-44c3-977f-11ba247a115c",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Why can't we just make the `defaultInterval` and `defaultFailureThreshold` configurable? https://github.com/kubernetes/kubernetes/blob/master/pkg/kubeapiserver/admission/configuration/configuration_manager.go#L29-L30",
        "createdAt" : "2017-06-05T22:37:10Z",
        "updatedAt" : "2017-06-05T23:12:49Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "2722ac22-d317-4ce1-97f8-0a824819658d",
        "parentId" : "bb0ca924-41b2-44c3-977f-11ba247a115c",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This hides the first failure via blocking to deal with races on startup.  It could be part of CM, but it's a different guard.",
        "createdAt" : "2017-06-05T22:49:48Z",
        "updatedAt" : "2017-06-05T23:12:49Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "1dc89781-4474-4a9c-892d-1117365aef28",
        "parentId" : "bb0ca924-41b2-44c3-977f-11ba247a115c",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I see. In that case, can we let the CM count how long it has been running and return a specific \"not initialized\" error if it's been up for less than 4.5s, and here we only run the retry loop if CM returns the \"not initialized\" error? The current implementation retries even after the startup phase.\r\n\r\n~~I'm thinking if the same logic is needed by the genearic admission controller. I guess it's not necessary, so i'm fine with the TODO.~~",
        "createdAt" : "2017-06-05T23:10:13Z",
        "updatedAt" : "2017-06-05T23:34:19Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "55b1f527-e348-4d58-a376-9b2eb0887c9e",
        "parentId" : "bb0ca924-41b2-44c3-977f-11ba247a115c",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I'll add a TODO - I expect us to refine this and if necessary we can patch in 1.7 to be cleaner.",
        "createdAt" : "2017-06-05T23:23:02Z",
        "updatedAt" : "2017-06-05T23:23:03Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "6a191349-6699-4eb9-8f78-aaa48ae1a0c5",
        "parentId" : "bb0ca924-41b2-44c3-977f-11ba247a115c",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "TODO is fine.",
        "createdAt" : "2017-06-05T23:34:14Z",
        "updatedAt" : "2017-06-05T23:34:14Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "772ab8e1b4163c17d285a2789321762a8f2dc9f3",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +71,75 @@//   refresh loop.\nconst (\n\tretryTemporaryConfigFailures = 8\n\tretryTemporaryConfigInterval = 550 * time.Millisecond\n)"
  },
  {
    "id" : "3579c4a8-7f09-43e0-8011-02de94c61f70",
    "prId" : 36721,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36721#pullrequestreview-40402757",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "523b70ac-2981-433f-a4f4-4f1595356040",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "~~i'll provide a merger to merge Rules by GroupResource in https://github.com/kubernetes/kubernetes/pull/46302.~~\r\nDaniel had started something in his PR.",
        "createdAt" : "2017-05-24T22:36:50Z",
        "updatedAt" : "2017-06-03T02:09:49Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "ebaefeb6-2286-4c40-870b-442dd9b95b01",
        "parentId" : "523b70ac-2981-433f-a4f4-4f1595356040",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "My PR has a rule checker but it checks operations too... https://github.com/kubernetes/kubernetes/pull/46388",
        "createdAt" : "2017-05-25T22:02:25Z",
        "updatedAt" : "2017-06-03T02:09:49Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "b993f7d303aa72961d6b0a32a42e7fcc5cb26190",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +52,56 @@func NewInitializer() admission.Interface {\n\treturn &initializer{\n\t\tresources: map[schema.GroupResource]initializerOptions{\n\t\t//schema.GroupResource{Resource: \"pods\"}: {Initializers: []string{\"Test\"}},\n\t\t},"
  },
  {
    "id" : "c1fd8567-ba0c-49d5-9950-5030efb8df42",
    "prId" : 36721,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36721#pullrequestreview-41283971",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8722205f-8c38-4f95-98ac-79bd45f4fa24",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "copypasta",
        "createdAt" : "2017-05-31T14:27:28Z",
        "updatedAt" : "2017-06-03T02:09:49Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "64f1ffb6-eaca-4e34-89d3-0cf7cb691a8b",
        "parentId" : "8722205f-8c38-4f95-98ac-79bd45f4fa24",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Fixed in https://github.com/kubernetes/kubernetes/issues/46672 which is the follow up - I'll fix the e2e error there as well.",
        "createdAt" : "2017-05-31T16:28:52Z",
        "updatedAt" : "2017-06-03T02:09:49Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "b993f7d303aa72961d6b0a32a42e7fcc5cb26190",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +49,53 @@}\n\n// NewAlwaysAdmit creates a new always admit admission handler\nfunc NewInitializer() admission.Interface {\n\treturn &initializer{"
  }
]