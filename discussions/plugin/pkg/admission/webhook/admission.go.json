[
  {
    "id" : "8103f93a-a4b9-4c8a-b5a4-fdf65414e79d",
    "prId" : 54414,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54414#pullrequestreview-71665297",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1c3f5a3-7d1a-4b5b-8fbf-5b0d314789c3",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Given this auth model we'd need to change the API to not use k8s services--this wouldn't work for something hosted outside of the cluster. Another PR though.",
        "createdAt" : "2017-10-24T20:42:04Z",
        "updatedAt" : "2017-10-24T21:09:38Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd4ab3e061ff44515d5107e1ae3e9d6469d956aa",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +280,284 @@\nfunc (a *GenericAdmissionWebhook) hookClient(h *v1alpha1.ExternalAdmissionHook) (*rest.RESTClient, error) {\n\tserverName := h.ClientConfig.Service.Name + \".\" + h.ClientConfig.Service.Namespace + \".svc\"\n\tu, err := a.serviceResolver.ResolveEndpoint(h.ClientConfig.Service.Namespace, h.ClientConfig.Service.Name)\n\tif err != nil {"
  },
  {
    "id" : "4f4049b3-9792-406f-929f-6ffc1d31c2a3",
    "prId" : 54156,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54156#pullrequestreview-70303559",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f80cdb5-1091-4061-9d4a-ab2906185584",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Where do you set the `ServerName` and `CABundle`?",
        "createdAt" : "2017-10-18T17:54:03Z",
        "updatedAt" : "2017-10-19T13:54:26Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "8356b805-7a81-4ca4-8d8f-717a56537ea4",
        "parentId" : "8f80cdb5-1091-4061-9d4a-ab2906185584",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Where do you set the ServerName and CABundle?\r\n\r\nmissed them.  Put them just below.",
        "createdAt" : "2017-10-18T18:02:46Z",
        "updatedAt" : "2017-10-19T13:54:26Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "0859798e8e278ec382dcbeb77914f40bf2c78a2c",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +273,277 @@\n\t// TODO: cache these instead of constructing one each time\n\tcfg := rest.CopyConfig(a.restClientConfig)\n\tcfg.Host = u.Host\n\tcfg.APIPath = path.Join(u.Path, h.ClientConfig.URLPath)"
  },
  {
    "id" : "74f95160-eb53-4666-b10d-a9a905ecfdc0",
    "prId" : 53823,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53823#pullrequestreview-70240310",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43aa7527-1a11-45c1-a5a5-21b7ee9e32ac",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "nit: Rejected",
        "createdAt" : "2017-10-18T14:53:50Z",
        "updatedAt" : "2017-10-18T18:28:09Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "f81b6004dedfa928dc7fece5de6fa365ac8e4ea4",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +213,217 @@\t\t\t}\n\n\t\t\tglog.Warningf(\"rejected by webhook %v %t: %v\", hook.Name, err, err)\n\t\t\terrCh <- err\n\t\t}(&hooks[i])"
  },
  {
    "id" : "9d8828c0-227c-42d7-98f7-62fc452057dc",
    "prId" : 53823,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53823#pullrequestreview-70244452",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdd87a05-c957-492d-95d4-0d7fff73cadf",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "while still in alpha, we should definitely make the default (nil) fail closed. you should have to explicitly request to fail open",
        "createdAt" : "2017-10-18T15:04:26Z",
        "updatedAt" : "2017-10-18T18:28:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f81b6004dedfa928dc7fece5de6fa365ac8e4ea4",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +199,203 @@\t\t\t}\n\n\t\t\tignoreClientCallFailures := hook.FailurePolicy == nil || *hook.FailurePolicy == v1alpha1.Ignore\n\t\t\tif callErr, ok := err.(*ErrCallingWebhook); ok {\n\t\t\t\tif ignoreClientCallFailures {"
  },
  {
    "id" : "829fb53a-e7fd-4bb0-980b-e37952c58c23",
    "prId" : 53611,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53611#pullrequestreview-68192117",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe751c54-462c-4ede-9c5c-e93a878bbb40",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "shouldn't this panic for nil?",
        "createdAt" : "2017-10-10T07:54:55Z",
        "updatedAt" : "2017-10-10T07:54:55Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa96700b76de3df759b3dddb747da575c909acec",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +129,133 @@// SetScheme sets a serializer(NegotiatedSerializer) which is derived from the scheme\nfunc (a *GenericAdmissionWebhook) SetScheme(scheme *runtime.Scheme) {\n\tif scheme != nil {\n\t\ta.negotiatedSerializer = serializer.NegotiatedSerializerWrapper(runtime.SerializerInfo{\n\t\t\tSerializer: serializer.NewCodecFactory(scheme).LegacyCodec(admissionv1alpha1.SchemeGroupVersion),"
  },
  {
    "id" : "843f34da-3df5-4d78-888e-6c0b3ef7c102",
    "prId" : 46808,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46808#pullrequestreview-42491073",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44c3f717-30d6-424f-a339-4107c8a4ae09",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Don't like this-- is there not a Run interface for the plugins? Don't want to accumulate these (and their error messages) in e.g. integration tests.",
        "createdAt" : "2017-06-07T00:00:15Z",
        "updatedAt" : "2017-06-14T17:20:41Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "88a4cf31-a5e1-4527-96a9-e4e6c15eb337",
        "parentId" : "44c3f717-30d6-424f-a339-4107c8a4ae09",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "We can add a runner here: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/admission/plugins.go#L160. Probably not in this PR though.",
        "createdAt" : "2017-06-07T02:30:20Z",
        "updatedAt" : "2017-06-14T17:20:41Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "8dbeee50c7f93522a425e54dc8566a434e221be5",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +131,135 @@\t\treturn fmt.Errorf(\"the GenericAdmissionWebhook admission plugin requires a Kubernetes client to be provided\")\n\t}\n\tgo a.hookSource.Run(wait.NeverStop)\n\treturn nil\n}"
  },
  {
    "id" : "f380e7d4-04db-4483-8f90-203c0d3e42bf",
    "prId" : 46388,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46388#pullrequestreview-41068142",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58e8d3fa-2079-49a5-899e-bff3179d8805",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Going to be really expensive to do this on every single admission call.  Certainly can't afford to do it at scale.  How high scale are you planning on using this at?  I would say open a bug for this and we can fix it post dcut.",
        "createdAt" : "2017-05-30T16:32:22Z",
        "updatedAt" : "2017-05-31T23:38:54Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "28dd0308-4ebc-4416-92bc-c459fac59a9b",
        "parentId" : "58e8d3fa-2079-49a5-899e-bff3179d8805",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This is alpha. So I think high scale isn't super important. If this is too limiting then we can fix it as a bug.",
        "createdAt" : "2017-05-30T20:40:43Z",
        "updatedAt" : "2017-05-31T23:38:54Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "c46e231fc7c085accc19e729069282d7f7287d7b",
    "line" : 207,
    "diffHunk" : "@@ -1,1 +205,209 @@\n\t// TODO: cache these instead of constructing one each time\n\tcfg := &rest.Config{\n\t\tHost:    u.Host,\n\t\tAPIPath: u.Path,"
  }
]