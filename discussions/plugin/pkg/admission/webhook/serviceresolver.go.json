[
  {
    "id" : "333e5d18-ddee-4713-902a-e09258505e1a",
    "prId" : 52673,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52673#pullrequestreview-70375424",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f6dee30-859d-422e-8f29-11775396c55b",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "How does `https://ross.andromeda.svc` work? Will the dns in the cluster resolve it?",
        "createdAt" : "2017-10-18T18:26:03Z",
        "updatedAt" : "2017-10-18T18:26:03Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "15b5d5d7-15fa-487e-90ee-85f99d838d26",
        "parentId" : "1f6dee30-859d-422e-8f29-11775396c55b",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> How does https://ross.andromeda.svc work? Will the dns in the cluster resolve it?\r\n\r\nYes. That works everywhere except kube-apiserver when running on GKE. We've made the easy path easy, and the hard path (kube-apiserver on GKE) possible.",
        "createdAt" : "2017-10-18T18:41:39Z",
        "updatedAt" : "2017-10-18T18:41:39Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "1172b6f6-5378-4865-ac0a-9c79b3bc4bba",
        "parentId" : "1f6dee30-859d-422e-8f29-11775396c55b",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Oh, so does this close https://github.com/kubernetes/kubernetes/issues/53825?",
        "createdAt" : "2017-10-18T22:13:36Z",
        "updatedAt" : "2017-10-18T22:13:37Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e2c7fdd8806d65dc384687c5e365619f9bd2df8",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@// note that the name and namespace are required and by default all created addresses use HTTPS scheme.\n// for example:\n//  name=ross namespace=andromeda resolves to https://ross.andromeda.svc\nfunc (sr defaultServiceResolver) ResolveEndpoint(namespace, name string) (*url.URL, error) {\n\tif len(name) == 0 || len(namespace) == 0 {"
  }
]