[
  {
    "id" : "60ec2ac3-073a-43d6-9602-f53b00d04b80",
    "prId" : 81072,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81072#pullrequestreview-277942045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6464ee4-8600-4b74-bda5-cebfb0635f9a",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Merge tolerations is incomplete, since it only keys off of key & effect, but it's valid to have different values and/or operators. I suggest using a custom method here, and then following up with a separate PR to fix MergeTolerations (if you're up for it).\r\n\r\nOn a related note, we need to decide what to do if there is a conflict (same {key, op, val, effect} and different `TolerationSeconds`). I think options are: use the pod value, return an error (reject the pod), or update the API validation to forbid setting TolerationSeconds on RuntimeClass (punt the problem)",
        "createdAt" : "2019-08-14T00:34:34Z",
        "updatedAt" : "2019-08-22T01:07:11Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "42d8abdf-803f-4546-8644-f0f1e6f1da0c",
        "parentId" : "d6464ee4-8600-4b74-bda5-cebfb0635f9a",
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "The PodRestrictionTolerations use the same utility function, is it on purpose to override the toleration in these situations?",
        "createdAt" : "2019-08-14T08:34:17Z",
        "updatedAt" : "2019-08-22T01:07:11Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      },
      {
        "id" : "bbe336d7-7527-4a37-ac2f-d5a0cc545338",
        "parentId" : "d6464ee4-8600-4b74-bda5-cebfb0635f9a",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "OK, I think it makes sense to be consistent and use MergeTolerations here, but I think there is a bug with merge tolerations. Let's stick with this method, and I'll send a PR to fix it at the source.",
        "createdAt" : "2019-08-20T19:36:02Z",
        "updatedAt" : "2019-08-22T01:07:11Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "da594499-368a-42ec-b356-e737eef44c17",
        "parentId" : "d6464ee4-8600-4b74-bda5-cebfb0635f9a",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Fixed in https://github.com/kubernetes/kubernetes/pull/81732",
        "createdAt" : "2019-08-21T17:11:02Z",
        "updatedAt" : "2019-08-22T01:07:11Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "5732c6370ac3f449c2b3416b30f31e67e4874de4",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +202,206 @@\t}\n\n\tnewTolerations := tolerations.MergeTolerations(pod.Spec.Tolerations, nodeScheduling.Tolerations)\n\n\tpod.Spec.NodeSelector = newNodeSelector"
  },
  {
    "id" : "5cfde044-a6ce-43fa-9bf1-e6ec913df7f5",
    "prId" : 81072,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81072#pullrequestreview-274629899",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92840ca4-b7c8-4c34-ad2c-97c5c6a854a7",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Could be nil",
        "createdAt" : "2019-08-14T00:44:18Z",
        "updatedAt" : "2019-08-22T01:07:11Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "74ed0b63-2bd1-4e70-8e29-e05dab3f5f62",
        "parentId" : "92840ca4-b7c8-4c34-ad2c-97c5c6a854a7",
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "done",
        "createdAt" : "2019-08-14T01:18:53Z",
        "updatedAt" : "2019-08-22T01:07:11Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "5732c6370ac3f449c2b3416b30f31e67e4874de4",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +190,194 @@\n\truntimeNodeSelector := nodeScheduling.NodeSelector\n\tnewNodeSelector := pod.Spec.NodeSelector\n\tif newNodeSelector == nil {\n\t\tnewNodeSelector = runtimeNodeSelector"
  },
  {
    "id" : "c059e5d6-6e64-4d8b-a8ba-5452faef20e8",
    "prId" : 81072,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81072#pullrequestreview-277393534",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ab0c118-f9f8-4914-8778-66646033fc50",
        "parentId" : null,
        "authorId" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "body" : "@tallclair - for conflicts I'd prefer us rejecting the pod",
        "createdAt" : "2019-08-14T17:18:04Z",
        "updatedAt" : "2019-08-22T01:07:11Z",
        "lastEditedBy" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "tags" : [
        ]
      },
      {
        "id" : "6ea1e66f-be00-4d2c-b5ae-cb677b862ce4",
        "parentId" : "6ab0c118-f9f8-4914-8778-66646033fc50",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "I actually don't think there are conflicts. If 2 tolerations \"conflict\", then both should be included. The logic for tolerations is a union of all tolerations. I have a fix to MergeTolerations for this (I'll send it out tomorrow).",
        "createdAt" : "2019-08-21T01:17:21Z",
        "updatedAt" : "2019-08-22T01:07:11Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "5732c6370ac3f449c2b3416b30f31e67e4874de4",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +202,206 @@\t}\n\n\tnewTolerations := tolerations.MergeTolerations(pod.Spec.Tolerations, nodeScheduling.Tolerations)\n\n\tpod.Spec.NodeSelector = newNodeSelector"
  },
  {
    "id" : "761362f4-57bb-4375-9a3f-276cea750552",
    "prId" : 81072,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81072#pullrequestreview-276722614",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41186939-2940-4856-9c79-3b521f8920a3",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "nit: don't use a named return variable\r\n```suggestion\r\nfunc setScheduling(a admission.Attributes, pod *api.Pod, runtimeClass *v1beta1.RuntimeClass) error {\r\n```",
        "createdAt" : "2019-08-14T18:48:35Z",
        "updatedAt" : "2019-08-22T01:07:11Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "5aa3f834-1cb8-477d-945c-ecb1c63b0d45",
        "parentId" : "41186939-2940-4856-9c79-3b521f8920a3",
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "This whole file uses a named return variable. If this is necessary, I could do it in a follow-up PR, WDYT?",
        "createdAt" : "2019-08-19T17:52:00Z",
        "updatedAt" : "2019-08-22T01:07:11Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      },
      {
        "id" : "4fd68b43-60c1-43d3-8a7e-170ef4e3e2b7",
        "parentId" : "41186939-2940-4856-9c79-3b521f8920a3",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "sgtm",
        "createdAt" : "2019-08-19T18:01:57Z",
        "updatedAt" : "2019-08-22T01:07:11Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "5732c6370ac3f449c2b3416b30f31e67e4874de4",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +178,182 @@}\n\nfunc setScheduling(a admission.Attributes, pod *api.Pod, runtimeClass *v1beta1.RuntimeClass) (err error) {\n\tif runtimeClass == nil || runtimeClass.Scheduling == nil {\n\t\treturn nil"
  },
  {
    "id" : "b74d3799-6db4-4612-8972-5f3052b8ac23",
    "prId" : 79565,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79565#pullrequestreview-257060087",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a130136b-dd4a-4b9c-bd53-43dcb1974a87",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Mind fixing the comment on line 130 while you're here?",
        "createdAt" : "2019-07-02T17:58:53Z",
        "updatedAt" : "2019-07-11T00:33:17Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "1a074b78-d9ba-4a52-a035-cef9bbcbddcd",
        "parentId" : "a130136b-dd4a-4b9c-bd53-43dcb1974a87",
        "authorId" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "body" : "Or, see the following PR (feel free to cherry-pick):\r\nhttps://github.com/kubernetes/kubernetes/pull/79621",
        "createdAt" : "2019-07-02T18:04:16Z",
        "updatedAt" : "2019-07-11T00:33:17Z",
        "lastEditedBy" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "tags" : [
        ]
      }
    ],
    "commit" : "059243fbd2c715d32f32d30d2102349546b5a297",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +135,139 @@\tif !ok {\n\t\treturn nil, nil, apierrors.NewBadRequest(\"Resource was marked with kind Pod but was unable to be converted\")\n\t}\n\n\t// get RuntimeClass object"
  },
  {
    "id" : "bfa28690-a46d-4b0c-a7e8-274ab66c080a",
    "prId" : 78484,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78484#pullrequestreview-250756814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1833f09-9011-40f8-bec9-48f494b492a6",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Client is unused, remove this method (and the client field)",
        "createdAt" : "2019-06-14T20:51:33Z",
        "updatedAt" : "2019-06-27T22:52:53Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "58c780f7-e17c-465b-86ee-1f12fd92da2a",
        "parentId" : "d1833f09-9011-40f8-bec9-48f494b492a6",
        "authorId" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "body" : "ACK.",
        "createdAt" : "2019-06-17T21:33:24Z",
        "updatedAt" : "2019-06-27T22:52:53Z",
        "lastEditedBy" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "tags" : [
        ]
      }
    ],
    "commit" : "824a9e592a3604e84ff972c49374d749568c1931",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +69,73 @@\tr.SetReadyFunc(runtimeClassInformer.Informer().HasSynced)\n\tr.runtimeClassLister = runtimeClassInformer.Lister()\n}\n\n// ValidateInitialization implements the WantsExternalKubeInformerFactory interface."
  },
  {
    "id" : "fa27abde-dc4d-4843-b8bd-0c18e9b8955d",
    "prId" : 78484,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78484#pullrequestreview-250789391",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77e53a32-0d29-4a6e-a90f-b6438b4fa47d",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "nit: slight preference to just inline this.",
        "createdAt" : "2019-06-14T21:05:11Z",
        "updatedAt" : "2019-06-27T22:52:53Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "dd6c465c-47e5-4009-8177-d808dff2da7a",
        "parentId" : "77e53a32-0d29-4a6e-a90f-b6438b4fa47d",
        "authorId" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "body" : "done.",
        "createdAt" : "2019-06-17T23:07:28Z",
        "updatedAt" : "2019-06-27T22:52:53Z",
        "lastEditedBy" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "tags" : [
        ]
      }
    ],
    "commit" : "824a9e592a3604e84ff972c49374d749568c1931",
    "line" : 207,
    "diffHunk" : "@@ -1,1 +205,209 @@}\n\nfunc shouldIgnore(attributes admission.Attributes) bool {\n\t// Ignore all calls to subresources or resources other than pods.\n\tif len(attributes.GetSubresource()) != 0 || attributes.GetResource().GroupResource() != api.Resource(\"pods\") {"
  },
  {
    "id" : "dac1e3ed-750c-4902-8455-39ae1cd41c60",
    "prId" : 78484,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78484#pullrequestreview-250880090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfc2bc84-f302-44f5-ac13-82e611eaebfd",
        "parentId" : null,
        "authorId" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "body" : "+1 on this ",
        "createdAt" : "2019-06-18T17:08:59Z",
        "updatedAt" : "2019-06-27T22:52:53Z",
        "lastEditedBy" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "824a9e592a3604e84ff972c49374d749568c1931",
    "line" : 200,
    "diffHunk" : "@@ -1,1 +198,202 @@\t\t// If RuntimeClass with Overhead is not defined but an Overhead is set for pod, reject the pod\n\t\tif pod.Spec.Overhead != nil {\n\t\t\treturn admission.NewForbidden(a, fmt.Errorf(\"pod rejected: Pod Overhead set without corresponding RuntimeClass defined Overhead\"))\n\t\t}\n\t}"
  },
  {
    "id" : "b90f2437-376d-456a-b84f-641146af5298",
    "prId" : 78484,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78484#pullrequestreview-251868783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b73da43-51c0-4fad-89b9-9b7187138d11",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "nit: extra line break between stdlib packages and k8s packages",
        "createdAt" : "2019-06-19T17:56:57Z",
        "updatedAt" : "2019-06-27T22:52:53Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "824a9e592a3604e84ff972c49374d749568c1931",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +24,28 @@import (\n\t\"fmt\"\n\t\"io\"\n\n\tv1beta1 \"k8s.io/api/node/v1beta1\""
  },
  {
    "id" : "d55434e7-3cc2-4e1c-8f9b-5bb7cdab0f20",
    "prId" : 78484,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78484#pullrequestreview-251868783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2d1116e-262e-43cf-a2bc-f6bbe7b9b92c",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Add comments on exported methods to appease golint.",
        "createdAt" : "2019-06-19T18:00:23Z",
        "updatedAt" : "2019-06-27T22:52:53Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "824a9e592a3604e84ff972c49374d749568c1931",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +65,69 @@\n// SetExternalKubeInformerFactory implements the WantsExternalKubeInformerFactory interface.\nfunc (r *RuntimeClass) SetExternalKubeInformerFactory(f informers.SharedInformerFactory) {\n\truntimeClassInformer := f.Node().V1beta1().RuntimeClasses()\n\tr.SetReadyFunc(runtimeClassInformer.Informer().HasSynced)"
  },
  {
    "id" : "6d2facc3-b291-409c-9812-4b61b7e7037d",
    "prId" : 78484,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78484#pullrequestreview-255947985",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "597226fe-37af-4aac-9b12-1206839c5b9a",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Comment needs fixing",
        "createdAt" : "2019-06-28T19:51:56Z",
        "updatedAt" : "2019-06-28T20:05:32Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "824a9e592a3604e84ff972c49374d749568c1931",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +128,132 @@}\n\n// admissionAction handles Admit and Validate phases of admission, switching based on the admissionPhase parameter\nfunc (r *RuntimeClass) prepareObjects(attributes admission.Attributes) (pod *api.Pod, runtimeClass *v1beta1.RuntimeClass, err error) {\n"
  },
  {
    "id" : "1a73d79d-72ba-4c1e-9bf1-bbbf55e166bf",
    "prId" : 78484,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78484#pullrequestreview-256047357",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cab5a5a-697f-402b-93cf-ea0f4885e14f",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "pod argument is unused\r\n\r\nnit: this is only called from prepare objects, so I'd just inline it.",
        "createdAt" : "2019-06-28T19:54:30Z",
        "updatedAt" : "2019-06-28T20:05:32Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "56a4b6b4-9ce1-4981-b546-fdeb03003a01",
        "parentId" : "0cab5a5a-697f-402b-93cf-ea0f4885e14f",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Handled in my PR #79565.",
        "createdAt" : "2019-06-29T19:09:47Z",
        "updatedAt" : "2019-06-29T19:19:48Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "824a9e592a3604e84ff972c49374d749568c1931",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +148,152 @@// getRuntimeClass will return a reference to the RuntimeClass object if it is found. If it cannot be found, or a RuntimeClassName\n// is not provided in the pod spec, *node.RuntimeClass returned will be nil\nfunc (r *RuntimeClass) getRuntimeClass(pod *api.Pod, runtimeClassName *string) (runtimeClass *v1beta1.RuntimeClass, err error) {\n\n\truntimeClass = nil"
  },
  {
    "id" : "bb645ba1-34a1-4b18-8792-f1ef07a7ba92",
    "prId" : 78484,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78484#pullrequestreview-255947985",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2c4e6d7-a6e3-4003-a00a-18ab29b31d61",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "nit: prefer:\r\n\r\n```suggestion\r\nif runtimeClass == nil || runtimeclass.Overhead == nil {\r\n  return nil\r\n}\r\n\r\n// ...\r\n```",
        "createdAt" : "2019-06-28T19:55:34Z",
        "updatedAt" : "2019-06-28T20:05:32Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "824a9e592a3604e84ff972c49374d749568c1931",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +161,165 @@func setOverhead(a admission.Attributes, pod *api.Pod, runtimeClass *v1beta1.RuntimeClass) (err error) {\n\n\tif runtimeClass != nil {\n\t\tif runtimeClass.Overhead != nil {\n"
  },
  {
    "id" : "22f9e5ed-fe3f-40c4-866f-5c2882c0487b",
    "prId" : 78484,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78484#pullrequestreview-256047357",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c51c51ae-f736-42af-853f-c097ef617897",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "I think this should be moved ahead of call to prepareObjects.\r\nIf the feature gate is disabled, pod, runtimeClass would not be used.",
        "createdAt" : "2019-06-29T18:58:46Z",
        "updatedAt" : "2019-06-29T19:13:49Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "824a9e592a3604e84ff972c49374d749568c1931",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +114,118 @@\t}\n\n\tif utilfeature.DefaultFeatureGate.Enabled(features.PodOverhead) {\n\t\terr = validateOverhead(attributes, pod, runtimeClass)\n\t}"
  }
]