[
  {
    "id" : "838bbe76-a6c2-4c1f-ae46-394e46305d38",
    "prId" : 1981,
    "prUrl" : "https://github.com/typelevel/cats/pull/1981#pullrequestreview-75765364",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5424dc38-5378-4828-bc0d-67dae2998338",
        "parentId" : null,
        "authorId" : "4ba044d4-c7ec-4557-a24c-1ac7e3efc057",
        "body" : "This could/should extend `FunctorLaws[F]` and assert some things about the compatibility of `UnorderedTraverse` and `Functor`; for instance, I would expect `unorderedSequence` to  be `unorderedTraverse` on identity (which assumes that `Eq` for these instances respects unorderedness if it's not also a `Traverse`, I think)",
        "createdAt" : "2017-11-09T15:18:28Z",
        "updatedAt" : "2017-11-24T16:01:13Z",
        "lastEditedBy" : "4ba044d4-c7ec-4557-a24c-1ac7e3efc057",
        "tags" : [
        ]
      },
      {
        "id" : "779f64de-b49e-41f8-8f6d-b8b737bcbcd9",
        "parentId" : "5424dc38-5378-4828-bc0d-67dae2998338",
        "authorId" : "240add12-1fe5-499a-918c-053b1f46b348",
        "body" : "Hmmm, I'm not sure. That would imply that `Set` would be a valid `Functor` which I believe it is not. We could add a function like `unorderedMap` that's just `unorderedTraverse` with `Id`.\r\n\r\nThanks for your review by the way, it's been very helpful! :)",
        "createdAt" : "2017-11-10T11:05:54Z",
        "updatedAt" : "2017-11-24T16:01:13Z",
        "lastEditedBy" : "240add12-1fe5-499a-918c-053b1f46b348",
        "tags" : [
        ]
      },
      {
        "id" : "978af01f-ee34-4cc4-ae6d-eabb7ebbb830",
        "parentId" : "5424dc38-5378-4828-bc0d-67dae2998338",
        "authorId" : "4ba044d4-c7ec-4557-a24c-1ac7e3efc057",
        "body" : "No, you're right; I got a little bit overenthusiastic about drawing these parallels. \r\n\r\nI think `unorderedMap` is kinda dubious, because the difference isn't even lack of order (which is unobservable in `Functor#map` already!), but that the operation can \"drop\" values, losing fusion, and therefore isn't a (categorical) `Functor`. I don't know what laws for `unorderedMap` would be, other than \"it's the same as traversing with `Id`\".",
        "createdAt" : "2017-11-10T14:05:17Z",
        "updatedAt" : "2017-11-24T16:01:13Z",
        "lastEditedBy" : "4ba044d4-c7ec-4557-a24c-1ac7e3efc057",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea38cd60eb2846d92d6b9b425524433717ee9882",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +4,8 @@import cats.data.Nested\n\ntrait UnorderedTraverseLaws[F[_]] extends UnorderedFoldableLaws[F] {\n  implicit def F: UnorderedTraverse[F]\n"
  }
]