[
  {
    "id" : "ddfdd543-b070-4c59-8e8a-62c0a7fcc272",
    "prId" : 3203,
    "prUrl" : "https://github.com/typelevel/cats/pull/3203#pullrequestreview-330137656",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04ccdc47-ad65-4f16-a453-06183f90db1e",
        "parentId" : null,
        "authorId" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "body" : "hmmm, do you mind to comment here on how this fixes BC? not quite obvious to me. ",
        "createdAt" : "2019-12-10T20:48:05Z",
        "updatedAt" : "2019-12-10T21:17:18Z",
        "lastEditedBy" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "tags" : [
        ]
      },
      {
        "id" : "c58b178e-ce8e-4b21-8680-c410a42ad0ec",
        "parentId" : "04ccdc47-ad65-4f16-a453-06183f90db1e",
        "authorId" : "6943dbfe-856b-4f1b-bd04-dca0091e8291",
        "body" : "It's the same general problem and fix as in #3162â€”when you move a method from a trait to a super-trait, you no longer get the synthetic static method (the bridge method or forwarder or whatever) on the lower trait, which can cause problems in real code. Including an override in the lower trait fixes the issue.\r\n\r\nI can add a comment in the code when I'm back at my desktop. ",
        "createdAt" : "2019-12-10T20:54:22Z",
        "updatedAt" : "2019-12-10T21:17:18Z",
        "lastEditedBy" : "6943dbfe-856b-4f1b-bd04-dca0091e8291",
        "tags" : [
        ]
      }
    ],
    "commit" : "057fb8ecc05326105817c0974d7658c8cf278939",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +27,31 @@\n  override def adaptErrorRaise[A](e: E, f: E => E): IsEq[F[A]] =\n    F.adaptError(F.raiseError[A](e)) { case x => f(x) } <-> F.raiseError(f(e))\n}\n"
  }
]