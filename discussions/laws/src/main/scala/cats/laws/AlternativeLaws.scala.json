[
  {
    "id" : "a4559eff-f5a8-485c-8ae9-c649ba4fb586",
    "prId" : 225,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "428bde02-5d42-42ff-b8e2-e9c8219cbdd3",
        "parentId" : null,
        "authorId" : "66a3e1fe-d02b-4e16-badc-4e9980e148af",
        "body" : "Minor nitpick: could you prepend all laws with `alternative`? This way it is easier to see where these laws are coming from if `AlternativeLaws` is mixed into another law trait.\n",
        "createdAt" : "2015-02-21T09:14:42Z",
        "updatedAt" : "2015-02-25T03:11:56Z",
        "lastEditedBy" : "66a3e1fe-d02b-4e16-badc-4e9980e148af",
        "tags" : [
        ]
      }
    ],
    "commit" : "5cbebe1d802fbe2ffaab648ff5e55490cda00bce",
    "line" : null,
    "diffHunk" : "@@ -1,1 +10,14 @@\n  def alternativeRightAbsorption[A, B](ff: F[A => B]): IsEq[F[B]] =\n    (F.empty[A] apply ff) <-> F.empty[B]\n\n  def alternativeLeftDistributivity[A, B](fa: F[A], fa2: F[A], f: A => B): IsEq[F[B]] ="
  },
  {
    "id" : "8b5c1bcc-36b9-4624-8c07-b7fc8d8815e8",
    "prId" : 225,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "615c6ebf-00c3-487d-8d8f-a9e6a6c2b3ff",
        "parentId" : null,
        "authorId" : "e706d82a-117b-4df8-a082-5200de4da984",
        "body" : "What is `right distributivity`? where came from?\n\nit does not exists in Haskell, Scalaz https://hackage.haskell.org/package/base-4.8.0.0/docs/src/GHC-Base.html#Alternative\n\n```\n-- | A monoid on applicative functors.\n--\n-- If defined, 'some' and 'many' should be the least solutions\n-- of the equations:\n--\n-- * @some v = (:) '<$>' v '<*>' many v@\n--\n-- * @many v = some v '<|>' 'pure' []@\n```\n\nand `XorT` does not satisfy this law.\n- https://github.com/non/cats/pull/287\n- https://github.com/non/cats/commit/c11a1bfe880b4e445e85cd2c34579\n\nI think `right distributivity` is not necessary.\n",
        "createdAt" : "2015-05-06T18:38:20Z",
        "updatedAt" : "2015-05-06T19:22:42Z",
        "lastEditedBy" : "e706d82a-117b-4df8-a082-5200de4da984",
        "tags" : [
        ]
      }
    ],
    "commit" : "5cbebe1d802fbe2ffaab648ff5e55490cda00bce",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +16,20 @@\n  def alternativeRightDistributivity[A, B](fa: F[A], ff: F[A => B], fg: F[A => B]): IsEq[F[B]] =\n    (fa apply (ff |+| fg)) <-> ((fa apply ff) |+| (fa apply fg))\n\n}"
  }
]