[
  {
    "id" : "06a1f977-5041-465c-ba5a-0480988fb742",
    "prId" : 952,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9903a512-ee3a-4ca4-84be-ca46d925cb7e",
        "parentId" : null,
        "authorId" : "507becc8-343f-49eb-9c0b-58304a1630c2",
        "body" : "Would it be better to keep the JVM side at 100? Is there example builds where this has failed for lack of output when building the JVM side?\n",
        "createdAt" : "2016-04-18T20:23:51Z",
        "updatedAt" : "2016-04-18T20:23:51Z",
        "lastEditedBy" : "507becc8-343f-49eb-9c0b-58304a1630c2",
        "tags" : [
        ]
      },
      {
        "id" : "0f550513-65ff-42ea-ad14-3664c809fe7a",
        "parentId" : "9903a512-ee3a-4ca4-84be-ca46d925cb7e",
        "authorId" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "body" : "This is a fair question. When I wrote this my thought process was that these tests run (presumably with a different RNG seed) on every PR and every merge to master, so 50 samples should be plenty, especially given the general nature of cats. I thought this might just speed things up a bit. I don't have any strong opinions on this and am happy to change it if people would prefer.\n",
        "createdAt" : "2016-04-18T20:42:11Z",
        "updatedAt" : "2016-04-18T20:42:11Z",
        "lastEditedBy" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "tags" : [
        ]
      },
      {
        "id" : "a5ebd5f2-fff5-492e-9476-851f615ccd0b",
        "parentId" : "9903a512-ee3a-4ca4-84be-ca46d925cb7e",
        "authorId" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "body" : "@mikejcurry I'm going to go ahead and merge this PR to help make the build reliable. Feel free to open up a followup issue if you have any concerns about this lower number.\n",
        "createdAt" : "2016-04-18T21:04:06Z",
        "updatedAt" : "2016-04-18T21:04:06Z",
        "lastEditedBy" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "tags" : [
        ]
      },
      {
        "id" : "de2bac79-b9ee-4963-a4e8-a7efab957a7f",
        "parentId" : "9903a512-ee3a-4ca4-84be-ca46d925cb7e",
        "authorId" : "507becc8-343f-49eb-9c0b-58304a1630c2",
        "body" : "@ceedubs - I've no strong feelings. I just wanted to raise the question, and the build speed is a good argument as the cats end to end build has certainly gotten longer. I just wanted to raise the question. :-)\n",
        "createdAt" : "2016-04-18T22:45:48Z",
        "updatedAt" : "2016-04-18T22:45:48Z",
        "lastEditedBy" : "507becc8-343f-49eb-9c0b-58304a1630c2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e7b4ff4a9fcb7803d60c44f6b1c1e387b489887",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +14,18 @@   */\n  implicit def function1Eq[A, B](implicit A: Arbitrary[A], B: Eq[B]): Eq[A => B] = new Eq[A => B] {\n    val sampleCnt: Int = if (Platform.isJvm) 50 else 5\n\n    def eqv(f: A => B, g: A => B): Boolean = {"
  },
  {
    "id" : "1e325afb-76b4-486a-82d6-7bd6cc8be61e",
    "prId" : 232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cdc6e1b-e3ae-4279-af03-6afc8c9bf111",
        "parentId" : null,
        "authorId" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "body" : "Should this be defined in the `std` module instead of in laws?\n",
        "createdAt" : "2015-02-25T02:00:15Z",
        "updatedAt" : "2015-02-25T02:00:15Z",
        "lastEditedBy" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "tags" : [
        ]
      },
      {
        "id" : "d4fb264b-2009-4160-ad8b-1e2b1f12da65",
        "parentId" : "9cdc6e1b-e3ae-4279-af03-6afc8c9bf111",
        "authorId" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "body" : "Oh I see the issue is that `laws` currently doesn't depend on `std` does it?\n",
        "createdAt" : "2015-02-25T02:02:32Z",
        "updatedAt" : "2015-02-25T02:02:32Z",
        "lastEditedBy" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "tags" : [
        ]
      },
      {
        "id" : "85285308-87b7-4a6c-b43c-d0ffe51ccb19",
        "parentId" : "9cdc6e1b-e3ae-4279-af03-6afc8c9bf111",
        "authorId" : "66a3e1fe-d02b-4e16-badc-4e9980e148af",
        "body" : "That instance is required in `tests` but defined in `laws` because the `Eq[A => B]` instance was already there. I think it should ultimately come from `algebra.std`. Guess I need to open a PR there.\n\nI'd like to not hold up this PR by waiting until this instance appears in algebra.\n",
        "createdAt" : "2015-02-25T17:05:51Z",
        "updatedAt" : "2015-02-25T17:05:51Z",
        "lastEditedBy" : "66a3e1fe-d02b-4e16-badc-4e9980e148af",
        "tags" : [
        ]
      },
      {
        "id" : "022dcedd-6a45-4c26-9267-94bceefe0303",
        "parentId" : "9cdc6e1b-e3ae-4279-af03-6afc8c9bf111",
        "authorId" : "89a3e0e3-e301-4aa8-b150-74070eb5a619",
        "body" : "I agree that it's smart to define the instances we need here, and then remove them when algebra adds them.\n",
        "createdAt" : "2015-02-26T04:46:59Z",
        "updatedAt" : "2015-02-26T04:46:59Z",
        "lastEditedBy" : "89a3e0e3-e301-4aa8-b150-74070eb5a619",
        "tags" : [
        ]
      }
    ],
    "commit" : "361efc6bfa97c3018654218237e3e6434e5c6478",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +23,27 @@        A.eqv(x._1, y._1) && B.eqv(x._2, y._2)\n    }\n\n}"
  }
]