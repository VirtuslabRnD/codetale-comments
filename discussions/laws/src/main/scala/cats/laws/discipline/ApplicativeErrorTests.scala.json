[
  {
    "id" : "76a1b7fa-3f94-4a70-8213-ef69459b8578",
    "prId" : 1660,
    "prUrl" : "https://github.com/typelevel/cats/pull/1660#pullrequestreview-37624513",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "705ac51f-5452-43a6-84f5-22fd21f55aea",
        "parentId" : null,
        "authorId" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "body" : "good catch. ",
        "createdAt" : "2017-05-11T16:11:26Z",
        "updatedAt" : "2017-05-11T16:11:26Z",
        "lastEditedBy" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "tags" : [
        ]
      }
    ],
    "commit" : "51e4e6159f2d7c664aeb7864e4615817c9a696ed",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +47,51 @@        \"applicativeError handleError consistent with recover\" -> forAll(laws.handleErrorConsistentWithRecover[A] _),\n        \"applicativeError recover consistent with recoverWith\" -> forAll(laws.recoverConsistentWithRecoverWith[A] _),\n        \"applicativeError attempt consistent with attemptT\" -> forAll(laws.attemptConsistentWithAttemptT[A] _),\n        \"applicativeError attempt fromEither consistent with pure\" -> forAll(laws.attemptFromEitherConsistentWithPure[A] _)\n      )"
  }
]