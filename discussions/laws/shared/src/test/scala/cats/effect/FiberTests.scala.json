[
  {
    "id" : "b2865b11-d84e-4545-8795-c47dd07fd833",
    "prId" : 249,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/249#pullrequestreview-123554732",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c2005d3-2275-469c-b2b3-b04655de184f",
        "parentId" : null,
        "authorId" : "a680c99b-0d47-47f6-a175-cad1562111ac",
        "body" : "Is there a good generic way that could allow us generating and comparing `Fiber` taking  `cancel` into account?",
        "createdAt" : "2018-05-26T11:37:25Z",
        "updatedAt" : "2018-08-07T13:02:05Z",
        "lastEditedBy" : "a680c99b-0d47-47f6-a175-cad1562111ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "596533f4ef23c9c8f60a4639b47a07e1451c5761",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@class FiberTests extends BaseTestsSuite {\n  implicit def genFiber[A: Arbitrary : Cogen]: Arbitrary[Fiber[IO, A]] =\n    Arbitrary(genIO[A].map(io => Fiber(io, IO.unit)))\n\n  implicit def fiberEq[F[_] : Applicative, A](implicit FA: Eq[F[A]]): Eq[Fiber[F, A]] ="
  }
]