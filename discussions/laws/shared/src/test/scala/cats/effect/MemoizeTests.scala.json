[
  {
    "id" : "9636f290-afa8-4e63-99ca-825c9023c489",
    "prId" : 537,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/537#pullrequestreview-242018387",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c03de62-08aa-48b7-9c13-1cddbf1a6bff",
        "parentId" : null,
        "authorId" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "body" : "Is the difference between this and (2) the order of these cancellations?",
        "createdAt" : "2019-05-25T19:46:47Z",
        "updatedAt" : "2019-05-25T19:54:45Z",
        "lastEditedBy" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "tags" : [
        ]
      },
      {
        "id" : "0cda74ff-05c9-4870-b15f-91b1141124e3",
        "parentId" : "5c03de62-08aa-48b7-9c13-1cddbf1a6bff",
        "authorId" : "a5a514ff-cd89-45cb-bcc8-796f0fa2a445",
        "body" : "Yes, in one case the fiber canceling is the same that started the computation, whereas in the other there is a sort of \"transfer\" of the \"ownership\" of being the last subscriber remaining. A previous implementation I had (which was a bit simpler) worked in the former but not latter case",
        "createdAt" : "2019-05-25T23:26:18Z",
        "updatedAt" : "2019-05-25T23:26:18Z",
        "lastEditedBy" : "a5a514ff-cd89-45cb-bcc8-796f0fa2a445",
        "tags" : [
        ]
      }
    ],
    "commit" : "61c62f87650d5eb2d30b00e1083828e95e73f09d",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +150,154 @@      _ <- IO.sleep(100.millis)\n      _ <- fiber1.cancel\n      _ <- fiber2.cancel\n      _ <- IO.sleep(400.millis)\n      res <- completed.get"
  },
  {
    "id" : "838fae5f-eef1-4dce-b381-77ae65bdda67",
    "prId" : 537,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/537#pullrequestreview-242013658",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5c2bbb0-0e13-41b9-b903-84ef571b509f",
        "parentId" : null,
        "authorId" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "body" : "Style nit: I prefer to use `->` for associations, not for something you just happen to have two of.\r\n\r\n```suggestion\r\n    result.value shouldBe Some(Success((2 , 1)))\r\n```",
        "createdAt" : "2019-05-25T19:49:40Z",
        "updatedAt" : "2019-05-25T19:54:45Z",
        "lastEditedBy" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "tags" : [
        ]
      }
    ],
    "commit" : "61c62f87650d5eb2d30b00e1083828e95e73f09d",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +179,183 @@    val result = prog.unsafeToFuture()\n    ec.tick(500.millis)\n    result.value shouldBe Some(Success(2 -> 1))\n  }\n"
  },
  {
    "id" : "9def56cd-8459-4330-a5de-7a2ccc17a5f1",
    "prId" : 537,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/537#pullrequestreview-242016920",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80a4fed3-36e7-4066-831f-0c4fc9d31cfc",
        "parentId" : null,
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Rather than sleeping, can we use `Deferred[Unit]` here? It will yield a much more robust enforced sequencing mechanism.",
        "createdAt" : "2019-05-25T22:05:23Z",
        "updatedAt" : "2019-05-25T22:06:45Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      }
    ],
    "commit" : "61c62f87650d5eb2d30b00e1083828e95e73f09d",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +105,109 @@      _ <- IO.sleep(100.millis)\n      _ <- fiber.cancel\n      _ <- IO.sleep(300.millis)\n      res <- completed.get\n    } yield res"
  },
  {
    "id" : "4d836c7e-d754-4e2d-a24a-5890b095c14c",
    "prId" : 537,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/537#pullrequestreview-242016920",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0c10c57-633d-400b-8669-b07e9e0cd261",
        "parentId" : null,
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "…and here",
        "createdAt" : "2019-05-25T22:05:29Z",
        "updatedAt" : "2019-05-25T22:06:45Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      }
    ],
    "commit" : "61c62f87650d5eb2d30b00e1083828e95e73f09d",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +128,132 @@      _ <- fiber2.cancel\n      _ <- fiber1.cancel\n      _ <- IO.sleep(400.millis)\n      res <- completed.get\n    } yield res"
  },
  {
    "id" : "a981845e-d352-45be-8d55-355be085e7f4",
    "prId" : 537,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/537#pullrequestreview-242016920",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f399c4f-f6ff-4778-b2fe-d42863168ea7",
        "parentId" : null,
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "…and here",
        "createdAt" : "2019-05-25T22:05:39Z",
        "updatedAt" : "2019-05-25T22:06:45Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      }
    ],
    "commit" : "61c62f87650d5eb2d30b00e1083828e95e73f09d",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +152,156 @@      _ <- fiber2.cancel\n      _ <- IO.sleep(400.millis)\n      res <- completed.get\n    } yield res\n"
  },
  {
    "id" : "4d75fdb2-77dd-45e5-851e-d29d695a5986",
    "prId" : 537,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/537#pullrequestreview-242016920",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ab7c699-9f2e-4de4-9ff0-c24436815161",
        "parentId" : null,
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Indentation",
        "createdAt" : "2019-05-25T22:05:53Z",
        "updatedAt" : "2019-05-25T22:06:45Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      }
    ],
    "commit" : "61c62f87650d5eb2d30b00e1083828e95e73f09d",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +137,141 @@  }\n\n    testAsync(\"Memoized effects can be canceled when there are no other active subscribers (3)\") { implicit ec =>\n    implicit val cs = ec.contextShift[IO]\n    implicit val timer = ec.timer[IO]"
  },
  {
    "id" : "3866269b-9730-4951-a3b8-5efb523355e1",
    "prId" : 537,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/537#pullrequestreview-242016920",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5b5f026-04eb-4b3c-bc3e-8c267c021bac",
        "parentId" : null,
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "…and here",
        "createdAt" : "2019-05-25T22:06:12Z",
        "updatedAt" : "2019-05-25T22:06:45Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      }
    ],
    "commit" : "61c62f87650d5eb2d30b00e1083828e95e73f09d",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +192,196 @@     fiber1 <- memoized.start\n     _ <- IO.sleep(50.millis)\n     fiber2 <- memoized.start\n     _ <- IO.sleep(50.millis)\n     _ <- fiber1.cancel"
  }
]