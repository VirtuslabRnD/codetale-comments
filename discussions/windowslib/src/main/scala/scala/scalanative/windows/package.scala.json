[
  {
    "id" : "46615c0b-1fb2-495c-b1a2-e0814b07e265",
    "prId" : 2281,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/2281#pullrequestreview-671108284",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27e3a3b3-dc19-47bd-aa38-6898d4ff4a43",
        "parentId" : null,
        "authorId" : "ae189121-dea4-445f-87d0-303740ceff41",
        "body" : "Do these definitions really make sense as public members of the `windows` package? Do they correspond to types that are defined in Windows APIs and used everywhere?",
        "createdAt" : "2021-05-27T14:33:55Z",
        "updatedAt" : "2021-05-27T14:34:43Z",
        "lastEditedBy" : "ae189121-dea4-445f-87d0-303740ceff41",
        "tags" : [
        ]
      },
      {
        "id" : "ee7f4a0e-7918-44ee-bf2e-2d0043767746",
        "parentId" : "27e3a3b3-dc19-47bd-aa38-6898d4ff4a43",
        "authorId" : "19a5939c-9a4f-4d42-a7b3-56f0d7513d13",
        "body" : "In my opinion, they do make sense. Windows API uses only its self-defined types everywhere, they're listed on [this page](https://docs.microsoft.com/en-us/windows/win32/winprog/windows-data-types#pcwstr) \r\nSticking to their naming convention allows us to make our API more consistent and eliminates possible type-based bugs. \r\nHowever, if placing them in `windows` package is the main concern, we might move them to some object, eg. `windows.WinDef` (since they're defined in  file`WinDef.h`)",
        "createdAt" : "2021-05-28T09:24:44Z",
        "updatedAt" : "2021-05-28T09:24:44Z",
        "lastEditedBy" : "19a5939c-9a4f-4d42-a7b3-56f0d7513d13",
        "tags" : [
        ]
      },
      {
        "id" : "f0e2c450-ea0a-465e-a526-b1182e9f0faa",
        "parentId" : "27e3a3b3-dc19-47bd-aa38-6898d4ff4a43",
        "authorId" : "ae189121-dea4-445f-87d0-303740ceff41",
        "body" : "> In my opinion, they do make sense. Windows API uses only its self-defined types everywhere, they're listed on [this page](https://docs.microsoft.com/en-us/windows/win32/winprog/windows-data-types#pcwstr)\r\n> Sticking to their naming convention allows us to make our API more consistent and eliminates possible type-based bugs.\r\n\r\nOK, sounds good.",
        "createdAt" : "2021-05-28T09:25:52Z",
        "updatedAt" : "2021-05-28T09:25:52Z",
        "lastEditedBy" : "ae189121-dea4-445f-87d0-303740ceff41",
        "tags" : [
        ]
      }
    ],
    "commit" : "c96d19cf729129bfeea59dc72bd6b273751f6968",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +5,9 @@\npackage object windows {\n  type Word      = UShort //uint_16\n  type DWord     = UInt   //uint_32\n  type DWordLong = ULong  //uint_64"
  }
]