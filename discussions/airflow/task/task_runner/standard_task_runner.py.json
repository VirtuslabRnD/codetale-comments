[
  {
    "id" : "a670a57e-0301-47e8-97b5-fcaba5904338",
    "prId" : 6627,
    "prUrl" : "https://github.com/apache/airflow/pull/6627#pullrequestreview-321055248",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e2aa6cb-67d4-45a2-aaa8-0ae45ba68b96",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Just wondering if we want to make it explicit. Maybe not required by just a suggestion:\r\n\r\n```\r\nif pid == 0:\r\n```\r\n\r\nexample:\r\n\r\n\r\n```python\r\n    def _start_by_fork(self):\r\n        pid = os.fork()\r\n        if pid == 0:\r\n            from airflow.bin.cli import CLIFactory\r\n            parser = CLIFactory.get_parser()\r\n            args = parser.parse_args(self._command[1:])\r\n            setproctitle(\r\n                \"airflow task runner: {0.dag_id} {0.task_id} {0.execution_date} {0.job_id}\".format(args)\r\n            )\r\n            args.func(args)\r\n            os._exit(0)\r\n\r\n        else:\r\n            self.log.info(\"Started process %d to run task\", pid)\r\n            return psutil.Process(pid)\r\n```",
        "createdAt" : "2019-11-21T15:49:48Z",
        "updatedAt" : "2019-12-09T15:10:38Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "223922ee-412f-46a2-b4ef-7c84d0a9f7fc",
        "parentId" : "9e2aa6cb-67d4-45a2-aaa8-0ae45ba68b96",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Could do, but for python it doesn't matter so much - either it turns a pid, 0 in the child or throws an error (C can return 0, pid or -1 on error, but python converts that to an exception for us)",
        "createdAt" : "2019-11-21T17:21:10Z",
        "updatedAt" : "2019-12-09T15:10:38Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "115139507326548b6bcc8be799b2d0029690ca55",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +50,54 @@    def _start_by_fork(self):\n        pid = os.fork()\n        if pid:\n            self.log.info(\"Started process %d to run task\", pid)\n            return psutil.Process(pid)"
  },
  {
    "id" : "9ccfd1d3-9209-46b2-9f1b-ab36979a35d6",
    "prId" : 6627,
    "prUrl" : "https://github.com/apache/airflow/pull/6627#pullrequestreview-322444881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f80e126f-46a8-4dbc-92cf-78dc31280783",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Is this to remove `airflow` from the list?",
        "createdAt" : "2019-11-25T17:05:10Z",
        "updatedAt" : "2019-12-09T15:10:38Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "1ee78461-7c41-413c-8eee-3d0839debb93",
        "parentId" : "f80e126f-46a8-4dbc-92cf-78dc31280783",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Yes.",
        "createdAt" : "2019-11-25T17:15:08Z",
        "updatedAt" : "2019-12-09T15:10:38Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "115139507326548b6bcc8be799b2d0029690ca55",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +71,75 @@            parser = get_parser()\n            # [1:] - remove \"airflow\" from the start of the command\n            args = parser.parse_args(self._command[1:])\n\n            proc_title = \"airflow task runner: {0.dag_id} {0.task_id} {0.execution_date}\""
  },
  {
    "id" : "c4414f30-5653-496b-b52e-8ec0425c1851",
    "prId" : 6627,
    "prUrl" : "https://github.com/apache/airflow/pull/6627#pullrequestreview-323328972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81a5e750-5005-4c7b-84ae-b71eae68c5a0",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "```suggestion\r\n            # [1:] - remove \"airflow\" from the command\r\n            args = parser.parse_args(self._command[1:])\r\n```",
        "createdAt" : "2019-11-26T22:36:04Z",
        "updatedAt" : "2019-12-09T15:10:38Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "115139507326548b6bcc8be799b2d0029690ca55",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +71,75 @@            parser = get_parser()\n            # [1:] - remove \"airflow\" from the start of the command\n            args = parser.parse_args(self._command[1:])\n\n            proc_title = \"airflow task runner: {0.dag_id} {0.task_id} {0.execution_date}\""
  },
  {
    "id" : "900863e2-2fb6-49de-8913-6b4ae94fc07a",
    "prId" : 7232,
    "prUrl" : "https://github.com/apache/airflow/pull/7232#pullrequestreview-346243184",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93d2cf08-4d30-41cd-a35f-d493472d9552",
        "parentId" : null,
        "authorId" : "82aa078f-2a60-4ac5-95fc-0d69bea786b5",
        "body" : "Just wondering if we should flush() here too. If there are any calls to logger.error() in the task in this case I dont think they will get sent?",
        "createdAt" : "2020-01-21T17:05:17Z",
        "updatedAt" : "2020-05-22T21:28:24Z",
        "lastEditedBy" : "82aa078f-2a60-4ac5-95fc-0d69bea786b5",
        "tags" : [
        ]
      },
      {
        "id" : "273e0dcb-2909-45bb-bccf-cfe64fd5ec95",
        "parentId" : "93d2cf08-4d30-41cd-a35f-d493472d9552",
        "authorId" : "e71ab288-b547-46ae-a1a7-13a825c95a17",
        "body" : "Ya fair point, I'll make the change. Thanks!",
        "createdAt" : "2020-01-21T22:42:38Z",
        "updatedAt" : "2020-05-22T21:28:24Z",
        "lastEditedBy" : "e71ab288-b547-46ae-a1a7-13a825c95a17",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1134577a4444f2914032b245a379c3df4854ae3",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +80,84 @@\n            try:\n                args.func(args, dag=self.dag)\n                return_code = 0\n            except Exception:  # pylint: disable=broad-except"
  }
]