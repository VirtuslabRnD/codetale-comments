[
  {
    "id" : "4bfa6140-1a42-4b66-b6be-a31e835a4cd6",
    "prId" : 4594,
    "prUrl" : "https://github.com/apache/airflow/pull/4594#pullrequestreview-196778299",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a030f6bb-629d-4817-ae47-88953759967e",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "1. Here you're fetching all DAGs which is **paused** & non-subdag. But in the docstring above (https://github.com/apache/airflow/pull/4594/files#diff-5b3386f32d0c06f2aa7f668e7d7a6096R341), you mentioned \"fetching all the existing dag models that are **non-paused** or non subdags.\".\r\n2. In addition, the relations here is `OR(is_active, is_paused) AND non-subdag`. But in the docstring it is simply `non-paused OR non-subdags`\r\n\r\nConflicting to me. Did I miss something?",
        "createdAt" : "2019-01-26T06:04:39Z",
        "updatedAt" : "2019-01-26T06:25:41Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "0410e02b-65ad-4981-b926-9c81da304dfd",
        "parentId" : "a030f6bb-629d-4817-ae47-88953759967e",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "The target dag list include either active or pause dags but non-subdags. I update the comment a bit.",
        "createdAt" : "2019-01-26T06:27:19Z",
        "updatedAt" : "2019-01-26T06:27:19Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f799cb3f06f42d5cce062c51c9f633575177cbbb",
    "line" : 198,
    "diffHunk" : "@@ -1,1 +364,368 @@        all_dags_models = session.query(models.DagModel)\\\n            .filter(or_(models.DagModel.is_active, models.DagModel.is_paused))\\\n            .filter(~models.DagModel.is_subdag).all()\n\n        # create can_dag_edit and can_dag_read permissions for every dag(vm)"
  },
  {
    "id" : "52512a76-6660-4d83-bb4e-9a23d2b98b27",
    "prId" : 4594,
    "prUrl" : "https://github.com/apache/airflow/pull/4594#pullrequestreview-196811573",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4dd63e46-5abd-423f-b226-dbd051bc50ed",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "Understand the idea here is each DAG will be considered as a `View`.\r\n\r\nOne rare (but potentially valid) case to consider: what if a DAG id is identical to an existing View name? ",
        "createdAt" : "2019-01-26T15:36:58Z",
        "updatedAt" : "2019-01-26T15:49:22Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "e79eb270-fffb-410c-baec-acf73bbe5c32",
        "parentId" : "4dd63e46-5abd-423f-b226-dbd051bc50ed",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "It shouldn't have any impact. For instance, assuming the dag name is test-dag, this will add two entries to the table: can-dag-edit with test-dag and can-dag-read with test-dag.",
        "createdAt" : "2019-01-27T04:19:07Z",
        "updatedAt" : "2019-01-27T04:19:07Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f799cb3f06f42d5cce062c51c9f633575177cbbb",
    "line" : 204,
    "diffHunk" : "@@ -1,1 +369,373 @@        for dag in all_dags_models:\n            for perm in DAG_PERMS:\n                merge_pv(perm, dag.dag_id)\n\n        # for all the dag-level role, add the permission of viewer"
  },
  {
    "id" : "e17e346d-1941-441c-890b-e32751546772",
    "prId" : 4594,
    "prUrl" : "https://github.com/apache/airflow/pull/4594#pullrequestreview-196811535",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19fa9992-5697-4b4e-8b7a-4e8f887f4752",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "`EXISTING_ROLES` is a static set, in which we have 'Admin',  'Viewer', 'User', 'Op', and 'Public'. It's possible that we have created a new role, say `EnhancedUser` for which we added Connection Edit access.\r\n\r\nThen this custom role (non-dag specific role) will also be listed into `dag_role` here as it's not in `EXISTING_ROLES` (which should not happen).\r\n\r\nBut I'm not sure whether this will cause any actual impact.",
        "createdAt" : "2019-01-26T15:47:14Z",
        "updatedAt" : "2019-01-26T15:49:22Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "aeb76891-1ec7-4136-81de-b1752219eeaa",
        "parentId" : "19fa9992-5697-4b4e-8b7a-4e8f887f4752",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "It shouldn't have any impact. The code is to allow all the other non-static roles to have all the User role's permisssion on all User's views except the \"all-dag\" view. This is to allow the user to access basic functionality in webserver. If we would like to modify and control this part, we could modify later, but it is not part of this pr's scope.",
        "createdAt" : "2019-01-27T04:16:39Z",
        "updatedAt" : "2019-01-27T04:16:39Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f799cb3f06f42d5cce062c51c9f633575177cbbb",
    "line" : 208,
    "diffHunk" : "@@ -1,1 +376,380 @@        user_role = self.find_role('User')\n\n        dag_role = [role for role in all_roles if role.name not in EXISTING_ROLES]\n        update_perm_views = []\n"
  },
  {
    "id" : "e785571a-899f-4898-b3c4-e9782edcc899",
    "prId" : 4658,
    "prUrl" : "https://github.com/apache/airflow/pull/4658#pullrequestreview-200822716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15f4ebb4-69ab-47a2-85a4-f267188d44b0",
        "parentId" : null,
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "Have you checked if FAB's SecurityManager provided any API to delete role?",
        "createdAt" : "2019-02-06T21:24:47Z",
        "updatedAt" : "2019-02-07T01:45:07Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "98473dc1-0106-48ad-90dd-c7e4d28d6c79",
        "parentId" : "15f4ebb4-69ab-47a2-85a4-f267188d44b0",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "And maybe we need to check and make sure that user won't delete those 5 default roles defined in the security.py.",
        "createdAt" : "2019-02-06T21:32:13Z",
        "updatedAt" : "2019-02-07T01:45:07Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "ac1a92d5-9132-4ae1-876c-6892def142c4",
        "parentId" : "15f4ebb4-69ab-47a2-85a4-f267188d44b0",
        "authorId" : "8ae8c9e1-93ac-446d-b3f6-18d36b79bd39",
        "body" : "Yeah, it doesn't appear to. These are the methods it does have:\r\n\r\n```\r\n    \"\"\"\r\n    ----------------------\r\n     PRIMITIVES FOR ROLES\r\n    ----------------------\r\n    \"\"\"\r\n    def find_role(self, name):\r\n        raise NotImplementedError\r\n\r\n    def add_role(self, name):\r\n        raise NotImplementedError\r\n\r\n    def get_all_roles(self):\r\n        raise NotImplementedError\r\n```\r\n\r\nFrom https://flask-appbuilder.readthedocs.io/en/latest/_modules/flask_appbuilder/security/manager.html",
        "createdAt" : "2019-02-06T21:48:30Z",
        "updatedAt" : "2019-02-07T01:45:07Z",
        "lastEditedBy" : "8ae8c9e1-93ac-446d-b3f6-18d36b79bd39",
        "tags" : [
        ]
      }
    ],
    "commit" : "c11ce552e50cc691d741e2812962ba377ee0d9f1",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +196,200 @@            self.log.info('Existing permissions for the role:%s within the database will persist.', role_name)\n\n    def delete_role(self, role_name):\n        \"\"\"Delete the given Role\n"
  },
  {
    "id" : "2b58efb0-e573-4f90-817a-eef3651ef988",
    "prId" : 4658,
    "prUrl" : "https://github.com/apache/airflow/pull/4658#pullrequestreview-200826825",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53bc6ad7-3c05-4a24-bf70-61f8861d06d8",
        "parentId" : null,
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "I am wondering what will happen if a user's role gets deleted. Will the user has no role associated in the db?",
        "createdAt" : "2019-02-06T21:26:11Z",
        "updatedAt" : "2019-02-07T01:45:07Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "220cf58c-8633-4f7f-85eb-f21d961eddac",
        "parentId" : "53bc6ad7-3c05-4a24-bf70-61f8861d06d8",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "There is a table called ab_user_role which is a join result between ab_user and ab_role. What will happen to that table in this case?",
        "createdAt" : "2019-02-06T21:29:52Z",
        "updatedAt" : "2019-02-07T01:45:07Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "4e15f2cb-5bdb-4799-b68d-fd46955f5cfa",
        "parentId" : "53bc6ad7-3c05-4a24-bf70-61f8861d06d8",
        "authorId" : "8ae8c9e1-93ac-446d-b3f6-18d36b79bd39",
        "body" : "Yeah, delete will cascade to the `ab_user_role` table, so it just deletes any entries associated with that role. Here's an example:\r\n\r\n```\r\n$ airflow users -l | grep \"jdoe+1\"\r\n│    3 │ user1          │ jdoe+1@gmail.com │ jon          │ doe1        │ [Admin, Op, Public] │\r\n\r\n$ airflow roles --delete Public\r\n[2019-02-06 13:56:24,911] {__init__.py:51} INFO - Using executor SequentialExecutor\r\n[2019-02-06 13:56:25,431] {__init__.py:298} INFO - Filling up the DagBag from /Users/andrewstahlman/airflow/dags\r\n[2019-02-06 13:56:25,638] {security.py:452} INFO - Start syncing user roles.\r\n[2019-02-06 13:56:25,684] {security.py:196} INFO - Existing permissions for the role:Viewer within the database will persist.\r\n[2019-02-06 13:56:25,729] {security.py:196} INFO - Existing permissions for the role:User within the database will persist.\r\n[2019-02-06 13:56:25,771] {security.py:196} INFO - Existing permissions for the role:Op within the database will persist.\r\n[2019-02-06 13:56:25,772] {security.py:365} INFO - Fetching a set of all permission, view_menu from FAB meta-table\r\n[2019-02-06 13:56:25,927] {security.py:316} INFO - Cleaning faulty perms\r\n[2019-02-06 13:56:25,934] {security.py:204} INFO - Deleting role 'Public'\r\n\r\n$ airflow users -l | grep \"jdoe+1\"\r\n│    3 │ user1          │ jdoe+1@gmail.com │ jon          │ doe1        │ [Admin, Op] │\r\n```",
        "createdAt" : "2019-02-06T21:58:06Z",
        "updatedAt" : "2019-02-07T01:45:07Z",
        "lastEditedBy" : "8ae8c9e1-93ac-446d-b3f6-18d36b79bd39",
        "tags" : [
        ]
      }
    ],
    "commit" : "c11ce552e50cc691d741e2812962ba377ee0d9f1",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +207,211 @@        if role:\n            self.log.info(\"Deleting role '{}'\".format(role_name))\n            session.delete(role)\n            session.commit()\n        else:"
  }
]