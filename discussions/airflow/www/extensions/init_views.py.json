[
  {
    "id" : "5f5d30b4-d646-4d49-b3e7-4d5e26ba4e65",
    "prId" : 12305,
    "prUrl" : "https://github.com/apache/airflow/pull/12305#pullrequestreview-529193060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56268601-0ba8-4195-8b02-8913bfa60004",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Is common_error_handler support this exception type?",
        "createdAt" : "2020-11-12T10:39:35Z",
        "updatedAt" : "2020-11-13T23:39:27Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "97cbe47a-f9c0-4b11-9f67-c5bd291126eb",
        "parentId" : "56268601-0ba8-4195-8b02-8913bfa60004",
        "authorId" : "9bd2af9d-a182-4a5a-a819-a2a1b8f90689",
        "body" : "Yes, see https://github.com/apache/airflow/blob/82eef2e7b27c2bd0d68d945772dab2d1040dda8b/airflow/api_connexion/exceptions.py#L31\r\nproblem is that flask do not delegate that to common error handler from blueprint (connexion)",
        "createdAt" : "2020-11-12T15:19:11Z",
        "updatedAt" : "2020-11-13T23:39:27Z",
        "lastEditedBy" : "9bd2af9d-a182-4a5a-a819-a2a1b8f90689",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca4a968004e801de41dc408537d4c0b67c7ac3ca",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +148,152 @@            # i.e. \"no route for it\" defined, need to be handled\n            # here on the application level\n            return common_error_handler(ex)\n        else:\n            return views.circles(ex)"
  },
  {
    "id" : "b81d3e01-ceef-4dcb-92e7-b096a7a64d9e",
    "prId" : 13620,
    "prUrl" : "https://github.com/apache/airflow/pull/13620#pullrequestreview-565744210",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "030b9833-67f6-409f-afec-1cc128a47784",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This function will run for all views, not just the API.",
        "createdAt" : "2021-01-11T20:54:47Z",
        "updatedAt" : "2021-01-12T23:25:00Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "566b66ac-3918-48f2-ac32-90f649f68015",
        "parentId" : "030b9833-67f6-409f-afec-1cc128a47784",
        "authorId" : "f59eb591-c12e-407d-b1ee-57f70f09b390",
        "body" : "Ah, sorry, my Python/Flask inexperience is showing… Would it be ideal for this to be moved to an external file and then imported into `init_api_connexion`?",
        "createdAt" : "2021-01-11T21:07:58Z",
        "updatedAt" : "2021-01-12T23:25:00Z",
        "lastEditedBy" : "f59eb591-c12e-407d-b1ee-57f70f09b390",
        "tags" : [
        ]
      },
      {
        "id" : "c3081fee-97ca-42ec-92c3-1d2ce046bf34",
        "parentId" : "030b9833-67f6-409f-afec-1cc128a47784",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This code register this handler for each view.\r\n```\r\napp.after_request(set_cors_headers_on_response)\r\n```\r\nYou should use [Blueprint.after_request](https://flask.palletsprojects.com/en/1.1.x/api/#flask.Blueprint.after_request).  The api_ap variable contains an `flask.Blueprint` object. \r\n",
        "createdAt" : "2021-01-11T21:15:21Z",
        "updatedAt" : "2021-01-12T23:25:00Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "59173f3d6aee4e9144b1c5f33463ccf468f8c59a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +148,152 @@\n\ndef set_cors_headers_on_response(response):\n    \"\"\"Add response headers\"\"\"\n    allow_headers = conf.get('api', 'access_control_allow_headers')"
  }
]