[
  {
    "id" : "d2da86af-a598-486b-9686-5c89a232affb",
    "prId" : 13313,
    "prUrl" : "https://github.com/apache/airflow/pull/13313#pullrequestreview-558854776",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e41ce1c-b5aa-4c14-bd02-f76eb3bd3eb0",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "One more thing. In order this to work properly, also `airflow/www/compile_assets.sh` should be run as step in `Dockerfile.ci`\r\n\r\nhttps://github.com/apache/airflow/blob/6f246b0d54ccaf733b7c5951a8955adda6719acb/Dockerfile.ci#L348\r\n\r\nIn the Dockefile.ci we this in two steps (this is an optimisation of image rebuilding)\r\n\r\n1) first we install node_modules (in case .lock/ or package.json changed): https://github.com/apache/airflow/blob/6f246b0d54ccaf733b7c5951a8955adda6719acb/Dockerfile.ci#L300\r\n\r\n2) then we update all latest setup.py dependencies in case setup.py changed https://github.com/apache/airflow/blob/6f246b0d54ccaf733b7c5951a8955adda6719acb/Dockerfile.ci#L322\r\n\r\n3) only then we build assets (only if any www files changed): https://github.com/apache/airflow/blob/6f246b0d54ccaf733b7c5951a8955adda6719acb/Dockerfile.ci#L348\r\n\r\nHowever there is a difference here: \r\n\r\n1) we use `yarn run prod` in the Dockerfile.ci\r\n2) we use `yarn build` in the compile_assets.sh\r\n\r\nThere are two things to fix here:\r\n\r\n1) We should decide if we should use `build` or `prod` and use the same in both cases (AFAIK prod is optimized version of assets) (@ryanahamilton WDYT ?). I'd vote for `build` as it produces un-obfuscated code if that's the case..\r\n\r\n2) We should calculate and store the md5sum also in case of Dockerfile.ci build (because otherwise it will be always rebuilt first time).\r\n\r\nDo you want to do that @mik-laj ? Or should I do that myself?\r\n\r\n\r\n",
        "createdAt" : "2020-12-26T09:15:52Z",
        "updatedAt" : "2020-12-31T14:18:34Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "276e89a4-6099-471f-8893-f8784ed3da81",
        "parentId" : "6e41ce1c-b5aa-4c14-bd02-f76eb3bd3eb0",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "One more thought @mik-laj . Maybe we should also split node_modules vs. compiling assets? Right now we are doing both which  is probably not the best idea and this is main reason why it takes so long on Mac mounted filesystem is slow and it scans many files while doing `yarn install` - that's why for me on Linux it takes seconds and for anyone working on Mac it might take minutes (that's why I have no noticed that this is a problem).",
        "createdAt" : "2020-12-26T09:21:01Z",
        "updatedAt" : "2020-12-31T14:18:34Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b6abe674424a36472cb295b9b52bc32f70270bd",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +32,36 @@yarn run build\n\nfind package.json yarn.lock static/css static/js -type f | sort | xargs md5sum > \"${MD5SUM_FILE}\""
  }
]