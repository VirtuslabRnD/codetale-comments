[
  {
    "id" : "3df0987c-c99c-42a9-879e-ac37eecfe62a",
    "prId" : 15599,
    "prUrl" : "https://github.com/apache/airflow/pull/15599#pullrequestreview-651494335",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eefb00a9-83e2-4b1d-842d-49edeb9f5a36",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Did you wanted to think about this more before you merged this PR, or just a future TODO",
        "createdAt" : "2021-05-04T16:51:03Z",
        "updatedAt" : "2021-05-04T21:15:01Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "af49d173-fe54-4f4a-a429-cb0dcd24c6b4",
        "parentId" : "eefb00a9-83e2-4b1d-842d-49edeb9f5a36",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Future Todo/pointer to anyone finding this a problem in the future",
        "createdAt" : "2021-05-04T17:32:14Z",
        "updatedAt" : "2021-05-04T21:15:01Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "46bfe956a18b96b866dc09578373843f152fd3f5",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +158,162 @@            if record.exc_info:\n                exc = record.exc_info[1]\n                # I'm not sure if this is a good idea!\n                exc.args = (self.redact(v) for v in exc.args)\n        record.__dict__[self.ALREADY_FILTERED_FLAG] = True"
  },
  {
    "id" : "3504126f-95f8-4351-ba41-a8084a7907d1",
    "prId" : 15599,
    "prUrl" : "https://github.com/apache/airflow/pull/15599#pullrequestreview-676781107",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fec13507-b528-41da-886c-84052876ec61",
        "parentId" : null,
        "authorId" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "body" : "I would suggest that we use try-except for checking if secret is an iterator. collections.abc.Iterable doesn't detect iterators unless they implement `__iter__` while this does:\r\n```python\r\ntry:\r\n    iter(myobject)\r\nexcept TypeError:\r\n    print('not iterator')\r\n```\r\nFound this from https://stackoverflow.com/a/36407550/3477338",
        "createdAt" : "2021-05-04T17:10:50Z",
        "updatedAt" : "2021-05-04T21:15:01Z",
        "lastEditedBy" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "tags" : [
        ]
      },
      {
        "id" : "e8e96d9b-33ae-4dcb-98e9-4d16d0883265",
        "parentId" : "fec13507-b528-41da-886c-84052876ec61",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "That was sort of by design, since we turn the output in to a list always, so we don't want to redact everything.\n\nI'm not sure that supporting Iterable is good",
        "createdAt" : "2021-05-04T17:34:04Z",
        "updatedAt" : "2021-05-04T21:15:01Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "3d0e1bbb-50e9-4e81-b112-45c818eeff11",
        "parentId" : "fec13507-b528-41da-886c-84052876ec61",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "@ashb - your lackluster feelings about  Iterable support was right I think https://github.com/apache/airflow/issues/16148#issuecomment-855240855 :) ",
        "createdAt" : "2021-06-05T13:35:03Z",
        "updatedAt" : "2021-06-05T13:35:04Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "46bfe956a18b96b866dc09578373843f152fd3f5",
    "line" : 221,
    "diffHunk" : "@@ -1,1 +219,223 @@                self.patterns.add(pattern)\n                self.replacer = re.compile('|'.join(self.patterns))\n        elif isinstance(secret, collections.abc.Iterable):\n            for v in secret:\n                self.add_mask(v, name)"
  },
  {
    "id" : "387f7dab-044b-4610-8a9c-7b1bd2adce66",
    "prId" : 16424,
    "prUrl" : "https://github.com/apache/airflow/pull/16424#pullrequestreview-684926901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd7fdcd9-d4fc-4994-abfe-eb8df2f075e9",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I could not find an easy way to raise an exception any more after removing Iterable. I believe we cannot get the Exception if we do what we do now - i.e. walking the built-in structures in the way we do. But maybe there is some way an exception can be raised here? ",
        "createdAt" : "2021-06-13T18:37:55Z",
        "updatedAt" : "2021-06-13T18:37:55Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "13f8174f-d2dd-4af0-b79c-8eca4a44e992",
        "parentId" : "cd7fdcd9-d4fc-4994-abfe-eb8df2f075e9",
        "authorId" : "a5092e56-4956-45ec-9914-ecec6b63df73",
        "body" : "I think it’s technically possible if the user passes in some kind of custom subclass (e.g. `class MyList(list):` that overrides some weird stuff), so yeah let’s keep the exception handler there, but I don’t think it’s worthwhile to have a test for it.",
        "createdAt" : "2021-06-13T21:12:02Z",
        "updatedAt" : "2021-06-13T21:12:02Z",
        "lastEditedBy" : "a5092e56-4956-45ec-9914-ecec6b63df73",
        "tags" : [
        ]
      },
      {
        "id" : "72497ede-1e1f-4c35-8f06-26ab11e9d552",
        "parentId" : "cd7fdcd9-d4fc-4994-abfe-eb8df2f075e9",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Agreet",
        "createdAt" : "2021-06-16T09:17:54Z",
        "updatedAt" : "2021-06-16T09:19:02Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "af39d400cd524f2c5f11c49ec63c4f4f086d3067",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +200,204 @@            else:\n                return item\n        # I think this should never happen, but it does not hurt to leave it just in case\n        except Exception as e:  # pylint: disable=broad-except\n            log.warning("
  },
  {
    "id" : "c60b65bf-81dc-4292-b1fd-f672a81ca5b6",
    "prId" : 16424,
    "prUrl" : "https://github.com/apache/airflow/pull/16424#pullrequestreview-684929116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e59f282-626e-414f-842e-957e4120f885",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Tuple too please",
        "createdAt" : "2021-06-16T09:17:31Z",
        "updatedAt" : "2021-06-16T09:19:02Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "f8052ce7-23a9-45e8-865c-326588f20a3a",
        "parentId" : "1e59f282-626e-414f-842e-957e4120f885",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Oh that's a few lines up",
        "createdAt" : "2021-06-16T09:19:43Z",
        "updatedAt" : "2021-06-16T09:19:43Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "af39d400cd524f2c5f11c49ec63c4f4f086d3067",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +165,169 @@            # Turn set in to tuple!\n            return tuple(self._redact_all(subval) for subval in item)\n        elif isinstance(item, list):\n            return list(self._redact_all(subval) for subval in item)\n        else:"
  }
]