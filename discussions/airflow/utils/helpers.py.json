[
  {
    "id" : "0740f867-7fab-4c90-9c3f-5260d8d0bd52",
    "prId" : 4425,
    "prUrl" : "https://github.com/apache/airflow/pull/4425#pullrequestreview-189235743",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5093b283-6339-4c07-81fc-e76166e9c06d",
        "parentId" : null,
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "nit: please provides a docstring for the function.",
        "createdAt" : "2019-01-03T23:35:38Z",
        "updatedAt" : "2019-01-04T00:42:57Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "6d65734a-16ca-4945-9b6b-ad8d3c494efd",
        "parentId" : "5093b283-6339-4c07-81fc-e76166e9c06d",
        "authorId" : "043a640a-ee3d-47fd-88b0-2baa1fcf9a4b",
        "body" : "üëç ",
        "createdAt" : "2019-01-04T00:35:03Z",
        "updatedAt" : "2019-01-04T00:42:57Z",
        "lastEditedBy" : "043a640a-ee3d-47fd-88b0-2baa1fcf9a4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "55a211c0ba9112c5dbc247d73926af5bc08d8e4d",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +300,304 @@\n\ndef render_log_filename(ti, try_number, filename_template):\n    \"\"\"\n    Given task instance, try_number, filename_template, return the rendered log filename"
  },
  {
    "id" : "40182d09-65a4-487b-9926-ca4e46327d26",
    "prId" : 4779,
    "prUrl" : "https://github.com/apache/airflow/pull/4779#pullrequestreview-237577464",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90a2102b-5434-4960-b0a0-99a78fa634bc",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "We should check here that these are both iterables and that they have the same length (and throw exception otherwise).",
        "createdAt" : "2019-05-14T06:01:09Z",
        "updatedAt" : "2019-05-28T13:12:47Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "7fed5661-4665-44e8-ba3d-1dfa0619b0c5",
        "parentId" : "90a2102b-5434-4960-b0a0-99a78fa634bc",
        "authorId" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "body" : "We discuss in https://github.com/apache/airflow/pull/4779#issuecomment-480687872 but some of contributors think we should not check list size, WDYT",
        "createdAt" : "2019-05-14T08:03:37Z",
        "updatedAt" : "2019-05-28T13:12:47Z",
        "lastEditedBy" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "tags" : [
        ]
      },
      {
        "id" : "72a34389-dd0f-4b77-ab6b-b24322b13433",
        "parentId" : "90a2102b-5434-4960-b0a0-99a78fa634bc",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Yeah... Long comments. I think otherwise - the problem is that some operators might be swallowed silently.\r\nThis might be misleading.",
        "createdAt" : "2019-05-14T12:17:12Z",
        "updatedAt" : "2019-05-28T13:12:47Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "ef71f2ec-54f3-4ce0-93d2-36023c234a29",
        "parentId" : "90a2102b-5434-4960-b0a0-99a78fa634bc",
        "authorId" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "body" : "I add throw exception if type not match or length of Iterable not match in `else` section.",
        "createdAt" : "2019-05-15T01:52:19Z",
        "updatedAt" : "2019-05-28T13:12:47Z",
        "lastEditedBy" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "tags" : [
        ]
      }
    ],
    "commit" : "37c27da23ebcea1ec6ae2357a31e1f52da43b7ab",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +184,188 @@        elif isinstance(down_task, BaseOperator):\n            down_task.set_upstream(up_task)\n        else:\n            if not isinstance(up_task, Iterable) or not isinstance(down_task, Iterable):\n                raise TypeError("
  },
  {
    "id" : "93a8036a-fd60-443c-8c37-da3a4f6bd484",
    "prId" : 4779,
    "prUrl" : "https://github.com/apache/airflow/pull/4779#pullrequestreview-242482883",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "734d981a-1248-42d4-a5d0-f8ebf65824d8",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Let's move the import statement at the top of the file",
        "createdAt" : "2019-05-24T21:49:42Z",
        "updatedAt" : "2019-05-28T13:12:47Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "3a40cfc6-c8be-4c9b-a404-bc4ab1b5a41d",
        "parentId" : "734d981a-1248-42d4-a5d0-f8ebf65824d8",
        "authorId" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "body" : "@kaxil I try put import in the top file, but it CI failed. And then Got advice from @BasPH to put `import` inside functions to pass CI",
        "createdAt" : "2019-05-28T05:28:13Z",
        "updatedAt" : "2019-05-28T13:12:47Z",
        "lastEditedBy" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "tags" : [
        ]
      },
      {
        "id" : "6aa66e20-f451-4825-a021-e1ecec4348e0",
        "parentId" : "734d981a-1248-42d4-a5d0-f8ebf65824d8",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Yup, I realised it later. It was to avoid circular imports",
        "createdAt" : "2019-05-28T07:13:55Z",
        "updatedAt" : "2019-05-28T13:12:47Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "37c27da23ebcea1ec6ae2357a31e1f52da43b7ab",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +176,180 @@    :type tasks: List[airflow.models.BaseOperator] or airflow.models.BaseOperator\n    \"\"\"\n    from airflow.models import BaseOperator\n\n    for index, up_task in enumerate(tasks[:-1]):"
  },
  {
    "id" : "1a7ffd2a-9ddd-4000-9d3c-2e077cdcfd02",
    "prId" : 4779,
    "prUrl" : "https://github.com/apache/airflow/pull/4779#pullrequestreview-253076976",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "511fa8e7-e5d6-4e6e-8ce1-9df57165e5f3",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "What is this `r` for? Is it a typo or a way to render something?",
        "createdAt" : "2019-06-21T12:41:45Z",
        "updatedAt" : "2019-06-21T12:42:05Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "d291ef58-c0dc-4e79-98d1-7a3e52b43daa",
        "parentId" : "511fa8e7-e5d6-4e6e-8ce1-9df57165e5f3",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "> Both string and bytes literals may optionally be prefixed with a letter 'r' or 'R'; such strings are called raw strings and treat backslashes as literal characters\r\n\r\nThis makes the `\\` in the ascii diagram be a backslash. I imagine otherwise it would complain about `\\ ` being an invalid escape.",
        "createdAt" : "2019-06-21T14:44:48Z",
        "updatedAt" : "2019-06-21T14:44:48Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "d438a660-52e1-48c3-b345-1606901e8768",
        "parentId" : "511fa8e7-e5d6-4e6e-8ce1-9df57165e5f3",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Makes sense üëç Thanks @ashb ",
        "createdAt" : "2019-06-21T18:04:45Z",
        "updatedAt" : "2019-06-21T18:04:45Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "79aec48c-50e3-4321-b053-f137073dc555",
        "parentId" : "511fa8e7-e5d6-4e6e-8ce1-9df57165e5f3",
        "authorId" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "body" : "Thanks ash for the clarification",
        "createdAt" : "2019-06-22T01:40:26Z",
        "updatedAt" : "2019-06-22T01:40:27Z",
        "lastEditedBy" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "tags" : [
        ]
      }
    ],
    "commit" : "37c27da23ebcea1ec6ae2357a31e1f52da43b7ab",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +152,156 @@\ndef chain(*tasks):\n    r\"\"\"\n    Given a number of tasks, builds a dependency chain.\n    Support mix airflow.models.BaseOperator and List[airflow.models.BaseOperator]."
  },
  {
    "id" : "4a01c1b4-95a0-412e-a7f4-77768d6d2349",
    "prId" : 5533,
    "prUrl" : "https://github.com/apache/airflow/pull/5533#pullrequestreview-258054155",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef2db644-a908-474c-9837-422d44c3318b",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "The mimimum Python version we support is now 3.5 so I don't think we need this. (unless we also want to backport this to 1.10.x, where we still support py2.7)",
        "createdAt" : "2019-07-04T13:15:04Z",
        "updatedAt" : "2019-07-04T13:15:05Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "a7d6e8b4-8ddb-42ca-8512-2d6b75c4b6b4",
        "parentId" : "ef2db644-a908-474c-9837-422d44c3318b",
        "authorId" : "0e949f0e-92bd-4f3c-8956-731d3b89a1cc",
        "body" : "Thanks, it's also present in 1.10.x branch. The fix was based on https://issues.apache.org/jira/browse/AIRFLOW-3009 where similar problem was fixed in master and also seemed to be backported to 1.10.3.",
        "createdAt" : "2019-07-04T13:48:08Z",
        "updatedAt" : "2019-07-04T13:48:08Z",
        "lastEditedBy" : "0e949f0e-92bd-4f3c-8956-731d3b89a1cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "25049c7e08a631a9c3dfc7effa0514a9dbbf99d6",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +28,32 @@    from collections.abc import Iterable\nexcept ImportError:\n    # Preserve Python < 3.3 compatibility\n    from collections import Iterable\nimport os"
  }
]