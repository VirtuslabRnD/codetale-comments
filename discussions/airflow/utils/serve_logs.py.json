[
  {
    "id" : "fad62003-a2ec-4da5-acc0-31db4122f4c6",
    "prId" : 16754,
    "prUrl" : "https://github.com/apache/airflow/pull/16754#pullrequestreview-697306639",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fbb36b5f-ac98-4f69-a922-8708ee496189",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "It would be *slightly* safer to add the log path to the payload. With the current approach m-i-m could potentially grab an authorisation header from one request and retrieve as many different log entries as possible within 30 seconds time window. Otherwise they could only intercept those logs that were specifically requested by the webserver. \r\n\r\nIt is very remote possibility - you'd have to be able to place yourself between the webserver and workers, but I think it should be rather easy to add  as an extra protection. I think adding the log path as payload and verifying it, would be all that is needed.",
        "createdAt" : "2021-07-01T12:54:35Z",
        "updatedAt" : "2021-07-01T12:55:44Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "afce93f3-84e4-4566-beea-7c9ef6d0e9ca",
        "parentId" : "fbb36b5f-ac98-4f69-a922-8708ee496189",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Not super strong about it, but seems easy to do with little to no drawback",
        "createdAt" : "2021-07-01T12:55:06Z",
        "updatedAt" : "2021-07-01T12:55:06Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "1f510a19-35be-4241-be44-b027e3371899",
        "parentId" : "fbb36b5f-ac98-4f69-a922-8708ee496189",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Oh yeah, easy enough to as the payload is otherwise unused.",
        "createdAt" : "2021-07-01T13:12:47Z",
        "updatedAt" : "2021-07-01T13:12:47Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "f328009e-cbf4-496a-8321-e199668344f2",
        "parentId" : "fbb36b5f-ac98-4f69-a922-8708ee496189",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Done in 27265516d",
        "createdAt" : "2021-07-01T14:20:50Z",
        "updatedAt" : "2021-07-01T14:20:50Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "27265516d2b897585f5019ecd820cfe5471fd351",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +46,50 @@            auth = request.headers['Authorization']\n\n            # We don't actually care about the payload, just that the signature\n            # was valid and the `exp` claim is correct\n            filename, headers = signer.loads(auth, return_header=True)"
  },
  {
    "id" : "2609ead5-3f99-45d1-a583-5865f496c16f",
    "prId" : 16754,
    "prUrl" : "https://github.com/apache/airflow/pull/16754#pullrequestreview-697306534",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fbe5f4ae-24f7-4b69-adeb-4e112b9c7676",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I think we should pass the salt parameter here as well to prevent the token from being used in the wrong context e.g. using a token from the getCode API in this method. This shouldn't work, but it's better to still explicitly prevent it.",
        "createdAt" : "2021-07-01T13:42:06Z",
        "updatedAt" : "2021-07-01T13:42:06Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "0674f846-4b28-4234-9bd8-1f8c541cf9f6",
        "parentId" : "fbe5f4ae-24f7-4b69-adeb-4e112b9c7676",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Do you mean something like adding `salt='logs'`?\r\n\r\nAlso probably doesn't hurt, but the formats are very different.",
        "createdAt" : "2021-07-01T14:03:45Z",
        "updatedAt" : "2021-07-01T14:03:45Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "f455baea-1f6f-4f86-a69b-3b45335ebc97",
        "parentId" : "fbe5f4ae-24f7-4b69-adeb-4e112b9c7676",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Yes.  For now, we have used the tokens in two places, but in the future we may use them more often.  If we are unlucky, it may happen that it will be possible to generate a token that has a matching format. When we add salt, this token can be used here and no other place.",
        "createdAt" : "2021-07-01T14:15:31Z",
        "updatedAt" : "2021-07-01T14:15:31Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "6a9c9347-b8a4-4294-890a-e98e1d07cedc",
        "parentId" : "fbe5f4ae-24f7-4b69-adeb-4e112b9c7676",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "For details, see: https://github.com/pallets/itsdangerous/blob/main/src/itsdangerous/signer.py#L78-L79",
        "createdAt" : "2021-07-01T14:18:54Z",
        "updatedAt" : "2021-07-01T14:18:54Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "3e90cfe8-87ca-45c5-a51a-8fd6f6e9f827",
        "parentId" : "fbe5f4ae-24f7-4b69-adeb-4e112b9c7676",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Done in 27265516d",
        "createdAt" : "2021-07-01T14:20:44Z",
        "updatedAt" : "2021-07-01T14:20:45Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "27265516d2b897585f5019ecd820cfe5471fd351",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +33,37 @@\n    signer = TimedJSONWebSignatureSerializer(\n        secret_key=conf.get('webserver', 'secret_key'),\n        algorithm_name='HS512',\n        expires_in=max_request_age,"
  }
]