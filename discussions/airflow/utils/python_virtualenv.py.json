[
  {
    "id" : "aced2af9-ca3c-4920-b2ee-6fc05f4af067",
    "prId" : 6590,
    "prUrl" : "https://github.com/apache/airflow/pull/6590#pullrequestreview-345006704",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6731172d-d6bc-4304-a489-5d48dc2a981e",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Nice that you separated it out to utils!",
        "createdAt" : "2020-01-19T14:47:23Z",
        "updatedAt" : "2020-01-19T14:47:46Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "83ec1bad19383279ecc03b6e147b8101d02c44a4",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@# -*- coding: utf-8 -*-\n#\n# Licensed to the Apache Software Foundation (ASF) under one"
  },
  {
    "id" : "9bf90d95-e89a-4b53-b3ca-aa801dabbc7d",
    "prId" : 14761,
    "prUrl" : "https://github.com/apache/airflow/pull/14761#pullrequestreview-630900117",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8e7f355-a599-499c-903c-b27678e99c23",
        "parentId" : null,
        "authorId" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "body" : "It may not matter, but this will fail if any of the input args have a parentheses value within a string, such as `:-)`",
        "createdAt" : "2021-03-22T22:37:00Z",
        "updatedAt" : "2021-04-08T15:16:36Z",
        "lastEditedBy" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "tags" : [
        ]
      },
      {
        "id" : "1b6dcbef-4399-4904-ae9b-10c8cfcf9fcf",
        "parentId" : "d8e7f355-a599-499c-903c-b27678e99c23",
        "authorId" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "body" : "Alternative approach:\r\n```\r\ndef remove_task_decorator(python_source: str, task_decorator_name: str) -> str:\r\n  \"\"\"\r\n  Removed @task.virtualenv\r\n  :param python_source:\r\n  \"\"\"\r\n  func_start = source.find(\"def \")\r\n  decorators = source[:func_start]\r\n  decorated = \"@\".join(d for d in decorators.split(\"@\") if not d.startswith(task_decorator_name))\r\n  return decorated + source[func_start:]\r\n```\r\n\r\nHonestly this doesn't matter but I wanted to see if there was a clear alternative way to do it and here it is.",
        "createdAt" : "2021-03-22T23:54:36Z",
        "updatedAt" : "2021-04-08T15:16:36Z",
        "lastEditedBy" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "tags" : [
        ]
      },
      {
        "id" : "ac7620be-a9aa-432e-9d1d-27ba4b6bec92",
        "parentId" : "d8e7f355-a599-499c-903c-b27678e99c23",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "@jhtimmins unfortunately this doesn't seem to work if you look at the tests (e.g. if you're nesting decorators)",
        "createdAt" : "2021-04-08T01:06:10Z",
        "updatedAt" : "2021-04-08T15:16:36Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c05f0e5d422503b8b67d68d98332f5ae10bf61e4",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +54,58 @@        elif current == \")\":\n            num_paren = num_paren - 1\n    return ''.join(after_decorator)\n\n"
  }
]