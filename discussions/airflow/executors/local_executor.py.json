[
  {
    "id" : "7832c38a-1621-4c1a-b891-c5242343428f",
    "prId" : 6596,
    "prUrl" : "https://github.com/apache/airflow/pull/6596#pullrequestreview-322647634",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50563ca5-7c18-4327-af8a-904f9e682c26",
        "parentId" : null,
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "please add docs for the params.",
        "createdAt" : "2019-11-25T15:30:51Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "69b181ca-2fab-4cf2-9495-14c6f9317a97",
        "parentId" : "50563ca5-7c18-4327-af8a-904f9e682c26",
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "at least for the `key` and the `command_to_run` since they belong to the `LocalWorker` and not its base class.",
        "createdAt" : "2019-11-25T15:31:58Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "ff33d256-6248-46f4-87f1-bfccbb263132",
        "parentId" : "50563ca5-7c18-4327-af8a-904f9e682c26",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Added all.",
        "createdAt" : "2019-11-25T23:35:52Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "0904b516d3537e9ca52592972e6380ee6fb25125",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +97,101 @@    \"\"\"\n    Local worker that executes the task.\n\n    :param result_queue: queue where results of the tasks are put.\n    :param key: key identifying task instance"
  },
  {
    "id" : "df01a8fa-16af-43aa-a6db-3e2238d9123d",
    "prId" : 6596,
    "prUrl" : "https://github.com/apache/airflow/pull/6596#pullrequestreview-322647757",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86682bd2-684c-4544-a88c-697d9cad59cc",
        "parentId" : null,
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "Docs regarding `parallelism` ?",
        "createdAt" : "2019-11-25T15:33:26Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "25c16381-9f69-4bb9-861c-a36aa9b83544",
        "parentId" : "86682bd2-684c-4544-a88c-697d9cad59cc",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Added.",
        "createdAt" : "2019-11-25T23:36:12Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "0904b516d3537e9ca52592972e6380ee6fb25125",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +144,148 @@    \"\"\"\n    LocalExecutor executes tasks locally in parallel.\n    It uses the multiprocessing Python library and queues to parallelize the execution\n    of tasks.\n"
  },
  {
    "id" : "3de4f443-149e-4db4-a99c-f6da690f698c",
    "prId" : 6596,
    "prUrl" : "https://github.com/apache/airflow/pull/6596#pullrequestreview-323651839",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9202b949-876a-4cfd-8e14-d30f817fabd8",
        "parentId" : null,
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "```suggestion\r\n```",
        "createdAt" : "2019-11-27T11:18:42Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "9c5ef904-66bd-4918-9685-a189caf5ebe3",
        "parentId" : "9202b949-876a-4cfd-8e14-d30f817fabd8",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Yeah! It failed docs :(",
        "createdAt" : "2019-11-27T12:55:38Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "0904b516d3537e9ca52592972e6380ee6fb25125",
    "line" : 347,
    "diffHunk" : "@@ -1,1 +314,318 @@        \"\"\"\n        Ends the executor.\n        :return:\n        \"\"\"\n        assert self.impl, NOT_STARTED_MESSAGE"
  },
  {
    "id" : "306f33ec-b293-4e9a-a0de-6afd3e8b7d0e",
    "prId" : 6596,
    "prUrl" : "https://github.com/apache/airflow/pull/6596#pullrequestreview-325429864",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "744f4d9c-dc6b-40f5-a1ca-3c846f180935",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Did we not say that inside the core this should be imported from `airflow.exceptions` directly?",
        "createdAt" : "2019-12-02T12:14:11Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "318159f4-b5b7-4963-8270-719f602a7118",
        "parentId" : "744f4d9c-dc6b-40f5-a1ca-3c846f180935",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I don't think it matters that much any more. for sure it does not matter for the \"python\" cyclic imports (as you explained) but it matters for Pylint ones (those are detected differently - using different algorithms). I think that Pylint cycles are slightly less forgiving but still valid and they are working in a slightly different way (still have not figured all the details). But I think it does not matter any more for most of the imports from airflow (now that we removed operators/hooks/ etc. It still matters for 'models' because we are importing all models there so I prefer to keep 'from airflow.models.baseoperator import BaseOperator' in the core rather than 'from airflow.models import BaseOperator'. We might revisit that in the future however.",
        "createdAt" : "2019-12-02T18:08:12Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "0904b516d3537e9ca52592972e6380ee6fb25125",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +49,53 @@from typing import Any, List, Optional, Tuple, Union  # pylint: disable=unused-import # noqa: F401\n\nfrom airflow import AirflowException\nfrom airflow.executors.base_executor import NOT_STARTED_MESSAGE, PARALLELISM, BaseExecutor, CommandType\nfrom airflow.models.taskinstance import (  # pylint: disable=unused-import # noqa: F401"
  }
]