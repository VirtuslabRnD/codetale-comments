[
  {
    "id" : "096379b1-f846-46ff-848c-85b6fb45ae4a",
    "prId" : 1378,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c93d6036-8ede-434e-9f08-345f0fa9ddf0",
        "parentId" : null,
        "authorId" : "06a356e2-8fb5-4f99-b8bb-46ce12d2daa0",
        "body" : "Nit: Should log if the state is running\n",
        "createdAt" : "2016-05-09T18:38:46Z",
        "updatedAt" : "2016-05-09T21:19:15Z",
        "lastEditedBy" : "06a356e2-8fb5-4f99-b8bb-46ce12d2daa0",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1aa93f1a7c9dbe88889b78b541b3abe05ded081",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +95,99 @@            self.queued_tasks.pop(key)\n            ti.refresh_from_db()\n            if ti.state != State.RUNNING:\n                self.running[key] = command\n                self.execute_async(key, command=command, queue=queue)"
  },
  {
    "id" : "035251b0-8442-46d7-bf3e-63d38ac8e30f",
    "prId" : 6596,
    "prUrl" : "https://github.com/apache/airflow/pull/6596#pullrequestreview-322653949",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0589b7a6-c335-49d5-ac59-bff568d77016",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "hmmm... , do we want to raise an error here? ",
        "createdAt" : "2019-11-25T18:54:27Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "8eb2280e-ab75-4b78-8661-e882b26acb7e",
        "parentId" : "0589b7a6-c335-49d5-ac59-bff568d77016",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I wanted to keep the original behaviour. pop(key, None) will return None if no key found. I changed Dict to Set, but I wanted to keep the default behaviour anyway.",
        "createdAt" : "2019-11-25T23:55:21Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "0904b516d3537e9ca52592972e6380ee6fb25125",
    "line" : 210,
    "diffHunk" : "@@ -1,1 +180,184 @@        try:\n            self.running.remove(key)\n        except KeyError:\n            self.log.debug('Could not find key: %s', str(key))\n        self.event_buffer[key] = state"
  },
  {
    "id" : "784ed9f3-8e78-4e46-9e2c-8e5bd1c9a6dc",
    "prId" : 6933,
    "prUrl" : "https://github.com/apache/airflow/pull/6933#pullrequestreview-336892878",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6078c23c-2f12-43e6-a0d1-47088d3cc59b",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "What do you think about making this a property?",
        "createdAt" : "2019-12-27T23:28:36Z",
        "updatedAt" : "2019-12-27T23:28:37Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "d73c91c1-8557-4dac-8cc1-e7dd50b0e011",
        "parentId" : "6078c23c-2f12-43e6-a0d1-47088d3cc59b",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This could make it harder to understand the code.  Note that a loop is used below that iterates over the result of this function, but at the same time modifies self.queued_tasks). If we create a property here, it will be difficult to see that property and self.queued_task are related.",
        "createdAt" : "2019-12-28T00:32:41Z",
        "updatedAt" : "2019-12-28T00:32:42Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "d063dee39238760ea24c95ce06cf9b35d5a32f72",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +151,155 @@        self.sync()\n\n    def order_queued_tasks_by_priority(self) -> List[Tuple[TaskInstanceKeyType, QueuedTaskInstanceType]]:\n        \"\"\"\n        Orders the queued tasks by priority."
  },
  {
    "id" : "d07b6cf6-d345-4ede-9fff-043ca5ac044b",
    "prId" : 14861,
    "prUrl" : "https://github.com/apache/airflow/pull/14861#pullrequestreview-615223734",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23e2adca-5005-4ce6-88f4-f50799f9b9eb",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Celery Executor already overrides this method:\r\n\r\nhttps://github.com/apache/airflow/blob/2a2adb3f94cc165014d746102e12f9620f271391/airflow/executors/celery_executor.py#L244-L263",
        "createdAt" : "2021-03-17T20:49:06Z",
        "updatedAt" : "2021-03-18T11:43:23Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "3e3d087f-bc1f-49ec-a799-a2b39361e0e3",
        "parentId" : "23e2adca-5005-4ce6-88f4-f50799f9b9eb",
        "authorId" : "49c92c7a-ebbe-4869-86bc-65607ecceee2",
        "body" : "Yep celery is not broken as it does override the `trigger_tasks` to pass the queue.\r\n\r\nThe BaseExecutor should expose all the functionality (like it used to) though without having to have executors override this function? Otherwise the queue argument to `execute_async` is redundant?",
        "createdAt" : "2021-03-17T20:58:50Z",
        "updatedAt" : "2021-03-18T11:43:23Z",
        "lastEditedBy" : "49c92c7a-ebbe-4869-86bc-65607ecceee2",
        "tags" : [
        ]
      },
      {
        "id" : "7fdf5f76-9b5e-49d6-8a33-27f998286850",
        "parentId" : "23e2adca-5005-4ce6-88f4-f50799f9b9eb",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Oh yeah 👍 ",
        "createdAt" : "2021-03-18T10:48:36Z",
        "updatedAt" : "2021-03-18T11:43:23Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "5394858bb772ab21722da14f9e5335614e9d135a",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +186,190 @@            self.queued_tasks.pop(key)\n            self.running.add(key)\n            self.execute_async(key=key, command=command, queue=queue, executor_config=ti.executor_config)\n\n    def change_state(self, key: TaskInstanceKey, state: str, info=None) -> None:"
  }
]