[
  {
    "id" : "2f2ec912-311d-44c6-a19e-bb7a3037e4e2",
    "prId" : 3740,
    "prUrl" : "https://github.com/apache/airflow/pull/3740#pullrequestreview-148855599",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04b32474-41e0-47b4-834b-715db797e0a9",
        "parentId" : null,
        "authorId" : "b2325481-de41-4b6d-a7c1-7152249759ba",
        "body" : "@bolkedebruin \r\nJust found an issue for this commit. The update for function \"apply_async\" will crash scheduler when using celery executor. Tested in local environment.\r\nConcern for update in line 87:\r\n>**Before**: \r\n>`args=[command]`  and command is a unicode type string . \r\n> samples: `command = \"airflow run dag323...\"` and at this time `args = [\"airflow run example\"]`\r\n>`execute_command(\"airflow run dag323\")` asynchronously\r\n>**After**: \r\n>`args=command` and command is a list of short unicode strings.\r\n> samples: `command = [\"airflow\", \"run\", \"dag323\",...]` and now`args = [\"airflow\", \"run\", \"dag323\", ...]`\r\n>`execute_command(\"airflow\", \"run\", \"dag323\",...)` ** Error here**\r\n\r\n`execute_command.apply_async(args = command, queue = queue)` will pass a list of arguments rather than one to function `execute_command` which is defined as taking only one argument. The test in test_celery_executor.py right now only have one item in the testing `command` list and can not cover this case.",
        "createdAt" : "2018-08-22T00:44:42Z",
        "updatedAt" : "2018-08-22T00:46:06Z",
        "lastEditedBy" : "b2325481-de41-4b6d-a7c1-7152249759ba",
        "tags" : [
        ]
      },
      {
        "id" : "59ee547c-d368-4b3e-891c-35a7cb1b6587",
        "parentId" : "04b32474-41e0-47b4-834b-715db797e0a9",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "@YingboWang , good find. Do you want to create a pr for this issue?",
        "createdAt" : "2018-08-22T03:41:54Z",
        "updatedAt" : "2018-08-22T03:41:55Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "575e7d36-2933-4812-af17-564e8ef577e7",
        "parentId" : "04b32474-41e0-47b4-834b-715db797e0a9",
        "authorId" : "b2325481-de41-4b6d-a7c1-7152249759ba",
        "body" : "I would like to. ",
        "createdAt" : "2018-08-22T04:43:06Z",
        "updatedAt" : "2018-08-22T04:43:06Z",
        "lastEditedBy" : "b2325481-de41-4b6d-a7c1-7152249759ba",
        "tags" : [
        ]
      },
      {
        "id" : "bee26ca4-ed1b-40fc-8b7a-5b9304735143",
        "parentId" : "04b32474-41e0-47b4-834b-715db797e0a9",
        "authorId" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "body" : "Good catch! I do think renaming the parmeter is the right way. \r\n\r\nUpdate: strike that got why it happens with celery",
        "createdAt" : "2018-08-23T10:50:46Z",
        "updatedAt" : "2018-08-23T10:53:18Z",
        "lastEditedBy" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7403b86f0543a673e9b74e592184853e25faae9",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +85,89 @@                      \"queue={queue}\".format(**locals()))\n        self.tasks[key] = execute_command.apply_async(\n            args=command, queue=queue)\n        self.last_state[key] = celery_states.PENDING\n"
  }
]