[
  {
    "id" : "783ae6e5-c249-4256-b79c-e2a382c12692",
    "prId" : 13501,
    "prUrl" : "https://github.com/apache/airflow/pull/13501#pullrequestreview-562905929",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2466697-484e-4250-93ca-28eeca073f9e",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Should we also do this in case we have secret backend? ",
        "createdAt" : "2021-01-06T11:22:59Z",
        "updatedAt" : "2021-01-10T01:00:41Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "2e5ac2a8-7051-46f9-b81f-d629bb8a47ce",
        "parentId" : "f2466697-484e-4250-93ca-28eeca073f9e",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This is a bit more complicated case as this will require sending an additional request to the secret backend. The new request can be problematic in some environments as access to data in the secret is precisely monitored and audited. So even queries to check if there is an item in the backend will mean that the security department may be concerned. Especially since we don't have an API that allows us to check the existence of a key without downloading a secret.\r\n\r\nIn this change, I wanted to improve the experience of novice developers who are just starting to use Airflow and may not fully understand all the limitations. Such users suspect that they don't use the secret backend, so I don't think the lack of backend secret support is a big problem.",
        "createdAt" : "2021-01-06T11:56:39Z",
        "updatedAt" : "2021-01-10T01:00:41Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "7703487c-1b7e-471e-87b8-feabfd29d355",
        "parentId" : "f2466697-484e-4250-93ca-28eeca073f9e",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Yep. I realize this is more complex. So it should be part of separate PR. And rather than querying the backend, I'd rather add somewhere an info like \"origin\" of a variable, so when it is read, we'd now it comes from secret backend rather than db or something like that - so that we do not increase number of queries to the DB. This should pretty simple to implement and fairly robust (I believe in all cases the variable should be read before it is written to - we might want to check all places, but it should be the case already).",
        "createdAt" : "2021-01-06T17:34:17Z",
        "updatedAt" : "2021-01-10T01:00:41Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "66826337d6bc51a24fb8f06d6841442ae07c0673",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +148,152 @@        :param session: SQL Alchemy Sessions\n        \"\"\"\n        env_var_name = \"AIRFLOW_VAR_\" + key.upper()\n        if env_var_name in os.environ:\n            log.warning("
  },
  {
    "id" : "b949d66a-76eb-4e8a-bfa8-c949d35d13a9",
    "prId" : 15194,
    "prUrl" : "https://github.com/apache/airflow/pull/15194#pullrequestreview-637544841",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "176c62f8-d076-4a90-8f1d-2fbf751cc85d",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Can we add some tests for this feature please",
        "createdAt" : "2021-04-12T17:03:55Z",
        "updatedAt" : "2021-04-12T17:03:55Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "2999f4e0-184e-4141-aa96-4375464c3704",
        "parentId" : "176c62f8-d076-4a90-8f1d-2fbf751cc85d",
        "authorId" : "f6715141-ee0f-4099-880c-ac4ecaf40d3a",
        "body" : "@kaxil Since this is a feature only viewable/editable from the UI, what tests would you suggest? Just including the description field in [this line](https://github.com/apache/airflow/blob/master/tests/www/test_views.py#L275) would suffice? \r\nThanks in advance!",
        "createdAt" : "2021-04-12T17:17:45Z",
        "updatedAt" : "2021-04-12T17:17:45Z",
        "lastEditedBy" : "f6715141-ee0f-4099-880c-ac4ecaf40d3a",
        "tags" : [
        ]
      },
      {
        "id" : "57152790-46e5-4b3d-8910-b2f58395963f",
        "parentId" : "176c62f8-d076-4a90-8f1d-2fbf751cc85d",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Probably just a separate test in that file, the simply tests that you can set description to a variable, which is peristed to db and when you do `Variable.get` you get the same description field",
        "createdAt" : "2021-04-12T17:58:09Z",
        "updatedAt" : "2021-04-12T17:58:10Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "6c296c62-9418-4d46-a905-9ac78ae67f9f",
        "parentId" : "176c62f8-d076-4a90-8f1d-2fbf751cc85d",
        "authorId" : "f6715141-ee0f-4099-880c-ac4ecaf40d3a",
        "body" : "@kaxil The thing is that following @kurtqq 's suggestion in [the issue](https://github.com/apache/airflow/issues/12413#issuecomment-809671348), I didn't modify the `Variable.get` method so it won't return the description. \r\n\r\nI may be missing something though, let me know what do you think.",
        "createdAt" : "2021-04-15T10:59:21Z",
        "updatedAt" : "2021-04-15T10:59:21Z",
        "lastEditedBy" : "f6715141-ee0f-4099-880c-ac4ecaf40d3a",
        "tags" : [
        ]
      },
      {
        "id" : "562f1afc-67ea-4912-a819-c88bfda0f2cf",
        "parentId" : "176c62f8-d076-4a90-8f1d-2fbf751cc85d",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "That is debatable :) -- but anyways for now you could just do `session.query(Variable.key, Variable.description).first()` and just verify that",
        "createdAt" : "2021-04-15T14:36:40Z",
        "updatedAt" : "2021-04-15T14:36:40Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "9f450345-3c66-4c5d-98ba-1f7d97f3be46",
        "parentId" : "176c62f8-d076-4a90-8f1d-2fbf751cc85d",
        "authorId" : "f6715141-ee0f-4099-880c-ac4ecaf40d3a",
        "body" : "Thanks a lot for the tips! I rebased, implemented it and pushed in my branch but I guess a new PR is needed, right?",
        "createdAt" : "2021-04-15T22:08:10Z",
        "updatedAt" : "2021-04-15T22:08:11Z",
        "lastEditedBy" : "f6715141-ee0f-4099-880c-ac4ecaf40d3a",
        "tags" : [
        ]
      },
      {
        "id" : "6f6cbc66-5cdb-478c-a30e-8c171bddc656",
        "parentId" : "176c62f8-d076-4a90-8f1d-2fbf751cc85d",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Yup : )",
        "createdAt" : "2021-04-15T22:43:41Z",
        "updatedAt" : "2021-04-15T22:43:41Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "c772623f-0d83-4ac5-90ee-b37b94348f00",
        "parentId" : "176c62f8-d076-4a90-8f1d-2fbf751cc85d",
        "authorId" : "f6715141-ee0f-4099-880c-ac4ecaf40d3a",
        "body" : "I've created #15400. Thanks again!",
        "createdAt" : "2021-04-16T10:10:59Z",
        "updatedAt" : "2021-04-16T10:11:00Z",
        "lastEditedBy" : "f6715141-ee0f-4099-880c-ac4ecaf40d3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa1b80e42873ac14710005fb18e31d6ce112ddb0",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +55,59 @@        self.key = key\n        self.val = val\n        self.description = description\n\n    def __repr__(self):"
  }
]