[
  {
    "id" : "4e08add4-5678-43f8-a936-023d8728f0f3",
    "prId" : 7217,
    "prUrl" : "https://github.com/apache/airflow/pull/7217#pullrequestreview-363300792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a65dbe06-82ad-467a-8605-99ccf6991c7c",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "```suggestion\r\n    @staticmethod\r\n```\r\n\r\nSince we don't look at `cls` inside :)",
        "createdAt" : "2020-02-24T10:52:59Z",
        "updatedAt" : "2020-03-13T14:51:56Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7fbf91b909445900f283a361ba0b4af59f05242",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +152,156 @@                     cls.fileloc.notin_(alive_dag_filelocs))).delete())\n\n    @classmethod\n    @provide_session\n    def has_dag(cls, fileloc: str, session=None) -> bool:"
  },
  {
    "id" : "93f35c49-0425-4e6d-8504-d658e1fb8482",
    "prId" : 7217,
    "prUrl" : "https://github.com/apache/airflow/pull/7217#pullrequestreview-389760318",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0690512-ebdf-4288-a143-a70a9c5384a3",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "@anitakar Did you mean for this construct to ignore the least-significant byte?\r\n\r\nLocation: `/home/ash/airflow/dags/example.py`\r\nSHA1 (hex) `0x78288e229ef15e32a7a32e1fd123d9fc60b5eae0`\r\nfileloc_hash: `58867689281598954`\r\nfileloc_hash hex: `d123d9fc60b5ea`\r\n\r\ni.e. it ignores/removes the `e0` from the end.",
        "createdAt" : "2020-04-07T16:29:28Z",
        "updatedAt" : "2020-04-07T16:29:59Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "d0e3bd44-30f5-452c-a241-539346d5e1a8",
        "parentId" : "f0690512-ebdf-4288-a143-a70a9c5384a3",
        "authorId" : "6f949a1e-f537-44c5-bf07-bd4c568b44ba",
        "body" : "In all honesty I wanted to use all 8 bytes of mysql biginteger.\r\nI used another construct before but it was not working with python 2, so I have changed it to use python struct. But I should have used signed long long instead of unsigned long long.\r\nWhen I have noted it the code was too close to releasing and 7 bytes is enough anyway (https://cloud.google.com/composer/docs/release-notes).",
        "createdAt" : "2020-04-08T08:14:54Z",
        "updatedAt" : "2020-04-08T08:14:54Z",
        "lastEditedBy" : "6f949a1e-f537-44c5-bf07-bd4c568b44ba",
        "tags" : [
        ]
      },
      {
        "id" : "3a08a3e0-c924-469d-bdef-f0191b8e0344",
        "parentId" : "f0690512-ebdf-4288-a143-a70a9c5384a3",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Figured it was something like that, just wanted to check if there was a deeper reason. Thanks.",
        "createdAt" : "2020-04-08T08:31:41Z",
        "updatedAt" : "2020-04-08T08:31:42Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7fbf91b909445900f283a361ba0b4af59f05242",
    "line" : 213,
    "diffHunk" : "@@ -1,1 +211,215 @@        # Only 7 bytes because MySQL BigInteger can hold only 8 bytes (signed).\n        return struct.unpack('>Q', hashlib.sha1(\n            full_filepath.encode('utf-8')).digest()[-8:])[0] >> 8"
  },
  {
    "id" : "2225df31-5218-4277-9c1a-2df81b55a5d4",
    "prId" : 8159,
    "prUrl" : "https://github.com/apache/airflow/pull/8159#pullrequestreview-388237119",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "efc1a4ec-5862-4a1c-a13c-4861d0bea73a",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I don't like this method name. It describes what he does. It does not contain any verb. However, this is not related to this PR. It should be `get_code_by_fileloc` or something similar.",
        "createdAt" : "2020-04-06T13:15:39Z",
        "updatedAt" : "2020-04-06T13:17:12Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "bce74d52-265d-4f6f-93f7-95b46b7a9540",
        "parentId" : "efc1a4ec-5862-4a1c-a13c-4861d0bea73a",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "I have a separate PR to improve the code in this file, that I have targetted against Master but yeah that is not the priority for now.",
        "createdAt" : "2020-04-06T13:16:36Z",
        "updatedAt" : "2020-04-06T13:16:36Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad717f1c765371b528c65bdae1e6319969729980",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +175,179 @@\n    @classmethod\n    def code(cls, fileloc):\n        \"\"\"Returns source code for this DagCode object.\n"
  },
  {
    "id" : "1ba33322-72fb-4b1c-a99d-2c9970c4b660",
    "prId" : 9973,
    "prUrl" : "https://github.com/apache/airflow/pull/9973#pullrequestreview-655041044",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70a44615-36bf-4237-9589-27a61d3e4b84",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "is literal(True) == exists() here ? can you point me to docs please",
        "createdAt" : "2021-04-15T15:24:05Z",
        "updatedAt" : "2021-05-11T09:34:03Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "ee048b7a-f481-4179-8255-bfd3d3d977fa",
        "parentId" : "70a44615-36bf-4237-9589-27a61d3e4b84",
        "authorId" : "3743a72b-fdd8-43b7-9592-037bac8942e2",
        "body" : "mssql doesn't support exists in select query , i.e it doesn't support\r\n\r\n```\r\nSELECT EXISTS (SELECT *\r\nFROM dag_code\r\nWHERE dag_code.fileloc_hash = 15056821532142474) AS anon_1\r\n```\r\n\r\nhttps://github.com/apache/airflow/pull/9973#issuecomment-665492863",
        "createdAt" : "2021-05-09T05:10:33Z",
        "updatedAt" : "2021-05-11T09:34:03Z",
        "lastEditedBy" : "3743a72b-fdd8-43b7-9592-037bac8942e2",
        "tags" : [
        ]
      },
      {
        "id" : "ecd235b7-fa07-49f1-907e-0d4ea8ad11a2",
        "parentId" : "70a44615-36bf-4237-9589-27a61d3e4b84",
        "authorId" : "3743a72b-fdd8-43b7-9592-037bac8942e2",
        "body" : "@kaxil  should it be \r\n`return session.query(literal(True)).filter(cls.fileloc_hash == fileloc_hash).first() is not None`\r\ninstead of \r\n`return session.query(literal(True)).filter(cls.fileloc_hash == fileloc_hash).one_or_none() is not None` ?\r\n\r\nI mean is it expected to have multiple duplicate fileloc_hash ?",
        "createdAt" : "2021-05-09T05:15:10Z",
        "updatedAt" : "2021-05-11T09:34:03Z",
        "lastEditedBy" : "3743a72b-fdd8-43b7-9592-037bac8942e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f12e0077675cc79ef5495fd7ea425cea60a49f28",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +149,153 @@        \"\"\"\n        fileloc_hash = cls.dag_fileloc_hash(fileloc)\n        return session.query(literal(True)).filter(cls.fileloc_hash == fileloc_hash).one_or_none() is not None\n\n    @classmethod"
  }
]