[
  {
    "id" : "4e08add4-5678-43f8-a936-023d8728f0f3",
    "prId" : 7217,
    "prUrl" : "https://github.com/apache/airflow/pull/7217#pullrequestreview-363300792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a65dbe06-82ad-467a-8605-99ccf6991c7c",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "```suggestion\r\n    @staticmethod\r\n```\r\n\r\nSince we don't look at `cls` inside :)",
        "createdAt" : "2020-02-24T10:52:59Z",
        "updatedAt" : "2020-03-13T14:51:56Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7fbf91b909445900f283a361ba0b4af59f05242",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +152,156 @@                     cls.fileloc.notin_(alive_dag_filelocs))).delete())\n\n    @classmethod\n    @provide_session\n    def has_dag(cls, fileloc: str, session=None) -> bool:"
  },
  {
    "id" : "93f35c49-0425-4e6d-8504-d658e1fb8482",
    "prId" : 7217,
    "prUrl" : "https://github.com/apache/airflow/pull/7217#pullrequestreview-389760318",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0690512-ebdf-4288-a143-a70a9c5384a3",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "@anitakar Did you mean for this construct to ignore the least-significant byte?\r\n\r\nLocation: `/home/ash/airflow/dags/example.py`\r\nSHA1 (hex) `0x78288e229ef15e32a7a32e1fd123d9fc60b5eae0`\r\nfileloc_hash: `58867689281598954`\r\nfileloc_hash hex: `d123d9fc60b5ea`\r\n\r\ni.e. it ignores/removes the `e0` from the end.",
        "createdAt" : "2020-04-07T16:29:28Z",
        "updatedAt" : "2020-04-07T16:29:59Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "d0e3bd44-30f5-452c-a241-539346d5e1a8",
        "parentId" : "f0690512-ebdf-4288-a143-a70a9c5384a3",
        "authorId" : "6f949a1e-f537-44c5-bf07-bd4c568b44ba",
        "body" : "In all honesty I wanted to use all 8 bytes of mysql biginteger.\r\nI used another construct before but it was not working with python 2, so I have changed it to use python struct. But I should have used signed long long instead of unsigned long long.\r\nWhen I have noted it the code was too close to releasing and 7 bytes is enough anyway (https://cloud.google.com/composer/docs/release-notes).",
        "createdAt" : "2020-04-08T08:14:54Z",
        "updatedAt" : "2020-04-08T08:14:54Z",
        "lastEditedBy" : "6f949a1e-f537-44c5-bf07-bd4c568b44ba",
        "tags" : [
        ]
      },
      {
        "id" : "3a08a3e0-c924-469d-bdef-f0191b8e0344",
        "parentId" : "f0690512-ebdf-4288-a143-a70a9c5384a3",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Figured it was something like that, just wanted to check if there was a deeper reason. Thanks.",
        "createdAt" : "2020-04-08T08:31:41Z",
        "updatedAt" : "2020-04-08T08:31:42Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7fbf91b909445900f283a361ba0b4af59f05242",
    "line" : 213,
    "diffHunk" : "@@ -1,1 +211,215 @@        # Only 7 bytes because MySQL BigInteger can hold only 8 bytes (signed).\n        return struct.unpack('>Q', hashlib.sha1(\n            full_filepath.encode('utf-8')).digest()[-8:])[0] >> 8"
  }
]