[
  {
    "id" : "b9168b14-cb97-469a-966d-2121c3345a38",
    "prId" : 5499,
    "prUrl" : "https://github.com/apache/airflow/pull/5499#pullrequestreview-465262534",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4161a02a-0e23-4a55-b059-36cd13a4cb09",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Just to confirm here, the state of SENSING just means the \"Sensor DAG\" has this task, or does it mean this TI is currently being Poked ?",
        "createdAt" : "2020-08-07T15:42:24Z",
        "updatedAt" : "2020-09-08T11:37:36Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "d6bbb2f5-40b4-4d88-b1c7-148217385a50",
        "parentId" : "4161a02a-0e23-4a55-b059-36cd13a4cb09",
        "authorId" : "b2325481-de41-4b6d-a7c1-7152249759ba",
        "body" : "\"sensing\" state means this TI is currently being poked by smart sensor.",
        "createdAt" : "2020-08-11T17:05:27Z",
        "updatedAt" : "2020-09-08T11:37:36Z",
        "lastEditedBy" : "b2325481-de41-4b6d-a7c1-7152249759ba",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b5bbff3492fab908dd1c8142ba3beaa3fb274c2",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +284,288 @@        # This is designed so that task logs end up in the right file.\n        # TODO: whether we need sensing here or not (in sensor and task_instance state machine)\n        if self.state in State.running():\n            return self._try_number\n        return self._try_number + 1"
  },
  {
    "id" : "1a0ea48f-524c-4906-b622-ee6b1603384a",
    "prId" : 6596,
    "prUrl" : "https://github.com/apache/airflow/pull/6596#pullrequestreview-323709508",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "556643bc-f654-4cc8-a460-84c6014a529e",
        "parentId" : null,
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "In my opinion it doesn't make sense to specify the return type if it's `None`.",
        "createdAt" : "2019-11-27T11:26:44Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "4924110b-e2cb-4eb5-a3e1-1c94bfbff885",
        "parentId" : "556643bc-f654-4cc8-a460-84c6014a529e",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "There is a subtle difference explained here: https://realpython.com/python-type-checking/#functions-without-return-values  \r\n\r\nIf you specify -> None, then you will get warning if you try to assign return value to a variable. If you don't - you get no warning (None is still a valid return value that you can assign to something). So I started to add it (but not consistently, True). \r\nI might review the changes and add -> None in all the affected non-return functions and try to do it in the future as well.\r\n\r\nWDYT @feluelle ?",
        "createdAt" : "2019-11-27T13:23:32Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "89de60cd-0ba5-4cc2-96fb-4a51c3d9d259",
        "parentId" : "556643bc-f654-4cc8-a460-84c6014a529e",
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "If we do it consistently then I am fine with it (actually I like it more :D). Because it programming languages like Java or C# I got used to specify `void` for no return value.\r\n\r\nSo if we can somehow force this to be defined I would go for it. 👍 ",
        "createdAt" : "2019-11-27T13:58:32Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "d013f62c-0998-4478-ba1d-b1a76d3001a9",
        "parentId" : "556643bc-f654-4cc8-a460-84c6014a529e",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Some time in the future :)",
        "createdAt" : "2019-11-27T14:23:03Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "0904b516d3537e9ca52592972e6380ee6fb25125",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +422,426 @@\n    @provide_session\n    def refresh_from_db(self, session=None, lock_for_update=False, refresh_executor_config=False) -> None:\n        \"\"\"\n        Refreshes the task instance from the database based on the primary key"
  },
  {
    "id" : "cf2b3f8e-5b5e-42cf-a88d-f8c2c2bb9239",
    "prId" : 6740,
    "prUrl" : "https://github.com/apache/airflow/pull/6740#pullrequestreview-328176986",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c7c73ea-b6ba-4dcd-bb2f-0ddddd3268e0",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "It would be great to explain why in a comment.",
        "createdAt" : "2019-12-06T09:11:05Z",
        "updatedAt" : "2019-12-12T14:03:46Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "2c7c0db8-9b51-4385-8b2a-820ef57e2f62",
        "parentId" : "7c7c73ea-b6ba-4dcd-bb2f-0ddddd3268e0",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Done",
        "createdAt" : "2019-12-06T12:37:12Z",
        "updatedAt" : "2019-12-12T14:03:46Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbae6ac73ac71041c17bb41c66256137810d6475",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +899,903 @@\n                task_copy = copy.copy(task)\n\n                # Sensors in `poke` mode can block execution of DAGs when running\n                # with single process executor, thus we change the mode to`reschedule`"
  },
  {
    "id" : "0a499019-b55c-4f1d-8139-74d0646d1400",
    "prId" : 6788,
    "prUrl" : "https://github.com/apache/airflow/pull/6788#pullrequestreview-371062339",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b496d51-bb60-499c-8267-e9de8d490dd5",
        "parentId" : null,
        "authorId" : "6f949a1e-f537-44c5-bf07-bd4c568b44ba",
        "body" : "Quite generic question, maybe even an open discussion here.\r\nSTORE_SERIALIZED_DAGS comes from settings.py and is loaded when application (like webserver or scheduler) starts.\r\nIf we use such variables this property stops being dynamic.\r\nBut with scheduler reloading dags every now and then, it could be.\r\n\r\nDo we want to enforce that changing core.store_serialized_dags only takes effect if you restart?\r\nIt is not crucial that it is dynamic but if it can be dynamic why should not it be?",
        "createdAt" : "2020-03-08T19:37:03Z",
        "updatedAt" : "2020-03-12T00:21:48Z",
        "lastEditedBy" : "6f949a1e-f537-44c5-bf07-bd4c568b44ba",
        "tags" : [
        ]
      },
      {
        "id" : "11b56dea-c74d-45fa-b44f-fde622e041a6",
        "parentId" : "9b496d51-bb60-499c-8267-e9de8d490dd5",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "constant vs reading from `conf.getboolean` everytime wouldn't make a difference, as the `airflow.config` is loaded once at main-process start up, and the parsing sub-process forks so keeps the same loaded config -- i.e. it doesn't re-read the config file.",
        "createdAt" : "2020-03-09T10:41:58Z",
        "updatedAt" : "2020-03-12T00:21:48Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "84d5e27e49ffd0154c6a2846d33f962ab4942a8d",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +930,934 @@\n                self.render_templates(context=context)\n                if STORE_SERIALIZED_DAGS:\n                    RTIF.write(RTIF(ti=self, render_templates=False), session=session)\n                    RTIF.delete_old_records(self.task_id, self.dag_id, session=session)"
  }
]