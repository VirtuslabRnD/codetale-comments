[
  {
    "id" : "c5f14f9e-27ab-4ffd-a720-6aa38915a2b4",
    "prId" : 5079,
    "prUrl" : "https://github.com/apache/airflow/pull/5079#pullrequestreview-260483678",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d973609b-ef0e-4760-b43e-71d49b499fed",
        "parentId" : null,
        "authorId" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "body" : "Great work on consolidating this kind of sets.",
        "createdAt" : "2019-07-11T06:04:53Z",
        "updatedAt" : "2019-08-13T00:04:27Z",
        "lastEditedBy" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b82718b2d8e5367219f602212d930685d957f12f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +67,71 @@            .query(TaskInstance)\n            .filter(TaskInstance.pool == self.pool)\n            .filter(TaskInstance.state.in_(STATES_TO_COUNT_AS_RUNNING))\n            .count()\n        )"
  },
  {
    "id" : "07908e7d-eadf-4281-a3ad-5ddc8e8ceb29",
    "prId" : 5194,
    "prUrl" : "https://github.com/apache/airflow/pull/5194#pullrequestreview-231883493",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59c77e14-bf87-43be-a9a9-1c1b434f3bc6",
        "parentId" : null,
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "Will we have any race issue here? Do we do a guard to make sure `total_slots - used_slots` is always larger or equal than 0?",
        "createdAt" : "2019-04-29T16:44:51Z",
        "updatedAt" : "2019-04-29T16:45:47Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "689172ff-67ca-402d-836b-51196675756f",
        "parentId" : "59c77e14-bf87-43be-a9a9-1c1b434f3bc6",
        "authorId" : "a3c64a30-509c-4788-80d1-4f17cb3b5530",
        "body" : "Yes we may have race issue and other cases causing the result to be negative( e.g. force triggered backfills). Right now the usage of this method does check the result using `<= 0` so even if we got negative returns we're fine. And logically I think it makes more sense to return negative values if we're overwhelming the pool. What do you think?",
        "createdAt" : "2019-04-29T19:12:57Z",
        "updatedAt" : "2019-04-29T19:12:58Z",
        "lastEditedBy" : "a3c64a30-509c-4788-80d1-4f17cb3b5530",
        "tags" : [
        ]
      },
      {
        "id" : "a6df3294-aa5f-46dd-a68a-773674747881",
        "parentId" : "59c77e14-bf87-43be-a9a9-1c1b434f3bc6",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "lgtm",
        "createdAt" : "2019-04-29T20:23:54Z",
        "updatedAt" : "2019-04-29T20:23:54Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb4a183ee574da03e77a867ad89e893c5289b3a7",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +47,51 @@            TI.pool == Pool.default_pool_name).filter(\n            TI.state.in_([State.RUNNING, State.QUEUED])).scalar()\n        return total_slots - used_slots\n\n    def to_json(self):"
  },
  {
    "id" : "62d8e9a7-c7e9-4340-abd9-2691213c4773",
    "prId" : 5210,
    "prUrl" : "https://github.com/apache/airflow/pull/5210#pullrequestreview-232323985",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29963455-3c61-47fe-ab42-77862b44472f",
        "parentId" : null,
        "authorId" : "db6eb8b7-c895-4f19-9e3d-6fa0535f27e2",
        "body" : "Before the [change removing this code](https://github.com/apache/airflow/commit/d63b6c9a5d3f8dfcb959daf93dd55dcb710d0e38), the open slots was calculated as slots - used_slots - queued_slots. Should we also restore it like that?",
        "createdAt" : "2019-04-30T17:24:47Z",
        "updatedAt" : "2019-04-30T17:25:58Z",
        "lastEditedBy" : "db6eb8b7-c895-4f19-9e3d-6fa0535f27e2",
        "tags" : [
        ]
      },
      {
        "id" : "db3013b3-eb20-43d4-8b5c-fcc12690d7db",
        "parentId" : "29963455-3c61-47fe-ab42-77862b44472f",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "used_slot already include both tasks in running state and queued state. So no need to minus the queued slots.",
        "createdAt" : "2019-04-30T17:57:07Z",
        "updatedAt" : "2019-04-30T17:57:07Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "ae65c632-aa3f-4f5f-a481-57bcb7699027",
        "parentId" : "29963455-3c61-47fe-ab42-77862b44472f",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "I think it still is? used_slots was State.RUNNING, and queued_slots was State.QUEUED.\r\n\r\nSo now its `slots - (count RUNNING or QUEUED)` = `slots - RUNNING - QUEUED` (just via one query than two).\r\n\r\nI think. It's been a long day.",
        "createdAt" : "2019-04-30T18:08:34Z",
        "updatedAt" : "2019-04-30T18:08:34Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0da3911c5a12a54409d7b6933000531e488e22d",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +100,104 @@        used_slots = session.query(func.count()).filter(TI.pool == self.pool).filter(\n            TI.state.in_([State.RUNNING, State.QUEUED])).scalar()\n        return self.slots - used_slots"
  },
  {
    "id" : "26c9d67e-5405-4965-9592-05ce3b4244f7",
    "prId" : 9833,
    "prUrl" : "https://github.com/apache/airflow/pull/9833#pullrequestreview-448972376",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2a0be47-7fe3-4955-857d-f003361eb66d",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Sorry about that. mypy exploded\r\n```\r\nairflow/models/pool.py:105: error: TypedDict key must be a string literal;\r\nexpected one of ('total', 'running', 'queued')\r\n                pool[state] = count\r\n                     ^\r\nairflow/models/pool.py:111: error: TypedDict \"PoolStats\" has no key 'open'\r\n                    stats[\"open\"] = -1\r\n                          ^\r\nairflow/models/pool.py:113: error: TypedDict \"PoolStats\" has no key 'open'\r\n                    stats[\"open\"] = stats[\"total\"] - stats[State.RUNNING] ...\r\n                          ^\r\nairflow/models/pool.py:113: error: TypedDict key must be a string literal;\r\nexpected one of ('total', 'running', 'queued')\r\n    ...          stats[\"open\"] = stats[\"total\"] - stats[State.RUNNING] - stat...\r\n                                                        ^\r\nairflow/jobs/scheduler_job.py:1754: error: TypedDict \"PoolStats\" has no key\r\n'open'\r\n    ...       Stats.gauge(f'pool.open_slots.{pool_name}', slot_stats[\"open\"])\r\n                                                                     ^\r\nairflow/jobs/scheduler_job.py:1755: error: TypedDict key must be a string\r\nliteral; expected one of ('total', 'running', 'queued')\r\n    ...tats.gauge(f'pool.queued_slots.{pool_name}', slot_stats[State.QUEUED])\r\n                                                               ^\r\nairflow/jobs/scheduler_job.py:1756: error: TypedDict key must be a string\r\nliteral; expected one of ('total', 'running', 'queued')\r\n    ...ts.gauge(f'pool.running_slots.{pool_name}', slot_stats[State.RUNNING])\r\n```",
        "createdAt" : "2020-07-15T13:49:46Z",
        "updatedAt" : "2020-07-15T14:03:26Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ac084315b9dabada84e453985089b7ac9eb5352",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +107,111 @@                continue\n            # TypedDict key must be a string literal, so we use if-statements to set value\n            if state == \"running\":\n                stats_dict[\"running\"] = count\n            elif state == \"queued\":"
  },
  {
    "id" : "9785b730-f235-4823-b09a-ebce6d6c89be",
    "prId" : 10956,
    "prUrl" : "https://github.com/apache/airflow/pull/10956#pullrequestreview-502435010",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a9b9e18-db1f-4ec9-a5ba-313ebad13387",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Those parameter names and the way the if's here are done are pretty confusing. \"with_for_update\" can be method in query, function, bool or dict and it's unclear why we need dict at all. Could we make the code a bit more readable and make it clear why we need for update in one place, but we do not need it in another? I think this all can be achieved by a single bool (\"use_for_update\") parameter ?",
        "createdAt" : "2020-10-05T12:16:52Z",
        "updatedAt" : "2020-10-09T20:52:25Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "5b9fe573-9956-435f-889e-ddba3f77f397",
        "parentId" : "4a9b9e18-db1f-4ec9-a5ba-313ebad13387",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Yeah, this went through a few iterations, and I agree it should be tided up now.",
        "createdAt" : "2020-10-05T13:14:33Z",
        "updatedAt" : "2020-10-09T20:52:25Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "fa2236e3-a82b-44cd-817c-e1a8d8888ec5",
        "parentId" : "4a9b9e18-db1f-4ec9-a5ba-313ebad13387",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Done in https://github.com/apache/airflow/pull/10956/commits/8f357fdf4630df47d4639706516733e0587480dd",
        "createdAt" : "2020-10-05T21:30:20Z",
        "updatedAt" : "2020-10-09T20:52:25Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee0a79a69534e5b3f969e3b496d9518c8e735fe2",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +102,106 @@        pools: Dict[str, PoolStats] = {}\n\n        query = session.query(Pool.pool, Pool.slots)\n\n        if lock_rows:"
  },
  {
    "id" : "4c660827-262e-4a92-bac8-727a7c7976b5",
    "prId" : 15585,
    "prUrl" : "https://github.com/apache/airflow/pull/15585#pullrequestreview-648133019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c478d3a-576f-4b92-919d-14aa9f2cf20b",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Interesting I thought `.scalar()` should take care of it based on https://stackoverflow.com/a/53431701/5691525 too",
        "createdAt" : "2021-04-29T11:54:19Z",
        "updatedAt" : "2021-04-29T11:54:20Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "ab11a999-0e46-411e-a00e-fe4fe15427cf",
        "parentId" : "3c478d3a-576f-4b92-919d-14aa9f2cf20b",
        "authorId" : "a5092e56-4956-45ec-9914-ecec6b63df73",
        "body" : "This is the implementation, there's no magic at all. I guess the SO answer is inaccurate.\n\nhttps://github.com/sqlalchemy/sqlalchemy/blob/b703a9c1be728077e4709c377b0b29a94c052a0b/lib/sqlalchemy/orm/query.py#L2818-L2824",
        "createdAt" : "2021-04-29T12:18:18Z",
        "updatedAt" : "2021-04-29T12:18:19Z",
        "lastEditedBy" : "a5092e56-4956-45ec-9914-ecec6b63df73",
        "tags" : [
        ]
      }
    ],
    "commit" : "fcc316291d9ae22ccb95f845493e54a38d8bf06b",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +167,171 @@            .filter(TaskInstance.state.in_(list(EXECUTION_STATES)))\n            .scalar()\n            or 0\n        )\n"
  }
]