[
  {
    "id" : "d62cc9ee-2757-41d6-b64b-87d94bb55ac7",
    "prId" : 4523,
    "prUrl" : "https://github.com/apache/airflow/pull/4523#pullrequestreview-194514894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cca4b7f7-0782-48e9-92a8-d25fc4a197a4",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "A general comment @mik-laj .  Should not we rather change the Google Connection scheme to be google-cloud-platform rather than replace '_' with '-' ? I think it's more accurate, simply the google_cloud_platform scheme is wrong - according to https://tools.ietf.org/html/rfc3986#page-17  the scheme part of the URI can only contain alphanumeric characters, hyphen or dot. So urlparse behaves quite well and we should simply change the scheme to be google-cloud-platform",
        "createdAt" : "2019-01-20T16:38:15Z",
        "updatedAt" : "2019-02-15T15:00:17Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "883a561c-8e75-4942-9985-2024953a1659",
        "parentId" : "cca4b7f7-0782-48e9-92a8-d25fc4a197a4",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "In the context of format of  conn_type, this is a permitted character.\r\nIn the context of the URL format, this is not allowed.\r\nWe can make a conn_type change to be compatible with the url format. but this change can be problematic. In many places `conn_type` with an underscore is already present. I decided that it would be better to provide a greater level of backwards compatibility at the expense of code readability. The current solution does not cause any changes that break compatibility.",
        "createdAt" : "2019-01-20T16:54:50Z",
        "updatedAt" : "2019-02-15T15:00:17Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "80c08995-1d19-4cc3-9408-22d48da2fbd1",
        "parentId" : "cca4b7f7-0782-48e9-92a8-d25fc4a197a4",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This implementation requires providing `google-cloud-platform` values as a schema. but after analyzing by urllib.parse, a forbidden character(`_`) from the schema part is replaced into an equivalent(`-`). You must provide `google-cloud-platform` to create a connection with conn_type equals to `google_cloud_platform`.",
        "createdAt" : "2019-01-20T17:01:30Z",
        "updatedAt" : "2019-02-15T15:00:17Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "377f859e-531f-4d41-a3e0-5c6f6ea52666",
        "parentId" : "cca4b7f7-0782-48e9-92a8-d25fc4a197a4",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Note that no conn_type uses the hyphen character except `'mesos_framework-id`, which does not allow you to read configuration from an environment variable.\r\n\r\nReference:\r\nhttps://github.com/apache/airflow/blob/f430dbedc5b4c68cdff9d6d760b29bdd73c0682f/airflow/models/connection.py#L54-L91\r\nhttps://github.com/apache/airflow/blob/c9a82d48a30f09baacb369979ffab6ed39fd02c3/airflow/contrib/executors/mesos_executor.py#L88-L93",
        "createdAt" : "2019-01-20T17:34:13Z",
        "updatedAt" : "2019-02-15T15:00:17Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "5e909f89-24f5-45fb-860d-ab6f022086bf",
        "parentId" : "cca4b7f7-0782-48e9-92a8-d25fc4a197a4",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "OK. Make sense! I agree it's the best way of solving it  this way. Good analysis and solution !",
        "createdAt" : "2019-01-21T09:50:37Z",
        "updatedAt" : "2019-02-15T15:00:17Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "7dc7ed804f3b03453b1819f96432b9f10cf6f15f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +117,121 @@            conn_type = 'postgres'\n        elif '-' in conn_type:\n            conn_type = conn_type.replace('-', '_')\n        self.conn_type = conn_type\n        self.host = unquote(hostname) if hostname else hostname"
  },
  {
    "id" : "522c693a-2828-4bd5-b66e-327aec2c6603",
    "prId" : 7214,
    "prUrl" : "https://github.com/apache/airflow/pull/7214#pullrequestreview-345039735",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea8ee911-eac8-4def-bbaf-e427661d2ce8",
        "parentId" : null,
        "authorId" : "aeab690b-2491-4cd7-95ca-94640c32271c",
        "body" : "This is the only addition. `ODBC Connection`. The rest are just to remove trailing `,` in the tuples to make it consistent.",
        "createdAt" : "2020-01-20T00:27:08Z",
        "updatedAt" : "2020-01-20T00:50:04Z",
        "lastEditedBy" : "aeab690b-2491-4cd7-95ca-94640c32271c",
        "tags" : [
        ]
      }
    ],
    "commit" : "80b6d8f0b53dc5b8c19a58bc841c3cf94bfb0085",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +78,82 @@        ('hiveserver2', 'Hive Server 2 Thrift'),\n        ('jdbc', 'JDBC Connection'),\n        ('odbc', 'ODBC Connection'),\n        ('jenkins', 'Jenkins'),\n        ('mysql', 'MySQL'),"
  },
  {
    "id" : "768fe078-070c-4176-8335-aaf0c8e22de6",
    "prId" : 7328,
    "prUrl" : "https://github.com/apache/airflow/pull/7328#pullrequestreview-351939730",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "287b99e8-d964-463f-9589-7a5188a242c4",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "@mik-laj - maybe add a test for that. We already have quite a few tests where we check if we have alphabetical order in source code.",
        "createdAt" : "2020-02-02T12:42:25Z",
        "updatedAt" : "2020-02-02T12:42:26Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "18105f5c-7b4f-45d7-af17-7581a988e08e",
        "parentId" : "287b99e8-d964-463f-9589-7a5188a242c4",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "It should be easy as as of python 3.6 all the dicts are ordered by insertion order https://stackoverflow.com/questions/39980323/are-dictionaries-ordered-in-python-3-6  so our tests should just test if keys() are sorted.",
        "createdAt" : "2020-02-02T12:45:09Z",
        "updatedAt" : "2020-02-02T12:45:44Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "c11cce77-e21a-49c8-aca9-6353c58073e9",
        "parentId" : "287b99e8-d964-463f-9589-7a5188a242c4",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Good idea. I will add it.",
        "createdAt" : "2020-02-02T12:52:48Z",
        "updatedAt" : "2020-02-02T12:52:48Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "b13c8a00b4162bd2141096f69d50194676f34880",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +33,37 @@# A map that assigns a connection type to a tuple that contains\n# the path of the class and the name of the conn_id key parameter.\n# PLEASE KEEP BELOW LIST IN ALPHABETICAL ORDER.\nCONN_TYPE_TO_HOOK = {\n    \"azure_cosmos\": ("
  },
  {
    "id" : "61f4dd71-1325-4b9e-8ca8-6aa3b7459261",
    "prId" : 9843,
    "prUrl" : "https://github.com/apache/airflow/pull/9843#pullrequestreview-449704851",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60886639-1677-4325-8434-bceed25173ee",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Would you mind adding a simple test to check that all hooks' path are valid? For example using importlib? We can try to use `airflow.utils.module_loading.import_string` ",
        "createdAt" : "2020-07-15T19:05:59Z",
        "updatedAt" : "2020-07-17T03:03:19Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "56c22d82-5a78-4e2f-9bba-a296b68c7aa9",
        "parentId" : "60886639-1677-4325-8434-bceed25173ee",
        "authorId" : "fb88c290-19d6-4d17-8832-bc1fc38a2b81",
        "body" : "@turbaszek Added, but requires updating the MSSQL mapping to ODBC per deprecation notice. Since pymssql is deprecated, the existing hook throws an import error for the existing MSSQL mapping.",
        "createdAt" : "2020-07-15T23:40:10Z",
        "updatedAt" : "2020-07-17T03:03:19Z",
        "lastEditedBy" : "fb88c290-19d6-4d17-8832-bc1fc38a2b81",
        "tags" : [
        ]
      },
      {
        "id" : "f776c898-7246-492c-9673-a3ace0268e20",
        "parentId" : "60886639-1677-4325-8434-bceed25173ee",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Good! In this way, you've found a bug ðŸ‘Œ ",
        "createdAt" : "2020-07-16T10:05:41Z",
        "updatedAt" : "2020-07-17T03:03:19Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbe3dabc12ab147ad6fcf8e514a1b4ae22c57bfe",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +81,85 @@    \"presto\": (\"airflow.providers.presto.hooks.presto.PrestoHook\", \"presto_conn_id\"),\n    \"redis\": (\"airflow.providers.redis.hooks.redis.RedisHook\", \"redis_conn_id\"),\n    \"snowflake\": (\"airflow.providers.snowflake.hooks.snowflake.SnowflakeHook\", \"snowflake_conn_id\"),\n    \"sqlite\": (\"airflow.providers.sqlite.hooks.sqlite.SqliteHook\", \"sqlite_conn_id\"),\n    \"tableau\": (\"airflow.providers.salesforce.hooks.tableau.TableauHook\", \"tableau_conn_id\"),"
  },
  {
    "id" : "50a3c586-3775-463c-8acb-eba63ac89f74",
    "prId" : 10559,
    "prUrl" : "https://github.com/apache/airflow/pull/10559#pullrequestreview-475444840",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4e2de37-321e-4114-86fb-1f2b72cc581b",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "```suggestion\r\n    def get_connections_from_secrets(cls, conn_id: str) -> List[Connection]:\r\n```",
        "createdAt" : "2020-08-26T12:17:58Z",
        "updatedAt" : "2020-08-26T12:42:40Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "a3b96f8b-6773-4f39-8b5e-de2baa88fb74",
        "parentId" : "c4e2de37-321e-4114-86fb-1f2b72cc581b",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Unfottunately It won't work - at this time \"Connection\" is not yet defined and mypy will complain (because it is inside the Connection definition - quoting is specifically foreseen for that case https://www.python.org/dev/peps/pep-0484/#forward-references",
        "createdAt" : "2020-08-26T12:37:03Z",
        "updatedAt" : "2020-08-26T12:42:40Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "099f36b8-23cc-44c9-9942-a52d1a1cb05c",
        "parentId" : "c4e2de37-321e-4114-86fb-1f2b72cc581b",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Oh yes, you are right",
        "createdAt" : "2020-08-26T12:39:16Z",
        "updatedAt" : "2020-08-26T12:42:40Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a2babb06b323630d671f298da9cdeee72fd041a",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +384,388 @@\n    @classmethod\n    def get_connections_from_secrets(cls, conn_id: str) -> List['Connection']:\n        \"\"\"\n        Get all connections as an iterable."
  },
  {
    "id" : "34aaaeba-2a0b-4136-bfba-10b23f07b1e9",
    "prId" : 12558,
    "prUrl" : "https://github.com/apache/airflow/pull/12558#pullrequestreview-545661787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5981016-b3f8-468f-8df7-dea71f7fe1fd",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "```suggestion\r\n                \"Could not import '%s' when discovering '%s' in package: '%s'\", hook_class_name, hook_name, package_name\r\n```",
        "createdAt" : "2020-12-06T01:16:36Z",
        "updatedAt" : "2020-12-08T13:01:52Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "67ad0ffc2211b5a321de0d6b6ae82a14bb46c36f",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +277,281 @@        except ImportError:\n            warnings.warn(\n                \"Could not import %s when discovering %s %s\", hook_class_name, hook_name, package_name\n            )\n            raise"
  },
  {
    "id" : "41e644be-bf5a-4757-b884-1443ca5f9617",
    "prId" : 14823,
    "prUrl" : "https://github.com/apache/airflow/pull/14823#pullrequestreview-612979765",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4efa7594-8958-4df9-ae92-f66c5348f959",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "This change is not making sense to me. \r\n\r\n`self.log.exception(e)` has its purpose here: to add Exception info/trackback into logs.\r\n\r\nOr to add `exc_info` properly in necessary manner.\r\n\r\nOverall, personally I find more clean-ups are needed in this PR.",
        "createdAt" : "2021-03-16T08:31:11Z",
        "updatedAt" : "2021-04-25T01:31:36Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "5a12e4aa-eac8-40fc-acc2-fbd8ab48f36e",
        "parentId" : "4efa7594-8958-4df9-ae92-f66c5348f959",
        "authorId" : "aa195dcc-f9b5-4ca1-a653-953aa1dd6431",
        "body" : "That's why I say \"may lead to misread\".\r\n\r\n`logging.exception` is **NOT** going to log the `e` object you provided,\r\nbut log the the `msg` (_`str(e)` here_), then fetch the trace (_as instructed by `exc_info`_) from the stack.\r\n\r\nI learnt this recently... LoL",
        "createdAt" : "2021-03-16T08:40:48Z",
        "updatedAt" : "2021-04-25T01:31:36Z",
        "lastEditedBy" : "aa195dcc-f9b5-4ca1-a653-953aa1dd6431",
        "tags" : [
        ]
      },
      {
        "id" : "029aa019-0473-481d-8cbf-c130c06cc943",
        "parentId" : "4efa7594-8958-4df9-ae92-f66c5348f959",
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "I see what you mean, and it's a valid point.\r\n\r\nPlease address @uranusjr 's comment though. It's relating to logging level given eventually.",
        "createdAt" : "2021-03-16T08:47:51Z",
        "updatedAt" : "2021-04-25T01:31:36Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      }
    ],
    "commit" : "772df83b561712f8ecff5092d375f60b9c22dcdb",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +347,351 @@            try:\n                obj = json.loads(self.extra)\n            except JSONDecodeError:\n                self.log.exception(\"Failed parsing the json for conn_id %s\", self.conn_id)\n"
  },
  {
    "id" : "47034472-a0d9-43a5-83b8-1b2e344417e5",
    "prId" : 15795,
    "prUrl" : "https://github.com/apache/airflow/pull/15795#pullrequestreview-666457856",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "455ac794-9ad2-4f90-92f7-cc2d4c36aafc",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "This could also be no hook class found.",
        "createdAt" : "2021-05-20T17:22:46Z",
        "updatedAt" : "2021-05-20T17:24:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "adf024cc-c836-4a8f-89e6-32439590c0b0",
        "parentId" : "455ac794-9ad2-4f90-92f7-cc2d4c36aafc",
        "authorId" : "73893400-eac1-4c2c-8fdc-49a7c6b2dae8",
        "body" : "yeah, in that the message would be `Hook NoneType doesn't...`",
        "createdAt" : "2021-05-21T07:41:40Z",
        "updatedAt" : "2021-05-21T07:41:40Z",
        "lastEditedBy" : "73893400-eac1-4c2c-8fdc-49a7c6b2dae8",
        "tags" : [
        ]
      },
      {
        "id" : "e40ed7a9-ff88-48a4-bea8-662a4258e6dd",
        "parentId" : "455ac794-9ad2-4f90-92f7-cc2d4c36aafc",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Which is a bit confusing to a user if it happens -- I think we should have a different message for that case.",
        "createdAt" : "2021-05-21T12:02:08Z",
        "updatedAt" : "2021-05-21T12:02:08Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "4385ac72-5522-4d78-b888-47c1c2ea54b7",
        "parentId" : "455ac794-9ad2-4f90-92f7-cc2d4c36aafc",
        "authorId" : "73893400-eac1-4c2c-8fdc-49a7c6b2dae8",
        "body" : "Ok, I was wrong, the `get_hook` does not return a `None`. It raises an exception if the hook is not found. ",
        "createdAt" : "2021-05-24T07:12:41Z",
        "updatedAt" : "2021-05-24T07:12:41Z",
        "lastEditedBy" : "73893400-eac1-4c2c-8fdc-49a7c6b2dae8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d771532809b4d5e6cbf2b8887e9f6784f1fd6be",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +358,362 @@            else:\n                message = (\n                    f\"Hook {hook.__class__.__name__} doesn't implement or inherit test_connection method\"\n                )\n        except Exception as e:  # noqa pylint: disable=broad-except"
  }
]