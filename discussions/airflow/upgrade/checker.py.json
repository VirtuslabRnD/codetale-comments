[
  {
    "id" : "3297fdd3-4536-4014-ad67-01c0fd9f7e5c",
    "prId" : 13392,
    "prUrl" : "https://github.com/apache/airflow/pull/13392#pullrequestreview-561442677",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44296293-9fb8-4fed-886e-915973942686",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "```suggestion\r\n    for rule in sorted(ALL_RULES, key=lambda r: r.__class__.__name__:\r\n```\r\n\r\nThis will introduce a nice order. In fact we can even use this `sorted` in definition of `ALL_RULES` to keep it sorted everywhere, WDYT?",
        "createdAt" : "2020-12-31T10:52:28Z",
        "updatedAt" : "2021-01-06T17:51:17Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "8f762495-149b-44cf-abb5-a82a64a624ce",
        "parentId" : "44296293-9fb8-4fed-886e-915973942686",
        "authorId" : "956f70ac-827f-4eb8-b8c5-e9341aab67b9",
        "body" : "It looks like the current assumption is that the version check should run first (based off of the fact that these files are run in alphabetical order and it's currently prefixed with `aaa_`: https://github.com/apache/airflow/tree/v1-10-stable/airflow/upgrade/rules). This will alter that order, and I think it might not be best to change the name of the version check class as people may already be ignoring it/using it elsewhere. I'm open to changing this if those concerns aren't as widely shared :) ",
        "createdAt" : "2021-01-04T19:29:08Z",
        "updatedAt" : "2021-01-06T17:51:17Z",
        "lastEditedBy" : "956f70ac-827f-4eb8-b8c5-e9341aab67b9",
        "tags" : [
        ]
      },
      {
        "id" : "a6961af9-1ab0-44f4-b666-c672343dd2d1",
        "parentId" : "44296293-9fb8-4fed-886e-915973942686",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "@madison-ookla how about introducing order here:\r\nhttps://github.com/apache/airflow/blob/748d05f519c0e5427d2a46763591f03697c4d585/airflow/upgrade/rules/__init__.py#L20-L34\r\n\r\nby doing:\r\n```py\r\nreturn rule_classes[0] + sorted(rule_classes[1:],  key=lambda r: r.__class__.__name__)\r\n```\r\nwe can assume that check version rule will be first (the files are sorted so `aaa_` will be first) and then we can easily sort it.\r\n\r\n\r\n\r\n",
        "createdAt" : "2021-01-04T21:34:17Z",
        "updatedAt" : "2021-01-06T17:51:17Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "073d7223-4852-4d5a-b80d-6d686009e34a",
        "parentId" : "44296293-9fb8-4fed-886e-915973942686",
        "authorId" : "956f70ac-827f-4eb8-b8c5-e9341aab67b9",
        "body" : "Sounds good!",
        "createdAt" : "2021-01-04T21:38:48Z",
        "updatedAt" : "2021-01-06T17:51:17Z",
        "lastEditedBy" : "956f70ac-827f-4eb8-b8c5-e9341aab67b9",
        "tags" : [
        ]
      },
      {
        "id" : "6c5863f7-c955-436f-be73-e7021776cda9",
        "parentId" : "44296293-9fb8-4fed-886e-915973942686",
        "authorId" : "956f70ac-827f-4eb8-b8c5-e9341aab67b9",
        "body" : "Just pushed this change, new output (and ordering) looks like this:\r\n\r\n```\r\n\r\nUpgrade Checks:\r\n- Check for latest versions of apache-airflow and checker [VersionCheckRule]\r\n- Remove airflow.AirflowMacroPlugin class [AirflowMacroPluginRemovedRule]\r\n- Ensure users are not using custom metaclasses in custom operators [BaseOperatorMetaclassRule]\r\n- Chain between DAG and operator not allowed. [ChainBetweenDAGAndOperatorNotAllowedRule]\r\n- Connection.conn_type is not nullable [ConnTypeIsNotNullableRule]\r\n- Hooks that run DB functions must inherit from DBApiHook [DbApiRule]\r\n- Fernet is enabled by default [FernetEnabledRule]\r\n- GCP service account key deprecation [GCPServiceAccountKeyRule]\r\n- Unify hostname_callable option in core section [HostnameCallable]\r\n- Changes in import paths of hooks, operators, sensors and others [ImportChangesRule]\r\n- Legacy UI is deprecated by default [LegacyUIDeprecated]\r\n- Logging configuration has been moved to new section [LoggingConfigurationRule]\r\n- Removal of Mesos Executor [MesosExecutorRemovedRule]\r\n- No additional argument allowed in BaseOperator. [NoAdditionalArgsInOperatorsRule]\r\n- Users must set a kubernetes.pod_template_file value [PodTemplateFileRule]\r\n- SendGrid email uses old airflow.contrib module [SendGridEmailerMovedRule]\r\n- Changes in import path of remote task handlers [TaskHandlersMovedRule]\r\n- Jinja Template Variables cannot be undefined [UndefinedJinjaVariablesRule]\r\n- Connection.conn_id is not unique [UniqueConnIdRule]\r\n```",
        "createdAt" : "2021-01-05T00:36:07Z",
        "updatedAt" : "2021-01-06T17:51:17Z",
        "lastEditedBy" : "956f70ac-827f-4eb8-b8c5-e9341aab67b9",
        "tags" : [
        ]
      }
    ],
    "commit" : "f33373223d221a61eda2b11e44225d0ee099a646",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +45,49 @@    print()\n    print(\"Upgrade Checks:\")\n    for rule in ALL_RULES:\n        rule_name = rule.__class__.__name__\n        print(\"- {}: {}\".format(rule_name, rule.title))"
  },
  {
    "id" : "c6f3f3d8-f0fc-4536-8085-06dc6ad076c2",
    "prId" : 13392,
    "prUrl" : "https://github.com/apache/airflow/pull/13392#pullrequestreview-563247066",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c612c0cb-f57d-48a4-98b4-439d0bdaa058",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "```suggestion\r\n    arg.func(args)\r\n```\r\nRight? Otherwise we will have recursion error? ",
        "createdAt" : "2021-01-06T11:37:16Z",
        "updatedAt" : "2021-01-06T17:51:17Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "04e3d049-80a7-413b-9a9d-c3cede37d343",
        "parentId" : "c612c0cb-f57d-48a4-98b4-439d0bdaa058",
        "authorId" : "956f70ac-827f-4eb8-b8c5-e9341aab67b9",
        "body" : "D'oh! Thanks, I'll change this",
        "createdAt" : "2021-01-06T17:46:15Z",
        "updatedAt" : "2021-01-06T17:51:17Z",
        "lastEditedBy" : "956f70ac-827f-4eb8-b8c5-e9341aab67b9",
        "tags" : [
        ]
      },
      {
        "id" : "b477254c-d0a1-4d25-997b-3f4e0840cec7",
        "parentId" : "c612c0cb-f57d-48a4-98b4-439d0bdaa058",
        "authorId" : "956f70ac-827f-4eb8-b8c5-e9341aab67b9",
        "body" : "Actually, I think the implementation I had was fine, since I removed the `set_defaults` call on the argument parser too. This won't be recursive. (Double checked by running this locally with success)",
        "createdAt" : "2021-01-06T17:50:50Z",
        "updatedAt" : "2021-01-06T17:51:50Z",
        "lastEditedBy" : "956f70ac-827f-4eb8-b8c5-e9341aab67b9",
        "tags" : [
        ]
      },
      {
        "id" : "6cff2057-6261-4750-9e6f-0a8a807bc2be",
        "parentId" : "c612c0cb-f57d-48a4-98b4-439d0bdaa058",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Oh, never mind... I missed that it was in `main` function and I thought it was defined in `run`...\r\n<img width=\"644\" alt=\"Screenshot 2021-01-07 at 07 51 17\" src=\"https://user-images.githubusercontent.com/9528307/103861098-22ee0f80-50bd-11eb-8309-7b0f709f68c0.png\">\r\n",
        "createdAt" : "2021-01-07T06:52:13Z",
        "updatedAt" : "2021-01-07T06:52:14Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f33373223d221a61eda2b11e44225d0ee099a646",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +111,115 @@        list_checks()\n    else:\n        run(args)\n\n"
  }
]