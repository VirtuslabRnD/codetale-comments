[
  {
    "id" : "ea261839-14af-41e6-ac39-c96b13972a81",
    "prId" : 12814,
    "prUrl" : "https://github.com/apache/airflow/pull/12814#pullrequestreview-550666875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "432372e8-5f90-4e58-8714-00aebe6188fa",
        "parentId" : null,
        "authorId" : "faa559fa-1122-468b-8ebd-7d04c5c97279",
        "body" : "Is it possible to capture stdout or stderr, that usually has the real relevant errors.",
        "createdAt" : "2020-12-04T18:51:32Z",
        "updatedAt" : "2021-02-03T18:18:34Z",
        "lastEditedBy" : "faa559fa-1122-468b-8ebd-7d04c5c97279",
        "tags" : [
        ]
      },
      {
        "id" : "0108bcc6-f492-40aa-8a3d-1c5d945e3948",
        "parentId" : "432372e8-5f90-4e58-8714-00aebe6188fa",
        "authorId" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "body" : "printing stdout/stderr to logs is handled by `_process_fd` function two lines above :) I used logs produced by it extensively during debugging of example dag and I can confirm they provide helpful information about errors.",
        "createdAt" : "2020-12-07T18:26:38Z",
        "updatedAt" : "2021-02-03T18:18:34Z",
        "lastEditedBy" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "tags" : [
        ]
      },
      {
        "id" : "13f3e49b-f0ab-4793-9eda-50f17fc7e99c",
        "parentId" : "432372e8-5f90-4e58-8714-00aebe6188fa",
        "authorId" : "faa559fa-1122-468b-8ebd-7d04c5c97279",
        "body" : "Nice!",
        "createdAt" : "2020-12-12T00:46:07Z",
        "updatedAt" : "2021-02-03T18:18:34Z",
        "lastEditedBy" : "faa559fa-1122-468b-8ebd-7d04c5c97279",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a4844e23b28e6a47cd3f1a18fe813da2c4fad13",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +144,148 @@            self._process_fd(readable_fd)\n\n        self.log.info(\"Process exited with return code: %s\", self._proc.returncode)\n\n        if self._proc.returncode != 0:"
  },
  {
    "id" : "e731a149-24be-4726-b46b-37156f9106eb",
    "prId" : 12814,
    "prUrl" : "https://github.com/apache/airflow/pull/12814#pullrequestreview-574842748",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e4720cf-3d5a-4895-ae00-f5754b6c00e1",
        "parentId" : null,
        "authorId" : "faa559fa-1122-468b-8ebd-7d04c5c97279",
        "body" : "Why is this needed? Ideally any Beam supported runners should just work, and there is no need for this duplication.",
        "createdAt" : "2021-01-20T17:53:55Z",
        "updatedAt" : "2021-02-03T18:18:34Z",
        "lastEditedBy" : "faa559fa-1122-468b-8ebd-7d04c5c97279",
        "tags" : [
        ]
      },
      {
        "id" : "40576532-5da7-4938-9ec8-e3e1ea0aaf61",
        "parentId" : "1e4720cf-3d5a-4895-ae00-f5754b6c00e1",
        "authorId" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "body" : "I added it because I wanted to avoid typing string \"DirectRunner\" in many places.\r\nI extended list of runner types and added link to the documentation. What do you think about such solution?",
        "createdAt" : "2021-01-23T12:13:08Z",
        "updatedAt" : "2021-02-03T18:18:34Z",
        "lastEditedBy" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a4844e23b28e6a47cd3f1a18fe813da2c4fad13",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +31,35 @@\n\nclass BeamRunnerType:\n    \"\"\"\n    Helper class for listing runner types."
  },
  {
    "id" : "1478b832-d73e-47df-8018-8afa8e2ef08f",
    "prId" : 12814,
    "prUrl" : "https://github.com/apache/airflow/pull/12814#pullrequestreview-612463847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b271dd95-a920-4724-ad21-7411e7acce5b",
        "parentId" : null,
        "authorId" : "fd0eadce-2798-4d2a-a9a2-8863df9c13fa",
        "body" : "@TobKed This raises warning that spams the logs:\r\n```\r\n/opt/airflow/airflow/providers/apache/beam/hooks/beam.py:28: DeprecationWarning: This module is deprecated. Please use `airflow.hooks.base`. \r\nfrom airflow.hooks.base_hook import BaseHook  \r\n```\r\n",
        "createdAt" : "2021-02-08T06:45:40Z",
        "updatedAt" : "2021-02-08T06:45:40Z",
        "lastEditedBy" : "fd0eadce-2798-4d2a-a9a2-8863df9c13fa",
        "tags" : [
        ]
      },
      {
        "id" : "79c326f5-931b-4820-9d5e-c23c8c1ba103",
        "parentId" : "b271dd95-a920-4724-ad21-7411e7acce5b",
        "authorId" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "body" : "Solved in https://github.com/apache/airflow/pull/14554",
        "createdAt" : "2021-03-15T17:29:30Z",
        "updatedAt" : "2021-03-15T17:29:31Z",
        "lastEditedBy" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a4844e23b28e6a47cd3f1a18fe813da2c4fad13",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@\nfrom airflow.exceptions import AirflowException\nfrom airflow.hooks.base_hook import BaseHook\nfrom airflow.utils.log.logging_mixin import LoggingMixin\nfrom airflow.utils.python_virtualenv import prepare_virtualenv"
  },
  {
    "id" : "0336ad1d-a335-4f9d-bac8-03bc5a229792",
    "prId" : 14554,
    "prUrl" : "https://github.com/apache/airflow/pull/14554#pullrequestreview-602364905",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac589021-b480-4432-9e4b-a8996e21abe1",
        "parentId" : null,
        "authorId" : "fd0eadce-2798-4d2a-a9a2-8863df9c13fa",
        "body" : "I think this will make this provider to not work in backport-provider release?\r\n",
        "createdAt" : "2021-03-02T09:20:34Z",
        "updatedAt" : "2021-03-02T09:20:34Z",
        "lastEditedBy" : "fd0eadce-2798-4d2a-a9a2-8863df9c13fa",
        "tags" : [
        ]
      },
      {
        "id" : "732f0914-800d-4418-828e-4e1a8b1fbf55",
        "parentId" : "ac589021-b480-4432-9e4b-a8996e21abe1",
        "authorId" : "aeab690b-2491-4cd7-95ca-94640c32271c",
        "body" : "Thanks for pointing this out. I am actually not sure how it will behave in the backport-providers, but I think it will work because other provider packages are also using the new import paths, i.e. Google Cloud Provider https://github.com/apache/airflow/blob/3064bf04429f86ff2b527704603ef3ca9b9fe22f/airflow/providers/google/common/hooks/base_google.py#L44\r\n\r\nMy guess is that we have a script that rewrites all the import paths when releasing the backport packages. @potiuk do you mind shedding some light on this?",
        "createdAt" : "2021-03-02T17:30:10Z",
        "updatedAt" : "2021-03-02T17:30:10Z",
        "lastEditedBy" : "aeab690b-2491-4cd7-95ca-94640c32271c",
        "tags" : [
        ]
      },
      {
        "id" : "ccc51d2b-2fc3-4d2d-b37b-2b2c5e06e146",
        "parentId" : "ac589021-b480-4432-9e4b-a8996e21abe1",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Yes we do refactor, all changes are here I think:\r\nhttps://github.com/apache/airflow/blob/3064bf04429f86ff2b527704603ef3ca9b9fe22f/dev/provider_packages/copy_provider_package_sources.py#L82",
        "createdAt" : "2021-03-02T18:52:00Z",
        "updatedAt" : "2021-03-02T18:52:00Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "ace77788-b5df-4fee-95ef-b9101b441a2a",
        "parentId" : "ac589021-b480-4432-9e4b-a8996e21abe1",
        "authorId" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "body" : "If `backport *` jobs on CI are passing I would think backports will work, however I am not 100% sure.",
        "createdAt" : "2021-03-02T19:34:41Z",
        "updatedAt" : "2021-03-02T19:34:46Z",
        "lastEditedBy" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "tags" : [
        ]
      },
      {
        "id" : "f9d44e70-dd47-4ec4-91aa-adb63071b1c3",
        "parentId" : "ac589021-b480-4432-9e4b-a8996e21abe1",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Yeah. They will if they pass. the base is auto-renamed to base_hook when we prepare backjports.",
        "createdAt" : "2021-03-02T23:21:29Z",
        "updatedAt" : "2021-03-02T23:21:29Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b34f236eb657553daac855c4b833db37fc3e56ce",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +26,30 @@\nfrom airflow.exceptions import AirflowException\nfrom airflow.hooks.base import BaseHook\nfrom airflow.utils.log.logging_mixin import LoggingMixin\nfrom airflow.utils.python_virtualenv import prepare_virtualenv"
  }
]