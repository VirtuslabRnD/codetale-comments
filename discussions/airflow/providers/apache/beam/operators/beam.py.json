[
  {
    "id" : "0a399257-f955-4656-87b5-f78feda81bce",
    "prId" : 12814,
    "prUrl" : "https://github.com/apache/airflow/pull/12814#pullrequestreview-577250779",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cefa2672-31fa-4c94-a61f-b941244be248",
        "parentId" : null,
        "authorId" : "faa559fa-1122-468b-8ebd-7d04c5c97279",
        "body" : "Does the operator always have the same version as airflow? Would it make sense to include what is the operator version that is used?",
        "createdAt" : "2021-01-20T17:57:15Z",
        "updatedAt" : "2021-02-03T18:18:34Z",
        "lastEditedBy" : "faa559fa-1122-468b-8ebd-7d04c5c97279",
        "tags" : [
        ]
      },
      {
        "id" : "a34edf7e-d258-4148-87a8-f530774296f7",
        "parentId" : "cefa2672-31fa-4c94-a61f-b941244be248",
        "authorId" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "body" : "I don't think it is possible. WDYT @potiuk ?",
        "createdAt" : "2021-01-25T11:58:25Z",
        "updatedAt" : "2021-02-03T18:18:34Z",
        "lastEditedBy" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "tags" : [
        ]
      },
      {
        "id" : "80bd54ae-5dbd-473a-aa5a-db74285be072",
        "parentId" : "cefa2672-31fa-4c94-a61f-b941244be248",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "I think we may try to get version of providers package installed, but I'm not sure how much value this will give",
        "createdAt" : "2021-01-27T11:43:33Z",
        "updatedAt" : "2021-02-03T18:18:34Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a4844e23b28e6a47cd3f1a18fe813da2c4fad13",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +133,137 @@        self.pipeline_options = pipeline_options or {}\n        self.pipeline_options.setdefault(\"labels\", {}).update(\n            {\"airflow-version\": \"v\" + version.replace(\".\", \"-\").replace(\"+\", \"-\")}\n        )\n        self.py_interpreter = py_interpreter"
  },
  {
    "id" : "ab6ad389-6b79-425f-9d2c-1a36b63c4b87",
    "prId" : 12814,
    "prUrl" : "https://github.com/apache/airflow/pull/12814#pullrequestreview-574843083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce1cc8f4-e636-4c76-9abe-af2de4efafa7",
        "parentId" : null,
        "authorId" : "faa559fa-1122-468b-8ebd-7d04c5c97279",
        "body" : "why not use version as is, instead of adding a \"v\" and changing . and +'s to dashes?",
        "createdAt" : "2021-01-20T17:57:52Z",
        "updatedAt" : "2021-02-03T18:18:34Z",
        "lastEditedBy" : "faa559fa-1122-468b-8ebd-7d04c5c97279",
        "tags" : [
        ]
      },
      {
        "id" : "9aa1f757-35e8-4f59-8185-465d1d5c6870",
        "parentId" : "ce1cc8f4-e636-4c76-9abe-af2de4efafa7",
        "authorId" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "body" : "It is line moved from Dataflow hook.\r\nThe reasons for such formatting are restrictions ([Labeling resources - label format](https://cloud.google.com/compute/docs/labeling-resources#label_format)):\r\n- `v` solves `Label keys must start with a lowercase letter.`\r\n- `.` and `+` are not allowed",
        "createdAt" : "2021-01-23T12:19:40Z",
        "updatedAt" : "2021-02-03T18:18:34Z",
        "lastEditedBy" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a4844e23b28e6a47cd3f1a18fe813da2c4fad13",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +133,137 @@        self.pipeline_options = pipeline_options or {}\n        self.pipeline_options.setdefault(\"labels\", {}).update(\n            {\"airflow-version\": \"v\" + version.replace(\".\", \"-\").replace(\"+\", \"-\")}\n        )\n        self.py_interpreter = py_interpreter"
  },
  {
    "id" : "8f1ec2d2-ec5b-4330-af73-916fd11e1262",
    "prId" : 12814,
    "prUrl" : "https://github.com/apache/airflow/pull/12814#pullrequestreview-579898909",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21045077-f82a-467c-ab6d-b7124d5183cc",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Can you explain the pylint comment here?",
        "createdAt" : "2021-01-27T11:51:24Z",
        "updatedAt" : "2021-02-03T18:18:34Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "68a15c52-55f3-4be6-bb5c-b6de7b12fb34",
        "parentId" : "21045077-f82a-467c-ab6d-b7124d5183cc",
        "authorId" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "body" : "`project_id` parameter is required for this method and not passed, however it is bit truly required because it is handled by `@_fallback_to_project_id_from_variables` decorator.\r\nMoreover, in this case `project_id` cannot be passed as parameter because it is already present as key-value in `variables`.  The `@_fallback_to_project_id_from_variables`decorator ensures that project_id cannot be passed both in `variables` and as the `project_id` parameter (raises error if both present).\r\n",
        "createdAt" : "2021-01-27T15:07:42Z",
        "updatedAt" : "2021-02-03T18:18:35Z",
        "lastEditedBy" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "tags" : [
        ]
      },
      {
        "id" : "9a39f105-191e-4325-a27d-1bceeeee1768",
        "parentId" : "21045077-f82a-467c-ab6d-b7124d5183cc",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Would you mind adding small comment in code? I think it may help others in future",
        "createdAt" : "2021-01-30T14:46:02Z",
        "updatedAt" : "2021-02-03T18:18:35Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "3663809e-1d40-4ea5-97bf-a923d79fe9dc",
        "parentId" : "21045077-f82a-467c-ab6d-b7124d5183cc",
        "authorId" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "body" : "Good point. I will add comment",
        "createdAt" : "2021-01-31T14:16:42Z",
        "updatedAt" : "2021-02-03T18:18:35Z",
        "lastEditedBy" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a4844e23b28e6a47cd3f1a18fe813da2c4fad13",
    "line" : 398,
    "diffHunk" : "@@ -1,1 +396,400 @@                        # fallback project_id value from variables and raise error if project_id is\n                        # defined both in variables and as parameter (here is already defined in variables)\n                        self.dataflow_hook.is_job_dataflow_running(  # pylint: disable=no-value-for-parameter\n                            name=self.dataflow_config.job_name,\n                            variables=pipeline_options,"
  },
  {
    "id" : "6c336c61-3ef5-40c4-9892-1f6fecde1db9",
    "prId" : 12814,
    "prUrl" : "https://github.com/apache/airflow/pull/12814#pullrequestreview-580138175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08743a32-c28d-4a61-b501-08175127779f",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Should we consider encapsulating this logic into some `dataflow_method` to reduce size of `execute` definition. WDYT?",
        "createdAt" : "2021-02-01T09:07:05Z",
        "updatedAt" : "2021-02-03T18:18:35Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a4844e23b28e6a47cd3f1a18fe813da2c4fad13",
    "line" : 189,
    "diffHunk" : "@@ -1,1 +187,191 @@            process_line_callback = process_line_and_extract_dataflow_job_id_callback(\n                on_new_job_id_callback=set_current_dataflow_job_id\n            )\n\n        pipeline_options.update(self.pipeline_options)"
  },
  {
    "id" : "085d7e76-0c98-4c3f-b97b-a4abaae1b08e",
    "prId" : 12814,
    "prUrl" : "https://github.com/apache/airflow/pull/12814#pullrequestreview-580999605",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ccf38c78-c542-46ca-9e26-39e405cd79bb",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Same here, should we consider encapsulating this logic into separate method? PosAnd if possible extracting some common logic between Python and Java may help too ðŸš€ ",
        "createdAt" : "2021-02-01T09:10:06Z",
        "updatedAt" : "2021-02-03T18:18:35Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "78038b6b-c9e0-45d4-88ac-31cac9e1ebcc",
        "parentId" : "ccf38c78-c542-46ca-9e26-39e405cd79bb",
        "authorId" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "body" : "@turbaszek thanks for suggestion. I made PoC of refactor. PTAL: https://github.com/PolideaInternal/airflow/pull/976",
        "createdAt" : "2021-02-02T05:38:52Z",
        "updatedAt" : "2021-02-03T18:18:35Z",
        "lastEditedBy" : "684d7067-ead9-4707-b609-f796c2e1f8ea",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a4844e23b28e6a47cd3f1a18fe813da2c4fad13",
    "line" : 377,
    "diffHunk" : "@@ -1,1 +375,379 @@            process_line_callback = process_line_and_extract_dataflow_job_id_callback(\n                on_new_job_id_callback=set_current_dataflow_job_id\n            )\n\n        pipeline_options.update(self.pipeline_options)"
  }
]