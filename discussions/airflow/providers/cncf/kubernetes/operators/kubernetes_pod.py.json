[
  {
    "id" : "6e18b8b3-6e9a-4aeb-9d74-d1470ea16119",
    "prId" : 6377,
    "prUrl" : "https://github.com/apache/airflow/pull/6377#pullrequestreview-407015627",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad7967fd-e913-4d50-b303-879f55d62f2a",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Is it not possible to use multiple labels to get the pod instead of creating a single string?\r\n\r\nIf not, we need to be careful as the order of items can change how the string. We can `sort` the keys in `filtered_labels` to take care of that issue.\r\n\r\n",
        "createdAt" : "2020-05-06T21:31:01Z",
        "updatedAt" : "2020-05-15T18:43:50Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "46a1efb2-850c-4bbe-b582-6458e9f35abf",
        "parentId" : "ad7967fd-e913-4d50-b303-879f55d62f2a",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "@kaxil why do we need to sort? this is for creating the label_selector for kubernetes which I don't believe is order specific.",
        "createdAt" : "2020-05-06T21:50:20Z",
        "updatedAt" : "2020-05-15T18:43:50Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      },
      {
        "id" : "397ab9d6-0ec4-4268-aee2-c078cb20ff3f",
        "parentId" : "ad7967fd-e913-4d50-b303-879f55d62f2a",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "For the following reason:\r\n\r\n```\r\nIn [1]: def _get_pod_identifying_label_string(labels):\r\n   ...:         filtered_labels = {label_id: label for label_id, label in labels.items() if label_id != 'try_number'}\r\n   ...:         return ','.join([label_id + '=' + label for label_id, label in filtered_labels.items()])\r\n   ...:\r\n\r\nIn [2]: labels = {\r\n   ...:             'dag_id': 'test_dag_id',\r\n   ...:             'task_id': 'test_task_id',\r\n   ...:             'execution_date': 'execution_date',\r\n   ...:             'try_number': 2,\r\n   ...:         }\r\n\r\nIn [3]: _get_pod_identifying_label_string(labels)\r\nOut[3]: 'dag_id=test_dag_id,task_id=test_task_id,execution_date=execution_date'\r\n\r\nIn [6]: labels_1 = {\r\n   ...:             'task_id': 'test_task_id',\r\n   ...:             'dag_id': 'test_dag_id',\r\n   ...:             'execution_date': 'execution_date',\r\n   ...:             'try_number': 2,\r\n   ...:         }\r\n\r\nIn [7]: _get_pod_identifying_label_string(labels_1)\r\nOut[7]: 'task_id=test_task_id,dag_id=test_dag_id,execution_date=execution_date'\r\n\r\n```",
        "createdAt" : "2020-05-06T21:55:55Z",
        "updatedAt" : "2020-05-15T18:43:50Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "21f3619560c3e289710b15c0ef7ba172512e8eba",
    "line" : 173,
    "diffHunk" : "@@ -1,1 +299,303 @@    @staticmethod\n    def _get_pod_identifying_label_string(labels):\n        filtered_labels = {label_id: label for label_id, label in labels.items() if label_id != 'try_number'}\n        return ','.join([label_id + '=' + label for label_id, label in sorted(filtered_labels.items())])\n"
  },
  {
    "id" : "ea330256-44dd-49d5-a5c0-3205c594dc3b",
    "prId" : 7292,
    "prUrl" : "https://github.com/apache/airflow/pull/7292#pullrequestreview-352339724",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "212ae837-f221-4f1e-86dc-a21d0d5aab8a",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I think we should protect against writing the logs twice. In case of Airflow Exception thrown it is more than likely that the final_state will not be a success, so the logs will be written twice. I think we should have a flag \"logs_dumped\" or smth like that an only write logs once.",
        "createdAt" : "2020-02-03T15:10:23Z",
        "updatedAt" : "2020-02-03T19:51:47Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "9f4fadd3-dcf2-40c3-8ff3-1a5ddb21f20b",
        "parentId" : "212ae837-f221-4f1e-86dc-a21d0d5aab8a",
        "authorId" : "88820240-852d-46ba-ab9c-593a35b90225",
        "body" : "If we hit an exception at lines 285-288, we would log the pod events, then re-raise the exception which shouldn't allow execution to the logging at lines 294-296 - so I don't think it's possible to log them twice - unless I'm missing something here, I haven't had coffee yet :)",
        "createdAt" : "2020-02-03T15:26:15Z",
        "updatedAt" : "2020-02-03T19:51:47Z",
        "lastEditedBy" : "88820240-852d-46ba-ab9c-593a35b90225",
        "tags" : [
        ]
      },
      {
        "id" : "f32634f7-ab3c-4136-8881-cba586a055b2",
        "parentId" : "212ae837-f221-4f1e-86dc-a21d0d5aab8a",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "You are right. No worries. I am after my 3rd coffee and still missed the `raise`",
        "createdAt" : "2020-02-03T15:28:51Z",
        "updatedAt" : "2020-02-03T19:51:47Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "80866b97c80b18b6a7ad8aed8004d0c71bea5cfe",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +292,296 @@\n            if final_state != State.SUCCESS:\n                if self.log_events_on_failure:\n                    for event in launcher.read_pod_events(pod).items:\n                        self.log.error(\"Pod Event: %s - %s\", event.reason, event.message)"
  },
  {
    "id" : "094620ca-c350-466e-9366-a581d6ee139b",
    "prId" : 8829,
    "prUrl" : "https://github.com/apache/airflow/pull/8829#pullrequestreview-412230532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b85bb74d-1790-4cf5-bdf6-18ac1ef61ae8",
        "parentId" : null,
        "authorId" : "62bb13b5-8a60-4b4b-9533-e96d14a3a544",
        "body" : "LGTM, we can keep it on 220 also for v1.10, as preparation for the longer suffix added in v2.0",
        "createdAt" : "2020-05-12T08:19:12Z",
        "updatedAt" : "2020-05-15T14:09:50Z",
        "lastEditedBy" : "62bb13b5-8a60-4b4b-9533-e96d14a3a544",
        "tags" : [
        ]
      },
      {
        "id" : "fdb2581b-d4af-41a6-964a-294930885988",
        "parentId" : "b85bb74d-1790-4cf5-bdf6-18ac1ef61ae8",
        "authorId" : "3604ad12-d5ab-44c4-9e44-bdc9ffd8da99",
        "body" : "Any further action needed from my side? :thinking: ",
        "createdAt" : "2020-05-12T14:12:24Z",
        "updatedAt" : "2020-05-15T14:09:50Z",
        "lastEditedBy" : "3604ad12-d5ab-44c4-9e44-bdc9ffd8da99",
        "tags" : [
        ]
      },
      {
        "id" : "79d96626-0de5-4b1c-b859-f768f32994b2",
        "parentId" : "b85bb74d-1790-4cf5-bdf6-18ac1ef61ae8",
        "authorId" : "62bb13b5-8a60-4b4b-9533-e96d14a3a544",
        "body" : "I'm not sure what else is needed for this fix to get on the v1.10 merge train :steam_locomotive:\r\n\r\nmerging is blocked as long as there are unticked TODOs in the PR description btw.\r\n\r\nmaybe @kaxil: anything else? ",
        "createdAt" : "2020-05-12T18:11:47Z",
        "updatedAt" : "2020-05-15T14:09:50Z",
        "lastEditedBy" : "62bb13b5-8a60-4b4b-9533-e96d14a3a544",
        "tags" : [
        ]
      },
      {
        "id" : "8381bc70-0ffb-4251-a332-ee35abe59871",
        "parentId" : "b85bb74d-1790-4cf5-bdf6-18ac1ef61ae8",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Can we add tests too, please?\r\n\r\n@dimberman Can you take a look please at this PR?",
        "createdAt" : "2020-05-14T22:04:15Z",
        "updatedAt" : "2020-05-15T14:09:50Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "124e4a0a-105f-412d-9368-877101bbdb5c",
        "parentId" : "b85bb74d-1790-4cf5-bdf6-18ac1ef61ae8",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "LGTM just would like to see some tests.",
        "createdAt" : "2020-05-14T22:32:06Z",
        "updatedAt" : "2020-05-15T14:09:50Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a83b9effc32ab7c4c49f0ebbb2d655103c5c6fdb",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +323,327 @@        if self.pod_template_file or self.full_pod_spec:\n            return None\n        validate_key(name, max_length=220)\n        return re.sub(r'[^a-z0-9.-]+', '-', name.lower())"
  },
  {
    "id" : "f1e9dfbb-62fc-44ba-abef-f8910684e45e",
    "prId" : 10230,
    "prUrl" : "https://github.com/apache/airflow/pull/10230#pullrequestreview-463887547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24d00d8a-0476-4f3c-bb55-8866f92482ee",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Needs description",
        "createdAt" : "2020-08-08T15:01:05Z",
        "updatedAt" : "2020-08-09T16:38:55Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "3c1d54aa-47d3-4e19-932e-06760124c3df",
        "parentId" : "24d00d8a-0476-4f3c-bb55-8866f92482ee",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "@kaxil done",
        "createdAt" : "2020-08-09T16:39:15Z",
        "updatedAt" : "2020-08-09T16:39:16Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d77749683ec5909ac203fd5de0a9affc33a9aa15",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +300,304 @@    def handle_pod_overlap(self, labels, try_numbers_match, launcher, pod_list):\n        \"\"\"\n\n        In cases where the Scheduler restarts while a KubernetsPodOperator task is running,\n        this function will either continue to monitor the existing pod or launch a new pod"
  },
  {
    "id" : "4ec5510f-ceae-405d-aa6d-f3e5a4a77083",
    "prId" : 10393,
    "prUrl" : "https://github.com/apache/airflow/pull/10393#pullrequestreview-475777932",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "206076e6-9120-4fc8-8afc-dfe502541ce9",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "```suggestion\r\n            pod = pod_generator.PodGenerator.add_xcom_sidecar(pod)\r\n```",
        "createdAt" : "2020-08-26T19:03:27Z",
        "updatedAt" : "2020-09-17T14:11:44Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "a99438c1e1e3b7e7770d1f929dd5217b622d3d04",
    "line" : 229,
    "diffHunk" : "@@ -1,1 +395,399 @@        if self.do_xcom_push:\n            from airflow.kubernetes.pod_generator import PodGenerator\n            pod = PodGenerator.add_xcom_sidecar(pod)\n        return pod\n"
  },
  {
    "id" : "51e60907-534c-4e87-b5a1-0117ec789788",
    "prId" : 10393,
    "prUrl" : "https://github.com/apache/airflow/pull/10393#pullrequestreview-478608276",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb2f6de5-9be9-4a42-b950-5bcd0b9f6734",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I would be happy if there was an entry with an example for each parameter that has changed. We cannot assume that the user will know these two classes and will be able to migrate on their own.",
        "createdAt" : "2020-08-31T13:18:56Z",
        "updatedAt" : "2020-09-17T14:11:44Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "a99438c1e1e3b7e7770d1f929dd5217b622d3d04",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +62,66 @@    :type arguments: list[str]\n    :param ports: ports for launched pod.\n    :type ports: list[k8s.V1ContainerPort]\n    :param volume_mounts: volumeMounts for launched pod.\n    :type volume_mounts: list[k8s.V1VolumeMount]"
  },
  {
    "id" : "f76ccd7e-d24a-445c-b9a1-dcef11ced10a",
    "prId" : 10666,
    "prUrl" : "https://github.com/apache/airflow/pull/10666#pullrequestreview-479836485",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d89e865d-983e-48a9-917b-d4266d8d76a6",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Isn't gracePeriodSeconds something else than how long before the pod is stopped -- this controls how long the pod is kept around for in the API server, but not when the pod is terminated, isn't it?\r\n\r\n(I remember we investigated this for an EKS fix around short lived pods and increasing this didn't help.)",
        "createdAt" : "2020-09-01T14:57:20Z",
        "updatedAt" : "2020-09-01T14:57:21Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "92face50-6513-496b-b357-ebaff97467a3",
        "parentId" : "d89e865d-983e-48a9-917b-d4266d8d76a6",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "@ashb grace_period_seconds is a recommendation, raising it doesn't necessarily mean the ApiServer will wait that long. By setting it to 0 we are telling the ApiServer \"Delete this before doing anything else\" rather than \"get around to it eventually\"",
        "createdAt" : "2020-09-01T15:00:40Z",
        "updatedAt" : "2020-09-01T15:00:40Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      }
    ],
    "commit" : "412dc309b7681acd61282eb72e1f163312689db1",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +451,455 @@            namespace = pod.metadata.namespace\n            name = pod.metadata.name\n            self.client.delete_namespaced_pod(name=name, namespace=namespace, grace_period_seconds=0)"
  },
  {
    "id" : "db26d7e8-d89a-4cc0-b344-cd097be26f10",
    "prId" : 12091,
    "prUrl" : "https://github.com/apache/airflow/pull/12091#pullrequestreview-523439388",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "435adcb9-03b0-41ed-8fe3-3aa5cb0b92a6",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Black moved the comment down one line so I had to turn off the formatting.",
        "createdAt" : "2020-11-04T14:55:49Z",
        "updatedAt" : "2020-11-04T18:09:48Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "be944acf82562473bae67cfabdbd706172756ee7",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +154,158 @@    # fmt: off\n    @apply_defaults\n    def __init__(  # pylint: disable=too-many-arguments,too-many-locals\n        # fmt: on\n        self,"
  }
]