[
  {
    "id" : "6e18b8b3-6e9a-4aeb-9d74-d1470ea16119",
    "prId" : 6377,
    "prUrl" : "https://github.com/apache/airflow/pull/6377#pullrequestreview-407015627",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad7967fd-e913-4d50-b303-879f55d62f2a",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Is it not possible to use multiple labels to get the pod instead of creating a single string?\r\n\r\nIf not, we need to be careful as the order of items can change how the string. We can `sort` the keys in `filtered_labels` to take care of that issue.\r\n\r\n",
        "createdAt" : "2020-05-06T21:31:01Z",
        "updatedAt" : "2020-05-15T18:43:50Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "46a1efb2-850c-4bbe-b582-6458e9f35abf",
        "parentId" : "ad7967fd-e913-4d50-b303-879f55d62f2a",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "@kaxil why do we need to sort? this is for creating the label_selector for kubernetes which I don't believe is order specific.",
        "createdAt" : "2020-05-06T21:50:20Z",
        "updatedAt" : "2020-05-15T18:43:50Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      },
      {
        "id" : "397ab9d6-0ec4-4268-aee2-c078cb20ff3f",
        "parentId" : "ad7967fd-e913-4d50-b303-879f55d62f2a",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "For the following reason:\r\n\r\n```\r\nIn [1]: def _get_pod_identifying_label_string(labels):\r\n   ...:         filtered_labels = {label_id: label for label_id, label in labels.items() if label_id != 'try_number'}\r\n   ...:         return ','.join([label_id + '=' + label for label_id, label in filtered_labels.items()])\r\n   ...:\r\n\r\nIn [2]: labels = {\r\n   ...:             'dag_id': 'test_dag_id',\r\n   ...:             'task_id': 'test_task_id',\r\n   ...:             'execution_date': 'execution_date',\r\n   ...:             'try_number': 2,\r\n   ...:         }\r\n\r\nIn [3]: _get_pod_identifying_label_string(labels)\r\nOut[3]: 'dag_id=test_dag_id,task_id=test_task_id,execution_date=execution_date'\r\n\r\nIn [6]: labels_1 = {\r\n   ...:             'task_id': 'test_task_id',\r\n   ...:             'dag_id': 'test_dag_id',\r\n   ...:             'execution_date': 'execution_date',\r\n   ...:             'try_number': 2,\r\n   ...:         }\r\n\r\nIn [7]: _get_pod_identifying_label_string(labels_1)\r\nOut[7]: 'task_id=test_task_id,dag_id=test_dag_id,execution_date=execution_date'\r\n\r\n```",
        "createdAt" : "2020-05-06T21:55:55Z",
        "updatedAt" : "2020-05-15T18:43:50Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "21f3619560c3e289710b15c0ef7ba172512e8eba",
    "line" : 173,
    "diffHunk" : "@@ -1,1 +299,303 @@    @staticmethod\n    def _get_pod_identifying_label_string(labels):\n        filtered_labels = {label_id: label for label_id, label in labels.items() if label_id != 'try_number'}\n        return ','.join([label_id + '=' + label for label_id, label in sorted(filtered_labels.items())])\n"
  },
  {
    "id" : "ea330256-44dd-49d5-a5c0-3205c594dc3b",
    "prId" : 7292,
    "prUrl" : "https://github.com/apache/airflow/pull/7292#pullrequestreview-352339724",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "212ae837-f221-4f1e-86dc-a21d0d5aab8a",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I think we should protect against writing the logs twice. In case of Airflow Exception thrown it is more than likely that the final_state will not be a success, so the logs will be written twice. I think we should have a flag \"logs_dumped\" or smth like that an only write logs once.",
        "createdAt" : "2020-02-03T15:10:23Z",
        "updatedAt" : "2020-02-03T19:51:47Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "9f4fadd3-dcf2-40c3-8ff3-1a5ddb21f20b",
        "parentId" : "212ae837-f221-4f1e-86dc-a21d0d5aab8a",
        "authorId" : "88820240-852d-46ba-ab9c-593a35b90225",
        "body" : "If we hit an exception at lines 285-288, we would log the pod events, then re-raise the exception which shouldn't allow execution to the logging at lines 294-296 - so I don't think it's possible to log them twice - unless I'm missing something here, I haven't had coffee yet :)",
        "createdAt" : "2020-02-03T15:26:15Z",
        "updatedAt" : "2020-02-03T19:51:47Z",
        "lastEditedBy" : "88820240-852d-46ba-ab9c-593a35b90225",
        "tags" : [
        ]
      },
      {
        "id" : "f32634f7-ab3c-4136-8881-cba586a055b2",
        "parentId" : "212ae837-f221-4f1e-86dc-a21d0d5aab8a",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "You are right. No worries. I am after my 3rd coffee and still missed the `raise`",
        "createdAt" : "2020-02-03T15:28:51Z",
        "updatedAt" : "2020-02-03T19:51:47Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "80866b97c80b18b6a7ad8aed8004d0c71bea5cfe",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +292,296 @@\n            if final_state != State.SUCCESS:\n                if self.log_events_on_failure:\n                    for event in launcher.read_pod_events(pod).items:\n                        self.log.error(\"Pod Event: %s - %s\", event.reason, event.message)"
  },
  {
    "id" : "094620ca-c350-466e-9366-a581d6ee139b",
    "prId" : 8829,
    "prUrl" : "https://github.com/apache/airflow/pull/8829#pullrequestreview-412230532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b85bb74d-1790-4cf5-bdf6-18ac1ef61ae8",
        "parentId" : null,
        "authorId" : "62bb13b5-8a60-4b4b-9533-e96d14a3a544",
        "body" : "LGTM, we can keep it on 220 also for v1.10, as preparation for the longer suffix added in v2.0",
        "createdAt" : "2020-05-12T08:19:12Z",
        "updatedAt" : "2020-05-15T14:09:50Z",
        "lastEditedBy" : "62bb13b5-8a60-4b4b-9533-e96d14a3a544",
        "tags" : [
        ]
      },
      {
        "id" : "fdb2581b-d4af-41a6-964a-294930885988",
        "parentId" : "b85bb74d-1790-4cf5-bdf6-18ac1ef61ae8",
        "authorId" : "3604ad12-d5ab-44c4-9e44-bdc9ffd8da99",
        "body" : "Any further action needed from my side? :thinking: ",
        "createdAt" : "2020-05-12T14:12:24Z",
        "updatedAt" : "2020-05-15T14:09:50Z",
        "lastEditedBy" : "3604ad12-d5ab-44c4-9e44-bdc9ffd8da99",
        "tags" : [
        ]
      },
      {
        "id" : "79d96626-0de5-4b1c-b859-f768f32994b2",
        "parentId" : "b85bb74d-1790-4cf5-bdf6-18ac1ef61ae8",
        "authorId" : "62bb13b5-8a60-4b4b-9533-e96d14a3a544",
        "body" : "I'm not sure what else is needed for this fix to get on the v1.10 merge train :steam_locomotive:\r\n\r\nmerging is blocked as long as there are unticked TODOs in the PR description btw.\r\n\r\nmaybe @kaxil: anything else? ",
        "createdAt" : "2020-05-12T18:11:47Z",
        "updatedAt" : "2020-05-15T14:09:50Z",
        "lastEditedBy" : "62bb13b5-8a60-4b4b-9533-e96d14a3a544",
        "tags" : [
        ]
      },
      {
        "id" : "8381bc70-0ffb-4251-a332-ee35abe59871",
        "parentId" : "b85bb74d-1790-4cf5-bdf6-18ac1ef61ae8",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Can we add tests too, please?\r\n\r\n@dimberman Can you take a look please at this PR?",
        "createdAt" : "2020-05-14T22:04:15Z",
        "updatedAt" : "2020-05-15T14:09:50Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "124e4a0a-105f-412d-9368-877101bbdb5c",
        "parentId" : "b85bb74d-1790-4cf5-bdf6-18ac1ef61ae8",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "LGTM just would like to see some tests.",
        "createdAt" : "2020-05-14T22:32:06Z",
        "updatedAt" : "2020-05-15T14:09:50Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a83b9effc32ab7c4c49f0ebbb2d655103c5c6fdb",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +323,327 @@        if self.pod_template_file or self.full_pod_spec:\n            return None\n        validate_key(name, max_length=220)\n        return re.sub(r'[^a-z0-9.-]+', '-', name.lower())"
  },
  {
    "id" : "f1e9dfbb-62fc-44ba-abef-f8910684e45e",
    "prId" : 10230,
    "prUrl" : "https://github.com/apache/airflow/pull/10230#pullrequestreview-463887547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24d00d8a-0476-4f3c-bb55-8866f92482ee",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Needs description",
        "createdAt" : "2020-08-08T15:01:05Z",
        "updatedAt" : "2020-08-09T16:38:55Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "3c1d54aa-47d3-4e19-932e-06760124c3df",
        "parentId" : "24d00d8a-0476-4f3c-bb55-8866f92482ee",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "@kaxil done",
        "createdAt" : "2020-08-09T16:39:15Z",
        "updatedAt" : "2020-08-09T16:39:16Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d77749683ec5909ac203fd5de0a9affc33a9aa15",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +300,304 @@    def handle_pod_overlap(self, labels, try_numbers_match, launcher, pod_list):\n        \"\"\"\n\n        In cases where the Scheduler restarts while a KubernetsPodOperator task is running,\n        this function will either continue to monitor the existing pod or launch a new pod"
  }
]