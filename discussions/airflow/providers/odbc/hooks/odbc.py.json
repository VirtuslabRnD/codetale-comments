[
  {
    "id" : "d95dadb8-948c-4587-9506-cb6c2bb8199c",
    "prId" : 6850,
    "prUrl" : "https://github.com/apache/airflow/pull/6850#pullrequestreview-344091354",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a16c2908-f14c-404c-ba2f-e6e5d8a1b127",
        "parentId" : null,
        "authorId" : "9ec4ee8e-c87e-4635-88cd-1b828e93148e",
        "body" : "I'm not familiar with Airflow, is the minimum Python support version support this syntax for Python type hints? I see other places in this PR that use the comment syntax for type hints, so I'm not sure if there is a best practice in this project for type hints.",
        "createdAt" : "2020-01-15T17:56:35Z",
        "updatedAt" : "2020-01-18T22:17:51Z",
        "lastEditedBy" : "9ec4ee8e-c87e-4635-88cd-1b828e93148e",
        "tags" : [
        ]
      },
      {
        "id" : "dbb91ed6-e0f7-47fb-acc2-1d1119ff5437",
        "parentId" : "a16c2908-f14c-404c-ba2f-e6e5d8a1b127",
        "authorId" : "a1587925-b1c0-4469-a592-51497b162e71",
        "body" : "yeah the practice as i understand it is to include the hints in PRs to master; then if it is backported, committers will alter as necessary.",
        "createdAt" : "2020-01-16T17:33:10Z",
        "updatedAt" : "2020-01-18T22:17:51Z",
        "lastEditedBy" : "a1587925-b1c0-4469-a592-51497b162e71",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd7c67194471c86bce0b53792f4e6f6ae646abff",
    "line" : 199,
    "diffHunk" : "@@ -1,1 +197,201 @@        return {k: clean_bool(v) for k, v in merged_connect_kwargs.items()}\n\n    def get_conn(self) -> pyodbc.Connection:\n        \"\"\"\n        Returns a pyodbc connection object."
  },
  {
    "id" : "428a8d1a-bb9d-4447-9842-c71c407fe763",
    "prId" : 6850,
    "prUrl" : "https://github.com/apache/airflow/pull/6850#pullrequestreview-344092756",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a99d17f-86c0-4801-a659-912c0fdd2132",
        "parentId" : null,
        "authorId" : "9ec4ee8e-c87e-4635-88cd-1b828e93148e",
        "body" : "Also, is this method used anywhere? I can't seem to find usage anywhere?\r\n\r\nIf not, could you help me understand what you envision this method being used for?",
        "createdAt" : "2020-01-15T17:58:16Z",
        "updatedAt" : "2020-01-18T22:17:51Z",
        "lastEditedBy" : "9ec4ee8e-c87e-4635-88cd-1b828e93148e",
        "tags" : [
        ]
      },
      {
        "id" : "d26aab79-a313-4bcc-b010-6b08bab7c624",
        "parentId" : "1a99d17f-86c0-4801-a659-912c0fdd2132",
        "authorId" : "a1587925-b1c0-4469-a592-51497b162e71",
        "body" : "this is an abstract method in BaseHook\r\n\r\nit's the standard way to get the \"connector\" object in airflow",
        "createdAt" : "2020-01-16T17:35:27Z",
        "updatedAt" : "2020-01-18T22:17:51Z",
        "lastEditedBy" : "a1587925-b1c0-4469-a592-51497b162e71",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd7c67194471c86bce0b53792f4e6f6ae646abff",
    "line" : 199,
    "diffHunk" : "@@ -1,1 +197,201 @@        return {k: clean_bool(v) for k, v in merged_connect_kwargs.items()}\n\n    def get_conn(self) -> pyodbc.Connection:\n        \"\"\"\n        Returns a pyodbc connection object."
  },
  {
    "id" : "e80bf99f-1db5-4bb8-92e4-2bbd13a4d8b7",
    "prId" : 6850,
    "prUrl" : "https://github.com/apache/airflow/pull/6850#pullrequestreview-344098136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c436a14a-39ec-4fc8-8b70-9e0b0f90abc7",
        "parentId" : null,
        "authorId" : "9ec4ee8e-c87e-4635-88cd-1b828e93148e",
        "body" : "Are we stripping `{` and `}` just to be extra defensive?",
        "createdAt" : "2020-01-16T16:47:29Z",
        "updatedAt" : "2020-01-18T22:17:51Z",
        "lastEditedBy" : "9ec4ee8e-c87e-4635-88cd-1b828e93148e",
        "tags" : [
        ]
      },
      {
        "id" : "84699e3c-ae7c-427c-a0de-97fee2644d73",
        "parentId" : "c436a14a-39ec-4fc8-8b70-9e0b0f90abc7",
        "authorId" : "a1587925-b1c0-4469-a592-51497b162e71",
        "body" : "i am stripping it so that user could do `{ODBC Driver 17 for SQL Server}` or `ODBC Driver 17 for SQL Server` and either way will work.\r\n\r\nthis way, whether user has provided them or not, when i build the connection string, i add safely add the curly braces.",
        "createdAt" : "2020-01-16T17:37:45Z",
        "updatedAt" : "2020-01-18T22:17:51Z",
        "lastEditedBy" : "a1587925-b1c0-4469-a592-51497b162e71",
        "tags" : [
        ]
      },
      {
        "id" : "6fccca58-3a0e-47f9-adab-bd694c86a62f",
        "parentId" : "c436a14a-39ec-4fc8-8b70-9e0b0f90abc7",
        "authorId" : "a1587925-b1c0-4469-a592-51497b162e71",
        "body" : "this way your conn extra can look like this:\r\n```\r\n{\r\n      \"Driver\": \"ODBC Driver 17 for SQL Server\",\r\n      \"ApplicationIntent\": \"ReadOnly\",\r\n      \"TrustedConnection\": \"Yes\"\r\n}\r\n```\r\n(i.e. no braces)\r\n\r\nIf you build your conn_uri from env vars, this is especially helpful because in airflow conn_uri format you have to urlencode curly braces so with braces it would look like this:\r\n```\r\n'none://?Driver=%7BODBC+Driver+17+for+SQL+Server%7D&ApplicationIntent=ReadOnly&TrustedConnection=Yes'\r\n```\r\n\r\nBut without them it could be tad cleaner and more user friendly:\r\n```\r\n'none://?Driver=ODBC+Driver+17+for+SQL+Server&ApplicationIntent=ReadOnly&TrustedConnection=Yes'\r\n```\r\n\r\nit's just easier for users without really any risk or cost as i see it",
        "createdAt" : "2020-01-16T17:44:40Z",
        "updatedAt" : "2020-01-18T22:17:51Z",
        "lastEditedBy" : "a1587925-b1c0-4469-a592-51497b162e71",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd7c67194471c86bce0b53792f4e6f6ae646abff",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +113,117 @@            if driver:\n                self._driver = driver\n        return self._driver and self._driver.strip().lstrip('{').rstrip('}').strip()\n\n    @property"
  },
  {
    "id" : "3600d43b-ac82-407e-aff5-6b3cc4a2af7e",
    "prId" : 11170,
    "prUrl" : "https://github.com/apache/airflow/pull/11170#pullrequestreview-497097427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a8a4843-58f2-4a06-9a8f-2a71a9627705",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "Is this returning a more specific type?",
        "createdAt" : "2020-09-27T16:21:18Z",
        "updatedAt" : "2020-09-27T16:21:43Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "48993a0e-754f-4b35-86c4-763521769dac",
        "parentId" : "9a8a4843-58f2-4a06-9a8f-2a71a9627705",
        "authorId" : "be673e57-e4ed-45cb-9e17-e2cecf2c2b2d",
        "body" : "it returns an authorization connection object \r\nin dbapi_hook.py the definition of connection function is as below which is a return for above function:  \r\n\r\n```python\r\ndef connect(self, host: str, port: int, username: str, schema: str) -> Any:\r\n```\r\n\r\nhence used `Any` here",
        "createdAt" : "2020-09-27T17:33:38Z",
        "updatedAt" : "2020-09-27T17:34:12Z",
        "lastEditedBy" : "be673e57-e4ed-45cb-9e17-e2cecf2c2b2d",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f758bed1c039868fe4249187cbec90c2e635913",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +213,217 @@    def get_sqlalchemy_connection(\n        self, connect_kwargs: Optional[dict] = None, engine_kwargs: Optional[dict] = None\n    ) -> Any:\n        \"\"\"\n        Sqlalchemy connection object"
  }
]