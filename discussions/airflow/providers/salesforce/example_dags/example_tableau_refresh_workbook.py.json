[
  {
    "id" : "a1c2fed6-1391-4e8b-9b08-0934671ad961",
    "prId" : 7410,
    "prUrl" : "https://github.com/apache/airflow/pull/7410#pullrequestreview-362628899",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "159c9747-5487-44dd-940b-1694cd2ade1f",
        "parentId" : null,
        "authorId" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "body" : "Personally I'm not a big fan of this pattern. I know that this was introduced with the AWS stuff a while ago, but I'd like to have the original Operator to be blocking (maybe make this configurable), instead of always using an Operator/Sensor pair.\r\n\r\nFor example, if the `TableauRefreshWorkbookOperator` operation fails for some reason. We'd like to retry this. If the exit code is given at the Sensor, the sensor will be retried.",
        "createdAt" : "2020-02-19T08:57:35Z",
        "updatedAt" : "2020-02-22T01:00:27Z",
        "lastEditedBy" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "tags" : [
        ]
      },
      {
        "id" : "10310fd2-19e3-48e2-978b-25c774fdff64",
        "parentId" : "159c9747-5487-44dd-940b-1694cd2ade1f",
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "> instead of always using an Operator/Sensor pair.\r\n\r\nThat's where I am using subdags :) ❤️ \r\n\r\n",
        "createdAt" : "2020-02-19T09:59:54Z",
        "updatedAt" : "2020-02-22T01:00:27Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "7f96d4b9-ca95-4f52-b640-2c43be686d3f",
        "parentId" : "159c9747-5487-44dd-940b-1694cd2ade1f",
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : ">  I'd like to have the original Operator to be blocking (maybe make this configurable)\r\n\r\nSo you want it to `sleep` ? An extract refresh can take very long.",
        "createdAt" : "2020-02-19T10:01:50Z",
        "updatedAt" : "2020-02-22T01:00:27Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "3eb41b31-3509-4cae-9601-0c603431107c",
        "parentId" : "159c9747-5487-44dd-940b-1694cd2ade1f",
        "authorId" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "body" : "Normally the Operator itself would block until it has refreshed. So the behavior of the Sensor is part of the Operator.\r\nFor me, having a separate sensor is a bit awkward. For example with the BashOperator, we wait until the process has finished, we don't have a sensor that will block until the process has ended.",
        "createdAt" : "2020-02-19T10:08:08Z",
        "updatedAt" : "2020-02-22T01:00:27Z",
        "lastEditedBy" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "tags" : [
        ]
      },
      {
        "id" : "18c62e65-5b34-4b78-a53a-6c5e570ac387",
        "parentId" : "159c9747-5487-44dd-940b-1694cd2ade1f",
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "I could make this configurable so that after the refresh operation has been kicked off It will poke until it succeeds and then the task status will be success.\r\nBut this would mean that you can have this bad case where the refresh operation has been kicked off successfully but somehow the poke fails due to a unusual error. When you then clear this task (because it failed) you will kick off another extract refresh.",
        "createdAt" : "2020-02-19T10:27:01Z",
        "updatedAt" : "2020-02-22T01:00:27Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "d9f409ad-bb90-4ea7-929d-5ddf04f81f66",
        "parentId" : "159c9747-5487-44dd-940b-1694cd2ade1f",
        "authorId" : "73238ffa-26c5-4e17-b57a-e3edd170dfb6",
        "body" : "I think having a separate sensor or making it configurable is crucial.\r\n\r\nWhen you perform Extract the processing of the job is \"moving\" from Airflow worker to Tableau server. There is no reason for the Airflow operator to continue occupying the worker needlessly.\r\n\r\nBashOperator is different. The script runs on the Airflow worker resources. It can also be used to connect with another service resulted in waiting time but this is an option unlike the TableauRefreshWorkbookOperator where it always executed on the Tableau server resources.\r\n\r\nThink also about a case where many Dags uses TableauRefreshWorkbookOperator at the same time. If all occupy the workers till extract is finished it might cause the entire Airflow cluster to be paralyzed.\r\n\r\nI think @feluelle concern about 2nd refresh is a valid one.",
        "createdAt" : "2020-02-19T20:15:58Z",
        "updatedAt" : "2020-02-22T01:00:27Z",
        "lastEditedBy" : "73238ffa-26c5-4e17-b57a-e3edd170dfb6",
        "tags" : [
        ]
      },
      {
        "id" : "91b4130b-f363-4205-9cd8-a7e6b5505616",
        "parentId" : "159c9747-5487-44dd-940b-1694cd2ade1f",
        "authorId" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "body" : "That depends on how you implement it. If you fetch the and check if it is still refreshing, then you should not re-refresh the workbook. You need to handle different exceptions in a different way.\r\n\r\nThe implementation of the Operator is a different discussion. Right now this is getting cluttered in the codebase. For GCP we're having a single operator that blocks, while many AWS operators have this Operator/Sensor pattern.",
        "createdAt" : "2020-02-20T09:07:55Z",
        "updatedAt" : "2020-02-22T01:00:27Z",
        "lastEditedBy" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "tags" : [
        ]
      },
      {
        "id" : "6090cf52-4b96-4063-a30a-a748a3bce4ef",
        "parentId" : "159c9747-5487-44dd-940b-1694cd2ade1f",
        "authorId" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "body" : "My preference would be, making the Operator blocking by default, and also supply the sensor. People can easily use the operator itself if they have only one workbook for example. If they go to more advanced patterns, they can use the sensor pattern. WDYT?",
        "createdAt" : "2020-02-20T09:10:30Z",
        "updatedAt" : "2020-02-22T01:00:27Z",
        "lastEditedBy" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "tags" : [
        ]
      },
      {
        "id" : "345dc95f-1276-4b3e-86a9-264c82866ed1",
        "parentId" : "159c9747-5487-44dd-940b-1694cd2ade1f",
        "authorId" : "73238ffa-26c5-4e17-b57a-e3edd170dfb6",
        "body" : "I have no strong feelings about what should be the default. From my perspective as long as overwrite is possible it's good enough.",
        "createdAt" : "2020-02-20T10:35:20Z",
        "updatedAt" : "2020-02-22T01:00:27Z",
        "lastEditedBy" : "73238ffa-26c5-4e17-b57a-e3edd170dfb6",
        "tags" : [
        ]
      },
      {
        "id" : "3ba1372f-0ca0-4954-bfe8-adabce7e4d21",
        "parentId" : "159c9747-5487-44dd-940b-1694cd2ade1f",
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "@Fokko it really sounds reasonable to me, but I tried to implement it and I don't think it works out nicely... :/\r\n\r\nI don't like the two connections one for the refresh operation and one for the sensor task.\r\nIf I use the code from the sensor directly - it is duplicated code...",
        "createdAt" : "2020-02-20T10:46:29Z",
        "updatedAt" : "2020-02-22T01:00:27Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "99a21e03-7d0a-4c1d-bcd4-31bc2a9b65d5",
        "parentId" : "159c9747-5487-44dd-940b-1694cd2ade1f",
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "And do I wait until it has succeeded or until it has finished?",
        "createdAt" : "2020-02-20T11:01:41Z",
        "updatedAt" : "2020-02-22T01:00:27Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "5dec27d9-b42a-4243-90ec-76d8190b09bf",
        "parentId" : "159c9747-5487-44dd-940b-1694cd2ade1f",
        "authorId" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "body" : "I would `sleep`, similar to here: https://github.com/apache/airflow/blob/aff3a361b4092212c0757f9ce88fa2e40d25d1f4/airflow/providers/apache/druid/hooks/druid.py#L99-L124",
        "createdAt" : "2020-02-20T15:45:58Z",
        "updatedAt" : "2020-02-22T01:00:27Z",
        "lastEditedBy" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "tags" : [
        ]
      },
      {
        "id" : "d570a843-d8e8-4a27-8a21-5057546fd47e",
        "parentId" : "159c9747-5487-44dd-940b-1694cd2ade1f",
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "I am using the Sensor right know with the default mode `poke` means it will `sleep` :)",
        "createdAt" : "2020-02-20T16:08:05Z",
        "updatedAt" : "2020-02-22T01:00:27Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "d9787ac7-b5ac-4015-8fa8-81d24ceb6f7e",
        "parentId" : "159c9747-5487-44dd-940b-1694cd2ade1f",
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "I need to fully test this behaviour first.",
        "createdAt" : "2020-02-20T16:08:30Z",
        "updatedAt" : "2020-02-22T01:00:27Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "2a9a2934-d95d-4fe6-ac59-d5af805b0f71",
        "parentId" : "159c9747-5487-44dd-940b-1694cd2ade1f",
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "Seems to work :)",
        "createdAt" : "2020-02-21T13:31:32Z",
        "updatedAt" : "2020-02-22T01:00:27Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "479d29cf896de3c69ad6287607ed16980a9f4ce2",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +59,63 @@    )\n    # The following task queries the status of the workbook refresh job until it succeeds.\n    task_check_job_status = TableauJobStatusSensor(\n        site_id='my_site',\n        job_id=\"{{ ti.xcom_pull(task_ids='refresh_tableau_workbook_non_blocking') }}\","
  }
]