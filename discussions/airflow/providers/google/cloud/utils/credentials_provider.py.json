[
  {
    "id" : "773f352e-3190-42ca-8209-f15fb3d5fdbb",
    "prId" : 7795,
    "prUrl" : "https://github.com/apache/airflow/pull/7795#pullrequestreview-378990426",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "515d719b-75f6-4cab-8460-9a9e9ff3a947",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This code is very similar to: https://github.com/apache/airflow/blob/master/airflow/providers/google/cloud/hooks/base.py#L172-L218\r\nCan you remove code duplication, please?",
        "createdAt" : "2020-03-21T11:42:05Z",
        "updatedAt" : "2020-03-23T00:01:59Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "c1256d2f-fbe4-4195-bd91-24dc16ed5bae",
        "parentId" : "515d719b-75f6-4cab-8460-9a9e9ff3a947",
        "authorId" : "aeab690b-2491-4cd7-95ca-94640c32271c",
        "body" : "I refactor the code to move the whole logic in `base.py` into `credentials_provider.py`. Let me know how you think",
        "createdAt" : "2020-03-22T01:08:00Z",
        "updatedAt" : "2020-03-23T00:01:59Z",
        "lastEditedBy" : "aeab690b-2491-4cd7-95ca-94640c32271c",
        "tags" : [
        ]
      },
      {
        "id" : "bd79c8d3-9746-4e3b-a278-9ed49f49cbf3",
        "parentId" : "515d719b-75f6-4cab-8460-9a9e9ff3a947",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "LGTM",
        "createdAt" : "2020-03-22T10:24:18Z",
        "updatedAt" : "2020-03-23T00:01:59Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "f45e0b428b175f2ac321b2df5498ee5a1983a6d8",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +167,171 @@\n\ndef get_credentials_and_project_id(\n    key_path: Optional[str] = None,\n    keyfile_dict: Optional[Dict[str, str]] = None,"
  },
  {
    "id" : "ad593ea0-445e-4da0-8da5-318f7777c898",
    "prId" : 8213,
    "prUrl" : "https://github.com/apache/airflow/pull/8213#pullrequestreview-391438487",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7efb4b6a-a52f-4dab-85c3-c55561f554ff",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Can you add tests?",
        "createdAt" : "2020-04-08T12:55:24Z",
        "updatedAt" : "2020-04-14T11:39:31Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "cb1930d3-039c-4734-8f01-9842fa304832",
        "parentId" : "7efb4b6a-a52f-4dab-85c3-c55561f554ff",
        "authorId" : "e1ccef41-f173-451c-94a1-a49e6d67a483",
        "body" : "Ok. Should the test case be if `delegate_to` is passed, the Exception is raised?",
        "createdAt" : "2020-04-08T13:02:26Z",
        "updatedAt" : "2020-04-14T11:39:31Z",
        "lastEditedBy" : "e1ccef41-f173-451c-94a1-a49e6d67a483",
        "tags" : [
        ]
      },
      {
        "id" : "9b3d25b3-d59a-4de4-9881-44fd9613e8ea",
        "parentId" : "7efb4b6a-a52f-4dab-85c3-c55561f554ff",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Yes. We need tests for this case.",
        "createdAt" : "2020-04-08T13:43:28Z",
        "updatedAt" : "2020-04-14T11:39:31Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "1da48f2b-0d63-4b3d-b0c5-821306b5685a",
        "parentId" : "7efb4b6a-a52f-4dab-85c3-c55561f554ff",
        "authorId" : "e1ccef41-f173-451c-94a1-a49e6d67a483",
        "body" : "Hmm, I'm struggling to work out how to make sure `google.auth.default()` returns a credentials object without the `with_subject` attribute.",
        "createdAt" : "2020-04-09T10:46:43Z",
        "updatedAt" : "2020-04-14T11:39:31Z",
        "lastEditedBy" : "e1ccef41-f173-451c-94a1-a49e6d67a483",
        "tags" : [
        ]
      },
      {
        "id" : "941ceebf-2681-418c-b9c5-11ed38cbf938",
        "parentId" : "7efb4b6a-a52f-4dab-85c3-c55561f554ff",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : " I will look at it and prepare an example for you. I suspect that mock + spec/autospec will allow this.",
        "createdAt" : "2020-04-09T10:59:19Z",
        "updatedAt" : "2020-04-14T11:39:31Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "dba33bdd-b1ad-456d-b0e7-df8107a2e433",
        "parentId" : "7efb4b6a-a52f-4dab-85c3-c55561f554ff",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "```python\r\nfrom google.auth import compute_engine\r\n```\r\n```python\r\n    @mock.patch('google.auth.default')\r\n    def test_get_credentials_and_project_id_with_default_auth_and_unsupported_delegate(self, mock_auth_default):\r\n        mock_credentials = mock.MagicMock(spec=compute_engine.Credentials)\r\n        mock_auth_default.return_value = (mock_credentials, self.test_project_id)\r\n\r\n        with self.assertRaisesRegex(AirflowException, re.escape(\r\n            \"The `delegate_to` parameter cannot be used here as the current authentication method does not \"\r\n            \"support account impersonate. Please use service-account for authorization.\"\r\n        )):\r\n            get_credentials_and_project_id(delegate_to=\"USER\")\r\n```\r\nCan you check it?",
        "createdAt" : "2020-04-10T13:21:32Z",
        "updatedAt" : "2020-04-14T11:39:31Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "c942e94771b198e92c6654bba10337dded327b37",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +242,246 @@\n    if delegate_to:\n        if hasattr(credentials, 'with_subject'):\n            credentials = credentials.with_subject(delegate_to)\n        else:"
  }
]