[
  {
    "id" : "3367dfe8-8332-4a31-b1bf-a3707cec7852",
    "prId" : 8808,
    "prUrl" : "https://github.com/apache/airflow/pull/8808#pullrequestreview-409121531",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cc40978-537e-402e-a976-c6a11904f24d",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/airflow\", line 11, in <module>\r\n    load_entry_point('apache-airflow', 'console_scripts', 'airflow')()\r\n  File \"/opt/airflow/airflow/__main__.py\", line 40, in main\r\n    args.func(args)\r\n  File \"/opt/airflow/airflow/cli/cli_parser.py\", line 52, in command\r\n    return func(*args, **kwargs)\r\n  File \"/opt/airflow/airflow/utils/cli.py\", line 84, in wrapper\r\n    return f(*args, **kwargs)\r\n  File \"/opt/airflow/airflow/cli/commands/task_command.py\", line 341, in task_test\r\n    ti.run(ignore_task_deps=True, ignore_ti_state=True, test_mode=True)\r\n  File \"/opt/airflow/airflow/utils/session.py\", line 61, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/opt/airflow/airflow/models/taskinstance.py\", line 1143, in run\r\n    session=session)\r\n  File \"/opt/airflow/airflow/utils/session.py\", line 57, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/opt/airflow/airflow/sentry.py\", line 140, in wrapper\r\n    return func(task_instance, *args, session=session, **kwargs)\r\n  File \"/opt/airflow/airflow/models/taskinstance.py\", line 1024, in _run_raw_task\r\n    result = task_copy.execute(context=context)\r\n  File \"/opt/airflow/airflow/providers/google/cloud/operators/cloud_build.py\", line 217, in execute\r\n    body = BuildProcessor(body=self.body).process_body()\r\n  File \"/opt/airflow/airflow/providers/google/cloud/operators/cloud_build.py\", line 99, in process_body\r\n    self._verify_source()\r\n  File \"/opt/airflow/airflow/providers/google/cloud/operators/cloud_build.py\", line 52, in _verify_source\r\n    is_storage = \"storageSource\" in self.body[\"source\"]\r\nKeyError: 'source'\r\n```\r\nI'm afraid this file won't work. Can you make this optional key?\r\nCan you make this ",
        "createdAt" : "2020-05-11T03:31:25Z",
        "updatedAt" : "2020-05-19T17:49:58Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "2baa38fe-89ee-4521-b700-e8b6f01c99e4",
        "parentId" : "8cc40978-537e-402e-a976-c6a11904f24d",
        "authorId" : "f517b104-c3c5-4a57-a64f-5bfb07f21feb",
        "body" : "providing a source is optional for a build config. Should we always check and fail if the body misses a source?",
        "createdAt" : "2020-05-11T11:05:47Z",
        "updatedAt" : "2020-05-19T17:49:58Z",
        "lastEditedBy" : "f517b104-c3c5-4a57-a64f-5bfb07f21feb",
        "tags" : [
        ]
      },
      {
        "id" : "367404dc-4d1c-4d99-bb23-09313d51caed",
        "parentId" : "8cc40978-537e-402e-a976-c6a11904f24d",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "We should allow the build object to be passed without sources.",
        "createdAt" : "2020-05-11T12:23:51Z",
        "updatedAt" : "2020-05-19T17:49:58Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf2758d52d5a04812796e680243f987ea5abbe0c",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +16,20 @@# under the License.\n\nsteps:\n  - name: 'ubuntu'\n    args: ['echo', 'Hello {{ params.name}}']"
  }
]