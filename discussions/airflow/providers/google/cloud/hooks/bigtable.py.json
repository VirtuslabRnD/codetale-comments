[
  {
    "id" : "98a6c35e-33bb-4d12-a5cb-ec8d7793ff94",
    "prId" : 8145,
    "prUrl" : "https://github.com/apache/airflow/pull/8145#pullrequestreview-391753251",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b486e5b1-5cca-4c31-8855-e224aae6b64e",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Let's decide what we want to use: `str` or `Optional[str] = None` and be cosistent",
        "createdAt" : "2020-04-08T06:48:31Z",
        "updatedAt" : "2020-04-12T21:39:47Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "308e8bb5-1c08-4e1e-9a77-9a96b612085e",
        "parentId" : "b486e5b1-5cca-4c31-8855-e224aae6b64e",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Yeah. Agree. project_id: str is better IMHO. it is semantically correct - we expect project_id to be set. And  it is used most of the time below.",
        "createdAt" : "2020-04-09T18:02:49Z",
        "updatedAt" : "2020-04-12T21:39:47Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "f7ce30ed-8225-40fd-8f74-60bc3f81fcf9",
        "parentId" : "b486e5b1-5cca-4c31-8855-e224aae6b64e",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "@jmcarp I checked the changes and in some places where we use the decorator we are using `project_id: str` and in others `project_id: Optional[str] = None`. I think we should be consistent :)",
        "createdAt" : "2020-04-11T10:00:14Z",
        "updatedAt" : "2020-04-12T21:39:47Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f33e29ec38375da3d79fc3df5ce5e2b2a8a0bb7d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +55,59 @@\n    @GoogleBaseHook.fallback_to_default_project_id\n    def get_instance(self, instance_id: str, project_id: str) -> Instance:\n        \"\"\"\n        Retrieves and returns the specified Cloud Bigtable instance if it exists."
  },
  {
    "id" : "be230cca-3efc-4282-a92d-174e2fa95ebe",
    "prId" : 10340,
    "prUrl" : "https://github.com/apache/airflow/pull/10340#pullrequestreview-468020199",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57bf3653-6418-4a7d-81a9-c8a68cd9f046",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Nice! I didn't know that timeout can be passed like that üëç ",
        "createdAt" : "2020-08-15T17:06:39Z",
        "updatedAt" : "2020-08-15T22:04:13Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "73bcf4ad-d14b-4a1e-88a9-ba76161ca515",
        "parentId" : "57bf3653-6418-4a7d-81a9-c8a68cd9f046",
        "authorId" : "ff1a0a2b-e0c5-423e-b7e2-c73288642da5",
        "body" : "Same. Until I saw the timeout usage here in documentation:\r\nhttps://googleapis.dev/python/bigtable/latest/instance.html#google.cloud.bigtable.instance.Instance.create",
        "createdAt" : "2020-08-15T22:07:00Z",
        "updatedAt" : "2020-08-15T22:07:00Z",
        "lastEditedBy" : "ff1a0a2b-e0c5-423e-b7e2-c73288642da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2a50466f667ab9069f824161de1c38d01bb5512",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +227,231 @@\n        operation = instance.update()\n        operation.result(timeout)\n\n        return instance"
  }
]