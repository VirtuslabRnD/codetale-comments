[
  {
    "id" : "a65c8f52-97ef-40bc-aabe-93efd369006c",
    "prId" : 8377,
    "prUrl" : "https://github.com/apache/airflow/pull/8377#pullrequestreview-396029641",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0307b2e-fbd4-447c-8b57-6014900227b0",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Is it now just ignored? (Because it can never fail?)",
        "createdAt" : "2020-04-15T18:12:31Z",
        "updatedAt" : "2020-04-19T15:21:20Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "37d45d0d-5910-4149-b152-094d4abb9cbe",
        "parentId" : "f0307b2e-fbd4-447c-8b57-6014900227b0",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This parameter is supported by the old library. The new library uses a more complex configuration. https://github.com/googleapis/python-api-core/blob/master/google/api_core/retry.py#L242-L250",
        "createdAt" : "2020-04-16T04:32:49Z",
        "updatedAt" : "2020-04-19T15:21:20Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "27954f2c-fe77-4777-9907-77b5a73a406d",
        "parentId" : "f0307b2e-fbd4-447c-8b57-6014900227b0",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "I've added the retry object. ",
        "createdAt" : "2020-04-19T15:16:08Z",
        "updatedAt" : "2020-04-19T15:21:20Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c13b32e0a4274e1e860a355fdd1f9e80c7428714",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +242,246 @@        \"\"\"\n        if num_retries:\n            warnings.warn(\"Parameter `num_retries` is deprecated\", DeprecationWarning)\n\n        _table_resource: Dict[str, Any] = {"
  },
  {
    "id" : "212438e3-2f58-42d7-bc07-eeb4c740a557",
    "prId" : 8377,
    "prUrl" : "https://github.com/apache/airflow/pull/8377#pullrequestreview-394028692",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61d39bf7-3d9e-4c85-9c98-6393799662bf",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "(With an eye to minimizing diff to make this easier to review), is there a reason to rename this variable?",
        "createdAt" : "2020-04-15T18:13:15Z",
        "updatedAt" : "2020-04-19T15:21:20Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "f69475ff-efb5-4608-8abd-b6c14cc65669",
        "parentId" : "61d39bf7-3d9e-4c85-9c98-6393799662bf",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "The reason is this line:\r\n```\r\n table_resource = table_resource or _table_resource\r\n```\r\n\r\nI wanted to avoid adding a big if clause and building this simple dictionray everytime is not a big performance issue I think. ",
        "createdAt" : "2020-04-15T18:28:34Z",
        "updatedAt" : "2020-04-19T15:21:20Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c13b32e0a4274e1e860a355fdd1f9e80c7428714",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +244,248 @@            warnings.warn(\"Parameter `num_retries` is deprecated\", DeprecationWarning)\n\n        _table_resource: Dict[str, Any] = {\n            'tableReference': {\n                'tableId': table_id,"
  },
  {
    "id" : "b1dc38fd-294f-41a8-9677-d8d7ad3cdebe",
    "prId" : 8477,
    "prUrl" : "https://github.com/apache/airflow/pull/8477#pullrequestreview-400987315",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dca3c3cf-c3d3-4a17-83ae-d50bff0131bf",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This is a new parameter. There is no way to maintain backward compatibility. If yes, can you add a note in UPDATIND.md?",
        "createdAt" : "2020-04-27T13:34:35Z",
        "updatedAt" : "2020-04-27T16:21:25Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "0a43bba9-7618-4f0e-9cf6-ccd09030528c",
        "parentId" : "dca3c3cf-c3d3-4a17-83ae-d50bff0131bf",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Done",
        "createdAt" : "2020-04-27T14:07:34Z",
        "updatedAt" : "2020-04-27T16:21:25Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "52166852c38b0265ed097e67d824a5b04bf3794d",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +812,816 @@    def update_dataset(\n        self,\n        fields: Sequence[str],\n        dataset_resource: Dict,\n        dataset_id: Optional[str] = None,"
  },
  {
    "id" : "c96fa9d9-2834-48b5-9699-f32d8b555ff0",
    "prId" : 8477,
    "prUrl" : "https://github.com/apache/airflow/pull/8477#pullrequestreview-401116258",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05769118-1245-4247-8e33-e2dcc8cbb0b5",
        "parentId" : null,
        "authorId" : "e98f6be9-f602-4d12-9ec7-3fcc6d61008a",
        "body" : "Should change of returned type in these deprecated methods (`get_dataset_tables` and `get_dataset_tables_list`) be reflected in UPDATING.md as well?",
        "createdAt" : "2020-04-27T14:45:17Z",
        "updatedAt" : "2020-04-27T16:21:25Z",
        "lastEditedBy" : "e98f6be9-f602-4d12-9ec7-3fcc6d61008a",
        "tags" : [
        ]
      },
      {
        "id" : "937daf29-94c2-49b3-91af-deccc722ffeb",
        "parentId" : "05769118-1245-4247-8e33-e2dcc8cbb0b5",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "This method is deprecated, and from what I see this is not change but a fix (List[Dict] is mentioned in the hook method) ",
        "createdAt" : "2020-04-27T15:01:32Z",
        "updatedAt" : "2020-04-27T16:21:25Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "b819669c-cb8f-42fb-a4d5-fcd5d152f819",
        "parentId" : "05769118-1245-4247-8e33-e2dcc8cbb0b5",
        "authorId" : "e98f6be9-f602-4d12-9ec7-3fcc6d61008a",
        "body" : "But shouldn't returned types be `List[TableListItem]` for `get_dataset_tables` and `List[Dict[str, Any]]` for `get_dataset_tables_list` then?",
        "createdAt" : "2020-04-27T15:29:14Z",
        "updatedAt" : "2020-04-27T16:21:25Z",
        "lastEditedBy" : "e98f6be9-f602-4d12-9ec7-3fcc6d61008a",
        "tags" : [
        ]
      },
      {
        "id" : "a6ea8f12-1ca1-4431-8323-ec591236d5a9",
        "parentId" : "05769118-1245-4247-8e33-e2dcc8cbb0b5",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Fixed",
        "createdAt" : "2020-04-27T16:21:42Z",
        "updatedAt" : "2020-04-27T16:21:43Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "52166852c38b0265ed097e67d824a5b04bf3794d",
    "line" : 491,
    "diffHunk" : "@@ -1,1 +2107,2111 @@        return self.hook.create_empty_dataset(*args, **kwargs)\n\n    def get_dataset_tables(self, *args, **kwargs) -> List[Dict[str, Any]]:\n        \"\"\"\n        This method is deprecated."
  },
  {
    "id" : "f4e7d06b-f61d-47c7-a9d2-96ccc27eb50f",
    "prId" : 8631,
    "prUrl" : "https://github.com/apache/airflow/pull/8631#pullrequestreview-408956924",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aacd41d3-0201-4ad3-b28f-8d52f9d06ded",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Is there any way to set self.project_id?",
        "createdAt" : "2020-05-11T05:19:16Z",
        "updatedAt" : "2020-05-12T10:30:05Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "6b92456e-c66e-4e2b-97d5-de210c8e4037",
        "parentId" : "aacd41d3-0201-4ad3-b28f-8d52f9d06ded",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Nope, the one is resolved by `_get_credentials_and_project_id` so I duplicated the logic using the decorator and `self.project_id`. Will fix it ü§¶‚Äç‚ôÇÔ∏è",
        "createdAt" : "2020-05-11T08:18:13Z",
        "updatedAt" : "2020-05-12T10:30:05Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "42f11a3933888c9a878ce46cb21bbbca1b4edd51",
    "line" : 608,
    "diffHunk" : "@@ -1,1 +1081,1085 @@        :param view_table: the table of the view\n        :type view_table: str\n        :param project_id: the project of the source dataset. If None,\n            self.project_id will be used.\n        :type project_id: str"
  },
  {
    "id" : "e3dd6f36-aef8-4116-ba21-c4255277c7c3",
    "prId" : 8631,
    "prUrl" : "https://github.com/apache/airflow/pull/8631#pullrequestreview-409122417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b78e2d1c-ddc3-4102-bc61-822ba5879a5d",
        "parentId" : null,
        "authorId" : "f3fae8d9-b299-4135-b41a-46a4617874c4",
        "body" : "What about stacklevel? ",
        "createdAt" : "2020-05-11T12:06:16Z",
        "updatedAt" : "2020-05-12T10:30:05Z",
        "lastEditedBy" : "f3fae8d9-b299-4135-b41a-46a4617874c4",
        "tags" : [
        ]
      },
      {
        "id" : "08af248f-063d-4215-9ef5-a86b7736cf10",
        "parentId" : "b78e2d1c-ddc3-4102-bc61-822ba5879a5d",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Stacklevel 1 works as expected here:\r\n```\r\nIn [2]: from airflow.providers.google.cloud.hooks.bigquery import BigQueryHook\r\n\r\nIn [3]: h = BigQueryHook()\r\n\r\nIn [4]: h.get_service()\r\n/Users/tomaszurbaszek/airflow/airflow/providers/google/cloud/hooks/bigquery.py:104: DeprecationWarning: This method will be deprecated. Please use `BigQueryHook.get_client` method\r\n  DeprecationWarning\r\n```",
        "createdAt" : "2020-05-11T12:25:06Z",
        "updatedAt" : "2020-05-12T10:30:05Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "42f11a3933888c9a878ce46cb21bbbca1b4edd51",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +100,104 @@        Returns a BigQuery service object.\n        \"\"\"\n        warnings.warn(\n            \"This method will be deprecated. Please use `BigQueryHook.get_client` method\",\n            DeprecationWarning"
  },
  {
    "id" : "4c67f84d-28b2-4d93-93a4-26088e5de4da",
    "prId" : 8631,
    "prUrl" : "https://github.com/apache/airflow/pull/8631#pullrequestreview-409139869",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6adc44c7-fc6f-4486-9dc6-c91854b00c84",
        "parentId" : null,
        "authorId" : "f3fae8d9-b299-4135-b41a-46a4617874c4",
        "body" : "Is necessary to mark method as static if it is private and used in the same class?",
        "createdAt" : "2020-05-11T12:30:54Z",
        "updatedAt" : "2020-05-12T10:30:05Z",
        "lastEditedBy" : "f3fae8d9-b299-4135-b41a-46a4617874c4",
        "tags" : [
        ]
      },
      {
        "id" : "ad917a92-e794-49f0-82ee-1991c5b62335",
        "parentId" : "6adc44c7-fc6f-4486-9dc6-c91854b00c84",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "It's not necessary but in this way, we can indicate that the method is stateless / pure (in terms of class state). ",
        "createdAt" : "2020-05-11T12:49:43Z",
        "updatedAt" : "2020-05-12T10:30:05Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "42f11a3933888c9a878ce46cb21bbbca1b4edd51",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +125,129 @@        )\n\n    @staticmethod\n    def _resolve_table_reference(\n        table_resource: Dict[str, Any],"
  },
  {
    "id" : "5967c4b4-190d-44da-ae18-2f8a48f9e2fb",
    "prId" : 12216,
    "prUrl" : "https://github.com/apache/airflow/pull/12216#pullrequestreview-526874085",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "973ca605-6519-4124-8138-37dff7acb6fa",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "Fix the earlier static check error.\r\n\r\nPlease note that I made a minor change to the content here (remove word \"`target`\"), for two reasons:\r\n- otherwise the updated line will be longer than 110\r\n- more importantly, this `_split_tablename()` method is used for both `source` and `destination`. Word `target` may be a bit misleading (sounds only for `destination`), and the updated one is meaning enough to me as well.\r\n\r\nCC @mik-laj ",
        "createdAt" : "2020-11-10T05:57:53Z",
        "updatedAt" : "2020-11-10T05:59:03Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ab422c5324dbb93cd584a44c022159460594d17",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +2802,2806 @@\n    if '.' not in table_input:\n        raise ValueError(f'Expected table name in the format of <dataset>.<table>. Got: {table_input}')\n\n    if not default_project_id:"
  },
  {
    "id" : "f75874fa-af38-4c59-9c6f-f3d3b5bba5f7",
    "prId" : 12466,
    "prUrl" : "https://github.com/apache/airflow/pull/12466#pullrequestreview-540469249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ecc8d9eb-8eca-40af-8b84-cbe31d1ebeb4",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Shouldn't this be something like `conn_type = 'big_query'`?",
        "createdAt" : "2020-11-29T00:01:03Z",
        "updatedAt" : "2020-11-29T13:02:51Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "cc0c91cc-fcc6-4123-9de7-bece569e6563",
        "parentId" : "ecc8d9eb-8eca-40af-8b84-cbe31d1ebeb4",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Possibly. I just do not want to fix all those in this PR. I simply converted what I found in the original connection.py. \r\n\r\nI propose that we start agreeing the approach there and standardize those, but this shoudl be a completely different PR (and if you want to propose some guidelines and standard/consistent approach for that - feel free). \r\n\r\nI do not want to scope-creep that change.",
        "createdAt" : "2020-11-29T05:48:55Z",
        "updatedAt" : "2020-11-29T13:02:51Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "f678fb02-f647-4057-85ce-dc0829775455",
        "parentId" : "ecc8d9eb-8eca-40af-8b84-cbe31d1ebeb4",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "We don't need a separate type for BigQuery. In Airflow 1.10, we had a few more connection types, but in Airflow 2.0, this was standardized and most connections use one connection type. In some exceptional situations we need additional configuration options and then we use a new type of connection.\r\nSee: http://apache-airflow-docs.s3-website.eu-central-1.amazonaws.com/docs/apache-airflow-providers-google/latest/connections/index.html\r\nhttps://github.com/apache/airflow/blob/master/UPDATING.md#normalize-gcp_conn_id-for-google-cloud",
        "createdAt" : "2020-11-29T05:54:21Z",
        "updatedAt" : "2020-11-29T13:02:51Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "5b152c8e-f83a-424f-beaa-50abd9ae40d5",
        "parentId" : "ecc8d9eb-8eca-40af-8b84-cbe31d1ebeb4",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "@potiuk :+1: \r\n\r\n@mik-laj If we want to be able to get a BigQuery hook to from `Connection.get_hook` we'll need a unique type won't we?\r\n\r\n(Right now the conn type for BQ is google_cloud_platform, but that means, say, DataProc can't be google_cloud_platform)",
        "createdAt" : "2020-11-29T10:18:17Z",
        "updatedAt" : "2020-11-29T13:02:51Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "10be7316-e55b-4b6a-a6ab-04b988ba8e94",
        "parentId" : "ecc8d9eb-8eca-40af-8b84-cbe31d1ebeb4",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "@ashb Since BigQuery implements DBApiHook, we should probably create a new connection type to be used by DbApiHook.\r\n\r\nI am afraid of registering all hooks because that will also mean that they will be loaded. And loading all modules from all Google libraries into memory is an expensive operation.",
        "createdAt" : "2020-11-29T10:51:20Z",
        "updatedAt" : "2020-11-29T13:02:51Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "4f3545ab-2b04-4a07-9b3b-6de585c64dde",
        "parentId" : "ecc8d9eb-8eca-40af-8b84-cbe31d1ebeb4",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Oh good to know.\r\n\r\nWe'll have to come up with some approach to registereing the information for UI without importing the hook classes then.",
        "createdAt" : "2020-11-29T10:57:21Z",
        "updatedAt" : "2020-11-29T13:02:51Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "c233b1a3-31ce-4ea9-8260-73625494ac0c",
        "parentId" : "ecc8d9eb-8eca-40af-8b84-cbe31d1ebeb4",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Related code: \r\nhttps://github.com/apache/airflow/blob/a6cf883513280de2df80989b81eb65065ec761d1/airflow/providers_manager.py#L199-L209",
        "createdAt" : "2020-11-29T11:07:29Z",
        "updatedAt" : "2020-11-29T13:02:51Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "034c19e23cbd96c064866eae0ab99ffa6e33189c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +70,74 @@    conn_name_attr = 'gcp_conn_id'\n    default_conn_name = 'google_cloud_default'\n    conn_type = 'google_cloud_platform'\n\n    def __init__("
  },
  {
    "id" : "744dd1d8-82db-4c44-b1b5-aebf170d603f",
    "prId" : 12558,
    "prUrl" : "https://github.com/apache/airflow/pull/12558#pullrequestreview-545709100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45ec07f9-8e4a-44b8-a61d-d228243e404f",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Should we use it on L77",
        "createdAt" : "2020-12-06T01:26:28Z",
        "updatedAt" : "2020-12-08T13:01:52Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "606050da-e60b-4556-ba77-8ea0fbc206d5",
        "parentId" : "45ec07f9-8e4a-44b8-a61d-d228243e404f",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Yes!",
        "createdAt" : "2020-12-06T14:07:17Z",
        "updatedAt" : "2020-12-08T13:01:52Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "67ad0ffc2211b5a321de0d6b6ae82a14bb46c36f",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +69,73 @@\n    conn_name_attr = 'gcp_conn_id'\n    default_conn_name = 'google_cloud_default'\n    conn_type = 'google_cloud_platform'\n    hook_name = 'Google Cloud'"
  },
  {
    "id" : "66f642fb-7e3f-4b9a-afce-407e7d6ca1c8",
    "prId" : 15367,
    "prUrl" : "https://github.com/apache/airflow/pull/15367#pullrequestreview-644869644",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fabb9ee6-bb11-40a5-b94f-a3c975f983cc",
        "parentId" : null,
        "authorId" : "b46efccd-ab7b-47f3-9d72-8ebd358919f8",
        "body" : "I see others have mentioned `policyTags`, but I don't see any logic here to filter out those keys from the `current_table_schema`.\r\n\r\nIf you leave those in your table update request, it'll require extra permissions, even if you aren't actually making changes. See: https://github.com/googleapis/python-bigquery/pull/557",
        "createdAt" : "2021-04-23T21:18:48Z",
        "updatedAt" : "2021-04-30T14:20:41Z",
        "lastEditedBy" : "b46efccd-ab7b-47f3-9d72-8ebd358919f8",
        "tags" : [
        ]
      },
      {
        "id" : "915388c7-c2b6-4c98-86ad-af816d9d2b72",
        "parentId" : "fabb9ee6-bb11-40a5-b94f-a3c975f983cc",
        "authorId" : "b46efccd-ab7b-47f3-9d72-8ebd358919f8",
        "body" : "You'll only want to include `policyTags` if you're actually trying to modify those fields.",
        "createdAt" : "2021-04-23T21:19:24Z",
        "updatedAt" : "2021-04-30T14:20:41Z",
        "lastEditedBy" : "b46efccd-ab7b-47f3-9d72-8ebd358919f8",
        "tags" : [
        ]
      },
      {
        "id" : "bf85477a-17d9-4b9d-86da-f19bd89b5e29",
        "parentId" : "fabb9ee6-bb11-40a5-b94f-a3c975f983cc",
        "authorId" : "31a59164-67a7-4933-b19e-d5625b61317d",
        "body" : "Well, if the current table has policyTags and you filter them out from the schema included in the update, it is my understanding that you will in effect delete them - which you need access to do. Leaving them unchanged may work though I haven't actually tried. Worst case, you will need additional access level to modify any schema on a table with policyTags.",
        "createdAt" : "2021-04-24T13:17:12Z",
        "updatedAt" : "2021-04-30T14:20:41Z",
        "lastEditedBy" : "31a59164-67a7-4933-b19e-d5625b61317d",
        "tags" : [
        ]
      },
      {
        "id" : "9d014b30-ab10-451c-b5b7-b868f9cff9ff",
        "parentId" : "fabb9ee6-bb11-40a5-b94f-a3c975f983cc",
        "authorId" : "b46efccd-ab7b-47f3-9d72-8ebd358919f8",
        "body" : "> Well, if the current table has policyTags and you filter them out from the schema included in the update, it is my understanding that you will in effect delete them\r\n\r\nThis is false.\r\n\r\nThe way it works is that any keys that are present in the JSON are the ones that are updated. To remove policy tags, you'd have to include the `policyTags` key and set them to an empty list (or maybe None).\r\n\r\nIncluding these keys, even if they are exactly the same as what is present on the table will attempt to update them, which requires additional permissions beyond those needed for general schema updates. (Thus the 403 error I linked to and the resulting fix)",
        "createdAt" : "2021-04-26T14:42:55Z",
        "updatedAt" : "2021-04-30T14:20:41Z",
        "lastEditedBy" : "b46efccd-ab7b-47f3-9d72-8ebd358919f8",
        "tags" : [
        ]
      },
      {
        "id" : "b61a8068-de3a-4e4f-b14f-366f837417f9",
        "parentId" : "fabb9ee6-bb11-40a5-b94f-a3c975f983cc",
        "authorId" : "31a59164-67a7-4933-b19e-d5625b61317d",
        "body" : "I see, I found the description and policyTags fields are optional on the update_request and will only update values if present, otherwise the old value will remain. That is different from \"name\" and \"type\" which are required and immutable. I take it there is use for a parameter on the operator to determine whether to include policyTags in the update. I will go ahead and add that. Thanks for the feedback, and today I learned something new!",
        "createdAt" : "2021-04-26T15:16:19Z",
        "updatedAt" : "2021-04-30T14:20:41Z",
        "lastEditedBy" : "31a59164-67a7-4933-b19e-d5625b61317d",
        "tags" : [
        ]
      },
      {
        "id" : "91041a9a-cb4e-4992-b573-8e7b79d72ed5",
        "parentId" : "fabb9ee6-bb11-40a5-b94f-a3c975f983cc",
        "authorId" : "31a59164-67a7-4933-b19e-d5625b61317d",
        "body" : "I have now added a parameter to control whether to include policyTags in the update of the schema.",
        "createdAt" : "2021-04-26T16:15:56Z",
        "updatedAt" : "2021-04-30T14:20:41Z",
        "lastEditedBy" : "31a59164-67a7-4933-b19e-d5625b61317d",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d3f1d79dc007c302cf255fd7a54d7dfaaa6f5e6",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +1453,1457 @@                    _remove_policy_tags(field[\"fields\"])\n\n        current_table_schema = self.get_schema(\n            dataset_id=dataset_id, table_id=table_id, project_id=project_id\n        )[\"fields\"]"
  }
]