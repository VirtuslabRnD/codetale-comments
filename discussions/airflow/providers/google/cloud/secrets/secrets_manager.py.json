[
  {
    "id" : "04e44dfb-7b5c-46a4-a83a-ea48415d5ade",
    "prId" : 7795,
    "prUrl" : "https://github.com/apache/airflow/pull/7795#pullrequestreview-407902433",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd89b81c-3c16-4593-b12f-904269e02460",
        "parentId" : null,
        "authorId" : "a5f2999e-af57-41b3-a65c-653777eb07ba",
        "body" : "Hey there. I'm Seth from the Secret Manager team. Thanks for building this integration. Feel free to reach out if you have future questions.\r\n\r\nWe strongly discourage users from pinning to \"latest\" in production workloads. Users should specifically pin to a version (e.g. 1, 2, 3). Is there a way we can update this to allow the user to specify a version id?",
        "createdAt" : "2020-05-07T21:09:18Z",
        "updatedAt" : "2020-05-07T21:09:18Z",
        "lastEditedBy" : "a5f2999e-af57-41b3-a65c-653777eb07ba",
        "tags" : [
        ]
      },
      {
        "id" : "0b0b5662-8ff4-4fa9-a8a7-a812b027537b",
        "parentId" : "fd89b81c-3c16-4593-b12f-904269e02460",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Hello. I'm Kamil from Polidea. We are a Google partner and we are building many integrations for Google services at the request of [Cloud Composer](https://cloud.google.com/composer).\r\n\r\nWe have an abstraction layer that does not provide for this possibility, but I think we can introduce. special parameter syntax that lets you reference a specific version. \r\n\r\nBut I will explain the small context of how this change works so that you can make better design decisions. In previous versions of Airflow, all data was stored in a database (this behavior may have been overwritten by environment variables, so you can also store secret data in env var).\r\n\r\nThe user selects the connection using the operator parameter. The following example will use connections with ID = `'my-company-id``.\r\n```python\r\n    download_file = GCSToLocalOperator(\r\n        task_id=\"download_file\",\r\n        object_name=BUCKET_FILE_LOCATION,\r\n        bucket=BUCKET_1,\r\n        filename=PATH_TO_SAVED_FILE,\r\n        gcp_conn_id='my-company-id`\r\n    )\r\n```\r\nPlease note that the user does not specify the type of backend secret. It is a universal mechanism and this data may come from a database, from environment variables or from another service.\r\n\r\nWhat do you think so that the user can define the connection version after the colon? The sample call will then look like this.\r\n```python\r\n    download_file = GCSToLocalOperator(\r\n        task_id=\"download_file\",\r\n        object_name=BUCKET_FILE_LOCATION,\r\n        bucket=BUCKET_1,\r\n        filename=PATH_TO_SAVED_FILE,\r\n        gcp_conn_id='my-company-id:2'\r\n    )\r\n```\r\nIt won't be a perfect solution, but I think it's easy to implement and easy to use. \r\n",
        "createdAt" : "2020-05-07T21:52:46Z",
        "updatedAt" : "2020-05-07T21:53:24Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "c6dd243a-9d35-4a9e-ae69-209442d729fd",
        "parentId" : "fd89b81c-3c16-4593-b12f-904269e02460",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "@sethvargo Thanks for letting us know. Why is it not recommended, at least from Airflow's perspective, our users would want to pull the secrets with the most recent version (hence 'latest').\r\n\r\nCan you give us some context to let us know how a user who does not know how many versions of a secret exists pull it?",
        "createdAt" : "2020-05-07T22:15:35Z",
        "updatedAt" : "2020-05-07T22:15:35Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "aaac15c3-75b4-4d97-8a21-3cb579c09a22",
        "parentId" : "fd89b81c-3c16-4593-b12f-904269e02460",
        "authorId" : "a5f2999e-af57-41b3-a65c-653777eb07ba",
        "body" : "Hey @kaxil - [here's the protocol](https://github.com/spring-cloud/spring-cloud-gcp/pull/2302) we'd like most integrators to try and align on.\r\n\r\nLatest is a floating alias that resolves to \"the highest numbered secret version\" for the secret. Often times, the team creating the secret is separate from the team consuming the secret. In these cases, the latest version may not be active or usable yet.\r\n\r\nGenerally, you want a workload to be coupled to a specific secret so you can roll forward and roll backward in the event something breaks.\r\n\r\nIt's fine to allow users to _specify_ latest, but I don't think it should be the default behavior. You can see how we recommend specifying the format in the linked issue above.",
        "createdAt" : "2020-05-07T23:25:42Z",
        "updatedAt" : "2020-05-07T23:25:43Z",
        "lastEditedBy" : "a5f2999e-af57-41b3-a65c-653777eb07ba",
        "tags" : [
        ]
      }
    ],
    "commit" : "f45e0b428b175f2ac321b2df5498ee5a1983a6d8",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +107,111 @@        secret_id = self.build_secret_id(conn_id=conn_id)\n        # always return the latest version of the secret\n        secret_version = \"latest\"\n        name = self.client.secret_version_path(self.project_id, secret_id, secret_version)\n        try:"
  }
]