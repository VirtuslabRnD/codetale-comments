[
  {
    "id" : "f7577bae-e22b-429a-b9d3-f79b6b93adb3",
    "prId" : 9246,
    "prUrl" : "https://github.com/apache/airflow/pull/9246#pullrequestreview-492369818",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3079a67-7c37-49da-873f-9a8537fed285",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Does this allow users to create SQL injection? ",
        "createdAt" : "2020-09-13T19:50:40Z",
        "updatedAt" : "2020-10-23T13:25:37Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "1ad2f5ee-a656-486c-839e-7126898c8db5",
        "parentId" : "d3079a67-7c37-49da-873f-9a8537fed285",
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "I think it is not different to the copy command for example (i.e. any direct command which is configurable via parameters).\r\n\r\nHow about: https://www.psycopg.org/docs/sql.html ? This way it will be first validated and then executed.\r\n\r\n@turbaszek How do you prevent that in case of BigQuery for example?",
        "createdAt" : "2020-09-14T06:39:13Z",
        "updatedAt" : "2020-10-23T13:25:37Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "caf9ef02-154e-4b23-a65e-b8788bc238c3",
        "parentId" : "d3079a67-7c37-49da-873f-9a8537fed285",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "> How about: https://www.psycopg.org/docs/sql.html ? This way it will be first validated and then executed.\r\n\r\nI think this sounds good, any escape checking will help.\r\n\r\n> @turbaszek How do you prevent that in case of BigQuery for example?\r\n\r\nIn case of BQ everywhere where query is executed, it has to be provided by users. As far as I know (and I screened the code now) we do not construct queries anywhere. ",
        "createdAt" : "2020-09-14T06:49:40Z",
        "updatedAt" : "2020-10-23T13:25:37Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "b255340a-7ee6-4f21-915e-0bbf0b558f5a",
        "parentId" : "d3079a67-7c37-49da-873f-9a8537fed285",
        "authorId" : "87d74b9d-0e8f-4f3e-a7fb-42996f59988a",
        "body" : "I am open to use psycopg to address the issue. \r\n\r\nNevertheless, the only way I think someone could make SQL Injection is setting schema or table like:\r\n`table/schema; DROP ALL TABLES OR WHATEVER`\r\nIf you don't specify any table, the command will fail, so wouldn't it be easier just to make strip of semicolon for table and schema? (maybe less \"pro\" indeed, but way simpler I think)",
        "createdAt" : "2020-09-14T12:54:03Z",
        "updatedAt" : "2020-10-23T13:25:37Z",
        "lastEditedBy" : "87d74b9d-0e8f-4f3e-a7fb-42996f59988a",
        "tags" : [
        ]
      },
      {
        "id" : "132809a6-56e8-4c13-9010-584ff98595c0",
        "parentId" : "d3079a67-7c37-49da-873f-9a8537fed285",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Looking at 107-111 it seems common practise to do queries like this... there are 7 parameters used to construct the query ðŸ™„  I think we should not risk any SQL injection but I'm ok with fixing this in a follow up PR or creating an issue for that so we do not forget about it",
        "createdAt" : "2020-09-21T08:20:50Z",
        "updatedAt" : "2020-10-23T13:25:37Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c8f221e04269fe064ab6f6d9af57d5947cef4dd",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +111,115 @@\n        if self.truncate_table:\n            truncate_statement = f'TRUNCATE TABLE {self.schema}.{self.table};'\n            sql = f\"\"\"\n            BEGIN;"
  }
]