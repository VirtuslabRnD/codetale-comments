[
  {
    "id" : "0674f5bf-3422-4bd6-8662-17f825110d4b",
    "prId" : 11531,
    "prUrl" : "https://github.com/apache/airflow/pull/11531#pullrequestreview-509727103",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1376c32-60d6-4c7f-bd0d-73136875a602",
        "parentId" : null,
        "authorId" : "c9147a70-b812-4a50-8d74-018c51033f59",
        "body" : "To avoid deeply nested if-statements I rearrange the order of code.",
        "createdAt" : "2020-10-15T19:53:01Z",
        "updatedAt" : "2020-10-21T14:00:48Z",
        "lastEditedBy" : "c9147a70-b812-4a50-8d74-018c51033f59",
        "tags" : [
        ]
      }
    ],
    "commit" : "17c2dfd53c6a3c4f4390ef978b78a46ced05e343",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +112,116 @@        return ''\n\n    prev_transitions_num = 0\n    if prev_description is not None:\n        if prev_description.get('SecondaryStatusTransitions') is not None:"
  },
  {
    "id" : "7f341f45-8ae1-4824-acb6-ca8e7303a287",
    "prId" : 11531,
    "prUrl" : "https://github.com/apache/airflow/pull/11531#pullrequestreview-509729163",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "135eec35-e24c-4944-a0e5-39162c1e0e1f",
        "parentId" : null,
        "authorId" : "c9147a70-b812-4a50-8d74-018c51033f59",
        "body" : "`argmin`'s type is `Optional[T]` so we need to pass the default value.",
        "createdAt" : "2020-10-15T19:54:20Z",
        "updatedAt" : "2020-10-21T14:00:48Z",
        "lastEditedBy" : "c9147a70-b812-4a50-8d74-018c51033f59",
        "tags" : [
        ]
      }
    ],
    "commit" : "17c2dfd53c6a3c4f4390ef978b78a46ced05e343",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +304,308 @@\n        while any(events):\n            i = argmin(events, lambda x: x['timestamp'] if x else 9999999999) or 0\n            yield i, events[i]\n            try:"
  },
  {
    "id" : "8d31c758-6f76-439d-b333-c42b497f89c9",
    "prId" : 11531,
    "prUrl" : "https://github.com/apache/airflow/pull/11531#pullrequestreview-509731532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5f4bd92-be64-450a-a944-4a8f1192b94e",
        "parentId" : null,
        "authorId" : "c9147a70-b812-4a50-8d74-018c51033f59",
        "body" : "It's too hard to add type hint to `positions`.",
        "createdAt" : "2020-10-15T19:55:55Z",
        "updatedAt" : "2020-10-21T14:00:48Z",
        "lastEditedBy" : "c9147a70-b812-4a50-8d74-018c51033f59",
        "tags" : [
        ]
      }
    ],
    "commit" : "17c2dfd53c6a3c4f4390ef978b78a46ced05e343",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +273,277 @@        return self.logs_hook.get_log_events(log_group, stream_name, start_time, skip)\n\n    def multi_stream_iter(self, log_group: str, streams: list, positions=None) -> Generator:\n        \"\"\"\n        Iterate over the available events coming from a set of log streams in a single log group"
  },
  {
    "id" : "7dd18839-f767-4a65-9246-19952fb3642e",
    "prId" : 11531,
    "prUrl" : "https://github.com/apache/airflow/pull/11531#pullrequestreview-513093592",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2cd4dc02-460c-4400-92d7-104cc3940806",
        "parentId" : null,
        "authorId" : "be673e57-e4ed-45cb-9e17-e2cecf2c2b2d",
        "body" : "```suggestion\r\n    ) -> List[dict]:\r\n```\r\nif we are not specifying types for keys and values then let's keep it simple with `List[dict]`",
        "createdAt" : "2020-10-20T20:10:58Z",
        "updatedAt" : "2020-10-21T14:00:48Z",
        "lastEditedBy" : "be673e57-e4ed-45cb-9e17-e2cecf2c2b2d",
        "tags" : [
        ]
      }
    ],
    "commit" : "17c2dfd53c6a3c4f4390ef978b78a46ced05e343",
    "line" : 177,
    "diffHunk" : "@@ -1,1 +913,917 @@    def _list_request(\n        self, partial_func: Callable, result_key: str, max_results: Optional[int] = None\n    ) -> List[Dict]:\n        \"\"\"\n        All AWS boto3 list_* requests return results in batches (if the key \"NextToken\" is contained in the"
  }
]