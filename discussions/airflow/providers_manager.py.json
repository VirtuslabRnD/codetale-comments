[
  {
    "id" : "5bae2373-7f7e-4879-b4e4-d24a370c41a6",
    "prId" : 12383,
    "prUrl" : "https://github.com/apache/airflow/pull/12383#pullrequestreview-532117746",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0e6e8a4-2573-4928-894c-f5928910ec78",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "How about moving this in to `airflow/providers/manager.py` -- with the namespace packages this won't cause any problems to installing other providers.",
        "createdAt" : "2020-11-16T19:58:22Z",
        "updatedAt" : "2020-11-17T16:36:42Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "504e94d7-37f3-4f46-b270-4a49b3056d88",
        "parentId" : "c0e6e8a4-2573-4928-894c-f5928910ec78",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I think that might work but it will complicate the whole selection of when we install providers from sources and when as packages (the setup.py selection criteria will have to be much more complex, because you will always want to install airflow/providers/manager.py but not instal anything else there.\r\n\r\nAlso In this case we will not be able to detect the case \"no providers  installed\" easily. Right now I log a warning if \"airflow.providers\" cannot be imported.\r\n\r\nAlso it will complicate #11435. One of the checks we want to do is to make sure none of the code in core is importing my of the \"airflow.providers\" stuff. I plan to use that class in webserver, CLI and API which would mean that we will have to manually filter out those imports if we move it to \"airflow.providers\"\r\n\r\nI think \"providers\" package should be purely for provider implementation (see below as well), not for provider's management - similarly as we do 'plugin_manger,py\". You even commented that in my POC that it should be moved to where 'pliugin\" management is. I think it's a good place where it is.now.",
        "createdAt" : "2020-11-17T08:22:11Z",
        "updatedAt" : "2020-11-17T16:36:42Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8811904d7f8c50c91b52e5b233aeeee8b37e0a56",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@\n\nclass ProvidersManager:\n    \"\"\"Manages all provider packages.\"\"\"\n"
  },
  {
    "id" : "1a9adca9-7e23-418a-9223-8ec9258a9126",
    "prId" : 12383,
    "prUrl" : "https://github.com/apache/airflow/pull/12383#pullrequestreview-532126213",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ba8c880-f7c3-4fa8-82b1-17b38de7d757",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "So I think this is my only real issue with this approach: this only works for packages installed in/under airflow.providers, which won't always be the case with third party providers (i.e. https://github.com/great-expectations/airflow-provider-great-expectations)\r\n\r\nThat said, this approach is \"Good Enough\" for 2.0, so happy to discuss this later.",
        "createdAt" : "2020-11-16T20:12:42Z",
        "updatedAt" : "2020-11-17T16:36:42Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "fcdde74e-50fe-4df1-87ff-4a3b2378d63b",
        "parentId" : "0ba8c880-f7c3-4fa8-82b1-17b38de7d757",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Yeah. This is non-goal for 2.0 and we can certainly and easily change it in the future. \r\n\r\nHowever, I'd say we **CAN** put such constraint on the providers that they are all in \"airflow.providers\" package. There is nothing to prevent anyone from issuing their own packages providing - say - \"airflow.providers.great-expectations\" package. I think there are no limits/ownership problems in PyPI, nor ASF rules preventing from doing it (but I might be wrong here).\r\n\r\nEven if we would not like to share \"airflow.providers\" with 3rd-parties, we can propose another package if we want to separate it out as a convention. I believe everything for airflow (including 3rd-party packages) should begin with 'airflow\". For example \"airflow-3rd-party.providers\" or \"airflow-contrib.providers\" could do the job and adding several different packages to provider manager should not be a problem.",
        "createdAt" : "2020-11-17T08:33:33Z",
        "updatedAt" : "2020-11-17T16:36:42Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8811904d7f8c50c91b52e5b233aeeee8b37e0a56",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +59,63 @@            log.warning(exception_string)\n\n        for module_info in pkgutil.walk_packages(paths, prefix=\"airflow.providers.\", onerror=onerror):\n            try:\n                imported_module = importlib.import_module(module_info.name)"
  },
  {
    "id" : "c2512c35-30ee-440b-bba0-67c43034f236",
    "prId" : 12512,
    "prUrl" : "https://github.com/apache/airflow/pull/12512#pullrequestreview-535742476",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b45c65de-6f1e-4333-8c27-17a776cdcdd3",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "An idea from pytest: to \"version\" the entrypoint https://docs.pytest.org/en/stable/writing_plugins.html#making-your-plugin-installable-by-others",
        "createdAt" : "2020-11-20T17:48:50Z",
        "updatedAt" : "2020-11-27T15:50:24Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "eaff6571-59f3-448e-ae40-a395d8dd6575",
        "parentId" : "b45c65de-6f1e-4333-8c27-17a776cdcdd3",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Sure. We can add airflow2 similarly :)",
        "createdAt" : "2020-11-20T18:16:30Z",
        "updatedAt" : "2020-11-27T15:50:24Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "7c6959b3-e597-41f9-9523-05319de343da",
        "parentId" : "b45c65de-6f1e-4333-8c27-17a776cdcdd3",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "I think it's more like \"ABI\" version here, than just airflow version. (I.e. it lets us have a new form of entrypoint in the future if we want.)\r\n\r\nNot required, I was just looking for other projects that use entrypoint to see if there's any sort of convention on what to name the entrypoints. Turns out no there isn't really.",
        "createdAt" : "2020-11-20T20:03:46Z",
        "updatedAt" : "2020-11-27T15:50:24Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "9d45cf7a-785f-4ee2-b80e-1ad0dba9e47a",
        "parentId" : "b45c65de-6f1e-4333-8c27-17a776cdcdd3",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Actually we can do that when we need to introduce the first such version.",
        "createdAt" : "2020-11-20T20:07:28Z",
        "updatedAt" : "2020-11-27T15:50:24Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f3686576b4e0d4bdfbc0e791ce1e0368045e10e",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +91,95 @@        'airflow/provider.yaml.schema.json' schema.\n        \"\"\"\n        for entry_point in pkg_resources.iter_entry_points('apache_airflow_provider'):\n            package_name = entry_point.dist.project_name\n            log.debug(\"Loading %s from package %s\", entry_point, package_name)"
  },
  {
    "id" : "c06b71d2-6721-4324-9460-291eddad46e9",
    "prId" : 12512,
    "prUrl" : "https://github.com/apache/airflow/pull/12512#pullrequestreview-539949399",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "457a2026-426e-4f38-9bfe-3b3ee2063dda",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "```suggestion\r\n                # Tell `os.walk` to not recurse any further.\r\n                subdirs[:] = []\r\n```",
        "createdAt" : "2020-11-27T12:37:58Z",
        "updatedAt" : "2020-11-27T15:50:24Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f3686576b4e0d4bdfbc0e791ce1e0368045e10e",
    "line" : 166,
    "diffHunk" : "@@ -1,1 +152,156 @@                package_name = \"apache-airflow-providers\" + folder[len(root_path) :].replace(os.sep, \"-\")\n                self._add_provider_info_from_local_source_file(os.path.join(folder, filename), package_name)\n                subdirs[:] = []\n\n    def _add_provider_info_from_local_source_file(self, path, package_name) -> None:"
  }
]