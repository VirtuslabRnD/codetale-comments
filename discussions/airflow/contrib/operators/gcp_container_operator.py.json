[
  {
    "id" : "f554f204-991f-435b-a96a-4b487138d0e4",
    "prId" : 3532,
    "prUrl" : "https://github.com/apache/airflow/pull/3532#pullrequestreview-134896934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00e55bfa-907f-49ec-abf6-54d8b2e05ca9",
        "parentId" : null,
        "authorId" : "1aceaa64-1d3b-44c8-b7b9-3404a109eb8d",
        "body" : "Is it possible to pass in a connection id so one can launch a k8s pod in any GKE cluster? ",
        "createdAt" : "2018-07-04T15:47:48Z",
        "updatedAt" : "2018-07-31T22:00:16Z",
        "lastEditedBy" : "1aceaa64-1d3b-44c8-b7b9-3404a109eb8d",
        "tags" : [
        ]
      },
      {
        "id" : "cf0fadef-1929-4ae8-a22d-fb2159421ac8",
        "parentId" : "00e55bfa-907f-49ec-abf6-54d8b2e05ca9",
        "authorId" : "0889fd75-850c-4de0-a420-4a290e7a02ee",
        "body" : "I believe what you want can be accomplished by providing the project_id, location, and cluster_name of the cluster that you want to launch the pod in.\r\n\r\nI checked and since the base KubernetesPodOperator doesn't use a hook, they have no need for a conn_id, therefore I don't know of a way to specify it.",
        "createdAt" : "2018-07-04T16:35:08Z",
        "updatedAt" : "2018-07-31T22:00:16Z",
        "lastEditedBy" : "0889fd75-850c-4de0-a420-4a290e7a02ee",
        "tags" : [
        ]
      },
      {
        "id" : "6ce297e9-3072-4d44-80aa-c6e38b76e2b2",
        "parentId" : "00e55bfa-907f-49ec-abf6-54d8b2e05ca9",
        "authorId" : "1aceaa64-1d3b-44c8-b7b9-3404a109eb8d",
        "body" : "I meant GCP connection, which stores service account key information. The default credential may not work for a (project, zone, cluster-name) tuple, think of starting a k8s pod in some GKE cluster in a different project. ",
        "createdAt" : "2018-07-06T06:14:01Z",
        "updatedAt" : "2018-07-31T22:00:16Z",
        "lastEditedBy" : "1aceaa64-1d3b-44c8-b7b9-3404a109eb8d",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed35ebdd99e335a314dff1f3cd55d7069407c0e4",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +190,194 @@                 project_id,\n                 location,\n                 cluster_name,\n                 gcp_conn_id='google_cloud_default',\n                 *args,"
  },
  {
    "id" : "8bf46df9-0132-4ed1-b86b-e55322e09010",
    "prId" : 3532,
    "prUrl" : "https://github.com/apache/airflow/pull/3532#pullrequestreview-140442831",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38af59f5-a026-47ef-8073-e6bca3ae70f7",
        "parentId" : null,
        "authorId" : "1aceaa64-1d3b-44c8-b7b9-3404a109eb8d",
        "body" : "Please update operator docstring to reflect latest changes. ",
        "createdAt" : "2018-07-25T18:27:31Z",
        "updatedAt" : "2018-07-31T22:00:16Z",
        "lastEditedBy" : "1aceaa64-1d3b-44c8-b7b9-3404a109eb8d",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed35ebdd99e335a314dff1f3cd55d7069407c0e4",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +227,231 @@        :param cluster_name: The name of the Google Kubernetes Engine cluster the pod\n            should be spawned in\n        :type cluster_name: str\n        :param gcp_conn_id: The google cloud connection id to use. This allows for\n            users to specify a service account."
  },
  {
    "id" : "5aaf7523-70e7-4198-ae8e-0824fca36997",
    "prId" : 3532,
    "prUrl" : "https://github.com/apache/airflow/pull/3532#pullrequestreview-140924571",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6678d8c1-7b41-4690-852c-37ec14126486",
        "parentId" : null,
        "authorId" : "b46efccd-ab7b-47f3-9d72-8ebd358919f8",
        "body" : "The gcloud SDK is licensed Apache 2 by Google, and since you're a Googler, you could potentially extract the code at\r\n\r\nhttps://github.com/google-cloud-sdk/google-cloud-sdk/blob/c7747c77f6d8afe7c1d02896d46e2480967152c8/lib/googlecloudsdk/api_lib/container/util.py#L210-L279\r\n\r\nfor persisting it.\r\n\r\nI agree it would be better to share code rather than copy-pasting it here. So I'm okay with the current solution.",
        "createdAt" : "2018-07-26T21:58:07Z",
        "updatedAt" : "2018-07-31T22:00:16Z",
        "lastEditedBy" : "b46efccd-ab7b-47f3-9d72-8ebd358919f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed35ebdd99e335a314dff1f3cd55d7069407c0e4",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +260,264 @@            # Attempt to get/update credentials\n            # We call gcloud directly instead of using google-cloud-python api\n            # because there is no way to write kubernetes config to a file, which is\n            # required by KubernetesPodOperator.\n            # The gcloud command looks at the env variable `KUBECONFIG` for where to save"
  },
  {
    "id" : "a29e6c47-1904-453c-abf3-21d7396d9e84",
    "prId" : 3532,
    "prUrl" : "https://github.com/apache/airflow/pull/3532#pullrequestreview-145768882",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67df95d0-40dd-46c8-8a4b-aeb7caed37b3",
        "parentId" : null,
        "authorId" : "8c7ab425-7894-4f97-b3ae-7fe362e7b212",
        "body" : "delete=False opens an avenue for leaks.",
        "createdAt" : "2018-08-13T18:02:33Z",
        "updatedAt" : "2018-08-13T18:02:33Z",
        "lastEditedBy" : "8c7ab425-7894-4f97-b3ae-7fe362e7b212",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed35ebdd99e335a314dff1f3cd55d7069407c0e4",
    "line" : 142,
    "diffHunk" : "@@ -1,1 +300,304 @@        else:\n            # Write service account JSON to secure file for gcloud to reference\n            service_key = tempfile.NamedTemporaryFile(delete=False)\n            service_key.write(keyfile_json_str)\n            os.environ[G_APP_CRED] = service_key.name"
  }
]