[
  {
    "id" : "60b00e38-8efc-44d2-977c-e9c89512e8e2",
    "prId" : 981,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ccfd61c-1c18-4050-905c-2297cfdfed13",
        "parentId" : null,
        "authorId" : "c5902037-3fba-4513-8804-ed0681136579",
        "body" : "looks like this function sets, but does not return, the job id.\n",
        "createdAt" : "2016-02-10T18:42:39Z",
        "updatedAt" : "2016-02-10T18:42:39Z",
        "lastEditedBy" : "c5902037-3fba-4513-8804-ed0681136579",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8a72893a314602a296308312aa658f3afce2d0b",
    "line" : 295,
    "diffHunk" : "@@ -1,1 +302,306 @@    def execute(self, operation, parameters=None):\n        \"\"\"\n        Executes a BigQuery query, and returns the job ID.\n\n        :param operation: The query to execute."
  },
  {
    "id" : "98fcfaf2-ddba-4986-a171-2a398fd371b9",
    "prId" : 3714,
    "prUrl" : "https://github.com/apache/airflow/pull/3714#pullrequestreview-144343949",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f2b1ffe-871f-4cfa-a7ed-5a32e6277eab",
        "parentId" : null,
        "authorId" : "741901ab-b9c9-41b9-bb16-5e1c56490c63",
        "body" : "@kaxil  seems it is missed",
        "createdAt" : "2018-08-08T02:18:55Z",
        "updatedAt" : "2018-08-08T02:20:47Z",
        "lastEditedBy" : "741901ab-b9c9-41b9-bb16-5e1c56490c63",
        "tags" : [
        ]
      },
      {
        "id" : "ff0d073f-7732-4a31-b8b9-ce309236d16e",
        "parentId" : "0f2b1ffe-871f-4cfa-a7ed-5a32e6277eab",
        "authorId" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "body" : "What do you mean? Setting the `{}` in the arguments is bad practice by the way Python creates these objects.",
        "createdAt" : "2018-08-08T07:20:01Z",
        "updatedAt" : "2018-08-08T07:40:16Z",
        "lastEditedBy" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "tags" : [
        ]
      },
      {
        "id" : "4fd842fe-6fb9-4de3-a044-a1a5b0922bd9",
        "parentId" : "0f2b1ffe-871f-4cfa-a7ed-5a32e6277eab",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "@Fokko No no, it is a bad practise to use `{}` or `dict()` as a default argument. Reference: https://docs.python-guide.org/writing/gotchas/#mutable-default-arguments\r\n\r\nThe above change is because we had the below code:\r\n![image](https://user-images.githubusercontent.com/8811558/43825996-141df72c-9aee-11e8-8b2f-c55f383f5ae9.png)\r\n\r\nwhich I changed to the following:\r\n![image](https://user-images.githubusercontent.com/8811558/43826016-1f5c03a4-9aee-11e8-8c2c-06e2f715ae33.png)\r\n",
        "createdAt" : "2018-08-08T08:33:37Z",
        "updatedAt" : "2018-08-08T08:33:38Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "5ca7d90c-6ff6-4d56-9d0f-2449c3d96973",
        "parentId" : "0f2b1ffe-871f-4cfa-a7ed-5a32e6277eab",
        "authorId" : "741901ab-b9c9-41b9-bb16-5e1c56490c63",
        "body" : "@kaxil  but why dict() instead of {}?  just want to understand for my self\r\n as I know {} more efficient https://stackoverflow.com/questions/664118/whats-the-difference-between-dict-and. In official docs cannot see any recommendations to use dict() instead {} https://docs.python.org/3.6/library/stdtypes.html#dict \r\nand in standard library used {} not dict() \r\n",
        "createdAt" : "2018-08-08T09:27:07Z",
        "updatedAt" : "2018-08-08T09:27:07Z",
        "lastEditedBy" : "741901ab-b9c9-41b9-bb16-5e1c56490c63",
        "tags" : [
        ]
      },
      {
        "id" : "9e48e019-181d-45a6-af12-428b762759ba",
        "parentId" : "0f2b1ffe-871f-4cfa-a7ed-5a32e6277eab",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "`{}` would probably be better in hindsight, but there's not much in it. On my laptop:\r\n\r\n```\r\nIn [5]: %timeit {}\r\n47.2 ns ± 2.3 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)\r\n\r\nIn [6]: %timeit dict()\r\n168 ns ± 1.77 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)\r\n```\r\n\r\nso yes dict() is 3 times as \"slow\" as `{}`, but neither is particularly slow.",
        "createdAt" : "2018-08-08T09:30:41Z",
        "updatedAt" : "2018-08-08T09:30:41Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "409e16e6-d498-4318-ab33-e03a8a1ef571",
        "parentId" : "0f2b1ffe-871f-4cfa-a7ed-5a32e6277eab",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "@xnuinside Hi, there is no specific reason for me to use `{}` compared to `dict()`. The point for this change as I mentioned earlier was to remove an empty dictionary from default arguments. \r\n\r\nAnd as Ash pointed out `{}` dict literal is faster that dict constructor `dict()` but there is not huge difference as the dict builds up. Check out the below links for more detailed read:\r\n- https://doughellmann.com/blog/2012/11/12/the-performance-impact-of-using-dict-instead-of-in-cpython-2-7-2/\r\n- https://stackoverflow.com/questions/6610606/is-there-a-difference-between-using-a-dict-literal-and-a-dict-constructor",
        "createdAt" : "2018-08-08T09:43:21Z",
        "updatedAt" : "2018-08-08T09:43:55Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "65440229-4a54-4440-9313-2151589b0a29",
        "parentId" : "0f2b1ffe-871f-4cfa-a7ed-5a32e6277eab",
        "authorId" : "741901ab-b9c9-41b9-bb16-5e1c56490c63",
        "body" : "@kaxil , @ashb , thx!\r\n",
        "createdAt" : "2018-08-08T09:47:15Z",
        "updatedAt" : "2018-08-08T09:47:15Z",
        "lastEditedBy" : "741901ab-b9c9-41b9-bb16-5e1c56490c63",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3b5ea1a3f14df9fa1d62bc8fec7706605ff5096",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +240,244 @@        \"\"\"\n        if time_partitioning is None:\n            time_partitioning = dict()\n        project_id = project_id if project_id is not None else self.project_id\n"
  },
  {
    "id" : "c3f7756e-7721-4e3b-a1c2-7393eb91e841",
    "prId" : 3733,
    "prUrl" : "https://github.com/apache/airflow/pull/3733#pullrequestreview-150828675",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35704988-ca4f-4271-ae73-54a304ce4825",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "You can pass the default here, `self. priority` if you don't change the default above",
        "createdAt" : "2018-08-29T23:45:38Z",
        "updatedAt" : "2018-09-03T19:47:13Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "f9cf1ed0-c941-4ef2-b762-0dcbc02128c0",
        "parentId" : "35704988-ca4f-4271-ae73-54a304ce4825",
        "authorId" : "741901ab-b9c9-41b9-bb16-5e1c56490c63",
        "body" : "self.priority exist only in BigQueryOperator, BigQueryBaseCursor does not have it ",
        "createdAt" : "2018-08-30T03:27:20Z",
        "updatedAt" : "2018-09-03T19:47:13Z",
        "lastEditedBy" : "741901ab-b9c9-41b9-bb16-5e1c56490c63",
        "tags" : [
        ]
      },
      {
        "id" : "4495cde7-9433-44d2-b92c-38e82dd4823a",
        "parentId" : "35704988-ca4f-4271-ae73-54a304ce4825",
        "authorId" : "741901ab-b9c9-41b9-bb16-5e1c56490c63",
        "body" : "and thanks for review, and sorry for intends, I changed settings in IDE for project to avoid such cases in the next time.",
        "createdAt" : "2018-08-30T03:46:46Z",
        "updatedAt" : "2018-09-03T19:47:13Z",
        "lastEditedBy" : "741901ab-b9c9-41b9-bb16-5e1c56490c63",
        "tags" : [
        ]
      }
    ],
    "commit" : "642bd9dfe78cff0e10cafeeb6daac6e61e74d5e9",
    "line" : 198,
    "diffHunk" : "@@ -1,1 +634,638 @@        query_param_list = [\n            (sql, 'query', None, str),\n            (priority, 'priority', 'INTERACTIVE', str),\n            (use_legacy_sql, 'useLegacySql', self.use_legacy_sql, bool),\n            (query_params, 'queryParameters', None, dict),"
  },
  {
    "id" : "b5691321-6ca7-45f5-b960-2adbc16b332d",
    "prId" : 3733,
    "prUrl" : "https://github.com/apache/airflow/pull/3733#pullrequestreview-151629126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f99ac62b-441e-4deb-a3a6-78075aee93a7",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "NIT: Can you change the wording to say (something similar to) that you only need to use this if you want to pass parameters that are not already in this operators. ",
        "createdAt" : "2018-09-02T14:07:22Z",
        "updatedAt" : "2018-09-03T19:47:13Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "6dd97f8f-4cec-4417-b3dd-82773ea3b08f",
        "parentId" : "f99ac62b-441e-4deb-a3a6-78075aee93a7",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Apart from this, it LGTM. \r\n\r\n@tswast @fenglu-g  Any final comments?",
        "createdAt" : "2018-09-02T14:08:06Z",
        "updatedAt" : "2018-09-03T19:47:13Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "3677b56e-58f8-4690-9309-2f5565aac9d1",
        "parentId" : "f99ac62b-441e-4deb-a3a6-78075aee93a7",
        "authorId" : "741901ab-b9c9-41b9-bb16-5e1c56490c63",
        "body" : "@kaxil check it, pls",
        "createdAt" : "2018-09-02T18:25:52Z",
        "updatedAt" : "2018-09-03T19:47:13Z",
        "lastEditedBy" : "741901ab-b9c9-41b9-bb16-5e1c56490c63",
        "tags" : [
        ]
      }
    ],
    "commit" : "642bd9dfe78cff0e10cafeeb6daac6e61e74d5e9",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +529,533 @@            If `None`, defaults to `self.use_legacy_sql`.\n        :type use_legacy_sql: boolean\n        :param api_resource_configs: a dictionary that contain params\n            'configuration' applied for Google BigQuery Jobs API:\n            https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs"
  },
  {
    "id" : "c176ce62-54e6-42ae-bc3c-f6b99b9b2e4e",
    "prId" : 3838,
    "prUrl" : "https://github.com/apache/airflow/pull/3838#pullrequestreview-151954227",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f915d881-c475-447e-8951-813c35ac939e",
        "parentId" : null,
        "authorId" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "body" : "Maybe separate this logic to a separate function? Since it is defined twice.",
        "createdAt" : "2018-09-03T18:39:34Z",
        "updatedAt" : "2018-09-07T06:48:24Z",
        "lastEditedBy" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "tags" : [
        ]
      },
      {
        "id" : "a3f24ac7-e26c-498d-b6e6-8da02172ff1b",
        "parentId" : "f915d881-c475-447e-8951-813c35ac939e",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Agree with @Fokko ",
        "createdAt" : "2018-09-03T19:15:10Z",
        "updatedAt" : "2018-09-07T06:48:24Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "f990b657-3986-4c46-b657-b531639b632b",
        "parentId" : "f915d881-c475-447e-8951-813c35ac939e",
        "authorId" : "5588c2b8-6b15-4540-b393-5b3c6321bd90",
        "body" : "After rebasing this morning, the changes made by AIRFLOW-491 (#3733) mean the logic for `run_query` and `run_load` have diverged somewhat, so factoring it out probably now makes less sense.",
        "createdAt" : "2018-09-04T08:13:33Z",
        "updatedAt" : "2018-09-07T06:48:24Z",
        "lastEditedBy" : "5588c2b8-6b15-4540-b393-5b3c6321bd90",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1437e470bcc99b0e010211c78096b8a3a9ce780",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +998,1002 @@            })\n\n        if cluster_fields:\n            configuration['load'].update({'clustering': {'fields': cluster_fields}})\n"
  }
]