[
  {
    "id" : "f33be39b-2525-44d1-a930-ed9f9176516c",
    "prId" : 6484,
    "prUrl" : "https://github.com/apache/airflow/pull/6484#pullrequestreview-312005919",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfbe1075-1a1c-43d7-bc0a-4ebdb1f243dc",
        "parentId" : null,
        "authorId" : "adf8e9f1-8893-45f6-a226-8ae39e0dcc10",
        "body" : "Is it problematic if `payload` and `data` contain `None` values? If not you could perhaps build them by using dict literals and assigning values like `{ \"component\": component or None }`.\r\n\r\n(edited)",
        "createdAt" : "2019-11-05T18:25:22Z",
        "updatedAt" : "2019-11-11T20:09:51Z",
        "lastEditedBy" : "adf8e9f1-8893-45f6-a226-8ae39e0dcc10",
        "tags" : [
        ]
      },
      {
        "id" : "bfe7706f-a6b6-4716-bbc3-8601ffae3f29",
        "parentId" : "bfbe1075-1a1c-43d7-bc0a-4ebdb1f243dc",
        "authorId" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "body" : "It will cause issue. Even if it doesn't, I would recommend against `foo or None` pattern if possible. It doesn't support proper `None` check and has edge-cases where values like `0` or `''` won't work. I have fixed a bug in k8s executor that's caused by exactly this issue :)",
        "createdAt" : "2019-11-05T19:43:18Z",
        "updatedAt" : "2019-11-11T20:09:51Z",
        "lastEditedBy" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "tags" : [
        ]
      },
      {
        "id" : "1eb164f1-aa4c-4d74-8b3c-f44531082483",
        "parentId" : "bfbe1075-1a1c-43d7-bc0a-4ebdb1f243dc",
        "authorId" : "adf8e9f1-8893-45f6-a226-8ae39e0dcc10",
        "body" : "Interesting. I did not know that thanks for letting me know. It's quite a shame since it's a very readable pattern in my opinion. ðŸ˜… ",
        "createdAt" : "2019-11-05T20:01:30Z",
        "updatedAt" : "2019-11-11T20:09:51Z",
        "lastEditedBy" : "adf8e9f1-8893-45f6-a226-8ae39e0dcc10",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad30d3b4616bc99b9dccaf1bec35cc5ad5f7565d",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +109,113 @@        }\n        if custom_details is not None:\n            payload[\"custom_details\"] = custom_details\n        if component:\n            payload[\"component\"] = component"
  },
  {
    "id" : "4c916537-b97e-4c14-9038-9589c7084a16",
    "prId" : 6484,
    "prUrl" : "https://github.com/apache/airflow/pull/6484#pullrequestreview-315130371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50420aa2-17b4-49ad-80dc-d3327685ccae",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "This will this raise error if `routing_key` is not specified.\r\n\r\nHow about `conn.extra_dejson.get(\"routing_key\", None)` ?",
        "createdAt" : "2019-11-11T14:09:28Z",
        "updatedAt" : "2019-11-11T20:09:51Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "886b005a-616d-47c0-868d-d22a3884eaf4",
        "parentId" : "50420aa2-17b4-49ad-80dc-d3327685ccae",
        "authorId" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "body" : "`extra_dejson` returns a dictionary, so `get(\"foo\")` is the same as `get(\"goo\", None)`. I have added a test case to make sure missing routing_key extra config won't cause any crash.",
        "createdAt" : "2019-11-11T20:11:46Z",
        "updatedAt" : "2019-11-11T20:11:47Z",
        "lastEditedBy" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad30d3b4616bc99b9dccaf1bec35cc5ad5f7565d",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +43,47 @@            self.token = conn.get_password()\n\n            routing_key = conn.extra_dejson.get(\"routing_key\")\n            if routing_key:\n                self.routing_key = routing_key"
  },
  {
    "id" : "097b8f17-b951-45f8-b272-fbf2907e2be6",
    "prId" : 6484,
    "prUrl" : "https://github.com/apache/airflow/pull/6484#pullrequestreview-315131358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c8ce944-c55b-4fdf-b777-94026f85d010",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "We can simplify the logic:\r\n\r\n```python\r\n        if token is not None:  # token takes higher priority\r\n            self.token = token\r\n        else:\r\n            raise AirflowException(\r\n                'Cannot get token: No valid api token nor pagerduty_conn_id supplied.')\r\n```",
        "createdAt" : "2019-11-11T14:10:28Z",
        "updatedAt" : "2019-11-11T20:09:51Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "45406ea8-76c7-41f0-a103-0c63bc966b41",
        "parentId" : "4c8ce944-c55b-4fdf-b777-94026f85d010",
        "authorId" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "body" : "Making this change will alter the actual logic. Because it will throw an error when token is `None` when there is a valid password set in connection. We want token to override password from connection if needed, but it's not required.\r\n\r\nThis case has been covered in test cases as well.",
        "createdAt" : "2019-11-11T20:13:55Z",
        "updatedAt" : "2019-11-11T20:14:04Z",
        "lastEditedBy" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad30d3b4616bc99b9dccaf1bec35cc5ad5f7565d",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +53,57 @@            raise AirflowException(\n                'Cannot get token: No valid api token nor pagerduty_conn_id supplied.')\n\n    # pylint: disable=too-many-arguments\n    def create_event("
  },
  {
    "id" : "4687eb7b-cc6c-4701-a30d-d2f76d2b9b8f",
    "prId" : 6484,
    "prUrl" : "https://github.com/apache/airflow/pull/6484#pullrequestreview-315176340",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6978bd0-d877-4e7c-afc6-9dc56f0ea3e2",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "```suggestion\r\n            self.token = conn.password\r\n```\r\n\r\nshould work too",
        "createdAt" : "2019-11-11T20:48:31Z",
        "updatedAt" : "2019-11-11T20:48:31Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "58e71d2d-eb89-4577-bdb3-e0ca216c1de4",
        "parentId" : "d6978bd0-d877-4e7c-afc6-9dc56f0ea3e2",
        "authorId" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "body" : "I started with `password`, but noticed it's just a wrapper around get_password and set_password, so I figured it's more efficient(less func call) and readable(less magic) to use `get_password` here instead since we only need to read the content.\r\n\r\nLet me know if you still think the `password` wrapper is more readable though, i am more than happy to change it :)",
        "createdAt" : "2019-11-11T21:35:53Z",
        "updatedAt" : "2019-11-11T21:35:53Z",
        "lastEditedBy" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "tags" : [
        ]
      },
      {
        "id" : "e58ab60a-5903-4995-a3b6-bf78aab6300b",
        "parentId" : "d6978bd0-d877-4e7c-afc6-9dc56f0ea3e2",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "No, that's fine :)",
        "createdAt" : "2019-11-11T21:48:14Z",
        "updatedAt" : "2019-11-11T21:48:14Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad30d3b4616bc99b9dccaf1bec35cc5ad5f7565d",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@        if pagerduty_conn_id is not None:\n            conn = self.get_connection(pagerduty_conn_id)\n            self.token = conn.get_password()\n\n            routing_key = conn.extra_dejson.get(\"routing_key\")"
  }
]