[
  {
    "id" : "d977842c-9d8b-4caf-84dc-8a7eb361518f",
    "prId" : 1453,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b535b208-623a-4456-a1b5-d4444a155276",
        "parentId" : null,
        "authorId" : "366b1763-372e-4924-9c92-2ea8968443bd",
        "body" : "Does scope need to be supplied when using default credentials? I haven't tried this.\n",
        "createdAt" : "2016-05-02T15:54:16Z",
        "updatedAt" : "2016-05-05T06:57:56Z",
        "lastEditedBy" : "366b1763-372e-4924-9c92-2ea8968443bd",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7f0245e361fa4df978915c68ccaa78a2146164b",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +37,41 @@    type. Two ways of authentication are supported:\n\n    Default credentials: Only specify 'Project Id'. Then you need to have executed\n    ``gcloud auth`` on the Airflow worker machine.\n"
  },
  {
    "id" : "3afa8021-fde7-4788-bc5f-1e382c49aeea",
    "prId" : 1453,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a878ec1a-f6e5-49e7-8995-fb64b84182bf",
        "parentId" : null,
        "authorId" : "366b1763-372e-4924-9c92-2ea8968443bd",
        "body" : "Is this used anywhere?\n",
        "createdAt" : "2016-05-02T15:56:49Z",
        "updatedAt" : "2016-05-05T06:57:56Z",
        "lastEditedBy" : "366b1763-372e-4924-9c92-2ea8968443bd",
        "tags" : [
        ]
      },
      {
        "id" : "7c3b0229-0968-41d0-91fb-19ff130181a7",
        "parentId" : "a878ec1a-f6e5-49e7-8995-fb64b84182bf",
        "authorId" : "d6961c79-e03d-4d9d-976d-276caf57dd8b",
        "body" : "yes, I need it in my DataFlow/DataProc hook\n",
        "createdAt" : "2016-05-03T06:36:44Z",
        "updatedAt" : "2016-05-05T06:57:56Z",
        "lastEditedBy" : "d6961c79-e03d-4d9d-976d-276caf57dd8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7f0245e361fa4df978915c68ccaa78a2146164b",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +105,109 @@\n    @property\n    def project_id(self):\n        return self._get_field('project')"
  },
  {
    "id" : "7c811850-b956-4c2e-b7bb-675834170681",
    "prId" : 4500,
    "prUrl" : "https://github.com/apache/airflow/pull/4500#pullrequestreview-191951132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a876820c-945d-482f-a99e-48478f671e73",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Need an empty line above this",
        "createdAt" : "2019-01-12T20:00:09Z",
        "updatedAt" : "2019-01-14T21:32:21Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "e0846dd3-ee66-41fa-9551-b0ea5b94ef65",
        "parentId" : "a876820c-945d-482f-a99e-48478f671e73",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "OK",
        "createdAt" : "2019-01-12T20:36:07Z",
        "updatedAt" : "2019-01-14T21:32:21Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "697819a52a0c88e207eca68b0a023f8e6bea9a1f",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +189,193 @@        the service account that is authorized.\n\n        :param project_id: project id to\n        :type project_id: str\n        :return: the project_id specified or default project id if project_id is None"
  },
  {
    "id" : "4b9b15bc-fb7a-4ba1-aa4a-57fe7a4d1894",
    "prId" : 4500,
    "prUrl" : "https://github.com/apache/airflow/pull/4500#pullrequestreview-191951143",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6ac1214-211c-4bc0-bceb-4be655fc021d",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Need an empty line above this",
        "createdAt" : "2019-01-12T20:01:21Z",
        "updatedAt" : "2019-01-14T21:32:21Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "f3208f8b-4c08-4ede-b8c8-3e840cd37ed5",
        "parentId" : "a6ac1214-211c-4bc0-bceb-4be655fc021d",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "OK",
        "createdAt" : "2019-01-12T20:36:35Z",
        "updatedAt" : "2019-01-14T21:32:21Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "697819a52a0c88e207eca68b0a023f8e6bea9a1f",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +162,166 @@        either via project_id kwarg or via first parameter in positional args.\n\n        :param func: function to wrap\n        :return: result of the function call\n        \"\"\""
  },
  {
    "id" : "dc158787-4ad2-43b8-86f4-44c654fe0023",
    "prId" : 5634,
    "prUrl" : "https://github.com/apache/airflow/pull/5634#pullrequestreview-267847525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "212fd402-e5c1-45a4-b09e-1ea0e374d9f4",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Should we add property maybe and use it instead of protected field? That would be much cleaner. ",
        "createdAt" : "2019-07-29T14:52:20Z",
        "updatedAt" : "2019-07-29T15:06:08Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "4431da07-acab-4627-a2ee-c10a4d83aa5f",
        "parentId" : "212fd402-e5c1-45a4-b09e-1ea0e374d9f4",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I tried to limit unreleated changes in code.  Your proposition require a introduce a new mechanism that require documentation, so I will add this as a seperate PR.\r\n\r\nThis mechanism requires a deeper thought. I hope that I will improve it when I deal with the AIRFLOW-4771 ticket.\r\nhttps://issues.apache.org/jira/browse/AIRFLOW-4771",
        "createdAt" : "2019-07-29T15:01:49Z",
        "updatedAt" : "2019-07-29T15:06:08Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "9b5b02d6-fb77-4b58-a58d-4119062cead0",
        "parentId" : "212fd402-e5c1-45a4-b09e-1ea0e374d9f4",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Go ahead 👍 ",
        "createdAt" : "2019-07-29T15:05:51Z",
        "updatedAt" : "2019-07-29T15:06:08Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f28d7533b2e3853cbdcf282d462733d8d8372685",
    "line" : 191,
    "diffHunk" : "@@ -1,1 +246,250 @@            def wrapper(self: GoogleCloudBaseHook, *args, **kwargs) -> RT:\n                with tempfile.NamedTemporaryFile(mode='w+t') as conf_file:\n                    key_path = self._get_field('key_path', None)  # type: Optional[str]  # noqa: E501  #  pylint: disable=protected-access\n                    keyfile_dict = self._get_field('keyfile_dict', None)  # type: Optional[Dict]  # noqa: E501  # pylint: disable=protected-access\n                    if key_path:"
  }
]