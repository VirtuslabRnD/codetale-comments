[
  {
    "id" : "e4d554c9-ddc2-4988-bd8c-43e57b6f5508",
    "prId" : 4547,
    "prUrl" : "https://github.com/apache/airflow/pull/4547#pullrequestreview-193626758",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6f12aec-11a7-4adb-b6d2-60e6988ea830",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "Fixed a typo.",
        "createdAt" : "2019-01-17T13:38:41Z",
        "updatedAt" : "2019-01-17T13:38:50Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      }
    ],
    "commit" : "b082b762b974729a97949a0e5490972633c8adaf",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +30,34 @@class ExternalTaskSensor(BaseSensorOperator):\n    \"\"\"\n    Waits for a different DAG or a task in a different DAG to complete for a\n    specific execution_date\n"
  },
  {
    "id" : "86acb0cd-8cf6-4207-b731-1817268057b0",
    "prId" : 4547,
    "prUrl" : "https://github.com/apache/airflow/pull/4547#pullrequestreview-193627741",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc72215f-e076-4b56-bb85-1d06f9150fc4",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "1. Purposely leave `include_examples` for `DagBag` to be default value `True`, since the `external_dag_id` may be example DAG.\r\n\r\n2. The exact file path is given to `DagBag`, so that it will only scan a single DAG file. This helps ensure no heavy overhead.\r\n",
        "createdAt" : "2019-01-17T13:40:41Z",
        "updatedAt" : "2019-01-17T13:44:22Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      }
    ],
    "commit" : "b082b762b974729a97949a0e5490972633c8adaf",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +132,136 @@\n            if self.external_task_id:\n                refreshed_dag_info = DagBag(dag_to_wait.fileloc).get_dag(self.external_dag_id)\n                if not refreshed_dag_info.has_task(self.external_task_id):\n                    raise AirflowException('The external task'"
  },
  {
    "id" : "a713a9f3-52c2-47bd-98ae-40ded728d9db",
    "prId" : 4547,
    "prUrl" : "https://github.com/apache/airflow/pull/4547#pullrequestreview-193628293",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27976cea-5da9-4cce-858f-9645e039fd4b",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "If `ExternalTaskSensor` is waiting for a DAG, we will check database `dag` table + file system.\r\n\r\nIf it's waiting for a task, ADDITIONAL check will be done to check if that task exists in the latest DAG file. ",
        "createdAt" : "2019-01-17T13:41:52Z",
        "updatedAt" : "2019-01-17T13:41:52Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      }
    ],
    "commit" : "b082b762b974729a97949a0e5490972633c8adaf",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +131,135 @@                                           '{} was deleted.'.format(self.external_dag_id))\n\n            if self.external_task_id:\n                refreshed_dag_info = DagBag(dag_to_wait.fileloc).get_dag(self.external_dag_id)\n                if not refreshed_dag_info.has_task(self.external_task_id):"
  },
  {
    "id" : "2644e406-1be1-4434-bd73-bc9f4b372fed",
    "prId" : 6633,
    "prUrl" : "https://github.com/apache/airflow/pull/6633#pullrequestreview-333343009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64ce4d0e-44b1-40b8-8561-6081790cc731",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "```suggestion\r\n        :param external_dag_id: The dag_id that contains the task you want to wait for\r\n        :type external_dag_id: str\r\n        :param external_task_id: The task_id that contains the task you want to wait for.\r\n        :type external_task_id: str\r\n        :param execution_date: The execution_date of the task that you want to wait for.\r\n        :type execution_date: str or datetime.datetime\r\n        :param recursion_depth: The maximum level of transitive dependencies allowed. Default is 10.\r\n            This is mostly used for preventing cyclic dependencies. It is fine to increase\r\n            this number if necessary. However, too many levels of transitive dependencies will make\r\n            it slower to clear tasks in the web UI.\r\n        \"\"\"\r\n```",
        "createdAt" : "2019-12-17T00:51:52Z",
        "updatedAt" : "2020-01-08T06:41:17Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "133d47e0-3fca-417d-9475-82d7796fa581",
        "parentId" : "64ce4d0e-44b1-40b8-8561-6081790cc731",
        "authorId" : "f85ef659-e88b-40c6-856b-c86350e0d001",
        "body" : "Thanks for pointing out. I made this change as suggested. ",
        "createdAt" : "2019-12-17T15:06:39Z",
        "updatedAt" : "2020-01-08T06:41:17Z",
        "lastEditedBy" : "f85ef659-e88b-40c6-856b-c86350e0d001",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e0602555e12fd8a8abf041a7c0d970ed9d7b7f0",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +184,188 @@        this number if necessary. However, too many levels of transitive dependencies will make\n        it slower to clear tasks in the web UI.\n    \"\"\"\n    template_fields = ['external_dag_id', 'external_task_id', 'execution_date']\n    ui_color = '#19647e'"
  },
  {
    "id" : "6f7c4206-f5c9-4446-bfda-6e09bec34e97",
    "prId" : 8509,
    "prUrl" : "https://github.com/apache/airflow/pull/8509#pullrequestreview-398096342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c093f22-d3e6-4ef5-9bbb-84cc28ff0047",
        "parentId" : null,
        "authorId" : "53d79fd3-2400-46ca-a4f3-25c007651665",
        "body" : "Since the comment wasn't here before though, and it passed the tests I would guess you don't need it. Only on line 204.",
        "createdAt" : "2020-04-22T09:31:32Z",
        "updatedAt" : "2020-05-07T10:56:16Z",
        "lastEditedBy" : "53d79fd3-2400-46ca-a4f3-25c007651665",
        "tags" : [
        ]
      },
      {
        "id" : "2928a4b3-1dad-4768-b906-8d181c1c5c38",
        "parentId" : "6c093f22-d3e6-4ef5-9bbb-84cc28ff0047",
        "authorId" : "95e15322-ff8b-4340-aad5-efbc205335ab",
        "body" : "Thanks jward-bw",
        "createdAt" : "2020-04-22T11:29:58Z",
        "updatedAt" : "2020-05-07T10:56:16Z",
        "lastEditedBy" : "95e15322-ff8b-4340-aad5-efbc205335ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "91b7e728e764f8147159ca62c5af0f99d57cbba5",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +193,197 @@                TI.dag_id == self.external_dag_id,\n                TI.task_id == self.external_task_id,\n                TI.state.in_(states),  # pylint: disable=no-member\n                TI.execution_date.in_(dttm_filter),\n            ).scalar()"
  },
  {
    "id" : "f7e51428-842f-4e62-87f4-18a39b86d65d",
    "prId" : 8509,
    "prUrl" : "https://github.com/apache/airflow/pull/8509#pullrequestreview-401592273",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d98866b2-47df-40a0-b577-cd2469225796",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Let's use f-string :)",
        "createdAt" : "2020-04-28T08:07:25Z",
        "updatedAt" : "2020-05-07T10:56:16Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "91b7e728e764f8147159ca62c5af0f99d57cbba5",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +87,91 @@            raise AirflowException(\"Duplicate values provided as allowed \"\n                                   \"`{}` and failed states `{}`\"\n                                   .format(self.allowed_states, self.failed_states))\n\n        if external_task_id:"
  },
  {
    "id" : "cdcd8acd-fb2f-4be1-a392-fdd72d62bde6",
    "prId" : 8509,
    "prUrl" : "https://github.com/apache/airflow/pull/8509#pullrequestreview-401592273",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "341f4b9b-7446-4f5c-a76a-424acb2ceb76",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Let's use f-string",
        "createdAt" : "2020-04-28T08:08:08Z",
        "updatedAt" : "2020-05-07T10:56:16Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "91b7e728e764f8147159ca62c5af0f99d57cbba5",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +170,174 @@            else:\n                raise AirflowException('The external DAG {} failed.'\n                                       .format(self.external_dag_id))\n\n        return count_allowed == len(dttm_filter)"
  },
  {
    "id" : "a57d9f9e-5748-4a1b-8ef2-2cc338ffbe7a",
    "prId" : 8702,
    "prUrl" : "https://github.com/apache/airflow/pull/8702#pullrequestreview-499948069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dbc5fbd-92a3-45f2-bd60-8289458d57c8",
        "parentId" : null,
        "authorId" : "f85ef659-e88b-40c6-856b-c86350e0d001",
        "body" : "This change stops people from doing loop variable capture. There are more friendly ways to allow compatibility, such as using `inspect.signature` to figure out the actual argument names.\r\n\r\n```python\r\n    for day in range(1, 7):\r\n        sensor = ExternalTaskSensor(\r\n            task_id=\"sensor_{}\".format(day),\r\n            external_dag_id=external_dag_id,\r\n            external_task_id=external_task_id,\r\n            execution_date_fn=lambda execution_date, local_day=day: ...,\r\n        )\r\n```",
        "createdAt" : "2020-10-01T01:00:19Z",
        "updatedAt" : "2020-10-01T01:00:20Z",
        "lastEditedBy" : "f85ef659-e88b-40c6-856b-c86350e0d001",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9a57982fa969ffcd66e6fefbe5a42961234e841",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +181,185 @@            return self.execution_date_fn(context['execution_date'], context)\n        else:\n            raise AirflowException(\n                'execution_date_fn passed {} args but only allowed up to 2'.format(num_fxn_params)\n            )"
  }
]