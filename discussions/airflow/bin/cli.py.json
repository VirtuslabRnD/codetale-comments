[
  {
    "id" : "381efc37-b51c-41e2-ab83-f45a7cb4a65a",
    "prId" : 618,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1772899a-650b-413c-ac51-0ce987d7cb35",
        "parentId" : null,
        "authorId" : "0ff67aea-e186-487e-bd0f-83d1c809bd31",
        "body" : "`choices=['sync', 'eventlet', 'gevent', 'tornado'],` We can constrain this since those are the only options.\n",
        "createdAt" : "2015-11-11T19:24:34Z",
        "updatedAt" : "2015-11-11T20:57:48Z",
        "lastEditedBy" : "0ff67aea-e186-487e-bd0f-83d1c809bd31",
        "tags" : [
        ]
      }
    ],
    "commit" : "01115af12e45acbc1401945477c6be274a196c1a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +602,606 @@    parser_webserver.add_argument(\n        \"-k\", \"--workerclass\",\n        default=configuration.get('webserver', 'WORKER_CLASS'),\n        choices=['sync', 'eventlet', 'gevent', 'tornado'],\n        help=\"The worker class to use for gunicorn\")"
  },
  {
    "id" : "a698382a-caa1-49ef-88b7-4b2a15066130",
    "prId" : 676,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7ecce3c-ba5e-4edf-8454-661263a3be4c",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "Should we `help=argparse.SUPPRESS`?\n\nI was almost thinking about removing `resetdb` altogether as we are growing our user base beyond control at Airbnb.\n",
        "createdAt" : "2015-11-20T21:34:04Z",
        "updatedAt" : "2015-11-20T21:34:04Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c76e4ee0e66554b663e9f7d12f2e1da7eeefd51",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +642,646 @@    ht = \"Burn down and rebuild the metadata database\"\n    parser_resetdb = subparsers.add_parser('resetdb', help=ht)\n    parser_resetdb.add_argument(\n            \"-y\", \"--yes\",\n            default=False,"
  },
  {
    "id" : "b17dce8c-f668-4878-931f-78ed6932273a",
    "prId" : 1506,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d171dffb-4dba-4109-8775-781b38b50eb3",
        "parentId" : null,
        "authorId" : "06a356e2-8fb5-4f99-b8bb-46ce12d2daa0",
        "body" : "I wonder if we should use different exit codes for different errors statuses, also it looks like the other parts of the CLI raise instead of exiting (though exiting is the right call since this is user facing), maybe turn the raises in the top-level functions into sys.exits too to be consistent?\n",
        "createdAt" : "2016-05-17T19:01:50Z",
        "updatedAt" : "2016-05-18T10:31:06Z",
        "lastEditedBy" : "06a356e2-8fb5-4f99-b8bb-46ce12d2daa0",
        "tags" : [
        ]
      },
      {
        "id" : "b8549075-28ab-45ea-9021-f69141fd32a8",
        "parentId" : "d171dffb-4dba-4109-8775-781b38b50eb3",
        "authorId" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "body" : "@aoen I agree, but the full change should be part of a different PR I think. I can change to raising and create a Jira for it?\n",
        "createdAt" : "2016-05-17T20:08:24Z",
        "updatedAt" : "2016-05-18T10:31:06Z",
        "lastEditedBy" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "tags" : [
        ]
      },
      {
        "id" : "d7a78f19-c2e9-4b8c-98a4-b4194db00c33",
        "parentId" : "d171dffb-4dba-4109-8775-781b38b50eb3",
        "authorId" : "06a356e2-8fb5-4f99-b8bb-46ce12d2daa0",
        "body" : "SGTM, and thanks!\n",
        "createdAt" : "2016-05-17T20:10:34Z",
        "updatedAt" : "2016-05-18T10:31:06Z",
        "lastEditedBy" : "06a356e2-8fb5-4f99-b8bb-46ce12d2daa0",
        "tags" : [
        ]
      },
      {
        "id" : "41f89f11-516a-4b11-b150-dacf89d7136e",
        "parentId" : "d171dffb-4dba-4109-8775-781b38b50eb3",
        "authorId" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "body" : "https://issues.apache.org/jira/browse/AIRFLOW-126\n",
        "createdAt" : "2016-05-17T20:28:44Z",
        "updatedAt" : "2016-05-18T10:31:06Z",
        "lastEditedBy" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb56289743d6f28db667e2eec2509b9e245b37c7",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +123,127 @@    if not dag:\n        logging.error(\"Cannot find dag {}\".format(args.dag_id))\n        sys.exit(1)\n\n    execution_date = datetime.now()"
  },
  {
    "id" : "fdb8c9b8-4708-49ff-b44d-953feb4701c1",
    "prId" : 3730,
    "prUrl" : "https://github.com/apache/airflow/pull/3730#pullrequestreview-146450898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4389a34f-3bef-4399-a951-b70b2d22570e",
        "parentId" : null,
        "authorId" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "body" : "https://github.com/apache/incubator-airflow/blob/0ba510e238ebb197bce9afccdb06b88871c4a7e6/airflow/api/client/api_client.py#L53-L55\r\n\r\nðŸ¤” Did you test this?",
        "createdAt" : "2018-08-15T07:01:35Z",
        "updatedAt" : "2018-09-05T17:39:14Z",
        "lastEditedBy" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "tags" : [
        ]
      },
      {
        "id" : "784026bc-15f4-4320-900f-1896ce1b6178",
        "parentId" : "4389a34f-3bef-4399-a951-b70b2d22570e",
        "authorId" : "c90d6af3-9d7c-4a48-9a99-61926b9c6f27",
        "body" : "Yes, I did test on this and unit test passed. I used the default config for the api_client here https://github.com/apache/incubator-airflow/blob/00adade4163197fcff799168398edc629f989d34/airflow/config_templates/default_airflow.cfg#L183\r\n\r\nI think it is actually using this class https://github.com/apache/incubator-airflow/blob/da1f64cf805abaecda227fc8c43a15a92faff648/airflow/api/client/local_client.py#L40-L42",
        "createdAt" : "2018-08-15T13:45:54Z",
        "updatedAt" : "2018-09-05T17:39:14Z",
        "lastEditedBy" : "c90d6af3-9d7c-4a48-9a99-61926b9c6f27",
        "tags" : [
        ]
      }
    ],
    "commit" : "6956eafad7859567e4449215a426c7573fee2567",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +321,325 @@def pool_export_helper(filepath):\n    pool_dict = {}\n    pools = api_client.get_pools()\n    for pool in pools:\n        pool_dict[pool[0]] = {\"slots\": pool[1], \"description\": pool[2]}"
  },
  {
    "id" : "e75b3a34-3b9d-42c6-ad62-4a8d9f86eeaa",
    "prId" : 3730,
    "prUrl" : "https://github.com/apache/airflow/pull/3730#pullrequestreview-147463618",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dee72e70-f54c-49aa-bc73-8f75f0389fc6",
        "parentId" : null,
        "authorId" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "body" : "This code makes me a bit sad, I would expect a more descriptive response from the API.",
        "createdAt" : "2018-08-15T07:02:17Z",
        "updatedAt" : "2018-09-05T17:39:14Z",
        "lastEditedBy" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "tags" : [
        ]
      },
      {
        "id" : "5971b838-4ae2-4fc7-a067-44cdd40cdd1f",
        "parentId" : "dee72e70-f54c-49aa-bc73-8f75f0389fc6",
        "authorId" : "c90d6af3-9d7c-4a48-9a99-61926b9c6f27",
        "body" : "I totally felt the same way, however, since it returns https://github.com/apache/incubator-airflow/blob/da1f64cf805abaecda227fc8c43a15a92faff648/airflow/api/client/local_client.py#L42\r\n\r\nThe pool class doesn't seem have set and get as Variables, maybe it's good to have another PR to add them?\r\nhttps://github.com/apache/incubator-airflow/blob/da1f64cf805abaecda227fc8c43a15a92faff648/airflow/models.py#L5077",
        "createdAt" : "2018-08-15T13:47:03Z",
        "updatedAt" : "2018-09-05T17:39:14Z",
        "lastEditedBy" : "c90d6af3-9d7c-4a48-9a99-61926b9c6f27",
        "tags" : [
        ]
      },
      {
        "id" : "bc533020-87ed-4c5e-b9e9-52aea7b50e01",
        "parentId" : "dee72e70-f54c-49aa-bc73-8f75f0389fc6",
        "authorId" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "body" : "Yes, that would be my preference.",
        "createdAt" : "2018-08-19T14:42:04Z",
        "updatedAt" : "2018-09-05T17:39:14Z",
        "lastEditedBy" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "tags" : [
        ]
      },
      {
        "id" : "37c1ca3f-455d-46de-a207-2750d3ea2a36",
        "parentId" : "dee72e70-f54c-49aa-bc73-8f75f0389fc6",
        "authorId" : "c90d6af3-9d7c-4a48-9a99-61926b9c6f27",
        "body" : "@Fokko Do you think we can move forward PR or this needs to wait for adding set and get in Pool? Thanks!",
        "createdAt" : "2018-08-19T16:08:19Z",
        "updatedAt" : "2018-09-05T17:39:14Z",
        "lastEditedBy" : "c90d6af3-9d7c-4a48-9a99-61926b9c6f27",
        "tags" : [
        ]
      }
    ],
    "commit" : "6956eafad7859567e4449215a426c7573fee2567",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +323,327 @@    pools = api_client.get_pools()\n    for pool in pools:\n        pool_dict[pool[0]] = {\"slots\": pool[1], \"description\": pool[2]}\n    with open(filepath, 'w') as poolfile:\n        poolfile.write(json.dumps(pool_dict, sort_keys=True, indent=4))"
  },
  {
    "id" : "40d3e330-6932-460d-98d9-4caed236f2f5",
    "prId" : 3834,
    "prUrl" : "https://github.com/apache/airflow/pull/3834#pullrequestreview-152184437",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16506da4-f8e3-40e7-a554-db6b57ae4fc0",
        "parentId" : null,
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "@XD-DENG I just tested this with some of the example dags in https://github.com/apache/incubator-airflow/tree/master/airflow/example_dags. Can you test your code with different schedule types including `@once`, `daily/weekly`, `timedelta(hours=1)`, etc... in addition to the case you provide which is cron expressions. Also, can you add tests for these?\r\n\r\n```\r\n(venv) sianand@LM-SJN-21002367:~/Projects/airflow_incubator $ airflow next_execution latest_only\r\n[2018-09-04 10:52:19,613] {__init__.py:51} INFO - Using executor SequentialExecutor\r\n/Users/sianand/miniconda3/lib/python3.6/site-packages/apache_airflow-2.0.0.dev0+incubating-py3.6.egg/airflow/bin/cli.py:1724: DeprecationWarning: The celeryd_concurrency option in [celery] has been renamed to worker_concurrency - the old setting has been used, but please update your config.\r\n  default=conf.get('celery', 'worker_concurrency')),\r\n[2018-09-04 10:52:19,822] {models.py:260} INFO - Filling up the DagBag from /Users/sianand/Projects/airflow_incubator/dags\r\n[2018-09-04 10:52:19,882] {example_kubernetes_operator.py:55} WARNING - Could not import KubernetesPodOperator: No module named 'kubernetes'\r\n[2018-09-04 10:52:19,882] {example_kubernetes_operator.py:56} WARNING - Install kubernetes dependencies with:     pip install apache-airflow[kubernetes]\r\nTraceback (most recent call last):\r\n  File \"/Users/sianand/miniconda3/bin/airflow\", line 4, in <module>\r\n    __import__('pkg_resources').run_script('apache-airflow==2.0.0.dev0+incubating', 'airflow')\r\n  File \"/Users/sianand/miniconda3/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 654, in run_script\r\n    self.require(requires)[0].run_script(script_name, ns)\r\n  File \"/Users/sianand/miniconda3/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 1434, in run_script\r\n    exec(code, namespace, namespace)\r\n  File \"/Users/sianand/miniconda3/lib/python3.6/site-packages/apache_airflow-2.0.0.dev0+incubating-py3.6.egg/EGG-INFO/scripts/airflow\", line 32, in <module>\r\n    args.func(args)\r\n  File \"/Users/sianand/miniconda3/lib/python3.6/site-packages/apache_airflow-2.0.0.dev0+incubating-py3.6.egg/airflow/utils/cli.py\", line 74, in wrapper\r\n    return f(*args, **kwargs)\r\n  File \"/Users/sianand/miniconda3/lib/python3.6/site-packages/apache_airflow-2.0.0.dev0+incubating-py3.6.egg/airflow/bin/cli.py\", line 562, in next_execution\r\n    print(dag.following_schedule(dag.latest_execution_date))\r\n  File \"/Users/sianand/miniconda3/lib/python3.6/site-packages/apache_airflow-2.0.0.dev0+incubating-py3.6.egg/airflow/models.py\", line 3371, in following_schedule\r\n    return dttm + self._schedule_interval\r\nTypeError: unsupported operand type(s) for +: 'NoneType' and 'datetime.timedelta'\r\n\r\n\r\n```",
        "createdAt" : "2018-09-04T17:58:33Z",
        "updatedAt" : "2018-09-09T13:08:41Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a3166d6269d834ef1fda622ffa5690c9d3cb860",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +552,556 @@\n\n@cli_utils.action_logging\ndef next_execution(args):\n    \"\"\""
  },
  {
    "id" : "b2867ee9-ead1-43e9-94ec-56ec79647dee",
    "prId" : 3872,
    "prUrl" : "https://github.com/apache/airflow/pull/3872#pullrequestreview-153592961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e00d62f-927f-4a03-924d-9f42898ccc68",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Could we get around all of these changes by instead setting `export AIRFLOW_HOME='$AIRFLOW_HOME'` before we build the docs?",
        "createdAt" : "2018-09-09T20:05:07Z",
        "updatedAt" : "2018-09-09T20:06:04Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "cd86387c-ad76-4636-b637-19c269400922",
        "parentId" : "9e00d62f-927f-4a03-924d-9f42898ccc68",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "That is what is happening before we build the docs, we export `BUILDING_AIRFLOW_DOCS` environment variable, `DAGS_FOLDER = '[AIRFLOW_HOME]/dags'` will be only set when we are building docs",
        "createdAt" : "2018-09-09T20:22:51Z",
        "updatedAt" : "2018-09-09T20:22:51Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "2af6e012-6279-46fe-aedf-43ee1e275587",
        "parentId" : "9e00d62f-927f-4a03-924d-9f42898ccc68",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "After this fix, we would see as below:\r\n\r\n![image](https://user-images.githubusercontent.com/8811558/45268599-8f698d00-b476-11e8-9cc2-11f31569f540.png)\r\n",
        "createdAt" : "2018-09-09T20:23:16Z",
        "updatedAt" : "2018-09-09T20:23:16Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "36d996ce-beaa-4272-8717-7bf9daf94b0c",
        "parentId" : "9e00d62f-927f-4a03-924d-9f42898ccc68",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Let me know if you however prefer `$AIRFLOW_HOME/dags` instead of `[AIRFLOW_HOME]/dags`. I have set `[AIRFLOW_HOME]` because we take this parameter from the config file. But I don't have a preference, so `$AIRFLOW_HOME/dags` is fine for me :)",
        "createdAt" : "2018-09-09T20:24:25Z",
        "updatedAt" : "2018-09-09T20:24:25Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "29b26a8b-4a2a-47c5-aadf-c0403a97ba86",
        "parentId" : "9e00d62f-927f-4a03-924d-9f42898ccc68",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "@ashb \r\n\r\nTo answer your question, no setting `AIRFLOW_HOME` variable won't solve it as we take this value from `airflow.cfg`, but if we change `airflow.cfg` before building docs, this solves it for self-hosted docs but still fails for ReadTheDocs .",
        "createdAt" : "2018-09-09T20:29:16Z",
        "updatedAt" : "2018-09-09T20:29:16Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "ed569152-b1e7-4d4f-9ede-c240ea865447",
        "parentId" : "9e00d62f-927f-4a03-924d-9f42898ccc68",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Then perhaps `export AIRFLOW__CORE__DAGS_FOLDER=...` then\r\n\r\nI feel that not having to change the code for this case just makes things a bit cleaner long term.",
        "createdAt" : "2018-09-09T20:45:15Z",
        "updatedAt" : "2018-09-09T20:45:15Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "921ef451-44c6-493a-8f6c-a5f3ebd858f9",
        "parentId" : "9e00d62f-927f-4a03-924d-9f42898ccc68",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Exporting `AIRFLOW__CORE__DAGS_FOLDER=` would mess up with ReadTheDocs environment as it would change the Dags folder and hence can break it when parsing some modules that use example dags.\r\n\r\nWe are already using this for `apply_defaults` decorator: \r\nhttps://github.com/apache/incubator-airflow/blob/f7fd78b06b24c15af3773b41ae3ecab7e48bb1ea/airflow/utils/decorators.py#L102-L105\r\n\r\nAnd also in future when we might have more such issues where docs would need to be handled differently, I think this would be better than setting environment variables for each instance.",
        "createdAt" : "2018-09-09T20:56:40Z",
        "updatedAt" : "2018-09-09T20:57:00Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a5af716d35a190b22b08449cd5eb6d5e80e7ae5",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +84,88 @@\nif \"BUILDING_AIRFLOW_DOCS\" in os.environ:\n    DAGS_FOLDER = '[AIRFLOW_HOME]/dags'\n\n"
  },
  {
    "id" : "a652d7c4-de51-413d-8c2e-7d8086553055",
    "prId" : 4028,
    "prUrl" : "https://github.com/apache/airflow/pull/4028#pullrequestreview-163266564",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4181b344-4dc5-4200-b728-37e2795b86ba",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Not sure on `source=args.cfg_path` ..\r\n\r\n>Optional argument source specifies a context-specific name of the dictionary passed. If not given, `<dict>` is used.\r\n\r\nWhat does `source=args.cfg_path`  do in our case?",
        "createdAt" : "2018-10-10T09:15:35Z",
        "updatedAt" : "2018-10-10T09:28:47Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "700d897a-6335-46dc-8206-911a17918185",
        "parentId" : "4181b344-4dc5-4200-b728-37e2795b86ba",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "If there are any errors it will display the filename as the source, instead of the default of `<dict>` (unlikely here, as the dict as already parsed but it's an arg the method takes so it makes sense to use it)",
        "createdAt" : "2018-10-10T09:18:24Z",
        "updatedAt" : "2018-10-10T09:18:24Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "947fdc07-c704-498f-9c7d-c587a7b3e8d9",
        "parentId" : "4181b344-4dc5-4200-b728-37e2795b86ba",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Cool. Makes sense",
        "createdAt" : "2018-10-10T09:37:44Z",
        "updatedAt" : "2018-10-10T09:37:44Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "b66f32600617dea0de629349cc615a567a987a6e",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +501,505 @@            os.remove(args.cfg_path)\n\n        conf.conf.read_dict(conf_dict, source=args.cfg_path)\n        settings.configure_vars()\n"
  },
  {
    "id" : "abed8d54-d289-470d-a5b3-f5a4d1df5ab8",
    "prId" : 4320,
    "prUrl" : "https://github.com/apache/airflow/pull/4320#pullrequestreview-185634711",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec832fc6-369b-4bfd-a54d-f1a629d2ab01",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Should we remove `num_runs` as well, then? ",
        "createdAt" : "2018-12-15T11:24:39Z",
        "updatedAt" : "2019-01-07T21:57:12Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "15d32c25-bb3a-41bd-ad43-3c41d210a2af",
        "parentId" : "ec832fc6-369b-4bfd-a54d-f1a629d2ab01",
        "authorId" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "body" : "Good point Kaxil, I've created a ticket: https://jira.apache.org/jira/browse/AIRFLOW-3533",
        "createdAt" : "2018-12-17T15:08:01Z",
        "updatedAt" : "2019-01-07T21:57:12Z",
        "lastEditedBy" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "4359aa5541f084aec6dc8e7ce58912cac9b035ae",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +971,975 @@        dag_id=args.dag_id,\n        subdir=process_subdir(args.subdir),\n        num_runs=args.num_runs,\n        do_pickle=args.do_pickle)\n"
  },
  {
    "id" : "1407dd66-8287-4f8a-af61-b93a9b4e4120",
    "prId" : 4624,
    "prUrl" : "https://github.com/apache/airflow/pull/4624#pullrequestreview-198245444",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4b5e917-6f63-4d84-819f-7f069ff43225",
        "parentId" : null,
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "I am not sure if I understand the comment, could you clarify which part of cli doesn't allow the underscore?",
        "createdAt" : "2019-01-30T18:50:12Z",
        "updatedAt" : "2019-01-30T21:15:48Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      }
    ],
    "commit" : "adee6b6d8247b68e9918bcc9fcdc00fbd0d1ab4f",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +1482,1486 @@\n        # In the User model the first and last name fields have underscores,\n        # but the corresponding parameters in the CLI don't\n        def remove_underscores(s):\n            return re.sub(\"_\", \"\", s)"
  },
  {
    "id" : "79cba7e2-e12b-4f89-b024-afd9962d8bfd",
    "prId" : 4624,
    "prUrl" : "https://github.com/apache/airflow/pull/4624#pullrequestreview-198254915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cf016f6-1f45-4148-9e52-f2988e25bfd3",
        "parentId" : null,
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "so ``args.import`` will throw an exception in this case?\r\n",
        "createdAt" : "2019-01-30T18:56:07Z",
        "updatedAt" : "2019-01-30T21:15:48Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "980dd899-5cc8-4ff3-a0d5-f7da9d73064a",
        "parentId" : "8cf016f6-1f45-4148-9e52-f2988e25bfd3",
        "authorId" : "8ae8c9e1-93ac-446d-b3f6-18d36b79bd39",
        "body" : "Yep, it's a SyntaxError:\r\n\r\n```\r\nERROR: Failure: SyntaxError (invalid syntax (cli.py, line 1498))\r\n```",
        "createdAt" : "2019-01-30T19:10:04Z",
        "updatedAt" : "2019-01-30T21:15:48Z",
        "lastEditedBy" : "8ae8c9e1-93ac-446d-b3f6-18d36b79bd39",
        "tags" : [
        ]
      }
    ],
    "commit" : "adee6b6d8247b68e9918bcc9fcdc00fbd0d1ab4f",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +1497,1501 @@            print(\"{} users successfully exported to {}\".format(len(users), f.name))\n\n    elif getattr(args, 'import'):  # \"import\" is a reserved word\n        json_file = getattr(args, 'import')\n        if not os.path.exists(json_file):"
  },
  {
    "id" : "3690fecf-0047-4209-8f20-001e977c8ad8",
    "prId" : 4624,
    "prUrl" : "https://github.com/apache/airflow/pull/4624#pullrequestreview-198256583",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67400fb7-f3b7-49a7-a027-ec43c2732f37",
        "parentId" : null,
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "ah, I see now. is there any reason we don't use first_name, last_name for the field name when import from a file?",
        "createdAt" : "2019-01-30T18:58:01Z",
        "updatedAt" : "2019-01-30T21:15:48Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "6a674f19-010b-4070-a692-e0d704591620",
        "parentId" : "67400fb7-f3b7-49a7-a027-ec43c2732f37",
        "authorId" : "8ae8c9e1-93ac-446d-b3f6-18d36b79bd39",
        "body" : "We could, but I thought it made sense to be consistent with the CLI, which takes `--firstname` and `--lastname`",
        "createdAt" : "2019-01-30T19:11:05Z",
        "updatedAt" : "2019-01-30T21:15:48Z",
        "lastEditedBy" : "8ae8c9e1-93ac-446d-b3f6-18d36b79bd39",
        "tags" : [
        ]
      },
      {
        "id" : "3fea3794-6613-4ba5-9308-ca17cda7920d",
        "parentId" : "67400fb7-f3b7-49a7-a027-ec43c2732f37",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "I see. In this case, let's be consistent with the CLI then. Thanks for the clarification. ",
        "createdAt" : "2019-01-30T19:13:26Z",
        "updatedAt" : "2019-01-30T21:15:48Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      }
    ],
    "commit" : "adee6b6d8247b68e9918bcc9fcdc00fbd0d1ab4f",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +1536,1540 @@                roles.append(role)\n\n        required_fields = ['username', 'firstname', 'lastname',\n                           'email', 'roles']\n        for field in required_fields:"
  },
  {
    "id" : "8711f224-c789-4cac-b4c2-d913569a1d06",
    "prId" : 4624,
    "prUrl" : "https://github.com/apache/airflow/pull/4624#pullrequestreview-198245444",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9064236e-2dc9-4196-90b2-2f0528169268",
        "parentId" : null,
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "this may be worth to update FAB. but we could do it later.",
        "createdAt" : "2019-01-30T18:59:28Z",
        "updatedAt" : "2019-01-30T21:15:48Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      }
    ],
    "commit" : "adee6b6d8247b68e9918bcc9fcdc00fbd0d1ab4f",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +1566,1570 @@                last_name=user['lastname'],\n                email=user['email'],\n                role=roles[0],  # add_user() requires exactly 1 role\n            )\n"
  },
  {
    "id" : "856cf513-96c2-48d6-acd6-7d6cd2b72984",
    "prId" : 4624,
    "prUrl" : "https://github.com/apache/airflow/pull/4624#pullrequestreview-198258700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08f8d8c7-2c59-44cc-b42d-198532f62d80",
        "parentId" : null,
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "it would be good to give an example what an import json file will look like.",
        "createdAt" : "2019-01-30T19:01:11Z",
        "updatedAt" : "2019-01-30T21:15:48Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "8fcf3dec-f8e2-4277-aede-9a9351af6430",
        "parentId" : "08f8d8c7-2c59-44cc-b42d-198532f62d80",
        "authorId" : "8ae8c9e1-93ac-446d-b3f6-18d36b79bd39",
        "body" : "Sure, where's the best place for that? Here, as a comment, or are there some docs for the CLI?",
        "createdAt" : "2019-01-30T19:11:46Z",
        "updatedAt" : "2019-01-30T21:15:48Z",
        "lastEditedBy" : "8ae8c9e1-93ac-446d-b3f6-18d36b79bd39",
        "tags" : [
        ]
      },
      {
        "id" : "2f9791d6-cae8-4405-8bb8-a316a67b1681",
        "parentId" : "08f8d8c7-2c59-44cc-b42d-198532f62d80",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "do you think it will be too much to put it in the help comment for import option?",
        "createdAt" : "2019-01-30T19:17:47Z",
        "updatedAt" : "2019-01-30T21:15:48Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      }
    ],
    "commit" : "adee6b6d8247b68e9918bcc9fcdc00fbd0d1ab4f",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +1499,1503 @@    elif getattr(args, 'import'):  # \"import\" is a reserved word\n        json_file = getattr(args, 'import')\n        if not os.path.exists(json_file):\n            print(\"File '{}' does not exist\")\n            exit(1)"
  },
  {
    "id" : "875c0895-ee59-4423-96ca-35978ece78c9",
    "prId" : 4685,
    "prUrl" : "https://github.com/apache/airflow/pull/4685#pullrequestreview-202468051",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73cf9008-acbe-4641-b5f2-387389bdf995",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "What was wrong with this as a named tuple? Does mypy have trouble with namedtouples?",
        "createdAt" : "2019-02-11T10:53:55Z",
        "updatedAt" : "2019-03-10T16:33:43Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "745ddcd9-1866-4d28-b86b-5e27f199c518",
        "parentId" : "73cf9008-acbe-4641-b5f2-387389bdf995",
        "authorId" : "9a5e8348-c065-464c-a412-d4070cbed6ea",
        "body" : "`mypy` doesn't understand `namedtuple` default arguments set via `__new__.__defaults`, so when we instantiate `Arg` below with missing arguments, `mypy` complains. I think `mypy` understands the `namedtuple` default syntax in python >=3.6, but not this syntax.",
        "createdAt" : "2019-02-12T03:12:22Z",
        "updatedAt" : "2019-03-10T16:33:43Z",
        "lastEditedBy" : "9a5e8348-c065-464c-a412-d4070cbed6ea",
        "tags" : [
        ]
      }
    ],
    "commit" : "6072d5f653cc3c0ed9712b7712ef2b24d9771aea",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +1665,1669 @@\n\nclass Arg(object):\n    def __init__(self, flags=None, help=None, action=None, default=None, nargs=None,\n                 type=None, choices=None, metavar=None):"
  },
  {
    "id" : "d717ab5c-e749-4de9-a176-51bc329a2da3",
    "prId" : 4821,
    "prUrl" : "https://github.com/apache/airflow/pull/4821#pullrequestreview-226413232",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1a5b04d-f421-4b46-990d-76c151ab2948",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "What error code will be returned here?",
        "createdAt" : "2019-04-01T00:58:31Z",
        "updatedAt" : "2019-07-19T04:39:30Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "82a29f3b-492a-42eb-af58-8c16f22325a8",
        "parentId" : "f1a5b04d-f421-4b46-990d-76c151ab2948",
        "authorId" : "9a5e8348-c065-464c-a412-d4070cbed6ea",
        "body" : "So far I haven't been changing the behavior of these commands, just changing the structure. Some error cases print a message and return without raising an error, and I agree that we should change that behavior. Any preference on whether that change happens as part of this patch or in a separate patch?",
        "createdAt" : "2019-04-14T21:05:35Z",
        "updatedAt" : "2019-07-19T04:39:30Z",
        "lastEditedBy" : "9a5e8348-c065-464c-a412-d4070cbed6ea",
        "tags" : [
        ]
      }
    ],
    "commit" : "d30237f5d1338cf022ae18cb4d042cb7ca7c8732",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +376,380 @@        import_helper(args.file)\n    else:\n        print(\"Missing variables file.\")\n\n"
  },
  {
    "id" : "48c4a07e-056e-4f9a-9756-fd937a61f5f4",
    "prId" : 4828,
    "prUrl" : "https://github.com/apache/airflow/pull/4828#pullrequestreview-211060314",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3391066d-ce2e-47eb-94f7-9ede636ace1b",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "Seems the default value here would be `True`, i.e. the post_mortem will be invoked by default. But this is different from the previous behavior. Personally I would suggest to use `False` as default value here, to make behavior consistent.",
        "createdAt" : "2019-03-06T04:20:35Z",
        "updatedAt" : "2019-03-06T16:10:29Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "58efe725-a209-49ee-80be-7ac00f60ac6b",
        "parentId" : "3391066d-ce2e-47eb-94f7-9ede636ace1b",
        "authorId" : "9a5e8348-c065-464c-a412-d4070cbed6ea",
        "body" : "In argparse, store_true sets the default to false, so I think this is correct.",
        "createdAt" : "2019-03-06T04:45:25Z",
        "updatedAt" : "2019-03-06T16:10:29Z",
        "lastEditedBy" : "9a5e8348-c065-464c-a412-d4070cbed6ea",
        "tags" : [
        ]
      },
      {
        "id" : "6753b348-a5a5-4501-b278-b66f2d954eee",
        "parentId" : "3391066d-ce2e-47eb-94f7-9ede636ace1b",
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "Yes you're right. Thanks for clarification.",
        "createdAt" : "2019-03-06T06:25:21Z",
        "updatedAt" : "2019-03-06T16:10:29Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      }
    ],
    "commit" : "6e737bb01294fff3f712ad5b9af0c84dafc0b18b",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +2046,2050 @@        'post_mortem': Arg(\n            (\"-pm\", \"--post_mortem\"),\n            action=\"store_true\",\n            help=\"Open debugger on uncaught exception\",\n        ),"
  },
  {
    "id" : "dead9c1b-7fc5-49ed-bda4-e2e24e1213d4",
    "prId" : 4828,
    "prUrl" : "https://github.com/apache/airflow/pull/4828#pullrequestreview-211220931",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b166123-0dc8-4675-9832-57c82aa301c8",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Oh nice, I didn't know about this function. (I've always just used `.set_trace()`",
        "createdAt" : "2019-03-06T13:13:00Z",
        "updatedAt" : "2019-03-06T16:10:29Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "6e737bb01294fff3f712ad5b9af0c84dafc0b18b",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +699,703 @@            except ImportError:\n                debugger = importlib.import_module(\"pdb\")\n            debugger.post_mortem()\n        else:\n            raise"
  },
  {
    "id" : "6de9f5af-e67c-4f70-afec-1059acb0c12c",
    "prId" : 4910,
    "prUrl" : "https://github.com/apache/airflow/pull/4910#pullrequestreview-214075120",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e798f9c3-3209-4bc5-b798-419b18d4d736",
        "parentId" : null,
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "I am not sure if I follow, but why do we change the conf to None here?",
        "createdAt" : "2019-03-13T16:36:40Z",
        "updatedAt" : "2019-03-13T16:36:40Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "c2bb266a-ad29-41e9-9976-af8e65e87879",
        "parentId" : "e798f9c3-3209-4bc5-b798-419b18d4d736",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Previously the `config` argument to create_app wasn't used by that app, but in tidying up of the tests I started using it -- it is now a dict that is merged in to the flask `app.config`.",
        "createdAt" : "2019-03-13T16:38:09Z",
        "updatedAt" : "2019-03-13T16:38:09Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "4713cb31-1720-4977-93a7-1739a883af14",
        "parentId" : "e798f9c3-3209-4bc5-b798-419b18d4d736",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Previously the `config` argument to create_app wasn't used by that app, but in tidying up of the tests I started using it -- it is now a dict that is merged in to the flask `app.config`.\r\n\r\nhttps://github.com/apache/airflow/pull/4910/files#diff-3d86925e55c01b3d8f3cb10def92fd1cR62",
        "createdAt" : "2019-03-13T16:38:54Z",
        "updatedAt" : "2019-03-13T16:38:54Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "11ccd95d-f2f1-4d38-80a0-3f1e76fa5383",
        "parentId" : "e798f9c3-3209-4bc5-b798-419b18d4d736",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "Got it. thanks.",
        "createdAt" : "2019-03-13T16:40:00Z",
        "updatedAt" : "2019-03-13T16:40:00Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      }
    ],
    "commit" : "370151d4d31caa476f0b84022be211d0ed6de835",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +885,889 @@            \"Starting the web server on port {0} and host {1}.\".format(\n                args.port, args.hostname))\n        app, _ = create_app(None, testing=conf.get('core', 'unit_test_mode'))\n        app.run(debug=True, use_reloader=False if app.config['TESTING'] else True,\n                port=args.port, host=args.hostname,"
  },
  {
    "id" : "2e19b95c-14f2-48b2-af52-146fc0e772f9",
    "prId" : 5587,
    "prUrl" : "https://github.com/apache/airflow/pull/5587#pullrequestreview-261729628",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2daa7ce-8ab1-4b0b-a54e-bc18eda74139",
        "parentId" : null,
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "Why do you need to disable this? `filename` is used in line 1050.",
        "createdAt" : "2019-07-14T10:08:25Z",
        "updatedAt" : "2019-07-14T10:28:24Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "f21f0fe0-84b5-4eba-a22f-717201b77e14",
        "parentId" : "a2daa7ce-8ab1-4b0b-a54e-bc18eda74139",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "```\r\nairflow/bin/cli.py:1046:4: W0612: Unused variable 'serve_logs' (unused-variable)\r\n```",
        "createdAt" : "2019-07-14T10:26:20Z",
        "updatedAt" : "2019-07-14T10:28:24Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "61371f3d-d1e9-44dc-b4ca-ff96c0a6759c",
        "parentId" : "a2daa7ce-8ab1-4b0b-a54e-bc18eda74139",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Yeah. Pylint sometimes gets crazy.",
        "createdAt" : "2019-07-14T12:24:31Z",
        "updatedAt" : "2019-07-14T12:27:22Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "7373a646-22b7-4b7b-b117-ae8befd2b958",
        "parentId" : "a2daa7ce-8ab1-4b0b-a54e-bc18eda74139",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Have we reported this as a bug to pylint?\r\n\r\nPerhaps we should disable that pylint error globally since Flake8 has a (better?) check for this already",
        "createdAt" : "2019-07-15T09:42:58Z",
        "updatedAt" : "2019-07-15T09:42:58Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "92a0deba-cc1e-46ac-8641-901179ed970d",
        "parentId" : "a2daa7ce-8ab1-4b0b-a54e-bc18eda74139",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Except I guess it doesn't have a better check as some of the other fixes here weren't caught by flake8.",
        "createdAt" : "2019-07-15T09:47:30Z",
        "updatedAt" : "2019-07-15T09:47:30Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "3e4b44a9-5407-4bc0-b656-6e85ba436309",
        "parentId" : "a2daa7ce-8ab1-4b0b-a54e-bc18eda74139",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "The problem is only in the content of the message. Pylint detected unused functions and marked them as variables. Flake8 does not detect unused functions. \r\n\r\nI did not report this error to pylint.",
        "createdAt" : "2019-07-15T09:48:25Z",
        "updatedAt" : "2019-07-15T09:48:25Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "31efdff7-6c02-4dee-913b-94013227c5e9",
        "parentId" : "a2daa7ce-8ab1-4b0b-a54e-bc18eda74139",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Ah it's on the function, not on the `filename` variable itself (which I guess would have been unused-argument)\r\n\r\nhttps://github.com/PyCQA/pylint/issues/2842 seems to cover it, and I agree with that bug that it can't be handled. My only confusion was I would have expected the error to be unused-function.",
        "createdAt" : "2019-07-15T10:07:21Z",
        "updatedAt" : "2019-07-15T10:07:21Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a2a260e2497b3f466b20bab43a908c6532b85a1",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1043,1047 @@\n    @flask_app.route('/log/<path:filename>')\n    def serve_logs(filename):  # pylint: disable=unused-variable\n        log = os.path.expanduser(conf.get('core', 'BASE_LOG_FOLDER'))\n        return flask.send_from_directory("
  },
  {
    "id" : "0a4e8484-daca-40bd-b738-b22e454cfe03",
    "prId" : 5975,
    "prUrl" : "https://github.com/apache/airflow/pull/5975#pullrequestreview-282570087",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "296eae3f-3cc0-4794-9e43-e2af9bd21e60",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "@kaxil  Are you okay with that?\r\nSample command: \r\n``airflow dags show exampel_gcp_dlp --imgcat``",
        "createdAt" : "2019-09-02T12:29:39Z",
        "updatedAt" : "2019-09-06T15:24:40Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "dabe21ac-d89f-4ea5-8358-68ceb2d7ba92",
        "parentId" : "296eae3f-3cc0-4794-9e43-e2af9bd21e60",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "`show` is a string here and we are not using it as a variable like `format` above, so do not have problems with it.",
        "createdAt" : "2019-09-02T12:32:58Z",
        "updatedAt" : "2019-09-06T15:24:40Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "ab9f555b-9490-40c5-a2c6-cce847aaebeb",
        "parentId" : "296eae3f-3cc0-4794-9e43-e2af9bd21e60",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Thanks for opinion. I updated this PR. Let's wait for Travis.",
        "createdAt" : "2019-09-02T12:35:45Z",
        "updatedAt" : "2019-09-06T15:24:40Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "68941662b0136b5d5a5cf843c4f34d9efcccdb88",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +2233,2237 @@                {\n                    'func': show_dag,\n                    'name': 'show',\n                    'help': \"Displays DAG's tasks with their dependencies\",\n                    'args': ('dag_id', 'subdir', 'save', 'imgcat',),"
  },
  {
    "id" : "e3e971e4-695c-497a-9075-71fe336d4c04",
    "prId" : 5975,
    "prUrl" : "https://github.com/apache/airflow/pull/5975#pullrequestreview-282932449",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c2e5746-bdf1-466d-96dd-21fb94db5a5c",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Given this also prints logging to stdout from airflow startup it might be worth adding a way to save the dot contents to a file. (Unless `dot.render(format=\"dot\")` already works for that?)",
        "createdAt" : "2019-09-03T09:49:26Z",
        "updatedAt" : "2019-09-06T15:24:40Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "8d760697-ace0-49a7-8cac-ecb9096f4b2e",
        "parentId" : "1c2e5746-bdf1-466d-96dd-21fb94db5a5c",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "It works. I checked it.\r\n```\r\nairflow dags show example_gcp_vision_explicit_id --save a.dot\r\n```",
        "createdAt" : "2019-09-03T11:05:57Z",
        "updatedAt" : "2019-09-06T15:24:40Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "fbabd21f-f8b4-4f8b-b211-ffaad7a20234",
        "parentId" : "1c2e5746-bdf1-466d-96dd-21fb94db5a5c",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "After that, I thought about the problem that there are these logs.  I think airflow should be completely independent of CLI. Docker and kubernetes work similarly. This is important when we want Airflow to be completely serverless and secure. If I understand correctly, currently CLI always gives full access to Airflow. This is on my list of ideas.",
        "createdAt" : "2019-09-03T11:34:46Z",
        "updatedAt" : "2019-09-06T15:24:40Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "68941662b0136b5d5a5cf843c4f34d9efcccdb88",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +467,471 @@            print(err.decode('utf-8'))\n    else:\n        print(dot.source)\n\n"
  },
  {
    "id" : "0f7bd819-06ff-4b36-aec7-f4f96a78d2d5",
    "prId" : 6594,
    "prUrl" : "https://github.com/apache/airflow/pull/6594#pullrequestreview-318222966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc55c234-12b0-4b3f-a59a-9d098a4d206e",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "This import seems unused now?",
        "createdAt" : "2019-11-18T10:08:16Z",
        "updatedAt" : "2019-11-18T22:15:28Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "55d5de4f-4452-469f-b4a9-65950a3295fc",
        "parentId" : "bc55c234-12b0-4b3f-a59a-9d098a4d206e",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "https://github.com/apache/airflow/blob/911910e6feb2c04d7a0a69692832e0cc7e184c3e/airflow/bin/cli.py#L121-L128\r\nIt is the ways to display the table",
        "createdAt" : "2019-11-18T10:16:28Z",
        "updatedAt" : "2019-11-18T22:15:28Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "b40e73e85a16ba0775f28e1f4b2742fa4d463e72",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +26,30 @@from typing import Callable\n\nfrom tabulate import tabulate_formats\n\nfrom airflow import api, settings"
  },
  {
    "id" : "0e742c79-6808-4159-91b6-600efab0266e",
    "prId" : 6881,
    "prUrl" : "https://github.com/apache/airflow/pull/6881#pullrequestreview-335722716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20ab6565-fafb-44d8-8cec-d98b57f5ccae",
        "parentId" : null,
        "authorId" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "body" : "I think this change is acceptable, it keep `subcommand` in alphabetical, it change cli command like below\r\n\r\n```sh\r\n# airflow pools -h\r\n# before\r\nusage: airflow pools [-h] {list,get,set,delete,import,export} ...\r\n\r\npositional arguments:\r\n  {list,get,set,delete,import,export}\r\n    list                List pools\r\n    get                 Get pool size\r\n    set                 Configure pool\r\n    delete              Delete pool\r\n    import              Import pools\r\n    export              Export all pools\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n\r\n# after\r\nusage: airflow pools [-h] {delete,export,get,import,list,set} ...\r\n\r\npositional arguments:\r\n  {delete,export,get,import,list,set}\r\n    delete              Delete pool\r\n    export              Export all pools\r\n    get                 Get pool size\r\n    import              Import pools\r\n    list                List pools\r\n    set                 Configure pool\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n```",
        "createdAt" : "2019-12-23T06:09:09Z",
        "updatedAt" : "2020-01-06T16:42:09Z",
        "lastEditedBy" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "tags" : [
        ]
      }
    ],
    "commit" : "e24927541cdf581e71124293460675ac94d2d687",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +1069,1073 @@            sub_subparsers = sub_proc.add_subparsers(dest='subcommand')\n            sub_subparsers.required = True\n            for command in sorted(subcommands, key=lambda x: x['name']):\n                cls._add_subcommand(sub_subparsers, command)\n        else:"
  },
  {
    "id" : "93c0f605-1f2e-434d-afd1-3a73f6475f22",
    "prId" : 7446,
    "prUrl" : "https://github.com/apache/airflow/pull/7446#pullrequestreview-361339237",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "935eba92-535a-4bb9-961f-944a64fbc8a4",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "What does this look like when you run `airflow dag_runs --list`? I think you have formatting \"bugs\" in here.",
        "createdAt" : "2020-02-18T21:59:20Z",
        "updatedAt" : "2020-02-23T11:05:45Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "239d769d-e3a5-4ec8-aade-c7dd6b7e9fbd",
        "parentId" : "935eba92-535a-4bb9-961f-944a64fbc8a4",
        "authorId" : "fef3baf4-fb0b-4642-a186-054bce84c319",
        "body" : "Did you mean airflow dags list_runs ?",
        "createdAt" : "2020-02-19T18:02:34Z",
        "updatedAt" : "2020-02-23T11:05:45Z",
        "lastEditedBy" : "fef3baf4-fb0b-4642-a186-054bce84c319",
        "tags" : [
        ]
      },
      {
        "id" : "52d4565c-5584-4dc2-85c0-31f9391837a0",
        "parentId" : "935eba92-535a-4bb9-961f-944a64fbc8a4",
        "authorId" : "fef3baf4-fb0b-4642-a186-054bce84c319",
        "body" : "I've found formatting bugs in help description.",
        "createdAt" : "2020-02-19T18:38:53Z",
        "updatedAt" : "2020-02-23T11:05:45Z",
        "lastEditedBy" : "fef3baf4-fb0b-4642-a186-054bce84c319",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c7d0f24f163cb120d687733b82c164067487a19",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +602,606 @@                    \"all the dagruns that were executed before this date. \"\n                    \"If end_date is given, it will filter out \"\n                    \"all the dagruns that were executed after this date. \",\n            'args': ('dag_id_opt', 'no_backfill', 'state', 'output', \"start_date\", \"end_date\"),\n        },"
  }
]