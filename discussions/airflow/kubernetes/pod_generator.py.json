[
  {
    "id" : "88e14fbe-6cea-4d48-8cca-69cf2004563d",
    "prId" : 6230,
    "prUrl" : "https://github.com/apache/airflow/pull/6230#pullrequestreview-353292148",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a493c5f-30e2-456a-8a6a-7757dc1bc7d2",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This is a private method. Rather, we should not rely on the existence of this method.",
        "createdAt" : "2019-10-21T07:30:29Z",
        "updatedAt" : "2020-02-11T16:37:59Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "a90cd90b-4bea-4535-8838-979f574c98da",
        "parentId" : "2a493c5f-30e2-456a-8a6a-7757dc1bc7d2",
        "authorId" : "ca740401-a2d3-4a1e-ba4a-88c55e2b236f",
        "body" : "I noticed your solution was to copy-paste the functions in #6375. It seems they're clearly useful exposed as public. I've piggybacked on [this issue](https://github.com/kubernetes-client/python/issues/977#issuecomment-544564057).",
        "createdAt" : "2019-10-21T15:00:07Z",
        "updatedAt" : "2020-02-11T16:37:59Z",
        "lastEditedBy" : "ca740401-a2d3-4a1e-ba4a-88c55e2b236f",
        "tags" : [
        ]
      },
      {
        "id" : "82247e61-70cc-4a27-b73e-ed2b54dc403e",
        "parentId" : "2a493c5f-30e2-456a-8a6a-7757dc1bc7d2",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Really not great having to do this. Is there no other option?",
        "createdAt" : "2019-12-10T12:17:31Z",
        "updatedAt" : "2020-02-11T16:38:00Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "54fd5cff-397d-4ea7-8374-cc0f3b256dc3",
        "parentId" : "2a493c5f-30e2-456a-8a6a-7757dc1bc7d2",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "@davlum any word on if we can get around using a private method?",
        "createdAt" : "2020-01-22T21:37:26Z",
        "updatedAt" : "2020-02-11T16:38:00Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      },
      {
        "id" : "2a383064-ddbb-457d-82f1-15171552dff0",
        "parentId" : "2a493c5f-30e2-456a-8a6a-7757dc1bc7d2",
        "authorId" : "ca740401-a2d3-4a1e-ba4a-88c55e2b236f",
        "body" : "Doesn't look like there's been any mouvement on the k8s client, just pinged them again.",
        "createdAt" : "2020-01-23T04:52:48Z",
        "updatedAt" : "2020-02-11T16:38:00Z",
        "lastEditedBy" : "ca740401-a2d3-4a1e-ba4a-88c55e2b236f",
        "tags" : [
        ]
      },
      {
        "id" : "a3b5b53c-af1b-408c-8f40-85def1d2878a",
        "parentId" : "2a493c5f-30e2-456a-8a6a-7757dc1bc7d2",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "And you got a response https://github.com/kubernetes-client/python/issues/977#issuecomment-580009695 - is that workable?\r\n\r\nAt the very least, can you put a doc comment here linking to the issue in the kube repo please?",
        "createdAt" : "2020-02-04T09:34:30Z",
        "updatedAt" : "2020-02-11T16:38:00Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "b782e72f-e50b-4ae9-bf61-767a345118e8",
        "parentId" : "2a493c5f-30e2-456a-8a6a-7757dc1bc7d2",
        "authorId" : "ca740401-a2d3-4a1e-ba4a-88c55e2b236f",
        "body" : "Unfortunately that solution is for modifying objects returned from calling the client, as opposed to going directly from YAML -> client object. The [public deserialize method](https://github.com/kubernetes-client/python/blob/5181d2389eacd92fa0f72237da87286ed0d45a3e/kubernetes/client/api_client.py#L226) deserializes from a RESTResponse object and calls the [private deserialize method](https://github.com/kubernetes-client/python/blob/5181d2389eacd92fa0f72237da87286ed0d45a3e/kubernetes/client/api_client.py#L246) that we need. I've added to the doc string and referenced back to the issue on the kubernetes client.",
        "createdAt" : "2020-02-04T20:51:54Z",
        "updatedAt" : "2020-02-11T16:38:00Z",
        "lastEditedBy" : "ca740401-a2d3-4a1e-ba4a-88c55e2b236f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce2c38b32338ba7e29b86b1a9d7a548bac4d1e51",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +449,453 @@\n        # pylint: disable=protected-access\n        return api_client._ApiClient__deserialize_model(pod, k8s.V1Pod)\n\n    @staticmethod"
  },
  {
    "id" : "716057b9-7ccd-4a25-8b89-5eed10980a68",
    "prId" : 7114,
    "prUrl" : "https://github.com/apache/airflow/pull/7114#pullrequestreview-660851699",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "357fd97c-0fa1-4092-ac57-894ebe37ff1a",
        "parentId" : null,
        "authorId" : "176691dd-1938-4ba6-98ac-5935fb7fba6c",
        "body" : "Why was this changed from the 8 character long string it was before (see old line 133) to this new 32 character long string?",
        "createdAt" : "2021-05-17T11:21:55Z",
        "updatedAt" : "2021-05-17T11:21:56Z",
        "lastEditedBy" : "176691dd-1938-4ba6-98ac-5935fb7fba6c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0767d5e23cb50c4e184ef74a0d5592dda06468a3",
    "line" : 392,
    "diffHunk" : "@@ -1,1 +466,470 @@            return None\n\n        safe_uuid = uuid.uuid4().hex\n        safe_pod_id = dag_id[:MAX_POD_ID_LEN - len(safe_uuid) - 1] + \"-\" + safe_uuid\n"
  },
  {
    "id" : "878ae464-1129-47b0-9826-06d0eacc501b",
    "prId" : 10266,
    "prUrl" : "https://github.com/apache/airflow/pull/10266#pullrequestreview-465090080",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac0a7bd5-f15f-4ce4-8905-87b88ac994e1",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Can you add a single line description of this function please",
        "createdAt" : "2020-08-11T13:56:29Z",
        "updatedAt" : "2020-08-11T14:49:32Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf95650422d5d8e13314c03adb0e8d216ac6a8ff",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +365,369 @@    @staticmethod\n    def reconcile_metadata(base_meta, client_meta):\n        \"\"\"\n        Merge kubernetes Metadata objects\n        :param base_meta: has the base attributes which are overwritten if they exist"
  },
  {
    "id" : "0f0a1f71-3506-49e8-be07-ccd1533e39d9",
    "prId" : 10393,
    "prUrl" : "https://github.com/apache/airflow/pull/10393#pullrequestreview-490635012",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a44c354a-5a1a-4dad-a064-0c5d9bc9f354",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Can/should we issue a FutureDeprecationWarning here, so that we can remove this code path in 2.1/2.2?",
        "createdAt" : "2020-09-17T14:06:31Z",
        "updatedAt" : "2020-09-17T14:11:44Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "1840753f-214e-4869-8df6-348de825da66",
        "parentId" : "a44c354a-5a1a-4dad-a064-0c5d9bc9f354",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "@ashb there is a future deprecation https://github.com/apache/airflow/pull/10393/files#diff-868ed785b2a336f20cb6a577dde2502aR198-R201",
        "createdAt" : "2020-09-17T14:07:32Z",
        "updatedAt" : "2020-09-17T14:11:44Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      },
      {
        "id" : "56bdcbc6-a1a3-48be-b148-fa1e94b4fbc6",
        "parentId" : "a44c354a-5a1a-4dad-a064-0c5d9bc9f354",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Oh, you issue a warning a few lines up (from the previous PR. right?)",
        "createdAt" : "2020-09-17T14:07:39Z",
        "updatedAt" : "2020-09-17T14:11:44Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "c1cbdcc3-6c8a-404a-8a2a-86ae421759a5",
        "parentId" : "a44c354a-5a1a-4dad-a064-0c5d9bc9f354",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "Yep :)",
        "createdAt" : "2020-09-17T14:08:32Z",
        "updatedAt" : "2020-09-17T14:11:44Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a99438c1e1e3b7e7770d1f929dd5217b622d3d04",
    "line" : 257,
    "diffHunk" : "@@ -1,1 +241,245 @@                )\n        namespaced['resources'] = resources\n        return PodGeneratorDeprecated(**namespaced).gen_pod()\n\n    @staticmethod"
  },
  {
    "id" : "69ae6f53-0c70-44ea-9991-f886705713ed",
    "prId" : 10756,
    "prUrl" : "https://github.com/apache/airflow/pull/10756#pullrequestreview-483655865",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cc69538-58c6-4278-93e7-19eef8bfa868",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "The only thing that would have existed in dict under `KubernetesExecutor` is the `executor_config`, right?\r\n\r\nJust double-checking to verify that we don't raise deprecation warning for other cases",
        "createdAt" : "2020-09-07T16:13:35Z",
        "updatedAt" : "2020-09-08T22:08:58Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "1219f7ed-29f4-4965-9408-ba06de37e7a3",
        "parentId" : "6cc69538-58c6-4278-93e7-19eef8bfa868",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "@kaxil yes, if the user uses the \"KubernetesExecutor\" key for the dict it will work exactly like the legacy system.",
        "createdAt" : "2020-09-07T16:21:49Z",
        "updatedAt" : "2020-09-08T22:08:58Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      }
    ],
    "commit" : "2647f57059b26836c14dc2d2f60b844f8020588b",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +330,334 @@            return None\n\n        k8s_legacy_object = obj.get(\"KubernetesExecutor\", None)\n        k8s_object = obj.get(\"pod_override\", None)\n"
  },
  {
    "id" : "dce195c0-ed8a-44bd-936f-b6708ad997ec",
    "prId" : 12766,
    "prUrl" : "https://github.com/apache/airflow/pull/12766#pullrequestreview-544295687",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77ede9ed-0a94-4060-9272-5d207f194a73",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "I think pod generator should have options for command and args.",
        "createdAt" : "2020-12-03T10:51:29Z",
        "updatedAt" : "2020-12-07T18:42:45Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "ebbfa4ee-99b9-4dd7-8856-371d195c5ffa",
        "parentId" : "77ede9ed-0a94-4060-9272-5d207f194a73",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "The PodGenerator is only used internally by the KubernetesExecutor, we don't discuss it anywhere in the airflow documentation. It's not advertised as a part of the Airflow API.",
        "createdAt" : "2020-12-03T16:22:27Z",
        "updatedAt" : "2020-12-07T18:42:45Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      },
      {
        "id" : "9f96cf43-e779-4365-ab97-0ccb150f6f01",
        "parentId" : "77ede9ed-0a94-4060-9272-5d207f194a73",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Oh, it's not used in mutation hook anymore. Cool, this is fine then",
        "createdAt" : "2020-12-03T19:14:21Z",
        "updatedAt" : "2020-12-07T18:42:45Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6425981797dee04aedf521f13e4960f1f149197",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +352,356 @@        kube_image: str,\n        date: datetime.datetime,\n        args: List[str],\n        pod_override_object: Optional[k8s.V1Pod],\n        base_worker_pod: k8s.V1Pod,"
  },
  {
    "id" : "17409b2a-b472-4064-a044-9a07ab7af229",
    "prId" : 14090,
    "prUrl" : "https://github.com/apache/airflow/pull/14090#pullrequestreview-584257494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1aeda636-e29d-45aa-89fc-5ac23a4da01c",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Looks good but can you add a test case please in https://github.com/apache/airflow/blob/v1-10-stable/tests/kubernetes/test_pod_generator.py?\r\n\r\nSame as https://github.com/apache/airflow/blob/v1-10-stable/tests/kubernetes/test_pod_generator.py#L636-L696 probably",
        "createdAt" : "2021-02-05T11:36:15Z",
        "updatedAt" : "2021-02-21T12:09:28Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d2cf25295f00b8f874a3bafd812860e1ae8b001",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +507,511 @@            'mount_path')\n        client_container = extend_object_field(base_container, client_container, 'env')\n        client_container = extend_object_field(base_container, client_container, 'env_from', None)\n        client_container = extend_object_field(base_container, client_container, 'ports')\n        client_container = extend_object_field(base_container, client_container, 'volume_devices')"
  }
]