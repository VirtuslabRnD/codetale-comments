[
  {
    "id" : "5f9498ee-c06a-4ee3-8793-37e3c13c1d53",
    "prId" : 5631,
    "prUrl" : "https://github.com/apache/airflow/pull/5631#pullrequestreview-267457531",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6325ed1-ba4b-43db-a3c9-22f51a5a1d7d",
        "parentId" : null,
        "authorId" : "9a5e8348-c065-464c-a412-d4070cbed6ea",
        "body" : "If the default is `None`, this should be `Optional[Dict[str, str]]`.",
        "createdAt" : "2019-07-27T04:55:41Z",
        "updatedAt" : "2019-07-29T07:10:07Z",
        "lastEditedBy" : "9a5e8348-c065-464c-a412-d4070cbed6ea",
        "tags" : [
        ]
      },
      {
        "id" : "6ea23f55-bf43-4bce-bdef-1b1955cf0382",
        "parentId" : "d6325ed1-ba4b-43db-a3c9-22f51a5a1d7d",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This is not required. mypy is smart enought and it can guess. Without this, the code looks clearer. There is also no repeated information.\r\nReference: https://mypy.readthedocs.io/en/stable/command_line.html#none-and-optional-handling",
        "createdAt" : "2019-07-27T06:05:17Z",
        "updatedAt" : "2019-07-29T07:10:07Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c9a3130580036e35f06d0ad6f61ca21d815317a",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +73,77 @@            self,\n            bash_command: str,\n            env: Dict[str, str] = None,\n            output_encoding: str = 'utf-8',\n            *args, **kwargs) -> None:"
  },
  {
    "id" : "a1dd298c-ebd4-4ecd-9cfc-36b8612d5018",
    "prId" : 6541,
    "prUrl" : "https://github.com/apache/airflow/pull/6541#pullrequestreview-315000440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba8e3c84-35b8-4605-b508-2e64e5cb9009",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I also updated this condition \r\n\r\n> Explicit is better than implicit.\r\nhttps://www.python.org/dev/peps/pep-0020/\r\n",
        "createdAt" : "2019-11-11T16:13:54Z",
        "updatedAt" : "2019-11-11T18:28:59Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a7db180b7b8cf140047de5c94e375bfc449c130",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +135,139 @@            self.log.info('Command exited with return code %s', sub_process.returncode)\n\n            if sub_process.returncode != 0:\n                raise AirflowException('Bash command failed. The command returned a non-zero exit code.')\n"
  },
  {
    "id" : "a9f6f15a-c81d-4582-8233-bf6f21bc635b",
    "prId" : 6541,
    "prUrl" : "https://github.com/apache/airflow/pull/6541#pullrequestreview-315000946",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5e3837a-4d05-4507-8e02-0eef9bf36b46",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I added a sentence, because the reason may not be understandable for every person.",
        "createdAt" : "2019-11-11T16:14:42Z",
        "updatedAt" : "2019-11-11T18:28:59Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a7db180b7b8cf140047de5c94e375bfc449c130",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +136,140 @@\n            if sub_process.returncode != 0:\n                raise AirflowException('Bash command failed. The command returned a non-zero exit code.')\n\n        return line"
  },
  {
    "id" : "f11edd25-cf29-4098-95b5-52c601828413",
    "prId" : 6541,
    "prUrl" : "https://github.com/apache/airflow/pull/6541#pullrequestreview-315002016",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04e034a3-99e3-410e-b676-ada523e01690",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I changed the logging method, because data should be passed in arguments, because then it look better in the console - different a color.",
        "createdAt" : "2019-11-11T16:16:20Z",
        "updatedAt" : "2019-11-11T18:28:59Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a7db180b7b8cf140047de5c94e375bfc449c130",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +129,133 @@            for raw_line in iter(sub_process.stdout.readline, b''):\n                line = raw_line.decode(self.output_encoding).rstrip()\n                self.log.info(\"%s\", line)\n\n            sub_process.wait()"
  },
  {
    "id" : "78a0352c-7aaa-465e-84f8-98a6fdd4ab61",
    "prId" : 13423,
    "prUrl" : "https://github.com/apache/airflow/pull/13423#pullrequestreview-563424554",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0dc195f-ae0a-43d2-a32e-8e0c044a5acf",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Possibly a breaking change, but I'm leaning towards believing that no one used those objects...",
        "createdAt" : "2021-01-04T07:34:28Z",
        "updatedAt" : "2021-02-11T19:50:32Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "58ad096f-7948-47bd-bbc6-237ed6b4d738",
        "parentId" : "a0dc195f-ae0a-43d2-a32e-8e0c044a5acf",
        "authorId" : "a1587925-b1c0-4469-a592-51497b162e71",
        "body" : "yes, totally possible.\r\n\r\nwe could let them remain and add a deprecation warning.\r\n\r\ni am not sure --  is there a special syntax we have for \"this must be removed at this release\", like to an automated check for deprecated removals?\r\n\r\nwhatever you suggest ",
        "createdAt" : "2021-01-04T07:36:56Z",
        "updatedAt" : "2021-02-11T19:50:32Z",
        "lastEditedBy" : "a1587925-b1c0-4469-a592-51497b162e71",
        "tags" : [
        ]
      },
      {
        "id" : "e20206d0-2e69-4dfb-bdf0-2fba0fe441ba",
        "parentId" : "a0dc195f-ae0a-43d2-a32e-8e0c044a5acf",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "We usually create an issue with a milestone like `Airflow 2.1` and once releasing we are about to release we try to solve all of those. Am I correct @potiuk @kaxil or do we do something else?",
        "createdAt" : "2021-01-04T07:41:42Z",
        "updatedAt" : "2021-02-11T19:50:32Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "8cd64f6a-8b08-475c-9b9a-bb71e067eea6",
        "parentId" : "a0dc195f-ae0a-43d2-a32e-8e0c044a5acf",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "3.0 will be the next time we can remove anything (which will probably by 6-12 months timeframe -- likely 3.0 will be a \"we've just removed deprecated things\" rather than the huge release that 2.0 was)",
        "createdAt" : "2021-01-04T14:57:49Z",
        "updatedAt" : "2021-02-11T19:50:32Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "09e41ead-a48b-494a-8f08-2f005f26719e",
        "parentId" : "a0dc195f-ae0a-43d2-a32e-8e0c044a5acf",
        "authorId" : "a1587925-b1c0-4469-a592-51497b162e71",
        "body" : "ok so sounds like what I need to do is put these imports back and add deprecation warning for 3.0 for them\r\n",
        "createdAt" : "2021-01-05T16:51:34Z",
        "updatedAt" : "2021-02-11T19:50:32Z",
        "lastEditedBy" : "a1587925-b1c0-4469-a592-51497b162e71",
        "tags" : [
        ]
      },
      {
        "id" : "f7417dc0-3164-47e4-95e9-f74246d3ec2e",
        "parentId" : "a0dc195f-ae0a-43d2-a32e-8e0c044a5acf",
        "authorId" : "a1587925-b1c0-4469-a592-51497b162e71",
        "body" : "@ashb @turbaszek are you sure these imports really need to be preserved?\r\n\r\nyou could make the same argument about [these lines](https://github.com/apache/airflow/pull/13423/files#diff-912cc49726a411fd88f68b771c1de66996acd9b68c7e0e6b2e0caa7d8b23a188L21-L23).\r\n\r\nor any time you remove an import from a module\r\n\r\nusers probably shouldn't be importing Popen from `bash_operator` anyway... WDYT?\r\n\r\nif you think these left in, with deprecation warning, please also comment with guidance on the same issue for `airflow.operators.bash`\r\n\r\nI've left it as is for now",
        "createdAt" : "2021-01-07T05:33:32Z",
        "updatedAt" : "2021-02-11T19:50:32Z",
        "lastEditedBy" : "a1587925-b1c0-4469-a592-51497b162e71",
        "tags" : [
        ]
      },
      {
        "id" : "bcef72fd-952a-40f0-a1e3-fb76bb8e75a1",
        "parentId" : "a0dc195f-ae0a-43d2-a32e-8e0c044a5acf",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "This is probably one of the cases where removing this is _technically_ breaking, but people are unlikely to have used it, and it was never documented anyway, so is probably fine.\r\n\r\nProbably.",
        "createdAt" : "2021-01-07T11:48:27Z",
        "updatedAt" : "2021-02-11T19:50:32Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "08b437810c440b0a017e9153669a5f1246c5af0a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +21,25 @@\n# pylint: disable=unused-import\nfrom airflow.operators.bash import BashOperator  # noqa\n\nwarnings.warn("
  }
]