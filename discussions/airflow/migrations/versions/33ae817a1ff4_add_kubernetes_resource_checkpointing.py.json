[
  {
    "id" : "084b4827-e94d-42c8-b0c9-84f7d9011b2e",
    "prId" : 5786,
    "prUrl" : "https://github.com/apache/airflow/pull/5786#pullrequestreview-282686233",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee522a42-92af-46cd-836e-cd4e20f20abf",
        "parentId" : null,
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "That didn't quite work - there are still changes.",
        "createdAt" : "2019-08-30T07:16:32Z",
        "updatedAt" : "2019-09-17T09:54:55Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "409cf00d-4ef0-4e36-bc4b-a6a0df69009d",
        "parentId" : "ee522a42-92af-46cd-836e-cd4e20f20abf",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Yeah. The conditions were actually wrong so I fixed them :). \r\n\r\nThe \"in\" operator for strings tests for substring match:\r\n```\r\nFor the string and bytes types, x in y is True if and only if x is a substring of y. An equivalent test is y.find(x) != -1. Empty strings are always considered to be a substring of any other string, so \"\" in \"abc\" will return True.\r\n```\r\n\r\nThe original condition `conn.dialect.name in (\"mysql\")` is equivalent to `conn.dialect.name in \"mysql\"` - the parenthesis are superfluous and they suggest testing `in` against a tuple. I suspect that the original test was actually with the tuple originally (\"mysql\", \"mssql\") and someone split the if to mysql/mssql later on but did not notice that the tuple was removed along the way.\r\n\r\nGood test in this case would have been `conn.dialect.name in (\"mysql\",)` (note the comma), but because it is so easy miss the comma and it's not at all obvious, I prefer matching against set rather than tuple (there is no way to make similar mistake in set) - that's why I modified it to use sets in both cases.\r\n\r\nIt was working fine before - of course - as substrings tested were not ambiguous across different dialects but nevertheless, I think it's worth to fix it (but It would be too much overhead to create a separate issue/commit just to fix those). \r\n\r\nWhat do you think @feluelle ?\r\n\r\n",
        "createdAt" : "2019-09-02T13:57:12Z",
        "updatedAt" : "2019-09-17T09:54:55Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "6a8ae6d9-4850-4df7-8897-c67b2d9ee533",
        "parentId" : "ee522a42-92af-46cd-836e-cd4e20f20abf",
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "Agree with you. I am fine with changing this if it fixes an issue.\r\n\r\nBut wouldn't that mean that every time we are re-running alembic we need to make this change? (sorry, haven't looked into alembic at all)\r\nWhat gets actually auto generated?",
        "createdAt" : "2019-09-02T16:34:14Z",
        "updatedAt" : "2019-09-17T09:54:55Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "da4d1ba2-db08-43e6-99ee-45b782b55a22",
        "parentId" : "ee522a42-92af-46cd-836e-cd4e20f20abf",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I think it was manually modified after it was generated. Which is quite typical for those kind of scripts/\r\n\r\nThe migration scripts from Alembic are only generated once and intended to be slightly modified - when you add/modify existing model. This is typical case in alembic (similarly in Django's ORM) that it is \"mostly generated\". After generating such migration script you modify it manually to account for different dialects or some exceptional cases, data migration etc.  and only after that you commit such scripts (and possibly modify them later if you need to add some fixes in the future). \r\n\r\nSo I think we are perfectly fine.",
        "createdAt" : "2019-09-02T16:57:04Z",
        "updatedAt" : "2019-09-17T09:54:55Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "fc5b1348-22e9-44ac-b7c0-395143dc07f0",
        "parentId" : "ee522a42-92af-46cd-836e-cd4e20f20abf",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "In this particular case my \"guess\" was right: \r\n\r\nThe \"in\" condition was manually added in this commit when mssql support was added: https://github.com/apache/airflow/commit/d03cc1784b3bb0d33dfd62d451f495144f7b4af7\r\n\r\nIt was added as tuple in another file: and then limited to mssql only with tuple's comma lost along the way :)\r\n",
        "createdAt" : "2019-09-02T17:03:49Z",
        "updatedAt" : "2019-09-17T09:54:55Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "35110663-c78e-4bd0-9375-f9b5882206a8",
        "parentId" : "ee522a42-92af-46cd-836e-cd4e20f20abf",
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "Got it. Thank you very much for the explanation. :)\r\n\r\nSo to me it looks ready to be üö¢ ped now.",
        "createdAt" : "2019-09-02T17:21:03Z",
        "updatedAt" : "2019-09-17T09:54:55Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "9741cf1b-6b1a-409e-bd28-1b6bc4ec6cee",
        "parentId" : "ee522a42-92af-46cd-836e-cd4e20f20abf",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "üëç Anyone cares for an approval :) ?",
        "createdAt" : "2019-09-02T18:32:41Z",
        "updatedAt" : "2019-09-17T09:54:55Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "eee668769685024817078e2894ff9971f2ccb011",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +45,49 @@\n    # alembic creates an invalid SQL for mssql and mysql dialects\n    if conn.dialect.name in {\"mysql\"}:\n        columns_and_constraints.append(\n            sa.CheckConstraint(\"one_row_id<>0\", name=\"kube_resource_version_one_row_id\")"
  }
]