[
  {
    "id" : "65c60c5e-d445-4cd0-9abb-b17784fc0d6a",
    "prId" : 6915,
    "prUrl" : "https://github.com/apache/airflow/pull/6915#pullrequestreview-336820655",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61d012b7-5ba6-47f6-8dbb-344f7fc55f81",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Can you use Connection.get_uri method here?",
        "createdAt" : "2019-12-27T16:52:49Z",
        "updatedAt" : "2019-12-27T16:52:49Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "4adcc6a4a7ec30cdd6228aca3da17e216f039cec",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +84,88 @@            msg = msg.format(conn_id=new_conn.conn_id,\n                             uri=args.conn_uri or\n                             urlunparse((args.conn_type,\n                                         '{login}:{password}@{host}:{port}'\n                                             .format(login=args.conn_login or '',"
  },
  {
    "id" : "30fe7ea3-25de-49a5-8c0c-7e8a914c24e7",
    "prId" : 10081,
    "prUrl" : "https://github.com/apache/airflow/pull/10081#pullrequestreview-462323212",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef4cb501-2773-4e66-bc91-c7e31d144033",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I think it is worth giving the option to choose the format with the additional --format parameter. This will overwrite the value detected based on the file name.",
        "createdAt" : "2020-08-05T18:53:06Z",
        "updatedAt" : "2020-08-07T07:29:52Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "7693c712-3258-4da3-96ee-a9b26865e37f",
        "parentId" : "ef4cb501-2773-4e66-bc91-c7e31d144033",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Users may not have an extension if exporting to a temporary file - `mktemp`.\r\n```bash\r\nTMP_FILE=\"$(mktemp)\"\r\nairflow connections export \"${TMP_FILE}\" --format=json\r\nscp \"${TMP_FILE}\" mik-laj@yourserver:/home/mik-laj/backup/export-$(hostname)\r\nrm \"${TMP_FILE}\"\r\n```\r\nIs this use case correct for you?",
        "createdAt" : "2020-08-05T19:03:34Z",
        "updatedAt" : "2020-08-07T07:29:52Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "6b197ef5-32fa-4367-aadf-be2d104e5c0d",
        "parentId" : "ef4cb501-2773-4e66-bc91-c7e31d144033",
        "authorId" : "08142c85-ee39-4c93-a31a-84accd3c6bf0",
        "body" : "Yes, Will add this, along with the documentation.",
        "createdAt" : "2020-08-06T09:00:56Z",
        "updatedAt" : "2020-08-07T07:29:52Z",
        "lastEditedBy" : "08142c85-ee39-4c93-a31a-84accd3c6bf0",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f7d6f359fc70891cf50e1bd5da1a917f161b787",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +114,118 @@    with create_session() as session:\n        if _is_stdout(args.file):\n            filetype = default_format\n        elif provided_format is not None:\n            filetype = provided_format"
  },
  {
    "id" : "5e6156df-ddcb-4f38-b087-1e944762756f",
    "prId" : 10269,
    "prUrl" : "https://github.com/apache/airflow/pull/10269#pullrequestreview-464393976",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3c4930e-528a-43ce-bd6a-86a4ebb7dd32",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I love the `yamulate` name :) :heart: ",
        "createdAt" : "2020-08-10T16:36:36Z",
        "updatedAt" : "2020-08-10T16:36:43Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "bccbb6e1e9301e80adab3f964d74fff4677cced9",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +55,59 @@\n\ndef _yamulate_connection(conn: Connection):\n    yaml_data = {\n        'Id': conn.id,"
  },
  {
    "id" : "d5f988bf-a154-4175-bff4-f257d04bd1bb",
    "prId" : 12370,
    "prUrl" : "https://github.com/apache/airflow/pull/12370#pullrequestreview-530602976",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dbefa9b-15ad-4f00-9ed9-7cbafb0c09bc",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "This line and line 200 are not really related to this PR's scope. But fixing them is too minor and maybe not worth creating separate PR for them. So fixing them together here.",
        "createdAt" : "2020-11-14T20:32:27Z",
        "updatedAt" : "2020-11-14T20:58:50Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      }
    ],
    "commit" : "c40ead96a44246024caf04872f20c7fdd272b2ea",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +195,199 @@        missing_args.append('conn-uri or conn-type')\n    if missing_args:\n        msg = f'The following args are required to add a connection: {missing_args!r}'\n        raise SystemExit(msg)\n    if invalid_args:"
  },
  {
    "id" : "2271e1c6-5d3a-496b-93b9-4c279a6b49e6",
    "prId" : 15425,
    "prUrl" : "https://github.com/apache/airflow/pull/15425#pullrequestreview-643385604",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46886288-0bcd-4e99-bc09-415bb357c108",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "What do you think to add this method as a static method to the Connection class - `Connection.from_dict`? I don't think CLI should depend on a backend secret. ",
        "createdAt" : "2021-04-19T15:04:31Z",
        "updatedAt" : "2021-05-09T15:50:19Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "00051be9-9d8b-4518-9160-ef0af6ecdb25",
        "parentId" : "46886288-0bcd-4e99-bc09-415bb357c108",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Ahhh. You don't want to change the visibility of this method, but you are using a different public method. We should therefore still create the `Connection.from_dict` method but as a separate PR.",
        "createdAt" : "2021-04-19T15:58:18Z",
        "updatedAt" : "2021-05-09T15:50:19Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "ba247909-93c5-4198-b5be-3ba9e89f8e6a",
        "parentId" : "46886288-0bcd-4e99-bc09-415bb357c108",
        "authorId" : "06f43467-a53b-42f1-8e01-5cb3e94f545e",
        "body" : "Thanks for taking a look. I can add `Connection.from_dict`.\r\n\r\nFor the implementation, in order to avoid any dependencies on `secrets`, I'll need to move several helper functions. The existing function `load_connections_dict` accepts a filepath and relies on `_parse_secret_file`, which calls `_parse_[json,yaml,env]_file` to read the file contents and deserialize them.\r\n\r\nI can either:\r\n- move all these helper functions outside of `secrets/local_filesystem.py` (if so, into a utils file perhaps)\r\n- duplicate the same functionality in the cli module (seems like a bad idea)\r\n- create the method in the Connection class, but still import from `secrets` (doesn't eliminate the dependency)\r\n\r\nWhat do you have in mind? ",
        "createdAt" : "2021-04-19T16:28:47Z",
        "updatedAt" : "2021-05-09T15:50:19Z",
        "lastEditedBy" : "06f43467-a53b-42f1-8e01-5cb3e94f545e",
        "tags" : [
        ]
      },
      {
        "id" : "cfcfa5bc-04ae-42e8-ae7b-6753695050b8",
        "parentId" : "46886288-0bcd-4e99-bc09-415bb357c108",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Yes. We should avoid dependency on secrets. We already have a lot of recursive imports between various connection modules, secret and others, so creating new modules will cure those situations a bit.\r\n\r\n> move all these helper functions outside of secrets/local_filesystem.py\r\n\r\nI think it is the best solution. ",
        "createdAt" : "2021-04-19T16:36:29Z",
        "updatedAt" : "2021-05-09T15:50:19Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "1fc35af6-db1d-46f7-8391-029e4acf1e8e",
        "parentId" : "46886288-0bcd-4e99-bc09-415bb357c108",
        "authorId" : "06f43467-a53b-42f1-8e01-5cb3e94f545e",
        "body" : "Sounds good, I'll move this logic elsewhere. Do you still want that as a separate PR then or included in this one?",
        "createdAt" : "2021-04-19T18:07:36Z",
        "updatedAt" : "2021-05-09T15:50:19Z",
        "lastEditedBy" : "06f43467-a53b-42f1-8e01-5cb3e94f545e",
        "tags" : [
        ]
      },
      {
        "id" : "9ead9d92-5678-4d2e-8435-cdf96405018e",
        "parentId" : "46886288-0bcd-4e99-bc09-415bb357c108",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "You can do it in this PR. ",
        "createdAt" : "2021-04-19T18:20:47Z",
        "updatedAt" : "2021-05-09T15:50:19Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "dcba3f15-5b48-4b13-ab87-b5f01df5dae6",
        "parentId" : "46886288-0bcd-4e99-bc09-415bb357c108",
        "authorId" : "06f43467-a53b-42f1-8e01-5cb3e94f545e",
        "body" : "This change is now implemented.",
        "createdAt" : "2021-04-23T14:54:20Z",
        "updatedAt" : "2021-05-09T15:50:19Z",
        "lastEditedBy" : "06f43467-a53b-42f1-8e01-5cb3e94f545e",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd2745eac64c0db464c92066253c8f0721dd82ec",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +29,33 @@from airflow.hooks.base import BaseHook\nfrom airflow.models import Connection\nfrom airflow.secrets.local_filesystem import load_connections_dict\nfrom airflow.utils import cli as cli_utils, yaml\nfrom airflow.utils.cli import suppress_logs_and_warning"
  }
]