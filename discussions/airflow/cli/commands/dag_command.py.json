[
  {
    "id" : "88ef07f0-837b-47d9-ba15-03152b781fee",
    "prId" : 6622,
    "prUrl" : "https://github.com/apache/airflow/pull/6622#pullrequestreview-321124880",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8889dbc5-ee66-4a57-8251-065b89e1d824",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Do we need print here? The same exception with message will be rise.",
        "createdAt" : "2019-11-21T09:04:48Z",
        "updatedAt" : "2019-11-21T19:16:52Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "4db9a6ec-d10d-43bd-9869-ab7a3198b96f",
        "parentId" : "8889dbc5-ee66-4a57-8251-065b89e1d824",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Fixed. Raising exceptions is also not the best solution, but it is another problem.",
        "createdAt" : "2019-11-21T19:17:34Z",
        "updatedAt" : "2019-11-21T19:17:34Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "d51fca2fc0b87f48bac57de970d86ac4cdcfd6b5",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +112,116 @@        print(message)\n    except OSError as err:\n        raise AirflowException(err)\n\n"
  },
  {
    "id" : "80d06896-c044-4495-ab77-da3ce5019036",
    "prId" : 6622,
    "prUrl" : "https://github.com/apache/airflow/pull/6622#pullrequestreview-321124907",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1a021f8-e72b-4356-b8f8-0e854c008c78",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Do we need print here? The same exception with message will be rise.",
        "createdAt" : "2019-11-21T09:04:55Z",
        "updatedAt" : "2019-11-21T19:16:52Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "8a3db624-ae2a-417e-bed1-59a09650c6ae",
        "parentId" : "b1a021f8-e72b-4356-b8f8-0e854c008c78",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Fixed. Raising exceptions is also not the best solution, but it is another problem.",
        "createdAt" : "2019-11-21T19:17:37Z",
        "updatedAt" : "2019-11-21T19:17:37Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "d51fca2fc0b87f48bac57de970d86ac4cdcfd6b5",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +131,135 @@            print(message)\n        except OSError as err:\n            raise AirflowException(err)\n    else:\n        print(\"Bail.\")"
  },
  {
    "id" : "c473106f-14ca-4c76-9b8e-8e8f09f6eea4",
    "prId" : 7446,
    "prUrl" : "https://github.com/apache/airflow/pull/7446#pullrequestreview-360248079",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b1a3704-25bd-40fd-ae5b-7b2bd4c8672a",
        "parentId" : null,
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "Does that fix a bug? When would a `dag_id` be `None`? The `dag_id` is required, isn't it?",
        "createdAt" : "2020-02-18T10:19:41Z",
        "updatedAt" : "2020-02-23T11:05:45Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "0201320c-7173-43fd-a268-ce72835a2bfa",
        "parentId" : "1b1a3704-25bd-40fd-ae5b-7b2bd4c8672a",
        "authorId" : "fef3baf4-fb0b-4642-a186-054bce84c319",
        "body" : "No, dag_id is optional parameter in this request. It is requirement of this task. See third point of the task.",
        "createdAt" : "2020-02-18T10:57:57Z",
        "updatedAt" : "2020-02-23T11:05:45Z",
        "lastEditedBy" : "fef3baf4-fb0b-4642-a186-054bce84c319",
        "tags" : [
        ]
      },
      {
        "id" : "648aea98-7e57-45b5-b997-5c4249086dfc",
        "parentId" : "1b1a3704-25bd-40fd-ae5b-7b2bd4c8672a",
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "You are right. üëç ",
        "createdAt" : "2020-02-18T11:01:50Z",
        "updatedAt" : "2020-02-23T11:05:45Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c7d0f24f163cb120d687733b82c164067487a19",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +305,309 @@    dagbag = DagBag()\n\n    if args.dag_id is not None and args.dag_id not in dagbag.dags:\n        error_message = \"Dag id {} not found\".format(args.dag_id)\n        raise AirflowException(error_message)"
  },
  {
    "id" : "61344d13-df02-45d6-8df8-fa0aa42c2cce",
    "prId" : 7490,
    "prUrl" : "https://github.com/apache/airflow/pull/7490#pullrequestreview-372359620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91f64801-09ec-4f78-b00f-fac3601982b5",
        "parentId" : null,
        "authorId" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "body" : "Should be  `--ignore-first-depends-on-past` due to https://github.com/apache/airflow/pull/7148",
        "createdAt" : "2020-03-03T07:44:22Z",
        "updatedAt" : "2020-03-03T07:45:52Z",
        "lastEditedBy" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "tags" : [
        ]
      },
      {
        "id" : "ea9ca9e2-d57e-4ecf-b240-6b87d4ecbacb",
        "parentId" : "91f64801-09ec-4f78-b00f-fac3601982b5",
        "authorId" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "body" : "will submit new PR to correct it.",
        "createdAt" : "2020-03-03T07:47:27Z",
        "updatedAt" : "2020-03-03T07:47:27Z",
        "lastEditedBy" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "tags" : [
        ]
      },
      {
        "id" : "72ca27a6-9687-40cb-bf0b-9f14262ce9cb",
        "parentId" : "91f64801-09ec-4f78-b00f-fac3601982b5",
        "authorId" : "043a640a-ee3d-47fd-88b0-2baa1fcf9a4b",
        "body" : "thanks.",
        "createdAt" : "2020-03-10T22:16:43Z",
        "updatedAt" : "2020-03-10T22:16:43Z",
        "lastEditedBy" : "043a640a-ee3d-47fd-88b0-2baa1fcf9a4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f81e7a902567b0ff5748bf41a4a46b6136f5f343",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +69,73 @@\n    import warnings\n    warnings.warn('--ignore_first_depends_on_past is deprecated as the value is always set to True',\n                  category=PendingDeprecationWarning)\n"
  },
  {
    "id" : "cf4a542b-5dd9-4c57-89e3-c05881a0e4ca",
    "prId" : 9824,
    "prUrl" : "https://github.com/apache/airflow/pull/9824#pullrequestreview-449181046",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b234594-ff20-4c72-97e4-6682e051bb0d",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Do I correctly understand that previously the default value `State.RUNNING`? If yes then we should add note in UPDATING.md.",
        "createdAt" : "2020-07-15T08:36:52Z",
        "updatedAt" : "2020-07-15T17:31:52Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "03a72f9e-cb4f-4abb-9a93-432cb1c93e28",
        "parentId" : "1b234594-ff20-4c72-97e4-6682e051bb0d",
        "authorId" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "body" : "The backfill experience from the user side should be almost the same. If user backfill with `--reset-dagruns`, it will first clear the DagRun (setting the state to None) then the backfill scheduler would set the state to `RUNNING`.",
        "createdAt" : "2020-07-15T17:31:35Z",
        "updatedAt" : "2020-07-15T17:33:40Z",
        "lastEditedBy" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e6c807bf36df55c712dd9f48aed28ebffba6340",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +125,129 @@                confirm_prompt=not args.yes,\n                include_subdags=True,\n                dag_run_state=State.NONE,\n            )\n"
  },
  {
    "id" : "1132037f-20fa-474e-b8b7-ea6410c8f67a",
    "prId" : 10677,
    "prUrl" : "https://github.com/apache/airflow/pull/10677#pullrequestreview-482210441",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af7c27dd-78d3-4452-a42e-567ae709a3f4",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This is a command that is intended for the end user. Do you think it's worth adding a friendly message that will be displayed when Kubernetes is not installed or not configured?",
        "createdAt" : "2020-09-03T20:55:16Z",
        "updatedAt" : "2020-09-04T00:30:03Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "41902c3c-5e7e-4715-a25b-044e2f0782f5",
        "parentId" : "af7c27dd-78d3-4452-a42e-567ae709a3f4",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "We have a similar check for Celery.\r\n<img width=\"1247\" alt=\"Screenshot 2020-09-03 at 23 10 08\" src=\"https://user-images.githubusercontent.com/12058428/92167409-a14e5280-ee3a-11ea-85f0-6f7059b9a994.png\">\r\n",
        "createdAt" : "2020-09-03T21:10:22Z",
        "updatedAt" : "2020-09-04T00:30:03Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "db743656-3cda-4b4f-bd12-5a047a8972c8",
        "parentId" : "af7c27dd-78d3-4452-a42e-567ae709a3f4",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "@mik-laj good idea will implement. ",
        "createdAt" : "2020-09-03T21:19:19Z",
        "updatedAt" : "2020-09-04T00:30:03Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      }
    ],
    "commit" : "da9ee8902cde173d0f379116b9956db487172cb0",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +385,389 @@    \"\"\"Generates yaml files for each task in the DAG. Used for testing output of KubernetesExecutor\"\"\"\n\n    from kubernetes.client.api_client import ApiClient\n\n    from airflow.executors.kubernetes_executor import AirflowKubernetesScheduler, KubeConfig"
  }
]