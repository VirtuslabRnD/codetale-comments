[
  {
    "id" : "8dd3722f-a061-4997-8d5a-5eeeebe7e445",
    "prId" : 8290,
    "prUrl" : "https://github.com/apache/airflow/pull/8290#pullrequestreview-392851419",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5db9da12-f6fd-48e5-aca0-76afb08ab31c",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Should we use `platform.machine().lower()` as fallback value in `get`? It's probably better than None",
        "createdAt" : "2020-04-14T08:05:52Z",
        "updatedAt" : "2020-04-16T07:16:32Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "fae965b6-561f-4de3-8e5c-a81596b78af4",
        "parentId" : "5db9da12-f6fd-48e5-aca0-76afb08ab31c",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I wanted this function to return only constants that are defined. Other results are erroneous and we should improve the function so that it returns correct values rather than random values from the code's point of view. It is worth adding that the detailed information you are asking for is already displayed on the screen.\r\n```\r\nPlatform: [Mac OS, x86_64] uname_result(system='Darwin', node='Kamils-MacBook-Pro.local', release='19.4.0', version='Darwin Kernel Version 19.4.0: Wed Mar  4 22:28:40 PST 2020; root:xnu-6153.101.6~15/RELEASE_X86_64', machine='x86_64', processor='i386')\r\n```\r\n```\r\nPlatform: [Linux, x86_64] uname_result(system='Linux', node='eeefbb427a9c', release='4.19.76-linuxkit', version='#1 SMP Thu Oct 17 19:31:58 UTC 2019', machine='x86_64', processor='')\r\n```",
        "createdAt" : "2020-04-14T08:18:16Z",
        "updatedAt" : "2020-04-16T07:16:32Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "adcd4e25-b30e-42c6-a912-6aa2362d1662",
        "parentId" : "5db9da12-f6fd-48e5-aca0-76afb08ab31c",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "And we don't display None. Missing values is handled in ``__str__``. https://github.com/apache/airflow/pull/8290/files#diff-1877860355e4eb978a17b0b48b6ba073R178",
        "createdAt" : "2020-04-14T08:40:26Z",
        "updatedAt" : "2020-04-16T07:16:32Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "8f22ad70-55f7-444c-a2af-7b32aa07de7f",
        "parentId" : "5db9da12-f6fd-48e5-aca0-76afb08ab31c",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Yeah. Since we have all the values printed directly, having fixed set of values in here is good for any kind of automation.",
        "createdAt" : "2020-04-14T11:50:22Z",
        "updatedAt" : "2020-04-16T07:16:32Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "09fc038fa15cc157b0f154f8299a46d74d39f4d4",
    "line" : 158,
    "diffHunk" : "@@ -1,1 +156,160 @@    def get_current():\n        \"\"\"Get architecture\"\"\"\n        return _MACHINE_TO_ARCHITECTURE.get(platform.machine().lower())\n\n"
  },
  {
    "id" : "40781acd-c5e9-44a4-aeff-804cdd26f93a",
    "prId" : 8290,
    "prUrl" : "https://github.com/apache/airflow/pull/8290#pullrequestreview-392849218",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc12c838-543d-4e3a-97af-6fb853191238",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This option is crucial for me. Many people do not understand how Python modules are loaded. Python really [tries hard to intelligently](https://stackoverflow.com/questions/897792/where-is-pythons-sys-path-initialized-from/38403654#38403654) set sys.path. Additionally, Airflow modifies the state of this variable, so determining the content of this variable is very difficult.",
        "createdAt" : "2020-04-14T08:44:38Z",
        "updatedAt" : "2020-04-16T07:16:32Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "107602c7-b1a4-4c83-a6a1-94a00deb1273",
        "parentId" : "fc12c838-543d-4e3a-97af-6fb853191238",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I really like the considerations to add all anonymisations. ",
        "createdAt" : "2020-04-14T11:46:53Z",
        "updatedAt" : "2020-04-16T07:16:32Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "09fc038fa15cc157b0f154f8299a46d74d39f4d4",
    "line" : 268,
    "diffHunk" : "@@ -1,1 +266,270 @@                Airflow Home: [{airflow_home}]\n                System PATH: [{system_path}]\n                Python PATH: [{python_path}]\n                airflow on PATH: [{airflow_on_path}]\n                \"\"\""
  },
  {
    "id" : "10bc084a-e8ff-4fe7-9f59-115ab40bb975",
    "prId" : 8290,
    "prUrl" : "https://github.com/apache/airflow/pull/8290#pullrequestreview-393111766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ac24076-26d0-440a-a9d8-9c307f1d0e01",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I think we should force anonymisation when file.io is used.",
        "createdAt" : "2020-04-14T16:05:00Z",
        "updatedAt" : "2020-04-16T07:16:32Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "21719eb1-48be-4e19-84a0-1f7f5c0873f1",
        "parentId" : "6ac24076-26d0-440a-a9d8-9c307f1d0e01",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Agree. I updated the PR. ",
        "createdAt" : "2020-04-14T16:47:07Z",
        "updatedAt" : "2020-04-16T07:16:32Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "09fc038fa15cc157b0f154f8299a46d74d39f4d4",
    "line" : 424,
    "diffHunk" : "@@ -1,1 +422,426 @@    anonymizer = PiiAnonymizer() if args.anonymize or args.file_io else NullAnonymizer()\n    info = AirflowInfo(anonymizer)\n    if args.file_io:\n        _send_report_to_fileio(info)\n    else:"
  },
  {
    "id" : "0593f2c8-aa7a-4f8d-ad20-850a6c755a9c",
    "prId" : 8290,
    "prUrl" : "https://github.com/apache/airflow/pull/8290#pullrequestreview-394535977",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0df3408-4582-4a85-90af-c4e7f5e5d607",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "This should be `from airflow.typing_compat import Protocol`  -- on Py 3.8+ it will use the built in one then.",
        "createdAt" : "2020-04-16T10:31:22Z",
        "updatedAt" : "2020-04-16T10:31:22Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "cd8a65b1-339d-4863-8deb-c5b0ba8cd682",
        "parentId" : "d0df3408-4582-4a85-90af-c4e7f5e5d607",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "https://github.com/python/typing/blob/master/typing_extensions/src_py3/typing_extensions.py#L1116-L1119\r\nI can not see the difference. We can't delete typing_extension anyway. This is still needed in many places.",
        "createdAt" : "2020-04-16T11:20:30Z",
        "updatedAt" : "2020-04-16T11:20:31Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "09fc038fa15cc157b0f154f8299a46d74d39f4d4",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@import requests\nimport tenacity\nfrom typing_extensions import Protocol\n\nfrom airflow import configuration"
  },
  {
    "id" : "c881eaed-eb85-4584-9b6d-88cf39f86fcd",
    "prId" : 8290,
    "prUrl" : "https://github.com/apache/airflow/pull/8290#pullrequestreview-394532355",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35e16812-27ae-44de-9b89-ece23696afd9",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Why did we pick psql, and not the version of psycopg2, say?\r\n\r\n(Airflow never uses `psql`)",
        "createdAt" : "2020-04-16T10:33:34Z",
        "updatedAt" : "2020-04-16T10:33:34Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "b76ebade-b9f0-4a9d-bd25-651abfd7a2ec",
        "parentId" : "35e16812-27ae-44de-9b89-ece23696afd9",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Airflow uses psql here: https://github.com/apache/airflow/blob/master/airflow/cli/commands/db_command.py#L91\r\n\r\nI did not check any version of the Python library. For this, we have another command - `pip freeze`. In the future, we can add selected libraries if necessary.\r\n\r\n",
        "createdAt" : "2020-04-16T11:14:43Z",
        "updatedAt" : "2020-04-16T12:41:16Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "09fc038fa15cc157b0f154f8299a46d74d39f4d4",
    "line" : 337,
    "diffHunk" : "@@ -1,1 +335,339 @@        self.mysql_version = self._get_version([\"mysql\", \"--version\"])\n        self.sqlite3_version = self._get_version([\"sqlite3\", \"--version\"])\n        self.psql_version = self._get_version([\"psql\", \"--version\"])\n\n    def _get_version(self, cmd, grep=None):"
  },
  {
    "id" : "efc065f2-3370-4c83-a67a-5acaf689e9d7",
    "prId" : 12687,
    "prUrl" : "https://github.com/apache/airflow/pull/12687#pullrequestreview-540394011",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01ae7b3b-7595-4d9f-ad17-080d52386998",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "@potiuk , better to have this `version` replaced by `_` given it is not used here? Or if I missed anything? of course it's a nit.",
        "createdAt" : "2020-11-28T15:23:12Z",
        "updatedAt" : "2020-11-28T15:26:25Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "08064bf9-b347-4f9a-ac65-799abdea0660",
        "parentId" : "01ae7b3b-7595-4d9f-ad17-080d52386998",
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "Or `provider['versions'][0]` above should be replaced by `version` from this line?\r\nBased on my understanding from https://github.com/apache/airflow/blob/master/airflow/providers_manager.py#L169-L171\r\n\r\nMay be wrong though of course, and as mentioned above, this is minor",
        "createdAt" : "2020-11-28T15:33:39Z",
        "updatedAt" : "2020-11-28T15:33:40Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "2b8959cd-fae5-4d4e-b103-98ad24f9eac0",
        "parentId" : "01ae7b3b-7595-4d9f-ad17-080d52386998",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "@XD-DENG I'm working on this #12689",
        "createdAt" : "2020-11-28T15:49:15Z",
        "updatedAt" : "2020-11-28T15:54:22Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "f5e9c956-cabb-42a5-9632-a7f3efd57869",
        "parentId" : "01ae7b3b-7595-4d9f-ad17-080d52386998",
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "Great 👍",
        "createdAt" : "2020-11-28T15:51:00Z",
        "updatedAt" : "2020-11-28T15:51:01Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "a585862b-45a5-40f7-b5b5-113e33651057",
        "parentId" : "01ae7b3b-7595-4d9f-ad17-080d52386998",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "@XD-DENG - > True, good eye, We need to still implement final versioning information for providers. And it is simple (but not minor :). I think it is critical before we release 2.0.\r\n\r\nFor now this information might be in three places: we have list of versions in provider.yaml (for documentation purpose) and we have version of currently installed version in the provider package, and (for now) all the versions for all provider packages are hard-coded when released (to 1.0.0b2). This has to be synced-up automatically and we have to describe how to update the versions when you add changes to provider (and whethere to increase majonr/minor/patchlevel for it).  \r\n\r\nAnd it should work in both cases - when we run Airlfow directly from sources during development and unit tests (there provider.yaml files are read) or when we are running in production and provider is installed from the packages (then we read version information from the package). For now I just take versions[0] as this information is available in all cases (but it might be not accurate and for example might not match the version of the package).\r\n\r\nThe issue for that is here: https://github.com/apache/airflow/issues/11425 - which we still need to complete it before 2.0.0rc1 - it is mostly about making sure that package versions in provider.yaml and the version that is currently being released are in sync and that we know how to update it in-the future, separately for each package.\r\n\r\nNot complex but important :).",
        "createdAt" : "2020-11-28T16:56:03Z",
        "updatedAt" : "2020-11-28T16:56:03Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "e77b8735aa0288f809c3d7dc9a70d5e5281a7d2b",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +296,300 @@                'Version': provider['versions'][0],\n            }\n            for version, provider in ProvidersManager().providers.values()\n        ]\n        return tabulate(tabulate_data, headers='keys')"
  },
  {
    "id" : "32d20820-ffc1-4585-adfa-32d28d50ebf6",
    "prId" : 12689,
    "prUrl" : "https://github.com/apache/airflow/pull/12689#pullrequestreview-540406982",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6b816c0-a98c-49b5-a87f-85f10f6f5c0c",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "This simplifies output so users can do `airflow info --file-io | grep https | pbcopy`. Example:\r\n```\r\nUploading report to file.io service.\r\nReport uploaded.\r\nhttps://file.io/xfDPsSSxkFm9\r\n```\r\n",
        "createdAt" : "2020-11-28T17:48:13Z",
        "updatedAt" : "2020-11-28T22:07:28Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "07a2ed5a2ab6edf3fc38c94186fe2204a47f44b7",
    "line" : 304,
    "diffHunk" : "@@ -1,1 +407,411 @@        link = _upload_text_to_fileio(str(info))\n        print(\"Report uploaded.\")\n        print(link)\n        print()\n    except FileIoException as ex:"
  }
]