[
  {
    "id" : "dada817a-7886-4335-9977-d75de17a46eb",
    "prId" : 12466,
    "prUrl" : "https://github.com/apache/airflow/pull/12466#pullrequestreview-540409120",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5fe5dc1f-7ea9-4775-8e7d-40c2e5a6cafc",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Above we have a 'hooks' section that accepts the python-module key. Should we take advantage of this?\r\nhttps://github.com/apache/airflow/blob/fb23e61317c0173f2e4508b28fd966c776739659/airflow/provider.yaml.schema.json#L120-L143",
        "createdAt" : "2020-11-28T15:01:36Z",
        "updatedAt" : "2020-11-29T13:02:51Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "ca3c3740-9bed-4abd-b25a-6841bd738693",
        "parentId" : "5fe5dc1f-7ea9-4775-8e7d-40c2e5a6cafc",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I wanted to explicity call out the Hook classes not modules. I think this will be faster and better than trying to find Hooks and there might some exceptions that we would have to handle (for example Hooks derived from other Hooks). however I wanted to make some check and see how many those exceptions we have and if we find that there are not many, we could indeed try to find all the classes deriving from Base Hook in the \"hook\" modules specified. I will take a look.",
        "createdAt" : "2020-11-28T15:45:34Z",
        "updatedAt" : "2020-11-29T13:02:51Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "9d2ce220-92bc-4d6a-8cda-9855f620037d",
        "parentId" : "5fe5dc1f-7ea9-4775-8e7d-40c2e5a6cafc",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I added a simple check now, and I think we should stay with explicitly listing the hook classes.\r\n\r\nJust checking one amazon provider - those are Amazon's Hooks: none of them were ever \"registered\" in the code as \"connection type to hook\" nor with the customized ConnectionForm, nor in the `connection_form.js'. See below for the list of those. Similarly answering the https://github.com/apache/airflow/pull/12466#pullrequestreview-536502242  question after being a little more informed. I do not think in this case we should require all Hooks to have those extra class fields (at least not now). The use of those fields for Hooks that do not register themselves in the Core is unclear and I think we should not require the connections to have those values. \r\n\r\nMaybe at some point in time we want to extend the API of the BaseHook object and make it obligatory for all Hooks, but I am not sure it is something we should do now. \r\n\r\nIMHO - each provider should be free to choose which Hooks of that provider should be \"registered\" by the core for the usage in the UI and \"connection to hook mapping\". @ashb @mik-laj - WDYT?\r\n\r\nHere are the Amazon hooks which do not require any special \"registering\" in the core (and never did):\r\n\r\n```\r\n'airflow.providers.amazon.aws.hooks.athena.AWSAthenaHook'\r\n'airflow.providers.amazon.aws.hooks.athena.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.aws_dynamodb.AwsDynamoDBHook'\r\n'airflow.providers.amazon.aws.hooks.base_aws.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.base_aws.BaseHook'\r\n'airflow.providers.amazon.aws.hooks.batch_client.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.batch_client.AwsBatchClientHook'\r\n'airflow.providers.amazon.aws.hooks.batch_waiters.AwsBatchClientHook'\r\n'airflow.providers.amazon.aws.hooks.batch_waiters.AwsBatchWaitersHook'\r\n'airflow.providers.amazon.aws.hooks.cloud_formation.AWSCloudFormationHook'\r\n'airflow.providers.amazon.aws.hooks.cloud_formation.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.datasync.AWSDataSyncHook'\r\n'airflow.providers.amazon.aws.hooks.datasync.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.dynamodb.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.dynamodb.AwsDynamoDBHook'\r\n'airflow.providers.amazon.aws.hooks.ec2.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.ec2.EC2Hook'\r\n'airflow.providers.amazon.aws.hooks.elasticache_replication_group.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.elasticache_replication_group.ElastiCacheReplicationGroupHook'\r\n'airflow.providers.amazon.aws.hooks.emr.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.emr.EmrHook'\r\n'airflow.providers.amazon.aws.hooks.glacier.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.glacier.GlacierHook'\r\n'airflow.providers.amazon.aws.hooks.glue.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.glue.AwsGlueJobHook'\r\n'airflow.providers.amazon.aws.hooks.glue_catalog.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.glue_catalog.AwsGlueCatalogHook'\r\n'airflow.providers.amazon.aws.hooks.kinesis.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.kinesis.AwsFirehoseHook'\r\n'airflow.providers.amazon.aws.hooks.lambda_function.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.lambda_function.AwsLambdaHook'\r\n'airflow.providers.amazon.aws.hooks.logs.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.logs.AwsLogsHook'\r\n'airflow.providers.amazon.aws.hooks.redshift.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.redshift.RedshiftHook'\r\n'airflow.providers.amazon.aws.hooks.s3.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.s3.S3Hook'\r\n'airflow.providers.amazon.aws.hooks.sagemaker.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.sagemaker.AwsLogsHook'\r\n'airflow.providers.amazon.aws.hooks.sagemaker.S3Hook'\r\n'airflow.providers.amazon.aws.hooks.sagemaker.SageMakerHook'\r\n'airflow.providers.amazon.aws.hooks.secrets_manager.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.secrets_manager.SecretsManagerHook'\r\n'airflow.providers.amazon.aws.hooks.ses.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.ses.SESHook'\r\n'airflow.providers.amazon.aws.hooks.sns.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.sns.AwsSnsHook'\r\n'airflow.providers.amazon.aws.hooks.sqs.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.sqs.SQSHook'\r\n'airflow.providers.amazon.aws.hooks.step_function.AwsBaseHook'\r\n'airflow.providers.amazon.aws.hooks.step_function.StepFunctionHook'\r\n```\r\n",
        "createdAt" : "2020-11-28T16:39:26Z",
        "updatedAt" : "2020-11-29T13:02:51Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "4e2ae904-ba3a-4573-9dee-efc4edbf9d76",
        "parentId" : "5fe5dc1f-7ea9-4775-8e7d-40c2e5a6cafc",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "That sounds good to me. If we need a new connection in Web UI, we have to load the module and mark it by adding this hook to this field.",
        "createdAt" : "2020-11-28T16:52:33Z",
        "updatedAt" : "2020-11-29T13:02:51Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "0298dda7-d293-461e-a569-453449c8e4c7",
        "parentId" : "5fe5dc1f-7ea9-4775-8e7d-40c2e5a6cafc",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Exactly. I will add a complete documentation on \"Writing your own providerr\" after we merge it all, so that I do not loose time on describing things that might change.",
        "createdAt" : "2020-11-28T16:59:13Z",
        "updatedAt" : "2020-11-29T13:02:51Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "6ec09f5e-8d64-4985-954a-ec2e04c8de9c",
        "parentId" : "5fe5dc1f-7ea9-4775-8e7d-40c2e5a6cafc",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "However, if we have a situation where some classes require a certain set of attributes and others do not, it may be a good opportunity for refacotrization. I guess this one class has two purpose now.",
        "createdAt" : "2020-11-28T17:02:40Z",
        "updatedAt" : "2020-11-29T13:02:51Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "ea0ad4f6-7def-43f1-bf7c-b3274fb1ddc7",
        "parentId" : "5fe5dc1f-7ea9-4775-8e7d-40c2e5a6cafc",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "What's your proposal @mik-laj ? How should we refactor it ? Also remember that it builds on previously existing fields in DBApi (I followed the same convention). \r\n\r\nWe could use Protocol (but it's Python 3.8 https://www.python.org/dev/peps/pep-0544/) - we already backport it from typing_extensions and seems like exactly what we could use. We could have Hook also derive from DiscoverableHook (for example - I have no good name for it) and have all the hooks listed there implement it. \r\n\r\n",
        "createdAt" : "2020-11-28T17:30:08Z",
        "updatedAt" : "2020-11-29T13:02:51Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "c1d13626-ae7d-498f-8db4-a34bdcf6ec50",
        "parentId" : "5fe5dc1f-7ea9-4775-8e7d-40c2e5a6cafc",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "For me, this is good enough for now. In the future, we can divide these classes into two separate classes. We don't really need to do this yet.\r\n\r\nHowever, if you are interested, I can prepare a small snippet of code that does this.\r\n",
        "createdAt" : "2020-11-28T17:50:03Z",
        "updatedAt" : "2020-11-29T13:02:51Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "bd3e149a-8b5d-4ce6-bc04-fd0c9d93dc66",
        "parentId" : "5fe5dc1f-7ea9-4775-8e7d-40c2e5a6cafc",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "We can easily do it as a follow-up change :)",
        "createdAt" : "2020-11-28T18:26:17Z",
        "updatedAt" : "2020-11-29T13:02:51Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "034c19e23cbd96c064866eae0ab99ffa6e33189c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +175,179 @@      }\n    },\n    \"hook-class-names\": {\n      \"type\": \"array\",\n      \"description\": \"Hook class names that provide connection types to core\","
  },
  {
    "id" : "b74f9073-7788-4371-9358-827205223a1b",
    "prId" : 12472,
    "prUrl" : "https://github.com/apache/airflow/pull/12472#pullrequestreview-536722272",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "100c7bcf-027f-4660-9919-f50327a541f6",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "We can define a (basic) pattern at the schema level too:\r\n\r\n```suggestion\r\n      \"type\": \"array\",\r\n       \"uniqueItems\": true,\r\n       \"pattern\": \"^\\.[a-zA-Z]+[a-zA-Z0-9.\\\\-]*\"\r\n```",
        "createdAt" : "2020-11-23T12:10:02Z",
        "updatedAt" : "2020-12-05T10:13:48Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "d8220fcc-82bd-447c-b306-ae49513521ae",
        "parentId" : "100c7bcf-027f-4660-9919-f50327a541f6",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Yeah. I had it initially, there are a few more places where we can add uniqueness/regexp rules. So maybe we should do it as  a separate PR once we merge those. By that time we will have all the values in and tests to check if all our regexps/rules are valid",
        "createdAt" : "2020-11-23T18:03:13Z",
        "updatedAt" : "2020-12-05T10:13:48Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c8080f190b68a329fc3fcb3558063361291187f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +183,187 @@    },\n    \"extra-links\": {\n      \"type\": \"array\",\n      \"description\": \"Class name that provide extra link functionality\",\n      \"items\": {"
  }
]