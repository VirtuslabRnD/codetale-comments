[
  {
    "id" : "401efbf9-bce5-421a-99fd-15a82d551168",
    "prId" : 5407,
    "prUrl" : "https://github.com/apache/airflow/pull/5407#pullrequestreview-256623938",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef8c8022-99b3-47b2-a96b-65ed8afeb037",
        "parentId" : null,
        "authorId" : "adf8e9f1-8893-45f6-a226-8ae39e0dcc10",
        "body" : "I am not familiar with sentry internals, but how will exceptions generated by task instances be contained in the sentry scope that you are opening here?",
        "createdAt" : "2019-06-26T14:20:16Z",
        "updatedAt" : "2019-09-23T18:47:46Z",
        "lastEditedBy" : "adf8e9f1-8893-45f6-a226-8ae39e0dcc10",
        "tags" : [
        ]
      },
      {
        "id" : "86c8707e-10a8-4946-b306-41ba3ac7027b",
        "parentId" : "ef8c8022-99b3-47b2-a96b-65ed8afeb037",
        "authorId" : "c77ea674-2389-428c-8581-221e68ae71f6",
        "body" : "You make a good point. I had it such that the tags would overwrite each other, in the Celery case since each execution was run in a different process, tags would not leak. However, for other executors, tags would leak into other exceptions.",
        "createdAt" : "2019-07-02T01:04:44Z",
        "updatedAt" : "2019-09-23T18:47:46Z",
        "lastEditedBy" : "c77ea674-2389-428c-8581-221e68ae71f6",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe0af33e109c8a0fe4f3090f47003bcfe8d14997",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +100,104 @@        task = task_instance.task\n\n        with configure_scope() as scope:\n            for tag_name in self.SCOPE_TAGS:\n                attribute = getattr(task_instance, tag_name)"
  },
  {
    "id" : "f9d3fe16-a343-41bd-87b2-cf0624ef7d97",
    "prId" : 5407,
    "prUrl" : "https://github.com/apache/airflow/pull/5407#pullrequestreview-257062138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "049acef1-45ac-4a5a-ba9c-63986f3be804",
        "parentId" : null,
        "authorId" : "96361656-32bc-447b-822c-4b0a333ef0f3",
        "body" : "Don't provide `e` here (bare call without arguments) and use a bare `raise` to preserve stacktraces in Python 2",
        "createdAt" : "2019-07-02T18:06:14Z",
        "updatedAt" : "2019-09-23T18:47:46Z",
        "lastEditedBy" : "96361656-32bc-447b-822c-4b0a333ef0f3",
        "tags" : [
        ]
      },
      {
        "id" : "b075ef31-efff-4d29-80f0-b41eb2154d04",
        "parentId" : "049acef1-45ac-4a5a-ba9c-63986f3be804",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "We dropped support for Python. 2 on master.",
        "createdAt" : "2019-07-02T18:08:18Z",
        "updatedAt" : "2019-09-23T18:47:46Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe0af33e109c8a0fe4f3090f47003bcfe8d14997",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +146,150 @@                    self.add_tagging(task_instance)\n                    self.add_breadcrumbs(task_instance, session=session)\n                    capture_exception(e)\n                    raise\n"
  },
  {
    "id" : "1db97756-4666-47d1-9330-8baa17243179",
    "prId" : 5407,
    "prUrl" : "https://github.com/apache/airflow/pull/5407#pullrequestreview-289199775",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c513bab4-7843-4b0d-8058-764b6624602c",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "This function isn't clear to me what it's doing (I'm possibly not that used to Sentry).\r\n\r\nWhy does it take a single task_instance, but then walk over all the task instances of the dag?",
        "createdAt" : "2019-08-29T08:05:27Z",
        "updatedAt" : "2019-09-23T18:47:46Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "7c40f1f7-0519-4106-846a-cba53b6c55cb",
        "parentId" : "c513bab4-7843-4b0d-8058-764b6624602c",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "It's also not clear to me why we want all the completed TIs for a task. \r\n\r\nCan you show where this shows up in Sentry?\r\n\r\nDo we instead here want to look at just the upstrream tasks of this task? Do we actually need more than the DAG_id in the breadcrumb?",
        "createdAt" : "2019-08-29T08:07:45Z",
        "updatedAt" : "2019-09-23T18:47:46Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "a31c6bb4-54f0-425d-99be-b303bff83e68",
        "parentId" : "c513bab4-7843-4b0d-8058-764b6624602c",
        "authorId" : "adf8e9f1-8893-45f6-a226-8ae39e0dcc10",
        "body" : "> It's also not clear to me why we want all the completed TIs for a task.\r\n\r\nIIRC I suggested this. Rationale was that this could help diagnose race condition issues between related tasks.",
        "createdAt" : "2019-08-29T13:19:43Z",
        "updatedAt" : "2019-09-23T18:47:46Z",
        "lastEditedBy" : "adf8e9f1-8893-45f6-a226-8ae39e0dcc10",
        "tags" : [
        ]
      },
      {
        "id" : "997f2292-a173-415e-bedc-3e3c9c87e057",
        "parentId" : "c513bab4-7843-4b0d-8058-764b6624602c",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Okay, that makes some sense. I feel a screen shot or two in the doc might help this.",
        "createdAt" : "2019-09-02T08:21:11Z",
        "updatedAt" : "2019-09-23T18:47:46Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "b9ddf73a-b5ac-450b-aee1-3223cabf2607",
        "parentId" : "c513bab4-7843-4b0d-8058-764b6624602c",
        "authorId" : "c77ea674-2389-428c-8581-221e68ae71f6",
        "body" : "![Breadcrumbs](https://lh4.googleusercontent.com/kcZojgIjMrn1TleiUMkdkkgEJ40l_tvlPlQx81alQu-qEzHYMk9yG1we_ZAlh0tqIR9WD1H7n0HnVX6XoZot=w2688-h1596-rw)\r\nHere is an example of the breadcrumbs in action. They give extra details on the duration of previous and concurrent task instances.",
        "createdAt" : "2019-09-09T18:07:10Z",
        "updatedAt" : "2019-09-23T18:47:46Z",
        "lastEditedBy" : "c77ea674-2389-428c-8581-221e68ae71f6",
        "tags" : [
        ]
      },
      {
        "id" : "9f3c761c-c0e1-4ad7-b300-1e6e540fe27c",
        "parentId" : "c513bab4-7843-4b0d-8058-764b6624602c",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "@tiopi I can't see that image (anymore?)",
        "createdAt" : "2019-09-17T11:42:15Z",
        "updatedAt" : "2019-09-23T18:47:46Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe0af33e109c8a0fe4f3090f47003bcfe8d14997",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +124,128 @@        )\n\n        for ti in task_instances:\n            data = {}\n            for crumb_tag in self.SCOPE_CRUMBS:"
  },
  {
    "id" : "3e52a4f8-330e-4370-b55e-78ce36120229",
    "prId" : 8911,
    "prUrl" : "https://github.com/apache/airflow/pull/8911#pullrequestreview-415074542",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cd7b6a5-b363-4c2d-ba99-e37cd4613b9b",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Can you add this option to reference documentation?\r\nairflow/config_templates/config.yml\r\nhttps://airflow.readthedocs.io/en/latest/configurations-ref.html",
        "createdAt" : "2020-05-19T19:13:41Z",
        "updatedAt" : "2020-07-09T10:17:57Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "0fd46f17-7953-4539-9b5a-ac0369930043",
        "parentId" : "3cd7b6a5-b363-4c2d-ba99-e37cd4613b9b",
        "authorId" : "a4df88ac-b16c-4068-b0d0-e7c013b4e088",
        "body" : "This section has already existed in docs. I update section description in airflow/config_templates/config.yml with info of supporting additional configs from sentry docs.",
        "createdAt" : "2020-05-20T07:48:16Z",
        "updatedAt" : "2020-07-09T10:17:57Z",
        "lastEditedBy" : "a4df88ac-b16c-4068-b0d0-e7c013b4e088",
        "tags" : [
        ]
      }
    ],
    "commit" : "d536f9fbfc2bab74293d9fb56fb383193d4a4c8b",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +93,97 @@\n        dsn = None\n        sentry_config_opts = conf.getsection(\"sentry\") or {}\n        if sentry_config_opts:\n            old_way_dsn = sentry_config_opts.pop(\"sentry_dsn\", None)"
  },
  {
    "id" : "3f977b8f-6115-48f1-a6ad-d80e929707c8",
    "prId" : 8911,
    "prUrl" : "https://github.com/apache/airflow/pull/8911#pullrequestreview-417372742",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "984a0d03-3377-489e-b900-522f6af161e1",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "getsection method returns `dict[str,str]`.  This means that options that are not strings will not work properly.\r\nhttps://github.com/getsentry/sentry-python/blob/464ca8dda09155fcc43dfbb6fa09cf00313bf5b8/sentry_sdk/consts.py#L37\r\nThe following options will works:\r\n```\r\nca_certs\r\ndist\r\ndsn\r\nenvironment\r\nhttp_proxy\r\nhttps_proxy\r\nignore_errors\r\nin_app_exclude\r\nin_app_include\r\nrelease\r\nserver_name\r\nrequest_bodies\r\n```\r\nThe following options will NOT works due to type mismatch:\r\n```\r\nattach_stacktrace\r\nbefore_breadcrumb\r\nbefore_send\r\ndebug\r\ndefault_integrations\r\nintegrations\r\nmax_breadcrumbs\r\npropagate_traces\r\nsample_rate\r\nsend_default_pii\r\nshutdown_timeout\r\ntransport\r\nwith_locals\r\n```\r\nThis can cause very difficult to debug problems. It would be great if we supported more options or if an option is not supported, we would report a user-friendly error message.",
        "createdAt" : "2020-05-23T16:37:29Z",
        "updatedAt" : "2020-07-09T10:17:57Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "74f8acb0-ac6c-40a4-a8cb-a9b9f11ee9e8",
        "parentId" : "984a0d03-3377-489e-b900-522f6af161e1",
        "authorId" : "a4df88ac-b16c-4068-b0d0-e7c013b4e088",
        "body" : "> getsection method returns dict[str,str]\r\n\r\nIt's not quite true. Here (https://github.com/apache/airflow/blob/master/airflow/configuration.py#L422) you can see that code is going through `_section` dict and trying to cast strings to proper type.\r\nBut fair enough it's not working for these props (list, dict and custom type is not supported by getsection):\r\n```\r\nintegrations\r\nin_app_include\r\nin_app_exclude\r\nignore_errors\r\nbefore_breadcrumb\r\nbefore_send\r\ntransport\r\n```\r\nI will add some guard exception for these props.",
        "createdAt" : "2020-05-24T16:26:33Z",
        "updatedAt" : "2020-07-09T10:17:57Z",
        "lastEditedBy" : "a4df88ac-b16c-4068-b0d0-e7c013b4e088",
        "tags" : [
        ]
      }
    ],
    "commit" : "d536f9fbfc2bab74293d9fb56fb383193d4a4c8b",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +93,97 @@\n        dsn = None\n        sentry_config_opts = conf.getsection(\"sentry\") or {}\n        if sentry_config_opts:\n            old_way_dsn = sentry_config_opts.pop(\"sentry_dsn\", None)"
  },
  {
    "id" : "b03bdeb7-e78d-43fe-bf5c-70a95e3c2891",
    "prId" : 10212,
    "prUrl" : "https://github.com/apache/airflow/pull/10212#pullrequestreview-463865452",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1353d7c0-72e3-40dd-84dc-f357dfea2a89",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Love it!",
        "createdAt" : "2020-08-09T11:20:11Z",
        "updatedAt" : "2020-08-09T11:20:11Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c3167dd9e3b6bb9dc7f6064799133ae255cac01",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +60,64 @@Sentry: DummySentry = DummySentry()\nif conf.getboolean(\"sentry\", 'sentry_on', fallback=False):\n    import sentry_sdk\n    # Verify blinker installation\n    from blinker import signal  # noqa: F401 pylint: disable=unused-import"
  }
]