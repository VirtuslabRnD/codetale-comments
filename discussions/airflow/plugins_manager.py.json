[
  {
    "id" : "cfadeb3a-251d-4e24-a377-e26ae2b98214",
    "prId" : 3930,
    "prUrl" : "https://github.com/apache/airflow/pull/3930#pullrequestreview-188672082",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee38f126-9c08-4739-86e7-fbad4d4c8afc",
        "parentId" : null,
        "authorId" : "1aceaa64-1d3b-44c8-b7b9-3404a109eb8d",
        "body" : "Please make sure you also clean import_errors when the a particular plugin is fixed. ",
        "createdAt" : "2018-09-22T06:55:34Z",
        "updatedAt" : "2018-12-07T01:23:28Z",
        "lastEditedBy" : "1aceaa64-1d3b-44c8-b7b9-3404a109eb8d",
        "tags" : [
        ]
      },
      {
        "id" : "bd772438-c27c-46fe-ae30-3a3a67fcb1ca",
        "parentId" : "ee38f126-9c08-4739-86e7-fbad4d4c8afc",
        "authorId" : "2c8254c1-9548-41c5-80dc-f69c6dcf9046",
        "body" : "I believe the only way to get the Airflow UI to reload a broken plugin is to restart the webserver.",
        "createdAt" : "2018-09-27T18:38:27Z",
        "updatedAt" : "2018-12-07T01:23:28Z",
        "lastEditedBy" : "2c8254c1-9548-41c5-80dc-f69c6dcf9046",
        "tags" : [
        ]
      },
      {
        "id" : "115580bc-82fd-4d68-91f4-525970deb121",
        "parentId" : "ee38f126-9c08-4739-86e7-fbad4d4c8afc",
        "authorId" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "body" : "Yes, this is true",
        "createdAt" : "2019-01-02T13:10:50Z",
        "updatedAt" : "2019-01-02T13:10:51Z",
        "lastEditedBy" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d41b0431aa1827fa52ddcfec8771d947f597beb",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +102,106 @@            log.exception(e)\n            log.error('Failed to import plugin %s', filepath)\n            import_errors[filepath] = str(e)\n\n"
  },
  {
    "id" : "f887c271-4716-42fe-9fa4-2361d3b2037f",
    "prId" : 4938,
    "prUrl" : "https://github.com/apache/airflow/pull/4938#pullrequestreview-256775065",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7179220-c296-4e62-81f4-088ea60ad39c",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Is this ever possible to hit?",
        "createdAt" : "2019-07-02T08:08:58Z",
        "updatedAt" : "2019-07-17T19:40:34Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "af85e06d-e7ac-4605-aa83-0e60c4c01d3d",
        "parentId" : "a7179220-c296-4e62-81f4-088ea60ad39c",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I think I hit it once - but it could be due to misconfiguration or error why generating settings. I don't think there is harm in keeping it :). It's more of a sanity check.",
        "createdAt" : "2019-07-02T08:28:00Z",
        "updatedAt" : "2019-07-17T19:40:34Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "58314e36-8225-4a37-b05e-15639157c078",
        "parentId" : "a7179220-c296-4e62-81f4-088ea60ad39c",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Fair,yeah.",
        "createdAt" : "2019-07-02T09:33:18Z",
        "updatedAt" : "2019-07-17T19:40:34Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "879f2f1d5847c415e605ef3a56fe87e0a9d6b28b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +122,126 @@\nif settings.PLUGINS_FOLDER is None:\n    raise AirflowPluginException(\"Plugins folder is not set\")\n\n# Crawl through the plugins folder to find AirflowPlugin derivatives"
  },
  {
    "id" : "e81ee61e-8572-46f9-95cf-2656e43d65bb",
    "prId" : 6596,
    "prUrl" : "https://github.com/apache/airflow/pull/6596#pullrequestreview-324940593",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03fb8b1b-8e7a-4147-8198-a798c2f76988",
        "parentId" : null,
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "Why did you add a `plugin_name` but not `plugin_operators`, etc. for example?",
        "createdAt" : "2019-11-27T11:37:57Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "9eda7925-67fc-48a5-a878-7aa46d7243e9",
        "parentId" : "03fb8b1b-8e7a-4147-8198-a798c2f76988",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Because that's the only one mypy complained about when I added types. Name - it turns - can be None (it's optional). Others are always Lists (at most they are empty ones). So this is just a case when you specify Plugin and forget to add name to it. More like an assertion. \r\n\r\nBTW. Maybe in the future we should use real assertions in such cases ? I did not want to introduce it yet, but assertions might be another step-up for the quality of the code.",
        "createdAt" : "2019-11-27T13:28:41Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "d5ea0538-2bac-403b-8712-8b40364887fa",
        "parentId" : "03fb8b1b-8e7a-4147-8198-a798c2f76988",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "As discussed with @mik-laj - I converted most of those to asserts and plan to make another global change to use asserts rather than raising exceptions. It's so much cleaner.",
        "createdAt" : "2019-12-01T13:37:38Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "0904b516d3537e9ca52592972e6380ee6fb25125",
    "line" : 171,
    "diffHunk" : "@@ -1,1 +206,210 @@    if not p.name:\n        raise AirflowPluginException(\"Plugin name is missing.\")\n    plugin_name: str = p.name\n    operators_modules.append(\n        make_module('airflow.operators.' + plugin_name, p.operators + p.sensors))"
  },
  {
    "id" : "f08ca530-c99d-4de1-b577-b027cfc24a32",
    "prId" : 6596,
    "prUrl" : "https://github.com/apache/airflow/pull/6596#pullrequestreview-325365426",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3164ff1-5733-4bf4-9ff3-4a5fa9a04220",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "```suggestion\r\nstat_name_handler: Optional[Callable[[str], str]] = None\r\n```",
        "createdAt" : "2019-12-02T12:24:11Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "b855ee52-3417-4a0c-aa90-363551f1fc25",
        "parentId" : "f3164ff1-5733-4bf4-9ff3-4a5fa9a04220",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Yeah. I left all the typing changes in plugins_manager to the follow up plugins-manager specific commit that follows up.",
        "createdAt" : "2019-12-02T16:44:45Z",
        "updatedAt" : "2019-12-03T13:41:00Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "0904b516d3537e9ca52592972e6380ee6fb25125",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +198,202 @@flask_appbuilder_views: List[Any] = []\nflask_appbuilder_menu_links: List[Any] = []\nstat_name_handler: Any = None\nglobal_operator_extra_links: List[Any] = []\noperator_extra_links: List[Any] = []"
  },
  {
    "id" : "12f470f2-a78a-4241-bccc-9721b71351f6",
    "prId" : 7644,
    "prUrl" : "https://github.com/apache/airflow/pull/7644#pullrequestreview-371292886",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9739edec-6bfb-430f-b583-b27f87c9499c",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "```suggestion\r\n\r\n    Plugins are only loaded if they have not been previously loaded.\r\n```",
        "createdAt" : "2020-03-09T11:49:53Z",
        "updatedAt" : "2020-03-09T18:32:27Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "87f4b553-c1f7-4dc6-aa9c-085b447b64c0",
        "parentId" : "9739edec-6bfb-430f-b583-b27f87c9499c",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Done.",
        "createdAt" : "2020-03-09T15:38:18Z",
        "updatedAt" : "2020-03-09T18:32:27Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "f44a0d164044d69dadf6c6b7726016db29d92a1b",
    "line" : 212,
    "diffHunk" : "@@ -1,1 +204,208 @@    Load plugins from plugins directory and entrypoints.\n\n    Plugins are only loaded if they have not been previously loaded.\n    \"\"\"\n    global plugins  # pylint: disable=global-statement"
  },
  {
    "id" : "8f387536-2589-45f7-8a9d-aead44df9689",
    "prId" : 8732,
    "prUrl" : "https://github.com/apache/airflow/pull/8732#pullrequestreview-406745475",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a90bb5b8-21df-4429-9d5c-bce45d298a9f",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Should we add it to import_errors - line 36? This will make this information available on the Web UI. I see you added global statement, but you haven't used the variable still.",
        "createdAt" : "2020-05-06T14:46:00Z",
        "updatedAt" : "2020-05-06T18:25:42Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "d6ca8047-fd6b-4d1c-bca8-f456bb1afed5",
        "parentId" : "a90bb5b8-21df-4429-9d5c-bce45d298a9f",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Done",
        "createdAt" : "2020-05-06T15:45:12Z",
        "updatedAt" : "2020-05-06T18:25:42Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "a9b0442f26754aeecd7eeee8013bd84affe6d5d1",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +152,156 @@                    plugins.append(plugin_obj)\n        except Exception as e:  # pylint: disable=broad-except\n            log.exception(\"Failed to import plugin %s\", entry_point.name)\n            import_errors[entry_point.module_name] = str(e)\n"
  },
  {
    "id" : "01d9c44b-9a3b-4e71-a243-e80c6fce58fb",
    "prId" : 12069,
    "prUrl" : "https://github.com/apache/airflow/pull/12069#pullrequestreview-522721176",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "787eda6a-4684-447a-9f69-e0627e06a951",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Should we deprecate adding Hooks and Executors too??",
        "createdAt" : "2020-11-03T16:32:17Z",
        "updatedAt" : "2020-11-05T11:20:59Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "40c2d8bc-1aaf-40fe-a4fb-e617fa9c6138",
        "parentId" : "787eda6a-4684-447a-9f69-e0627e06a951",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Separate ticket for hooks (cos it maybe makes sense to register them, if not import them from hooks) #9506 and #9507\r\n",
        "createdAt" : "2020-11-03T17:23:35Z",
        "updatedAt" : "2020-11-05T11:20:59Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "90b1128cb7f4b3a07c27aaaa0b330d5415bbffc7",
    "line" : 147,
    "diffHunk" : "@@ -1,1 +297,301 @@        make_deprecated_module('airflow.sensors.' + p.name, p.sensors, p)\n    )\n    hooks_modules.append(make_module('airflow.hooks.' + p.name, p.hooks))\n    executors_modules.append(\n        make_module('airflow.executors.' + p.name, p.executors))"
  },
  {
    "id" : "ecd00d32-3464-439e-8ef6-adb8381b7174",
    "prId" : 12308,
    "prUrl" : "https://github.com/apache/airflow/pull/12308#pullrequestreview-530570626",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "984d119c-ad75-43c7-a57d-df5eafcf4f04",
        "parentId" : null,
        "authorId" : "d3cb8bb5-cff2-4a3d-9608-a158861d1d07",
        "body" : "Might there be a usecase for a general timing context manager here?\r\n\r\n```python\r\nwith timer() as t:\r\n    # ...\r\n\r\nlog.info(\"Frobbing the foonars took %.2f seconds\", t.elapsed.total_seconds())\r\n```\r\n\r\nEncapsulation makes it easier to make sure everyone gets this right (using `time.monotonic()`!), and might make it easier to automatically export metrics to statd / prometheus if desired (`with timer(metric=\"metric_name\") as t:`).\r\n",
        "createdAt" : "2020-11-13T10:16:49Z",
        "updatedAt" : "2020-11-15T21:53:46Z",
        "lastEditedBy" : "d3cb8bb5-cff2-4a3d-9608-a158861d1d07",
        "tags" : [
        ]
      },
      {
        "id" : "6b4290a6-aaae-4f97-841d-d9c94cbeaa29",
        "parentId" : "984d119c-ad75-43c7-a57d-df5eafcf4f04",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Could be. For metrics there is already a `with Stats.timer(\"my_metric_name\":)` though.",
        "createdAt" : "2020-11-13T10:33:25Z",
        "updatedAt" : "2020-11-15T21:53:46Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "b79de136-a697-4355-82a9-c18ad9f9550b",
        "parentId" : "984d119c-ad75-43c7-a57d-df5eafcf4f04",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "#12353",
        "createdAt" : "2020-11-13T23:15:57Z",
        "updatedAt" : "2020-11-15T21:53:46Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "2db12619-b6aa-43ee-91e0-3eee6a8791a7",
        "parentId" : "984d119c-ad75-43c7-a57d-df5eafcf4f04",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Only problem I see is that context manager introduces additional level of indentation which can require a pylint disable sometimes... Apart from that I like the idea!",
        "createdAt" : "2020-11-13T23:21:51Z",
        "updatedAt" : "2020-11-15T21:53:46Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "a7061a08-d5de-496a-b511-2f9317cf718a",
        "parentId" : "984d119c-ad75-43c7-a57d-df5eafcf4f04",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Can also do it like this:\n\n```python\ntimer = Stats.timer().start()\n...\ntimer.end()\n# use timer.duration\n```",
        "createdAt" : "2020-11-14T10:57:40Z",
        "updatedAt" : "2020-11-15T21:53:46Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "1170c72027c851a4c876b43161a224c5c9ad3be2",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +264,268 @@    log.debug(\"Loading plugins\")\n\n    start = time.monotonic()\n\n    plugins = []"
  },
  {
    "id" : "2b6f53d7-226d-47e1-a216-1c5d7f5b5da6",
    "prId" : 12308,
    "prUrl" : "https://github.com/apache/airflow/pull/12308#pullrequestreview-530476404",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e60b0cb4-0010-47df-9216-0f96b45ec0f6",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "```suggestion\r\n    if plugins:\r\n        log.info(\"Loading %d plugin(s) took %.2f seconds\", len(plugins), end - start)\r\n```\r\nWDYT?",
        "createdAt" : "2020-11-13T23:23:26Z",
        "updatedAt" : "2020-11-15T21:53:46Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "1170c72027c851a4c876b43161a224c5c9ad3be2",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +281,285 @@    num_loaded = len(plugins)\n    if num_loaded > 0:\n        log.info(\"Loading %d plugin(s) took %.2f seconds\", num_loaded, end - start)\n\n"
  },
  {
    "id" : "b4419620-1fdc-4025-8682-a9639ea3568f",
    "prId" : 15208,
    "prUrl" : "https://github.com/apache/airflow/pull/15208#pullrequestreview-627971253",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8cbff12-4cde-4fc0-aef3-e762b068a1b9",
        "parentId" : null,
        "authorId" : "2b57321e-ffa6-49a5-a626-e83c2595de23",
        "body" : "We don't need to check if `on_load` is present since we already verify the plugin is a subclass of `AirflowPlugin`.",
        "createdAt" : "2021-04-05T16:30:09Z",
        "updatedAt" : "2021-04-06T14:28:31Z",
        "lastEditedBy" : "2b57321e-ffa6-49a5-a626-e83c2595de23",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d512141392d8cd26dc8661ec3e3b2ff872eb246",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +192,196 @@    \"\"\"\n    global plugins  # pylint: disable=global-statement\n    plugin_instance.on_load()\n    plugins.append(plugin_instance)\n"
  }
]