[
  {
    "id" : "eb546504-30dc-41c2-b5b6-c9f2a44a381c",
    "prId" : 612,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ce21658-1e79-412c-9996-a8d0beb58709",
        "parentId" : null,
        "authorId" : "0ff67aea-e186-487e-bd0f-83d1c809bd31",
        "body" : "Nicely avoiding the N+1 lurking here :)\n",
        "createdAt" : "2015-11-10T21:23:50Z",
        "updatedAt" : "2015-11-10T21:23:50Z",
        "lastEditedBy" : "0ff67aea-e186-487e-bd0f-83d1c809bd31",
        "tags" : [
        ]
      }
    ],
    "commit" : "22c9d90c4dbcd98d55f6a9cb1324fe34ac306ad8",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +435,439 @@                .filter(\n                    TI.dag_id == dag.dag_id,\n                    TI.execution_date.in_(active_runs),\n                    TI.state.in_((State.RUNNING, State.SUCCESS, State.FAILED)),\n                )"
  },
  {
    "id" : "2fce514d-7ca5-4d40-bac8-bde81824c982",
    "prId" : 668,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "efe32cf8-27be-462f-8dc1-d01fa4e5d8b9",
        "parentId" : null,
        "authorId" : "48bd394b-c88e-49f9-845d-b29b038e3141",
        "body" : "This is the bug fix mentioned in the main PR description.\n",
        "createdAt" : "2015-11-19T20:22:35Z",
        "updatedAt" : "2015-11-20T16:12:51Z",
        "lastEditedBy" : "48bd394b-c88e-49f9-845d-b29b038e3141",
        "tags" : [
        ]
      }
    ],
    "commit" : "9cf63eb02a93dbd8c8d0ea9ced6667a108325201",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +391,395 @@            if dag.schedule_interval == '@once':\n                schedule_end = next_run_date\n            elif next_run_date:\n                schedule_end = dag.following_schedule(next_run_date)\n "
  },
  {
    "id" : "7d4c902b-3e28-4d50-b961-d7bd07f9ac83",
    "prId" : 668,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8b3f26d-6998-4f52-9cf7-962ddd237757",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "is there the need to expunge_all after the commit? I think otherwise you'll get errors when reading properties of the object.\n",
        "createdAt" : "2015-11-19T23:39:28Z",
        "updatedAt" : "2015-11-20T16:12:51Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      },
      {
        "id" : "8124c349-577b-4db6-9bef-999cd4ef4a8d",
        "parentId" : "a8b3f26d-6998-4f52-9cf7-962ddd237757",
        "authorId" : "48bd394b-c88e-49f9-845d-b29b038e3141",
        "body" : "@mistercrunch I'm not sure I understand the question. Apart from not having removed any calls to `expunge_all`, my understanding is that `commit` should leave the session in a clean and safe state. \n",
        "createdAt" : "2015-11-20T15:52:19Z",
        "updatedAt" : "2015-11-20T16:12:51Z",
        "lastEditedBy" : "48bd394b-c88e-49f9-845d-b29b038e3141",
        "tags" : [
        ]
      },
      {
        "id" : "9d6004e0-d0c5-424b-8fcb-bf259098ec38",
        "parentId" : "a8b3f26d-6998-4f52-9cf7-962ddd237757",
        "authorId" : "48bd394b-c88e-49f9-845d-b29b038e3141",
        "body" : "@mistercrunch Also, my tests do not get any errors reading the object. \n",
        "createdAt" : "2015-11-20T16:10:36Z",
        "updatedAt" : "2015-11-20T16:12:51Z",
        "lastEditedBy" : "48bd394b-c88e-49f9-845d-b29b038e3141",
        "tags" : [
        ]
      }
    ],
    "commit" : "9cf63eb02a93dbd8c8d0ea9ced6667a108325201",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +403,407 @@                )\n                session.add(next_run)\n                session.commit()\n                return next_run\n"
  },
  {
    "id" : "87235405-b4d9-4259-8670-af8149aff2b3",
    "prId" : 1219,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f955301-e5e5-4539-85d6-1be6fb0e5b02",
        "parentId" : null,
        "authorId" : "06a356e2-8fb5-4f99-b8bb-46ce12d2daa0",
        "body" : "Nit(feel free to ignore): ideally alphasort the depdendencies in all lines like this\n",
        "createdAt" : "2016-03-28T21:44:16Z",
        "updatedAt" : "2016-03-28T21:44:16Z",
        "lastEditedBy" : "06a356e2-8fb5-4f99-b8bb-46ce12d2daa0",
        "tags" : [
        ]
      },
      {
        "id" : "9d15d212-4135-434a-bd90-9884180c2288",
        "parentId" : "5f955301-e5e5-4539-85d6-1be6fb0e5b02",
        "authorId" : "0ff67aea-e186-487e-bd0f-83d1c809bd31",
        "body" : "I will make sure I do in a following PR. At this point, I would rather merge while it works, because rebasing on that scale is a little bit of a PITA.\n",
        "createdAt" : "2016-03-28T21:48:30Z",
        "updatedAt" : "2016-03-28T21:48:30Z",
        "lastEditedBy" : "0ff67aea-e186-487e-bd0f-83d1c809bd31",
        "tags" : [
        ]
      }
    ],
    "commit" : "773f52feb9f0dcd29161dc7ec41d5ddc7f69f445",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +38,42 @@from airflow.exceptions import AirflowException\nfrom airflow.utils.state import State\nfrom airflow.utils.db import provide_session, pessimistic_connection_handling\nfrom airflow.utils.email import send_email\nfrom airflow.utils.logging import LoggingMixin"
  },
  {
    "id" : "364a8e0e-4a45-4503-be97-499c1d7e71b4",
    "prId" : 1376,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9949881-ed19-46f3-8ccf-a1df055ebabf",
        "parentId" : null,
        "authorId" : "366b1763-372e-4924-9c92-2ea8968443bd",
        "body" : "Pydocs would be helpful. This stuff is getting a little gnarly.\n",
        "createdAt" : "2016-04-14T15:33:19Z",
        "updatedAt" : "2016-04-16T11:04:29Z",
        "lastEditedBy" : "366b1763-372e-4924-9c92-2ea8968443bd",
        "tags" : [
        ]
      }
    ],
    "commit" : "a36861a5f7f296656302942db83dd65a66dd5949",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +672,676 @@                session.commit()\n\n    def _split_dags(self, dags, size):\n        \"\"\"\n        This function splits a list of dags into chunks of int size."
  },
  {
    "id" : "38ab227a-dd34-4fb1-ada2-ff508ca6afdb",
    "prId" : 1376,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5805d91-e066-4ee0-b6f1-3a8a10652bb7",
        "parentId" : null,
        "authorId" : "366b1763-372e-4924-9c92-2ea8968443bd",
        "body" : "I think you can use [filter()](https://docs.python.org/2/library/functions.html#filter) to this a little more pythonically.\n",
        "createdAt" : "2016-04-14T15:34:49Z",
        "updatedAt" : "2016-04-16T11:04:29Z",
        "lastEditedBy" : "366b1763-372e-4924-9c92-2ea8968443bd",
        "tags" : [
        ]
      },
      {
        "id" : "e056ceea-6add-445c-8edc-788490d0e763",
        "parentId" : "b5805d91-e066-4ee0-b6f1-3a8a10652bb7",
        "authorId" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "body" : "with a lambda? I personally don't like to read that stuff so much\n",
        "createdAt" : "2016-04-14T17:47:51Z",
        "updatedAt" : "2016-04-16T11:04:29Z",
        "lastEditedBy" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a36861a5f7f296656302942db83dd65a66dd5949",
    "line" : 172,
    "diffHunk" : "@@ -1,1 +736,740 @@\n                paused_dag_ids = dagbag.paused_dags()\n                dags = [x for x in dags if x.dag_id not in paused_dag_ids]\n                # dags = filter(lambda x: x.dag_id not in paused_dag_ids, dags)\n"
  },
  {
    "id" : "508ad6c9-7d36-4a21-8b6a-a6d1cb8bf6db",
    "prId" : 1376,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2092156d-d8e8-4d5a-a613-6a87e799bf87",
        "parentId" : null,
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "This is an important bug fix :-) Should be a stand-alone commit or PR.\n\nIt looks like the cause of this is that a `TaskInstance` has not yet been inserted for the first run. As a result, even though `last_scheduled_run` is `None`, then `latest_run` is also `None`.  If `latest_run` is `None`, then the logic above picks the min start date for all of the tasks in the dag. This should never be None -- this is where there might be a bug. \n\nThe logic flow above, for others looking at this code for the first time is \n1) look at dagruns (which the scheduler inserts into - `airflow run` and `airflow backfill` do not currently insert into this table) \n2) look at task_instance (which is presumably inserted after dag_runs) \n3) look at the dag bag for a start date\n\nIt seems counterintuitive that the tasks in the dagbag would not have a start date\n",
        "createdAt" : "2016-04-15T17:41:37Z",
        "updatedAt" : "2016-04-16T11:04:29Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      },
      {
        "id" : "337a2642-4471-43bc-9a5a-5761e8fa5d4a",
        "parentId" : "2092156d-d8e8-4d5a-a613-6a87e799bf87",
        "authorId" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "body" : "Ok it is a separate commit now. Real fix should be in another PR I guess.\n",
        "createdAt" : "2016-04-16T11:05:24Z",
        "updatedAt" : "2016-04-16T11:05:44Z",
        "lastEditedBy" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a36861a5f7f296656302942db83dd65a66dd5949",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +436,440 @@            # don't ever schedule prior to the dag's start_date\n            if dag.start_date:\n                next_run_date = dag.start_date if not next_run_date else max(next_run_date, dag.start_date)\n\n            # this structure is necessary to avoid a TypeError from concatenating"
  },
  {
    "id" : "548ad85b-19eb-477d-9d91-ba33f8c3f026",
    "prId" : 1376,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0486568-40f5-4a6b-9242-03410b511aaa",
        "parentId" : null,
        "authorId" : "0a40f9fd-4a0a-426e-b6f5-f97a4905eb99",
        "body" : "Is there an advantage to making this `self.runs` instead of just `runs`?\n",
        "createdAt" : "2016-04-15T21:06:14Z",
        "updatedAt" : "2016-04-16T11:04:29Z",
        "lastEditedBy" : "0a40f9fd-4a0a-426e-b6f5-f97a4905eb99",
        "tags" : [
        ]
      },
      {
        "id" : "01ea5841-7c5a-44a4-b828-ca8b6094c4f9",
        "parentId" : "a0486568-40f5-4a6b-9242-03410b511aaa",
        "authorId" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "body" : "Yes, that it actually counts :-).  When I kept it a local variable it would not properly increase. I am not sure why.\n",
        "createdAt" : "2016-04-16T10:44:19Z",
        "updatedAt" : "2016-04-16T11:04:29Z",
        "lastEditedBy" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a36861a5f7f296656302942db83dd65a66dd5949",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +707,711 @@        executor = self.executor = dagbag.executor\n        executor.start()\n        self.runs = 0\n        while not self.num_runs or self.num_runs > self.runs:\n            try:"
  }
]