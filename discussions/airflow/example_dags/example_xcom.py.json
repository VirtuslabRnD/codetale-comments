[
  {
    "id" : "550b82b7-71f0-4f20-ba54-e91a40508dbc",
    "prId" : 4071,
    "prUrl" : "https://github.com/apache/airflow/pull/4071#pullrequestreview-167861846",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cc6185c-685a-4a84-b8ce-3a10235a178f",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Will this work on a list of tasks?",
        "createdAt" : "2018-10-23T08:59:49Z",
        "updatedAt" : "2018-10-24T21:10:31Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "269f64e0-8434-49ef-92c9-228ad77ca20c",
        "parentId" : "9cc6185c-685a-4a84-b8ce-3a10235a178f",
        "authorId" : "db6eb8b7-c895-4f19-9e3d-6fa0535f27e2",
        "body" : "Yes, this operation is implemented by [`__lshift__()`](https://github.com/apache/incubator-airflow/blob/39a9365b6250e588363e59dd6e332e02a28f411d/airflow/models.py#L2658-L2671) which calls `set_upstream()`.",
        "createdAt" : "2018-10-23T10:43:48Z",
        "updatedAt" : "2018-10-24T21:10:31Z",
        "lastEditedBy" : "db6eb8b7-c895-4f19-9e3d-6fa0535f27e2",
        "tags" : [
        ]
      },
      {
        "id" : "e90373b5-ae04-4ff2-a599-9965d744b837",
        "parentId" : "9cc6185c-685a-4a84-b8ce-3a10235a178f",
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "Personally I don't think `<<` is better than `.set_upstream`. It's less explicit and introduces unnecessary new convention.\r\n\r\nMay you advise what's the advantage of of this change?",
        "createdAt" : "2018-10-23T15:22:15Z",
        "updatedAt" : "2018-10-24T21:10:31Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "ec1bdade-9e31-4104-85cf-7128894116a3",
        "parentId" : "9cc6185c-685a-4a84-b8ce-3a10235a178f",
        "authorId" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "body" : "So, for me the `>>` and `<<` is much clearer to me. Bas raises a very valid point, that we should make a decision and make everything consistent (also the docs :-)",
        "createdAt" : "2018-10-23T16:06:57Z",
        "updatedAt" : "2018-10-24T21:10:31Z",
        "lastEditedBy" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "tags" : [
        ]
      },
      {
        "id" : "c550c85a-6399-4cb8-aeef-335c7c363aa0",
        "parentId" : "9cc6185c-685a-4a84-b8ce-3a10235a178f",
        "authorId" : "db6eb8b7-c895-4f19-9e3d-6fa0535f27e2",
        "body" : "The `<<` and `>>` operators were introduced in Airflow 1.8 and I've never really heard or seen anybody prefer using the \"old\" `set_upstream()` and `set_downstream()`. Especially when chaining multiple tasks your code looks the same as in the GUI and I think it's very pleasant to read:\r\n\r\n```\r\ntask1 >> task2 >> task3 >> task4\r\n```\r\n\r\nSince my experience is people use the `>>` and `<<` operators much more, I figured it'd be useful to show that in the example DAGs, but correct me if wrong.",
        "createdAt" : "2018-10-23T19:37:14Z",
        "updatedAt" : "2018-10-24T21:10:31Z",
        "lastEditedBy" : "db6eb8b7-c895-4f19-9e3d-6fa0535f27e2",
        "tags" : [
        ]
      },
      {
        "id" : "2f4fc781-f4ac-4a93-a023-192643747f33",
        "parentId" : "9cc6185c-685a-4a84-b8ce-3a10235a178f",
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "Hi @Fokko @BasPH,\r\n\r\nOk, I'm quite surprised that these operators are already there since 1.8 while I have never seen it in the main tutorials/documentation.\r\n\r\nI  think the main point to consider here is the `\"education\"`. Users like myself and @kaxil even didn't know the existence of these operators.\r\n\r\nIf we are going to do this, I would suggest to involve documentation \"refactoring\" as well. Make sure `>>` and `<<` operators are mentioned properly in the documentation/tutorials, so no users would be confused.\r\n\r\n",
        "createdAt" : "2018-10-24T01:59:00Z",
        "updatedAt" : "2018-10-24T21:10:31Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "ecc0a5b8-23d0-4f40-8edc-bd1e5eb633a3",
        "parentId" : "9cc6185c-685a-4a84-b8ce-3a10235a178f",
        "authorId" : "db6eb8b7-c895-4f19-9e3d-6fa0535f27e2",
        "body" : "There is a chapter on bitshift composition in the docs: [link here](https://airflow.apache.org/concepts.html?bitshift-composition#bitshift-composition).\r\n\r\nHowever, the tutorial chapter indeed uses the `set_downstream` and `set_upstream` methods. I will check the documentation tonight and check where and how dependencies are set throughout the documentation.\r\n\r\nAlso, passing a list of tasks (e.g. `task1 >> [task2, task3]`) is something I learned from the example DAGs but I don't see it anywhere in the docs. Will update the docs on how dependencies can be set.",
        "createdAt" : "2018-10-24T06:55:49Z",
        "updatedAt" : "2018-10-24T21:10:31Z",
        "lastEditedBy" : "db6eb8b7-c895-4f19-9e3d-6fa0535f27e2",
        "tags" : [
        ]
      },
      {
        "id" : "9148df28-1a69-4eba-87e3-6af44edc7a98",
        "parentId" : "9cc6185c-685a-4a84-b8ce-3a10235a178f",
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "👍 ",
        "createdAt" : "2018-10-24T06:57:43Z",
        "updatedAt" : "2018-10-24T21:10:31Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "93c7ee15-0657-4a92-99bf-8d56b6560b06",
        "parentId" : "9cc6185c-685a-4a84-b8ce-3a10235a178f",
        "authorId" : "bece021e-cbae-4f58-b4fb-df0e10264aa8",
        "body" : "I always wondered if :  task1 >> (task2, task3) can be supported.\r\nShould be equivalent to:\r\ntask 1 >> task 2\r\ntask 1 >> task3\r\n\r\nBut I guess that is for a different topic.. just a thought ",
        "createdAt" : "2018-10-24T06:58:54Z",
        "updatedAt" : "2018-10-24T21:10:31Z",
        "lastEditedBy" : "bece021e-cbae-4f58-b4fb-df0e10264aa8",
        "tags" : [
        ]
      },
      {
        "id" : "4ef8a069-5fd1-4026-a11b-917097b2af3a",
        "parentId" : "9cc6185c-685a-4a84-b8ce-3a10235a178f",
        "authorId" : "db6eb8b7-c895-4f19-9e3d-6fa0535f27e2",
        "body" : "@ron819 Setting dependencies with a tuple of tasks will also work because in `_set_relatives` the right-hand object is simply converted to a list ([code](https://github.com/apache/incubator-airflow/blob/39a9365b6250e588363e59dd6e332e02a28f411d/airflow/models.py#L3064)).",
        "createdAt" : "2018-10-24T07:09:53Z",
        "updatedAt" : "2018-10-24T21:10:31Z",
        "lastEditedBy" : "db6eb8b7-c895-4f19-9e3d-6fa0535f27e2",
        "tags" : [
        ]
      },
      {
        "id" : "82f37d43-cd32-4d99-8d91-d59df7e04872",
        "parentId" : "9cc6185c-685a-4a84-b8ce-3a10235a178f",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "@XD-DENG Well, I was unsure of the task list usage with rshift and lshift operators😂 not `>>` or `<<` (rshift or lshift) itself...\r\n\r\nI think we already had good documentation over using them and I prefer using those as it resembles DAG + it is more clean. Many of our examples already do that.\r\n\r\nBut yes after @BasPH pointed o the implementation we can surely do that and should be documented.\r\n\r\n@BasPH can you please add the docs. One liner with one or two examples is fine.",
        "createdAt" : "2018-10-24T07:19:39Z",
        "updatedAt" : "2018-10-24T21:10:31Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "870abb1d-907e-4b50-82e4-b3275b7c3587",
        "parentId" : "9cc6185c-685a-4a84-b8ce-3a10235a178f",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Also I agree with Fokko and you that the behavior should be consistent. Lets use the bitshift composition across all tutorials and examples.\r\n\r\nRegarding context managers, I still have a divided opinion. It makes sense to use them. But sometimes I tend to not use them just to make my code cleaner as I get an extra tab space to put my code in.\r\n\r\nSo let's leave that to users but maybe add a comment like you said earlier to show thw users that we can use `with` statement",
        "createdAt" : "2018-10-24T07:27:23Z",
        "updatedAt" : "2018-10-24T21:10:31Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "405859ec-b2ee-411c-94ce-e55b6bfab0ea",
        "parentId" : "9cc6185c-685a-4a84-b8ce-3a10235a178f",
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "@kaxil I see I see. I still have so many more stuff to learn about Airflow ;-)",
        "createdAt" : "2018-10-24T07:45:23Z",
        "updatedAt" : "2018-10-24T21:10:31Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "b639e92a-9fd5-4a5a-9691-cdf3a5e40a71",
        "parentId" : "9cc6185c-685a-4a84-b8ce-3a10235a178f",
        "authorId" : "bece021e-cbae-4f58-b4fb-df0e10264aa8",
        "body" : "> @ron819 Setting dependencies with a tuple of tasks will also work because in `_set_relatives` the right-hand object is simply converted to a list ([code](https://github.com/apache/incubator-airflow/blob/39a9365b6250e588363e59dd6e332e02a28f411d/airflow/models.py#L3064)).\r\n\r\nMaybe this should be added to the docs as well as it isn't written anywhere.",
        "createdAt" : "2018-10-24T11:42:39Z",
        "updatedAt" : "2018-10-24T21:10:31Z",
        "lastEditedBy" : "bece021e-cbae-4f58-b4fb-df0e10264aa8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f81febaf80242a4376dacc8a742a4d4cfad4825a",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +79,83 @@)\n\npull << [push1, push2]"
  }
]