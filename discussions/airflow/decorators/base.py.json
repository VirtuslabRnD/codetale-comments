[
  {
    "id" : "499b53a0-f911-43f6-8c17-c123e2fb662b",
    "prId" : 14709,
    "prUrl" : "https://github.com/apache/airflow/pull/14709#pullrequestreview-611029189",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "529bb8dd-d9ea-41fe-90a0-8d33372e1501",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Do we need this in base decorator?\r\n\r\n`op_args`, `op_kwargs` and `python_callable` are just fields of a `PythonOperator` for now. If we want to extend it to `@task.docker`, we might either want to add this to the docker / KPO or do we have a different plan",
        "createdAt" : "2021-03-12T15:34:04Z",
        "updatedAt" : "2021-03-12T20:36:55Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "b29de1c2-1b20-4909-8986-0a82dc294aad",
        "parentId" : "529bb8dd-d9ea-41fe-90a0-8d33372e1501",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "@kaxil yes because any subdecorator (e.g. docker or kubernetes) will require taking in a python callable. I sadly don't think it would be simple merge these with the existing DockerOperator or KPO.",
        "createdAt" : "2021-03-12T15:51:20Z",
        "updatedAt" : "2021-03-12T20:36:55Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      },
      {
        "id" : "36cbd234-2e55-4697-a165-68806060667a",
        "parentId" : "529bb8dd-d9ea-41fe-90a0-8d33372e1501",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "So the Base decorator handles a lot of the necessary things like verifying the function before the execution step.",
        "createdAt" : "2021-03-12T15:53:07Z",
        "updatedAt" : "2021-03-12T20:36:55Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      },
      {
        "id" : "2d21da08-4923-4e23-8aac-b2247dfd75f5",
        "parentId" : "529bb8dd-d9ea-41fe-90a0-8d33372e1501",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "SG",
        "createdAt" : "2021-03-12T17:57:24Z",
        "updatedAt" : "2021-03-12T20:36:55Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4fc63b5df330779159e1688ec67068cccfa1919",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +53,57 @@    # since we won't mutate the arguments, we should just do the shallow copy\n    # there are some cases we can't deepcopy the objects (e.g protobuf).\n    shallow_copy_attrs = ('python_callable',)\n\n    @apply_defaults"
  },
  {
    "id" : "497a68ad-4694-49ba-8b3a-d2eb24c837f0",
    "prId" : 14709,
    "prUrl" : "https://github.com/apache/airflow/pull/14709#pullrequestreview-613208866",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29c78d3b-7432-42ed-97c1-0ec7f8c685b9",
        "parentId" : null,
        "authorId" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "body" : "How is it possible to get to this final `return wrapper`? What's the scenario where `python_callable` is valid but not a callable?",
        "createdAt" : "2021-03-16T02:07:12Z",
        "updatedAt" : "2021-03-16T02:07:12Z",
        "lastEditedBy" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "tags" : [
        ]
      },
      {
        "id" : "87cd56a2-546c-41aa-b42d-b707b7041235",
        "parentId" : "29c78d3b-7432-42ed-97c1-0ec7f8c685b9",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "I think this is the difference between `@task` (python_callable will be passed already) and `@task()` -- python_callable won't yet be passed.",
        "createdAt" : "2021-03-16T12:57:40Z",
        "updatedAt" : "2021-03-16T12:57:40Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4fc63b5df330779159e1688ec67068cccfa1919",
    "line" : 194,
    "diffHunk" : "@@ -1,1 +192,196 @@    elif python_callable is not None:\n        raise AirflowException('No args allowed while using @task, use kwargs instead')\n    return wrapper"
  },
  {
    "id" : "8228a0df-f3dd-4c6b-b395-b870adc459be",
    "prId" : 14761,
    "prUrl" : "https://github.com/apache/airflow/pull/14761#pullrequestreview-623550987",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad533ae4-3234-4f4d-b5b3-2bafe87bd457",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "What about class methods?",
        "createdAt" : "2021-03-21T11:16:52Z",
        "updatedAt" : "2021-04-08T15:16:36Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "c7a602d3-402e-40ec-a61c-947864277045",
        "parentId" : "ad533ae4-3234-4f4d-b5b3-2bafe87bd457",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "@turbaszek what do you mean? I imagine we want to keep parity with how the task decorator currently works",
        "createdAt" : "2021-03-29T18:58:43Z",
        "updatedAt" : "2021-04-08T15:16:36Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c05f0e5d422503b8b67d68d98332f5ae10bf61e4",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +41,45 @@        raise TypeError('`python_callable` param must be callable')\n    if 'self' in signature(python_callable).parameters.keys():\n        raise AirflowException('@task does not support methods')\n\n"
  },
  {
    "id" : "f2d8f5bc-60f9-4ea8-9714-22bcde5720ef",
    "prId" : 14761,
    "prUrl" : "https://github.com/apache/airflow/pull/14761#pullrequestreview-623551254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c423d62-6b9a-4565-9630-f0ae8849731e",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "I'm wondering if we cover this somewhere in docs or users have to learn the hard way? ðŸ˜„ ",
        "createdAt" : "2021-03-21T11:18:26Z",
        "updatedAt" : "2021-04-08T15:16:36Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "cf97c306-4a60-4194-9575-913af0073618",
        "parentId" : "6c423d62-6b9a-4565-9630-f0ae8849731e",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "@turbaszek isn't this part of the taskflow API docs?",
        "createdAt" : "2021-03-29T18:59:01Z",
        "updatedAt" : "2021-04-08T15:16:36Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c05f0e5d422503b8b67d68d98332f5ae10bf61e4",
    "line" : 166,
    "diffHunk" : "@@ -1,1 +156,160 @@                        'Returned dictionary keys must be strings when using '\n                        f'multiple_outputs, found {key} ({type(key)}) instead'\n                    )\n            for key, value in return_value.items():\n                xcom_push(context, key, value)"
  },
  {
    "id" : "25fe569b-2746-40c7-b934-50a8b57c566f",
    "prId" : 14761,
    "prUrl" : "https://github.com/apache/airflow/pull/14761#pullrequestreview-617998218",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfccf4a8-9b69-4a3c-9ac2-fb55a624effe",
        "parentId" : null,
        "authorId" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "body" : "```suggestion\r\n    return f'{core}__{len(suffixes) + 1}'\r\n```\r\nIt's not important, but you could consolidate this into one line.\r\n",
        "createdAt" : "2021-03-22T21:44:21Z",
        "updatedAt" : "2021-04-08T15:16:36Z",
        "lastEditedBy" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "tags" : [
        ]
      }
    ],
    "commit" : "c05f0e5d422503b8b67d68d98332f5ae10bf61e4",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +80,84 @@    if not suffixes:\n        return f'{core}__1'\n    return f'{core}__{suffixes[-1] + 1}'\n\n"
  },
  {
    "id" : "336e0cda-6c9a-40d0-aa72-36f6358062ac",
    "prId" : 14761,
    "prUrl" : "https://github.com/apache/airflow/pull/14761#pullrequestreview-617998218",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18c0bc4a-76b9-4c67-8e85-962a1b470df9",
        "parentId" : null,
        "authorId" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "body" : "```suggestion\r\n        if self.multiple_outputs:\r\n```\r\nSince the return value isn't used, it isn't necessary to return.",
        "createdAt" : "2021-03-22T21:58:09Z",
        "updatedAt" : "2021-04-08T15:16:36Z",
        "lastEditedBy" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "tags" : [
        ]
      }
    ],
    "commit" : "c05f0e5d422503b8b67d68d98332f5ae10bf61e4",
    "line" : 159,
    "diffHunk" : "@@ -1,1 +149,153 @@        \"\"\"\n        if not self.multiple_outputs:\n            return return_value\n        if isinstance(return_value, dict):\n            for key in return_value.keys():"
  }
]