[
  {
    "id" : "299b36b5-6736-4056-86b7-d51716d37018",
    "prId" : 3823,
    "prUrl" : "https://github.com/apache/airflow/pull/3823#pullrequestreview-153174657",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c4fb23e-3ca7-4f0c-936c-1403cbe5c410",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "For both `copy_object()` and `delete_objects()`, I'm returning the response from boto3/S3 API directly. This can give users the flexibility if they want to dive deeper into the details in the response.",
        "createdAt" : "2018-09-07T01:13:11Z",
        "updatedAt" : "2018-09-07T05:16:25Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      }
    ],
    "commit" : "37a7477734118771e082836954a52933a388f6ea",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +445,449 @@                                               Key=dest_bucket_key,\n                                               CopySource=CopySource)\n        return response\n\n    def delete_objects(self,"
  },
  {
    "id" : "de9ab1f4-d03d-4912-816a-885a6fc258de",
    "prId" : 4091,
    "prUrl" : "https://github.com/apache/airflow/pull/4091#pullrequestreview-168631944",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfa6cfed-6313-42f0-b84d-d603fb400109",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "None shouldn't imply us-east-1, but whatever region the Connection is configured to use. (I've never needed the CreateBucketConfiguration when using `aws` cli to create buckets, does it just handle that for me?",
        "createdAt" : "2018-10-25T13:39:44Z",
        "updatedAt" : "2018-11-01T00:34:32Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "b54e3f99-7130-4671-87e1-f5d20809ba70",
        "parentId" : "cfa6cfed-6313-42f0-b84d-d603fb400109",
        "authorId" : "34237513-44bd-45f2-806b-8a8b84c9999f",
        "body" : "Yep aws cli handles it for you. In boto S3, https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#S3.Client.create_bucket\r\n\r\nIf you don't specify region, it's always in US Standard (us-east-1). And the weird part is, you cannot specify us-east-1 explicitly in CreateBucketConfiguration. The only way to create bucket in us-east-1 is not specifying CreateBucketConfiguration.\r\n\r\nYep I see what I made wrong here for defaulting to us-east-1 all the time. Is there an easy way to get the region configured for connection here? Or I have to use self.get_conn() and extract region from the s3 client?",
        "createdAt" : "2018-10-25T18:57:55Z",
        "updatedAt" : "2018-11-01T00:34:32Z",
        "lastEditedBy" : "34237513-44bd-45f2-806b-8a8b84c9999f",
        "tags" : [
        ]
      },
      {
        "id" : "aea43ca6-96b6-4fc8-8d25-dd77e8ef5269",
        "parentId" : "cfa6cfed-6313-42f0-b84d-d603fb400109",
        "authorId" : "34237513-44bd-45f2-806b-8a8b84c9999f",
        "body" : "Hmm I did not find a better way, so just extracting the region from s3 boto session. If there's a better way please let me know.",
        "createdAt" : "2018-10-26T00:01:53Z",
        "updatedAt" : "2018-11-01T00:34:32Z",
        "lastEditedBy" : "34237513-44bd-45f2-806b-8a8b84c9999f",
        "tags" : [
        ]
      }
    ],
    "commit" : "438aa8a6db2f16ead76725d298869820e705b4f4",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +88,92 @@                                          CreateBucketConfiguration={\n                                              'LocationConstraint': region_name\n                                          })\n\n    def check_for_prefix(self, bucket_name, prefix, delimiter):"
  },
  {
    "id" : "957d3971-bc9a-4810-b4e0-ffe3da70aeea",
    "prId" : 4091,
    "prUrl" : "https://github.com/apache/airflow/pull/4091#pullrequestreview-170184915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0514b29-839b-49eb-bee1-4fad334b5254",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Should we add `extra_args` as a dict? - this way people could use this with other things like ACLs for BucketOwnerFullControl or a to encrypt using a KMS key.\r\n\r\nIt should default to `None`, not `{}` though https://pythonconquerstheuniverse.wordpress.com/2012/02/15/mutable-default-arguments/",
        "createdAt" : "2018-10-27T21:43:02Z",
        "updatedAt" : "2018-11-01T00:34:32Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "888ab658-a5f3-4862-86b1-151253519d79",
        "parentId" : "b0514b29-839b-49eb-bee1-4fad334b5254",
        "authorId" : "34237513-44bd-45f2-806b-8a8b84c9999f",
        "body" : "I agree with you. But other S3 hook APIs (load_file, load_bytes) put extra_args in the function body and my codes just imitated them. I guess to make things consistent, having a PR to change them all sounds like a better idea. Not sure if I only change my codes and leave others unchanged is what you want.",
        "createdAt" : "2018-10-31T10:38:07Z",
        "updatedAt" : "2018-11-01T00:34:32Z",
        "lastEditedBy" : "34237513-44bd-45f2-806b-8a8b84c9999f",
        "tags" : [
        ]
      }
    ],
    "commit" : "438aa8a6db2f16ead76725d298869820e705b4f4",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +452,456 @@        extra_args = {}\n        if encrypt:\n            extra_args['ServerSideEncryption'] = \"AES256\"\n\n        client = self.get_conn()"
  },
  {
    "id" : "a061d397-b3d9-43ef-9113-9fc0f61b3f85",
    "prId" : 5674,
    "prUrl" : "https://github.com/apache/airflow/pull/5674#pullrequestreview-268217417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7143f7a0-cb72-42fb-962a-ed13adfd9691",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Nice!",
        "createdAt" : "2019-07-30T08:00:48Z",
        "updatedAt" : "2019-07-30T08:03:35Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1e41fd0e2dde4373c3e29f82f3d02b67b13cbdc",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +44,48 @@        func_params = func.__code__.co_varnames\n\n        def has_arg(name):\n            name_in_args = name in func_params and func_params.index(name) < len(args)\n            name_in_kwargs = name in kwargs"
  }
]