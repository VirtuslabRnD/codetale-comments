[
  {
    "id" : "35dbbc54-d18f-4a42-b683-2f0055c2c788",
    "prId" : 1170,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "235bfaff-7067-43dc-8df0-f19f852a3d79",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "That's a better default but it might bite us. @artwr , we'll have to make sure that we set the extra to NOSASL.\n",
        "createdAt" : "2016-03-19T22:06:37Z",
        "updatedAt" : "2016-03-20T09:24:47Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      },
      {
        "id" : "a118bb18-9a1c-4ed6-b562-09071d220be7",
        "parentId" : "235bfaff-7067-43dc-8df0-f19f852a3d79",
        "authorId" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "body" : "The defaults of impyla differ from pyhs2: as it takes impala as a base for which NOSASL is default while for Hive in a standard setup it is PLAIN. I took hive as default. But yes you should be careful here.\n",
        "createdAt" : "2016-03-19T22:26:45Z",
        "updatedAt" : "2016-03-20T09:24:47Z",
        "lastEditedBy" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b385b7ca7075894d0d3a399c73c1b4d58c92cd3c",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +422,426 @@    def get_conn(self):\n        db = self.get_connection(self.hiveserver2_conn_id)\n        auth_mechanism = db.extra_dejson.get('authMechanism', 'PLAIN')\n        kerberos_service_name = None\n        if configuration.get('core', 'security') == 'kerberos':"
  },
  {
    "id" : "93983a57-bbc9-4129-943e-657c5b29d114",
    "prId" : 4560,
    "prUrl" : "https://github.com/apache/airflow/pull/4560#pullrequestreview-195879287",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6a42c38-dba7-4b56-a20f-c71789328aa0",
        "parentId" : null,
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "if log error, shouldn't we change L904 instead? If we set i = 0, then it will get shadowed in L892.",
        "createdAt" : "2019-01-22T05:49:57Z",
        "updatedAt" : "2019-01-22T05:49:57Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "0a6d6f88-9631-4dab-b111-0ee4b8cd9eb4",
        "parentId" : "e6a42c38-dba7-4b56-a20f-c71789328aa0",
        "authorId" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "body" : "@feng-tao We could not change L904 due to we don't know if `i` exists or not. set `i = 0` just init `i`.\r\nIf hql statement return no reocrd, L892 will not run and `i = 0`\r\nelse hql statement have record and `i` is reocrd number.",
        "createdAt" : "2019-01-22T06:54:19Z",
        "updatedAt" : "2019-01-22T06:54:39Z",
        "lastEditedBy" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "tags" : [
        ]
      },
      {
        "id" : "e2edf316-baab-4216-9c6d-238b8cc7338c",
        "parentId" : "e6a42c38-dba7-4b56-a20f-c71789328aa0",
        "authorId" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "body" : "@feng-tao Of course we can write some code like\r\n```python\r\nself.log.info(\"Done. Loaded a total of %s rows.\", i if 'i' in locals() else 0)\r\n```\r\nbut I think is a little weird, so I put `i = 0` in L881",
        "createdAt" : "2019-01-22T06:59:00Z",
        "updatedAt" : "2019-01-22T07:00:47Z",
        "lastEditedBy" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "tags" : [
        ]
      },
      {
        "id" : "bfab40a9-1f24-4238-a407-c4f38a897498",
        "parentId" : "e6a42c38-dba7-4b56-a20f-c71789328aa0",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Yeah doming something like that is a bit odd.\r\n\r\nOne question though: does this change work on Python3? I have half-memories of the scoping rules for `for` being different in py2 and py3, but I can't remember how.",
        "createdAt" : "2019-01-22T16:14:16Z",
        "updatedAt" : "2019-01-22T16:14:17Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "acc503a0-63b5-4be1-9545-3b8742e1593f",
        "parentId" : "e6a42c38-dba7-4b56-a20f-c71789328aa0",
        "authorId" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "body" : "@ashb I run some code below in Python2.7.15 and Python3.6.7, both of them ware asserted\r\n```python\r\ni = 0\r\nlst = list(range(10))\r\nfor i, v in enumerate(lst, 1):\r\n    pass\r\nassert i == len(lst), \"counter {} not equel to len {}\".format(i, len(lst))\r\n```\r\nWhich mean that work on py2 and py3.",
        "createdAt" : "2019-01-23T07:16:13Z",
        "updatedAt" : "2019-02-12T09:22:11Z",
        "lastEditedBy" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "tags" : [
        ]
      },
      {
        "id" : "a39d6e83-e49a-498a-a2d8-f2e537ca29e2",
        "parentId" : "e6a42c38-dba7-4b56-a20f-c71789328aa0",
        "authorId" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "body" : "@ashb @feng-tao PTAL, thx",
        "createdAt" : "2019-01-24T07:02:00Z",
        "updatedAt" : "2019-01-24T07:02:00Z",
        "lastEditedBy" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "tags" : [
        ]
      }
    ],
    "commit" : "777741d2583c2187fc6f18a4220b53838513e6d4",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +879,883 @@        message = None\n\n        i = 0\n        with open(csv_filepath, 'wb') as f:\n            writer = csv.writer(f,"
  }
]