[
  {
    "id" : "30e21ef8-a757-42ee-b5c4-fcb1d366b7fc",
    "prId" : 254,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bee61d03-73eb-4433-83a3-f50bbad559d9",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "Let's use a prefix for env vars as a module constant:\n\n```\nCONN_ENV_PREFIX = 'AIRFLOW_CONN_'\n```\n",
        "createdAt" : "2015-08-31T20:50:56Z",
        "updatedAt" : "2015-08-31T22:37:26Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bc95e230c3740aa3d601a17670b72c23a1dcfa4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3,7 @@import os\nimport random\n\nfrom airflow import settings\nfrom airflow.models import Connection"
  },
  {
    "id" : "84fdfca7-5e7d-408f-a7bf-8a858a74d583",
    "prId" : 354,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b2a2351-ca9c-437a-b803-a891e3af21dd",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "I changed that to enforce upper case env vars as in `AIRFLOW_CONN_AIRFLOW_DB`\n",
        "createdAt" : "2015-09-03T06:20:46Z",
        "updatedAt" : "2015-09-03T06:20:46Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8e84800eb015a8cbafe1196ba448eb7a120499a",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +39,43 @@    @classmethod\n    def get_connection(cls, conn_id):\n        environment_uri = os.environ.get(CONN_ENV_PREFIX + conn_id.upper())\n        conn = None\n        if environment_uri:"
  },
  {
    "id" : "0c3a1d08-b4c0-42aa-ac92-8e9cbe4b8a4c",
    "prId" : 4926,
    "prUrl" : "https://github.com/apache/airflow/pull/4926#pullrequestreview-215365539",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1e7ec30-28f7-4f67-80c2-4ea3767ba171",
        "parentId" : null,
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "In my other projects, we use the following syntax:\r\n```\r\ndef get_connections(cls, conn_id : str) -> Iterable[Connection]:\r\n```\r\n\r\nI wonder whether there is a preferred style of mypy syntax.",
        "createdAt" : "2019-03-17T06:19:26Z",
        "updatedAt" : "2019-03-27T00:39:30Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "ef3bae34-e319-43ab-873f-eb0737449d65",
        "parentId" : "d1e7ec30-28f7-4f67-80c2-4ea3767ba171",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "Or is it because we need to support py27 in Airflow?",
        "createdAt" : "2019-03-17T06:19:56Z",
        "updatedAt" : "2019-03-27T00:39:30Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "0c8b15f7-a7fc-4f16-b3f9-a24a665bf2c2",
        "parentId" : "d1e7ec30-28f7-4f67-80c2-4ea3767ba171",
        "authorId" : "9a5e8348-c065-464c-a412-d4070cbed6ea",
        "body" : "Yep, we have to use this syntax as long as we're supporting python2: https://mypy.readthedocs.io/en/latest/python2.html. If we drop python2 support, we can switch to python3-style annotations.",
        "createdAt" : "2019-03-17T17:12:09Z",
        "updatedAt" : "2019-03-27T00:39:30Z",
        "lastEditedBy" : "9a5e8348-c065-464c-a412-d4070cbed6ea",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e751f4980b12602bf8c494c5cae6bbe7a774507",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +69,73 @@\n    @classmethod\n    def get_connections(cls, conn_id):  # type: (str) -> Iterable[Connection]\n        conn = cls._get_connection_from_env(conn_id)\n        if conn:"
  }
]