[
  {
    "id" : "7b1bfeb9-923a-49ab-ba69-be8242554424",
    "prId" : 1134,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44e1faa8-f934-4261-b301-c33484287f50",
        "parentId" : null,
        "authorId" : "06a356e2-8fb5-4f99-b8bb-46ce12d2daa0",
        "body" : "Nit: filing -> filling\n",
        "createdAt" : "2016-03-07T20:06:04Z",
        "updatedAt" : "2016-03-07T20:06:04Z",
        "lastEditedBy" : "06a356e2-8fb5-4f99-b8bb-46ce12d2daa0",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ee00854f17669068b91cf71f0e5e1311083d0a9",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +185,189 @@donot_pickle = False\n\n# How long before timing out a python file import while filing the DagBag\ndagbag_import_timeout = 30\n"
  },
  {
    "id" : "301d9787-4244-45ba-b3c9-56f6d5f5e04e",
    "prId" : 1376,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b48077a8-1ea9-44a0-8d72-672433d7c17b",
        "parentId" : null,
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "Nit  : maybe we should call this max_proc?\n",
        "createdAt" : "2016-04-15T17:40:46Z",
        "updatedAt" : "2016-04-16T11:04:29Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      },
      {
        "id" : "37f62abf-c975-47dc-93fa-42df465d419a",
        "parentId" : "b48077a8-1ea9-44a0-8d72-672433d7c17b",
        "authorId" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "body" : "I was thinking \"threads\" is better understood as a concept. The executor uses `parallelism` but that is also a bit unclear.\n",
        "createdAt" : "2016-04-15T18:20:58Z",
        "updatedAt" : "2016-04-16T11:04:29Z",
        "lastEditedBy" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a36861a5f7f296656302942db83dd65a66dd5949",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +421,425 @@scheduler_heartbeat_sec = 5\nauthenticate = true\nmax_threads = 2\n\"\"\"\n"
  }
]