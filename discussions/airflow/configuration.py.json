[
  {
    "id" : "7b1bfeb9-923a-49ab-ba69-be8242554424",
    "prId" : 1134,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44e1faa8-f934-4261-b301-c33484287f50",
        "parentId" : null,
        "authorId" : "06a356e2-8fb5-4f99-b8bb-46ce12d2daa0",
        "body" : "Nit: filing -> filling\n",
        "createdAt" : "2016-03-07T20:06:04Z",
        "updatedAt" : "2016-03-07T20:06:04Z",
        "lastEditedBy" : "06a356e2-8fb5-4f99-b8bb-46ce12d2daa0",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ee00854f17669068b91cf71f0e5e1311083d0a9",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +185,189 @@donot_pickle = False\n\n# How long before timing out a python file import while filing the DagBag\ndagbag_import_timeout = 30\n"
  },
  {
    "id" : "301d9787-4244-45ba-b3c9-56f6d5f5e04e",
    "prId" : 1376,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b48077a8-1ea9-44a0-8d72-672433d7c17b",
        "parentId" : null,
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "Nit  : maybe we should call this max_proc?\n",
        "createdAt" : "2016-04-15T17:40:46Z",
        "updatedAt" : "2016-04-16T11:04:29Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      },
      {
        "id" : "37f62abf-c975-47dc-93fa-42df465d419a",
        "parentId" : "b48077a8-1ea9-44a0-8d72-672433d7c17b",
        "authorId" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "body" : "I was thinking \"threads\" is better understood as a concept. The executor uses `parallelism` but that is also a bit unclear.\n",
        "createdAt" : "2016-04-15T18:20:58Z",
        "updatedAt" : "2016-04-16T11:04:29Z",
        "lastEditedBy" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a36861a5f7f296656302942db83dd65a66dd5949",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +421,425 @@scheduler_heartbeat_sec = 5\nauthenticate = true\nmax_threads = 2\n\"\"\"\n"
  },
  {
    "id" : "19871b12-a1de-4d15-88b0-59b952140a5c",
    "prId" : 1492,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12e5fe44-7ce3-484d-bb52-da1fbb53c419",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "Is this used anywhere? I don't think it's bound to anything.\n",
        "createdAt" : "2016-05-12T17:23:03Z",
        "updatedAt" : "2016-05-12T17:23:03Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e332f63620a5f85e38c4a1a5ac9c9a4a5bfc6035",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +110,114 @@        'workers': 4,\n        'worker_class': 'sync',\n        'ssl_certfile': None,\n        'ssl_keyfile': None,\n    },"
  },
  {
    "id" : "3ad77733-1ac3-49a4-839e-7fbfa3270962",
    "prId" : 1492,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03103994-990c-46dc-a927-9ddea89774ae",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "Not bound.\n",
        "createdAt" : "2016-05-12T17:23:11Z",
        "updatedAt" : "2016-05-12T17:23:11Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e332f63620a5f85e38c4a1a5ac9c9a4a5bfc6035",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +267,271 @@\n# SSL certificate file\n# ssl_certfile =\n\n# SSL key file"
  },
  {
    "id" : "a0786ff2-d05c-492d-9ee0-e7e72dd29870",
    "prId" : 4028,
    "prUrl" : "https://github.com/apache/airflow/pull/4028#pullrequestreview-163256074",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "281facae-baf5-4117-962b-8d1f62ad4dcc",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "LGTM with this change",
        "createdAt" : "2018-10-10T09:13:28Z",
        "updatedAt" : "2018-10-10T09:13:28Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "b66f32600617dea0de629349cc615a567a987a6e",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +283,287 @@        self._validate()\n\n    def read_dict(self, *args, **kwargs):\n        super(AirflowConfigParser, self).read_dict(*args, **kwargs)\n        self._validate()"
  },
  {
    "id" : "4a1dd1a9-4a9c-44cd-bc81-987c8d8fec14",
    "prId" : 4705,
    "prUrl" : "https://github.com/apache/airflow/pull/4705#pullrequestreview-218004333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5bb3eb1d-f887-4d02-8624-22c45b003c04",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "What's the purpose of having this line?",
        "createdAt" : "2019-02-16T14:22:08Z",
        "updatedAt" : "2019-03-25T10:00:53Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "2f3235c2-a029-486c-8840-c6495254e2d8",
        "parentId" : "5bb3eb1d-f887-4d02-8624-22c45b003c04",
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "Double-checking on this: so your intention is that if the user is still using `airflow_home` in .cfg file, only a warning will be given (no hard stoping) and the value in .cfg file will be used eventually?",
        "createdAt" : "2019-02-16T16:16:49Z",
        "updatedAt" : "2019-03-25T10:00:53Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "d0bc4d3d-0f1b-4cb5-907c-b065e842a6e1",
        "parentId" : "5bb3eb1d-f887-4d02-8624-22c45b003c04",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Yes, I was trying to make this change as easy as possible - warn but carry on using the setting (for 99% of people it will be the same)\r\n\r\nThough the 1 case I know that this will break is the Puckel docker container. So perhaps if the two settings are different I should throw an exception.",
        "createdAt" : "2019-02-21T15:22:58Z",
        "updatedAt" : "2019-03-25T10:00:53Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "113b5630-5194-412a-ace6-3000987e8603",
        "parentId" : "5bb3eb1d-f887-4d02-8624-22c45b003c04",
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "Or throw an exception once `conf.has_option('core', 'AIRFLOW_HOME') == True`?\r\n\r\nPersonally I think it's better to make it as explicit as possible, and having a clean cut.",
        "createdAt" : "2019-02-21T16:01:28Z",
        "updatedAt" : "2019-03-25T10:00:53Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "0e5eca76-52aa-4cb5-8199-3337992d2ab2",
        "parentId" : "5bb3eb1d-f887-4d02-8624-22c45b003c04",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Throwing an exception in this case would be a breaking change (as this was in the default template, so every install would and up stopping working) which I am trying to avoid.",
        "createdAt" : "2019-02-22T10:47:02Z",
        "updatedAt" : "2019-03-25T10:00:53Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "e0f1b109-66ef-4e94-bfc1-6c809e48f3db",
        "parentId" : "5bb3eb1d-f887-4d02-8624-22c45b003c04",
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "In this case, itâ€™s not really necessary to have an if-else here to check whether AIRFLOW_HOME is in env? The two warning messages are not that different to me.",
        "createdAt" : "2019-02-22T11:17:43Z",
        "updatedAt" : "2019-03-25T10:00:53Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "2fe979ca-c911-461f-af82-74e07dd4f70e",
        "parentId" : "5bb3eb1d-f887-4d02-8624-22c45b003c04",
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "Hi @ashb , I had a double-check on this. Let me correct myself for this:\r\n- I agree it's necessary to have the if-else `if 'AIRFLOW_HOME' in os.environ:` inside `if conf.has_option('core', 'AIRFLOW_HOME'):`, and decide if `AIRFLOW_HOME` should be based on the value in .cfg file.\r\n- But I don't think it's necessary to have the warning messages for two times in the code. The two warning messages here are very similar to each other, and either of them will be invoked anyway. We can have something like\r\n\r\n```python\r\nif conf.has_option('core', 'AIRFLOW_HOME'):\r\n    warnings.warn('<warning msg>', category=DeprecationWarning,)\r\n\r\n    if 'AIRFLOW_HOME' not in os.environ:\r\n        AIRFLOW_HOME = conf.get('core', 'airflow_home')\r\n\r\n```",
        "createdAt" : "2019-02-22T15:59:37Z",
        "updatedAt" : "2019-03-25T10:00:53Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "7a7878b4-23f6-43c1-9d34-2225a75bc59d",
        "parentId" : "5bb3eb1d-f887-4d02-8624-22c45b003c04",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "I've changed it to:\r\n\r\n```python\r\nif conf.has_option('core', 'AIRFLOW_HOME'):\r\n    msg = (\r\n        'Specifying both AIRFLOW_HOME environment variable and airflow_home '\r\n        'in the config file is deprecated. Please use only the AIRFLOW_HOME '\r\n        'environment variable and remove the config file entry.'\r\n    )\r\n    if 'AIRFLOW_HOME' in os.environ:\r\n        warnings.warn(msg, category=DeprecationWarning,)\r\n    elif conf.get('core', 'airflow_home') == AIRFLOW_HOME:\r\n        warnings.warn(\r\n            'Specifying airflow_home in the config file is deprecated. As you '\r\n            'have left it at the default value you should remove the setting '\r\n            'from your airflow.cfg and suffer no change in behaviour.',\r\n            category=DeprecationWarning,\r\n        )\r\n    else:\r\n        AIRFLOW_HOME = conf.get('core', 'airflow_home')\r\n        warnings.warn(msg, category=DeprecationWarning,)\r\n\r\n```\r\n\r\nI   thought about adding an extra case do say which value it was",
        "createdAt" : "2019-03-22T22:58:08Z",
        "updatedAt" : "2019-03-25T10:00:53Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ea16167a15d310be46b81277d780c80af4336bf",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +561,565 @@        )\n    else:\n        AIRFLOW_HOME = conf.get('core', 'airflow_home')\n        warnings.warn(msg, category=DeprecationWarning)\n"
  },
  {
    "id" : "ad6f481c-2093-4fba-9c66-c24915f21060",
    "prId" : 4705,
    "prUrl" : "https://github.com/apache/airflow/pull/4705#pullrequestreview-218261123",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3dbc9e4e-d04b-44c0-ae45-bca30ad03db0",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "I am not able to understand how we get this? I understand `conf.get('core', 'airflow_home')` but do we get this from directly environment variable? If so, how is it an option in `core` section..\r\n\r\nShouldn't it be just\r\n```\r\nif 'AIRFLOW_HOME' in os.environ and conf.get('core', 'airflow_home'): \r\n```",
        "createdAt" : "2019-03-23T21:42:12Z",
        "updatedAt" : "2019-03-25T10:00:53Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "99f5b584-6cb6-4e5e-8ee4-154cf837152d",
        "parentId" : "3dbc9e4e-d04b-44c0-ae45-bca30ad03db0",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Due to https://github.com/apache/airflow/blob/d91153814872c831b07befe92c27c222b6960b02/airflow/configuration.py#L222-L224\r\n`conf.has_option('core', 'airflow_home')` and `conf.has_option('core',  'AIRFLOW_HOME')` are the same",
        "createdAt" : "2019-03-25T11:00:31Z",
        "updatedAt" : "2019-03-25T11:00:31Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ea16167a15d310be46b81277d780c80af4336bf",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +545,549 @@conf.read(AIRFLOW_CONFIG)\n\nif conf.has_option('core', 'AIRFLOW_HOME'):\n    msg = (\n        'Specifying both AIRFLOW_HOME environment variable and airflow_home '"
  },
  {
    "id" : "2e72d832-677a-4d19-aafe-4cedf9754df9",
    "prId" : 5668,
    "prUrl" : "https://github.com/apache/airflow/pull/5668#pullrequestreview-270288008",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e27b0273-4b27-4229-a234-f16fd934f82d",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Why are we treating this one section differently? At the _very_ least we need a code comment here saying why, but ideally I'd like to not have any special case here if we can avoid it.",
        "createdAt" : "2019-08-02T08:34:16Z",
        "updatedAt" : "2019-08-22T14:37:13Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "08ae931e-2d51-4005-bf75-d5cd16b1126d",
        "parentId" : "e27b0273-4b27-4229-a234-f16fd934f82d",
        "authorId" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "body" : "This section needs to be case sensitive because airflow only parse environment variables starts with `AIRFLOW__` not `airflow__`. I also think this is a bit hacky.\r\n\r\nWe can also change it to not call `.lower` on all keys so we don't have to make `kubernetes_environment_variables` a special section. The catch is it will break existing users who depend on environment variables being case insensitive. i.e. you will have to inject environment variables like `AIRFLOW__FOO_bar=abc`. I wasn't sure whether this kind of backwards incompatible change is acceptable in 2.0.\r\n\r\nLet me know what's your thought on this so I can go ahead and update this part of the code :)",
        "createdAt" : "2019-08-02T16:52:53Z",
        "updatedAt" : "2019-08-22T14:37:13Z",
        "lastEditedBy" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd73d92624379c24a07345d1de177ad2b9fcf19b",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +412,416 @@                # variables. Airflow only parse environment variables starts\n                # with AIRFLOW_. Therefore, we need to make it a special case.\n                if section != 'kubernetes_environment_variables':\n                    key = key.lower()\n                cfg.setdefault(section, OrderedDict()).update({key: opt})"
  },
  {
    "id" : "257efd57-6d34-41a1-887b-328f2a8dfd0b",
    "prId" : 6620,
    "prUrl" : "https://github.com/apache/airflow/pull/6620#pullrequestreview-321083828",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1571e351-e502-4ed7-ab3d-866f8074c9a8",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Did we never fix this?!",
        "createdAt" : "2019-11-21T17:44:01Z",
        "updatedAt" : "2019-11-21T17:44:53Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "27cbc72f-b87e-4db8-8974-f1f2854e217c",
        "parentId" : "1571e351-e502-4ed7-ab3d-866f8074c9a8",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "(we should do this on its commit on v1.10 too)",
        "createdAt" : "2019-11-21T17:44:44Z",
        "updatedAt" : "2019-11-21T17:44:53Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "b85bb94c-0a05-4c5b-8bdb-e8613e850b94",
        "parentId" : "1571e351-e502-4ed7-ab3d-866f8074c9a8",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Looks like we already fixed it in v1.10",
        "createdAt" : "2019-11-21T18:08:38Z",
        "updatedAt" : "2019-11-21T18:08:39Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "075ef0782f14bd45db8d6408afc980cf17b761f8",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +113,117 @@    # DeprecationWarning will be issued and the old name will be used instead\n    deprecated_options = {\n        'elasticsearch': {\n            'elasticsearch_host': 'host',\n            'elasticsearch_log_id_template': 'log_id_template',"
  },
  {
    "id" : "54173a1a-c2c4-4c0a-b7b8-d9fc1630b22b",
    "prId" : 6842,
    "prUrl" : "https://github.com/apache/airflow/pull/6842#pullrequestreview-334599264",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6807c639-9d63-4f5b-b81b-9b505ccf985b",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "I think these should be debug -- it's a bit too noisy and not useful to see this all the time.",
        "createdAt" : "2019-12-19T12:28:10Z",
        "updatedAt" : "2019-12-19T12:28:11Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "9cb4ac07-e6ee-42ef-8e22-8c53f6978d50",
        "parentId" : "6807c639-9d63-4f5b-b81b-9b505ccf985b",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Oh nm, this is load_test_config only :) ",
        "createdAt" : "2019-12-19T12:28:37Z",
        "updatedAt" : "2019-12-19T12:28:37Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "f005737f9e3ba208c4c2701874b396d2174ef4e5",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +431,435 @@        \"\"\"\n        # override any custom settings with defaults\n        log.info(\"Overriding settings with defaults from %s\", DEFAULT_CONFIG_FILE_PATH)\n        self.read_string(parameterized_config(DEFAULT_CONFIG))\n        # then read test config"
  }
]