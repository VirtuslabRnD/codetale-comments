[
  {
    "id" : "2d266325-8da8-4fee-bc0f-c1ca3cdbc7a9",
    "prId" : 4889,
    "prUrl" : "https://github.com/apache/airflow/pull/4889#pullrequestreview-215962959",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b21e2adc-a7bf-4922-b628-1c8569070f45",
        "parentId" : null,
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "could you add a comment why only the chars in this set are considered valid char?",
        "createdAt" : "2019-03-19T05:17:41Z",
        "updatedAt" : "2019-03-19T17:40:08Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f99b2cacbfe503fd29385c0c14bee600425d9eb",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +53,57 @@# Only characters in the character set are considered valid\n# for the stat_name if stat_name_default_handler is used.\nALLOWED_CHARACTERS = set(string.ascii_letters + string.digits + '_.-')\n\n"
  },
  {
    "id" : "fd53b27c-ceea-4b98-b4d9-7c718438aeb0",
    "prId" : 4889,
    "prUrl" : "https://github.com/apache/airflow/pull/4889#pullrequestreview-216329575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14c40ed3-3fb9-4e3c-83f0-da984dc2f1fe",
        "parentId" : null,
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "empty line",
        "createdAt" : "2019-03-19T06:44:23Z",
        "updatedAt" : "2019-03-19T17:40:08Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "ba3c183b-a33e-431a-974f-9548f9e290e7",
        "parentId" : "14c40ed3-3fb9-4e3c-83f0-da984dc2f1fe",
        "authorId" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "body" : "empty line between these two lines?\r\n```\r\ntry:\r\n    if conf.getboolean('scheduler', 'statsd_on'):\r\n```",
        "createdAt" : "2019-03-19T17:36:43Z",
        "updatedAt" : "2019-03-19T17:40:08Z",
        "lastEditedBy" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "tags" : [
        ]
      },
      {
        "id" : "d1159f41-1aec-4b8e-83f7-741755811790",
        "parentId" : "14c40ed3-3fb9-4e3c-83f0-da984dc2f1fe",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "```\r\nStats = DummyStatsLogger  # type: Any\r\n\r\ntry:\r\n```",
        "createdAt" : "2019-03-19T17:42:18Z",
        "updatedAt" : "2019-03-19T17:42:18Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "cc0752a0-b432-4c32-8c38-635a8a07ede9",
        "parentId" : "14c40ed3-3fb9-4e3c-83f0-da984dc2f1fe",
        "authorId" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "body" : "fixed.",
        "createdAt" : "2019-03-19T18:01:22Z",
        "updatedAt" : "2019-03-19T18:01:22Z",
        "lastEditedBy" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f99b2cacbfe503fd29385c0c14bee600425d9eb",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +114,118 @@Stats = DummyStatsLogger  # type: Any\n\ntry:\n    if conf.getboolean('scheduler', 'statsd_on'):\n        from statsd import StatsClient"
  },
  {
    "id" : "6125bebc-d8c9-4430-998d-b71a541e6a74",
    "prId" : 4889,
    "prUrl" : "https://github.com/apache/airflow/pull/4889#pullrequestreview-217078397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0132fcf4-70dd-467e-afda-2f9fc6e5743b",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "This was not the behaviour I'd expect - if we (for example) create a dag_id that produces an invalid statsd name then it will not show up in the metrics. I think we should \"escape\" it instead.",
        "createdAt" : "2019-03-19T10:19:04Z",
        "updatedAt" : "2019-03-19T17:40:08Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "7ba42b76-1878-42d9-97ff-c89b82d8bf59",
        "parentId" : "0132fcf4-70dd-467e-afda-2f9fc6e5743b",
        "authorId" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "body" : "Users can define their own handler in the plugin to escape the invalid characters.",
        "createdAt" : "2019-03-19T17:29:21Z",
        "updatedAt" : "2019-03-19T17:40:08Z",
        "lastEditedBy" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "tags" : [
        ]
      },
      {
        "id" : "1b5fb53c-cae0-4db0-8ac3-512b56fa4764",
        "parentId" : "0132fcf4-70dd-467e-afda-2f9fc6e5743b",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "I see \r\n@ashb's point now, I guess the confusion is that the pr title is \"escape invalid char\" while it is throw exception. Then you swallow the exception here. I wonder if the stat name is invalid what will happen @milton0825 ?",
        "createdAt" : "2019-03-19T22:09:14Z",
        "updatedAt" : "2019-03-19T22:09:15Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "23c86807-e34f-48ad-8418-fba51e098c46",
        "parentId" : "0132fcf4-70dd-467e-afda-2f9fc6e5743b",
        "authorId" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "body" : "Well @ashb changed the title to \"escape invalid char\". It was \"handle invalid char\" when I make the PR initially.\r\n\r\nThe `stat_name_default_handler` will log warning about that the `stat_name` is invalid and not sending stats at all. If the user want to escape invalid characters in stat_name, they can override it with a custom method to define how they want to escape it.",
        "createdAt" : "2019-03-19T22:14:57Z",
        "updatedAt" : "2019-03-19T22:14:57Z",
        "lastEditedBy" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "tags" : [
        ]
      },
      {
        "id" : "f7c642d1-17c3-41cd-b510-69928770888a",
        "parentId" : "0132fcf4-70dd-467e-afda-2f9fc6e5743b",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "Ok, so I think the pr title should still be \"handle invalid char\" in this case, WDYT @ashb ?",
        "createdAt" : "2019-03-19T22:19:39Z",
        "updatedAt" : "2019-03-19T22:19:52Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "ab03767d-f459-4866-85ac-e02338460546",
        "parentId" : "0132fcf4-70dd-467e-afda-2f9fc6e5743b",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "> Users can define their own\r\n\r\nYes, but if they are using statsd, all statsd have the same character rules, so why don't we do that work once, in Airflow?",
        "createdAt" : "2019-03-19T23:42:45Z",
        "updatedAt" : "2019-03-19T23:42:45Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "fc07dc0e-41f1-4044-bf41-29d527eddd39",
        "parentId" : "0132fcf4-70dd-467e-afda-2f9fc6e5743b",
        "authorId" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "body" : "I am proposing that we log warning instead of escaping as our default behavior. ",
        "createdAt" : "2019-03-19T23:57:57Z",
        "updatedAt" : "2019-03-19T23:57:57Z",
        "lastEditedBy" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "tags" : [
        ]
      },
      {
        "id" : "3a7e48b3-2042-45ee-a318-d5d72ebd9db3",
        "parentId" : "0132fcf4-70dd-467e-afda-2f9fc6e5743b",
        "authorId" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "body" : "Say someone introduced a `stat_name` that is invalid, I think we should warn them and push them to rename it instead of showing the escaped metric.",
        "createdAt" : "2019-03-20T00:08:15Z",
        "updatedAt" : "2019-03-20T00:08:16Z",
        "lastEditedBy" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "tags" : [
        ]
      },
      {
        "id" : "4c8ebca3-c330-4810-8a26-48eb7ff93e77",
        "parentId" : "0132fcf4-70dd-467e-afda-2f9fc6e5743b",
        "authorId" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "body" : "@ashb any comments?",
        "createdAt" : "2019-03-21T04:57:33Z",
        "updatedAt" : "2019-03-21T04:57:33Z",
        "lastEditedBy" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f99b2cacbfe503fd29385c0c14bee600425d9eb",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +84,88 @@        except Exception as err:\n            log.warning('Invalid stat name: {stat}.'.format(stat=stat), err)\n            return\n        return f(stat_name, *args, **kwargs)\n"
  },
  {
    "id" : "34ca882e-12db-46a6-8657-f183314b7294",
    "prId" : 7227,
    "prUrl" : "https://github.com/apache/airflow/pull/7227#pullrequestreview-373943115",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3f3df8c-6b4b-4cff-a4de-0aa270f461ea",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Why this change?",
        "createdAt" : "2020-03-12T16:29:06Z",
        "updatedAt" : "2020-03-15T20:26:27Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "2c24d0f5-c0c6-42ec-b4f1-8269c1f6316e",
        "parentId" : "a3f3df8c-6b4b-4cff-a4de-0aa270f461ea",
        "authorId" : "426e7f7e-1c7b-4cf9-b3d4-7e31d359be93",
        "body" : "I think I found a bug when adding tests for the new functionality. The log message above the line I added states that the class used for the statsd client should fall back to `DummyStatsLogger` if the defined statsd client class cannot be imported, or cannot connect to a statsd instance, but this never happens, and `self.__class__.instance` remains set to the default value of `None`\r\n\r\nFor example, if I try to load an invalid custom statsd class using the functionality that @envious added, triggering an `ImportError`, when I then try and call `Stats.incr()` (which should still work because the underlying class has fallen back to `DummyStatsLogger`), I get errors like:\r\n```python\r\ncls = <class 'airflow.stats.Stats'>, name = 'incr'\r\n\r\n    def __getattr__(cls, name):\r\n>       return getattr(cls.instance, name)\r\nE       AttributeError: 'NoneType' object has no attribute 'incr'\r\n\r\nairflow/stats.py:188: AttributeError\r\n```",
        "createdAt" : "2020-03-12T22:30:07Z",
        "updatedAt" : "2020-03-15T20:26:27Z",
        "lastEditedBy" : "426e7f7e-1c7b-4cf9-b3d4-7e31d359be93",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1f4ad764185a3734afc3d88e2277454548e0f41",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +201,205 @@            except (socket.gaierror, ImportError) as e:\n                log.warning(\"Could not configure StatsClient: %s, using DummyStatsLogger instead.\", e)\n                self.__class__.instance = DummyStatsLogger()\n\n    def get_statsd_logger(self):"
  },
  {
    "id" : "90e441f8-774d-4c8f-a961-1025309d1259",
    "prId" : 7376,
    "prUrl" : "https://github.com/apache/airflow/pull/7376#pullrequestreview-357354662",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36f947f4-785c-4e42-b6df-f24f847f28cf",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Do you need this here too?\r\n\r\n```suggestion\r\n                log.warning(\"Could not configure StatsClient: %s, using DummyStatsLogger instead.\", e)\r\n                self.__class__.instance = DummyStatsLogger()\r\n```",
        "createdAt" : "2020-02-12T10:35:03Z",
        "updatedAt" : "2020-02-12T10:35:03Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "343a1d35-bff8-472c-8633-3073854f106d",
        "parentId" : "36f947f4-785c-4e42-b6df-f24f847f28cf",
        "authorId" : "d28f8b9d-ff28-4252-9820-c4636159d6cd",
        "body" : "I think it's good to have in case of any failure in creating statsd or dogstatsd client. ",
        "createdAt" : "2020-02-12T10:48:44Z",
        "updatedAt" : "2020-02-12T10:48:44Z",
        "lastEditedBy" : "d28f8b9d-ff28-4252-9820-c4636159d6cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "92b000eb3d8dadf04f9a515acacead32ff950945",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +185,189 @@                    self.__class__.instance = DummyStatsLogger()\n            except (socket.gaierror, ImportError) as e:\n                log.warning(\"Could not configure StatsClient: %s, using DummyStatsLogger instead.\", e)\n\n    def get_statsd_logger(self):"
  }
]