[
  {
    "id" : "1ff18c3c-08d1-4dd8-b37c-8c501c5ac1f2",
    "prId" : 9597,
    "prUrl" : "https://github.com/apache/airflow/pull/9597#pullrequestreview-507307471",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2519ab27-ecca-4ee3-8fd4-2ae2bf29aea0",
        "parentId" : null,
        "authorId" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "body" : "I'm not sure this should live inside API endpoint code. Fetching a task instance is pretty generic functionality. If we don't already support code that does this, we should probably add it to TaskInstance.py or similar files.",
        "createdAt" : "2020-07-01T05:41:16Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "tags" : [
        ]
      },
      {
        "id" : "eb5c7357-0102-41dc-ae57-a67a534c22f6",
        "parentId" : "2519ab27-ecca-4ee3-8fd4-2ae2bf29aea0",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Inside Airflow, we use execution_date as the primary identifier. However, we voted to use dag_run_id in the API\r\nhttps://lists.apache.org/thread.html/rd4be3829627dcef8b40314c62c041f460992786f3bfcc634d25a6664%40%3Cdev.airflow.apache.org%3E",
        "createdAt" : "2020-07-01T20:00:08Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "cbfe7f57-0610-4881-bc62-24310d95c115",
        "parentId" : "2519ab27-ecca-4ee3-8fd4-2ae2bf29aea0",
        "authorId" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "body" : "Ah sorry for being unclear. I was suggesting `get_task_instance` be moved to a different file outside the API.",
        "createdAt" : "2020-07-08T03:49:04Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "tags" : [
        ]
      },
      {
        "id" : "5556a212-2a89-4ada-ad2d-731830608981",
        "parentId" : "2519ab27-ecca-4ee3-8fd4-2ae2bf29aea0",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : ")Can be a follow up PR (and likely candidate would be to `TaskIstance.get_by_run_id()`)",
        "createdAt" : "2020-10-13T10:51:02Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1cc72f2b8fe2b5195d995d4bfd912a206aa58c8",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +50,54 @@)\n@provide_session\ndef get_task_instance(dag_id: str, dag_run_id: str, task_id: str, session=None):\n    \"\"\"Get task instance\"\"\"\n    query = ("
  },
  {
    "id" : "8824a04e-786d-4808-8373-0d0732bfff6d",
    "prId" : 9597,
    "prUrl" : "https://github.com/apache/airflow/pull/9597#pullrequestreview-441159612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9120f17f-0d00-4185-a1b4-37279d2b41c0",
        "parentId" : null,
        "authorId" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "body" : "I could be missing it, but are we catching this Exception anywhere?",
        "createdAt" : "2020-07-01T05:42:22Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "tags" : [
        ]
      },
      {
        "id" : "172646b8-a97d-4b6f-aa78-117d7991048e",
        "parentId" : "9120f17f-0d00-4185-a1b4-37279d2b41c0",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Yes. This is handled by connexion.\r\nhttps://connexion.readthedocs.io/en/latest/exceptions.html",
        "createdAt" : "2020-07-01T20:00:58Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1cc72f2b8fe2b5195d995d4bfd912a206aa58c8",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +70,74 @@    task_instance = query.one_or_none()\n    if task_instance is None:\n        raise NotFound(\"Task instance not found\")\n\n    return task_instance_schema.dump(task_instance)"
  },
  {
    "id" : "a7d01503-b7e5-412f-8ad9-270ba1727238",
    "prId" : 9597,
    "prUrl" : "https://github.com/apache/airflow/pull/9597#pullrequestreview-444394010",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f1b9906-7aac-4b07-934c-8e031781d3ff",
        "parentId" : null,
        "authorId" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "body" : "This filter seems somewhat ambiguous. I think the name could better express the purpose.",
        "createdAt" : "2020-07-01T05:44:08Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "tags" : [
        ]
      },
      {
        "id" : "2ff9793e-f7fe-4f74-bbc5-c09ce47221e0",
        "parentId" : "1f1b9906-7aac-4b07-934c-8e031781d3ff",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I do not know if I understand correctly. Can you say more?",
        "createdAt" : "2020-07-01T20:02:10Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "66bc8617-649a-441d-8c9f-4bd658eea8c3",
        "parentId" : "1f1b9906-7aac-4b07-934c-8e031781d3ff",
        "authorId" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "body" : "Mmmm actually nevermind. I think it makes sense.",
        "createdAt" : "2020-07-08T03:51:10Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1cc72f2b8fe2b5195d995d4bfd912a206aa58c8",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +75,79 @@\n\ndef _apply_array_filter(query, key, values):\n    if values is not None:\n        query = query.filter(key.in_(values))"
  },
  {
    "id" : "e2205133-dfc1-42c5-934d-e30292192d98",
    "prId" : 9597,
    "prUrl" : "https://github.com/apache/airflow/pull/9597#pullrequestreview-441161185",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83cc48c9-5cd0-45cb-a0a8-c1d0e1ca2b7e",
        "parentId" : null,
        "authorId" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "body" : "This function accepts 16 parameters. If we really need to pass in this many configuration details, is there a data structure that would better encapsulate system state than so many standalone params?",
        "createdAt" : "2020-07-01T05:44:57Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "tags" : [
        ]
      },
      {
        "id" : "87138c3a-198a-488a-99ff-f8d32da7ee26",
        "parentId" : "83cc48c9-5cd0-45cb-a0a8-c1d0e1ca2b7e",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "We use connexion, which fills these parameters based on the API specification.\r\nhttps://connexion.readthedocs.io/en/latest/request.html#automatic-parameter-handling",
        "createdAt" : "2020-07-01T20:03:50Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1cc72f2b8fe2b5195d995d4bfd912a206aa58c8",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +124,128 @@    queue: Optional[List[str]] = None,\n    offset: Optional[int] = None,\n    session=None,\n):  # pylint: disable=too-many-arguments\n    \"\"\""
  },
  {
    "id" : "f3723a5b-e693-4b40-aa0c-0cf1afeeabaf",
    "prId" : 9597,
    "prUrl" : "https://github.com/apache/airflow/pull/9597#pullrequestreview-441164736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e693d7f-da9a-42f5-8c75-3cb3e0ac36e1",
        "parentId" : null,
        "authorId" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "body" : "```suggestion\r\n    session = None,\r\n```",
        "createdAt" : "2020-07-01T05:47:35Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "f30d90ba-101c-4671-a1df-fa45531fa887",
        "tags" : [
        ]
      },
      {
        "id" : "00f594a0-7c1a-460c-b20d-af5f48bd3263",
        "parentId" : "6e693d7f-da9a-42f5-8c75-3cb3e0ac36e1",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "It is not correct with pylint if I remember correctly. I didn't specify the type here because SQLAlchemy does a lot of magic, and mypy likes to get lost when he is aware of its existence.",
        "createdAt" : "2020-07-01T20:10:07Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1cc72f2b8fe2b5195d995d4bfd912a206aa58c8",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +124,128 @@    queue: Optional[List[str]] = None,\n    offset: Optional[int] = None,\n    session=None,\n):  # pylint: disable=too-many-arguments\n    \"\"\""
  },
  {
    "id" : "e67389e2-7d0e-49c1-8b7f-9fdc8264c29f",
    "prId" : 9597,
    "prUrl" : "https://github.com/apache/airflow/pull/9597#pullrequestreview-507306393",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8a2a27d-789c-4da7-b249-88cf4af484f1",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "@mik-laj Is there currently no way in the new API to make a TI as success / failed ?",
        "createdAt" : "2020-09-16T10:37:50Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "956b8a75-70cc-4ce4-b65b-ed9872062fbf",
        "parentId" : "e8a2a27d-789c-4da7-b249-88cf4af484f1",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Unfortunately not. I will add them in a moment.",
        "createdAt" : "2020-10-09T15:38:24Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "78d4df42-e3bb-46ee-8961-1ccfb66e99cb",
        "parentId" : "e8a2a27d-789c-4da7-b249-88cf4af484f1",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "this has been added in `post_set_task_instances_state` method below",
        "createdAt" : "2020-10-13T10:49:32Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1cc72f2b8fe2b5195d995d4bfd912a206aa58c8",
    "line" : 236,
    "diffHunk" : "@@ -1,1 +226,230 @@@security.requires_access([(\"can_read\", \"Dag\"), (\"can_read\", \"DagRun\"), (\"can_edit\", \"Task\")])\n@provide_session\ndef post_clear_task_instances(dag_id: str, session=None):\n    \"\"\"\n    Clear task instances."
  },
  {
    "id" : "bc36d5eb-78b5-4a4b-92c6-e2397c62d0c9",
    "prId" : 9597,
    "prUrl" : "https://github.com/apache/airflow/pull/9597#pullrequestreview-507179946",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e9a8bd4-814b-4ed0-9e84-720c447b7e0a",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "```suggestion\r\n        .join(DR)\r\n```\r\n\r\nshould work because of https://github.com/apache/airflow/blob/c47383dffff1d216d1c4985b4a9cc7a7310a837e/airflow/models/dagrun.py#L77-L82",
        "createdAt" : "2020-10-12T19:55:35Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "458e9361-d685-4501-ac60-90dace18c6af",
        "parentId" : "3e9a8bd4-814b-4ed0-9e84-720c447b7e0a",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Unfortunately it doesn't work. I have the following message.\r\n```\r\nsqlalchemy.exc.InvalidRequestError: Don't know how to join to <class 'airflow.models.dagrun.DagRun'>. Please use the .select_from() method to establish an explicit left side, as well as providing an explcit ON clause if not present already to help resolve the ambiguity.\r\n```",
        "createdAt" : "2020-10-13T08:16:11Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1cc72f2b8fe2b5195d995d4bfd912a206aa58c8",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +55,59 @@        session.query(TI)\n        .filter(TI.dag_id == dag_id)\n        .join(DR, and_(TI.dag_id == DR.dag_id, TI.execution_date == DR.execution_date))\n        .filter(DR.run_id == dag_run_id)\n        .filter(TI.task_id == task_id)"
  },
  {
    "id" : "52a4ed69-5766-4c43-a075-5c513569f45f",
    "prId" : 9597,
    "prUrl" : "https://github.com/apache/airflow/pull/9597#pullrequestreview-506881350",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "245b60f1-b192-4eae-b0d7-44a86ab2d22a",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "```suggestion\r\n        base_query = base_query.join(DR)\r\n```",
        "createdAt" : "2020-10-12T19:59:25Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "6f0cbbfa-ca4e-4351-a1f5-645d5707dac3",
        "parentId" : "245b60f1-b192-4eae-b0d7-44a86ab2d22a",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "same as https://github.com/apache/airflow/pull/9597/files#r503503456",
        "createdAt" : "2020-10-12T19:59:42Z",
        "updatedAt" : "2020-10-13T10:57:09Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1cc72f2b8fe2b5195d995d4bfd912a206aa58c8",
    "line" : 142,
    "diffHunk" : "@@ -1,1 +134,138 @@        base_query = base_query.filter(TI.dag_id == dag_id)\n    if dag_run_id != \"~\":\n        base_query = base_query.join(DR, and_(TI.dag_id == DR.dag_id, TI.execution_date == DR.execution_date))\n        base_query = base_query.filter(DR.run_id == dag_run_id)\n    base_query = _apply_range_filter("
  },
  {
    "id" : "e8af1400-cae0-4dff-86d4-37af283ba5de",
    "prId" : 11335,
    "prUrl" : "https://github.com/apache/airflow/pull/11335#pullrequestreview-516746722",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d84b47f-d175-4247-8b9f-1be3652d70fd",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "If we made AirflowNotFound inherit from connextion.NotFound this code could be a simpler here.\r\n\r\nWDYT?",
        "createdAt" : "2020-10-26T10:36:52Z",
        "updatedAt" : "2020-10-26T12:51:27Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "556e5928-79b0-4da9-9aea-b570f74137c5",
        "parentId" : "9d84b47f-d175-4247-8b9f-1be3652d70fd",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "I will create a separate issue for it, to address it in a separate PR (not strictly related to this PR), so anyone else can also pick that task too.",
        "createdAt" : "2020-10-26T12:55:54Z",
        "updatedAt" : "2020-10-26T12:55:54Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "690e80b82b12ab1d7232d6f02ea6bddd1d71750c",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +293,297 @@        if not dag:\n            raise NotFound(error_message)\n    except SerializedDagNotFound:\n        # If DAG is not found in serialized_dag table\n        raise NotFound(error_message)"
  }
]