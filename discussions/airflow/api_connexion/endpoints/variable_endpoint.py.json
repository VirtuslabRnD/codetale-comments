[
  {
    "id" : "cef53156-2c77-434f-b392-1b6e4172e428",
    "prId" : 9273,
    "prUrl" : "https://github.com/apache/airflow/pull/9273#pullrequestreview-430124290",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab6eab6e-8d9c-4346-a2c9-fd2361651ca7",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I think we should set a default pagination limit. In other endpoints, it is 100 items (We can add the configuration parameter later). Otherwise, the client may mistakenly request a lot of data that he does not need.",
        "createdAt" : "2020-06-13T08:03:40Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "af02a04b-2574-4c34-b1be-f22630104503",
        "parentId" : "ab6eab6e-8d9c-4346-a2c9-fd2361651ca7",
        "authorId" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "body" : "Turns out this is already handled by `connexion` because default value for limit is defined in api spec. I have added test to verify that.",
        "createdAt" : "2020-06-13T08:36:26Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "tags" : [
        ]
      }
    ],
    "commit" : "9632636cd0476ea1970465176f56c09b1382d021",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +57,61 @@    if offset:\n        query = query.offset(offset)\n    if limit:\n        query = query.limit(limit)\n    variables = query.all()"
  },
  {
    "id" : "7cceb60e-7a07-4e6f-bf06-a30c4a6566aa",
    "prId" : 9273,
    "prUrl" : "https://github.com/apache/airflow/pull/9273#pullrequestreview-430138105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "727f0025-fd22-4cf3-8e92-4f2237e8c306",
        "parentId" : null,
        "authorId" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "body" : "```suggestion\r\nfrom connexion import NoContent\r\n```",
        "createdAt" : "2020-06-13T13:02:46Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "9632636cd0476ea1970465176f56c09b1382d021",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +20,24 @@from marshmallow import ValidationError\nfrom sqlalchemy import func\n\nfrom airflow.api_connexion.exceptions import BadRequest, NotFound\nfrom airflow.api_connexion.schemas.variable_schema import variable_collection_schema, variable_schema"
  },
  {
    "id" : "c0d4ec66-37a0-4b89-b4fb-b618c88717b8",
    "prId" : 9273,
    "prUrl" : "https://github.com/apache/airflow/pull/9273#pullrequestreview-430156740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5391b23f-76aa-4380-a595-185e7d766327",
        "parentId" : null,
        "authorId" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "body" : "```suggestion\r\ndef get_variables(session) -> Response:\r\n```\r\nlimit and offset are query parameters. ",
        "createdAt" : "2020-06-13T13:08:10Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "tags" : [
        ]
      },
      {
        "id" : "4262d85e-92e2-4f5e-997e-66e6fd2af68b",
        "parentId" : "5391b23f-76aa-4380-a595-185e7d766327",
        "authorId" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "body" : "query params are passed in as keyword arguments by connexion, see: https://github.com/zalando/connexion/blob/a250e5a59f32ce9d52754f5f7c1827f9abcf0eaf/connexion/decorators/parameter.py#L102",
        "createdAt" : "2020-06-13T18:20:48Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "tags" : [
        ]
      }
    ],
    "commit" : "9632636cd0476ea1970465176f56c09b1382d021",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +48,52 @@\n@provide_session\ndef get_variables(session, limit: Optional[int], offset: Optional[int] = None) -> Response:\n    \"\"\"\n    Get all variable values"
  },
  {
    "id" : "3fdacaf4-90cb-4393-9664-30da6e6eb79c",
    "prId" : 9273,
    "prUrl" : "https://github.com/apache/airflow/pull/9273#pullrequestreview-430165103",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eaa8d8a8-9d7a-41a5-864d-47e5e4f8fcc2",
        "parentId" : null,
        "authorId" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "body" : "```suggestion\r\n        raise BadRequest(\"Invalid Variable schema\", detail=err.messages)\r\n```",
        "createdAt" : "2020-06-13T13:23:52Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "tags" : [
        ]
      },
      {
        "id" : "04a6b074-03a6-4b75-a02c-8b88bdd13035",
        "parentId" : "eaa8d8a8-9d7a-41a5-864d-47e5e4f8fcc2",
        "authorId" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "body" : "in openapi spec, detail is defined as a string, if we just return err.messages here, it will be serialized as an object.",
        "createdAt" : "2020-06-13T18:43:05Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "tags" : [
        ]
      },
      {
        "id" : "edc1ba01-490a-47c8-afb6-bf5fe58c650a",
        "parentId" : "eaa8d8a8-9d7a-41a5-864d-47e5e4f8fcc2",
        "authorId" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "body" : "No. It will not serialize as an object. However, It's ok if you use str",
        "createdAt" : "2020-06-13T19:42:24Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "tags" : [
        ]
      },
      {
        "id" : "b3ad6a77-96fe-4c41-8c6b-7fb529fd0f90",
        "parentId" : "eaa8d8a8-9d7a-41a5-864d-47e5e4f8fcc2",
        "authorId" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "body" : "It will get serialized as a json object. You can verify this yourself by checking out my branch and remove the `str` call to see how the test fails.",
        "createdAt" : "2020-06-13T20:27:30Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "tags" : [
        ]
      }
    ],
    "commit" : "9632636cd0476ea1970465176f56c09b1382d021",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +73,77 @@        var = variable_schema.load(request.json)\n    except ValidationError as err:\n        raise BadRequest(\"Invalid Variable schema\", detail=str(err.messages))\n\n    if var.data[\"key\"] != variable_key:"
  },
  {
    "id" : "d35d6fcc-06b8-4e2d-81d3-3e480c7878f5",
    "prId" : 9273,
    "prUrl" : "https://github.com/apache/airflow/pull/9273#pullrequestreview-430158102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ee40f6d-93a0-4579-9997-fa09d27afb9e",
        "parentId" : null,
        "authorId" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "body" : "```suggestion\r\n        raise BadRequest(\"Invalid Variable schema\", detail=err.messages)\r\n```",
        "createdAt" : "2020-06-13T13:26:12Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "tags" : [
        ]
      },
      {
        "id" : "18199f37-03bf-4b51-8299-5426e2eaff13",
        "parentId" : "2ee40f6d-93a0-4579-9997-fa09d27afb9e",
        "authorId" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "body" : "see my previous comment with regards to openapi spec.",
        "createdAt" : "2020-06-13T18:43:37Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "tags" : [
        ]
      }
    ],
    "commit" : "9632636cd0476ea1970465176f56c09b1382d021",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +95,99 @@        var = variable_schema.load(request.json)\n    except ValidationError as err:\n        raise BadRequest(\"Invalid Variable schema\", detail=str(err.messages))\n    Variable.set(var.data[\"key\"], var.data[\"val\"])\n    return variable_schema.dump(var)"
  },
  {
    "id" : "8d5ed5f5-33b3-47ba-a3c4-536bc5618075",
    "prId" : 9273,
    "prUrl" : "https://github.com/apache/airflow/pull/9273#pullrequestreview-432880338",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6289c2e4-0948-45f2-a12c-33cf0fa8cd9b",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "```suggestion\r\n    query = session.query(Variable).order_by(Variable.id)\r\n```\r\nThis will allow continuity of items between pages. ",
        "createdAt" : "2020-06-18T01:30:13Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "9632636cd0476ea1970465176f56c09b1382d021",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +52,56 @@    Get all variable values\n    \"\"\"\n    query = session.query(Variable)\n    total_entries = session.query(func.count(Variable.id)).scalar()\n    query = query.order_by(Variable.id)"
  }
]