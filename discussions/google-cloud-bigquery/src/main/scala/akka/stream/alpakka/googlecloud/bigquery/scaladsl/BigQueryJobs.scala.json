[
  {
    "id" : "ee93251f-a064-4446-86f6-279f6a2dda3f",
    "prId" : 2613,
    "prUrl" : "https://github.com/akka/alpakka/pull/2613#pullrequestreview-619166007",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d880d6c-b998-40bc-8a68-d31a917b12b6",
        "parentId" : null,
        "authorId" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "body" : "Does this still perform like the code it replaced (`retryRequestWithOAuth`)? It wasn't immediately clear to me.",
        "createdAt" : "2021-03-23T18:33:53Z",
        "updatedAt" : "2021-03-24T23:41:41Z",
        "lastEditedBy" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "tags" : [
        ]
      },
      {
        "id" : "1d01d4b9-ea62-4f96-9faf-805c431b4d76",
        "parentId" : "0d880d6c-b998-40bc-8a68-d31a917b12b6",
        "authorId" : "0f602f47-e8d3-4bc5-b20c-220fb24fc52f",
        "body" : "Yes, sorry, maybe this became too convoluted.\r\n\r\n1. Inside `GoogleHttp` I consolidated `singleRequest[WithOAuth]` and `retryRequest[WithOAuth]` to `single[Authenticated]Request` which retries if a `Retry(ex)` is thrown.\r\n2. In the public API `Google` I expose `singleRequest` which just calls `singleAuthenticatedRequest`.\r\n3. I mixed `Google` into `BigQuery` and preferred calls to public `Google` APIs instead of directly to internal `GoogleHttp`",
        "createdAt" : "2021-03-23T22:13:36Z",
        "updatedAt" : "2021-03-24T23:41:41Z",
        "lastEditedBy" : "0f602f47-e8d3-4bc5-b20c-220fb24fc52f",
        "tags" : [
        ]
      },
      {
        "id" : "f25efa73-7073-4907-9ffd-67eda108807b",
        "parentId" : "0d880d6c-b998-40bc-8a68-d31a917b12b6",
        "authorId" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "body" : "Got it.",
        "createdAt" : "2021-03-23T23:15:59Z",
        "updatedAt" : "2021-03-24T23:41:41Z",
        "lastEditedBy" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "tags" : [
        ]
      }
    ],
    "commit" : "af8e150b07e46dc8d18a992207b502febbd12d59",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +71,75 @@    val uri = BigQueryEndpoints.jobCancel(settings.projectId, jobId)\n    val query = (\"location\" -> location) ?+: Query.Empty\n    singleRequest[JobCancelResponse](HttpRequest(POST, uri.withQuery(query)))\n  }\n"
  }
]