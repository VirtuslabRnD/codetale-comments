[
  {
    "id" : "ff25b8b7-0e1f-453d-9b52-3d3af36796bf",
    "prId" : 15011,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/15011#pullrequestreview-26248860",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "525aa66f-6f1d-4937-a462-5d284f19e6dc",
        "parentId" : null,
        "authorId" : "d853babe-4254-41de-b4dc-f225efa4a6ff",
        "body" : "Why is ```null``` appropriate here? Are you guaranteed not to get an error from a ```reflect```ed function? Could you provide a source doc please so I can understand.",
        "createdAt" : "2017-03-09T22:01:14Z",
        "updatedAt" : "2017-03-14T14:49:56Z",
        "lastEditedBy" : "d853babe-4254-41de-b4dc-f225efa4a6ff",
        "tags" : [
        ]
      },
      {
        "id" : "3d9d3fc5-f3ca-4ef7-92d3-f2fe556d95ce",
        "parentId" : "525aa66f-6f1d-4937-a462-5d284f19e6dc",
        "authorId" : "6713c623-640b-42a0-b6c3-f8c9c088b7c2",
        "body" : "Yes, you are guaranteed not to get an error from a `reflect`ed function: https://caolan.github.io/async/docs.html#reflect\r\n\r\nAnd in the implementation, they way the callback is called is: \r\n````\r\nreflectCallback(null, {\r\n    value: value\r\n});\r\n````\r\nOr\r\n````\r\nreflectCallback(null, {\r\n    error: err\r\n});\r\n````\r\n\r\nThat is why i put in the `null`, because it is allways `null`. ",
        "createdAt" : "2017-03-10T10:36:04Z",
        "updatedAt" : "2017-03-14T14:49:56Z",
        "lastEditedBy" : "6713c623-640b-42a0-b6c3-f8c9c088b7c2",
        "tags" : [
        ]
      }
    ],
    "commit" : "be1e40d1ee562f693ac99b39f3c8d2f7ab51d20f",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +193,197 @@    setImmediate: typeof async.nextTick;\n\n    reflect<T, E>(fn: AsyncFunction<T, E>) : (callback: (err: null, result: {error?: E, value?: T}) => void) => void;\n    reflectAll<T, E>(tasks: AsyncFunction<T, E>[]): ((callback: (err: null, result: {error?: E, value?: T}) => void) => void)[];\n"
  }
]