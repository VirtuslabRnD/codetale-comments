[
  {
    "id" : "17b993d8-80c3-4133-bef8-f2d11fbe59e6",
    "prId" : 3302,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/3302#pullrequestreview-50209562",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af6fcfac-4c64-4dd6-897b-fd5ca9ca8f93",
        "parentId" : null,
        "authorId" : "1184220e-bf82-4d6e-80d3-029ead7b5b73",
        "body" : "libgcc",
        "createdAt" : "2017-07-16T09:27:43Z",
        "updatedAt" : "2017-07-18T13:21:56Z",
        "lastEditedBy" : "1184220e-bf82-4d6e-80d3-029ead7b5b73",
        "tags" : [
        ]
      },
      {
        "id" : "91f7ecba-9533-4f84-83d9-82d925fdf1a6",
        "parentId" : "af6fcfac-4c64-4dd6-897b-fd5ca9ca8f93",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "@jsignell we do need to list `libgcc  # [not win]` as a dependency to all packages that depend on `gcc`.",
        "createdAt" : "2017-07-16T11:49:01Z",
        "updatedAt" : "2017-07-18T13:21:56Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "c00063fd-3128-46ec-b686-2636bb0de58d",
        "parentId" : "af6fcfac-4c64-4dd6-897b-fd5ca9ca8f93",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "However, I wonder if we should be using `gcc` here at all...\r\n@bgruening are we using `conda`'s `gcc` for the `OS X` packages?",
        "createdAt" : "2017-07-16T11:51:00Z",
        "updatedAt" : "2017-07-18T13:21:56Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "33628fb7-2639-40b7-9e04-f9071d2a1c04",
        "parentId" : "af6fcfac-4c64-4dd6-897b-fd5ca9ca8f93",
        "authorId" : "1184220e-bf82-4d6e-80d3-029ead7b5b73",
        "body" : "Yes, we do use gcc for every system but not windows.",
        "createdAt" : "2017-07-16T11:55:51Z",
        "updatedAt" : "2017-07-18T13:21:56Z",
        "lastEditedBy" : "1184220e-bf82-4d6e-80d3-029ead7b5b73",
        "tags" : [
        ]
      },
      {
        "id" : "f3d129dd-75ad-4c73-9124-235804ffab90",
        "parentId" : "af6fcfac-4c64-4dd6-897b-fd5ca9ca8f93",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "I believe we may have feedstocks that relied on the docker image's `gcc` for linux and could maybe `clang` on OS X. I have to check those...\r\n\r\nBTW, just curious, why not ``clang`` on OS X?",
        "createdAt" : "2017-07-16T12:04:29Z",
        "updatedAt" : "2017-07-18T13:21:56Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "96b5fd2c-e650-497b-a083-48f884fa83b3",
        "parentId" : "af6fcfac-4c64-4dd6-897b-fd5ca9ca8f93",
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "No, if you see the logs, you'll see that `clang` is being used instead of `gcc` on OSX.",
        "createdAt" : "2017-07-16T12:04:46Z",
        "updatedAt" : "2017-07-18T13:21:56Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      },
      {
        "id" : "e39c4ac2-18e3-497c-bbb9-34ae3e37a251",
        "parentId" : "af6fcfac-4c64-4dd6-897b-fd5ca9ca8f93",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "Aha! Thanks @isuruf!",
        "createdAt" : "2017-07-16T12:05:31Z",
        "updatedAt" : "2017-07-18T13:21:56Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "043dcb73-7d54-437a-bd48-155d0022ea76",
        "parentId" : "af6fcfac-4c64-4dd6-897b-fd5ca9ca8f93",
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "`gcc` pacakge is needed for fortran though.",
        "createdAt" : "2017-07-16T12:06:15Z",
        "updatedAt" : "2017-07-18T13:21:56Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      },
      {
        "id" : "9e42f1a5-cc48-4384-8330-12b56740bcf4",
        "parentId" : "af6fcfac-4c64-4dd6-897b-fd5ca9ca8f93",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "Same situation that we have for Python. I wonder if there are R packages using C++ that may crash if we don't set the flags accordingly though.",
        "createdAt" : "2017-07-16T12:07:33Z",
        "updatedAt" : "2017-07-18T13:21:56Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      }
    ],
    "commit" : "bad80d5615d9d5c76581054b52cc089b01dcbaad",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +31,35 @@\n  run:\n    - r-base\n    - libgcc               # [linux]\n    - libgfortran          # [osx]"
  },
  {
    "id" : "f6b04011-2e27-45ce-ae27-cec2fd0887ae",
    "prId" : 3302,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/3302#pullrequestreview-50209210",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7977c35-6f09-45af-97a6-edd72520ffcf",
        "parentId" : null,
        "authorId" : "1184220e-bf82-4d6e-80d3-029ead7b5b73",
        "body" : "can you remove the quote and the beginning whitespace ... you can also use \r\n```\r\nsummary: |\r\n   foo bar \r\n   bar fooo\r\n```",
        "createdAt" : "2017-07-16T09:28:47Z",
        "updatedAt" : "2017-07-18T13:21:56Z",
        "lastEditedBy" : "1184220e-bf82-4d6e-80d3-029ead7b5b73",
        "tags" : [
        ]
      },
      {
        "id" : "710b2704-cab2-476a-887e-2bdd70ac0e6e",
        "parentId" : "d7977c35-6f09-45af-97a6-edd72520ffcf",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "Summary is an optional entry in `conda-forge`. This should not be a blocker for the merge.",
        "createdAt" : "2017-07-16T11:48:18Z",
        "updatedAt" : "2017-07-18T13:21:56Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      }
    ],
    "commit" : "bad80d5615d9d5c76581054b52cc089b01dcbaad",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@  home: https://git.math.uzh.ch/reinhard.furrer/dotCall64\n  license: GPL (>= 2)\n  summary: ' An alternative version of .C() and .Fortran() supporting long vectors and 64-bit\n    integer type arguments. The provided interface .C64() features mechanisms the avoid\n    unnecessary copies of read-only or write-only arguments. This makes it a convenient"
  }
]