[
  {
    "id" : "fd455d21-4434-4e5c-9162-e28283b562ae",
    "prId" : 469,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1dd4723-2dc3-4690-8896-7759e44ade47",
        "parentId" : null,
        "authorId" : "df29484f-2e92-4f5a-9529-a99fd95dcbf8",
        "body" : "Why not %library_prefix%?\n",
        "createdAt" : "2016-04-27T21:23:16Z",
        "updatedAt" : "2016-04-28T23:18:22Z",
        "lastEditedBy" : "df29484f-2e92-4f5a-9529-a99fd95dcbf8",
        "tags" : [
        ]
      },
      {
        "id" : "c92fa45c-0dfd-48c8-8bc4-5e9151a4292d",
        "parentId" : "f1dd4723-2dc3-4690-8896-7759e44ade47",
        "authorId" : "14d55654-e136-4b91-9542-e6f989e48912",
        "body" : "You mean `echo @%%~dp0\\..\\Library\\...`? This is put into a batch file which is then called at runtime, so `%library_prefix%` is no set and I didn't want to include a full path here which would need to be rewritten when it gets installed (which conda would do automatically?)\n",
        "createdAt" : "2016-04-27T21:24:26Z",
        "updatedAt" : "2016-04-28T23:18:22Z",
        "lastEditedBy" : "14d55654-e136-4b91-9542-e6f989e48912",
        "tags" : [
        ]
      },
      {
        "id" : "70bc6a14-1f75-458d-b257-3c6edefae9e2",
        "parentId" : "f1dd4723-2dc3-4690-8896-7759e44ade47",
        "authorId" : "df29484f-2e92-4f5a-9529-a99fd95dcbf8",
        "body" : "You're right on point there. Conda would rewrite it automatically if you relied on the env vars provided by conda-build such as `%library_prefix%`.\n\nI feel like that is actually a little bit more resistant to future changes than the current approach which embeds some knowledge of the directory structure into the script that could be abstracted away into the env vars as explained. \n",
        "createdAt" : "2016-04-28T06:41:42Z",
        "updatedAt" : "2016-04-28T23:18:22Z",
        "lastEditedBy" : "df29484f-2e92-4f5a-9529-a99fd95dcbf8",
        "tags" : [
        ]
      },
      {
        "id" : "55a941dd-bbba-4c06-88e0-e85e038d4e90",
        "parentId" : "f1dd4723-2dc3-4690-8896-7759e44ade47",
        "authorId" : "14d55654-e136-4b91-9542-e6f989e48912",
        "body" : "One argument for relative path in the batch files is that you can copy a env enround... But I'm not sure if that is actually a possibility with the rest of the conda environment.\n\n[I'm still pondering how to migrate my y27 conda root to py3.5 and one way would be to copy all my envs to a new miniconda installation and then remove the old path from PATH]\n",
        "createdAt" : "2016-04-28T07:27:42Z",
        "updatedAt" : "2016-04-28T23:18:22Z",
        "lastEditedBy" : "14d55654-e136-4b91-9542-e6f989e48912",
        "tags" : [
        ]
      },
      {
        "id" : "b4deec93-de15-4177-bf59-3855e4e4e299",
        "parentId" : "f1dd4723-2dc3-4690-8896-7759e44ade47",
        "authorId" : "df29484f-2e92-4f5a-9529-a99fd95dcbf8",
        "body" : "Right, I see. I try to avoid that scenario but understandably, there's a use case for everything. :)\n",
        "createdAt" : "2016-04-28T07:28:47Z",
        "updatedAt" : "2016-04-28T23:18:22Z",
        "lastEditedBy" : "df29484f-2e92-4f5a-9529-a99fd95dcbf8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a29b5f79a3104c13e15d205b255de017bb63bc7",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +11,15 @@rem latex tools must be run from miktex tree\nfor %%f in (\"%LIBRARY_PREFIX%\\miktex-portable\\miktex\\bin\\*.exe\") do (\n\techo @%%~dp0\\..\\Library\\miktex-portable\\miktex\\bin\\%%~nf %%* >> \"%SCRIPTS%\\%%~nf.bat\"\n)\nif errorlevel 1 exit 1"
  }
]