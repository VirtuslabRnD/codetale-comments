[
  {
    "id" : "572b869f-e19c-4abe-94ab-6d400c60fb7b",
    "prId" : 12577,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/12577#pullrequestreview-483171644",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c8d0b4e-add4-449d-9471-0fdf12ad3b56",
        "parentId" : null,
        "authorId" : "085a9c6b-569e-49bd-9434-7f128372cf0c",
        "body" : "If c-extensions are being built, then you should have:\r\n\r\nhttps://github.com/conda-forge/staged-recipes/blob/master/recipes/example/meta.yaml#L37-L41\r\n\r\nAre you choosing not to build the cython extensions? If you aren't going to do that, then you should remove `cython` from host. If you are, remove the `noarch: python` and add the c-compiler under `build`. ",
        "createdAt" : "2020-09-06T19:10:00Z",
        "updatedAt" : "2020-09-06T20:48:02Z",
        "lastEditedBy" : "085a9c6b-569e-49bd-9434-7f128372cf0c",
        "tags" : [
        ]
      },
      {
        "id" : "a28a3735-07e1-4cc3-9deb-50083a8ab00f",
        "parentId" : "2c8d0b4e-add4-449d-9471-0fdf12ad3b56",
        "authorId" : "87a73e35-f6fd-41ea-b09b-5c17b6a9b3ac",
        "body" : "shouldn't the dependency on a c compiler come transitively from the `cython` dependency? it seems verbose to have to specify both `cython` and a compiler as a dep, when that is already implied by the build time `cython` dep",
        "createdAt" : "2020-09-06T19:40:18Z",
        "updatedAt" : "2020-09-06T20:48:02Z",
        "lastEditedBy" : "87a73e35-f6fd-41ea-b09b-5c17b6a9b3ac",
        "tags" : [
        ]
      },
      {
        "id" : "bd9ff3d0-f456-4651-8799-79bc2f9b664b",
        "parentId" : "2c8d0b4e-add4-449d-9471-0fdf12ad3b56",
        "authorId" : "085a9c6b-569e-49bd-9434-7f128372cf0c",
        "body" : "cython does not list a compiler as a `run` dependency:\r\n\r\nhttps://github.com/conda-forge/cython-feedstock/blob/master/recipe/meta.yaml#L19-L27",
        "createdAt" : "2020-09-06T19:47:42Z",
        "updatedAt" : "2020-09-06T20:48:02Z",
        "lastEditedBy" : "085a9c6b-569e-49bd-9434-7f128372cf0c",
        "tags" : [
        ]
      },
      {
        "id" : "4c170d51-3a51-4d22-9018-b839dc55b263",
        "parentId" : "2c8d0b4e-add4-449d-9471-0fdf12ad3b56",
        "authorId" : "87a73e35-f6fd-41ea-b09b-5c17b6a9b3ac",
        "body" : "ok I've added it, would be better if conda understood that cython is itself a compiler and handled it appropriately but oh well",
        "createdAt" : "2020-09-06T20:38:59Z",
        "updatedAt" : "2020-09-06T20:48:02Z",
        "lastEditedBy" : "87a73e35-f6fd-41ea-b09b-5c17b6a9b3ac",
        "tags" : [
        ]
      },
      {
        "id" : "cc38af0b-a006-43db-82a3-18d55b12f551",
        "parentId" : "2c8d0b4e-add4-449d-9471-0fdf12ad3b56",
        "authorId" : "085a9c6b-569e-49bd-9434-7f128372cf0c",
        "body" : "You're certainly welcome to raise the issue on the cython feedstock, but I suspect that it has something to do with allowing the package to specify which c-compiler to use rather than having cython make that determination. \r\n\r\nAlso if we are building C-extensions then you should remove `noarch: python`.",
        "createdAt" : "2020-09-06T20:46:52Z",
        "updatedAt" : "2020-09-06T20:48:02Z",
        "lastEditedBy" : "085a9c6b-569e-49bd-9434-7f128372cf0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c0502795ca0ddbdc6fef38e88c7c83d4c81464c",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +14,18 @@  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  build:\n    - {{ compiler('c') }}"
  }
]