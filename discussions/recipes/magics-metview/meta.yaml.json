[
  {
    "id" : "9496a817-c27f-4c09-85ea-35813959068f",
    "prId" : 10357,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/10357#pullrequestreview-328231318",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e105325f-23e2-4f47-bf2c-29aa5734ede2",
        "parentId" : null,
        "authorId" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "body" : "Better get make from conda-forge rather than using the host:\r\n```suggestion\r\n    - cmake\r\n    - make\r\n```\r\n(For example, the container for POWER builds doesn't have it included)",
        "createdAt" : "2019-12-06T14:25:08Z",
        "updatedAt" : "2019-12-07T09:43:03Z",
        "lastEditedBy" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3e2a4ef46064bfc6a0d3a75e4c865a11bcd27b6",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +23,27 @@requirements:\n  build:\n    - cmake\n    - make\n    - {{ compiler('c') }}"
  },
  {
    "id" : "8da2e7ec-b725-4dbe-9ab1-93782786edb6",
    "prId" : 10357,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/10357#pullrequestreview-328482707",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f97f43f-6c2a-43f0-9d1d-583919b61b6b",
        "parentId" : null,
        "authorId" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "body" : "Can you do anything more for testing that the build works like (in order of preference):\r\n* running commands\r\n* running `command --help` for each binary\r\n* Using `which command` to make sure it's on `$PATH`\r\n\r\nIf you see failures due to the lack of X11 server on Linux you can workaround it using the suggestion in https://github.com/conda-forge/staged-recipes/pull/8645#issuecomment-505879846",
        "createdAt" : "2019-12-06T14:36:12Z",
        "updatedAt" : "2019-12-07T09:43:03Z",
        "lastEditedBy" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "tags" : [
        ]
      },
      {
        "id" : "40528400-3520-415a-ac6d-790311b77ff8",
        "parentId" : "6f97f43f-6c2a-43f0-9d1d-583919b61b6b",
        "authorId" : "ec8e3da2-d3ee-4018-8157-6db2f15843d0",
        "body" : "Thanks for the thorough review, @chrisburr ! Sadly I don't think there are any testable commands which can be run here. The main output of this build is a trio of libraries (libMagPlusDouble.so, libMagPlusSingle.so, libMagPlus.so on Linux). A couple of binaries are produced but I think they're legacy and not really used. If it helps, there is some testing with `ctest` during the build script.",
        "createdAt" : "2019-12-06T15:43:00Z",
        "updatedAt" : "2019-12-07T09:43:03Z",
        "lastEditedBy" : "ec8e3da2-d3ee-4018-8157-6db2f15843d0",
        "tags" : [
        ]
      },
      {
        "id" : "0676d9fd-6d6c-4762-be78-02024de22f9c",
        "parentId" : "6f97f43f-6c2a-43f0-9d1d-583919b61b6b",
        "authorId" : "ec8e3da2-d3ee-4018-8157-6db2f15843d0",
        "body" : "I was wrong ;) Added a test for one of the binaries.",
        "createdAt" : "2019-12-06T16:54:32Z",
        "updatedAt" : "2019-12-07T09:43:03Z",
        "lastEditedBy" : "ec8e3da2-d3ee-4018-8157-6db2f15843d0",
        "tags" : [
        ]
      },
      {
        "id" : "eca335f7-bb75-4af8-928f-665585786c0e",
        "parentId" : "6f97f43f-6c2a-43f0-9d1d-583919b61b6b",
        "authorId" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "body" : "As it mainly provides shared libraries, should this recipe use `run_exports` to ensure that if it is used in a downstream package's `host` requirements, it is automatically added to `run` with appropriate version constrains? \r\n\r\nFor example:\r\n```yaml\r\nbuild:\r\n  run_exports:\r\n    - {{ pin_subpackage('magics-metview', max_pin='x.x') }}\r\n```\r\n(Adjust `x.x` to `x` or `x.x.x` depending on the expected ABI stability)\r\n\r\nSee https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#export-runtime-requirements",
        "createdAt" : "2019-12-06T21:19:52Z",
        "updatedAt" : "2019-12-07T09:43:03Z",
        "lastEditedBy" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "tags" : [
        ]
      },
      {
        "id" : "1eb493bf-5c92-4f18-af3e-70fc855ee10f",
        "parentId" : "6f97f43f-6c2a-43f0-9d1d-583919b61b6b",
        "authorId" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "body" : "You can also use `test -f $PREFIX/lib/libSomething.so` to make sure libraries are installed in the right place as expected.\r\n\r\n(I've accidentally deployed empty packages when skipping these tests so they are useful.)",
        "createdAt" : "2019-12-06T21:21:03Z",
        "updatedAt" : "2019-12-07T09:43:03Z",
        "lastEditedBy" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "tags" : [
        ]
      },
      {
        "id" : "ce21e064-bf8b-4ded-91ee-d1555d7bd231",
        "parentId" : "6f97f43f-6c2a-43f0-9d1d-583919b61b6b",
        "authorId" : "ec8e3da2-d3ee-4018-8157-6db2f15843d0",
        "body" : "Never heard of `run_exports` before - looks cool. I've updated and added a few `test -f`s. Thanks :)",
        "createdAt" : "2019-12-06T22:03:35Z",
        "updatedAt" : "2019-12-07T09:43:03Z",
        "lastEditedBy" : "ec8e3da2-d3ee-4018-8157-6db2f15843d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3e2a4ef46064bfc6a0d3a75e4c865a11bcd27b6",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +67,71 @@test:\n  commands:\n    - printf \"%s\\n\" \"${MAGPLUS_HOME:?MAGPLUS_HOME is not set}\"\n    - which magjsonx\n    - test -f $PREFIX/lib/libMagPlus${SHLIB_EXT}  # [unix]"
  }
]