[
  {
    "id" : "2587da08-c6a4-4bf5-9241-77da6cdbbf69",
    "prId" : 1076,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87bebfa5-5867-4c34-b06b-54e869be2dd7",
        "parentId" : null,
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "@moorepants you can add a simple \"file exists\" test here. See an example in:\n\nhttps://github.com/conda-forge/hdfeos2-feedstock/blob/master/recipe/meta.yaml#L26-L27\n",
        "createdAt" : "2016-07-17T19:13:35Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd28fd304ee3a975687e3072ec4039d6e91be479",
    "line" : null,
    "diffHunk" : "@@ -1,1 +69,73 @@    - test -f $PREFIX/lib/libSimTKmath.dylib                          # [osx]\n    - test -f $PREFIX/lib/libSimTKsimbody.dylib                       # [osx]\n\nabout:\n    home: https://simtk.org/home/simbody"
  },
  {
    "id" : "2a0976ef-61f0-4482-a0c7-5fbe77644303",
    "prId" : 1076,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a99f33d-4c8d-4120-aceb-c70b5c48864c",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Add this `{% set variant = \"openblas\" %}` below.\n",
        "createdAt" : "2016-07-18T16:08:39Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "df1fa7d9-441d-463d-ab5b-ea375ab5a33a",
        "parentId" : "1a99f33d-4c8d-4120-aceb-c70b5c48864c",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Done below.\n",
        "createdAt" : "2016-07-18T19:16:39Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd28fd304ee3a975687e3072ec4039d6e91be479",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@{% set version = \"3.5.3\" %}\n{% set variant = \"openblas\" %}\n"
  },
  {
    "id" : "34a0ce72-b86d-42e1-bf17-ac1d34896a4a",
    "prId" : 1076,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7df57cd1-8250-41e4-9cc4-cb064bc02b87",
        "parentId" : null,
        "authorId" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "body" : "I'm getting this failure on CircleCI now:\n\n```\n[ 63%] Building CXX object Simbody/tests/CMakeFiles/TestCustomConstraints.dir/TestCustomConstraints.cpp.o\n/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/Simbody/Visualizer/simbody-visualizer/simbody-visualizer.cpp:84:25: fatal error: GL/glut.h: No such file or directory\n     #include <GL/glut.h>\n                         ^\ncompilation terminated.\nmake[2]: *** [Simbody/Visualizer/simbody-visualizer/CMakeFiles/simbody-visualizer.dir/simbody-visualizer.cpp.o] Error 1\nmake[1]: *** [Simbody/Visualizer/simbody-visualizer/CMakeFiles/simbody-visualizer.dir/all] Error 2\nmake[1]: *** Waiting for unfinished jobs....\n[ 63%] Linking CXX executable ../../TestCustomConstraints\n[ 63%] Built target TestCustomConstraints\nmake: *** [all] Error 2\nCommand failed: /bin/bash -x -e /opt/conda/conda-bld/work/simbody-Simbody-3.5.3/conda_build.sh\n```\n\nSeems the glut header isn't available.\n",
        "createdAt" : "2016-07-19T15:54:45Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "tags" : [
        ]
      },
      {
        "id" : "d50a20a9-e889-4d9d-a37c-2096d43aca31",
        "parentId" : "7df57cd1-8250-41e4-9cc4-cb064bc02b87",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Not sure what to say. The header is definitely in the package if one looks. Maybe set some flags for CMake to search for these includes. This [doc](https://cmake.org/cmake/help/v3.0/module/FindGLUT.html) may be helpful for that.\n",
        "createdAt" : "2016-07-19T16:14:43Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "31a78ae6-3e3f-4765-97d3-47e8315f2fb7",
        "parentId" : "7df57cd1-8250-41e4-9cc4-cb064bc02b87",
        "authorId" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "body" : "@chrisdembia Any idea on this one?\n",
        "createdAt" : "2016-07-19T16:19:17Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "tags" : [
        ]
      },
      {
        "id" : "fc0316cc-20f4-4e14-b5ae-eeefd7646ea1",
        "parentId" : "7df57cd1-8250-41e4-9cc4-cb064bc02b87",
        "authorId" : "481b9fcd-d209-4d92-a623-0ced0c67765b",
        "body" : "Turn `CMAKE_VERBOSE_MAKEFILE` on so that you can see the entire compiler invocation; then we can see where CMake expects glut.h to be.\n\nThe workaround: you could set the cmake variable `CMAKE_CXX_FLAGS` to `-I<dir-to-GL>`. For example, if the layout is `/foo/bar/GL/glut.h`, you could use `-I/foo/bar`. \n",
        "createdAt" : "2016-07-19T16:58:12Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "481b9fcd-d209-4d92-a623-0ced0c67765b",
        "tags" : [
        ]
      },
      {
        "id" : "477e0671-69a4-40b6-8513-c731a53ff20d",
        "parentId" : "7df57cd1-8250-41e4-9cc4-cb064bc02b87",
        "authorId" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "body" : "When I build locally, the header is in `include/GL/glut.h` so I'm not sure why it isn't finding it. I just pushed a new version with the flag you mention so we can see what is going on. Once I fix that and the weird windows activate issue, this should be ready to go. So we are close now.\n",
        "createdAt" : "2016-07-19T17:01:09Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "tags" : [
        ]
      },
      {
        "id" : "cc0cfbd7-7ef5-41b1-aec4-49647ccc50b4",
        "parentId" : "7df57cd1-8250-41e4-9cc4-cb064bc02b87",
        "authorId" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "body" : "It seems to be looking in `/usr/include` which is incorrect:\n\n```\n// Path to a file.\nOPENGL_INCLUDE_DIR:PATH=/usr/include\n\n// Path to a library.\nOPENGL_gl_LIBRARY:FILEPATH=/usr/lib64/libGL.so\n\n// Path to a library.\nOPENGL_glu_LIBRARY:FILEPATH=/usr/lib64/libGLU.so\n```\n\nUPDATED: This is correct.\n",
        "createdAt" : "2016-07-19T17:04:10Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "tags" : [
        ]
      },
      {
        "id" : "dc2f0fad-363b-4550-a656-e6c115df99d6",
        "parentId" : "7df57cd1-8250-41e4-9cc4-cb064bc02b87",
        "authorId" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "body" : "On linux it should be looking here: \n\n```\n+ ls /opt/conda/envs/_build/include/GL\nfreeglut_ext.h\nfreeglut.h\nfreeglut_std.h\nglut.h\n```\n",
        "createdAt" : "2016-07-19T17:06:45Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "tags" : [
        ]
      },
      {
        "id" : "3263d852-a844-4192-915f-192a5c3a52ec",
        "parentId" : "7df57cd1-8250-41e4-9cc4-cb064bc02b87",
        "authorId" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "body" : "But this looks correct:\n\n```\n-- Found OpenGL: /usr/lib64/libGL.so  \n-- Found GLUT: /opt/conda/envs/_build/lib/libglut.so  \n...\n// Path to a file.\nGLUT_INCLUDE_DIR:PATH=/opt/conda/envs/_build/include\n\n// Path to a library.\nGLUT_Xi_LIBRARY:FILEPATH=/usr/lib64/libXi.so\n\n// Path to a library.\nGLUT_Xmu_LIBRARY:FILEPATH=/usr/lib64/libXmu.so\n\n// Path to a library.\nGLUT_glut_LIBRARY:FILEPATH=/opt/conda/envs/_build/lib/libglut.so\n```\n",
        "createdAt" : "2016-07-19T17:08:18Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "tags" : [
        ]
      },
      {
        "id" : "3e82e3ba-e655-4f2e-93ee-eabbb2082e65",
        "parentId" : "7df57cd1-8250-41e4-9cc4-cb064bc02b87",
        "authorId" : "481b9fcd-d209-4d92-a623-0ced0c67765b",
        "body" : "Ah well then it should be sufficient to set the cmake variable when invoking cmake: `cmake ..... -DOPENGL_INCLUDE_DIR=<correct-path>`.\n",
        "createdAt" : "2016-07-19T17:15:34Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "481b9fcd-d209-4d92-a623-0ced0c67765b",
        "tags" : [
        ]
      },
      {
        "id" : "224caf7f-721b-46c8-9907-18cf20a29a1a",
        "parentId" : "7df57cd1-8250-41e4-9cc4-cb064bc02b87",
        "authorId" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "body" : "And here is a gcc invocation:\n\n```\ncd /opt/conda/conda-bld/work/simbody-Simbody-3.5.3/build/Simbody/Visualizer/simbody-visualizer && /opt/rh/devtoolset-2/root/usr/bin/g++   -DSIMBODY_VISUALIZER_INSTALL_DIR=\\\"/opt/conda/envs/_build/libexec/simbody/\\\" -DSimTK_SIMBODY_AUTHORS=\\\"Michael.Sherman_Peter.Eastman\\\" -DSimTK_SIMBODY_COPYRIGHT_YEARS=\\\"2005-15\\\" -DSimTK_SIMBODY_LIBRARY_NAME=SimTKsimbody -DSimTK_SIMBODY_MAJOR_VERSION=3 -DSimTK_SIMBODY_MINOR_VERSION=5 -DSimTK_SIMBODY_PATCH_VERSION=3 -I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/Platform/Linux/include -I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/./include -I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/Scalar/include -I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/SmallMatrix/include -I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/Mechanics/include -I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/BigMatrix/include -I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/Geometry/include -I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/Simulation/include -I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/Random/include -I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/Polynomial/include -I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKmath/./include -I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKmath/LinearAlgebra/include -I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKmath/Integrators/include -I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKmath/Optimizers/include -I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKmath/Geometry/include -I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/Simbody/./include -I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/Simbody/Visualizer/include  -DBOOST_MATH_DISABLE_FLOAT128 -m64  -std=c++11 -DNDEBUG -O2 -g      -o CMakeFiles/simbody-visualizer.dir/simbody-visualizer.cpp.o -c /opt/conda/conda-bld/work/simbody-Simbody-3.5.3/Simbody/Visualizer/simbody-visualizer/simbody-visualizer.cpp\n/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/Simbody/Visualizer/simbody-visualizer/simbody-visualizer.cpp:84:25: fatal error: GL/glut.h: No such file or directory\n     #include <GL/glut.h>\n```\n",
        "createdAt" : "2016-07-19T17:18:23Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "tags" : [
        ]
      },
      {
        "id" : "e0f59ea9-e739-4a12-807f-46035aa57b7c",
        "parentId" : "7df57cd1-8250-41e4-9cc4-cb064bc02b87",
        "authorId" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "body" : "@chrisdembia Do you see anything odd in the the above commands?\n",
        "createdAt" : "2016-07-19T17:26:29Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "tags" : [
        ]
      },
      {
        "id" : "07bd168f-7602-4cee-8ce2-cdac1918284e",
        "parentId" : "7df57cd1-8250-41e4-9cc4-cb064bc02b87",
        "authorId" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "body" : "Here is a more organized print:\n\n```\n[ 63%] Building CXX object Simbody/Visualizer/simbody-visualizer/CMakeFiles/simbody-visualizer.dir/simbody-visualizer.cpp.o\ncd /opt/conda/conda-bld/work/simbody-Simbody-3.5.3/build/Simbody/Visualizer/simbody-visualizer && /opt/rh/devtoolset-2/root/usr/bin/g++\n-DSIMBODY_VISUALIZER_INSTALL_DIR=\\\"/opt/conda/envs/_build/libexec/simbody/\\\"\n-DSimTK_SIMBODY_AUTHORS=\\\"Michael.Sherman_Peter.Eastman\\\"\n-DSimTK_SIMBODY_COPYRIGHT_YEARS=\\\"2005-15\\\"\n-DSimTK_SIMBODY_LIBRARY_NAME=SimTKsimbody\n-DSimTK_SIMBODY_MAJOR_VERSION=3\n-DSimTK_SIMBODY_MINOR_VERSION=5\n-DSimTK_SIMBODY_PATCH_VERSION=3\n-I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/Platform/Linux/include\n-I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/./include\n-I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/Scalar/include\n-I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/SmallMatrix/include\n-I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/Mechanics/include\n-I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/BigMatrix/include\n-I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/Geometry/include\n-I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/Simulation/include\n-I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/Random/include\n-I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKcommon/Polynomial/include\n-I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKmath/./include\n-I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKmath/LinearAlgebra/include\n-I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKmath/Integrators/include\n-I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKmath/Optimizers/include\n-I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/SimTKmath/Geometry/include\n-I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/Simbody/./include\n-I/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/Simbody/Visualizer/include\n-DBOOST_MATH_DISABLE_FLOAT128\n-m64\n-std=c++11\n-DNDEBUG\n-O2\n-g\n-o CMakeFiles/simbody-visualizer.dir/simbody-visualizer.cpp.o\n-c /opt/conda/conda-bld/work/simbody-Simbody-3.5.3/Simbody/Visualizer/simbody-visualizer/simbody-visualizer.cpp\n/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/Simbody/Visualizer/simbody-visualizer/simbody-visualizer.cpp:84:25: fatal error: GL/glut.h: No such file or directory\n     #include <GL/glut.h>\n```\n",
        "createdAt" : "2016-07-19T17:34:43Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "tags" : [
        ]
      },
      {
        "id" : "b681def1-ab0a-420c-a30b-1c483622e093",
        "parentId" : "7df57cd1-8250-41e4-9cc4-cb064bc02b87",
        "authorId" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "body" : "This is a bug in Simbody: https://github.com/simbody/simbody/issues/511\n",
        "createdAt" : "2016-07-19T18:18:01Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "tags" : [
        ]
      },
      {
        "id" : "3a1a6f26-1420-40cf-8185-adb61e22e8ac",
        "parentId" : "7df57cd1-8250-41e4-9cc4-cb064bc02b87",
        "authorId" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "body" : "Now I got this:\n\n```\n+ -DCMAKE_CXX_FLAGS=-I/opt/conda/envs/_build/include\n/opt/conda/conda-bld/work/simbody-Simbody-3.5.3/conda_build.sh: line 30: -DCMAKE_CXX_FLAGS=-I/opt/conda/envs/_build/include: No such file or directory\nCommand failed: /bin/bash -x -e /opt/conda/conda-bld/work/simbody-Simbody-3.5.3/conda_build.sh\n\n./scripts/run_docker_build.sh returned exit code 1\n```\n\nAlthough, I think the previous commit ran fine with that.\n",
        "createdAt" : "2016-07-19T18:25:30Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "tags" : [
        ]
      },
      {
        "id" : "3f4e0d22-5b47-4fe7-8578-beb97386378c",
        "parentId" : "7df57cd1-8250-41e4-9cc4-cb064bc02b87",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Forgot a `\\`?\n",
        "createdAt" : "2016-07-19T18:26:45Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "c66ea4a4-9b49-429a-b28c-3d52bbc564cc",
        "parentId" : "7df57cd1-8250-41e4-9cc4-cb064bc02b87",
        "authorId" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "body" : "Yeh, probably.\n",
        "createdAt" : "2016-07-19T18:37:47Z",
        "updatedAt" : "2016-07-21T19:01:50Z",
        "lastEditedBy" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd28fd304ee3a975687e3072ec4039d6e91be479",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@        - blas 1.1 {{ variant }}  # [not win]\n        - openblas 0.2.18*        # [not win]\n        - freeglut                # [linux]\n        - python                  # [win]\n    run:"
  },
  {
    "id" : "55414107-901c-41db-b4b5-361ea5f139cf",
    "prId" : 1076,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81baa529-bc04-4ba3-90ff-6fbcd3fb60ec",
        "parentId" : null,
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "Windows failure was because of this difference, https://github.com/simbody/simbody/blob/master/CMakeLists.txt#L567-L579\n\nHeaders and visualizer are installed in different directories than Unixes, but IMO, they shouldn't.\n",
        "createdAt" : "2016-07-22T01:38:45Z",
        "updatedAt" : "2016-07-22T01:38:45Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      },
      {
        "id" : "f6f5e871-682a-4a53-9176-5b674a62b910",
        "parentId" : "81baa529-bc04-4ba3-90ff-6fbcd3fb60ec",
        "authorId" : "481b9fcd-d209-4d92-a623-0ced0c67765b",
        "body" : "> but IMO, they shouldn't.\n\nYou mean for conda, specifically? I think it makes sense for conda to use the same installation layout for all platforms, but in general, different platforms have different requirements and conventions. \n\nI'm fine with having Simbody's `SIMBODY_VISUALIZER_REL_INSTALL_DIR` and `SIMBODY_INCLUDE_INSTALL_DIR` being cache variables so that packagers can customize their values.\n",
        "createdAt" : "2016-07-22T01:49:38Z",
        "updatedAt" : "2016-07-22T01:57:22Z",
        "lastEditedBy" : "481b9fcd-d209-4d92-a623-0ced0c67765b",
        "tags" : [
        ]
      },
      {
        "id" : "70b4d9f5-9fff-4e1d-9ac1-5caf0f735348",
        "parentId" : "81baa529-bc04-4ba3-90ff-6fbcd3fb60ec",
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "Makes sense. Some of the reasons mentioned there doesn't apply to conda, but making those two cache variables should fix it. \n",
        "createdAt" : "2016-07-22T01:52:34Z",
        "updatedAt" : "2016-07-22T01:52:34Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      },
      {
        "id" : "b9868c72-e246-4da9-9845-969eb7bea267",
        "parentId" : "81baa529-bc04-4ba3-90ff-6fbcd3fb60ec",
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "On second thought, it should not be different in general. For eg: a user would do,\n\n```\n#include <simbody/Simbody.h>\n```\n\nin user program. This would work in Unixes, but will not in Windows because Simbody.h is installed in `C:\\Program Files\\simbody\\include\\Simbody.h`\n",
        "createdAt" : "2016-07-22T03:12:52Z",
        "updatedAt" : "2016-07-22T03:12:52Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      },
      {
        "id" : "d57331d9-6c97-45e2-9e71-a8f3d4ac6e4d",
        "parentId" : "81baa529-bc04-4ba3-90ff-6fbcd3fb60ec",
        "authorId" : "481b9fcd-d209-4d92-a623-0ced0c67765b",
        "body" : "A user should _not_ use `#include <simbody/Simbody.h>`, and in general this won't work unless they install Simbody into `/usr`.  As shown in Simbody [examples](https://github.com/simbody/simbody/blob/master/examples/ChainExample.cpp#L32), the user should use `#include \"Simbody.h\"` (or `#include <Simbody.h>`). This will work cross-platform because of the way we create a cmake [Config file](https://github.com/simbody/simbody/blob/master/cmake/SimbodyConfig.cmake.in#L39) / [pkg-config](https://github.com/simbody/simbody/blob/master/cmake/pkgconfig/simbody.pc.in#L1) file. Both of these files are configured by CMake to provide the appropriate include dir for the platform you're on.\n\nWe expect that people building a project that uses Simbody will use CMake to set up the appropriate compiler/linker flags, etc. If a downstream project to Simbody chooses not to use CMake (or pkg-config) to set up the flags, then yes, the project will have to specify their own platform-dependent behavior. \n\nOn UNIX, it is conventional to install all headers inside a `<project-name>` folder (e.g., `$prefix/include/simbody`), since the project is often installed in a system-wide directory. This is not the case on Windows (aside from conda), so an extra `simbody` directory would be weird.\n",
        "createdAt" : "2016-07-22T03:41:13Z",
        "updatedAt" : "2016-07-22T03:41:57Z",
        "lastEditedBy" : "481b9fcd-d209-4d92-a623-0ced0c67765b",
        "tags" : [
        ]
      },
      {
        "id" : "117ac809-f2c3-4b6d-be74-12ae7fdeebb2",
        "parentId" : "81baa529-bc04-4ba3-90ff-6fbcd3fb60ec",
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "You are right. Project config file does include `$PREFIX/include/simbody` in it, so it should be good. `pkg-config` is not though, but it's unrelated to this PR.\n",
        "createdAt" : "2016-07-22T03:49:52Z",
        "updatedAt" : "2016-07-22T03:49:52Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      },
      {
        "id" : "402515ae-5d11-4fe8-ab38-63533b66b5ad",
        "parentId" : "81baa529-bc04-4ba3-90ff-6fbcd3fb60ec",
        "authorId" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "body" : "We'll merge this as is fr Windows and once the conda activate bug is addressed we can get the Windows build working.\n",
        "createdAt" : "2016-07-22T04:44:33Z",
        "updatedAt" : "2016-07-22T04:44:33Z",
        "lastEditedBy" : "125277b4-1a97-4480-bf30-7713bdf18b1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd28fd304ee3a975687e3072ec4039d6e91be479",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +52,56 @@    - if not exist %LIBRARY_INC%\\\\simbody\\\\SimTKmath.h exit 1         # [win]\n    - if not exist %LIBRARY_INC%\\\\simbody\\\\SimTKsimbody_aux.h exit 1  # [win]\n    - if not exist %LIBRARY_INC%\\\\simbody\\\\SimTKsimbody.h exit 1      # [win]\n    - test -f $PREFIX/libexec/simbody/simbody-visualizer              # [unix]\n    - test -f $PREFIX/include/simbody/Simbody.h                       # [unix]"
  }
]