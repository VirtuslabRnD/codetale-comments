[
  {
    "id" : "1b046196-a851-48a4-8b41-d09f072424fa",
    "prId" : 7455,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/7455#pullrequestreview-190260229",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e3030d7-1786-480c-8156-c00ad8484455",
        "parentId" : null,
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "This pin would exclude version 1.15 of numpy IIUIC. Did you mean to do that? A simple `numpy >=1.14` would be better for maintenance.",
        "createdAt" : "2019-01-08T12:54:44Z",
        "updatedAt" : "2019-01-17T09:29:59Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      },
      {
        "id" : "371f6b38-f75f-400c-b0a8-677d1bdb52b1",
        "parentId" : "6e3030d7-1786-480c-8156-c00ad8484455",
        "authorId" : "95383998-4cee-419b-8e0e-30292709e0a6",
        "body" : "The way I understand is that this will guarantee that the _build_ runs on numpy-1.14, but the runtime pin is just numpy>=1.14,<2.0.0a0.\r\n\r\nIf I just use `numpy >=1.14` in `requirements/host` then the build step chooses the latest version of numpy, and the pin for `requirements/run` then uses that version (1.15.4?) as the minimum value.\r\n\r\nI could quite easily have misunderstood the way this works.",
        "createdAt" : "2019-01-08T14:09:15Z",
        "updatedAt" : "2019-01-17T09:29:59Z",
        "lastEditedBy" : "95383998-4cee-419b-8e0e-30292709e0a6",
        "tags" : [
        ]
      },
      {
        "id" : "d3364995-5ee4-4990-9dbc-ca9d501fde88",
        "parentId" : "6e3030d7-1786-480c-8156-c00ad8484455",
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "Whoops! You are right! Sorry!",
        "createdAt" : "2019-01-08T14:17:05Z",
        "updatedAt" : "2019-01-17T09:29:59Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      }
    ],
    "commit" : "55ff5425d378c17aa0dff4463f581afaaf4ab4da",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@    - setuptools\n    - pip\n    - numpy 1.14.*\n    - chealpix\n    - gsl"
  },
  {
    "id" : "01e8556e-a9e1-46f0-a8e9-864ae045a833",
    "prId" : 7455,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/7455#pullrequestreview-190262646",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d6934ab-76db-4356-aec4-c9557c508237",
        "parentId" : null,
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "Def submit this upstream. I know some of these repos are not public.",
        "createdAt" : "2019-01-08T12:55:20Z",
        "updatedAt" : "2019-01-17T09:29:59Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      },
      {
        "id" : "4188b902-0336-454d-aa94-5f67c7f7008c",
        "parentId" : "5d6934ab-76db-4356-aec4-c9557c508237",
        "authorId" : "95383998-4cee-419b-8e0e-30292709e0a6",
        "body" : "https://git.ligo.org/lscsoft/ligo.skymap/issues/10",
        "createdAt" : "2019-01-08T14:22:33Z",
        "updatedAt" : "2019-01-17T09:29:59Z",
        "lastEditedBy" : "95383998-4cee-419b-8e0e-30292709e0a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "55ff5425d378c17aa0dff4463f581afaaf4ab4da",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +148,152 @@  license: GPLv2\n  license_family: GPL\n  license_file: '{{ environ[\"RECIPE_DIR\"] }}/LICENSE.rst'\n  summary: Tools for reading, writing, manipulating, and making LIGO and Virgo sky maps\n  description: |"
  }
]