[
  {
    "id" : "87374c97-8dac-44f4-80f2-4074bb774675",
    "prId" : 2229,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2229#pullrequestreview-17558622",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5eac113a-79b6-48f4-badd-79fec3218b56",
        "parentId" : null,
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "Please add a `license_file` here. They are specially important for custom license like this one.",
        "createdAt" : "2017-01-19T18:02:56Z",
        "updatedAt" : "2017-01-19T18:08:22Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "aa63bd5d-f292-4c7c-bd38-31219bb07cb0",
        "parentId" : "5eac113a-79b6-48f4-badd-79fec3218b56",
        "authorId" : "4a608d8f-e332-43e4-a456-de0d05e26378",
        "body" : "No problem.  I'll add the license file to the recipe directory and follow the instructions in the docs.  ",
        "createdAt" : "2017-01-19T21:12:51Z",
        "updatedAt" : "2017-01-19T21:12:51Z",
        "lastEditedBy" : "4a608d8f-e332-43e4-a456-de0d05e26378",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d8fea713a32c419bce1ce10cbdba1cd14302857",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +47,51 @@about:\n  home: https://github.com/NCAR/wrf-python\n  license: \"NCL Source Code\"\n  summary: \"Diagnostic and interpolation routines for WRF-ARW data.\"\n"
  },
  {
    "id" : "d8d3a3f2-55b1-480f-9db2-9719a8277482",
    "prId" : 2229,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2229#pullrequestreview-17558462",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55a15d22-1518-4c19-84f3-cfba3dbb6385",
        "parentId" : null,
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "You don't need `vc`s. Because this is depends on python at both `build` and `run`the right `vc` will be always activated.",
        "createdAt" : "2017-01-19T18:03:52Z",
        "updatedAt" : "2017-01-19T18:08:22Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "07ce1e95-55ec-4fe5-995f-8fc0e76a643e",
        "parentId" : "55a15d22-1518-4c19-84f3-cfba3dbb6385",
        "authorId" : "4a608d8f-e332-43e4-a456-de0d05e26378",
        "body" : "I think I added this when I was trying to build against Python 3.5 on Windows and not having much luck.  I'll remove it.",
        "createdAt" : "2017-01-19T21:12:04Z",
        "updatedAt" : "2017-01-19T21:12:04Z",
        "lastEditedBy" : "4a608d8f-e332-43e4-a456-de0d05e26378",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d8fea713a32c419bce1ce10cbdba1cd14302857",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +35,39 @@    - libgcc  # [unix]\n    - xarray\n    - vc 9  # [win and py27]\n    - vc 10  # [win and py34]\n    - vc 14  # [win and py>=35]"
  },
  {
    "id" : "06dfabbd-6579-4e17-8bb7-d5a31b4ecbe0",
    "prId" : 2229,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2229#pullrequestreview-17910768",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41440252-4563-4982-bb66-71eb36221a06",
        "parentId" : null,
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "If you need Fortran try  the `libgfortran` instead of `libgcc`. (On Linux you may still need the  `libgcc` though if you need `libquadmath`.)",
        "createdAt" : "2017-01-19T18:04:45Z",
        "updatedAt" : "2017-01-19T18:08:22Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "d8d90aa7-7c68-4f21-a6b1-38526cdefe15",
        "parentId" : "41440252-4563-4982-bb66-71eb36221a06",
        "authorId" : "4a608d8f-e332-43e4-a456-de0d05e26378",
        "body" : "I wasn't sure about this one.  I think libgfortran is for OSX only, and libgcc is supposed to have the fortran symbols in them, and then one day that stopped working, so I just pulled the whole gcc in as well.  I'll play around with it some more.",
        "createdAt" : "2017-01-19T21:10:45Z",
        "updatedAt" : "2017-01-19T21:10:45Z",
        "lastEditedBy" : "4a608d8f-e332-43e4-a456-de0d05e26378",
        "tags" : [
        ]
      },
      {
        "id" : "4aaf84a3-ff57-4562-a38d-b282bbc815ae",
        "parentId" : "41440252-4563-4982-bb66-71eb36221a06",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "This is quite a mess in conda-forge, but here is the gist of it:\r\n\r\n- if you need Fortran and `libquadmath` you need `libgcc` on Linux and `libgfortran` on OS X\r\n- if you only need Fortran you are OK with `libgfortran` on both\r\n- if you need `libgomp` you need `libgcc` on both, but then your package may be inconsistent on OS X because there people are using `clang` instead of `gcc`.\r\n",
        "createdAt" : "2017-01-23T12:20:14Z",
        "updatedAt" : "2017-01-23T12:20:15Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d8fea713a32c419bce1ce10cbdba1cd14302857",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@    - m2w64-toolchain  # [win]\n    - gcc  # [unix]\n    - libgcc  # [unix]\n    - xarray\n    - vc 9  # [win and py27]"
  },
  {
    "id" : "535470c5-1980-4b83-a45c-9de3be889945",
    "prId" : 2229,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2229#pullrequestreview-17557495",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "752857ab-b580-4ec9-a9d6-ffe6a826ee5e",
        "parentId" : null,
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "You don't need `libgcc` here because `gcc` from above installs it for you. `libgcc` is a `run` time dependency only.",
        "createdAt" : "2017-01-19T18:05:44Z",
        "updatedAt" : "2017-01-19T18:08:22Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "5faa775a-ca6d-4c8c-8887-4409470f9e2d",
        "parentId" : "752857ab-b580-4ec9-a9d6-ffe6a826ee5e",
        "authorId" : "4a608d8f-e332-43e4-a456-de0d05e26378",
        "body" : "Will fix on feedstock.",
        "createdAt" : "2017-01-19T21:07:24Z",
        "updatedAt" : "2017-01-19T21:07:24Z",
        "lastEditedBy" : "4a608d8f-e332-43e4-a456-de0d05e26378",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d8fea713a32c419bce1ce10cbdba1cd14302857",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@    - m2w64-toolchain  # [win]\n    - gcc  # [unix]\n    - libgcc  # [unix]\n    - python\n    - vc 9  # [win and py27]"
  },
  {
    "id" : "710ce165-3e92-4b75-bf00-b916d5b0d112",
    "prId" : 2229,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2229#pullrequestreview-17556890",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae46e3db-2650-4b45-9a22-03098c65c70e",
        "parentId" : null,
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "You probably need `setuptools`, no?",
        "createdAt" : "2017-01-19T18:06:02Z",
        "updatedAt" : "2017-01-19T18:08:22Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "4f9b4b74-ca8d-47d3-a913-802b7054e40a",
        "parentId" : "ae46e3db-2650-4b45-9a22-03098c65c70e",
        "authorId" : "4a608d8f-e332-43e4-a456-de0d05e26378",
        "body" : "Correct.  I originally used pip, but during the try/fail cycle, I changed to setuptools.  Will update the feedstock.",
        "createdAt" : "2017-01-19T21:04:51Z",
        "updatedAt" : "2017-01-19T21:04:51Z",
        "lastEditedBy" : "4a608d8f-e332-43e4-a456-de0d05e26378",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d8fea713a32c419bce1ce10cbdba1cd14302857",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +17,21 @@requirements:\n  build:\n    - pip\n    - numpy x.x\n    - wrapt"
  },
  {
    "id" : "8426a31a-a83a-42aa-a607-385ba853e016",
    "prId" : 2229,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2229#pullrequestreview-17557418",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2218d1c-9b97-4411-8cdf-304ad8fc2eee",
        "parentId" : null,
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "Not sure if you need everything from `m2w64-toolchain` to get Fortran on Windows. @mingwandroid probably know better.",
        "createdAt" : "2017-01-19T18:06:50Z",
        "updatedAt" : "2017-01-19T18:08:22Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "7eeb47e6-c5ad-43ae-ab4f-f6859b9b243a",
        "parentId" : "a2218d1c-9b97-4411-8cdf-304ad8fc2eee",
        "authorId" : "4a608d8f-e332-43e4-a456-de0d05e26378",
        "body" : "Google searching led me to that solution.  \r\n\r\nAlso, I can't build with Python 3.5.  I think the mingw compiler now works with Python 3.5, but numpy distutils (and python distutils) needs patching.  It looks like this is being addressed in numpy 1.13.",
        "createdAt" : "2017-01-19T21:07:01Z",
        "updatedAt" : "2017-01-19T21:07:01Z",
        "lastEditedBy" : "4a608d8f-e332-43e4-a456-de0d05e26378",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d8fea713a32c419bce1ce10cbdba1cd14302857",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +20,24 @@    - numpy x.x\n    - wrapt\n    - m2w64-toolchain  # [win]\n    - gcc  # [unix]\n    - libgcc  # [unix]"
  },
  {
    "id" : "e90813cb-049f-454c-a4d2-a5d418f7020b",
    "prId" : 2229,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2229#pullrequestreview-17785603",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0184fe0f-0679-4225-a137-5277af546d52",
        "parentId" : null,
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "I usually have success building Fortran extensions on `win32`. Just curious why you skipped it.",
        "createdAt" : "2017-01-19T18:07:19Z",
        "updatedAt" : "2017-01-19T18:08:22Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "8d5e07bc-2cef-4449-9c4b-59aadc7a2d77",
        "parentId" : "0184fe0f-0679-4225-a137-5277af546d52",
        "authorId" : "4a608d8f-e332-43e4-a456-de0d05e26378",
        "body" : "Win32 didn't work for some reason.  I'm not sure if it's the m2w64-toolchain, numpy's distutils, or me supplying the wrong compiler argument.  It failed with a lot of missing python symbols, which should have been in libpython, so I don't think it got linked in correctly.  Since I'm a little pressed for time, I decided to skip it, and will try to figure it out after AMS.",
        "createdAt" : "2017-01-19T21:01:51Z",
        "updatedAt" : "2017-01-19T21:01:51Z",
        "lastEditedBy" : "4a608d8f-e332-43e4-a456-de0d05e26378",
        "tags" : [
        ]
      },
      {
        "id" : "600b8045-33f9-4fa0-97ac-46a456a058b9",
        "parentId" : "0184fe0f-0679-4225-a137-5277af546d52",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Not sure why ATM, but something about this selector is causing problems in feedstock conversion. May require some investigation.\r\n\r\nxref: https://travis-ci.org/conda-forge/staged-recipes/builds/193381312#L319-L328",
        "createdAt" : "2017-01-20T21:03:22Z",
        "updatedAt" : "2017-01-20T21:03:22Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "47609aac-dc9d-4a1c-95ff-c01d2e42af91",
        "parentId" : "0184fe0f-0679-4225-a137-5277af546d52",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Raised this issue ( https://github.com/conda-forge/staged-recipes/issues/2259 ).",
        "createdAt" : "2017-01-20T23:26:52Z",
        "updatedAt" : "2017-01-20T23:26:52Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d8fea713a32c419bce1ce10cbdba1cd14302857",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@  number: 1\n  detect_binary_files_with_prefix: true\n  skip: True  # [win32 or np>=112 or (win and py>=35)]\n\nrequirements:"
  }
]