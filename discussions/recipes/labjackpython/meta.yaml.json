[
  {
    "id" : "293b4fda-be42-42ff-bc66-ac2fa20cc1e4",
    "prId" : 2213,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2213#pullrequestreview-17839750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eff5ce71-ed9a-4dbd-821a-d0dd26cb15fa",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Indented to 4 spaces, but everything else is 2. Could we please pick an indent level and stick with it?",
        "createdAt" : "2017-01-22T22:11:05Z",
        "updatedAt" : "2017-01-22T22:11:05Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ed736851aece770f6e1b18d34fb4e18971ed0ef",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +23,27 @@        - python\n    run:\n        - python\ntest:\n  imports:"
  },
  {
    "id" : "128838be-ca6f-4206-9d14-6cc94473164d",
    "prId" : 2213,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2213#pullrequestreview-17868827",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39007181-f4bc-4d99-8c9b-7e72b2ef06f9",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "License file?",
        "createdAt" : "2017-01-22T22:11:12Z",
        "updatedAt" : "2017-01-22T22:11:12Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "686d46e5-a8c8-4ea5-87ea-ec36c861f215",
        "parentId" : "39007181-f4bc-4d99-8c9b-7e72b2ef06f9",
        "authorId" : "e7d1071d-22fa-455d-bb95-a7d12593dac2",
        "body" : "The License is included at the end of the Readme. Just the README file as the ``license_file``? Copy the license into a new file in the conda recipe folder?",
        "createdAt" : "2017-01-23T01:47:13Z",
        "updatedAt" : "2017-01-23T01:47:13Z",
        "lastEditedBy" : "e7d1071d-22fa-455d-bb95-a7d12593dac2",
        "tags" : [
        ]
      },
      {
        "id" : "0c1843a7-e0ef-494c-8ac4-bf59915d773c",
        "parentId" : "39007181-f4bc-4d99-8c9b-7e72b2ef06f9",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Please raise an issue upstream and ask for a proper license file. This makes it easier for people to determine how the code is licensed. Also please ask that it gets included in the `MANIFEST.in`. This will help with packaging the license file when the project starts making PyPI releases.",
        "createdAt" : "2017-01-23T07:52:59Z",
        "updatedAt" : "2017-01-23T07:52:59Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ed736851aece770f6e1b18d34fb4e18971ed0ef",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@  summary: \"Python module for communicating with the LabJack U3/U6/UE9/U12.\"\n  license: MIT X-11\n  license_family: MIT\n\nextra:"
  },
  {
    "id" : "587bc4d3-dac5-4714-94ae-fba07dd435a3",
    "prId" : 2213,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2213#pullrequestreview-17868545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0dd55a7-435e-4429-9d87-83a184524fa5",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Would be good if we could determine one of these programmatically from the other. That way there is less chance of a having a mismatch in a release.",
        "createdAt" : "2017-01-22T22:12:04Z",
        "updatedAt" : "2017-01-22T22:12:04Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "6c79d18c-326e-47ed-9ee8-839242650ed7",
        "parentId" : "d0dd55a7-435e-4429-9d87-83a184524fa5",
        "authorId" : "e7d1071d-22fa-455d-bb95-a7d12593dac2",
        "body" : "Agreed - that would be useful. I looked at ``strftime`` formatting in jinja but didn't see any obvious way to do this, and versions are fairly infrequent, so don't think doing it separately here is the worst thing in the world. Can you think of a better way to get dates into jinja?",
        "createdAt" : "2017-01-23T02:05:51Z",
        "updatedAt" : "2017-01-23T02:05:51Z",
        "lastEditedBy" : "e7d1071d-22fa-455d-bb95-a7d12593dac2",
        "tags" : [
        ]
      },
      {
        "id" : "078bd99c-6ce4-47a8-bd44-e3990942a154",
        "parentId" : "d0dd55a7-435e-4429-9d87-83a184524fa5",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "I'm probably too lazy to be that clever. Would just do something like `\".\"join(upstreamversion.split(\"-\")[::-1])` in Python. Probably needs some tweaks for Jinja. Having `.` are very important as it makes this [PEP 440]( https://www.python.org/dev/peps/pep-0440/#support-for-date-based-version-identifiers ) compatible. Also it may make pinning and version comparison easier later as `conda` supports this..",
        "createdAt" : "2017-01-23T07:49:15Z",
        "updatedAt" : "2017-01-23T07:49:15Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "b907888d-d072-48e2-a131-2767150618b9",
        "parentId" : "d0dd55a7-435e-4429-9d87-83a184524fa5",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "xref: https://github.com/labjack/LabJackPython/issues/93",
        "createdAt" : "2017-01-23T07:50:29Z",
        "updatedAt" : "2017-01-23T07:50:29Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ed736851aece770f6e1b18d34fb4e18971ed0ef",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2,6 @@{% set org = \"labjack\" %}\n{% set upstreamversion = \"4-24-2014\" %}\n{% set version = \"20140424\" %}\n{% set sha256 = \"9cf7a6fca9f1308b60a4442dd1410af216fb1d38e49aa5c1ca1e670958c4bcf5\" %}\n"
  },
  {
    "id" : "ae72321b-d795-41bf-888b-fff980f144cd",
    "prId" : 2213,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2213#pullrequestreview-25155421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa0800ad-424e-4bc3-90c6-1467e4ff4f89",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Normally we just say MIT. Though this is up to you.",
        "createdAt" : "2017-01-23T07:53:23Z",
        "updatedAt" : "2017-01-23T07:53:23Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "09259f8f-ef9b-4bea-bcb5-6a2127e9048a",
        "parentId" : "aa0800ad-424e-4bc3-90c6-1467e4ff4f89",
        "authorId" : "e7d1071d-22fa-455d-bb95-a7d12593dac2",
        "body" : "Thanks - I cleaned up the version with `.` to be PEP440 compatible, but I couldn't find a clean way to run straight python in jinja without doing some weird macroing/filtering stuff (although to be fair I didn't look that hard).\r\n\r\nDo you know how to run vanilla python directly? Think that just hardcoding will be sufficient, until the upstream version gets fixed (a la the xref)?",
        "createdAt" : "2017-03-05T20:22:24Z",
        "updatedAt" : "2017-03-05T20:22:24Z",
        "lastEditedBy" : "e7d1071d-22fa-455d-bb95-a7d12593dac2",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ed736851aece770f6e1b18d34fb4e18971ed0ef",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@  home: http://labjack.com/support/labjackpython\n  summary: \"Python module for communicating with the LabJack U3/U6/UE9/U12.\"\n  license: MIT X-11\n  license_family: MIT\n"
  }
]