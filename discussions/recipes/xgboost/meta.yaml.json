[
  {
    "id" : "3eeef883-2ab1-4604-bd86-c91cacf48d40",
    "prId" : 2573,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2573#pullrequestreview-28394612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15874a94-aee6-4b63-946f-2578136da87f",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "If we could ask upstream to get this packaged in future `sdist`s that would be great.",
        "createdAt" : "2017-03-20T23:51:57Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "3f7d76a8-5db7-4863-b728-9230a90fb228",
        "parentId" : "15874a94-aee6-4b63-946f-2578136da87f",
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "You already did this. \r\n\r\nhttps://github.com/dmlc/xgboost/issues/1087",
        "createdAt" : "2017-03-21T00:01:28Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      },
      {
        "id" : "ac4e73f9-1250-4fb7-8bb3-9d0435f7d6e5",
        "parentId" : "15874a94-aee6-4b63-946f-2578136da87f",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Sorry, I forgot. 😞",
        "createdAt" : "2017-03-22T14:15:33Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fb23b33d35993aa37c77e0017103be91ed02761",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +43,47 @@  home: https://github.com/dmlc/xgboost\n  license: Apache-2.0\n  license_file: {{ RECIPE_DIR }}/LICENSE\n  summary: |\n    Scalable, Portable and Distributed Gradient Boosting (GBDT, GBRT or GBM) Library, for"
  },
  {
    "id" : "21ca203a-74ef-4e26-8557-1a1544864a18",
    "prId" : 2573,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2573#pullrequestreview-28396933",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e942afb1-9b6e-4bdf-ba0c-073332625f3f",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Is there a non-dev release we can use or is there none?",
        "createdAt" : "2017-03-20T23:52:54Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "bfdd5f70-dfa0-4d9c-8604-68fa3e285dd2",
        "parentId" : "e942afb1-9b6e-4bdf-ba0c-073332625f3f",
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "No. There is no 0.6 release, only 0.6a1 and 0.6a2.",
        "createdAt" : "2017-03-20T23:59:35Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      },
      {
        "id" : "1f58946f-0c79-457d-83cf-059db6988a45",
        "parentId" : "e942afb1-9b6e-4bdf-ba0c-073332625f3f",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "So normally we try to only do formal releases. However, if there isn't one, I don't want to be pedantic. Just once there is a formal release, let's package it. If you want to do more dev releases after the formal release, ping me and we can talk.",
        "createdAt" : "2017-03-22T14:16:53Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "302c9aa7-b6fa-4756-a310-ed7c305c1563",
        "parentId" : "e942afb1-9b6e-4bdf-ba0c-073332625f3f",
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "Makes sense to me and sounds good. \r\n\r\nFWIW, I have never actually seen a formal release on pypi for this package. Here are the pypi version numbers from the 'simple' interface ([here](https://pypi.python.org/simple/xgboost/)):\r\n\r\n```\r\nxgboost-0.4a15.tar.gz\r\nxgboost-0.4a22.tar.gz\r\nxgboost-0.4a28.tar.gz\r\nxgboost-0.6a2.tar.gz\r\nxgboost-0.4a26.tar.gz\r\nxgboost-0.4a25.tar.gz\r\nxgboost-0.4a30.tar.gz\r\nxgboost-0.4a12.tar.gz\r\nxgboost-0.4a14.tar.gz\r\nxgboost-0.4a23.tar.gz\r\nxgboost-0.4a19.tar.gz\r\nxgboost-0.4a29.tar.gz\r\nxgboost-0.6a1.tar.gz\r\nxgboost-0.4a21.tar.gz\r\nxgboost-0.4a13.tar.gz\r\nxgboost-0.4a18.tar.gz\r\nxgboost-0.4a24.tar.gz\r\nxgboost-0.4a20.tar.gz\r\nxgboost-0.4a27.tar.gz\r\n```\r\n\r\nI don't understand the logic in their versioning.",
        "createdAt" : "2017-03-22T14:23:21Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fb23b33d35993aa37c77e0017103be91ed02761",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +0,4 @@{% set name = \"xgboost\" %}\n{% set version = \"0.6a2\" %}\n{% set sha256 = \"ebc4e2bf8c8266212e342ff8ec4f6ae469e8c41a05d099b6778de8424ce32563\" %}\n"
  },
  {
    "id" : "5db9df60-cc6f-415a-b28c-5a796f601591",
    "prId" : 2573,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2573#pullrequestreview-28395102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d46c8189-714b-4e7e-93b3-c5b4bd5efd15",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Could we ask upstream to give us some option to control OpenMP?",
        "createdAt" : "2017-03-20T23:53:50Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "f490e2aa-73d2-42ae-b572-531274f1b290",
        "parentId" : "d46c8189-714b-4e7e-93b3-c5b4bd5efd15",
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "Yes we can ask. Right now they try to use openmp and then default to none if they cannot find it (but this feature is broken in their pypi package).",
        "createdAt" : "2017-03-21T00:02:51Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      },
      {
        "id" : "0920b1b8-4383-4739-ab8c-f9e0c41d0402",
        "parentId" : "d46c8189-714b-4e7e-93b3-c5b4bd5efd15",
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "Done. https://github.com/dmlc/xgboost/issues/2124",
        "createdAt" : "2017-03-21T00:04:44Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      },
      {
        "id" : "b0f64fa9-5b06-4ffa-9f77-1561fd558984",
        "parentId" : "d46c8189-714b-4e7e-93b3-c5b4bd5efd15",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Thanks.",
        "createdAt" : "2017-03-22T14:17:19Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fb23b33d35993aa37c77e0017103be91ed02761",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@  patches:\n    - Makefile.patch  # [osx]\n    - build-python.patch  # [osx]\n\nbuild:"
  },
  {
    "id" : "e760a128-8776-4466-9507-b9da9ef21cb7",
    "prId" : 2573,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2573#pullrequestreview-28416868",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23a99e6c-a97d-4bdd-9689-569a36326e06",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Also would be good if could just send this patch upstream. Hard coding compiler versions like that is not great. Hopefully they will be receptive.",
        "createdAt" : "2017-03-20T23:54:32Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "2d314b58-dbf5-427a-83c8-b5da68731d2c",
        "parentId" : "23a99e6c-a97d-4bdd-9689-569a36326e06",
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "This patch has been merged (I submitted it), but they have not pushed a new package to pypi. ",
        "createdAt" : "2017-03-20T23:56:34Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      },
      {
        "id" : "ff5db28b-587c-411d-9e56-5ebcbd68d9f5",
        "parentId" : "23a99e6c-a97d-4bdd-9689-569a36326e06",
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "See here https://github.com/dmlc/xgboost/pull/2095",
        "createdAt" : "2017-03-21T00:01:54Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      },
      {
        "id" : "33408f7b-91be-4ce5-ab28-f1c51c383581",
        "parentId" : "23a99e6c-a97d-4bdd-9689-569a36326e06",
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "Whoops! Wrong patch. Will make a pr for this one too. ",
        "createdAt" : "2017-03-21T00:54:22Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      },
      {
        "id" : "0d541b16-9f60-4117-9dda-0744c7de92c1",
        "parentId" : "23a99e6c-a97d-4bdd-9689-569a36326e06",
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "OK done for real. I compromised with the current system they have and just added `gcc/g++` before `clang/clang++`.\r\n\r\nhttps://github.com/dmlc/xgboost/pull/2125\r\n\r\nSorry for my confusion!",
        "createdAt" : "2017-03-21T01:01:26Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      },
      {
        "id" : "b4b0cba6-d889-48c5-9f28-ea2db40bc953",
        "parentId" : "23a99e6c-a97d-4bdd-9689-569a36326e06",
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "It looks like this was merged, but it is not on pypi yet ofc.",
        "createdAt" : "2017-03-22T03:09:46Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      },
      {
        "id" : "ed12449b-3fa8-452a-9b73-28cc91682277",
        "parentId" : "23a99e6c-a97d-4bdd-9689-569a36326e06",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "So I don't think that is a good fix. The main reason I say this is `clang++` will try to link to `libc++` whereas `g++` will try to link to `stdlibc++`. On Mac, the latter hasn't been updated for a long time. It comes from `gcc` 4.2.1 (last `gcc` version under GPL2). Also after 10.7 they added `clang` and started moving people to `libc++`. By 10.9 `clang` is the default toolchain on Mac, but they keep `gcc` for backwards compatibility mainly. Also in conda-forge we make use of `clang` extensively on Mac given it is the default toolchain. So there can be compatibility issues one needs to think about with C++ code.",
        "createdAt" : "2017-03-22T14:21:29Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "04ad37b3-cd23-4515-b295-4e52dda347c9",
        "parentId" : "23a99e6c-a97d-4bdd-9689-569a36326e06",
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "OK. Well they already merged this. ☹️ \r\n\r\nWe can try to convince them to just specify `clang` but I suspect more PRs on this might be annoying.\r\n\r\nHere is the relevant snippet from their Makefile (w/ my PR merged):\r\n\r\n```\r\n# on Mac OS X, force brew gcc-6, since the Xcode c++ fails anyway\r\n# it is useful for pip install compiling-on-the-fly\r\nOS := $(shell uname)\r\nifeq ($(OS), Darwin)\r\nexport CC = $(if $(shell which gcc-6),gcc-6,$(if $(shell which gcc-mp-6), gcc-mp-6, $(if $(shell which gcc), gcc, clang)))\r\nexport CXX = $(if $(shell which g++-6),g++-6,$(if $(shell which g++-mp-6),g++-mp-6, $(if $(shell which g++), g++, clang++)))\r\nendif\r\n```\r\n\r\nA few things:\r\n\r\n1. They override any external settings of `CC` or `CXX` on macs. \r\n2. From the comments, it appears maybe they had trouble with with 'Xcode c++', whatever that is. This could all be OpenMP stuff.\r\n\r\n I think unless we convince them to just specify a single default per system and let people override it like normal in Makefiles, we will have to patch here.\r\n\r\nHowever, I think we have gone off the rails completely. This discussion is best moved to an issue on xgboost about their build system on macs and letting people set their own compilers.\r\n\r\nSince we have to patch anyways, we can just use what we want. It sounds like conda-forge prefers `clang` over `clang w/ gcc's c++ stdlib`, so I will modify the patch here to use `clang` only.",
        "createdAt" : "2017-03-22T14:39:52Z",
        "updatedAt" : "2017-03-22T14:42:35Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      },
      {
        "id" : "85f0ea2e-a8a6-498a-9dbb-d8330905da29",
        "parentId" : "23a99e6c-a97d-4bdd-9689-569a36326e06",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Sorry for the hassle. Thanks for updating it. Am ok with the patch for now.\r\n\r\nIt's unfortunate that they don't respect `CC` and `CXX`. Maybe that is the real point to raise.",
        "createdAt" : "2017-03-22T14:47:43Z",
        "updatedAt" : "2017-03-22T14:47:43Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "02a987e9-175a-4d5d-a98b-69c58ec2fb5f",
        "parentId" : "23a99e6c-a97d-4bdd-9689-569a36326e06",
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "Yep, exactly. They broke all of the conventions. I am making yet another PR against xgboost with exactly this right now. 😄 ",
        "createdAt" : "2017-03-22T14:49:03Z",
        "updatedAt" : "2017-03-22T14:49:03Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      },
      {
        "id" : "9c50768e-2b01-4471-b8c3-4af1aa801897",
        "parentId" : "23a99e6c-a97d-4bdd-9689-569a36326e06",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "FWIW recent versions of clang 3.7.0+ can be built with OpenMP, but FWICT Apple is disappointingly not doing this and is really quiet about why. We may end up just doing it in our own `clang` compiler. ( https://github.com/conda-forge/clangdev-feedstock/issues/3 )\r\n\r\nref: https://forums.developer.apple.com/thread/18207\r\nref: https://forums.developer.apple.com/thread/62381\r\nref: https://forums.developer.apple.com/message/13540",
        "createdAt" : "2017-03-22T15:18:44Z",
        "updatedAt" : "2017-03-22T15:18:44Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "19b3c44b-9e52-4cdb-9fb9-4968c0a2b7f5",
        "parentId" : "23a99e6c-a97d-4bdd-9689-569a36326e06",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Thanks again for following up with them, @beckermr. 👍",
        "createdAt" : "2017-03-22T15:23:58Z",
        "updatedAt" : "2017-03-22T15:23:58Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fb23b33d35993aa37c77e0017103be91ed02761",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@  sha256: {{ sha256 }}\n  patches:\n    - Makefile.patch  # [osx]\n    - build-python.patch  # [osx]\n"
  },
  {
    "id" : "e29f6b83-abbd-4585-baaa-aba419034a0a",
    "prId" : 2573,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2573#pullrequestreview-28443239",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85faad32-b078-4a64-a608-7545ec403aa6",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "One thing I think I forgot to mention is we may want to add `libgcc` for Linux if it is using OpenMP, if the system doesn't provide it. Many systems do, but it could come up if users are running on a minimal setup (e.g. some docker containers). It is easy enough to add if that is the case. So can be saved for the feedstock.",
        "createdAt" : "2017-03-22T15:29:04Z",
        "updatedAt" : "2017-03-22T15:29:04Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "df891c25-c623-42cc-8ffc-935c8cd0d0e1",
        "parentId" : "85faad32-b078-4a64-a608-7545ec403aa6",
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "I am confused. This is exactly what I did with my PR [here](https://github.com/conda-forge/staged-recipes/pull/2628), but for osx only since `clang` doesn't have OpenMP. \r\n\r\nI guess this procedure is more stable for linux than osx?",
        "createdAt" : "2017-03-22T16:49:34Z",
        "updatedAt" : "2017-03-22T16:49:34Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fb23b33d35993aa37c77e0017103be91ed02761",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@    - toolchain\n\n  run:\n    - python\n    - numpy"
  }
]