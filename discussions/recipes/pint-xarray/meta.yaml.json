[
  {
    "id" : "c137f9a1-6445-4077-9e95-29d069ef508b",
    "prId" : 13001,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/13001#pullrequestreview-522527870",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "574f56af-99d4-4419-a616-11d22b8470d5",
        "parentId" : null,
        "authorId" : "6b4737a3-f779-4944-8735-f3f089cb7f6a",
        "body" : "Do we really need the `SETUPTOOLS_SCM_PRETEND_VERSION={{ version }}`?",
        "createdAt" : "2020-11-03T01:01:41Z",
        "updatedAt" : "2020-11-03T01:12:21Z",
        "lastEditedBy" : "6b4737a3-f779-4944-8735-f3f089cb7f6a",
        "tags" : [
        ]
      },
      {
        "id" : "ff08f233-fa9f-40e6-8daa-2b79518689fd",
        "parentId" : "574f56af-99d4-4419-a616-11d22b8470d5",
        "authorId" : "88c47ed7-4b0a-45a0-8ae2-cca4227f988e",
        "body" : "last time I checked, `setuptools_scm` would fail to detect the version and fall back to `0.0.0` (see conda-forge/pint-feedstock#34). `conda` would then report the correct version while `pip` (and `python -c 'import pint_xarray; print(pint_xarray.__version__)`) would print `0.0.0`.",
        "createdAt" : "2020-11-03T01:12:06Z",
        "updatedAt" : "2020-11-03T01:24:17Z",
        "lastEditedBy" : "88c47ed7-4b0a-45a0-8ae2-cca4227f988e",
        "tags" : [
        ]
      },
      {
        "id" : "ffea058d-dfd8-4943-82e1-a91f69f6efab",
        "parentId" : "574f56af-99d4-4419-a616-11d22b8470d5",
        "authorId" : "0b815327-ca6e-45ac-956a-93a3957ac2f5",
        "body" : "`setuptools_scm` should write the version number into the `sdist` metadata. There should be no need for overwriting it or using `write_to`.",
        "createdAt" : "2020-11-03T14:07:24Z",
        "updatedAt" : "2020-11-03T14:07:25Z",
        "lastEditedBy" : "0b815327-ca6e-45ac-956a-93a3957ac2f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "946f9bf622d0129f2bc50932f57822685c47cdb9",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +14,18 @@  number: 0\n  noarch: python\n  script: SETUPTOOLS_SCM_PRETEND_VERSION={{ version }} {{ PYTHON }} -m pip install . -vv\n\nrequirements:"
  },
  {
    "id" : "91255157-4a14-42a7-a469-e922fbe380e3",
    "prId" : 13001,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/13001#pullrequestreview-522524977",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "838c55c1-3329-4fa8-8565-f0b288614b51",
        "parentId" : null,
        "authorId" : "6b4737a3-f779-4944-8735-f3f089cb7f6a",
        "body" : "This is not really an important test, right? It is quite odd that you need to check the version in the package like this. Maybe it is some oddity in the setuptools_scn that I don't understand.",
        "createdAt" : "2020-11-03T01:03:21Z",
        "updatedAt" : "2020-11-03T01:12:21Z",
        "lastEditedBy" : "6b4737a3-f779-4944-8735-f3f089cb7f6a",
        "tags" : [
        ]
      },
      {
        "id" : "6a317bf4-c8fc-4315-a819-50ccf57cf95d",
        "parentId" : "838c55c1-3329-4fa8-8565-f0b288614b51",
        "authorId" : "88c47ed7-4b0a-45a0-8ae2-cca4227f988e",
        "body" : "this makes sure the build fails if `setuptools_scm` doesn't detect the version (see the comment on `SETUPTOOLS_SCM_PRETEND_VERSION`)",
        "createdAt" : "2020-11-03T01:14:23Z",
        "updatedAt" : "2020-11-03T01:15:15Z",
        "lastEditedBy" : "88c47ed7-4b0a-45a0-8ae2-cca4227f988e",
        "tags" : [
        ]
      },
      {
        "id" : "09b99bcd-0f83-4ddd-9c9f-2ad342437ea8",
        "parentId" : "838c55c1-3329-4fa8-8565-f0b288614b51",
        "authorId" : "6b4737a3-f779-4944-8735-f3f089cb7f6a",
        "body" : "I'm not an expert on setuptools_scm but that looks like a bad workaround for when your source is not on a VCS. I like the option `write_to` that writes a version file and avoids this. There is also the `pkg_resources` option, but that can be slow. Let's merge this but if you are connected with upstream I recommend taking a look into those options.",
        "createdAt" : "2020-11-03T14:04:18Z",
        "updatedAt" : "2020-11-03T14:04:18Z",
        "lastEditedBy" : "6b4737a3-f779-4944-8735-f3f089cb7f6a",
        "tags" : [
        ]
      }
    ],
    "commit" : "946f9bf622d0129f2bc50932f57822685c47cdb9",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@  commands:\n    - pip check\n    - python -c 'from pint_xarray import __version__; assert __version__ != \"0.0.0\"'\n  requires:\n    - pip"
  },
  {
    "id" : "07a0f5f3-26d8-43c7-8479-d4ae53b13b43",
    "prId" : 13001,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/13001#pullrequestreview-522527870",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02f8b15a-0085-4467-8ff9-bc2dfbbc6ebb",
        "parentId" : null,
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "Do we really need the `SETUPTOOLS_SCM_PRETEND_VERSION={{ version }}`?",
        "createdAt" : "2020-11-03T01:01:41Z",
        "updatedAt" : "2020-11-03T01:12:21Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "ddad1572-e885-45fb-b69b-083a97140add",
        "parentId" : "02f8b15a-0085-4467-8ff9-bc2dfbbc6ebb",
        "authorId" : "69810c7e-40b0-4186-93f2-1c8c72608bde",
        "body" : "last time I checked, `setuptools_scm` would fail to detect the version and fall back to `0.0.0` (see conda-forge/pint-feedstock#34). `conda` would then report the correct version while `pip` (and `python -c 'import pint_xarray; print(pint_xarray.__version__)`) would print `0.0.0`.",
        "createdAt" : "2020-11-03T01:12:06Z",
        "updatedAt" : "2020-11-03T01:24:17Z",
        "lastEditedBy" : "69810c7e-40b0-4186-93f2-1c8c72608bde",
        "tags" : [
        ]
      },
      {
        "id" : "8f044791-64f3-43be-a93e-1b3e60acfe09",
        "parentId" : "02f8b15a-0085-4467-8ff9-bc2dfbbc6ebb",
        "authorId" : "63355e08-a563-4e4d-8957-62b0581f602e",
        "body" : "`setuptools_scm` should write the version number into the `sdist` metadata. There should be no need for overwriting it or using `write_to`.",
        "createdAt" : "2020-11-03T14:07:24Z",
        "updatedAt" : "2020-11-03T14:07:25Z",
        "lastEditedBy" : "63355e08-a563-4e4d-8957-62b0581f602e",
        "tags" : [
        ]
      }
    ],
    "commit" : "946f9bf622d0129f2bc50932f57822685c47cdb9",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +14,18 @@  number: 0\n  noarch: python\n  script: SETUPTOOLS_SCM_PRETEND_VERSION={{ version }} {{ PYTHON }} -m pip install . -vv\n\nrequirements:"
  },
  {
    "id" : "6ecf0a77-7806-4ce1-9b71-01c206b731f0",
    "prId" : 13001,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/13001#pullrequestreview-522524977",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a77afe7-6f4b-4388-b10a-67957384bd3d",
        "parentId" : null,
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "This is not really an important test, right? It is quite odd that you need to check the version in the package like this. Maybe it is some oddity in the setuptools_scn that I don't understand.",
        "createdAt" : "2020-11-03T01:03:21Z",
        "updatedAt" : "2020-11-03T01:12:21Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "b6a88be7-a557-4ec2-b84c-2785cfa975fc",
        "parentId" : "6a77afe7-6f4b-4388-b10a-67957384bd3d",
        "authorId" : "69810c7e-40b0-4186-93f2-1c8c72608bde",
        "body" : "this makes sure the build fails if `setuptools_scm` doesn't detect the version (see the comment on `SETUPTOOLS_SCM_PRETEND_VERSION`)",
        "createdAt" : "2020-11-03T01:14:23Z",
        "updatedAt" : "2020-11-03T01:15:15Z",
        "lastEditedBy" : "69810c7e-40b0-4186-93f2-1c8c72608bde",
        "tags" : [
        ]
      },
      {
        "id" : "2b769327-3ccf-4f91-920e-60b95528d3f5",
        "parentId" : "6a77afe7-6f4b-4388-b10a-67957384bd3d",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "I'm not an expert on setuptools_scm but that looks like a bad workaround for when your source is not on a VCS. I like the option `write_to` that writes a version file and avoids this. There is also the `pkg_resources` option, but that can be slow. Let's merge this but if you are connected with upstream I recommend taking a look into those options.",
        "createdAt" : "2020-11-03T14:04:18Z",
        "updatedAt" : "2020-11-03T14:04:18Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      }
    ],
    "commit" : "946f9bf622d0129f2bc50932f57822685c47cdb9",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@  commands:\n    - pip check\n    - python -c 'from pint_xarray import __version__; assert __version__ != \"0.0.0\"'\n  requires:\n    - pip"
  }
]