[
  {
    "id" : "506afb0d-9c2c-4db8-89b7-8653b18af311",
    "prId" : 11337,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/11337#pullrequestreview-408624360",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a3c34d9-79f5-4ac6-bc96-08bbc9810efe",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Commenting here, but this applies to other builds in this PR as well.\r\n\r\nWould it make sense to build the AVX bits? IIUC our compilers build with a somewhat recent/common chip target while including a fallback path for systems that don't support it (though others please correct me if this is wrong/out-of-date).",
        "createdAt" : "2020-05-08T23:23:52Z",
        "updatedAt" : "2020-05-11T15:27:37Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "ecc682fb-dd38-4348-a570-ba98f58a7c8c",
        "parentId" : "0a3c34d9-79f5-4ac6-bc96-08bbc9810efe",
        "authorId" : "86282f52-2899-416a-bb85-4890fba2bc91",
        "body" : "I was wondering about this as well, but this seems like a more high-level discussion, and maybe something that should be taken care of by a virtual package? Not sure if CF wants to assume that all x86_64 installs have avx2 available? This is gonna become relevant fairly soon IMO (cf. https://github.com/numpy/numpy/pull/13516), but it wasn't something I wanted to get into for this PR.",
        "createdAt" : "2020-05-08T23:33:07Z",
        "updatedAt" : "2020-05-11T15:27:37Z",
        "lastEditedBy" : "86282f52-2899-416a-bb85-4890fba2bc91",
        "tags" : [
        ]
      },
      {
        "id" : "ff455c1b-fae2-487b-9b2a-1524e4cd4743",
        "parentId" : "0a3c34d9-79f5-4ac6-bc96-08bbc9810efe",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Maybe @isuruf or @beckermr can fill in more details here.\r\n\r\nWhen I last looked (which was not recent btw), we would target Haswell and fallback to Nocona. So it would try to use AVX2, but degrade gracefully if your architecture is older than that. Admittedly things go slower if you don't have AVX support, but it seems like an acceptable compromise for an older CPU (and better than not running at all). The exact chips may be different today, but the general behavior I believe is the same. Though am having trouble finding exactly where this is specified atm.",
        "createdAt" : "2020-05-09T00:07:59Z",
        "updatedAt" : "2020-05-11T15:27:37Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "d8f903fa-4ba9-4357-acf4-51add2b34539",
        "parentId" : "0a3c34d9-79f5-4ac6-bc96-08bbc9810efe",
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "That doesn't make sense. You can't target haswell and fallback to nocona unless the software itself supports it. (gcc has a -mtune parameter that we turn on, but that doesn't help much and not at all in most cases. For eg: `-mtune=haswell` doesn't turn on avx2 support. It turns on some optimizations including scheduling.)",
        "createdAt" : "2020-05-09T00:20:37Z",
        "updatedAt" : "2020-05-11T15:27:37Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      },
      {
        "id" : "fc61be02-2501-4a8a-9e68-62bc648555f6",
        "parentId" : "0a3c34d9-79f5-4ac6-bc96-08bbc9810efe",
        "authorId" : "f32567d7-9a04-4e2a-9e6e-4f27897cf049",
        "body" : "There are 3 levels of optimization in Faiss x64:\r\n\r\n- nothing --> uses only scalar ops\r\n\r\n- `-msse4` --> SSE4 codepaths\r\n\r\n- `-mavx2` --> best optimization\r\n\r\nAlso it is quite important to compile with `-mpopcnt` because the binary indexes rely heavily on it. In all cases, the code compiles (the popcount instruction is handled by the `__builtin_popcountl` GCC intrinsic), but the performance impact can be serious.",
        "createdAt" : "2020-05-09T07:54:29Z",
        "updatedAt" : "2020-05-11T15:27:37Z",
        "lastEditedBy" : "f32567d7-9a04-4e2a-9e6e-4f27897cf049",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d8a77d5771f2b0ca306ec6431850c1276cd532e",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +6,10 @@fi\n\n# Build vanilla version (no avx)\n./configure --prefix=${PREFIX} --exec-prefix=${PREFIX} \\\n  --with-blas=-lblas --with-lapack=-llapack \\"
  }
]