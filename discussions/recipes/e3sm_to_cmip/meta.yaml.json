[
  {
    "id" : "9837bdbf-efa7-4172-a47e-8fe73c72e72a",
    "prId" : 9776,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/9776#pullrequestreview-299530359",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40fc3bcb-9328-4740-b881-e7f6bd98bf4d",
        "parentId" : null,
        "authorId" : "18004497-0f93-4825-95ca-cfece4163347",
        "body" : "@sterlingbaldwin, please acknowledge that you're willing to be a maintainer.",
        "createdAt" : "2019-10-09T16:06:18Z",
        "updatedAt" : "2019-10-09T16:30:23Z",
        "lastEditedBy" : "18004497-0f93-4825-95ca-cfece4163347",
        "tags" : [
        ]
      },
      {
        "id" : "ec445bed-fe39-4a80-aa94-e6b05bf0aa7a",
        "parentId" : "40fc3bcb-9328-4740-b881-e7f6bd98bf4d",
        "authorId" : "3f2290cb-3b5e-43f0-878f-bd4ee036d4ee",
        "body" : "I so acknowledge.",
        "createdAt" : "2019-10-09T16:10:55Z",
        "updatedAt" : "2019-10-09T16:30:23Z",
        "lastEditedBy" : "3f2290cb-3b5e-43f0-878f-bd4ee036d4ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "21895449ddb5a4e79804889a63226d4597bf3131",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +62,66 @@  recipe-maintainers:\n    - xylar\n    - sterlingbaldwin"
  },
  {
    "id" : "04212ff2-8637-4681-81aa-4b6dbd23a5f9",
    "prId" : 9776,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/9776#pullrequestreview-299547683",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f1690ff-0ea5-4e2c-b241-6ac6d3670b1c",
        "parentId" : null,
        "authorId" : "18004497-0f93-4825-95ca-cfece4163347",
        "body" : "@sterlingbaldwin, just to make sure you agree that we don't want to support Windows or python <3.6",
        "createdAt" : "2019-10-09T16:13:51Z",
        "updatedAt" : "2019-10-09T16:30:23Z",
        "lastEditedBy" : "18004497-0f93-4825-95ca-cfece4163347",
        "tags" : [
        ]
      },
      {
        "id" : "141ec3d3-ef8a-4f02-832c-9f221bce0fa2",
        "parentId" : "2f1690ff-0ea5-4e2c-b241-6ac6d3670b1c",
        "authorId" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "body" : "Is there anything specific for ``unix`` platform which cannot be run on ``windows``?",
        "createdAt" : "2019-10-09T16:25:39Z",
        "updatedAt" : "2019-10-09T16:30:23Z",
        "lastEditedBy" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "tags" : [
        ]
      },
      {
        "id" : "c744acf5-b569-44fb-828f-60e6f46a92ab",
        "parentId" : "2f1690ff-0ea5-4e2c-b241-6ac6d3670b1c",
        "authorId" : "18004497-0f93-4825-95ca-cfece4163347",
        "body" : "@sterlingbaldwin, you would know better than me.",
        "createdAt" : "2019-10-09T16:29:35Z",
        "updatedAt" : "2019-10-09T16:30:23Z",
        "lastEditedBy" : "18004497-0f93-4825-95ca-cfece4163347",
        "tags" : [
        ]
      },
      {
        "id" : "f2d21c4a-95f2-462d-9824-d943856b4ed2",
        "parentId" : "2f1690ff-0ea5-4e2c-b241-6ac6d3670b1c",
        "authorId" : "18004497-0f93-4825-95ca-cfece4163347",
        "body" : "Actually, I think I can answer this.  We have some subprocess calls that have not been generalized for Windows (i.e. we call `ncremap` and not `ncreamp.exe`, as would be required in Windows).  We also don't foresee anyone wanting to use this package on Windows systems -- it really only makes sense on HPC.",
        "createdAt" : "2019-10-09T16:34:00Z",
        "updatedAt" : "2019-10-09T16:34:00Z",
        "lastEditedBy" : "18004497-0f93-4825-95ca-cfece4163347",
        "tags" : [
        ]
      },
      {
        "id" : "b1214050-2ff8-413f-ad55-850dc705b552",
        "parentId" : "2f1690ff-0ea5-4e2c-b241-6ac6d3670b1c",
        "authorId" : "3f2290cb-3b5e-43f0-878f-bd4ee036d4ee",
        "body" : "I dont think anything will break on py<3.6, but Im not going to be actively maintaining it for old python verions.",
        "createdAt" : "2019-10-09T16:38:11Z",
        "updatedAt" : "2019-10-09T16:38:11Z",
        "lastEditedBy" : "3f2290cb-3b5e-43f0-878f-bd4ee036d4ee",
        "tags" : [
        ]
      },
      {
        "id" : "f5c4ab73-a1f3-4186-b38d-c05b79ca7328",
        "parentId" : "2f1690ff-0ea5-4e2c-b241-6ac6d3670b1c",
        "authorId" : "18004497-0f93-4825-95ca-cfece4163347",
        "body" : "If the feedstock supports py<36 but you're not maintaining it, the builds are bound to start breaking.  So I think we should keep that constraint.  What about Windows?",
        "createdAt" : "2019-10-09T16:39:56Z",
        "updatedAt" : "2019-10-09T16:39:56Z",
        "lastEditedBy" : "18004497-0f93-4825-95ca-cfece4163347",
        "tags" : [
        ]
      },
      {
        "id" : "0a102cb7-f742-4b53-9813-e8e1bd8f7ed5",
        "parentId" : "2f1690ff-0ea5-4e2c-b241-6ac6d3670b1c",
        "authorId" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "body" : "> Actually, I think I can answer this. We have some subprocess calls that have not been generalized for Windows (i.e. we call `ncremap` and not `ncreamp.exe`, as would be required in Windows). We also don't foresee anyone wanting to use this package on Windows systems -- it really only makes sense on HPC.\r\n\r\nThat is fine then. It was just to double check! :)",
        "createdAt" : "2019-10-09T16:40:06Z",
        "updatedAt" : "2019-10-09T16:40:06Z",
        "lastEditedBy" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "tags" : [
        ]
      }
    ],
    "commit" : "21895449ddb5a4e79804889a63226d4597bf3131",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +11,15 @@\nbuild:\n  skip: True  # [win or py<36]\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\""
  },
  {
    "id" : "03083b0e-5d33-46c9-b08f-0f009e798b9b",
    "prId" : 9776,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/9776#pullrequestreview-299548554",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb66f9d1-90d4-4d95-8e3d-194bbcf0252f",
        "parentId" : null,
        "authorId" : "18004497-0f93-4825-95ca-cfece4163347",
        "body" : "@sterlingbaldwin, any other sanity checks you would add?",
        "createdAt" : "2019-10-09T16:16:37Z",
        "updatedAt" : "2019-10-09T16:30:23Z",
        "lastEditedBy" : "18004497-0f93-4825-95ca-cfece4163347",
        "tags" : [
        ]
      },
      {
        "id" : "01689b63-ffd2-4fa7-a0cf-0122e8548abe",
        "parentId" : "bb66f9d1-90d4-4d95-8e3d-194bbcf0252f",
        "authorId" : "18004497-0f93-4825-95ca-cfece4163347",
        "body" : "Note: we can always add more checks later once the feedstock is built.",
        "createdAt" : "2019-10-09T16:18:17Z",
        "updatedAt" : "2019-10-09T16:30:23Z",
        "lastEditedBy" : "18004497-0f93-4825-95ca-cfece4163347",
        "tags" : [
        ]
      },
      {
        "id" : "6ee60fb1-db52-41d2-a987-229cf10946db",
        "parentId" : "bb66f9d1-90d4-4d95-8e3d-194bbcf0252f",
        "authorId" : "3f2290cb-3b5e-43f0-878f-bd4ee036d4ee",
        "body" : "This is fine for the time being, running with the \"--help\" finds most of the issues when dependencies dont load properly.",
        "createdAt" : "2019-10-09T16:41:40Z",
        "updatedAt" : "2019-10-09T16:41:40Z",
        "lastEditedBy" : "3f2290cb-3b5e-43f0-878f-bd4ee036d4ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "21895449ddb5a4e79804889a63226d4597bf3131",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@    - e3sm_to_cmip --help\n  imports:\n    - e3sm_to_cmip\n\nabout:"
  },
  {
    "id" : "acb3c780-0908-4d36-b932-a50fa600ecdf",
    "prId" : 9776,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/9776#pullrequestreview-299545924",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f83cd16-6e12-44e7-9af2-aabf76011bf4",
        "parentId" : null,
        "authorId" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "body" : "you may add the ``entry_points`` and it should work on windows as well\r\n```suggestion\r\n  script: \"{{ PYTHON }} -m pip install . -vv\"\r\n  entry_points:\r\n    - e3sm_to_cmip = e3sm_to_cmip.__main__:main\r\n```",
        "createdAt" : "2019-10-09T16:27:54Z",
        "updatedAt" : "2019-10-09T16:30:23Z",
        "lastEditedBy" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "tags" : [
        ]
      },
      {
        "id" : "6d71932c-3a48-4f9c-97de-7ef296e7ef27",
        "parentId" : "9f83cd16-6e12-44e7-9af2-aabf76011bf4",
        "authorId" : "18004497-0f93-4825-95ca-cfece4163347",
        "body" : "Oops, thanks!",
        "createdAt" : "2019-10-09T16:29:56Z",
        "updatedAt" : "2019-10-09T16:30:23Z",
        "lastEditedBy" : "18004497-0f93-4825-95ca-cfece4163347",
        "tags" : [
        ]
      },
      {
        "id" : "14d80562-3c59-431c-bad5-3dc61fe6ef3c",
        "parentId" : "9f83cd16-6e12-44e7-9af2-aabf76011bf4",
        "authorId" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "body" : "After that, I think you can remove that selector to skip ``win`` and you might selector  the python versions which you want to on host and run requirements\r\nAfter all that you can turn this recipe to be ``noarch: python``\r\nhttps://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python",
        "createdAt" : "2019-10-09T16:30:00Z",
        "updatedAt" : "2019-10-09T16:30:23Z",
        "lastEditedBy" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "tags" : [
        ]
      },
      {
        "id" : "88553b56-092c-406f-8b5a-47b97830ae94",
        "parentId" : "9f83cd16-6e12-44e7-9af2-aabf76011bf4",
        "authorId" : "18004497-0f93-4825-95ca-cfece4163347",
        "body" : "We could do that but I don't think we want to give the misimpression that Windows is supported.",
        "createdAt" : "2019-10-09T16:36:59Z",
        "updatedAt" : "2019-10-09T16:37:00Z",
        "lastEditedBy" : "18004497-0f93-4825-95ca-cfece4163347",
        "tags" : [
        ]
      }
    ],
    "commit" : "21895449ddb5a4e79804889a63226d4597bf3131",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@  skip: True  # [win or py<36]\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  entry_points:\n    - e3sm_to_cmip = e3sm_to_cmip.__main__:main"
  }
]