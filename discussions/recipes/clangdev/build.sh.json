[
  {
    "id" : "894ef3b3-ebaa-4fc4-8599-e0ec7bf2501b",
    "prId" : 1481,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/1481#pullrequestreview-4002827",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95d4e702-4695-4613-b974-e7f0da056b5d",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Is there some sort of `make check` that we can run?\n",
        "createdAt" : "2016-10-12T23:11:15Z",
        "updatedAt" : "2017-01-18T10:23:09Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "5221856f-5bb6-41ec-81fa-f91268160c87",
        "parentId" : "95d4e702-4695-4613-b974-e7f0da056b5d",
        "authorId" : "4b28bf96-66c5-4aec-b541-9d226b387912",
        "body" : "There is:\n\nhttp://llvm.org/docs/CMake.html#executing-the-test-suite\n\nThe trouble with that is that these packages already scrape the time limit that the CIs will tolerate. Adding the test suite has the definite potential to put them over the top.\n",
        "createdAt" : "2016-10-12T23:16:53Z",
        "updatedAt" : "2017-01-18T10:23:09Z",
        "lastEditedBy" : "4b28bf96-66c5-4aec-b541-9d226b387912",
        "tags" : [
        ]
      },
      {
        "id" : "b5cd7fa0-50d2-43c5-b39b-efff9ab8a538",
        "parentId" : "95d4e702-4695-4613-b974-e7f0da056b5d",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Honestly I'm almost afraid to ask that we do this as we are approaching 1hr of build time. Maybe we could use `clang` to compile some simple program instead.\n",
        "createdAt" : "2016-10-12T23:18:02Z",
        "updatedAt" : "2017-01-18T10:23:09Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "3cfd8ab6-8a87-4ed2-86f4-043870aaa410",
        "parentId" : "95d4e702-4695-4613-b974-e7f0da056b5d",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Yep, I think are comments got interwoven so I missed your response. I completely agree. Maybe we can compile and run a hello world style program in the test step instead.\n",
        "createdAt" : "2016-10-12T23:22:30Z",
        "updatedAt" : "2017-01-18T10:23:09Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "b6ee0021-225b-497b-bcf5-9ed9e1613d06",
        "parentId" : "95d4e702-4695-4613-b974-e7f0da056b5d",
        "authorId" : "4b28bf96-66c5-4aec-b541-9d226b387912",
        "body" : "I'm open to considering it, but I would need help with the logistics--if I stick a file alongisde the `meta.yaml`, will I be able to access it during the test stage? If so, how? I've added some more file tests for now, and I've checked that more commands run for now.\n",
        "createdAt" : "2016-10-13T00:41:25Z",
        "updatedAt" : "2017-01-18T10:23:09Z",
        "lastEditedBy" : "4b28bf96-66c5-4aec-b541-9d226b387912",
        "tags" : [
        ]
      },
      {
        "id" : "837b9b36-682b-43dc-8e36-b3b7eece428f",
        "parentId" : "95d4e702-4695-4613-b974-e7f0da056b5d",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Right. To get the file(s) in the test phase, one normally uses [`test/files`](http://conda.pydata.org/docs/building/meta-yaml.html#test-files).\n",
        "createdAt" : "2016-10-13T01:04:50Z",
        "updatedAt" : "2017-01-18T10:23:09Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "9395f844-bff2-449d-b6f4-4aa4fe010e81",
        "parentId" : "95d4e702-4695-4613-b974-e7f0da056b5d",
        "authorId" : "4b28bf96-66c5-4aec-b541-9d226b387912",
        "body" : "OK, gave that a shot.\n",
        "createdAt" : "2016-10-13T04:23:09Z",
        "updatedAt" : "2017-01-18T10:23:09Z",
        "lastEditedBy" : "4b28bf96-66c5-4aec-b541-9d226b387912",
        "tags" : [
        ]
      }
    ],
    "commit" : "d35d6fe90934766090e3c003673e6bf24390fd0a",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@  ..\n\nmake -j 8\nmake install"
  }
]