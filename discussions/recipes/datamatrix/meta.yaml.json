[
  {
    "id" : "24830150-2199-46cd-822a-8b99bab8cfad",
    "prId" : 11013,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/11013#pullrequestreview-374132729",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b72231e3-5339-49b4-a587-c039bb9b580d",
        "parentId" : null,
        "authorId" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "body" : "I think it would be nice to follow the same name as ``pypi``",
        "createdAt" : "2020-03-10T11:42:20Z",
        "updatedAt" : "2020-03-13T06:53:25Z",
        "lastEditedBy" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "tags" : [
        ]
      },
      {
        "id" : "cbe70b3c-6255-4dc6-b2eb-9b05ee593eca",
        "parentId" : "b72231e3-5339-49b4-a587-c039bb9b580d",
        "authorId" : "a4d837a0-5482-460c-8f1b-ebfc7c0e0bf0",
        "body" : "That would involve prefixing all packages with `python-` which comes from (and is valuable with) the Ubuntu package naming conventions. However, in conda this is quite superfluous as you have the build variable that indicates if something is a python package or not. In a previous package push of mine, a reviewer (can't remember who or where) actually advised against prefixing package names and recommended to keep them as elementary as possible, because you might get ambiguous package namings otherwise. For instance, with pyyaml you import the package with `import yaml`, but there is also a package named `yaml` available on conda. In the current case, if we add this package as `python-datamatrix`, someone else could still add another new package called `datamatrix` to conda-forge, causing similar confusion. I'm still ok with following your suggestion, but I would like to hear your thoughts on this.",
        "createdAt" : "2020-03-10T11:49:35Z",
        "updatedAt" : "2020-03-13T06:53:25Z",
        "lastEditedBy" : "a4d837a0-5482-460c-8f1b-ebfc7c0e0bf0",
        "tags" : [
        ]
      },
      {
        "id" : "40eb9d7a-52fe-4ff0-8ee5-5c289b8ba059",
        "parentId" : "b72231e3-5339-49b4-a587-c039bb9b580d",
        "authorId" : "a4d837a0-5482-460c-8f1b-ebfc7c0e0bf0",
        "body" : "Any further suggestions on this?",
        "createdAt" : "2020-03-13T08:53:06Z",
        "updatedAt" : "2020-03-13T08:53:07Z",
        "lastEditedBy" : "a4d837a0-5482-460c-8f1b-ebfc7c0e0bf0",
        "tags" : [
        ]
      }
    ],
    "commit" : "307b9e47dd58d7106467ac6d3243a489d6d64a5f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +4,8 @@\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n"
  },
  {
    "id" : "ff009273-88cb-45b6-ae38-5c9307d4cb87",
    "prId" : 11013,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/11013#pullrequestreview-374132861",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b6b9465-5545-462f-8534-fadc3f33dc48",
        "parentId" : null,
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "This is odd. Why are these not runtime requirements?",
        "createdAt" : "2020-03-12T18:28:35Z",
        "updatedAt" : "2020-03-13T06:53:25Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      },
      {
        "id" : "920976a7-8c2e-4913-9252-aff9c281f1de",
        "parentId" : "8b6b9465-5545-462f-8534-fadc3f33dc48",
        "authorId" : "a4d837a0-5482-460c-8f1b-ebfc7c0e0bf0",
        "body" : "That is odd indeed. I used the recipe of the package maintainer as a reference for this one. \r\nAs far as I remember, numpy and scipy are not strict requirements for this package to function. They do make everything faster when available. \r\ndatamatrix is written in such a way that it can work with pure python too (as a fallback?) if c-(of rather fortran-) based dependencies such as numpy and scipy are not available. This was done at the time that this package was meant to run on an android distribution of python on which these non-pure python dependencies were difficult to install, but I don't know if that is relevant any longer. @smathot, can you possibly shed some more light on this?",
        "createdAt" : "2020-03-12T21:20:54Z",
        "updatedAt" : "2020-03-13T06:53:25Z",
        "lastEditedBy" : "a4d837a0-5482-460c-8f1b-ebfc7c0e0bf0",
        "tags" : [
        ]
      },
      {
        "id" : "4a0b5f76-6820-4e9a-99b7-07e5f2e35e4d",
        "parentId" : "8b6b9465-5545-462f-8534-fadc3f33dc48",
        "authorId" : "a4d837a0-5482-460c-8f1b-ebfc7c0e0bf0",
        "body" : "I looked it up in the documentation of datamatrix and I appear to be correct: https://datamatrix.cogsci.nl/0.10/install/. Do you consider this point to be resolved with this information?",
        "createdAt" : "2020-03-13T08:43:34Z",
        "updatedAt" : "2020-03-13T08:43:35Z",
        "lastEditedBy" : "a4d837a0-5482-460c-8f1b-ebfc7c0e0bf0",
        "tags" : [
        ]
      },
      {
        "id" : "ec481e53-cda1-4370-80fa-50e38f49fe06",
        "parentId" : "8b6b9465-5545-462f-8534-fadc3f33dc48",
        "authorId" : "b027dadd-d327-44e3-9f97-d9ad70727126",
        "body" : "@dschreij is correct. These are not strictly runtime requirements because DataMatrix can run using only the Python standard library.",
        "createdAt" : "2020-03-13T08:53:20Z",
        "updatedAt" : "2020-03-13T08:53:20Z",
        "lastEditedBy" : "b027dadd-d327-44e3-9f97-d9ad70727126",
        "tags" : [
        ]
      }
    ],
    "commit" : "307b9e47dd58d7106467ac6d3243a489d6d64a5f",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@  requires:\n    - numpy\n    - scipy\n\nabout:"
  }
]