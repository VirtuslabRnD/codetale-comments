[
  {
    "id" : "afc629c4-6d47-40be-b77d-5820c94adec5",
    "prId" : 2033,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2033#pullrequestreview-11093266",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53a65e4e-b510-4513-b559-9244cc124280",
        "parentId" : null,
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "Can you try a build with boost and zlib? I see that they are optional dependencies, but since they are on conda-forge we can use them.",
        "createdAt" : "2016-12-02T01:40:29Z",
        "updatedAt" : "2017-01-22T18:42:09Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "184b1eae4ddae5a1f1a713ec8dabc51315ec70c2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +31,35 @@    - gtest\n    - cmake\n    - toolchain\n    - boost-cpp 1.63.*\n    - zlib 1.2.*"
  },
  {
    "id" : "66774ad1-670a-46b3-810a-fb01aab9d4c8",
    "prId" : 2033,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2033#pullrequestreview-11291965",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c410b457-f0bb-4631-b1d5-0defd8a48002",
        "parentId" : null,
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "This is the static library, can you rename this to `msgpackc_static.lib` and the import library `msgpackc_import.lib` to `mspackc.lib`?",
        "createdAt" : "2016-12-04T01:54:53Z",
        "updatedAt" : "2017-01-22T18:42:09Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      },
      {
        "id" : "cadde6d4-e85b-4846-af13-4150835b36ce",
        "parentId" : "c410b457-f0bb-4631-b1d5-0defd8a48002",
        "authorId" : "6b3f857d-aa4c-442d-bec6-6434219e1b71",
        "body" : "Ok.",
        "createdAt" : "2016-12-04T10:13:56Z",
        "updatedAt" : "2017-01-22T18:42:09Z",
        "lastEditedBy" : "6b3f857d-aa4c-442d-bec6-6434219e1b71",
        "tags" : [
        ]
      }
    ],
    "commit" : "184b1eae4ddae5a1f1a713ec8dabc51315ec70c2",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@    - if not exist %LIBRARY_INC%\\\\msgpack.h exit 1              # [win]\n    - if not exist %LIBRARY_INC%\\\\msgpack.hpp exit 1            # [win]\n    - if not exist %LIBRARY_LIB%\\\\msgpackc.lib exit 1           # [win]\n    - if not exist %LIBRARY_LIB%\\\\msgpackc_static.lib exit 1    # [win]\n    - if not exist %LIBRARY_BIN%\\\\msgpackc.dll exit 1           # [win]"
  },
  {
    "id" : "a80fd72e-b27a-4a46-a8f3-df0a1b548d02",
    "prId" : 2033,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2033#pullrequestreview-11292691",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a49a676-0cbe-4c16-bbbc-2d0e2078b4fa",
        "parentId" : null,
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "Can you add `python` for `win` here so that this recipe would be built against all the vc versions? You also need to add vc features.\r\n```yaml\r\nbuild:\r\n  features:\r\n    - vc9   # [win and py27]\r\n    - vc10  # [win and py34]\r\n    - vc14  # [win and py35]\r\n\r\nrequirements:\r\n  build:\r\n    - python  # [win]\r\n    - vc 9    # [win and py27]\r\n    - vc 10   # [win and py34]\r\n    - vc 14   # [win and py35]\r\n  run:\r\n    - vc 9   # [win and py27]\r\n    - vc 10  # [win and py34]\r\n    - vc 14  # [win and py35]\r\n```\r\n\r\nSee https://github.com/conda-forge/staged-recipes/wiki/VC-features\r\n",
        "createdAt" : "2016-12-04T11:14:52Z",
        "updatedAt" : "2017-01-22T18:42:09Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "184b1eae4ddae5a1f1a713ec8dabc51315ec70c2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +33,37 @@    - toolchain\n    - boost-cpp 1.63.*\n    - zlib 1.2.*\n  run:\n    - vc 9   # [win and py27]"
  },
  {
    "id" : "55dba404-0fe3-42a8-a015-4d11f1f66061",
    "prId" : 2033,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2033#pullrequestreview-15897999",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a33fec7e-5054-41c7-b667-d6a4e0e6e055",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Has this gone upstream? Is there a PR or issue open?",
        "createdAt" : "2017-01-10T05:02:42Z",
        "updatedAt" : "2017-01-22T18:42:09Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "84ff8113-140d-4f13-bb09-f6aea1929516",
        "parentId" : "a33fec7e-5054-41c7-b667-d6a4e0e6e055",
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "This bug is not there when using gcc 4.9 or above, but since we are using gcc 4.8 it is there.\r\nThis patch doesn't work with osx, so I'll have to find a way to make it work on all platforms before sending it upstream.",
        "createdAt" : "2017-01-10T05:04:53Z",
        "updatedAt" : "2017-01-22T18:42:09Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      },
      {
        "id" : "0af9aaec-77d1-49d0-ad84-8428ee77cd8c",
        "parentId" : "a33fec7e-5054-41c7-b667-d6a4e0e6e055",
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "https://github.com/msgpack/msgpack-c/issues/554",
        "createdAt" : "2017-01-10T11:02:55Z",
        "updatedAt" : "2017-01-22T18:42:09Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      },
      {
        "id" : "aba78918-6964-4de8-8e41-2d76f5d8ff7f",
        "parentId" : "a33fec7e-5054-41c7-b667-d6a4e0e6e055",
        "authorId" : "6b3f857d-aa4c-442d-bec6-6434219e1b71",
        "body" : "@isuruf the correct way of calling ``isinf()`` and ``isnan()`` in C++ is to include ``<cmath>`` and call ``std::isinf()`` and ``std::isnan()``. I suspect that the patch does not work in OSX because it is using libc++, which is not probably pulling in the ``<cmath>`` header through the inclusion of some other header.\r\n\r\nShall I give it a go? I cannot do it right now but I can update the PR tonight.",
        "createdAt" : "2017-01-10T11:24:17Z",
        "updatedAt" : "2017-01-22T18:42:09Z",
        "lastEditedBy" : "6b3f857d-aa4c-442d-bec6-6434219e1b71",
        "tags" : [
        ]
      },
      {
        "id" : "a6ba55ff-4070-4a88-9e08-02b143d6af1b",
        "parentId" : "a33fec7e-5054-41c7-b667-d6a4e0e6e055",
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "Sure.",
        "createdAt" : "2017-01-10T11:29:21Z",
        "updatedAt" : "2017-01-22T18:42:09Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      },
      {
        "id" : "f932bd06-6202-436d-8519-42a7286eeb48",
        "parentId" : "a33fec7e-5054-41c7-b667-d6a4e0e6e055",
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "I think msgpack-c is including `math.h` because it is testing the C interface in `test/msgpack_c.cpp`. They do it correctly on `test/msgpack_basic.cpp` which tests the C++ interface. I know that including `cmath` will work, but I didn't do it because I thought the difference between `test/msgpack_basic.cpp`  and `test/msgpack_c.cpp`  was intentional, which might not be true.",
        "createdAt" : "2017-01-10T11:35:47Z",
        "updatedAt" : "2017-01-22T18:42:09Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      },
      {
        "id" : "0fb1a723-e45d-44d8-9ce3-e6f92bbc5b62",
        "parentId" : "a33fec7e-5054-41c7-b667-d6a4e0e6e055",
        "authorId" : "6b3f857d-aa4c-442d-bec6-6434219e1b71",
        "body" : "Still, ``msgpack_c.cpp`` is also including ``<vector>`` which is C++. I think the ambiguity derives from the ``using namespace std;`` statement on top, I am now thinking the better way would probably be to explicitly use ``std::isinf()`` in the code rather than relying on the ``using namespace std;`` statement.",
        "createdAt" : "2017-01-10T11:41:14Z",
        "updatedAt" : "2017-01-22T18:42:09Z",
        "lastEditedBy" : "6b3f857d-aa4c-442d-bec6-6434219e1b71",
        "tags" : [
        ]
      }
    ],
    "commit" : "184b1eae4ddae5a1f1a713ec8dabc51315ec70c2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +13,17 @@  patches:\n    # This is needed for a bug in gcc version used where isnan is ambiguous. (::isnan and std::isnan)\n    - ambiguous_nan_inf.patch   # [linux]\n\nbuild:"
  },
  {
    "id" : "0545783b-32b7-4d97-84f2-558fe7bba81d",
    "prId" : 2033,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/2033#pullrequestreview-16664388",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16e1b88e-4031-4c7d-aa22-d802e719eaac",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Would change this to `win or py==36`.",
        "createdAt" : "2017-01-10T05:08:07Z",
        "updatedAt" : "2017-01-22T18:42:09Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "442278cf-247f-4e48-b5af-7d2d513b0a1c",
        "parentId" : "16e1b88e-4031-4c7d-aa22-d802e719eaac",
        "authorId" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "body" : "Since windows is skipped, this is unnecessary.",
        "createdAt" : "2017-01-10T05:41:52Z",
        "updatedAt" : "2017-01-22T18:42:09Z",
        "lastEditedBy" : "fa18c2b0-9128-4c2b-b6e0-433b177f7cf1",
        "tags" : [
        ]
      },
      {
        "id" : "0c81f233-6158-462b-b7d1-fedab4882430",
        "parentId" : "16e1b88e-4031-4c7d-aa22-d802e719eaac",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "More thinking of making it easier for one to switch later. Though agreed this could simply be taken as advisement for the future.",
        "createdAt" : "2017-01-13T22:21:14Z",
        "updatedAt" : "2017-01-22T18:42:09Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "184b1eae4ddae5a1f1a713ec8dabc51315ec70c2",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +21,25 @@    - vc10    # [win and py34]\n    - vc14    # [win and py35]\n  skip: true  # [win]\n\nrequirements:"
  }
]