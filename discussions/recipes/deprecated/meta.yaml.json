[
  {
    "id" : "417446a0-2dd6-4726-acbf-ae711adcdd82",
    "prId" : 6146,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/6146#pullrequestreview-131386256",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4eea565-dc43-42f4-b15d-5edfb924260a",
        "parentId" : null,
        "authorId" : "f1f932c6-0dea-4f1c-815a-adb7bc17b4db",
        "body" : "Should hash_type and hash_value be moved directly under the `source` section?",
        "createdAt" : "2018-06-22T11:54:59Z",
        "updatedAt" : "2018-06-22T20:52:12Z",
        "lastEditedBy" : "f1f932c6-0dea-4f1c-815a-adb7bc17b4db",
        "tags" : [
        ]
      },
      {
        "id" : "ffc007e6-b6ff-40d0-afc1-b0a3e6141a36",
        "parentId" : "e4eea565-dc43-42f4-b15d-5edfb924260a",
        "authorId" : "15e88ea8-0362-4b04-b772-0df50937a650",
        "body" : "probably best to just keep close to what conda skeleton spit out since that is one of the major things that the tick bot hits",
        "createdAt" : "2018-06-22T14:27:43Z",
        "updatedAt" : "2018-06-22T20:52:12Z",
        "lastEditedBy" : "15e88ea8-0362-4b04-b772-0df50937a650",
        "tags" : [
        ]
      },
      {
        "id" : "a461b9b2-28fb-4947-802c-5c0d2c743ae7",
        "parentId" : "e4eea565-dc43-42f4-b15d-5edfb924260a",
        "authorId" : "f1f932c6-0dea-4f1c-815a-adb7bc17b4db",
        "body" : "@CJ-Wright, can you clarify what is the optimal way to write the SHA256 sums? It looks like `skeleton` and `example` are conflicting with each other.",
        "createdAt" : "2018-06-23T03:02:03Z",
        "updatedAt" : "2018-06-23T03:02:04Z",
        "lastEditedBy" : "f1f932c6-0dea-4f1c-815a-adb7bc17b4db",
        "tags" : [
        ]
      },
      {
        "id" : "1b364744-0b11-4df9-84f0-9fde31d98ca5",
        "parentId" : "e4eea565-dc43-42f4-b15d-5edfb924260a",
        "authorId" : "57d9896e-d0ba-4f3d-b45c-ee73dd37f0a0",
        "body" : "For simple recipes we support both I think. The main issue is when we have multiple checksums in a single recipe, then the bot gets confused with the jinja2 method (since it doesn't know which checksum goes to which jinja2)\r\nLets double check with @justcalamari ",
        "createdAt" : "2018-06-23T04:58:30Z",
        "updatedAt" : "2018-06-23T04:58:30Z",
        "lastEditedBy" : "57d9896e-d0ba-4f3d-b45c-ee73dd37f0a0",
        "tags" : [
        ]
      },
      {
        "id" : "9f295fe4-fee5-4eb9-822f-393eea616e42",
        "parentId" : "e4eea565-dc43-42f4-b15d-5edfb924260a",
        "authorId" : "c363011f-0922-42db-9315-c2ae051dae03",
        "body" : "That's correct. If there are multiple sources, the bot doesn't know which checksum the jinja2 variable is for, so it might replace it incorrectly. In this recipe where there is only one checksum, there is no ambiguity so the bot should be able to replace the jinja variable correctly.\r\n\r\nIt might be good practice to get rid of the jinja variables for hash_type and hash_value though, since there are certain cases where that breaks the bot and it doesn't seem like there's much of a reason to use the variables since they are only used once. I think @ocefpaf changed the example to remove jinja variables for checksum, but skeleton wasn't updated yet.",
        "createdAt" : "2018-06-23T06:11:37Z",
        "updatedAt" : "2018-06-23T06:11:37Z",
        "lastEditedBy" : "c363011f-0922-42db-9315-c2ae051dae03",
        "tags" : [
        ]
      }
    ],
    "commit" : "81cefa9aacfb1ed531810e0f9ba5711f7b0eb71e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3,7 @@{% set file_ext = \"tar.gz\" %}\n{% set hash_type = \"sha256\" %}\n{% set hash_value = \"42b5dffc4023401148e9d2757f46a4a9fcccf114547a4620347ae45f9e77a21c\" %}\n\npackage:"
  },
  {
    "id" : "1774fefb-4ccb-4bdd-bce7-0493d9777dc5",
    "prId" : 6146,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/6146#pullrequestreview-131343690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74a63841-afe9-4303-9767-0e9ada206e74",
        "parentId" : null,
        "authorId" : "f1f932c6-0dea-4f1c-815a-adb7bc17b4db",
        "body" : "I checked upstream's `setup.py` and it looks like `wrapt` is only an install requirement. Do we really need it in the host section?",
        "createdAt" : "2018-06-22T11:57:45Z",
        "updatedAt" : "2018-06-22T20:52:12Z",
        "lastEditedBy" : "f1f932c6-0dea-4f1c-815a-adb7bc17b4db",
        "tags" : [
        ]
      },
      {
        "id" : "adc1f9a7-457e-43d7-a02b-bcce1302208f",
        "parentId" : "74a63841-afe9-4303-9767-0e9ada206e74",
        "authorId" : "15e88ea8-0362-4b04-b772-0df50937a650",
        "body" : "let me remove that",
        "createdAt" : "2018-06-22T14:27:51Z",
        "updatedAt" : "2018-06-22T20:52:12Z",
        "lastEditedBy" : "15e88ea8-0362-4b04-b772-0df50937a650",
        "tags" : [
        ]
      },
      {
        "id" : "91d52825-16b5-4e4f-b989-ab858ae59ee3",
        "parentId" : "74a63841-afe9-4303-9767-0e9ada206e74",
        "authorId" : "15e88ea8-0362-4b04-b772-0df50937a650",
        "body" : "Seems one of the modules does use it, readding",
        "createdAt" : "2018-06-22T20:52:37Z",
        "updatedAt" : "2018-06-22T20:52:37Z",
        "lastEditedBy" : "15e88ea8-0362-4b04-b772-0df50937a650",
        "tags" : [
        ]
      }
    ],
    "commit" : "81cefa9aacfb1ed531810e0f9ba5711f7b0eb71e",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +23,27 @@    - python\n    - pip\n    - wrapt <2,>=1\n  run:\n    - python"
  },
  {
    "id" : "a4a8774d-74c7-4bb1-9d36-096551a20a0a",
    "prId" : 6146,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/6146#pullrequestreview-131215581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6782d5fd-10f2-4dd8-be5b-b2ea61f9e417",
        "parentId" : null,
        "authorId" : "f1f932c6-0dea-4f1c-815a-adb7bc17b4db",
        "body" : "Do you want to wait for the upstream PR to merged before merging into conda-forge?",
        "createdAt" : "2018-06-22T11:59:32Z",
        "updatedAt" : "2018-06-22T20:52:12Z",
        "lastEditedBy" : "f1f932c6-0dea-4f1c-815a-adb7bc17b4db",
        "tags" : [
        ]
      },
      {
        "id" : "14f51ea8-8369-49c9-8c8b-b88442b5b3fa",
        "parentId" : "6782d5fd-10f2-4dd8-be5b-b2ea61f9e417",
        "authorId" : "15e88ea8-0362-4b04-b772-0df50937a650",
        "body" : "I can deal with adding it in post merge probably, but lets give it a day or two",
        "createdAt" : "2018-06-22T14:27:02Z",
        "updatedAt" : "2018-06-22T20:52:12Z",
        "lastEditedBy" : "15e88ea8-0362-4b04-b772-0df50937a650",
        "tags" : [
        ]
      }
    ],
    "commit" : "81cefa9aacfb1ed531810e0f9ba5711f7b0eb71e",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@  license_family: MIT\n  # https://github.com/tantale/deprecated/pull/1\n  # license_file: ''\n  summary: Python @deprecated decorator to deprecate old python classes, functions or methods.\n  dev_url: 'https://github.com/tantale/deprecated'"
  }
]