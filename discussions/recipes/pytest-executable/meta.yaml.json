[
  {
    "id" : "b0c221b8-9304-4183-a1e8-67fcd9727c33",
    "prId" : 11636,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/11636#pullrequestreview-413049881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cda2510a-ed54-4ae1-ace4-00ea76f63b3c",
        "parentId" : null,
        "authorId" : "085a9c6b-569e-49bd-9434-7f128372cf0c",
        "body" : "Please add an import test:\r\n\r\nhttps://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#python-imports",
        "createdAt" : "2020-05-15T23:51:14Z",
        "updatedAt" : "2020-05-17T07:36:35Z",
        "lastEditedBy" : "085a9c6b-569e-49bd-9434-7f128372cf0c",
        "tags" : [
        ]
      },
      {
        "id" : "c9e263a4-436d-425d-aa0e-af4e5e006ce3",
        "parentId" : "cda2510a-ed54-4ae1-ace4-00ea76f63b3c",
        "authorId" : "f8c79953-8f6b-4e6c-a7a8-bc2eef654323",
        "body" : "OK.",
        "createdAt" : "2020-05-16T05:36:26Z",
        "updatedAt" : "2020-05-17T07:36:35Z",
        "lastEditedBy" : "f8c79953-8f6b-4e6c-a7a8-bc2eef654323",
        "tags" : [
        ]
      }
    ],
    "commit" : "40a6e826b79c7acbf10357dfddccdb8fdba4446d",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +27,31 @@    - dataclasses\n\ntest:\n  requires:\n    - pip"
  },
  {
    "id" : "28f30e2e-cbd7-4920-ad4a-dafe2b028ee8",
    "prId" : 11636,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/11636#pullrequestreview-413135546",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b81c667c-4271-4887-820c-97092f1cfdd2",
        "parentId" : null,
        "authorId" : "f7be89ca-08db-4e12-92dc-25cf5b87676f",
        "body" : "a minor nit:\r\n\r\nwhile conda-forge is only going to build this on linux, the theory of `noarch` is that it _could_ build on the lowest common denominator (e.g. vanilla windows).\r\n\r\nIt is _possible_ to do this as written (but wouldn't the dots get expanded?), by adding the `- posix #[win]` as a test dependency. Likely you can use github search to find recipes that contain `noarch` and `grep`. i, personally, would move this to `run_test.py` which will automatically be run by conda on any compatible platform (which is, well, all of them) and won't bring in any extra dependencies.\r\n\r\nAnother command I find worth adding when there are non-trivial dependency pins, is:\r\n\r\n```bash\r\ntest:\r\n  requires:\r\n    - pip\r\n  commands:\r\n    - python -m pip check\r\n```",
        "createdAt" : "2020-05-16T15:23:09Z",
        "updatedAt" : "2020-05-17T07:36:35Z",
        "lastEditedBy" : "f7be89ca-08db-4e12-92dc-25cf5b87676f",
        "tags" : [
        ]
      },
      {
        "id" : "9fa04f30-9493-48e0-b9fe-c9dc21521d45",
        "parentId" : "b81c667c-4271-4887-820c-97092f1cfdd2",
        "authorId" : "f8c79953-8f6b-4e6c-a7a8-bc2eef654323",
        "body" : "Thanks, I've added the pip check.",
        "createdAt" : "2020-05-17T07:38:38Z",
        "updatedAt" : "2020-05-17T07:38:39Z",
        "lastEditedBy" : "f8c79953-8f6b-4e6c-a7a8-bc2eef654323",
        "tags" : [
        ]
      }
    ],
    "commit" : "40a6e826b79c7acbf10357dfddccdb8fdba4446d",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@  commands:\n    - python -m pip check\n    - \"pytest --traceconfig | grep pytest-executable-{{ version }}\"\n  imports:\n    - pytest_executable"
  }
]