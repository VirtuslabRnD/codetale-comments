[
  {
    "id" : "44e8ae23-d714-4bf8-b3d5-2f69b4d395b6",
    "prId" : 8024,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/8024#pullrequestreview-217137000",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "026820f6-4219-4e0a-a548-d0bc69cda18d",
        "parentId" : null,
        "authorId" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "body" : "Please drop the build and also add the same constraint to python in host",
        "createdAt" : "2019-03-21T09:26:49Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "tags" : [
        ]
      },
      {
        "id" : "313055dc-4f8c-4979-ae4b-115c8d966fd3",
        "parentId" : "026820f6-4219-4e0a-a548-d0bc69cda18d",
        "authorId" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "body" : "Thanks for the comments! It's done.",
        "createdAt" : "2019-03-21T09:29:49Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "tags" : [
        ]
      }
    ],
    "commit" : "c15dc7cf1e5433fec9de1d5dcf5c8b0daa473562",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +20,24 @@\nrequirements:\n  host:\n    - python\n    - pip"
  },
  {
    "id" : "498e8c09-45de-4fb1-847d-ac47c2c9e91b",
    "prId" : 8024,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/8024#pullrequestreview-217141790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ff48709-baf8-4602-abe9-8011b65e13dd",
        "parentId" : null,
        "authorId" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "body" : "Your license is not present with the source code\r\nYou can add it manually",
        "createdAt" : "2019-03-21T09:33:52Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "tags" : [
        ]
      },
      {
        "id" : "44b68a7c-b473-4113-8869-91181c0b3ab5",
        "parentId" : "1ff48709-baf8-4602-abe9-8011b65e13dd",
        "authorId" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "body" : "Ah, OK, sorry, I didn't realize the authors of the package didn't include it. I just added the license file.",
        "createdAt" : "2019-03-21T09:41:12Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "tags" : [
        ]
      }
    ],
    "commit" : "c15dc7cf1e5433fec9de1d5dcf5c8b0daa473562",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +56,60 @@  license: GPL2\n  license_family: GPL\n  license_file: LICENSE\n  summary: 'A Python library for doing bibliometric and network analysis in science and health policy research'\n"
  },
  {
    "id" : "3a3ebb0c-beb9-42d4-8197-3b4f70eeb177",
    "prId" : 8024,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/8024#pullrequestreview-217480849",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ef90998-6584-47af-b08f-476c293ece35",
        "parentId" : null,
        "authorId" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "body" : "It looks like you need `entry_points`, see these links:\r\n * https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html?highlight=selectors#python-entry-points\r\n * https://github.com/networks-lab/metaknowledge/blob/master/setup.py#L45-L49\r\n(this is probably causing the Windows failure)",
        "createdAt" : "2019-03-21T12:32:36Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "tags" : [
        ]
      },
      {
        "id" : "ee54f46a-a592-4b94-a9ae-ee109d5ef219",
        "parentId" : "7ef90998-6584-47af-b08f-476c293ece35",
        "authorId" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "body" : "Ah yes, thanks. I'm not too familiar with `entry_points` and the interaction with `conda`. Presumably, while building the wheel using `pip` the `entry_point` is created, I presume? If I include the `entry_point` also in the `meta.yaml`, will the problem then be resolved?",
        "createdAt" : "2019-03-21T14:40:19Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "tags" : [
        ]
      },
      {
        "id" : "7872130e-684f-4b63-b48b-ee4784df0819",
        "parentId" : "7ef90998-6584-47af-b08f-476c293ece35",
        "authorId" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "body" : "Yeah, unfortunately this information has to be duplicated between the `setup.py` and `meta.yaml` file. So far as I know, it is used for two things:\r\n * Making the binary for the `entry_point` relocatable\r\n * Installing the correct binary for the current platform for `noarch` packages, i.e. if it was built on Linux then installed on Windows it will install `my_entry_point.exe` instead of `my_entry_point`.",
        "createdAt" : "2019-03-21T14:44:45Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "tags" : [
        ]
      },
      {
        "id" : "bde58da2-6e98-417e-b3ea-3928fe109ec6",
        "parentId" : "7ef90998-6584-47af-b08f-476c293ece35",
        "authorId" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "body" : "OK, great, thanks! \r\n\r\nNo problem to have some duplication of this, just wanted to make sure that I would do the right thing.",
        "createdAt" : "2019-03-21T14:58:02Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "tags" : [
        ]
      },
      {
        "id" : "9caf3407-ce53-4dd9-abb7-a09c50f90389",
        "parentId" : "7ef90998-6584-47af-b08f-476c293ece35",
        "authorId" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "body" : "I believe the new commit should resolve this problem.",
        "createdAt" : "2019-03-21T15:38:31Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "tags" : [
        ]
      },
      {
        "id" : "3b0f0c12-29c5-4015-8d21-0fb92aacaeb7",
        "parentId" : "7ef90998-6584-47af-b08f-476c293ece35",
        "authorId" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "body" : "Right, there cannot be selectors when using `noarch`. How would you suggest to resolve this, @chrisburr? The `pyreadline` is only available (and necessary) for Windows. Should I just remove the `noarch`? \r\n\r\nFYI, the `(py)readline` is only necessary because of the CLI that is created using the `entry_point`. I don't think the CLI is necessary in `conda-forge`. Is there a way to remove it from the `conda` package? I could simply exclude the CLI (`metaknowledge.bin`) in the test section, but the CLI would still not function properly with `pyreadline`.",
        "createdAt" : "2019-03-21T15:45:33Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "tags" : [
        ]
      },
      {
        "id" : "adf67851-ec69-4d1b-bd9b-1af3b376d91b",
        "parentId" : "7ef90998-6584-47af-b08f-476c293ece35",
        "authorId" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "body" : "> Should I just remove the noarch?\r\n\r\nYes, in this case there isn't an alternative. You will also need to remove ` >=3` on `python` and use `skip: True # [py2k]` instead in the build section of the yaml.\r\n\r\nAlso `pyreadline [win]` -> `pyreadline  # [win]`\r\n\r\n> Is there a way to remove it from the conda package?\r\n\r\nYou could patch it, but I think its better to be consistent else users might get confused why the same version behaves differently between `pip` and `conda`.",
        "createdAt" : "2019-03-21T16:25:38Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "tags" : [
        ]
      },
      {
        "id" : "72701412-b3cd-4b97-9d1c-bb334c5b459c",
        "parentId" : "7ef90998-6584-47af-b08f-476c293ece35",
        "authorId" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "body" : "You could patch it if it is not that important and the recipe will still be ``norach``",
        "createdAt" : "2019-03-21T16:49:10Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "tags" : [
        ]
      },
      {
        "id" : "322a9739-71b4-41b6-afa8-5977f371131a",
        "parentId" : "7ef90998-6584-47af-b08f-476c293ece35",
        "authorId" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "body" : "I would go to patch the ``entry_points`` and remove the dependency of ``pyreadline ``",
        "createdAt" : "2019-03-21T16:49:37Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "tags" : [
        ]
      },
      {
        "id" : "fbf2325d-ba94-47f4-9f5e-e4d1905d96b2",
        "parentId" : "7ef90998-6584-47af-b08f-476c293ece35",
        "authorId" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "body" : "I tend to agree with @chrisburr, it is probably best to ensure that users get the same versions. Personally, I consider the CLI unimportant, but perhaps other users may think differently about this. Thanks for the advice!",
        "createdAt" : "2019-03-21T20:41:36Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "tags" : [
        ]
      }
    ],
    "commit" : "c15dc7cf1e5433fec9de1d5dcf5c8b0daa473562",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@  number: 0\n  skip: True  # [py2k]\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n  entry_points:\n    - metaknowledge = metaknowledge.bin:mkCLI"
  },
  {
    "id" : "92d1304e-05ed-4d16-b7e7-617f96b6a5a0",
    "prId" : 8024,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/8024#pullrequestreview-217710171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c983617d-bab5-489f-880c-04fdaef2f092",
        "parentId" : null,
        "authorId" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "body" : "From the `setup.py` it looks like you need three entry points?\r\n```suggestion\r\n    - metaknowledge = metaknowledge.bin:mkCLI\r\n    - metaknowledge-mdToNb = metaknowledge.bin:mkMdToNb\r\n    - metaknowledge-DocsGen = metaknowledge.bin:mkDocs\r\n```",
        "createdAt" : "2019-03-22T11:13:43Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "tags" : [
        ]
      },
      {
        "id" : "f4dfb3e4-06d5-4b76-a066-11d037910e15",
        "parentId" : "c983617d-bab5-489f-880c-04fdaef2f092",
        "authorId" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "body" : "Yes, I left them out because they weren't needed to prevent the `entry_point` error. I can put it in of course, but I wasn't sure whether that would be needed. If it is needed for the proper functioning of it, I'd be glad to include it of course.",
        "createdAt" : "2019-03-22T11:30:34Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "tags" : [
        ]
      },
      {
        "id" : "02724b6c-a09b-492d-b741-8caccb1b6d72",
        "parentId" : "c983617d-bab5-489f-880c-04fdaef2f092",
        "authorId" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "body" : "I'm not sure if they're strictly needed and I don't really understand what does and doesn't trigger that Windows error but I would add them to be safe.",
        "createdAt" : "2019-03-22T11:33:32Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "tags" : [
        ]
      },
      {
        "id" : "64eea6fa-1934-43a5-9377-065f57b66d97",
        "parentId" : "c983617d-bab5-489f-880c-04fdaef2f092",
        "authorId" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "body" : "OK, will do, thanks.",
        "createdAt" : "2019-03-22T11:39:14Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "tags" : [
        ]
      }
    ],
    "commit" : "c15dc7cf1e5433fec9de1d5dcf5c8b0daa473562",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n  entry_points:\n    - metaknowledge = metaknowledge.bin:mkCLI\n    - metaknowledge-mdToNb = metaknowledge.bin:mkMdToNb\n    - metaknowledge-DocsGen = metaknowledge.bin:mkDocs"
  },
  {
    "id" : "ec480860-ac34-4269-9c05-4e48af31a60f",
    "prId" : 8024,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/8024#pullrequestreview-217710292",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a548e88c-30b4-4412-bc3c-b257cae81f89",
        "parentId" : null,
        "authorId" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "body" : "I think you only need `python` and `pip` in the host requirements section. These are just the requirements used for running the `setup.py` file not those used by the package itself.",
        "createdAt" : "2019-03-22T11:14:44Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "tags" : [
        ]
      },
      {
        "id" : "8eb44cc2-2a03-44d5-bdcd-22de7ceb970a",
        "parentId" : "a548e88c-30b4-4412-bc3c-b257cae81f89",
        "authorId" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "body" : "Ah yes, indeed. I think I should include the others in the `test` section as `requires` though.",
        "createdAt" : "2019-03-22T11:33:18Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "tags" : [
        ]
      },
      {
        "id" : "690c7492-53bb-4ecb-aad6-53e974b03139",
        "parentId" : "a548e88c-30b4-4412-bc3c-b257cae81f89",
        "authorId" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "body" : "Or is that already implied by the `run` requirements actually?",
        "createdAt" : "2019-03-22T11:33:46Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "tags" : [
        ]
      },
      {
        "id" : "b58b0841-a040-4a2b-bf01-14074bd757a8",
        "parentId" : "a548e88c-30b4-4412-bc3c-b257cae81f89",
        "authorId" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "body" : "Yes they will be.\r\n\r\n`test` requirements are for things that are only needed when testing (like `pytest` or `nose`).",
        "createdAt" : "2019-03-22T11:37:25Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "tags" : [
        ]
      },
      {
        "id" : "24d25421-d717-4454-bf8d-ff9e09b73254",
        "parentId" : "a548e88c-30b4-4412-bc3c-b257cae81f89",
        "authorId" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "body" : "Ah yes, of course, thanks.",
        "createdAt" : "2019-03-22T11:39:36Z",
        "updatedAt" : "2019-03-22T11:42:15Z",
        "lastEditedBy" : "b29c3105-66e5-4758-9290-4950e7bcbad4",
        "tags" : [
        ]
      }
    ],
    "commit" : "c15dc7cf1e5433fec9de1d5dcf5c8b0daa473562",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@  host:\n    - python\n    - pip\n  run:\n    - python"
  }
]