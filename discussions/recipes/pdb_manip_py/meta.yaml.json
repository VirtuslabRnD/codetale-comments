[
  {
    "id" : "6e901491-ca8d-4156-bbde-669a64430c3b",
    "prId" : 11410,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/11410#pullrequestreview-403041759",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46ea3026-c208-4ec7-8a5a-a39d5378131d",
        "parentId" : null,
        "authorId" : "085a9c6b-569e-49bd-9434-7f128372cf0c",
        "body" : "I believe you only need `pip` and `python` under `host` since the others are just run time dependencies",
        "createdAt" : "2020-04-29T20:49:53Z",
        "updatedAt" : "2020-05-02T15:13:20Z",
        "lastEditedBy" : "085a9c6b-569e-49bd-9434-7f128372cf0c",
        "tags" : [
        ]
      },
      {
        "id" : "492ec9b1-d3e5-4883-bba4-61f97b34698a",
        "parentId" : "46ea3026-c208-4ec7-8a5a-a39d5378131d",
        "authorId" : "1084f574-e30c-4fbc-8874-783f0981538a",
        "body" : "Thanks for your comments.\r\n\r\n> I believe you only need `pip` and `python` under `host` since the others are just run time dependencies\r\n\r\nI'll give it a try. Thanks\r\n\r\n> I'm not sure what's going on exactly with the windows failure. I'm not sure if it's because the binary is actually missing or if `os_command_py` is not doing what the test things it should be doing.\r\n\r\nThe issue is from the os_command_py package (that I coded myself) and the which() function which finds path of executable (as in bash). It looks for all combination within the `$PATH` env variable.\r\nIt's probably not the best option. Any suggestions ?",
        "createdAt" : "2020-04-29T21:10:04Z",
        "updatedAt" : "2020-05-02T15:13:20Z",
        "lastEditedBy" : "1084f574-e30c-4fbc-8874-783f0981538a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a44c152307b74c2aa5bdb5310dbc12f53b1bd07",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +16,20 @@\nrequirements:\n  host:\n    - pip\n    - python >=3.5"
  }
]