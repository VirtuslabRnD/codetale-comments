[
  {
    "id" : "812f807d-d388-4a53-a6e0-20ffed87bdb8",
    "prId" : 9885,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/9885#pullrequestreview-303134496",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35b7357b-8629-49aa-b6e9-d16b1527e1d3",
        "parentId" : null,
        "authorId" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "body" : "If it's not noarch you need to pin using:\r\n```suggestion\r\n  number: 0\r\n  skip: true  # [py2k]\r\n```",
        "createdAt" : "2019-10-17T09:53:19Z",
        "updatedAt" : "2019-10-17T16:17:20Z",
        "lastEditedBy" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "tags" : [
        ]
      }
    ],
    "commit" : "24215e97a76dbeb34affab04fd83f112de214f11",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +11,15 @@\nbuild:\n  number: 0\n  skip: true  # [py2k]\n  entry_points:"
  },
  {
    "id" : "520d49bc-6f32-482e-b3ba-69d791dae026",
    "prId" : 9885,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/9885#pullrequestreview-303382134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b89b5b36-ae9e-45be-a5c4-56b3f6ee719d",
        "parentId" : null,
        "authorId" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "body" : "```suggestion\r\n    - python\r\n```",
        "createdAt" : "2019-10-17T10:01:50Z",
        "updatedAt" : "2019-10-17T16:17:20Z",
        "lastEditedBy" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "tags" : [
        ]
      },
      {
        "id" : "909bf69d-833f-4382-8391-841910fb812e",
        "parentId" : "b89b5b36-ae9e-45be-a5c4-56b3f6ee719d",
        "authorId" : "66ca4e21-a920-47a8-a2ae-35c2900ac6a0",
        "body" : "@chrisburr Don't mean to speak out of term here (since I have no idea what is and or isn't valid), but superflore needs python 3 to work properly.",
        "createdAt" : "2019-10-17T14:56:36Z",
        "updatedAt" : "2019-10-17T16:17:20Z",
        "lastEditedBy" : "66ca4e21-a920-47a8-a2ae-35c2900ac6a0",
        "tags" : [
        ]
      },
      {
        "id" : "f11164cd-69ca-4690-a1a0-0a3119a11a22",
        "parentId" : "b89b5b36-ae9e-45be-a5c4-56b3f6ee719d",
        "authorId" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "body" : "There are two ways of building packages that use Python in conda-forge:\r\n* **noarch: python**: Use one build that produces a \"binary\" that can be used on all Python distributions and platforms (e.g. a pure Python package). The host/runtime requirements should then constrained using `python >=X.Y`\r\n* **others**: One \"binary\" per platform and Python version. Constraining the Python version should then be done with `skip: true  # [py<X.Y]`.\r\n\r\nAs this has different dependencies on Windows it can't use `noarch: python` and has to constrain Python the version the other way.",
        "createdAt" : "2019-10-17T16:18:45Z",
        "updatedAt" : "2019-10-17T16:19:30Z",
        "lastEditedBy" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "tags" : [
        ]
      }
    ],
    "commit" : "24215e97a76dbeb34affab04fd83f112de214f11",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@    - gitpython\n    - pygithub\n    - python >=3\n    - pyyaml\n    - requests"
  }
]