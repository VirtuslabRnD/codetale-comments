[
  {
    "id" : "a9710511-2cad-4093-9e82-305882ce319e",
    "prId" : 198,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4deb38a-70c4-408f-b287-04df928a4cab",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Could you please explain this patch?\n",
        "createdAt" : "2016-03-24T21:07:39Z",
        "updatedAt" : "2016-03-25T17:44:33Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "c3cbd7ac-a462-4ebb-b77e-e8352e52ff2f",
        "parentId" : "e4deb38a-70c4-408f-b287-04df928a4cab",
        "authorId" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "body" : "On Windows, DLLs usually don't have lib prefixes.  This is neither here nor there.  My experience with this library was that whatever I was working on (I forgot) that needed it without the lib prefix.\n\nThis is common, I find - many packages go looking for libraries with names other than the standard ones we build.  How should we approach this?  I see a few options:\n- copy/link file in recipe providing file\n- copy/link file in recipe using file\n- if only one thing is using a library, rename output, as done here.\n",
        "createdAt" : "2016-03-24T21:47:06Z",
        "updatedAt" : "2016-03-25T17:44:33Z",
        "lastEditedBy" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "tags" : [
        ]
      }
    ],
    "commit" : "80d2d0271756c2402257b64856073001bee2aa57",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +6,10 @@ PACKAGE = @PACKAGE@\n-LIBICU = lib$(ICUPREFIX)\n+LIBICU = $(ICUPREFIX)\n \n # Static library prefix and file extension"
  }
]