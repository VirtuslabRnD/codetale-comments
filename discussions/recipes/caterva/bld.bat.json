[
  {
    "id" : "9a52b49b-5a84-41b5-98e8-b902a51b441d",
    "prId" : 11385,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/11385#pullrequestreview-435113692",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d3a9c67-e2cc-4e68-8dc8-e6e70e70932d",
        "parentId" : null,
        "authorId" : "63355e08-a563-4e4d-8957-62b0581f602e",
        "body" : "@FrancescAlted Here the static libs are still explicitly requested",
        "createdAt" : "2020-05-12T11:24:36Z",
        "updatedAt" : "2020-06-22T17:27:57Z",
        "lastEditedBy" : "63355e08-a563-4e4d-8957-62b0581f602e",
        "tags" : [
        ]
      },
      {
        "id" : "ffe1f8b3-305f-4f07-ac13-0944deb4e5d0",
        "parentId" : "8d3a9c67-e2cc-4e68-8dc8-e6e70e70932d",
        "authorId" : "b29724ac-2341-4217-8197-0eec6f45b124",
        "body" : "Oh yes, well spotted!  Now that I think, I am not sure that we should get rid of `.h` and `.a/.lib` files in the conda-forge package.  If we do, probably we need another `caterva-devel` conda-forge package so as to provide these for dependencies that need it. On the other hand, I suppose it is considered good practice to provide both packages.",
        "createdAt" : "2020-05-12T11:43:29Z",
        "updatedAt" : "2020-06-22T17:27:57Z",
        "lastEditedBy" : "b29724ac-2341-4217-8197-0eec6f45b124",
        "tags" : [
        ]
      },
      {
        "id" : "4497dbee-a30f-4af3-9079-6056338ffa9c",
        "parentId" : "8d3a9c67-e2cc-4e68-8dc8-e6e70e70932d",
        "authorId" : "63355e08-a563-4e4d-8957-62b0581f602e",
        "body" : "Headers (`.h`) should be included, just static libraries shouldn't be needed at all. For a package manager that manages the whole stack, it is much simpler to update versions when there is only dynamic linkage.",
        "createdAt" : "2020-05-12T11:55:07Z",
        "updatedAt" : "2020-06-22T17:27:57Z",
        "lastEditedBy" : "63355e08-a563-4e4d-8957-62b0581f602e",
        "tags" : [
        ]
      },
      {
        "id" : "feb17bf5-1256-4798-b573-1357bbd70d77",
        "parentId" : "8d3a9c67-e2cc-4e68-8dc8-e6e70e70932d",
        "authorId" : "b29724ac-2341-4217-8197-0eec6f45b124",
        "body" : "Ok.  So I have disabled static libraries generation on both unix and win, and I am having issues with the Win platform not being able to generate `caterva.lib`:\r\n\r\n```\r\nConfiguring for caterva version: 0.3.3\r\nNMAKE : fatal error U1073: don't know how to make 'caterva.lib'\r\nStop.\r\nNMAKE : fatal error U1077: '\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX64\\x64\\nmake.exe\"' : return code '0x2'\r\nStop.\r\n```\r\n\r\nIf I remember correctly, `caterva.lib` is needed to link with `caterva.dll` on Win, but I lack the knowledge on how to generate `caterva.lib` without enabling static libraries, so I am going to unconditional enable static lib generation on win until we figure out how to properly do that via cmake. ",
        "createdAt" : "2020-05-12T12:29:17Z",
        "updatedAt" : "2020-06-22T17:27:57Z",
        "lastEditedBy" : "b29724ac-2341-4217-8197-0eec6f45b124",
        "tags" : [
        ]
      },
      {
        "id" : "0de5e138-7191-4181-86eb-100e8c6bd091",
        "parentId" : "8d3a9c67-e2cc-4e68-8dc8-e6e70e70932d",
        "authorId" : "4a3ee9f8-9e7c-459e-b715-28669578f2c0",
        "body" : "Can you add a step after the build where the *.a file is manually removed?",
        "createdAt" : "2020-06-22T16:23:41Z",
        "updatedAt" : "2020-06-22T17:27:57Z",
        "lastEditedBy" : "4a3ee9f8-9e7c-459e-b715-28669578f2c0",
        "tags" : [
        ]
      },
      {
        "id" : "277924bb-a2b3-47b8-aff6-ff3f81a378bf",
        "parentId" : "8d3a9c67-e2cc-4e68-8dc8-e6e70e70932d",
        "authorId" : "63355e08-a563-4e4d-8957-62b0581f602e",
        "body" : "I think the current approach is fine, although I'm a big fan of dont-ship-any-static-libs I understand that it building on Windows is a bit more complicated. \r\n\r\n@scopatz With MSVC, `.lib` is the static archive, there is no `.a` ;)",
        "createdAt" : "2020-06-22T16:54:38Z",
        "updatedAt" : "2020-06-22T17:27:57Z",
        "lastEditedBy" : "63355e08-a563-4e4d-8957-62b0581f602e",
        "tags" : [
        ]
      },
      {
        "id" : "7140f13f-adcd-4081-b46b-d52415730fc5",
        "parentId" : "8d3a9c67-e2cc-4e68-8dc8-e6e70e70932d",
        "authorId" : "b29724ac-2341-4217-8197-0eec6f45b124",
        "body" : "Sounds good.  I am attempting to remove the *.lib (I think *.a is just meant for Unix).",
        "createdAt" : "2020-06-22T17:00:45Z",
        "updatedAt" : "2020-06-22T17:27:57Z",
        "lastEditedBy" : "b29724ac-2341-4217-8197-0eec6f45b124",
        "tags" : [
        ]
      }
    ],
    "commit" : "e43dd74803375cf1396ed7c63c38419682eaa65b",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +11,15 @@      -DCMAKE_PREFIX_PATH:PATH=\"%LIBRARY_PREFIX%\" ^\n      -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=ON ^\n      -DSTATIC_LIB:BOOL=ON ^\n      -DSHARED_LIB:BOOL=ON ^\n      \"%SRC_DIR%\""
  }
]