[
  {
    "id" : "931ec2d6-6d83-49a2-8415-2faaca7692fe",
    "prId" : 188,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ad4d27b-7e6d-45e3-8dad-2ac5ecc9619a",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Here is the filename variable.\n",
        "createdAt" : "2016-03-23T15:15:41Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a748343d3db2cf0ab05af6ecd55cbc9deff436a",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +0,4 @@{% set version = \"1.60.0\" %}\n{% set filename = \"boost_%s.tar.bz2\" % version.replace(\".\", \"_\") %}\n\npackage:"
  },
  {
    "id" : "c111fa96-64d7-4fc6-8fe3-00b4842a7170",
    "prId" : 188,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05cc60d4-4463-4697-803b-f3061693b22a",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Now, `fn` and `url` are still readable while being maintainable. :smile: Thoughts?\n",
        "createdAt" : "2016-03-23T15:16:21Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "60a81256-b84d-46c9-89a9-60f5d58636d5",
        "parentId" : "05cc60d4-4463-4697-803b-f3061693b22a",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Cool, glad we like this. If you guys have more thoughts on how to make things more readable still, please share.\n",
        "createdAt" : "2016-03-23T15:59:36Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "2508d00c-4a41-45c7-bb19-b4ca3909ec6b",
        "parentId" : "05cc60d4-4463-4697-803b-f3061693b22a",
        "authorId" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "body" : "The filename could be defined as a jinja variable _after_ the `source:` section? That way it is in one place, readable, and doesn't pollute the sacred first few lines... otherwise, I :heart: it\n",
        "createdAt" : "2016-03-25T05:10:45Z",
        "updatedAt" : "2016-03-25T05:10:45Z",
        "lastEditedBy" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a748343d3db2cf0ab05af6ecd55cbc9deff436a",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +8,12 @@source:\n  fn:  {{ filename }}\n  url: http://sourceforge.net/projects/boost/files/boost/{{ version }}/{{ filename }}\n  md5: 65a840e1a0b13a558ff19eeb2c4f0cbe\n"
  },
  {
    "id" : "1a799cf0-afa4-4ba1-b314-d4ddf8824653",
    "prId" : 188,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fbf48a25-e2d1-46be-a5b6-04804a4e3da8",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Now has a nice clean jinja template based implementation. Still quite long as we have to explicitly list all the library names. However, with this strategy we don't need to explicitly list every library for every system. Instead we have library names for all systems and then system naming conventions. Tried it out on my Mac and it worked. Will now add Windows.\n",
        "createdAt" : "2016-03-24T19:09:21Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a748343d3db2cf0ab05af6ecd55cbc9deff436a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +85,89 @@    - if not exist %PREFIX%\\\\Library\\\\lib\\\\boost_{{ each_boost_lib }}-vc100-mt-{{ win_vstr }}.lib exit 1  # [win and py34]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\boost_{{ each_boost_lib }}-vc140-mt-{{ win_vstr }}.lib exit 1  # [win and py35]\n    {% endfor %}\n\nabout:"
  },
  {
    "id" : "91b0b28d-de2e-417c-ad49-9a16c5f9bb3c",
    "prId" : 188,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2fff8ac1-1cf7-4e6b-909b-6149df94991e",
        "parentId" : null,
        "authorId" : "9799b80f-9b68-4248-a59b-97863925aa64",
        "body" : "`icu` version must be pinned, to avoid errors like ContinuumIO/anaconda-issues#700.\n",
        "createdAt" : "2016-03-24T19:25:03Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "9799b80f-9b68-4248-a59b-97863925aa64",
        "tags" : [
        ]
      },
      {
        "id" : "891852e3-6f76-4f09-8bee-88a293f2ad84",
        "parentId" : "2fff8ac1-1cf7-4e6b-909b-6149df94991e",
        "authorId" : "9799b80f-9b68-4248-a59b-97863925aa64",
        "body" : "That was my fault: I had compiled a more recent version of icu for my Qt5 packages, and forget about it when creating new Boost packages.\n\nThat's why it has to be pinned :-) \n",
        "createdAt" : "2016-03-24T19:26:39Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "9799b80f-9b68-4248-a59b-97863925aa64",
        "tags" : [
        ]
      },
      {
        "id" : "7447d763-41e7-450b-be26-a791c7e5d6c1",
        "parentId" : "2fff8ac1-1cf7-4e6b-909b-6149df94991e",
        "authorId" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "body" : "But this opens Pandora's box, right?  What pinning should be done in general?\n",
        "createdAt" : "2016-03-24T19:29:42Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "tags" : [
        ]
      },
      {
        "id" : "39f59b71-9c65-48d7-9840-20b938cd0dfd",
        "parentId" : "2fff8ac1-1cf7-4e6b-909b-6149df94991e",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Could use selectors so it is only pinned on Windows.\n",
        "createdAt" : "2016-03-24T19:31:53Z",
        "updatedAt" : "2016-03-24T19:31:53Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "f6036a73-8fc7-4caf-a3b0-13e2cde5525e",
        "parentId" : "2fff8ac1-1cf7-4e6b-909b-6149df94991e",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "At some point, we do need to consider pinning to ensure ABI compatibility with regards to non-Python and non-NumPy things. Though this requires a more general proposal that I believe @ukoethe was thinking about.\n",
        "createdAt" : "2016-03-24T19:38:48Z",
        "updatedAt" : "2016-03-24T19:38:48Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "271f1612-9def-4378-96ce-acf3ffdfaef7",
        "parentId" : "2fff8ac1-1cf7-4e6b-909b-6149df94991e",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Now that I am thinking about it. I think the easiest way forward on this would be to get an `icu` feedstock going.\n",
        "createdAt" : "2016-03-24T20:34:11Z",
        "updatedAt" : "2016-03-24T20:34:55Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "de0107e6-3220-4feb-a2e7-2da6ecd461f1",
        "parentId" : "2fff8ac1-1cf7-4e6b-909b-6149df94991e",
        "authorId" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "body" : "+1.  We have a recipe I can convert - don't redo it if you don't have to.\n",
        "createdAt" : "2016-03-24T20:36:46Z",
        "updatedAt" : "2016-03-24T20:36:46Z",
        "lastEditedBy" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "tags" : [
        ]
      },
      {
        "id" : "3ba3d0c8-d3fa-4b2b-8e29-1d77b5c0e8fb",
        "parentId" : "2fff8ac1-1cf7-4e6b-909b-6149df94991e",
        "authorId" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "body" : "https://github.com/conda-forge/staged-recipes/pull/198\n",
        "createdAt" : "2016-03-24T20:45:58Z",
        "updatedAt" : "2016-03-24T20:45:58Z",
        "lastEditedBy" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "tags" : [
        ]
      },
      {
        "id" : "8a57a6ac-3618-49b3-84f3-d0747535177e",
        "parentId" : "2fff8ac1-1cf7-4e6b-909b-6149df94991e",
        "authorId" : "9799b80f-9b68-4248-a59b-97863925aa64",
        "body" : "`icu` is critical to Boost, as the issue I referenced above shows. It seems `icu` changes its library version name on each release, so that's why it needs to be pinned with something like:\n\n```\n- icu 54*\n```\n\nI don't understand Mike concern because (for example) we ping `libpng` in our Qt recipe with\n\n```\n- libpng      1.6*\n```\n\nto avoid breaking Qt when libpng is updated :-)\n",
        "createdAt" : "2016-03-24T21:07:36Z",
        "updatedAt" : "2016-03-24T21:07:36Z",
        "lastEditedBy" : "9799b80f-9b68-4248-a59b-97863925aa64",
        "tags" : [
        ]
      },
      {
        "id" : "d5768f79-7eb6-4bd5-9a5c-cf9103c36bba",
        "parentId" : "2fff8ac1-1cf7-4e6b-909b-6149df94991e",
        "authorId" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "body" : "I don't mind pinning, I would just like to have completely clear guidelines on when and why to do it.  I have seen things fail because versions were not pinned, and I've seen things fail because things were pinned.  Neither approach is completely right, but people should be making explicit, educated choices on these things.\n",
        "createdAt" : "2016-03-24T21:17:21Z",
        "updatedAt" : "2016-03-24T21:17:21Z",
        "lastEditedBy" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a748343d3db2cf0ab05af6ecd55cbc9deff436a",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +21,25 @@    - gcc               # [linux]\n    - python\n    - icu               # [unix]\n    - bzip2             # [unix]\n    - zlib"
  },
  {
    "id" : "f8be30d6-4d22-4973-8132-f204ae94af22",
    "prId" : 188,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "962b9235-a6b1-46fb-9506-df82146f960d",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Can someone with more Windows knowledge clarify as to whether this looks correct?\n",
        "createdAt" : "2016-03-24T19:34:29Z",
        "updatedAt" : "2016-03-24T19:34:29Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "ca91631a-c316-4cd8-8698-97a56f2aed44",
        "parentId" : "962b9235-a6b1-46fb-9506-df82146f960d",
        "authorId" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "body" : "LGTM.  Let's see what Appveyor says.\n",
        "createdAt" : "2016-03-24T19:35:38Z",
        "updatedAt" : "2016-03-24T19:35:38Z",
        "lastEditedBy" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "tags" : [
        ]
      },
      {
        "id" : "535e2667-1999-4f2a-bc67-af467fe39bc8",
        "parentId" : "962b9235-a6b1-46fb-9506-df82146f960d",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "The first AppVeyor build in the matrix passed and did actually check the libraries. So, that is a good sign. Will be a bit before the full outcome is clear.\n",
        "createdAt" : "2016-03-24T20:17:53Z",
        "updatedAt" : "2016-03-24T20:17:53Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a748343d3db2cf0ab05af6ecd55cbc9deff436a",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +84,88 @@    - if not exist %PREFIX%\\\\Library\\\\lib\\\\boost_{{ each_boost_lib }}-vc90-mt-{{ win_vstr }}.lib exit 1   # [win and py27]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\boost_{{ each_boost_lib }}-vc100-mt-{{ win_vstr }}.lib exit 1  # [win and py34]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\boost_{{ each_boost_lib }}-vc140-mt-{{ win_vstr }}.lib exit 1  # [win and py35]\n    {% endfor %}\n"
  }
]