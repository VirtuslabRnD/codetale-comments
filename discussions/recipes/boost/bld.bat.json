[
  {
    "id" : "4202dc42-e852-4476-8a71-5f420c072af9",
    "prId" : 188,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76816828-3cb1-427a-ac09-82c8c30a5fe9",
        "parentId" : null,
        "authorId" : "a67e24bc-ed74-490a-95d0-cd6b6de195d3",
        "body" : "Hardcoded boost version? Would it be possible to pass the boost version through?\n\n```\nbuild:\n  script_env:\n   - BOOST_VER={{ version }}\n```\n",
        "createdAt" : "2016-03-23T15:36:29Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "a67e24bc-ed74-490a-95d0-cd6b6de195d3",
        "tags" : [
        ]
      },
      {
        "id" : "4ca89a89-ff85-41a2-9ef9-64b79ed9a334",
        "parentId" : "76816828-3cb1-427a-ac09-82c8c30a5fe9",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Good point or maybe we could use some regex type thing on Windows. Not positive on the syntax though. So, if you have some ideas, we can play with that a bit.\n",
        "createdAt" : "2016-03-23T15:58:10Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "24390a8d-7fe4-4c0c-a881-c6948592e24c",
        "parentId" : "76816828-3cb1-427a-ac09-82c8c30a5fe9",
        "authorId" : "9799b80f-9b68-4248-a59b-97863925aa64",
        "body" : "I know it's ugly to have this hardcoded version here (I'm the culprit for this one ;-). As @patricksnape says, it should be easily fixable with some Jinja2 magic.\n",
        "createdAt" : "2016-03-23T16:16:41Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "9799b80f-9b68-4248-a59b-97863925aa64",
        "tags" : [
        ]
      },
      {
        "id" : "17fdea45-0331-4077-aae1-a80fed74f56f",
        "parentId" : "76816828-3cb1-427a-ac09-82c8c30a5fe9",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "No worries. Getting the first working implementation is the hard part. Thanks for getting that together.\n\nNow we will just make it pretty. :wink: \n",
        "createdAt" : "2016-03-23T16:18:49Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "e73f954b-d382-4087-8b98-68f4699d997c",
        "parentId" : "76816828-3cb1-427a-ac09-82c8c30a5fe9",
        "authorId" : "2c6700ae-3cf4-4eb1-b926-644b799e6cfb",
        "body" : "It's easy to fix this in the bat script. But since the version number was only recently added to the boost include path (it wasn't there in 1.55), chances are that they change their mind again in 1.61. So I suggest to wait until we see the next version.\n",
        "createdAt" : "2016-03-23T17:10:36Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "2c6700ae-3cf4-4eb1-b926-644b799e6cfb",
        "tags" : [
        ]
      },
      {
        "id" : "8ae5bdfb-00ea-4fa8-bbc5-b8e3d3fbefd0",
        "parentId" : "76816828-3cb1-427a-ac09-82c8c30a5fe9",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "If someone wants to submit a PR to the feedstock for this change, feel free to.\n",
        "createdAt" : "2016-03-30T15:20:23Z",
        "updatedAt" : "2016-03-30T15:20:23Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "3560be81-3ec0-448c-93a5-1d709da1d840",
        "parentId" : "76816828-3cb1-427a-ac09-82c8c30a5fe9",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "BTW, I tried to add functionality like this to `conda-build` once ( see this PR https://github.com/conda/conda-build/pull/767 ), but there were no takers. So, I don't believe this is possible at present.\n",
        "createdAt" : "2016-05-07T17:45:20Z",
        "updatedAt" : "2016-05-07T17:45:20Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "382cd4ae-02cc-482d-a638-c57ca3bd9e78",
        "parentId" : "76816828-3cb1-427a-ac09-82c8c30a5fe9",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Though it may be more practical for this problem to just use [`PKG_VERSION`](http://conda.pydata.org/docs/building/environment-vars.html#environment-variables-set-during-the-build-process).\n",
        "createdAt" : "2016-05-07T17:48:40Z",
        "updatedAt" : "2016-05-07T17:48:40Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a748343d3db2cf0ab05af6ecd55cbc9deff436a",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@\n:: Install fix-up for a non version-specific boost include\nmove %LIBRARY_INC%\\boost-1_60\\boost %LIBRARY_INC%\nif errorlevel 1 exit 1\n"
  },
  {
    "id" : "d42ee7f0-271e-4e18-95cb-4a48bcb1ffbc",
    "prId" : 188,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd5b8622-b3c0-4f69-a265-49995fd702df",
        "parentId" : null,
        "authorId" : "2c6700ae-3cf4-4eb1-b926-644b799e6cfb",
        "body" : "I'm not sure if `--with-python` is needed here to have the boost_python library built. Please check!\n",
        "createdAt" : "2016-03-23T17:04:31Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "2c6700ae-3cf4-4eb1-b926-644b799e6cfb",
        "tags" : [
        ]
      },
      {
        "id" : "0624f2df-2c61-45f0-93a8-db1f66c44b53",
        "parentId" : "bd5b8622-b3c0-4f69-a265-49995fd702df",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Good point. Probably should be.\n",
        "createdAt" : "2016-03-23T17:16:41Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "f8a154cb-beb1-4b73-a9d3-f722dba587d4",
        "parentId" : "bd5b8622-b3c0-4f69-a265-49995fd702df",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Added.\n",
        "createdAt" : "2016-03-23T17:22:23Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "c6c3f9da-746d-4ef7-8944-9aecff87404c",
        "parentId" : "bd5b8622-b3c0-4f69-a265-49995fd702df",
        "authorId" : "2c6700ae-3cf4-4eb1-b926-644b799e6cfb",
        "body" : "As I think about it, I can't remember which libraries boost includes by default on Windows - maybe none? So, perhaps `--with-serialization --with-system` and so on is needed for each of them.\n",
        "createdAt" : "2016-03-23T17:39:03Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "2c6700ae-3cf4-4eb1-b926-644b799e6cfb",
        "tags" : [
        ]
      },
      {
        "id" : "e9897ee0-3d56-4cb7-8524-de346f6f7ae7",
        "parentId" : "bd5b8622-b3c0-4f69-a265-49995fd702df",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "You may be right. Let me work on the test part. I'll make sure this does a comprehensive test on the libs for all platforms. That way, it will be clear what (if any) other flags need to be added here.\n",
        "createdAt" : "2016-03-23T17:42:41Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "fa313420-b4b7-4d50-be62-aaf393f586a6",
        "parentId" : "bd5b8622-b3c0-4f69-a265-49995fd702df",
        "authorId" : "9799b80f-9b68-4248-a59b-97863925aa64",
        "body" : "`--with-python` is not necessary, nor the other options mentioned by @ukoethe. As I said before, Boost build system tries to compile everything it can, and skips the libraries it can't.\n\n@jakirkham, please remove `--with-python` from here.\n",
        "createdAt" : "2016-03-23T21:34:52Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "9799b80f-9b68-4248-a59b-97863925aa64",
        "tags" : [
        ]
      },
      {
        "id" : "e651acd8-4174-4689-a7dc-6b7ffb09c50d",
        "parentId" : "bd5b8622-b3c0-4f69-a265-49995fd702df",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Noted will remove.\n",
        "createdAt" : "2016-03-24T04:34:38Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "f35848ec-4e43-45fa-9e2a-39ec00d03765",
        "parentId" : "bd5b8622-b3c0-4f69-a265-49995fd702df",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "I think I mentioned this somewhere else, but ensuring we have verified that we have _all_ the libraries in the test will make it easy to see if something is missing and then we can add flags as needed.\n",
        "createdAt" : "2016-03-24T04:36:26Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "c2d0fd36-4f8c-473d-a979-31df620c960d",
        "parentId" : "bd5b8622-b3c0-4f69-a265-49995fd702df",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "`--with-python` has been removed.\n",
        "createdAt" : "2016-03-24T06:29:35Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a748343d3db2cf0ab05af6ecd55cbc9deff436a",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +20,24 @@\n:: Build step\n.\\b2 install ^\n    --build-dir=buildboost ^\n    --prefix=%LIBRARY_PREFIX% ^"
  },
  {
    "id" : "d2f56750-0f32-477e-8f96-b92d978774a1",
    "prId" : 188,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a753e2cb-f81d-45d3-b18b-a613991d10b1",
        "parentId" : null,
        "authorId" : "a67e24bc-ed74-490a-95d0-cd6b6de195d3",
        "body" : "This is truly black magic to me. But it looks fantastic. How does this ensure that the 'correct' compiler is chosen for normal builds of Python? Aka VC9 for PY27, VC10 for PY34, VC14 for PY35?\n\n@jakirkham What happened to this change?\n",
        "createdAt" : "2016-03-23T17:54:01Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "a67e24bc-ed74-490a-95d0-cd6b6de195d3",
        "tags" : [
        ]
      },
      {
        "id" : "e4090556-164c-41f3-8c11-fbe14456a80e",
        "parentId" : "a753e2cb-f81d-45d3-b18b-a613991d10b1",
        "authorId" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "body" : "conda-build takes care of that.  The change I asked @jakirkham to make basically gets out of the way if the user wants to break that relationship.  Conda-build calls the vcvarsall.bat of the compiler you tell it (or the defaults line up with Python versions).  It does that before bld.bat is called.  This script uses whichever cl.exe is on PATH to figure out the corresponding VS version.\n\nI have no idea why that for loop mess is necessary to read output from programs, but that is all I've been able to find.  I feel dirty every time I do that (and I also have to spend a fair bit of time on Stack Overflow every time I add a new variant).\n",
        "createdAt" : "2016-03-23T17:57:55Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "tags" : [
        ]
      },
      {
        "id" : "f5ab7963-9c34-43ee-9052-30c1c85ca464",
        "parentId" : "a753e2cb-f81d-45d3-b18b-a613991d10b1",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Yeah, I squashed all this stuff together to keep life simple. The original change can be found in this PR ( https://github.com/jakirkham/staged-recipes/pull/1 ).\n",
        "createdAt" : "2016-03-23T18:36:39Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a748343d3db2cf0ab05af6ecd55cbc9deff436a",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@:FOUND\n\ncall :TRIM VSTRING %VSTRING%\n\n:: Start with bootstrap"
  },
  {
    "id" : "9ec2efea-406b-47b2-bdd9-2d7876831a31",
    "prId" : 188,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fae5a74-aa76-40fd-bd02-5f5dbce07f88",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "If we do Boost version templating, we will want it here too.\n",
        "createdAt" : "2016-03-23T18:38:02Z",
        "updatedAt" : "2016-03-24T19:31:05Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "74d8ef1f-36ed-4b1e-a6e1-3b95f0c21241",
        "parentId" : "4fae5a74-aa76-40fd-bd02-5f5dbce07f88",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Does anyone know if I can share jinja template variables with the environment? That would help fix these hard-coded versions and leverage the same info in the recipe. Alternatively, if we can just use `*`, I can do that here also.\n",
        "createdAt" : "2016-03-24T20:09:48Z",
        "updatedAt" : "2016-03-24T20:09:48Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a748343d3db2cf0ab05af6ecd55cbc9deff436a",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@\n:: Move dll's to LIBRARY_BIN\nmove %LIBRARY_LIB%\\*vc%VSTRING%0-mt-1_60.dll \"%LIBRARY_BIN%\"\nif errorlevel 1 exit 1\n"
  }
]