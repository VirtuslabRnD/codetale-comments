[
  {
    "id" : "9fa5f776-21f8-416c-aa04-ff61609a0a77",
    "prId" : 338,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f60fa442-4175-4185-ae84-a896dd27be97",
        "parentId" : null,
        "authorId" : "9799b80f-9b68-4248-a59b-97863925aa64",
        "body" : "Why is this needed?\n",
        "createdAt" : "2016-04-13T17:56:13Z",
        "updatedAt" : "2016-04-18T16:48:57Z",
        "lastEditedBy" : "9799b80f-9b68-4248-a59b-97863925aa64",
        "tags" : [
        ]
      },
      {
        "id" : "dbb8ce62-9427-4d87-8099-89fb2c996e3a",
        "parentId" : "f60fa442-4175-4185-ae84-a896dd27be97",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "So, it turns out if something tries to load the libraries we have built before fixing them with `install_name_tool` or `patchelf`, some libraries are not found and loaded properly in some cases. While I am still a bit fuzzy on details, I believe this has to do with some dependency libraries using rpaths while the libraries built here still do not. By doing this, we can work around this issue during testing. It ends up being needed for install in this case as some binaries are run during the install process that run into issue otherwise. Fortunately, this has no effect on the package. After running `install_name_tool` or `patchelf` on the libraries and binaries following the build step, we find this is no longer necessary in the final package.\n",
        "createdAt" : "2016-04-14T04:41:23Z",
        "updatedAt" : "2016-04-18T16:48:57Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "143c3200f09dd081d22d6aeafc081756e73eb654",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +8,12 @@then\n    export LIBRARY_SEARCH_VAR=LD_LIBRARY_PATH\nfi\n\nsed -i.orig s:'@PREFIX@':\"${PREFIX}\":g src/fccfg.c"
  }
]