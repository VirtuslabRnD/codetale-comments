[
  {
    "id" : "4732cbc0-3fb7-49e2-8493-5a77618920e1",
    "prId" : 13073,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/13073#pullrequestreview-523101120",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec14242c-183e-4795-9edc-dbbd1494d969",
        "parentId" : null,
        "authorId" : "c299267b-13d3-4165-bdd2-383eea98be0c",
        "body" : "This prevents the global pinning from being applied:\r\n```suggestion\r\n    - glib\r\n    # Header+pkgconfig files for libglib are in the glib package.\r\n    # Explicitly depend on libglib to avoid glib run_exports from older builds.\r\n    - libglib\r\n```\r\nI'm not sure `libglib` is needed in view of the global pin being used in the feedstock?",
        "createdAt" : "2020-11-04T05:29:43Z",
        "updatedAt" : "2020-11-04T07:40:16Z",
        "lastEditedBy" : "c299267b-13d3-4165-bdd2-383eea98be0c",
        "tags" : [
        ]
      },
      {
        "id" : "067f900d-dd44-4946-8aa5-ecbcb14eff2a",
        "parentId" : "ec14242c-183e-4795-9edc-dbbd1494d969",
        "authorId" : "5474cf89-70ae-49ae-b92c-62994b9c074b",
        "body" : "Looks like our pin is for `2.58` (https://github.com/conda-forge/conda-forge-pinning-feedstock/blob/9139cdcd01e237239f4bbc6241e0bf7cf19b2923/recipe/conda_build_config.yaml#L425) but the split is only available for version `>=2.66.1` (https://github.com/conda-forge/glib-feedstock/pull/57/files) and `2.64.6` (https://github.com/conda-forge/glib-feedstock/pull/68).\r\nHmm... I'll definitely have to add a `pin_compatible` though. The `run_exports` uses the default `max_pin` -- that one is just `'x'`, right (I can't remember exactly)? If so, keeping the version constraint and adding a `pin_compatible` should work.",
        "createdAt" : "2020-11-04T07:34:46Z",
        "updatedAt" : "2020-11-04T07:40:16Z",
        "lastEditedBy" : "5474cf89-70ae-49ae-b92c-62994b9c074b",
        "tags" : [
        ]
      },
      {
        "id" : "c2122207-69ef-49cd-8794-651c2645477e",
        "parentId" : "ec14242c-183e-4795-9edc-dbbd1494d969",
        "authorId" : "5474cf89-70ae-49ae-b92c-62994b9c074b",
        "body" : "Oh wait, duh, if I depend on `libglib`, I always get the `run_exports` and as such don't need a `pin_compatible`. Nvm.",
        "createdAt" : "2020-11-04T07:36:01Z",
        "updatedAt" : "2020-11-04T07:40:16Z",
        "lastEditedBy" : "5474cf89-70ae-49ae-b92c-62994b9c074b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bf9e9d1cbb79aaa598457d2f20bdad55034093f",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +27,31 @@    # Header+pkgconfig files for libglib are in the glib package.\n    # Explicitly depend on libglib to avoid glib run_exports from older builds.\n    - libglib >=2.0\n  run:\n"
  },
  {
    "id" : "753be331-de1f-4f06-9d7b-090abc66e643",
    "prId" : 13073,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/13073#pullrequestreview-523101120",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b1cf2e5-7e20-4bb7-975c-a21fbee8c7d5",
        "parentId" : null,
        "authorId" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "body" : "This prevents the global pinning from being applied:\r\n```suggestion\r\n    - glib\r\n    # Header+pkgconfig files for libglib are in the glib package.\r\n    # Explicitly depend on libglib to avoid glib run_exports from older builds.\r\n    - libglib\r\n```\r\nI'm not sure `libglib` is needed in view of the global pin being used in the feedstock?",
        "createdAt" : "2020-11-04T05:29:43Z",
        "updatedAt" : "2020-11-04T07:40:16Z",
        "lastEditedBy" : "d838053f-6fcd-47a0-a593-accf1cf846b0",
        "tags" : [
        ]
      },
      {
        "id" : "e1f52ac9-c47a-4ae5-890a-27aafb4acac9",
        "parentId" : "1b1cf2e5-7e20-4bb7-975c-a21fbee8c7d5",
        "authorId" : "3a070e22-cb94-4ebd-a095-bc52dc9535ad",
        "body" : "Looks like our pin is for `2.58` (https://github.com/conda-forge/conda-forge-pinning-feedstock/blob/9139cdcd01e237239f4bbc6241e0bf7cf19b2923/recipe/conda_build_config.yaml#L425) but the split is only available for version `>=2.66.1` (https://github.com/conda-forge/glib-feedstock/pull/57/files) and `2.64.6` (https://github.com/conda-forge/glib-feedstock/pull/68).\r\nHmm... I'll definitely have to add a `pin_compatible` though. The `run_exports` uses the default `max_pin` -- that one is just `'x'`, right (I can't remember exactly)? If so, keeping the version constraint and adding a `pin_compatible` should work.",
        "createdAt" : "2020-11-04T07:34:46Z",
        "updatedAt" : "2020-11-04T07:40:16Z",
        "lastEditedBy" : "3a070e22-cb94-4ebd-a095-bc52dc9535ad",
        "tags" : [
        ]
      },
      {
        "id" : "4cee1fcc-def2-44ac-b35d-3d7a8a4510de",
        "parentId" : "1b1cf2e5-7e20-4bb7-975c-a21fbee8c7d5",
        "authorId" : "3a070e22-cb94-4ebd-a095-bc52dc9535ad",
        "body" : "Oh wait, duh, if I depend on `libglib`, I always get the `run_exports` and as such don't need a `pin_compatible`. Nvm.",
        "createdAt" : "2020-11-04T07:36:01Z",
        "updatedAt" : "2020-11-04T07:40:16Z",
        "lastEditedBy" : "3a070e22-cb94-4ebd-a095-bc52dc9535ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bf9e9d1cbb79aaa598457d2f20bdad55034093f",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +27,31 @@    # Header+pkgconfig files for libglib are in the glib package.\n    # Explicitly depend on libglib to avoid glib run_exports from older builds.\n    - libglib >=2.0\n  run:\n"
  }
]