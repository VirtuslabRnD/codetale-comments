[
  {
    "id" : "c101f58e-1cfb-4833-8678-00508f610c32",
    "prId" : 10509,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/10509#pullrequestreview-337320216",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53fd30d6-5430-47cf-b415-1b6ec29d4ff0",
        "parentId" : null,
        "authorId" : "a87b6ea9-be22-4b16-b573-03beaaff4f74",
        "body" : "Is there a reason why windows is skipped?",
        "createdAt" : "2019-12-31T07:07:36Z",
        "updatedAt" : "2019-12-31T07:40:25Z",
        "lastEditedBy" : "a87b6ea9-be22-4b16-b573-03beaaff4f74",
        "tags" : [
        ]
      },
      {
        "id" : "63d9b00e-a44a-42c8-9362-fca0bc94b2db",
        "parentId" : "53fd30d6-5430-47cf-b415-1b6ec29d4ff0",
        "authorId" : "79aaf2f2-715c-4f62-be6f-53a28ae7e883",
        "body" : "The pocl package is not available on Windows. It provides a CPU OpenCL driver. The package also works without pocl present if there is another OpenCL driver on the system (e.g. Intel, Nvidia), but requires at least one to function properly. Is there an option to include pocl only on non-windows builds? Then I could enable it.\r\n\r\nJust for info. The Python version restriction is due to a known Numba bug with Python 3.8. I am waiting for the next Numba version to be released (should be quite soon), so that we can enable Python 3.8.",
        "createdAt" : "2019-12-31T07:35:49Z",
        "updatedAt" : "2019-12-31T07:42:28Z",
        "lastEditedBy" : "79aaf2f2-715c-4f62-be6f-53a28ae7e883",
        "tags" : [
        ]
      },
      {
        "id" : "21ed5ca6-a6f4-4a5b-9233-40b7561b93ea",
        "parentId" : "53fd30d6-5430-47cf-b415-1b6ec29d4ff0",
        "authorId" : "79aaf2f2-715c-4f62-be6f-53a28ae7e883",
        "body" : "One more comment though. If it is possible to enable pocl only conditionally depending on environment I would prefer to do this first for the next version of the library as currently it does not exit gracefully if no OpenCL driver is present, confusing users as to the nature of the error message.",
        "createdAt" : "2019-12-31T07:45:49Z",
        "updatedAt" : "2019-12-31T07:45:49Z",
        "lastEditedBy" : "79aaf2f2-715c-4f62-be6f-53a28ae7e883",
        "tags" : [
        ]
      },
      {
        "id" : "6fa9ed98-63a5-4943-a85d-47a0608ba96b",
        "parentId" : "53fd30d6-5430-47cf-b415-1b6ec29d4ff0",
        "authorId" : "a87b6ea9-be22-4b16-b573-03beaaff4f74",
        "body" : "Thanks for clarifying that @tbetcke! In general, if you want to use `pocl` only for linux and osx, and not windows, then you can use:\r\n`pocl  # [unix]`\r\nin the `run` requirement.\r\nI don't see any other OpenCL packages available for windows, so maybe skipping windows all together is the best approach.",
        "createdAt" : "2019-12-31T08:09:28Z",
        "updatedAt" : "2019-12-31T08:09:29Z",
        "lastEditedBy" : "a87b6ea9-be22-4b16-b573-03beaaff4f74",
        "tags" : [
        ]
      },
      {
        "id" : "80688301-db8f-46ed-8cb2-e3db44dec658",
        "parentId" : "53fd30d6-5430-47cf-b415-1b6ec29d4ff0",
        "authorId" : "79aaf2f2-715c-4f62-be6f-53a28ae7e883",
        "body" : "Thanks for the clarification. I recently talked to an Intel Developer if they could make their OpenCL drivers available through conda (freely available, but current license prohibits distribution that is not part of a larger package). He told me that he asked their legal team to look into this.",
        "createdAt" : "2019-12-31T08:13:05Z",
        "updatedAt" : "2019-12-31T08:13:06Z",
        "lastEditedBy" : "79aaf2f2-715c-4f62-be6f-53a28ae7e883",
        "tags" : [
        ]
      },
      {
        "id" : "2c205f2e-20cc-445e-a164-f9df1b16ae15",
        "parentId" : "53fd30d6-5430-47cf-b415-1b6ec29d4ff0",
        "authorId" : "a87b6ea9-be22-4b16-b573-03beaaff4f74",
        "body" : "That would be great, to create conda packages if the license allows distribution. In the meantime, skipping windows is ok.",
        "createdAt" : "2019-12-31T08:22:49Z",
        "updatedAt" : "2019-12-31T08:22:49Z",
        "lastEditedBy" : "a87b6ea9-be22-4b16-b573-03beaaff4f74",
        "tags" : [
        ]
      }
    ],
    "commit" : "8af1a8194f5325259285f81c924393b2a0463b3b",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@  number: 0\n  skip: True  # [py!=37]\n  skip: True  # [win]\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n"
  }
]