[
  {
    "id" : "d434c933-3d9e-4645-af79-5e6a1513ef1a",
    "prId" : 3484,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/3484#pullrequestreview-55558014",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "889320fd-f690-4404-826b-a43eede2e2de",
        "parentId" : null,
        "authorId" : "085a9c6b-569e-49bd-9434-7f128372cf0c",
        "body" : "I'm not sure if having the `build` versions of `numpy` constrained like this without similar constraints on the `run` section is going to cause issues. You could end up in a situation where on non-windows and py36 systems, you build with 1.9 but then run with 1.12. \r\n\r\nTypically we'd use `numpy x.x` here, but I'm not familiar with the specific constraints of this package. ",
        "createdAt" : "2017-08-10T13:34:21Z",
        "updatedAt" : "2017-08-10T14:24:49Z",
        "lastEditedBy" : "085a9c6b-569e-49bd-9434-7f128372cf0c",
        "tags" : [
        ]
      },
      {
        "id" : "97dd4f32-35d7-4415-89b0-12ab7f1cde8b",
        "parentId" : "889320fd-f690-4404-826b-a43eede2e2de",
        "authorId" : "d6bf582a-b7d2-4905-a3b2-ab43a833b58f",
        "body" : "Building against an older numpy version was an experiment that @ocefpaf suggested [here](https://github.com/conda-forge/staged-recipes/pull/3347#discussion_r130376498). \r\n\r\nBut in any event, you are right that run should match build as far as minimum numpy version goes.",
        "createdAt" : "2017-08-10T14:27:37Z",
        "updatedAt" : "2017-08-10T14:27:37Z",
        "lastEditedBy" : "d6bf582a-b7d2-4905-a3b2-ab43a833b58f",
        "tags" : [
        ]
      },
      {
        "id" : "e1d0da3e-60de-461a-8de4-37b7ebdcb671",
        "parentId" : "889320fd-f690-4404-826b-a43eede2e2de",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : ">  You could end up in a situation where on non-windows and py36 systems, you build with 1.9 but then run with 1.12.\r\n\r\n@synapticarbors that is fine and it is the goal here. `numpy` is backwards compatible and, as long as we build with an old enough `numpy`, we can run with any older version that does not break the ABI.\r\n\r\nThis is the same approach used to build wheels BTW.\r\n\r\n(But note that we cannot do the other way around. Build with 1.12 and run with 1.9 for example.)",
        "createdAt" : "2017-08-10T14:35:45Z",
        "updatedAt" : "2017-08-10T14:36:31Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "1044c99e-8bfd-4db3-970c-865a3026601f",
        "parentId" : "889320fd-f690-4404-826b-a43eede2e2de",
        "authorId" : "085a9c6b-569e-49bd-9434-7f128372cf0c",
        "body" : "Then what is the point of `numpy x.x` to build a different version of the package for each numpy version in the build matrix? Why not just build everything with an old version of numpy?",
        "createdAt" : "2017-08-10T14:38:53Z",
        "updatedAt" : "2017-08-10T14:38:53Z",
        "lastEditedBy" : "085a9c6b-569e-49bd-9434-7f128372cf0c",
        "tags" : [
        ]
      },
      {
        "id" : "49c8d1a9-1dac-4816-bdf2-4a02ea506311",
        "parentId" : "889320fd-f690-4404-826b-a43eede2e2de",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "Like @mwcraig said above that is something new we are experiment that will eventually replace `numpy x.x`.",
        "createdAt" : "2017-08-10T14:41:46Z",
        "updatedAt" : "2017-08-10T14:41:46Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "377c5029-1ed1-4bbc-b880-2e5f100d3862",
        "parentId" : "889320fd-f690-4404-826b-a43eede2e2de",
        "authorId" : "d6bf582a-b7d2-4905-a3b2-ab43a833b58f",
        "body" : "Once I get all of the astropy recipes building on conda-forge the plan is to use the astropy channel repo to run the test suites of these packages to make sure the astropy channel is consistent with defaults and with conda-forge. If we include a couple of numpy versions we should be able to catch any errors.\r\n\r\nThat is likely a month away, but who knows...it could happen sooner!",
        "createdAt" : "2017-08-10T14:44:26Z",
        "updatedAt" : "2017-08-10T14:44:26Z",
        "lastEditedBy" : "d6bf582a-b7d2-4905-a3b2-ab43a833b58f",
        "tags" : [
        ]
      }
    ],
    "commit" : "bee2414a2bae7fe4617f4d3c42653f8ee04b39aa",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +21,25 @@    - python\n    - setuptools\n    - numpy 1.9.*  # [not (win and py36)]\n    - numpy 1.11.*  # [win and py36]\n    - toolchain"
  }
]