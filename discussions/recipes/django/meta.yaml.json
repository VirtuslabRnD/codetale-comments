[
  {
    "id" : "bb9c36e9-00ed-4d1a-bca7-afb064a038d4",
    "prId" : 96,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51e0b96c-6067-4126-ba68-0bc581b04c8c",
        "parentId" : null,
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "@kwilcox any reason special reason to comment these out?\n",
        "createdAt" : "2016-03-11T20:23:41Z",
        "updatedAt" : "2016-03-24T16:10:50Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "c22d21a2-bc28-4e35-9d3f-bc377546e954",
        "parentId" : "51e0b96c-6067-4126-ba68-0bc581b04c8c",
        "authorId" : "095d970c-0398-478f-8123-81c6744bddcd",
        "body" : "Importing these packages won't work outside of a Django context (app settings are defined).\n\n```\n>>> import django.core.cache\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/kwilcox/miniconda3/envs/platforms/lib/python3.4/site-packages/django/core/cache/__init__.py\", line 34, in <module>\n    if DEFAULT_CACHE_ALIAS not in settings.CACHES:\n  File \"/home/kwilcox/miniconda3/envs/platforms/lib/python3.4/site-packages/django/conf/__init__.py\", line 48, in __getattr__\n    self._setup(name)\n  File \"/home/kwilcox/miniconda3/envs/platforms/lib/python3.4/site-packages/django/conf/__init__.py\", line 42, in _setup\n    % (desc, ENVIRONMENT_VARIABLE))\ndjango.core.exceptions.ImproperlyConfigured: Requested setting CACHES, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.\n```\n",
        "createdAt" : "2016-03-11T20:26:58Z",
        "updatedAt" : "2016-03-24T16:10:50Z",
        "lastEditedBy" : "095d970c-0398-478f-8123-81c6744bddcd",
        "tags" : [
        ]
      },
      {
        "id" : "732ab0af-ec21-465b-ab2b-de950172e1ce",
        "parentId" : "51e0b96c-6067-4126-ba68-0bc581b04c8c",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "I guess it is the same issue with the other test below.\n",
        "createdAt" : "2016-03-11T20:28:36Z",
        "updatedAt" : "2016-03-24T16:10:50Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ceff1fcb41a19bb775bb4c5c000be9fa3478681",
    "line" : 184,
    "diffHunk" : "@@ -1,1 +182,186 @@        - django.core\n        #- django.core.cache\n        #- django.core.cache.backends\n        - django.core.checks\n        - django.core.checks.compatibility"
  },
  {
    "id" : "b7d2757d-3ff4-4b3f-bacc-8c304b808d01",
    "prId" : 96,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6ab6daa-a455-4cb2-8bd2-ec812bfeaadd",
        "parentId" : null,
        "authorId" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "body" : "We should comment on the reasons for these.\n",
        "createdAt" : "2016-03-22T17:25:48Z",
        "updatedAt" : "2016-03-24T16:10:50Z",
        "lastEditedBy" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "tags" : [
        ]
      },
      {
        "id" : "89c0105e-afff-42db-9ebc-af6e2a3e2267",
        "parentId" : "c6ab6daa-a455-4cb2-8bd2-ec812bfeaadd",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "Indeed that kind of patch we have in `shapely`, `rtree`, and a few others that use `ctypes`. IMO we should always patch conda packages to find the proper conda packaged c-lib that the package is looking for.\n",
        "createdAt" : "2016-03-24T11:13:18Z",
        "updatedAt" : "2016-03-24T16:10:50Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "f9f83de0-e177-46bc-9788-1119cb76246f",
        "parentId" : "c6ab6daa-a455-4cb2-8bd2-ec812bfeaadd",
        "authorId" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "body" : "Why can't the code find it in conda? Is there something conda could do so that these packages do find things appropriately?\n\nI don't like patching so many things for the same reason. If conda can be fixed, that seems better to me.\n",
        "createdAt" : "2016-03-24T12:56:00Z",
        "updatedAt" : "2016-03-24T16:10:50Z",
        "lastEditedBy" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "tags" : [
        ]
      },
      {
        "id" : "766d16e5-788f-4921-bd2b-cdc18c807c8e",
        "parentId" : "c6ab6daa-a455-4cb2-8bd2-ec812bfeaadd",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "I am not sure if this can be fixed on the conda side (maybe I am not smart enough to find a clear solution for this). If we don't patch it, and users have a system and a conda gdal installed, things start to break. I think the best approach to ship a stable package is to \"tie\" each wrapper to the c-lib we tested (and shipped) with conda.\n\n(BTW patches like this are common in the Linux world because different distros sometimes move files to unexpected places. I lost count of how many patches like this I wrote for Fedora and OpenSUSE.)\n",
        "createdAt" : "2016-03-24T13:03:51Z",
        "updatedAt" : "2016-03-24T16:10:50Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ceff1fcb41a19bb775bb4c5c000be9fa3478681",
    "line" : null,
    "diffHunk" : "@@ -1,1 +11,15 @@    patches:\n        # Hard-code gdal and geos' paths to the corresponding conda packages.\n        - libgdal.patch\n        - libgeos.patch\n"
  }
]