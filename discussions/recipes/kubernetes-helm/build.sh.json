[
  {
    "id" : "d41988ec-495e-4283-aec1-e89d733e849f",
    "prId" : 5474,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/5474#pullrequestreview-108252411",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfc68c3c-5ad1-4e43-bd1b-268e05c0b649",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Can you please remind me why `rudder` and `tiller` don't exist for macOS?",
        "createdAt" : "2018-03-29T02:29:31Z",
        "updatedAt" : "2018-03-29T02:29:31Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "7c09e9b3-2ba6-46b2-923b-051ef5995fba",
        "parentId" : "cfc68c3c-5ad1-4e43-bd1b-268e05c0b649",
        "authorId" : "f1f932c6-0dea-4f1c-815a-adb7bc17b4db",
        "body" : "`rudder` and `tiller` are not available in the upstream packaged binaries. They are usually used inside a kubernetes pod. ",
        "createdAt" : "2018-03-29T23:25:39Z",
        "updatedAt" : "2018-03-29T23:25:40Z",
        "lastEditedBy" : "f1f932c6-0dea-4f1c-815a-adb7bc17b4db",
        "tags" : [
        ]
      },
      {
        "id" : "f42cd12c-f7d0-42b3-a485-a2e03a723972",
        "parentId" : "cfc68c3c-5ad1-4e43-bd1b-268e05c0b649",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "I see. Does it make sense to have them as binaries on Linux then or is the intention that the conda package might be installed within the pod in some cases?",
        "createdAt" : "2018-03-30T02:30:19Z",
        "updatedAt" : "2018-03-30T02:30:19Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "8979bf6d63fd27cc3a07d65cf4fcaba5de74b511",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +35,39 @@    \"Linux\")\n        build_unix\n        cp bin/{helm,rudder,tiller} $PREFIX/bin\n        ;;\n    \"Darwin\")"
  },
  {
    "id" : "0886d883-53a8-440c-98fb-3a91b627cba5",
    "prId" : 5474,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/5474#pullrequestreview-108251979",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7296390-7ce2-4b2c-801e-bae52bde428b",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Actual question. Why do we want this to be read only?",
        "createdAt" : "2018-03-29T02:32:55Z",
        "updatedAt" : "2018-03-29T02:32:55Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "767d0838-ca13-40af-aff1-f1418c8c350b",
        "parentId" : "b7296390-7ce2-4b2c-801e-bae52bde428b",
        "authorId" : "f1f932c6-0dea-4f1c-815a-adb7bc17b4db",
        "body" : "This is related to conda-forge/go-feedstock#14. The kubernetes build scripts where compiling the GO stdlib on the fly, the results ended up in $GOROOT, i.e. $PREFIX/go. Conda-build did not know any better and was packaging those results in the kubernetes package as well.\r\n\r\nSetting the goroot directory to read-only prevents the kubernetes build scripts from doing that.",
        "createdAt" : "2018-03-29T23:29:45Z",
        "updatedAt" : "2018-03-29T23:29:45Z",
        "lastEditedBy" : "f1f932c6-0dea-4f1c-815a-adb7bc17b4db",
        "tags" : [
        ]
      },
      {
        "id" : "5dc6e563-1924-496e-898b-74ad4208bb64",
        "parentId" : "b7296390-7ce2-4b2c-801e-bae52bde428b",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Ah ok. Makes sense.\r\n\r\nWonder if we should add this to `go` proper perhaps as part of the activation scripts? We can also set it up so that it is only enabled when `conda-build` is running.",
        "createdAt" : "2018-03-30T02:25:21Z",
        "updatedAt" : "2018-03-30T02:25:21Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "8979bf6d63fd27cc3a07d65cf4fcaba5de74b511",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3,7 @@make_goroot_read_only()\n{\n    find $GOROOT -type d -exec chmod 555 {} \\;\n}\n"
  },
  {
    "id" : "d66b99c2-927f-424f-83d7-410370e37141",
    "prId" : 5474,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/5474#pullrequestreview-108253340",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e17472a4-7fbd-400f-b1c3-b9ee84ca6564",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Could you please explain this a bit for me? Looks like we are moving everything into a source directory for building, but am not following all the exclusions or the reason for the location. It may just be that you are way more knowledgeable about best practices in go. Sorry if this is an obvious thing.",
        "createdAt" : "2018-03-29T02:35:46Z",
        "updatedAt" : "2018-03-29T02:35:46Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "e1b77f31-edb1-446f-b18a-8269d115513f",
        "parentId" : "e17472a4-7fbd-400f-b1c3-b9ee84ca6564",
        "authorId" : "f1f932c6-0dea-4f1c-815a-adb7bc17b4db",
        "body" : "GO usually wants all the source code to be in under  $GOPATH/src/<fully-qualified-path>, where fully-qualified-path changes from package to package, e.g. for kubernetes-helm it is k8s.io/helm, for terraform it is github.com/hashicorp/terraform, etc. \r\n\r\nDuring build, it is common for the build scripts to download build-time dependencies to $GOPATH/src, compile and place them under $GOPATH/bin. This is why we don't want $GOPATH to coincide with $PREFIX, o.w. we may end up packaging build dependencies with the final package. \r\n\r\nSo... the hack/workaround/solution is to create a GOPATH folder outside of PREFIX and move all the code into its fully-qualified-path. I happen to choose \"./go\" as the GOPATH folder. Then, the find exclusions make sure that the GOPATH does not move inside itself and that the LICENSE file stays at its default location so meta.yaml looks like the canonical one without the fully-qualified-path.",
        "createdAt" : "2018-03-29T23:46:10Z",
        "updatedAt" : "2018-03-29T23:46:10Z",
        "lastEditedBy" : "f1f932c6-0dea-4f1c-815a-adb7bc17b4db",
        "tags" : [
        ]
      },
      {
        "id" : "1b0c8da6-7fd8-4b4c-a701-77b44ff4f119",
        "parentId" : "e17472a4-7fbd-400f-b1c3-b9ee84ca6564",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Makes sense. Maybe the `GOPATH` hack can be added to `go` as part of the activation script and only run during a `conda-build` run.",
        "createdAt" : "2018-03-30T02:27:00Z",
        "updatedAt" : "2018-03-30T02:27:00Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "4cce29a2-c10c-42e8-87ed-1d7081b6340a",
        "parentId" : "e17472a4-7fbd-400f-b1c3-b9ee84ca6564",
        "authorId" : "f1f932c6-0dea-4f1c-815a-adb7bc17b4db",
        "body" : "I think this might make more sense in the toolchain package, what do you think? ",
        "createdAt" : "2018-03-30T02:29:24Z",
        "updatedAt" : "2018-03-30T02:29:24Z",
        "lastEditedBy" : "f1f932c6-0dea-4f1c-815a-adb7bc17b4db",
        "tags" : [
        ]
      },
      {
        "id" : "b64265d4-51e1-4700-90cd-356144935a07",
        "parentId" : "e17472a4-7fbd-400f-b1c3-b9ee84ca6564",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "So we will be moving away from the `toolchain` package when we switch to the new Anaconda compilers.\r\n\r\nFWIW [we do a similar thing with `setuptools`]( https://github.com/conda-forge/setuptools-feedstock/blob/2ba01738abf79f1f37a2c72480aa65f9f2d064f0/recipe/nodownload.patch ). Hence the suggestion to add it to `go`.",
        "createdAt" : "2018-03-30T02:41:25Z",
        "updatedAt" : "2018-03-30T02:41:25Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "8979bf6d63fd27cc3a07d65cf4fcaba5de74b511",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +19,23 @@       -not -name 'LICENSE' \\\n       -exec mv {} $GOSRC_DIR/ \\;\n   cd $GOSRC_DIR\n}\n"
  }
]