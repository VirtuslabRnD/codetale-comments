[
  {
    "id" : "138c2377-c62e-4a22-94d4-a2a69f5cf37c",
    "prId" : 9931,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/9931#pullrequestreview-304986575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95450e74-f258-4b29-86a4-34821a982bb0",
        "parentId" : null,
        "authorId" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "body" : "```suggestion\r\n  skip: true  # [win or py2k]\r\n```",
        "createdAt" : "2019-10-21T15:16:52Z",
        "updatedAt" : "2019-10-21T15:16:52Z",
        "lastEditedBy" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "tags" : [
        ]
      },
      {
        "id" : "5b4d8279-46d6-4726-bda5-3481c7d1af86",
        "parentId" : "95450e74-f258-4b29-86a4-34821a982bb0",
        "authorId" : "95383998-4cee-419b-8e0e-30292709e0a6",
        "body" : "@marcelotrevisani, I think you mean to suggest `[win or py3k]`, since this code is python2.7 only (for this release), however I don't see why the `pyXk` syntax is better than `py>XY`, since this code also won't work on `py4k` (in principle) so `py>30` is a more complete definition of requirements8.\r\n\r\n*<sub>I suppose we should really just use `[win or py!=27]`, since we haven't tested on py<27...</sub>",
        "createdAt" : "2019-10-21T15:38:44Z",
        "updatedAt" : "2019-10-21T15:38:45Z",
        "lastEditedBy" : "95383998-4cee-419b-8e0e-30292709e0a6",
        "tags" : [
        ]
      },
      {
        "id" : "5881f262-9d3d-48f9-b80e-c053b8ba8297",
        "parentId" : "95450e74-f258-4b29-86a4-34821a982bb0",
        "authorId" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "body" : "Yes, exactly that! sorry for my mistake",
        "createdAt" : "2019-10-22T06:42:45Z",
        "updatedAt" : "2019-10-22T06:43:10Z",
        "lastEditedBy" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "tags" : [
        ]
      }
    ],
    "commit" : "1865fe9e9b0e5262d58340f43d1893ab4d8220d6",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@build:\n  number: 0\n  skip: true  # [win or py>30]\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n"
  },
  {
    "id" : "69247e95-1938-4837-811a-32d71271e7ed",
    "prId" : 9931,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/9931#pullrequestreview-305249233",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15bac51c-450e-46e5-8b4d-391646317487",
        "parentId" : null,
        "authorId" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "body" : "Should you add an activation script that will set does env variables for you when someone installs this package?\r\nOr is it just for testing?",
        "createdAt" : "2019-10-22T06:44:25Z",
        "updatedAt" : "2019-10-22T06:44:26Z",
        "lastEditedBy" : "0f29bd0f-303b-45ad-ad89-d387d332dd9c",
        "tags" : [
        ]
      },
      {
        "id" : "2c33611b-3c49-4a39-81ba-418d6b20fabc",
        "parentId" : "15bac51c-450e-46e5-8b4d-391646317487",
        "authorId" : "fdc0045b-54b7-4f8b-aeff-d328c52ee14f",
        "body" : "These arguments allow interfacing with usually (highly!) optional additional software to enable special features; these arguments just allow for testing the default code to complete without error.",
        "createdAt" : "2019-10-22T14:24:48Z",
        "updatedAt" : "2019-10-22T14:24:49Z",
        "lastEditedBy" : "fdc0045b-54b7-4f8b-aeff-d328c52ee14f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1865fe9e9b0e5262d58340f43d1893ab4d8220d6",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +53,57 @@    - export LALSIMULATION_DATADIR=\"${PREFIX}/share/lalsimulation\"\n    - export MATLAB_BASE=\"\"\n    - export MPLBACKEND=\"agg\"\n    # test scripts\n    - convergence_test_samples.py --help"
  }
]