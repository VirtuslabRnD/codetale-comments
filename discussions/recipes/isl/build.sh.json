[
  {
    "id" : "2620cc6f-1f60-42c2-aceb-b67f8a34c435",
    "prId" : 303,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "711b9fca-5ffd-4726-86ab-151a68ef0463",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "`make check` or similar?\n",
        "createdAt" : "2016-04-10T21:14:49Z",
        "updatedAt" : "2016-04-14T07:44:35Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "b3531feb-dc89-4359-b8e1-8970b76c018e",
        "parentId" : "711b9fca-5ffd-4726-86ab-151a68ef0463",
        "authorId" : "a1032c0d-d3fa-438b-9551-82102db8862a",
        "body" : "I have added `make check`. Thanks!\n",
        "createdAt" : "2016-04-11T00:31:27Z",
        "updatedAt" : "2016-04-14T07:44:35Z",
        "lastEditedBy" : "a1032c0d-d3fa-438b-9551-82102db8862a",
        "tags" : [
        ]
      },
      {
        "id" : "4443a49c-c2d1-4ddc-9878-18d17b67f848",
        "parentId" : "711b9fca-5ffd-4726-86ab-151a68ef0463",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Excellent. Thanks.\n",
        "createdAt" : "2016-04-11T00:35:30Z",
        "updatedAt" : "2016-04-14T07:44:35Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "d052d65d94818646cff2c41c7b2d45ec2cdc48f1",
    "line" : null,
    "diffHunk" : "@@ -1,1 +8,12 @@make check\n\nmake install-strip"
  },
  {
    "id" : "28b177ba-b275-4509-b141-23d8adc75c84",
    "prId" : 303,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "453bd8c4-6f8f-4552-b0c7-7abb35c65cc4",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "So, I would add an `if` statement before the configure to check the platform and set `CC` and `CXX`. It might look something like [this](https://github.com/conda-forge/vigra-feedstock/blob/master/recipe/build.sh), but not necessarily exactly.\n",
        "createdAt" : "2016-04-11T02:31:39Z",
        "updatedAt" : "2016-04-14T07:44:35Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "a520758b-1895-46cb-979a-53f8b5245f34",
        "parentId" : "453bd8c4-6f8f-4552-b0c7-7abb35c65cc4",
        "authorId" : "a1032c0d-d3fa-438b-9551-82102db8862a",
        "body" : "Hmm, I still have no idea to what values should I set `CC` and `CXX`... Isn't clang is set by default on OS X?\n",
        "createdAt" : "2016-04-11T02:45:44Z",
        "updatedAt" : "2016-04-14T07:44:35Z",
        "lastEditedBy" : "a1032c0d-d3fa-438b-9551-82102db8862a",
        "tags" : [
        ]
      },
      {
        "id" : "c2e6052e-6495-416a-a560-42c421bb1f30",
        "parentId" : "453bd8c4-6f8f-4552-b0c7-7abb35c65cc4",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Sometimes things will pick up `gcc`. This is a frontend to `clang` (use to be a proper compiler on Mac), but forces the ancient (and basically unsupported) 4.2.1 version of GCC and its libraries to be used. Explicitly setting `CC` and `CXX` will avoid that.\n",
        "createdAt" : "2016-04-11T02:50:32Z",
        "updatedAt" : "2016-04-14T07:44:35Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "84a6a8ef-4178-4254-abd0-0a3a8bc7c7ad",
        "parentId" : "453bd8c4-6f8f-4552-b0c7-7abb35c65cc4",
        "authorId" : "a1032c0d-d3fa-438b-9551-82102db8862a",
        "body" : "I'm not very familiar with compilation issue on OS X. I'm also not familiar with your build environment on OS X. However, changing `CC` and `CXX` inside of the recipe sounds to me just like a workaround and \"custom compiler\" (so we are back to https://github.com/conda-forge/conda-forge.github.io/issues/81).\n\nI'm sorry, but I have no more time this week to deal with this issue on OS X. Please, go ahead and fix it.\n",
        "createdAt" : "2016-04-11T03:29:59Z",
        "updatedAt" : "2016-04-14T07:44:35Z",
        "lastEditedBy" : "a1032c0d-d3fa-438b-9551-82102db8862a",
        "tags" : [
        ]
      },
      {
        "id" : "dec76c6b-f258-4348-b25c-95e406e3ac2b",
        "parentId" : "453bd8c4-6f8f-4552-b0c7-7abb35c65cc4",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "No, that's not the case.\n\nWe are specifying which system compiler to use. The situation with Mac is a little weird as they deprecated `gcc` some time ago. They have since moved everything over to `clang`. However, `gcc` has been left for backwards compatibility. That being said, it is actually a frontend to Clang/LLVM. So, compilation starts with `gcc`, but then proceeds through the LLVM framework. We still get linked to the standard GCC libraries.\n\nHowever, this means by using `gcc`, we get pinned to a super old Mac OS 10.6, which is not even supported by Continuum AFAICT. Further this restricts us from getting nice features from `clang` in 10.7 like C++11 support. As much of our stack relies on C++11 support or at least C++0x support, we need to use `clang` on Mac to make sure we don't run into weird compatibility issues.\n\nThat being said, many programs try to pick up `gcc` first, which is what is happening here. All we are trying to do is to tell the configure script not to do that and use the supported system compiler (`clang`) instead of the unsupported one.\n",
        "createdAt" : "2016-04-12T23:07:28Z",
        "updatedAt" : "2016-04-14T07:44:35Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "bf378828-9015-4d61-ae00-549de4d276d1",
        "parentId" : "453bd8c4-6f8f-4552-b0c7-7abb35c65cc4",
        "authorId" : "a1032c0d-d3fa-438b-9551-82102db8862a",
        "body" : "I have set `CXXFLAGS` and `LINKFLAGS` as it was done in vigra feedstock: https://travis-ci.org/conda-forge/staged-recipes/jobs/122739248\n\nI have also tried to set `CC` to `clang` and `CXX` to `clang++`: https://travis-ci.org/conda-forge/staged-recipes/jobs/122745881\n\nBoth attempts failed on OS X. BTW, have you noticed that the issue is on `make check` step _after_ the library itself is built successfully?\n",
        "createdAt" : "2016-04-13T11:02:55Z",
        "updatedAt" : "2016-04-14T07:44:35Z",
        "lastEditedBy" : "a1032c0d-d3fa-438b-9551-82102db8862a",
        "tags" : [
        ]
      },
      {
        "id" : "946763f0-c3c3-497c-aa38-91e63ccc5dc6",
        "parentId" : "453bd8c4-6f8f-4552-b0c7-7abb35c65cc4",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "> Both attempts failed on OS X. BTW, have you noticed that the issue is on make check step after the library itself is built successfully?\n\nThanks @frol. Sorry, I hadn't had a chance to look closer.\n\nThis should be an easy fix. The problem is related to how dynamic libraries are loaded. Will update the diff with some comments that should get this moving again. :smile:\n",
        "createdAt" : "2016-04-14T06:46:25Z",
        "updatedAt" : "2016-04-14T07:44:35Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "33635fc2-c75f-4d95-a1ae-825d539836a5",
        "parentId" : "453bd8c4-6f8f-4552-b0c7-7abb35c65cc4",
        "authorId" : "a1032c0d-d3fa-438b-9551-82102db8862a",
        "body" : "@jakirkham (facepalm) WHY didn't I think of `DYLD_FALLBACK_LIBRARY_PATH` earlier... That is so obvious! All green now!\n",
        "createdAt" : "2016-04-14T07:52:08Z",
        "updatedAt" : "2016-04-14T07:52:08Z",
        "lastEditedBy" : "a1032c0d-d3fa-438b-9551-82102db8862a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d052d65d94818646cff2c41c7b2d45ec2cdc48f1",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@./configure --prefix=\"$PREFIX\" --with-gmp-prefix=\"$PREFIX\"\nmake\n"
  },
  {
    "id" : "64c5e376-279f-4ad1-b374-37b32a7b20fb",
    "prId" : 303,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5f620fe-4492-413a-ac54-0a4c29de47f4",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Change this to match this [line](https://github.com/conda-forge/vigra-feedstock/blob/master/recipe/build.sh#L78) uncommented.\n",
        "createdAt" : "2016-04-14T06:48:47Z",
        "updatedAt" : "2016-04-14T07:44:35Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "d052d65d94818646cff2c41c7b2d45ec2cdc48f1",
    "line" : null,
    "diffHunk" : "@@ -1,1 +6,10 @@    export DYLD_FALLBACK_LIBRARY_PATH=\"$PREFIX/lib\"\nfi\nmake check\n\nmake install-strip"
  },
  {
    "id" : "6a134a25-d5e9-4a57-84e5-a8f4ac3e00c0",
    "prId" : 303,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0db91629-b710-489e-9985-50f9908fa016",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "I suppose we should unset `DYLD_FALLBACK_LIBRARY_PATH` after testing, but I can't see it hurting the install step.\n",
        "createdAt" : "2016-04-20T07:44:42Z",
        "updatedAt" : "2016-04-20T07:44:42Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "d052d65d94818646cff2c41c7b2d45ec2cdc48f1",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +7,11 @@fi\nmake check\n\nmake install-strip"
  }
]