[
  {
    "id" : "f64c1950-4627-487e-8632-6f43cf005352",
    "prId" : 130,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ecf705c-0623-44b3-876e-d080f9d96c84",
        "parentId" : null,
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "@jjhelmus do we have gfortran in the new Docker image?\n",
        "createdAt" : "2016-03-17T13:46:16Z",
        "updatedAt" : "2016-03-17T13:46:16Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "00a4c305-83a2-44fb-9eed-1dfb5f720839",
        "parentId" : "2ecf705c-0623-44b3-876e-d080f9d96c84",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Interesting, I would also be curious if we have `gfortran`. Might be worth using @jjhelmus' strategy here of adding these to the build scripts if it is still missing. ( https://github.com/conda-forge/docker-images/issues/1#issuecomment-197597726 )\n",
        "createdAt" : "2016-03-17T14:35:58Z",
        "updatedAt" : "2016-03-17T14:35:58Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "30d1ebec-d82a-4d80-8e08-56aa107cde39",
        "parentId" : "2ecf705c-0623-44b3-876e-d080f9d96c84",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "Both are temporary solution IMO. I just like to have it in the `build.sh` script to remind me to remove it as soon as we sort this out, and to avoid conflict when the conda-bot updates the feedstocks.\n",
        "createdAt" : "2016-03-17T14:39:39Z",
        "updatedAt" : "2016-03-17T14:39:39Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "a807507c-1b54-4a3c-85aa-1bef880e40e0",
        "parentId" : "2ecf705c-0623-44b3-876e-d080f9d96c84",
        "authorId" : "e8e4b885-d17a-49f9-b533-3f3e494d1808",
        "body" : "gfortran is in the new Docker image.  One thing we need to keep in mind when building package which have Fortran code is that they will have a dependency on libgfortran unless the package is configuration statically link the the gfortran runtime.  Similar to how the setup of gcc defines which version of libc (and libgcc_s) the version of the gfortran is also set by the compiler and needs to be watched.\n",
        "createdAt" : "2016-03-17T14:54:33Z",
        "updatedAt" : "2016-03-17T14:54:33Z",
        "lastEditedBy" : "e8e4b885-d17a-49f9-b533-3f3e494d1808",
        "tags" : [
        ]
      },
      {
        "id" : "a437e8ba-0a73-41b6-9e2a-9ff976e303e0",
        "parentId" : "2ecf705c-0623-44b3-876e-d080f9d96c84",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Cool, good to know.\n\nGood point on the linkage issue. I have sometimes gotten around this in the past by using `install_name_tool` or `patchelf` to [change the linkage](https://github.com/conda/conda-recipes/blob/afa9c3ca232ab60cb0bda8bbc119b838dbbba704/openblas/build.sh#L19-L24) to use libgcc from conda. It is a bit hacky, but if we are using the same version it should work. We could start packaging a matching copy of gcc to solve this exact problem. Another viable solution might be to just copy the relevant compiler libraries into conda and tweak their paths using the same strategy. This could be done as part of this package or we could create a new package for this purpose only. The simplest solution may be to just statically link against the compiler libraries.\n",
        "createdAt" : "2016-03-17T15:00:40Z",
        "updatedAt" : "2016-03-17T15:00:40Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "49ef9b658c7a346d8b68d2133488e5c497c62e3e",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2,6 @@\nif [[ $(uname) == Linux ]]; then\nyum install -y gcc-gfortran\nfi\n"
  },
  {
    "id" : "99694922-6114-4543-82e9-eaa984a6bd37",
    "prId" : 130,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7137730d-b330-4f8a-b862-6326daf197b5",
        "parentId" : null,
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "I only did that so `conda inspect` could find the shared lib and report it back to me when building it locally.  I am not sure if we need those links.\n\nAnyway, putting those files in `lib/libO/Linux.gfortran.64.mpiuni.default` sounds more like a left-over debug thing than a real place for those files :stuck_out_tongue_closed_eyes: \n",
        "createdAt" : "2016-03-17T13:50:49Z",
        "updatedAt" : "2016-03-17T13:50:49Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      }
    ],
    "commit" : "49ef9b658c7a346d8b68d2133488e5c497c62e3e",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@else\nln -s ${PREFIX}/lib/libO/*.default/*.so ${PREFIX}/lib\nfi"
  }
]