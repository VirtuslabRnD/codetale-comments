[
  {
    "id" : "862a16bd-e3e7-4b58-ac46-d7b29244e8c2",
    "prId" : 164,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44efa683-7789-48f5-9fe1-6f41f0ec825b",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Could we download the file from the releases page? Also, some kind of checksum would be nice here.\n",
        "createdAt" : "2016-03-22T19:04:35Z",
        "updatedAt" : "2016-03-22T20:08:18Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "0cfb2677-5af0-4db8-9432-04b8d49458f7",
        "parentId" : "44efa683-7789-48f5-9fe1-6f41f0ec825b",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "Not sure if that is necessary when using git. Git is pretty robust to ensure that we have the \"correct\" clone. (We must add checksum if using files though.)\n",
        "createdAt" : "2016-03-22T19:20:26Z",
        "updatedAt" : "2016-03-22T20:08:18Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "2143ab8b-f4db-46cd-9118-c718ccf1310f",
        "parentId" : "44efa683-7789-48f5-9fe1-6f41f0ec825b",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Sure, I guess my thought is some git repos can become very huge and then this download step will take time (and some space) versus simply downloading a tarball of a release. After looking more closely, this repo does not seem to be one of those case. So, I leave it up to you.\n",
        "createdAt" : "2016-03-22T19:31:40Z",
        "updatedAt" : "2016-03-22T20:08:18Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "8d6580e9-7f2e-4644-95cb-ab20cbaecdd9",
        "parentId" : "44efa683-7789-48f5-9fe1-6f41f0ec825b",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "> some git repos can become very huge\n\nYou have a point there. Not sure how conda clones the repository (what is the depth of the clone?). I don't like to use GitHub tagged files though. Users can delete them and re-add a new one with the same tag but fixing a problem, and then you have a checksum issue on your hands. PyPI solved that by forcing people to bump the version because PyPI does not accept the same file name/version for the same release even if you delete it.\n\n(It would be nice to have `pygridtools` source listed at PyPI and then I would use the file instead. @phobson interested?)\n",
        "createdAt" : "2016-03-22T19:50:20Z",
        "updatedAt" : "2016-03-22T20:08:18Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "a4a164aa-6bc5-4ac8-a0dd-ae0106287865",
        "parentId" : "44efa683-7789-48f5-9fe1-6f41f0ec825b",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "> Not sure how conda clones the repository (what is the depth of the clone?).\n\nDefault is to clone the whole history. There was an option to do shallow clones that was proposed. Should be in `conda build` 1.19.0 and later. Just set `git_depth` to the number of commits you would want.\n\n> Users can delete them and re-add a new one with the same tag but fixing a problem, and then you have a checksum issue on your hands.\n\nUser could delete tags too. Generally, I feel these are bad practices, but you're right. We can always by bitten by them if someone does them anyways.\n\n> PyPI solved that by forcing people to bump the version because PyPI does not accept the same file name/version for the same release even if you delete it.\n\nThough that can get a bit extreme. Like if the upload got corrupted or PyPI had issues. I remember that happening to NumPy before.\n\n<br>\nIn any event, given this is a relatively small repo. I am ok with it as is. If you want to try a shallow clone, feel free. If you guys work out something so it is on PyPI, I am good with that, as well. I leave it up to you.\n",
        "createdAt" : "2016-03-22T20:03:38Z",
        "updatedAt" : "2016-03-22T20:08:18Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "2dc7818a-5e30-4f04-bfb6-5e78940ad14c",
        "parentId" : "44efa683-7789-48f5-9fe1-6f41f0ec825b",
        "authorId" : "4d892353-6fa1-4ec1-9a41-661235430eb3",
        "body" : "@ocefpaf I can upload to pip. but it'll probably be ~a week before i get to it.\n",
        "createdAt" : "2016-03-22T20:04:51Z",
        "updatedAt" : "2016-03-22T20:08:18Z",
        "lastEditedBy" : "4d892353-6fa1-4ec1-9a41-661235430eb3",
        "tags" : [
        ]
      },
      {
        "id" : "4cf04519-aad6-408c-9292-12beee47e04b",
        "parentId" : "44efa683-7789-48f5-9fe1-6f41f0ec825b",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "No rush and don't do that on this recipe account! Only if you think it is worth it.\n",
        "createdAt" : "2016-03-22T20:06:49Z",
        "updatedAt" : "2016-03-22T20:08:18Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "76dc1356-66e5-40bb-806f-a1a1e185e460",
        "parentId" : "44efa683-7789-48f5-9fe1-6f41f0ec825b",
        "authorId" : "4d892353-6fa1-4ec1-9a41-661235430eb3",
        "body" : "I'll need to mull that over a bit. Uploading to pip always feels like a hassle to me. But that's mostly b/c i don't do it enough.\n",
        "createdAt" : "2016-03-22T20:10:52Z",
        "updatedAt" : "2016-03-22T20:10:52Z",
        "lastEditedBy" : "4d892353-6fa1-4ec1-9a41-661235430eb3",
        "tags" : [
        ]
      },
      {
        "id" : "b329a466-f04b-400c-90d2-eb428da60a11",
        "parentId" : "44efa683-7789-48f5-9fe1-6f41f0ec825b",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Alright, I think we are all ok with this part. Let's freeze it. Sound good?\n",
        "createdAt" : "2016-03-22T20:14:31Z",
        "updatedAt" : "2016-03-22T20:14:31Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2caec0bc91f355422dba21bff100727a6c3e752",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +5,9 @@source:\n    git_url: https://github.com/Geosyntec/pygridtools.git\n    git_tag: v0.2\n\nbuild:"
  }
]