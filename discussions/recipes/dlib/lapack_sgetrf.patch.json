[
  {
    "id" : "6110fba1-bdbb-4eae-a365-8aac5832cc72",
    "prId" : 1177,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/1177#pullrequestreview-18734",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7823e59c-a56b-483c-8349-561dc0649678",
        "parentId" : null,
        "authorId" : "a67e24bc-ed74-490a-95d0-cd6b6de195d3",
        "body" : "This just didn't seem to work? But I'm not sure if it was a quirk of our OpenBLAS build or not. The function `sgetrf_single` is in the binary, but it _is_ marked as private - so this fails. I don't think that OpenBLAS is being used a lot with dlib. Again, it would be up to @davisking if he wanted to remove this check in general.\n",
        "createdAt" : "2016-09-14T12:07:41Z",
        "updatedAt" : "2016-09-14T12:21:55Z",
        "lastEditedBy" : "a67e24bc-ed74-490a-95d0-cd6b6de195d3",
        "tags" : [
        ]
      },
      {
        "id" : "98295a48-dad5-41f1-99b1-c73f05c908ae",
        "parentId" : "7823e59c-a56b-483c-8349-561dc0649678",
        "authorId" : "8a95737e-7277-4f1f-95e2-d69526a4e639",
        "body" : "Does it actually work with that copy of openblas that is missing symbols?\nI've added checks like that specifically because some systems include\nbroken copies of various libraries which eventually cause linker errors due\nto missing symbols.  Does that openblas actually have lapack in it?\n",
        "createdAt" : "2016-09-14T14:37:58Z",
        "updatedAt" : "2016-09-14T14:37:58Z",
        "lastEditedBy" : "8a95737e-7277-4f1f-95e2-d69526a4e639",
        "tags" : [
        ]
      },
      {
        "id" : "c147eee6-1d1a-4fb8-84d6-3ebd2f33e84c",
        "parentId" : "7823e59c-a56b-483c-8349-561dc0649678",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "> Does that openblas actually have lapack in it?\n\nYep, and I use it regularly with NumPy, SciPy and a few other LAPACK dependent libraries.\n",
        "createdAt" : "2016-09-14T14:40:49Z",
        "updatedAt" : "2016-09-14T14:40:49Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "6f85a752-19a4-4459-8c5a-390817da256c",
        "parentId" : "7823e59c-a56b-483c-8349-561dc0649678",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Can't speak to whether dlib works with it or not ATM. Though we should be able to check soon.\n",
        "createdAt" : "2016-09-14T14:41:29Z",
        "updatedAt" : "2016-09-14T14:41:29Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "ebdb23cb-6b2b-42e4-902c-01a22e27cbfa",
        "parentId" : "7823e59c-a56b-483c-8349-561dc0649678",
        "authorId" : "a67e24bc-ed74-490a-95d0-cd6b6de195d3",
        "body" : "@davisking We control the OpenBLAS build so if it's broken then we can fix it/that is a bug. Are there any parts of dlib exposed via the Python API that make heavy use of BLAS/LAPACK?\n",
        "createdAt" : "2016-09-14T18:35:15Z",
        "updatedAt" : "2016-09-14T18:35:16Z",
        "lastEditedBy" : "a67e24bc-ed74-490a-95d0-cd6b6de195d3",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d2878a5b95667ba2be9d6e2cb34279f1f4793f0",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +5,9 @@          message(STATUS \"Found OpenBLAS library\")\n          set(CMAKE_REQUIRED_LIBRARIES ${blas_libraries})\n-         # If you compiled OpenBLAS with LAPACK in it then it should have the\n-         # sgetrf_single function in it.  So if we find that function in\n-         # OpenBLAS then just use OpenBLAS's LAPACK. "
  }
]