[
  {
    "id" : "aa4d1a02-7441-4a3b-a1a0-95b1422a2b3e",
    "prId" : 1177,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/1177#pullrequestreview-18517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c33c7a1-d13b-4c39-99e1-db43a6b11fb8",
        "parentId" : null,
        "authorId" : "a67e24bc-ed74-490a-95d0-cd6b6de195d3",
        "body" : "This is a choice @davisking kind made that we don't want to replicate. Other option would be to add extra flags to disable/enable this through user choice.\n",
        "createdAt" : "2016-09-14T12:09:17Z",
        "updatedAt" : "2016-09-14T12:21:55Z",
        "lastEditedBy" : "a67e24bc-ed74-490a-95d0-cd6b6de195d3",
        "tags" : [
        ]
      },
      {
        "id" : "c62f7911-5dc0-4889-8ad1-0c2e7c196544",
        "parentId" : "2c33c7a1-d13b-4c39-99e1-db43a6b11fb8",
        "authorId" : "8a95737e-7277-4f1f-95e2-d69526a4e639",
        "body" : "I get unending amounts of email from users who do not, in any sense,\nunderstand the distinction between static and dynamic linking, or even what\nlinking is at all.  If the default in dlib's files isn't to statically link\nI will get even more emails about \"dlib runtime errors\" that are because\npeople have dynamically linked to dlls that are not available when they run\npython because they have misconfigured their systems, not because of any\ndlib related problems.  So I'm not super excited to change this.\n",
        "createdAt" : "2016-09-14T14:42:09Z",
        "updatedAt" : "2016-09-14T14:42:09Z",
        "lastEditedBy" : "8a95737e-7277-4f1f-95e2-d69526a4e639",
        "tags" : [
        ]
      },
      {
        "id" : "ffad5f11-f0f4-4c3b-a51a-92b0dbd3aed6",
        "parentId" : "2c33c7a1-d13b-4c39-99e1-db43a6b11fb8",
        "authorId" : "a67e24bc-ed74-490a-95d0-cd6b6de195d3",
        "body" : "Yeah I totally understand! Hence why I just made a patch here that just ripped that out. I'm not sure you should change it to be honest given the complicated build setup required for dlib.\n",
        "createdAt" : "2016-09-14T18:34:15Z",
        "updatedAt" : "2016-09-14T18:34:15Z",
        "lastEditedBy" : "a67e24bc-ed74-490a-95d0-cd6b6de195d3",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d2878a5b95667ba2be9d6e2cb34279f1f4793f0",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +10,14 @@-# of other dll files and can be safely copied to someone elese's computer\n-# and expected to run.\n-if (MSVC)\n-    string(REGEX REPLACE \"add_python_module$\" \"\" dlib_path ${CMAKE_CURRENT_LIST_FILE})\n-    include(${dlib_path}/tell_visual_studio_to_use_static_runtime.cmake)"
  },
  {
    "id" : "0ef96712-70d9-488c-8d7c-aec5bd6adb6e",
    "prId" : 1177,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74f11bc2-c493-460f-8dc7-64930290359a",
        "parentId" : null,
        "authorId" : "a67e24bc-ed74-490a-95d0-cd6b6de195d3",
        "body" : "This is conda specific. Although the more general bug is the explicit seeking of Python 3.4 (which kills 3.5 builds). ~~Should probably be fixed upstream.~~ Fixed [upstream](https://github.com/davisking/dlib/blob/eec40e4fa69a087c1a02091a8ddb74e18d2765ac/dlib/cmake_utils/add_python_module#L63).\n",
        "createdAt" : "2016-09-14T12:09:57Z",
        "updatedAt" : "2016-09-14T12:21:55Z",
        "lastEditedBy" : "a67e24bc-ed74-490a-95d0-cd6b6de195d3",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d2878a5b95667ba2be9d6e2cb34279f1f4793f0",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@     FIND_PACKAGE(Boost 1.41.0 COMPONENTS python)\n-    FIND_PACKAGE(PythonLibs 2.6 REQUIRED)\n+    FIND_PACKAGE(PythonLibs $ENV{PY_VER} REQUIRED)\n endif()\n "
  }
]