[
  {
    "id" : "71347984-1db1-4f60-a278-660e90f51137",
    "prId" : 200,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9306f053-2209-478f-8873-9d8c76139898",
        "parentId" : null,
        "authorId" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "body" : "If you packaged this into a single CLI, you'd make me very happy:\n\n```\ntest:\n   - assert_lib_exists hdf5 hd5_cpp hdf5_hl hd5_hl_cpp\n```\n",
        "createdAt" : "2016-03-25T05:20:00Z",
        "updatedAt" : "2016-03-25T05:49:11Z",
        "lastEditedBy" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "tags" : [
        ]
      },
      {
        "id" : "73cbfc2b-fae0-4e7b-a601-0e9441c8b946",
        "parentId" : "9306f053-2209-478f-8873-9d8c76139898",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Sounds like a nice idea. Probably something nifty where we import this command from an external jinja template. At this point, just want to clear this out of `master` though.\n",
        "createdAt" : "2016-03-25T05:23:06Z",
        "updatedAt" : "2016-03-25T05:49:11Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9990c6c7f5b55c4bf7290a1b3c2e75c2781d30d",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +35,39 @@    - zlib\n\ntest:\n  commands:\n    # Verify CLI tools."
  },
  {
    "id" : "52aa5466-5e48-4c31-9d48-4bce5f9e4769",
    "prId" : 200,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e2b4387-8a68-4c69-9ee3-9e4e8d0bb974",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Added this explanation for our patch, as well.\n",
        "createdAt" : "2016-03-25T05:54:05Z",
        "updatedAt" : "2016-03-25T05:54:05Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "f9c5391c-c69d-4032-ba62-25df69ad0672",
        "parentId" : "7e2b4387-8a68-4c69-9ee3-9e4e8d0bb974",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "Nice. But we can skip it on `# [os x ]` only, no?\n",
        "createdAt" : "2016-03-25T13:18:12Z",
        "updatedAt" : "2016-03-25T13:18:12Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9990c6c7f5b55c4bf7290a1b3c2e75c2781d30d",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +17,21 @@    #\n    # https://github.com/conda-forge/staged-recipes/pull/199\n    #\n    - test_Makefile.in.patch\n"
  },
  {
    "id" : "7a428f3f-5940-4c0a-9cfe-335d4d16667a",
    "prId" : 200,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16cb84e0-088f-48f4-8a44-de3416abe913",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Now tests with `command -v` and `where` as some commands don't have `--help`.\n",
        "createdAt" : "2016-03-25T05:54:37Z",
        "updatedAt" : "2016-03-25T05:54:37Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9990c6c7f5b55c4bf7290a1b3c2e75c2781d30d",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +60,64 @@    {% for each_hdf5_cmd in hdf5_cmds %}\n    - command -v {{ each_hdf5_cmd }}        # [unix]\n    - where {{ each_hdf5_cmd }}             # [win]\n    {% endfor %}\n"
  },
  {
    "id" : "bcb47794-ffb4-4baa-b82a-db100d4edca3",
    "prId" : 199,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "667e4685-a783-452d-aa6e-8281ad6d9d1c",
        "parentId" : null,
        "authorId" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "body" : "I'd want a really good comment in here to explain the rationale. Maybe provide a link back to the original PR too.\n\nP.S. I'm happy for this to be done in the feedstock once merged.\n",
        "createdAt" : "2016-03-25T04:33:03Z",
        "updatedAt" : "2016-03-25T04:33:03Z",
        "lastEditedBy" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "tags" : [
        ]
      },
      {
        "id" : "9aa9e319-1822-4ee0-8b17-ece3ae536086",
        "parentId" : "667e4685-a783-452d-aa6e-8281ad6d9d1c",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "No problem. Are you ok with the rationale?\n",
        "createdAt" : "2016-03-25T04:50:10Z",
        "updatedAt" : "2016-03-25T04:50:10Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "47d22d8c-ada7-40db-8ea0-51d8ee70e9c1",
        "parentId" : "667e4685-a783-452d-aa6e-8281ad6d9d1c",
        "authorId" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "body" : "Yep. Slightly concerned - maybe we should have an environment variable which allows us to turn stuff on if we are `conda-forge` building stuff. Like:\n\n```\npatches:\n    - test_Makefile.in.patch  # [os.environ.get(conda-forge)]\n```\n",
        "createdAt" : "2016-03-25T04:52:56Z",
        "updatedAt" : "2016-03-25T04:52:56Z",
        "lastEditedBy" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "6929ec80738af18452133dd8665c3226f8059b17",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +10,14 @@  md5: b8ed9a36ae142317f88b0c7ef4b9c618\n  patches:\n    - test_Makefile.in.patch\n\nbuild:"
  },
  {
    "id" : "b72b093a-0b99-4679-88f8-9515c385f84b",
    "prId" : 192,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "697b6a1a-7347-4814-9005-62649e3c8d26",
        "parentId" : null,
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "I never know if these should be on `build` or `run` or both.\n",
        "createdAt" : "2016-03-23T20:07:20Z",
        "updatedAt" : "2016-03-23T23:39:59Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "552a69f2-0bf9-44f4-ba19-aebe43c7f3e9",
        "parentId" : "697b6a1a-7347-4814-9005-62649e3c8d26",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Pretty much I go to [this](https://github.com/conda/conda/wiki/VC-features) religiously.\n",
        "createdAt" : "2016-03-23T20:16:21Z",
        "updatedAt" : "2016-03-23T23:39:59Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "131d826c-5681-42f2-98cf-9619a9e3b1f4",
        "parentId" : "697b6a1a-7347-4814-9005-62649e3c8d26",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "In other words, it looks ok if it is build only.\n",
        "createdAt" : "2016-03-23T20:16:46Z",
        "updatedAt" : "2016-03-23T23:39:59Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "668e98fa-0931-4f73-bfb5-c508f000b9c7",
        "parentId" : "697b6a1a-7347-4814-9005-62649e3c8d26",
        "authorId" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "body" : "My rule of thumb is:\n- if it's a shared library that something other than Python will use, you only need python in build to activate features.  You need the features block.\n- if it is a shared library that is tied to a Python API (e.g. Boost Python), you need BOTH, and the features block.\n- If it is a library that has compiled content, but is used only from Python, you need Python in both build and runtime requirements, but you do NOT need the features block.\n",
        "createdAt" : "2016-03-23T20:39:58Z",
        "updatedAt" : "2016-03-23T23:39:59Z",
        "lastEditedBy" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "tags" : [
        ]
      },
      {
        "id" : "e57f38a7-7ea7-4650-b0eb-1488aa38fa96",
        "parentId" : "697b6a1a-7347-4814-9005-62649e3c8d26",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Thanks for the rule of thumb here. Could we have this in the wiki? Honestly copying and pasting it verbatim would be totally fine by me.\n",
        "createdAt" : "2016-03-24T03:49:09Z",
        "updatedAt" : "2016-03-24T03:49:09Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "bc92babf-9679-488a-a7dc-83bbfe1f74ed",
        "parentId" : "697b6a1a-7347-4814-9005-62649e3c8d26",
        "authorId" : "4a3ee9f8-9e7c-459e-b715-28669578f2c0",
        "body" : "Yeah, HDF5 should not be dependent on Python at all.\n",
        "createdAt" : "2016-03-24T03:52:23Z",
        "updatedAt" : "2016-03-24T03:52:23Z",
        "lastEditedBy" : "4a3ee9f8-9e7c-459e-b715-28669578f2c0",
        "tags" : [
        ]
      },
      {
        "id" : "09e9dee3-a56e-4a36-a957-c5abd1dfd4f4",
        "parentId" : "697b6a1a-7347-4814-9005-62649e3c8d26",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "It's only to enforce the VS version on Windows. This [wiki](https://github.com/conda/conda/wiki/VC-features) has helped me get it a bit. Though seeing it over and over in different cases is helping me appreciate how this works more.\n",
        "createdAt" : "2016-03-24T03:54:47Z",
        "updatedAt" : "2016-03-24T03:54:47Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "9c5bf0bd-c9c9-423e-9175-b8e6925fc3b5",
        "parentId" : "697b6a1a-7347-4814-9005-62649e3c8d26",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "It's a bit of black magic, but the Python build dependency combined with the `vc` features is just trying to enforce that we use the same VC version as the one CPython recommends to build that version of CPython with. For instance, VC9 is recommend with Python 2.7. So, we use these two together.\n\nIn practice, this seems to be too hard of a constraint especially when people want C++11 support and want to work with Python 2.7, for instance, which has a recommended compiler that is very old and lacks C++11 functionality. There are other examples.\n\nHowever, I don't think it will be a problem for us to relax this constraint going forward. Namely, using a newer VC with CPython or potentially using some other VC version. There also appears to be significant demand for this functionality in the Conda Community.\n",
        "createdAt" : "2016-03-24T04:08:06Z",
        "updatedAt" : "2016-03-24T04:08:06Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "47873e28-3419-4281-b991-c390a3281222",
        "parentId" : "697b6a1a-7347-4814-9005-62649e3c8d26",
        "authorId" : "4a3ee9f8-9e7c-459e-b715-28669578f2c0",
        "body" : "Ahh Ok.\n",
        "createdAt" : "2016-03-24T04:09:26Z",
        "updatedAt" : "2016-03-24T04:09:26Z",
        "lastEditedBy" : "4a3ee9f8-9e7c-459e-b715-28669578f2c0",
        "tags" : [
        ]
      },
      {
        "id" : "fea58cca-8281-4170-9340-dcca575a0913",
        "parentId" : "697b6a1a-7347-4814-9005-62649e3c8d26",
        "authorId" : "4a3ee9f8-9e7c-459e-b715-28669578f2c0",
        "body" : "Thanks for the explanation\n",
        "createdAt" : "2016-03-24T04:09:36Z",
        "updatedAt" : "2016-03-24T04:09:36Z",
        "lastEditedBy" : "4a3ee9f8-9e7c-459e-b715-28669578f2c0",
        "tags" : [
        ]
      },
      {
        "id" : "47ba9794-5050-4318-90de-3de3894982b1",
        "parentId" : "697b6a1a-7347-4814-9005-62649e3c8d26",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Of course. Glad to help. I'm still learning this stuff myself. So, others may be able to clarify this further if you have more questions.\n",
        "createdAt" : "2016-03-24T04:11:53Z",
        "updatedAt" : "2016-03-24T04:11:53Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba73ee7537d721b05cfb2272c8bc5677ee388ddd",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +20,24 @@requirements:\n  build:\n    - python    # [win]\n    - cmake >=3.1\n    - zlib"
  },
  {
    "id" : "4743e1c8-6abd-47fd-aa3a-6325139064c7",
    "prId" : 192,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e099027-2bf4-427a-aee2-b266b3f1f75c",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "I don't think we need both this and `python` in build though.\n",
        "createdAt" : "2016-03-23T20:18:16Z",
        "updatedAt" : "2016-03-23T23:39:59Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "2ca9e6c9-2051-44de-9a09-263d8564a0f2",
        "parentId" : "8e099027-2bf4-427a-aee2-b266b3f1f75c",
        "authorId" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "body" : "You do.  These are the actual features.  Python in build only makes the selectors here work (I think).\n\nImportantly, hdf5 should NOT be a python library - it is a lower-level library.  This is why python is only a build-time dependency.  If it were a runtime dependency, it would be tied to that particular version of Python.  Here's a strange use case that would be possible with the former, but not the latter: build Python 2.7 with VS 2015.  We did a very bad job coupling python with visual studio version too strongly.  It is a strong convention, sure, but not a hard requirement.  I hope I have time to correct the way that features are done soon - I will do something more explicit, like what @ukoethe has done in ilastik.\n",
        "createdAt" : "2016-03-23T20:37:01Z",
        "updatedAt" : "2016-03-23T23:39:59Z",
        "lastEditedBy" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "tags" : [
        ]
      },
      {
        "id" : "ae9d928d-aaea-42ab-b69b-8b661f70808b",
        "parentId" : "8e099027-2bf4-427a-aee2-b266b3f1f75c",
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Ah, ok, thanks for setting me straight.\n\nI had a nice chat with @ukoethe and @stuarteberg earlier. There are some proposals that @ukoethe has for how we may help address these sort of things in `conda build` and more generally ABI and API compatibility. Also, I think it would be great if we can we work with @ukoethe to incorporate his work on building Python with a looser VS constraint as a proposal at conda-forge.\n",
        "createdAt" : "2016-03-23T20:43:16Z",
        "updatedAt" : "2016-03-23T23:39:59Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      },
      {
        "id" : "c8d8e22a-504e-421c-903e-395be57c73f7",
        "parentId" : "8e099027-2bf4-427a-aee2-b266b3f1f75c",
        "authorId" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "body" : "I am having a deja-vu here. It is time to compile that info in a wiki! I will start something tomorrow.\n",
        "createdAt" : "2016-03-23T20:45:48Z",
        "updatedAt" : "2016-03-23T23:39:59Z",
        "lastEditedBy" : "ed861b6f-1f9b-4be3-9da8-c8c844648413",
        "tags" : [
        ]
      },
      {
        "id" : "1c64fd55-b81a-41e2-b504-71683900a6bc",
        "parentId" : "8e099027-2bf4-427a-aee2-b266b3f1f75c",
        "authorId" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "body" : "@jakirkham I'm excited to have so many brilliant people thinking about these issues.  I'll do what I can to help get @ukoethe's work with the looser constraints into conda-build.\n\nConda forge is a different story than conda-build, obviously.  For conda-forge, the question I think is \"do you want to leverage conda-forge to support non-standard Python distributions?\"  My sentiment is \"probably,\" but at what cost in terms of taxing the build services?  If that cost is acceptable, this would be really exciting.  You could put together alternative non-standard distributions, like the one that @jjhelmus posted last week (ACPD?)\n",
        "createdAt" : "2016-03-23T21:16:23Z",
        "updatedAt" : "2016-03-23T23:39:59Z",
        "lastEditedBy" : "5102da93-31fa-41e6-b5fa-7de04e55f6ea",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba73ee7537d721b05cfb2272c8bc5677ee388ddd",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@    - vc9     # [win and py27]\n    - vc10    # [win and py34]\n    - vc14    # [win and py35]\n  detect_binary_files_with_prefix: True\n"
  },
  {
    "id" : "f72e4e6f-50db-45d0-a4df-eab50ba39701",
    "prId" : 192,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "944ed026-32dc-4fad-9c3a-c9360b4b7fe8",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : ":+1:\n",
        "createdAt" : "2016-03-23T20:20:57Z",
        "updatedAt" : "2016-03-23T23:39:59Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba73ee7537d721b05cfb2272c8bc5677ee388ddd",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +35,39 @@extra:\n  recipe-maintainers:\n    - jakirkham\n    - rgrout"
  },
  {
    "id" : "c6496f7d-1302-4c3f-bb69-747f6d02f956",
    "prId" : 192,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4e3f98d-e36e-40ec-8dac-ec51d544aba7",
        "parentId" : null,
        "authorId" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "body" : "Micro nit, only one blank line here.\n",
        "createdAt" : "2016-03-24T04:09:49Z",
        "updatedAt" : "2016-03-24T04:09:49Z",
        "lastEditedBy" : "a3f1fdb0-47ad-411e-b63d-af6fc71a1fa6",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba73ee7537d721b05cfb2272c8bc5677ee388ddd",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +10,14 @@  md5: b8ed9a36ae142317f88b0c7ef4b9c618\n\n\nbuild:\n  features:"
  }
]