[
  {
    "id" : "0a175bcc-bba1-4f25-bfe4-9ca60b1d9160",
    "prId" : 12637,
    "prUrl" : "https://github.com/conda-forge/staged-recipes/pull/12637#pullrequestreview-487028308",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e336c8d8-b0fe-464d-9c64-7b9f7af5e1b4",
        "parentId" : null,
        "authorId" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "body" : "```suggestion\r\n  summary: Meta-package to fix current_repodata\r\n  description: |\r\n    As of writing, conda-forge has versions of the linux compilers that are ahead of the \r\n    ones in the global pinnings. The current_repodata.json file only pulls in the latest \r\n    version of a package by default. Thus anytime one asks for the compilers in the pinnings,\r\n    the solver will always fail on current_repodata.json and have to pull all of the repodata. \r\n    The packages here make sure the latest versions of the compilers we use are in \r\n    current_repodata.json by depending on those packages. Thus it solves the solver inefficiency. \r\n    It also helps in cases when the solver appears to pull older builds of the compilers when they are \r\n    not explicitly asked for in the environment.\r\n```",
        "createdAt" : "2020-09-11T18:24:22Z",
        "updatedAt" : "2020-09-11T18:25:40Z",
        "lastEditedBy" : "93a361c3-34f7-4e52-a7f9-28c8ec69c910",
        "tags" : [
        ]
      }
    ],
    "commit" : "22b0d5e708a0875db8e1f3c7436dc6da5770116e",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +51,55 @@  home: https://github.com/conda-forge/_current_repodata_hack-feedstock\n  license: LicenseRef-OTHER\n  summary: Meta-package to fix current_repodata\n  description: |\n    As of writing, conda-forge has versions of the linux compilers that are ahead of the "
  }
]