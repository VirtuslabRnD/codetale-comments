[
  {
    "id" : "767c83d4-c4e0-4ac1-a6b2-6cb978d85758",
    "prId" : 661,
    "prUrl" : "https://github.com/zio/zio/pull/661#pullrequestreview-217634561",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a409d9ea-eb7f-4e09-b70e-5a756fc8c7dd",
        "parentId" : null,
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "lovely!",
        "createdAt" : "2019-03-22T08:32:53Z",
        "updatedAt" : "2019-03-23T07:22:43Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2f01156d382b1cb1a40ca14c0824954b47bd78f",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +52,56 @@    Stream.unwrap(\n      QueueSubscriber.make[A](bufferSize).flatMap {\n        case (subscriber, stream) => UIO(publisher.subscribe(subscriber)).const(stream)\n      }\n    )"
  },
  {
    "id" : "4f51fbf5-1393-474e-8925-827f300141b9",
    "prId" : 615,
    "prUrl" : "https://github.com/zio/zio/pull/615#pullrequestreview-212619583",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "efcadeb7-d9f7-4325-a057-66dc40aee353",
        "parentId" : null,
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "Ah I see the usecase now. This is like `unNoneTerminate` in FS2. ",
        "createdAt" : "2019-03-10T20:29:21Z",
        "updatedAt" : "2019-03-17T10:28:18Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      }
    ],
    "commit" : "00988b5c324b417d92bba23a72277618bfe83aec",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +14,18 @@    for {\n      runtime    <- ZIO.runtime[Any]\n      q          <- Queue.bounded[Take[Throwable, A]](bufferSize + 1)\n      subscriber = new QueueSubscriber[A](runtime, q)\n      fiber <- untakeQ(q)"
  },
  {
    "id" : "45202ada-41ac-48f3-af74-243b82a871eb",
    "prId" : 615,
    "prUrl" : "https://github.com/zio/zio/pull/615#pullrequestreview-215329468",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad9ca15d-7bea-4c57-b91c-44ea7ec572f0",
        "parentId" : null,
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "Great solution!",
        "createdAt" : "2019-03-16T21:46:51Z",
        "updatedAt" : "2019-03-17T10:28:18Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      }
    ],
    "commit" : "00988b5c324b417d92bba23a72277618bfe83aec",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@      _            <- UIO(subscriber.onSubscribe(subscription))\n      _            <- error.await.catchAll(t => UIO(subscriber.onError(t)) *> demand.shutdown).fork\n    } yield (error, demandUnfoldSink(subscriber, demand))\n\n  def publisherToStream[A](publisher: Publisher[A], bufferSize: Int): ZStream[Any, Throwable, A] ="
  },
  {
    "id" : "7382e36a-2c33-44d8-b5d8-961c2134d37b",
    "prId" : 615,
    "prUrl" : "https://github.com/zio/zio/pull/615#pullrequestreview-215331104",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c89508ce-b0c9-4908-8398-6f79512c2648",
        "parentId" : null,
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "We may want to move the  Scaladoc on the methods here to the methods in the implicit classes on the package object.",
        "createdAt" : "2019-03-16T21:49:41Z",
        "updatedAt" : "2019-03-17T10:28:18Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      }
    ],
    "commit" : "00988b5c324b417d92bba23a72277618bfe83aec",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +6,10 @@import scalaz.zio.stream.{ Stream, Take, ZSink, ZStream }\n\nobject Adapters {\n\n  def sinkToSubscriber[R, E <: Throwable, A1, A, B]("
  }
]