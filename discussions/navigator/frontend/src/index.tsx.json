[
  {
    "id" : "9ab7c8a0-c93c-49b2-a6e1-5fede0f523a2",
    "prId" : 8141,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8141",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0173453-8ccc-4803-90b2-249e29cae111",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Redux now throws an exception if a middleware dispatches during construction. So the initial dispatch from the router needs to move here.",
        "createdAt" : "2020-12-02T19:40:22Z",
        "updatedAt" : "2020-12-02T22:24:22Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "05b77852e8873d03e354268c8aad2d04b5c123dd",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +76,80 @@// Dispatch an action for the initial URL so that the reducer can set the\n// initial state correctly.\nstore.dispatch(pathToAction(window.location.pathname));\nstore.dispatch(App.initSession());\nstore.dispatch(App.initConfig());"
  },
  {
    "id" : "ca59f0d1-3098-4c30-a29a-02ef587f4554",
    "prId" : 8141,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8141",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77d1b474-4805-460b-836a-26b53ddbfff5",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "dispatches are now typed much more strictly.",
        "createdAt" : "2020-12-02T19:41:11Z",
        "updatedAt" : "2020-12-02T22:24:22Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "05b77852e8873d03e354268c8aad2d04b5c123dd",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +52,56 @@\n// Create Redux store\nconst store: Store<App.State> &  {dispatch: ThunkDispatch<App.State, undefined, App.Action>} =\n  createStore<App.State, App.Action, undefined, undefined>(\n    App.makeReducer(),"
  },
  {
    "id" : "a8cf2b81-6837-4aae-9e38-e868d1e3632e",
    "prId" : 8124,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8124",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62ece181-b9f3-458b-857f-2d4b7e1da3dd",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "In case itâ€™s not obvious, `possibleTypes` is the replacement for `fragmentMatcher`.",
        "createdAt" : "2020-12-02T07:51:18Z",
        "updatedAt" : "2020-12-02T08:08:51Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa8bf41fb31492707fb59b0432a7cb68a3e49ebc",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +36,40 @@const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache({dataIdFromObject, possibleTypes}),\n});\n"
  }
]