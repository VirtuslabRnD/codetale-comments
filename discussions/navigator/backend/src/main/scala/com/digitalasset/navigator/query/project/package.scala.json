[
  {
    "id" : "3a93673d-a422-4b6c-af01-0548f85bc146",
    "prId" : 8387,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8387",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59529ee5-6967-4fa8-98bb-e32d306cf9ff",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Shouldn't we add a test for this?",
        "createdAt" : "2021-01-05T09:45:21Z",
        "updatedAt" : "2021-01-07T13:10:00Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "effa5118-ba3d-406f-9d49-8f33b795b0ac",
        "parentId" : "59529ee5-6967-4fa8-98bb-e32d306cf9ff",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Ideally, yes. The code from this file is tested by [ContractSortSpec.scala](https://github.com/digital-asset/daml/blob/main/navigator/backend/src/test/scala/com/digitalasset/navigator/backend/query/ContractSortSpec.scala), but the test coverage is very bad. In particular, it does not cover the `checkParameter` method that was modified by this PR.\r\n\r\nBTW, the entire custom query engine should (in my opinion) be replaced by SQL queries, so I'm not sure how much we should invest in improving the testing of the engine.",
        "createdAt" : "2021-01-05T13:42:58Z",
        "updatedAt" : "2021-01-07T13:10:00Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "7f2b2a72-797f-4d85-bfba-b3070f53675f",
        "parentId" : "59529ee5-6967-4fa8-98bb-e32d306cf9ff",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Adding a test:\r\n\r\nYou can extend [ContractSortSpec.scala](https://github.com/digital-asset/daml/blob/main/navigator/backend/src/test/scala/com/digitalasset/navigator/backend/query/ContractSortSpec.scala) with the following lines at the bottom:\r\n\r\n```\r\n  test(List(\"template.parameter.foo\" -> ASCENDING), List(contract2, contract4, contract1, contract3))\r\n  test(List(\"template.parameter.int\" -> ASCENDING), List(contract1, contract3, contract2, contract4))\r\n```\r\n\r\nThe first line sorts the test contracts by `template.parameter.foo`, i.e., by the `foo` field of the contract parameter. That field has value `\"text\"` for the contracts 1 and 3, and does not exist for contracts 2 and 4 (in which case they are sorted first).\r\n\r\nYou could then extend the test coverage by changing [damlLfRecord0](https://github.com/digital-asset/daml/blob/main/navigator/backend/src/test/scala/com/digitalasset/navigator/backend/query/ContractSortSpec.scala#L32) and [damlLfRecord1](https://github.com/digital-asset/daml/blob/main/navigator/backend/src/test/scala/com/digitalasset/navigator/backend/query/ContractSortSpec.scala#L39) to include other data types, and adding additional test cases for them.",
        "createdAt" : "2021-01-05T13:54:26Z",
        "updatedAt" : "2021-01-07T13:10:00Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      }
    ],
    "commit" : "908051c6f23108451859cb3081ea8b3c93ae424c",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +65,69 @@              val next = tc.instantiate(ddt) match {\n                case DamlLfEnum(_) =>\n                  Right(StringValue(tyCon.toString))\n                case DamlLfRecord(fields) =>\n                  Left(\"record\" -> fields)"
  },
  {
    "id" : "ea80886e-f348-41f7-96ea-a0156c7e719e",
    "prId" : 2666,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2666",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e01eb96-de1d-48e0-80cd-e61d26742359",
        "parentId" : null,
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "Do these have to match ApiCodecVerbose's identifiers?",
        "createdAt" : "2019-08-27T19:43:23Z",
        "updatedAt" : "2019-09-02T07:14:23Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d62b26852e6615fe747f0ba481e7618f14b9eb5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +85,89 @@        case DamlLfTypeVar(name) => Right(StringValue(name))\n        case DamlLfTypePrim(DamlLfPrimType.Bool, _) => Right(StringValue(\"bool\"))\n        case DamlLfTypeNumeric(_) => Right(StringValue(\"decimal\"))\n        case DamlLfTypePrim(DamlLfPrimType.Int64, _) => Right(StringValue(\"int64\"))\n        case DamlLfTypePrim(DamlLfPrimType.Date, _) => Right(StringValue(\"date\"))"
  }
]