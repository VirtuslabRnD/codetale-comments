[
  {
    "id" : "8388d9b7-b2f6-4386-a39f-34d5d8d5e2d0",
    "prId" : 12821,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/12821#pullrequestreview-9407461",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93cb3770-9287-4774-ad3d-8f38bcf00f87",
        "parentId" : null,
        "authorId" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "body" : "This is more like \"string | falsy\", but I don't think people should be giving `0` as the filename.",
        "createdAt" : "2016-11-21T08:39:26Z",
        "updatedAt" : "2016-12-01T02:52:22Z",
        "lastEditedBy" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "tags" : [
        ]
      }
    ],
    "commit" : "8657cad7f2b354d03ec4bdc52f1539b12d7a0018",
    "line" : null,
    "diffHunk" : "@@ -1,1 +654,658 @@    interface SourceMapDevToolPluginOptions {\n        // output filename pattern (false/null to append)\n        filename?: string | false | null,\n        // source map comment pattern (false to not append)\n        append?: false | string,"
  },
  {
    "id" : "50968296-b046-4601-a78d-5dd585ecc087",
    "prId" : 12821,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/12821#pullrequestreview-9407477",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9116375-07db-47ce-af2c-9854896f2f25",
        "parentId" : null,
        "authorId" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "body" : "`false` is the only valid non-string value.",
        "createdAt" : "2016-11-21T08:39:41Z",
        "updatedAt" : "2016-12-01T02:52:22Z",
        "lastEditedBy" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "tags" : [
        ]
      }
    ],
    "commit" : "8657cad7f2b354d03ec4bdc52f1539b12d7a0018",
    "line" : null,
    "diffHunk" : "@@ -1,1 +656,660 @@        filename?: string | false | null,\n        // source map comment pattern (false to not append)\n        append?: false | string,\n        // template for the module filename inside the source map\n        moduleFilenameTemplate?: string,"
  },
  {
    "id" : "e164deaa-a0a7-4ca8-a432-474e70baf882",
    "prId" : 12821,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/12821#pullrequestreview-10076452",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bff2d73e-9839-4d47-a580-fd22c247c836",
        "parentId" : null,
        "authorId" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "body" : "Also `string | falsy`",
        "createdAt" : "2016-11-21T08:39:56Z",
        "updatedAt" : "2016-12-01T02:52:22Z",
        "lastEditedBy" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "tags" : [
        ]
      },
      {
        "id" : "007683ec-bba0-481f-a21f-e3d04ab7d650",
        "parentId" : "bff2d73e-9839-4d47-a580-fd22c247c836",
        "authorId" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "body" : "technically you can do `string | null | undefined | false | 0 | \"\"` which gets you everything but NaN. However, I think that for `string | null` is preferable because you don't want to encourage any non-string values.",
        "createdAt" : "2016-11-24T17:07:51Z",
        "updatedAt" : "2016-12-01T02:52:22Z",
        "lastEditedBy" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "tags" : [
        ]
      }
    ],
    "commit" : "8657cad7f2b354d03ec4bdc52f1539b12d7a0018",
    "line" : 329,
    "diffHunk" : "@@ -1,1 +668,672 @@        noSources?: boolean,\n        // the source map sourceRoot (\"The URL root from which all sources are relative.\")\n        sourceRoot?: string | null,\n        // whether to generate per-module source map\n        module?: boolean,"
  },
  {
    "id" : "c4397824-81eb-4d7e-868e-87ca553cb079",
    "prId" : 12821,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/12821#pullrequestreview-10102064",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0135c4c2-3021-4c60-8bd9-2ed074fa09cc",
        "parentId" : null,
        "authorId" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "body" : "Trying to define this as:\r\n\r\n```ts\r\nclass NamedModulesPlugin extends Plugin {}\r\n```\r\n\r\nunleashed Cthulhu (???)",
        "createdAt" : "2016-11-21T08:40:45Z",
        "updatedAt" : "2016-12-01T02:52:22Z",
        "lastEditedBy" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "tags" : [
        ]
      },
      {
        "id" : "12488f5f-46c0-4c79-b673-5bc4ed734983",
        "parentId" : "0135c4c2-3021-4c60-8bd9-2ed074fa09cc",
        "authorId" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "body" : "Possibly because `new NamedModulesPlugin()` will return `NamedModulesPlugin` instead of `Plugin`? What were the symptoms?",
        "createdAt" : "2016-11-24T17:24:47Z",
        "updatedAt" : "2016-12-01T02:52:22Z",
        "lastEditedBy" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "tags" : [
        ]
      },
      {
        "id" : "643a858b-a271-4d58-a33a-2d78c3c8ecbc",
        "parentId" : "0135c4c2-3021-4c60-8bd9-2ed074fa09cc",
        "authorId" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "body" : "With the current patch as a base, changing nothing but replacing the definition of `NamedModulesPluginStatic` with the `class` version produces `../webpack/index.d.ts(715,13): error TS2300: Duplicate identifier 'webpack'.` in all definitions that depend on webpack.\r\n\r\nIt also produces this big series of errors in @types/webpack's own tests:\r\n\r\n```\r\nTesting webpack\r\n\tRunning: node /Users/kovensky/src/DefinitelyTyped/node_modules/typescript/lib/tsc.js\r\n\tindex.d.ts(12,19): error TS2300: Duplicate identifier 'webpack'.\r\nindex.d.ts(715,13): error TS2300: Duplicate identifier 'webpack'.\r\nwebpack-tests.ts(41,21): error TS2339: Property 'ResolverPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(42,25): error TS2339: Property 'ResolverPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(77,21): error TS2339: Property 'optimize' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(84,28): error TS2339: Property 'optimize' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(115,34): error TS2339: Property 'optimize' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(247,22): error TS2339: Property 'NormalModuleReplacementPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(248,22): error TS2339: Property 'ContextReplacementPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(253,22): error TS2339: Property 'ContextReplacementPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(257,22): error TS2339: Property 'ContextReplacementPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(260,22): error TS2339: Property 'ContextReplacementPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(261,22): error TS2339: Property 'IgnorePlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(262,22): error TS2339: Property 'IgnorePlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(264,22): error TS2339: Property 'PrefetchPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(265,22): error TS2339: Property 'PrefetchPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(266,22): error TS2339: Property 'ResolverPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(267,22): error TS2339: Property 'ResolverPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(268,22): error TS2339: Property 'ResolverPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(269,17): error TS2339: Property 'ResolverPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(271,22): error TS2339: Property 'ResolverPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(272,17): error TS2339: Property 'ResolverPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(274,22): error TS2339: Property 'BannerPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(275,22): error TS2339: Property 'optimize' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(276,22): error TS2339: Property 'optimize' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(277,22): error TS2339: Property 'optimize' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(278,22): error TS2339: Property 'optimize' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(279,22): error TS2339: Property 'optimize' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(280,22): error TS2339: Property 'optimize' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(281,22): error TS2339: Property 'optimize' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(282,22): error TS2339: Property 'optimize' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(287,22): error TS2339: Property 'optimize' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(292,22): error TS2339: Property 'optimize' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(329,22): error TS2339: Property 'optimize' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(330,22): error TS2339: Property 'dependencies' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(331,22): error TS2339: Property 'DefinePlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(332,22): error TS2339: Property 'DefinePlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(338,22): error TS2339: Property 'ProvidePlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(339,22): error TS2339: Property 'ProvidePlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(342,22): error TS2339: Property 'SourceMapDevToolPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(362,22): error TS2339: Property 'EvalSourceMapDevToolPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(363,22): error TS2339: Property 'HotModuleReplacementPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(364,22): error TS2339: Property 'ExtendedAPIPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(365,22): error TS2339: Property 'NoErrorsPlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(366,22): error TS2339: Property 'WatchIgnorePlugin' does not exist on type 'typeof webpack'.\r\nwebpack-tests.ts(373,1): error TS2349: Cannot invoke an expression whose type lacks a call signature.\r\nwebpack-tests.ts(375,13): error TS7006: Parameter 'err' implicitly has an 'any' type.\r\nwebpack-tests.ts(375,18): error TS7006: Parameter 'stats' implicitly has an 'any' type.\r\nwebpack-tests.ts(380,16): error TS2349: Cannot invoke an expression whose type lacks a call signature.\r\nwebpack-tests.ts(384,23): error TS7006: Parameter 'err' implicitly has an 'any' type.\r\nwebpack-tests.ts(384,28): error TS7006: Parameter 'stats' implicitly has an 'any' type.\r\nwebpack-tests.ts(392,13): error TS7006: Parameter 'err' implicitly has an 'any' type.\r\nwebpack-tests.ts(392,18): error TS7006: Parameter 'stats' implicitly has an 'any' type.\r\nwebpack-tests.ts(401,1): error TS2349: Cannot invoke an expression whose type lacks a call signature.\r\nwebpack-tests.ts(403,13): error TS7006: Parameter 'err' implicitly has an 'any' type.\r\nwebpack-tests.ts(403,18): error TS7006: Parameter 'stats' implicitly has an 'any' type.\r\nwebpack-tests.ts(416,12): error TS2349: Cannot invoke an expression whose type lacks a call signature.\r\nwebpack-tests.ts(418,23): error TS7006: Parameter 'err' implicitly has an 'any' type.\r\nwebpack-tests.ts(418,28): error TS7006: Parameter 'stats' implicitly has an 'any' type.\r\n```\r\n\r\n---\r\n\r\nI suppose that the presence of `class` also defines the presence of a concrete constructor, so the namespace ends up being treated as both a type and a concrete `{ NamedModulesPlugin: { new (): {} extends Plugin } }`; the `var` definition later would have tried to override the already declared Object's type.\r\n\r\nI'm not sure how this could be refactored to support using `class` and other more precise definitions.\r\n",
        "createdAt" : "2016-11-25T01:37:36Z",
        "updatedAt" : "2016-12-01T02:52:22Z",
        "lastEditedBy" : "a81e6202-fa01-4d6d-b977-d96c59398a53",
        "tags" : [
        ]
      }
    ],
    "commit" : "8657cad7f2b354d03ec4bdc52f1539b12d7a0018",
    "line" : 367,
    "diffHunk" : "@@ -1,1 +717,721 @@    interface NamedModulesPluginStatic {\n        new (): Plugin;\n    }\n\n    namespace optimize {"
  }
]