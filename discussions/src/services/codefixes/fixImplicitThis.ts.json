[
  {
    "id" : "06e32d52-1d15-4ef2-8b9d-772030a0ae20",
    "prId" : 27565,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/27565#pullrequestreview-174547604",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5b51a0d-9635-4440-b7f0-5d3e0ccf7b00",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Could we be in a default argument of the function?  Does that matter?",
        "createdAt" : "2018-10-09T23:37:03Z",
        "updatedAt" : "2020-03-17T18:40:58Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "993e72ff-e385-4259-850f-dde0146191bd",
        "parentId" : "b5b51a0d-9635-4440-b7f0-5d3e0ccf7b00",
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "In a parameter initializer, 'this' refers to the same 'this' as inside the body of the function, not to 'this' of an outer function. So this will work just as well in that case.",
        "createdAt" : "2018-11-13T19:31:35Z",
        "updatedAt" : "2020-03-17T18:40:58Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fb1bd2ee6e64b4af84a69c9e0b0c0022d7d456b",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +23,27 @@        Debug.assert(token.kind === SyntaxKind.ThisKeyword);\n\n        const fn = getThisContainer(token, /*includeArrowFunctions*/ false);\n        if (!isFunctionDeclaration(fn) && !isFunctionExpression(fn)) return undefined;\n"
  },
  {
    "id" : "c33cb114-4b11-4e06-aa6d-7ede461a0267",
    "prId" : 27565,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/27565#pullrequestreview-174549097",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0284c3ec-2373-4cfa-8a6f-d057a1bda410",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Isn't there a code fix or refactoring for converting a function to an error function?  Can/should we share code?",
        "createdAt" : "2018-10-09T23:39:27Z",
        "updatedAt" : "2020-03-17T18:40:58Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "8b6c8dbe-b3a8-493f-8be7-98ced3185bfb",
        "parentId" : "0284c3ec-2373-4cfa-8a6f-d057a1bda410",
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "There will be in #28250, we can combine these then.",
        "createdAt" : "2018-11-13T19:35:10Z",
        "updatedAt" : "2020-03-17T18:40:58Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fb1bd2ee6e64b4af84a69c9e0b0c0022d7d456b",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@                    changes.delete(sourceFile, name);\n                }\n                changes.insertText(sourceFile, body.pos, \" =>\");\n                return [Diagnostics.Convert_function_expression_0_to_arrow_function, name ? name.text : ANONYMOUS];\n            }"
  }
]