[
  {
    "id" : "bc1fc43e-35a0-41cd-a025-61d4c2933086",
    "prId" : 17249,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/17249#pullrequestreview-52664058",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd28fc99-0d77-473e-a6ff-1cb9bea34f40",
        "parentId" : null,
        "authorId" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "body" : "Any reason for the additional spacing here before Found?",
        "createdAt" : "2017-07-27T00:11:04Z",
        "updatedAt" : "2017-07-27T13:58:44Z",
        "lastEditedBy" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "tags" : [
        ]
      },
      {
        "id" : "b7287a69-644a-42ce-bfbc-1e8c5ac36c29",
        "parentId" : "fd28fc99-0d77-473e-a6ff-1cb9bea34f40",
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "I wanted to imply that this was part of the above log for \"searching for typing names\"; should also indent anything else in that part.",
        "createdAt" : "2017-07-27T13:58:35Z",
        "updatedAt" : "2017-07-27T13:58:44Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b1e8a058c564b3efbdc704be0c3b237be1ad8da",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +234,238 @@                }\n            }\n            addInferredTypings(packageNames, \"    Found package names\");\n        }\n"
  },
  {
    "id" : "21646c96-b5aa-4f60-9d6e-91609cebe722",
    "prId" : 17249,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/17249#pullrequestreview-52530517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5d4f8ab-7631-411f-86d0-2bcbeab5a70b",
        "parentId" : null,
        "authorId" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "body" : "good catch - these could be specified as types or typings",
        "createdAt" : "2017-07-27T00:11:33Z",
        "updatedAt" : "2017-07-27T13:58:44Z",
        "lastEditedBy" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b1e8a058c564b3efbdc704be0c3b237be1ad8da",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +23,27 @@        optionalDependencies?: MapLike<string>;\n        peerDependencies?: MapLike<string>;\n        types?: string;\n        typings?: string;\n    }"
  },
  {
    "id" : "df2bb82b-c04a-49fa-bd4f-8519110aff9d",
    "prId" : 16652,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/16652#pullrequestreview-46025996",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69595b73-8213-429f-b51d-9832b07e45d9",
        "parentId" : null,
        "authorId" : "26699569-4335-45b0-a775-bfd0a044730b",
        "body" : "should this just be `((message: string) => void)` with default parameter of function that do nothing.... so we don't have to check whether the log parameter is defined",
        "createdAt" : "2017-06-21T19:37:46Z",
        "updatedAt" : "2017-07-12T14:30:54Z",
        "lastEditedBy" : "26699569-4335-45b0-a775-bfd0a044730b",
        "tags" : [
        ]
      },
      {
        "id" : "df198dbf-e0d8-48f6-8435-bb5c9dcac4ca",
        "parentId" : "69595b73-8213-429f-b51d-9832b07e45d9",
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "We're doing this kind of pattern (`if (this.log.isEnabled()) this.log.writeLine(...)`) for logging in `typingsInstaller`, I think for performance so that we don't allocate strings that we won't need. It may not matter compared to all the I/O we're doing though.",
        "createdAt" : "2017-06-23T16:02:04Z",
        "updatedAt" : "2017-07-12T14:30:54Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "b89360677c249c5ba5c7f45fe9c22e2bcd27daa2",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +52,56 @@    export function discoverTypings(\n        host: TypingResolutionHost,\n        log: ((message: string) => void) | undefined,\n        fileNames: string[],\n        projectRootPath: Path,"
  },
  {
    "id" : "ca6a97e7-d4d4-4527-a2b9-650641acc814",
    "prId" : 16632,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/16632#pullrequestreview-46040392",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e62269a8-9d44-4367-ae78-33e2bd5ff13c",
        "parentId" : null,
        "authorId" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "body" : "do we need a null/undefined check for projectRootPath before it is added to the list of possibleSearchDirs?",
        "createdAt" : "2017-06-23T16:49:48Z",
        "updatedAt" : "2017-06-23T16:50:19Z",
        "lastEditedBy" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "tags" : [
        ]
      },
      {
        "id" : "88f08c08-ec6a-4dd5-b9fb-0481a6f45e5e",
        "parentId" : "e62269a8-9d44-4367-ae78-33e2bd5ff13c",
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "It doesn't look like that's ever passed in as undefined?",
        "createdAt" : "2017-06-23T16:59:15Z",
        "updatedAt" : "2017-06-23T16:59:16Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      },
      {
        "id" : "d607dc5b-3f52-42bb-9c99-496137c71000",
        "parentId" : "e62269a8-9d44-4367-ae78-33e2bd5ff13c",
        "authorId" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "body" : "At one point I believe there were scenarios where this could be undefined in VS (ex: websites, open folder). Not sure if this is still the case though.",
        "createdAt" : "2017-06-23T17:03:06Z",
        "updatedAt" : "2017-06-23T17:03:07Z",
        "lastEditedBy" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "tags" : [
        ]
      },
      {
        "id" : "c0a781d7-162c-4e4a-9d94-1dd2f9af0895",
        "parentId" : "e62269a8-9d44-4367-ae78-33e2bd5ff13c",
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "Maybe we should add an assert?",
        "createdAt" : "2017-06-23T17:06:53Z",
        "updatedAt" : "2017-06-23T17:06:53Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "43481e62b85c26b8f16f91b8de6c055a581159e1",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +93,97 @@            possibleSearchDirs.set(getDirectoryPath(f), true);\n        }\n        possibleSearchDirs.set(projectRootPath, true);\n        possibleSearchDirs.forEach((_true, searchDir) => {\n            const packageJsonPath = combinePaths(searchDir, \"package.json\");"
  },
  {
    "id" : "d4e3c01b-93dd-4a34-804e-b1457a1537f4",
    "prId" : 14100,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/14100#pullrequestreview-22144027",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec84b1e0-c95c-429c-83cb-a1c7f4634e67",
        "parentId" : null,
        "authorId" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "body" : "should we watch the path after confirming it exists?",
        "createdAt" : "2017-02-15T23:52:00Z",
        "updatedAt" : "2017-02-16T02:05:31Z",
        "lastEditedBy" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "tags" : [
        ]
      },
      {
        "id" : "f4aa64f3-2149-49d8-9eaa-770744cb4aa7",
        "parentId" : "ec84b1e0-c95c-429c-83cb-a1c7f4634e67",
        "authorId" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "body" : "I kept this before the path existence check as we want to watch these paths even if they haven't been created yet. (ex: User creates an empty ASP.NET project, adds a js file then uses _Manage Bower Packages_ to install jQuery.)  ",
        "createdAt" : "2017-02-16T00:03:58Z",
        "updatedAt" : "2017-02-16T02:05:31Z",
        "lastEditedBy" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d1c9d5f9afb79497e162e02a5d9e4d7c879411d",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +208,212 @@         */\n        function getTypingNamesFromPackagesFolder(packagesFolderPath: string) {\n            filesToWatch.push(packagesFolderPath);\n\n            // Todo: add support for ModuleResolutionHost too"
  },
  {
    "id" : "945c9105-cb80-42cd-903c-083b7ba84fc3",
    "prId" : 7179,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f470cbd-aa32-4305-a445-56603d123e73",
        "parentId" : null,
        "authorId" : "d70b5be0-1cc6-43f7-b8db-3c51654d174d",
        "body" : "Per our meeting with ASP.NET (and for the general developer experience), didn't we want to search for `devDependencies` also?\n",
        "createdAt" : "2016-02-23T03:27:15Z",
        "updatedAt" : "2016-03-02T18:11:34Z",
        "lastEditedBy" : "d70b5be0-1cc6-43f7-b8db-3c51654d174d",
        "tags" : [
        ]
      },
      {
        "id" : "6186940e-3afb-431e-b16a-dcced5408979",
        "parentId" : "2f470cbd-aa32-4305-a445-56603d123e73",
        "authorId" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "body" : "yes - thanks for the reminder! Will add those as well.\n",
        "createdAt" : "2016-02-23T03:37:42Z",
        "updatedAt" : "2016-03-02T18:11:34Z",
        "lastEditedBy" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "tags" : [
        ]
      },
      {
        "id" : "d9638a29-1507-420e-9a24-86f68095f1ff",
        "parentId" : "2f470cbd-aa32-4305-a445-56603d123e73",
        "authorId" : "8387e299-6b05-46c9-b932-d7d181438a4c",
        "body" : "I don't know how relevant it is here, but `package.json` has `peerDependencies` and `optionalDependencies` as well.\n",
        "createdAt" : "2016-02-23T20:16:34Z",
        "updatedAt" : "2016-03-02T18:11:34Z",
        "lastEditedBy" : "8387e299-6b05-46c9-b932-d7d181438a4c",
        "tags" : [
        ]
      },
      {
        "id" : "b2dae1ee-dec0-4aad-b8e9-d827fcc4541c",
        "parentId" : "2f470cbd-aa32-4305-a445-56603d123e73",
        "authorId" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "body" : "Thanks for drawing my attention to these. Doesn't seem too compelling to add them at this point but will consider adding them in future if we find the current dependencies are falling short.\n",
        "createdAt" : "2016-02-23T21:27:50Z",
        "updatedAt" : "2016-03-02T18:11:34Z",
        "lastEditedBy" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "tags" : [
        ]
      },
      {
        "id" : "0ad4aa3e-2fda-4687-810d-88cfbb734cf6",
        "parentId" : "2f470cbd-aa32-4305-a445-56603d123e73",
        "authorId" : "8387e299-6b05-46c9-b932-d7d181438a4c",
        "body" : "No problem. Seemed like you'd want to cover those anyway, since there'll never be overlap in any of these fields and they are treated the same as regular dependencies on a local project. The only difference is when they're used as a sub-dependency dependencies.\n",
        "createdAt" : "2016-02-23T21:35:52Z",
        "updatedAt" : "2016-03-02T18:11:34Z",
        "lastEditedBy" : "8387e299-6b05-46c9-b932-d7d181438a4c",
        "tags" : [
        ]
      },
      {
        "id" : "aa099df7-46f2-400f-b050-4d2042f4b2df",
        "parentId" : "2f470cbd-aa32-4305-a445-56603d123e73",
        "authorId" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "body" : "thanks- included these dependencies as well \n",
        "createdAt" : "2016-02-26T23:36:11Z",
        "updatedAt" : "2016-03-02T18:11:34Z",
        "lastEditedBy" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8772bc0a216023ae978b619fcd29a5567506225",
    "line" : null,
    "diffHunk" : "@@ -1,1 +153,157 @@                    mergeTypings(getKeys(jsonConfig.peerDependencies));\n                }\n            }\n        }\n"
  },
  {
    "id" : "1c55a4aa-6489-480a-b3c6-9f8a953bb958",
    "prId" : 7179,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "721bc293-e85b-4731-8438-1e816404d01f",
        "parentId" : null,
        "authorId" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "body" : "Are we changing the parameter names here too?\n",
        "createdAt" : "2016-03-01T21:38:44Z",
        "updatedAt" : "2016-03-02T18:11:34Z",
        "lastEditedBy" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "tags" : [
        ]
      },
      {
        "id" : "93b94744-3476-4497-aaf0-f1fba78ef999",
        "parentId" : "721bc293-e85b-4731-8438-1e816404d01f",
        "authorId" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "body" : "Added the new params here as well\n",
        "createdAt" : "2016-03-02T02:57:58Z",
        "updatedAt" : "2016-03-02T18:11:34Z",
        "lastEditedBy" : "e0c67da9-6211-4aa1-bd66-75846c68c91c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8772bc0a216023ae978b619fcd29a5567506225",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +42,46 @@        fileNames: string[],\n        cachePath: Path,\n        projectRootPath: Path,\n        safeListPath: Path,\n        packageNameToTypingLocation: Map<string>,"
  },
  {
    "id" : "c8341f05-9b32-4d35-acb1-9606487ded30",
    "prId" : 7179,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eff16a3d-5979-4f35-b328-b6e4ea1f27ef",
        "parentId" : null,
        "authorId" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "body" : "This is wrong. This will make an empty `safeList`, so nothing will pass the safety check. Should make it `undefined` instead.\n",
        "createdAt" : "2016-03-04T22:17:01Z",
        "updatedAt" : "2016-03-04T22:17:01Z",
        "lastEditedBy" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "tags" : [
        ]
      },
      {
        "id" : "42584ade-cead-4d01-972c-da65fc9a25cd",
        "parentId" : "eff16a3d-5979-4f35-b328-b6e4ea1f27ef",
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "undefined means you will keep looking for it the next time. that does not help if it still does not exist. if the intent is to let all things pass through if there is no safe list, then we should have a sentinel value to indicate its absence.\n",
        "createdAt" : "2016-03-04T22:24:42Z",
        "updatedAt" : "2016-03-04T22:24:42Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "9185e852-513b-4128-93c8-86283e19e3d7",
        "parentId" : "eff16a3d-5979-4f35-b328-b6e4ea1f27ef",
        "authorId" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "body" : "We should keep looking only if the `safeListPath` is provided. If it is not, we should stop trying. So this if block should have the condition of `if (!safeList && safeListPath)` With that I don't think we need a indicator value\n",
        "createdAt" : "2016-03-04T22:28:08Z",
        "updatedAt" : "2016-03-04T22:28:08Z",
        "lastEditedBy" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "tags" : [
        ]
      },
      {
        "id" : "b932a008-7544-45f1-b0bc-d3783191484c",
        "parentId" : "eff16a3d-5979-4f35-b328-b6e4ea1f27ef",
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "so keep trying if a path was provided, but the file does not exist? what value would that give you, it is most probably not going to be there.\n",
        "createdAt" : "2016-03-04T22:30:14Z",
        "updatedAt" : "2016-03-04T22:30:14Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "2807b29a-3ec2-4c6f-9078-52d098a61d76",
        "parentId" : "eff16a3d-5979-4f35-b328-b6e4ea1f27ef",
        "authorId" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "body" : "I was thinking that we were passing in a `safeListPath` only when we are confident about the existence of the file. But what you said makes sense, we should not try again if not found no matter what. I'll make that change soon.\n",
        "createdAt" : "2016-03-05T00:57:45Z",
        "updatedAt" : "2016-03-05T00:57:45Z",
        "lastEditedBy" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8772bc0a216023ae978b619fcd29a5567506225",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +65,69 @@            }\n            else {\n                safeList = {};\n            };\n        }"
  }
]