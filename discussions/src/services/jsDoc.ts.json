[
  {
    "id" : "69c4674f-9cd2-46d5-876c-4f020b8d212a",
    "prId" : 43677,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/43677#pullrequestreview-691164286",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9aa1e5e-b49a-4568-9663-c418b66c1b2e",
        "parentId" : null,
        "authorId" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "body" : "Worth an explanatory comment? This looks puzzling without the context of the conversation we had in this PR.",
        "createdAt" : "2021-06-23T21:34:37Z",
        "updatedAt" : "2021-06-23T21:34:41Z",
        "lastEditedBy" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "tags" : [
        ]
      }
    ],
    "commit" : "0829381cd93db7cb7dd0ff237d7c004615a5c20c",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +103,107 @@                       && jsdoc.tags\n                       && jsdoc.tags.some(t => t.kind === SyntaxKind.JSDocTypedefTag || t.kind === SyntaxKind.JSDocCallbackTag)\n                       && !jsdoc.tags.some(t => t.kind === SyntaxKind.JSDocParameterTag || t.kind === SyntaxKind.JSDocReturnTag)) {\n                    continue;\n                }"
  },
  {
    "id" : "a86e0154-4ef5-433e-b8be-035711b8328a",
    "prId" : 43390,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/43390#pullrequestreview-625741626",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a873f9d6-4bd9-4fac-bc89-1f1f33728687",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "this is more a note to myself, but all of jsdoc.ts' displayparts code might need to be reworked to use a DisplayPartWriter in a subsequent PR. It looks like that's what the rest of service uses instead of building display parts themselves.",
        "createdAt" : "2021-03-31T22:16:07Z",
        "updatedAt" : "2021-04-08T23:56:54Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "5726ca1b9fc598831e7173d51a8d4b1df39170ca",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +172,176 @@            return comment\n                ? [namePart(s), spacePart(), ...getDisplayPartsFromComment(comment, checker)]\n                : [textPart(s)];\n        }\n    }"
  },
  {
    "id" : "0604d910-b8ad-4489-b792-379aeb713b8f",
    "prId" : 43390,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/43390#pullrequestreview-631902825",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31c28390-23aa-46d1-a442-386dd07569b3",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "```suggestion\r\n        const { comment, kind } = tag;\r\n        const namePart = tagNameDisplayPart[kind];\r\n        Debug.assertDefined(namePart, \"No display part found for name of jsdoc comment: \" + SyntaxKind[kind]);\r\n```\r\n\r\nand then you don't need to pass `syntaxKindDisplayPartFunctionDict` everywhere below",
        "createdAt" : "2021-04-05T16:13:07Z",
        "updatedAt" : "2021-04-08T23:56:54Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "4f28d239-31e7-4296-af76-85ec422c4766",
        "parentId" : "31c28390-23aa-46d1-a442-386dd07569b3",
        "authorId" : "dc16e04a-9b1e-420c-bfe0-63074d2a9b48",
        "body" : "Thanks. I gave these suggestions a go but it's causing lots of typing errors.\r\nThe `SyntaxKind` also contains lots of kinds that are not related to JSDoc so `Debug.assertDefined` causes lots of tests to fail.\r\n\r\nI took a bit of a different approach to make the code cleaner. Let me know what you think.",
        "createdAt" : "2021-04-07T08:05:35Z",
        "updatedAt" : "2021-04-08T23:56:54Z",
        "lastEditedBy" : "dc16e04a-9b1e-420c-bfe0-63074d2a9b48",
        "tags" : [
        ]
      },
      {
        "id" : "693038b2-ece4-400a-84ec-1a1ceb570c8c",
        "parentId" : "31c28390-23aa-46d1-a442-386dd07569b3",
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "Interesting. I thought syntaxKindDisplayPartFunctionDict was exhaustive. Regardless, I like the current change.",
        "createdAt" : "2021-04-08T22:59:51Z",
        "updatedAt" : "2021-04-08T23:56:54Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "5726ca1b9fc598831e7173d51a8d4b1df39170ca",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +143,147 @@\n    function getCommentDisplayParts(tag: JSDocTag, checker?: TypeChecker): SymbolDisplayPart[] | undefined {\n        const { comment, kind } = tag;\n        const namePart = getTagNameDisplayPart(kind);\n        switch (kind) {"
  },
  {
    "id" : "fb158905-bd1f-4b5d-86b9-c1b8443528ba",
    "prId" : 43390,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/43390#pullrequestreview-631903972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "231bc1be-4916-410d-b54d-c965adeb58b3",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "```suggestion\r\n            case SyntaxKind.JSDocTypedefTag:\r\n            case SyntaxKind.JSDocCallbackTag:\r\n```",
        "createdAt" : "2021-04-08T23:03:40Z",
        "updatedAt" : "2021-04-08T23:56:54Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "5726ca1b9fc598831e7173d51a8d4b1df39170ca",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +184,188 @@            case SyntaxKind.JSDocTemplateTag:\n                return typeParameterNamePart;\n            case SyntaxKind.JSDocTypedefTag:\n            case SyntaxKind.JSDocCallbackTag:\n                return typeAliasNamePart;"
  },
  {
    "id" : "a917e723-ced8-4f09-abb3-f7fe135ea527",
    "prId" : 42068,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/42068#pullrequestreview-558246762",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a94ebadc-f8e2-409f-8c8b-d7e6421d817e",
        "parentId" : null,
        "authorId" : "bb7feee5-7089-4110-a20e-a163a6be1501",
        "body" : "The `caretOffset` was previously calculated using `newLine` which is system dependent. Seems like changing it would cause problems, no?",
        "createdAt" : "2020-12-23T21:22:14Z",
        "updatedAt" : "2021-01-07T08:00:57Z",
        "lastEditedBy" : "bb7feee5-7089-4110-a20e-a163a6be1501",
        "tags" : [
        ]
      },
      {
        "id" : "d999397e-1bf8-4c0d-8129-24a293303fc0",
        "parentId" : "a94ebadc-f8e2-409f-8c8b-d7e6421d817e",
        "authorId" : "abcb489c-ecaa-43d7-a864-2305b3feb38c",
        "body" : "The following code that was used before\r\n\r\n```ts\r\nconst singleLineResult = \"/** */\";\t\r\nreturn { newText: singleLineResult, caretOffset: 3 };\t\r\n```",
        "createdAt" : "2020-12-23T21:41:50Z",
        "updatedAt" : "2021-01-07T08:00:57Z",
        "lastEditedBy" : "abcb489c-ecaa-43d7-a864-2305b3feb38c",
        "tags" : [
        ]
      },
      {
        "id" : "1a6fe608-b7e7-4c77-b3dc-5e8d2c41d64a",
        "parentId" : "a94ebadc-f8e2-409f-8c8b-d7e6421d817e",
        "authorId" : "bb7feee5-7089-4110-a20e-a163a6be1501",
        "body" : "ah whoops. ",
        "createdAt" : "2020-12-23T22:01:49Z",
        "updatedAt" : "2021-01-07T08:00:57Z",
        "lastEditedBy" : "bb7feee5-7089-4110-a20e-a163a6be1501",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1c36f99b99bf21aa5e9e9bc9d7f10cc03316ab3",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +298,302 @@            return { newText: result, caretOffset: preamble.length };\n        }\n        return { newText: openComment + closeComment, caretOffset: 3 };\n    }\n"
  },
  {
    "id" : "da58f2bd-bd36-4dd7-bba7-a3e9e5636d5f",
    "prId" : 41877,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/41877#pullrequestreview-613583533",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b85915f-1171-4a23-a579-86b4e2da5bed",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "We don't have a helper for array comparison?",
        "createdAt" : "2021-03-15T17:38:31Z",
        "updatedAt" : "2021-03-16T18:20:25Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "51b7279f-f963-4930-b1e4-5219d008d3c8",
        "parentId" : "9b85915f-1171-4a23-a579-86b4e2da5bed",
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "Oh, yes, we do. Switched the implementation to arraysEqual.",
        "createdAt" : "2021-03-16T18:19:20Z",
        "updatedAt" : "2021-03-16T18:20:25Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "4cfdaee97195451f0a1947da5ec05f5df19f6aa8",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +103,107 @@    }\n\n    function isIdenticalListOfDisplayParts(parts1: SymbolDisplayPart[], parts2: SymbolDisplayPart[]) {\n        return arraysEqual(parts1, parts2, (p1, p2) => p1.kind === p2.kind && p1.text === p2.text);\n    }"
  },
  {
    "id" : "37d160d2-c72b-490e-8c1f-18f49edd289e",
    "prId" : 38489,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/38489#pullrequestreview-409591419",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59a021da-6df0-42bb-9185-66930c8e8e26",
        "parentId" : null,
        "authorId" : "b2271d8e-c891-40a3-9f31-5d00a14b32ce",
        "body" : "Comment on 86 claims it's already deduping? Is the `forEachUnique` meant to do this? Why didn't that work",
        "createdAt" : "2020-05-11T22:56:39Z",
        "updatedAt" : "2020-05-11T22:56:39Z",
        "lastEditedBy" : "b2271d8e-c891-40a3-9f31-5d00a14b32ce",
        "tags" : [
        ]
      },
      {
        "id" : "46747349-3584-47f4-af83-74d81b538959",
        "parentId" : "59a021da-6df0-42bb-9185-66930c8e8e26",
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "So I thought the same thing (i.e. \"whoever wrote this must be mistaken!\") but reading that comment, I understand `forEachUnique` must dedupe across declarations, and something like\r\n\r\n```\r\n(Array<string> | Array<number>)[\"length\"]\r\n```\r\n\r\nhas the same declarations between `Array<string>` and `Array<number>` for either of them. ",
        "createdAt" : "2020-05-11T23:05:42Z",
        "updatedAt" : "2020-05-11T23:07:36Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "6f4a88ba-213c-4ed8-8a67-82df296d00bc",
        "parentId" : "59a021da-6df0-42bb-9185-66930c8e8e26",
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "I could *technically* let the identical string checks handle this instead.",
        "createdAt" : "2020-05-11T23:07:05Z",
        "updatedAt" : "2020-05-11T23:07:16Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      }
    ],
    "commit" : "355c28ea70233a27c43a95a7fe1d1384b736c434",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +87,91 @@        // In case of a union property there might be same declaration multiple times\n        // which only varies in type parameter\n        // Eg. const a: Array<string> | Array<number>; a.length\n        // The property length will have two declarations of property length coming\n        // from Array<T> - Array<string> and Array<number>"
  },
  {
    "id" : "8c1ccdcc-781f-4756-a945-5cd975ed062c",
    "prId" : 25253,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/25253#pullrequestreview-132885712",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26afb77d-32d3-4f8c-a0c7-db24d5959923",
        "parentId" : null,
        "authorId" : "dd3764b6-990e-40a5-ac3a-007aa09d2bcd",
        "body" : "It is missing enum: https://github.com/Microsoft/TypeScript/issues/18161.",
        "createdAt" : "2018-06-28T14:27:08Z",
        "updatedAt" : "2018-07-04T08:05:55Z",
        "lastEditedBy" : "dd3764b6-990e-40a5-ac3a-007aa09d2bcd",
        "tags" : [
        ]
      },
      {
        "id" : "3cd71bd6-c017-4ae4-8a1e-42469f4d5778",
        "parentId" : "26afb77d-32d3-4f8c-a0c7-db24d5959923",
        "authorId" : "9576f2b3-12fd-4547-80af-438728168991",
        "body" : "good catch, funny that I checked the list 2 times and did not observe this, will fix this soon",
        "createdAt" : "2018-06-28T15:02:52Z",
        "updatedAt" : "2018-07-04T08:05:55Z",
        "lastEditedBy" : "9576f2b3-12fd-4547-80af-438728168991",
        "tags" : [
        ]
      }
    ],
    "commit" : "72bac56d669f0b9540462cbf4d90d983d11d3340",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +20,24 @@        \"deprecated\",\n        \"description\",\n        \"emits\",\n        \"enum\",\n        \"event\","
  },
  {
    "id" : "248756e6-5107-44d5-9e97-329eea7cc2a3",
    "prId" : 12856,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/12856#pullrequestreview-12556725",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5aa55d23-f214-4296-adfd-59540cf9311f",
        "parentId" : null,
        "authorId" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "body" : "is type assertion necessary?",
        "createdAt" : "2016-12-12T19:31:00Z",
        "updatedAt" : "2016-12-12T22:15:16Z",
        "lastEditedBy" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "tags" : [
        ]
      },
      {
        "id" : "e7727fa9-0963-456e-9e6c-278c3c856b58",
        "parentId" : "5aa55d23-f214-4296-adfd-59540cf9311f",
        "authorId" : "b2271d8e-c891-40a3-9f31-5d00a14b32ce",
        "body" : "I guess not. I got confused by the 2.0 language service giving me an implicit any warning...",
        "createdAt" : "2016-12-12T21:42:25Z",
        "updatedAt" : "2016-12-12T22:15:16Z",
        "lastEditedBy" : "b2271d8e-c891-40a3-9f31-5d00a14b32ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "2875d5bc707661638adfecd661c900f980a745cc",
    "line" : null,
    "diffHunk" : "@@ -1,1 +78,82 @@            }\n            for (const doc of jsDocs) {\n                const tagsForDoc = (doc as JSDoc).tags;\n                if (tagsForDoc) {\n                    tags.push(...tagsForDoc.filter(tag => tag.kind === SyntaxKind.JSDocTag).map(jsDocTag => {"
  },
  {
    "id" : "bef14554-9f3b-408e-b2cc-60186547794e",
    "prId" : 12856,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/12856#pullrequestreview-12628659",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ba15962-3664-4e06-8c43-c27a2e7e091c",
        "parentId" : null,
        "authorId" : "6feba8ca-0b6a-496c-83fb-5fdd3b4e56f3",
        "body" : "Here too the array may be lazy-allocated when first tag is encountered -- meaning no allocation for the default case.",
        "createdAt" : "2016-12-13T08:54:42Z",
        "updatedAt" : "2016-12-13T09:03:30Z",
        "lastEditedBy" : "6feba8ca-0b6a-496c-83fb-5fdd3b4e56f3",
        "tags" : [
        ]
      }
    ],
    "commit" : "2875d5bc707661638adfecd661c900f980a745cc",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +71,75 @@    export function getJsDocTagsFromDeclarations(declarations: Declaration[]) {\n        // Only collect doc comments from duplicate declarations once.\n        const tags: JSDocTagInfo[] = [];\n        forEachUnique(declarations, declaration => {\n            const jsDocs = getJSDocs(declaration);"
  }
]