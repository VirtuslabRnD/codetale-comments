[
  {
    "id" : "981046cc-18b0-4b48-a49c-ce2a376888d1",
    "prId" : 4932,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56cf7f3b-fd37-4985-94df-3a680cce83b0",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "do you still need these asserts?\n",
        "createdAt" : "2015-09-28T18:10:03Z",
        "updatedAt" : "2015-09-28T18:10:03Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "cf10cf4a-d315-4d47-ab55-b8fdfe72eb3f",
        "parentId" : "56cf7f3b-fd37-4985-94df-3a680cce83b0",
        "authorId" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "body" : "I'd keep them to make sure that contract of interaction with formatting scanner will be kept consistent\n",
        "createdAt" : "2015-09-28T18:13:22Z",
        "updatedAt" : "2015-09-28T18:13:22Z",
        "lastEditedBy" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "tags" : [
        ]
      }
    ],
    "commit" : "5078152a2185090ff0d4a7ef881e7b18bd7a2a44",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +58,62 @@\n        function advance(): void {\n            Debug.assert(scanner !== undefined);\n            \n            lastTokenInfo = undefined;"
  },
  {
    "id" : "36a50527-1c28-47d3-bccb-c7fc5394bdf9",
    "prId" : 1321,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0478b0be-f128-4db6-8bc3-3b2cae486ac5",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Seems to be different now. This comment may need to be amended.\n",
        "createdAt" : "2014-12-01T23:36:40Z",
        "updatedAt" : "2014-12-01T23:50:29Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "f737d373-54f5-4765-a441-868fcac4daf8",
        "parentId" : "0478b0be-f128-4db6-8bc3-3b2cae486ac5",
        "authorId" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "body" : "it is still ok since it does not affect the width of token. I'll add a comment explaining this\n",
        "createdAt" : "2014-12-01T23:40:09Z",
        "updatedAt" : "2014-12-01T23:50:29Z",
        "lastEditedBy" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "tags" : [
        ]
      }
    ],
    "commit" : "5286f87b48e00c47c6158bbe6613c0294fc24748",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +146,150 @@            if (lastTokenInfo && expectedScanAction === lastScanAction) {\n                // readTokenInfo was called before with the same expected scan action.\n                // No need to re-scan text, return existing 'lastTokenInfo'\n                // it is ok to call fixTokenKind here since it does not affect\n                // what portion of text is consumed. In opposize rescanning can change it,"
  },
  {
    "id" : "f76c179c-0fff-42e5-b5be-8cb7c649162d",
    "prId" : 1321,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cb5deba-cf49-4ee4-af96-b75096badf4a",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Could you also have a `shouldRescanIdentifier`?\n",
        "createdAt" : "2014-12-01T23:39:42Z",
        "updatedAt" : "2014-12-01T23:50:29Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      }
    ],
    "commit" : "5286f87b48e00c47c6158bbe6613c0294fc24748",
    "line" : null,
    "diffHunk" : "@@ -1,1 +151,155 @@                // i.e. for '>=' when originally scanner eats just one character\n                // and rescanning forces it to consume more.\n                return fixTokenKind(lastTokenInfo, n);\n            }\n"
  }
]