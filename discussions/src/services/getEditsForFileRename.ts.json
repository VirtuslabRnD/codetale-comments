[
  {
    "id" : "e57e47ac-dcc8-47fc-9231-71f99403b0a1",
    "prId" : 44484,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/44484#pullrequestreview-688706041",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7bb66461-788e-4dba-8d42-9c0ef3f3492c",
        "parentId" : null,
        "authorId" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "body" : "Is this the only meaningful diff in this file (e.g. all the other changes are supposed to be functionally-equivalent) ?",
        "createdAt" : "2021-06-21T15:35:45Z",
        "updatedAt" : "2021-06-21T15:35:46Z",
        "lastEditedBy" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "tags" : [
        ]
      },
      {
        "id" : "e3235408-0f34-46ae-996b-01dd80b2a575",
        "parentId" : "7bb66461-788e-4dba-8d42-9c0ef3f3492c",
        "authorId" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "body" : "Yes",
        "createdAt" : "2021-06-21T17:40:56Z",
        "updatedAt" : "2021-06-21T17:40:56Z",
        "lastEditedBy" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b45d3b64fa1cc30bc22ddb23e06ce94d933b6c9",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +62,66 @@                    if (foundExactMatch || propertyName !== \"include\" || !isArrayLiteralExpression(property.initializer)) return;\n                    const includes = mapDefined(property.initializer.elements, e => isStringLiteral(e) ? e.text : undefined);\n                    if (includes.length === 0) return;\n                    const matchers = getFileMatcherPatterns(configDir, /*excludes*/ [], includes, useCaseSensitiveFileNames, currentDirectory);\n                    // If there isn't some include for this, add a new one."
  },
  {
    "id" : "ea98bc1e-1407-4a8b-9d5d-0628f7bc836d",
    "prId" : 35234,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/35234#pullrequestreview-320353643",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33f5b0e5-8220-4679-96e3-5b9f74f007d7",
        "parentId" : null,
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "instead of passing array of paths pass in files themselves so that we don't need to allocate array everytime. \r\nYou can use `find or contains` instead on array to do the search",
        "createdAt" : "2019-11-20T19:58:35Z",
        "updatedAt" : "2019-11-20T21:53:06Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "63bffa1d-8ae1-46a6-a1b6-4aa4c360966e",
        "parentId" : "33f5b0e5-8220-4679-96e3-5b9f74f007d7",
        "authorId" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "body" : "Done.",
        "createdAt" : "2019-11-20T21:53:52Z",
        "updatedAt" : "2019-11-20T21:53:52Z",
        "lastEditedBy" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "fce94ee571fbd06b5630d52498a1651c21f330ec",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +152,156 @@                        // If we're at the new location (file was already renamed), need to redo module resolution starting from the old location.\n                        // TODO:GH#18217\n                        ? getSourceFileToImportFromResolved(resolveModuleName(importLiteral.text, oldImportFromPath, program.getCompilerOptions(), host as ModuleResolutionHost),\n                                                            oldToNew, allFiles)\n                        : getSourceFileToImport(importedModuleSymbol, importLiteral, sourceFile, program, host, oldToNew);"
  },
  {
    "id" : "11e6fbad-e161-4596-ae31-f2c4ce94ef03",
    "prId" : 24305,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/24305#pullrequestreview-124972416",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4b2d70e-e0f4-47e8-8acf-98a99d79ff54",
        "parentId" : null,
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "This still handles the path as is but you need to be able to handle include/exclude/file like: \r\n\"files\": \"src/foo.ts\" or \"./src/foo.ts\",  \"../src/foo.ts\" etc?",
        "createdAt" : "2018-05-31T20:15:52Z",
        "updatedAt" : "2018-06-01T14:41:43Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "a1d90051-e9d0-41e1-a249-b30b0c344347",
        "parentId" : "d4b2d70e-e0f4-47e8-8acf-98a99d79ff54",
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "For include/exclude we don't just call this directly, see `tryUpdateString`. First we prepend the config directory to the path, call oldToNew, then convert to a relative path again.",
        "createdAt" : "2018-05-31T20:54:58Z",
        "updatedAt" : "2018-06-01T14:41:43Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a73698e9050477fcf9a2655831a2941de0823bb",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +17,21 @@        const canonicalOldPath = getCanonicalFileName(oldFileOrDirPath);\n        return path => {\n            const canonicalPath = getCanonicalFileName(path);\n            if (canonicalPath === canonicalOldPath) return newFileOrDirPath;\n            const suffix = tryRemoveDirectoryPrefix(canonicalPath, canonicalOldPath);"
  },
  {
    "id" : "bd7956c0-de42-4c03-bb9e-03caa3c85c90",
    "prId" : 22167,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/22167#pullrequestreview-117680557",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef109099-fac0-4ff0-a101-36ff33a6db65",
        "parentId" : null,
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "Nit: That function isn't declared to accept `undefined` inputs",
        "createdAt" : "2018-05-04T17:01:22Z",
        "updatedAt" : "2018-05-04T18:16:21Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4143ae0c15acae0015f5aa00e8e2391ef156388",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +17,21 @@    function updateTsconfigFiles(program: Program, changeTracker: textChanges.ChangeTracker, oldFilePath: string, newFilePath: string): void {\n        const configFile = program.getCompilerOptions().configFile;\n        const oldFile = getTsConfigPropArrayElementValue(configFile, \"files\", oldFilePath);\n        if (oldFile) {\n            changeTracker.replaceRangeWithText(configFile, createStringRange(oldFile, configFile), newFilePath);"
  }
]