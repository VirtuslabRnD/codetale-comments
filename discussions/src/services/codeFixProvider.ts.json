[
  {
    "id" : "9f600fbb-5225-45d5-a605-42477a4de095",
    "prId" : 37436,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/37436#pullrequestreview-377054989",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3123b5be-1091-4df0-8387-88bdbf75e014",
        "parentId" : null,
        "authorId" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "body" : "Huh, I guess we’ve never offered code fixes for syntactic errors before. ",
        "createdAt" : "2020-03-18T16:52:46Z",
        "updatedAt" : "2020-03-18T16:53:37Z",
        "lastEditedBy" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "tags" : [
        ]
      }
    ],
    "commit" : "28d4685752207e10e104b34a05af9dd2478953d8",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +93,97 @@        return [\n            ...program.getSemanticDiagnostics(sourceFile, cancellationToken),\n            ...program.getSyntacticDiagnostics(sourceFile, cancellationToken),\n            ...computeSuggestionDiagnostics(sourceFile, program, cancellationToken)\n        ];"
  },
  {
    "id" : "287d4c94-9830-4e81-8662-6c0a3890d24a",
    "prId" : 35765,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/35765#pullrequestreview-340806983",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11f45af4-ce1f-4a2f-b2df-ed333b81606c",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Does this do work or just retrieve the diagnostics from a cache?  Are syntactic diagnostics implicitly included in one of these categories?",
        "createdAt" : "2020-01-09T19:18:13Z",
        "updatedAt" : "2020-01-09T20:10:55Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "c49f54e9-0782-474e-86dc-dd21cc7b0a0f",
        "parentId" : "11f45af4-ce1f-4a2f-b2df-ed333b81606c",
        "authorId" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "body" : "It does work if necessary, but the way this flow goes, the additional time I’m calling it will always hit the cache.",
        "createdAt" : "2020-01-09T19:37:20Z",
        "updatedAt" : "2020-01-09T20:10:55Z",
        "lastEditedBy" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "tags" : [
        ]
      },
      {
        "id" : "2257cc8b-905b-4e07-9f14-ed60c5c52604",
        "parentId" : "11f45af4-ce1f-4a2f-b2df-ed333b81606c",
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "That was my guess.  Thanks!",
        "createdAt" : "2020-01-09T20:52:39Z",
        "updatedAt" : "2020-01-09T20:52:39Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "533ee915-4958-4633-9acf-a90b73520644",
        "parentId" : "11f45af4-ce1f-4a2f-b2df-ed333b81606c",
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "That was my guess.  Thanks!",
        "createdAt" : "2020-01-09T20:53:23Z",
        "updatedAt" : "2020-01-09T20:53:23Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      }
    ],
    "commit" : "9fd9ce2d7b83c0e49768b22b0ed4c0068b11d839",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +91,95 @@\n    function getDiagnostics({ program, sourceFile, cancellationToken }: CodeFixContextBase) {\n        return program.getSemanticDiagnostics(sourceFile, cancellationToken).concat(computeSuggestionDiagnostics(sourceFile, program, cancellationToken));\n    }\n}"
  },
  {
    "id" : "1de6af05-e91d-4875-8054-46ca3cbbe58c",
    "prId" : 35765,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/35765#pullrequestreview-340827419",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9d7b86e-4fdc-4ed7-9e52-528a96eb706f",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Currently, we only support document scope for fix-all, but we left open the option of supporting project or solution.  Is this going to give us mysterious false negatives if we ever light that up?",
        "createdAt" : "2020-01-09T19:22:43Z",
        "updatedAt" : "2020-01-09T20:10:55Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "ca8cdbd3-0891-45f8-9c60-f5d58cddb588",
        "parentId" : "f9d7b86e-4fdc-4ed7-9e52-528a96eb706f",
        "authorId" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "body" : "I’m not sure I understand the scenario you’re concerned about, but I don’t think that feature could be enabled without doing work in this area in the first place, since all the code fix context types include a source file.",
        "createdAt" : "2020-01-09T19:42:17Z",
        "updatedAt" : "2020-01-09T20:10:55Z",
        "lastEditedBy" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "tags" : [
        ]
      },
      {
        "id" : "e1f9a490-7a12-4193-aac8-c80a821c376c",
        "parentId" : "f9d7b86e-4fdc-4ed7-9e52-528a96eb706f",
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "I read this as only looking for diagnostics in the current file.  What if there are diagnostics in other documents that could be corrected with fix-all?",
        "createdAt" : "2020-01-09T20:52:31Z",
        "updatedAt" : "2020-01-09T20:52:32Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "9c9a4df0-97c9-4489-9f18-71a9cac99caf",
        "parentId" : "f9d7b86e-4fdc-4ed7-9e52-528a96eb706f",
        "authorId" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "body" : "Then this would have to change, along with lots of other stuff in the code fix infrastructure—but it’s unrelated to this PR. I just moved this existing functionality into a new function for reuse.",
        "createdAt" : "2020-01-09T21:31:30Z",
        "updatedAt" : "2020-01-09T21:31:30Z",
        "lastEditedBy" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "tags" : [
        ]
      }
    ],
    "commit" : "9fd9ce2d7b83c0e49768b22b0ed4c0068b11d839",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +91,95 @@\n    function getDiagnostics({ program, sourceFile, cancellationToken }: CodeFixContextBase) {\n        return program.getSemanticDiagnostics(sourceFile, cancellationToken).concat(computeSuggestionDiagnostics(sourceFile, program, cancellationToken));\n    }\n}"
  }
]