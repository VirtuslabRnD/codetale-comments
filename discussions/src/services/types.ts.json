[
  {
    "id" : "d2828ad4-3719-422a-90b7-b7d765c272c6",
    "prId" : 39735,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/39735#pullrequestreview-457936086",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92a77fd7-b452-4288-881d-499e8720b28d",
        "parentId" : null,
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Currently this is number enum, should this be string enum so we can directly match strings in `--serverMode` and pass it down?",
        "createdAt" : "2020-07-24T23:02:08Z",
        "updatedAt" : "2020-08-03T00:45:51Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "1e2cf6ea-7786-4091-a453-8060c2aebb69",
        "parentId" : "92a77fd7-b452-4288-881d-499e8720b28d",
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "I don't feel strongly one way or the other.",
        "createdAt" : "2020-07-29T22:22:40Z",
        "updatedAt" : "2020-08-03T00:45:51Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      }
    ],
    "commit" : "dca0b019b3627f375c9a64fe0ccd12dfe9f6296c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +223,227 @@\n    export enum LanguageServiceMode {\n        Semantic,\n        ApproximateSemanticOnly,\n        SyntaxOnly,"
  },
  {
    "id" : "885a8e1b-30ec-4b52-984a-facd5f30185d",
    "prId" : 36740,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/36740#pullrequestreview-373746247",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04a41b70-75b9-488c-a095-f5d0713fb9c3",
        "parentId" : null,
        "authorId" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "body" : "ðŸ’¯ ",
        "createdAt" : "2020-03-12T17:58:57Z",
        "updatedAt" : "2020-03-13T16:14:54Z",
        "lastEditedBy" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "tags" : [
        ]
      }
    ],
    "commit" : "d55a90688139586eedea0ffe708e252cccf406b7",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +389,393 @@        /**\n         * Gets semantic information about the identifier at a particular position in a\n         * file. Quick info is what you typically see when you hover in an editor.\n         *\n         * @param fileName The path to the file"
  },
  {
    "id" : "39afbd06-3b23-4960-9aa9-34f5fb2fbc42",
    "prId" : 30829,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/30829#pullrequestreview-274985224",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a47c134e-f648-4e9e-bc0c-3e3fbad0048e",
        "parentId" : null,
        "authorId" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "body" : "Where is this implemented? For `Identifier` this is implemented on `IdentifierObject` in *services.ts*, but I don't see a similar implementation for private names.",
        "createdAt" : "2019-07-02T03:17:18Z",
        "updatedAt" : "2019-12-24T10:22:58Z",
        "lastEditedBy" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "tags" : [
        ]
      },
      {
        "id" : "88788082-3eca-41e5-8457-8478e740f14c",
        "parentId" : "a47c134e-f648-4e9e-bc0c-3e3fbad0048e",
        "authorId" : "7c818427-dca2-4bb8-94a1-f7e70e4a264a",
        "body" : "@rbuckton So I can fix this:\r\n-  What does IdentifierObject do?\r\n- Do you have any advice for what sort of failing tests I can add that will point me toward what to do with `PrivateIdentifierObject`? Thanks for your help.",
        "createdAt" : "2019-07-16T15:31:41Z",
        "updatedAt" : "2019-12-24T10:22:58Z",
        "lastEditedBy" : "7c818427-dca2-4bb8-94a1-f7e70e4a264a",
        "tags" : [
        ]
      },
      {
        "id" : "7cb0e632-b91a-4f20-8e84-99f0b3f5ac0f",
        "parentId" : "a47c134e-f648-4e9e-bc0c-3e3fbad0048e",
        "authorId" : "7c818427-dca2-4bb8-94a1-f7e70e4a264a",
        "body" : "ping @rbuckton: Do we need to make a `PrivateIdentifierObject`? If so, what kinds of test cases should we add? If we don't need it, we can remove the interface.\r\n\r\nI looked at what `IdentifierObject` is for and don't fully understand. It seems to be used by the language service when creating nodes in refactors, but I'm missing what makes identifiers importantly different from other tokens for this purpose.",
        "createdAt" : "2019-07-24T12:27:57Z",
        "updatedAt" : "2019-12-24T10:22:58Z",
        "lastEditedBy" : "7c818427-dca2-4bb8-94a1-f7e70e4a264a",
        "tags" : [
        ]
      },
      {
        "id" : "fd159926-3974-4218-afdb-b67aeafc5b69",
        "parentId" : "a47c134e-f648-4e9e-bc0c-3e3fbad0048e",
        "authorId" : "1c234539-d1cf-47be-a7ac-0232cd77980a",
        "body" : "TODO: remove this interface",
        "createdAt" : "2019-08-02T20:13:18Z",
        "updatedAt" : "2019-12-24T10:22:58Z",
        "lastEditedBy" : "1c234539-d1cf-47be-a7ac-0232cd77980a",
        "tags" : [
        ]
      },
      {
        "id" : "673db59f-1226-43a8-b01e-9964f03ecd11",
        "parentId" : "a47c134e-f648-4e9e-bc0c-3e3fbad0048e",
        "authorId" : "7c818427-dca2-4bb8-94a1-f7e70e4a264a",
        "body" : "Used in the codefix, where we followed a similar pattern to what was done for Identifier. Still not 100% sure I understand the pattern, but if TS team :thumbsup: then that's good.\r\n",
        "createdAt" : "2019-08-14T15:54:28Z",
        "updatedAt" : "2019-12-24T10:22:58Z",
        "lastEditedBy" : "7c818427-dca2-4bb8-94a1-f7e70e4a264a",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbb84d1e81b35f944d994f6c71c3eda40f944b85",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +32,36 @@\n    export interface PrivateIdentifier {\n        readonly text: string;\n    }\n"
  },
  {
    "id" : "1657892a-0b82-41d3-9d9f-10749e882cea",
    "prId" : 24074,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/24074#pullrequestreview-119938848",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1516c28a-4cdc-4ae7-be33-093644dcdf67",
        "parentId" : null,
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "Is it worth noting that it may have been mapped multiple times and that (from what I can tell) this isnt currently the original-original, but rather just one step back from the final mapping?",
        "createdAt" : "2018-05-12T00:42:42Z",
        "updatedAt" : "2018-05-15T01:27:36Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      },
      {
        "id" : "a17be82a-5b59-4097-8010-6efe1a1dffdb",
        "parentId" : "1516c28a-4cdc-4ae7-be33-093644dcdf67",
        "authorId" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "body" : "I'll update the code to return the true original",
        "createdAt" : "2018-05-14T17:44:44Z",
        "updatedAt" : "2018-05-15T01:27:36Z",
        "lastEditedBy" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "tags" : [
        ]
      }
    ],
    "commit" : "f01338fa338c3efdd628cc45970593a091de1b9f",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +546,550 @@        /**\n         * If the span represents a location that was remapped (e.g. via a .d.ts.map file),\n         * then the original filename and span will be specified here\n         */\n        originalTextSpan?: TextSpan;"
  },
  {
    "id" : "7cc418f2-58fb-462a-94e4-db10d9d3c1e0",
    "prId" : 19687,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/19687#pullrequestreview-74651674",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f537cc58-8855-4e66-9c7f-5d133f651c2b",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "This name suggests we're going to have a separate opt-in for each kind of completion that might return an action.  Is that the plan?",
        "createdAt" : "2017-11-06T23:51:11Z",
        "updatedAt" : "2017-11-06T23:51:11Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "c4c86299-a5de-467e-8150-8b6381784603",
        "parentId" : "f537cc58-8855-4e66-9c7f-5d133f651c2b",
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "I could not think of another feature that we would add, and thus did not have a frame of reference. We also got feedback form the VSCode team that they would like to be able to disable the feature altogether, and incidentally from [customer reports](https://github.com/Microsoft/TypeScript/issues/19764) later on.",
        "createdAt" : "2017-11-07T06:50:28Z",
        "updatedAt" : "2017-11-07T06:50:28Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdd1ca11c0b05c38f4883555e29596fad68c832d",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +312,316 @@\n    export interface GetCompletionsAtPositionOptions {\n        includeExternalModuleExports: boolean;\n    }\n"
  },
  {
    "id" : "74907d05-e7c1-4aae-b6c3-7135c3cd60b3",
    "prId" : 17092,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/17092#pullrequestreview-49321433",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57a6a808-2d4a-4990-a5fb-c7dea7573c03",
        "parentId" : null,
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "Is it ok to change this? Does this count as a breaking change?",
        "createdAt" : "2017-07-11T17:46:13Z",
        "updatedAt" : "2017-07-11T20:38:17Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      },
      {
        "id" : "56bbadbb-4754-4a9a-be2a-cf03df3eeb4e",
        "parentId" : "57a6a808-2d4a-4990-a5fb-c7dea7573c03",
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "Technically, but code should never have modified the extensions array anyway.",
        "createdAt" : "2017-07-11T20:35:53Z",
        "updatedAt" : "2017-07-11T20:38:17Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "52ce0aa0434909614ee22d4396d696c0bcf81a38",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +165,169 @@         * Without these methods, only completions for ambient modules will be provided.\n         */\n        readDirectory?(path: string, extensions?: ReadonlyArray<string>, exclude?: ReadonlyArray<string>, include?: ReadonlyArray<string>, depth?: number): string[];\n        readFile?(path: string, encoding?: string): string;\n        fileExists?(path: string): boolean;"
  },
  {
    "id" : "3b41bf7d-fe59-4071-9328-bf997b6ea24f",
    "prId" : 12856,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/12856#pullrequestreview-12548705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9bc273f2-f804-4f64-a1ad-6b0becc8bd3a",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "I'm not sure about the naming scheme in services, but I'd prefer a terser name, like JSDocTag.",
        "createdAt" : "2016-12-12T19:20:17Z",
        "updatedAt" : "2016-12-12T22:15:16Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "6a275bd6-32bf-4d4a-ba3d-69c17b123da0",
        "parentId" : "9bc273f2-f804-4f64-a1ad-6b0becc8bd3a",
        "authorId" : "b2271d8e-c891-40a3-9f31-5d00a14b32ce",
        "body" : "Me too. But there's already a ts.JSDocTag type and it's not quite what I want....",
        "createdAt" : "2016-12-12T21:01:50Z",
        "updatedAt" : "2016-12-12T22:15:16Z",
        "lastEditedBy" : "b2271d8e-c891-40a3-9f31-5d00a14b32ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "2875d5bc707661638adfecd661c900f980a745cc",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +495,499 @@    }\n\n    export interface JSDocTagInfo {\n        name: string;\n        text?: string;"
  }
]