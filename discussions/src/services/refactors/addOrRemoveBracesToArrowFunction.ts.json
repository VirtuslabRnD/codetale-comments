[
  {
    "id" : "dfa3ab3c-85e8-4830-b78f-5a35729e8bde",
    "prId" : 38378,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/38378#pullrequestreview-422318700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a15a79e1-859b-45c5-8b90-f68c261931b1",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Unfortunately, JS doesn't have named arguments.  Instead, when we're passing a boolean, we tend to give the parameter name as a `/*comment*/` before the argument (unless the boolean already has a descriptive name, of course).",
        "createdAt" : "2020-06-02T01:07:52Z",
        "updatedAt" : "2020-06-03T17:08:31Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "b436d9fd-d619-4657-a598-b77eb1963f82",
        "parentId" : "a15a79e1-859b-45c5-8b90-f68c261931b1",
        "authorId" : "bb7feee5-7089-4110-a20e-a163a6be1501",
        "body" : "It wasn't my intention to pass a named argument, but to pass whatever `triggerReason === \"invoked\"` evaluates to (`false` if `triggerReason` is `\"implicit\"` or `undefined`. Did I do that incorrectly?",
        "createdAt" : "2020-06-02T03:31:28Z",
        "updatedAt" : "2020-06-03T17:08:31Z",
        "lastEditedBy" : "bb7feee5-7089-4110-a20e-a163a6be1501",
        "tags" : [
        ]
      }
    ],
    "commit" : "d88ea4e1f8eb6ebc90e79d90030488175485109d",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +18,22 @@    function getAvailableActions(context: RefactorContext): readonly ApplicableRefactorInfo[] {\n        const { file, startPosition, triggerReason } = context;\n        const info = getConvertibleArrowFunctionAtPosition(file, startPosition, triggerReason === \"invoked\");\n        if (!info) return emptyArray;\n"
  },
  {
    "id" : "b573497f-711f-416a-b24b-ad1d4c090f1f",
    "prId" : 37871,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/37871#pullrequestreview-435263262",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7df1d407-f9b2-4fa0-8a94-16036c8179dc",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Can this still return `undefined`?  When?",
        "createdAt" : "2020-06-22T20:49:40Z",
        "updatedAt" : "2020-06-22T21:09:44Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf992adf4bc5ee923a93b51bcaf230ec713f2086",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +99,103 @@    }\n\n    function getConvertibleArrowFunctionAtPosition(file: SourceFile, startPosition: number, considerFunctionBodies = true): InfoOrError | undefined {\n        const node = getTokenAtPosition(file, startPosition);\n        const func = getContainingFunction(node);"
  },
  {
    "id" : "3cddab3f-d56d-4069-bfd6-5136af303018",
    "prId" : 37871,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/37871#pullrequestreview-435263262",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83498aa1-a584-47ad-9183-45a61edd3bc5",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Maybe this type should be generic and reused?",
        "createdAt" : "2020-06-22T20:53:34Z",
        "updatedAt" : "2020-06-22T21:09:44Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf992adf4bc5ee923a93b51bcaf230ec713f2086",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +16,20 @@    }\n\n    type InfoOrError = {\n        info: Info,\n        error?: never"
  },
  {
    "id" : "aa96ae2a-acc8-4938-ba9b-3ad7574e58ab",
    "prId" : 37871,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/37871#pullrequestreview-435263262",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e862977-db44-495b-8680-9d9b07abefdb",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Personally, I'd take the hit and rename the outer `info` so we don't have `info.info` everywhere.  Maybe `result`?",
        "createdAt" : "2020-06-22T20:54:49Z",
        "updatedAt" : "2020-06-22T21:09:44Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf992adf4bc5ee923a93b51bcaf230ec713f2086",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +26,30 @@    function getAvailableActions(context: RefactorContext): readonly ApplicableRefactorInfo[] {\n        const { file, startPosition, triggerReason } = context;\n        const info = getConvertibleArrowFunctionAtPosition(file, startPosition, triggerReason === \"invoked\");\n        if (!info) return emptyArray;\n"
  },
  {
    "id" : "a30d6523-7eec-441c-aeae-87da54208a8d",
    "prId" : 37871,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/37871#pullrequestreview-435263262",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fc4d58c-5005-46ee-805c-cbf286ffef39",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Or any other sort of containing function?",
        "createdAt" : "2020-06-22T20:55:56Z",
        "updatedAt" : "2020-06-22T21:09:44Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf992adf4bc5ee923a93b51bcaf230ec713f2086",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +105,109 @@        if (!func) {\n            return {\n                error: getLocaleSpecificMessage(Diagnostics.Could_not_find_a_containing_arrow_function)\n            };\n        }"
  },
  {
    "id" : "c09e49ee-15e0-4d11-8068-3eee2eaef5e2",
    "prId" : 37871,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/37871#pullrequestreview-435263262",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6084ac16-9beb-4307-8ea9-5b3883b68aa0",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "In other places, this is a non-null check on `info.info`.",
        "createdAt" : "2020-06-22T20:58:56Z",
        "updatedAt" : "2020-06-22T21:09:44Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf992adf4bc5ee923a93b51bcaf230ec713f2086",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@        if (!info) return emptyArray;\n\n        if (info.error === undefined) {\n            return [{\n                name: refactorName,"
  },
  {
    "id" : "4104ed8e-ab58-4cd1-a8ec-13ebf7574386",
    "prId" : 37871,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/37871#pullrequestreview-435263262",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7f1a0a4-5451-4d15-b365-81e3065b01b6",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Without having read the code in detail, it seems intuitively unlikely to me that add-braces and remove-braces would fail for the same reason.",
        "createdAt" : "2020-06-22T21:00:39Z",
        "updatedAt" : "2020-06-22T21:09:44Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf992adf4bc5ee923a93b51bcaf230ec713f2086",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +53,57 @@                    name: addBracesActionName,\n                    description: addBracesActionDescription,\n                    notApplicableReason: info.error\n                }, {\n                    name: removeBracesActionName,"
  },
  {
    "id" : "5f28ab3c-bee1-4a60-8d8f-b9db2f1fac6a",
    "prId" : 35937,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/35937#pullrequestreview-392349571",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f91656a0-4296-4b71-8904-6d9682441982",
        "parentId" : null,
        "authorId" : "bb7feee5-7089-4110-a20e-a163a6be1501",
        "body" : "`copyTrailingAsLeadingComments` needs to come before `copyLeadingComments` or it will flip the order of the two.",
        "createdAt" : "2020-04-13T18:10:30Z",
        "updatedAt" : "2020-04-15T16:40:33Z",
        "lastEditedBy" : "bb7feee5-7089-4110-a20e-a163a6be1501",
        "tags" : [
        ]
      },
      {
        "id" : "0cd799dc-7346-4c5a-a725-c27c09f0c2ef",
        "parentId" : "f91656a0-4296-4b71-8904-6d9682441982",
        "authorId" : "167be9bb-09c3-49d4-835a-18b376a5ea46",
        "body" : "Ah whoops! Thanks for catching that. ",
        "createdAt" : "2020-04-13T18:45:57Z",
        "updatedAt" : "2020-04-15T16:40:33Z",
        "lastEditedBy" : "167be9bb-09c3-49d4-835a-18b376a5ea46",
        "tags" : [
        ]
      }
    ],
    "commit" : "bafec5f84ec1c3b043b060f1403ec6299fe0744c",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +56,60 @@            body = needsParentheses(actualExpression) ? createParen(actualExpression) : actualExpression;\n            suppressLeadingAndTrailingTrivia(body);\n            copyTrailingAsLeadingComments(returnStatement, body, file, SyntaxKind.MultiLineCommentTrivia, /* hasTrailingNewLine */ false);\n            copyLeadingComments(returnStatement, body, file, SyntaxKind.MultiLineCommentTrivia, /* hasTrailingNewLine */ false);\n            copyTrailingComments(returnStatement, body, file, SyntaxKind.MultiLineCommentTrivia, /* hasTrailingNewLine */ false);"
  },
  {
    "id" : "8dff80d0-7755-448d-97a3-bc5fa3848f2c",
    "prId" : 23423,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/23423#pullrequestreview-123112298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "adccbadc-5d5e-4ca6-996b-3444596c44c6",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "I'm not sure I understand why `expression` is required, but can be undefined, whereas `returnStatement` is optional.  Should they follow the same pattern?",
        "createdAt" : "2018-05-24T18:20:14Z",
        "updatedAt" : "2018-06-08T17:33:18Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d730c008aecc72a635b88b9c5a1866611f66e14",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +11,15 @@    interface Info {\n        func: ArrowFunction;\n        expression: Expression | undefined;\n        returnStatement?: ReturnStatement;\n        addBraces: boolean;"
  },
  {
    "id" : "a6d4e1d7-2258-485b-95a2-a941bb88b313",
    "prId" : 23423,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/23423#pullrequestreview-127246983",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87778520-fb01-49c5-9944-b0ec19c54945",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Does it matter whether this agrees with `info.addBraces`?",
        "createdAt" : "2018-05-24T18:21:52Z",
        "updatedAt" : "2018-06-08T17:33:18Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "7cd9b114-65e2-40dd-975f-c0f313426f01",
        "parentId" : "87778520-fb01-49c5-9944-b0ec19c54945",
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "What happened with this?",
        "createdAt" : "2018-06-08T17:21:12Z",
        "updatedAt" : "2018-06-08T17:33:18Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d730c008aecc72a635b88b9c5a1866611f66e14",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@\n        let body: ConciseBody;\n        if (actionName === addBracesActionName) {\n            const returnStatement = createReturn(expression);\n            body = createBlock([returnStatement], /* multiLine */ true);"
  }
]