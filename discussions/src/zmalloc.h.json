[
  {
    "id" : "f3b5128a-79fd-4b88-9a98-5d1a1503fe1a",
    "prId" : 8554,
    "prUrl" : "https://github.com/redis/redis/pull/8554#pullrequestreview-598265881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "834314eb-6013-4f57-a57d-70b7fb6c4197",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "so musl does support malloc_size...\r\nwhy not support it implicitly (without requiring the USE_MALLOC_USABLE_SIZE macro? (in which case we can remove it from daily.yaml)",
        "createdAt" : "2021-02-25T07:14:43Z",
        "updatedAt" : "2021-02-25T07:16:48Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "89124053-c47e-4174-9273-66c9d49febaa",
        "parentId" : "834314eb-6013-4f57-a57d-70b7fb6c4197",
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "It appears there's no reliable way to detect it (`musl` or explicitly existence of `malloc_usable_size`) based on header files (`autoconf` would do it in a breeze).",
        "createdAt" : "2021-02-25T07:22:36Z",
        "updatedAt" : "2021-02-25T07:22:36Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      },
      {
        "id" : "d9894300-26ed-4172-b55c-d86a3bb90c5d",
        "parentId" : "834314eb-6013-4f57-a57d-70b7fb6c4197",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "musl can't be detected with an `ifdef` like we detect libc? or doe it not always support malloc_size?",
        "createdAt" : "2021-02-25T07:25:20Z",
        "updatedAt" : "2021-02-25T07:25:20Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "29cf1985-6d44-4619-85a8-67b31df412b2",
        "parentId" : "834314eb-6013-4f57-a57d-70b7fb6c4197",
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "It can't.",
        "createdAt" : "2021-02-25T07:33:50Z",
        "updatedAt" : "2021-02-25T07:33:50Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      }
    ],
    "commit" : "13a6535938faaba177e9a2c04c7e5bf38a2407f3",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +74,78 @@#if !defined(NO_MALLOC_USABLE_SIZE) && \\\n    (defined(__GLIBC__) || defined(__FreeBSD__) || \\\n     defined(USE_MALLOC_USABLE_SIZE))\n#include <malloc.h>\n#define HAVE_MALLOC_SIZE 1"
  },
  {
    "id" : "ac2b9930-e5c3-4b60-a8e7-376c0d6bdf73",
    "prId" : 8554,
    "prUrl" : "https://github.com/redis/redis/pull/8554#pullrequestreview-598270124",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d98feebb-dd1f-48f0-be93-094736da4308",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "any reason not to support that explicit macro with jemalloc too?",
        "createdAt" : "2021-02-25T07:15:16Z",
        "updatedAt" : "2021-02-25T07:16:48Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "46ed21aa-4ffc-4f0e-b596-3236f7e994e1",
        "parentId" : "d98feebb-dd1f-48f0-be93-094736da4308",
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "Just for the sake of simplicity.",
        "createdAt" : "2021-02-25T07:23:08Z",
        "updatedAt" : "2021-02-25T07:23:08Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      },
      {
        "id" : "710139f0-6cae-40e4-beb2-4f63ab722de2",
        "parentId" : "d98feebb-dd1f-48f0-be93-094736da4308",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "i think some (rare) users may want to explicitly disable for jemalloc too.",
        "createdAt" : "2021-02-25T07:24:20Z",
        "updatedAt" : "2021-02-25T07:24:20Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "acb92c01-e312-4af8-beb9-052bc2dc9c0d",
        "parentId" : "d98feebb-dd1f-48f0-be93-094736da4308",
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "Right now it satisfies package maintainers on non-jemalloc platforms and testing needs, I think modifying the code is justified for anything else (and if we come across a good reason we can add that).\r\n\r\nThe feature/platform detection matrix and resulting defines is complex enough, I'd really want to avoid any additional complexity. Having the temptation to pull `autoconf` in is not a good sign ðŸ˜„",
        "createdAt" : "2021-02-25T07:40:54Z",
        "updatedAt" : "2021-02-25T07:40:54Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      }
    ],
    "commit" : "13a6535938faaba177e9a2c04c7e5bf38a2407f3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +63,67 @@\n/* On native libc implementations, we should still do our best to provide a\n * HAVE_MALLOC_SIZE capability. This can be set explicitly as well:\n *\n * NO_MALLOC_USABLE_SIZE disables it on all platforms, even if they are"
  }
]