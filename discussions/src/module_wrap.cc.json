[
  {
    "id" : "aa6b8bc8-9369-4521-a46c-2ae4e32d4f0f",
    "prId" : 17281,
    "prUrl" : "https://github.com/nodejs/node/pull/17281#pullrequestreview-78814923",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8767d297-e058-4c0c-b482-e85d2bd470d6",
        "parentId" : null,
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "I could just use `FATAL_ERROR` here and undo the change to node_internals.h but I figured it might be nice to distinguish between \"normal\" fatal errors and ones from the esm module loader.",
        "createdAt" : "2017-11-24T01:08:16Z",
        "updatedAt" : "2017-11-29T11:29:13Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "597b3d1941b09d20781b56c6f154cd39acb8dcb0",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +111,115 @@      CHECK(!try_catch.Exception().IsEmpty());\n      AppendExceptionLine(env, try_catch.Exception(), try_catch.Message(),\n                          ErrorHandlingMode::MODULE_ERROR);\n      try_catch.ReThrow();\n      return;"
  },
  {
    "id" : "4c7a467f-356f-4399-ba9c-776a0929037d",
    "prId" : 26745,
    "prUrl" : "https://github.com/nodejs/node/pull/26745#pullrequestreview-219517799",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dca7d498-2da4-414c-b018-a09db60d6bf7",
        "parentId" : null,
        "authorId" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "body" : "I do not know in what way this legacy mode should work or not but the original implementation also checks for `package.json` in directories and resolves the `main` entry afterwards. I see that there is some part that checks for this but I do not know if it is related or not but I do not think so.",
        "createdAt" : "2019-03-27T14:12:08Z",
        "updatedAt" : "2019-03-27T19:52:37Z",
        "lastEditedBy" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "tags" : [
        ]
      },
      {
        "id" : "667c834f-ea59-4033-8180-2d20f7ed96ac",
        "parentId" : "dca7d498-2da4-414c-b018-a09db60d6bf7",
        "authorId" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "body" : "Yes, this path is just for the main only, since that must always be backwards compatible, while the other path under the resolution flag Node.js mode handles directories.",
        "createdAt" : "2019-03-27T14:56:40Z",
        "updatedAt" : "2019-03-27T19:52:37Z",
        "lastEditedBy" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1094dbe19f31f7a69ad16d193748f610b159073",
    "line" : 307,
    "diffHunk" : "@@ -1,1 +702,706 @@    return Just(guess);\n  }\n  // Not found.\n  return Nothing<URL>();\n}"
  },
  {
    "id" : "d457cede-34f1-489c-abb3-1ec42f18f674",
    "prId" : 30370,
    "prUrl" : "https://github.com/nodejs/node/pull/30370#pullrequestreview-408698182",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb92b065-63a9-4f9b-bd63-119648028348",
        "parentId" : null,
        "authorId" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "body" : "Could you leave a comment explaining this change?",
        "createdAt" : "2020-05-10T02:08:36Z",
        "updatedAt" : "2020-05-14T17:39:45Z",
        "lastEditedBy" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ae5262f448295e314393dad4c491259793cea3f",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +382,386 @@  if (env->isolate_data()->options()->experimental_top_level_await) {\n    args.GetReturnValue().Set(result.ToLocalChecked());\n  }\n}\n"
  },
  {
    "id" : "31bc3765-2b35-430e-bfd5-f11b052eb686",
    "prId" : 30370,
    "prUrl" : "https://github.com/nodejs/node/pull/30370#pullrequestreview-409878905",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f58ac437-ecb1-41f0-af22-44d706bdf805",
        "parentId" : null,
        "authorId" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "body" : "Should this maybe still be the v8 flag check? In case someone sets `--harmony-top-level-await`.",
        "createdAt" : "2020-05-12T06:24:02Z",
        "updatedAt" : "2020-05-14T17:39:45Z",
        "lastEditedBy" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "tags" : [
        ]
      },
      {
        "id" : "d61a68c5-13f5-4977-8cf4-9d99fce88add",
        "parentId" : "f58ac437-ecb1-41f0-af22-44d706bdf805",
        "authorId" : "af965d24-c34b-4c03-8ff1-5a5da6036269",
        "body" : "`--harmony-top-level-await` implies `--experimental-top-level-await` and vice versa.",
        "createdAt" : "2020-05-12T06:25:18Z",
        "updatedAt" : "2020-05-14T17:39:45Z",
        "lastEditedBy" : "af965d24-c34b-4c03-8ff1-5a5da6036269",
        "tags" : [
        ]
      },
      {
        "id" : "822eaba7-ef91-48d3-ab23-a00197e8476e",
        "parentId" : "f58ac437-ecb1-41f0-af22-44d706bdf805",
        "authorId" : "1c421e00-622f-462d-b016-76ed4c9b8370",
        "body" : "I still think that this needs a different solution as we need to get it running even without a flag later we can not depend on the flag for that.",
        "createdAt" : "2020-05-12T09:48:44Z",
        "updatedAt" : "2020-05-14T17:39:45Z",
        "lastEditedBy" : "1c421e00-622f-462d-b016-76ed4c9b8370",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ae5262f448295e314393dad4c491259793cea3f",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +380,384 @@  // which could be a promise, which would result in it being incorrectly\n  // unwrapped when the higher level code awaits the evaluation.\n  if (env->isolate_data()->options()->experimental_top_level_await) {\n    args.GetReturnValue().Set(result.ToLocalChecked());\n  }"
  },
  {
    "id" : "a3db586f-8b17-453a-a8f2-00d71855db0e",
    "prId" : 37176,
    "prUrl" : "https://github.com/nodejs/node/pull/37176#pullrequestreview-583813240",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cab387ab-9f8e-47fd-b221-b6fb55104d72",
        "parentId" : null,
        "authorId" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "body" : "```suggestion\r\n      if (assertions\r\n          ->Set(env->context(),\r\n                Local<String>::Cast(raw_assertions->Get(env->context(), i)),\r\n                Local<Value>::Cast(raw_assertions->Get(env->context(), i + 1)))\r\n          .IsNothing()) { return; }\r\n```",
        "createdAt" : "2021-02-04T20:01:24Z",
        "updatedAt" : "2021-03-23T16:04:15Z",
        "lastEditedBy" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "tags" : [
        ]
      },
      {
        "id" : "d2043bce-a012-4b6f-aa01-a67766c614a3",
        "parentId" : "cab387ab-9f8e-47fd-b221-b6fb55104d72",
        "authorId" : "af965d24-c34b-4c03-8ff1-5a5da6036269",
        "body" : "maybe a null proto object would be more appropriate anyway?",
        "createdAt" : "2021-02-04T21:07:08Z",
        "updatedAt" : "2021-03-23T16:04:15Z",
        "lastEditedBy" : "af965d24-c34b-4c03-8ff1-5a5da6036269",
        "tags" : [
        ]
      }
    ],
    "commit" : "26eed3e0edc9bcfe40de2ad5f21218fddbcec173",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +295,299 @@                Local<String>::Cast(raw_assertions->Get(env->context(), i)),\n                Local<Value>::Cast(raw_assertions->Get(env->context(), i + 1)))\n          .ToChecked();\n    }\n"
  }
]