[
  {
    "id" : "4a18731b-102f-453b-8330-75dc07a397b9",
    "prId" : 43992,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/43992#pullrequestreview-654544561",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a51eedb-573f-460f-9246-33517199b666",
        "parentId" : null,
        "authorId" : "9302e396-f4ae-400e-962a-ed2cd3258fdf",
        "body" : "So I can use the 'encoded' classifications routes in the server",
        "createdAt" : "2021-05-07T14:52:30Z",
        "updatedAt" : "2021-05-07T14:54:57Z",
        "lastEditedBy" : "9302e396-f4ae-400e-962a-ed2cd3258fdf",
        "tags" : [
        ]
      }
    ],
    "commit" : "528e46e93b261a48f59a4b575f50820fbe60d7ab",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +2752,2756 @@                this.raiseError(`encodedSemanticClassificationsLength failed - expected total spans to be ${expected} got ${actual.spans.length}`);\n            }\n        }\n\n        public verifySemanticClassifications(format: ts.SemanticClassificationFormat, expected: { classificationType: string | number; text?: string }[]) {"
  },
  {
    "id" : "5c5251ea-c6d6-4a1e-8420-90bff6d798d7",
    "prId" : 43780,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/43780#pullrequestreview-642471386",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1a38499-dc08-4fcb-9bd2-a2ea797d0d91",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "lol @ fourslash",
        "createdAt" : "2021-04-22T17:12:49Z",
        "updatedAt" : "2021-04-22T17:14:22Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "f7f6739a79b07c77ae7444adeab9c1b4201ccc7a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3172,3176 @@                this.goToMarker(markerName);\n                const actual = this.languageService.getJsxClosingTagAtPosition(this.activeFile.fileName, this.currentCaretPosition);\n                assert.deepEqual(actual, map[markerName], markerName);\n            }\n        }"
  },
  {
    "id" : "d7ca20f8-6cd0-42a6-87a2-21405c2a6547",
    "prId" : 40835,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/40835#pullrequestreview-502190901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18301de4-94b6-4789-8976-9dc20b77e4ea",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "look to see colour markup in error messages",
        "createdAt" : "2020-10-05T15:54:50Z",
        "updatedAt" : "2020-10-05T16:56:44Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "f07771c7625ec9ba7d4a150a554598fd23540697",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +789,793 @@                const spanContent = fileContent.slice(defs.textSpan.start, ts.textSpanEnd(defs.textSpan));\n                const spanContentWithMarker = spanContent.slice(0, marker.position - defs.textSpan.start) + `/*${startMarkerName}*/` + spanContent.slice(marker.position - defs.textSpan.start);\n                const suggestedFileContent = (fileContent.slice(0, defs.textSpan.start) + `\\x1b[1;4m[|${spanContentWithMarker}|]\\x1b[0;31m` + fileContent.slice(ts.textSpanEnd(defs.textSpan)))\n                    .split(/\\r?\\n/).map(line => \" \".repeat(6) + line).join(ts.sys.newLine);\n                this.raiseError(`goToDefinitionsAndBoundSpan failed. Found a starting TextSpan around '${spanContent}' in '${startFile}' (at position ${defs.textSpan.start}). `"
  },
  {
    "id" : "ad379ba1-3756-4634-9e3e-facf4932f297",
    "prId" : 40558,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/40558#pullrequestreview-488216197",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6adda10c-1e03-47b9-96c5-d44d80a43eaf",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "```suggestion\r\n                    ts.forEach(compilationOptions.lib, addSourceFile);\r\n```",
        "createdAt" : "2020-09-14T23:09:32Z",
        "updatedAt" : "2020-09-14T23:56:21Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "78742dba-5421-4fca-85e6-6d8d93c9bd7d",
        "parentId" : "6adda10c-1e03-47b9-96c5-d44d80a43eaf",
        "authorId" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "body" : "But why though? The only advantage `ts.forEach` has is that it shortcuts exit on return, otherwise the native `forEach` is faster. Also, the original code used `lib?.forEach`: https://github.com/microsoft/TypeScript/pull/40558/files/e348bc9aa81e2db7fe68e1150b80a1dbd4585a6d#diff-ef3d6509d8056f71e3e2ec4b4c766e6aL346",
        "createdAt" : "2020-09-14T23:11:11Z",
        "updatedAt" : "2020-09-14T23:56:21Z",
        "lastEditedBy" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "54681bd197359fae11f240b98d3f52d5603acbd4",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +356,360 @@\n                    addSourceFile(Harness.Compiler.defaultLibFileName);\n                    compilationOptions.lib?.forEach(addSourceFile);\n                }\n            }"
  },
  {
    "id" : "2798d4a2-cf18-4932-9b40-45aa5628c0e9",
    "prId" : 40253,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/40253#pullrequestreview-481055035",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60ee4878-ff4e-460e-8eb2-3e81fe63a8c2",
        "parentId" : null,
        "authorId" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "body" : "Indentation is off",
        "createdAt" : "2020-09-02T17:35:50Z",
        "updatedAt" : "2020-09-02T17:35:50Z",
        "lastEditedBy" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d122890d010a9ead5e56ca26ac66a7c41040c23",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +2872,2876 @@\n                // Undo changes to perform next fix\n                const span = change.textChanges[0].span;\n                 const deletedText = originalContent.substr(span.start, change.textChanges[0].span.length);\n                 const insertedText = change.textChanges[0].newText;"
  },
  {
    "id" : "55c0decd-2b12-429d-af28-c21ebfb780a5",
    "prId" : 39119,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/39119#pullrequestreview-435868367",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48fa37c4-1dce-4551-b881-226b4abc81ff",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "```suggestion\r\n```",
        "createdAt" : "2020-06-22T23:58:28Z",
        "updatedAt" : "2020-09-11T12:23:10Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "e9c67ea4-06d0-4ced-9964-917fe0649fdd",
        "parentId" : "48fa37c4-1dce-4551-b881-226b4abc81ff",
        "authorId" : "9302e396-f4ae-400e-962a-ed2cd3258fdf",
        "body" : "Deleting this would make the function useless: `replaceWithSemanticClassifications` - I just don't leave it in because it breaks out of the fourslash vfs sandbox in the test verifier",
        "createdAt" : "2020-06-23T14:55:05Z",
        "updatedAt" : "2020-09-11T12:23:10Z",
        "lastEditedBy" : "9302e396-f4ae-400e-962a-ed2cd3258fdf",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff748a556da5ec930dec2426e46543f78d297dfa",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +2617,2621 @@            // const testfile = fs.readFileSync(testfilePath, \"utf8\");\n            // const newfile = testfile.replace(\"verify.replaceWithSemanticClassifications(\\\"2020\\\")\", replacement.join(\"\\n\"));\n            // fs.writeFileSync(testfilePath, newfile);\n        }\n"
  },
  {
    "id" : "170f8e34-fc89-45d1-8763-ff9e4886efb6",
    "prId" : 37652,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/37652#pullrequestreview-383255968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdc5c31e-5b30-412a-9d29-c3094b59e3a2",
        "parentId" : null,
        "authorId" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "body" : "Fun fact: `@lib` was parsed as a valid fourslash option, but it didnâ€™t do anything. 10 tests were using it to no effect!",
        "createdAt" : "2020-03-27T23:50:59Z",
        "updatedAt" : "2020-03-31T18:37:56Z",
        "lastEditedBy" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "tags" : [
        ]
      }
    ],
    "commit" : "c078a81474e7772b12f86a8f438fc1617e8bd4fb",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +324,328 @@                        Harness.Compiler.getDefaultLibrarySourceFile()!.text, /*isRootFile*/ false);\n\n                    compilationOptions.lib?.forEach(fileName => {\n                        const libFile = Harness.Compiler.getDefaultLibrarySourceFile(fileName);\n                        ts.Debug.assertIsDefined(libFile, `Could not find lib file '${fileName}'`);"
  },
  {
    "id" : "3eb823b1-320d-4100-a81a-5cfc971c8587",
    "prId" : 37652,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/37652#pullrequestreview-383299494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab892efb-382d-4708-8b82-33c20319c178",
        "parentId" : null,
        "authorId" : "d362cd24-3970-444c-91e8-4307fc9080ed",
        "body" : "The below code is identical to the front, is there any possibilities to reuse it?",
        "createdAt" : "2020-03-28T09:55:20Z",
        "updatedAt" : "2020-03-31T18:37:57Z",
        "lastEditedBy" : "d362cd24-3970-444c-91e8-4307fc9080ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "c078a81474e7772b12f86a8f438fc1617e8bd4fb",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +341,345 @@                });\n                if (!compilationOptions.noLib) {\n                    this.languageServiceAdapterHost.addScript(Harness.Compiler.defaultLibFileName,\n                        Harness.Compiler.getDefaultLibrarySourceFile()!.text, /*isRootFile*/ false);\n"
  },
  {
    "id" : "087f5c10-665a-472e-819e-c02e3248bcd7",
    "prId" : 36409,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/36409#pullrequestreview-359264402",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84b189ec-d7cc-4165-8d15-24dc70563ff9",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "you wouldn't need this type annotation if you would inline `addToIndex` to the body of the for loop...\r\n\r\nprobably not worth the stylistic change though.",
        "createdAt" : "2020-02-14T22:57:16Z",
        "updatedAt" : "2020-02-14T22:59:27Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "8147049a4d47449e622b059258e7234b24fcc16c",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +4086,4090 @@\n    function rangesOfDiffBetweenTwoStrings(source: string, target: string) {\n        const ranges = [] as { start: number; length: number }[];\n\n        const addToIndex = (index: number) => {"
  },
  {
    "id" : "55bde02b-ac68-4d2a-88a8-dc843c0925a9",
    "prId" : 36409,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/36409#pullrequestreview-359264402",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c08d8781-a7a3-463f-a649-58ac560f7709",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "I'm not convinced this algorithm is always going to give correct and pretty ranges, but it probably doesn't matter too much.",
        "createdAt" : "2020-02-14T22:58:33Z",
        "updatedAt" : "2020-02-14T22:59:27Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "8147049a4d47449e622b059258e7234b24fcc16c",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +4104,4108 @@        };\n\n        for (let index = 0; index < Math.max(source.length, target.length); index++) {\n            const srcChar = source[index];\n            const targetChar = target[index];"
  },
  {
    "id" : "bf3a4fe4-ea4a-45b8-b3e8-865be5c42b85",
    "prId" : 36409,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/36409#pullrequestreview-359264402",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5de6f4ed-4750-4623-a986-07310b5ef868",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "just want to double-check, this code is only called from fourslash, so is very very likely to be going to a terminal, right?",
        "createdAt" : "2020-02-14T22:59:02Z",
        "updatedAt" : "2020-02-14T22:59:27Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "8147049a4d47449e622b059258e7234b24fcc16c",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +4119,4123 @@        ranges.forEach((range, index) => {\n            const lhs = `\\x1b[4m`;\n            const rhs = `\\x1b[0m\\x1b[31m`;\n            const additionalOffset = index * lhs.length + index * rhs.length;\n            const before = emTarget.slice(0, range.start + 1 + additionalOffset);"
  }
]