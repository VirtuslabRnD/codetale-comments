[
  {
    "id" : "55f41a7d-7ac7-4f9c-8be3-f887fa74ecd1",
    "prId" : 23191,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/23191#pullrequestreview-114481910",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "234f5b2d-8f0c-4983-8d5e-5a265bd2a840",
        "parentId" : null,
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Interesting.. Why is file2 not part of the project, I thought it would be expected to included in the project?",
        "createdAt" : "2018-04-23T17:09:44Z",
        "updatedAt" : "2018-05-03T00:18:15Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "960426c3-acbc-42ff-a34a-6b931e1dfe3f",
        "parentId" : "234f5b2d-8f0c-4983-8d5e-5a265bd2a840",
        "authorId" : "2c931dbc-99ca-47e2-8c61-01d41737933a",
        "body" : "File2 is a JS file and the tsconfig.json doesn't enable AllowJS. This test checks that by adding a deferred extension it gets the right context but also doesn't affect the JS setting. Hope it makes sense.",
        "createdAt" : "2018-04-23T17:30:19Z",
        "updatedAt" : "2018-05-03T00:18:15Z",
        "lastEditedBy" : "2c931dbc-99ca-47e2-8c61-01d41737933a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8ddc0dabb9395d46327c1c2c032f08adc8e6535",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +3173,3177 @@\n            const configuredProject = configuredProjectAt(projectService, 0);\n            checkProjectActualFiles(configuredProject, [file1.path, tsconfig.path]);\n\n            // Allow allowNonTsExtensions will be set to true for deferred extensions."
  },
  {
    "id" : "d8ce1765-14a7-4260-8c99-00d14ee79541",
    "prId" : 22744,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/22744#pullrequestreview-106660434",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4c3b9bf-ea78-4824-abd1-9c4fdaa25629",
        "parentId" : null,
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Can we have this whole test case as a function and pass in location and compiler options as parameter (with node_modules location and module resolution = node | classic to cover both scenarios )",
        "createdAt" : "2018-03-23T21:57:33Z",
        "updatedAt" : "2018-03-23T22:22:51Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "a69adf272a71db8c4f7b1fe373c5b13d0ca132e3",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +6075,6079 @@                assert.deepEqual(project.getLanguageService().getSemanticDiagnostics(file2.path).map(diag => diag.messageText), [\"Cannot find module 'debug'.\"]);\n\n                const debugTypesFile: FileOrFolder = {\n                    path: `${projectLocation}/node_modules/debug/index.d.ts`,\n                    content: \"export {}\""
  },
  {
    "id" : "85fedb7b-502f-46ac-b05e-7776b34fff15",
    "prId" : 17269,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/17269#pullrequestreview-55112980",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d61cbd37-df59-46ca-a289-bddd0c7379f4",
        "parentId" : null,
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "Instead of calling `checkProjectActualFiles(configuredProjectAt(0), foo)` and then `checkProjectActualFiles(configureProjectAt(1), bar)`, it would be nice to just have `checkProjectsActualFiles(foo, bar)` which would assert that there are only 2 projects. And most uses of `configuredProjectAt(0)` could be changed to `getOnlyProject` which asserts that there aren't any others.",
        "createdAt" : "2017-07-18T19:41:31Z",
        "updatedAt" : "2017-10-03T00:17:02Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      },
      {
        "id" : "f7526a60-4479-46c2-93a5-d04d1a2018a8",
        "parentId" : "d61cbd37-df59-46ca-a289-bddd0c7379f4",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "I would leave this as is as its too much work just to go look for all the instances of configured project query and number of projects checking with not much gain.",
        "createdAt" : "2017-08-09T01:09:03Z",
        "updatedAt" : "2017-10-03T00:17:02Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ac01d76f531661229e183a3490797f2a09ad4bb",
    "line" : 1399,
    "diffHunk" : "@@ -1,1 +2610,2614 @@            });\n            projectService.checkNumberOfProjects({ configuredProjects: 2 });\n            checkProjectActualFiles(configuredProjectAt(projectService, 0), [cLib.path, cTsconfig.path]);\n            checkProjectActualFiles(configuredProjectAt(projectService, 1), [dLib.path, dTsconfig.path]);\n"
  },
  {
    "id" : "193d80ad-5399-46ac-97a3-3334a01329ab",
    "prId" : 12336,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/12336#pullrequestreview-42455503",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d028f618-47bc-46ef-ac6e-7a507466991f",
        "parentId" : null,
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "Casted object literal",
        "createdAt" : "2017-06-06T21:55:02Z",
        "updatedAt" : "2017-06-15T17:00:05Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "09f0b3471a84e5d4de844b1378f85f737d42ec21",
    "line" : 265,
    "diffHunk" : "@@ -1,1 +4012,4016 @@            const projectName = projectService.configuredProjects[0].getProjectName();\n\n            const diags = session.executeCommand(<server.protocol.SemanticDiagnosticsSyncRequest>{\n                type: \"request\",\n                command: server.CommandNames.SemanticDiagnosticsSync,"
  },
  {
    "id" : "6d4461ed-684f-48fa-9b81-023d62edcb84",
    "prId" : 11603,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/11603#pullrequestreview-14696262",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae60f018-dd12-49d9-a73b-a27a00b3653c",
        "parentId" : null,
        "authorId" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "body" : "can you have a test that actually verifies the value of `maxModuleDepth` (i.e. that we are not looking into folders that are located deeper)",
        "createdAt" : "2016-12-28T23:23:54Z",
        "updatedAt" : "2016-12-30T01:00:26Z",
        "lastEditedBy" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "tags" : [
        ]
      },
      {
        "id" : "7afe7e42-2021-42dc-be75-1025c1cf0639",
        "parentId" : "ae60f018-dd12-49d9-a73b-a27a00b3653c",
        "authorId" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "body" : "Updated the test",
        "createdAt" : "2016-12-29T18:27:56Z",
        "updatedAt" : "2016-12-30T01:00:26Z",
        "lastEditedBy" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ac22ecbb04df7fc6bccec93a10fa38a4eea94da",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +3053,3057 @@    });\n\n    describe(\"maxNodeModuleJsDepth for inferred projects\", () => {\n        it(\"should be set to 2 if the project has js root files\", () => {\n            const file1: FileOrFolder = {"
  },
  {
    "id" : "286b5ed7-6232-4673-83e9-5e5db9874e50",
    "prId" : 9837,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83e45ea5-a6ab-4cd8-9aae-baf382da62df",
        "parentId" : null,
        "authorId" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "body" : "why these variables need to be initialized before every test? can you just move them to the outer scope and get rid of `beforeEach`?\n",
        "createdAt" : "2016-08-11T18:29:26Z",
        "updatedAt" : "2016-08-23T23:07:30Z",
        "lastEditedBy" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "tags" : [
        ]
      },
      {
        "id" : "576a4783-dd40-487a-991a-dfb8d8e9b787",
        "parentId" : "83e45ea5-a6ab-4cd8-9aae-baf382da62df",
        "authorId" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "body" : "Because sometimes they can be changed across tests. for example, oftentimes I need to change a file's content within a test, while I want the text to be the original version before starting the next test.\n",
        "createdAt" : "2016-08-11T22:05:12Z",
        "updatedAt" : "2016-08-23T23:07:30Z",
        "lastEditedBy" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "tags" : [
        ]
      },
      {
        "id" : "ab009f75-d970-4b8c-9ffa-eedf677f0c0f",
        "parentId" : "83e45ea5-a6ab-4cd8-9aae-baf382da62df",
        "authorId" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "body" : "ok then\n",
        "createdAt" : "2016-08-16T16:52:09Z",
        "updatedAt" : "2016-08-23T23:07:30Z",
        "lastEditedBy" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4a0a34a049753b0c13a21ad1da192346074b9e6",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1526,1530 @@\n            beforeEach(() => {\n                moduleFile1 = {\n                    path: \"/a/b/moduleFile1.ts\",\n                    content: \"export function Foo() { };\""
  }
]