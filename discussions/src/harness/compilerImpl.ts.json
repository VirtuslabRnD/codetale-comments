[
  {
    "id" : "3fe38bc0-e292-4878-8410-4508c39798be",
    "prId" : 43973,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/43973#pullrequestreview-652838297",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "807a3af5-25c6-45bf-b161-33817da49bb0",
        "parentId" : null,
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "Declaration emit for this test still takes 5s on my machine. `getPreEmitDiagnostics` invokes declaration emit to get declaration emit errors (for historical reasons they've been considered \"preEmit\" errors), meaning declaration emit had to run _twice_, so 10s.  Single-threaded, this was fine, but in high resource contention scenarios (ie, `runtests-parallel`) this was long enough to stretch to 40s and timeout. So I added an opt-out case to the preEmit/preEmit-after-emit error consistency check to keep this test runtime low (so it could pass without a timeout when running in parallel, and probably on CI).",
        "createdAt" : "2021-05-05T23:07:50Z",
        "updatedAt" : "2021-05-05T23:10:32Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "909d519cd9bb98c5e95847f40d83d040b97115eb",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +257,261 @@        // pre-emit/post-emit error comparison requires declaration emit twice, which can be slow. If it's unlikely to flag any error consistency issues\n        // and if the test is running `skipLibCheck` - an indicator that we want the tets to run quickly - skip the before/after error comparison, too\n        const skipErrorComparison = ts.length(rootFiles) >= 100 || (!!compilerOptions.skipLibCheck && !!compilerOptions.declaration);\n\n        const preProgram = !skipErrorComparison ? ts.createProgram(rootFiles || [], { ...compilerOptions, configFile: compilerOptions.configFile, traceResolution: false }, host) : undefined;"
  }
]