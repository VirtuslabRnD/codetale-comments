[
  {
    "id" : "d59a4648-61ee-458c-a268-37db91502c3f",
    "prId" : 43992,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/43992#pullrequestreview-654544561",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a410fe31-62da-475c-b2fe-83912e992bf8",
        "parentId" : null,
        "authorId" : "9302e396-f4ae-400e-962a-ed2cd3258fdf",
        "body" : "This is the actual call which vscode uses, so I've replicated that codepath for the server tests. The non-encoded versions of the APIs aren't in the server, and it doesn't feel right to add them just for a test.",
        "createdAt" : "2021-05-07T14:51:26Z",
        "updatedAt" : "2021-05-07T14:54:57Z",
        "lastEditedBy" : "9302e396-f4ae-400e-962a-ed2cd3258fdf",
        "tags" : [
        ]
      }
    ],
    "commit" : "528e46e93b261a48f59a4b575f50820fbe60d7ab",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +777,781 @@            const r = this.processResponse<protocol.EncodedSemanticClassificationsResponse>(request);\n            return r.body!;\n        }\n\n        private convertCallHierarchyItem(item: protocol.CallHierarchyItem): CallHierarchyItem {"
  },
  {
    "id" : "07793200-407a-4c88-8fd1-16661d0d5e5e",
    "prId" : 42089,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/42089#pullrequestreview-683545204",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc99707f-eed1-4db1-8f3d-c7eac50617fd",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Does this need the TODO comment?",
        "createdAt" : "2021-06-14T19:01:08Z",
        "updatedAt" : "2021-06-14T19:01:08Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "ee7cc5d4-881f-41c1-ae15-2596846fadc7",
        "parentId" : "bc99707f-eed1-4db1-8f3d-c7eac50617fd",
        "authorId" : "b34d84f4-89ab-4dd2-92e3-8e7d670020b5",
        "body" : "Seems yes.\r\n\r\n>  return response.body!.map<CodeFixAction>(({ fixName, description, changes, commands, fixId, fixAllDescription }) => // TODO: GH#18217\r\n\r\nAt line 641.",
        "createdAt" : "2021-06-15T04:25:53Z",
        "updatedAt" : "2021-06-15T04:25:53Z",
        "lastEditedBy" : "b34d84f4-89ab-4dd2-92e3-8e7d670020b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e9a8d8715f4c2b3961494cb5e3f3669ef363bd2",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +652,656 @@            const response = this.processResponse<protocol.InlayHintsResponse>(request);\n\n            return response.body!.map(item => ({ // TODO: GH#18217\n                ...item,\n                kind: item.kind as InlayHintKind | undefined,"
  },
  {
    "id" : "b3b60b29-3af6-476d-8ea9-a8c815577a5f",
    "prId" : 29385,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/29385#pullrequestreview-192261680",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f073c819-3d89-4d6d-ac8d-ec5fdb37a55d",
        "parentId" : null,
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "If that's the case why would you need _options?",
        "createdAt" : "2019-01-14T17:06:05Z",
        "updatedAt" : "2019-01-15T01:05:42Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "6f78ce9a-6ff5-4b34-87ce-3ef4402feedf",
        "parentId" : "f073c819-3d89-4d6d-ac8d-ec5fdb37a55d",
        "authorId" : "a954cad1-2428-49ae-ad5b-caef29f1f30c",
        "body" : "I need it because the class implements `LanguageService` ðŸ˜ž ",
        "createdAt" : "2019-01-14T17:09:42Z",
        "updatedAt" : "2019-01-15T01:05:42Z",
        "lastEditedBy" : "a954cad1-2428-49ae-ad5b-caef29f1f30c",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c50ed30890c46d2671894eda21dbf2882166e0a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +386,390 @@\n        getRenameInfo(fileName: string, position: number, _options?: RenameInfoOptions, findInStrings?: boolean, findInComments?: boolean): RenameInfo {\n            // Not passing along 'options' because server should already have those from the 'configure' command\n            const args: protocol.RenameRequestArgs = { ...this.createFileLocationRequestArgs(fileName, position), findInStrings, findInComments };\n"
  }
]