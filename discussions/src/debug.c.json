[
  {
    "id" : "92847928-3389-4ac3-ae8d-49fa211a6875",
    "prId" : 7807,
    "prUrl" : "https://github.com/redis/redis/pull/7807#pullrequestreview-510490720",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d42a3696-eff2-4968-bd1d-05dd892062e0",
        "parentId" : null,
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "I've noticed sometimes we add testing stuff here, and other times you add them as configs. Is there a reason we don't always add them here?",
        "createdAt" : "2020-10-16T03:01:42Z",
        "updatedAt" : "2020-12-06T09:23:35Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "0c9f8802-5f86-4ee9-ba18-753a9fb3b99a",
        "parentId" : "d42a3696-eff2-4968-bd1d-05dd892062e0",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "AFAIK the configs that we want some people to actually use in production are put in CONFIG, and the ones we only add for the purpose of the test suite are put in DEBUG.\r\nThe two important differences IMHO are:\r\n1. config options should later be supported forever, we can't remove them. (e.g. no one can argue that we need to keep supporting `SET-ACTIVE-EXPIRE` forever)\r\n2. config options also work right on startup (even before redis starts loading an AOF). this is the reason we sometime put test-suite tunables as config rather than DEBUG (e.g. key-load-delay)\r\n\r\nother considerations may be:\r\n- this specific config is dangerous, we don't want it to be enabled with config (we assume DEBUG is blocked in production clusters anyway).",
        "createdAt" : "2020-10-16T13:51:29Z",
        "updatedAt" : "2020-12-06T09:23:35Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "c54cd006593a03835df07ac9a1a8b139d7a619d2",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +404,408 @@\"SEGFAULT -- Crash the server with sigsegv.\",\n\"SET-ACTIVE-EXPIRE <0|1> -- Setting it to 0 disables expiring keys in background when they are not accessed (otherwise the Redis behavior). Setting it to 1 reenables back the default.\",\n\"SET-SKIP-CHECKSUM-VALIDATION <0|1> -- Enables or disables checksum checks for rdb or RESTORE payload.\",\n\"AOF-FLUSH-SLEEP <microsec> -- Server will sleep before flushing the AOF, this is used for testing\",\n\"SLEEP <seconds> -- Stop the server for <seconds>. Decimals allowed.\","
  },
  {
    "id" : "d462d5ee-acf5-4e29-9fa8-dbccc66ed9d5",
    "prId" : 7585,
    "prUrl" : "https://github.com/redis/redis/pull/7585#pullrequestreview-459094780",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f3634da-6fc7-46da-930e-f9db9c6b4306",
        "parentId" : null,
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "@oranagra please consider re-order so system headers come first.",
        "createdAt" : "2020-07-31T10:10:58Z",
        "updatedAt" : "2020-08-04T09:28:01Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      },
      {
        "id" : "92f8e39e-5567-4162-a586-a937b6259596",
        "parentId" : "4f3634da-6fc7-46da-930e-f9db9c6b4306",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "actually, for some reason in many other C files in redis, the system includes come last.\r\nand in fact, when i include server.h after including signal.h, then server.h complains of unknown type name siginfo_t.\r\ni think this mess should be sorted out some other day.",
        "createdAt" : "2020-07-31T11:07:29Z",
        "updatedAt" : "2020-08-04T09:28:01Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc769601ebd4bc4797db8f2b71173f25e7c49f85",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +38,42 @@#include <dlfcn.h>\n#include <fcntl.h>\n#include <unistd.h>\n\n#ifdef HAVE_BACKTRACE"
  },
  {
    "id" : "1d4cd9fd-9a1e-484e-837c-613cfdb0c50a",
    "prId" : 2927,
    "prUrl" : "https://github.com/redis/redis/pull/2927#pullrequestreview-708553715",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "215d3d22-f90b-4fd3-b8bf-0eac91e38d48",
        "parentId" : null,
        "authorId" : "f8924c9c-b0b5-4c00-9cb1-95a042d1c159",
        "body" : "This is correct. Can you rebase so we can merge?",
        "createdAt" : "2021-07-15T10:29:29Z",
        "updatedAt" : "2021-07-15T10:30:40Z",
        "lastEditedBy" : "f8924c9c-b0b5-4c00-9cb1-95a042d1c159",
        "tags" : [
        ]
      },
      {
        "id" : "6bfaf52a-6917-43fa-9a9b-f716b25985bc",
        "parentId" : "215d3d22-f90b-4fd3-b8bf-0eac91e38d48",
        "authorId" : "3bd501c9-574f-4cde-8fed-e36b0bd1ab03",
        "body" : "Done.",
        "createdAt" : "2021-07-16T16:16:50Z",
        "updatedAt" : "2021-07-16T16:16:50Z",
        "lastEditedBy" : "3bd501c9-574f-4cde-8fed-e36b0bd1ab03",
        "tags" : [
        ]
      }
    ],
    "commit" : "4646a267dda9fbf5d775c42b778693baa96742b9",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +940,944 @@void serverLogObjectDebugInfo(const robj *o) {\n    serverLog(LL_WARNING,\"Object type: %u\", o->type);\n    serverLog(LL_WARNING,\"Object encoding: %u\", o->encoding);\n    serverLog(LL_WARNING,\"Object refcount: %d\", o->refcount);\n#if UNSAFE_CRASH_REPORT"
  }
]