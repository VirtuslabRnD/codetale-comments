[
  {
    "id" : "2d63e459-7db2-47aa-9c8f-8db802ac6ebc",
    "prId" : 14063,
    "prUrl" : "https://github.com/nodejs/node/pull/14063#pullrequestreview-48425760",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5776034-8c8a-4fc2-8305-4697c3b630a4",
        "parentId" : null,
        "authorId" : "adf4589f-d7ff-4732-ae84-6bf8a2f67306",
        "body" : "Rather than returning false, shouldn't we call the ToPrimitive method on the key? I'm thinking of an example like this: \r\n\r\n    var x = {hello: 17}\r\n    var o = { [Symbol.toPrimitive] : function() {return 'hello';}}\r\n    x.hasOwnProperty(o) // true",
        "createdAt" : "2017-07-03T20:56:16Z",
        "updatedAt" : "2017-07-06T19:28:11Z",
        "lastEditedBy" : "adf4589f-d7ff-4732-ae84-6bf8a2f67306",
        "tags" : [
        ]
      },
      {
        "id" : "3a9a4f4e-c99b-4d2f-a384-2d824fbe522c",
        "parentId" : "f5776034-8c8a-4fc2-8305-4697c3b630a4",
        "authorId" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "body" : "@fhinkel what `ToPrimitive()` method? I'm not seeing anything exposed by the V8 API except for retrieving the symbol itself, but maybe I'm just missing it.\r\n\r\nAlso cc @nodejs/n-api as this case isn't handled anywhere else in n-api.",
        "createdAt" : "2017-07-04T13:54:57Z",
        "updatedAt" : "2017-07-06T19:28:11Z",
        "lastEditedBy" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "tags" : [
        ]
      },
      {
        "id" : "5535828c-0fb9-40e2-83ce-090263cd7a6b",
        "parentId" : "f5776034-8c8a-4fc2-8305-4697c3b630a4",
        "authorId" : "adf4589f-d7ff-4732-ae84-6bf8a2f67306",
        "body" : "I don't think we expose it by itself. According to the spec, the key is converted to a name, which calls `toPrimitive`, [toPropertyKey](https://www.ecma-international.org/ecma-262/7.0/#sec-topropertykey). \r\n\r\nSo, I think we should delete the `return false if not IsName()`, and let V8 handle it in a spec compliant way. V8 only needs a `value`, not a string/symbol here.  ",
        "createdAt" : "2017-07-04T22:14:36Z",
        "updatedAt" : "2017-07-06T19:28:11Z",
        "lastEditedBy" : "adf4589f-d7ff-4732-ae84-6bf8a2f67306",
        "tags" : [
        ]
      },
      {
        "id" : "d47e7c12-5cbb-4ca0-aa6a-ef248e19f11e",
        "parentId" : "f5776034-8c8a-4fc2-8305-4697c3b630a4",
        "authorId" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "body" : "I'm all for letting V8 handle this, but I get a compiler error passing in a `Value` :-/\r\n\r\n```\r\n../src/node_api.cc:1042:60: note: in instantiation of function template\r\n      specialization 'v8::Local<v8::Name>::Local<v8::Value>' requested here\r\n  v8::Maybe<bool> has_maybe = obj->HasOwnProperty(context, k);\r\n```\r\n\r\nIt looks like [V8 expects a `Name`](https://v8docs.nodesource.com/node-8.0/db/d85/classv8_1_1_object.html#ab7b7245442ca6de1e1c145ea3fd653ff).",
        "createdAt" : "2017-07-06T18:02:40Z",
        "updatedAt" : "2017-07-06T19:28:11Z",
        "lastEditedBy" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "tags" : [
        ]
      },
      {
        "id" : "38fd8082-6e54-4176-a4ca-82242b190aff",
        "parentId" : "f5776034-8c8a-4fc2-8305-4697c3b630a4",
        "authorId" : "adf4589f-d7ff-4732-ae84-6bf8a2f67306",
        "body" : "You're right, I was looking at [a comment for has()](https://github.com/v8/v8/blame/master/include/v8.h#L3138).  Sorry for the confusion.  I think we should make sure though that it's obvious that the n-api function is not identical to JS behavior, in particular, that we'll never use the `ToPrimitive` symbol if the key is an object. (We should probably point that out in the V8 API, but there it might be less of an issue because we only allow `names`.)",
        "createdAt" : "2017-07-06T18:31:12Z",
        "updatedAt" : "2017-07-06T19:28:11Z",
        "lastEditedBy" : "adf4589f-d7ff-4732-ae84-6bf8a2f67306",
        "tags" : [
        ]
      },
      {
        "id" : "0f77f9a7-62ad-46c6-8385-db617a4f4fed",
        "parentId" : "f5776034-8c8a-4fc2-8305-4697c3b630a4",
        "authorId" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "body" : "@fhinkel I added a note to the docs that no type conversions will be performed. That should cover `ToPrimitive` and any other implicit conversions.",
        "createdAt" : "2017-07-06T18:39:25Z",
        "updatedAt" : "2017-07-06T19:28:11Z",
        "lastEditedBy" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c6804c1dff0203751dd01da4e226e19de636a71",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +1056,1060 @@  CHECK_TO_OBJECT(env, context, obj, object);\n  v8::Local<v8::Value> k = v8impl::V8LocalValueFromJsValue(key);\n  RETURN_STATUS_IF_FALSE(env, k->IsName(), napi_name_expected);\n  v8::Maybe<bool> has_maybe = obj->HasOwnProperty(context, k.As<v8::Name>());\n  CHECK_MAYBE_NOTHING(env, has_maybe, napi_generic_failure);"
  }
]