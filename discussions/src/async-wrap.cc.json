[
  {
    "id" : "3d23741f-036f-4290-b6de-1dff24cc950c",
    "prId" : 3461,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf624747-3cfb-4fee-813d-0680c0509b27",
        "parentId" : null,
        "authorId" : "07d067f8-a546-476c-a323-f0ae8fdb5357",
        "body" : "why is the function check required? In the reset of the code only `init_fn.IsEmpty()` is used to check of async-wrap is enabled. The `SetupHooks` function also checks that `init_fn` is a function.\n",
        "createdAt" : "2015-10-26T10:12:14Z",
        "updatedAt" : "2015-11-06T23:38:13Z",
        "lastEditedBy" : "07d067f8-a546-476c-a323-f0ae8fdb5357",
        "tags" : [
        ]
      },
      {
        "id" : "1a9cbb74-c36c-4f2f-8778-c3ef1cf8cf6f",
        "parentId" : "cf624747-3cfb-4fee-813d-0680c0509b27",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "Currently in `AsyncWrap::AsyncWrap` we check if the `init` hook is set. If not then it returns early. If this is the case then `bits_` will never be set and no additional callback will ever be called for that object as a result. I can probably rethink the logic, but this seemed the most straight forward for this PR.\n",
        "createdAt" : "2015-10-26T16:52:13Z",
        "updatedAt" : "2015-11-06T23:38:13Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb1bd7639554766a88b8f7aef8891bf8249e613e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +105,109 @@  Environment* env = Environment::GetCurrent(args);\n  Local<Function> init_fn = env->async_hooks_init_function();\n  if (init_fn.IsEmpty() || !init_fn->IsFunction())\n    return env->ThrowTypeError(\"init callback is not assigned to a function\");\n  env->async_hooks()->set_enable_callbacks(1);"
  }
]