[
  {
    "id" : "63fc83d6-ce48-4d7b-862a-eb87cbe5fa92",
    "prId" : 9210,
    "prUrl" : "https://github.com/redis/redis/pull/9210#pullrequestreview-701914802",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1da71aab-8a07-4750-9250-5034ded7ea36",
        "parentId" : null,
        "authorId" : "f8924c9c-b0b5-4c00-9cb1-95a042d1c159",
        "body" : "Good fix.",
        "createdAt" : "2021-07-08T10:48:22Z",
        "updatedAt" : "2021-07-08T10:50:51Z",
        "lastEditedBy" : "f8924c9c-b0b5-4c00-9cb1-95a042d1c159",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6950acdcf17aa0267b53580b57d54a4bc31dd5a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1294,1298 @@\"DOCTOR\",\n\"    Return memory problems reports.\",\n\"MALLOC-STATS\",\n\"    Return internal statistics report from the memory allocator.\",\n\"PURGE\","
  },
  {
    "id" : "8d6fc11c-c83e-4644-b000-f085164e8d5f",
    "prId" : 5045,
    "prUrl" : "https://github.com/redis/redis/pull/5045#pullrequestreview-214583541",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ad6fa0c-3fd8-41f9-b72b-7c079c068da4",
        "parentId" : null,
        "authorId" : "e0863aff-4317-496e-aaec-69c95f9a197a",
        "body" : "Please could you give me some hint about this conditional? Setting an LFU of 0 looks acceptable.",
        "createdAt" : "2019-03-14T15:13:05Z",
        "updatedAt" : "2019-03-14T15:13:05Z",
        "lastEditedBy" : "e0863aff-4317-496e-aaec-69c95f9a197a",
        "tags" : [
        ]
      },
      {
        "id" : "d0296310-d835-45fe-bc44-d0900a42c0c0",
        "parentId" : "4ad6fa0c-3fd8-41f9-b72b-7c079c068da4",
        "authorId" : "e0863aff-4317-496e-aaec-69c95f9a197a",
        "body" : "Sorry I mis-read the conditional.",
        "createdAt" : "2019-03-14T15:26:27Z",
        "updatedAt" : "2019-03-14T15:26:27Z",
        "lastEditedBy" : "e0863aff-4317-496e-aaec-69c95f9a197a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5197f1fc9d6fde776168951094e44d5e8742a89",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1175,1179 @@                       long long lru_clock) {\n    if (server.maxmemory_policy & MAXMEMORY_FLAG_LFU) {\n        if (lfu_freq >= 0) {\n            serverAssert(lfu_freq <= 255);\n            val->lru = (LFUGetTimeInMinutes()<<8) | lfu_freq;"
  },
  {
    "id" : "44998680-aa87-44c8-afd7-ec4b4756360d",
    "prId" : 5045,
    "prUrl" : "https://github.com/redis/redis/pull/5045#pullrequestreview-214577333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b5e4436-078d-4cad-bef5-b1c20de26e5b",
        "parentId" : null,
        "authorId" : "e0863aff-4317-496e-aaec-69c95f9a197a",
        "body" : "This is a bug (in the original code). val->lru can't be negative AFAIK, it's declared unsigned. So there is to compute it in a different signed variable and assign it at the end. I'll fix after merging.",
        "createdAt" : "2019-03-14T15:17:22Z",
        "updatedAt" : "2019-03-14T15:17:22Z",
        "lastEditedBy" : "e0863aff-4317-496e-aaec-69c95f9a197a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5197f1fc9d6fde776168951094e44d5e8742a89",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +1189,1193 @@         * clock), the best we can do is to provide the maximum\n         * representable idle time. */\n        if (val->lru < 0) val->lru = lru_clock+1;\n    }\n}"
  },
  {
    "id" : "011e60ca-5bab-4aa5-897a-9eaea1e5b9ec",
    "prId" : 4953,
    "prUrl" : "https://github.com/redis/redis/pull/4953#pullrequestreview-123618183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc7b404b-42f4-4b39-8ed9-8205ad50736c",
        "parentId" : null,
        "authorId" : "abedb549-7105-4326-8224-26bfa124784f",
        "body" : "Maybe add a separate mh->clients_monitor? :-) @soloestoy ",
        "createdAt" : "2018-05-28T03:47:41Z",
        "updatedAt" : "2018-05-28T03:48:38Z",
        "lastEditedBy" : "abedb549-7105-4326-8224-26bfa124784f",
        "tags" : [
        ]
      },
      {
        "id" : "0dd6543a-c16e-4536-9608-0031565d4b7c",
        "parentId" : "cc7b404b-42f4-4b39-8ed9-8205ad50736c",
        "authorId" : "992af734-3eac-4159-b634-0625f275b1a6",
        "body" : "Yes, and PUB/SUB client, have submitted in another PR #4502, and need more optimization. \r\n\r\nThis single fix should be merged before 5.0 rc1 I think.",
        "createdAt" : "2018-05-28T04:09:43Z",
        "updatedAt" : "2018-05-28T04:09:43Z",
        "lastEditedBy" : "992af734-3eac-4159-b634-0625f275b1a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce2e0c02fc67658e3e891ff4f732a17db3adfb96",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +969,973 @@        while((ln = listNext(&li))) {\n            client *c = listNodeValue(ln);\n            if (c->flags & CLIENT_SLAVE && !(c->flags & CLIENT_MONITOR))\n                continue;\n            mem += getClientOutputBufferMemoryUsage(c);"
  }
]