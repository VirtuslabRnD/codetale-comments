[
  {
    "id" : "0c489ad3-7875-4166-9868-2a2ad027d7fb",
    "prId" : 667,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41f60282-f464-48c7-bc60-7faeb5c28259",
        "parentId" : null,
        "authorId" : "d47a8b61-a8ac-4504-809d-8432d9e75d95",
        "body" : "Oh, god. This is happening.\n",
        "createdAt" : "2015-01-30T15:11:11Z",
        "updatedAt" : "2015-02-11T23:23:03Z",
        "lastEditedBy" : "d47a8b61-a8ac-4504-809d-8432d9e75d95",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bb3184d8d08208bfb5233c394cbc1994a531b5f",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +1490,1494 @@  int i = 0;\n\n  for (auto w : *env->req_wrap_queue())\n    if (w->persistent().IsEmpty() == false)\n      ary->Set(i++, w->object());"
  },
  {
    "id" : "fc5e1c4c-3a39-451d-ab59-a7d382005ad3",
    "prId" : 667,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "968fb1d8-effd-4f4f-b86e-5ea12053da41",
        "parentId" : null,
        "authorId" : "d47a8b61-a8ac-4504-809d-8432d9e75d95",
        "body" : "Why not `!(...).IsEmpty()`?\n",
        "createdAt" : "2015-01-30T15:52:21Z",
        "updatedAt" : "2015-02-11T23:23:03Z",
        "lastEditedBy" : "d47a8b61-a8ac-4504-809d-8432d9e75d95",
        "tags" : [
        ]
      },
      {
        "id" : "c2096c32-f160-4585-a35a-ed1f8774bd1a",
        "parentId" : "968fb1d8-effd-4f4f-b86e-5ea12053da41",
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "Because I like the explicit version better.\n",
        "createdAt" : "2015-01-30T16:09:31Z",
        "updatedAt" : "2015-02-11T23:23:03Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bb3184d8d08208bfb5233c394cbc1994a531b5f",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +1491,1495 @@\n  for (auto w : *env->req_wrap_queue())\n    if (w->persistent().IsEmpty() == false)\n      ary->Set(i++, w->object());\n"
  },
  {
    "id" : "8a6facea-7df3-4c5f-b4ff-89230b5d5267",
    "prId" : 1148,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55237307-49d8-4018-8ee1-b5b4b5a09bc0",
        "parentId" : null,
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "What alternative is there?\n",
        "createdAt" : "2015-03-16T16:41:14Z",
        "updatedAt" : "2015-03-16T17:03:05Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      },
      {
        "id" : "c6dd8ee8-fb4a-4565-bed8-a0faa58ff2a2",
        "parentId" : "55237307-49d8-4018-8ee1-b5b4b5a09bc0",
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "One-byte strings or if you want more radical, buffers or typed arrays.  It also depends on the platform: file paths are untyped binary blobs on most Unices, but on OS X (i.e. HFS+) and Windows, they're Unicode.\n\nI'm not sure yet what the right answer is, just that our current approach is wrong. :-)\n",
        "createdAt" : "2015-03-16T17:00:38Z",
        "updatedAt" : "2015-03-16T17:03:05Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      },
      {
        "id" : "f436710b-22c7-4ee0-985c-857e8904e4a5",
        "parentId" : "55237307-49d8-4018-8ee1-b5b4b5a09bc0",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "Good point about different data formats. I was only thinking about string encoding.\n",
        "createdAt" : "2015-03-16T17:33:39Z",
        "updatedAt" : "2015-03-16T17:33:39Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      }
    ],
    "commit" : "2551c1d2caaec21a5098de8e86274e0daf7aa781",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +731,735 @@  Local<String> path_string;\n  if (path != nullptr) {\n    // FIXME(bnoordhuis) It's questionable to interpret the file path as UTF-8.\n    path_string = String::NewFromUtf8(env->isolate(), path);\n  }"
  },
  {
    "id" : "dc0860b8-e01f-47e9-afb2-2030c2ce2732",
    "prId" : 1238,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b7f1b85-5713-49a3-8033-0b1af58d5641",
        "parentId" : null,
        "authorId" : "d47a8b61-a8ac-4504-809d-8432d9e75d95",
        "body" : "Oh, nvm. I see now.\n",
        "createdAt" : "2015-03-23T03:07:47Z",
        "updatedAt" : "2015-03-23T09:41:44Z",
        "lastEditedBy" : "d47a8b61-a8ac-4504-809d-8432d9e75d95",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e5b87a147f0bb1e92de4a62f392bb4f3ac12f8f",
    "line" : 169,
    "diffHunk" : "@@ -1,1 +2524,2528 @@    Local<Value> value,\n    const PropertyCallbackInfo<void>& info) {\n  Environment* env = Environment::GetCurrent(info);\n\n  uv_check_t* immediate_check_handle = env->immediate_check_handle();"
  },
  {
    "id" : "92925e42-2d55-48df-bf38-db1112226948",
    "prId" : 2483,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ddacfbcd-a91b-4358-8dd7-8e5880ca1dea",
        "parentId" : null,
        "authorId" : "286d51c5-45bc-421e-8ab3-473992c21d5a",
        "body" : "You could wrap the following for-loop into your if-statement as well.\n",
        "createdAt" : "2015-08-21T09:51:12Z",
        "updatedAt" : "2015-08-21T19:16:53Z",
        "lastEditedBy" : "286d51c5-45bc-421e-8ab3-473992c21d5a",
        "tags" : [
        ]
      },
      {
        "id" : "effac433-8072-4849-a17e-6ab8af3e86c6",
        "parentId" : "ddacfbcd-a91b-4358-8dd7-8e5880ca1dea",
        "authorId" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "body" : "yea, I had tried that and the results didn't seem to be any different.\n",
        "createdAt" : "2015-08-21T09:55:58Z",
        "updatedAt" : "2015-08-21T19:16:53Z",
        "lastEditedBy" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "tags" : [
        ]
      },
      {
        "id" : "64c2475c-24a4-4b51-bb4e-23ee9ec65330",
        "parentId" : "ddacfbcd-a91b-4358-8dd7-8e5880ca1dea",
        "authorId" : "286d51c5-45bc-421e-8ab3-473992c21d5a",
        "body" : "I guess it's about aesthetics really. Your call :)\n",
        "createdAt" : "2015-08-21T09:57:40Z",
        "updatedAt" : "2015-08-21T19:16:53Z",
        "lastEditedBy" : "286d51c5-45bc-421e-8ab3-473992c21d5a",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c20b87d1979e741f1f1698f8120169d32a779ae",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +3708,3712 @@  // the argv array or the elements it points to.\n  if (v8_argc != 0)\n    V8::SetFlagsFromCommandLine(&v8_argc, const_cast<char**>(v8_argv), true);\n\n  // Anything that's still in v8_argv is not a V8 or a node option."
  },
  {
    "id" : "29d85f75-210f-4c53-bbc7-646166f3c643",
    "prId" : 3528,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "916b1787-21ce-4b75-895e-d08eb6f53842",
        "parentId" : null,
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "Hmmm, our linter doesn't complain about this?\n",
        "createdAt" : "2015-10-26T14:51:11Z",
        "updatedAt" : "2015-10-27T12:01:58Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      },
      {
        "id" : "c6a9108f-375c-4916-aeb9-2c6923254f0a",
        "parentId" : "916b1787-21ce-4b75-895e-d08eb6f53842",
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "Why would it?  It's a common C++ idiom.\n",
        "createdAt" : "2015-10-26T15:42:57Z",
        "updatedAt" : "2015-10-27T12:01:58Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "53e64bb29e3b70cf23b345d02fac081de716ef3f",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +3423,3427 @@  // Call only async signal-safe functions here!  Don't retry the exchange,\n  // it will deadlock when the thread is interrupted inside a critical section.\n  if (auto isolate = node_isolate.exchange(nullptr)) {\n    v8::Debug::DebugBreak(isolate);\n    uv_async_send(&dispatch_debug_messages_async);"
  },
  {
    "id" : "2314203d-ce57-48ae-bbb3-9f7cad3c4d2f",
    "prId" : 5591,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6720c54a-4242-4eb7-a357-32d385743853",
        "parentId" : null,
        "authorId" : "7885009b-14c8-46d1-a915-0c610839ac69",
        "body" : "Would it be useful to add a comment here mentioning that `undefined` is returned here for backward compatibility?\n",
        "createdAt" : "2016-03-07T22:53:17Z",
        "updatedAt" : "2016-03-08T17:46:53Z",
        "lastEditedBy" : "7885009b-14c8-46d1-a915-0c610839ac69",
        "tags" : [
        ]
      },
      {
        "id" : "c66f66fa-64f7-44d9-949b-28077370196f",
        "parentId" : "6720c54a-4242-4eb7-a357-32d385743853",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "Can do.\n",
        "createdAt" : "2016-03-07T23:34:58Z",
        "updatedAt" : "2016-03-08T17:46:53Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      },
      {
        "id" : "9926a98b-ec08-4dd0-b087-bcb4257dc2a5",
        "parentId" : "6720c54a-4242-4eb7-a357-32d385743853",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "done, just below.\n",
        "createdAt" : "2016-03-07T23:38:26Z",
        "updatedAt" : "2016-03-08T17:46:53Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      }
    ],
    "commit" : "3521b052b175110aab08fe6296e7d5cffbb72925",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1199,1203 @@\n  if (ret.IsEmpty()) {\n    if (callback_scope.in_makecallback())\n      return ret;\n    // NOTE: Undefined() is returned here for backwards compatibility."
  },
  {
    "id" : "95609145-5a8d-464e-9c68-23d21af7a755",
    "prId" : 5881,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a506351-d0f9-4439-9e15-8e63604a8286",
        "parentId" : null,
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "I think this code was changed after I reviewed it?  Because `ARRAY_SIZE(&arg)` doesn't do what you think it does.\n",
        "createdAt" : "2016-03-31T10:38:38Z",
        "updatedAt" : "2016-03-31T10:38:38Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "21d66d621c5b1ce27498fcb1cb846fd34fce4234",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +3328,3332 @@\n  Local<Value> arg = env->process_object();\n  f->Call(Null(env->isolate()), ARRAY_SIZE(&arg), &arg);\n}\n"
  },
  {
    "id" : "7506e298-75eb-433e-b310-3511886bf067",
    "prId" : 6092,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83cb7159-11c4-4c21-b9ed-43c6e7fa4c75",
        "parentId" : null,
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "Is this `process._events`?\n",
        "createdAt" : "2016-04-07T14:28:17Z",
        "updatedAt" : "2016-04-19T01:47:59Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      },
      {
        "id" : "d4114854-278b-4fd2-a89f-a002937db70a",
        "parentId" : "83cb7159-11c4-4c21-b9ed-43c6e7fa4c75",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "Yes.\n",
        "createdAt" : "2016-04-07T14:51:11Z",
        "updatedAt" : "2016-04-19T01:47:59Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e38bade82801645d8cc1010e3f4e9826052244cb",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +3231,3235 @@  Local<Object> events_obj = Object::New(env->isolate());\n  events_obj->SetPrototype(env->context(), Null(env->isolate()));\n  process->Set(env->events_string(), events_obj);\n}\n"
  },
  {
    "id" : "9bb3789e-d978-424c-a89e-b22d86e470d9",
    "prId" : 7093,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18922fab-9f19-495f-9ea4-abc4ce0016f7",
        "parentId" : null,
        "authorId" : "514a0163-2303-442b-8dea-a071059bfbe1",
        "body" : "Can't we just reset zero-flag here instead of delegating to JS side, right before the `malloc` so that allocation exception couldn't happen yet? This would lead to less changes + would avoid try-catch deopt in `createBuffer`.\n",
        "createdAt" : "2016-06-01T23:38:07Z",
        "updatedAt" : "2016-06-02T07:23:20Z",
        "lastEditedBy" : "514a0163-2303-442b-8dea-a071059bfbe1",
        "tags" : [
        ]
      },
      {
        "id" : "485b3ca2-e507-4429-babc-9ad2acd40fe0",
        "parentId" : "18922fab-9f19-495f-9ea4-abc4ce0016f7",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "That was my initial implementation. Problem is if `new Uint8Array()` for some reason throws it'll stay flipped.\n",
        "createdAt" : "2016-06-02T02:57:44Z",
        "updatedAt" : "2016-06-02T07:23:20Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      },
      {
        "id" : "4412f247-b886-4de2-a3b6-be4d33ab303a",
        "parentId" : "18922fab-9f19-495f-9ea4-abc4ce0016f7",
        "authorId" : "4bb0c2a5-ae65-4a7c-b24b-faa4000cdc5b",
        "body" : "Not sure of that. try-finally also checks that no non-failing shortcuts (that return an empty array) result in the flag not being reset.\n\nDo you have an example that passes the tests here?\n",
        "createdAt" : "2016-06-02T03:16:42Z",
        "updatedAt" : "2016-06-02T07:23:20Z",
        "lastEditedBy" : "4bb0c2a5-ae65-4a7c-b24b-faa4000cdc5b",
        "tags" : [
        ]
      },
      {
        "id" : "a7943a15-c4c1-44a3-a5e3-ac732ed987d7",
        "parentId" : "18922fab-9f19-495f-9ea4-abc4ce0016f7",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "@ChALkeR Are you addressing my comment? I'm saying I reset the bit in C++ and I believe you were the one that realized the bit can be flipped and remain flipped if the allocation fails.\n",
        "createdAt" : "2016-06-02T03:37:56Z",
        "updatedAt" : "2016-06-02T07:23:20Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      },
      {
        "id" : "5e6979bd-8964-4cef-8bc3-55e069b29acc",
        "parentId" : "18922fab-9f19-495f-9ea4-abc4ce0016f7",
        "authorId" : "4bb0c2a5-ae65-4a7c-b24b-faa4000cdc5b",
        "body" : "@trevnorris No, somewhy I didn't see your comment and was adressing @RReverser comment.\n",
        "createdAt" : "2016-06-02T03:46:28Z",
        "updatedAt" : "2016-06-02T07:23:20Z",
        "lastEditedBy" : "4bb0c2a5-ae65-4a7c-b24b-faa4000cdc5b",
        "tags" : [
        ]
      }
    ],
    "commit" : "fea3070ec46d8d231b95ff100170d16306814ee8",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +975,979 @@    return calloc(size, 1);\n  else\n    return malloc(size);\n}\n"
  }
]