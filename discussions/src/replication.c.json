[
  {
    "id" : "f31f9f04-7e16-49a4-ba0c-ece7ced62ae7",
    "prId" : 8315,
    "prUrl" : "https://github.com/redis/redis/pull/8315#pullrequestreview-573114466",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c5df61f-fbf6-4850-a552-2229f4ffb203",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "maybe we wanna error here rather than proceed ignoring the \"failover\" argument?",
        "createdAt" : "2021-01-21T09:08:29Z",
        "updatedAt" : "2021-01-27T20:54:13Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff8253bccae36513f26eee426a0fef214bcd7f40",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +734,738 @@            addReplyError(c, \"PSYNC FAILOVER replid must match my replid.\");\n            return;            \n        }\n    }\n"
  },
  {
    "id" : "def96518-2958-4dd0-848c-ace8a58eca79",
    "prId" : 8315,
    "prUrl" : "https://github.com/redis/redis/pull/8315#pullrequestreview-577749312",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f510a921-d924-45f9-a073-869225a4012f",
        "parentId" : null,
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "```suggestion\r\n        serverLog(LL_NOTICE,\"FAILOVER requested to %s:%d.\",host,port);\r\n```",
        "createdAt" : "2021-01-27T15:01:14Z",
        "updatedAt" : "2021-01-27T20:54:13Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      },
      {
        "id" : "f713bded-3437-4583-9b5c-f46fe1b8a751",
        "parentId" : "f510a921-d924-45f9-a073-869225a4012f",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "Port is currently read in as a long, I think this is just to be parity with replicaof which does the same validation.",
        "createdAt" : "2021-01-27T20:28:54Z",
        "updatedAt" : "2021-01-27T20:54:13Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "e7073177-b3cb-4d8c-a198-24185c79d2b4",
        "parentId" : "f510a921-d924-45f9-a073-869225a4012f",
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "But `target_replica_port` is an int...",
        "createdAt" : "2021-01-27T20:54:42Z",
        "updatedAt" : "2021-01-27T20:54:42Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff8253bccae36513f26eee426a0fef214bcd7f40",
    "line" : 302,
    "diffHunk" : "@@ -1,1 +3632,3636 @@        server.target_replica_host = zstrdup(host);\n        server.target_replica_port = port;\n        serverLog(LL_NOTICE,\"FAILOVER requested to %s:%ld.\",host,port);\n    } else {\n        serverLog(LL_NOTICE,\"FAILOVER requested to any replica.\");"
  },
  {
    "id" : "cefb4727-4167-4e22-bb85-9d7a67a35ee6",
    "prId" : 8315,
    "prUrl" : "https://github.com/redis/redis/pull/8315#pullrequestreview-577745401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8a08817-5f2a-4924-a2e7-249456582048",
        "parentId" : null,
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "Maybe expose the rest of the failover state? Attaching to an instance stuck in failover that can be valuable debugging info I believe.",
        "createdAt" : "2021-01-27T15:04:00Z",
        "updatedAt" : "2021-01-27T20:54:13Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      },
      {
        "id" : "7edbbfc8-a0ad-43c7-aa1e-7e28e1269d5c",
        "parentId" : "e8a08817-5f2a-4924-a2e7-249456582048",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "I thought about this, so when we are in the failover state, our master/host values will be set and timeout isn't valid. That should be enough to debug what is going on. If we are in the sync state, the data is available through our offset and the slaves section, and I'm not sure if adding timeout is that useful.\r\n\r\nWe can add more data here, but I think there is enough to investigate right now.",
        "createdAt" : "2021-01-27T20:49:22Z",
        "updatedAt" : "2021-01-27T20:54:13Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff8253bccae36513f26eee426a0fef214bcd7f40",
    "line" : 147,
    "diffHunk" : "@@ -1,1 +3477,3481 @@}\n\nconst char *getFailoverStateString() {\n    switch(server.failover_state) {\n        case NO_FAILOVER: return \"no-failover\";"
  },
  {
    "id" : "bb327fa2-bb73-45aa-b2d3-9a93d2588bad",
    "prId" : 8315,
    "prUrl" : "https://github.com/redis/redis/pull/8315#pullrequestreview-577747659",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99235ffe-a2de-4e7f-8064-ed9cb4e3e59a",
        "parentId" : null,
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "One issue here is `replicationSetMaster()` terminates all replicas (and blocked clients etc.) before establishing the connection to the master and beginning `PSYNC`.\r\n\r\nI think it's a good start but maybe we should be leaving a message to our future self here to address that in future refactoring. Ideally, we could first set up the connection and do initial `PSYNC` negotiation, and only then drop everything.",
        "createdAt" : "2021-01-27T15:17:00Z",
        "updatedAt" : "2021-01-27T20:54:13Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      },
      {
        "id" : "50b5c619-1ebb-42b4-b2ce-b7cc95878bf4",
        "parentId" : "99235ffe-a2de-4e7f-8064-ed9cb4e3e59a",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "I agree, there is more optimizations to be done here. Would we prefer this being an issue or a comment in the code?",
        "createdAt" : "2021-01-27T20:26:08Z",
        "updatedAt" : "2021-01-27T20:54:13Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "7f8ff44a-c540-4ca3-9b35-45e642e4f3aa",
        "parentId" : "99235ffe-a2de-4e7f-8064-ed9cb4e3e59a",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "I'm going to put a note at the top of the function about the side effects.",
        "createdAt" : "2021-01-27T20:41:08Z",
        "updatedAt" : "2021-01-27T20:54:13Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "d14328bd-d80b-4231-a3e3-e12bb092cf09",
        "parentId" : "99235ffe-a2de-4e7f-8064-ed9cb4e3e59a",
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "I think at this point it's more likely to be noted as a comment",
        "createdAt" : "2021-01-27T20:52:28Z",
        "updatedAt" : "2021-01-27T20:54:13Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff8253bccae36513f26eee426a0fef214bcd7f40",
    "line" : 385,
    "diffHunk" : "@@ -1,1 +3715,3719 @@                server.target_replica_host, server.target_replica_port);\n        /* Designated replica is caught up, failover to it. */\n        replicationSetMaster(server.target_replica_host,\n            server.target_replica_port);\n    }"
  },
  {
    "id" : "92e9d2bb-a774-4144-b5b1-f061da56edb8",
    "prId" : 8315,
    "prUrl" : "https://github.com/redis/redis/pull/8315#pullrequestreview-701670421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4d72a09-0cea-4dc1-a9f6-51ce37074047",
        "parentId" : null,
        "authorId" : "c54e672f-7b5e-4402-bd8f-fcb255f27420",
        "body" : "@oranagra I feel there is a missing return here?\r\n\r\nI happen to use `psync runid offset failover` in redis-cli, the interactive behavior is a bit strange\r\n\r\noh.. maybe i am missing something. Don't bother...",
        "createdAt" : "2021-07-08T04:06:47Z",
        "updatedAt" : "2021-07-08T06:01:49Z",
        "lastEditedBy" : "c54e672f-7b5e-4402-bd8f-fcb255f27420",
        "tags" : [
        ]
      },
      {
        "id" : "333d0f30-9f94-4b91-a293-b8a7c989694e",
        "parentId" : "a4d72a09-0cea-4dc1-a9f6-51ce37074047",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "@enjoy-binbin i don't think there's a return missing, but feel free to show me where i'm wrong (i didn't debug it).\r\n\r\nkeep in mind two things:\r\n1. PSYNC is not intended to be used from redis-cli, it's a command one redis server sends to another, not a user command.\r\n2. PSYNC FAILOVER is a command sent by a master to one of its replicas, it does two things\r\n    - promote the replica to be a master (few lines above this comment).\r\n    - the old master (the one sent the PSYNC command) attempts to psync from that replica (which is why we need to keep running the bottom part of this function (the return will break it)",
        "createdAt" : "2021-07-08T06:07:18Z",
        "updatedAt" : "2021-07-08T06:07:18Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff8253bccae36513f26eee426a0fef214bcd7f40",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +730,734 @@            serverLog(LL_NOTICE,\n                \"MASTER MODE enabled (failover request from '%s')\",client);\n            sdsfree(client);\n        } else {\n            addReplyError(c, \"PSYNC FAILOVER replid must match my replid.\");"
  },
  {
    "id" : "a9ee4307-1760-4f21-a440-4e99fe8146eb",
    "prId" : 8303,
    "prUrl" : "https://github.com/redis/redis/pull/8303#pullrequestreview-576875883",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82456812-67df-4899-95bf-316ae412dad9",
        "parentId" : null,
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "Seems like we should log something here? There will be a log about us disconnecting a replicas, which without context is a little weird.",
        "createdAt" : "2021-01-27T00:30:42Z",
        "updatedAt" : "2021-01-27T11:04:02Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "acda7e4eda843eda7819c4311ac1512afe34928c",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +983,987 @@            \"Close the connection with replica %s as RDB transfer is complete\",\n            replicationGetSlaveName(slave));\n        freeClientAsync(slave);\n        return;\n    }"
  },
  {
    "id" : "d6c97cc6-1666-4547-9fac-41e9ff3f2beb",
    "prId" : 8214,
    "prUrl" : "https://github.com/redis/redis/pull/8214#pullrequestreview-555989914",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3f33359-5213-421a-b87a-cceb99ea2d5a",
        "parentId" : null,
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "I think using sds would be more straightforward here, since it has all of the built in lengths. Also because the companion function also uses sds. I also think we should generally be storing most strings as SDS, so binary format parsing is easier.",
        "createdAt" : "2020-12-18T21:40:51Z",
        "updatedAt" : "2020-12-24T09:24:25Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "2adc375c-2721-4ccd-9e64-e2d0a5cea673",
        "parentId" : "a3f33359-5213-421a-b87a-cceb99ea2d5a",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "I added this function to be able to work around the limitation of the varargs one which needs to have the number of arguments defined at compile time.\r\nSo that for this one we can write code the chooses the arguments and their order at runtime.\r\nBut i still see value in not forcing the strings (or all of them) to be heap allocated.\r\nI.e. if we keep it like it is now, some or all strings can be static ones, if we do what you suggested, all of them must be allocated on the heap.\r\nI rather keep my version.",
        "createdAt" : "2020-12-20T06:39:09Z",
        "updatedAt" : "2020-12-24T09:24:25Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "3cd799b473c69edde7c2e0b2114525f7323ccd72",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +1897,1901 @@ * operation. On error the first byte is a \"-\".\n */\nchar *sendCommandArgv(connection *conn, int argc, char **argv, size_t *argv_lens) {\n    sds cmd = sdsempty();\n    char *arg;"
  },
  {
    "id" : "e53b1a63-cd46-48ed-91c8-4a027af62f91",
    "prId" : 8214,
    "prUrl" : "https://github.com/redis/redis/pull/8214#pullrequestreview-556588333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5868911-a493-4d5b-b912-9deb869ebb96",
        "parentId" : null,
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "Consider breaking this (and possible more) into smaller functions instead of just extra scoping?",
        "createdAt" : "2020-12-20T11:04:33Z",
        "updatedAt" : "2020-12-24T09:24:25Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      },
      {
        "id" : "473fa1aa-38ee-4d81-a87a-0bdfdf7f41d6",
        "parentId" : "b5868911-a493-4d5b-b912-9deb869ebb96",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "this function will not be used anywhere else. and i'm not sure extracting this into a function is justified due to the \"clear role and input/output\" concern.\r\nin this case although this is a huge function, i don't think that taking each of these 5 line blocks into a separate function makes sense. (they're only used in this context)\r\nare you just concerned about the variable declaration? redis actually has many places today that declare variables mid function without opening a scope. (and also we can move them to the top of the function)",
        "createdAt" : "2020-12-20T11:48:56Z",
        "updatedAt" : "2020-12-24T09:24:25Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "528b0165-d3fe-449e-a551-3cd536968d8f",
        "parentId" : "b5868911-a493-4d5b-b912-9deb869ebb96",
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "Not concerned about the variables declaration, only about the length of the function and breaking it down into named segments. Another benefit is it's one step closer to refactoring everything to be really async.",
        "createdAt" : "2020-12-21T18:43:21Z",
        "updatedAt" : "2020-12-24T09:24:25Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3cd799b473c69edde7c2e0b2114525f7323ccd72",
    "line" : 240,
    "diffHunk" : "@@ -1,1 +2212,2216 @@        }\n\n        /* Set the slave port, so that Master's INFO command can list the\n         * slave listening port correctly. */\n        {"
  },
  {
    "id" : "f7ec08a5-e370-47ed-9bbe-2e572f6f86ae",
    "prId" : 8200,
    "prUrl" : "https://github.com/redis/redis/pull/8200#pullrequestreview-554046354",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b41c7d0-abcd-4aaa-9ae4-ec10f104a406",
        "parentId" : null,
        "authorId" : "b80d1b62-d71e-412b-8ac1-75ca11c2ea56",
        "body" : "Seems like these 2 cases could be combined to eliminate the duplicate code.  Something like:\r\n```C\r\nsds masteruser = (server.masteruser) ? sdsnew(server.masteruser) : NULL;\r\n...\r\nif (masteruser) err = sendSynchronousCommand(... with masteruser ...)\r\nelse            err = sendSynchronousCommand(... without masteruser ...)\r\n...\r\nsdsfree(masteruser);\r\n```",
        "createdAt" : "2020-12-16T18:09:25Z",
        "updatedAt" : "2020-12-17T12:53:03Z",
        "lastEditedBy" : "b80d1b62-d71e-412b-8ac1-75ca11c2ea56",
        "tags" : [
        ]
      },
      {
        "id" : "bdd2a821-80f9-4e37-b7f5-ef06b614ea9e",
        "parentId" : "6b41c7d0-abcd-4aaa-9ae4-ec10f104a406",
        "authorId" : "923f0482-b8b2-486e-aea3-d56720913631",
        "body" : "Re-factored this part of the code a bit to remove duplicates",
        "createdAt" : "2020-12-16T20:11:35Z",
        "updatedAt" : "2020-12-17T12:53:03Z",
        "lastEditedBy" : "923f0482-b8b2-486e-aea3-d56720913631",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbaaa2e777aca09434c9bc5cd66c77852f270cd6",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +2187,2191 @@            if (err) goto write_error;\n            server.repl_state = REPL_STATE_RECEIVE_AUTH;\n            return;\n        } else {\n            server.repl_state = REPL_STATE_SEND_PORT;"
  },
  {
    "id" : "1f1c402e-a06c-4cbc-a48c-7e3c6aa490ba",
    "prId" : 8108,
    "prUrl" : "https://github.com/redis/redis/pull/8108#pullrequestreview-542759047",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bbdd3bd-8f1f-433e-9342-a7f9f24cdc2c",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "i'm not certain we need these wrappers. i think that any new things we'll need to do when creating backups (like adding a module notification in a later PR this week), will be done in db.c, and these wrappers will remain thin wrappers forever.\r\nBut also, i guess they don't cause any harm, and they do add comments that better explain when and how they're used.",
        "createdAt" : "2020-12-02T08:13:36Z",
        "updatedAt" : "2020-12-02T11:39:40Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "2f5f8688-9356-43dc-bfee-b8cfb5584357",
        "parentId" : "4bbdd3bd-8f1f-433e-9342-a7f9f24cdc2c",
        "authorId" : "98e31153-705f-4299-a152-78c428055d23",
        "body" : "I am not sure, comments are important to help us understand. Initially I think wrappers are easy to add some sample records or somethings if we want.\r\n\r\nI am ok if you want to remove wrappers.",
        "createdAt" : "2020-12-02T11:49:02Z",
        "updatedAt" : "2020-12-02T11:49:02Z",
        "lastEditedBy" : "98e31153-705f-4299-a152-78c428055d23",
        "tags" : [
        ]
      },
      {
        "id" : "b3a42eb3-25df-4090-86fc-d6ad97eb96bf",
        "parentId" : "4bbdd3bd-8f1f-433e-9342-a7f9f24cdc2c",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "let's keep them for now..\r\n\r\nsomeone will probably make an \"optimization\" PR some day suggesting to remove them. 8-)",
        "createdAt" : "2020-12-02T11:51:12Z",
        "updatedAt" : "2020-12-02T11:51:12Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "a09917202d1d21c324090fd3c513b77b3e118446",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +1436,1440 @@ * by disklessLoadRestoreBackup or freed by disklessLoadDiscardBackup later. */\ndbBackup *disklessLoadMakeBackup(void) {\n    return backupDb();\n}\n"
  },
  {
    "id" : "7457e42c-ec7e-4a30-8371-747f152362c6",
    "prId" : 6271,
    "prUrl" : "https://github.com/redis/redis/pull/6271#pullrequestreview-460069681",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3de7e66a-6562-4274-ac54-0b2434a4448b",
        "parentId" : null,
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "@oranagra So maybe it's better to set it to `NULL`, call `freeClient()` to clean up, then set the new masterhost and reconnect?",
        "createdAt" : "2020-08-03T10:27:52Z",
        "updatedAt" : "2020-08-03T10:28:54Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      },
      {
        "id" : "c2878b6c-0ac7-420d-91a2-ba6de4c69695",
        "parentId" : "3de7e66a-6562-4274-ac54-0b2434a4448b",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "@yossigo that's what i did.\r\nor am i missing something?",
        "createdAt" : "2020-08-03T14:23:37Z",
        "updatedAt" : "2020-08-03T14:23:37Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1365a9a4a24f76cebfe74f999397d37a90bb2bf",
    "line" : 157,
    "diffHunk" : "@@ -1,1 +2492,2496 @@    disconnectAllBlockedClients(); /* Clients blocked in master, now slave. */\n\n    /* Setting masterhost only after the call to freeClient since it calls\n     * replicationHandleMasterDisconnection which can trigger a re-connect\n     * directly from within that call. */"
  }
]