[
  {
    "id" : "6be2222b-51f7-4b29-9eec-4291df778077",
    "prId" : 27483,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/27483#pullrequestreview-160439614",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d11cd9e-add5-4d9f-899f-279ea4330931",
        "parentId" : null,
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "Might as well calculate `filesByPath` inside the `if`.",
        "createdAt" : "2018-10-01T19:01:57Z",
        "updatedAt" : "2018-10-01T19:14:05Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd3277c21997082e1511508bbbab0939edf2b1c8",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +138,142 @@            },\n        };\n        if (useGetSourceFileByPath) {\n            const filesByPath = mapEntries(files, (fileName, file) => [toPath(fileName, \"\", getCanonicalFileName), file]);\n            result.getSourceFileByPath = (_fileName, path) => filesByPath.get(path);"
  },
  {
    "id" : "dd77ce67-fea2-45f8-a53e-25b726889235",
    "prId" : 27060,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/27060#pullrequestreview-155695967",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3272ab44-8f5e-4c66-a7f1-b23de76de7d1",
        "parentId" : null,
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "I think this change is correct? `rootDir` doesn't affect module resolution, it affects emit.",
        "createdAt" : "2018-09-15T00:29:11Z",
        "updatedAt" : "2018-09-15T00:29:25Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae51afa853b45c787d0172db368ffc4390fa69e3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +306,310 @@        });\n\n        it(\"succeeds if rootdir changes\", () => {\n            const program1 = newProgram(files, [\"a.ts\"], { target, module: ModuleKind.CommonJS, rootDir: \"/a/b\" });\n            updateProgram(program1, [\"a.ts\"], { target, module: ModuleKind.CommonJS, rootDir: \"/a/c\" }, noop);"
  },
  {
    "id" : "767e39c6-90a9-47c6-a5fb-ef8fdb31ac21",
    "prId" : 26308,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/26308#pullrequestreview-144568918",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45ba88a2-cdd1-4c5b-8f96-ea23b21db0b5",
        "parentId" : null,
        "authorId" : "fda8894a-88d1-42dd-a55e-7a8592225c11",
        "body" : "This change is unrelated. The function is used in the same way as `checkResolvedModule` but is never called with `undefined` arguments. So this is just a drive-by simplification.",
        "createdAt" : "2018-08-08T19:19:05Z",
        "updatedAt" : "2018-08-08T19:19:06Z",
        "lastEditedBy" : "fda8894a-88d1-42dd-a55e-7a8592225c11",
        "tags" : [
        ]
      }
    ],
    "commit" : "711b5660cbe1cb715d34713461821733a6af0e40",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +178,182 @@    }\n\n    function checkResolvedTypeDirective(actual: ResolvedTypeReferenceDirective, expected: ResolvedTypeReferenceDirective) {\n        assert.equal(actual.resolvedFileName, expected.resolvedFileName, `'resolvedFileName': expected '${actual.resolvedFileName}' to be equal to '${expected.resolvedFileName}'`);\n        assert.equal(actual.primary, expected.primary, `'primary': expected '${actual.primary}' to be equal to '${expected.primary}'`);"
  }
]