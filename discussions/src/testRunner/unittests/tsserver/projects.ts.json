[
  {
    "id" : "11bcfaf1-9919-4e87-804e-bb0decbec6bc",
    "prId" : 41222,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/41222#pullrequestreview-519994897",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "271c4958-e187-4dc6-b5d8-1f090d8295ad",
        "parentId" : null,
        "authorId" : "a954cad1-2428-49ae-ad5b-caef29f1f30c",
        "body" : "Why include it instead of removing it from the response? Are there other cases where TSServer could tell us to expect a file that doesn't actually exist?",
        "createdAt" : "2020-10-24T00:02:05Z",
        "updatedAt" : "2020-10-24T00:02:06Z",
        "lastEditedBy" : "a954cad1-2428-49ae-ad5b-caef29f1f30c",
        "tags" : [
        ]
      },
      {
        "id" : "6411f415-b338-4d69-bba9-c7aaca1c08a6",
        "parentId" : "271c4958-e187-4dc6-b5d8-1f090d8295ad",
        "authorId" : "a954cad1-2428-49ae-ad5b-caef29f1f30c",
        "body" : "That is, where we're not expected to then create it? Of course, move to file probably gives a non-existent file path but expects us to go create it - I'm not sure about that though.",
        "createdAt" : "2020-10-24T00:03:05Z",
        "updatedAt" : "2020-10-24T00:03:12Z",
        "lastEditedBy" : "a954cad1-2428-49ae-ad5b-caef29f1f30c",
        "tags" : [
        ]
      },
      {
        "id" : "83161561-0d08-4643-bd1e-2ed965234986",
        "parentId" : "271c4958-e187-4dc6-b5d8-1f090d8295ad",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "I am not sure. but i am certain that extendedSourceFiles should contain source file name that wasnt present. It would need another file exists check or another field just to return information if file is present or not and that seems unnecessary just to let project structure information. Let me know if you think its necessary. If it is we would probably need another field on tsconfig source files ",
        "createdAt" : "2020-10-27T18:46:29Z",
        "updatedAt" : "2020-10-27T18:46:30Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "be2624d0-0660-46ae-a772-13a754810e0c",
        "parentId" : "271c4958-e187-4dc6-b5d8-1f090d8295ad",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Ping @uniqueiniquity ",
        "createdAt" : "2020-10-28T18:42:33Z",
        "updatedAt" : "2020-10-28T18:42:33Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "3e64950b-d03d-4cf9-b344-5bf6210a78c4",
        "parentId" : "271c4958-e187-4dc6-b5d8-1f090d8295ad",
        "authorId" : "a954cad1-2428-49ae-ad5b-caef29f1f30c",
        "body" : "Sorry for the delay.\r\nAfter further thought, it's probably fine.\r\nIf you send VS a file here that doesn't exist, the user will see a somewhat strange diagnostic in the error list complaining that the file doesn't exist, but it won't break or crash. \r\nIf we ask for semantic diagnostics for the tsconfig that does exist, will we get one complaining about the missing referenced file?",
        "createdAt" : "2020-10-28T23:31:00Z",
        "updatedAt" : "2020-10-28T23:31:07Z",
        "lastEditedBy" : "a954cad1-2428-49ae-ad5b-caef29f1f30c",
        "tags" : [
        ]
      },
      {
        "id" : "fd4f0a47-de48-4a34-93d7-a0474b6b71f0",
        "parentId" : "271c4958-e187-4dc6-b5d8-1f090d8295ad",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "thats correct",
        "createdAt" : "2020-10-29T19:15:44Z",
        "updatedAt" : "2020-10-29T19:15:44Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "3080ba6c8c826dd3ee037dbc95bd64fec08f3662",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +1520,1524 @@                { fileName: file.path, isSourceOfProjectReferenceRedirect: false },\n                { fileName: config.path, isSourceOfProjectReferenceRedirect: false },\n                { fileName: `${tscWatch.projectRoot}/tsconfig_base.json`, isSourceOfProjectReferenceRedirect: false },\n            ]);\n        });"
  },
  {
    "id" : "51278285-2480-4c43-9f85-017e933001e8",
    "prId" : 29332,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/29332#pullrequestreview-208663438",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85f2a735-4380-40be-a38c-e4a8f10ebf52",
        "parentId" : null,
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "What became the 0th completion?",
        "createdAt" : "2019-02-20T01:46:09Z",
        "updatedAt" : "2019-02-27T18:11:45Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      },
      {
        "id" : "3a154b31-965f-41e8-82dd-0bd007846c6c",
        "parentId" : "85f2a735-4380-40be-a38c-e4a8f10ebf52",
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "It's globalThis. Hm. I'll add the assertion although it's not very interesting. I'll make a note in the assertion message.",
        "createdAt" : "2019-02-27T17:34:31Z",
        "updatedAt" : "2019-02-27T18:11:45Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "517dc15a4c42ad0610f7198158cd7483e986c41e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +709,713 @@            const project = configuredProjectAt(projectService, 0);\n            let completions = project.getLanguageService().getCompletionsAtPosition(file1.path, 1, emptyOptions);\n            assert(completions && completions.entries[1].name === \"hello\", `expected entry hello to be in completion list`);\n            assert(completions && completions.entries[0].name === \"globalThis\", `first entry should be globalThis (not strictly relevant for this test).`);\n"
  }
]