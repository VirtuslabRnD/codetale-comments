[
  {
    "id" : "4b95da7d-3f88-44c5-961a-b1c82ff9b50b",
    "prId" : 36807,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/36807#pullrequestreview-359272856",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4a77eb7-6992-4472-9586-389a00005cd2",
        "parentId" : null,
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Why cant this mix with `import type { x, default as z} from \"lib` just like normal import statement ?",
        "createdAt" : "2020-02-14T23:17:34Z",
        "updatedAt" : "2020-02-14T23:17:34Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "e321feef-8ab0-4cea-a85a-583f7234110d",
        "parentId" : "a4a77eb7-6992-4472-9586-389a00005cd2",
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "I believe we decided it would be ambiguous what the \"type\" keyword applied to and forced explicitness.",
        "createdAt" : "2020-02-14T23:18:56Z",
        "updatedAt" : "2020-02-14T23:18:57Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "a7b2542f-19ff-472a-b1a8-8365068e4cd0",
        "parentId" : "a4a77eb7-6992-4472-9586-389a00005cd2",
        "authorId" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "body" : "It could, but I’m not confident that’s desirable. My personal preference for readability would probably be what’s represented here in the test.",
        "createdAt" : "2020-02-14T23:19:21Z",
        "updatedAt" : "2020-02-14T23:19:21Z",
        "lastEditedBy" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "tags" : [
        ]
      },
      {
        "id" : "3bedb150-7e35-4074-a990-99d84443bfa3",
        "parentId" : "a4a77eb7-6992-4472-9586-389a00005cd2",
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "@andrewbranch Consider adding a comment about this: `// Type-only imports are not allowed to combine (for readability)`.  Maybe on the test too.",
        "createdAt" : "2020-02-14T23:22:17Z",
        "updatedAt" : "2020-02-14T23:22:18Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "87446294-8488-479e-a567-6dbdafae3580",
        "parentId" : "a4a77eb7-6992-4472-9586-389a00005cd2",
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Probably possible at a later pass, but seems reasonable to leave it the way it is now until we get further feedback.",
        "createdAt" : "2020-02-14T23:23:00Z",
        "updatedAt" : "2020-02-14T23:23:01Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "e3421501-5ddf-43e5-ac13-5c88338ba813",
        "parentId" : "a4a77eb7-6992-4472-9586-389a00005cd2",
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "If this is a stylistic choice in organizeImports, I don't think \"allowed\" is the right word - I definitely read that as a language restriction.",
        "createdAt" : "2020-02-14T23:24:54Z",
        "updatedAt" : "2020-02-14T23:24:54Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "9d787cff-2524-4b8c-96bb-fc92396166c4",
        "parentId" : "a4a77eb7-6992-4472-9586-389a00005cd2",
        "authorId" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "body" : "My comment in the implementation was actually referring to the language restriction, ignoring the possibility of rewriting the default as a named import. I’ll follow up to clarify.",
        "createdAt" : "2020-02-14T23:29:21Z",
        "updatedAt" : "2020-02-14T23:29:21Z",
        "lastEditedBy" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec495ab12114a0f4092ca6b37ce6db434527053b",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +186,190 @@                    `import type { x } from \"lib\";`,\n                    `import type * as y from \"lib\";`,\n                    `import type z from \"lib\";`);\n                const actualCoalescedImports = OrganizeImports.coalesceImports(sortedImports);\n                const expectedCoalescedImports = actualCoalescedImports;"
  }
]