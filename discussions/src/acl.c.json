[
  {
    "id" : "f6050174-61e9-4516-a700-1cb5cad1659a",
    "prId" : 7993,
    "prUrl" : "https://github.com/redis/redis/pull/7993#pullrequestreview-541228912",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9455a2e1-b1f4-448a-84ad-163bf2664e09",
        "parentId" : null,
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "Instead can I recommend \"nochannels\"? It removes the ambiguity of what the default is. I thought resetkeys was a bad idea. ",
        "createdAt" : "2020-11-25T02:22:06Z",
        "updatedAt" : "2020-11-29T12:14:37Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "4f259d2a-b8ef-45a2-b77f-028737dd7706",
        "parentId" : "9455a2e1-b1f4-448a-84ad-163bf2664e09",
        "authorId" : "99372f0e-10c0-44d7-a1cc-8d4d027b3fa8",
        "body" : "I can live with that, but in that case I'd like to have 'nokeys' as an alias for 'resetkeys' as well - makes sense?",
        "createdAt" : "2020-11-25T12:35:44Z",
        "updatedAt" : "2020-11-29T14:04:12Z",
        "lastEditedBy" : "99372f0e-10c0-44d7-a1cc-8d4d027b3fa8",
        "tags" : [
        ]
      },
      {
        "id" : "8ba354f5-f69e-4247-96af-e85ba0cf8fb1",
        "parentId" : "9455a2e1-b1f4-448a-84ad-163bf2664e09",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "Sure",
        "createdAt" : "2020-11-30T19:34:50Z",
        "updatedAt" : "2020-11-30T19:34:50Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "88505abc44dd295b6c121e1654b30b826be1124e",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +769,773 @@ *              It is possible to specify multiple patterns.\n * allchannels              Alias for &*\n * resetchannels            Flush the list of allowed keys patterns.\n * ><password>  Add this password to the list of valid password for the user.\n *              For example >mypass will add \"mypass\" to the list."
  },
  {
    "id" : "be56a106-e459-49d0-af31-f71e9c5f3048",
    "prId" : 7993,
    "prUrl" : "https://github.com/redis/redis/pull/7993#pullrequestreview-540474101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "119186d8-4f22-44e3-b4a6-571f512bffb0",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "please add a top comment that describes the inputs and output for faster read.",
        "createdAt" : "2020-11-29T10:26:06Z",
        "updatedAt" : "2020-11-29T12:14:37Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "96e12ced-4d41-405c-86a5-f204c0282e41",
        "parentId" : "119186d8-4f22-44e3-b4a6-571f512bffb0",
        "authorId" : "99372f0e-10c0-44d7-a1cc-8d4d027b3fa8",
        "body" : "Done.",
        "createdAt" : "2020-11-29T12:14:20Z",
        "updatedAt" : "2020-11-29T12:14:37Z",
        "lastEditedBy" : "99372f0e-10c0-44d7-a1cc-8d4d027b3fa8",
        "tags" : [
        ]
      }
    ],
    "commit" : "88505abc44dd295b6c121e1654b30b826be1124e",
    "line" : 202,
    "diffHunk" : "@@ -1,1 +1258,1262 @@ * list. Glob-style pattern matching is employed, unless the literal flag is\n * set. Returns ACL_OK if access is granted or ACL_DENIED_CHANNEL otherwise. */\nint ACLCheckPubsubChannelPerm(sds channel, list *allowed, int literal) {\n    listIter li;\n    listNode *ln;"
  },
  {
    "id" : "f994c541-deb8-4b55-9591-82cbcbd15476",
    "prId" : 7966,
    "prUrl" : "https://github.com/redis/redis/pull/7966#pullrequestreview-518012210",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b90e4fe0-d666-4d5e-863c-151b002464c0",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "i guess that one slipped in by mistake\r\n```suggestion\r\n```",
        "createdAt" : "2020-10-27T08:53:13Z",
        "updatedAt" : "2020-10-27T19:49:44Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "1f6db6f4-1c7c-4c2f-aad0-378828ab2ff7",
        "parentId" : "b90e4fe0-d666-4d5e-863c-151b002464c0",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "and I thought I nitpick :D",
        "createdAt" : "2020-10-27T18:19:53Z",
        "updatedAt" : "2020-10-27T19:49:44Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "30344f73363cd59c2e7665556c3fd7b7c2c122bc",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +543,547 @@        applied[best] = 1;\n    }\n\n    /* Fix the final ACLs with single commands differences. */\n    dictIterator *di = dictGetIterator(server.orig_commands);"
  },
  {
    "id" : "8f451b43-fb1f-47ca-863b-8dcca27d4f0d",
    "prId" : 7966,
    "prUrl" : "https://github.com/redis/redis/pull/7966#pullrequestreview-518159538",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55db922c-073d-4ba8-ae28-ff22725412fd",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "maybe we need to skip categories that where already used in the previous iterations of the `while(1)` loop?\r\ni have some paranoia about an edge case resonance which can cause an infinite loop here.",
        "createdAt" : "2020-10-27T08:57:23Z",
        "updatedAt" : "2020-10-27T19:49:44Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "217d7b4c-f956-42a4-87eb-94091b658378",
        "parentId" : "55db922c-073d-4ba8-ae28-ff22725412fd",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "Sure",
        "createdAt" : "2020-10-27T19:48:39Z",
        "updatedAt" : "2020-10-27T19:49:44Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "cdf84667-0fa1-4612-a25b-7d84033829dc",
        "parentId" : "55db922c-073d-4ba8-ae28-ff22725412fd",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "i'm not at all sure it's possible, maybe just my paranoia from seeing the nested loops and the fear of some unexpected resonance effect..\r\n\r\nbut anyway, the 3 lines you added can do any harm, nearly 0 affect to readability, and execution time, so i guess we'll keep them, right?",
        "createdAt" : "2020-10-27T21:19:33Z",
        "updatedAt" : "2020-10-27T21:19:33Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "30344f73363cd59c2e7665556c3fd7b7c2c122bc",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +501,505 @@        int best = -1;\n        unsigned long mindiff = INT_MAX, maxsame = 0;\n        for (int j = 0; ACLCommandCategories[j].flag != 0; j++) {\n            if (applied[j]) continue;\n"
  },
  {
    "id" : "cda3bc1f-5266-4fa5-82b5-eebd60cff032",
    "prId" : 7888,
    "prUrl" : "https://github.com/redis/redis/pull/7888#pullrequestreview-503899067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5bccf00-85ed-4d69-a62b-c6c2c088c6c7",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "why is this needed? i see only called on startup.",
        "createdAt" : "2020-10-07T07:37:30Z",
        "updatedAt" : "2020-10-18T05:49:49Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "e7d76dd1-bbe1-4a08-bc22-453b15a65316",
        "parentId" : "a5bccf00-85ed-4d69-a62b-c6c2c088c6c7",
        "authorId" : "351cea45-3d66-4827-bbfb-0a2c2c79b24b",
        "body" : "Hi @oranagra, the reason of using this function is in current code logic, populateCommandTable function has been called earlier, and sentinel is replacing with a different command table later in initSentinel call, so it need to clear the previous assignment of the command ids. Providing this function will make code clear and safe rather than directly changing in main server logic (populateCommandTable function).",
        "createdAt" : "2020-10-07T13:49:12Z",
        "updatedAt" : "2020-10-18T05:49:49Z",
        "lastEditedBy" : "351cea45-3d66-4827-bbfb-0a2c2c79b24b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2a0914f5146d49122650afc216d502d9f6bbb2e",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +1049,1053 @@    commandId = NULL;\n    nextid = 0;\n}\n\n/* Return an username by its name, or NULL if the user does not exist. */"
  },
  {
    "id" : "07f9e1e4-d381-425b-908a-d5051a328c60",
    "prId" : 5806,
    "prUrl" : "https://github.com/redis/redis/pull/5806#pullrequestreview-196475595",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65af1f32-486d-48f9-8a3a-0d2b6bc72558",
        "parentId" : null,
        "authorId" : "e0863aff-4317-496e-aaec-69c95f9a197a",
        "body" : "Thanks! No need for this check btw. free(NULL) is always valid.",
        "createdAt" : "2019-01-25T12:00:11Z",
        "updatedAt" : "2019-01-25T12:00:11Z",
        "lastEditedBy" : "e0863aff-4317-496e-aaec-69c95f9a197a",
        "tags" : [
        ]
      }
    ],
    "commit" : "0de83bcc62cec57a3e0bd5912fd3862f25654ddb",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +576,580 @@            }\n        }\n        if (keyidx) getKeysFreeResult(keyidx);\n    }\n"
  },
  {
    "id" : "dbf3c579-af1d-4ac2-a0e5-b789560578cb",
    "prId" : 5801,
    "prUrl" : "https://github.com/redis/redis/pull/5801#pullrequestreview-195637271",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fcb0fd1b-b022-41cc-8f91-2195b96fbe75",
        "parentId" : null,
        "authorId" : "11a7c5f7-8b3b-4afb-90de-02a11f3a6cb8",
        "body" : "I just wonder, what is better to return Null or \"Not Exist\" Message?\r\n(just question.)",
        "createdAt" : "2019-01-23T17:05:54Z",
        "updatedAt" : "2019-01-23T17:05:54Z",
        "lastEditedBy" : "11a7c5f7-8b3b-4afb-90de-02a11f3a6cb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "496497f81a2c64975c7bbb9bd45bef9a2db91687",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +562,566 @@        user *u = ACLGetUserByName(c->argv[2]->ptr,sdslen(c->argv[2]->ptr));\n        if (u == NULL) {\n            addReplyNull(c);\n            return;\n        }"
  }
]