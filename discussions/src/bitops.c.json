[
  {
    "id" : "421a54f1-78c3-4054-b256-45a171414aba",
    "prId" : 9191,
    "prUrl" : "https://github.com/redis/redis/pull/9191#pullrequestreview-702588396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb9feb99-681e-47a8-897d-73da2e12844d",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "you also need to cast `bytes*8` and `start*8` below to avoid overflow in the multiplication.",
        "createdAt" : "2021-07-08T06:44:03Z",
        "updatedAt" : "2021-07-08T06:59:31Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "1173bf10-9e24-43af-bd52-66ab5b4084f4",
        "parentId" : "cb9feb99-681e-47a8-897d-73da2e12844d",
        "authorId" : "473bc8a0-7ca7-405b-9794-3e9f874fb547",
        "body" : "I miss it. Fix and add a test.\r\nBTW there is no way to construct a bitmap of all 1. Or I can add more tests.",
        "createdAt" : "2021-07-08T11:00:49Z",
        "updatedAt" : "2021-07-08T11:00:49Z",
        "lastEditedBy" : "473bc8a0-7ca7-405b-9794-3e9f874fb547",
        "tags" : [
        ]
      },
      {
        "id" : "5f1f945e-0f1b-43e9-b64f-b9bdb370032c",
        "parentId" : "cb9feb99-681e-47a8-897d-73da2e12844d",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "i don't understand what you mean.",
        "createdAt" : "2021-07-08T11:04:24Z",
        "updatedAt" : "2021-07-08T11:04:24Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "990b86b7-1c13-4ded-a8f8-6133b1eb5483",
        "parentId" : "cb9feb99-681e-47a8-897d-73da2e12844d",
        "authorId" : "473bc8a0-7ca7-405b-9794-3e9f874fb547",
        "body" : "I want to test bitcount overflow. It needs a sting 536870913 bytes with all bytes set to 255. But I can't generate such a string quickly.",
        "createdAt" : "2021-07-08T11:09:15Z",
        "updatedAt" : "2021-07-08T11:09:15Z",
        "lastEditedBy" : "473bc8a0-7ca7-405b-9794-3e9f874fb547",
        "tags" : [
        ]
      },
      {
        "id" : "7d322236-3683-4ba2-a8d1-9f8ff70b085c",
        "parentId" : "cb9feb99-681e-47a8-897d-73da2e12844d",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "only way i can think of is a loop that uses SETRANGE with some big bulk of `\\xff\\xff\\xff`.\r\ni.e. you can generate a 1mb string in tcl, and then send 512 SETRANGE commands ",
        "createdAt" : "2021-07-08T11:50:02Z",
        "updatedAt" : "2021-07-08T11:50:02Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "452ca719-8cab-4ece-af37-59ad95b87fd2",
        "parentId" : "cb9feb99-681e-47a8-897d-73da2e12844d",
        "authorId" : "473bc8a0-7ca7-405b-9794-3e9f874fb547",
        "body" : "```\r\n        set mega [expr (1 << 20)]\r\n        set part [string repeat \"\\xFF\" $mega]\r\n        for {set i 0} {$i < 512} {incr i} {\r\n            r setrange mykey [expr $i * $mega] $part\r\n        }\r\n```\r\n\r\nThis code takes more than 25 seconds. So I think we can give up.",
        "createdAt" : "2021-07-08T12:20:03Z",
        "updatedAt" : "2021-07-08T12:20:04Z",
        "lastEditedBy" : "473bc8a0-7ca7-405b-9794-3e9f874fb547",
        "tags" : [
        ]
      },
      {
        "id" : "0c0c7df4-5acd-4989-ab54-3451ebf49999",
        "parentId" : "cb9feb99-681e-47a8-897d-73da2e12844d",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "we can make it depend on `--accurate` i.e. `if {$::accurate}`",
        "createdAt" : "2021-07-08T15:16:00Z",
        "updatedAt" : "2021-07-08T15:16:01Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "35ede216-a9f5-4bcd-9e8c-4b4f4f8de66b",
        "parentId" : "cb9feb99-681e-47a8-897d-73da2e12844d",
        "authorId" : "473bc8a0-7ca7-405b-9794-3e9f874fb547",
        "body" : "OK. Test added.",
        "createdAt" : "2021-07-09T00:10:41Z",
        "updatedAt" : "2021-07-09T00:10:41Z",
        "lastEditedBy" : "473bc8a0-7ca7-405b-9794-3e9f874fb547",
        "tags" : [
        ]
      }
    ],
    "commit" : "a47dbb81feaeeaedc22e2b1d0bb5e957efa239b6",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +889,893 @@    } else {\n        long bytes = end-start+1;\n        long long pos = redisBitpos(p+start,bytes,bit);\n\n        /* If we are looking for clear bits, and the user specified an exact"
  }
]