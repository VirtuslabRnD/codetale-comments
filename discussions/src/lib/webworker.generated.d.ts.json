[
  {
    "id" : "cdcece94-859c-4dc5-ac67-9b5594f88c1d",
    "prId" : 19426,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/19426#pullrequestreview-72015192",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "919b9cd0-5aef-4462-acd3-33feda7142b8",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "the new overloads have `useCapture?: boolean` instead of `options?: boolean | EventListenerOptions`. Why drop `EvenListenerOptions`?",
        "createdAt" : "2017-10-25T20:42:32Z",
        "updatedAt" : "2017-10-25T20:42:32Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "b43a72af-eaeb-4b98-82d2-a32001959d36",
        "parentId" : "919b9cd0-5aef-4462-acd3-33feda7142b8",
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "yeah. also addeventListener has the wrong signature. will need to fix them all.",
        "createdAt" : "2017-10-25T21:16:20Z",
        "updatedAt" : "2017-10-25T21:16:20Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      }
    ],
    "commit" : "03ad0c6cde73c0bc743dc2688913b94de283d000",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +1878,1882 @@declare function addEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type: K, listener: (this: DedicatedWorkerGlobalScope, ev: DedicatedWorkerGlobalScopeEventMap[K]) => any, useCapture?: boolean): void;\ndeclare function addEventListener(type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean): void;\ndeclare function removeEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type: K, listener: (this: DedicatedWorkerGlobalScope, ev: DedicatedWorkerGlobalScopeEventMap[K]) => any, useCapture?: boolean): void;\ndeclare function removeEventListener(type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean): void;\ntype AlgorithmIdentifier = string | Algorithm;"
  },
  {
    "id" : "91068468-e765-4795-89dd-7d02bfe342bc",
    "prId" : 7619,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "262c8c38-e88c-40a7-b6c3-317a3682ab22",
        "parentId" : null,
        "authorId" : "586be659-ecf3-48f2-9e93-ed3941167d40",
        "body" : "TIL `listener` is optional. Although not sure what's the point in allowing this :/\n",
        "createdAt" : "2016-03-28T20:30:02Z",
        "updatedAt" : "2016-04-07T05:17:52Z",
        "lastEditedBy" : "586be659-ecf3-48f2-9e93-ed3941167d40",
        "tags" : [
        ]
      },
      {
        "id" : "81415e5b-6576-4112-ad0e-498c7b918ec5",
        "parentId" : "262c8c38-e88c-40a7-b6c3-317a3682ab22",
        "authorId" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "body" : "As the library file is generated from the spec file we got from Edge team, this is a reflection of https://github.com/Microsoft/TSJS-lib-generator/blob/master/inputfiles/browser.webidl.xml#L3558\n",
        "createdAt" : "2016-03-28T20:49:51Z",
        "updatedAt" : "2016-04-07T05:17:53Z",
        "lastEditedBy" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e78ff0b3c67dba94e4ca8733294e5f77bd43e39",
    "line" : 287,
    "diffHunk" : "@@ -1,1 +231,235 @@\ninterface EventTarget {\n    addEventListener(type: string, listener?: EventListenerOrEventListenerObject, useCapture?: boolean): void;\n    dispatchEvent(evt: Event): boolean;\n    removeEventListener(type: string, listener?: EventListenerOrEventListenerObject, useCapture?: boolean): void;"
  },
  {
    "id" : "cd40fbdd-0b24-446d-9ac3-b42e91ebb281",
    "prId" : 5041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1f74ebd-b4b5-4fda-ab61-7f012d587fb7",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "why are these still here then?\n",
        "createdAt" : "2015-09-30T22:16:43Z",
        "updatedAt" : "2015-10-01T17:08:54Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "426c6be6-a844-4e82-afda-0bd719f8c386",
        "parentId" : "a1f74ebd-b4b5-4fda-ab61-7f012d587fb7",
        "authorId" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "body" : "I only removed the ones mentioned in Travis' email. Not all the types whose name starting with \"ms\".\n",
        "createdAt" : "2015-09-30T22:19:49Z",
        "updatedAt" : "2015-10-01T17:08:54Z",
        "lastEditedBy" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "tags" : [
        ]
      },
      {
        "id" : "e9646ad9-7f4a-4082-b54c-519cdcf38867",
        "parentId" : "a1f74ebd-b4b5-4fda-ab61-7f012d587fb7",
        "authorId" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "body" : "I think some of those might be implemented in Edge. The removed types are either internal ones, or only use in an app context. Edge specific ones are kept. \n",
        "createdAt" : "2015-09-30T22:21:19Z",
        "updatedAt" : "2015-10-01T17:08:54Z",
        "lastEditedBy" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "tags" : [
        ]
      }
    ],
    "commit" : "1860f4358e64d9c97c6f5b9008d2287689f55267",
    "line" : null,
    "diffHunk" : "@@ -1,1 +520,524 @@}\n\ninterface MSBlobBuilder {\n    append(data: any, endings?: string): void;\n    getBlob(contentType?: string): Blob;"
  },
  {
    "id" : "64f141f6-de0f-4dde-ad8a-4e25c5fbc09e",
    "prId" : 4306,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02595a14-c1f0-4ab0-b23c-8553a172dbe4",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "this is going to be a breaking change. are we sure that ImageData does not have a constructor overload that takes no arguments?\n",
        "createdAt" : "2015-08-13T20:07:22Z",
        "updatedAt" : "2015-08-19T22:02:43Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "038cae54-2f1a-4479-903e-ed5979fc070c",
        "parentId" : "02595a14-c1f0-4ab0-b23c-8553a172dbe4",
        "authorId" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "body" : "The [MDN spec](https://developer.mozilla.org/en-US/docs/Web/API/ImageData/ImageData) has only two constructors with arguments. And I tried in IE, Edge, Firefox and Chrome, none of them supports an argument-less constructor for `ImageData`\n",
        "createdAt" : "2015-08-13T20:18:33Z",
        "updatedAt" : "2015-08-19T22:02:43Z",
        "lastEditedBy" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "tags" : [
        ]
      },
      {
        "id" : "54d66c02-f6d9-4eef-9985-95dfd2a3aed4",
        "parentId" : "02595a14-c1f0-4ab0-b23c-8553a172dbe4",
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "thanks :+1: \n",
        "createdAt" : "2015-08-13T20:27:16Z",
        "updatedAt" : "2015-08-19T22:02:43Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      }
    ],
    "commit" : "df3ecab074a27962956482e8609651acc2069270",
    "line" : null,
    "diffHunk" : "@@ -1,1 +468,472 @@interface ImageDataConstructor {\n    prototype: ImageData;\n    new(width: number, height: number): ImageData;\n    new(array: Uint8ClampedArray, width: number, height: number): ImageData;\n}"
  },
  {
    "id" : "9cb500a9-4c04-4978-b6dc-7affb97ee9b6",
    "prId" : 45324,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/45324#pullrequestreview-722226063",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85c38113-8ad2-4c89-904b-25e17ce063d1",
        "parentId" : null,
        "authorId" : "9302e396-f4ae-400e-962a-ed2cd3258fdf",
        "body" : "Big changes, but this brings this file up-to-date with the `dom.d.ts` changes. WebWorker being opt-in meant we focused on the dom changes for the beta and these follow on.",
        "createdAt" : "2021-08-04T12:35:29Z",
        "updatedAt" : "2021-08-04T12:35:29Z",
        "lastEditedBy" : "9302e396-f4ae-400e-962a-ed2cd3258fdf",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5f670063d3ecdb12e8a5b36aa1d349c8cf6647b",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +3,7 @@/////////////////////////////\n\ninterface AddEventListenerOptions extends EventListenerOptions {\n    once?: boolean;\n    passive?: boolean;"
  }
]