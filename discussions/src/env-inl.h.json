[
  {
    "id" : "e6f3c618-056d-4c73-92b2-b25958db8465",
    "prId" : 1238,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "adaf8900-a878-4c5a-a71f-a6e30b4096c1",
        "parentId" : null,
        "authorId" : "d47a8b61-a8ac-4504-809d-8432d9e75d95",
        "body" : "It doesn't look like this is actually needed anywhere. Is it just a new feature?\n",
        "createdAt" : "2015-03-23T03:07:30Z",
        "updatedAt" : "2015-03-23T09:41:44Z",
        "lastEditedBy" : "d47a8b61-a8ac-4504-809d-8432d9e75d95",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e5b87a147f0bb1e92de4a62f392bb4f3ac12f8f",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +156,160 @@template <typename T>\ninline Environment* Environment::GetCurrent(\n    const v8::PropertyCallbackInfo<T>& info) {\n  ASSERT(info.Data()->IsExternal());\n  // XXX(bnoordhuis) Work around a g++ 4.9.2 template type inferrer bug"
  },
  {
    "id" : "4790c042-e599-4222-8b2a-3620010b7808",
    "prId" : 21283,
    "prUrl" : "https://github.com/nodejs/node/pull/21283#pullrequestreview-210710659",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "793c6188-33c7-4885-91b7-dc8189a46bd1",
        "parentId" : null,
        "authorId" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "body" : "You may be able to drop the `node_worker.h` include now from this file?",
        "createdAt" : "2019-03-05T13:18:53Z",
        "updatedAt" : "2019-03-16T07:22:20Z",
        "lastEditedBy" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "tags" : [
        ]
      },
      {
        "id" : "90567c96-0893-4fa6-9c2d-40f8a315eeca",
        "parentId" : "793c6188-33c7-4885-91b7-dc8189a46bd1",
        "authorId" : "d3bf7abd-5681-4b16-b1e7-beb89d57be65",
        "body" : "@addaleax - done, removed.",
        "createdAt" : "2019-03-05T14:33:09Z",
        "updatedAt" : "2019-03-16T07:22:20Z",
        "lastEditedBy" : "d3bf7abd-5681-4b16-b1e7-beb89d57be65",
        "tags" : [
        ]
      }
    ],
    "commit" : "d35af56e5f3b1334c4360dbf8a013d0c522fe5f8",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +710,714 @@\ninline bool Environment::is_stopping() const {\n  return thread_stopper_.IsStopped();\n}\n"
  },
  {
    "id" : "cfa811c5-6a56-4d7d-82ea-67c2bac30340",
    "prId" : 24060,
    "prUrl" : "https://github.com/nodejs/node/pull/24060#pullrequestreview-172557933",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2a9335c-89f8-482d-bff9-546905d0853d",
        "parentId" : null,
        "authorId" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "body" : "Shouldn't this return if it's empty? Also other `FromJust` below",
        "createdAt" : "2018-11-03T16:42:04Z",
        "updatedAt" : "2018-11-07T17:40:42Z",
        "lastEditedBy" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "tags" : [
        ]
      },
      {
        "id" : "7d1931e4-9675-4b8b-ad62-48961fc0e532",
        "parentId" : "d2a9335c-89f8-482d-bff9-546905d0853d",
        "authorId" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "body" : "@joyeecheung I'm not sure that it matters in these two cases.",
        "createdAt" : "2018-11-07T14:35:01Z",
        "updatedAt" : "2018-11-07T17:40:42Z",
        "lastEditedBy" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "tags" : [
        ]
      },
      {
        "id" : "b2df57b1-3b0c-47fb-b135-8c611e6eb95b",
        "parentId" : "d2a9335c-89f8-482d-bff9-546905d0853d",
        "authorId" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "body" : "I don’t think we can really signal an error here without making `SetMethod()` itself return a `Maybe<>`…",
        "createdAt" : "2018-11-07T14:36:35Z",
        "updatedAt" : "2018-11-07T17:40:42Z",
        "lastEditedBy" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "tags" : [
        ]
      },
      {
        "id" : "5e39bd34-b388-43b2-b1d7-ec1478e81785",
        "parentId" : "d2a9335c-89f8-482d-bff9-546905d0853d",
        "authorId" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "body" : "@addaleax hmm, yeah, the caller can handle that as well, but this is mostly used in `Initialize` anyways",
        "createdAt" : "2018-11-07T15:51:45Z",
        "updatedAt" : "2018-11-07T17:40:42Z",
        "lastEditedBy" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "tags" : [
        ]
      }
    ],
    "commit" : "7c64133760528aed0dd9e7781056e6a5ea266a69",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +737,741 @@  v8::Local<v8::String> name_string =\n      v8::String::NewFromUtf8(isolate(), name, type).ToLocalChecked();\n  that->Set(context, name_string, function).FromJust();\n  function->SetName(name_string);  // NODE_SET_METHOD() compatibility.\n}"
  }
]