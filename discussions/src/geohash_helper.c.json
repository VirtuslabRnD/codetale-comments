[
  {
    "id" : "ab3bd197-cbb6-402f-b4ec-f2bb55d6a9af",
    "prId" : 8445,
    "prUrl" : "https://github.com/redis/redis/pull/8445#pullrequestreview-583459481",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6bbd5ce7-de0c-43a3-9323-00a646737361",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "is this true for the radius case too?\r\nmaybe it needs a small comment that mentions that converting a box into lon/lat creates a trapezoid.\r\njust to explain why this code is needed.",
        "createdAt" : "2021-02-04T11:31:14Z",
        "updatedAt" : "2021-02-04T15:43:14Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "3cc551ff-506a-4dd2-916b-5ed5343ae296",
        "parentId" : "6bbd5ce7-de0c-43a3-9323-00a646737361",
        "authorId" : "ad1e7044-3785-4002-a4a5-9bf9117dfa24",
        "body" : "> is this true for the radius case too?\r\n\r\nyes, trapezoid is right and I will add comments.",
        "createdAt" : "2021-02-04T14:39:01Z",
        "updatedAt" : "2021-02-04T15:43:14Z",
        "lastEditedBy" : "ad1e7044-3785-4002-a4a5-9bf9117dfa24",
        "tags" : [
        ]
      }
    ],
    "commit" : "61ffd0c04f1d6b56e892b3b6b4221950f60741e6",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +105,109 @@    const double lat_delta = rad_deg(height/EARTH_RADIUS_IN_METERS);\n    const double long_delta_top = rad_deg(width/EARTH_RADIUS_IN_METERS/cos(deg_rad(latitude+lat_delta)));\n    const double long_delta_bottom = rad_deg(width/EARTH_RADIUS_IN_METERS/cos(deg_rad(latitude-lat_delta)));\n    /* The directions of the northern and southern hemispheres\n     * are opposite, so we choice different points as min/max long/lat */"
  },
  {
    "id" : "8ff677fb-e04a-44e3-8ff9-b34193e57fe8",
    "prId" : 8094,
    "prUrl" : "https://github.com/redis/redis/pull/8094#pullrequestreview-545703310",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3779f23-4905-42fa-8182-c0bddb70993b",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "considering the order or arguments in geohashGetDistanceIfInRadius (radius is last), i guess we want to move the `bounds` to be last (and maybe rename it to `rectangle` so it's clear what needs to be inside what)",
        "createdAt" : "2020-12-06T13:01:32Z",
        "updatedAt" : "2020-12-10T05:57:01Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c77e6c2ae767ef6421003b9d5ac1a1e92517d35",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +252,256 @@ */\nint geohashGetDistanceIfInRectangle(double *bounds, double x1, double y1,\n                                    double x2, double y2, double *distance) {\n    if (x2 < bounds[0] || x2 > bounds[2] || y2 < bounds[1] || y2 > bounds[3]) return 0;\n    *distance = geohashGetDistance(x1, y1, x2, y2);"
  },
  {
    "id" : "76ae5e6f-916d-4661-9882-de3b52a277a1",
    "prId" : 8094,
    "prUrl" : "https://github.com/redis/redis/pull/8094#pullrequestreview-545870488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15726c0b-6946-4092-a7ef-b8bddff30b13",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "is this what you meant?\r\n```suggestion\r\n    if (x2 < bounds[0] || x1 > bounds[2] || y2 < bounds[1] || y1 > bounds[3]) return 0;\r\n```",
        "createdAt" : "2020-12-06T13:03:52Z",
        "updatedAt" : "2020-12-10T05:57:01Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "d3bf9989-ab93-4dd6-94ac-bbb287b0b336",
        "parentId" : "15726c0b-6946-4092-a7ef-b8bddff30b13",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "ohh, maybe i'm wrong. i thought x1,y1,x2,y2 define a second box (to be matched against `bounds`).\r\nbut that indeed doesn't make sense.\r\nfrom your comment i understand that x1,y1 define the center of the box (or circle in the radius counterpart).\r\nand that x2,y2 define the point to be searched.\r\nplease rename these and / or add comments to make it clear (in both radius and rectangle variants)",
        "createdAt" : "2020-12-07T06:55:39Z",
        "updatedAt" : "2020-12-10T05:57:01Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c77e6c2ae767ef6421003b9d5ac1a1e92517d35",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +253,257 @@int geohashGetDistanceIfInRectangle(double *bounds, double x1, double y1,\n                                    double x2, double y2, double *distance) {\n    if (x2 < bounds[0] || x2 > bounds[2] || y2 < bounds[1] || y2 > bounds[3]) return 0;\n    *distance = geohashGetDistance(x1, y1, x2, y2);\n    return 1;"
  },
  {
    "id" : "57cad254-50a7-4e5e-ad8c-59eeb60b606e",
    "prId" : 8094,
    "prUrl" : "https://github.com/redis/redis/pull/8094#pullrequestreview-545932058",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa6bd8ec-9039-4d0d-89af-67e1d0aa16c7",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "if i'm not mistaken the definition of \"radius\" here seems to be different compared to the one in geohashGetDistanceIfInRectangle.\r\ni.e. is the circle is bound by the box, or the box bound by the circle? (which one is inside the other).\r\nis that on purpose? (i didn't think much into it yet)",
        "createdAt" : "2020-12-06T13:35:10Z",
        "updatedAt" : "2020-12-10T05:57:01Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "0d3730f0-1531-4d0b-b4ac-1b27af62be4d",
        "parentId" : "aa6bd8ec-9039-4d0d-89af-67e1d0aa16c7",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "clarification, the reason i gave this comment is because of the `sqrt` above.\r\nwhich computes a radius of a box that bounds the shape's box.\r\nbut maybe that sqrt was just a bug.",
        "createdAt" : "2020-12-07T08:44:47Z",
        "updatedAt" : "2020-12-10T05:57:01Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c77e6c2ae767ef6421003b9d5ac1a1e92517d35",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +146,150 @@    radius_meters *= shape->conversion;\n\n    steps = geohashEstimateStepsByRadius(radius_meters,latitude);\n\n    geohashGetCoordRange(&long_range,&lat_range);"
  },
  {
    "id" : "d5452195-8a8b-42ca-a930-9acc516c2b15",
    "prId" : 8094,
    "prUrl" : "https://github.com/redis/redis/pull/8094#pullrequestreview-545703310",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9eda1a9-9f87-4d9c-b855-0be38952b1c9",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "comment needs an update",
        "createdAt" : "2020-12-06T13:38:54Z",
        "updatedAt" : "2020-12-10T05:57:01Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c77e6c2ae767ef6421003b9d5ac1a1e92517d35",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +100,104 @@ * optimization is not used for very big radiuses, however the function\n * should be fixed. */\nint geohashBoundingBox(GeoShape *shape, double *bounds) {\n    if (!bounds) return 0;\n    double longitude = shape->xy[0];"
  },
  {
    "id" : "dca03b7c-f147-406a-96f6-696d561d0fb2",
    "prId" : 8094,
    "prUrl" : "https://github.com/redis/redis/pull/8094#pullrequestreview-545703310",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a24847ec-0926-423c-9272-22c7a280cf81",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "considering that this function can convert a box into a box. we better add some comment (here or at the top) that explains the complication (i suppose converting from meters to long/lat, but maybe that's not the whole story).",
        "createdAt" : "2020-12-06T13:59:46Z",
        "updatedAt" : "2020-12-10T05:57:01Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c77e6c2ae767ef6421003b9d5ac1a1e92517d35",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +112,116 @@    bounds[2] = longitude + long_delta;\n    bounds[1] = latitude - lat_delta;\n    bounds[3] = latitude + lat_delta;\n    return 1;\n}"
  },
  {
    "id" : "bcf210df-6359-4eb5-8290-f2a48aa0fff5",
    "prId" : 8094,
    "prUrl" : "https://github.com/redis/redis/pull/8094#pullrequestreview-546712621",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9114efcf-f5d3-4996-bc73-637db5406a31",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "something still doesn't feel right here.\r\n\r\nthe `geohashGetDistanceIfInRadius` makes sense, you get two points \"1\" and \"2\" to measure the distance between them, and return it only if smaller than a \"radius\" distance.\r\n\r\nhere we get two points (\"1\" and \"2\"), and i would imagine that also a width/2 and height/2, to return the the distance between the two points only if smaller than width/2 horizontally, and height/2 vertically.\r\nbut instead we get \"bounds\" which is a 4 element long / lat thing.\r\n\r\nalso, looking at `geohashBoundingBox` i see that `bounds` already has shape->xy embedded in it, so these are not just w/2 and h/2.\r\n\r\nlastly, i remind you that our `bounds` is bloated (using a fake radius that's generated by max(w/2,h/2), so checking here against `bounds` is probably a bug.\r\n\r\nmy advise: this function should probably get width and height as input instead of bounds.",
        "createdAt" : "2020-12-07T14:21:05Z",
        "updatedAt" : "2020-12-10T05:57:01Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "9339ee05-e2ea-4960-93d2-560266727af0",
        "parentId" : "9114efcf-f5d3-4996-bc73-637db5406a31",
        "authorId" : "ad1e7044-3785-4002-a4a5-9bf9117dfa24",
        "body" : "all coordinates (x, y, bounds) are in long/lat\r\nall distances (width, height, radius) are in meters.\r\nIf we use width and height as parameters, we need to recalculate the latitude and longitude (meters to degrees), to avoid calculation, we pass bounds.",
        "createdAt" : "2020-12-08T03:11:09Z",
        "updatedAt" : "2020-12-10T05:57:01Z",
        "lastEditedBy" : "ad1e7044-3785-4002-a4a5-9bf9117dfa24",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c77e6c2ae767ef6421003b9d5ac1a1e92517d35",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +253,257 @@int geohashGetDistanceIfInRectangle(double *bounds, double x1, double y1,\n                                    double x2, double y2, double *distance) {\n    if (x2 < bounds[0] || x2 > bounds[2] || y2 < bounds[1] || y2 > bounds[3]) return 0;\n    *distance = geohashGetDistance(x1, y1, x2, y2);\n    return 1;"
  }
]