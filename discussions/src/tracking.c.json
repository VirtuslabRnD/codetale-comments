[
  {
    "id" : "95132e69-1793-4d52-8dfe-8e6fcd912af8",
    "prId" : 8176,
    "prUrl" : "https://github.com/redis/redis/pull/8176#pullrequestreview-557419823",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "480b6b01-a450-4a42-b6fa-66c1b03e6050",
        "parentId" : null,
        "authorId" : "351cea45-3d66-4827-bbfb-0a2c2c79b24b",
        "body" : "@madolson I felt like putting this check separately before the existing prefixes check would save some performance if user provided duplicate prefix in the same call, since I assuming the number of prefixes provided for single call should be much smaller than the overall, and this will make the check fail early. not sure  if this is always the case and may cause code looks like little bit redundant, how do you think? but indeed, if this is the first call it won't be helpful.",
        "createdAt" : "2020-12-21T17:56:06Z",
        "updatedAt" : "2020-12-23T19:37:29Z",
        "lastEditedBy" : "351cea45-3d66-4827-bbfb-0a2c2c79b24b",
        "tags" : [
        ]
      },
      {
        "id" : "17771e25-96d9-447d-8c58-9181dd033f0f",
        "parentId" : "480b6b01-a450-4a42-b6fa-66c1b03e6050",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "the chance of a user providing duplicate prefixes in the same call is smaller IMHO.",
        "createdAt" : "2020-12-22T08:51:07Z",
        "updatedAt" : "2020-12-23T19:37:29Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "68fd5966-1f69-466d-89b7-fd56124ddb26",
        "parentId" : "480b6b01-a450-4a42-b6fa-66c1b03e6050",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "I agree with Oran, I thought there was a pretty small chance of providing duplicates within the existing command. ",
        "createdAt" : "2020-12-22T23:15:11Z",
        "updatedAt" : "2020-12-23T19:37:29Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c48a580592c6d81bd34bfc91ceff6bf9f96e8b9",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +135,139 @@        }\n        /* Check input has no overlap with itself. */\n        for (size_t j = i + 1; j < numprefix; j++) {\n            if (stringCheckPrefix(prefixes[i]->ptr,sdslen(prefixes[i]->ptr),\n                prefixes[j]->ptr,sdslen(prefixes[j]->ptr)))"
  },
  {
    "id" : "5572d8b1-1a6b-465f-90e1-5a1c491d76af",
    "prId" : 7469,
    "prUrl" : "https://github.com/redis/redis/pull/7469#pullrequestreview-447191111",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "040d106e-1c65-43ec-bc8a-80b3bf1bdd09",
        "parentId" : null,
        "authorId" : "992af734-3eac-4159-b634-0625f275b1a6",
        "body" : "Here I think the proto should depend on client's flags is `BCAST` or not.",
        "createdAt" : "2020-07-13T12:09:47Z",
        "updatedAt" : "2020-07-15T14:11:21Z",
        "lastEditedBy" : "992af734-3eac-4159-b634-0625f275b1a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cbc8db11a519588a7b2ca8ca7e9f7c111c71cfc",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +366,370 @@            client *c = listNodeValue(ln);\n            if (c->flags & CLIENT_TRACKING) {\n                sendTrackingMessage(c,shared.null[c->resp]->ptr,sdslen(shared.null[c->resp]->ptr),1);\n            }\n        }"
  },
  {
    "id" : "e5a10fa9-9098-4621-8ea7-0e61876cb1bc",
    "prId" : 7469,
    "prUrl" : "https://github.com/redis/redis/pull/7469#pullrequestreview-447352615",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bb131b9-a021-46f1-8ab8-2c2293909142",
        "parentId" : null,
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "This will need to be at a lower level. Right now you're just passing binary representation of a null as the keyname (e.g. \"-1\\r\\n\"), which is a valid. You'll need to call addReply(shared.null[c->resp]) directly somewhere, probably in sendTrackingMessage() if the keyname is NULL. ",
        "createdAt" : "2020-07-13T13:27:38Z",
        "updatedAt" : "2020-07-15T14:11:21Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "9c5273a5-5aa0-406e-8979-bb0311df8847",
        "parentId" : "0bb131b9-a021-46f1-8ab8-2c2293909142",
        "authorId" : "938634c8-56ec-44d4-810c-cce30d95aefe",
        "body" : "Thank you for looking @madolson!\r\n\r\nCould you help me understand a bit more about what I've gotten wrong here? Based on the function docs I would have expected that when specifying the 4th argument of this function as '1' that a preformatted message would be allowed in the 2nd argument. If that's not right and you can tell me a bit more, then I could also update function docs for sendTrackingMessage.",
        "createdAt" : "2020-07-13T13:47:34Z",
        "updatedAt" : "2020-07-15T14:11:21Z",
        "lastEditedBy" : "938634c8-56ec-44d4-810c-cce30d95aefe",
        "tags" : [
        ]
      },
      {
        "id" : "c80d6c4e-1889-4a35-8936-41b68cc3269a",
        "parentId" : "0bb131b9-a021-46f1-8ab8-2c2293909142",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "My bad, I missed that you updated that the last field. So I think this change looks good. ",
        "createdAt" : "2020-07-13T15:21:06Z",
        "updatedAt" : "2020-07-15T14:11:21Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cbc8db11a519588a7b2ca8ca7e9f7c111c71cfc",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +366,370 @@            client *c = listNodeValue(ln);\n            if (c->flags & CLIENT_TRACKING) {\n                sendTrackingMessage(c,shared.null[c->resp]->ptr,sdslen(shared.null[c->resp]->ptr),1);\n            }\n        }"
  }
]