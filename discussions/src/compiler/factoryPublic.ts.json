[
  {
    "id" : "c500b84f-bcca-489b-85fc-a05a21a0981f",
    "prId" : 38425,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/38425#pullrequestreview-408361460",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72531fba-f039-46f0-8ea7-7b49d592eedc",
        "parentId" : null,
        "authorId" : "daeea8e3-8b69-4772-969e-b07e3f9d82e8",
        "body" : "I'm copying what's done elsewhere. This type argument is naughty, but your secret is safe with me (I won't tell Ryan).",
        "createdAt" : "2020-05-08T16:30:55Z",
        "updatedAt" : "2020-05-08T16:30:55Z",
        "lastEditedBy" : "daeea8e3-8b69-4772-969e-b07e3f9d82e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "84f89f8702cc4472b949eb980db23fef564936a6",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +2593,2597 @@\n    export function createJSDocAuthorTag(comment?: string) {\n        return createJSDocTag<JSDocAuthorTag>(SyntaxKind.JSDocAuthorTag, \"author\", comment);\n    }\n"
  },
  {
    "id" : "383d860b-23a7-4bd9-97ce-b11f31dbf322",
    "prId" : 36688,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/36688#pullrequestreview-366742186",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a31a6a9-7aa0-479e-8970-01e453e80ef1",
        "parentId" : null,
        "authorId" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "body" : "I'd keep the name consistent with the option it overrides:\r\n```suggestion\r\n    export function setNoPreserveNewlines<T extends Node>(node: T): T {\r\n```",
        "createdAt" : "2020-02-27T21:58:05Z",
        "updatedAt" : "2020-03-16T18:52:35Z",
        "lastEditedBy" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "tags" : [
        ]
      },
      {
        "id" : "30f32f7a-50ef-4323-bd84-fd689b2ebbf8",
        "parentId" : "5a31a6a9-7aa0-479e-8970-01e453e80ef1",
        "authorId" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "body" : "This also probably needs a `/* @internal */` comment attached to it, unless we fully intend this to be part of the public api.",
        "createdAt" : "2020-02-27T21:58:57Z",
        "updatedAt" : "2020-03-16T18:52:35Z",
        "lastEditedBy" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "tags" : [
        ]
      },
      {
        "id" : "3d0ec82d-cf57-42c2-ad69-3f994b104d97",
        "parentId" : "5a31a6a9-7aa0-479e-8970-01e453e80ef1",
        "authorId" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "body" : "I made it public since all the other EmitFlags setter functions were, but Iâ€™m ok with making it internal.",
        "createdAt" : "2020-02-28T23:27:34Z",
        "updatedAt" : "2020-03-16T18:52:35Z",
        "lastEditedBy" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "tags" : [
        ]
      }
    ],
    "commit" : "6daa27e52a5ef8fd0a76f49cffd3b76e9a5caf48",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3563,3567 @@\n    /** @internal */\n    export function ignoreSourceNewlines<T extends Node>(node: T): T {\n        getOrCreateEmitNode(node).flags |= EmitFlags.IgnoreSourceNewlines;\n        return node;"
  },
  {
    "id" : "55dbdaec-e8dd-4b2d-8378-0b6e1f755539",
    "prId" : 36506,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/36506#pullrequestreview-350315282",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c420685-b06d-48c1-bb6c-658da438e3e9",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "I guess it's not too bad to omit the `length` check.",
        "createdAt" : "2020-01-29T18:05:20Z",
        "updatedAt" : "2020-01-29T18:05:26Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "b5596b08-21b5-4a87-b50a-e2c2b5a93797",
        "parentId" : "2c420685-b06d-48c1-bb6c-658da438e3e9",
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "```\r\n$ node\r\nWelcome to Node.js v12.13.1.\r\nType \".help\" for more information.\r\n> \"\"[0]\r\nundefined\r\n> \"\"[0] !== \"#\"\r\ntrue\r\n```\r\n\r\nWe :heart: JavaScript",
        "createdAt" : "2020-01-29T18:06:59Z",
        "updatedAt" : "2020-01-29T18:06:59Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d025d00cdad4a403710af7e5118aedf59465320",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +219,223 @@    // Private Identifiers\n    export function createPrivateIdentifier(text: string): PrivateIdentifier {\n        if (text[0] !== \"#\") {\n            Debug.fail(\"First character of private identifier must be #: \" + text);\n        }"
  },
  {
    "id" : "3464e1d8-92b9-4e12-9fcb-5f5fe03f38ea",
    "prId" : 29539,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/29539#pullrequestreview-394153226",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68ae3e7a-bbe2-4d71-95dd-47a08b85733d",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "why have both `createJSDocParameterTag` and `createJSDocParamTag`. The only real difference is that this sets `isNameFirst` but `createJSDocParamTag` doesn't.\r\n\r\nNaively, it feels to me like we should only have one, which uses this code but is named `createJSDocParamTag`.",
        "createdAt" : "2020-04-15T21:37:19Z",
        "updatedAt" : "2020-05-06T21:43:35Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "161ba79b-3ac4-417c-bc0e-c45d0162dc78",
        "parentId" : "68ae3e7a-bbe2-4d71-95dd-47a08b85733d",
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "Well, except that we shouldn't break the API unnecessarily. Ugh. Can you add documentation saying that `createJSDocParamTag` is deprecated and that this is the preferred function now?",
        "createdAt" : "2020-04-15T21:44:44Z",
        "updatedAt" : "2020-05-06T21:43:35Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "31bf10268632f1f27c99807d1b76cdc899adaa21",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +2575,2579 @@    }\n\n    export function createJSDocParameterTag(typeExpression: JSDocTypeExpression | undefined, name: EntityName, isNameFirst: boolean, isBracketed: boolean, comment?: string) {\n        return createJSDocPropertyLikeTag<JSDocParameterTag>(SyntaxKind.JSDocParameterTag, \"param\", typeExpression, name, isNameFirst, isBracketed, comment);\n    }"
  }
]