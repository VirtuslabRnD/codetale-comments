[
  {
    "id" : "e9beb91a-3cab-4d93-b9a1-80c46472d0c2",
    "prId" : 7941,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a22ed14-9270-4582-802c-e0e4787391d4",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "`return visitImportSpecifier(node);` ?\n",
        "createdAt" : "2016-04-07T20:45:45Z",
        "updatedAt" : "2016-04-07T20:45:45Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "07820d40-0348-4018-8947-19cc4e60dff4",
        "parentId" : "9a22ed14-9270-4582-802c-e0e4787391d4",
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "nevermind\n",
        "createdAt" : "2016-04-07T20:46:24Z",
        "updatedAt" : "2016-04-07T20:46:24Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc0cb5851bb3a4d681b00e14c6f4c1d050a0fb47",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +62,66 @@        function visitNamedBindings(node: NamedImportBindings): VisitResult<NamedImportBindings> {\n            if (node.kind === SyntaxKind.NamespaceImport) {\n                return resolver.isReferencedAliasDeclaration(node) ? node: undefined;\n            }\n            else {"
  },
  {
    "id" : "76fdc23a-1938-4caf-88e5-0e6ca7491b07",
    "prId" : 7941,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51ca0435-8b8f-4277-befd-09c2270bf567",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Doesn't this mean you're eliding all `import \"foo\"` imports?\n",
        "createdAt" : "2016-04-07T20:58:23Z",
        "updatedAt" : "2016-04-07T20:58:23Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "50af0597-4a09-48f3-9157-65ac62028355",
        "parentId" : "51ca0435-8b8f-4277-befd-09c2270bf567",
        "authorId" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "body" : "no, this is applied only for import declarations that have import clause\n",
        "createdAt" : "2016-04-07T21:14:26Z",
        "updatedAt" : "2016-04-07T21:14:26Z",
        "lastEditedBy" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc0cb5851bb3a4d681b00e14c6f4c1d050a0fb47",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +40,44 @@                const newImportClause = visitNode(node.importClause, visitor, isImportClause);\n                if (!newImportClause.name && !newImportClause.namedBindings) {\n                    return undefined;\n                }\n                else if (newImportClause !== node.importClause) {"
  },
  {
    "id" : "4ebfa4ae-c995-4ff1-b186-dd21a3ea0bf1",
    "prId" : 7681,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0edd7268-affc-474d-839b-26d04e9046e3",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Seems a little overkill to use a switch - you could just turn this function into\n\n``` ts\nreturn node.kind === SyntaxKind.ImportDeclaration ?\n    visitImportDeclaration(node as  ImportDeclaration) :\n    node;\n```\n",
        "createdAt" : "2016-03-25T06:39:38Z",
        "updatedAt" : "2016-03-25T06:39:38Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "b7b50933-bfb7-4a7b-a1b1-85210475e481",
        "parentId" : "0edd7268-affc-474d-839b-26d04e9046e3",
        "authorId" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "body" : "I used a switch as I'm pretty sure I will need to circle back to handle export elision with an ExportDeclaration but I'm waiting until I run into that.\n",
        "createdAt" : "2016-03-25T17:19:55Z",
        "updatedAt" : "2016-03-25T17:19:55Z",
        "lastEditedBy" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ba1961ce8ddd64a7e4de20f08cb21bc5388e0af",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +21,25 @@\n        function visitor(node: Node) {\n            switch (node.kind) {\n                case SyntaxKind.ImportDeclaration:\n                    return visitImportDeclaration(<ImportDeclaration>node);"
  }
]