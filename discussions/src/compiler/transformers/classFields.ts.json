[
  {
    "id" : "affc2c40-ae6c-4159-9a69-1417b9c70733",
    "prId" : 44842,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/44842#pullrequestreview-696928835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d2af02b-3933-4ab5-979c-db5f50bf6221",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "This one is actually unfortunate - `pendingExpressions` is actually typed as `never` because we have an earlier assignment of `undefined` followed by a check for `some(...)` which is a type predicate on `readonly T[]`. Since you can't narrow down a `readonly T[]` from an `undefined`, it leaves us with `never`.\r\n\r\nThe real culprit is #9998, but it is also strange that we just allow a spread of type `never`.",
        "createdAt" : "2021-07-01T07:49:36Z",
        "updatedAt" : "2021-07-01T07:49:37Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c34f64e407b030d5a48c75159a6a1c6567d8f0e4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +739,743 @@                );\n                const expr = some(pendingExpressions) ?\n                    factory.inlineExpressions(compact([...pendingExpressions, node])) :\n                    node;\n                pendingExpressions = savedPendingExpressions;"
  },
  {
    "id" : "5b2182b5-dbcf-44b6-82c8-60c9d6389da5",
    "prId" : 43370,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/43370#pullrequestreview-621686622",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f07b4052-67ef-44fd-9c4a-bf02bb6b9628",
        "parentId" : null,
        "authorId" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "body" : "I would add a note that this is handled by `visitClassDeclaration`.",
        "createdAt" : "2021-03-26T01:01:52Z",
        "updatedAt" : "2021-04-27T07:26:59Z",
        "lastEditedBy" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "6234640ec6b7775a4a8249c1574958ed6189e625",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +189,193 @@            }\n            // ClassStaticBlockDeclaration for classes are transformed in `visitClassDeclaration` or `visitClassExpression`.\n            return undefined;\n        }\n"
  },
  {
    "id" : "d9b92085-a012-4313-818a-0a9f47e094ef",
    "prId" : 42458,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/42458#pullrequestreview-620841992",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69eb23e0-0769-4be4-9d57-6d06ca4a73bb",
        "parentId" : null,
        "authorId" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "body" : "Can a user write source text that would fail this assertion?",
        "createdAt" : "2021-03-25T01:05:34Z",
        "updatedAt" : "2021-03-25T01:05:51Z",
        "lastEditedBy" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "tags" : [
        ]
      },
      {
        "id" : "e4ec08ed-03d1-4fe3-801b-635be52ecf3f",
        "parentId" : "69eb23e0-0769-4be4-9d57-6d06ca4a73bb",
        "authorId" : "15e7c5b1-d8f0-4641-91b3-9905a46d7b7b",
        "body" : "I don't think so. That would indicate a bug in `addPrivateIdentifierToEnvironment`.",
        "createdAt" : "2021-03-25T08:36:14Z",
        "updatedAt" : "2021-03-25T08:36:14Z",
        "lastEditedBy" : "15e7c5b1-d8f0-4641-91b3-9905a46d7b7b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8078ae0b4fa9eef001a9f25480d44c5c1e95a703",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +268,272 @@            // leave invalid code untransformed\n            const info = accessPrivateIdentifier(node.name);\n            Debug.assert(info, \"Undeclared private name for property declaration.\");\n            if (!info.isValid) {\n                return node;"
  },
  {
    "id" : "6202d02c-1707-4bf0-a249-611fa6b3b9a8",
    "prId" : 30829,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/30829#pullrequestreview-267710878",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c1c9c75-7085-4e08-bf64-c349c69bdd83",
        "parentId" : null,
        "authorId" : "7c818427-dca2-4bb8-94a1-f7e70e4a264a",
        "body" : "@RyanCavanaugh @DanielRosenwasser @robpalme @joeywatts  cc Ron Nathan and Ron\r\nDo we want to ban the following features (in the checker) for now?\r\n- private-named statics\r\n- private-named methods\r\n\r\nIf so, could you advise on how best to do the ban?\r\n\r\nThey parse and check fine, but we don't have emit yet. We have started the emit work in another branch, but had agreed to land them in follow-on PRs.",
        "createdAt" : "2019-07-17T11:07:19Z",
        "updatedAt" : "2019-12-24T10:22:58Z",
        "lastEditedBy" : "7c818427-dca2-4bb8-94a1-f7e70e4a264a",
        "tags" : [
        ]
      },
      {
        "id" : "1d4d70e5-55d1-4ea6-90bd-3efbafd45202",
        "parentId" : "9c1c9c75-7085-4e08-bf64-c349c69bdd83",
        "authorId" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "body" : "I think we should error on them during parse for now and remove the errors when they are supported.",
        "createdAt" : "2019-07-17T21:37:04Z",
        "updatedAt" : "2019-12-24T10:22:58Z",
        "lastEditedBy" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "tags" : [
        ]
      },
      {
        "id" : "cb8b31bb-1f64-454a-854e-ea6d2dc8c8eb",
        "parentId" : "9c1c9c75-7085-4e08-bf64-c349c69bdd83",
        "authorId" : "7c818427-dca2-4bb8-94a1-f7e70e4a264a",
        "body" : "I did the ban in the checker, discussion here: https://github.com/microsoft/TypeScript/pull/30829#discussion_r306051459. Happy to move the logic to the parser if there's a good way",
        "createdAt" : "2019-07-23T13:37:48Z",
        "updatedAt" : "2019-12-24T10:22:58Z",
        "lastEditedBy" : "7c818427-dca2-4bb8-94a1-f7e70e4a264a",
        "tags" : [
        ]
      },
      {
        "id" : "69565b0a-775e-418e-86a8-be617bd08e48",
        "parentId" : "9c1c9c75-7085-4e08-bf64-c349c69bdd83",
        "authorId" : "7c818427-dca2-4bb8-94a1-f7e70e4a264a",
        "body" : "consolidating this discussion into: https://github.com/microsoft/TypeScript/pull/30829#discussion_r306051459",
        "createdAt" : "2019-07-29T11:03:25Z",
        "updatedAt" : "2019-12-24T10:22:58Z",
        "lastEditedBy" : "7c818427-dca2-4bb8-94a1-f7e70e4a264a",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbb84d1e81b35f944d994f6c71c3eda40f944b85",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +5,9 @@         * Enables substitutions for class expressions with static fields\n         * which have initializers that reference the class name.\n         */\n        ClassAliases = 1 << 0,\n    }"
  }
]