[
  {
    "id" : "93d1f228-5d9e-4748-8ca6-0041fd195379",
    "prId" : 42676,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/42676#pullrequestreview-594683357",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c5965a7-a97c-4ca9-8444-7ad85db2bb5b",
        "parentId" : null,
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "... does `??` count nowadays (making our type inaccurate, too)? Or is it's precedence not similar to those? Looking at the [spec](https://tc39.es/ecma262/#sec-binary-logical-operators), I _think_ it should be included in the `LogicalOperator` group. Probably.",
        "createdAt" : "2021-02-09T00:24:58Z",
        "updatedAt" : "2021-02-24T04:05:43Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      },
      {
        "id" : "69c75d09-918c-4ed0-8600-5be309aa33d1",
        "parentId" : "0c5965a7-a97c-4ca9-8444-7ad85db2bb5b",
        "authorId" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "body" : "`??` isn't a \"logical\" operator, per-se. It has a lower precedence than `&&` and `||`: https://tc39.es/ecma262/#prod-CoalesceExpression",
        "createdAt" : "2021-02-20T01:21:15Z",
        "updatedAt" : "2021-02-24T04:05:43Z",
        "lastEditedBy" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "cfda7c2575fc103223dec3ce9a13aace273ca9c8",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +906,910 @@\n    // NOTE: The version in utilities includes ExclamationToken, which is not a binary operator.\n    function isLogicalOperator(kind: SyntaxKind): kind is LogicalOperator {\n        return kind === SyntaxKind.AmpersandAmpersandToken\n            || kind === SyntaxKind.BarBarToken;"
  },
  {
    "id" : "bad12458-12dd-4b61-a485-eb4ca8109fa5",
    "prId" : 41151,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/41151#pullrequestreview-511003986",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12a614ce-1d96-4fd6-91d0-11d7674c8775",
        "parentId" : null,
        "authorId" : "26f218f2-0564-4b3f-af3c-81c65a47ad50",
        "body" : "the signature differs now from the accompanying `createExpressionForJsxFragment` but this is just a util file so I don't think it's particularly important but let me know if you'd like this to be refactored somehow.",
        "createdAt" : "2020-10-17T17:55:35Z",
        "updatedAt" : "2020-10-19T22:22:42Z",
        "lastEditedBy" : "26f218f2-0564-4b3f-af3c-81c65a47ad50",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ad22de146fa60d96d80f5029be5a61c8e67a1a5",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +65,69 @@    }\n\n    export function createExpressionForJsxElement(factory: NodeFactory, callee: Expression, tagName: Expression, props: Expression | undefined, children: readonly Expression[] | undefined, location: TextRange): LeftHandSideExpression {\n        const argumentsList = [tagName];\n        if (props) {"
  }
]