[
  {
    "id" : "2df4da0b-f898-420e-be74-4de0ecae38e8",
    "prId" : 34365,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/34365#pullrequestreview-301523281",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85f6394d-1c39-42ec-9b0f-adc3743cdb85",
        "parentId" : null,
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Need test for this.. you can look at tests in `src/testRunner/unittests/tsbuild` for how to write them.",
        "createdAt" : "2019-10-14T18:36:44Z",
        "updatedAt" : "2019-10-15T19:52:27Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "1baa665d-5c73-4f3b-a258-3f83cbc925ac",
        "parentId" : "85f6394d-1c39-42ec-9b0f-adc3743cdb85",
        "authorId" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "body" : "Done.",
        "createdAt" : "2019-10-14T20:27:46Z",
        "updatedAt" : "2019-10-15T19:52:27Z",
        "lastEditedBy" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "730a52bf824f139f4b9eac08b19258d487505a4e",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +1794,1798 @@            reportQueue = false;\n            invalidatedProject.done(cancellationToken);\n            if (!state.diagnostics.has(invalidatedProject.projectPath)) successfulProjects++;\n        }\n"
  },
  {
    "id" : "6d560031-649c-4dc3-b763-080ea5ae1e34",
    "prId" : 34365,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/34365#pullrequestreview-302157675",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "665bcff0-6a05-46a5-ad25-7d39ed4851f1",
        "parentId" : null,
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "This is how we format things:\r\n![image](https://user-images.githubusercontent.com/8052792/66845556-106e4000-ef25-11e9-905b-778b2456ccd5.png)\r\n",
        "createdAt" : "2019-10-15T15:23:35Z",
        "updatedAt" : "2019-10-15T19:52:27Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "32072a1d-c7ba-49d0-85c7-2f686b8d159b",
        "parentId" : "665bcff0-6a05-46a5-ad25-7d39ed4851f1",
        "authorId" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "body" : "Done, reluctantly.",
        "createdAt" : "2019-10-15T19:54:42Z",
        "updatedAt" : "2019-10-15T19:54:42Z",
        "lastEditedBy" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "730a52bf824f139f4b9eac08b19258d487505a4e",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +1801,1805 @@        startWatching(state, buildOrder);\n\n        return isCircularBuildOrder(buildOrder)\n            ? ExitStatus.ProjectReferenceCycle_OutputsSkipped\n            : !buildOrder.some(p => state.diagnostics.has(toResolvedConfigFilePath(state, p)))"
  },
  {
    "id" : "d152a6f9-989a-44ff-bd26-1989a6c94098",
    "prId" : 32788,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/32788#pullrequestreview-273987012",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4570c9e2-a8b3-4f0e-84db-c8393e1928a4",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "I think this would be easier to read as\r\n```suggestion\r\n    export type BuildOrder = { files: readonly ResolvedConfigFileName[]; circularDiagnostics?: readonly Diagnostic[] }\r\n```\r\n\r\nfollowed by deleting `CircularBuildOrder` and `AnyBuildOrder` and then isCircularBuildOrder could check for the presence of `circularDiagnostics` instead of `buildOrder` (and could just return `boolean`).",
        "createdAt" : "2019-08-12T22:05:52Z",
        "updatedAt" : "2019-08-12T23:06:22Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "9efd2957-b176-4d24-9a75-0f6193194a70",
        "parentId" : "4570c9e2-a8b3-4f0e-84db-c8393e1928a4",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "I don't want to wrap things in object just with array. I think I like this better with order being Array and CirucularBuildOrder diagnostics only when circular build order. This typing also helps in making sure we are handling circular build order in any place build order plays the role.",
        "createdAt" : "2019-08-12T22:26:39Z",
        "updatedAt" : "2019-08-12T23:06:22Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "91df9b50-7f2c-4aa8-a0be-d66ad85ce0b7",
        "parentId" : "4570c9e2-a8b3-4f0e-84db-c8393e1928a4",
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "Fair enough.",
        "createdAt" : "2019-08-12T22:41:00Z",
        "updatedAt" : "2019-08-12T23:06:22Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a9198a53af6fc56bbcc408fdc7c3ef5bd933213",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +276,280 @@\n    /*@internal*/\n    export type BuildOrder = readonly ResolvedConfigFileName[];\n    /*@internal*/\n    export interface CircularBuildOrder {"
  },
  {
    "id" : "2f8692b3-c93e-45ee-bf37-8e9435dfee55",
    "prId" : 30402,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/30402#pullrequestreview-214766043",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b83ab8f-e77a-4f5d-b493-42135e62a847",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "typo:InutFiles\r\nAlso, if this function is only used here, it should be flipped to `canJsonReportInputFiles` so that the conditional is easier to read.",
        "createdAt" : "2019-03-14T19:59:43Z",
        "updatedAt" : "2019-03-14T22:13:58Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "ed07b905-8541-42eb-b054-15421e939e9a",
        "parentId" : "9b83ab8f-e77a-4f5d-b493-42135e62a847",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "It is used to report error when parsing tsconfig file for fileNames",
        "createdAt" : "2019-03-14T21:11:53Z",
        "updatedAt" : "2019-03-14T22:13:58Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7c8e0951d398157acd1c862502bf076b601024c",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +662,666 @@\n            // Container if no files are specified in the project\n            if (!project.fileNames.length && !canJsonReportNoInutFiles(project.raw)) {\n                return {\n                    type: UpToDateStatusType.ContainerOnly"
  },
  {
    "id" : "3f010233-821e-4a5a-b5a0-55dca1f00051",
    "prId" : 29161,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/29161#pullrequestreview-192376050",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7c2f8dc-6947-4634-95ae-f6e9def5f4cb",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "why do we have to do this?",
        "createdAt" : "2019-01-14T21:21:26Z",
        "updatedAt" : "2019-01-17T20:29:40Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "28780d72-50bb-4467-a59b-993bad97b3f0",
        "parentId" : "f7c2f8dc-6947-4634-95ae-f6e9def5f4cb",
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "It seems like it might be related to your comments on EmitAndSemanticDiagnosticsBuilderProgram, but I don't understand how.",
        "createdAt" : "2019-01-14T21:22:16Z",
        "updatedAt" : "2019-01-17T20:29:40Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "a7eaa780-4c44-46e6-b0ce-40d34e5556e3",
        "parentId" : "f7c2f8dc-6947-4634-95ae-f6e9def5f4cb",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Currently `resetBuildContext` is API exposed. We are yet to see if that's really needed or is it test only but that api just means clear and be in initial state as if just created.",
        "createdAt" : "2019-01-14T21:39:55Z",
        "updatedAt" : "2019-01-17T20:29:40Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "900d6f7c9042a686cebc2c50343bfa50ca66b04f",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +499,503 @@            clearMap(allWatchedConfigFiles, closeFileWatcher);\n            builderPrograms.clear();\n            updateGetSourceFile();\n        }\n"
  },
  {
    "id" : "63f8c415-f924-46bd-9eac-068757ef10d9",
    "prId" : 29161,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/29161#pullrequestreview-192379118",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "526efc53-03b2-4ae6-9c48-0a5125e53cc6",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "how is this new status related to watch mode? It sounds unrelated.",
        "createdAt" : "2019-01-14T21:39:01Z",
        "updatedAt" : "2019-01-17T20:29:40Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "8ac9ab11-dfd9-4614-b125-2f4cf5ade81f",
        "parentId" : "526efc53-03b2-4ae6-9c48-0a5125e53cc6",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "If you have `proj` depending on `dep` when change happens to the `dep` thats local (not changing its d.ts file) the file will get updated stamp and hence the status of this build would be `UpToDateWithUpstreamTypes` because of our own knowledge that the change was local and .d.ts not really changed. But if we did not update the type stamps, if we kill build at this point and new process starts, it wont have that info and it would create new program and emit etc. So this was existing but that got fixed as part of making sure dependent projects have correct time stamps in case of incremental build (Note how we have to update timestamps of unchanged emit files when doing incremental emit to ensure it doesnt falsely assumed to be not uptodate when new process with tsc -b starts where this info about the d.ts updates etc is not in the memory)",
        "createdAt" : "2019-01-14T21:46:27Z",
        "updatedAt" : "2019-01-17T20:29:40Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "b9b67475-04cd-4afe-b8a8-69d6fb11928c",
        "parentId" : "526efc53-03b2-4ae6-9c48-0a5125e53cc6",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "So this is more about making sure that incrementally built and done projects dont unnecessarily start creating and emitting when tsc -b is invoked in another process",
        "createdAt" : "2019-01-14T21:47:22Z",
        "updatedAt" : "2019-01-17T20:29:40Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "900d6f7c9042a686cebc2c50343bfa50ca66b04f",
    "line" : 250,
    "diffHunk" : "@@ -1,1 +991,995 @@            }\n\n            if (status.type === UpToDateStatusType.UpToDateWithUpstreamTypes) {\n                // Fake that files have been built by updating output file stamps\n                updateOutputTimestamps(proj);"
  },
  {
    "id" : "76468ed4-e21a-4340-8a54-64868e0e7b86",
    "prId" : 29161,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/29161#pullrequestreview-192381362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c35afdc-3171-4034-9c3f-ee9cbbfefd61",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "is the first item returned not a dependencyGraph anymore? It seems to be used the same as before.",
        "createdAt" : "2019-01-14T21:42:55Z",
        "updatedAt" : "2019-01-17T20:29:40Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "41cc746b-c9ca-4a76-9647-90fae75cfaa1",
        "parentId" : "4c35afdc-3171-4034-9c3f-ee9cbbfefd61",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Its always been these two things returned, Now we are just replacing it with destructuring of these since we use both of these anyways.",
        "createdAt" : "2019-01-14T21:52:47Z",
        "updatedAt" : "2019-01-17T20:29:40Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "900d6f7c9042a686cebc2c50343bfa50ca66b04f",
    "line" : 261,
    "diffHunk" : "@@ -1,1 +1000,1004 @@            if (buildResult & BuildResultFlags.AnyErrors) return;\n\n            const { referencingProjectsMap, buildQueue } = getGlobalDependencyGraph();\n            const referencingProjects = referencingProjectsMap.getValue(resolved);\n            if (!referencingProjects) return;"
  },
  {
    "id" : "ddfdafa1-26ad-4810-9c25-2f4e78fa3d17",
    "prId" : 26590,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/26590#pullrequestreview-150254248",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08616fad-a508-44c7-bdf1-5c566c060cd3",
        "parentId" : null,
        "authorId" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "body" : "What's the reason for not just popping off the front?",
        "createdAt" : "2018-08-22T01:12:57Z",
        "updatedAt" : "2018-08-28T18:22:53Z",
        "lastEditedBy" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "tags" : [
        ]
      },
      {
        "id" : "030b6e6d-729f-48c7-8c3b-3f3f94b01feb",
        "parentId" : "08616fad-a508-44c7-bdf1-5c566c060cd3",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Because the sequence matters right? You want to build invalidated project first then next level of projects and so on?",
        "createdAt" : "2018-08-28T18:19:19Z",
        "updatedAt" : "2018-08-28T18:22:53Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "868cf3e6de627aae3e811bc0bcc40839a9b7af5f",
    "line" : 197,
    "diffHunk" : "@@ -1,1 +417,421 @@\n        function getNextInvalidatedProject() {\n            if (nextIndex < invalidatedProjectQueue.length) {\n                const proj = invalidatedProjectQueue[nextIndex];\n                nextIndex++;"
  },
  {
    "id" : "b95395e0-fe8d-4b71-a624-60b7022e61a1",
    "prId" : 26590,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/26590#pullrequestreview-150254584",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e541e8d3-538e-4d8a-bc3c-e8be9e41722c",
        "parentId" : null,
        "authorId" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "body" : "Why is this cast safe?",
        "createdAt" : "2018-08-22T01:14:26Z",
        "updatedAt" : "2018-08-28T18:22:53Z",
        "lastEditedBy" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "tags" : [
        ]
      },
      {
        "id" : "6f14f9c8-f578-460e-961d-38f9215b38ba",
        "parentId" : "e541e8d3-538e-4d8a-bc3c-e8be9e41722c",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "We will add overload here (just like watch api and that will ensure this cast is valid) but we dont have that yet and is already in todo comment",
        "createdAt" : "2018-08-28T18:20:07Z",
        "updatedAt" : "2018-08-28T18:22:53Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "868cf3e6de627aae3e811bc0bcc40839a9b7af5f",
    "line" : 298,
    "diffHunk" : "@@ -1,1 +496,500 @@     */\n    export function createSolutionBuilder(host: SolutionBuilderHost, rootNames: ReadonlyArray<string>, defaultOptions: BuildOptions) {\n        const hostWithWatch = host as SolutionBuilderWithWatchHost;\n        const configFileCache = createConfigFileCache(host);\n        let context = createBuildContext(defaultOptions);"
  },
  {
    "id" : "4dc97c4d-a345-41e1-b241-4b4f2d77af6d",
    "prId" : 25368,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/25368#pullrequestreview-133712418",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b43cb370-a932-41a6-98e8-05c5f0c8ab8f",
        "parentId" : null,
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "And neither do `.json` if the allow json files flag is on, I believe?",
        "createdAt" : "2018-07-02T17:25:55Z",
        "updatedAt" : "2018-07-02T21:15:50Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2527da37c616dd02c818b8d099f823a8ae063da1",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +298,302 @@\n    function getOutputFileNames(inputFileName: string, configFile: ParsedCommandLine): ReadonlyArray<string> {\n        // outFile is handled elsewhere; .d.ts files don't generate outputs\n        if (configFile.options.outFile || configFile.options.out || fileExtensionIs(inputFileName, Extension.Dts)) {\n            return emptyArray;"
  },
  {
    "id" : "85862f9e-0315-4f01-b10e-668d484c3724",
    "prId" : 25049,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/25049#pullrequestreview-129766591",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c56542b-65fb-4fe5-ad71-597d2441c50f",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "sp:pseudo",
        "createdAt" : "2018-06-18T22:31:04Z",
        "updatedAt" : "2018-06-18T23:44:33Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "0c7a9f09-b669-46c1-bdfc-1cf1fdd283da",
        "parentId" : "3c56542b-65fb-4fe5-ad71-597d2441c50f",
        "authorId" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "body" : "I need a VS Code Extension just for this word",
        "createdAt" : "2018-06-18T22:50:21Z",
        "updatedAt" : "2018-06-18T23:44:33Z",
        "lastEditedBy" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "tags" : [
        ]
      }
    ],
    "commit" : "a72fe5dd8e82ffdaba971891fef5b6dc7cc35002",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +808,812 @@\n                    // If the upstream project has only change .d.ts files, and we've built\n                    // *after* those files, then we're \"psuedo up to date\" and eligible for a fast rebuild\n                    if (refStatus.newestDeclarationFileContentChangedTime <= oldestOutputFileTime) {\n                        pseudoUpToDate = true;"
  },
  {
    "id" : "2daf10cc-6779-457f-9430-ec741e3e67ea",
    "prId" : 24465,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/24465#pullrequestreview-127003525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b625464-9771-4105-a206-1b3d01c6148b",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "looks like `getDeclarationEmitOutputFilePath`, can we consolidate?",
        "createdAt" : "2018-06-08T00:56:02Z",
        "updatedAt" : "2018-06-09T16:43:39Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f626fdcb3026452fe1ca333085c2b720add2ee6",
    "line" : 294,
    "diffHunk" : "@@ -1,1 +292,296 @@    function getOutputDeclarationFileName(inputFileName: string, configFile: ParsedCommandLine) {\n        const relativePath = getRelativePathFromDirectory(rootDirOfOptions(configFile.options, configFile.options.configFilePath!), inputFileName, /*ignoreCase*/ true);\n        const outputPath = resolvePath(configFile.options.declarationDir || configFile.options.outDir || getDirectoryPath(configFile.options.configFilePath!), relativePath);\n        return changeExtension(outputPath, Extension.Dts);\n    }"
  },
  {
    "id" : "2dfd8e15-93ad-4a30-bd1b-2c397b967988",
    "prId" : 24465,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/24465#pullrequestreview-127297619",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16289f6d-b1d3-40f2-aaba-3a3a3aa0cde4",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "why? we emit in the presence of errors in tsc.. and why are option errors different from semantic errors?",
        "createdAt" : "2018-06-08T19:59:21Z",
        "updatedAt" : "2018-06-09T16:43:39Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "b9ec23a5-536f-4881-a944-51bd66b6e4cf",
        "parentId" : "16289f6d-b1d3-40f2-aaba-3a3a3aa0cde4",
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "I see, we are not building for any errors.. nevermind then.",
        "createdAt" : "2018-06-08T20:03:30Z",
        "updatedAt" : "2018-06-09T16:43:39Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f626fdcb3026452fe1ca333085c2b720add2ee6",
    "line" : 938,
    "diffHunk" : "@@ -1,1 +936,940 @@            const program = createProgram(programOptions);\n\n            // Don't emit anything in the presence of syntactic errors or options diagnostics\n            const syntaxDiagnostics = [...program.getOptionsDiagnostics(), ...program.getSyntacticDiagnostics()];\n            if (syntaxDiagnostics.length) {"
  }
]