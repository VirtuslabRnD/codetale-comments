[
  {
    "id" : "e3cec41f-4572-4238-a383-cfb93543abd3",
    "prId" : 40325,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/40325#pullrequestreview-483502162",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34647f02-5f75-4dd9-8351-511fda1d6edb",
        "parentId" : null,
        "authorId" : "abcb489c-ecaa-43d7-a864-2305b3feb38c",
        "body" : "It seems the logic duplicates private function `findAncestor` from the compiler utilities\r\nhttps://github.com/microsoft/TypeScript/blob/97f8b87e34333c40ec6013a327ce65c510df0be0/src/compiler/utilities.ts#L109-L123",
        "createdAt" : "2020-08-31T13:38:15Z",
        "updatedAt" : "2020-09-10T07:28:30Z",
        "lastEditedBy" : "abcb489c-ecaa-43d7-a864-2305b3feb38c",
        "tags" : [
        ]
      },
      {
        "id" : "a5c8b3cf-e1ec-4c0e-9ec7-1ae164e13806",
        "parentId" : "34647f02-5f75-4dd9-8351-511fda1d6edb",
        "authorId" : "2dcaf89e-5fd5-4224-973a-91e146fcf4af",
        "body" : "the util is can public?",
        "createdAt" : "2020-08-31T14:07:45Z",
        "updatedAt" : "2020-09-10T07:28:30Z",
        "lastEditedBy" : "2dcaf89e-5fd5-4224-973a-91e146fcf4af",
        "tags" : [
        ]
      },
      {
        "id" : "24114acd-3551-4e24-8fbb-31bee885fb68",
        "parentId" : "34647f02-5f75-4dd9-8351-511fda1d6edb",
        "authorId" : "2dcaf89e-5fd5-4224-973a-91e146fcf4af",
        "body" : "@a-tarasyuk the util function is can public?",
        "createdAt" : "2020-09-01T06:46:56Z",
        "updatedAt" : "2020-09-10T07:28:30Z",
        "lastEditedBy" : "2dcaf89e-5fd5-4224-973a-91e146fcf4af",
        "tags" : [
        ]
      },
      {
        "id" : "439e7823-103f-47e6-b364-8647eb5041c3",
        "parentId" : "34647f02-5f75-4dd9-8351-511fda1d6edb",
        "authorId" : "2dcaf89e-5fd5-4224-973a-91e146fcf4af",
        "body" : "@a-tarasyuk ",
        "createdAt" : "2020-09-07T12:03:15Z",
        "updatedAt" : "2020-09-10T07:28:30Z",
        "lastEditedBy" : "2dcaf89e-5fd5-4224-973a-91e146fcf4af",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb487e3fb54d2d882548c8e18efe9e159e879fe9",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +413,417 @@    export function findAncestor(node: Node | undefined, callback: (element: Node) => boolean | \"quit\"): Node | undefined;\n    export function findAncestor(node: Node, callback: (element: Node) => boolean | \"quit\"): Node | undefined {\n        while (node) {\n            const result = callback(node);\n            if (result === \"quit\") {"
  },
  {
    "id" : "f4a31bc9-6fa7-4df8-8574-5e9e5b166464",
    "prId" : 36292,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/36292#pullrequestreview-346908496",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0888e1d0-7f3f-4638-be05-310bba197e0b",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "I wish we could rid of getAllJSDocTagsOfKind now &mdash; we don't actually use it, but it's part of the public API.",
        "createdAt" : "2020-01-22T19:07:45Z",
        "updatedAt" : "2020-02-27T11:33:30Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "d001433f-97da-454b-a887-17840eb0e1ac",
        "parentId" : "0888e1d0-7f3f-4638-be05-310bba197e0b",
        "authorId" : "ab15ed9e-363f-447f-850d-c2bd363aebf4",
        "body" : "I removed the `or undefined` from `getAllJSDocTagsOfKind` part since it returns an empty array never `undefined`. Should I mark `getAllJSDocTags` as internal so as not to expand the public API ? ",
        "createdAt" : "2020-01-22T19:29:57Z",
        "updatedAt" : "2020-02-27T11:33:30Z",
        "lastEditedBy" : "ab15ed9e-363f-447f-850d-c2bd363aebf4",
        "tags" : [
        ]
      },
      {
        "id" : "cf861d63-fa83-4946-ac56-c3527c00c08d",
        "parentId" : "0888e1d0-7f3f-4638-be05-310bba197e0b",
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "No, getAllJSDocTags is better, I think people will be able to figure out which to use based on the type.",
        "createdAt" : "2020-01-22T21:16:40Z",
        "updatedAt" : "2020-02-27T11:33:30Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "98877171a8d5cd8ab96218d9f2c6e5ba9166bfbd",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +798,802 @@    }\n\n    /** Gets all JSDoc tags of a specified kind */\n    export function getAllJSDocTagsOfKind(node: Node, kind: SyntaxKind): readonly JSDocTag[] {\n        return getJSDocTags(node).filter(doc => doc.kind === kind);"
  }
]