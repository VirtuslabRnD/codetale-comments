[
  {
    "id" : "037bdf00-bb98-410f-9d59-3fc427f2d12e",
    "prId" : 37370,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/37370#pullrequestreview-373851707",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b48ce25b-c577-478b-93ee-d90dacc4aecd",
        "parentId" : null,
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Because in case of configured project those updated methods previously were on project which is resolutionCacheHost , we had to get compiler host since those methods are there now.",
        "createdAt" : "2020-03-12T19:45:49Z",
        "updatedAt" : "2020-03-12T19:45:49Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "3f5e0805ec94f6a9e36e599bd8411ab39bcfa693",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +366,370 @@                    }\n                    else {\n                        resolution = loader(name, containingFile, compilerOptions, resolutionHost.getCompilerHost?.() || resolutionHost, redirectedReference);\n                        perDirectoryResolution.set(name, resolution);\n                    }"
  },
  {
    "id" : "ee10eb5c-9aa5-469a-9354-df8679edf0a3",
    "prId" : 19053,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/19053#pullrequestreview-68491758",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "776bdb2c-bad3-4425-bcf8-8202155b4608",
        "parentId" : null,
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "Could just call `startCachingPerDirectoryResolution` from here?",
        "createdAt" : "2017-10-10T22:04:53Z",
        "updatedAt" : "2017-10-10T23:36:25Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      },
      {
        "id" : "7f188679-91e0-45d6-86f5-a459dbd8a4c9",
        "parentId" : "776bdb2c-bad3-4425-bcf8-8202155b4608",
        "authorId" : "59507247-4932-40ea-95c5-8eabb0b1de63",
        "body" : "Should an exception during program update be recoverable? Might it be more useful to crash tsserver if we throw during program update and don't catch until the event loop?",
        "createdAt" : "2017-10-11T04:54:02Z",
        "updatedAt" : "2017-10-11T04:54:02Z",
        "lastEditedBy" : "59507247-4932-40ea-95c5-8eabb0b1de63",
        "tags" : [
        ]
      }
    ],
    "commit" : "55bbcff348b49d063efe91e5d22e957ddb358076",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +142,146 @@            resolvedTypeReferenceDirectives.clear();\n            allFilesHaveInvalidatedResolution = false;\n            // perDirectoryResolvedModuleNames and perDirectoryResolvedTypeReferenceDirectives could be non empty if there was exception during program update\n            // (between startCachingPerDirectoryResolution and finishCachingPerDirectoryResolution)\n            perDirectoryResolvedModuleNames.clear();"
  },
  {
    "id" : "6934f25f-339a-4bd9-85f7-9349f798b4d7",
    "prId" : 17669,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/17669#pullrequestreview-55623569",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b3f025c-1307-4c90-b2e4-c7c6e8744bd8",
        "parentId" : null,
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "Could you document what each layer of keys is?",
        "createdAt" : "2017-08-10T19:27:29Z",
        "updatedAt" : "2017-08-31T00:34:53Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea95f3b4e564e2f0d9d7c9ddb0869c179783ee4f",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +119,123 @@            names: string[],\n            containingFile: string,\n            cache: Map<Map<T>>,\n            loader: (name: string, containingFile: string, options: CompilerOptions, host: ModuleResolutionHost) => T,\n            getResult: (s: T) => R,"
  },
  {
    "id" : "48711216-6739-4b9b-9722-fff9e6149f2e",
    "prId" : 17669,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/17669#pullrequestreview-56248701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2a7ce87-127a-4669-8cbc-b0012e127bc8",
        "parentId" : null,
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "But what if we wanted to log a different file? This would turn that off too.",
        "createdAt" : "2017-08-10T19:28:27Z",
        "updatedAt" : "2017-08-31T00:34:53Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      },
      {
        "id" : "2b7ee65b-89fa-4e0a-8e58-fc2edd511b90",
        "parentId" : "e2a7ce87-127a-4669-8cbc-b0012e127bc8",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "The resolution is per file and we are recording the files so anyways we need to record only once. This is same stuff earlier in lsHost thats moved as a helper",
        "createdAt" : "2017-08-15T02:03:20Z",
        "updatedAt" : "2017-08-31T00:34:53Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea95f3b4e564e2f0d9d7c9ddb0869c179783ee4f",
    "line" : 151,
    "diffHunk" : "@@ -1,1 +149,153 @@                        filesWithChangedSetOfUnresolvedImports.push(path);\n                        // reset log changes to avoid recording the same file multiple times\n                        logChanges = false;\n                    }\n                }"
  }
]