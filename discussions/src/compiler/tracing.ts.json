[
  {
    "id" : "fccb3728-2dac-4754-b6fe-ba0c0c5f91a9",
    "prId" : 42962,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/42962#pullrequestreview-600981433",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93427f10-140f-434f-b440-9a48791b7dc5",
        "parentId" : null,
        "authorId" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "body" : "Mainly moving the `getLineAndCharacterOfPosition` so it's mentioned once.  Feel free to ignore my flattening of the `return` and my dislike of vertical whitespace...\r\n\r\n```suggestion\r\n        function getLocation(node: Node | undefined) {\r\n            const file = getSourceFileOfNode(node);\r\n            if (!file) return;\r\n            return {\r\n                path: file.path,\r\n                start: getPosFromOne(file, node!.pos),\r\n                end: getPosFromOne(file, node!.end),\r\n            };\r\n            function getPosFromOne(file: SourceFile, pos: number): LineAndCharacter {\r\n                const lc = getLineAndCharacterOfPosition(file, pos);\r\n                return { line: lc.line + 1, character: lc.character + 1 };\r\n            }\r\n        }\r\n\r\n```",
        "createdAt" : "2021-02-27T20:42:32Z",
        "updatedAt" : "2021-02-27T20:45:21Z",
        "lastEditedBy" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "tags" : [
        ]
      },
      {
        "id" : "2848423b-d6ed-4356-8f18-c2de9117e1fd",
        "parentId" : "93427f10-140f-434f-b440-9a48791b7dc5",
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Thanks, but I don't find the improvement significant.",
        "createdAt" : "2021-03-01T17:21:56Z",
        "updatedAt" : "2021-03-01T17:21:57Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      }
    ],
    "commit" : "509ea1681aab2aeb45ca11c0fb579102c339d939",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +179,183 @@                };\n            }\n        }\n\n        function dumpTypes(types: readonly Type[]) {"
  },
  {
    "id" : "5039d759-2f9e-4a7b-b069-f57bb0403bdc",
    "prId" : 42323,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/42323#pullrequestreview-586861020",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c781ab2-9510-40a8-aca1-77a89ff2778f",
        "parentId" : null,
        "authorId" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "body" : "We could have just declared `tracingEnabled` as a non-exported namesapce in `ts` (similar to the `Parser` namespace in `parser.ts`). Do we ever need to reference `ts.tracingEnabled` directly outside of `ts.startTracing`?",
        "createdAt" : "2021-02-08T22:08:38Z",
        "updatedAt" : "2021-02-08T22:22:51Z",
        "lastEditedBy" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "tags" : [
        ]
      },
      {
        "id" : "40f39c28-faeb-44ca-b8a0-2be00a15ee66",
        "parentId" : "2c781ab2-9510-40a8-aca1-77a89ff2778f",
        "authorId" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "body" : "I don't know how I missed it...  #42710",
        "createdAt" : "2021-02-09T18:23:31Z",
        "updatedAt" : "2021-02-09T18:23:38Z",
        "lastEditedBy" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb57e8ca460d12e0dcbc85f8cce68ea42949dc1c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +10,14 @@// `tracingEnabled` should never be used directly, only through the above\n/* @internal */\nnamespace ts.tracingEnabled { // eslint-disable-line one-namespace-per-file\n    export const enum Mode {\n        Project,"
  },
  {
    "id" : "2a0064cb-34e9-46bd-8f4e-15e8df0968f4",
    "prId" : 41498,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/41498#pullrequestreview-528608403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a257be9-13de-4a0d-b2a6-5a009f3c067b",
        "parentId" : null,
        "authorId" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "body" : "Ooh, so the main thing in all of this is the `separateBeginAndEnd`?  Good way to switch early to a push/pop!",
        "createdAt" : "2020-11-11T23:17:10Z",
        "updatedAt" : "2020-11-11T23:20:45Z",
        "lastEditedBy" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "tags" : [
        ]
      },
      {
        "id" : "4afdf362-0da5-421f-af97-433f7e7d8e95",
        "parentId" : "3a257be9-13de-4a0d-b2a6-5a009f3c067b",
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Sorry, I should have called that out more explicilty.  Yes, `begin` -> `push(/*separateBeginAndEnd*/ true)`.",
        "createdAt" : "2020-11-11T23:22:52Z",
        "updatedAt" : "2020-11-11T23:22:52Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8996a34a93f67953f1cdacfd9e8f1e83338da96",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +107,111 @@     * these operations.\n     */\n    export function push(phase: Phase, name: string, args?: object, separateBeginAndEnd = false) {\n        if (!traceFd) return;\n        if (separateBeginAndEnd) {"
  },
  {
    "id" : "17245cc7-2dc6-472a-aada-7b0921a322c4",
    "prId" : 41374,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/41374#pullrequestreview-527497852",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88ad7e0b-cb63-48ce-8085-92c4922a30a3",
        "parentId" : null,
        "authorId" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "body" : "Maybe if there's some `Unset` thing, assert here that it's in that state, or that it was used with `Build` and the new value is the `Build` too, etc?\r\n\r\n(Also, due to the same confusion: if it shouldn't consume a `Project` then should it be an error with that?)",
        "createdAt" : "2020-11-06T23:15:45Z",
        "updatedAt" : "2020-11-12T21:04:11Z",
        "lastEditedBy" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "tags" : [
        ]
      },
      {
        "id" : "32fd5175-cf42-4ddb-ab9b-3beef29bb98c",
        "parentId" : "88ad7e0b-cb63-48ce-8085-92c4922a30a3",
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "As the code exists now, the value will never be consumed, so I'm reluctant to add a bunch of runtime checks to validate something that is statically true.  However, if you think it's important, I can make it `| undefined` and use `!` at the only read to make it clear that I've thought about what values can reach that point.",
        "createdAt" : "2020-11-09T18:56:04Z",
        "updatedAt" : "2020-11-12T21:04:12Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "ab4f64e3-4306-4be6-8fef-0c412283d2ec",
        "parentId" : "88ad7e0b-cb63-48ce-8085-92c4922a30a3",
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Dropped initializer to clarify.",
        "createdAt" : "2020-11-10T18:38:32Z",
        "updatedAt" : "2020-11-12T21:04:12Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      }
    ],
    "commit" : "dad4ad04ec7b8d7a84f1376104605ec565b7702b",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +35,39 @@        }\n\n        mode = tracingMode;\n\n        if (legendPath === undefined) {"
  },
  {
    "id" : "60f390bf-31eb-42aa-bcf5-39ff44c484dd",
    "prId" : 41374,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/41374#pullrequestreview-527441621",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2677654-b959-4d56-9426-0d8df1c8d9da",
        "parentId" : null,
        "authorId" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "body" : "Is it completely useless without the type information?  -- Maybe it's better to just drop the information instead of not writing anything?",
        "createdAt" : "2020-11-06T23:27:52Z",
        "updatedAt" : "2020-11-12T21:04:12Z",
        "lastEditedBy" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "tags" : [
        ]
      },
      {
        "id" : "e196264d-36e7-44db-8b39-b9e930a45b60",
        "parentId" : "c2677654-b959-4d56-9426-0d8df1c8d9da",
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : " 1. Mostly, but not entirely, useless\r\n 2. Server traces tend to cover longer time spans, so dropping events is helpful for keeping the sizes reasonable\r\n 3. How would you identify the arguments that refer to type IDs?",
        "createdAt" : "2020-11-09T19:01:23Z",
        "updatedAt" : "2020-11-12T21:04:12Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "4d08a76a-e790-4566-bb57-d5a4833eff7f",
        "parentId" : "c2677654-b959-4d56-9426-0d8df1c8d9da",
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "We can add them back later if we miss them.",
        "createdAt" : "2020-11-10T17:30:44Z",
        "updatedAt" : "2020-11-12T21:04:12Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      }
    ],
    "commit" : "dad4ad04ec7b8d7a84f1376104605ec565b7702b",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +159,163 @@\n        // In server mode, there's no easy way to dump type information, so we drop events that would require it.\n        if (mode === Mode.Server && phase === Phase.CheckTypes) return;\n\n        performance.mark(\"beginTracing\");"
  },
  {
    "id" : "af81d3a5-2f48-48ec-ba55-47529c140ecc",
    "prId" : 40634,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/40634#pullrequestreview-509726001",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "663cdd93-7b33-480d-8c52-0fbd2ee8aa57",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Can you please add a comment about why these are important?",
        "createdAt" : "2020-09-18T21:00:18Z",
        "updatedAt" : "2020-10-21T21:07:05Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "87e7d62e-683e-4f6c-b8a5-16eefe9ff291",
        "parentId" : "663cdd93-7b33-480d-8c52-0fbd2ee8aa57",
        "authorId" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "body" : "Done.",
        "createdAt" : "2020-10-15T19:52:22Z",
        "updatedAt" : "2020-10-21T21:07:05Z",
        "lastEditedBy" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1f4a3c8701d8a9ce904797cf246257f55e25183",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +50,54 @@        // Start with a prefix that contains some metadata that the devtools profiler expects (also avoids a warning on import)\n        const meta = { cat: \"__metadata\", ph: \"M\", ts: 1000 * timestamp(), pid: 1, tid: 1 };\n        fs.writeSync(traceFd,\n                     \"[\\n\"\n                     + [{ name: \"process_name\", args: { name: \"tsc\" }, ...meta },"
  },
  {
    "id" : "4b12781d-8ad4-426d-af20-fe9a5205e385",
    "prId" : 40634,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/40634#pullrequestreview-513123611",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32da7d9f-4a28-497d-966a-4468ba209e18",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "`/** Note: `push` should be used by default.  `begin` is for special cases where we need the data point even if the event never  terminates (typically for reducing a scenario too big to trace to one that can be completed). */`",
        "createdAt" : "2020-10-19T21:25:38Z",
        "updatedAt" : "2020-10-21T21:07:05Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "1ef4edcf-a1ca-4e89-8327-9b328b837590",
        "parentId" : "32da7d9f-4a28-497d-966a-4468ba209e18",
        "authorId" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "body" : "Done, tweaked a bit.",
        "createdAt" : "2020-10-20T20:52:06Z",
        "updatedAt" : "2020-10-21T21:07:05Z",
        "lastEditedBy" : "1e789298-f9d6-4b64-b80b-206f2f8fbd2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1f4a3c8701d8a9ce904797cf246257f55e25183",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +101,105 @@     * deprecate these operations.\n     */\n    export function begin(phase: Phase, name: string, args?: object) {\n        writeEvent(\"B\", phase, name, args);\n    }"
  },
  {
    "id" : "b278d8d3-1feb-4dbd-9aac-9b621cf57245",
    "prId" : 40063,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/40063#pullrequestreview-486387410",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fc40a70-537e-4d9e-819c-a057efd52ac0",
        "parentId" : null,
        "authorId" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "body" : "In the future we might be able to move some of this logic to a conditionally loaded module, similar to the extended debug information for flow nodes in _~/src/debug/dbg.ts_ loaded by _~/src/compiler/debug.ts_: https://github.com/microsoft/TypeScript/blob/d89635381a65229c5ab5b0c73de15347b86235a2/src/compiler/debug.ts#L655-L668\r\n\r\nI've been thinking about moving more of `ts.Debug` into the external file to reduce the file size of _tsc.js_, _typescript.js_, and _tsserver.js_ as well.\r\n\r\nThis obviously isn't something we need to do now, but we might want to consider putting it on the backlog.",
        "createdAt" : "2020-09-10T23:58:46Z",
        "updatedAt" : "2020-09-10T23:59:07Z",
        "lastEditedBy" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef1481c8a4777b3bfd242be7b717533b3ca5d149",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +14,18 @@        Debug.assert(!traceFd, \"Tracing already started\");\n\n        if (fs === undefined) {\n            try {\n                fs = require(\"fs\");"
  }
]