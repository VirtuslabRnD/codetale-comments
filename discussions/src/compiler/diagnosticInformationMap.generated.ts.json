[
  {
    "id" : "0d0de46b-35ef-4024-a39c-8ff7160a7d0e",
    "prId" : 3564,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1a4a757-b55d-4281-aae3-3f41f7eb8d34",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Should \"expression\" have single quotes around it?\n",
        "createdAt" : "2015-06-22T23:14:44Z",
        "updatedAt" : "2015-06-29T17:39:59Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      }
    ],
    "commit" : "3402f3556c3ceb12be8506116e15d65e5a761928",
    "line" : null,
    "diffHunk" : "@@ -1,1 +575,579 @@        Only_identifiers_Slashqualified_names_with_optional_type_arguments_are_currently_supported_in_a_class_extends_clauses: { code: 9002, category: DiagnosticCategory.Error, key: \"Only identifiers/qualified-names with optional type arguments are currently supported in a class 'extends' clauses.\" },\n        class_expressions_are_not_currently_supported: { code: 9003, category: DiagnosticCategory.Error, key: \"'class' expressions are not currently supported.\" },\n        JSX_attributes_must_only_be_assigned_a_non_empty_expression: { code: 17000, category: DiagnosticCategory.Error, key: \"JSX attributes must only be assigned a non-empty 'expression'.\" },\n        JSX_elements_cannot_have_multiple_attributes_with_the_same_name: { code: 17001, category: DiagnosticCategory.Error, key: \"JSX elements cannot have multiple attributes with the same name.\" },\n        Expected_corresponding_JSX_closing_tag_for_0: { code: 17002, category: DiagnosticCategory.Error, key: \"Expected corresponding JSX closing tag for '{0}'.\" },"
  },
  {
    "id" : "2f091c55-c1f9-408f-bae3-396e2daed93c",
    "prId" : 2805,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65332f1e-c095-4ceb-9259-b6f03adb0886",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "This is just the worst.\n",
        "createdAt" : "2015-04-16T23:45:28Z",
        "updatedAt" : "2015-04-17T17:16:59Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      }
    ],
    "commit" : "3298327ad0890839881f79be8e6c775ce0b95206",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1,5 @@// <auto-generated />\n/// <reference path=\"types.ts\" />\n/* @internal */\nmodule ts {\n    export var Diagnostics = {"
  },
  {
    "id" : "bb6c0276-9ea3-44ae-ad31-cd3a9b5e5ae7",
    "prId" : 748,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb1c1c46-5f3b-4672-acf9-30c1707c54a2",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "Please use a number greater than the last number in the 1xxx range.  We dn't want to reuse error numbers used by the V1 compiler.  Thanks!\n",
        "createdAt" : "2014-09-25T23:58:45Z",
        "updatedAt" : "2014-09-29T17:23:21Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "3751b25dd202e165ec0d10b0539de341d6da1cb0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +6,10 @@        Identifier_expected: { code: 1003, category: DiagnosticCategory.Error, key: \"Identifier expected.\" },\n        _0_expected: { code: 1005, category: DiagnosticCategory.Error, key: \"'{0}' expected.\" },\n        A_file_cannot_have_a_reference_to_itself: { code: 1006, category: DiagnosticCategory.Error, key: \"A file cannot have a reference to itself.\" },\n        Trailing_comma_not_allowed: { code: 1009, category: DiagnosticCategory.Error, key: \"Trailing comma not allowed.\" },\n        Asterisk_Slash_expected: { code: 1010, category: DiagnosticCategory.Error, key: \"'*/' expected.\" },"
  },
  {
    "id" : "15b607ec-a320-4c47-8f47-c09dc8acbbfe",
    "prId" : 29,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "874e0207-20ca-4309-aa5e-864488f5e90f",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "Was this manually edited?  Or did the tool generate this?\n",
        "createdAt" : "2014-07-16T20:30:03Z",
        "updatedAt" : "2014-07-16T20:30:03Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      },
      {
        "id" : "95d56b1b-3db7-4966-8e42-9eb36864a2dc",
        "parentId" : "874e0207-20ca-4309-aa5e-864488f5e90f",
        "authorId" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "body" : "No manual edits, was generated by tool.\n",
        "createdAt" : "2014-07-16T21:35:38Z",
        "updatedAt" : "2014-07-16T21:35:38Z",
        "lastEditedBy" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3f5993770078c42830a068092484b621e8ea9ef",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +196,200 @@        Cannot_read_file_0_Colon_1: { code: 5012, category: DiagnosticCategory.Error, key: \"Cannot read file '{0}': {1}\" },\n        Unsupported_file_encoding: { code: 5013, category: DiagnosticCategory.NoPrefix, key: \"Unsupported file encoding.\" },\n        Could_not_write_file_0_Colon_1: { code: 5033, category: DiagnosticCategory.Error, key: \"Could not write file '{0}': {1}\" },\n        Option_mapRoot_cannot_be_specified_without_specifying_sourcemap_option: { code: 5038, category: DiagnosticCategory.Error, key: \"Option mapRoot cannot be specified without specifying sourcemap option.\" },\n        Option_sourceRoot_cannot_be_specified_without_specifying_sourcemap_option: { code: 5039, category: DiagnosticCategory.Error, key: \"Option sourceRoot cannot be specified without specifying sourcemap option.\" },"
  }
]