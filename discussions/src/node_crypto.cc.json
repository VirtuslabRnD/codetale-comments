[
  {
    "id" : "77b22a8b-4794-4085-a7a5-97f6b779c9a6",
    "prId" : 4099,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d11a91a-d75b-4933-be60-2150a34cbc67",
        "parentId" : null,
        "authorId" : "d47a8b61-a8ac-4504-809d-8432d9e75d95",
        "body" : "Let's do `while (true)` here, and break in loop if `x509 === nullptr`. I don't think that this deserves disabling lint rules.\n",
        "createdAt" : "2015-12-01T18:37:43Z",
        "updatedAt" : "2015-12-08T21:02:41Z",
        "lastEditedBy" : "d47a8b61-a8ac-4504-809d-8432d9e75d95",
        "tags" : [
        ]
      },
      {
        "id" : "eb9f93ed-846d-4988-ae64-b968593db948",
        "parentId" : "3d11a91a-d75b-4933-be60-2150a34cbc67",
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "The NOLINT works around what I suspect is a bug in the lint rule.  If you put the `while` on a single line (and `s/nullptr/0/` to keep it < 80 columns) it won't trigger.\n",
        "createdAt" : "2015-12-01T19:41:01Z",
        "updatedAt" : "2015-12-08T21:02:41Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      },
      {
        "id" : "01ade2d1-fa47-476d-9929-8ce5eb53cb56",
        "parentId" : "3d11a91a-d75b-4933-be60-2150a34cbc67",
        "authorId" : "d47a8b61-a8ac-4504-809d-8432d9e75d95",
        "body" : "idk, it doesn't look like a good code style to me, splitting while's condition between lines. That's just my opinion, though\n",
        "createdAt" : "2015-12-01T19:43:01Z",
        "updatedAt" : "2015-12-08T21:02:41Z",
        "lastEditedBy" : "d47a8b61-a8ac-4504-809d-8432d9e75d95",
        "tags" : [
        ]
      },
      {
        "id" : "530580b0-e105-4c9a-92b9-7656a7f8447a",
        "parentId" : "3d11a91a-d75b-4933-be60-2150a34cbc67",
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "/cc @trevnorris - you can be the arbitrator.\n",
        "createdAt" : "2015-12-01T21:27:27Z",
        "updatedAt" : "2015-12-08T21:02:41Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      },
      {
        "id" : "065a27a4-d78a-4e9d-9926-a02e1287d951",
        "parentId" : "3d11a91a-d75b-4933-be60-2150a34cbc67",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "Is the following not possible?\n\n``` cpp\n  if (BIO* bio = LoadBIO(env, args[0])) {\n    X509* x509;\n    while (x509 = PEM_read_bio_X509(bio, nullptr, CryptoPemCallback, nullptr)) {\n     // ...\n```\n\nIf not, I'd say how it is now isn't the prettiest but personally find it easier to logically follow. Which wins for me.\n",
        "createdAt" : "2015-12-08T23:56:42Z",
        "updatedAt" : "2015-12-08T23:56:42Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      }
    ],
    "commit" : "82e0974afa8353e3f025ae2cefd7147ca86419db",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +651,655 @@  unsigned cert_count = 0;\n  if (BIO* bio = LoadBIO(env, args[0])) {\n    while (X509* x509 =  // NOLINT(whitespace/if-one-line)\n        PEM_read_bio_X509(bio, nullptr, CryptoPemCallback, nullptr)) {\n      X509_STORE_add_cert(sc->ca_store_, x509);"
  },
  {
    "id" : "de6ccecb-7297-4687-814e-f42511501297",
    "prId" : 9032,
    "prUrl" : "https://github.com/nodejs/node/pull/9032#pullrequestreview-3941783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2786dc38-4fbd-41da-a8e4-a9646b61390d",
        "parentId" : null,
        "authorId" : "d47a8b61-a8ac-4504-809d-8432d9e75d95",
        "body" : "`!is_gcm_mode`?\n",
        "createdAt" : "2016-10-12T16:43:07Z",
        "updatedAt" : "2016-10-17T15:08:20Z",
        "lastEditedBy" : "d47a8b61-a8ac-4504-809d-8432d9e75d95",
        "tags" : [
        ]
      },
      {
        "id" : "a52d6ffd-4512-4abd-a268-8ff74b1e128f",
        "parentId" : "2786dc38-4fbd-41da-a8e4-a9646b61390d",
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "Believe it or not, I chose not to use that because `!i` is not very distinct in some fonts.\n",
        "createdAt" : "2016-10-12T17:09:07Z",
        "updatedAt" : "2016-10-17T15:08:20Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      },
      {
        "id" : "40b43422-0584-43c5-aa72-e779b8907121",
        "parentId" : "2786dc38-4fbd-41da-a8e4-a9646b61390d",
        "authorId" : "d47a8b61-a8ac-4504-809d-8432d9e75d95",
        "body" : "oh gosh!\n",
        "createdAt" : "2016-10-12T19:10:00Z",
        "updatedAt" : "2016-10-17T15:08:20Z",
        "lastEditedBy" : "d47a8b61-a8ac-4504-809d-8432d9e75d95",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ef6d42cce8535aa3f25b07ede5942f74959033a",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +3262,3266 @@  const bool is_gcm_mode = (EVP_CIPH_GCM_MODE == EVP_CIPHER_mode(cipher_));\n\n  if (is_gcm_mode == false && iv_len != expected_iv_len) {\n    return env()->ThrowError(\"Invalid IV length\");\n  }"
  },
  {
    "id" : "0d015d87-e490-42f9-b739-23cad2ad3a77",
    "prId" : 11006,
    "prUrl" : "https://github.com/nodejs/node/pull/11006#pullrequestreview-21120105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb024982-6507-44b4-8a60-3fd42ab65455",
        "parentId" : null,
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "You can use .data() in C++11, it's interchangeable with .c_str() now (and one keystroke shorter.)",
        "createdAt" : "2017-02-09T06:31:32Z",
        "updatedAt" : "2017-02-09T21:04:13Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      },
      {
        "id" : "48e6aec7-7c31-400a-8f57-f3d643636e1a",
        "parentId" : "eb024982-6507-44b4-8a60-3fd42ab65455",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "https://github.com/nodejs/node/pull/11272",
        "createdAt" : "2017-02-09T21:11:00Z",
        "updatedAt" : "2017-02-09T21:11:01Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      }
    ],
    "commit" : "59afa275adc8c91d564bdde92390dd9341c919c8",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +5901,5905 @@    ERR_clear_error();\n    CONF_modules_load_file(\n        openssl_config.c_str(),\n        nullptr,\n        CONF_MFLAGS_DEFAULT_SECTION);"
  },
  {
    "id" : "a9547196-be48-4d68-8b32-55d5e22cc6a7",
    "prId" : 12210,
    "prUrl" : "https://github.com/nodejs/node/pull/12210#pullrequestreview-30873824",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b07e416-71a6-4ba9-80a4-d4a59f8caa96",
        "parentId" : null,
        "authorId" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "body" : "Given this change, should we also only throw if attempting to turn FIPS off when `force_fips_crypto` is on? Turning it on should likely just non-op",
        "createdAt" : "2017-04-04T16:01:24Z",
        "updatedAt" : "2017-09-26T22:49:39Z",
        "lastEditedBy" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "tags" : [
        ]
      },
      {
        "id" : "af0fd8e9-85b8-4c00-bdf5-096416cf0e06",
        "parentId" : "7b07e416-71a6-4ba9-80a4-d4a59f8caa96",
        "authorId" : "afafee7a-f5c7-4e34-bbb2-fe3900a60ecf",
        "body" : "@jasnell if `force_fips_crypto` is on, then `FIPS_mode()` should already be enabled right? So doesn't the `if (enable == enabled)` branch already cover that?",
        "createdAt" : "2017-04-04T16:38:40Z",
        "updatedAt" : "2017-09-26T22:49:39Z",
        "lastEditedBy" : "afafee7a-f5c7-4e34-bbb2-fe3900a60ecf",
        "tags" : [
        ]
      },
      {
        "id" : "3a25fc0d-0f80-4cf4-8116-66595b17f890",
        "parentId" : "7b07e416-71a6-4ba9-80a4-d4a59f8caa96",
        "authorId" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "body" : "good point. ok",
        "createdAt" : "2017-04-04T19:07:47Z",
        "updatedAt" : "2017-09-26T22:49:39Z",
        "lastEditedBy" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "tags" : [
        ]
      }
    ],
    "commit" : "0919dff489652595e59b44b7d11114bb402d760b",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +6026,6030 @@  if (enable == enabled)\n    return;  // No action needed.\n  if (force_fips_crypto) {\n    return env->ThrowError(\n        \"Cannot set FIPS mode, it was forced with --force-fips at startup.\");"
  },
  {
    "id" : "2cb980ce-b192-4049-876b-24e056ff9347",
    "prId" : 23354,
    "prUrl" : "https://github.com/nodejs/node/pull/23354#pullrequestreview-166691513",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad4be937-a619-4928-9671-568c52a79765",
        "parentId" : null,
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "Is this exposed just for testing? Should this be have a public API?",
        "createdAt" : "2018-10-17T15:41:02Z",
        "updatedAt" : "2018-10-20T13:22:01Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "7c18718a-c840-4a69-9c9b-3ef248318960",
        "parentId" : "ad4be937-a619-4928-9671-568c52a79765",
        "authorId" : "d7adb49d-1fbc-4697-936a-63b5d4a23b17",
        "body" : "Yes. I couldn't find a way to test this feature so that I add this API. I'm not sure if exposing API for tests is permitted or not.\r\n\r\n    Should this be have a public API?\r\n\r\nDid you mean that we could expose this in a \"private\" way, or we should not expose it?",
        "createdAt" : "2018-10-18T14:05:10Z",
        "updatedAt" : "2018-10-20T13:22:01Z",
        "lastEditedBy" : "d7adb49d-1fbc-4697-936a-63b5d4a23b17",
        "tags" : [
        ]
      },
      {
        "id" : "88a0b9b1-83d6-4030-84c7-2f26ccd6f94b",
        "parentId" : "ad4be937-a619-4928-9671-568c52a79765",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "IMHO exposing somthing as internal binding just for testing is 💯.\r\nI'm asking as a follow up is it interesting for the user? We do expose several CLI args on [`process`](https://nodejs.org/api/process.html), such as `debugPort` or `noDeprecation`",
        "createdAt" : "2018-10-19T00:21:48Z",
        "updatedAt" : "2018-10-20T13:22:01Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "9d02cec3-d355-4ca5-b402-d329d7442010",
        "parentId" : "ad4be937-a619-4928-9671-568c52a79765",
        "authorId" : "d7adb49d-1fbc-4697-936a-63b5d4a23b17",
        "body" : "I see. I guess we could put this on hold until someone asks for the API.",
        "createdAt" : "2018-10-19T04:26:32Z",
        "updatedAt" : "2018-10-20T13:22:01Z",
        "lastEditedBy" : "d7adb49d-1fbc-4697-936a-63b5d4a23b17",
        "tags" : [
        ]
      },
      {
        "id" : "4764aa78-69c2-4903-832c-bdded8bd4f5e",
        "parentId" : "ad4be937-a619-4928-9671-568c52a79765",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "👍 ",
        "createdAt" : "2018-10-19T20:50:55Z",
        "updatedAt" : "2018-10-20T13:22:01Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      }
    ],
    "commit" : "87719d792b855e4278dbd3ca209592d83e80ac37",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +5656,5660 @@  env->SetMethodNoSideEffect(target, \"certExportChallenge\", ExportChallenge);\n  // Exposed for testing purposes only.\n  env->SetMethodNoSideEffect(target, \"isExtraRootCertsFileLoaded\",\n                             IsExtraRootCertsFileLoaded);\n"
  },
  {
    "id" : "4430abe9-d8c5-4a46-9b65-0670e952b085",
    "prId" : 23354,
    "prUrl" : "https://github.com/nodejs/node/pull/23354#pullrequestreview-166376588",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2942abfd-e9a8-41b0-abfd-51eeefd8e4c0",
        "parentId" : null,
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "With the new logic could this be replaced with an `CHECK_NOT_NULL(root_cert_store)`",
        "createdAt" : "2018-10-17T15:58:29Z",
        "updatedAt" : "2018-10-20T13:22:01Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "fb0acd52-7650-4ec5-bdfe-171c61124677",
        "parentId" : "2942abfd-e9a8-41b0-abfd-51eeefd8e4c0",
        "authorId" : "d7adb49d-1fbc-4697-936a-63b5d4a23b17",
        "body" : "No. `CHECK_NOT_NULL` might throw so that it is not expected here. But thanks for reminding me of using `CHECK_NOT_NULL`.",
        "createdAt" : "2018-10-18T11:43:51Z",
        "updatedAt" : "2018-10-20T13:22:01Z",
        "lastEditedBy" : "d7adb49d-1fbc-4697-936a-63b5d4a23b17",
        "tags" : [
        ]
      },
      {
        "id" : "baa6c6f0-957d-40e0-99dc-4ff55a673c58",
        "parentId" : "2942abfd-e9a8-41b0-abfd-51eeefd8e4c0",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "If we do initialize `root_cert_store` very early in the process start, what are the possible conditions that `root_cert_store` can be `nullptr` and still be valid.\r\n(I was looking for code doing `root_cert_store = ...` and found none)",
        "createdAt" : "2018-10-18T13:55:07Z",
        "updatedAt" : "2018-10-20T13:22:01Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "c640c605-641e-4403-8463-eae2652d4828",
        "parentId" : "2942abfd-e9a8-41b0-abfd-51eeefd8e4c0",
        "authorId" : "d7adb49d-1fbc-4697-936a-63b5d4a23b17",
        "body" : "Yes, that's true. I think I figure out what you meant by `With the new logic`.",
        "createdAt" : "2018-10-18T14:26:03Z",
        "updatedAt" : "2018-10-20T13:22:01Z",
        "lastEditedBy" : "d7adb49d-1fbc-4697-936a-63b5d4a23b17",
        "tags" : [
        ]
      },
      {
        "id" : "8ca8f24e-4493-45b4-992d-ee8b427fb72e",
        "parentId" : "2942abfd-e9a8-41b0-abfd-51eeefd8e4c0",
        "authorId" : "d7adb49d-1fbc-4697-936a-63b5d4a23b17",
        "body" : "I have moved the `LoadExtraRootCertsFile` into `UseExtraCaCerts` so that `root_cert_store` may be `nullptr` when we don't set `NODE_EXTRA_CA_CERTS`. ",
        "createdAt" : "2018-10-19T04:29:42Z",
        "updatedAt" : "2018-10-20T13:22:01Z",
        "lastEditedBy" : "d7adb49d-1fbc-4697-936a-63b5d4a23b17",
        "tags" : [
        ]
      }
    ],
    "commit" : "87719d792b855e4278dbd3ca209592d83e80ac37",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +894,898 @@  ClearErrorOnReturn clear_error_on_return;\n\n  if (root_cert_store == nullptr) {\n    root_cert_store = NewRootCertStore();\n  }"
  },
  {
    "id" : "6ce9e0c1-a881-44fc-b48b-63cc85d4e3fc",
    "prId" : 24081,
    "prUrl" : "https://github.com/nodejs/node/pull/24081#pullrequestreview-172305373",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e89c298b-a273-4738-83f5-9fe0f85111c5",
        "parentId" : null,
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "Maybe a comment here to state that chacha20-poly1305 is an AEAD cipher, but that its mode of 0 doesn't indicate that?",
        "createdAt" : "2018-11-06T18:56:58Z",
        "updatedAt" : "2018-11-07T23:44:51Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      },
      {
        "id" : "c99240d0-f969-48ea-9aa6-3545808e0dd9",
        "parentId" : "e89c298b-a273-4738-83f5-9fe0f85111c5",
        "authorId" : "80d6a361-2cb7-45ab-bdd0-a7576af6c1f9",
        "body" : "I will add a comment to indicate it",
        "createdAt" : "2018-11-07T01:07:04Z",
        "updatedAt" : "2018-11-07T23:44:51Z",
        "lastEditedBy" : "80d6a361-2cb7-45ab-bdd0-a7576af6c1f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c596222433166a7c0274251cca1e55f3bf9560f",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +2562,2566 @@  // Check `chacha20-poly1305` separately, it is also an AEAD cipher,\n  // but its mode is 0 which doesn't indicate\n  return EVP_CIPHER_nid(cipher) == NID_chacha20_poly1305 ||\n         mode == EVP_CIPH_CCM_MODE ||\n         mode == EVP_CIPH_GCM_MODE ||"
  },
  {
    "id" : "c6b74e59-0ade-4c17-9669-228469131e46",
    "prId" : 26319,
    "prUrl" : "https://github.com/nodejs/node/pull/26319#pullrequestreview-211064089",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bae4ecbf-60b4-4129-ac68-acb02f9ba071",
        "parentId" : null,
        "authorId" : "9a49d126-5eff-41ea-a485-76c2defdc3cc",
        "body" : "I believe I explicitely mentioned `'rsa'`, `'dsa'` and `'ec'` at some places in the documentation, these might need to be updated.",
        "createdAt" : "2019-03-01T14:43:38Z",
        "updatedAt" : "2019-03-12T13:28:57Z",
        "lastEditedBy" : "9a49d126-5eff-41ea-a485-76c2defdc3cc",
        "tags" : [
        ]
      },
      {
        "id" : "a28c183a-6e15-4576-bfda-bec8ce51b18e",
        "parentId" : "bae4ecbf-60b4-4129-ac68-acb02f9ba071",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "Added.",
        "createdAt" : "2019-03-06T06:42:19Z",
        "updatedAt" : "2019-03-12T13:28:57Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "247c14c040026252814c3d4e8cffb8ac8748180e",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +3472,3476 @@    return env()->crypto_ed25519_string();\n  case EVP_PKEY_ED448:\n    return env()->crypto_ed448_string();\n  default:\n    CHECK(false);"
  }
]