[
  {
    "id" : "30ab046c-910a-456c-b3b1-0d5b71fce110",
    "prId" : 23822,
    "prUrl" : "https://github.com/nodejs/node/pull/23822#pullrequestreview-167394950",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3bb9cad-4d37-4b11-8326-75b4d284775c",
        "parentId" : null,
        "authorId" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "body" : "Unrelated change? Imo this makes thing a bit more confusing, but if you really want to split it, make the type of `s` explicit.",
        "createdAt" : "2018-10-23T02:49:57Z",
        "updatedAt" : "2018-10-30T01:45:05Z",
        "lastEditedBy" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "tags" : [
        ]
      },
      {
        "id" : "164f15ea-f7f0-4acb-aaa3-4ea6623d354c",
        "parentId" : "a3bb9cad-4d37-4b11-8326-75b4d284775c",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "This is an interesting case. I didn't remove existing information, so There's no reduction of readability...\r\nI'd rather keep ignored the type of s, having it this way allows the compiler to elide it with optimization, while still have it in debug mode.",
        "createdAt" : "2018-10-23T03:01:59Z",
        "updatedAt" : "2018-10-30T01:45:05Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "049ac111-7e28-44e8-b80d-f90d6a68b97f",
        "parentId" : "a3bb9cad-4d37-4b11-8326-75b4d284775c",
        "authorId" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "body" : "> There's no reduction of readability...\r\n\r\nThat’s subjective, but it’s not the end of the world here.\r\n\r\n> I'd rather keep ignored the type of s, having it this way allows the compiler to elide it with optimization, while still have it in debug mode.\r\n\r\nI kinda do not understand this sentence. Why would this affect compiler optimizations, or what difference does debug mode make?",
        "createdAt" : "2018-10-23T03:09:29Z",
        "updatedAt" : "2018-10-30T01:45:05Z",
        "lastEditedBy" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "tags" : [
        ]
      },
      {
        "id" : "3a597b4b-945d-4882-9ebe-d2a798be5eee",
        "parentId" : "a3bb9cad-4d37-4b11-8326-75b4d284775c",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "using `auto` is a hint to the compiler that we are not using any property of the variable other then those explicitly stated.\r\nBut I'll fix it... It's not a hot path, or a big deal...",
        "createdAt" : "2018-10-23T03:40:40Z",
        "updatedAt" : "2018-10-30T01:45:05Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "99418040-2c78-4da0-b6e7-31f456e820c2",
        "parentId" : "a3bb9cad-4d37-4b11-8326-75b4d284775c",
        "authorId" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "body" : "`auto` just means type inference, and code generation happens after types have been inferred, so there should not usually be *any* difference in optimization if we explicitly spell out types.",
        "createdAt" : "2018-10-23T03:46:25Z",
        "updatedAt" : "2018-10-30T01:45:05Z",
        "lastEditedBy" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "tags" : [
        ]
      },
      {
        "id" : "78314063-0b0f-407b-8c5b-884b771dac12",
        "parentId" : "a3bb9cad-4d37-4b11-8326-75b4d284775c",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "`auto` -> `NativeSymbolDebuggingContext::SymbolInfo` Done",
        "createdAt" : "2018-10-23T12:54:39Z",
        "updatedAt" : "2018-10-30T01:45:06Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      }
    ],
    "commit" : "247b513059592cbfe9ec3012aa9bc461b9899c7f",
    "line" : 172,
    "diffHunk" : "@@ -1,1 +256,260 @@    void* frame = frames[i];\n    NativeSymbolDebuggingContext::SymbolInfo s = sym_ctx->LookupSymbol(frame);\n    fprintf(fp, \"%2d: %p %s\\n\", i, frame, s.Display().c_str());\n  }\n}"
  },
  {
    "id" : "bc8e5a73-8e33-4a82-8183-0ea86ab4d697",
    "prId" : 23822,
    "prUrl" : "https://github.com/nodejs/node/pull/23822#pullrequestreview-169117304",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d7ad96c-7e90-4208-adf1-7608681b966d",
        "parentId" : null,
        "authorId" : "9a49d126-5eff-41ea-a485-76c2defdc3cc",
        "body" : "I am not a fan of this type of comment: What happens is obvious in both branches, and the branches themselves are short. (And I think we have a convention of ending comments with a period.)",
        "createdAt" : "2018-10-28T22:33:14Z",
        "updatedAt" : "2018-10-30T01:45:06Z",
        "lastEditedBy" : "9a49d126-5eff-41ea-a485-76c2defdc3cc",
        "tags" : [
        ]
      },
      {
        "id" : "15a2d6d4-2d1d-4f42-9187-7a9f665f0186",
        "parentId" : "7d7ad96c-7e90-4208-adf1-7608681b966d",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "This code was lifter verbatim from https://docs.microsoft.com/en-us/windows/desktop/Debug/retrieving-symbol-information-by-address\r\nI would rather keep changes to minimon, for future reverse engineering.",
        "createdAt" : "2018-10-28T23:59:51Z",
        "updatedAt" : "2018-10-30T01:45:06Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      }
    ],
    "commit" : "247b513059592cbfe9ec3012aa9bc461b9899c7f",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +183,187 @@      return szUndName;\n    } else {\n      // UnDecorateSymbolName failed\n      const DWORD error = GetLastError();  // \"eat\" the error anyway\n#ifdef DEBUG"
  },
  {
    "id" : "8d08dec3-19aa-4b8b-be33-e62297b3b0ca",
    "prId" : 23822,
    "prUrl" : "https://github.com/nodejs/node/pull/23822#pullrequestreview-169169662",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a21a4257-c7f5-4393-af22-bc5f2fddfd3d",
        "parentId" : null,
        "authorId" : "9a49d126-5eff-41ea-a485-76c2defdc3cc",
        "body" : "I am still not sure whether this is going to help us at some point, I suspect it won't.",
        "createdAt" : "2018-10-28T22:34:03Z",
        "updatedAt" : "2018-10-30T01:45:06Z",
        "lastEditedBy" : "9a49d126-5eff-41ea-a485-76c2defdc3cc",
        "tags" : [
        ]
      },
      {
        "id" : "77ebeabd-2504-4571-b118-39e3796f8c5d",
        "parentId" : "a21a4257-c7f5-4393-af22-bc5f2fddfd3d",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "Comment are free.\r\nPersonally I have not been in a situation where I said \"I wish there was less comments\"",
        "createdAt" : "2018-10-29T00:02:22Z",
        "updatedAt" : "2018-10-30T01:45:06Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "9126f527-39e3-44db-a32f-6ad9c84b7e2f",
        "parentId" : "a21a4257-c7f5-4393-af22-bc5f2fddfd3d",
        "authorId" : "9a49d126-5eff-41ea-a485-76c2defdc3cc",
        "body" : "I tend to agree, but someone will either change our code or the original, and updating the comment will mostly be a maintenance burden at that point from my perspective.",
        "createdAt" : "2018-10-29T07:09:38Z",
        "updatedAt" : "2018-10-30T01:45:06Z",
        "lastEditedBy" : "9a49d126-5eff-41ea-a485-76c2defdc3cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "247b513059592cbfe9ec3012aa9bc461b9899c7f",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +143,147 @@    // Use `fprintf(stderr, ` instead of `printf`.\n    // Assign values to `sym` on success.\n    // `current_process_` instead of `hProcess.\n\n    // Patch: made into arg - DWORD64  dwAddress;"
  }
]