[
  {
    "id" : "86942e93-d39f-4045-8c02-073614f9c34a",
    "prId" : 25526,
    "prUrl" : "https://github.com/nodejs/node/pull/25526#pullrequestreview-193656502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a98f2b41-267a-4e8e-98f0-a068ef5c1fd0",
        "parentId" : null,
        "authorId" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "body" : "Can you put this into the `per_process` namespace so it's easier to tell from the code that this global variable is shared across the entire process?",
        "createdAt" : "2019-01-16T20:08:19Z",
        "updatedAt" : "2019-01-17T21:33:30Z",
        "lastEditedBy" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "tags" : [
        ]
      },
      {
        "id" : "888d0393-f10e-469f-8f26-f42964148693",
        "parentId" : "a98f2b41-267a-4e8e-98f0-a068ef5c1fd0",
        "authorId" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "body" : "@joyeecheung done!",
        "createdAt" : "2019-01-17T14:39:24Z",
        "updatedAt" : "2019-01-17T21:33:30Z",
        "lastEditedBy" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6cd4e3e5976ce9edccdb13933028bdc95d43df4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +52,56 @@\nnamespace per_process {\nMutex umask_mutex;\n}   // namespace per_process\n"
  },
  {
    "id" : "c54be306-de35-4012-b108-75e4601fa71e",
    "prId" : 33600,
    "prUrl" : "https://github.com/nodejs/node/pull/33600#pullrequestreview-419891871",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30ac01a3-67ea-404d-abed-e72d28bc74b5",
        "parentId" : null,
        "authorId" : "af965d24-c34b-4c03-8ff1-5a5da6036269",
        "body" : "i'm not entirely sure what this is used for or if it is correct /cc @MayaLekova ",
        "createdAt" : "2020-05-28T05:13:18Z",
        "updatedAt" : "2020-06-06T16:56:11Z",
        "lastEditedBy" : "af965d24-c34b-4c03-8ff1-5a5da6036269",
        "tags" : [
        ]
      },
      {
        "id" : "a31b1cce-9efd-410d-ab99-9fa34e29f1ec",
        "parentId" : "30ac01a3-67ea-404d-abed-e72d28bc74b5",
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "I don't think V8 currently makes use of it. It should be okay for now.",
        "createdAt" : "2020-05-28T07:55:35Z",
        "updatedAt" : "2020-06-06T16:56:11Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      },
      {
        "id" : "02758fd1-2227-4eae-8dc7-2e92e3fd82b4",
        "parentId" : "30ac01a3-67ea-404d-abed-e72d28bc74b5",
        "authorId" : "1d00086a-311e-424a-bea6-feb6914672d8",
        "body" : "It was supposed to help V8 differentiate between different embedder API types to perform type checks for the signature of the function. We've moved away from this design, as v8::Signature already provides the necessary info for the receiver and we have the checks implemented in TurboFan, so there's no need to introduce an additional burden for the embedder to provide the type information twice.\r\nIn short, the current implementation you added is perfectly valid.",
        "createdAt" : "2020-05-28T08:34:01Z",
        "updatedAt" : "2020-06-06T16:56:11Z",
        "lastEditedBy" : "1d00086a-311e-424a-bea6-feb6914672d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8eef83757c263672832687ac7667927a7d0c059",
    "line" : 174,
    "diffHunk" : "@@ -1,1 +551,555 @@class WrapperTraits<node::FastHrtime> {\n public:\n  static const void* GetTypeInfo() {\n    static const int tag = 0;\n    return reinterpret_cast<const void*>(&tag);"
  },
  {
    "id" : "89b8da5b-06d7-4dc1-b02c-296735f6f17e",
    "prId" : 33600,
    "prUrl" : "https://github.com/nodejs/node/pull/33600#pullrequestreview-420287494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e14dca5-0858-45ee-9203-181ce44a9722",
        "parentId" : null,
        "authorId" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "body" : "Might be able to make this a bit nicer using the `AliasedStruct` utility",
        "createdAt" : "2020-05-28T15:54:57Z",
        "updatedAt" : "2020-06-06T16:56:11Z",
        "lastEditedBy" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "tags" : [
        ]
      },
      {
        "id" : "513489c5-df52-4610-abfd-da1689432087",
        "parentId" : "8e14dca5-0858-45ee-9203-181ce44a9722",
        "authorId" : "af965d24-c34b-4c03-8ff1-5a5da6036269",
        "body" : "I'm not sure, we're really just looking at the raw view. AliasedStruct is more about representing a single `T` using an ArrayBuffer right?",
        "createdAt" : "2020-05-28T16:07:11Z",
        "updatedAt" : "2020-06-06T16:56:11Z",
        "lastEditedBy" : "af965d24-c34b-4c03-8ff1-5a5da6036269",
        "tags" : [
        ]
      },
      {
        "id" : "83b16a89-0f02-416f-985f-e4c7577f98aa",
        "parentId" : "8e14dca5-0858-45ee-9203-181ce44a9722",
        "authorId" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "body" : "Yep. Feel free to ignore this if it's not useful ;-) ... absolutely love that you're working on this",
        "createdAt" : "2020-05-28T16:27:57Z",
        "updatedAt" : "2020-06-06T16:56:11Z",
        "lastEditedBy" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8eef83757c263672832687ac7667927a7d0c059",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +483,487 @@    fields[0] = (t / NANOS_PER_SEC) >> 32;\n    fields[1] = (t / NANOS_PER_SEC) & 0xffffffff;\n    fields[2] = t % NANOS_PER_SEC;\n  }\n"
  }
]