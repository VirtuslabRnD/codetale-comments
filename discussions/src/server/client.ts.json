[
  {
    "id" : "523610ef-7d79-4fed-942a-c2d6bf24a340",
    "prId" : 16307,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/16307#pullrequestreview-42473607",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89cf7484-f21f-4afe-aed7-a7c4046611cd",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Assuming that `textChanges` is never empty, is this just for the convenience of not having to dig into the first one?",
        "createdAt" : "2017-06-06T22:36:15Z",
        "updatedAt" : "2017-06-07T00:43:39Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "90aad38d-62df-473d-a6a4-3bd442d7e863",
        "parentId" : "89cf7484-f21f-4afe-aed7-a7c4046611cd",
        "authorId" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "body" : "I don't understand the question",
        "createdAt" : "2017-06-06T23:03:32Z",
        "updatedAt" : "2017-06-07T00:43:39Z",
        "lastEditedBy" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "tags" : [
        ]
      },
      {
        "id" : "aa96cdaa-ba94-447b-b0bd-2740846edddc",
        "parentId" : "89cf7484-f21f-4afe-aed7-a7c4046611cd",
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Why return the filename separately?",
        "createdAt" : "2017-06-06T23:10:34Z",
        "updatedAt" : "2017-06-07T00:43:39Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "387b0a21-df52-475e-8dd1-163c6dbdb2be",
        "parentId" : "89cf7484-f21f-4afe-aed7-a7c4046611cd",
        "authorId" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "body" : "The end result here is an array that looks like this (field names not exact):\r\n```\r\n[\r\n  { filename: \"foo.ts\",\r\n    changes: [ { pos: 10, len: 5, newText \"bar\" },\r\n                     { pos: 17, len: 2, newText \"baz\" }\r\n  },\r\n  { filename: \"bar.ts\",\r\n    changes: [ { pos: 20, len: 2, newText \"qar\" },\r\n                     { pos: 27, len: 6, newText \"qaz\" }\r\n  }\r\n]\r\n```\r\n`convertTextChangeToCodeEdit` needs `filename` to do pos <-> line/col mapping, not to put it in the resulting object",
        "createdAt" : "2017-06-06T23:44:29Z",
        "updatedAt" : "2017-06-07T00:43:39Z",
        "lastEditedBy" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "tags" : [
        ]
      }
    ],
    "commit" : "f725d7de5f1709352ee712494b25ca5ec071ff41",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +759,763 @@                const fileName = edit.fileName;\n                return {\n                    fileName,\n                    textChanges: edit.textChanges.map(t => this.convertTextChangeToCodeEdit(t, fileName))\n                };"
  },
  {
    "id" : "8e77b51f-79ae-467c-841b-4b65452512ea",
    "prId" : 2682,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49388696-304a-41e4-92f9-f54c4de4b91b",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Awesome. Should we even expose occurrences on the server end if we're deprecating it?\n",
        "createdAt" : "2015-04-09T06:13:10Z",
        "updatedAt" : "2015-04-09T22:11:31Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "1076b5ff-a666-4dd2-a4a0-03c935a8e233",
        "parentId" : "49388696-304a-41e4-92f9-f54c4de4b91b",
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "I doubt it.\n",
        "createdAt" : "2015-04-09T06:19:38Z",
        "updatedAt" : "2015-04-09T22:11:31Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc512b284bf5f4104aa2b90a433115502e8eaeea",
    "line" : null,
    "diffHunk" : "@@ -1,1 +490,494 @@\n        getDocumentHighlights(fileName: string, position: number): DocumentHighlights[] {\n            throw new Error(\"Not Implemented Yet.\");\n        }\n"
  },
  {
    "id" : "bcb7a1ae-963d-4092-8bea-ae48f8e7888a",
    "prId" : 2111,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff0add36-835e-48fb-b6bc-c7087cb07297",
        "parentId" : null,
        "authorId" : "1b34783f-ccca-4b94-9373-cb3f0e0d8028",
        "body" : "Do we have to do this now for every language service API change we make?\n",
        "createdAt" : "2015-02-23T22:32:43Z",
        "updatedAt" : "2015-02-23T23:41:55Z",
        "lastEditedBy" : "1b34783f-ccca-4b94-9373-cb3f0e0d8028",
        "tags" : [
        ]
      }
    ],
    "commit" : "f90f8e80615fe301bb7cd0de784f53b86a205243",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +230,234 @@                    kindModifiers: entry.kindModifiers,\n                    matchKind: entry.matchKind,\n                    isCaseSensitive: entry.isCaseSensitive,\n                    fileName: fileName,\n                    textSpan: ts.createTextSpanFromBounds(start, end)"
  },
  {
    "id" : "fa08c9e8-1556-43f3-97fc-52514a96fef7",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a954cc67-a1fd-46ba-9a70-0d1f5eefe884",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "Why do we need this information on top of what CompletionInfo provides?\n",
        "createdAt" : "2015-02-16T22:15:17Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +7,11 @@    }\n\n    interface CompletionEntry extends CompletionInfo {\n        fileName: string;\n        position: number;"
  },
  {
    "id" : "4db04089-1460-42d8-9623-05f2b12f761f",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a27937c2-2636-4997-8389-7ac88d816eb3",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "what is a message?  How is it different from the logger API we use?\n",
        "createdAt" : "2015-02-16T22:15:33Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +4,8 @@\n    export interface SessionClientHost extends LanguageServiceHost {\n        writeMessage(message: string): void;\n    }\n"
  },
  {
    "id" : "be9f7cc4-0cdb-42a1-9a05-a86f5a5c0e88",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f7292cc-3681-4d51-9f50-439f0e2661f6",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "This worries me.  Getting the locations up front means this is far costlier.  That can lead users down a pit of fail.  \n",
        "createdAt" : "2015-02-16T22:16:18Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@    }\n\n    interface RenameEntry extends RenameInfo {\n        fileName: string;\n        position: number;"
  },
  {
    "id" : "371e5e11-2723-466b-834e-faf71fe893e0",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20d8f723-08ed-433c-9b0c-981e255a60a6",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "Why is this information passed back in the entry API?  this is infrmation the client should be sending into the API when calling it.\n",
        "createdAt" : "2015-02-16T22:16:42Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +16,20 @@        position: number;\n        locations: RenameLocation[];\n        findInStrings: boolean;\n        findInComments: boolean;\n    }"
  },
  {
    "id" : "6c2e855a-9528-4795-8308-aee5a509ed9f",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cc3b8de-a71c-45a7-8490-ac775d751100",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "Our APIs should not use abbreviations.  col should be column.  (but really, it should just be character).\n",
        "createdAt" : "2015-02-16T22:18:22Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +48,52 @@\n        private lineColToPosition(fileName: string, lineCol: protocol.Location): number {\n            return ts.computePositionFromLineAndCharacter(this.getLineMap(fileName), lineCol.line, lineCol.col);\n        }\n"
  },
  {
    "id" : "5cf2ea07-1b8b-433a-99e7-3177b32c8389",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "706ce7e8-f362-47ec-b332-d2a0a278390d",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "we should not be using abbreviations.\n",
        "createdAt" : "2015-02-16T22:21:08Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +71,75 @@        private processRequest<T extends protocol.Request>(command: string, arguments?: any): T {\n            var request: protocol.Request = {\n                seq: this.sequence++,\n                type: \"request\",\n                command: command,"
  },
  {
    "id" : "fcf70008-f4b8-4b88-bf61-65f4ba3817a8",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f72a4e9b-140a-4290-80e1-fbe0b1e110aa",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "Why are we decomposing http headers here?  Why not just use a real http library for this?\n",
        "createdAt" : "2015-02-16T22:21:43Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +87,91 @@\n            // Read the content length\n            var contentLengthPrefix = \"Content-Length: \";\n            var lines = lastMessage.split(\"\\r\\n\");\n            Debug.assert(lines.length >= 2, \"Malformed response: Expected 3 lines in the response.\");"
  },
  {
    "id" : "93568dff-726f-4d0a-8c27-44b536d40715",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e126f67-ff0a-43fb-9d53-88c55cdb8d02",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "These should not be asserts.  These should be actual exceptions we throw.  Asserts are for checking invariants of code we own (and they might get erased not in debug).  Exceptions are for actual validation of how we are called and used by code out of our control.\n",
        "createdAt" : "2015-02-16T22:22:37Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +92,96 @@\n            var contentLengthText = lines[0];\n            Debug.assert(contentLengthText.indexOf(contentLengthPrefix) === 0, \"Malformed response: Response text did not contain content-length header.\");\n            var contentLength = parseInt(contentLengthText.substring(contentLengthPrefix.length));\n"
  },
  {
    "id" : "1b38ef50-ffbd-43b3-a6d9-4580af70303a",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4dc9d7c0-a5fb-4787-b0c5-441ea0995ea3",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "Command names should bind much more tightly to our actual operations.  'open' and 'close' are very vague.  They should be OpenFile and CloseFile.\n",
        "createdAt" : "2015-02-16T22:23:14Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +123,127 @@        openFile(fileName: string): void {\n            var args: protocol.FileRequestArgs = { file: fileName };\n            this.processRequest(CommandNames.Open, args);\n        }\n"
  },
  {
    "id" : "a4cfcbf9-fb39-4720-9d3e-6aa31b44d659",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d0fd21f-ded6-4fe5-8814-49c571fa2da9",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "file shoudl be fileName.\n",
        "createdAt" : "2015-02-16T22:24:36Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +153,157 @@            var lineCol = this.positionToOneBasedLineCol(fileName, position);\n            var args: protocol.FileLocationRequestArgs = {\n                file: fileName,\n                line: lineCol.line,\n                col: lineCol.col"
  },
  {
    "id" : "22aad953-7c58-4a45-b726-9fa3757fe793",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e1c81cc-57e8-4b9c-b632-8d56d73f7f71",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "col should be character.\n",
        "createdAt" : "2015-02-16T22:24:43Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +155,159 @@                file: fileName,\n                line: lineCol.line,\n                col: lineCol.col\n            };\n"
  },
  {
    "id" : "2670bc88-3331-4075-9bd7-456b529cfbec",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28b59274-bd6a-4061-9400-4e7dc65fe1c2",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "This seems bad.  we're losing all the display parts.  \n",
        "createdAt" : "2015-02-16T22:36:37Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +168,172 @@                kindModifiers: response.body.kindModifiers,\n                textSpan: ts.createTextSpanFromBounds(start, end),\n                displayParts: [{ kind: \"text\", text: response.body.displayString }],\n                documentation: [{ kind: \"text\", text: response.body.documentation }]\n            };"
  },
  {
    "id" : "ce3b13b7-4ae0-4b3b-bf89-08f94f7ab295",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "716c45cd-88e4-4eeb-b850-27a1e8ee6be3",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "what is prefix?\n",
        "createdAt" : "2015-02-16T22:36:49Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +179,183 @@                line: lineCol.line,\n                col: lineCol.col,\n                prefix: undefined\n            };\n"
  },
  {
    "id" : "3711c7f3-9c7f-40bc-a149-bbddc25d5324",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce484158-9538-4710-a31c-b1f9efaecfc9",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "why are we losing this information?\n",
        "createdAt" : "2015-02-16T22:38:58Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 404,
    "diffHunk" : "@@ -1,1 +402,406 @@                spans: item.spans.map(span=> createTextSpanFromBounds(this.lineColToPosition(fileName, span.start), this.lineColToPosition(fileName, span.end))),\n                childItems: this.decodeNavigationBarItems(item.childItems, fileName),\n                indent: 0,\n                bolded: false,\n                grayed: false"
  },
  {
    "id" : "8a31510d-647b-4634-8108-394a43271907",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c9a6983-9ecb-40a5-8765-b8a6fae1b492",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "these entries should use start/length.\n",
        "createdAt" : "2015-02-16T22:39:49Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +456,460 @@            return response.body.map(entry => {\n                var start = this.lineColToPosition(fileName, entry.start);\n                var end = this.lineColToPosition(fileName, entry.end);\n                return {\n                    start: start,"
  },
  {
    "id" : "0cde914b-8f20-4416-855a-0d32cbdd1b08",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a971de82-947a-4483-9f0f-9607bd0c5221",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Remove the annotation.\n",
        "createdAt" : "2015-02-17T02:32:38Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +21,25 @@\n    export class SessionClient implements LanguageService {\n        private sequence: number = 0;\n        private fileMapping: ts.Map<string> = {};\n        private lineMaps: ts.Map<number[]> = {};"
  },
  {
    "id" : "4f73435a-5921-444b-8bba-43b305c4580d",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7deb51c8-7cd8-42d3-91b0-55672fd1228a",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Extra space.\n",
        "createdAt" : "2015-02-17T02:34:03Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +42,46 @@            if (!lineMap) {\n                var scriptSnapshot = this.host.getScriptSnapshot(fileName);\n                lineMap  = this.lineMaps[fileName] = ts.computeLineStarts(scriptSnapshot.getText(0, scriptSnapshot.getLength()));\n            }\n            return lineMap;"
  },
  {
    "id" : "2c9ecfc8-e360-4592-9e2b-3b7d45eba594",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6e91b8f-3e9f-4018-ab3b-1c175484b967",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "details\n",
        "createdAt" : "2015-02-17T20:36:53Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +105,109 @@            }\n            catch (e) {\n                throw new Error(\"Malformed response: Failed to parse server response: \" + lastMessage + \". \\r\\n  Error detailes: \" + e.message);\n            }\n"
  },
  {
    "id" : "7034ec44-067c-4fa2-a904-67fdeeb3120f",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7dd986e-92ed-49ab-b80a-aff6ffc1b473",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "sequence\n",
        "createdAt" : "2015-02-17T20:37:07Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +109,113 @@\n            // verify the sequence numbers\n            Debug.assert(response.request_seq === request.seq, \"Malformed response: response sequance number did not match request sequence number.\");\n            \n            // unmarshal errors"
  },
  {
    "id" : "300e8a95-0338-4875-b422-032ea8dedf81",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7561e48-a8c3-424a-88d5-80b69a5f8840",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Space before `=>`\n",
        "createdAt" : "2015-02-17T20:39:12Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +271,275 @@            var response = this.processResponse<protocol.FormatResponse>(request);\n\n            return response.body.map(entry=> this.convertCodeEditsToTextChange(fileName, entry));\n        }\n"
  },
  {
    "id" : "9df1ba48-9965-45ff-b0b5-f007ada885a1",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4e167e9-795b-4cd6-bf8e-97b7f6fd51d4",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Use `!==` for the above two`\n",
        "createdAt" : "2015-02-17T20:41:36Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 386,
    "diffHunk" : "@@ -1,1 +384,388 @@                this.lastRenameEntry.position !== position ||\n                this.lastRenameEntry.findInStrings != findInStrings ||\n                this.lastRenameEntry.findInComments != findInComments) {\n                this.getRenameInfo(fileName, position, findInStrings, findInComments);\n            }"
  }
]