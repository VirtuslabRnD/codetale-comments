[
  {
    "id" : "ce97eb41-c39a-44eb-a9b3-0b4601614d7d",
    "prId" : 17209,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/17209#pullrequestreview-50682905",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20f28939-6fbd-45d1-ba5b-eea799320bb2",
        "parentId" : null,
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "So these two lines are meaningfully different in behavior - previously anything that saved a reference to `this.references` prior to reassignment kept the old array, but now we mutate rather than reassigning. Is that OK to do here?",
        "createdAt" : "2017-07-18T17:14:55Z",
        "updatedAt" : "2017-07-18T17:15:17Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      },
      {
        "id" : "cbc131d0-8686-42f2-afb9-8411293aaf9f",
        "parentId" : "20f28939-6fbd-45d1-ba5b-eea799320bb2",
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "Looks like that's safe -- `this.references` is owned by the `ModuleBuilderFileInfo` and is only temporarily borrowed elsewhere, but a reference to it isn't stored.",
        "createdAt" : "2017-07-18T17:22:21Z",
        "updatedAt" : "2017-07-18T17:22:21Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f822d548d1234603d9352169f64b4b8f213fb5c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +224,228 @@                reference.removeReferencedBy(this);\n            }\n            clear(this.references);\n        }\n    }"
  },
  {
    "id" : "4e959e3b-787d-450c-8442-48da3e5763b7",
    "prId" : 10615,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "788b8c2a-1b71-4c5e-8110-e6b4cc90afaa",
        "parentId" : null,
        "authorId" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "body" : "make a function `shouldEmitFile`:\n\n``` ts\nfunction shouldEmitFile(scriptInfo: ScriptInfo) {\n    return !scriptInfo.hasMixedContent;\n}\n```\n\nthen you can use it here and in calls to `filter` above?\n",
        "createdAt" : "2016-08-30T22:45:41Z",
        "updatedAt" : "2016-08-31T18:48:50Z",
        "lastEditedBy" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8096369a8b949599eb37d5db47ffd24fe5cea75",
    "line" : null,
    "diffHunk" : "@@ -1,1 +360,364 @@            }\n            const result: string[] = [];\n            for (const fileName in fileNameSet) {\n                if (shouldEmitFile(fileNameSet[fileName])) {\n                    result.push(fileName);"
  },
  {
    "id" : "3e55a774-7465-452d-b0ab-01d937d0f374",
    "prId" : 9837,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7891d60-668c-4f13-be9b-e92bb82d8d3c",
        "parentId" : null,
        "authorId" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "body" : "not sure that I get this part right - now we'll compute the has of text but then later we;ll overwrite it with the hash of last emitted `.d.ts` file. Is this expected behavior?\n",
        "createdAt" : "2016-08-03T21:59:21Z",
        "updatedAt" : "2016-08-23T23:07:30Z",
        "lastEditedBy" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "tags" : [
        ]
      },
      {
        "id" : "ce74f94c-f755-4360-8170-0c2f832ba2c0",
        "parentId" : "d7891d60-668c-4f13-be9b-e92bb82d8d3c",
        "authorId" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "body" : "Oops. The other part should be in `else` block, so only compute hashes of the `.d.ts` files for non-declaration files. \n",
        "createdAt" : "2016-08-03T22:47:21Z",
        "updatedAt" : "2016-08-23T23:07:30Z",
        "lastEditedBy" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4a0a34a049753b0c13a21ad1da192346074b9e6",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +67,71 @@            const lastSignature = this.lastCheckedShapeSignature;\n            if (sourceFile.isDeclarationFile) {\n                this.lastCheckedShapeSignature = this.computeHash(sourceFile.text);\n            }\n            else {"
  },
  {
    "id" : "84517423-c6d0-471b-8768-0e7ace6ddfbf",
    "prId" : 9837,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad62c083-6ba9-4656-83ea-1c95a8df122e",
        "parentId" : null,
        "authorId" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "body" : "are results `getReferencedFileInfos` always ordered?\n",
        "createdAt" : "2016-08-04T18:27:33Z",
        "updatedAt" : "2016-08-23T23:07:30Z",
        "lastEditedBy" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "tags" : [
        ]
      },
      {
        "id" : "9b922480-7214-4861-89de-95ddf7aa0885",
        "parentId" : "ad62c083-6ba9-4656-83ea-1c95a8df122e",
        "authorId" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "body" : "Yes, it is sorted before returning\n",
        "createdAt" : "2016-08-05T23:07:04Z",
        "updatedAt" : "2016-08-23T23:07:30Z",
        "lastEditedBy" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4a0a34a049753b0c13a21ad1da192346074b9e6",
    "line" : null,
    "diffHunk" : "@@ -1,1 +282,286 @@            let oldIndex = 0;\n            let newIndex = 0;\n            while (oldIndex < oldReferences.length && newIndex < newReferences.length) {\n                const oldReference = oldReferences[oldIndex];\n                const newReference = newReferences[newIndex];"
  }
]