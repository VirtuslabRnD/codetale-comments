[
  {
    "id" : "9733c466-ab44-40e5-ad58-6b325001220e",
    "prId" : 11501,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/11501#pullrequestreview-3572723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "715dcdf6-08a5-4015-a783-7a8aa3c9848a",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "can you elaborate on what an `external` project is., and how it works, and the expectations in cases of having multiple tsconfig.json in it, etc..\n",
        "createdAt" : "2016-10-10T20:49:59Z",
        "updatedAt" : "2016-10-10T22:53:22Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "9799cf36-ee06-4336-8954-0307ade000c9",
        "parentId" : "715dcdf6-08a5-4015-a783-7a8aa3c9848a",
        "authorId" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "body" : "✔️ \n",
        "createdAt" : "2016-10-10T20:58:45Z",
        "updatedAt" : "2016-10-10T22:53:22Z",
        "lastEditedBy" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "tags" : [
        ]
      }
    ],
    "commit" : "f936709394c5dc2c2d48456baa9ea43a1d7880f0",
    "line" : 217,
    "diffHunk" : "@@ -1,1 +605,609 @@\n    /**\n     * Represent an external project\n     */\n    export interface ExternalProject {"
  },
  {
    "id" : "e6bf6f8a-f8cc-4d95-8e5e-1fda37c9ee5f",
    "prId" : 11501,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/11501#pullrequestreview-3573346",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5255d3bf-0c45-4152-a5e6-ad652d95418d",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "we should elaborate on what \"InferredProjects\" are, and how they are different from \"external\" projects, and normal projects.\n",
        "createdAt" : "2016-10-10T20:54:11Z",
        "updatedAt" : "2016-10-10T22:53:22Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "f725f8ed-e064-4ba6-a661-4bde138297e2",
        "parentId" : "5255d3bf-0c45-4152-a5e6-ad652d95418d",
        "authorId" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "body" : "✔️ \n",
        "createdAt" : "2016-10-10T21:02:37Z",
        "updatedAt" : "2016-10-10T22:53:22Z",
        "lastEditedBy" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "tags" : [
        ]
      }
    ],
    "commit" : "f936709394c5dc2c2d48456baa9ea43a1d7880f0",
    "line" : 443,
    "diffHunk" : "@@ -1,1 +953,957 @@     * Argument for SetCompilerOptionsForInferredProjectsRequest request.\n     */\n    export interface SetCompilerOptionsForInferredProjectsArgs {\n        /**\n         * Compiler options to be used with inferred projects."
  },
  {
    "id" : "431d1ef0-e6d0-4071-9809-6d0c0fa4050c",
    "prId" : 11501,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/11501#pullrequestreview-3578125",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e2cc8c4-d7ea-4c05-8e2b-47f9b5a34e09",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "I would add a note, that this does not generate any outputs. and a reference to `CompileOnSaveEmitFileRequest` for generation.,\n",
        "createdAt" : "2016-10-10T20:55:33Z",
        "updatedAt" : "2016-10-10T22:53:22Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "100d7e63-1ab7-4594-ab28-917d12a80352",
        "parentId" : "6e2cc8c4-d7ea-4c05-8e2b-47f9b5a34e09",
        "authorId" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "body" : ":heavy_check_mark: \n",
        "createdAt" : "2016-10-10T21:36:26Z",
        "updatedAt" : "2016-10-10T22:53:22Z",
        "lastEditedBy" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "tags" : [
        ]
      }
    ],
    "commit" : "f936709394c5dc2c2d48456baa9ea43a1d7880f0",
    "line" : 459,
    "diffHunk" : "@@ -1,1 +978,982 @@\n    /**\n     * Request to obtain the list of files that should be regenerated if target file is recompiled.\n     * NOTE: this us query-only operation and does not generate any output on disk.\n     */"
  },
  {
    "id" : "d8e3c1c4-83f4-44fc-afb4-fb6be6f8043f",
    "prId" : 11501,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/11501#pullrequestreview-3578155",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd2c95a7-659b-4a02-881f-bdab8836afc7",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "i would make it clear that this actually writes files to disk.\n",
        "createdAt" : "2016-10-10T20:56:13Z",
        "updatedAt" : "2016-10-10T22:53:22Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "7e6e1abf-581a-4eb0-ab25-3131cf157591",
        "parentId" : "dd2c95a7-659b-4a02-881f-bdab8836afc7",
        "authorId" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "body" : ":heavy_check_mark: \n",
        "createdAt" : "2016-10-10T21:36:39Z",
        "updatedAt" : "2016-10-10T22:53:22Z",
        "lastEditedBy" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "tags" : [
        ]
      }
    ],
    "commit" : "f936709394c5dc2c2d48456baa9ea43a1d7880f0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1008,1012 @@     * Request to recompile the file. All generated outputs (.js, .d.ts or .js.map files) is written on disk.\n     */\n    export interface CompileOnSaveEmitFileRequest extends FileRequest {\n        args: CompileOnSaveEmitFileRequestArgs;\n    }"
  },
  {
    "id" : "3fc5cac5-e8d5-4777-a52a-02a1872e3275",
    "prId" : 10482,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c8c1d8d-31a9-4a2d-a4ed-f916e4fa3583",
        "parentId" : null,
        "authorId" : "26699569-4335-45b0-a775-bfd0a044730b",
        "body" : "question: why you make this empty interface?\n",
        "createdAt" : "2016-08-22T22:39:04Z",
        "updatedAt" : "2016-09-15T19:11:16Z",
        "lastEditedBy" : "26699569-4335-45b0-a775-bfd0a044730b",
        "tags" : [
        ]
      },
      {
        "id" : "126f284a-85d9-42c5-b558-79da389ed43f",
        "parentId" : "5c8c1d8d-31a9-4a2d-a4ed-f916e4fa3583",
        "authorId" : "da779ea9-f350-4137-9132-97b9396586db",
        "body" : "I was following what `TypeDefinitionRequest` and `DefinitionRequest` did (see above). \n",
        "createdAt" : "2016-08-22T23:57:57Z",
        "updatedAt" : "2016-09-15T19:11:16Z",
        "lastEditedBy" : "da779ea9-f350-4137-9132-97b9396586db",
        "tags" : [
        ]
      }
    ],
    "commit" : "29d85cd7be0fbe6960bce124d4c7dfb717c016d6",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +199,203 @@      * implement the symbol found in file at location line, col.\n      */\n    export interface ImplementationRequest extends FileLocationRequest {\n    }\n"
  },
  {
    "id" : "40ecc5fd-44e7-4eaa-a715-e3c1b2842a52",
    "prId" : 10185,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/10185#pullrequestreview-3338482",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d82e5c09-6223-44c6-ad39-e5695a535058",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "`CodeAction []` ?\n",
        "createdAt" : "2016-10-07T00:14:53Z",
        "updatedAt" : "2016-10-12T00:35:40Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "9cf1de2c-017e-4384-8225-8c062b01ea11",
        "parentId" : "d82e5c09-6223-44c6-ad39-e5695a535058",
        "authorId" : "e6f79360-cd8f-4784-930e-45d1129a1eae",
        "body" : "yep\n",
        "createdAt" : "2016-10-07T16:53:59Z",
        "updatedAt" : "2016-10-12T00:35:40Z",
        "lastEditedBy" : "e6f79360-cd8f-4784-930e-45d1129a1eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b98d00155674ff746143357b226d762bcacc33a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1195,1199 @@        description: string;\n        /** Text changes to apply to each file as part of the code action */\n        changes: FileCodeEdits[];\n    }\n"
  },
  {
    "id" : "249d19b4-a6b3-47df-aa42-83ca6d0a8d99",
    "prId" : 9148,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd376d6f-9736-4db4-a9e4-cb6cdab2fb88",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "`undefined` otherwise?\n",
        "createdAt" : "2016-06-13T23:55:32Z",
        "updatedAt" : "2016-06-14T17:27:40Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "1b9ebd71-6c1f-457a-a633-2e5b23b68fd8",
        "parentId" : "dd376d6f-9736-4db4-a9e4-cb6cdab2fb88",
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "sorry looking at the code below, it is always set, so why make it optional?\n",
        "createdAt" : "2016-06-13T23:56:36Z",
        "updatedAt" : "2016-06-14T17:27:40Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "0843cfad-e4d3-4f3c-81dc-a3622ac25e7e",
        "parentId" : "dd376d6f-9736-4db4-a9e4-cb6cdab2fb88",
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "I thought it was necessary for API additions. I'll make it required if that's not the case.\n",
        "createdAt" : "2016-06-14T15:23:13Z",
        "updatedAt" : "2016-06-14T17:27:40Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "102a890214f21ef56fa5325cf8eb859beef743ae",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +307,311 @@\n        /**\n         * True if reference is a definition, false otherwise.\n         */\n        isDefinition: boolean;"
  },
  {
    "id" : "6c5e3c4b-346c-4116-9cc7-e62930982e59",
    "prId" : 5593,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "728f5039-2db7-4e00-a50c-62c52ee852b2",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "please add comment on how this is expected to work. and when the user should send it.\n",
        "createdAt" : "2015-11-11T22:25:38Z",
        "updatedAt" : "2015-11-12T19:42:30Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe9d73eb5bc08e752793f143c31c713c93ef85d0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +518,522 @@         * Then the known content will be used upon opening instead of the disk copy   \n         */\n        fileContent?: string;\n    }\n"
  },
  {
    "id" : "0510e01a-4284-4f40-a2e0-91dd2ac7462c",
    "prId" : 3307,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11525429-6b35-43be-bd2d-ff6f360c4f14",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Should this be a `ProjectInfoResponse`?\n",
        "createdAt" : "2015-05-30T00:42:37Z",
        "updatedAt" : "2015-06-02T22:26:33Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "f51b42f8-f3c0-437e-a42d-66127954b7e0",
        "parentId" : "11525429-6b35-43be-bd2d-ff6f360c4f14",
        "authorId" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "body" : "That sounds like a more appropriate name. \n",
        "createdAt" : "2015-05-30T00:50:49Z",
        "updatedAt" : "2015-06-02T22:26:33Z",
        "lastEditedBy" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7550dbba170ee1e1fcda83354c593526cfad223",
    "line" : null,
    "diffHunk" : "@@ -1,1 +108,112 @@      * Response message body for \"projectInfo\" request\n      */\n    export interface ProjectInfo {\n        /**\n          * For configured project, this is the normalized path of the 'tsconfig.json' file"
  },
  {
    "id" : "b8124148-6606-410a-8bce-a2f9cd2556de",
    "prId" : 3307,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6583e2ac-fdae-4c02-9c34-89c5d6b64754",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "What is the scenario where you only want the config file?\n",
        "createdAt" : "2015-06-01T22:10:46Z",
        "updatedAt" : "2015-06-02T22:26:33Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "30ae18b1-a671-4894-85b4-4610d7c4af6d",
        "parentId" : "6583e2ac-fdae-4c02-9c34-89c5d6b64754",
        "authorId" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "body" : "When I try to build, I only need to know if the current project is a configured project or inferred one; and for configured project, I only need to know the path of the config file. Therefore the file list is not needed.\n",
        "createdAt" : "2015-06-01T22:24:50Z",
        "updatedAt" : "2015-06-02T22:26:33Z",
        "lastEditedBy" : "369b80dc-e364-41b0-b447-7b9bba064064",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7550dbba170ee1e1fcda83354c593526cfad223",
    "line" : null,
    "diffHunk" : "@@ -1,1 +95,99 @@          * Indicate if the file name list of the project is needed\n          */\n        needFileNameList: boolean;\n    }\n"
  },
  {
    "id" : "31b482e0-d908-4ea3-b41a-231ba3c5a353",
    "prId" : 3307,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3b0acd8-d624-4e13-ab8a-15da04edb1d1",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "comment this interface.\n",
        "createdAt" : "2015-06-02T17:56:14Z",
        "updatedAt" : "2015-06-02T22:26:33Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7550dbba170ee1e1fcda83354c593526cfad223",
    "line" : null,
    "diffHunk" : "@@ -1,1 +123,127 @@      * Response message for \"projectInfo\" request\n      */\n    export interface ProjectInfoResponse extends Response {\n        body?: ProjectInfo;\n    }"
  },
  {
    "id" : "8608edd7-478f-4a64-b4fd-0a5736167ec1",
    "prId" : 3307,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb5522a5-98eb-4ccc-b768-5f411afa3559",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "this comment is out-dated\n",
        "createdAt" : "2015-06-02T17:56:26Z",
        "updatedAt" : "2015-06-02T22:26:33Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7550dbba170ee1e1fcda83354c593526cfad223",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +105,109 @@    }\n\n    /** \n      * Response message body for \"projectInfo\" request\n      */"
  },
  {
    "id" : "1ec6334a-8511-4d80-b750-ca0ba9e5330e",
    "prId" : 2571,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e593be1-2c15-4f1a-9ba0-c6b764fff77e",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Move asterisks back a space for consistency\n",
        "createdAt" : "2015-04-01T01:58:14Z",
        "updatedAt" : "2015-04-02T22:14:47Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ecfafd32bc8094140cf229b67971e2ba20c08b7",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +631,635 @@        /**\n          * The symbol's name.\n          */\n        name: string;\n        /**"
  },
  {
    "id" : "805a7965-faa2-4a5f-a76c-ae1cee7e8df4",
    "prId" : 2376,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "891ccc31-a7c3-4dc3-8eb7-b749e805f86a",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "what about NewLineCharacter, and ConvertTabsToSpaces, why are not they included here?\n",
        "createdAt" : "2015-03-17T03:40:58Z",
        "updatedAt" : "2015-03-17T03:40:58Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c60cf96dd8a76fd0e8302b2213b174fd7805e94",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +305,309 @@    export interface ConfigureRequestArguments {\n        /** Number of spaces for each tab */\n        tabSize: number;\n        /** Number of spaces to indent during formatting */\n        indentSize: number;"
  },
  {
    "id" : "73d89a98-b774-43c1-b462-db9f8ebfa7b2",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27ffbb05-40a6-415a-aa22-066ff4418530",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "sequenceNumber.\n",
        "createdAt" : "2015-02-16T22:47:10Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +10,14 @@          * Sequence number of the message \n          */\n        seq: number;\n\n        /**"
  },
  {
    "id" : "05ba172c-bb14-4edf-9ca6-185a62a50447",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "972ffc33-dc70-4017-a557-ebcd3894021a",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "What is 'event' used for?  Why does hte message need this type?  Isn't it clear based on what direction we're sending things?\n",
        "createdAt" : "2015-02-16T22:47:38Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@          * One of \"request\", \"response\", or \"event\" \n          */\n        type: string;\n    }\n    "
  },
  {
    "id" : "2dfce8fc-763a-4434-9579-03b679624ad4",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2080d2b6-7ce6-44a5-a901-3045881d5b1a",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "Need a way to represent canceled.\n",
        "createdAt" : "2015-02-16T22:48:09Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +51,55 @@      * Response by server to client request message.\n      */\n    export interface Response extends Message {\n        /**\n          * Sequence number of the request message."
  },
  {
    "id" : "d5084b07-418a-4b2d-9e66-460d2095451b",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27fcdd82-f295-494d-a196-94f6b1320dc1",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "Why not do it like how we do the shim layer.  Always just have a body, but hte body can have \"error\", \"canceled\" or \"result\"?\n",
        "createdAt" : "2015-02-16T22:48:46Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +70,74 @@          * Contains error message if success == false. \n          */\n        message?: string;\n\n        /**"
  },
  {
    "id" : "74112f0c-3744-4f72-9c51-e75ea472c70e",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "935a7df6-fa28-4ac3-a852-f4cc7cae9def",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "Our APIs should not be one-based.  VS, for example, is not one based here (nor are any sane modern APIs :) )\n",
        "createdAt" : "2015-02-16T22:49:20Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +103,107 @@          * The line number for the request (1-based).\n          */\n        line: number;\n\n        /** "
  },
  {
    "id" : "9903f392-93b6-45ec-970b-68ecac167e3b",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6abe287a-4296-47e2-99cc-00fe9f488396",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "Should be start-length\n",
        "createdAt" : "2015-02-16T22:50:27Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +137,141 @@      * Object found in response messages defining a span of text in source code.\n      */\n    export interface TextSpan { \n        /**\n          * First character of the definition."
  },
  {
    "id" : "7a80aac4-6d56-4dcc-bd4a-580e268d973a",
    "prId" : 2041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a62434c0-99db-40cd-aa41-b17bdfe92f04",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "NavigateToItem\n",
        "createdAt" : "2015-02-16T22:51:09Z",
        "updatedAt" : "2015-02-19T20:57:06Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d364f6110e2f43393377c97b474e2dd69d8ae2c5",
    "line" : 695,
    "diffHunk" : "@@ -1,1 +693,697 @@      * An item found in a navto response.\n      */\n    export interface NavtoItem {\n        /**\n          * The symbol's name."
  }
]