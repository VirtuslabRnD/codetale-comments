[
  {
    "id" : "8ee187d4-ae7a-4ca3-9095-ebe4578fb1fe",
    "prId" : 2193,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db112d35-d0a3-4a8c-a9ad-3f86082d4a91",
        "parentId" : null,
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "It could be just me, but defining it outside the loop might improve the readability.\n",
        "createdAt" : "2015-07-16T18:09:09Z",
        "updatedAt" : "2015-07-25T17:13:56Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      },
      {
        "id" : "a3eda5cb-7779-438b-b12e-7768eafeead4",
        "parentId" : "db112d35-d0a3-4a8c-a9ad-3f86082d4a91",
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "Convention in the source tree is to define V-style codegen macros right before use.\n",
        "createdAt" : "2015-07-16T18:56:28Z",
        "updatedAt" : "2015-07-25T17:13:56Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac70bc82404ec60a71e651a9e16dd4910c020b72",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +163,167 @@  size_t k = 0;\n  for (;;) {\n#define V(expr)                                                               \\\n    while (i < srclen) {                                                      \\\n      const uint8_t c = src[i];                                               \\"
  },
  {
    "id" : "ee2e100c-1417-45b3-b0ea-bec11004f805",
    "prId" : 2193,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed42b658-5ffa-49a6-8d12-a286f343125e",
        "parentId" : null,
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "Style nit: Can this be combined with the previous `if`?\n",
        "createdAt" : "2015-07-16T18:10:37Z",
        "updatedAt" : "2015-07-25T17:13:56Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      },
      {
        "id" : "3e24b5bf-0ea8-4205-adeb-05d9064bc29a",
        "parentId" : "ed42b658-5ffa-49a6-8d12-a286f343125e",
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "I wrote it like this because personally, I find separate statements easier to read than boolean combinators.  With the later, it's just easier to mix up the logic.\n",
        "createdAt" : "2015-07-16T19:00:32Z",
        "updatedAt" : "2015-07-25T17:13:56Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac70bc82404ec60a71e651a9e16dd4910c020b72",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +176,180 @@    if (i >= srclen)                                                          \\\n      return k;                                                               \\\n    if (k >= dstlen)                                                          \\\n      return k;                                                               \\\n    hi = lo;"
  },
  {
    "id" : "495362db-edb4-4294-be20-c7fbda302b88",
    "prId" : 2193,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcc222b7-565d-425a-a277-f0bc31936e17",
        "parentId" : null,
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "I may be totally missing something. But to me, it looks like `hi` and `lo` would always be the same and `hi` looks redundant.\n",
        "createdAt" : "2015-07-16T19:01:02Z",
        "updatedAt" : "2015-07-25T17:13:56Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      },
      {
        "id" : "1f01e2c2-ff19-45ac-8823-12da0e1b1c73",
        "parentId" : "dcc222b7-565d-425a-a277-f0bc31936e17",
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "I have to admit the codegen macro kind of obscures it but the `expr;` statement at line 175 is where `hi` is the previous byte and `lo` the current one.  That's also why the first V macro call has no expression, because `hi` is still uninitialized at that point.\n",
        "createdAt" : "2015-07-16T19:08:52Z",
        "updatedAt" : "2015-07-25T17:13:56Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      },
      {
        "id" : "3e534a14-2008-4f48-b99d-c7a438b01293",
        "parentId" : "dcc222b7-565d-425a-a277-f0bc31936e17",
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "Oh yeah. Understood now. Thanks for clarifying :-)\n",
        "createdAt" : "2015-07-16T19:10:25Z",
        "updatedAt" : "2015-07-25T17:13:56Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac70bc82404ec60a71e651a9e16dd4910c020b72",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +178,182 @@    if (k >= dstlen)                                                          \\\n      return k;                                                               \\\n    hi = lo;\n    V(/* Nothing. */);\n    V(dst[k++] = ((hi & 0x3F) << 2) | ((lo & 0x30) >> 4));"
  },
  {
    "id" : "278d9ec4-51c3-4945-bdb1-6865bfe95e31",
    "prId" : 2193,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5dc91226-6d50-468e-ba02-848fda6cd924",
        "parentId" : null,
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "Hope we are doing the integer floor operation in these two statements.\n",
        "createdAt" : "2015-07-16T19:07:48Z",
        "updatedAt" : "2015-07-25T17:13:56Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      },
      {
        "id" : "0bc8d8af-e109-4ffe-8f08-329fe06865a2",
        "parentId" : "5dc91226-6d50-468e-ba02-848fda6cd924",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "what do you mean? I can't tell if you're making a suggestion or questioning the code.\n",
        "createdAt" : "2015-07-16T21:32:22Z",
        "updatedAt" : "2015-07-25T17:13:56Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac70bc82404ec60a71e651a9e16dd4910c020b72",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +195,199 @@  const size_t available = dstlen < decoded_size ? dstlen : decoded_size;\n  const size_t max_i = srclen / 4 * 4;\n  const size_t max_k = available / 3 * 3;\n  size_t i = 0;\n  size_t k = 0;"
  }
]