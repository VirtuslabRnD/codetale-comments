[
  {
    "id" : "2ed03222-f4c8-42f4-bb7a-880fb7fa65b7",
    "prId" : 1052,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c1b5fe3-c234-4fc0-82ef-24706dda9627",
        "parentId" : null,
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "expects\n",
        "createdAt" : "2016-02-04T17:29:07Z",
        "updatedAt" : "2016-02-04T23:00:57Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "7eba7f7a6778cc0ddfb2ce81dee64dd4fa23490a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +70,74 @@   *  This overload is provided for compatibility reasons: the\n   *  `RawCompiler` of sbt expects this method to exist and calls\n   *  it using reflection. Keeping it means that we can change\n   *  the other overloads without worrying about breaking compatibility\n   *  with sbt."
  },
  {
    "id" : "fb87f44d-6c1b-4c63-b08e-a56ff3abe902",
    "prId" : 1052,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a47b1178-ec74-48ca-8af1-e2f0a7c5fea5",
        "parentId" : null,
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "Do we need the default arguments here? Or do the overloaded variants of `process` cover all the use cases already?\n",
        "createdAt" : "2016-02-04T17:33:40Z",
        "updatedAt" : "2016-02-04T23:00:57Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "270fc3f2-c7b2-48c9-a10e-efb6abe90e21",
        "parentId" : "a47b1178-ec74-48ca-8af1-e2f0a7c5fea5",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "I think so, yes, I don't want to add even more overloads like:\n\n``` scala\ndef process(args: Array[String], reporter: Reporter)\ndef process(args: Array[String], callback: CompilerCallback)\n```\n",
        "createdAt" : "2016-02-04T18:09:33Z",
        "updatedAt" : "2016-02-04T23:00:57Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "c09475c7-6ccb-4f1d-9380-e055da6c73bd",
        "parentId" : "a47b1178-ec74-48ca-8af1-e2f0a7c5fea5",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "OK, fair enough.\n\nOn Thu, Feb 4, 2016 at 7:09 PM, Guillaume Martres notifications@github.com\nwrote:\n\n> In src/dotty/tools/dotc/Driver.scala\n> https://github.com/lampepfl/dotty/pull/1052#discussion_r51912246:\n> \n> > -    process(args, initCtx.setCompilerCallback(callback))\n> > -  /*\\* Principal entry point to the compiler.\n> > -   \\*  Creates a new compiler instance and run it with arguments `args`.\n> > -   *\n> > -   \\*  The optional arguments of this method all have `null` as their default\n> > -   \\*  value, this makes it easier to call this method by reflection or from Java.\n> > -   *\n> > -   \\*  @param args       Arguments to pass to the compiler.\n> > -   \\*  @param reporter   Used to log errors, warnings, and info messages.\n> > -   \\*                    The default reporter is used if this is `null`.\n> > -   \\*  @param callback   Used to execute custom code during the compilation\n> > -   \\*                    process. No callbacks will be executed if this is `null`.\n> > -   \\*  @return           The `Reporter` used. Use `Reporter#hasErrors` to check\n> > -   \\*                    if compilation succeeded.\n> > -   */\n> > -  final def process(args: Array[String], reporter: Reporter = null,\n> \n> I think so, yes, I don't want to add even more overloads like:\n> \n> def process(args: Array[String], reporter: Reporter)def process(args: Array[String], callback: CompilerCallback)\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/lampepfl/dotty/pull/1052/files#r51912246.\n\n## \n\nMartin Odersky\nEPFL\n",
        "createdAt" : "2016-02-04T19:41:11Z",
        "updatedAt" : "2016-02-04T23:00:57Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "7eba7f7a6778cc0ddfb2ce81dee64dd4fa23490a",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +56,60 @@   *                    if compilation succeeded.\n   */\n  final def process(args: Array[String], reporter: Reporter = null,\n    callback: CompilerCallback = null): Reporter = {\n    val ctx = initCtx.fresh"
  }
]