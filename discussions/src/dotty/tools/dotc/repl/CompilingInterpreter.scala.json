[
  {
    "id" : "426834ea-8915-4e48-8562-e684ff54b2af",
    "prId" : 1436,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a4168de-492b-46ec-86c1-19888b5cb47c",
        "parentId" : null,
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "I find there are too many levels of escaping to be able to understand it. Can we try to put everything between one pair of \"\"\"s and use only interpolation inside? That should also obviate the need for `if_`.\n",
        "createdAt" : "2016-08-01T15:13:28Z",
        "updatedAt" : "2016-08-03T15:06:12Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "17ba94221e4e120c1442b5611f8f339c0f642c65",
    "line" : null,
    "diffHunk" : "@@ -1,1 +688,692 @@           |  }\n           |}\"\"\".stripMargin\n      }\n\n      protected def _boundNames: List[Name]"
  },
  {
    "id" : "12ec417b-9f08-4d1a-811b-661e05d3115f",
    "prId" : 1314,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6891d00-b787-4471-8622-eab7226c99db",
        "parentId" : null,
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "why `Interpreter` instead of `CompilingInterpreter`?\n",
        "createdAt" : "2016-06-12T15:54:40Z",
        "updatedAt" : "2016-06-12T15:54:40Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      },
      {
        "id" : "7e43aa8b-8213-432c-b16a-7ff06d7aeaf6",
        "parentId" : "c6891d00-b787-4471-8622-eab7226c99db",
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "Good question - I think this was originally written by @odersky \n",
        "createdAt" : "2016-06-12T16:03:42Z",
        "updatedAt" : "2016-06-12T16:03:42Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      }
    ],
    "commit" : "42030aad5ad62296286f2d1ec785377ba550cb89",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +157,161 @@  val classLoader: ClassLoader = {\n    lazy val parent = new URLClassLoader(compilerClasspath.toArray,\n                                         classOf[Interpreter].getClassLoader)\n\n    new AbstractFileClassLoader(virtualDirectory, parentClassLoader.getOrElse(parent))"
  },
  {
    "id" : "1cf4f711-e753-43f6-8bf6-d4d294ed65f4",
    "prId" : 1082,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e5f8a81-38a5-478c-a391-e3b3e2537780",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Instead of using a custom phase, couldn't we just make sure that the `Context` instance we use in the compiler is set up so that `settings.d.value` is set to `virtualDirectory` ?\n",
        "createdAt" : "2016-02-14T20:55:35Z",
        "updatedAt" : "2016-02-17T17:41:50Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "817fe291-1738-4f7a-b3f8-3fc85d5c6590",
        "parentId" : "4e5f8a81-38a5-478c-a391-e3b3e2537780",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "No, because virtualDirectory does not have a name, so it cannot be used in the -d option.\n",
        "createdAt" : "2016-02-15T19:49:07Z",
        "updatedAt" : "2016-02-17T17:41:50Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f96f4a20fa53a74d9c49d06d2ef49bdff4dfcbca",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +68,72 @@  /** A GenBCode phase that uses `virtualDirectory` for its output */\n  private class REPLGenBCode extends GenBCode {\n    override def outputDir(implicit ctx: Context) = virtualDirectory\n  }\n"
  },
  {
    "id" : "3e5c19b1-42bc-40aa-b0cf-78069acbba37",
    "prId" : 1082,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ebf3a51b-925a-472e-a7a5-e8f72a37c5d5",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "I don't really understand this comment, what interface? What transformations?\n",
        "createdAt" : "2016-02-14T21:24:43Z",
        "updatedAt" : "2016-02-17T17:41:50Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "f96f4a20fa53a74d9c49d06d2ef49bdff4dfcbca",
    "line" : 314,
    "diffHunk" : "@@ -1,1 +312,316 @@\n    /** Dig the types of all bound variables out of the compiler run.\n     *  TODO: Change the interface so that we typecheck, and then transform\n     *  directly. Treating the compiler as less of a blackbox will require\n     *  much less magic here."
  }
]