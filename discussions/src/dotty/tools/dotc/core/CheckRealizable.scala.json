[
  {
    "id" : "27035454-a7be-44cd-b7fd-e96147d815c7",
    "prId" : 1051,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40f6b502-47bc-498b-a49d-f6c4590b4437",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "This method is never used.\n",
        "createdAt" : "2016-02-08T20:24:37Z",
        "updatedAt" : "2016-02-09T10:16:41Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "1511cb49b990e14bd085a26bbcaa77cd827f151b",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +66,70 @@  /** Is this type a path with some part that is initialized on use?\n   */\n  private def isLateInitialized(tp: Type): Boolean = tp.dealias match {\n    case tp: TermRef =>\n      isLateInitialized(tp.symbol) || isLateInitialized(tp.prefix)"
  },
  {
    "id" : "92a0685d-0ae6-4b6d-8465-7d7b55c815b1",
    "prId" : 1051,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a696689-e8d1-43c9-a053-4358932d6014",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "I think the first `tp` should not be there: \"Realizable if all of ...\"\n",
        "createdAt" : "2016-02-08T20:31:05Z",
        "updatedAt" : "2016-02-09T10:16:41Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "1511cb49b990e14bd085a26bbcaa77cd827f151b",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +122,126 @@  }\n\n  /** `Realizable` if `tp` all of `tp`'s non-struct fields have realizable types,\n   *  a `HasProblemField` instance pointing to a bad field otherwise.\n   */"
  },
  {
    "id" : "caf35807-7a3b-4fe4-9687-4ced886ce827",
    "prId" : 1051,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b90afc6-5336-48c9-814a-402aa1a79de6",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Why do you bypass the realizability checks if a field is private or mutable or lazy?\n",
        "createdAt" : "2016-02-08T20:36:00Z",
        "updatedAt" : "2016-02-09T10:16:41Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "1511cb49b990e14bd085a26bbcaa77cd827f151b",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +128,132 @@    def checkField(sofar: Realizability, fld: SingleDenotation): Realizability =\n      sofar andAlso {\n        if (checkedFields.contains(fld.symbol) || fld.symbol.is(Private | Mutable | Lazy))\n          Realizable\n        else {"
  }
]