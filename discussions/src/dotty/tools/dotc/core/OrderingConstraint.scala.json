[
  {
    "id" : "4626b4a1-a937-4cc1-9cb8-6f4b999a0ecb",
    "prId" : 678,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "750c5430-e1d7-4945-acab-f116315f2834",
        "parentId" : null,
        "authorId" : "1f1241a4-206b-4204-be44-be9e433da151",
        "body" : "We use `s.c.r.internal.util.Collections#mforeach` and friends to cleanup code dealing with nested lists.\n",
        "createdAt" : "2015-06-23T02:19:48Z",
        "updatedAt" : "2015-06-23T08:42:41Z",
        "lastEditedBy" : "1f1241a4-206b-4204-be44-be9e433da151",
        "tags" : [
        ]
      },
      {
        "id" : "9eeb233f-b392-42cc-b27d-ba55fd5a9ff3",
        "parentId" : "750c5430-e1d7-4945-acab-f116315f2834",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "Does that also work for mixed Array/List code like here?\n",
        "createdAt" : "2015-06-23T08:36:11Z",
        "updatedAt" : "2015-06-23T08:42:41Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "cf369caa-a50b-4340-b3be-e85896f1dba3",
        "parentId" : "750c5430-e1d7-4945-acab-f116315f2834",
        "authorId" : "1f1241a4-206b-4204-be44-be9e433da151",
        "body" : "Nope, it is specialized to `List[List[_]]`.\n",
        "createdAt" : "2015-06-23T08:48:59Z",
        "updatedAt" : "2015-06-23T08:48:59Z",
        "lastEditedBy" : "1f1241a4-206b-4204-be44-be9e433da151",
        "tags" : [
        ]
      }
    ],
    "commit" : "d973e5d15e51aa8a74f4b1141eef6c4064509dd3",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +511,515 @@    boundsMap.foreachBinding((_, tps) => tps.foreach(checkClosedType(_, \"bounds\")))\n    lowerMap.foreachBinding((_, paramss) => paramss.foreach(_.foreach(checkClosedType(_, \"lower\"))))\n    upperMap.foreachBinding((_, paramss) => paramss.foreach(_.foreach(checkClosedType(_, \"upper\"))))\n  }\n"
  },
  {
    "id" : "b219cc41-bbcb-48c4-9d58-08c1460ab13c",
    "prId" : 331,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86601b94-591e-46e4-a24a-1e6e67cb2be1",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "This function would be easier to understand if its pre- and post-conditions were documented\n",
        "createdAt" : "2015-01-24T22:51:06Z",
        "updatedAt" : "2015-01-28T18:04:47Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "d6529df7-17f0-4ac6-b26d-39040ed05a87",
        "parentId" : "86601b94-591e-46e4-a24a-1e6e67cb2be1",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "`add` is commented in Constraint.scala (as are all other public methods of OrderingConstraint).\n",
        "createdAt" : "2015-01-28T17:46:09Z",
        "updatedAt" : "2015-01-28T18:04:47Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "fdb414d2-f362-42be-974c-f65de3a0c79f",
        "parentId" : "86601b94-591e-46e4-a24a-1e6e67cb2be1",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "I was referring to `init` which is not public.\n",
        "createdAt" : "2015-01-28T20:14:50Z",
        "updatedAt" : "2015-01-28T20:14:50Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "70e55d26100199b99502705233786bbdc15c4c6b",
    "line" : 291,
    "diffHunk" : "@@ -1,1 +289,293 @@  }\n    \n  private def init(poly: PolyType)(implicit ctx: Context): This = {\n    var current = this\n    val loBuf, hiBuf = new mutable.ListBuffer[PolyParam]"
  },
  {
    "id" : "c09a8f76-d1ce-4f65-a906-7eadc56bcb9c",
    "prId" : 331,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "453642d7-893f-4882-abc2-1b8220462777",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "This method should be documented too.\n",
        "createdAt" : "2015-01-24T23:29:51Z",
        "updatedAt" : "2015-01-28T18:04:47Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "70e55d26100199b99502705233786bbdc15c4c6b",
    "line" : 440,
    "diffHunk" : "@@ -1,1 +438,442 @@    newConstraint(boundsMap.remove(pt), lowerMap.remove(pt), upperMap.remove(pt))\n\n  def isRemovable(pt: PolyType, removedParam: Int = -1): Boolean = {\n    val entries = boundsMap(pt)\n    var noneLeft = true"
  },
  {
    "id" : "6c157469-9203-47c8-a110-57f59121baf0",
    "prId" : 331,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "838fc3fd-9124-4032-a4d7-53730b419919",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Why use half of an array for something and the other half for something else, instead of just using a map of PolyType to pair of arrays or two maps of PolyType to arrays? This is worth documenting.\n",
        "createdAt" : "2015-01-28T14:16:52Z",
        "updatedAt" : "2015-01-28T18:04:47Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "70e55d26100199b99502705233786bbdc15c4c6b",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +111,115 @@ *               Each array contains twice the number of entries as there a type parameters\n *               in the PolyType. The first half of the array contains the type bounds that constrain the\n *               polytype's type parameters. The second half might contain type variables that\n *               track the corresponding parameters, or is left empty (filled with nulls).\n *               An instantiated type parameter is represented by having its instance type in"
  }
]