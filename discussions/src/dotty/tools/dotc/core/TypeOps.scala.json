[
  {
    "id" : "fe987f8f-e818-4e9b-97df-e655589dbbf3",
    "prId" : 1053,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3935450b-1a78-485f-9ab6-ce19a97ed3b8",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Why not `homogenizedUnion(tp1.refinedInfo, tp2.refinedInfo.substRefinedThis(tp2, RefinedThis(tp1)))` ? This should require less traversals and is closer to what we were doing before https://github.com/lampepfl/dotty/commit/ee76fda79d446a2d6db51cb4af032a8e92936013 \n",
        "createdAt" : "2016-02-05T01:32:34Z",
        "updatedAt" : "2016-02-08T14:26:56Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae09ac296f192d9b2229e2cd92bac4715f77e207",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +306,310 @@                approximateUnion(OrType(tp1.parent, tp2.parent)),\n                tp1.refinedName,\n                homogenizedUnion(tp1.refinedInfo, tp2.refinedInfo).substRefinedThis(tp2, RefinedThis(tp1)))\n                //.ensuring { x => println(i\"approx or $tp1 | $tp2 = $x\\n constr = ${ctx.typerState.constraint}\"); true } // DEBUG\n            case _ =>"
  },
  {
    "id" : "7bf53e6b-c459-4ab7-8b75-cd96878eb0bd",
    "prId" : 599,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb7151ba-8a77-4537-a03c-2246e14d7ee2",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "It'd be helpful to add a comment explaining what this condition is for exactly, and why it causes us to mutate something.\n",
        "createdAt" : "2015-06-05T21:16:50Z",
        "updatedAt" : "2015-06-06T15:44:18Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "310615e717262243aa899959c3178d7465af74a7",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +61,65 @@        tp\n      else if (thiscls.derivesFrom(cls) && pre.baseTypeRef(thiscls).exists) {\n        if (theMap != null && theMap.currentVariance <= 0 && !pre.isStable)\n          theMap.unstable = true\n        pre match {"
  },
  {
    "id" : "06a15480-fc59-4f4c-98f9-3034e9d42452",
    "prId" : 599,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2eec1a4c-ba18-487a-b83a-a0f572b69aad",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "A comment for this condition would be nice too\n",
        "createdAt" : "2015-06-05T21:17:32Z",
        "updatedAt" : "2015-06-06T15:44:18Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "310615e717262243aa899959c3178d7465af74a7",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +82,86 @@            val prevStable = theMap == null || !theMap.unstable\n            val pre1 = asSeenFrom(tp.prefix, pre, cls, theMap)\n            if (theMap != null && theMap.unstable && prevStable) {\n              pre1.member(tp.name).info match {\n                case TypeAlias(alias) =>"
  },
  {
    "id" : "74cff7fd-d1da-4150-bdc8-c1d285b41f23",
    "prId" : 599,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c6a9056-f1b9-46d9-82ae-9b1d10aec569",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "This inner method and its parameters should be documented too.\n",
        "createdAt" : "2015-06-05T21:17:51Z",
        "updatedAt" : "2015-06-06T15:44:18Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "310615e717262243aa899959c3178d7465af74a7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +57,61 @@     *  to be unstable.\n     */\n    def toPrefix(pre: Type, cls: Symbol, thiscls: ClassSymbol): Type = /*>|>*/ ctx.conditionalTraceIndented(TypeOps.track, s\"toPrefix($pre, $cls, $thiscls)\") /*<|<*/ {\n      if ((pre eq NoType) || (pre eq NoPrefix) || (cls is PackageClass))\n        tp"
  },
  {
    "id" : "1ecfb19d-27a5-4c37-b733-f6347cd3d2c4",
    "prId" : 599,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "198eb473-5c39-4d33-b582-8e8ffdef0989",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "The field `unstable` should have a comment explaining what it's for exactly.\n",
        "createdAt" : "2015-06-05T21:18:59Z",
        "updatedAt" : "2015-06-06T15:44:18Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "310615e717262243aa899959c3178d7465af74a7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +121,125 @@     *  or contravariant position was encountered.\n     */\n    var unstable = false\n  }\n"
  }
]