[
  {
    "id" : "e4b42009-d1ff-4c44-82dc-8e64ba68ab4a",
    "prId" : 1621,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/1621#pullrequestreview-5401751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2703655-4226-4dca-8af3-e9d20581ad8e",
        "parentId" : null,
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "To get a good sense of what's going on here for the error message's explanation there are a couple of things you (or the user) need(s) to know:\n1. What are `@usecase`?\n2. Why do we care that we're getting an `untpd.DefDef` here?\n",
        "createdAt" : "2016-10-24T08:12:28Z",
        "updatedAt" : "2016-10-25T16:34:37Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      }
    ],
    "commit" : "97b0af746ac3f2eb2fe7078b5aa5d596439fbfb5",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +127,131 @@              untpd.DefDef(newName, tree.tparams, tree.vparamss, tree.tpt, tree.rhs)\n            case _ =>\n              ctx.error(ProperDefinitionNotFound(), codePos)\n              tree\n          }"
  },
  {
    "id" : "2c294f57-db9e-4a4b-9450-f6061a8ecdd0",
    "prId" : 1502,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/1502#pullrequestreview-316008",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8fcfce8-2130-42db-8023-0a15c7b5e918",
        "parentId" : null,
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "Why put this in core instead of dottydoc? A lot of the logic seems to be doc-specific. Proposal: Keep Comment as a pure data class as it was in Scanners. Implement the new logic as methods external to Comment. Comment contains only defs (the only val in it could as well be a def), so this is easy.\n",
        "createdAt" : "2016-09-16T07:02:49Z",
        "updatedAt" : "2016-10-06T16:26:31Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "a9196653-6781-4f9d-85f6-863b16791ba6",
        "parentId" : "f8fcfce8-2130-42db-8023-0a15c7b5e918",
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "@odersky: I think the basis of this review rests on the thoughts in this comment, as such let me try to address these concerns here in summary.\n\nMy reasons for keeping this in the compiler is for tooling - I think that's the same reason as to why this implementation was in `nsc` and not in Scaladoc for scalac.\n\nWhen we have a presentation compiler - we're going to want expanded (or \"cooked\") comments for the standard library entities. \n\nThe `Comment` in `core` as such - does not deal with things that dottydoc does - like `@group` and other dottydoc specific annotations - it only deals with expansion of definitions and the comment inheritance.\n",
        "createdAt" : "2016-09-16T08:59:31Z",
        "updatedAt" : "2016-10-06T16:26:31Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      }
    ],
    "commit" : "9bcf282243bb3d6464d95a13c3ac9723dea329d8",
    "line" : 458,
    "diffHunk" : "@@ -1,1 +456,460 @@    class ExpansionLimitExceeded(str: String) extends Exception\n  }\n}"
  }
]