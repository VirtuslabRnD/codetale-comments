[
  {
    "id" : "710890ff-88c7-44a7-8aed-4e4fe49f241a",
    "prId" : 1588,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/1588#pullrequestreview-4045554",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8d8ded3-1e86-48ff-a7cd-9b2a63799712",
        "parentId" : null,
        "authorId" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "body" : "My only question is: what happens when the (altered) assertion fails? There can't be bounds-checking, so `assert(length < (1 << (7 * lengthWidth)))` would be good. I assume you're sure this will never happen, and that you're currently right, that's why I propose an assert, which would trigger if `NameBuffer` gets out-of-sync and `lengthWidth` is 1 when it shouldn't. Or simply if somebody forgets to specify `lengthWidth` ðŸ˜‰.\n",
        "createdAt" : "2016-10-13T09:58:21Z",
        "updatedAt" : "2016-10-13T09:59:29Z",
        "lastEditedBy" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "tags" : [
        ]
      },
      {
        "id" : "a2bc30c9-21e7-40b9-b0b4-a091d31a8fe5",
        "parentId" : "a8d8ded3-1e86-48ff-a7cd-9b2a63799712",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "There's already an assertion in NameBuffer that we don't overflow, and which even comes with a comprehensible error message. So we are good.\n",
        "createdAt" : "2016-10-13T10:38:26Z",
        "updatedAt" : "2016-10-13T10:38:26Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "189629f9cf9e24abfc3479d3f067448fe380b965",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +47,51 @@    op\n    val length = currentAddr.index - lengthAddr.index - 1\n    putNat(lengthAddr, length, lengthWidth)\n  }\n"
  }
]