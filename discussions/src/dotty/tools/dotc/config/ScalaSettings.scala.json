[
  {
    "id" : "1047832b-18f4-43ce-850a-c09f77b4090a",
    "prId" : 515,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "524f402f-3feb-40ca-9c00-200220213e45",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Shouldn't it be a -Y option? It's a \"compiler hacker\" option and it's a bit dangerous since toggling it can break an API since it changes method signatures.\n",
        "createdAt" : "2015-05-01T14:34:01Z",
        "updatedAt" : "2015-05-08T12:13:08Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "bcdd81dc-6efc-4f1a-930a-ce9ad01b86c7",
        "parentId" : "524f402f-3feb-40ca-9c00-200220213e45",
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "I would actually be using it during my everyday development and would recommend others, because it simplifies debugging. So I'd not consider it as \"compiler hacker\" option.\nThough I'm fine with it being either `-X` or `-Y`\n",
        "createdAt" : "2015-05-01T14:35:13Z",
        "updatedAt" : "2015-05-08T12:13:08Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0d265a52c34ddfd77f4237d215a085675b25a57",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +89,93 @@  val showPhases = BooleanSetting(\"-Xshow-phases\", \"Print a synopsis of compiler phases.\")\n  val sourceReader = StringSetting(\"-Xsource-reader\", \"classname\", \"Specify a custom method for reading source files.\", \"\")\n  val XnoValueClasses = BooleanSetting(\"-Xno-value-classes\", \"Do not use value classes. Helps debugging.\")\n\n  val XoldPatmat = BooleanSetting(\"-Xoldpatmat\", \"Use the pre-2.10 pattern matcher. Otherwise, the 'virtualizing' pattern matcher is used in 2.10.\")"
  },
  {
    "id" : "183a854d-7cb5-42f9-87de-8d04e0951d12",
    "prId" : 409,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d1d049f-06a4-49aa-bb64-d64f902dfacc",
        "parentId" : null,
        "authorId" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "body" : "Is there a document that describes what Scala code can be used with Dotty without any changes and what requires migration?\n",
        "createdAt" : "2015-03-13T16:59:03Z",
        "updatedAt" : "2015-03-13T16:59:03Z",
        "lastEditedBy" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "tags" : [
        ]
      },
      {
        "id" : "321f79b9-463f-4dda-b06f-19fe1fb2980f",
        "parentId" : "1d1d049f-06a4-49aa-bb64-d64f902dfacc",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "Not yet. I think we should work one having one though.\n",
        "createdAt" : "2015-03-13T17:03:54Z",
        "updatedAt" : "2015-03-13T17:03:54Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a56bc34fb850a6dca40c4f8562f3cb2d5b69dcc7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +40,44 @@  val toolcp = PathSetting(\"-toolcp\", \"Add to the runner classpath.\", \"\")\n  val nobootcp = BooleanSetting(\"-nobootcp\", \"Do not use the boot classpath for the scala jars.\")\n  val strict = BooleanSetting(\"-strict\", \"Use strict type rules, which means some formerly legal code does not typecheck anymore.\")\n\n  val argfiles = BooleanSetting(\"@<file>\", \"A text file containing compiler arguments (options and source files)\")"
  }
]