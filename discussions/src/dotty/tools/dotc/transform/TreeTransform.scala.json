[
  {
    "id" : "6acaed39-5fc2-4159-9548-a100d00cc52c",
    "prId" : 1270,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe10eede-7818-46a7-9481-371b3eca4263",
        "parentId" : null,
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "Why is this change needed?\nAs annotation transformers also change types, isn't every annotation transformer an info-transformer? \n",
        "createdAt" : "2016-05-25T17:19:21Z",
        "updatedAt" : "2016-05-25T21:16:03Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      },
      {
        "id" : "1d77bee9-91a8-4004-a1c6-1630ef51ea7b",
        "parentId" : "fe10eede-7818-46a7-9481-371b3eca4263",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "Currently that's not true, but I see your argument. I.e. if we left out the self type transform from FirstTransform it would not be an InfoTransformer. And that transform is in FirstTransform only by accident, it could well be elsewhere.\n\n_However_ one could argue that every annotation transform should affect annotated types, and annotated types can be infos of symbols so in that sense every annotation transform _is_ an info transform.\n\n_But_ that would require a complete typemap of every type in every info transform, and we know this leads to cyclic references. So we can't do this at present.\n\nBottom line: When in doubt decouple the functionalities. \n",
        "createdAt" : "2016-05-25T20:17:09Z",
        "updatedAt" : "2016-05-25T20:17:27Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c996e42224eedaf3b097fea0c6175eba7d3cbe63",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +175,179 @@\n  /** A helper trait to transform annotations on MemberDefs */\n  trait AnnotationTransformer extends MiniPhaseTransform with DenotTransformer {\n\n    val annotationTransformer = mkTreeTransformer"
  },
  {
    "id" : "ee7ae843-4cd9-45c9-a069-da3b75716c79",
    "prId" : 1241,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cba5d9a3-b212-4477-8360-9c7957bce65b",
        "parentId" : null,
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "lgtm\n",
        "createdAt" : "2016-04-29T08:29:35Z",
        "updatedAt" : "2016-04-29T08:29:35Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c7c738a148390ffb2072fc97a81646031fb49b2",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +187,191 @@        case ref: SymDenotation =>\n          val annots1 =\n            if (!ref.symbol.isDefinedInCurrentRun) ref.annotations // leave annotations read from class files alone\n            else {\n              val annotTrees = ref.annotations.map(_.tree)"
  },
  {
    "id" : "5880dced-743a-4378-926b-97f25d43adaf",
    "prId" : 112,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f9294e0-aff0-46fa-b5e8-77bf79aa0958",
        "parentId" : null,
        "authorId" : "8b10c0b3-102a-43f0-9f7e-9832973ffe2b",
        "body" : "once https://github.com/lampepfl/dotty/pull/99 is merged, you could use `i` and save the `.show` ;-)\n",
        "createdAt" : "2014-04-04T09:07:18Z",
        "updatedAt" : "2014-04-04T09:07:18Z",
        "lastEditedBy" : "8b10c0b3-102a-43f0-9f7e-9832973ffe2b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cfa1ccf5759a1beae961afbbc7d752a0a1e3cb62",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +1119,1123 @@      }\n\n    def transform(tree: Tree, info: TransformerInfo, cur: Int)(implicit ctx: Context): Tree = ctx.traceIndented(s\"transforming ${tree.show} at ${ctx.phase}\", transforms, show = true) {\n      tree match {\n        //split one big match into 2 smaller ones"
  }
]