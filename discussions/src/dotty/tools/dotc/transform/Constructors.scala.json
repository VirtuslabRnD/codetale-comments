[
  {
    "id" : "8d3cd66a-fc5b-4cdf-82ce-542d9d722df3",
    "prId" : 774,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "000f6525-856a-4d82-b2fc-b62ce2461b61",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "The return value of this match is not used anywhere.\n",
        "createdAt" : "2015-08-25T09:26:56Z",
        "updatedAt" : "2015-09-14T09:27:58Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "15b4b25a-01e2-48ce-ba52-74c6974ced81",
        "parentId" : "000f6525-856a-4d82-b2fc-b62ce2461b61",
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "this match returns Unit. How could it be used?\n",
        "createdAt" : "2015-08-25T10:46:21Z",
        "updatedAt" : "2015-09-14T09:27:58Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      },
      {
        "id" : "a9b37997-7a49-4322-8f88-4619509825bc",
        "parentId" : "000f6525-856a-4d82-b2fc-b62ce2461b61",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Ah ok, I missed that `retain` had side-effects, I suggest replacing `def retain` by `def retain()` and using `retain()` to follow the scala style.\n",
        "createdAt" : "2015-08-25T10:48:00Z",
        "updatedAt" : "2015-09-14T09:27:58Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "863d72dea0ada792ec3813fce588a996c532d295",
    "line" : null,
    "diffHunk" : "@@ -1,1 +54,58 @@      val owner = sym.owner.asClass\n\n        tree match {\n          case Ident(_) | Select(This(_), _) =>\n            def inConstructor = {"
  },
  {
    "id" : "6875ef97-a614-4948-a778-30c9d7620cc1",
    "prId" : 774,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3361513b-1ce4-4376-9f37-286d39b43488",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "This block is empty.\n",
        "createdAt" : "2015-08-25T09:27:02Z",
        "updatedAt" : "2015-09-14T09:27:58Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "e57c215e-cc02-40d7-af81-5d41494f50a2",
        "parentId" : "3361513b-1ce4-4376-9f37-286d39b43488",
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "This is intended this block contains comment on why nothing happens here\n",
        "createdAt" : "2015-08-25T10:46:46Z",
        "updatedAt" : "2015-09-14T09:27:58Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      }
    ],
    "commit" : "863d72dea0ada792ec3813fce588a996c532d295",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +60,64 @@              method.isPrimaryConstructor && ctx.owner.enclosingClass == owner\n            }\n            if (inConstructor && (sym.is(ParamAccessor) || seenPrivateVals.contains(sym))) {\n              // used inside constructor, accessed on this,\n              // could use constructor argument instead, no need to retain field"
  },
  {
    "id" : "6fc1d0b3-837c-476e-9197-d58c8e3bdb78",
    "prId" : 774,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55132b5c-dd01-4104-8668-281821371cff",
        "parentId" : null,
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "Why the `isWildcardStarArg` test? I see it is copied from the previous version, which is copied from scalac's version. Just wondered if you figured out the reason for the test.\n",
        "createdAt" : "2015-08-28T12:46:38Z",
        "updatedAt" : "2015-09-14T09:27:58Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "863d72dea0ada792ec3813fce588a996c532d295",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +82,86 @@  override def transformValDef(tree: tpd.ValDef)(implicit ctx: Context, info: TransformerInfo): tpd.Tree = {\n    if (mightBeDropped(tree.symbol))\n      (if (isWildcardStarArg(tree.rhs)) retainedPrivateVals else seenPrivateVals) += tree.symbol\n    tree\n  }"
  }
]