[
  {
    "id" : "63216686-a0fd-4b4b-8b8a-301aff379b59",
    "prId" : 1091,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "417ade43-0da8-4ece-8f92-36049707680c",
        "parentId" : null,
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "Is `Foo,this` a typo for `Foo.this`?\n",
        "createdAt" : "2016-02-15T15:48:36Z",
        "updatedAt" : "2016-03-31T12:52:14Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      },
      {
        "id" : "74e53946-cb26-4100-addb-e9169341fa0e",
        "parentId" : "417ade43-0da8-4ece-8f92-36049707680c",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Why not have the type of `$this` simply be `Foo.this` when `liftThisType` is true?\n",
        "createdAt" : "2016-02-15T16:02:53Z",
        "updatedAt" : "2016-03-31T12:52:14Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "2fe8ad5d6dbcac4de9ee263ab30d4cc02ceab9ca",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +91,95 @@   *\n   *  @param abstractOverClass  if true, include the type parameters of the class in the method's list of type parameters.\n   *  @param liftThisType       if true, require created $this to be $this: (Foo[A] & Foo,this).\n   *                            This is needed if created member stays inside scope of Foo(as in tailrec)\n   */"
  },
  {
    "id" : "7a614991-2371-485a-a0ba-d03ae9e31d67",
    "prId" : 383,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd60ea39-5335-4176-b28e-655cfde68b65",
        "parentId" : null,
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "1. That's a silent failure. Should at least issue `ctx.error`\n2. From could be an EmptyTree(which means return from enclsoing method), in this case calling \n   `rewiredTarget(NoSymbol, derived)` doesn't make sense.\n   Based on this I would better check if `from.isEmpty` and only if nonempty rewire `from`\n",
        "createdAt" : "2015-03-02T12:45:18Z",
        "updatedAt" : "2015-03-02T21:35:06Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      },
      {
        "id" : "3dda1072-184b-441e-a01b-dd998ae648db",
        "parentId" : "dd60ea39-5335-4176-b28e-655cfde68b65",
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "Ahh, EmptyTree here is a sentinel value. Disregard my comment about `ctx.error`\n",
        "createdAt" : "2015-03-02T12:54:04Z",
        "updatedAt" : "2015-03-02T21:35:06Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a273f38907f15fbb77f5de77f785509aee2d94f4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +182,186 @@              tpd.cpy.Return(tree)(expr, Ident(rewired.termRef))\n            else\n              EmptyTree\n          case Ident(_) => rewireCall(thisRef)\n          case Select(qual, _) => rewireCall(qual)"
  }
]