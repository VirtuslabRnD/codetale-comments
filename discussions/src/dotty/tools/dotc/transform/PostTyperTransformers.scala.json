[
  {
    "id" : "ab95acc1-cff1-465c-a2f2-09551473d96d",
    "prId" : 64,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a65b0fe-46a5-4c80-aca0-c67367b668e2",
        "parentId" : null,
        "authorId" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "body" : "Why do we need this?\n",
        "createdAt" : "2014-03-12T20:22:19Z",
        "updatedAt" : "2014-03-13T14:39:14Z",
        "lastEditedBy" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "tags" : [
        ]
      },
      {
        "id" : "25bd7d0b-c4ca-4786-a331-323c924c65b3",
        "parentId" : "3a65b0fe-46a5-4c80-aca0-c67367b668e2",
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "Just to reduce variety of types of trees which can be seen during transformations.\nThis is performed after the \"Frontend\" phase, so IDEs and, possibly, quasiquotes, should be able to see NamedArgs and Imports.\n",
        "createdAt" : "2014-03-12T21:52:38Z",
        "updatedAt" : "2014-03-13T14:39:14Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b6cb517570e77c2acf4bc6c8b1e83f922e1fd25f",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +19,23 @@    * Ensures that trees are normalized when seen by other transforms. This means:\n    * (1) All module class definitions appear after their companion class definitions\n    * (2) There are no import clauses or named arguments\n    * (3) All trees designating types are instances of TypeTree\n    */"
  },
  {
    "id" : "a9466b9b-3072-409f-9c76-d8c11644bb8c",
    "prId" : 64,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d75d67d7-8205-4990-b6b9-c83c8005ab54",
        "parentId" : null,
        "authorId" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "body" : "What are the alternatives?\n",
        "createdAt" : "2014-03-12T20:22:28Z",
        "updatedAt" : "2014-03-13T14:39:14Z",
        "lastEditedBy" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "tags" : [
        ]
      },
      {
        "id" : "26ba1847-b465-4f44-b755-e09cd10e3148",
        "parentId" : "d75d67d7-8205-4990-b6b9-c83c8005ab54",
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "OrTypeTree, AndTypeTree, SingletonTypeTree, RefinedTypeTree, TypeBoundsTree, AppliedTypeTree\n",
        "createdAt" : "2014-03-12T21:59:02Z",
        "updatedAt" : "2014-03-13T14:39:14Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b6cb517570e77c2acf4bc6c8b1e83f922e1fd25f",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +20,24 @@    * (1) All module class definitions appear after their companion class definitions\n    * (2) There are no import clauses or named arguments\n    * (3) All trees designating types are instances of TypeTree\n    */\n  abstract class PostTyperTransformer extends TreeTransformer {"
  },
  {
    "id" : "82d2bc19-a646-44f6-a499-799815da4e28",
    "prId" : 64,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "959d7577-ae3d-401a-9bb3-7e5ff47410a3",
        "parentId" : null,
        "authorId" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "body" : "What's a module class definition?\n",
        "createdAt" : "2014-03-12T20:22:42Z",
        "updatedAt" : "2014-03-13T14:39:14Z",
        "lastEditedBy" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "tags" : [
        ]
      },
      {
        "id" : "c9dde7be-7e55-4b7a-b8fb-0f124047eafc",
        "parentId" : "959d7577-ae3d-401a-9bb3-7e5ff47410a3",
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "Implementation class of companion object.\n",
        "createdAt" : "2014-03-13T00:19:51Z",
        "updatedAt" : "2014-03-13T14:39:14Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b6cb517570e77c2acf4bc6c8b1e83f922e1fd25f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +18,22 @@  /** A trait that's assumed by the transformers that run right after typer.\n    * Ensures that trees are normalized when seen by other transforms. This means:\n    * (1) All module class definitions appear after their companion class definitions\n    * (2) There are no import clauses or named arguments\n    * (3) All trees designating types are instances of TypeTree"
  }
]