[
  {
    "id" : "4c8e1088-2ad7-4ffc-b71c-9be13d4ad2e3",
    "prId" : 1696,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/1696#pullrequestreview-8479622",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3cdbb90-483b-4707-8863-5bad7dd1c8c5",
        "parentId" : null,
        "authorId" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "body" : "👍 to this whole commit (without having rechecked other occurrences of `Message`).\n",
        "createdAt" : "2016-11-14T15:32:15Z",
        "updatedAt" : "2016-11-14T20:14:53Z",
        "lastEditedBy" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "tags" : [
        ]
      },
      {
        "id" : "a225c76a-dcf0-48ee-b092-bc4bc71143bd",
        "parentId" : "f3cdbb90-483b-4707-8863-5bad7dd1c8c5",
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "Thanks! I discussed with @odersky and we agreed that my other approach was a tad over-engineered...hehe\n\nWDYT @odersky? LGTY?\n",
        "createdAt" : "2016-11-14T16:05:16Z",
        "updatedAt" : "2016-11-14T20:14:53Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      },
      {
        "id" : "ec0efd9c-7d0a-4fc1-ad8f-0729518e5366",
        "parentId" : "f3cdbb90-483b-4707-8863-5bad7dd1c8c5",
        "authorId" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "body" : "(Note that questions on `StoreReporter` and so on are still probably on, but all that commit does makes sense).\n",
        "createdAt" : "2016-11-14T16:27:18Z",
        "updatedAt" : "2016-11-14T20:14:53Z",
        "lastEditedBy" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "tags" : [
        ]
      },
      {
        "id" : "397793b0-fffd-412b-a87e-fd9b9033d859",
        "parentId" : "f3cdbb90-483b-4707-8863-5bad7dd1c8c5",
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "Yes, the store reporter will force if debugging - but I think we can live with that :)\n",
        "createdAt" : "2016-11-14T16:31:50Z",
        "updatedAt" : "2016-11-14T20:14:53Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      },
      {
        "id" : "dd74966a-0227-4778-b47d-e89cc8ca23f0",
        "parentId" : "f3cdbb90-483b-4707-8863-5bad7dd1c8c5",
        "authorId" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "body" : "FWIW, IMHO we can live with sharp edges as long as we document them when we notice them, and you already added some comments in this direction so 👍.\nI'm just asking for a warning comment on the store reporter lest people use it in other scenarios, as I think Murphy's law applies to software evolution. Copy-pasting this would be enough, if drafting the text is the problem:\n\n``` scala\n/** Beware this can leak memory, see https://github.com/lampepfl/dotty/pull/1696#issuecomment-259739205 */\n```\n",
        "createdAt" : "2016-11-14T17:28:55Z",
        "updatedAt" : "2016-11-14T20:14:53Z",
        "lastEditedBy" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "tags" : [
        ]
      },
      {
        "id" : "f2039e03-7433-4394-b7f8-7e0fc87d0dc0",
        "parentId" : "f3cdbb90-483b-4707-8863-5bad7dd1c8c5",
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "As soon as the restructuring repo PR is merged - I wanted to make the `StoreReporter` private to the compiler - WDYT?\n\nBut sure, maybe it could use another comment :)\n",
        "createdAt" : "2016-11-14T19:12:23Z",
        "updatedAt" : "2016-11-14T20:14:53Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      },
      {
        "id" : "36bc78e5-4f06-4666-982b-29e2cfe5897d",
        "parentId" : "f3cdbb90-483b-4707-8863-5bad7dd1c8c5",
        "authorId" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "body" : "> But sure, maybe it could use another comment :)\n\n👍 . \"Private to the compiler\" doesn't help compiler contributors, neither core ones nor contributors outside EPFL. I also had no clue `StoreReporter` is for debugging only.\n\nI'm also confused by the pushback — ideally one documents more pitfalls, not fewer (or even better, makes the comments unnecessary by removing them).\n\nI'm aware there are bad comments, and double-checked checklists of comment downsides (on http://wiki.c2.com/?CommentCostsAndBenefits)—and I'm not sure I see a downside here (other than \"time to write\", which is why I offered text).\n",
        "createdAt" : "2016-11-14T20:01:14Z",
        "updatedAt" : "2016-11-14T20:14:53Z",
        "lastEditedBy" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "tags" : [
        ]
      },
      {
        "id" : "44c26e7e-7fe3-4891-8586-230aee488a18",
        "parentId" : "f3cdbb90-483b-4707-8863-5bad7dd1c8c5",
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "Yeah, didn't mean to push back - but at home right now ^^. The PR has been updated to document this in a2354dd :+1: \n",
        "createdAt" : "2016-11-14T20:16:41Z",
        "updatedAt" : "2016-11-14T20:16:41Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      },
      {
        "id" : "432c58e5-968f-4fa6-b405-0d5a16f0cfaa",
        "parentId" : "f3cdbb90-483b-4707-8863-5bad7dd1c8c5",
        "authorId" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "body" : "> but at home right now ^^\n\nOh sorry didn't mean to interrupt. Only time bound I care for: comments are best addressed before the issue/PR is closed, or they should be moved to a new issue lest they're forgot.\n",
        "createdAt" : "2016-11-14T20:33:12Z",
        "updatedAt" : "2016-11-14T20:33:12Z",
        "lastEditedBy" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2354dd7e347a191c6077105b136d683013dd092",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +100,104 @@      *  and update lastErrorOffset.\n      */\n    def syntaxError(msg: => Message, offset: Int = in.offset): Unit =\n      if (offset > lastErrorOffset) {\n        syntaxError(msg, Position(offset))"
  },
  {
    "id" : "86564c3f-5fb6-4d6a-9465-33b03ef1eadf",
    "prId" : 1536,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/1536#pullrequestreview-1449990",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f12c896-588e-425c-ab32-988de6a4a361",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Throw exceptions instead? Calling `atPos` without getting a position seems to be an abnormal case.\n",
        "createdAt" : "2016-09-24T23:23:41Z",
        "updatedAt" : "2016-09-25T10:47:22Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "3544bbc3-0e53-4f3d-b749-419b58bfd717",
        "parentId" : "0f12c896-588e-425c-ab32-988de6a4a361",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "No, that's actually a common case. It always happens when the generated tree does not consume any source. In that case we don't set a position and wait for the position to be set by the enclosing node. I'll add a comment to explain.\n",
        "createdAt" : "2016-09-25T10:37:32Z",
        "updatedAt" : "2016-09-25T10:47:22Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "61815256f4b80fade88b07c69b1dfad9954a024a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +77,81 @@     */\n    def atPos[T <: Positioned](start: Offset, point: Offset)(t: T): T =\n      if (in.lastOffset > start) atPos(start, point, in.lastOffset)(t) else t\n\n    def atPos[T <: Positioned](start: Offset)(t: T): T ="
  },
  {
    "id" : "b1325dc8-5f7b-4bc1-bfd9-cef029ee2f9f",
    "prId" : 1184,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de2b47f8-b567-4a41-911e-5f30043a8d7d",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "This change is dubious, but it seems to be what's in the mind of the original author. Otherwise, there's no need to define the variable `offset`.\n",
        "createdAt" : "2016-03-18T14:57:34Z",
        "updatedAt" : "2016-03-18T18:57:27Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "12d420e2-4885-4a01-a273-d642fa17fe4d",
        "parentId" : "de2b47f8-b567-4a41-911e-5f30043a8d7d",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "Yes, good catch. It should be `offset`. Can you add to the doc comment a clause which says \"@return   The offset at the start of the token to accept\"? Thanks!\n",
        "createdAt" : "2016-03-18T16:12:01Z",
        "updatedAt" : "2016-03-18T18:57:27Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e7058a22fcf8806e718bbba94080935a44ece0c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +237,241 @@      }\n      if (in.token == token) in.nextToken()\n      offset\n    }\n"
  },
  {
    "id" : "05bb771a-5c9c-4b9e-b098-f6743075746c",
    "prId" : 1179,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edad9544-01b7-40c3-b784-a7885fd50e90",
        "parentId" : null,
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "(3) Then this code can be written shorter like this:\n\n```\n    migrationWarningOrError(\"The syntax `x @ _*' is no longer supported; use `x : _*' instead\", p.pos)\n```\n",
        "createdAt" : "2016-03-18T11:03:37Z",
        "updatedAt" : "2016-03-18T14:08:54Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "72b44d9b5df579e90b5aba5c55d04f6b34081d02",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +1322,1326 @@        // compatibility for Scala2 `x @ _*` syntax\n        infixPattern() match {\n          case pt @ Ident(tpnme.WILDCARD_STAR) =>\n            migrationWarningOrError(\"The syntax `x @ _*' is no longer supported; use `x : _*' instead\", p.pos.start)\n            atPos(p.pos.start, pos) { Typed(p, pt) }"
  }
]