[
  {
    "id" : "b5586528-8cf4-4352-8261-d8293266f7ea",
    "prId" : 8534,
    "prUrl" : "https://github.com/redis/redis/pull/8534#pullrequestreview-621174599",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5dbd5c4-14c3-496e-aca3-df0b73831293",
        "parentId" : null,
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "Yeah, please delete the other two ACLChecks, we should just expose this one if we don't want anyone calling the above two now. ",
        "createdAt" : "2021-03-25T14:22:12Z",
        "updatedAt" : "2021-03-26T10:36:59Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bfea1b072b187b06b14e8e8980a4fe19e4502d4",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +2104,2108 @@void ACLClearCommandID(void);\nuser *ACLGetUserByName(const char *name, size_t namelen);\nint ACLCheckAllPerm(client *c, int *idxptr);\nint ACLSetUser(user *u, const char *op, ssize_t oplen);\nsds ACLDefaultUserFirstPassword(void);"
  },
  {
    "id" : "7c9a10c8-d33c-4237-bcc3-3ecb0a282739",
    "prId" : 8217,
    "prUrl" : "https://github.com/redis/redis/pull/8217#pullrequestreview-558274416",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1925ef2b-657f-4925-b790-016bde150813",
        "parentId" : null,
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "Do we intend to extend this? Otherwise it would be easier to just store the count in the rax. ",
        "createdAt" : "2020-12-23T17:01:55Z",
        "updatedAt" : "2020-12-31T14:24:37Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "dd4b03d2-f25b-4f96-a7d3-a32007ece43a",
        "parentId" : "1925ef2b-657f-4925-b790-016bde150813",
        "authorId" : "178b77ef-4974-4854-afae-4e18f5dd998f",
        "body" : "@madolson I thought of it as wrapper struct for future requirements. ",
        "createdAt" : "2020-12-23T17:55:43Z",
        "updatedAt" : "2020-12-31T14:24:37Z",
        "lastEditedBy" : "178b77ef-4974-4854-afae-4e18f5dd998f",
        "tags" : [
        ]
      },
      {
        "id" : "0476a95f-503e-4d53-89ac-4489e846b2f4",
        "parentId" : "1925ef2b-657f-4925-b790-016bde150813",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "Okay, as long as that is intended, it's okay.",
        "createdAt" : "2020-12-23T23:41:27Z",
        "updatedAt" : "2020-12-31T14:24:37Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "5876578eae847f5b6a6cc938c2e3e818cbb92fc5",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +1592,1596 @@struct redisError {\n    long long count;\n};\n\nstruct redisFunctionSym {"
  },
  {
    "id" : "4505d042-3fef-479f-8b80-54970e068afe",
    "prId" : 8217,
    "prUrl" : "https://github.com/redis/redis/pull/8217#pullrequestreview-558691332",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad064204-ebe4-4686-b7b9-5cbf3ea0a12a",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "let's add it to the INFO STATS section",
        "createdAt" : "2020-12-24T00:32:54Z",
        "updatedAt" : "2020-12-31T14:24:37Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "5367f709-0574-413d-b8ea-280e2ac8fe68",
        "parentId" : "ad064204-ebe4-4686-b7b9-5cbf3ea0a12a",
        "authorId" : "178b77ef-4974-4854-afae-4e18f5dd998f",
        "body" : "added in the last commit",
        "createdAt" : "2020-12-24T17:31:17Z",
        "updatedAt" : "2020-12-31T14:24:37Z",
        "lastEditedBy" : "178b77ef-4974-4854-afae-4e18f5dd998f",
        "tags" : [
        ]
      }
    ],
    "commit" : "5876578eae847f5b6a6cc938c2e3e818cbb92fc5",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1233,1237 @@    uint64_t stat_clients_type_memory[CLIENT_TYPE_COUNT];/* Mem usage by type */\n    long long stat_unexpected_error_replies; /* Number of unexpected (aof-loading, replica to master, etc.) error replies */\n    long long stat_total_error_replies; /* Total number of issued error replies ( command + rejected errors ) */\n    long long stat_dump_payload_sanitizations; /* Number deep dump payloads integrity validations. */\n    long long stat_io_reads_processed; /* Number of read events processed by IO / Main threads */"
  },
  {
    "id" : "b7f298e6-7056-4348-b2fe-081f9212225c",
    "prId" : 8170,
    "prUrl" : "https://github.com/redis/redis/pull/8170#pullrequestreview-557423664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc12d8f0-ecc3-4ba4-b461-5d3eb2bbec2e",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "i wish we could make this an `enum`.",
        "createdAt" : "2020-12-22T09:01:33Z",
        "updatedAt" : "2021-01-08T06:46:42Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "fe745e35-8624-495d-9a77-b72341e69b2f",
        "parentId" : "fc12d8f0-ecc3-4ba4-b461-5d3eb2bbec2e",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "We could use a macro like getFlag(CMD_MODULE_GETKEYS), where CMD_MODULE_GETKEYS is just a regular enum. The macro would do the bit shifting, since it'll still all be known at compilation time, it should optimize it the same way.\r\n\r\nIt doesn't seem overly worth it to me.",
        "createdAt" : "2020-12-22T23:26:19Z",
        "updatedAt" : "2021-01-08T06:46:42Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "776c26e8349c4f2a590c1218ce31e73dee4df909",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +186,190 @@/* Command flags used by the module system. */\n#define CMD_MODULE_GETKEYS (1ULL<<17)  /* Use the modules getkeys interface. */\n#define CMD_MODULE_NO_CLUSTER (1ULL<<18) /* Deny on Redis Cluster. */\n\n/* Command flags that describe ACLs categories. */"
  },
  {
    "id" : "2d0bfbb3-828b-440c-8c1f-63b621e56869",
    "prId" : 8170,
    "prUrl" : "https://github.com/redis/redis/pull/8170#pullrequestreview-562153175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59d28218-2fdd-4d6a-8409-77bff0aa2db9",
        "parentId" : null,
        "authorId" : "b80d1b62-d71e-412b-8ac1-75ca11c2ea56",
        "body" : "Would it be better to use the monotonic clock for these times?",
        "createdAt" : "2021-01-05T18:53:57Z",
        "updatedAt" : "2021-01-08T06:46:42Z",
        "lastEditedBy" : "b80d1b62-d71e-412b-8ac1-75ca11c2ea56",
        "tags" : [
        ]
      },
      {
        "id" : "c2a82e64-f883-4af7-88fe-8e5452b84689",
        "parentId" : "59d28218-2fdd-4d6a-8409-77bff0aa2db9",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "We use server.mstime, so it's effectively free. We also don't need monotimes high precision.",
        "createdAt" : "2021-01-05T21:34:09Z",
        "updatedAt" : "2021-01-08T06:46:42Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "776c26e8349c4f2a590c1218ce31e73dee4df909",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +1185,1189 @@    list *paused_clients;       /* List of pause clients */\n    mstime_t client_pause_end_time;    /* Time when we undo clients_paused */\n    char neterr[ANET_ERR_LEN];   /* Error buffer for anet.c */\n    dict *migrate_cached_sockets;/* MIGRATE cached sockets */\n    redisAtomic uint64_t next_client_id; /* Next client unique ID. Incremental. */"
  },
  {
    "id" : "48fa15bd-63aa-4b60-b4f0-689e5ccea76c",
    "prId" : 7536,
    "prUrl" : "https://github.com/redis/redis/pull/7536#pullrequestreview-451566037",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "938494f8-4c19-4fcb-b948-485c4609c1a7",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "let's move it next to KEY_MISS so that no one will try to use 1<<12 for something else.\r\nsame for redismodle.h (where the \"module only\" mention may not be needed)",
        "createdAt" : "2020-07-20T12:42:52Z",
        "updatedAt" : "2020-07-20T13:21:46Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "c046fee5d847cd03950c520fe431893a778226c5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +427,431 @@#define NOTIFY_STREAM (1<<10)     /* t */\n#define NOTIFY_KEY_MISS (1<<11)   /* m (Note: This one is excluded from NOTIFY_ALL on purpose) */\n#define NOTIFY_LOADED (1<<12)     /* module only key space notification, indicate a key loaded from rdb */\n#define NOTIFY_ALL (NOTIFY_GENERIC | NOTIFY_STRING | NOTIFY_LIST | NOTIFY_SET | NOTIFY_HASH | NOTIFY_ZSET | NOTIFY_EXPIRED | NOTIFY_EVICTED | NOTIFY_STREAM) /* A flag */\n"
  }
]