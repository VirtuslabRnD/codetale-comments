[
  {
    "id" : "35d13e06-69ae-4ab7-ba4b-88c5cfa0c950",
    "prId" : 8557,
    "prUrl" : "https://github.com/redis/redis/pull/8557#pullrequestreview-599193836",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0637fd0-6eb8-4e6b-a914-996502fe16ff",
        "parentId" : null,
        "authorId" : "4c4e22a4-3f0d-4f25-9809-81320210dfb6",
        "body" : "One extra blank line.",
        "createdAt" : "2021-02-26T01:55:54Z",
        "updatedAt" : "2021-02-26T01:55:59Z",
        "lastEditedBy" : "4c4e22a4-3f0d-4f25-9809-81320210dfb6",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b36dc90167486c4f1e09c0d5c231e7deee4e37f",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +2293,2297 @@}\n\n\nint updateRequirePass(sds val, sds prev, const char **err) {\n    UNUSED(prev);"
  },
  {
    "id" : "bfa915cc-ba18-48a3-993a-9cd913a85396",
    "prId" : 8510,
    "prUrl" : "https://github.com/redis/redis/pull/8510#pullrequestreview-600234783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf3f3c65-d024-4801-9bd2-4fa6ccaea095",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "remember to remove these from the non-mutable config list in tests/unit/introspection.tcl",
        "createdAt" : "2021-02-28T08:47:11Z",
        "updatedAt" : "2021-03-01T06:46:26Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f17e465b712a417c87fbe2fb3e93b4900eb6334",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +2461,2465 @@    /* Integer configs */\n    createIntConfig(\"databases\", NULL, IMMUTABLE_CONFIG, 1, INT_MAX, server.dbnum, 16, INTEGER_CONFIG, NULL, NULL),\n    createIntConfig(\"port\", NULL, MODIFIABLE_CONFIG, 0, 65535, server.port, 6379, INTEGER_CONFIG, NULL, updatePort), /* TCP port. */\n    createIntConfig(\"io-threads\", NULL, IMMUTABLE_CONFIG, 1, 128, server.io_threads_num, 1, INTEGER_CONFIG, NULL, NULL), /* Single threaded by default */\n    createIntConfig(\"auto-aof-rewrite-percentage\", NULL, MODIFIABLE_CONFIG, 0, INT_MAX, server.aof_rewrite_perc, 100, INTEGER_CONFIG, NULL, NULL),"
  },
  {
    "id" : "123fb29a-5270-40c6-8b3a-47d337d2f1b4",
    "prId" : 8510,
    "prUrl" : "https://github.com/redis/redis/pull/8510#pullrequestreview-600633455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37958535-7794-4774-917d-d54b24c72a1e",
        "parentId" : null,
        "authorId" : "99372f0e-10c0-44d7-a1cc-8d4d027b3fa8",
        "body" : "I don't see new information added to the logs in `changeListenPort`, so perhaps change the message to something like:\r\n\r\n\"Unable to bind to port %d.\"",
        "createdAt" : "2021-03-01T08:24:22Z",
        "updatedAt" : "2021-03-01T08:24:22Z",
        "lastEditedBy" : "99372f0e-10c0-44d7-a1cc-8d4d027b3fa8",
        "tags" : [
        ]
      },
      {
        "id" : "7cb1b1dc-d39d-46af-b316-7aebf8b1db13",
        "parentId" : "37958535-7794-4774-917d-d54b24c72a1e",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "i suppose it refers to the log print in `listenToPort`",
        "createdAt" : "2021-03-01T11:26:39Z",
        "updatedAt" : "2021-03-01T11:26:40Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f17e465b712a417c87fbe2fb3e93b4900eb6334",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +2215,2219 @@\n    if (changeListenPort(val, &server.ipfd, acceptTcpHandler) == C_ERR) {\n        *err = \"Unable to listen on this port. Check server logs.\";\n        return 0;\n    }"
  },
  {
    "id" : "bafb7f5a-3232-42f7-91ba-c9dca3b513c2",
    "prId" : 8397,
    "prUrl" : "https://github.com/redis/redis/pull/8397#pullrequestreview-577135442",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e71cf99-f858-439b-9531-dca30fe958d8",
        "parentId" : null,
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "Might be a personal preference, but I've never really thought you should use both is_valid_fn() and update_fn(). Since failing update_fn() will also rollback. If we just use update_fn(), we can move all the validation logic into redisSetProcTitle instead of splitting it apart. It also removes the awkward \"Should never really happen comment\", since the function both validates the input and updates.",
        "createdAt" : "2021-01-27T01:23:54Z",
        "updatedAt" : "2021-01-28T10:01:36Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "5716d01a-33c8-4919-8fcd-51478ce0db01",
        "parentId" : "3e71cf99-f858-439b-9531-dca30fe958d8",
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "Good point, should have gotten is_valid_fn out when update_fn got in.",
        "createdAt" : "2021-01-27T09:26:47Z",
        "updatedAt" : "2021-01-28T10:01:36Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      }
    ],
    "commit" : "75dc79d3ed8cfc5923278164b905ec3cb0a24adb",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +2455,2459 @@    createStringConfig(\"bgsave_cpulist\", NULL, IMMUTABLE_CONFIG, EMPTY_STRING_IS_NULL, server.bgsave_cpulist, NULL, NULL, NULL),\n    createStringConfig(\"ignore-warnings\", NULL, MODIFIABLE_CONFIG, ALLOW_EMPTY_STRING, server.ignore_warnings, \"\", NULL, NULL),\n    createStringConfig(\"proc-title-template\", NULL, MODIFIABLE_CONFIG, ALLOW_EMPTY_STRING, server.proc_title_template, CONFIG_DEFAULT_PROC_TITLE_TEMPLATE, isValidProcTitleTemplate, updateProcTitleTemplate),\n\n    /* SDS Configs */"
  },
  {
    "id" : "0b13195f-bac9-4bff-b61f-b5e0fbc0c3ca",
    "prId" : 8200,
    "prUrl" : "https://github.com/redis/redis/pull/8200#pullrequestreview-554036354",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80d5d68b-2e10-4e6a-9bb3-e7539c70eb1a",
        "parentId" : null,
        "authorId" : "b80d1b62-d71e-412b-8ac1-75ca11c2ea56",
        "body" : "Naming this field \"sds\" is confusing as \"sds\" is also a common type.\r\n\r\nMaybe name this \"sdsd\" to be consistent with \"enumd\" below.",
        "createdAt" : "2020-12-16T17:20:57Z",
        "updatedAt" : "2020-12-17T12:53:03Z",
        "lastEditedBy" : "b80d1b62-d71e-412b-8ac1-75ca11c2ea56",
        "tags" : [
        ]
      },
      {
        "id" : "9b8490e2-51a5-4745-a32f-7964eeaaff65",
        "parentId" : "80d5d68b-2e10-4e6a-9bb3-e7539c70eb1a",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "enum is a reserved word, which is why it's special.",
        "createdAt" : "2020-12-16T19:03:00Z",
        "updatedAt" : "2020-12-17T12:53:03Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "fc2e5440-699b-42fa-aad5-cfc4d5e4a4cd",
        "parentId" : "80d5d68b-2e10-4e6a-9bb3-e7539c70eb1a",
        "authorId" : "923f0482-b8b2-486e-aea3-d56720913631",
        "body" : "Fixed",
        "createdAt" : "2020-12-16T19:57:41Z",
        "updatedAt" : "2020-12-17T12:53:03Z",
        "lastEditedBy" : "923f0482-b8b2-486e-aea3-d56720913631",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbaaa2e777aca09434c9bc5cd66c77852f270cd6",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +222,226 @@    boolConfigData yesno;\n    stringConfigData string;\n    sdsConfigData sds;\n    enumConfigData enumd;\n    numericConfigData numeric;"
  },
  {
    "id" : "50b74587-b8f5-450a-990a-e9e5edd15b0c",
    "prId" : 7954,
    "prUrl" : "https://github.com/redis/redis/pull/7954#pullrequestreview-544276247",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3681a761-87af-4a63-ba6a-406a2ce60c8a",
        "parentId" : null,
        "authorId" : "b80d1b62-d71e-412b-8ac1-75ca11c2ea56",
        "body" : "Note - while arguably good practice, this is not technically needed.  C is defined to fill the remainder of a struct with NULL when a static initializer like this is used.  If you're worried about touching too much code, this could be left out.",
        "createdAt" : "2020-12-03T17:40:34Z",
        "updatedAt" : "2020-12-06T09:33:53Z",
        "lastEditedBy" : "b80d1b62-d71e-412b-8ac1-75ca11c2ea56",
        "tags" : [
        ]
      },
      {
        "id" : "839a2bab-4154-41d2-a660-01a1d4188d15",
        "parentId" : "3681a761-87af-4a63-ba6a-406a2ce60c8a",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "yes. but some compilers emit warnings for that, since it's just some 20 lines, we can swallow that frog.",
        "createdAt" : "2020-12-03T18:54:16Z",
        "updatedAt" : "2020-12-06T09:33:53Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "20d8a8e678e802cd8f14a4bd44e8540531bd46f7",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1087,1091 @@    dictSdsDestructor,          /* key destructor */\n    dictListDestructor,         /* val destructor */\n    NULL                        /* allow to expand */\n};\n"
  },
  {
    "id" : "6ee09d47-a223-447d-bdad-a7f5addc0c0a",
    "prId" : 7945,
    "prUrl" : "https://github.com/redis/redis/pull/7945#pullrequestreview-514924606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4f2a836-d40c-4361-9ed5-ffd9913dce85",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "i'm not an expert of the config rewrite (didn't deal with it in the past).\r\nit looks to me that a slightly cleaner way would be to just add the condition on the call to `rewriteConfigSaveOption`.\r\n\r\ni.e. since the original config file isn't expected to have the save config, we don't need to `rewriteConfigMarkAsProcessed`.\r\n\r\n@hwware do you care to test it, or correct me if i'm wrong?",
        "createdAt" : "2020-10-22T15:08:45Z",
        "updatedAt" : "2020-10-22T15:08:45Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "3130fd89-b3ee-49d3-b8e7-611d0c6ddc18",
        "parentId" : "b4f2a836-d40c-4361-9ed5-ffd9913dce85",
        "authorId" : "351cea45-3d66-4827-bbfb-0a2c2c79b24b",
        "body" : "Hi @oranagra, yes both these two ways will work. the reason i added the check in the function is I was thinking about consistency, since some other functions such as https://github.com/redis/redis/blob/unstable/src/config.c#L1400 the check condition added inside the function. But for sentinel mode the codition is simplier indeed, I agree if we add check in the calling place of rewriteConfigSaveOption may make code looks more consise.  ",
        "createdAt" : "2020-10-22T15:24:58Z",
        "updatedAt" : "2020-10-22T15:24:58Z",
        "lastEditedBy" : "351cea45-3d66-4827-bbfb-0a2c2c79b24b",
        "tags" : [
        ]
      },
      {
        "id" : "9fd85714-3a54-4ec4-abff-e09a9bde0ab6",
        "parentId" : "b4f2a836-d40c-4361-9ed5-ffd9913dce85",
        "authorId" : "351cea45-3d66-4827-bbfb-0a2c2c79b24b",
        "body" : "but just let you know there are also some trivial difference here, if we put the check when we calling the rewriteConfigSaveOption, it won't touch any existing \"save\" parameters in sentinel configuration, however if we added the check inside the function and if we mistakenly put \"save \" inside sentinel config, this will be overwritten by blank. In my opinion both way works since we need to make sure the \"save\" willl not be re-added in the config, if user mistakenly put it in sentinel conf, we can igore it or not ignore it both seems ok to me.. how do you think? @oranagra ",
        "createdAt" : "2020-10-22T15:41:12Z",
        "updatedAt" : "2020-10-22T15:55:22Z",
        "lastEditedBy" : "351cea45-3d66-4827-bbfb-0a2c2c79b24b",
        "tags" : [
        ]
      },
      {
        "id" : "372405dc-fc58-4c74-bb52-b0793be365d0",
        "parentId" : "b4f2a836-d40c-4361-9ed5-ffd9913dce85",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "@hwware good point about the fact that there's a precedence that does that, but as you pointed out, it's a slightly different scenario (slaveof does have a purpose there, and might indeed needs to be removed, unlike here which is a pointless line).\r\n\r\nIf it was about removing or not removing a line that the user might have put there, I would have said not to remove it. \r\nBut indeed as you pointed out, this config wasn't put there by the user, but rather by our bug.\r\nSo if this were a new config invented by the next version of Redis, I would go with my suggested way (cleaner code), but since we need to clean up junk from old config files we generated, let's take your way. ",
        "createdAt" : "2020-10-22T16:43:46Z",
        "updatedAt" : "2020-10-22T16:43:46Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "7cfe5f05d47d4a33d84b643876975d11ed19ed91",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +1340,1344 @@        rewriteConfigMarkAsProcessed(state,\"save\");\n        return;\n    }\n\n    /* Note that if there are no save parameters at all, all the current"
  },
  {
    "id" : "1f0cf97b-f668-4bae-833a-70a8fbf1864b",
    "prId" : 7893,
    "prUrl" : "https://github.com/redis/redis/pull/7893#pullrequestreview-506160292",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "352b89f7-050f-4317-b382-b0abecd5bdee",
        "parentId" : null,
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "```suggestion\r\n        serverLog(LL_VERBOSE,\"Reading config from stdin\");\r\n```",
        "createdAt" : "2020-10-11T08:25:56Z",
        "updatedAt" : "2020-10-11T08:46:06Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      },
      {
        "id" : "7ffff5e7-7340-4733-8366-242190a1065f",
        "parentId" : "352b89f7-050f-4317-b382-b0abecd5bdee",
        "authorId" : "42355b05-6d27-48a8-8dec-4ebfa0c25ee7",
        "body" : "I've intentionally made this a warning -- if someone uses this flag but doesn't provide any content via stdin the server will hang waiting for it (this is the behavior without this change as well). Emitting the warning might help avoid the follow-up SO question / GitHub issue.",
        "createdAt" : "2020-10-11T09:18:46Z",
        "updatedAt" : "2020-10-11T09:18:46Z",
        "lastEditedBy" : "42355b05-6d27-48a8-8dec-4ebfa0c25ee7",
        "tags" : [
        ]
      }
    ],
    "commit" : "1892c7ec7b86ed3ef23cc5ed5608d04033eddb20",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +630,634 @@    /* Append content from stdin */\n    if (config_from_stdin) {\n        serverLog(LL_WARNING,\"Reading config from stdin\");\n        fp = stdin;\n        while(fgets(buf,CONFIG_MAX_LINE+1,fp) != NULL)"
  },
  {
    "id" : "37031e56-1d89-418e-8f2f-34577e9f1f90",
    "prId" : 7842,
    "prUrl" : "https://github.com/redis/redis/pull/7842#pullrequestreview-497073714",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11f910f6-cdf8-470d-bc0f-baacf47b3fea",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "```suggestion\r\n                sdsfree(server.masterhost);\r\n                server.masterhost = NULL;\r\n```\r\npossible memory leak when using multiple `replicaof` directives in the config file.",
        "createdAt" : "2020-09-27T11:10:36Z",
        "updatedAt" : "2020-09-27T11:12:19Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdb3641d532fb4013c61449e0bb368f342ac3289",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +476,480 @@            sdsfree(server.masterhost);\n            if (!strcasecmp(argv[1], \"no\") && !strcasecmp(argv[2], \"one\")) {\n                server.masterhost = NULL;\n                continue;\n            }"
  },
  {
    "id" : "dae0dbfd-6fdd-467c-a752-161306c0c6cc",
    "prId" : 7824,
    "prUrl" : "https://github.com/redis/redis/pull/7824#pullrequestreview-493866965",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d95233a-b1f8-4eb9-a9d3-8685c9152121",
        "parentId" : null,
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "I think it might make sense to `fchmod()` earlier, so once `rename()` is successful we're all done. In this order we may end up with the wrong permissions.",
        "createdAt" : "2020-09-22T09:34:53Z",
        "updatedAt" : "2020-09-24T23:27:30Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      },
      {
        "id" : "23868eff-b12b-40ad-8cdf-d65e0670498a",
        "parentId" : "9d95233a-b1f8-4eb9-a9d3-8685c9152121",
        "authorId" : "42355b05-6d27-48a8-8dec-4ebfa0c25ee7",
        "body" : "Good idea. Done.",
        "createdAt" : "2020-09-22T21:40:58Z",
        "updatedAt" : "2020-09-24T23:27:30Z",
        "lastEditedBy" : "42355b05-6d27-48a8-8dec-4ebfa0c25ee7",
        "tags" : [
        ]
      }
    ],
    "commit" : "ded9459ff8a5cf6bef0f29ad0209e64a76d636fa",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +1597,1601 @@    if (fsync(fd))\n        serverLog(LL_WARNING, \"Could not sync tmp config file to disk (%s)\", strerror(errno));\n    else if (fchmod(fd, 0644) == -1)\n        serverLog(LL_WARNING, \"Could not chmod config file (%s)\", strerror(errno));\n    else if (rename(tmp_conffile, configfile) == -1)"
  },
  {
    "id" : "90a97efa-ce9b-4bd4-a706-1baeb706a190",
    "prId" : 7824,
    "prUrl" : "https://github.com/redis/redis/pull/7824#pullrequestreview-496116344",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed9a0fc0-3c23-4419-8da0-44b2bd4ea564",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "@ushachar don't we need `fsync` too before rename?",
        "createdAt" : "2020-09-24T09:14:05Z",
        "updatedAt" : "2020-09-24T23:27:30Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "5c35853e-f3fe-4005-86e5-3d65337730dd",
        "parentId" : "ed9a0fc0-3c23-4419-8da0-44b2bd4ea564",
        "authorId" : "42355b05-6d27-48a8-8dec-4ebfa0c25ee7",
        "body" : "Being paranoid - I like it - Done.",
        "createdAt" : "2020-09-24T23:28:25Z",
        "updatedAt" : "2020-09-24T23:28:25Z",
        "lastEditedBy" : "42355b05-6d27-48a8-8dec-4ebfa0c25ee7",
        "tags" : [
        ]
      },
      {
        "id" : "9d474f4b-e33c-42b7-9aea-c4e7aa003786",
        "parentId" : "ed9a0fc0-3c23-4419-8da0-44b2bd4ea564",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "This whole PR is about paranoia (making sure it's atomic even in power failures). \nP.s. We might need to fsync the directory records after rename too. \nAlthough maybe losing that change doesn't reflect on the atomicity, lost losing the change. ",
        "createdAt" : "2020-09-25T05:18:20Z",
        "updatedAt" : "2020-09-25T05:18:21Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "ded9459ff8a5cf6bef0f29ad0209e64a76d636fa",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +1599,1603 @@    else if (fchmod(fd, 0644) == -1)\n        serverLog(LL_WARNING, \"Could not chmod config file (%s)\", strerror(errno));\n    else if (rename(tmp_conffile, configfile) == -1)\n        serverLog(LL_WARNING, \"Could not rename tmp config file (%s)\", strerror(errno));\n    else {"
  },
  {
    "id" : "614e8fd1-345e-4777-8c7a-525839faac85",
    "prId" : 6397,
    "prUrl" : "https://github.com/redis/redis/pull/6397#pullrequestreview-291062096",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5631d46a-220c-43f3-93a1-d4725a01bec3",
        "parentId" : null,
        "authorId" : "7402f6bd-2c90-4674-a864-35e134c36574",
        "body" : "@trevor211 isn't that redundant? ",
        "createdAt" : "2019-09-20T09:37:33Z",
        "updatedAt" : "2019-09-20T09:37:33Z",
        "lastEditedBy" : "7402f6bd-2c90-4674-a864-35e134c36574",
        "tags" : [
        ]
      },
      {
        "id" : "dc7f7d7a-eed2-4a39-93af-1add131b7a28",
        "parentId" : "5631d46a-220c-43f3-93a1-d4725a01bec3",
        "authorId" : "e0863aff-4317-496e-aaec-69c95f9a197a",
        "body" : "Yes @guybe7, the original PR didn't removed the old statement apparently, fixing. Thank you.",
        "createdAt" : "2019-09-20T09:44:06Z",
        "updatedAt" : "2019-09-20T09:44:06Z",
        "lastEditedBy" : "e0863aff-4317-496e-aaec-69c95f9a197a",
        "tags" : [
        ]
      },
      {
        "id" : "6c07b09e-52bc-4a03-9ca6-7b1ec08caf87",
        "parentId" : "5631d46a-220c-43f3-93a1-d4725a01bec3",
        "authorId" : "e0863aff-4317-496e-aaec-69c95f9a197a",
        "body" : "Should be ok now.",
        "createdAt" : "2019-09-20T09:45:08Z",
        "updatedAt" : "2019-09-20T09:45:09Z",
        "lastEditedBy" : "e0863aff-4317-496e-aaec-69c95f9a197a",
        "tags" : [
        ]
      },
      {
        "id" : "6bf4fb23-e611-4d41-bc38-b501ed821d54",
        "parentId" : "5631d46a-220c-43f3-93a1-d4725a01bec3",
        "authorId" : "e0863aff-4317-496e-aaec-69c95f9a197a",
        "body" : "Added another commit actually to make it similar to the other code paths.",
        "createdAt" : "2019-09-20T09:47:17Z",
        "updatedAt" : "2019-09-20T09:47:18Z",
        "lastEditedBy" : "e0863aff-4317-496e-aaec-69c95f9a197a",
        "tags" : [
        ]
      }
    ],
    "commit" : "74e3a622a2af2c7f561b058de1249c081ae82afd",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +672,676 @@            server.lua_time_limit = strtoll(argv[1],NULL,10);\n        } else if (!strcasecmp(argv[0],\"lua-replicate-commands\") && argc == 2) {\n            server.lua_always_replicate_commands = yesnotoi(argv[1]);\n            if ((server.lua_always_replicate_commands = yesnotoi(argv[1])) == -1) {\n                err = \"argument must be 'yes' or 'no'\"; goto loaderr;"
  },
  {
    "id" : "56ac174c-8de2-40ae-a8db-7b3b9d19db2f",
    "prId" : 9304,
    "prUrl" : "https://github.com/redis/redis/pull/9304#pullrequestreview-719786092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f569b943-cd7e-46a7-a80a-934f7a3f7ba7",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "(not related to this line).\r\ni'd also like to add these:\r\n* list-compress-depth\r\n* proto-max-bulk-len\r\n* client-query-buffer-limit\r\n\r\n",
        "createdAt" : "2021-08-02T05:02:47Z",
        "updatedAt" : "2021-08-02T05:03:23Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "c348269baf3085085f1a06106176320a2f7b5448",
    "line" : 219,
    "diffHunk" : "@@ -1,1 +2584,2588 @@    createIntConfig(\"databases\", NULL, IMMUTABLE_CONFIG, 1, INT_MAX, server.dbnum, 16, INTEGER_CONFIG, NULL, NULL),\n    createIntConfig(\"port\", NULL, MODIFIABLE_CONFIG, 0, 65535, server.port, 6379, INTEGER_CONFIG, NULL, updatePort), /* TCP port. */\n    createIntConfig(\"io-threads\", NULL, DEBUG_CONFIG | IMMUTABLE_CONFIG, 1, 128, server.io_threads_num, 1, INTEGER_CONFIG, NULL, NULL), /* Single threaded by default */\n    createIntConfig(\"auto-aof-rewrite-percentage\", NULL, MODIFIABLE_CONFIG, 0, INT_MAX, server.aof_rewrite_perc, 100, INTEGER_CONFIG, NULL, NULL),\n    createIntConfig(\"cluster-replica-validity-factor\", \"cluster-slave-validity-factor\", MODIFIABLE_CONFIG, 0, INT_MAX, server.cluster_slave_validity_factor, 10, INTEGER_CONFIG, NULL, NULL), /* Slave max data age factor. */"
  },
  {
    "id" : "46bfe23d-156b-4da6-8a8f-998455fd3816",
    "prId" : 9304,
    "prUrl" : "https://github.com/redis/redis/pull/9304#pullrequestreview-719786092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5bbaf1c6-483d-4485-b2d2-2133ab92037a",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "(not related to this line).\r\ni'd also like to add these:\r\n* list-compress-depth\r\n* proto-max-bulk-len\r\n* client-query-buffer-limit\r\n\r\n",
        "createdAt" : "2021-08-02T05:02:47Z",
        "updatedAt" : "2021-08-02T05:03:23Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "c348269baf3085085f1a06106176320a2f7b5448",
    "line" : 219,
    "diffHunk" : "@@ -1,1 +2584,2588 @@    createIntConfig(\"databases\", NULL, IMMUTABLE_CONFIG, 1, INT_MAX, server.dbnum, 16, INTEGER_CONFIG, NULL, NULL),\n    createIntConfig(\"port\", NULL, MODIFIABLE_CONFIG, 0, 65535, server.port, 6379, INTEGER_CONFIG, NULL, updatePort), /* TCP port. */\n    createIntConfig(\"io-threads\", NULL, DEBUG_CONFIG | IMMUTABLE_CONFIG, 1, 128, server.io_threads_num, 1, INTEGER_CONFIG, NULL, NULL), /* Single threaded by default */\n    createIntConfig(\"auto-aof-rewrite-percentage\", NULL, MODIFIABLE_CONFIG, 0, INT_MAX, server.aof_rewrite_perc, 100, INTEGER_CONFIG, NULL, NULL),\n    createIntConfig(\"cluster-replica-validity-factor\", \"cluster-slave-validity-factor\", MODIFIABLE_CONFIG, 0, INT_MAX, server.cluster_slave_validity_factor, 10, INTEGER_CONFIG, NULL, NULL), /* Slave max data age factor. */"
  }
]