[
  {
    "id" : "4b25041e-1934-474d-9cdd-a08d3231ecba",
    "prId" : 873,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/873#pullrequestreview-414581050",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be5b13ec-4f25-48cc-9a97-36c6588e8b94",
        "parentId" : null,
        "authorId" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "body" : "just wondering, what's the benefit of having rulesets that only inherit from parents, instead of calling two rulesets in a row?",
        "createdAt" : "2020-05-19T01:13:31Z",
        "updatedAt" : "2020-05-19T14:45:29Z",
        "lastEditedBy" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "tags" : [
        ]
      },
      {
        "id" : "2e4175f9-8fcc-4892-ba2d-051fa32669fe",
        "parentId" : "be5b13ec-4f25-48cc-9a97-36c6588e8b94",
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "So we have a place to add more later. We have some special laws in `ConcurrentBracketLaws`, so I would expect that, at some point, we would have something similar in `ConcurrentRegionLaws`.",
        "createdAt" : "2020-05-19T14:43:24Z",
        "updatedAt" : "2020-05-19T14:45:29Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      },
      {
        "id" : "1511dbd7-c5f3-4dee-a4d7-763d31ec86f2",
        "parentId" : "be5b13ec-4f25-48cc-9a97-36c6588e8b94",
        "authorId" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "body" : "cool... not sure if I mentioned this yet, but if we have laws for these combinations, shouldn't they also be traits? Kind of like `Monad` which has no abstract methods other than the ones from `FlatMap[F]` and `Applicative[F]`. Or `CommutativeGroup[A] extends Group[A] with CommutativeMonoid[A]`",
        "createdAt" : "2020-05-19T15:43:54Z",
        "updatedAt" : "2020-05-19T15:44:19Z",
        "lastEditedBy" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1607fdc0639386b7341dbb1eb8db5bf11e27ba2",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +85,89 @@      val parents = Seq(concurrent[A, B, C], region[A, B, C])\n\n      val props = Seq()\n    }\n  }"
  }
]