[
  {
    "id" : "6f6bac60-7f79-4f12-b0d8-38b4766e0725",
    "prId" : 866,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/866#pullrequestreview-408824774",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "939d9cbd-8383-41a3-9673-9c2d600201a6",
        "parentId" : null,
        "authorId" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "body" : "I'm kind of surprised we don't get this for free thanks to Kleisli",
        "createdAt" : "2020-05-11T02:03:05Z",
        "updatedAt" : "2020-05-14T19:45:54Z",
        "lastEditedBy" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "tags" : [
        ]
      },
      {
        "id" : "4380d112-702c-48a3-90a4-289af2eb2f35",
        "parentId" : "939d9cbd-8383-41a3-9673-9c2d600201a6",
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Surprisingly, `Kleisli` is missing a bunch of instances. Though, to wit, in this particular case it probably couldn't help us anyway since it doesn't know anything about `Time`, the input to its function.",
        "createdAt" : "2020-05-11T02:20:15Z",
        "updatedAt" : "2020-05-14T19:45:54Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      },
      {
        "id" : "11843514-ec59-4850-9ae8-49d6b08b4e8c",
        "parentId" : "939d9cbd-8383-41a3-9673-9c2d600201a6",
        "authorId" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "body" : "oh, I never noticed there was a zero hardcoded in there. Nice",
        "createdAt" : "2020-05-11T02:28:15Z",
        "updatedAt" : "2020-05-14T19:45:54Z",
        "lastEditedBy" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc98d745673740f5a2bb1ffc67d2ea7516bbf8b0",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +70,74 @@  }\n\n  implicit def orderTimeT[F[_], A](implicit FA: Order[F[A]]): Order[TimeT[F, A]] =\n    Order.by(TimeT.run(_))\n"
  },
  {
    "id" : "112cda87-e7f5-460a-8ef5-c2bff52e8656",
    "prId" : 866,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/866#pullrequestreview-409237049",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0002693-1450-45b3-ad73-46d0dd3d941f",
        "parentId" : null,
        "authorId" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "body" : "`Duration.ZERO` has a nice ring to it",
        "createdAt" : "2020-05-11T02:04:06Z",
        "updatedAt" : "2020-05-14T19:45:54Z",
        "lastEditedBy" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "tags" : [
        ]
      },
      {
        "id" : "e100e328-a980-48e4-a03e-1b71d7789cf9",
        "parentId" : "f0002693-1450-45b3-ad73-46d0dd3d941f",
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "I can go with that instead. I just hate the all caps. :-)",
        "createdAt" : "2020-05-11T02:21:09Z",
        "updatedAt" : "2020-05-14T19:45:54Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      },
      {
        "id" : "8f82a509-6b4f-4668-a7be-1e44456b5899",
        "parentId" : "f0002693-1450-45b3-ad73-46d0dd3d941f",
        "authorId" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "body" : "it screams \"it's literally all the same to me\" :)\r\n\r\nalso thinking about having a `Tolerance.strict[A: Monoid]`.",
        "createdAt" : "2020-05-11T02:29:38Z",
        "updatedAt" : "2020-05-14T19:45:54Z",
        "lastEditedBy" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "tags" : [
        ]
      },
      {
        "id" : "48d1b637-2aa4-4ded-970f-105c3c33defb",
        "parentId" : "f0002693-1450-45b3-ad73-46d0dd3d941f",
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "That would be quite cool. Note that `Tolerance` itself is almost an implementation detail of the laws; it's not visible from the outside. We can change that if it makes sense to do so though.",
        "createdAt" : "2020-05-11T14:40:10Z",
        "updatedAt" : "2020-05-14T19:45:54Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc98d745673740f5a2bb1ffc67d2ea7516bbf8b0",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +53,57 @@  checkAll(\n    \"TimeT[PureConc, ?]\",\n    TemporalBracketTests[TimeT[PureConc[Int, ?], ?], Int].temporalBracket[Int, Int, Int](0.millis))\n\n  implicit def exec(fb: TimeT[PureConc[Int, ?], Boolean]): Prop ="
  }
]