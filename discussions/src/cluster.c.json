[
  {
    "id" : "72ac9d13-c5e4-4683-89ab-93dd762cee30",
    "prId" : 9015,
    "prUrl" : "https://github.com/redis/redis/pull/9015#pullrequestreview-676883646",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60b4d3ce-2752-49d3-8a8c-6aaa62223eb5",
        "parentId" : null,
        "authorId" : "473bc8a0-7ca7-405b-9794-3e9f874fb547",
        "body" : "In non cluster, you can't enter readonly mode, so this check is redundancy.",
        "createdAt" : "2021-05-31T23:55:24Z",
        "updatedAt" : "2021-05-31T23:55:24Z",
        "lastEditedBy" : "473bc8a0-7ca7-405b-9794-3e9f874fb547",
        "tags" : [
        ]
      },
      {
        "id" : "f1702d29-22dc-44ab-b684-e952cca6aea8",
        "parentId" : "60b4d3ce-2752-49d3-8a8c-6aaa62223eb5",
        "authorId" : "c54e672f-7b5e-4402-bd8f-fcb255f27420",
        "body" : "Yes, i know. Here is my thought, `readwrite` quite like `not readonly`. Althought `readwrite` can be executed in non-cluster mode, it does not do anything actually.\r\n\r\nThis check can added or not, it will not change anthing about the execute. But in my opinion, it can treat like `not readonly`, and maybe it should act like `readonly` when it execute in non-cluster mode. So when the user type `readwrite` in non-cluster mode, it can get the same error.",
        "createdAt" : "2021-06-01T01:53:09Z",
        "updatedAt" : "2021-06-01T01:53:10Z",
        "lastEditedBy" : "c54e672f-7b5e-4402-bd8f-fcb255f27420",
        "tags" : [
        ]
      },
      {
        "id" : "9ee043d2-edf5-4a09-aefc-5b291fa30a99",
        "parentId" : "60b4d3ce-2752-49d3-8a8c-6aaa62223eb5",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "I think it would make sense to make this symmetric.",
        "createdAt" : "2021-06-01T04:20:00Z",
        "updatedAt" : "2021-06-01T04:20:01Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "02f8496f-28bd-4722-a2b7-2212cc780415",
        "parentId" : "60b4d3ce-2752-49d3-8a8c-6aaa62223eb5",
        "authorId" : "babee3be-430c-4c87-b0ef-442264fdd216",
        "body" : "Also make sense to me, agree with the `symmetric`",
        "createdAt" : "2021-06-06T16:41:25Z",
        "updatedAt" : "2021-06-06T16:41:25Z",
        "lastEditedBy" : "babee3be-430c-4c87-b0ef-442264fdd216",
        "tags" : [
        ]
      }
    ],
    "commit" : "0dc2b0dd45e3224d6c73ef8a186d8b6a9d06f104",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +5710,5714 @@/* The READWRITE command just clears the READONLY command state. */\nvoid readwriteCommand(client *c) {\n    if (server.cluster_enabled == 0) {\n        addReplyError(c,\"This instance has cluster support disabled\");\n        return;"
  },
  {
    "id" : "3ba29845-a9b2-464e-8b9c-bc1aba27dfea",
    "prId" : 8587,
    "prUrl" : "https://github.com/redis/redis/pull/8587#pullrequestreview-620340611",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eaf9d352-b3a1-4fdb-8ae0-3e7ebe08fccc",
        "parentId" : null,
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "Why are we using server.tls_cluster? The clusterbus can not be using TLS but you can still have inbound TLS clients.",
        "createdAt" : "2021-03-16T05:27:15Z",
        "updatedAt" : "2021-03-24T20:56:01Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "71d1b976-552c-4c72-aa2e-80d7cf5cf611",
        "parentId" : "eaf9d352-b3a1-4fdb-8ae0-3e7ebe08fccc",
        "authorId" : "c6fac63b-ee5a-4181-b121-48bfacc74a59",
        "body" : "If the cluster bus is non-TLS, the `port` in the cluster bus is always the non-TLS client port. That's legacy.\r\n\r\nIf we want to serve TLS ports to TLS clients in a non-TLS cluster (meaning a cluster with a non-TLS cluster bus), we can rename pport to \"secondary port\" (or port2) and send/gossip the TLS port in this way. (Future possibility.)",
        "createdAt" : "2021-03-16T10:09:30Z",
        "updatedAt" : "2021-03-24T20:56:01Z",
        "lastEditedBy" : "c6fac63b-ee5a-4181-b121-48bfacc74a59",
        "tags" : [
        ]
      },
      {
        "id" : "de13190c-15f5-4d46-9308-a5768b42b9c8",
        "parentId" : "eaf9d352-b3a1-4fdb-8ae0-3e7ebe08fccc",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "Okay, we talked about this in the other comment and I understand the legacy behavior now.\r\n\r\nI don't think the tls_cluster config should be the decider for what port we should show to end users. I guess the only time we can break that is in Redis 7. So maybe we can put a pin in that.",
        "createdAt" : "2021-03-25T00:48:44Z",
        "updatedAt" : "2021-03-25T00:48:45Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "dec47808f810261229aaa9d96194561b0983d5b8",
    "line" : 267,
    "diffHunk" : "@@ -1,1 +5936,5940 @@        /* Redirect to IP:port. Include plaintext port if cluster is TLS but\n         * client is non-TLS. */\n        int use_pport = (server.tls_cluster &&\n                         c->conn && connGetType(c->conn) != CONN_TYPE_TLS);\n        int port = use_pport && n->pport ? n->pport : n->port;"
  },
  {
    "id" : "37797228-e4dd-4156-b6e0-7e1c7a0406fd",
    "prId" : 8587,
    "prUrl" : "https://github.com/redis/redis/pull/8587#pullrequestreview-620338217",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa5fc7cd-18b0-46b2-85d8-14d2f36234dd",
        "parentId" : null,
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "If we restart a node, that means we might show a pport of 0, since we haven't received their message yet. That seems incorrect. ",
        "createdAt" : "2021-03-16T05:33:55Z",
        "updatedAt" : "2021-03-24T20:56:01Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "5896877d-1eb7-435f-9e21-cb587203a567",
        "parentId" : "aa5fc7cd-18b0-46b2-85d8-14d2f36234dd",
        "authorId" : "c6fac63b-ee5a-4181-b121-48bfacc74a59",
        "body" : "That's right (but arguably not worse than serving a TLS port to a plaintext client).\r\n\r\nA future improvement is to add it to the nodes.conf file. I haven't looked into if/how it can be done in a backwards compatible way. Do you know?",
        "createdAt" : "2021-03-16T09:54:49Z",
        "updatedAt" : "2021-03-24T20:56:01Z",
        "lastEditedBy" : "c6fac63b-ee5a-4181-b121-48bfacc74a59",
        "tags" : [
        ]
      },
      {
        "id" : "9a2cb3bb-28e0-4fdb-9f64-837357d887e7",
        "parentId" : "aa5fc7cd-18b0-46b2-85d8-14d2f36234dd",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "Extra fields can be added optionally, AFAIK. We do a splitargs on space and we don't explicitly validate the number, just that it's at least the number we expect. You're right this can be a future improvement thought.",
        "createdAt" : "2021-03-25T00:41:44Z",
        "updatedAt" : "2021-03-25T00:41:44Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "dec47808f810261229aaa9d96194561b0983d5b8",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +191,195 @@        n->cport = busp ? atoi(busp) : n->port + CLUSTER_PORT_INCR;\n\n        /* The plaintext port for client in a TLS cluster (n->pport) is not\n         * stored in nodes.conf. It is received later over the bus protocol. */\n"
  },
  {
    "id" : "5f5087b9-3b7e-41d9-944b-09953c8a9b72",
    "prId" : 8587,
    "prUrl" : "https://github.com/redis/redis/pull/8587#pullrequestreview-620338348",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f90e0c8-bdea-437e-8d88-221c86c30e7d",
        "parentId" : null,
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "Probably not a breaking change, but if someone did have a work around for handling the plaintext port, when they upgrade we will start gossiping the pport of 0 and serving that to TCP clients. We can only trust that this value is set when we know we're talking with a 6.2 node or something. A very defensive option here would be to add a flag. ",
        "createdAt" : "2021-03-16T05:42:34Z",
        "updatedAt" : "2021-03-24T20:56:01Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "619d4b4e-23f6-42bb-9a54-dc1cb3a6f822",
        "parentId" : "0f90e0c8-bdea-437e-8d88-221c86c30e7d",
        "authorId" : "c6fac63b-ee5a-4181-b121-48bfacc74a59",
        "body" : "Actually if a node's pport is 0, we don't send it to clients. We send the TLS port to plaintext clients, just like a 6.2 node would do. For example, here is redirects. Cluster slots/nodes is similar.\r\n\r\n```C\r\n    } else if (error_code == CLUSTER_REDIR_MOVED ||\r\n               error_code == CLUSTER_REDIR_ASK)\r\n    {\r\n        /* Redirect to IP:port. Include plaintext port if cluster is TLS but\r\n         * client is non-TLS. */\r\n        int use_pport = (server.tls_cluster &&\r\n                         c->conn && connGetType(c->conn) != CONN_TYPE_TLS);\r\n        int port = use_pport && n->pport ? n->pport : n->port;\r\n        addReplyErrorSds(c,sdscatprintf(sdsempty(),\r\n            \"-%s %d %s:%d\",\r\n            (error_code == CLUSTER_REDIR_ASK) ? \"ASK\" : \"MOVED\",\r\n            hashslot, n->ip, port));\r\n```",
        "createdAt" : "2021-03-16T10:03:04Z",
        "updatedAt" : "2021-03-24T20:56:01Z",
        "lastEditedBy" : "c6fac63b-ee5a-4181-b121-48bfacc74a59",
        "tags" : [
        ]
      },
      {
        "id" : "4f325c27-14dc-4f37-af1b-a5c0e2c31121",
        "parentId" : "0f90e0c8-bdea-437e-8d88-221c86c30e7d",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "I see, so we only do that pport check, sounds good. ",
        "createdAt" : "2021-03-25T00:42:07Z",
        "updatedAt" : "2021-03-25T00:42:07Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "dec47808f810261229aaa9d96194561b0983d5b8",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +1508,1512 @@                memcpy(node->ip,g->ip,NET_IP_STR_LEN);\n                node->port = ntohs(g->port);\n                node->pport = ntohs(g->pport);\n                node->cport = ntohs(g->cport);\n                node->flags &= ~CLUSTER_NODE_NOADDR;"
  },
  {
    "id" : "fcc6af08-40a9-4f7f-889f-5ac8199dd988",
    "prId" : 8565,
    "prUrl" : "https://github.com/redis/redis/pull/8565#pullrequestreview-607874412",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e948613-030a-4302-94cb-a1734ef6981f",
        "parentId" : null,
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "The two comments below here aren't quite right anymore.",
        "createdAt" : "2021-03-01T22:54:32Z",
        "updatedAt" : "2021-03-02T13:14:13Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "e31d5cf1-03b5-4558-bd67-946ae23a73f6",
        "parentId" : "8e948613-030a-4302-94cb-a1734ef6981f",
        "authorId" : "30b24df1-a7b6-4b68-869b-7b8b69de67da",
        "body" : "Comments adjusted.",
        "createdAt" : "2021-03-02T13:15:52Z",
        "updatedAt" : "2021-03-02T13:15:52Z",
        "lastEditedBy" : "30b24df1-a7b6-4b68-869b-7b8b69de67da",
        "tags" : [
        ]
      },
      {
        "id" : "440bfc38-1763-489b-bc39-55040941ac81",
        "parentId" : "8e948613-030a-4302-94cb-a1734ef6981f",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "This code seems like a bug to me. If we have a multi-exec with write commands, and the cluster transitions to DOWN while we have \"cluster_allow_reads_when_down\" enabled, I think the exec would be allowed, even though it shouldn't? Anyways, I'll look int this more.",
        "createdAt" : "2021-03-09T19:56:34Z",
        "updatedAt" : "2021-03-09T19:56:34Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1b71b7f7438de0d5ba34d6f7ea9401d5fe07ef6",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +5833,5837 @@            if (error_code) *error_code = CLUSTER_REDIR_DOWN_STATE;\n            return NULL;\n        } else if (cmd->flags & CMD_WRITE) {\n            /* The cluster is configured to allow read only commands */\n            if (error_code) *error_code = CLUSTER_REDIR_DOWN_RO_STATE;"
  },
  {
    "id" : "677288bb-706c-4b5a-833b-c303727a0838",
    "prId" : 8242,
    "prUrl" : "https://github.com/redis/redis/pull/8242#pullrequestreview-568365045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08a1c519-4d5c-4e29-a63f-3e3be335206d",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "i suppose this change isn't needed, right? (although it doesn't cause any harm either)",
        "createdAt" : "2021-01-14T14:58:32Z",
        "updatedAt" : "2021-01-19T19:23:57Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "a00b2d6d-de61-41cb-b36d-a4cd8d614b12",
        "parentId" : "08a1c519-4d5c-4e29-a63f-3e3be335206d",
        "authorId" : "f5e1a433-8cc0-463e-9c6d-e6fe8fda30eb",
        "body" : "This file might be opened in redis server as well as sentinel, so it's reasonable to enable this flag here.",
        "createdAt" : "2021-01-14T15:29:42Z",
        "updatedAt" : "2021-01-19T19:23:57Z",
        "lastEditedBy" : "f5e1a433-8cc0-463e-9c6d-e6fe8fda30eb",
        "tags" : [
        ]
      },
      {
        "id" : "732f5b1d-ae65-49bc-9fcb-5a361c4eff6c",
        "parentId" : "08a1c519-4d5c-4e29-a63f-3e3be335206d",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "`sentinel` and `cluster` are two different things.\r\nwhen redis runs in sentinel mode it'll never reach this code.\r\n\r\none can argue (being right), that it's better to have this flag (may come in hand one day in the future), but currently it's not needed.\r\ni don't feel strongly either way. just making a point.",
        "createdAt" : "2021-01-14T15:34:37Z",
        "updatedAt" : "2021-01-19T19:23:57Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "6e8b96c5-29d8-49f8-b37d-498d1a2c5a42",
        "parentId" : "08a1c519-4d5c-4e29-a63f-3e3be335206d",
        "authorId" : "f5e1a433-8cc0-463e-9c6d-e6fe8fda30eb",
        "body" : "I see your point now, but let's keep this flag here just in case, and it has no harm for that.",
        "createdAt" : "2021-01-14T15:47:30Z",
        "updatedAt" : "2021-01-19T19:23:57Z",
        "lastEditedBy" : "f5e1a433-8cc0-463e-9c6d-e6fe8fda30eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3ce93ce6653842abb9c311672c60b22dcad75a4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +399,403 @@     * it does not exist, otherwise there is a race condition with other\n     * processes. */\n    int fd = open(filename,O_WRONLY|O_CREAT|O_CLOEXEC,0644);\n    if (fd == -1) {\n        serverLog(LL_WARNING,"
  },
  {
    "id" : "43ad77e0-d0dd-41c6-9aae-bcdc4db23525",
    "prId" : 8182,
    "prUrl" : "https://github.com/redis/redis/pull/8182#pullrequestreview-552484105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e9ac85c-16e2-4573-9a00-f716d2f7167c",
        "parentId" : null,
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "Can we just free pre-computed value here? I don't think we need to do another loop. ",
        "createdAt" : "2020-12-15T04:16:29Z",
        "updatedAt" : "2020-12-18T14:39:17Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "28d0f878-dba0-4c6a-86d0-1ad13eb340a7",
        "parentId" : "5e9ac85c-16e2-4573-9a00-f716d2f7167c",
        "authorId" : "98e31153-705f-4299-a152-78c428055d23",
        "body" : "Thanks, let me do it",
        "createdAt" : "2020-12-15T13:57:17Z",
        "updatedAt" : "2020-12-18T14:39:17Z",
        "lastEditedBy" : "98e31153-705f-4299-a152-78c428055d23",
        "tags" : [
        ]
      }
    ],
    "commit" : "65aa98bcdbc5a1ef18bac8d8af5b01496b7f327b",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +4278,4282 @@        ci = sdscatsds(ci,ni);\n        sdsfree(ni);\n        ci = sdscatlen(ci,\"\\n\",1);\n\n        /* Release slots info. */"
  },
  {
    "id" : "fec41043-e537-4ab8-9bd1-5c581b3a9ab0",
    "prId" : 7948,
    "prUrl" : "https://github.com/redis/redis/pull/7948#pullrequestreview-517302663",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4528715-4877-432d-8896-d053b09e2260",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "@trevor211 please add a comment explaining why this ping is needed.",
        "createdAt" : "2020-10-25T07:30:21Z",
        "updatedAt" : "2020-10-27T03:48:37Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "40ac3d06-c1c0-4ae6-a2fc-0f400f4bc630",
        "parentId" : "d4528715-4877-432d-8896-d053b09e2260",
        "authorId" : "3fd01224-49da-4442-b8fb-3e7fd805eb03",
        "body" : "Wrote a comment and rebased.",
        "createdAt" : "2020-10-27T02:23:21Z",
        "updatedAt" : "2020-10-27T03:48:37Z",
        "lastEditedBy" : "3fd01224-49da-4442-b8fb-3e7fd805eb03",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab26b8362d878407319b366328b8e5e5581657a9",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +2167,2171 @@         * know that it is safe to set its `server.cluster->mf_can_start` to 1 so as\n         * to complete failover as quickly as possible. */\n        clusterSendPing(link, CLUSTERMSG_TYPE_PING);\n    } else if (type == CLUSTERMSG_TYPE_UPDATE) {\n        clusterNode *n; /* The node the update is about. */"
  },
  {
    "id" : "7047a870-fc34-492c-bf75-b3f88bd97b23",
    "prId" : 9255,
    "prUrl" : "https://github.com/redis/redis/pull/9255#pullrequestreview-715173772",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74db32b4-2627-4fe4-8a1a-c2fcbfb04c51",
        "parentId" : null,
        "authorId" : "6a45842c-dc45-48bd-8e3e-639bbf1f640b",
        "body" : "I tried putting this loop into its' own function called `clusterNodesCron` as well, but the function had to have a lot of parameters as return values so I removed it.",
        "createdAt" : "2021-07-26T06:03:01Z",
        "updatedAt" : "2021-07-26T06:03:01Z",
        "lastEditedBy" : "6a45842c-dc45-48bd-8e3e-639bbf1f640b",
        "tags" : [
        ]
      },
      {
        "id" : "377d4e11-8d96-4be0-9819-48b84562b4d4",
        "parentId" : "74db32b4-2627-4fe4-8a1a-c2fcbfb04c51",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "I think this is fine.",
        "createdAt" : "2021-07-26T18:47:25Z",
        "updatedAt" : "2021-07-26T18:47:25Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "07346b001e73f5c5c3f6e002ffc9bd975c4c3157",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +3637,3641 @@    /* Run through some of the operations we want to do on each cluster node. */\n    di = dictGetSafeIterator(server.cluster->nodes);\n    while((de = dictNext(di)) != NULL) {\n        clusterNode *node = dictGetVal(de);\n        /* The protocol is that they return non-zero if the node was"
  },
  {
    "id" : "806ecc16-58a6-4fc0-bce5-756f3e9fde92",
    "prId" : 9255,
    "prUrl" : "https://github.com/redis/redis/pull/9255#pullrequestreview-715169655",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e8b5efe-5b28-446c-8da2-3429c57d3fdf",
        "parentId" : null,
        "authorId" : "6a45842c-dc45-48bd-8e3e-639bbf1f640b",
        "body" : "The only behavior change from this refactor is this code to ping a random node happens after all the cluster node stuff instead of in-between. I don't think it makes a difference but someone with more context please correct me if I am wrong",
        "createdAt" : "2021-07-26T06:06:11Z",
        "updatedAt" : "2021-07-26T06:06:11Z",
        "lastEditedBy" : "6a45842c-dc45-48bd-8e3e-639bbf1f640b",
        "tags" : [
        ]
      },
      {
        "id" : "ec025744-5c18-498e-a216-ec76c288b63e",
        "parentId" : "8e8b5efe-5b28-446c-8da2-3429c57d3fdf",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "I don't see any concern with that.",
        "createdAt" : "2021-07-26T18:42:22Z",
        "updatedAt" : "2021-07-26T18:42:23Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "07346b001e73f5c5c3f6e002ffc9bd975c4c3157",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +3647,3651 @@\n    /* Ping some random node 1 time every 10 iterations, so that we usually ping\n     * one random node every second. */\n    if (!(iteration % 10)) {\n        int j;"
  },
  {
    "id" : "43083216-5cf5-432e-b78b-b34b50d11d9c",
    "prId" : 9255,
    "prUrl" : "https://github.com/redis/redis/pull/9255#pullrequestreview-715173772",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43ab7035-ca5b-4be4-8077-4df7564b097a",
        "parentId" : null,
        "authorId" : "6a45842c-dc45-48bd-8e3e-639bbf1f640b",
        "body" : "I tried putting this loop into its' own function called `clusterNodesCron` as well, but the function had to have a lot of parameters as return values so I removed it.",
        "createdAt" : "2021-07-26T06:03:01Z",
        "updatedAt" : "2021-07-26T06:03:01Z",
        "lastEditedBy" : "6a45842c-dc45-48bd-8e3e-639bbf1f640b",
        "tags" : [
        ]
      },
      {
        "id" : "644fe42a-1ae7-40ee-9e16-0407dabd6a12",
        "parentId" : "43ab7035-ca5b-4be4-8077-4df7564b097a",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "I think this is fine.",
        "createdAt" : "2021-07-26T18:47:25Z",
        "updatedAt" : "2021-07-26T18:47:25Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "07346b001e73f5c5c3f6e002ffc9bd975c4c3157",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +3637,3641 @@    /* Run through some of the operations we want to do on each cluster node. */\n    di = dictGetSafeIterator(server.cluster->nodes);\n    while((de = dictNext(di)) != NULL) {\n        clusterNode *node = dictGetVal(de);\n        /* The protocol is that they return non-zero if the node was"
  },
  {
    "id" : "f6c1c57f-94ac-4f13-87ad-05c12cc5c737",
    "prId" : 9255,
    "prUrl" : "https://github.com/redis/redis/pull/9255#pullrequestreview-715169655",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae825aad-6a89-40d2-a9ec-255256a13e2b",
        "parentId" : null,
        "authorId" : "6a45842c-dc45-48bd-8e3e-639bbf1f640b",
        "body" : "The only behavior change from this refactor is this code to ping a random node happens after all the cluster node stuff instead of in-between. I don't think it makes a difference but someone with more context please correct me if I am wrong",
        "createdAt" : "2021-07-26T06:06:11Z",
        "updatedAt" : "2021-07-26T06:06:11Z",
        "lastEditedBy" : "6a45842c-dc45-48bd-8e3e-639bbf1f640b",
        "tags" : [
        ]
      },
      {
        "id" : "27d2fd96-5d8f-4f08-a5f7-2ba90920b929",
        "parentId" : "ae825aad-6a89-40d2-a9ec-255256a13e2b",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "I don't see any concern with that.",
        "createdAt" : "2021-07-26T18:42:22Z",
        "updatedAt" : "2021-07-26T18:42:23Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "07346b001e73f5c5c3f6e002ffc9bd975c4c3157",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +3647,3651 @@\n    /* Ping some random node 1 time every 10 iterations, so that we usually ping\n     * one random node every second. */\n    if (!(iteration % 10)) {\n        int j;"
  }
]