[
  {
    "id" : "f71f5398-f522-4dac-a91e-575d49c96bad",
    "prId" : 65,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5aee6851-9be0-4455-90df-a43d53ea390d",
        "parentId" : null,
        "authorId" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "body" : "There is a libgfortran provided by defaults, no? https://anaconda.org/anaconda/libgfortran\nLooks like it is only Linux though...\n",
        "createdAt" : "2016-02-22T08:38:24Z",
        "updatedAt" : "2016-02-22T18:08:26Z",
        "lastEditedBy" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "tags" : [
        ]
      },
      {
        "id" : "1737beb8-d0bc-4a41-9af1-805fd98464cc",
        "parentId" : "5aee6851-9be0-4455-90df-a43d53ea390d",
        "authorId" : "e8e4b885-d17a-49f9-b533-3f3e494d1808",
        "body" : "I've never had success getting Fortan derived extension modules to work reliably on OS X or Linux.  There is no \"default\" Fortran compiler on Mac (gfortran and libgfortran on Travis CI are provided by brew so cannot be relied upon to exist on a users machine) and the same glibc \"match the lowest version\" issue is required when linking with libgfortran.\n\nPy-ART only has a single Fortran extension module which is optional so the package is still fully functional when built on a system without Fortran.  Rather than try to figure out how to get these modules to work I'd prefer to just build Py-ART without this small feature.  \n\nLonger term the plan is to re-write the Fortran module in Cython.  The amount of code to port is not that large, just need to find time to do the work.\n",
        "createdAt" : "2016-02-22T16:14:09Z",
        "updatedAt" : "2016-02-22T18:08:26Z",
        "lastEditedBy" : "e8e4b885-d17a-49f9-b533-3f3e494d1808",
        "tags" : [
        ]
      },
      {
        "id" : "45a2a185-5558-464f-bbf3-7572deb49c72",
        "parentId" : "5aee6851-9be0-4455-90df-a43d53ea390d",
        "authorId" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "body" : "> Longer term the plan is to re-write the Fortran module in Cython.\n\nLonger term plan for conda-forge will be to make this easier somehow. Whether that is packaging libgfortran, or some other solution. I'm certainly keen to avoid the need to shy away from using Fortran.\n",
        "createdAt" : "2016-02-23T08:19:07Z",
        "updatedAt" : "2016-02-23T08:19:07Z",
        "lastEditedBy" : "753b1247-ba26-4947-8bde-480d6590d6e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "4409ad1ea8368666c11987e49ef8007bf32dd064",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2,6 @@if [ `uname` == Darwin ]; then\n    # Remove gfortran so that all fortran Py-ART modules are not built.  This\n    # avoids the need to package the gfortran run time in the conda package.\n    rm -f /usr/local/bin/gfor*\nfi"
  }
]