[
  {
    "id" : "a53e525c-a6ab-4ba5-bf4d-0ffba5473784",
    "prId" : 4960,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab86a3a2-754f-4340-b377-a06765b11571",
        "parentId" : null,
        "authorId" : "5bf195d0-88f2-4eea-82af-ea18ace9da2d",
        "body" : "You should use uiGridConstants.ASC which is equal to a number\n",
        "createdAt" : "2015-07-19T04:31:03Z",
        "updatedAt" : "2015-07-22T15:21:16Z",
        "lastEditedBy" : "5bf195d0-88f2-4eea-82af-ea18ace9da2d",
        "tags" : [
        ]
      }
    ],
    "commit" : "72a6d57c065e9c6f64b187634be4ff6d9d8cffdf",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +73,77 @@columnDef.name = 'MyColumn';\ncolumnDef.sort = {\n    direction: 'ASC',\n    ignoreSort: false,\n    priority: 1"
  },
  {
    "id" : "0957b508-0877-4a60-8317-cc02feebfaa2",
    "prId" : 5972,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f51bd4c-5fa8-4688-b18d-769223d73dc6",
        "parentId" : null,
        "authorId" : "5bf195d0-88f2-4eea-82af-ea18ace9da2d",
        "body" : "how does this test that though?\n",
        "createdAt" : "2015-09-28T17:14:38Z",
        "updatedAt" : "2015-09-28T22:14:17Z",
        "lastEditedBy" : "5bf195d0-88f2-4eea-82af-ea18ace9da2d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7b029e1c225ac74cad334ffbb411b7c27675021",
    "line" : null,
    "diffHunk" : "@@ -1,1 +54,58 @@columnDef.headerCellClass =\n    (gridRow, rowRenderIndex, gridCol, colRenderIndex) => {\n        //types for gridRow, rowRenderIndex, gridCol, and colRenderIndex flow in properly\n        return `${gridRow.entity.age}-${rowRenderIndex + 1}-${gridCol.field}-${colRenderIndex - 1}`;\n    };"
  },
  {
    "id" : "28ca00f9-4a9c-40fc-967b-2698ecd4f061",
    "prId" : 5972,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5bc75cb8-2485-4e0f-bf70-b9059d718452",
        "parentId" : null,
        "authorId" : "5bf195d0-88f2-4eea-82af-ea18ace9da2d",
        "body" : "is there a downside in explicitly naming the type?\n",
        "createdAt" : "2015-09-28T17:14:54Z",
        "updatedAt" : "2015-09-28T22:14:17Z",
        "lastEditedBy" : "5bf195d0-88f2-4eea-82af-ea18ace9da2d",
        "tags" : [
        ]
      },
      {
        "id" : "25dcfdd6-5d87-4242-9a55-5d7587df868b",
        "parentId" : "5bc75cb8-2485-4e0f-bf70-b9059d718452",
        "authorId" : "e565cd52-ec85-4a5f-b0dc-20896008843b",
        "body" : "@btesser, I suppose the only downside is redundancy, since the compiler already knows what type it is.  If you are using generics, for example, adding the non-generic type annotation makes your autocompletion less useful since `IGridColumn` uses the `<any>` type for the generic argument.  I could just as easily add the non-generic type annotation back, though, if you think there is value in keeping it there.  Or I can add things in the body of the function that prove that the types are flowing in correctly.\n",
        "createdAt" : "2015-09-28T17:19:36Z",
        "updatedAt" : "2015-09-28T22:14:17Z",
        "lastEditedBy" : "e565cd52-ec85-4a5f-b0dc-20896008843b",
        "tags" : [
        ]
      },
      {
        "id" : "823beddf-4add-443c-80ce-77446b468446",
        "parentId" : "5bc75cb8-2485-4e0f-bf70-b9059d718452",
        "authorId" : "5bf195d0-88f2-4eea-82af-ea18ace9da2d",
        "body" : "Ok.  That makes sense.\n",
        "createdAt" : "2015-09-28T18:17:03Z",
        "updatedAt" : "2015-09-28T22:14:17Z",
        "lastEditedBy" : "5bf195d0-88f2-4eea-82af-ea18ace9da2d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7b029e1c225ac74cad334ffbb411b7c27675021",
    "line" : null,
    "diffHunk" : "@@ -1,1 +63,67 @@columnDef.headerTooltip = 'The Tooltip';\ncolumnDef.headerTooltip = (col) => {\n    //type of col flows in properly\n    return col.displayName;\n};"
  },
  {
    "id" : "e62473b5-ccdc-422f-bc46-f4ed29a862ea",
    "prId" : 5972,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "140835ac-76b1-4c78-8e67-d3e9a8b16352",
        "parentId" : null,
        "authorId" : "e565cd52-ec85-4a5f-b0dc-20896008843b",
        "body" : "@btesser, This is the potential harm when explicitly adding the type annotations on functions like these. You lose the generic type and could potentially introduce an error.  In this case the error is not as easily detected when searching the code than if you had made a cast to `any`.  IMHO it's best to let the function parameters get types automatically.\n",
        "createdAt" : "2015-09-28T17:47:53Z",
        "updatedAt" : "2015-09-28T22:14:17Z",
        "lastEditedBy" : "e565cd52-ec85-4a5f-b0dc-20896008843b",
        "tags" : [
        ]
      },
      {
        "id" : "660b62b3-62d2-4d62-9150-5e16abcee880",
        "parentId" : "140835ac-76b1-4c78-8e67-d3e9a8b16352",
        "authorId" : "5bf195d0-88f2-4eea-82af-ea18ace9da2d",
        "body" : "Ok that makes sense.  Thanks for educating me :+1: \n",
        "createdAt" : "2015-09-28T18:13:34Z",
        "updatedAt" : "2015-09-28T22:14:17Z",
        "lastEditedBy" : "5bf195d0-88f2-4eea-82af-ea18ace9da2d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7b029e1c225ac74cad334ffbb411b7c27675021",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +21,25 @@columnDef.cellTooltip = 'blah';\ncolumnDef.cellTooltip = function (gridRow: uiGrid.IGridRow, gridCol: uiGrid.IGridColumn) {\n    return `${gridRow.entity.unknownProperty}-${gridCol.displayName}`;\n};\ncolumnDef.displayName = 'Jumper';"
  },
  {
    "id" : "8a7a6935-4421-44e4-adde-cff77c263f6e",
    "prId" : 5972,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f23b268-90f7-463b-b7eb-e6ee9c25c798",
        "parentId" : null,
        "authorId" : "42b9b877-c422-4845-9d72-131f95c22e20",
        "body" : "And this be `var selectedGridRows: Array<uiGrid.IGridRowOf<IMyEntity>> = gridApi.selection.getSelectedGridRows();` ?\n",
        "createdAt" : "2015-09-28T19:11:19Z",
        "updatedAt" : "2015-09-28T22:14:17Z",
        "lastEditedBy" : "42b9b877-c422-4845-9d72-131f95c22e20",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7b029e1c225ac74cad334ffbb411b7c27675021",
    "line" : null,
    "diffHunk" : "@@ -1,1 +130,134 @@\nvar selectedRowEntities: Array<IMyEntity> = gridApi.selection.getSelectedRows();\nvar selectedGridRows: Array<uiGrid.IGridRow> = gridApi.selection.getSelectedGridRows();"
  }
]