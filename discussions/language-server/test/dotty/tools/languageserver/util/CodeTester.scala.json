[
  {
    "id" : "9a2c9829-b384-4050-a4cb-086d361824dd",
    "prId" : 5484,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5484#pullrequestreview-177210182",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70f40345-8396-4046-a2f7-024d82932b26",
        "parentId" : null,
        "authorId" : "e625ae4c-fba4-4c8f-9728-a669f65f1bcb",
        "body" : "The other \"actions\" in this file usually do\r\n```scala\r\ndef foo(marker: CodeMarker, expected: ...) = doAction(new Foo(marker, expected))\r\n```\r\n\r\nAny reason for not following the same pattern?",
        "createdAt" : "2018-11-21T07:06:11Z",
        "updatedAt" : "2018-11-21T16:05:17Z",
        "lastEditedBy" : "e625ae4c-fba4-4c8f-9728-a669f65f1bcb",
        "tags" : [
        ]
      },
      {
        "id" : "87a3cb25-a337-4871-a2de-d6a7fff4d019",
        "parentId" : "70f40345-8396-4046-a2f7-024d82932b26",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Mostly because there's no action (request sent to the server) involved here, the request is \"didOpen\" but it's done implicitly. But if you think this could be refactored, please do!",
        "createdAt" : "2018-11-21T12:17:05Z",
        "updatedAt" : "2018-11-21T16:05:17Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "d180287105e88ac1a1596e6b0b57c0d1b5073221",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +57,61 @@\n    this\n  }\n\n  /**"
  },
  {
    "id" : "db9db61d-1f51-4029-a4f6-3fecca7cfaf8",
    "prId" : 5484,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5484#pullrequestreview-177280898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a545e02-f1b7-4371-8788-f43b0d4fa2e0",
        "parentId" : null,
        "authorId" : "e625ae4c-fba4-4c8f-9728-a669f65f1bcb",
        "body" : "Instead of reverse, I'd suggest sorting the diagnostics by their `Location`:\r\n```scala\r\n  private implicit val LocationOrdering: Ordering[Location] = Ordering.by(_.toString)\r\n```",
        "createdAt" : "2018-11-21T07:13:28Z",
        "updatedAt" : "2018-11-21T16:05:17Z",
        "lastEditedBy" : "e625ae4c-fba4-4c8f-9728-a669f65f1bcb",
        "tags" : [
        ]
      },
      {
        "id" : "b57c42f8-17c6-467d-8af3-7b1d982f32e1",
        "parentId" : "0a545e02-f1b7-4371-8788-f43b0d4fa2e0",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "the reverse is here to sort the list of PublishDiagnosticsParams (every time the server calls publishDiagnostics, something gets appended to that list), but we could sort the list of diagnostics by location indeed.",
        "createdAt" : "2018-11-21T12:20:07Z",
        "updatedAt" : "2018-11-21T16:05:17Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "9f988fcb-1a65-4bdb-aa32-cc4fbde729e1",
        "parentId" : "0a545e02-f1b7-4371-8788-f43b0d4fa2e0",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "On second thoughts, this is a bit annoying to do since it requires constructing a new instance of PublishDiagnosticsParams, so I'll leave it in the original order for now.",
        "createdAt" : "2018-11-21T14:59:55Z",
        "updatedAt" : "2018-11-21T16:05:17Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "d180287105e88ac1a1596e6b0b57c0d1b5073221",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +52,56 @@    val expectedParams = marker.toPublishDiagnosticsParams(expected.toList.map(toDiagnostic))\n    // Find the latest published diagnostics for the current source file\n    val actualParams = testServer.client.diagnostics.get.reverse.find(_.getUri == marker.uri)\n      .getOrElse(throw new Exception(s\"No published diagnostics for ${marker.uri}\"))\n    assertEquals(expectedParams, actualParams)"
  }
]