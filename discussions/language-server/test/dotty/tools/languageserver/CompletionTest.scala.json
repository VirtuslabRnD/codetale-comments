[
  {
    "id" : "92c3b7bc-edfa-4369-936e-6746349cba85",
    "prId" : 12029,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/12029#pullrequestreview-632161311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25488538-5d33-4289-b246-1d6b7eb75d2a",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Might be an orthogonal issue: for a module, it is more friendly to show `java.util.HashMap` instead of `java.util.HashMap$`.\r\n\r\nIt can be addressed in a different PR.",
        "createdAt" : "2021-04-08T16:42:46Z",
        "updatedAt" : "2021-04-08T16:43:57Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "83951f59-80a0-4b79-8ff3-2992f09fac42",
        "parentId" : "25488538-5d33-4289-b246-1d6b7eb75d2a",
        "authorId" : "5245b2da-2ff9-4276-9b2e-e1be5771149e",
        "body" : "Yeah, but that's because of how `.show` works by default. An even more enigmatic example is \r\n```\r\ncode\"class Foo { val foo: Runn${m1} }\".withSource\r\n      .completion(m1, Set(\r\n        (\"Runnable\", Class, \"java.lang.Runnable\"),\r\n        (\"Runnable\", Module, \"Runnable$\")\r\n      ))\r\n```\r\nbut that's definitely a separate issue",
        "createdAt" : "2021-04-09T08:19:11Z",
        "updatedAt" : "2021-04-09T08:19:12Z",
        "lastEditedBy" : "5245b2da-2ff9-4276-9b2e-e1be5771149e",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ff472f42a911390e0ac31b7095079d7bd9c839c",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +287,291 @@                          (\"HashMap\", Module, \"java.util.HashMap$\"),\n                          (\"HashMap2\", Class, \"java.util.HashMap\"),\n                          (\"HashMap2\", Module, \"java.util.HashMap$\")))\n  }\n"
  },
  {
    "id" : "6db0cb7d-5103-4b95-9848-e3b63f689c6b",
    "prId" : 11187,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/11187#pullrequestreview-579047350",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92b56c80-f30c-4499-a290-b7ebeeb37cb8",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Is it an accidenal change? The same question for the change below.",
        "createdAt" : "2021-01-26T13:45:26Z",
        "updatedAt" : "2021-02-22T14:27:51Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "33be32e6-2ec1-4aa0-b27a-e78e3526fdd5",
        "parentId" : "92b56c80-f30c-4499-a290-b7ebeeb37cb8",
        "authorId" : "5245b2da-2ff9-4276-9b2e-e1be5771149e",
        "body" : "This is intentional. This is actually a new test case. The old one got copied below and renamed to `completeExtensionMethodFromExtensionWithTypeParameter` because now we need to distinguish between the two",
        "createdAt" : "2021-01-29T08:48:32Z",
        "updatedAt" : "2021-02-22T14:27:51Z",
        "lastEditedBy" : "5245b2da-2ff9-4276-9b2e-e1be5771149e",
        "tags" : [
        ]
      }
    ],
    "commit" : "d09fcc2726ed5e8b6fa2cf86b596bc8b4cab572e",
    "line" : 303,
    "diffHunk" : "@@ -1,1 +554,558 @@          |extension (foo: Foo.type) def xxxx[A]: Int = 1\n          |object Main { Foo.xx${m1} }\"\"\".withSource\n      .completion(m1, Set((\"xxxx\", Method, \"[A] => Int\")))\n  }\n"
  }
]