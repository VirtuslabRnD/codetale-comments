[
  {
    "id" : "ac122f7c-12ab-4994-935b-ba144d5b42ff",
    "prId" : 8,
    "prUrl" : "https://github.com/scalameta/metals/pull/8#pullrequestreview-74360984",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f184918c-2b2e-4b40-9338-4450e0a7efb3",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "I would call this `symbolIndexer`. `symbol` is a bit confusing, given the context",
        "createdAt" : "2017-11-06T09:44:20Z",
        "updatedAt" : "2017-11-06T20:58:35Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a154d42708a1a97e34a23a7c79a153d4ee52f44b",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +39,43 @@    ScalametaLanguageServer.semanticdbStream\n  val buffers: Buffers = Buffers()\n  val symbol: SymbolIndexer =\n    SymbolIndexer(semanticdbPublisher, logger, connection, buffers)\n  val scalafix: Linter ="
  },
  {
    "id" : "4eb424cd-c2cd-4add-a863-eaf42f79beb3",
    "prId" : 8,
    "prUrl" : "https://github.com/scalameta/metals/pull/8#pullrequestreview-74360984",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88ebcf5f-64d3-4c0e-a01d-d152ef8ab5d2",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "Can't we just fallback to the default config? I believe that's what most plugins do, right?",
        "createdAt" : "2017-11-06T09:47:42Z",
        "updatedAt" : "2017-11-06T20:58:35Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a154d42708a1a97e34a23a7c79a153d4ee52f44b",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +120,124 @@        List(TextEdit(fullDocumentRange, formattedContent))\n      } else {\n        connection.showMessage(MessageType.Info, s\"Missing $config\")\n        Nil\n      }"
  },
  {
    "id" : "841da4ac-7d53-412a-9edd-20083a4b576a",
    "prId" : 8,
    "prUrl" : "https://github.com/scalameta/metals/pull/8#pullrequestreview-74575848",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "150b3fe6-b5f7-4c31-bdfa-1a1bc3eb18aa",
        "parentId" : null,
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "We might want to do this on parallel, could be a lot of semanticdb files.",
        "createdAt" : "2017-11-06T19:53:23Z",
        "updatedAt" : "2017-11-06T20:58:35Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "b8514223-fed5-4921-aa5a-8018034241d5",
        "parentId" : "150b3fe6-b5f7-4c31-bdfa-1a1bc3eb18aa",
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "right, that makes sense -> #11 ",
        "createdAt" : "2017-11-06T21:55:58Z",
        "updatedAt" : "2017-11-06T21:55:58Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a154d42708a1a97e34a23a7c79a153d4ee52f44b",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +66,70 @@          Files.isRegularFile(path) && path.toString.endsWith(\".semanticdb\")\n      )\n      .forEach(path => semanticdbSubscriber.onNext(AbsolutePath(path)))\n  }\n"
  },
  {
    "id" : "e9d73b01-6c62-493c-9429-8e4735c7c62c",
    "prId" : 4,
    "prUrl" : "https://github.com/scalameta/metals/pull/4#pullrequestreview-74286462",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a16df371-f4e7-488b-a897-e14b5342d4d4",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "lol, I spent su much time trying to get this right and I didn't think of this trick üëç ",
        "createdAt" : "2017-11-05T16:37:38Z",
        "updatedAt" : "2017-11-05T16:52:29Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb7f2b68fd2401d20d274b55fec49292737e0614",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +71,75 @@      val fullDocumentRange = Range(\n        start = Position(0, 0),\n        end = Position(Int.MaxValue, Int.MaxValue)\n      )\n      val formattedContent = scalafmt.format("
  }
]