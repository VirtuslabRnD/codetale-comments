[
  {
    "id" : "dd28147a-0974-438e-80a9-c9bb1c8e5eab",
    "prId" : 22381,
    "prUrl" : "https://github.com/nodejs/node/pull/22381#pullrequestreview-150282550",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63a51474-076c-492d-b4f1-1aefd98172ad",
        "parentId" : null,
        "authorId" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "body" : "Perhaps call this `resolveDynamicImport`?",
        "createdAt" : "2018-08-26T12:58:56Z",
        "updatedAt" : "2018-10-06T22:33:46Z",
        "lastEditedBy" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "tags" : [
        ]
      },
      {
        "id" : "47b3f579-1892-44a6-8a61-607f5690ce74",
        "parentId" : "63a51474-076c-492d-b4f1-1aefd98172ad",
        "authorId" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "body" : "Or `loadDynamicImport` if resolve is misleading. The adverb form just feels a bit clumsy for some reason here.",
        "createdAt" : "2018-08-26T13:03:01Z",
        "updatedAt" : "2018-10-06T22:33:46Z",
        "lastEditedBy" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "tags" : [
        ]
      },
      {
        "id" : "fdde3651-4e5f-4289-813c-f1fea8b53095",
        "parentId" : "63a51474-076c-492d-b4f1-1aefd98172ad",
        "authorId" : "af965d24-c34b-4c03-8ff1-5a5da6036269",
        "body" : "I agree the name is a bit over the top but I haven't been able to come up with anything better ",
        "createdAt" : "2018-08-26T13:47:11Z",
        "updatedAt" : "2018-10-06T22:33:46Z",
        "lastEditedBy" : "af965d24-c34b-4c03-8ff1-5a5da6036269",
        "tags" : [
        ]
      },
      {
        "id" : "260fbb08-f28a-4231-ae18-3d1c6d8ca7dc",
        "parentId" : "63a51474-076c-492d-b4f1-1aefd98172ad",
        "authorId" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "body" : "How about just `dynamicImport`?",
        "createdAt" : "2018-08-27T13:17:22Z",
        "updatedAt" : "2018-10-06T22:33:46Z",
        "lastEditedBy" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "tags" : [
        ]
      },
      {
        "id" : "0b2a17fc-bf38-478c-8f22-7c1ddd48bff6",
        "parentId" : "63a51474-076c-492d-b4f1-1aefd98172ad",
        "authorId" : "4b71aeaa-5376-4bc0-be81-0ae8df38206e",
        "body" : "I'd point out that the name is inherited from the spec proposal, and thus consistent with the origin of the name `initializeImportMeta` (which also came from the spec proposal).",
        "createdAt" : "2018-08-28T19:10:28Z",
        "updatedAt" : "2018-10-06T22:33:46Z",
        "lastEditedBy" : "4b71aeaa-5376-4bc0-be81-0ae8df38206e",
        "tags" : [
        ]
      },
      {
        "id" : "fd529546-5b9b-4b8c-9083-5e7d29ef5cec",
        "parentId" : "63a51474-076c-492d-b4f1-1aefd98172ad",
        "authorId" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "body" : "Good point, sure.",
        "createdAt" : "2018-08-28T19:33:05Z",
        "updatedAt" : "2018-10-06T22:33:46Z",
        "lastEditedBy" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c37df779cf944b5666fc72e2a27fbf2e745881f",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +172,176 @@    module)`, where `meta` is the `import.meta` object in the `Module`, and\n    `module` is this `vm.SourceTextModule` object.\n  * `importModuleDynamically` {Function} Called during evaluation of this\n    module when `import()` is called. This function has the signature\n    `(specifier, module)` where `specifier` is the specifier passed to"
  },
  {
    "id" : "91b7f5c7-1bda-43d1-a523-0fc8a9d826a9",
    "prId" : 35692,
    "prUrl" : "https://github.com/nodejs/node/pull/35692#pullrequestreview-516273183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0efc5cc-9250-4410-91cb-3cc062c87ca5",
        "parentId" : null,
        "authorId" : "84392f84-0848-409d-9e1e-0627d211cf90",
        "body" : "The word `interrupted` here is the one thing I didn't modify for consistency. The other six instances say `terminated`. I wasn't completely sure the choice wasn't intentional or which word was better than the other. @nodejs/vm @nodejs/documentation ",
        "createdAt" : "2020-10-17T11:52:10Z",
        "updatedAt" : "2020-10-24T12:16:04Z",
        "lastEditedBy" : "84392f84-0848-409d-9e1e-0627d211cf90",
        "tags" : [
        ]
      },
      {
        "id" : "e57d0345-e55a-47e3-bbec-4d9f2c43281f",
        "parentId" : "f0efc5cc-9250-4410-91cb-3cc062c87ca5",
        "authorId" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "body" : "I think interrupt is a good word, especially given that thatâ€™s what `SIGINT` stands for :)",
        "createdAt" : "2020-10-18T18:02:27Z",
        "updatedAt" : "2020-10-24T12:16:04Z",
        "lastEditedBy" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "tags" : [
        ]
      },
      {
        "id" : "21bbe6a7-a1fe-4ff3-b0fe-89f611a3c644",
        "parentId" : "f0efc5cc-9250-4410-91cb-3cc062c87ca5",
        "authorId" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "body" : "Should it be `interrupted` on the other six instances then? I think consistency would be good, and @addaleax  makes a good point.",
        "createdAt" : "2020-10-24T08:10:30Z",
        "updatedAt" : "2020-10-24T12:16:04Z",
        "lastEditedBy" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "tags" : [
        ]
      },
      {
        "id" : "220baf89-051b-4977-9bf4-96c63fd7b762",
        "parentId" : "f0efc5cc-9250-4410-91cb-3cc062c87ca5",
        "authorId" : "84392f84-0848-409d-9e1e-0627d211cf90",
        "body" : "> Should it be `interrupted` on the other six instances then?\r\n\r\nI'll land this as-is and open a follow-on PR about that.",
        "createdAt" : "2020-10-24T12:14:25Z",
        "updatedAt" : "2020-10-24T12:16:04Z",
        "lastEditedBy" : "84392f84-0848-409d-9e1e-0627d211cf90",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bf213936596250b7531e01c564a15d290eb38eb",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +516,520 @@    event that have been attached via `process.on('SIGINT')` are disabled\n    during script execution, but continue to work after that. If execution\n    is interrupted, an [`Error`][] is thrown. **Default:** `false`.\n* Returns: {Promise}\n"
  }
]