[
  {
    "id" : "5e836d41-0e48-45be-a1c1-f4a9fc2254bf",
    "prId" : 22679,
    "prUrl" : "https://github.com/nodejs/node/pull/22679#pullrequestreview-152116174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1062df4d-2786-44d3-93aa-4f9ef565612b",
        "parentId" : null,
        "authorId" : "84392f84-0848-409d-9e1e-0627d211cf90",
        "body" : "Micro-nit: Is `immediately` meaningful here? Would it be better without it?",
        "createdAt" : "2018-09-04T01:34:27Z",
        "updatedAt" : "2018-09-07T00:12:23Z",
        "lastEditedBy" : "84392f84-0848-409d-9e1e-0627d211cf90",
        "tags" : [
        ]
      },
      {
        "id" : "2f8ed98d-66a9-4355-bf59-3b86986425a6",
        "parentId" : "1062df4d-2786-44d3-93aa-4f9ef565612b",
        "authorId" : "84392f84-0848-409d-9e1e-0627d211cf90",
        "body" : "Instead of `immediately`, might `necessarily` be better?",
        "createdAt" : "2018-09-04T01:34:43Z",
        "updatedAt" : "2018-09-07T00:12:23Z",
        "lastEditedBy" : "84392f84-0848-409d-9e1e-0627d211cf90",
        "tags" : [
        ]
      },
      {
        "id" : "54c898ac-d9f6-47ff-9ff7-2324dc9fd1bd",
        "parentId" : "1062df4d-2786-44d3-93aa-4f9ef565612b",
        "authorId" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "body" : "I copied the text from the `pause()` docs for consistency. That said, I'm open to using any wording here if you feel strongly enough.",
        "createdAt" : "2018-09-04T11:54:22Z",
        "updatedAt" : "2018-09-07T00:12:23Z",
        "lastEditedBy" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "tags" : [
        ]
      },
      {
        "id" : "dac611f5-5610-49ef-9156-38af5048d8c8",
        "parentId" : "1062df4d-2786-44d3-93aa-4f9ef565612b",
        "authorId" : "84392f84-0848-409d-9e1e-0627d211cf90",
        "body" : "It’s a nit. I don’t feel strongly.",
        "createdAt" : "2018-09-04T15:12:42Z",
        "updatedAt" : "2018-09-07T00:12:23Z",
        "lastEditedBy" : "84392f84-0848-409d-9e1e-0627d211cf90",
        "tags" : [
        ]
      }
    ],
    "commit" : "83c1ba3180f4f16e28e4eeba49bed08c8a35befd",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +196,200 @@the `'close'` event will be emitted.\n\nCalling `rl.close()` does not immediately stop other events (including `'line'`)\nfrom being emitted by the `readline.Interface` instance.\n"
  },
  {
    "id" : "1caefd12-f0c8-4a35-bfa6-809db45bc145",
    "prId" : 28425,
    "prUrl" : "https://github.com/nodejs/node/pull/28425#pullrequestreview-254535545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ba86acd-b4cf-4b47-8e6c-4980878d2ec0",
        "parentId" : null,
        "authorId" : "7ca4a4d6-a7c6-4006-8a47-9b9ffb7f09ed",
        "body" : "There are two more `` `for`-`await`-`of` `` at the end of the doc, in \"Example: Read File Stream Line-by-Line\" section.",
        "createdAt" : "2019-06-26T10:58:02Z",
        "updatedAt" : "2019-06-27T17:52:35Z",
        "lastEditedBy" : "7ca4a4d6-a7c6-4006-8a47-9b9ffb7f09ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "6045fbbb5ee970809c92569e201895ef6345ed48",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +323,327 @@Create an `AsyncIterator` object that iterates through each line in the input\nstream as a string. This method allows asynchronous iteration of\n`readline.Interface` objects through `for await...of` loops.\n\nErrors in the input stream are not forwarded."
  }
]