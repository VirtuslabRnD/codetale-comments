[
  {
    "id" : "a58f1e95-9ed2-4f4f-b901-f307087badf1",
    "prId" : 9322,
    "prUrl" : "https://github.com/nodejs/node/pull/9322#pullrequestreview-6639537",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e36ab02-e49f-43d4-9096-1e0a28b35da3",
        "parentId" : null,
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "> - {Object} A pipe representing the IPC channel to the child process.\n\nNot needed here, the style of docs is different in child_process and process?\n",
        "createdAt" : "2016-11-01T15:11:25Z",
        "updatedAt" : "2016-11-02T00:38:18Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      },
      {
        "id" : "46087d11-a80f-4e36-873d-b52b0f4441b3",
        "parentId" : "2e36ab02-e49f-43d4-9096-1e0a28b35da3",
        "authorId" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "body" : "Yes, I noticed that the style of the docs in this file are slightly different. I think a good first contribution would be to bring additional consistency to this file. For example, see https://nodejs.org/api/process.html#process_process_connected vs. https://nodejs.org/api/child_process.html#child_process_child_connected.\n",
        "createdAt" : "2016-11-01T15:45:59Z",
        "updatedAt" : "2016-11-02T00:38:18Z",
        "lastEditedBy" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dcb7f3826a360f7cac79a58833dc4c037f67e27",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +513,517 @@added: REPLACEME\n-->\n\nIf the Node.js process was spawned with an IPC channel (see the\n[Child Process][] documentation), the `process.channel`"
  },
  {
    "id" : "280fc328-c71b-4129-8431-66261f12b457",
    "prId" : 10884,
    "prUrl" : "https://github.com/nodejs/node/pull/10884#pullrequestreview-21858943",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90df97d5-9db2-46bf-b7e3-645ddef08750",
        "parentId" : null,
        "authorId" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "body" : "It might be good to mention that `synchronous` writes correspond to blocking behaviour?",
        "createdAt" : "2017-01-19T07:55:31Z",
        "updatedAt" : "2017-02-16T17:14:18Z",
        "lastEditedBy" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "tags" : [
        ]
      },
      {
        "id" : "f0e774a2-f710-4371-bb0d-4899457e2d90",
        "parentId" : "90df97d5-9db2-46bf-b7e3-645ddef08750",
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "Agreed",
        "createdAt" : "2017-02-06T21:20:14Z",
        "updatedAt" : "2017-02-16T17:14:18Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      },
      {
        "id" : "060368ed-3413-45e6-b253-3d74347039d5",
        "parentId" : "90df97d5-9db2-46bf-b7e3-645ddef08750",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "Note that we don't do this in any other place where we wrap system calls synchronously: https://nodejs.org/api/fs.html#fs_fs_writefilesync_file_data_options for example, not sure why its so necessary here, but I'm willing.\r\n\r\nWhether a sync call blocks or not depends on the O/S, the write buffer sizes, whether whatever process on the other side of the pipe/pty/whatever is reading data, etc. We can't just say that sync calls block, because that isn't true.\r\n\r\nHow about\r\n\r\n> If the write blocks, the synchronous call won't return until it unblocks.\r\n\r\nIf not, perhaps you can provide some text?",
        "createdAt" : "2017-02-06T21:54:13Z",
        "updatedAt" : "2017-02-16T17:14:18Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      },
      {
        "id" : "dec14e42-3e04-4a68-a029-531494334809",
        "parentId" : "90df97d5-9db2-46bf-b7e3-645ddef08750",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "@addaleax If you are commenting top-to-bottom, you wouldn't notice, but this statement exists already, just a couple lines down:\r\n\r\n***Warning***: Synchronous writes block the event loop until the write has completed.",
        "createdAt" : "2017-02-14T20:42:53Z",
        "updatedAt" : "2017-02-16T17:14:18Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ba00af2170e58e29ac985038b335253fdd39d9f",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +1554,1558 @@3. They will never emit the [`'finish'`][] event.\n4. Writes may be synchronous depending on the what the stream is connected to\n   and whether the system is Windows or Unix:\n   - Files: *synchronous* on Windows and Linux\n   - TTYs (Terminals): *asynchronous* on Windows, *synchronous* on Unix"
  },
  {
    "id" : "f6aa354a-8872-4ca2-94bc-045a5cb0819a",
    "prId" : 10884,
    "prUrl" : "https://github.com/nodejs/node/pull/10884#pullrequestreview-22306060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21f12367-91e7-4ee3-ac26-17a66ee606a4",
        "parentId" : null,
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "I don't think so. They are the way they are because of factors outside the node process.\r\n\r\nIdeally they would all be synchronous I think. That is entirely impossible to implement Windows consoles* and also has other problems with pipes. (But Windows pipes have to block regardless.)\r\n\r\n*There is no end-of-message notification IIRC",
        "createdAt" : "2017-02-06T21:25:25Z",
        "updatedAt" : "2017-02-16T17:14:18Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      },
      {
        "id" : "4369d99c-d251-4993-82b3-2e2207e79477",
        "parentId" : "21f12367-91e7-4ee3-ac26-17a66ee606a4",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "@Fishrock123  Your statement above is exactly why the it is ***partly*** for historical reasons. In your opinion pipes would be sync on Unix, but they aren't. How would you care to explain this other than \"for historical reasons... backwards compat\"? Also, note that I covered your point of view in the sentence below the one you comment on: \"expected by some users\", and that I even elaborated on why its expected with a whole paragraph.  Would you like to propose some other explaination of why unix and windows are the exact opposites of each other for consoles and pipes? If one is the right way, the other is the wrong way and we have to say something about why this is.",
        "createdAt" : "2017-02-06T22:02:43Z",
        "updatedAt" : "2017-02-16T17:14:18Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      },
      {
        "id" : "face3782-8f38-4f6a-91a0-7514867d65ca",
        "parentId" : "21f12367-91e7-4ee3-ac26-17a66ee606a4",
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "Yes. Pipes on both Windows and Unix are wrong but neither is entirely our fault.\r\n\r\nBlocking in a pipe means the process may stall forever if the downstream consumer stalls. That is not good and why pipes are (should be) async. @piscisaureus or @bnoordhuis may have more info.\r\n\r\nIt is my impression that making pipes on windows does not work correctly. See https://github.com/nodejs/node-v0.x-archive/issues/3584 and https://github.com/nodejs/node/commit/20176a98416353d4596900793f739d5ebf4f0ee1, although after reading some of the comments I am less confident about that. Maybe we could make pipes async on windows... again?\r\n\r\nNote of course, that being async in a pipe has most of the caveats that being async in a terminal does, so it's not really good either.",
        "createdAt" : "2017-02-06T23:20:22Z",
        "updatedAt" : "2017-02-16T17:14:18Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      },
      {
        "id" : "9eb2a921-bc5f-4155-81ed-dec503edc92a",
        "parentId" : "21f12367-91e7-4ee3-ac26-17a66ee606a4",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "@Fishrock123\r\n\r\n> How would you care to explain this other than \"for historical reasons... backwards compat\"?\r\n\r\n> Would you like to propose some other explaination of why unix and windows are the exact opposites of each other for consoles and pipes? If one is the right way, the other is the wrong way and we have to say something about why this is\r\n\r\n",
        "createdAt" : "2017-02-14T20:45:43Z",
        "updatedAt" : "2017-02-16T17:14:18Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      },
      {
        "id" : "eec08932-6b29-4d77-b733-b8a13775eb12",
        "parentId" : "21f12367-91e7-4ee3-ac26-17a66ee606a4",
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "Again:\r\n\r\n> Maybe we could make pipes async on windows... again?\r\n\r\nI don't actually have an answer at the current time. I suppose the wording is fine.",
        "createdAt" : "2017-02-14T23:40:12Z",
        "updatedAt" : "2017-02-16T17:14:18Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      },
      {
        "id" : "237f0f37-c6bd-4cb0-855d-72b5be28a30a",
        "parentId" : "21f12367-91e7-4ee3-ac26-17a66ee606a4",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "This is a doc PR, I'm not about to change how the system works in it, but I'm :100: on aligning Windows and *nix platforms.",
        "createdAt" : "2017-02-16T17:04:32Z",
        "updatedAt" : "2017-02-16T17:14:18Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ba00af2170e58e29ac985038b335253fdd39d9f",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +1559,1563 @@   - Pipes (and sockets): *synchronous* on Windows, *asynchronous* on Unix\n\nThese behaviours are partly for historical reasons, as changing them would\ncreate backwards incompatibility, but they are also expected by some users.\n"
  },
  {
    "id" : "f2be21df-4b21-4829-8b8f-8fc8c55defa3",
    "prId" : 10884,
    "prUrl" : "https://github.com/nodejs/node/pull/10884#pullrequestreview-21893613",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1cad69e0-d656-413c-842f-b2c2b4f0c63a",
        "parentId" : null,
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "Link to `isTTY`?",
        "createdAt" : "2017-02-06T21:26:59Z",
        "updatedAt" : "2017-02-16T17:14:18Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      },
      {
        "id" : "504f19a7-3efa-40be-9d97-98b18a8891e9",
        "parentId" : "1cad69e0-d656-413c-842f-b2c2b4f0c63a",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "I tried, but the TTY docs don't describe it as a property, its only mentioned in the text, so that's the most specific link until the TTY docs get reworked.  https://nodejs.org/api/tty.html#tty_tty",
        "createdAt" : "2017-02-06T22:11:58Z",
        "updatedAt" : "2017-02-16T17:14:18Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      },
      {
        "id" : "29fe3c8a-1bb8-410d-98bb-a7a529320227",
        "parentId" : "1cad69e0-d656-413c-842f-b2c2b4f0c63a",
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "ah, ok",
        "createdAt" : "2017-02-14T23:40:26Z",
        "updatedAt" : "2017-02-16T17:14:18Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ba00af2170e58e29ac985038b335253fdd39d9f",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +1576,1580 @@the process output streams.\n\nTo check if a stream is connected to a [TTY][] context, check the `isTTY`\nproperty.\n"
  }
]