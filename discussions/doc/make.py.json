[
  {
    "id" : "301ccd96-b4b2-41ff-b4d9-f8788152c2c8",
    "prId" : 5124,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "731e0e95-f498-478d-a078-2a45a9fba8a8",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "this is covered by `make doc` already.\n",
        "createdAt" : "2013-10-06T17:54:19Z",
        "updatedAt" : "2013-10-15T17:26:56Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "2add4a2f-4cbd-44a9-8244-53d1c01b9a2b",
        "parentId" : "731e0e95-f498-478d-a078-2a45a9fba8a8",
        "authorId" : "95fe324c-e973-4cca-9b8d-19248c6f5e92",
        "body" : "I'm on windows :-) And it doesn't seem to be in the makefile (at least `make doc` has no compile step)\n",
        "createdAt" : "2013-10-06T18:12:29Z",
        "updatedAt" : "2013-10-15T17:26:56Z",
        "lastEditedBy" : "95fe324c-e973-4cca-9b8d-19248c6f5e92",
        "tags" : [
        ]
      },
      {
        "id" : "80f0bfb3-5c19-4fb3-afea-dc7a73ba8859",
        "parentId" : "731e0e95-f498-478d-a078-2a45a9fba8a8",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "does this make it trigger on any attempt to build?\n",
        "createdAt" : "2013-10-06T18:13:57Z",
        "updatedAt" : "2013-10-15T17:26:56Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "8d913732-453d-4012-9427-99a79e4f37e7",
        "parentId" : "731e0e95-f498-478d-a078-2a45a9fba8a8",
        "authorId" : "95fe324c-e973-4cca-9b8d-19248c6f5e92",
        "body" : "Not that I know. I simple tried to get the doc build working (`cd doc; python make.py html` -> error) and had to C&P from the `build_prev` function to the commandline and was fed up after the second time :-) Now its `cd doc; python make.py build_pandas; python make.py html`\n",
        "createdAt" : "2013-10-06T18:17:07Z",
        "updatedAt" : "2013-10-15T17:26:56Z",
        "lastEditedBy" : "95fe324c-e973-4cca-9b8d-19248c6f5e92",
        "tags" : [
        ]
      },
      {
        "id" : "c04b4007-c6d3-4092-ad01-5d51521c4473",
        "parentId" : "731e0e95-f498-478d-a078-2a45a9fba8a8",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "as long as this doesn't cause doc builds to wipe and rebuild pandas, it's fine with me.\n",
        "createdAt" : "2013-10-06T18:18:23Z",
        "updatedAt" : "2013-10-15T17:26:56Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea1a2d58ffbd2d758275ecfe5a171603e637df84",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +73,77 @@        raise SystemExit('Upload PDF to %s from %s failed' % (ver, doc_root))\n\ndef build_pandas():\n        os.chdir('..')\n        os.system('python setup.py clean')"
  },
  {
    "id" : "c392428e-a107-49c5-b24a-de9a39e143c5",
    "prId" : 15581,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/15581#pullrequestreview-26453510",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11b9d6d1-96dc-4ce9-8a8c-55f635e91616",
        "parentId" : null,
        "authorId" : "0963c8f8-6036-42f1-aab4-d848279755f3",
        "body" : "Am I seeing correctly that you are writing the file(s) each time after Sphinx is run?\r\nThis will force re-parsing each time you run it again ...\r\nOtherwise, Sphinx would simply skip over the already built (and up-to-date) notebooks.\r\n\r\nAlso, if somebody is editing the notebook(s) at the same time, this might cause problems, right?",
        "createdAt" : "2017-03-12T18:59:54Z",
        "updatedAt" : "2017-04-08T13:06:16Z",
        "lastEditedBy" : "0963c8f8-6036-42f1-aab4-d848279755f3",
        "tags" : [
        ]
      },
      {
        "id" : "41dc8072-16ee-41b8-b818-9aae581b4180",
        "parentId" : "11b9d6d1-96dc-4ce9-8a8c-55f635e91616",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "> Am I seeing correctly that you are writing the file(s) each time after Sphinx is run?\r\n\r\nIf nbsphinx is installed then `contents` will be empty. So we should only be writing stuff if `nbsphinx` is not installed, and sphinx isn't parsing these files anyway.\r\n\r\nFor editing the notebooks at the same time, I don't think there are any additional problems with this approach.",
        "createdAt" : "2017-03-12T19:03:32Z",
        "updatedAt" : "2017-04-08T13:06:16Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "8692ab15-48fd-4461-90d8-4568f5cf8d8e",
        "parentId" : "11b9d6d1-96dc-4ce9-8a8c-55f635e91616",
        "authorId" : "0963c8f8-6036-42f1-aab4-d848279755f3",
        "body" : "OK, I see now. It still seems a bit brutal to me and I'm generally skeptical about writing to the source directory, but I guess it's OK.",
        "createdAt" : "2017-03-12T19:50:49Z",
        "updatedAt" : "2017-04-08T13:06:16Z",
        "lastEditedBy" : "0963c8f8-6036-42f1-aab4-d848279755f3",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2f305616bc06a79a215fa92cf12113c099dadf8",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +128,132 @@    for nb, content in contents.items():\n        with open(nb, 'wt') as f:\n            f.write(content)\n\n"
  },
  {
    "id" : "97eff519-f9cb-4e45-b148-41c8b6633d96",
    "prId" : 20005,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20005#pullrequestreview-101350241",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a054cd1-c2b4-42e5-97d2-44c030a0f66a",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "This is purely stylistic",
        "createdAt" : "2018-03-05T22:17:18Z",
        "updatedAt" : "2018-03-05T23:24:47Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "84b8bcb0f2bc3e0154caca11ff401206481e5043",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +332,336 @@    argparser.add_argument('--python-path',\n                           type=str,\n                           default=os.path.dirname(DOC_PATH),\n                           help='path')\n    argparser.add_argument('-v', action='count', dest='verbosity', default=0,"
  },
  {
    "id" : "71121458-be7c-4051-992a-01607754bd09",
    "prId" : 24428,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24428#pullrequestreview-188448983",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77595ca3-7131-49fd-91bb-0cdbce7debe6",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "In the DocBuilder init, the default is 1. Make them both the same?\r\n\r\nWhat does a value of 0 do?",
        "createdAt" : "2018-12-29T13:06:32Z",
        "updatedAt" : "2018-12-29T15:53:20Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "76f4eafd-4871-4bb5-a0b9-b9356d81e52a",
        "parentId" : "77595ca3-7131-49fd-91bb-0cdbce7debe6",
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "Good point. with `0` I don't pass a `-j` value to `sphinx-build`, while with `1`, I pass `-j 1`, which is actually the same (unless sphinx changes its default).\r\n\r\nIt's a bit weird, because the `-j` parameter is supposed to make `sphinx-build` run with multiple cores, but it actually doesn't work, and the process takes exactly the same with `-j 1` and `-j 4`. It could make sense to remove this option, but I guess at some point sphinx will be fixed at some point, so I guess it's worth leaving it.\r\n\r\nI'm happy setting our default to `0` (use sphinx default), `1`, or `auto`, just let me know if you have a preference.\r\n\r\nI address your other comment.",
        "createdAt" : "2018-12-29T15:51:58Z",
        "updatedAt" : "2018-12-29T15:53:20Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "0559e0e9-8178-486c-b6a3-9d58d847b0a6",
        "parentId" : "77595ca3-7131-49fd-91bb-0cdbce7debe6",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Hmm I think multiple cores speeds things up for me, at least for a full doc build.",
        "createdAt" : "2018-12-30T12:56:49Z",
        "updatedAt" : "2018-12-30T12:56:49Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "18aefde0-1f9f-4fb4-b6f3-4a6002e9ccd4",
        "parentId" : "77595ca3-7131-49fd-91bb-0cdbce7debe6",
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "I checked it with `time` in Linux, 1 vs 4 cores, it took 17m30s in both cases (with a difference of less than 5 seconds between them). I tried it in the past with a different computer (also Linux) and was the same.",
        "createdAt" : "2018-12-30T19:45:17Z",
        "updatedAt" : "2018-12-30T19:45:17Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      }
    ],
    "commit" : "44069881f3315906eb39dfa0b49880e92964240c",
    "line" : 364,
    "diffHunk" : "@@ -1,1 +216,220 @@    argparser.add_argument('--num-jobs',\n                           type=int,\n                           default=0,\n                           help='number of jobs used by sphinx-build')\n    argparser.add_argument('--no-api',"
  },
  {
    "id" : "99e7f03c-4cf5-452c-b258-4b53e0d4c864",
    "prId" : 26752,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26752#pullrequestreview-247416377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b786c1f9-4d26-4189-b0fc-2348286c0e83",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do we already have a good error message to the user if the build fails?",
        "createdAt" : "2019-06-09T21:46:12Z",
        "updatedAt" : "2019-06-09T21:46:12Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f2e7432b-7536-4270-9f33-d5a6b837b6ab",
        "parentId" : "b786c1f9-4d26-4189-b0fc-2348286c0e83",
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "yes, we'll have the sphinx error message. In the example in the description, the end of the log will be:\r\n```\r\nRecursion error:\r\nmaximum recursion depth exceeded while calling a Python object\r\nThis can happen with very large or deeply nested source files.  You can carefully increase the default Python recursion limit of 1000 in conf.py with e.g.:\r\n    import sys; sys.setrecursionlimit(1500)\r\n```",
        "createdAt" : "2019-06-09T21:49:07Z",
        "updatedAt" : "2019-06-09T21:49:07Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab4af39e0aeafd26a509c39b903d7e9c02760b03",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +221,225 @@            os.remove(zip_fname)\n\n        if ret_code == 0:\n            if self.single_doc_html is not None:\n                self._open_browser(self.single_doc_html)"
  },
  {
    "id" : "e7ef9e20-0d4e-4813-a531-31aa802f87ea",
    "prId" : 30060,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30060#pullrequestreview-327212373",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cd77671-dc07-4092-8a34-fdc00bbd343e",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Don't need to redeclare this",
        "createdAt" : "2019-12-04T22:55:56Z",
        "updatedAt" : "2019-12-04T23:23:20Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "9e1a2d67-3da4-4f38-a2ff-d6f08f293919",
        "parentId" : "9cd77671-dc07-4092-8a34-fdc00bbd343e",
        "authorId" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "body" : "> Don't need to redeclare this\r\n\r\nIt's not redeclaration. one of the ```joined``` is with a space and one is without.\r\n\r\n```joined = \",\".join(cmds)```\r\n```joined = \", \".join(cmds)```",
        "createdAt" : "2019-12-04T22:59:27Z",
        "updatedAt" : "2019-12-04T23:23:20Z",
        "lastEditedBy" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae3a2e12ab301d2bc1005fd96351d7d2dc9d1c60",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +290,294 @@    )\n\n    joined = \", \".join(cmds)\n    argparser.add_argument(\n        \"command\", nargs=\"?\", default=\"html\", help=f\"command to run: {joined}\","
  },
  {
    "id" : "8385a1d9-1516-4236-9af6-318f6c8e678a",
    "prId" : 39364,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39364#pullrequestreview-588231349",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bbdcb9c-1b8c-476d-877e-7a5d97ca843f",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is `num_jobs` just a pandas thing? We use the `-j` flag for building the Cython / C extensions so wouldn't be opposed to just using that here for consistency as well, since it matches the Sphinx docs",
        "createdAt" : "2021-01-28T19:39:47Z",
        "updatedAt" : "2021-02-16T03:19:38Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "a63b96ed-0a1a-4741-a753-fadf8867e587",
        "parentId" : "0bbdcb9c-1b8c-476d-877e-7a5d97ca843f",
        "authorId" : "bb0734a7-5595-4af0-839d-5c821cc0eb2a",
        "body" : "`num_jobs` was there before; I didn't mess with the name. I like that `num_jobs` is more descriptive, but certainly understand the argument for consistent…arguments 😉 ",
        "createdAt" : "2021-02-11T03:41:02Z",
        "updatedAt" : "2021-02-16T03:19:38Z",
        "lastEditedBy" : "bb0734a7-5595-4af0-839d-5c821cc0eb2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "251d4e48595cfc0163163b48840fecf6b84032ff",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +40,44 @@    def __init__(\n        self,\n        num_jobs=\"auto\",\n        include_api=True,\n        whatsnew=False,"
  }
]