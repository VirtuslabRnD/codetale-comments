[
  {
    "id" : "21d71241-d5c2-4d5c-a2c0-ad54f45b4e6a",
    "prId" : 9998,
    "prUrl" : "https://github.com/numpy/numpy/pull/9998#pullrequestreview-114183584",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65700b67-2aa2-4ce0-a34a-4d96e4cbc848",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Should this be `NpyIter_Deallocate`?",
        "createdAt" : "2018-04-21T21:06:30Z",
        "updatedAt" : "2018-04-21T21:06:30Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "9c76d2cb-f7ff-4454-85d4-dac5a90e2657",
        "parentId" : "65700b67-2aa2-4ce0-a34a-4d96e4cbc848",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "fixed (in doc-nditer PR)",
        "createdAt" : "2018-04-21T21:24:07Z",
        "updatedAt" : "2018-04-21T21:24:07Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa9a74165479142e2c1671f871fe7c860146cd52",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +119,123 @@\n``NpyIter_Close`` has been added and should be called before\n``NpyIter_Dealloc`` to resolve possible writeback-enabled arrays.\n\nNew Features"
  },
  {
    "id" : "87c16fcc-b7f9-40fa-b8cd-c0c085fa7b24",
    "prId" : 10186,
    "prUrl" : "https://github.com/numpy/numpy/pull/10186#pullrequestreview-82505314",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "369248cb-416c-41b8-a55a-d0cdce4f03b3",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Presumably we can get away with this? The alternative is to have duplicate entries in `__all__`, but we already do that (#10198)...",
        "createdAt" : "2017-12-11T00:59:58Z",
        "updatedAt" : "2017-12-19T05:30:17Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "7afd866e-5a01-4016-8cb2-d76a7af117da",
        "parentId" : "369248cb-416c-41b8-a55a-d0cdce4f03b3",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "Agreed with this.",
        "createdAt" : "2017-12-11T14:23:36Z",
        "updatedAt" : "2017-12-19T05:30:17Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "ccbe65d126c72444779b269f3e03deb464bc0eee",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +63,67 @@\nCode that does ``from np.lib.function_base import *`` will need to be updated\nwith the new location, and should consider not using ``import *`` in future.\n\n``MaskedArray.astype`` now is identical to ``ndarray.astype``"
  },
  {
    "id" : "777c0493-67f2-4900-a460-f1364fbfbec4",
    "prId" : 10591,
    "prUrl" : "https://github.com/numpy/numpy/pull/10591#pullrequestreview-106218833",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fa5e94a-328a-4d0f-8194-0e7b19a1bf51",
        "parentId" : null,
        "authorId" : "0d70c244-f732-4a44-9ae8-c3f6de7e9b40",
        "body" : "\"...without calculating the histogram\" sounds better (for a later PR).",
        "createdAt" : "2018-03-22T17:18:25Z",
        "updatedAt" : "2018-03-22T17:30:55Z",
        "lastEditedBy" : "0d70c244-f732-4a44-9ae8-c3f6de7e9b40",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfdf831bf28d6dabf04841787a10bc8b6854b7e1",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +24,28 @@\n  * `np.histogram_bin_edges`, a function to get the edges of the bins used by a histogram\n    without needing to calculate the histogram.\n\nDeprecations"
  },
  {
    "id" : "cfaca1c1-f49d-4efd-acd4-469098c13de5",
    "prId" : 11018,
    "prUrl" : "https://github.com/numpy/numpy/pull/11018#pullrequestreview-116623645",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e08d2f1-a5e7-4dda-9b66-0a9cb60a297d",
        "parentId" : null,
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "It would be nice to clarify (and test!) it this also works if the output has the same dimension. For example, a signature of `(i)->(i)`.",
        "createdAt" : "2018-04-30T22:26:49Z",
        "updatedAt" : "2018-06-07T18:38:04Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      },
      {
        "id" : "4fa3b1d8-df6e-4690-9729-88600c66cb2a",
        "parentId" : "3e08d2f1-a5e7-4dda-9b66-0a9cb60a297d",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "Yes, indeed. The problem is that the `_umath_test` module does not contain any example of a gufunc with such a signature, and I don't feel quite up to writing one... (sadly, `linalg` also does not have one). Note, though, that the code path does get tested - with `keepdims=True`, any no-core arguments do get upgraded to having a single core dimension.",
        "createdAt" : "2018-04-30T22:58:18Z",
        "updatedAt" : "2018-06-07T18:38:04Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      },
      {
        "id" : "b150781b-5650-4117-8cc8-e7c32cc190f2",
        "parentId" : "3e08d2f1-a5e7-4dda-9b66-0a9cb60a297d",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "p.s. Of course this isn't a reason to clarify the documentation! Indeed, the `keepdims` case itself might be useful for that.",
        "createdAt" : "2018-04-30T22:59:55Z",
        "updatedAt" : "2018-06-07T18:38:04Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      },
      {
        "id" : "be61915c-06f5-401a-83e3-9917b9bb0f59",
        "parentId" : "3e08d2f1-a5e7-4dda-9b66-0a9cb60a297d",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "Now added a bit more text to `keepdims` to clarify this.",
        "createdAt" : "2018-05-01T16:47:24Z",
        "updatedAt" : "2018-06-07T18:38:04Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "b02fa32630d9879453a9a35579b31a17fe6e3307",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +381,385 @@above, one can pass an ``axis`` argument. This is equivalent to passing in\n``axes`` with identical entries for all arguments with that core dimension\n(e.g., for the example above, ``axes=[(axis,), (axis,)]``).\n\nFurthermore, like for reductions, for generalized ufuncs that have inputs that"
  }
]