[
  {
    "id" : "8dbe4bcc-cd07-4957-8c8d-0c6a0e74530a",
    "prId" : 7997,
    "prUrl" : "https://github.com/numpy/numpy/pull/7997#pullrequestreview-23854989",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52e80a55-c26d-4dc4-8fac-d259f92280bc",
        "parentId" : null,
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Naming the platforms (all but Windows?) would be clearer",
        "createdAt" : "2017-02-25T09:41:10Z",
        "updatedAt" : "2017-02-25T09:41:10Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3e24b2f2860ce1912f578cf996184198a3cfd25",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +89,93 @@Temporary elision\n-----------------\nOn platforms providing the `backtrace` function NumPy will now not create\ntemporaries in expression when possible.\nFor example `d = a + b + c` is transformed to `d = a + b; d += c` which can"
  },
  {
    "id" : "04b44941-1e91-46f3-93fe-a1d2ef406576",
    "prId" : 7997,
    "prUrl" : "https://github.com/numpy/numpy/pull/7997#pullrequestreview-23854999",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee89b983-17a2-4744-b0b0-0dbf7bf2135a",
        "parentId" : null,
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "needs double backticks, here and in all cases (including `` `backtrace` ``) below",
        "createdAt" : "2017-02-25T09:41:49Z",
        "updatedAt" : "2017-02-25T09:41:49Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3e24b2f2860ce1912f578cf996184198a3cfd25",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +8,12 @@==========\n\n * Operations like `a + b + c` will create less temporaries on some platforms\n\n"
  },
  {
    "id" : "3f6ee7b5-b7d8-4872-850d-3907589b8f04",
    "prId" : 8290,
    "prUrl" : "https://github.com/numpy/numpy/pull/8290#pullrequestreview-9335334",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ac07367-a0ec-40de-bf11-cd23b8ace928",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Could you also add something under `Compatibility notes`? If you look In the 1.12 notes there is a subsection `FutureWarning to changed behavior` that has a list of changes.\n",
        "createdAt" : "2016-11-19T01:32:37Z",
        "updatedAt" : "2016-11-19T17:50:38Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3f3d205cd3f607caeada0dddf41e996e288a3c50",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +65,69 @@subclass, matching the behavior of most other numpy functions such as ``mean``.\nAs a consequence, also calls that returned a scalar may now return a subclass\narray scalar."
  },
  {
    "id" : "5c546859-b969-48ae-924b-f6e2f5469f8f",
    "prId" : 8326,
    "prUrl" : "https://github.com/numpy/numpy/pull/8326#pullrequestreview-17798338",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df3b09a1-c7e9-44a5-a861-96565740ab84",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Just a note for the future, I've changed the `~` to `-` for added markdown compatibility for the github releases. I'll fix these up in the release notes later.",
        "createdAt" : "2017-01-21T02:53:51Z",
        "updatedAt" : "2017-01-21T02:53:51Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2a47486a4ccaa141ceeb585e24b2be17b359998",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +89,93 @@\nPerformance improvements for ``packbits`` and ``unpackbits``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nThe functions ``numpy.packbits`` with boolean input and ``numpy.unpackbits`` have\nbeen optimized to be a significantly faster for contiguous data."
  },
  {
    "id" : "8bcd5035-17c7-4961-921b-1f42954ebde3",
    "prId" : 8801,
    "prUrl" : "https://github.com/numpy/numpy/pull/8801#pullrequestreview-28429867",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa1e8c8c-a264-422b-9e37-fc0c7e104832",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "You've reminded me that I should add another entry under this heading regarding #8584, so thanks for that",
        "createdAt" : "2017-03-22T12:19:06Z",
        "updatedAt" : "2017-03-22T12:19:20Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "914d20b9-3c1e-46f5-ad10-1907ddb7ce5f",
        "parentId" : "aa1e8c8c-a264-422b-9e37-fc0c7e104832",
        "authorId" : "6c4b557f-2684-48e5-b072-fde6119e4229",
        "body" : "My pleasure :)",
        "createdAt" : "2017-03-22T16:04:39Z",
        "updatedAt" : "2017-03-22T16:04:40Z",
        "lastEditedBy" : "6c4b557f-2684-48e5-b072-fde6119e4229",
        "tags" : [
        ]
      }
    ],
    "commit" : "1273caf16cda1bfce8c1686876162c206bcf9867",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +31,35 @@\n\nError type changes\n~~~~~~~~~~~~~~~~~~\n"
  },
  {
    "id" : "4d433305-d486-4687-9fc4-5c843339a88f",
    "prId" : 8886,
    "prUrl" : "https://github.com/numpy/numpy/pull/8886#pullrequestreview-30866801",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "400e855e-9252-4812-b5c4-2955a10e64b6",
        "parentId" : null,
        "authorId" : "5b1b830f-f632-422e-a2fc-f6d019a6f5d4",
        "body" : "Love this example. Particularly after our [discussion]( https://github.com/numpy/numpy/pull/7768#issuecomment-291542328 ). Is there a test for this as well? Just familiarizing myself with this PR now. So if I overlooked it, sorry about that.",
        "createdAt" : "2017-04-04T16:52:55Z",
        "updatedAt" : "2017-04-20T21:25:20Z",
        "lastEditedBy" : "5b1b830f-f632-422e-a2fc-f6d019a6f5d4",
        "tags" : [
        ]
      },
      {
        "id" : "dd9964fa-9539-4e69-ba61-71dcf7a40e60",
        "parentId" : "400e855e-9252-4812-b5c4-2955a10e64b6",
        "authorId" : "0d70c244-f732-4a44-9ae8-c3f6de7e9b40",
        "body" : "There is a test that covers an even more complex situation.",
        "createdAt" : "2017-04-04T18:39:29Z",
        "updatedAt" : "2017-04-20T21:25:20Z",
        "lastEditedBy" : "0d70c244-f732-4a44-9ae8-c3f6de7e9b40",
        "tags" : [
        ]
      }
    ],
    "commit" : "642f7e841d2f9900b3793c9b140f8c1adc56b899",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +178,182 @@           [ 1.,  1.,  3.,  0.,  0.],\n           [ 1.,  1.,  0.,  3.,  0.],\n           [ 1.,  1.,  0.,  0.,  3.]])\n\nWhile primarily useful for block matrices, this works for arbitrary dimensions"
  },
  {
    "id" : "87a380f1-f9be-42f4-b9ae-763db1e05767",
    "prId" : 8951,
    "prUrl" : "https://github.com/numpy/numpy/pull/8951#pullrequestreview-33111327",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3652239e-e586-4eee-ad61-a871ed8dbbf0",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Careless repetition of `reduce` here... Oops",
        "createdAt" : "2017-04-17T23:07:51Z",
        "updatedAt" : "2017-04-17T23:07:54Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "acfb879df28fb45c3f9812724a97f322d106d4f7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +249,253 @@.. _`LAPACK changelogs`: http://www.netlib.org/lapack/release_notes.html#_4_history_of_lapack_releases\n\n``reduce`` of ``np.hypot.reduce`` and ``np.logical_xor`` allowed in more cases\n------------------------------------------------------------------------------\nThis now works on empty arrays, returning 0, and can reduce over multiple axes."
  },
  {
    "id" : "d165430a-f322-4459-a15d-c96be7c0e645",
    "prId" : 8999,
    "prUrl" : "https://github.com/numpy/numpy/pull/8999#pullrequestreview-34987378",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89948580-8f4b-41ed-b137-ff7450e9c837",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Still would like a comma after `npy_intp`, but not too important",
        "createdAt" : "2017-04-26T21:58:13Z",
        "updatedAt" : "2017-04-26T21:58:20Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "f888961a-cb97-4565-940b-3c073c0a8cb4",
        "parentId" : "89948580-8f4b-41ed-b137-ff7450e9c837",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "When a subordinate clause follows an independent clause, a comma is not needed.\r\n\r\nI used a comma in the sentence above because the subordinate clause comes first.\r\n\r\nTwo examples, two cases. Two sentence fragments ;)",
        "createdAt" : "2017-04-26T22:53:42Z",
        "updatedAt" : "2017-04-26T22:53:42Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "5d50dbb1-6b96-43ef-924f-dfd6e1ae7ba4",
        "parentId" : "89948580-8f4b-41ed-b137-ff7450e9c837",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Oh, I agree it's not necessary (thanks for the formal explanation though) - but am I right in saying it would be valid?",
        "createdAt" : "2017-04-26T23:25:50Z",
        "updatedAt" : "2017-04-26T23:25:50Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "39a21ddf4deb32a6a7db5a0b890f064166c04a77",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +189,193 @@Setting NPY_RELAXED_STRIDES_DEBUG=1 in the enviroment when relaxed stride\nchecking is enabled will cause numpy to be compiled with the affected strides\nset to the maximum value of npy_intp in order to help detect invalid usage of\nthe strides in downstream projects. When enabled, invalid usage often results\nin an error being raised, but the exact type of error depends on the details of"
  },
  {
    "id" : "1b47e6d4-3079-4623-b76c-f3cf9147ab47",
    "prId" : 9063,
    "prUrl" : "https://github.com/numpy/numpy/pull/9063#pullrequestreview-36667898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0dcc1143-748e-4013-8fd7-88ec206dd46d",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "<s>Probably worth pointing out that the builtin `divmod` now dispatches to this</s> - I'm an idiot, you've already done this",
        "createdAt" : "2017-05-06T23:14:10Z",
        "updatedAt" : "2017-05-08T00:04:02Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "b16aa26d-0110-485b-85ed-1d3448bd3bbc",
        "parentId" : "0dcc1143-748e-4013-8fd7-88ec206dd46d",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "And before release I'm going to gather all the new ufuncs into a `New ufuncs` section. There are enough of them in the 1.13 release to justify that.",
        "createdAt" : "2017-05-07T16:06:58Z",
        "updatedAt" : "2017-05-08T00:04:02Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fbf75e499196c05da46302f035909897c9ec272",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +350,354 @@`divmod` when called on numpy arrays. ``np.divmod(x, y)`` calculates a result\nequivalent to ``(np.floor_divide(x, y), np.remainder(x, y))`` but is\napproximately twice as fast as calling the functions separately.\n\nBetter ``repr`` of object arrays"
  }
]