[
  {
    "id" : "8fb9acf2-cb18-4621-bdcf-044c0b7f4e02",
    "prId" : 2701,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5b24390-f039-4c30-aae8-98bdff613c52",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "So, uh... how _is_ it expected to work? I can't figure out what I expect :-) I guess, equivalent to `array[fancy_idx].reshape((-1, 1))` (regardless of where the `newaxis` is placed inside the index operator)?\n",
        "createdAt" : "2013-04-12T20:16:51Z",
        "updatedAt" : "2013-05-07T15:06:58Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "ec7b68b6-f3a3-4995-a88b-3a5bac2ac456",
        "parentId" : "d5b24390-f039-4c30-aae8-98bdff613c52",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "hmmm, fair enough ;). It is inserted at the exact point. For the simple cases it means you get the same thing if you replace the fancy index with a (compatible slice). For more complex cases, think of it as: do the None first replacing everything else with \":\", and after that replace the None with \":\".\n",
        "createdAt" : "2013-04-12T20:23:22Z",
        "updatedAt" : "2013-05-07T15:06:58Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "37daf4a2-d6d3-40d8-8dc2-cab941e2779b",
        "parentId" : "d5b24390-f039-4c30-aae8-98bdff613c52",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "If you know the code for advanced indexing: the new axis is just applied to the subspace. i.e. the non-fancy index part. (with the necessary code corrections)\n",
        "createdAt" : "2013-04-12T20:30:46Z",
        "updatedAt" : "2013-05-07T15:06:58Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "be6be0cb-fbaa-47b2-87c3-a2ca556d91aa",
        "parentId" : "d5b24390-f039-4c30-aae8-98bdff613c52",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "How about adding: for example `array[:, np.newaxis, [0,1]]` will give the same result as `array[:, np.newaxis,:2]` (but does a copy)?\n",
        "createdAt" : "2013-04-12T20:38:06Z",
        "updatedAt" : "2013-05-07T15:06:58Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9c95555c23cf5429a795ef73f8fb2b3941d434c",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +77,81 @@It is now possible to use `np.newaxis`/`None` together with index\narrays instead of only in simple indices. This means that\n``array[np.newaxis, [0, 1]]`` will now work as expected.\n\nC-API"
  }
]