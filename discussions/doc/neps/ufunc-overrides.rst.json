[
  {
    "id" : "f040e67b-ad3d-43ef-b0e5-b586e16a57ce",
    "prId" : 8247,
    "prUrl" : "https://github.com/numpy/numpy/pull/8247#pullrequestreview-32259625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f6197f3-0448-4746-9881-37e6ff7fa009",
        "parentId" : null,
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "This needs to be updated: dispatch does not look at outputs anymore",
        "createdAt" : "2017-04-09T02:28:16Z",
        "updatedAt" : "2017-04-27T19:38:49Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      },
      {
        "id" : "423621f2-4457-43c0-bd1d-7f02c0ab4cd6",
        "parentId" : "4f6197f3-0448-4746-9881-37e6ff7fa009",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "It does look at outputs! What it does not look at is any other optional arguments (in particular, it does not look at `where`).",
        "createdAt" : "2017-04-11T23:54:43Z",
        "updatedAt" : "2017-04-27T19:38:49Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      },
      {
        "id" : "a80c2070-9ec7-4371-bc21-5353f9ea0bdf",
        "parentId" : "4f6197f3-0448-4746-9881-37e6ff7fa009",
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "Wait, really? Do we want that? I'm struggling to think of a use case, though I'm sure this has come up before.",
        "createdAt" : "2017-04-12T00:02:49Z",
        "updatedAt" : "2017-04-27T19:38:49Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      },
      {
        "id" : "d301dd42-789d-417f-bc58-3ab5677e92fc",
        "parentId" : "4f6197f3-0448-4746-9881-37e6ff7fa009",
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "`np.add(ndarray, ndarray, out=xarray)`? (Or sparse array, or dask array, etc.)\r\n\r\nHopefully the *semantics* of the operation shouldn't change because of the presence of `out=` (that'd be a little to matlab-y for my taste ;-)), but the main function of `__numpy_ufunc__` is find someone who knows how to iterate over all the containers involved, and being able to iterate over the output container is important.\r\n\r\nFor the same reason I think it'd probably be nice to include `where=` in the dispatch, but we can always fix that in the future once it comes up.",
        "createdAt" : "2017-04-12T00:26:28Z",
        "updatedAt" : "2017-04-27T19:38:49Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "32221dfb553980e34a398c71891c7dcdfaf2f477",
    "line" : 183,
    "diffHunk" : "@@ -1,1 +174,178 @@- If more than one of the arguments implements ``__array_ufunc__``,\n  they are tried in the following order: subclasses before superclasses,\n  inputs before outputs, otherwise left to right.\n\n- The first ``__array_ufunc__`` method returning something else than"
  },
  {
    "id" : "06b57718-2038-4405-9de6-cf1e0d0e101b",
    "prId" : 9027,
    "prUrl" : "https://github.com/numpy/numpy/pull/9027#pullrequestreview-35526013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2c33587-0a73-444c-8e20-9c6848d9db46",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Would be better to put this on the line above, same below.",
        "createdAt" : "2017-04-30T16:39:51Z",
        "updatedAt" : "2017-05-05T17:53:27Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "edfe6ac7-6b09-4a29-b1a1-08e4ba99c3d7",
        "parentId" : "c2c33587-0a73-444c-8e20-9c6848d9db46",
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "Sphinx does a weird thing if I put it on one line, making the column very wide (I think this is basic on the longer length of the column header `======`). So this version ends up looking better when rendered to HTML.",
        "createdAt" : "2017-04-30T21:30:25Z",
        "updatedAt" : "2017-05-05T17:53:27Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      }
    ],
    "commit" : "eccfe737c2811aed01fe52ac9db441ab93ff9831",
    "line" : 206,
    "diffHunk" : "@@ -1,1 +659,663 @@``*``  ``mul``      :func:`multiply`\n``/``  ``truediv``  :func:`true_divide`\n       (Python 3)\n``/``  ``div``      :func:`divide`\n       (Python 2)"
  },
  {
    "id" : "11cf3fe0-cb67-4a17-bb46-2cb3c62c8d60",
    "prId" : 9027,
    "prUrl" : "https://github.com/numpy/numpy/pull/9027#pullrequestreview-35705781",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1158d52d-cc23-41c0-9a1f-02c24a44d718",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "BTW, feel free to declare this out-of-scope for this PR, but maybe we should drop the discussion of \"option 2\" from the NEP now that we've pretty much settled on \"option 1\" as recommended?",
        "createdAt" : "2017-05-02T06:38:57Z",
        "updatedAt" : "2017-05-05T17:53:27Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "eccfe737c2811aed01fe52ac9db441ab93ff9831",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +506,510 @@            return result\n\n        # Option 1: call ufunc directly\n        def __mul__(self, other):\n            if _disables_array_ufunc(other):"
  },
  {
    "id" : "dc55274c-126f-47c8-bc77-a0f2dcd08862",
    "prId" : 9027,
    "prUrl" : "https://github.com/numpy/numpy/pull/9027#pullrequestreview-35764369",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39e8b29b-face-434a-aba7-3210e76b2946",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "Oh, I see, you added more discussion of option 1 vs 2 instead. That's also a plausible approach!\r\n\r\nI probably wouldn't use \"viral\" for something we want to recommend... it's a pretty loaded word? Plus it kinda doesn't matter whether people want their classes to be \"viral\" or not, because this is what ndarray does, so to the extent it's viral they *have* to follow, and if they don't follow it's not so viral then is it...?\r\n\r\nIt might be simplest to just delete the option 2 stuff from the NEP; the history's always available in git. Or this is probably fine; honestly it's 11:55 pm and I don't really have brain to track all the details in this giant block of text and that's probably influencing my opinion...",
        "createdAt" : "2017-05-02T06:54:22Z",
        "updatedAt" : "2017-05-05T17:53:27Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "ecf56ba2-e374-4eab-8060-8d33ca8dc34b",
        "parentId" : "39e8b29b-face-434a-aba7-3210e76b2946",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "I think as long as the interface is provisional, we should keep both options; even for `ndarray` itself, we will want to optimize things and might well find it is easier in a slightly different way.",
        "createdAt" : "2017-05-02T12:52:04Z",
        "updatedAt" : "2017-05-05T17:53:27Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "eccfe737c2811aed01fe52ac9db441ab93ff9831",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +613,617 @@``__array_ufunc__`` or set it to :obj:`None`). We believe this is a good\nthing, because it ensures the consistency of ufuncs and arithmetic on all\nobjects that support them.\n\nTo make implementing such array-like classes easier, the mixin class"
  }
]