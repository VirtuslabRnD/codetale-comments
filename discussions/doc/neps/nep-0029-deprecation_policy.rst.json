[
  {
    "id" : "3cf7bfc8-b83a-480a-bba6-c03c5bf4584e",
    "prId" : 14086,
    "prUrl" : "https://github.com/numpy/numpy/pull/14086#pullrequestreview-266696261",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b45e0c82-e0f8-4661-b14d-04484dba7571",
        "parentId" : null,
        "authorId" : "707ccc57-de01-43ab-a892-5c1bef1f3a6e",
        "body" : "```suggestion\r\n  |<----------------------------------------- Feb19\r\n```",
        "createdAt" : "2019-07-25T15:32:36Z",
        "updatedAt" : "2019-08-14T18:46:17Z",
        "lastEditedBy" : "707ccc57-de01-43ab-a892-5c1bef1f3a6e",
        "tags" : [
        ]
      }
    ],
    "commit" : "90bd95355d0517da2d6047459b5df8826e6b16fc",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +62,66 @@   |              |                  |               |\n   py 3.5.0       py 3.6.0           py 3.7.0        py 3.8.0\n  |-----------------------------------------> Feb19\n            |-----------------------------------------> Dec19\n                      |-----------------------------------------> Nov20"
  },
  {
    "id" : "7bf6e832-6e44-459f-9001-67a672bc50c3",
    "prId" : 14086,
    "prUrl" : "https://github.com/numpy/numpy/pull/14086#pullrequestreview-266960682",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ef6bfcb-8f6d-4948-a8bb-53d832e0ba48",
        "parentId" : null,
        "authorId" : "707ccc57-de01-43ab-a892-5c1bef1f3a6e",
        "body" : "```suggestion\r\n            |<----------------------------------------- Dec19\r\n```\r\n\r\nThe MMYY is the planned project release date. It seems to make more sense to look backward 42 months so I have flipped the placement of the arrow.",
        "createdAt" : "2019-07-25T15:34:10Z",
        "updatedAt" : "2019-08-14T18:46:17Z",
        "lastEditedBy" : "707ccc57-de01-43ab-a892-5c1bef1f3a6e",
        "tags" : [
        ]
      },
      {
        "id" : "8568e285-06d6-43a0-a873-62c86c184642",
        "parentId" : "8ef6bfcb-8f6d-4948-a8bb-53d832e0ba48",
        "authorId" : "b0ac93b5-cabc-41e2-b368-89eb7439e962",
        "body" : "The right facing arrow was meant to indicate that this is a semi-infinite support window and packages should strive to support future Python versions on a given release series.",
        "createdAt" : "2019-07-25T22:18:45Z",
        "updatedAt" : "2019-08-14T18:46:17Z",
        "lastEditedBy" : "b0ac93b5-cabc-41e2-b368-89eb7439e962",
        "tags" : [
        ]
      },
      {
        "id" : "2e981fe9-3cd4-48d6-8ea7-f3e0071543be",
        "parentId" : "8ef6bfcb-8f6d-4948-a8bb-53d832e0ba48",
        "authorId" : "707ccc57-de01-43ab-a892-5c1bef1f3a6e",
        "body" : "Fair enough. Thanks for clarifying.",
        "createdAt" : "2019-07-26T00:45:21Z",
        "updatedAt" : "2019-08-14T18:46:17Z",
        "lastEditedBy" : "707ccc57-de01-43ab-a892-5c1bef1f3a6e",
        "tags" : [
        ]
      },
      {
        "id" : "53451d09-c6d7-494c-a0e6-0dea640e5a6a",
        "parentId" : "8ef6bfcb-8f6d-4948-a8bb-53d832e0ba48",
        "authorId" : "b0ac93b5-cabc-41e2-b368-89eb7439e962",
        "body" : "How could this be made clearer? would\r\n\r\n```\r\n|-----------------------------------------|-- Dec19 --->\r\n```\r\n\r\nbe better?\r\n\r\nI like my ascii art, but maybe the tables are clearer and we should drop this altogether?",
        "createdAt" : "2019-07-26T01:37:30Z",
        "updatedAt" : "2019-08-14T18:46:17Z",
        "lastEditedBy" : "b0ac93b5-cabc-41e2-b368-89eb7439e962",
        "tags" : [
        ]
      },
      {
        "id" : "a9e40824-d782-423e-807f-2f9e2e4487fd",
        "parentId" : "8ef6bfcb-8f6d-4948-a8bb-53d832e0ba48",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "A list of release dates would probably be easier to maintain. It can be a PITA to always google for the release dates...",
        "createdAt" : "2019-07-26T01:53:35Z",
        "updatedAt" : "2019-08-14T18:46:17Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "1781d761-e1ad-475c-8d74-92a125faeca8",
        "parentId" : "8ef6bfcb-8f6d-4948-a8bb-53d832e0ba48",
        "authorId" : "b0ac93b5-cabc-41e2-b368-89eb7439e962",
        "body" : "I don't think this should be updated over time, I think _seeing_ the windows help with understanding.",
        "createdAt" : "2019-07-26T01:57:02Z",
        "updatedAt" : "2019-08-14T18:46:17Z",
        "lastEditedBy" : "b0ac93b5-cabc-41e2-b368-89eb7439e962",
        "tags" : [
        ]
      }
    ],
    "commit" : "90bd95355d0517da2d6047459b5df8826e6b16fc",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +63,67 @@   py 3.5.0       py 3.6.0           py 3.7.0        py 3.8.0\n  |-----------------------------------------> Feb19\n            |-----------------------------------------> Dec19\n                      |-----------------------------------------> Nov20\n"
  },
  {
    "id" : "dffe3dd4-2517-4521-bb59-2f9d110f7177",
    "prId" : 14086,
    "prUrl" : "https://github.com/numpy/numpy/pull/14086#pullrequestreview-266696261",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6719b559-dd1f-4f22-b64a-669e532530a9",
        "parentId" : null,
        "authorId" : "707ccc57-de01-43ab-a892-5c1bef1f3a6e",
        "body" : "```suggestion\r\n                      |<----------------------------------------- Nov20\r\n```",
        "createdAt" : "2019-07-25T15:34:24Z",
        "updatedAt" : "2019-08-14T18:46:17Z",
        "lastEditedBy" : "707ccc57-de01-43ab-a892-5c1bef1f3a6e",
        "tags" : [
        ]
      }
    ],
    "commit" : "90bd95355d0517da2d6047459b5df8826e6b16fc",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +64,68 @@  |-----------------------------------------> Feb19\n            |-----------------------------------------> Dec19\n                      |-----------------------------------------> Nov20\n\nshows the 42 month support windows for Python.  A project with a"
  },
  {
    "id" : "ec45edc2-cf6c-49d7-a8fd-f6877a7aa7f5",
    "prId" : 14086,
    "prUrl" : "https://github.com/numpy/numpy/pull/14086#pullrequestreview-266947883",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89557550-4467-400f-b0ad-6877096ba0fc",
        "parentId" : null,
        "authorId" : "707ccc57-de01-43ab-a892-5c1bef1f3a6e",
        "body" : "Nicely improved.",
        "createdAt" : "2019-07-26T00:44:36Z",
        "updatedAt" : "2019-08-14T18:46:17Z",
        "lastEditedBy" : "707ccc57-de01-43ab-a892-5c1bef1f3a6e",
        "tags" : [
        ]
      }
    ],
    "commit" : "90bd95355d0517da2d6047459b5df8826e6b16fc",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@For the purposes of this NEP we assume semantic versioning and define:\n\n*major version*\n   A release that change the first number (e.g. X.0.0)\n"
  },
  {
    "id" : "32bc6626-064e-4cb4-b9a5-96e088c37a56",
    "prId" : 14086,
    "prUrl" : "https://github.com/numpy/numpy/pull/14086#pullrequestreview-268433139",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ba8e44e-5d1f-4b21-8dc4-30971e2d815f",
        "parentId" : null,
        "authorId" : "25c8b108-2bf6-45c7-b6e7-69bbbbf59b94",
        "body" : "A rule based on the number of minor releases wouldn't _inherently_ have to change if the release cadence were to change by epsilon. Only if the change in release cadence is sufficiently large might the rule have to change, and then only if we require that the rule remain sensible : )\r\nI think that the real point is that the rule shouldn't be based _solely_ on minor versions **or** _solely_ on time; a composite rule is more robust to changes in release cadence.",
        "createdAt" : "2019-07-27T06:21:37Z",
        "updatedAt" : "2019-08-14T18:46:17Z",
        "lastEditedBy" : "25c8b108-2bf6-45c7-b6e7-69bbbbf59b94",
        "tags" : [
        ]
      },
      {
        "id" : "942b91f9-d73f-4a94-8d3b-750beea08b22",
        "parentId" : "4ba8e44e-5d1f-4b21-8dc4-30971e2d815f",
        "authorId" : "aa50f4f0-351d-4690-850d-39a4e3791bf9",
        "body" : "I think it's also reasonable for the Scientific Python community to ask Python core to use \"Impact on the Scientific Python community's standard support policy\" as one of our points of consideration if we're considering adjusted our release cadence (which we are actually doing at the moment - we'd like to align it with the calendar year, which means either an every-year cadence, or an every-other-year one).\r\n\r\nSo if you want to consider that potential impact in advance and design a rule around it, the two scenarios to consider would be:\r\n\r\n1. What if the current 18 months became 12 months?\r\n2. What if the current 18 months became 24 months?\r\n\r\n(If attempting to design such a rule results in a conclusion of \"That cadence would be awful for us\", then that's important feedback for us to hear *before* we make any decisions)",
        "createdAt" : "2019-07-28T06:57:52Z",
        "updatedAt" : "2019-08-14T18:46:17Z",
        "lastEditedBy" : "aa50f4f0-351d-4690-850d-39a4e3791bf9",
        "tags" : [
        ]
      },
      {
        "id" : "f4d60ab1-e43d-473a-8619-5b483dc627d0",
        "parentId" : "4ba8e44e-5d1f-4b21-8dc4-30971e2d815f",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "> What if the current 18 months became 12 months?\r\n\r\nThis would probably be fine, and we could leave this policy unchanged at 42 months - that would make packages oscillate between supporting 3 and 4 Python releases, rather than 2-3. Taking a year off our support would be too aggressive imho - we'd get many more users who we're then forcing to upgrade their Python install (can be painful).\r\n\r\n> What if the current 18 months became 24 months?\r\n\r\nthat would be awful",
        "createdAt" : "2019-07-28T07:16:41Z",
        "updatedAt" : "2019-08-14T18:46:17Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "97cc781d-89b2-414a-ab68-844399252d56",
        "parentId" : "4ba8e44e-5d1f-4b21-8dc4-30971e2d815f",
        "authorId" : "aa50f4f0-351d-4690-850d-39a4e3791bf9",
        "body" : "Note that there's more to the 24 month proposal than slowing down the breaking releases - there are 12 months of backwards compatible incremental feature releases after each new baseline release, so both proposals reduce the  \"time until the next CPython feature release\" gap to being never more than 12 months. It's just one of them also aims to reduce the frequency of \"rebuild the world\" events triggered by switching to a new parallel installation set.",
        "createdAt" : "2019-07-30T14:27:31Z",
        "updatedAt" : "2019-08-14T18:46:17Z",
        "lastEditedBy" : "aa50f4f0-351d-4690-850d-39a4e3791bf9",
        "tags" : [
        ]
      }
    ],
    "commit" : "90bd95355d0517da2d6047459b5df8826e6b16fc",
    "line" : 231,
    "diffHunk" : "@@ -1,1 +229,233 @@\n\n\nTime window from the X.Y.1 Python release\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  }
]