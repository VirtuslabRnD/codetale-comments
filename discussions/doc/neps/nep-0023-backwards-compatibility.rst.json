[
  {
    "id" : "00e08ffe-7ee3-49b9-bdd7-84bd00a4d0db",
    "prId" : 11596,
    "prUrl" : "https://github.com/numpy/numpy/pull/11596#pullrequestreview-139273720",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fead3252-888e-48d5-8a45-eaa67aa1b1a6",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I think two releases may be on the short side for some things. Is it really that important to put a time or removal on it? Note that NumPy releases at about 3x the rate of Python.",
        "createdAt" : "2018-07-22T00:19:09Z",
        "updatedAt" : "2018-07-22T17:26:44Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "75c602f5-6b8b-46e8-a9fc-b109c562f785",
        "parentId" : "fead3252-888e-48d5-8a45-eaa67aa1b1a6",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Could be longer, maybe 3 makes more sense. Can also add an option to deviate from those 2 or 3. I think it's import to have a default though, both so we document things inside the `DeprecationWarning` and so that we don't spend time on deciding on that for each deprecation.",
        "createdAt" : "2018-07-22T00:30:25Z",
        "updatedAt" : "2018-07-22T17:26:44Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "f728a57c-7e75-4720-a61c-72b520e9e3e9",
        "parentId" : "fead3252-888e-48d5-8a45-eaa67aa1b1a6",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "For me, unless it was almost a bug, I think we always had more an \"at least\" two versions thing going? Also one thing that is not too untypical is that we delay deprecations (possibly with maybe more aggressive warnings) when people start noticing that they missed them during rc testing.\r\n\r\nThe major release discussion is interesting, but I guess we should keep it a bit vague here. Or do you think anything that we feel should take longer then a year, should really lock in with a major release (lets say we do not do a major release more then every 2 years or so)?\r\n\r\nAnyway, from first quick read over it, looks very nice Ralf.",
        "createdAt" : "2018-07-22T02:09:59Z",
        "updatedAt" : "2018-07-22T17:26:44Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ee09d47c7212b2f029408b0197e6954421dca38",
    "line" : 209,
    "diffHunk" : "@@ -1,1 +207,211 @@\n- shall include the version numbers of both when the functionality was deprecated\n  and when it will be removed (either two releases after the warning is\n  introduced, or in the next major version).\n- shall include information on alternatives to the deprecated functionality, or a"
  },
  {
    "id" : "e3a4174a-9b39-4ef2-a9b2-90f78a033607",
    "prId" : 11596,
    "prUrl" : "https://github.com/numpy/numpy/pull/11596#pullrequestreview-139292065",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1e1c2ac-0157-42cf-8f3d-42cdecf8e2b6",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "PR #11381 which tried to remove the `NPY_ITER_OVERLAP_ASSUME_ELEMENTWISE` flag from gufunc calls is a possible candidate - it was rejected since there is concern and a concrete example that depends on this precise flag which seems to be erroneously copy-pasted from other code sections, gufunc calls can obviously do non-element-wise operand handling.",
        "createdAt" : "2018-07-22T07:48:58Z",
        "updatedAt" : "2018-07-22T17:26:44Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "b113f370-5b7a-4e56-ba50-9880b3420de7",
        "parentId" : "b1e1c2ac-0157-42cf-8f3d-42cdecf8e2b6",
        "authorId" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "body" : "I would characterize this instead as design disagreement on what guarantees a gufunc inner loop should satisfy. The flag is not copypasted erroneously, but under a different interpretation of how gufunc inner loops should handle overlap --- I remember what I had in mind when writing this code.  Whether that guarantee is in reality practical and reasonable design for gufuncs to follow is then a more arguable question, and deciding that is necessary before proceeding with code changes.",
        "createdAt" : "2018-07-22T15:58:34Z",
        "updatedAt" : "2018-07-22T17:26:44Z",
        "lastEditedBy" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ee09d47c7212b2f029408b0197e6954421dca38",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +146,150 @@**Examples of features not added because of backwards compatibility**\n\nTODO: do we have good examples here? Possibly subclassing related?\n\n"
  },
  {
    "id" : "15f72e9e-5476-4c5d-ad75-a102b16dd14f",
    "prId" : 11596,
    "prUrl" : "https://github.com/numpy/numpy/pull/11596#pullrequestreview-140812208",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7cae7aee-f719-4144-be3c-9aff860a928d",
        "parentId" : null,
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "The npy file format has it's own major/minor version numbers. We actually already did increment the major version number for version 2.0 when we made a backwards incompatible change.\r\n\r\nSo I don't think this is quite right. Maybe add \"unless the file format versions numbers are appropriately incremented\"?",
        "createdAt" : "2018-07-26T15:54:06Z",
        "updatedAt" : "2018-07-26T15:54:07Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      },
      {
        "id" : "6965b7af-3164-4f09-9acd-97fa9c242632",
        "parentId" : "7cae7aee-f719-4144-be3c-9aff860a928d",
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "OK, maybe I was mixing up backwards and forwards compatibility here :). It might be better to explicitly say:\r\n- Backwards compat: New versions of numpy should always read old files.\r\n- Forwards compat: New version of numpy should write files readable by old versions of numpy whenever possible.",
        "createdAt" : "2018-07-26T15:56:45Z",
        "updatedAt" : "2018-07-26T15:56:45Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      },
      {
        "id" : "42a33e95-870a-4fa3-aec1-473c62da0f40",
        "parentId" : "7cae7aee-f719-4144-be3c-9aff860a928d",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "That sounds like a good addition, thanks. Will update like that.",
        "createdAt" : "2018-07-26T16:38:20Z",
        "updatedAt" : "2018-07-26T16:38:20Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ee09d47c7212b2f029408b0197e6954421dca38",
    "line" : 242,
    "diffHunk" : "@@ -1,1 +240,244 @@  see `NEP 19 <http://www.numpy.org/neps/nep-0019-rng-policy.html>`_.\n- The file format for ``.npy`` and ``.npz`` files must not be changed in a backwards\n  incompatible way.\n\n"
  }
]