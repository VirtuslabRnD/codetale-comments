[
  {
    "id" : "00e08ffe-7ee3-49b9-bdd7-84bd00a4d0db",
    "prId" : 11596,
    "prUrl" : "https://github.com/numpy/numpy/pull/11596#pullrequestreview-139273720",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fead3252-888e-48d5-8a45-eaa67aa1b1a6",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I think two releases may be on the short side for some things. Is it really that important to put a time or removal on it? Note that NumPy releases at about 3x the rate of Python.",
        "createdAt" : "2018-07-22T00:19:09Z",
        "updatedAt" : "2018-07-22T17:26:44Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "75c602f5-6b8b-46e8-a9fc-b109c562f785",
        "parentId" : "fead3252-888e-48d5-8a45-eaa67aa1b1a6",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Could be longer, maybe 3 makes more sense. Can also add an option to deviate from those 2 or 3. I think it's import to have a default though, both so we document things inside the `DeprecationWarning` and so that we don't spend time on deciding on that for each deprecation.",
        "createdAt" : "2018-07-22T00:30:25Z",
        "updatedAt" : "2018-07-22T17:26:44Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "f728a57c-7e75-4720-a61c-72b520e9e3e9",
        "parentId" : "fead3252-888e-48d5-8a45-eaa67aa1b1a6",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "For me, unless it was almost a bug, I think we always had more an \"at least\" two versions thing going? Also one thing that is not too untypical is that we delay deprecations (possibly with maybe more aggressive warnings) when people start noticing that they missed them during rc testing.\r\n\r\nThe major release discussion is interesting, but I guess we should keep it a bit vague here. Or do you think anything that we feel should take longer then a year, should really lock in with a major release (lets say we do not do a major release more then every 2 years or so)?\r\n\r\nAnyway, from first quick read over it, looks very nice Ralf.",
        "createdAt" : "2018-07-22T02:09:59Z",
        "updatedAt" : "2018-07-22T17:26:44Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ee09d47c7212b2f029408b0197e6954421dca38",
    "line" : 209,
    "diffHunk" : "@@ -1,1 +207,211 @@\n- shall include the version numbers of both when the functionality was deprecated\n  and when it will be removed (either two releases after the warning is\n  introduced, or in the next major version).\n- shall include information on alternatives to the deprecated functionality, or a"
  },
  {
    "id" : "e3a4174a-9b39-4ef2-a9b2-90f78a033607",
    "prId" : 11596,
    "prUrl" : "https://github.com/numpy/numpy/pull/11596#pullrequestreview-139292065",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1e1c2ac-0157-42cf-8f3d-42cdecf8e2b6",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "PR #11381 which tried to remove the `NPY_ITER_OVERLAP_ASSUME_ELEMENTWISE` flag from gufunc calls is a possible candidate - it was rejected since there is concern and a concrete example that depends on this precise flag which seems to be erroneously copy-pasted from other code sections, gufunc calls can obviously do non-element-wise operand handling.",
        "createdAt" : "2018-07-22T07:48:58Z",
        "updatedAt" : "2018-07-22T17:26:44Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "b113f370-5b7a-4e56-ba50-9880b3420de7",
        "parentId" : "b1e1c2ac-0157-42cf-8f3d-42cdecf8e2b6",
        "authorId" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "body" : "I would characterize this instead as design disagreement on what guarantees a gufunc inner loop should satisfy. The flag is not copypasted erroneously, but under a different interpretation of how gufunc inner loops should handle overlap --- I remember what I had in mind when writing this code.  Whether that guarantee is in reality practical and reasonable design for gufuncs to follow is then a more arguable question, and deciding that is necessary before proceeding with code changes.",
        "createdAt" : "2018-07-22T15:58:34Z",
        "updatedAt" : "2018-07-22T17:26:44Z",
        "lastEditedBy" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ee09d47c7212b2f029408b0197e6954421dca38",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +146,150 @@**Examples of features not added because of backwards compatibility**\n\nTODO: do we have good examples here? Possibly subclassing related?\n\n"
  },
  {
    "id" : "15f72e9e-5476-4c5d-ad75-a102b16dd14f",
    "prId" : 11596,
    "prUrl" : "https://github.com/numpy/numpy/pull/11596#pullrequestreview-140812208",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7cae7aee-f719-4144-be3c-9aff860a928d",
        "parentId" : null,
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "The npy file format has it's own major/minor version numbers. We actually already did increment the major version number for version 2.0 when we made a backwards incompatible change.\r\n\r\nSo I don't think this is quite right. Maybe add \"unless the file format versions numbers are appropriately incremented\"?",
        "createdAt" : "2018-07-26T15:54:06Z",
        "updatedAt" : "2018-07-26T15:54:07Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      },
      {
        "id" : "6965b7af-3164-4f09-9acd-97fa9c242632",
        "parentId" : "7cae7aee-f719-4144-be3c-9aff860a928d",
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "OK, maybe I was mixing up backwards and forwards compatibility here :). It might be better to explicitly say:\r\n- Backwards compat: New versions of numpy should always read old files.\r\n- Forwards compat: New version of numpy should write files readable by old versions of numpy whenever possible.",
        "createdAt" : "2018-07-26T15:56:45Z",
        "updatedAt" : "2018-07-26T15:56:45Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      },
      {
        "id" : "42a33e95-870a-4fa3-aec1-473c62da0f40",
        "parentId" : "7cae7aee-f719-4144-be3c-9aff860a928d",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "That sounds like a good addition, thanks. Will update like that.",
        "createdAt" : "2018-07-26T16:38:20Z",
        "updatedAt" : "2018-07-26T16:38:20Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ee09d47c7212b2f029408b0197e6954421dca38",
    "line" : 242,
    "diffHunk" : "@@ -1,1 +240,244 @@  see `NEP 19 <http://www.numpy.org/neps/nep-0019-rng-policy.html>`_.\n- The file format for ``.npy`` and ``.npz`` files must not be changed in a backwards\n  incompatible way.\n\n"
  },
  {
    "id" : "8874696d-1ada-4d89-b2e0-7394e3775f6f",
    "prId" : 18097,
    "prUrl" : "https://github.com/numpy/numpy/pull/18097#pullrequestreview-560132635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "076fbb9c-70f8-45ca-b7a5-37568f8c127b",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Also: Deprecations should not be introduced in micro (bug fix) version releases",
        "createdAt" : "2020-12-30T17:14:00Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b97ef1fc36d7547a369928c640cc7246bff1a6ae",
    "line" : 151,
    "diffHunk" : "@@ -1,1 +138,142 @@- shall be mentioned in the documentation for the functionality. A\n  ``.. deprecated::`` directive can be used for this.\n\nExamples of good deprecation warnings (also note standard form of the comments\nabove the warning, helps when grepping):"
  },
  {
    "id" : "9207e4dd-0b7c-44c6-9cab-bda044230433",
    "prId" : 18097,
    "prUrl" : "https://github.com/numpy/numpy/pull/18097#pullrequestreview-574869630",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f691ff8d-9729-4e29-89bf-0435caa9121f",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Could remove the sub-heading, as it is only one paragraph remaining (for one, we could also be less aggressive)? Honestly, I would even be fine with just deleting the whole \"Alternatives\" section, in the end there is not much of an \"alternative\" to a policy (it is not a feature that could be implemented in two completely different ways, like the array protocols). The whole section is not really more than: The deprecation policy could be modified to be more or less conservative, but we believe the proposed time frames and steps are a good trade-off.",
        "createdAt" : "2020-12-31T20:13:39Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "52a1cc36-bde6-4842-a657-ad85527833a7",
        "parentId" : "f691ff8d-9729-4e29-89bf-0435caa9121f",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "This is the main alternative that some maintainers and downstream library authors have argued for though. No one has seriously said \"let's never change anything\" I think. So can't hurt to keep this.",
        "createdAt" : "2021-01-23T19:13:06Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "b97ef1fc36d7547a369928c640cc7246bff1a6ae",
    "line" : 421,
    "diffHunk" : "@@ -1,1 +319,323 @@ecosystem - being fairly conservative is required in order to not increase the\nextra maintenance for downstream libraries and end users to an unacceptable\nlevel.\n\n"
  },
  {
    "id" : "fca447d3-5da6-4c36-b7c9-87e4e5c14094",
    "prId" : 18097,
    "prUrl" : "https://github.com/numpy/numpy/pull/18097#pullrequestreview-574873442",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "816cafbb-facf-41b6-b972-6e6bb444db20",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "This section starts with details about impact assessment, and then moves on to _alternatives_ to deprecations. I think it may be better to make that an explicit section.  Maybe the \"strategies related to deprecation\" itself should be one heading level lower? And the \"General Principles\" section should actually be clearly about *decisions* (the \"Implementation ....\" are also \"General Principles\").",
        "createdAt" : "2021-01-01T22:45:54Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "af81fc1b-3fbc-46f4-a563-380c1ba93f58",
        "parentId" : "816cafbb-facf-41b6-b972-6e6bb444db20",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Okay, adding \"Impact assessment\" and \"Alternatives to deprecations\" sub-sections.\r\n\r\n> Maybe the \"strategies related to deprecation\" itself should be one heading level lower? \r\n\r\nalso done\r\n\r\n> And the \"General Principles\" section should actually be clearly about decisions (the \"Implementation ....\" are also \"General Principles\").\r\n\r\nI think this bit is fine as is. The principles 1-4 are far more general than concrete items about how to go about a deprecation.",
        "createdAt" : "2021-01-23T19:20:28Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "d1072fc1-7a8b-45c1-9f5a-237a819bc775",
        "parentId" : "816cafbb-facf-41b6-b972-6e6bb444db20",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : " \"Commenting ￼that they are low priority or labeling them as \"wontfix\" on open issues...\"",
        "createdAt" : "2021-01-23T20:11:00Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b97ef1fc36d7547a369928c640cc7246bff1a6ae",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +108,112 @@place or even removing it completely. Commenting on open issues related to it\nthat they are low-prio or labeling them as \"wontfix\" will also be a signal to\nusers, and reduce the maintenance effort needing to be spent.\n\n"
  },
  {
    "id" : "ef95b312-b6ed-43d1-af3e-ab5b2bfd7157",
    "prId" : 18097,
    "prUrl" : "https://github.com/numpy/numpy/pull/18097#pullrequestreview-574864893",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a50bfa5a-330c-4dc5-b259-3ec6e32cdac2",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Should we add 1-2 sentences here (and then start a new paragraph)? Saying that this also about:\r\n* ensure that users are well informed about any change\r\n* set expectations on the speed and process with which (most) changes occur so that users can plan accordingly.\r\n\r\nI.e. that is to say, the document is not just a set of rules for us, but also about informing users about them.",
        "createdAt" : "2021-01-03T21:49:03Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "59346813-b129-4a48-afa7-6891e024e364",
        "parentId" : "a50bfa5a-330c-4dc5-b259-3ec6e32cdac2",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Good point. Added this a bit lower - it is important, but secondary to decision making about code changes I think.",
        "createdAt" : "2021-01-23T18:01:51Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "0cac4022-81fc-43bc-93e5-ca5bd5bf3cbe",
        "parentId" : "a50bfa5a-330c-4dc5-b259-3ec6e32cdac2",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Added: \r\nIn addition, this NEP can serve as documentation for users about how the NumPy\r\nproject treats backwards compatibility, and the speed at which they can expect\r\nchanges to be made.\"",
        "createdAt" : "2021-01-23T18:02:17Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "b97ef1fc36d7547a369928c640cc7246bff1a6ae",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +24,28 @@\nNumPy has a very large user base.  Those users rely on NumPy being stable\nand the code they write that uses NumPy functionality to keep working.\nNumPy is also actively maintained and improved -- and sometimes improvements\nrequire, or are made easier, by breaking backwards compatibility."
  },
  {
    "id" : "6f209c12-7523-4e64-92e0-ab5aaa52eb2a",
    "prId" : 18097,
    "prUrl" : "https://github.com/numpy/numpy/pull/18097#pullrequestreview-574863276",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58022b96-b816-4ea9-97c3-205880703fbf",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "I agree, but we have not been very good about it historically.  If we want to ensure this, maybe we should think about making an effort of adding it to most warnings and/or checking for a version in the `Deprecation` tests.",
        "createdAt" : "2021-01-03T22:08:34Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "ae08800d-c0c1-496a-8df6-c342644fe8b0",
        "parentId" : "58022b96-b816-4ea9-97c3-205880703fbf",
        "authorId" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "body" : "@rossbar Is this something numpydoc can check for?",
        "createdAt" : "2021-01-21T22:33:40Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "tags" : [
        ]
      },
      {
        "id" : "e3bff147-ca85-4f92-bd90-8ab9dde80078",
        "parentId" : "58022b96-b816-4ea9-97c3-205880703fbf",
        "authorId" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "body" : "Maybe we should give an explicit example of how that looks like in a docstring.",
        "createdAt" : "2021-01-21T22:33:57Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "tags" : [
        ]
      },
      {
        "id" : "4da6f31c-32b6-49b0-9eae-210238b8eb64",
        "parentId" : "58022b96-b816-4ea9-97c3-205880703fbf",
        "authorId" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "body" : "(To be clear, I was thinking of `.. deprecated::`).",
        "createdAt" : "2021-01-21T22:39:22Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "tags" : [
        ]
      },
      {
        "id" : "abe6db45-a4ec-4f33-b1e1-a366612a74a9",
        "parentId" : "58022b96-b816-4ea9-97c3-205880703fbf",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "This is about the warning itself. `.. deprecated::` is already mentioned further down. Chuck was thinking this had too many examples already. I think it strikes a decent balance, so would like to leave it as is.",
        "createdAt" : "2021-01-23T17:38:38Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "b97ef1fc36d7547a369928c640cc7246bff1a6ae",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +124,128 @@\n- shall include the version number of the release in which the functionality\n  was deprecated.\n- shall include information on alternatives to the deprecated functionality, or a\n  reason for the deprecation if no clear alternative is available. Note that"
  },
  {
    "id" : "a2742b0c-25fa-4840-b971-b35199ae962e",
    "prId" : 18097,
    "prUrl" : "https://github.com/numpy/numpy/pull/18097#pullrequestreview-574864081",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca42d836-3b51-47e2-a90b-4db17ec9b1a3",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Just to note, I am not sure how reliably we currently are about this for very clear cut cases. I expect they do not hit the mailing list fairly regularly.  I am happy with the general rule though (usually there is some API decision as well anyway, and for that it is just as relevant).\r\n\r\nWhile most of the document isn't so strict that it seems very necessary. An explicit \"escape hatch\" that this can be overruled e.g. by an accepted NEP might make sense?",
        "createdAt" : "2021-01-03T22:29:19Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "cae9db58-fc07-4ab8-93d5-b2a44c68f623",
        "parentId" : "ca42d836-3b51-47e2-a90b-4db17ec9b1a3",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "That NEP has then already hit the mailing list. This is a hard \"you must get approval on the mailing list\". There are many people who do not follow all GitHub traffic (for example, I have notifications for new issues and PRs turned off right now). API changes and deprecations are the two things that must be noted on the mailing list.",
        "createdAt" : "2021-01-23T17:50:14Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "b97ef1fc36d7547a369928c640cc7246bff1a6ae",
    "line" : 230,
    "diffHunk" : "@@ -1,1 +217,221 @@All deprecations must be proposed on the mailing list in order to give everyone\nwith an interest in NumPy development a chance to comment. Removal of\ndeprecated functionality does not need discussion on the mailing list.\n\n"
  },
  {
    "id" : "9bb96005-a7e7-4e19-88ac-f96b37f78201",
    "prId" : 18097,
    "prUrl" : "https://github.com/numpy/numpy/pull/18097#pullrequestreview-574869527",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8f3f047-3ee1-4cce-b81b-348ffe3c69ca",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Does it make sense to add half a sentence about what this `new` actually changed (I honestly don't know)? It feels a bit like two examples (although it is fine to keep it as one).",
        "createdAt" : "2021-01-03T22:44:22Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "ab179b8c-d656-43c7-ad00-06db455ae8c9",
        "parentId" : "b8f3f047-3ee1-4cce-b81b-348ffe3c69ca",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "I don't think so. It was a single planned behaviour change, executed in multiple steps.",
        "createdAt" : "2021-01-23T19:11:33Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "b97ef1fc36d7547a369928c640cc7246bff1a6ae",
    "line" : 251,
    "diffHunk" : "@@ -1,1 +238,242 @@\n**Changing the behavior of a function**\n\n``np.histogram`` is probably the most infamous example.\nFirst, a new keyword ``new=False`` was introduced, this was then switched"
  },
  {
    "id" : "34d68232-11d7-4331-8af7-4282ea358825",
    "prId" : 18097,
    "prUrl" : "https://github.com/numpy/numpy/pull/18097#pullrequestreview-574864442",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a1b8ae2-bee4-4432-8b28-cb70616349c2",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Cool, just curious, have you used this: https://sourcegraph.com/search before? This seems nicer, but not sure how they compare.",
        "createdAt" : "2021-01-03T23:15:14Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "f1ac47d1-9e07-47ff-a20c-c896d4fc8d60",
        "parentId" : "8a1b8ae2-bee4-4432-8b28-cb70616349c2",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "I have, but I use both rarely so don't have a strong preference between the two. \r\n\r\nWill add the reference.",
        "createdAt" : "2021-01-23T17:55:26Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "b97ef1fc36d7547a369928c640cc7246bff1a6ae",
    "line" : 453,
    "diffHunk" : "@@ -1,1 +335,339 @@- `PEP 387 - Backwards Compatibility Policy <https://www.python.org/dev/peps/pep-0387/>`__\n\n.. [1] https://searchcode.com/\n\n.. [2] https://sourcegraph.com/search"
  },
  {
    "id" : "8241dbbb-ac27-4347-ad13-0323dad6aafb",
    "prId" : 18097,
    "prUrl" : "https://github.com/numpy/numpy/pull/18097#pullrequestreview-574864817",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d70dfe11-0cb0-4441-ac33-254e3132b951",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "I don't think there is a need for the out-of-scope list.",
        "createdAt" : "2021-01-03T23:19:49Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "c8b953ca-6842-4b4d-a3ce-aff964629194",
        "parentId" : "d70dfe11-0cb0-4441-ac33-254e3132b951",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Making too many concrete decisions was a main complaint about the first draft, so I'd like to keep it. Having an out of scope is almost always a good idea.",
        "createdAt" : "2021-01-23T18:01:05Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "b97ef1fc36d7547a369928c640cc7246bff1a6ae",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +49,53 @@\n- Making concrete decisions about deprecations of particular functionality.\n- NumPy's versioning scheme.\n\n"
  },
  {
    "id" : "2b36296c-94c4-4b9a-a718-45ad185c0348",
    "prId" : 18097,
    "prUrl" : "https://github.com/numpy/numpy/pull/18097#pullrequestreview-574863593",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "165d5220-a407-42f7-b43b-73c6e81118f5",
        "parentId" : null,
        "authorId" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "body" : "Should we provide guidance on how this should be done?",
        "createdAt" : "2021-01-21T22:35:44Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "tags" : [
        ]
      },
      {
        "id" : "a450e399-1eca-45cf-b8e3-f37292fe10cd",
        "parentId" : "165d5220-a407-42f7-b43b-73c6e81118f5",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "there's an example further down already",
        "createdAt" : "2021-01-23T17:43:23Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "b97ef1fc36d7547a369928c640cc7246bff1a6ae",
    "line" : 147,
    "diffHunk" : "@@ -1,1 +134,138 @@  first present.\n- shall not be introduced in micro (bug fix) releases.\n- shall set a ``stacklevel``, so the warning appears to come from the correct\n  place.\n- shall be mentioned in the documentation for the functionality. A"
  },
  {
    "id" : "3607f0b6-18e8-4355-ac83-ef6e41487f06",
    "prId" : 18097,
    "prUrl" : "https://github.com/numpy/numpy/pull/18097#pullrequestreview-576443855",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e51e82c6-72f8-41cd-ad7e-4a4c4b258816",
        "parentId" : null,
        "authorId" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "body" : "Maybe just keep listing these in every release's notes until they are finally removed?",
        "createdAt" : "2021-01-21T22:37:17Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "tags" : [
        ]
      },
      {
        "id" : "c6ea60e6-0335-4925-a1ba-0f51ff080d9c",
        "parentId" : "e51e82c6-72f8-41cd-ad7e-4a4c4b258816",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "I'd prefer not to, that would just be confusing and we've never done that.",
        "createdAt" : "2021-01-23T17:43:03Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "b1b1e9d5-4815-4670-ae46-bdd8167c5faa",
        "parentId" : "e51e82c6-72f8-41cd-ad7e-4a4c4b258816",
        "authorId" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "body" : "An \"upcoming deprecations\" section isn't so crazy, is it? But agreed that this is not the place to discuss such a suggestion. ",
        "createdAt" : "2021-01-25T07:44:48Z",
        "updatedAt" : "2021-01-26T08:45:04Z",
        "lastEditedBy" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "tags" : [
        ]
      },
      {
        "id" : "49a1c05b-1a3f-430d-a06d-eb786ba189fc",
        "parentId" : "e51e82c6-72f8-41cd-ad7e-4a4c4b258816",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "I think you mean \"upcoming backwards incompatible changes\"? It's not crazy, but it is extra work and duplicate content. And there's deprecations that may not expire for a long time, I'd rather people read the release notes when they come out and otherwise just pay attention to deprecation warnings in their code.\r\n\r\nOne other concern: the release notes are already too long, I have to choose what to cut to make it fit in the Tidelift interface (which IIRC is max 1500 words).",
        "createdAt" : "2021-01-26T08:17:12Z",
        "updatedAt" : "2021-01-26T08:17:12Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "2a548929-8b77-428b-85f1-7be5123463bc",
        "parentId" : "e51e82c6-72f8-41cd-ad7e-4a4c4b258816",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "It would be interesting if any project is in the habit of keeping such a list? I agree that the release notes themselves are probably not a good spot (but they could include a link). It also doesn't fit too well, with the fragment process, unless we special case deprecations.",
        "createdAt" : "2021-01-26T15:08:04Z",
        "updatedAt" : "2021-01-26T15:08:05Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b97ef1fc36d7547a369928c640cc7246bff1a6ae",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +131,135 @@  for changes that need attention again after already having been deprecated or\n  needing extra attention for some reason.\n- shall be listed in the release notes of the release where the deprecation is\n  first present.\n- shall not be introduced in micro (bug fix) releases."
  },
  {
    "id" : "e0cf0ee1-1004-428f-8b48-fd477a9b3167",
    "prId" : 18097,
    "prUrl" : "https://github.com/numpy/numpy/pull/18097#pullrequestreview-574872052",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4dedbb8a-1bd5-4d6c-ab12-1cebbb47b952",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Maybe \"give rise to long debates and delay accepting\"",
        "createdAt" : "2021-01-23T19:49:48Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b97ef1fc36d7547a369928c640cc7246bff1a6ae",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +30,34 @@errors or having a better user experience for new users.  These competing\nneeds often give rise to long debates and delay accepting or rejecting\ncontributions.  This NEP tries to address that by providing a policy as well\nas examples and rationales for when it is or isn't a good idea to break\nbackwards compatibility."
  },
  {
    "id" : "e1bd19b8-0670-4a70-9408-2dac2ab2406e",
    "prId" : 18097,
    "prUrl" : "https://github.com/numpy/numpy/pull/18097#pullrequestreview-574874716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25e498d1-d9b4-49c4-a5f3-9437fd18ed17",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I'd make the parenthetical insert a separate, closing sentence.\r\n\"That also gave users an easy way to update ￼their code by doing `pip install numpy-financial`.\"",
        "createdAt" : "2021-01-23T20:31:19Z",
        "updatedAt" : "2021-01-24T11:51:09Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b97ef1fc36d7547a369928c640cc7246bff1a6ae",
    "line" : 416,
    "diffHunk" : "@@ -1,1 +306,310 @@deprecation period made sense.  That also gave users an easy way to update\ntheir code by doing `pip install numpy-financial`.\n\n\nAlternatives"
  }
]