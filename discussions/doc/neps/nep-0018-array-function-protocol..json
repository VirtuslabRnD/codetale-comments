[
  {
    "id" : "5a543b30-af51-4533-a5a3-845a8054f5c4",
    "prId" : 11189,
    "prUrl" : "https://github.com/numpy/numpy/pull/11189#pullrequestreview-125398351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4accbedb-9ee6-4675-9433-70ca26b8f4fa",
        "parentId" : null,
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "This particular reduction is an example of a `ufunc` - maybe stick to the more complicated example of `np.mean`?",
        "createdAt" : "2018-06-03T14:52:05Z",
        "updatedAt" : "2018-06-03T15:20:10Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9020498bd3b3c4e504ead95a8203f8f301e01a1",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +72,76 @@\nThis protocol is intended to be a catch-all for NumPy functionality that\nis not covered by existing protocols, like reductions (like ``np.sum``)\nor universal functions (like ``np.exp``). The semantics are very similar\nto ``__array_ufunc__``, except the operation is specified by an"
  },
  {
    "id" : "cab8708b-b65f-4b84-8af6-04012fcb9c00",
    "prId" : 11189,
    "prUrl" : "https://github.com/numpy/numpy/pull/11189#pullrequestreview-125398351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23c5f8f7-3fd4-43b9-9a51-45d46ffc3c11",
        "parentId" : null,
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "Might be worth mentioning that the dance decorator could do this part as well!",
        "createdAt" : "2018-06-03T15:16:14Z",
        "updatedAt" : "2018-06-03T15:20:10Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9020498bd3b3c4e504ead95a8203f8f301e01a1",
    "line" : 487,
    "diffHunk" : "@@ -1,1 +485,489 @@from default values. This is similar to `what NumPy already has\ndone <https://github.com/numpy/numpy/blob/v1.14.2/numpy/core/fromnumeric.py#L1865-L1867>`__,\ne.g., for the optional ``keepdims`` argument in ``sum``:\n\n.. code:: python"
  },
  {
    "id" : "41b5b714-5e6d-4da1-988f-7925a026a158",
    "prId" : 11189,
    "prUrl" : "https://github.com/numpy/numpy/pull/11189#pullrequestreview-139346529",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "225595ed-64c0-4508-afca-30bf1081c239",
        "parentId" : null,
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "It's a mini-thing, but one might as well have the dance return either a result or `NotImplemented`.",
        "createdAt" : "2018-06-03T18:12:59Z",
        "updatedAt" : "2018-06-03T18:13:00Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      },
      {
        "id" : "9196ef01-5f4f-4337-868c-336318ffe96e",
        "parentId" : "225595ed-64c0-4508-afca-30bf1081c239",
        "authorId" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "body" : "Iâ€™d be in favor of this. No need to complicate things with multiple out args, remember the order and so on.",
        "createdAt" : "2018-07-23T06:39:12Z",
        "updatedAt" : "2018-07-23T06:39:13Z",
        "lastEditedBy" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9020498bd3b3c4e504ead95a8203f8f301e01a1",
    "line" : 220,
    "diffHunk" : "@@ -1,1 +218,222 @@\n    def broadcast_to(array, shape, subok=False):\n        success, value = do_array_function_dance(\n            func=broadcast_to,\n            relevant_arguments=[array],"
  }
]