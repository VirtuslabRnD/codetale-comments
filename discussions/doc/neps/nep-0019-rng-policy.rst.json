[
  {
    "id" : "82c9c573-3655-401d-a994-b1a5ce4ae290",
    "prId" : 11229,
    "prUrl" : "https://github.com/numpy/numpy/pull/11229#pullrequestreview-125409875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5e09ee6-074a-4234-b878-9a7ac8f613d3",
        "parentId" : null,
        "authorId" : "b15cf1a1-ba9d-47aa-b157-e0c1f40c5c5c",
        "body" : "RandomState could pretty easily be spun out into a stand-alone package, if useful. It is effectively a stand-alone submodule already.",
        "createdAt" : "2018-06-03T22:12:35Z",
        "updatedAt" : "2018-06-03T22:18:34Z",
        "lastEditedBy" : "b15cf1a1-ba9d-47aa-b157-e0c1f40c5c5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "69c7f3270cdff08ddb4c87dd3291bba5d8de5b2a",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +95,99 @@subsystem alongside it.  This allows anyone who has been relying on our old\nstream-compatibility guarantee to have plenty of time to migrate.\n``RandomState`` will be considered deprecated, but with a long deprecation\ncycle, at least a few years.  Deprecation warnings will start silent but become\nincreasingly noisy over time.  Bugs in the current state of the code will *not*"
  },
  {
    "id" : "062c62b1-90d6-4ce2-a0e6-703d2ee11cb0",
    "prId" : 11229,
    "prUrl" : "https://github.com/numpy/numpy/pull/11229#pullrequestreview-125409875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e31e3387-c7bc-43c1-b6b1-d75dd0c4a94b",
        "parentId" : null,
        "authorId" : "b15cf1a1-ba9d-47aa-b157-e0c1f40c5c5c",
        "body" : "One of these (bytes, uintegers) seems redundant.  uintegers should probably by 64 bit.",
        "createdAt" : "2018-06-03T22:15:30Z",
        "updatedAt" : "2018-06-03T22:18:34Z",
        "lastEditedBy" : "b15cf1a1-ba9d-47aa-b157-e0c1f40c5c5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "69c7f3270cdff08ddb4c87dd3291bba5d8de5b2a",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +136,140 @@\n    * ``.bytes()``\n    * ``.random_uintegers()``\n    * ``.random_sample()``\n"
  },
  {
    "id" : "d1b36fd4-4be7-49a3-a5ef-4034f4f7e67f",
    "prId" : 11229,
    "prUrl" : "https://github.com/numpy/numpy/pull/11229#pullrequestreview-125409875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ad773d4-ed59-4c7e-8194-6f616facc1b5",
        "parentId" : null,
        "authorId" : "b15cf1a1-ba9d-47aa-b157-e0c1f40c5c5c",
        "body" : "standard_gamma and standard_exponential are important enough to be included here IMO.",
        "createdAt" : "2018-06-03T22:17:01Z",
        "updatedAt" : "2018-06-03T22:18:34Z",
        "lastEditedBy" : "b15cf1a1-ba9d-47aa-b157-e0c1f40c5c5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "69c7f3270cdff08ddb4c87dd3291bba5d8de5b2a",
    "line" : 159,
    "diffHunk" : "@@ -1,1 +157,161 @@    * ``.randint()``\n    * ``.uniform()``\n    * ``.normal()``\n    * ``.standard_normal()``\n    * ``.choice()``"
  },
  {
    "id" : "24452923-bb3f-4f00-8657-d6365a765f2d",
    "prId" : 11229,
    "prUrl" : "https://github.com/numpy/numpy/pull/11229#pullrequestreview-125409875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3df07422-5f42-4ad7-9f68-1e678607063b",
        "parentId" : null,
        "authorId" : "b15cf1a1-ba9d-47aa-b157-e0c1f40c5c5c",
        "body" : "I agree with this.  It is especially hard since internally many generators depend on other C-implementations of generators (e.g., Student's t on Normal), which makes versioned Student's T harder.",
        "createdAt" : "2018-06-03T22:18:15Z",
        "updatedAt" : "2018-06-03T22:18:34Z",
        "lastEditedBy" : "b15cf1a1-ba9d-47aa-b157-e0c1f40c5c5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "69c7f3270cdff08ddb4c87dd3291bba5d8de5b2a",
    "line" : 182,
    "diffHunk" : "@@ -1,1 +180,184 @@Concretely, adding in versioning makes maintenance of ``numpy.random``\ndifficult.  Necessarily, we would be keeping lots of versions of the same code\naround.  Adding a new algorithm safely would still be quite hard.\n\nBut most importantly, versioning is fundamentally difficult to *use* correctly."
  },
  {
    "id" : "e8f767cb-5524-4aef-a9a4-e6af317f778e",
    "prId" : 11229,
    "prUrl" : "https://github.com/numpy/numpy/pull/11229#pullrequestreview-125410145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3baaadaa-1514-438d-b656-781fb45925bf",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I feel that there's a second use-case here: test suites of downstream packages  It may not be wise to write tests that make assumptions about the exact array a produced in our random function, but I suspect even we are guilty of it. This isn't something that can be fixed by software versioning - the scipy test suite should run against all supported versions of numpy.\r\n\r\nIt would be good to see this use case mentioned in the NEP somewhere.",
        "createdAt" : "2018-06-03T22:23:03Z",
        "updatedAt" : "2018-06-03T22:23:24Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "69c7f3270cdff08ddb4c87dd3291bba5d8de5b2a",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +44,48 @@simulations that formed the basis of their scientific publication could be\nreproduced years later, exactly, with whatever version of ``numpy`` that was\ncurrent at the time.  We were keen to support reproducible research, and it was\nstill early in the life of ``numpy.random``.  We had not seen much cause to\nchange the distribution methods all that much."
  }
]