[
  {
    "id" : "9b369a2f-188e-4f00-9c52-989a88d07cd4",
    "prId" : 11689,
    "prUrl" : "https://github.com/numpy/numpy/pull/11689#pullrequestreview-192031462",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c208af18-1183-4eba-9b1e-9a58ffe95a91",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "It would be good to note that:\r\n* These sequences are combined essentially via `zip`, and iterated together rather than as a cartesian product\r\n* There is a `*N` syntax for repeated elements",
        "createdAt" : "2019-01-14T07:10:06Z",
        "updatedAt" : "2019-01-14T07:10:06Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d9aceb8a2e320592e3fe5929932e046402e5a10",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +335,339 @@     * #totype = npy_byte, npy_ubyte, npy_short, npy_ushort, npy_int, npy_uint,\n     *           npy_long, npy_ulong, npy_longlong, npy_ulonglong,\n     *           npy_datetime, npy_timedelta#\n     */\n"
  },
  {
    "id" : "f0b05346-9cec-4165-9c0d-89b168e47675",
    "prId" : 11689,
    "prUrl" : "https://github.com/numpy/numpy/pull/11689#pullrequestreview-192031551",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43155191-322e-457b-8cf3-b4edfcfc124e",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Only C files? It looks like it might support other files too.",
        "createdAt" : "2019-01-14T07:10:43Z",
        "updatedAt" : "2019-01-14T07:10:44Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d9aceb8a2e320592e3fe5929932e046402e5a10",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +302,306 @@\nNumPy Distutils preprocesses C source files (extension: :file:`.c.src`) written\nin a custom templating language to generate C code. The :c:data:`@` symbol is\nused to wrap macro-style variables to empower a string substitution mechansim\nthat might describe (for instance) a set of data types."
  },
  {
    "id" : "597d426a-0f00-41a7-9900-8c27260191be",
    "prId" : 13170,
    "prUrl" : "https://github.com/numpy/numpy/pull/13170#pullrequestreview-217200918",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b2c8be5-b491-4e8e-a6e7-3d2f2f2821eb",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "C formatting does not like the templating syntax so I had to turn it off.",
        "createdAt" : "2019-03-21T12:06:54Z",
        "updatedAt" : "2019-03-21T12:06:54Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3017129336ba055b3c718ba16ec8333f4947eac",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +320,324 @@and :c:data:`/**end repeat1**/`. String replacement specifications are started\nand terminated using :c:data:`#`. This may be clearer in the following\ntemplate source example::\n\n    /* TIMEDELTA to non-float types */"
  }
]