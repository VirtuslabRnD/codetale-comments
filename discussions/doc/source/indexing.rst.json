[
  {
    "id" : "3f6f6010-d321-4c3e-a8e0-9822d37784c9",
    "prId" : 5390,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "434b9687-a1e3-4ed6-a2bf-266ad2900738",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "versionadded?\n",
        "createdAt" : "2013-11-02T02:56:16Z",
        "updatedAt" : "2013-11-06T00:06:07Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7aa7880fa0113f37c2a2956e8f305d23a3730cbd",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +1333,1337 @@In chained expressions, the order may determine whether a copy is returned or not.\nIf an expression will set values on a copy of a slice, then a ``SettingWithCopy``\nexception will be raised (this raise/warn behavior is new starting in 0.13.0)\n\nYou can control the action of a chained assignment via the option ``mode.chained_assignment``,"
  },
  {
    "id" : "c20dfc87-4a99-41f5-b18b-fd449ef10e27",
    "prId" : 7188,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99a7fe8e-a05e-4215-a633-e2fee1739f15",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe move these couple of lines to an actual `.. warning::`  see below\n",
        "createdAt" : "2014-05-20T19:01:15Z",
        "updatedAt" : "2014-05-20T19:01:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b2e417f6-dcda-4e37-ae07-e6f7f4c06019",
        "parentId" : "99a7fe8e-a05e-4215-a633-e2fee1739f15",
        "authorId" : "515dba19-2c9c-4ea0-9437-95f02be3ae2b",
        "body" : "I considered that but thought this was enough of a gotcha that I wanted to\nkeep the warning right there with the problematic example.\n\nBut I am willing to be overruled.\n\nOn Tue, May 20, 2014 at 3:01 PM, jreback notifications@github.com wrote:\n\n> In doc/source/indexing.rst:\n> \n> > @@ -206,15 +206,19 @@ as an attribute:\n> >     dfa.A\n> >     panel.one\n> > \n> > -Setting is allowed as well\n> > +You can use attribute access to modify an existing element of a Series or column of a DataFrame, but be careful;\n> \n> maybe move these couple of lines to an actual .. warning:: see below\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/pull/7188/files#r12861818\n> .\n",
        "createdAt" : "2014-05-20T19:08:06Z",
        "updatedAt" : "2014-05-20T19:08:06Z",
        "lastEditedBy" : "515dba19-2c9c-4ea0-9437-95f02be3ae2b",
        "tags" : [
        ]
      }
    ],
    "commit" : "54dd2a1ae633d097f460f1b227b5119b038a7063",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +207,211 @@   panel.one\n\nYou can use attribute access to modify an existing element of a Series or column of a DataFrame, but be careful;\nif you try to use attribute access to create a new column, it fails silently, creating a new attribute rather than a\nnew column."
  },
  {
    "id" : "81747bcd-a015-4650-b2cc-6e46f1a3597a",
    "prId" : 9877,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c1c7099-3432-48e9-95e4-12dde2b41759",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you maybe specify here that the dict keys are matched with the column names?\n",
        "createdAt" : "2015-04-14T14:19:52Z",
        "updatedAt" : "2015-04-14T14:19:52Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "216f051e6c420edd1fdc916aa449e06f32443d3a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +250,254 @@see these accessible attributes.\n\nYou can also assign a ``dict`` to a row of a ``DataFrame``:\n\n.. ipython:: python"
  },
  {
    "id" : "55c631a0-55e7-435b-b98b-2abebf6719e3",
    "prId" : 11343,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "088e9de2-3735-4169-b93e-b13d1b941789",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you put this above the title?\n",
        "createdAt" : "2015-11-01T20:47:34Z",
        "updatedAt" : "2015-11-01T20:47:34Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "bcdb3e9bcf402ee729be151fcff1c73558cad192",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +1371,1375 @@~~~~~~~~~~~~~~\n\n.. _indexing.missing:\n\n.. versionadded:: 0.17.1"
  },
  {
    "id" : "f018f272-bf46-4280-bb46-8a9812ade2b0",
    "prId" : 11343,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "724eaaaf-5e3e-4ed2-b295-0dd93995b09e",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you make this a link to the API docs with `:meth:`Index.fillna`` ?\n",
        "createdAt" : "2015-11-01T20:49:07Z",
        "updatedAt" : "2015-11-01T20:49:11Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "bcdb3e9bcf402ee729be151fcff1c73558cad192",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +1381,1385 @@   exclude missing values implicitly.\n\n``Index.fillna`` fills missing values with specified scalar value.\n\n.. ipython:: python"
  }
]