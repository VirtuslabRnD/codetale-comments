[
  {
    "id" : "43b81df3-6c0c-4b11-b7a8-0f2e07738d3f",
    "prId" : 13849,
    "prUrl" : "https://github.com/numpy/numpy/pull/13849#pullrequestreview-255293122",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "452d603f-f79d-4f1a-af66-a110cae24d1d",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "nice explanation",
        "createdAt" : "2019-06-27T15:08:16Z",
        "updatedAt" : "2019-06-28T01:07:06Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "49450483628d96d0bdf9caf18e627f05ab9a3431",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +106,110 @@.. _`suffers if there are too many 0s`: http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html\n.. _`avalanche properties`: https://en.wikipedia.org/wiki/Avalanche_effect\n.. _`not unique to numpy`: https://www.iro.umontreal.ca/~lecuyer/myftp/papers/parallel-rng-imacs.pdf\n\n"
  },
  {
    "id" : "5b8a6366-551c-4a40-aff4-fe21b93e92fb",
    "prId" : 13849,
    "prUrl" : "https://github.com/numpy/numpy/pull/13849#pullrequestreview-255504445",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf12ae86-b753-48f8-a000-3b4f552e32bf",
        "parentId" : null,
        "authorId" : "b15cf1a1-ba9d-47aa-b157-e0c1f40c5c5c",
        "body" : "Ahh, here is the guarantee.   Stream of comments...",
        "createdAt" : "2019-06-27T22:07:02Z",
        "updatedAt" : "2019-06-28T01:07:06Z",
        "lastEditedBy" : "b15cf1a1-ba9d-47aa-b157-e0c1f40c5c5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "49450483628d96d0bdf9caf18e627f05ab9a3431",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +85,89 @@.. [1] The algorithm is carefully designed to eliminate a number of possible\n       ways to collide. For example, if one only does one level of spawning, it\n       is guaranteed that all states will be unique. But it's easier to\n       estimate the naive upper bound on a napkin and take comfort knowing\n       that the probability is actually lower."
  },
  {
    "id" : "4322e71c-6bcf-4443-afa0-38ab7cee3981",
    "prId" : 13849,
    "prUrl" : "https://github.com/numpy/numpy/pull/13849#pullrequestreview-255504867",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7ed28d7-3900-460c-9adf-3386dc33b47e",
        "parentId" : null,
        "authorId" : "b15cf1a1-ba9d-47aa-b157-e0c1f40c5c5c",
        "body" : "Same \"ahh\" here. Should do a review. ",
        "createdAt" : "2019-06-27T22:08:19Z",
        "updatedAt" : "2019-06-28T01:07:06Z",
        "lastEditedBy" : "b15cf1a1-ba9d-47aa-b157-e0c1f40c5c5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "49450483628d96d0bdf9caf18e627f05ab9a3431",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +89,93 @@       that the probability is actually lower.\n\n.. [2] In this calculation, we can ignore the amount of numbers drawn from each\n       stream. Each of the PRNGs we provide has some extra protection built in\n       that avoids overlaps if the `~SeedSequence` pools differ in the"
  }
]