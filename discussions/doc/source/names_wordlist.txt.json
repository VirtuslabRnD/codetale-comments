[
  {
    "id" : "0f8e0312-3720-4704-bf58-10947b0c4562",
    "prId" : 21109,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21109#pullrequestreview-125441647",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b423467-ef24-4874-bb4c-adf4256078ae",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "these look like the names of our contributors? can we simply generate this?\r\n\r\nsomething like: `git log --format='%an' | sort|uniq` (I guess would have to split on whitespace as well)",
        "createdAt" : "2018-06-03T22:50:33Z",
        "updatedAt" : "2018-06-03T22:51:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "04484729-9267-45ec-8430-8dddc76c6e17",
        "parentId" : "6b423467-ef24-4874-bb4c-adf4256078ae",
        "authorId" : "314cd583-05e9-4ebb-b63f-f449a4b06f6d",
        "body" : "The spelling extension checks every single file for text/docstrings so the names of the contributors needed to be whitelisted in order to be ignored by the spellchecker, so the name of every contributor is added to the build.\r\n\r\nHow would you advise on generating this? The reason why I'm asking is that the spelling extension uses `path.join` on anything that you pass as a wordlist (one or two files) so we only get an exception when trying to use let's say a list of names.\r\n\r\nI suppose we could run the command and write it to file on every run? Perhaps using something like a tempfile to get all those names and use that file on every run?  \r\n\r\nAlso, I have encountered a few issues when decoding and splitting every name - the spelling extension makes some weird word divisions at times, when I try to decode and split the list  Yan Facai name will be split like this: `['颜发才（Yan', 'Facai）']` since the wordlist expects one line per word, then this name will always be marked as wrong due to how the split divided the name.  I suppose using regex could help with this matter but not sure.",
        "createdAt" : "2018-06-04T05:51:19Z",
        "updatedAt" : "2018-06-04T05:52:16Z",
        "lastEditedBy" : "314cd583-05e9-4ebb-b63f-f449a4b06f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d929098822a10afa5a9e6f728be72ff56d9c5e29",
    "line" : 1168,
    "diffHunk" : "@@ -1,1 +1166,1170 @@Carrucciu\nHoyer\nPascoe\nSantegoeds\nGrainger"
  }
]