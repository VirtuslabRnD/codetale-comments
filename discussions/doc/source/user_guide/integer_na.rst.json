[
  {
    "id" : "c2c209ac-8cd5-4881-a311-72935ab63e12",
    "prId" : 29799,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29799#pullrequestreview-322648334",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81e5b81b-3437-4239-b015-69c6b8d91e5d",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This is my attempt to explain the inconsistency between `pd.array` and `pd.Series` we're introducing. It's not ideal, but I think it's the right behavior for now.",
        "createdAt" : "2019-11-22T19:41:41Z",
        "updatedAt" : "2019-12-02T12:22:10Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "5acf60d2-f5f3-455a-ac62-1410a8075caa",
        "parentId" : "81e5b81b-3437-4239-b015-69c6b8d91e5d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Eventually we want to share code between these (and ideally also the Index constructor), right?",
        "createdAt" : "2019-11-25T22:16:31Z",
        "updatedAt" : "2019-12-02T12:22:10Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "94b0d67e-b6f3-4f20-8e2f-e957a76a88f3",
        "parentId" : "81e5b81b-3437-4239-b015-69c6b8d91e5d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "In the issue (https://github.com/pandas-dev/pandas/issues/29791), I mentioned for that reason the idea of a keyword to control this preference between old or new dtypes. \r\n(but we can also introduce that at the moment we want to share code if that seems useful then)",
        "createdAt" : "2019-11-25T23:37:51Z",
        "updatedAt" : "2019-12-02T12:22:10Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0f3082ce4d2ca66533cdc0b4dabc2612b8e6e04",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +52,56 @@.. warning::\n\n   Currently :meth:`pandas.array` and :meth:`pandas.Series` use different\n   rules for dtype inference. :meth:`pandas.array` will infer a nullable-\n   integer dtype"
  },
  {
    "id" : "778309db-6261-4391-bf5d-940231eff473",
    "prId" : 29964,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29964#pullrequestreview-337098618",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4ef0b7d-cc0b-45d9-95fb-a876ddf579f1",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "may want to add a versionchanged tag here (and below)",
        "createdAt" : "2019-12-30T13:03:44Z",
        "updatedAt" : "2019-12-30T16:13:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5d6832f7f7f21a3a1f19ab0f56eaa48c25845de",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +47,51 @@   pd.array([1, 2, np.nan], dtype=\"Int64\")\n\nAll NA-like values are replaced with :attr:`pandas.NA`.\n\n.. ipython:: python"
  }
]