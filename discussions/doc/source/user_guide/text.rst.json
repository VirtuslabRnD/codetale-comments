[
  {
    "id" : "4af9e82a-585c-41a0-9dd8-8764cd40a788",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-290655296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f682075-cafd-4b61-a15f-4f63a8dfda70",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Does or should `dtype=str` work here as well?",
        "createdAt" : "2019-09-09T16:23:12Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "584ae3e6-48be-41a5-9c34-888eb1242e14",
        "parentId" : "2f682075-cafd-4b61-a15f-4f63a8dfda70",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "No, as that will be API breaking. I'll make sure to document this if it isn't already. Eventually we'll may want to deprecate `dtype=\"str\"` in favor of \"string\".",
        "createdAt" : "2019-09-09T18:17:06Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "7a1c3e23-b838-45c1-88db-2f1e88f7516d",
        "parentId" : "2f682075-cafd-4b61-a15f-4f63a8dfda70",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Makes sense - thanks for clarifying",
        "createdAt" : "2019-09-19T15:29:48Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +53,57 @@.. ipython:: python\n\n   pd.Series(['a', 'b', 'c'], dtype=\"string\")\n   pd.Series(['a', 'b', 'c'], dtype=pd.StringDtype())\n"
  },
  {
    "id" : "8749bb37-799b-488b-8d2a-5759610c22ee",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-291763787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ecebd5de-24db-4db3-ada5-d8e3d368168b",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "not sure of the convention, should Series and DataFrame be \":class:`Foo`\" in this contest?",
        "createdAt" : "2019-09-18T20:32:16Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "5b866fa5-7634-4226-b0e6-d43d3f1fd16a",
        "parentId" : "ecebd5de-24db-4db3-ada5-d8e3d368168b",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Don't think we have a formal policy. I vaguely recall  a discussion somewhere about doing it ~once per paragraph?",
        "createdAt" : "2019-09-23T13:11:04Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +56,60 @@   pd.Series(['a', 'b', 'c'], dtype=pd.StringDtype())\n\nOr ``astype`` after the ``Series`` or ``DataFrame`` is created\n\n.. ipython:: python"
  },
  {
    "id" : "5c3ccb8d-4e9e-4072-9894-4314719ab6df",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-290184044",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d675e79-ed20-4ce7-9e55-45e132e5d4b1",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "whitespace off by one?  (also in master)",
        "createdAt" : "2019-09-18T20:33:01Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +194,198 @@   s3 = pd.Series(['A', 'B', 'C', 'Aaba', 'Baca',\n                   '', np.nan, 'CABA', 'dog', 'cat'],\n                  dtype=\"string\")\n   s3\n   s3.str.replace('^.a|dog', 'XX-XX ', case=False)"
  },
  {
    "id" : "65c82a0d-9894-476c-b86e-3f8c7098ee74",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-291857601",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d0b6c6d-f5ec-4f12-bc20-4b956c5c863b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "are we contemplating allowing ``dtype='str'`` and/or ``dtype=str`` here as well? (e.g. the concept of multiple dtype aliases?)",
        "createdAt" : "2019-09-23T14:37:17Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7dcccf56-e122-4f08-b7f5-eed1b3b04cb6",
        "parentId" : "9d0b6c6d-f5ec-4f12-bc20-4b956c5c863b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we currently map ``str`` -> ``object``, are we changing this? (maybe just in the future)?",
        "createdAt" : "2019-09-23T14:37:52Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "60c43504-57c6-46c2-b398-de4688d12e21",
        "parentId" : "9d0b6c6d-f5ec-4f12-bc20-4b956c5c863b",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "> we currently map str -> object, are we changing this? (maybe just in the future)?\r\n \r\nMaybe just in the future. Changing it now would be too disruptive I think.\r\n\r\nI'm not super happy about `str` and `'str'` being different from `'string'`, but I think it's unavoidable. We *could* use `'text'` as the string alias, and TextArray / TextDtype to disambiguate a bit?",
        "createdAt" : "2019-09-23T15:08:50Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "2ef7d2e6-1278-4265-bc4c-49c2a5047385",
        "parentId" : "9d0b6c6d-f5ec-4f12-bc20-4b956c5c863b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, yeah maybe let's rename this to TextDtype / 'text' I think would be less confusing ",
        "createdAt" : "2019-09-23T15:18:45Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 269,
    "diffHunk" : "@@ -1,1 +591,595 @@   pd.Index([\"a1a2\", \"b1\", \"c1\"]).str.extractall(two_groups)\n\n   pd.Series([\"a1a2\", \"b1\", \"c1\"], dtype=\"string\").str.extractall(two_groups)\n\n"
  },
  {
    "id" : "6449b7a8-8b64-40ce-aafb-e4f4ed559003",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-295023200",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "292c3fc9-3027-436a-8774-5d958da88b75",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "Text Methods? (actually now that we are calling this text, is that weird to have a .str accessor?)",
        "createdAt" : "2019-09-26T14:13:00Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "de503bd8-d3a6-4008-8aac-7758ac83fb8b",
        "parentId" : "292c3fc9-3027-436a-8774-5d958da88b75",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I prefer String methods as many of these are aliases to methods in the `string` module / `str` objects.",
        "createdAt" : "2019-09-30T14:38:03Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +69,73 @@.. _text.string_methods:\n\nString Methods\n--------------\n"
  },
  {
    "id" : "c197ae4d-a903-4bec-86e7-1ed72291166a",
    "prId" : 29640,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29640#pullrequestreview-318021032",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "573997c4-ac8d-4529-94cb-5d631d61ebd1",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you create & show s in an earlier ipython block",
        "createdAt" : "2019-11-17T13:38:01Z",
        "updatedAt" : "2019-11-19T14:36:22Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4bae5e2e32da8f19c745b0583fa5d5ab553b436",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +76,80 @@   rather than either int or float dtype, depending on the presence of NA values.\n\n   .. ipython:: python\n\n      s = pd.Series([\"a\", None, \"b\"], dtype=\"string\")"
  },
  {
    "id" : "beabf49d-40c6-4526-97fe-cec190f806d2",
    "prId" : 30239,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30239#pullrequestreview-334640042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec31a30b-1390-4d4b-88b8-de15247c47ec",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe add a doc-link here (can be followup)",
        "createdAt" : "2019-12-15T21:50:53Z",
        "updatedAt" : "2019-12-15T21:53:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "38ef158e-ee39-469e-882c-065e9cd4b0d9",
        "parentId" : "ec31a30b-1390-4d4b-88b8-de15247c47ec",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I'm going to hold off on this. I'm planning to restructure the docs for integer / boolean / NA once all these PRs are in.",
        "createdAt" : "2019-12-19T13:46:33Z",
        "updatedAt" : "2019-12-19T13:46:34Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "b83d677048ec550dff52e61a51abf068feb226d4",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +75,79 @@   that return **numeric** output will always return a nullable integer dtype,\n   rather than either int or float dtype, depending on the presence of NA values.\n   Methods returning **boolean** output will return a nullable boolean dtype.\n\n   .. ipython:: python"
  },
  {
    "id" : "f4a7d7b4-acae-40c3-b324-17ac48fbee3f",
    "prId" : 30762,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30762#pullrequestreview-338946362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "323c16be-a61b-4f1a-aaad-c1a02b7d8a80",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Should this be `pd.NA` instead of `None`?",
        "createdAt" : "2020-01-06T22:57:23Z",
        "updatedAt" : "2020-01-06T22:57:24Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "48849a1959ed834c024cc570fe73b5ca02db04ae",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +88,92 @@   .. ipython:: python\n\n      s2 = pd.Series([\"a\", None, \"b\"], dtype=\"object\")\n      s2.str.count(\"a\")\n      s2.dropna().str.count(\"a\")"
  },
  {
    "id" : "931700f6-4b33-43dd-bf59-fb28f7dff8b3",
    "prId" : 32807,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32807#pullrequestreview-380665185",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c2641c1-3e98-40ce-92fc-a43484088f5f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "put this in a note block",
        "createdAt" : "2020-03-22T00:25:27Z",
        "updatedAt" : "2020-03-24T05:33:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d4505842-8146-4dd6-9970-1d25691f4ee0",
        "parentId" : "3c2641c1-3e98-40ce-92fc-a43484088f5f",
        "authorId" : "296ac7bb-111f-4c6e-bedc-692544151c69",
        "body" : "I put the following paragraph into a `:note:` block in commit 2f94e0c , then updated that block a bit more in commit 5ff5203",
        "createdAt" : "2020-03-24T20:19:43Z",
        "updatedAt" : "2020-03-24T20:19:44Z",
        "lastEditedBy" : "296ac7bb-111f-4c6e-bedc-692544151c69",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ff52035db7decd0a5df7bb2bc94bd423b061c0d",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +660,664 @@\n.. note::\n\n    The distinction between ``match``, ``fullmatch``, and ``contains`` is strictness:\n    ``fullmatch`` tests whether the entire string matches the regular expression;"
  },
  {
    "id" : "b01e8c2e-bd66-4a14-91ec-75c1dbffb3cf",
    "prId" : 36695,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36695#pullrequestreview-506125910",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f59a0ab2-d170-4bb5-9965-1cf15837989c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you comment on why here (e.g. a single pat is never treated as a regex)",
        "createdAt" : "2020-10-10T16:31:56Z",
        "updatedAt" : "2020-10-10T20:49:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ea4359ba-cfa9-4387-af98-759c831d8a69",
        "parentId" : "f59a0ab2-d170-4bb5-9965-1cf15837989c",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "I think the equivalence here is because $ is being escaped",
        "createdAt" : "2020-10-10T20:56:43Z",
        "updatedAt" : "2020-10-10T21:04:34Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a4a83358c86b005d3f0d2c189cff83d5cb695c4",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +286,290 @@\n    # These lines are equivalent\n    dollars.str.replace(r\"-\\$\", \"-\", regex=True)\n    dollars.str.replace(\"-$\", \"-\", regex=False)\n"
  },
  {
    "id" : "920a7291-0cce-4f22-a8d5-83da5b9883a4",
    "prId" : 36695,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36695#pullrequestreview-506129894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49295899-1611-4ead-be8f-7bd6324b2de6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "great",
        "createdAt" : "2020-10-10T22:21:51Z",
        "updatedAt" : "2020-10-10T22:22:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a4a83358c86b005d3f0d2c189cff83d5cb695c4",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +268,272 @@   s3.str.replace(\"^.a|dog\", \"XX-XX \", case=False, regex=True)\n\n.. warning::\n\n    Some caution must be taken when dealing with regular expressions! The current behavior"
  }
]