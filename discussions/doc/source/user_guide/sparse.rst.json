[
  {
    "id" : "5e055b10-d95f-4f07-b5ea-29b070c63782",
    "prId" : 26137,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26137#pullrequestreview-238587528",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d7809fa-00e0-4c1d-a139-7ed70c97054a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ref to scipy docs?",
        "createdAt" : "2019-05-16T00:08:37Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ec5ab836-de6d-4d1e-a57d-9b3d96d19e05",
        "parentId" : "7d7809fa-00e0-4c1d-a139-7ed70c97054a",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I was thinking, it might also be good to somewhere in this document note the difference between both: when creating from sparse matrix, you convert the sparse values in several 1D sparse columns, not a single 2D sparse matrix",
        "createdAt" : "2019-05-16T08:21:19Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "14460a48-05a1-47f3-b34c-5b8c1a54c8ca",
        "parentId" : "7d7809fa-00e0-4c1d-a139-7ed70c97054a",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Can you clarify this @jorisvandenbossche ",
        "createdAt" : "2019-05-16T19:02:35Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "aa0dd2fb-c0bf-4a7c-ba85-21ed26aa6216",
        "parentId" : "7d7809fa-00e0-4c1d-a139-7ed70c97054a",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "People might think that, since you convert the sparse matrix in a pandas DataFrame, that both are similar and a sparse dataframe is kind of a wrapper around sparse matrix with column names and indices. But the way it is stored is quite different: in a sparse DataFrame each column is stored separately as a sparse 1D array (although compared to COO it is not that much different)",
        "createdAt" : "2019-05-16T19:13:11Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "9f0ff93c-7b22-47a5-95fd-f14e979923e4",
        "parentId" : "7d7809fa-00e0-4c1d-a139-7ed70c97054a",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Gotcha. I'll note that the data will be copied, and the similar structure to COO.",
        "createdAt" : "2019-05-16T19:14:42Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "a47d5a5b-b15b-4d58-bdce-d4e4ed998a83",
        "parentId" : "7d7809fa-00e0-4c1d-a139-7ed70c97054a",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Really, we need a new \"Interaction with SciPy.sparse\" section, that is dataframe-focused. ",
        "createdAt" : "2019-05-16T19:15:42Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "12d8d8300a3fdaa3ae8d0a2e0d3911e085910426",
    "line" : 241,
    "diffHunk" : "@@ -1,1 +196,200 @@   pd.DataFrame({\"A\": pd.SparseArray([0, 1])})\n\nFrom a SciPy sparse matrix, use :meth:`DataFrame.sparse.from_spmatrix`,\n\n.. code-block:: python"
  },
  {
    "id" : "0bfc41d8-1510-4c74-8470-41a49b9218c6",
    "prId" : 26137,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26137#pullrequestreview-238486414",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "303a9c70-5bb6-47ec-937c-9a86381b8061",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is there a reason you are not changing this?",
        "createdAt" : "2019-05-16T00:09:33Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1efb99af-7bd2-49d9-922f-c0313a068e1a",
        "parentId" : "303a9c70-5bb6-47ec-937c-9a86381b8061",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Just laziness.",
        "createdAt" : "2019-05-16T15:53:34Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "12d8d8300a3fdaa3ae8d0a2e0d3911e085910426",
    "line" : 448,
    "diffHunk" : "@@ -1,1 +361,365 @@(relative to ``dense_index=False``) if the sparse matrix is large (and sparse) enough.\n\n.. ipython:: python\n\n   ss_dense = pd.Series.sparse.from_coo(A, dense_index=True)"
  },
  {
    "id" : "d230de9f-8c96-431d-a2fd-0964b36f73cc",
    "prId" : 26137,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26137#pullrequestreview-243009689",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a0edd0a-ca1e-403e-9cda-6c8f2454487f",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "For such a purpose, I was thinking we could also provide `df.sparse.to_sparse()` to convert a full DataFrame to sparse?",
        "createdAt" : "2019-05-16T07:31:04Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "25ec0df8-9ac8-486c-ac37-8e8cfc17e9fc",
        "parentId" : "4a0edd0a-ca1e-403e-9cda-6c8f2454487f",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Makes sense to me, though perhaps as a followup? I don't plan to put more time into sparse personally.",
        "createdAt" : "2019-05-16T18:50:16Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "8054db36-2c54-4406-b7b0-4d606cff123c",
        "parentId" : "4a0edd0a-ca1e-403e-9cda-6c8f2454487f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this would have to be a ``DataFrame.astype('sparse')``  ? though I think, IOW, or is ``.sparse`` allowed on *any* DataFrame? the semantics are a bit odd on this",
        "createdAt" : "2019-05-19T17:53:47Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9ea2a93e-a562-4549-8586-71937141f4fd",
        "parentId" : "4a0edd0a-ca1e-403e-9cda-6c8f2454487f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@TomAugspurger can you respond to this",
        "createdAt" : "2019-05-26T15:24:36Z",
        "updatedAt" : "2019-05-28T20:38:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "731d6ca3-fd11-4f79-b819-1263b5b31336",
        "parentId" : "4a0edd0a-ca1e-403e-9cda-6c8f2454487f",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "> I think, IOW, or is .sparse allowed on any DataFrame? the semantics are a bit odd on this\r\n\r\nKinda. If you just do `df.sparse` on a dataframe without all-sparse values, we raise\r\n\r\n```python\r\nIn [6]: pd.DataFrame({\"A\": [1, 2]}).sparse\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-6-ab0fb67ed650> in <module>\r\n----> 1 pd.DataFrame({\"A\": [1, 2]}).sparse\r\n\r\n...\r\n\r\n~/sandbox/pandas/pandas/core/arrays/sparse.py in _validate(self, data)\r\n   2119         dtypes = data.dtypes\r\n   2120         if not all(isinstance(t, SparseDtype) for t in dtypes):\r\n-> 2121             raise AttributeError(self._validation_msg)\r\n   2122\r\n   2123     @classmethod\r\n\r\nAttributeError: Can only use the '.sparse' accessor with Sparse data.\r\n\r\n```\r\n\r\nBut we also allow for `pd.DataFrame.sparse.from_spmatrix`.",
        "createdAt" : "2019-05-28T13:59:51Z",
        "updatedAt" : "2019-05-28T20:38:25Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "927e0eb6-d091-446c-824b-d2edea73ad55",
        "parentId" : "4a0edd0a-ca1e-403e-9cda-6c8f2454487f",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "`this would have to be a DataFrame.astype('sparse') `\r\n\r\nIt would be `.astype('Sparse')` which is shorthand for `.astype(SparseDtype(float64, nan))`",
        "createdAt" : "2019-05-28T14:01:09Z",
        "updatedAt" : "2019-05-28T20:38:25Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "e18825fd-e92f-48ff-bbf9-7fe159c03e05",
        "parentId" : "4a0edd0a-ca1e-403e-9cda-6c8f2454487f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok this is all fine; is there a test for using .sparse on non-any-sparse df?",
        "createdAt" : "2019-05-29T02:13:02Z",
        "updatedAt" : "2019-05-29T02:13:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "12d8d8300a3fdaa3ae8d0a2e0d3911e085910426",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +36,40 @@   df = pd.DataFrame(np.random.randn(10000, 4))\n   df.iloc[:9998] = np.nan\n   sdf = df.astype(pd.SparseDtype(\"float\", np.nan))\n   sdf.head()\n   sdf.dtypes"
  },
  {
    "id" : "e6043cf9-2748-411b-bb8c-f1064530b5b4",
    "prId" : 26137,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26137#pullrequestreview-238219915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8eb80b43-5172-47c0-bb61-fd6ff6cdfa98",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Since it is about memory usage here, can we actually show the difference between sdf and df?\r\n\r\nMaybe with `sdf.memory_usage().sum()`",
        "createdAt" : "2019-05-16T07:33:15Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "12d8d8300a3fdaa3ae8d0a2e0d3911e085910426",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +39,43 @@   sdf.head()\n   sdf.dtypes\n   sdf.sparse.density\n\nAs you can see, the density (% of values that have not been \"compressed\") is"
  },
  {
    "id" : "7bff210b-055c-4212-8505-98d5dc8a437a",
    "prId" : 26137,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26137#pullrequestreview-238219915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "daa67865-ea62-4570-8e36-405d73efb46b",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Not important for this PR, but we should actually improve the repr of SparseArray. Currently the example gives\r\n\r\n```\r\n[-2.329703982704994, -0.7776235464173905, nan, nan, nan, -0.07270483900887693, 0.4093257484722553, nan, -0.33749585746785415, 1.884146289689117]\r\nFill: nan\r\nIntIndex\r\nIndices: array([0, 1, 5, 6, 8, 9], dtype=int32)\r\n```\r\n\r\n(so way to wide, and showing too much detail of the random numbers)\r\n```",
        "createdAt" : "2019-05-16T07:36:30Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "12d8d8300a3fdaa3ae8d0a2e0d3911e085910426",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +69,73 @@   arr[7:8] = np.nan\n   sparr = pd.SparseArray(arr)\n   sparr\n\nA sparse array can be converted to a regular (dense) ndarray with :meth:`numpy.asarray`"
  },
  {
    "id" : "f6c9ce32-d9f5-49af-8b50-d41c40fd1966",
    "prId" : 26137,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26137#pullrequestreview-238219915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "012a225d-e6f3-44c3-9660-3f61b31a6300",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "While reviewing, I opened a PR to deprecate `.values`: https://github.com/pandas-dev/pandas/pull/26421 (yet another and confusing way to get the *dense* values and not the sparse values)",
        "createdAt" : "2019-05-16T08:11:19Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "12d8d8300a3fdaa3ae8d0a2e0d3911e085910426",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +71,75 @@   sparr\n\nA sparse array can be converted to a regular (dense) ndarray with :meth:`numpy.asarray`\n\n.. ipython:: python"
  },
  {
    "id" : "99c49364-e732-4ad5-80ee-38c8961da03d",
    "prId" : 26137,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26137#pullrequestreview-238219915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f07b2c2f-db93-407e-b475-13be91760049",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Maybe show here `sparr.dtype`",
        "createdAt" : "2019-05-16T08:11:49Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "12d8d8300a3fdaa3ae8d0a2e0d3911e085910426",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +85,89 @@1. The dtype of the non-sparse values\n2. The scalar fill value\n\n\n.. ipython:: python"
  },
  {
    "id" : "974e54b1-26b8-4e17-9898-d326bce793c2",
    "prId" : 26137,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26137#pullrequestreview-238219915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa5f1377-3a2b-48bd-a0ba-5a1781dc5565",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Ideally, I would convert this \"Interaction with scipy.sparse\" section also to the new way?",
        "createdAt" : "2019-05-16T08:26:42Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "e2b737fa-25bf-4597-afaa-6e46c274d6b3",
        "parentId" : "fa5f1377-3a2b-48bd-a0ba-5a1781dc5565",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "In addition, it is a bit strange that the \"SparseDataFrame\" and \"SparseSeries\" sections (that actually document those classes, and which you reference above) is under the \"Interaction with scipy.sparse\" one. I would give them their own section? (eg \"Deprecated SparseDataFrame and SparseSeries\" ?)",
        "createdAt" : "2019-05-16T08:33:53Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "12d8d8300a3fdaa3ae8d0a2e0d3911e085910426",
    "line" : 343,
    "diffHunk" : "@@ -1,1 +266,270 @@\n.. _sparse.scipysparse:\n\nInteraction with scipy.sparse\n-----------------------------"
  },
  {
    "id" : "cec2be08-2e14-4f9c-9b0f-391e8825f815",
    "prId" : 26137,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26137#pullrequestreview-242690809",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf2b8d2b-a12a-462a-9b8c-e935f35a91a6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we also support / recommend ``.to_numpy()`` ?",
        "createdAt" : "2019-05-19T17:54:39Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9efe5fa8-6280-4f8c-b2a0-03373fc682c0",
        "parentId" : "bf2b8d2b-a12a-462a-9b8c-e935f35a91a6",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Hmm, that's not part of the official EA interface. Just on Series / Index / DataFrame & PandasArray.",
        "createdAt" : "2019-05-20T18:57:46Z",
        "updatedAt" : "2019-05-28T20:38:25Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "ceb0a2f6-4764-4389-83e9-950a64a1d5b6",
        "parentId" : "bf2b8d2b-a12a-462a-9b8c-e935f35a91a6",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you create an issue about this (it probably works? maybe just needs testing)",
        "createdAt" : "2019-05-26T15:25:13Z",
        "updatedAt" : "2019-05-28T20:38:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b1618c5e-2dc3-49b0-972c-3556933877e3",
        "parentId" : "bf2b8d2b-a12a-462a-9b8c-e935f35a91a6",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Just to be clear `np.asarray` works and is tested. `spare.to_numpy()` isn't a method. In general `ExtensionArray.to_numpy` isn't a method, but some EAs implement it.",
        "createdAt" : "2019-05-28T14:02:25Z",
        "updatedAt" : "2019-05-28T20:38:25Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "12d8d8300a3fdaa3ae8d0a2e0d3911e085910426",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +75,79 @@.. ipython:: python\n\n   np.asarray(sparr)\n\n"
  },
  {
    "id" : "019b6bb9-cb5a-45be-954b-61ac0b44549e",
    "prId" : 26137,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26137#pullrequestreview-239248017",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d949695-6b45-4271-b5d7-f7f29c215a08",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe a subsection here Sparse Dtype",
        "createdAt" : "2019-05-19T17:55:08Z",
        "updatedAt" : "2019-05-28T20:38:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "12d8d8300a3fdaa3ae8d0a2e0d3911e085910426",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +81,85 @@-----------\n\nThe :attr:`SparseArray.dtype` property stores two pieces of information\n\n1. The dtype of the non-sparse values"
  },
  {
    "id" : "b59cec11-d54e-4c9f-b7f6-7774b4d9aeb6",
    "prId" : 26137,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26137#pullrequestreview-242691246",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b93ab219-d482-4ea3-a8f5-51e53e20c9d1",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is there a reason we are recommending people work *directly* with SparseArray? the unit of computation is generally the Series, no?",
        "createdAt" : "2019-05-26T15:26:12Z",
        "updatedAt" : "2019-05-28T20:38:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "35547c3b-b61d-4de5-ac49-671067256b2b",
        "parentId" : "b93ab219-d482-4ea3-a8f5-51e53e20c9d1",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This was here before, just moved. Whether or not it makes sense, I dunno. Depends on whether or not you need / want an index I suppose.",
        "createdAt" : "2019-05-28T14:03:05Z",
        "updatedAt" : "2019-05-28T20:38:25Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "12d8d8300a3fdaa3ae8d0a2e0d3911e085910426",
    "line" : 155,
    "diffHunk" : "@@ -1,1 +144,148 @@------------------\n\nYou can apply NumPy `ufuncs <https://docs.scipy.org/doc/numpy/reference/ufuncs.html>`_\nto ``SparseArray`` and get a ``SparseArray`` as a result.\n"
  },
  {
    "id" : "5380927e-f793-4b96-ba6b-c0b04949511a",
    "prId" : 26137,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26137#pullrequestreview-243069511",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "397e0cfe-9e15-4deb-901c-5fec001a4278",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "This should be `from_spmatrix` ?",
        "createdAt" : "2019-05-29T07:00:11Z",
        "updatedAt" : "2019-05-29T07:13:26Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "12d8d8300a3fdaa3ae8d0a2e0d3911e085910426",
    "line" : 351,
    "diffHunk" : "@@ -1,1 +270,274 @@-----------------------------\n\nUse :meth:`DataFrame.sparse.from_coo` to create a ``DataFrame`` with sparse values from a sparse matrix.\n\n.. versionadded:: 0.25.0"
  }
]