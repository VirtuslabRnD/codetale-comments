[
  {
    "id" : "8682b7c3-9021-4122-853c-32a9aacdffbc",
    "prId" : 10691,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cc24f37-bfad-4a54-85d5-8ea2c94838d5",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "would make a sub-section (under interpolation).\n",
        "createdAt" : "2015-08-08T00:29:26Z",
        "updatedAt" : "2015-08-30T17:49:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "df4d52c221da4facc0f64f5cbfecb7ceb1cc4656",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +466,470 @@   ser.interpolate(limit=2)\n\nBy default, ``limit`` applies in a forward direction, so that only ``NaN``\nvalues after a non-``NaN`` value can be filled. If you provide ``'backward'`` or\n``'both'`` for the ``limit_direction`` keyword argument, you can fill ``NaN``"
  },
  {
    "id" : "6c330cd7-8b58-4f0f-834c-7dc25de2b420",
    "prId" : 10691,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a82fe1f9-7cdb-475c-80a1-2e26799b556d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is fine\n",
        "createdAt" : "2015-08-14T18:36:47Z",
        "updatedAt" : "2015-08-30T17:49:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "df4d52c221da4facc0f64f5cbfecb7ceb1cc4656",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +454,458 @@\nInterpolation Limits\n^^^^^^^^^^^^^^^^^^^^\n\nLike other pandas fill methods, ``interpolate`` accepts a ``limit`` keyword"
  },
  {
    "id" : "80a0312e-17cf-44ff-a137-c31834a01f85",
    "prId" : 10691,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "030d4890-554b-4a23-8c1d-7065f8995d0f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "show `ser.interpolate(limit=1)` here as well (e.g. `forward`)\n",
        "createdAt" : "2015-08-14T18:37:40Z",
        "updatedAt" : "2015-08-30T17:49:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "df4d52c221da4facc0f64f5cbfecb7ceb1cc4656",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +473,477 @@\n.. ipython:: python\n\n   ser.interpolate(limit=1)  # limit_direction == 'forward'\n"
  },
  {
    "id" : "c0781072-ef56-4b03-bfee-14870223ec3f",
    "prId" : 16972,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16972#pullrequestreview-52590604",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e31612e0-2d53-4858-b3e5-e8c3cad913bd",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I would personally use 'NA' instead of 'na' in prose. Thoughts? \r\nWould also add this stands for 'Not Available' this first time",
        "createdAt" : "2017-07-27T08:38:44Z",
        "updatedAt" : "2017-07-27T08:50:59Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "25eadac6ea9de44b9a3b3305061cbccd453bba7c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +37,41 @@\nSome might quibble over our usage of *missing*. By \"missing\" we simply mean\n**na** or \"not present for whatever reason\". Many data sets simply arrive with\nmissing data, either because it exists and was not collected or it never\nexisted. For example, in a collection of financial time series, some of the time"
  },
  {
    "id" : "7ddccf24-2d61-43e2-9cef-192290ccdce9",
    "prId" : 23617,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23617#pullrequestreview-187130436",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad3c71dc-70bb-467c-9812-6aa75d5877ed",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "same, if correct",
        "createdAt" : "2018-12-20T18:38:54Z",
        "updatedAt" : "2019-01-01T00:05:59Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c9995f3ba1ab50b82eaa2e6c08219e7a4069134",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +754,758 @@   reindexed[crit.fillna(True)]\n\nPandas provides a nullable integer dtype, but you must explicitly request it\nwhen creating the series or column. Notice that we use a capital \"I\" in\nthe ``dtype=\"Int64\"``."
  }
]