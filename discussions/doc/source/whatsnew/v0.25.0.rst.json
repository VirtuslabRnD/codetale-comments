[
  {
    "id" : "eed02794-b9de-4891-bab1-985f3324a14a",
    "prId" : 17753,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17753#pullrequestreview-256469061",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9134522-5be2-45ac-805b-bec026b602da",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so this is fine, but I would add a sub-section on the usage for IntervalIndex itself",
        "createdAt" : "2019-07-01T17:28:06Z",
        "updatedAt" : "2019-07-01T17:28:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "30c77f0620344ed8bbc482ef8d19ee9030b48d9a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +616,620 @@- :meth:`Series.put` is deprecated. (:issue:`18262`)\n- :meth:`Index.item` and :meth:`Series.item` is deprecated. (:issue:`18262`)\n- :meth:`Index.contains` is deprecated. Use ``key in index`` (``__contains__``) instead (:issue:`17753`).\n\n.. _whatsnew_0250.prior_deprecations:"
  },
  {
    "id" : "57725126-1c8f-45ff-9d88-cbacdfa4592f",
    "prId" : 23293,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23293#pullrequestreview-255493251",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0ec0dd1-8c90-4deb-96a0-0b47c297db5b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "adding a note here?",
        "createdAt" : "2019-06-27T21:36:55Z",
        "updatedAt" : "2019-07-01T18:47:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "7486d260178176f9e9674c8036bc3063a067b24a",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +886,890 @@- Introduce a better error message in :meth:`Series.sparse.from_coo` so it returns a ``TypeError`` for inputs that are not coo matrices (:issue:`26554`)\n- Bug in :func:`numpy.modf` on a :class:`SparseArray`. Now a tuple of :class:`SparseArray` is returned (:issue:`26946`).\n\n\nBuild Changes"
  },
  {
    "id" : "1333bdfe-306e-478a-bca6-9b225dbc90dd",
    "prId" : 23293,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23293#pullrequestreview-256078582",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a0fb7a3-e593-40b1-a69e-07ecd32a0042",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Should there be a general item for `Series.__array_ufunc__` being added? Although, in principle it should not change any behaviour, as we already supported ufuncs?",
        "createdAt" : "2019-06-30T15:55:15Z",
        "updatedAt" : "2019-07-01T18:47:58Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "7486d260178176f9e9674c8036bc3063a067b24a",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +898,902 @@- Bug in :func:`factorize` when passing an ``ExtensionArray`` with a custom ``na_sentinel`` (:issue:`25696`).\n- :meth:`Series.count` miscounts NA values in ExtensionArrays (:issue:`26835`)\n- Added ``Series.__array_ufunc__`` to better handle NumPy ufuncs applied to Series backed by extension arrays (:issue:`23293`).\n- Keyword argument ``deep`` has been removed from :meth:`ExtensionArray.copy` (:issue:`27083`)\n"
  },
  {
    "id" : "f696de66-4adb-414b-815d-e140962aa97a",
    "prId" : 24021,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24021#pullrequestreview-221073839",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b37c1f03-c764-48c0-960d-50e219b6a6e6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "are you adding space here for a reason?",
        "createdAt" : "2019-04-01T12:10:29Z",
        "updatedAt" : "2019-04-01T12:13:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "08933c1b-a86e-4879-9ead-d6828febc5f1",
        "parentId" : "b37c1f03-c764-48c0-960d-50e219b6a6e6",
        "authorId" : "5f5245d7-e812-4c4e-9724-423e086bd2f6",
        "body" : "No. I removed them. ",
        "createdAt" : "2019-04-01T12:13:50Z",
        "updatedAt" : "2019-04-01T12:13:50Z",
        "lastEditedBy" : "5f5245d7-e812-4c4e-9724-423e086bd2f6",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfda6c3300e5f2a3fbdc910782003d2bb0206566",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +45,49 @@.. _whatsnew_0250.api_breaking.utc_offset_indexing:\n\n\nIndexing with date strings with UTC offsets\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  },
  {
    "id" : "b74d8b06-2325-4cc3-8fbe-0685cd062661",
    "prId" : 24748,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24748#pullrequestreview-209892717",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b10368ef-eb27-4256-8173-14590093d06a",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Hmm I'm somewhat hesitant to market \"side effects\" as being fixed because I'm not sure we generally can make guarantees about mutations that occur during a groupby. Is it possible to leave this out and maybe use a relatively safe example like printing the groups instead?",
        "createdAt" : "2019-02-28T00:05:49Z",
        "updatedAt" : "2019-03-26T03:47:22Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "783e302f-283d-462d-ba04-4d1a4d8c38c9",
        "parentId" : "b10368ef-eb27-4256-8173-14590093d06a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I agree with @WillAyd  here, showing the printing is enough (and a bit more clear).",
        "createdAt" : "2019-03-03T03:13:59Z",
        "updatedAt" : "2019-03-26T03:47:22Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecb7294a21802382edf8de890179db4c02fccc91",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +81,85 @@The implementation of :meth:`DataFrameGroupBy.apply() <pandas.core.groupby.DataFrameGroupBy.apply>`\npreviously evaluated the supplied function consistently twice on the first group\nto infer if it is safe to use a fast code path. Particularly for functions with\nside effects, this was an undesired behavior and may have led to surprises.\n"
  },
  {
    "id" : "33389ddc-e493-4e60-b427-5ff13e945311",
    "prId" : 24757,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24757#pullrequestreview-209927953",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "393e8905-473d-4c01-a374-4fb346e74652",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add in the api/references",
        "createdAt" : "2019-03-03T02:56:24Z",
        "updatedAt" : "2019-06-03T18:18:57Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c3b97678-3f2c-4091-a13d-8b686bfc67ef",
        "parentId" : "393e8905-473d-4c01-a374-4fb346e74652",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "is that in this file or somewhere else?",
        "createdAt" : "2019-03-03T17:06:50Z",
        "updatedAt" : "2019-06-03T18:18:57Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "7d448ab1-d57c-40ff-aa49-cf782479cbe3",
        "parentId" : "393e8905-473d-4c01-a374-4fb346e74652",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "You would need to\r\n\r\n1. Add to the class docstring in DatetimeIndex and TimedeltaIndex under the methods section\r\n2. Add to the lists in doc/source/reference/indexing.rst",
        "createdAt" : "2019-03-03T20:06:16Z",
        "updatedAt" : "2019-06-03T18:18:57Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "111c345f211f6675bc76072b858c4a3880a21c88",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +83,87 @@- :func:`merge_asof` now gives a more clear error message when merge keys are categoricals that are not equal (:issue:`26136`)\n- :meth:`pandas.core.window.Rolling` supports exponential (or Poisson) window type (:issue:`21303`)\n- :class:`DatetimeIndex` and :class:`TimedeltaIndex` now have a `mean` method (:issue:`24757`)\n-\n"
  },
  {
    "id" : "07549fc7-3068-4ead-9d36-985e68062751",
    "prId" : 24942,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24942#pullrequestreview-215360084",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eda14d36-0c99-4fc5-9e59-7d11f75affa5",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "are these the minimums implied by the py3 builds?",
        "createdAt" : "2019-03-15T18:16:13Z",
        "updatedAt" : "2019-03-15T18:17:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8b90f672-2f91-4bc9-81fd-fe6b38f63071",
        "parentId" : "eda14d36-0c99-4fc5-9e59-7d11f75affa5",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@h-vetinari ?",
        "createdAt" : "2019-03-17T13:46:37Z",
        "updatedAt" : "2019-03-17T13:46:37Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4a98bd74-63d6-4c58-a36e-505441042243",
        "parentId" : "eda14d36-0c99-4fc5-9e59-7d11f75affa5",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "Since you asked me to remove the compat jobs, all of the libraries here are unpinned for the rest of the remaining CI. They are however the minimum of what conda will resolve for PY35, so these are the implied minimums as you say.\r\n\r\nI will re-add another PR with all the work that was done here on the PY35 jobs anyway.",
        "createdAt" : "2019-03-17T15:06:05Z",
        "updatedAt" : "2019-03-17T15:06:29Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      },
      {
        "id" : "4b111f4c-4fb6-4bf0-bf5d-7c6d6d43e59f",
        "parentId" : "eda14d36-0c99-4fc5-9e59-7d11f75affa5",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok thanks. pls do so.",
        "createdAt" : "2019-03-17T15:08:53Z",
        "updatedAt" : "2019-03-17T15:08:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe83f86b8155764fd041d92fc2585daf323c74a6",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +80,84 @@| beautifulsoup4  | 4.4.1           |          |\n+-----------------+-----------------+----------+\n| openpyxl        | 2.2.6           |          |\n+-----------------+-----------------+----------+\n| pymysql         | 0.6.6           |          |"
  },
  {
    "id" : "c174bf33-06ac-435b-b754-ee053488efb1",
    "prId" : 24984,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24984#pullrequestreview-206410486",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09db3953-53a9-40e7-92c0-739a3687fd84",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is just a code reorg yes? with slightly better error messages in some cases?",
        "createdAt" : "2019-02-21T13:57:16Z",
        "updatedAt" : "2019-02-24T01:38:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "92c5ebd8-3cee-42ad-ac35-e45848d0f890",
        "parentId" : "09db3953-53a9-40e7-92c0-739a3687fd84",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "@jreback:\r\nMinimal reorg, just better errors and enabling iterators (due to your review).\r\n\r\nThe custom classes were re-enabled by #25085 (which took over the tests from this PR), which closed the regression #24969, and has a corresponding whatsnew note. I guess the issue didn't get closed yet, because I only noted that #25085 was an alternative to this PR (at the time, for solving #24969), but didn't add the \"closes #24969\" explicitly - sorry.",
        "createdAt" : "2019-02-21T16:35:21Z",
        "updatedAt" : "2019-02-24T01:38:15Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f99b15f2a2379e4d931ce69d22e1dabd9454657",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +23,27 @@- :meth:`Timestamp.replace` now supports the ``fold`` argument to disambiguate DST transition times (:issue:`25017`)\n- :meth:`DataFrame.at_time` and :meth:`Series.at_time` now support :meth:`datetime.time` objects with timezones (:issue:`24043`)\n- :meth:`DataFrame.set_index` now works for instances of ``abc.Iterator``, provided their output is of the same length as the calling frame (:issue:`22484`, :issue:`24984`)\n- :meth:`DatetimeIndex.union` now supports the ``sort`` argument. The behaviour of the sort parameter matches that of :meth:`Index.union` (:issue:`24994`)\n-"
  },
  {
    "id" : "93638123-848d-4e61-91b7-7c1aceb13ea2",
    "prId" : 25402,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25402#pullrequestreview-209056509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "936859df-5af9-4097-98f9-fa39b5d71e2b",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I don't think we should put that here, that is only for contributors, not for pandas users?",
        "createdAt" : "2019-02-22T20:20:57Z",
        "updatedAt" : "2019-02-28T11:56:19Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "b36c430c-5337-48ce-b35e-f1263d1737c4",
        "parentId" : "936859df-5af9-4097-98f9-fa39b5d71e2b",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "@jorisvandenbossche : This type of reporting was already done in `0.24.0`, though I could go either way on this from a \"standards\" perspective.",
        "createdAt" : "2019-02-23T19:49:38Z",
        "updatedAt" : "2019-02-28T11:56:19Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "ddbadbe0-57fe-44ad-9533-adcb02ce6b06",
        "parentId" : "936859df-5af9-4097-98f9-fa39b5d71e2b",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This is kinda exposed to users via `pd.test`, so let's keep.",
        "createdAt" : "2019-02-28T12:59:21Z",
        "updatedAt" : "2019-02-28T12:59:21Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "3230bedc8bd8db2c1ba1af0e4f554c3107cf068f",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +76,80 @@+=================+=================+==========+\n| pytest (dev)    | 4.0.2           |          |\n+-----------------+-----------------+----------+\n\n.. _whatsnew_0250.api.other:"
  },
  {
    "id" : "54895b58-3772-4b9f-b2a4-914ca0b2c26d",
    "prId" : 25434,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25434#pullrequestreview-207186933",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "849941d0-3bad-4acf-a893-0420efef1f84",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "should :issue:\\`25435\\` be added here too?",
        "createdAt" : "2019-02-25T01:19:06Z",
        "updatedAt" : "2019-02-26T07:10:31Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c5f3d699e28bbc95f32d7cc247b4992ae0901d8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +195,199 @@- Fixed bug in missing text when using :meth:`to_clipboard` if copying utf-16 characters in Python 3 on Windows (:issue:`25040`)\n- Bug in :func:`read_json` for ``orient='table'`` when it tries to infer dtypes by default, which is not applicable as dtypes are already defined in the JSON schema (:issue:`21345`)\n- Bug in :func:`read_json` for ``orient='table'`` and float index, as it infers index dtype by default, which is not applicable because index dtype is already defined in the JSON schema (:issue:`25433`)\n- Bug in :func:`read_json` for ``orient='table'`` and string of float column names, as it makes a column name type conversion to Timestamp, which is not applicable because column names are already defined in the JSON schema (:issue:`25435`)\n-"
  },
  {
    "id" : "647285f0-2e7e-4c41-9ec2-a85a7391888a",
    "prId" : 25554,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25554#pullrequestreview-212609829",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36d1c7f7-e0c9-4e45-b395-14f2f28be922",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add the issue number (this one).",
        "createdAt" : "2019-03-10T16:09:28Z",
        "updatedAt" : "2019-03-28T06:50:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "20ad5a516ca29effff240b6995c2423c6549d90d",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +165,169 @@\n+-----------------+-----------------+----------+\n| Package         | Minimum Version | Required |\n+=================+=================+==========+\n| numpy           | 1.13.3          |    X     |"
  },
  {
    "id" : "9cdd1ab2-762e-404d-98e6-71ec0f333312",
    "prId" : 25719,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25719#pullrequestreview-214806004",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c26f227b-b83c-4a0b-bda4-4fa1c4d28259",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add a ref",
        "createdAt" : "2019-03-14T21:20:49Z",
        "updatedAt" : "2019-03-14T21:21:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "00c24d07-ca39-417b-87dd-45b3304fcbce",
        "parentId" : "c26f227b-b83c-4a0b-bda4-4fa1c4d28259",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I have seen you make this review comment before, but IMO, there is not really much added value in asking for this. It doesn't change anything in the built documentation, and is only needed if you make a link to it from somewhere else in our docs (and in this case, I think it is rather unlikely that we will ever link to it).",
        "createdAt" : "2019-03-14T21:36:16Z",
        "updatedAt" : "2019-03-14T21:36:16Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "31722755-8818-489d-b2c2-8cda1e68f74a",
        "parentId" : "c26f227b-b83c-4a0b-bda4-4fa1c4d28259",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "disagree. as a matter of course if we have subsections we should have links. its not much of a burden and promotes consistency.",
        "createdAt" : "2019-03-14T21:42:20Z",
        "updatedAt" : "2019-03-14T21:42:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "39a64caf-fc24-48d7-b6d5-ebefb6d5f31e",
        "parentId" : "c26f227b-b83c-4a0b-bda4-4fa1c4d28259",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "It's just that you are asking something (and we are often already asking a lot of contributors in many rounds) that is basically useless, except for the consistency argument that you give (IMO that's not worth the overhead of always adding it, but OK, we can disagree on that).\r\n\r\n> as a matter of course if we have subsections we should have links\r\n\r\nNote that this does not introduce *links*. Things like anchors so that people can link to that section on the html docs, that is done automatically by sphinx, you don't need this label for that. ",
        "createdAt" : "2019-03-14T21:46:02Z",
        "updatedAt" : "2019-03-14T21:46:02Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "813f04fc-2886-4eda-9eb8-5d126ac811c0",
        "parentId" : "c26f227b-b83c-4a0b-bda4-4fa1c4d28259",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "again disagree. consistency is SO important in the pandas docs / code. If it can be automated (either the actual code / docs or the check of it great), otherwise the purpose is NOT to special case the world. Again having to make that judgement call on each PR would make a big inconsistency across PR's & maintainers.",
        "createdAt" : "2019-03-14T22:22:56Z",
        "updatedAt" : "2019-03-14T22:22:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "cc4e44e6-d27c-4450-9187-3a0379ae3192",
        "parentId" : "c26f227b-b83c-4a0b-bda4-4fa1c4d28259",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> having to make that judgement call on each PR would make a big inconsistency across PR's & maintainers.\r\n\r\nThe thing is that you don't need to make a judgement call here: it simply is not needed for new sections being added. Only when you ask to add somewhere an internal link, you need to add a label. ",
        "createdAt" : "2019-03-14T23:03:16Z",
        "updatedAt" : "2019-03-14T23:03:16Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "d029aba3-8092-415f-b9d4-9493de5693b5",
        "parentId" : "c26f227b-b83c-4a0b-bda4-4fa1c4d28259",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you are still missing the point\r\n\r\npls add the ref here - arguing about reviews is a waste of time ",
        "createdAt" : "2019-03-14T23:11:00Z",
        "updatedAt" : "2019-03-14T23:11:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "96508ca1fe4c2eb45f873c4d44c942f290e21e30",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +65,69 @@    df['2019-01-01 12:00:00+04:00':'2019-01-01 13:00:00+04:00']\n\nConcatenating Sparse Values\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"
  },
  {
    "id" : "18273b8c-cdea-4705-86d4-3a22a8d6a055",
    "prId" : 25743,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25743#pullrequestreview-220841452",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a5f7547-1005-434e-8d84-504445807307",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "I think this is a little hard to read but potential incorrect anyway. Are you sure this stipulation about the length of the supplied labels w.r.t to the length of the series itself is a requirement to reproduce the issue? \r\n\r\nI did the following locally and still saw the problem:\r\n\r\n```python\r\nIn [24]:     index_array = [\r\n    ...:         ['x', 'x'],\r\n    ...:         ['a', 'b'],\r\n    ...:         ['k', 'k'],\r\n    ...:         ['j', 'j'],\r\n    ...:     ]\r\n    ...:     index_names = ['first', 'second', 'third', 'fourth']\r\n    ...:     ri = pd.MultiIndex.from_arrays(index_array, names=index_names)\r\n    ...:     s = pd.Series(data=[1, 2], index=ri)\r\n    ...:     result = s.groupby(['first', 'third']).sum()\r\n```",
        "createdAt" : "2019-03-18T04:41:27Z",
        "updatedAt" : "2019-03-30T20:44:29Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "76d8f549-f98a-4ff7-9890-b8771c5c195e",
        "parentId" : "7a5f7547-1005-434e-8d84-504445807307",
        "authorId" : "3cf21736-8210-430b-9ff1-610530ed90f8",
        "body" : "Yeah, I obviously wasn't very clear, because your local example is the problem I was talking about.  I may be confusing terminology somewhere.\r\n\r\nYour Series has two data points, `[1, 2]`.\r\n\r\nThe `len` of the list of labels in your groupby is also two, `['first', 'third']`.\r\n\r\nThose two being equal are the problem.",
        "createdAt" : "2019-03-30T20:30:43Z",
        "updatedAt" : "2019-03-30T20:44:29Z",
        "lastEditedBy" : "3cf21736-8210-430b-9ff1-610530ed90f8",
        "tags" : [
        ]
      },
      {
        "id" : "0d1bb57b-4d86-41b9-bf3f-dc1956e80be8",
        "parentId" : "7a5f7547-1005-434e-8d84-504445807307",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "OK now actually on a subsequent read I think this is right here",
        "createdAt" : "2019-03-30T23:44:53Z",
        "updatedAt" : "2019-03-30T23:44:54Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "322b2ceaff888712084a25099273bd53b6881eba",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +372,376 @@- Bug in :func:`pandas.core.groupby.GroupBy.agg` when applying a aggregation function to timezone aware data (:issue:`23683`)\n- Bug in :func:`pandas.core.groupby.GroupBy.first` and :func:`pandas.core.groupby.GroupBy.last` where timezone information would be dropped (:issue:`21603`)\n- Bug in :func:`Series.groupby` where using ``groupby`` with a :class:`MultiIndex` Series with a list of labels equal to the length of the series caused incorrect grouping (:issue:`25704`)\n- Ensured that ordering of outputs in ``groupby`` aggregation functions is consistent across all versions of Python (:issue:`25692`)\n- Bug in :func:`idxmax` and :func:`idxmin` on :meth:`DataFrame.groupby` with datetime column would return incorrect dtype (:issue:`25444`, :issue:`15306`)"
  },
  {
    "id" : "57b3d831-6f79-4e7b-b304-3d72256b6734",
    "prId" : 25752,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25752#pullrequestreview-218106008",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85f77798-0fb8-4939-9cc4-74ef74d23482",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "We don't actually require these versions for sqlalchemy / pymsql, they are just the recommended ones. So may want to re-word this (can do in a followup). We are don't actually reject an earlier version.",
        "createdAt" : "2019-03-24T22:41:00Z",
        "updatedAt" : "2019-03-24T22:41:01Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "564a5a063b862351e9521aff39a45e578990ac63",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +126,130 @@| openpyxl        | 2.4.0           |          |\n+-----------------+-----------------+----------+\n| pymysql         | 0.7.9           |          |\n+-----------------+-----------------+----------+\n| pytz            | 2015.4          |          |"
  }
]