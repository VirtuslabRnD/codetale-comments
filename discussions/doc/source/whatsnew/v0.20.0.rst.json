[
  {
    "id" : "4b81ce1c-1936-4e7f-97f7-9c6c6918535c",
    "prId" : 39660,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39660#pullrequestreview-591733585",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5dc6b73f-cf2a-47a8-8f5b-2555fb11daf6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "does this change the practical output?",
        "createdAt" : "2021-02-15T22:24:42Z",
        "updatedAt" : "2021-02-18T12:48:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "df385e7e-254f-479e-97ab-e427d23f972b",
        "parentId" : "5dc6b73f-cf2a-47a8-8f5b-2555fb11daf6",
        "authorId" : "00fd25ec-10ce-4da2-b282-338650c2fd94",
        "body" : "The previous version was supposed to yield in ['color:red', 'color:black'] but erroneously yielded in ['color:red', 'black']. This will have silently ignored 'black' as bad-css and not done anything - probably the text was still rendered black by default!\r\n\r\nThe new code has a `raise` when it detects no valid attribute-value pair, so this was causing an `IPython directive error` in tests.",
        "createdAt" : "2021-02-16T07:15:01Z",
        "updatedAt" : "2021-02-18T12:48:13Z",
        "lastEditedBy" : "00fd25ec-10ce-4da2-b282-338650c2fd94",
        "tags" : [
        ]
      },
      {
        "id" : "d8b82be3-7541-44b5-aaa8-5bb36d082e9d",
        "parentId" : "5dc6b73f-cf2a-47a8-8f5b-2555fb11daf6",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok, pls add a whatsnew note about this (you can speak generally, e.g. now raise an error if invalid CSS is passed)",
        "createdAt" : "2021-02-17T00:17:39Z",
        "updatedAt" : "2021-02-18T12:48:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "93fe442f8b317e9c188aeb544b7a16a2c5ca0e89",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +375,379 @@   df\n   styled = (df.style\n             .applymap(lambda val: 'color:red;' if val < 0 else 'color:black;')\n             .highlight_max())\n   styled.to_excel('styled.xlsx', engine='openpyxl')"
  }
]