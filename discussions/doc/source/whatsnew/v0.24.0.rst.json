[
  {
    "id" : "cf931793-06ca-428e-a630-586225dab684",
    "prId" : 21235,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21235#pullrequestreview-182980636",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cd40a45-ff40-447f-925c-05394398b6f9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "put the construction first in a separate ipython block",
        "createdAt" : "2018-12-09T14:28:59Z",
        "updatedAt" : "2018-12-12T07:07:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "01d705fa246d792f9d0e52a614f9b68a0a7f6f3b",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +390,394 @@.. ipython:: python\n\n   df = pd.DataFrame({'grp': ['a', 'a', 'b'], 'foo': [1.0, 1.1, 2.2]})\n   df\n"
  },
  {
    "id" : "f9290d37-c2e1-40c7-bc62-6e188fa718bb",
    "prId" : 21599,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21599#pullrequestreview-174482192",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33a9451c-8513-4d6c-8c3d-5dc03404c349",
        "parentId" : null,
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "Header format of v.0.24 not changed here? Then maybe the v.0.23-ones should stay in line with the style before/after v.0.23.",
        "createdAt" : "2018-11-13T16:27:20Z",
        "updatedAt" : "2018-11-14T19:53:12Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      },
      {
        "id" : "ab5f39b4-dce5-4774-80f0-43882a888756",
        "parentId" : "33a9451c-8513-4d6c-8c3d-5dc03404c349",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "If the new style starting from `0.23` should be: \r\n```diff\r\n- v0.23.0 (May 15, 2018)\r\n- ----------------------\r\n+ What's new in 0.23.0 (May 15, 2018)\r\n+ -----------------------------------\r\n```\r\n\r\nthen this should be continued with v.0.24 (or reverted for the 0.23.* ones).",
        "createdAt" : "2018-11-13T17:10:02Z",
        "updatedAt" : "2018-11-14T19:53:12Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc5d49eea24745e4e81610d9f36715cc15a7fee4",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +6,10 @@.. warning::\n\n   Starting January 1, 2019, pandas feature releases will support Python 3 only.\n   See :ref:`install.dropping-27` for more.\n"
  },
  {
    "id" : "d56ee3c5-7102-4b53-a31b-589446019378",
    "prId" : 23617,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23617#pullrequestreview-187122032",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fc0c1e2-ebe6-4c53-9325-2d40f8a3f45b",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "I guess this should be indented to be inside the warning, if that's what we want",
        "createdAt" : "2018-12-16T02:24:45Z",
        "updatedAt" : "2019-01-01T00:05:59Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "b818eb98-3ce4-43cf-ba27-f1bb65041886",
        "parentId" : "4fc0c1e2-ebe6-4c53-9325-2d40f8a3f45b",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I don't think it should be in the warning.",
        "createdAt" : "2018-12-20T18:15:28Z",
        "updatedAt" : "2019-01-01T00:05:59Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c9995f3ba1ab50b82eaa2e6c08219e7a4069134",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +162,166 @@   The Integer NA support currently uses the capitalized dtype version, e.g. ``Int8`` as compared to the traditional ``int8``. This may be changed at a future date.\n\nSee :ref:`integer_na` for more.\n\n.. _whatsnew_0240.enhancements.array:"
  },
  {
    "id" : "5421d59e-9964-43b8-879a-b72bbc7421e5",
    "prId" : 23623,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23623#pullrequestreview-176069084",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "435e1f07-8c43-412b-8347-5a99f0d5e29a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a ref to the new section you added above in dsintro",
        "createdAt" : "2018-11-17T22:02:26Z",
        "updatedAt" : "2018-11-29T12:19:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9eee65e64ae815b320f5a8bd3a8701e264f15f6",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +45,49 @@some transformation of it, or one of pandas custom arrays (like\n``Categorical``). For example, with :class:`PeriodIndex`, ``.values`` generates\na new ndarray of period objects each time.\n\n.. ipython:: python"
  },
  {
    "id" : "02b9a30d-0523-462c-a6c0-931e53bd66e4",
    "prId" : 23623,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23623#pullrequestreview-178697400",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0f97c5f-29ba-4726-87fd-f7e103e8344a",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Maybe mention that `.values` is kept for now for backwards compatibility, but that we recommend to use the more explicit array / to_numpy going forward?",
        "createdAt" : "2018-11-27T20:28:51Z",
        "updatedAt" : "2018-11-29T12:19:50Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9eee65e64ae815b320f5a8bd3a8701e264f15f6",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +71,75 @@recommend and using ``.array`` or ``.to_numpy()`` instead.\n\nSee :ref:`basics.dtypes` and :ref:`dsintro.attrs` for more.\n\n.. _whatsnew_0240.enhancements.extension_array_operators:"
  },
  {
    "id" : "69167f49-18d5-43e7-9bb3-3881e934353f",
    "prId" : 23752,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23752#pullrequestreview-181727447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2898eb16-cb86-4936-a524-4aed2629b172",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i don't this is valid any longer, you can remove the attr",
        "createdAt" : "2018-12-05T12:19:27Z",
        "updatedAt" : "2018-12-05T17:44:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8d00ad61651cfcecf6f9da6a1b23ee232531e8f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1101,1105 @@~~~~~~~~~~~~\n\n- :attr:`MultiIndex.labels` has been deprecated and replaced by :attr:`MultiIndex.codes`.\n  The functionality is unchanged. The new name better reflects the natures of\n  these codes and makes the ``MultiIndex`` API more similar to the API for :class:`CategoricalIndex`(:issue:`13443`)."
  },
  {
    "id" : "5a4e6944-0b3b-41ac-9822-7ce1ca93d075",
    "prId" : 23807,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23807#pullrequestreview-177379207",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60aa9975-498e-479f-9bcc-6d799f811da8",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "nitpick: I'm guessing this happens for users for whom tzlocal is UTC-N but not those for whom tzlocal is UTC+N (@jorisvandenbossche can you check this when convenient?)",
        "createdAt" : "2018-11-20T14:51:33Z",
        "updatedAt" : "2018-11-22T02:48:40Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "aa4cab3b-7533-475b-b82d-585ccb9e751e",
        "parentId" : "60aa9975-498e-479f-9bcc-6d799f811da8",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "This was actually because `NaT` wasn't handled in `tz_localize_to_utc` so `NaT` was converted to its i8 value which was less than `Timestamp.min`\r\n\r\nhttps://github.com/pandas-dev/pandas/pull/23807/files#diff-66d289312fd0b02e7721bf45fb281797R911",
        "createdAt" : "2018-11-21T18:32:43Z",
        "updatedAt" : "2018-11-22T02:48:40Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "15ba5fb8bb462672d2153e2b4e0db4146a2a58d9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1250,1254 @@- Bug in :meth:`DataFrame.resample` and :meth:`Series.resample` where an ``AmbiguousTimeError`` or ``NonExistentTimeError`` would raise if a timezone aware timeseries ended on a DST transition (:issue:`19375`, :issue:`10117`)\n- Bug in :meth:`DataFrame.drop` and :meth:`Series.drop` when specifying a tz-aware Timestamp key to drop from a :class:`DatetimeIndex` with a DST transition (:issue:`21761`)\n- Bug in :class:`DatetimeIndex` constructor where :class:`NaT` and ``dateutil.tz.tzlocal`` would raise an ``OutOfBoundsDatetime`` error (:issue:`23807`)\n- Bug in :meth:`DatetimeIndex.tz_localize` and :meth:`Timestamp.tz_localize` with ``dateutil.tz.tzlocal`` near a DST transition that would return an incorrectly localized datetime (:issue:`23807`)\n- Bug in :class:`Timestamp` constructor where a ``dateutil.tz.tzutc`` timezone passed with a ``datetime.datetime`` argument would be converted to a ``pytz.UTC`` timezone (:issue:`23807`)"
  },
  {
    "id" : "94ff520c-df32-4b22-85c0-5f66971e6c79",
    "prId" : 23917,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23917#pullrequestreview-178409912",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4526c1c1-9b1c-48e8-8d77-c7c3e8da3fbf",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hve these been added to #6581 if not, pls do",
        "createdAt" : "2018-11-26T13:51:27Z",
        "updatedAt" : "2018-11-27T16:39:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d926b6cb-0c16-43c8-8304-820096aa47f0",
        "parentId" : "4526c1c1-9b1c-48e8-8d77-c7c3e8da3fbf",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "done",
        "createdAt" : "2018-11-26T17:29:29Z",
        "updatedAt" : "2018-11-27T16:39:59Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bdc157d786d3cacd5af0521bd2767b7e7a60dab",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1049,1053 @@  :meth:`DatetimeIndex.to_series` is deprecated (:issue:`17832`).\n- Timezone converting a tz-aware ``datetime.datetime`` or :class:`Timestamp` with :class:`Timestamp` and the ``tz`` argument is now deprecated. Instead, use :meth:`Timestamp.tz_convert` (:issue:`23579`)\n- :func:`pandas.types.is_period` is deprecated in favor of `pandas.types.is_period_dtype` (:issue:`23917`)\n- :func:`pandas.types.is_datetimetz` is deprecated in favor of `pandas.types.is_datetime64tz` (:issue:`23917`)\n"
  },
  {
    "id" : "2455a58d-5515-4632-9a84-187db18a51c0",
    "prId" : 23921,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23921#pullrequestreview-178870783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d970ef36-f48c-4b11-b5d4-212bfe7f5f38",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Move this under the mini-section.",
        "createdAt" : "2018-11-26T20:52:56Z",
        "updatedAt" : "2018-11-28T15:07:37Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "31f5953b-8c73-453d-baf9-6cd1a53be2ba",
        "parentId" : "d970ef36-f48c-4b11-b5d4-212bfe7f5f38",
        "authorId" : "bd4a1d30-dfd1-4d07-acde-4792b4845d5c",
        "body" : "@gfyoung what do you mean by the mini-section?",
        "createdAt" : "2018-11-27T09:42:20Z",
        "updatedAt" : "2018-11-28T15:07:37Z",
        "lastEditedBy" : "bd4a1d30-dfd1-4d07-acde-4792b4845d5c",
        "tags" : [
        ]
      },
      {
        "id" : "8dcd9ae6-d1d5-44c8-a82d-f74cba724e3f",
        "parentId" : "d970ef36-f48c-4b11-b5d4-212bfe7f5f38",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Move your `whatsnew` note under the mini-section titled \"Proper handling of np.NaN in a string data-typed column with the Python engine\"",
        "createdAt" : "2018-11-27T16:09:27Z",
        "updatedAt" : "2018-11-28T15:07:37Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3f2d1350c33b57c9c8d06bf0fac4f55718f632c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1343,1347 @@^^^\n\n\n.. _whatsnew_0240.bug_fixes.nan_with_str_dtype:\n"
  },
  {
    "id" : "5633101d-3b7c-4f48-90d7-57d79b698c08",
    "prId" : 24114,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24114#pullrequestreview-181933280",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51166580-a696-4838-b279-dd5d8947ffb2",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Bugfix, or backwards incompatible change? Previously we \"allowed\"\r\n\r\n```python\r\nIn [7]: pd.Series(pd.Categorical(['a', 'b'])).where([True, False], 'c')\r\nOut[7]:\r\n0    a\r\n1    c\r\ndtype: object\r\n```\r\n\r\nnow we raise since it isn't present in the categories.",
        "createdAt" : "2018-12-05T17:29:09Z",
        "updatedAt" : "2018-12-10T14:10:33Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "1d333561-bee1-42c5-b8b8-16bc57185d2d",
        "parentId" : "51166580-a696-4838-b279-dd5d8947ffb2",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "if its in the categories then this should work and return categorical, if its not hen i think coercing to object is ok",
        "createdAt" : "2018-12-05T19:30:01Z",
        "updatedAt" : "2018-12-10T14:10:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "539d3cb5aec33eb5fc7534eb09b6f0715a809abc",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +1254,1258 @@- Bug when resampling :meth:`Dataframe.resample()` and aggregating on categorical data, the categorical dtype was getting lost. (:issue:`23227`)\n- Bug in many methods of the ``.str``-accessor, which always failed on calling the ``CategoricalIndex.str`` constructor (:issue:`23555`, :issue:`23556`)\n- Bug in :meth:`Series.where` losing the categorical dtype for categorical data (:issue:`24077`)\n\nDatetimelike"
  },
  {
    "id" : "71fad982-24e4-4829-a840-61b9edbcbef4",
    "prId" : 24157,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24157#pullrequestreview-184817279",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "764683c3-a2c3-433f-98ce-c3a7fbe6bb50",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this probably won't render as its not in the api.rst but ok ",
        "createdAt" : "2018-12-13T18:58:16Z",
        "updatedAt" : "2018-12-13T19:50:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "b927925a14def3d3d8710493517d34ebe950c040",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +381,385 @@- :meth:`read_csv` will now raise a ``ValueError`` if a column with missing values is declared as having dtype ``bool`` (:issue:`20591`)\n- The column order of the resultant :class:`DataFrame` from :meth:`MultiIndex.to_frame` is now guaranteed to match the :attr:`MultiIndex.names` order. (:issue:`22420`)\n- :func:`pd.offsets.generate_range` argument ``time_rule`` has been removed; use ``offset`` instead (:issue:`24157`)\n\nPercentage change on groupby changes"
  },
  {
    "id" : "d8c54085-bd85-42d4-8264-1e01cc679c37",
    "prId" : 24157,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24157#pullrequestreview-184820117",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e01d2fb-4639-4dff-9499-7579fd9778c8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "where is the note for #11587?",
        "createdAt" : "2018-12-13T18:58:59Z",
        "updatedAt" : "2018-12-13T19:50:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c61a03b7-e312-43b2-a38e-52eee3b9fa95",
        "parentId" : "2e01d2fb-4639-4dff-9499-7579fd9778c8",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Just pushed, should be just below this line.",
        "createdAt" : "2018-12-13T19:05:10Z",
        "updatedAt" : "2018-12-13T19:50:45Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b927925a14def3d3d8710493517d34ebe950c040",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +1311,1315 @@- Bug in :class:`Categorical.__setitem__` not allowing setting with another ``Categorical`` when both are undordered and have the same categories, but in a different order (:issue:`24142`)\n- Bug in :func:`date_range` where using dates with millisecond resolution or higher could return incorrect values or the wrong number of values in the index (:issue:`24110`)\n- Bug in :class:`DatetimeIndex` where constructing a :class:`DatetimeIndex` from a :class:`Categorical` or :class:`CategoricalIndex` would incorrectly drop timezone information (:issue:`18664`)\n- Bug in :class:`DatetimeIndex` and :class:`TimedeltaIndex` where indexing with ``Ellipsis`` would incorrectly lose the index's ``freq`` attribute (:issue:`21282`)\n- Clarified error message produced when passing an incorrect ``freq`` argument to :class:`DatetimeIndex` with ``NaT`` as the first entry in the passed data (:issue:`11587`)"
  },
  {
    "id" : "022b1807-76a7-4e66-a2c1-1b4b40c312d3",
    "prId" : 24284,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24284#pullrequestreview-185364355",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71cd18aa-f685-422d-979e-59eeb2bafd93",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you might need to update the existing docs slightly and/or change the usage in previous whatsnew notes.",
        "createdAt" : "2018-12-15T19:19:57Z",
        "updatedAt" : "2018-12-15T20:17:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "b20609bde7cc5583afdfafc8e44c876658d02909",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +749,753 @@.. note::\n\n   There's no difference in memory usage between a :class:`SparseDataFrame`\n   and a :class:`DataFrame` with sparse values. The memory usage will\n   be the same as in the previous version of pandas."
  },
  {
    "id" : "bbd58b24-f74e-4d03-a835-27af788b5c52",
    "prId" : 24298,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24298#pullrequestreview-185371490",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9dde44b0-4ab2-4bd4-8f6e-551f6d95269b",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "```suggestion\r\n:meth:`DataFrame.merge` and :meth:`DataFrame.join` can now be used to join multi-indexed ``Dataframe`` instances on the overlaping index levels (:issue:`6360`)\r\n```\r\n\r\nNot sure if the difference between `:meth:` and `:func:` is relevant, I guess those, and many others later should be `:meth:`, but not sure if in practice there is a difference.",
        "createdAt" : "2018-12-16T00:53:14Z",
        "updatedAt" : "2018-12-17T13:28:04Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf1e3d32ecaa1d865aa5df4a45c065e31ca18246",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +270,274 @@^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n:func:`DataFrame.merge` and :func:`DataFrame.join` can now be used to join multi-indexed ``Dataframe`` instances on the overlaping index levels (:issue:`6360`)\n\nSee the :ref:`Merge, join, and concatenate"
  },
  {
    "id" : "8cad53b1-bcb3-4e11-bed6-8fee2a84f386",
    "prId" : 24298,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24298#pullrequestreview-185578840",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5be97b1d-fa57-4407-b5ac-f74a9cdd0174",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "typo: pancas -> pandas.",
        "createdAt" : "2018-12-17T13:07:49Z",
        "updatedAt" : "2018-12-17T13:28:04Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf1e3d32ecaa1d865aa5df4a45c065e31ca18246",
    "line" : 207,
    "diffHunk" : "@@ -1,1 +390,394 @@^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFixed a bug where calling :func:`pancas.core.groupby.SeriesGroupBy.pct_change` or :func:`pandas.core.groupby.DataFrameGroupBy.pct_change` would previously work across groups when calculating the percent change, where it now correctly works per group (:issue:`21200`, :issue:`21235`).\n\n.. ipython:: python"
  },
  {
    "id" : "e3d4cad5-c62d-48c3-beb6-445262d429c9",
    "prId" : 24298,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24298#pullrequestreview-185586977",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b900505-adee-407d-ae83-d3064c2dba5f",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Did the old link to numpy.asarray not work? Or does it just need to be changed from meth to func?",
        "createdAt" : "2018-12-17T13:08:58Z",
        "updatedAt" : "2018-12-17T13:28:04Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "463242b9-0102-44c6-8ec5-07d951cb0d3e",
        "parentId" : "4b900505-adee-407d-ae83-d3064c2dba5f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "it doesn't render.",
        "createdAt" : "2018-12-17T13:26:43Z",
        "updatedAt" : "2018-12-17T13:28:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf1e3d32ecaa1d865aa5df4a45c065e31ca18246",
    "line" : 358,
    "diffHunk" : "@@ -1,1 +683,687 @@- ``SparseArray`` is no longer a subclass of :class:`numpy.ndarray`. To convert a ``SparseArray`` to a NumPy array, use :func:`numpy.asarray`.\n- ``SparseArray.dtype`` and ``SparseSeries.dtype`` are now instances of :class:`SparseDtype`, rather than ``np.dtype``. Access the underlying dtype with ``SparseDtype.subtype``.\n- ``numpy.asarray(sparse_array)`` now returns a dense array with all the values, not just the non-fill-value values (:issue:`14167`)\n- ``SparseArray.take`` now matches the API of :meth:`pandas.api.extensions.ExtensionArray.take` (:issue:`19506`):\n"
  },
  {
    "id" : "dde443f5-61f8-43f8-9d03-7d9123d21e8e",
    "prId" : 24372,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24372#pullrequestreview-186979185",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08b02e66-3ac4-4e33-864a-bc698efb3621",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "When the input to `concat` is a `List[Series[Sparse]]`, we now return a DataFrame with sparse values. Previously this was a dense DataFrame (probably a bug), so it isn't API breaking.",
        "createdAt" : "2018-12-20T12:45:47Z",
        "updatedAt" : "2018-12-20T13:21:45Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a65cbc6c3b640bf1ec489d587d65c772160093b",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +1615,1619 @@- Bug in :meth:`SparseArray.nonzero` and :meth:`SparseDataFrame.dropna` returning shifted/incorrect results (:issue:`21172`)\n- Bug in :meth:`DataFrame.apply` where dtypes would lose sparseness (:issue:`23744`)\n- Bug in :func:`concat` when concatenating a list of :class:`Series` with all-sparse values changing the ``fill_value`` and converting to a dense Series (:issue:`24371`)\n\nStyle"
  },
  {
    "id" : "65e3ff5b-dda4-4f1f-baba-befe447a5930",
    "prId" : 24483,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24483#pullrequestreview-188416255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "209b89bb-3461-40ec-8d04-5ebc8112a124",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is only for tz aware right?",
        "createdAt" : "2018-12-29T16:13:41Z",
        "updatedAt" : "2018-12-29T18:45:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3cdc22ad-defc-4aa1-83ce-d60b43ad851e",
        "parentId" : "209b89bb-3461-40ec-8d04-5ebc8112a124",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "the example in 24265 was tz-naive",
        "createdAt" : "2018-12-29T16:43:05Z",
        "updatedAt" : "2018-12-29T18:45:56Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a7a5f1ccf3cd9ae04e4edb213d8434a0fde1a83",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1368,1372 @@- Bug in :class:`PeriodIndex` where comparisons against an array-like object with length 1 failed to raise ``ValueError`` (:issue:`23078`)\n- Bug in :meth:`DatetimeIndex.astype`, :meth:`PeriodIndex.astype` and :meth:`TimedeltaIndex.astype` ignoring the sign of the ``dtype`` for unsigned integer dtypes (:issue:`24405`).\n- Fixed bug in :meth:`Series.max` with ``datetime64[ns]``-dtype failing to return ``NaT`` when nulls are present and ``skipna=False`` is passed (:issue:`24265`)\n\nTimedelta"
  },
  {
    "id" : "e8f9d4b9-cfbc-4673-832c-6957ea0ed2bc",
    "prId" : 24494,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24494#pullrequestreview-189606956",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e6fed59-736d-49fd-80f0-dd24c48a5978",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Need a blank line after the ipython directive.",
        "createdAt" : "2019-01-05T19:57:28Z",
        "updatedAt" : "2019-01-05T21:17:58Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7cc02c1b113e83bc81fc1099787b2e1bb66d32f7",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +1171,1175 @@*New Behavior*\n\n.. ipython:: python\n\n    pd.concat([s, c])"
  },
  {
    "id" : "2c295f1e-53d8-4bec-9a5d-5d8808675faf",
    "prId" : 24494,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24494#pullrequestreview-189606956",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "327a4ae3-158d-4eca-89b6-6137b910d30d",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Specific that this only applies when concatenating a Categorical with something of a different dtype.",
        "createdAt" : "2019-01-05T20:00:05Z",
        "updatedAt" : "2019-01-05T21:17:58Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7cc02c1b113e83bc81fc1099787b2e1bb66d32f7",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1146,1150 @@^^^^^^^^^^^^^^^^^^^^^\n\nCalling :func:`pandas.concat` on a ``Categorical`` of ints with NA values now\ncauses them to be processed as objects when concatenating with anything\nother than another ``Categorical`` of ints (:issue:`19214`)"
  },
  {
    "id" : "fb5cca80-b187-4907-87b2-acf00f34abce",
    "prId" : 24596,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24596#pullrequestreview-189462648",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bc9b191-0825-4b9b-82ad-df4f59a21671",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This needed to  be nested a level I think.\r\n\r\nAlso, should this sections go before the big list of deprecations?",
        "createdAt" : "2019-01-03T17:56:32Z",
        "updatedAt" : "2019-01-04T18:55:11Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "29a2ebbd-91f1-414d-8fda-5d45fe1ba903",
        "parentId" : "4bc9b191-0825-4b9b-82ad-df4f59a21671",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yes",
        "createdAt" : "2019-01-04T17:47:31Z",
        "updatedAt" : "2019-01-04T18:55:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "50f4fbde4472700525959dbb7255185e36155f21",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1228,1232 @@\nInteger Addition/Subtraction with Datetimes and Timedeltas is Deprecated\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIn the past, users could—in some cases—add or subtract integers or integer-dtype"
  },
  {
    "id" : "861c104d-c939-4147-9f2c-76178cc2e313",
    "prId" : 24596,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24596#pullrequestreview-189395834",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbf7c3e2-f6c9-4938-84a3-86e26d2121d8",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Just as an FYI, I didn't realize that `okwarning` silenced the warning, so it isn't displayed. This may be a change from old IPythons. That's why this is a code-block.",
        "createdAt" : "2019-01-04T14:09:39Z",
        "updatedAt" : "2019-01-04T18:55:11Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "13d46c8d-a7b6-4e59-bf83-162ad560c060",
        "parentId" : "dbf7c3e2-f6c9-4938-84a3-86e26d2121d8",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Ah, missed the code-block. \r\nYep, okwarning suppresses the warning. There is not really a way to say \"ok to show the warning\", I think.",
        "createdAt" : "2019-01-04T14:55:21Z",
        "updatedAt" : "2019-01-04T18:55:11Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "50f4fbde4472700525959dbb7255185e36155f21",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +1294,1298 @@The default behavior remains the same, but issues a warning\n\n.. code-block:: python\n\n   In [8]: np.asarray(ser)"
  },
  {
    "id" : "ba24d12c-036d-4ec9-8bb7-9b5321839610",
    "prId" : 24596,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24596#pullrequestreview-189486322",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d24a7ad1-9473-4eb1-ac72-9431919db1ba",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "make show ser.array here as well as an alternative (or point to the appropriate section)",
        "createdAt" : "2019-01-04T15:39:46Z",
        "updatedAt" : "2019-01-04T18:55:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a1608e91-4399-4add-bf02-2f4391fad906",
        "parentId" : "d24a7ad1-9473-4eb1-ac72-9431919db1ba",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I don't think array is necessarily appropriate here, since this section is specifically about converting to ndarrays.",
        "createdAt" : "2019-01-04T18:56:10Z",
        "updatedAt" : "2019-01-04T18:56:10Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "50f4fbde4472700525959dbb7255185e36155f21",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +1329,1333 @@.. ipython:: python\n\n   ser.to_numpy()\n   ser.to_numpy(dtype=\"datetime64[ns]\")\n"
  },
  {
    "id" : "abfbc4ee-d5ae-45d7-aec9-bf634cb56af5",
    "prId" : 24596,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24596#pullrequestreview-189480685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "385ddafd-77c5-4e6c-bb47-1d15f2750c53",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you change this to be like our other sections for previous / current formatting?",
        "createdAt" : "2019-01-04T18:39:46Z",
        "updatedAt" : "2019-01-04T18:55:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "50f4fbde4472700525959dbb7255185e36155f21",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +1313,1317 @@*Previous Behavior*\n\n.. ipython:: python\n\n   np.asarray(ser, dtype='datetime64[ns]')"
  },
  {
    "id" : "b23e4909-78ea-460c-98ec-dfd1d08d0e80",
    "prId" : 24596,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24596#pullrequestreview-189598020",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c71320d-4c93-4a5b-aff3-bc2966334a16",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we usually call this current",
        "createdAt" : "2019-01-05T14:15:01Z",
        "updatedAt" : "2019-01-05T14:16:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "50f4fbde4472700525959dbb7255185e36155f21",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +1317,1321 @@   np.asarray(ser, dtype='datetime64[ns]')\n\n*Future Behavior*\n\n.. ipython:: python"
  },
  {
    "id" : "ac3526bc-f28a-47f3-8a86-b9a7b92515ba",
    "prId" : 24708,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24708#pullrequestreview-191496392",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c19b46db-d1c3-452d-b81e-441e74956262",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think there is a now-inaccurate line in here about the behavior already being changed that will need to be removed",
        "createdAt" : "2019-01-10T22:53:58Z",
        "updatedAt" : "2019-01-11T12:59:44Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "87b2b9ab-8301-427e-9b14-4f03f0f08026",
        "parentId" : "c19b46db-d1c3-452d-b81e-441e74956262",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "L1238 in master",
        "createdAt" : "2019-01-11T00:20:26Z",
        "updatedAt" : "2019-01-11T12:59:44Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "6063b98b-fa7f-421f-8d1a-4d55bba027ce",
        "parentId" : "c19b46db-d1c3-452d-b81e-441e74956262",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Thanks.",
        "createdAt" : "2019-01-11T02:17:13Z",
        "updatedAt" : "2019-01-11T12:59:44Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "8332c40626f001577fa585f695cb1e93e05b6c38",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +1398,1402 @@\n   pd.to_datetime([946684800000000000]).tz_localize('US/Central')\n\n.. _whatsnew_0240.deprecations.tz_aware_array:\n"
  },
  {
    "id" : "8eaacdb0-fe47-4920-a839-33f1dce56bcc",
    "prId" : 24762,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24762#pullrequestreview-192941124",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ac29a3a-75fa-40f6-b26c-6111b2fecb01",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this a change in current behavior? or just original text?",
        "createdAt" : "2019-01-16T01:30:16Z",
        "updatedAt" : "2019-01-17T23:00:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "613ebed0f5a6deca6c74d1914662e82bcc502b5e",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1148,1152 @@- :meth:`DataFrame.corr` and :meth:`Series.corr` now raise a ``ValueError`` along with a helpful error message instead of a ``KeyError`` when supplied with an invalid method (:issue:`22298`)\n- :meth:`shift` will now always return a copy, instead of the previous behaviour of returning self when shifting by 0 (:issue:`22397`)\n- :meth:`DataFrame.set_index` now gives a better (and less frequent) KeyError, raises a ``ValueError`` for incorrect types,\n  and will not fail on duplicate column names with ``drop=True``. (:issue:`22484`)\n- Slicing a single row of a DataFrame with multiple ExtensionArrays of the same type now preserves the dtype, rather than coercing to object (:issue:`22784`)"
  },
  {
    "id" : "05b412fd-6e2b-4bdb-bef4-307907631482",
    "prId" : 24799,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24799#pullrequestreview-193167155",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9d426aa-871a-447b-a4ac-5bc2b15d96a3",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Maybe also add something about the sparse changes?\r\n\r\nOr something about the \"general improvements of the ExtensionArray interface\" (although that is maybe too advanced / niche for the average user)",
        "createdAt" : "2019-01-16T14:29:35Z",
        "updatedAt" : "2019-01-16T16:23:11Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "d5e1bb0e-b1d5-4ac9-a97f-0792d7e6c976",
        "parentId" : "a9d426aa-871a-447b-a4ac-5bc2b15d96a3",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Highlight: If you were using SparseArrays we probably broke your code :)\r\n\r\nI'm planning to go into much more detail about the extension array stuff in the blog post, so slightly inclined to not say too much here, as it's probably not directly relevant for the average user.",
        "createdAt" : "2019-01-16T14:39:03Z",
        "updatedAt" : "2019-01-16T16:23:11Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd1a319be04ea367465b39d849f46fc7899bbb8d",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +20,24 @@* :ref:`A new top-level method for creating arrays <whatsnew_0240.enhancements.array>`\n* :ref:`Store Interval and Period data in a Series or DataFrame <whatsnew_0240.enhancements.interval>`\n* :ref:`Support for joining on two MultiIndexes <whatsnew_0240.enhancements.join_with_two_multiindexes>`\n\n.. _whatsnew_0240.enhancements.intna:"
  },
  {
    "id" : "d117133d-bd34-4ca8-ab36-ef36963c56c1",
    "prId" : 24799,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24799#pullrequestreview-193303087",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a69d8768-f419-43ec-a99b-9bd8f6ea1722",
        "parentId" : null,
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "Seems I'm a bit too late to mention this on time. In https://github.com/pandas-dev/pandas/issues/22476#issuecomment-440349264, we talked about this line.\r\n\r\nHow about: Pandas now requires that extension dtypes be hashable *(i.e. the respective `ExtensionDtype`-objects; hashability is not a requirement for the values of the corresponding `ExtensionArray`)*.\r\n\r\n",
        "createdAt" : "2019-01-16T19:07:53Z",
        "updatedAt" : "2019-01-16T19:08:06Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd1a319be04ea367465b39d849f46fc7899bbb8d",
    "line" : 483,
    "diffHunk" : "@@ -1,1 +1169,1173 @@**Equality and Hashability**\n\nPandas now requires that extension dtypes be hashable. The base class implements\na default ``__eq__`` and ``__hash__``. If you have a parametrized dtype, you should\nupdate the ``ExtensionDtype._metadata`` tuple to match the signature of your"
  },
  {
    "id" : "ccc810cf-a289-43fc-a0b6-b0c8f5b069b2",
    "prId" : 24811,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24811#pullrequestreview-193473867",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b57f225-45d4-480a-8a6a-4e7d24860921",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is this truly this specific? Off the top of my head seems strange that this would only be applicable to date time like indices",
        "createdAt" : "2019-01-17T05:44:52Z",
        "updatedAt" : "2019-01-17T22:32:05Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "729c5aaa-6ff6-4717-a4d3-0d3a5f8fd262",
        "parentId" : "7b57f225-45d4-480a-8a6a-4e7d24860921",
        "authorId" : "32dee960-ef0f-4311-9a0c-9d09022db82c",
        "body" : "The datetime-like index makes the program going into the function _roll_min_max_variable of window.pyx, where the bug is. I am not very sure if there is any other case triggering the function. But the program normally goes into _roll_min_max_fixed if it isn't a datetime-like index.",
        "createdAt" : "2019-01-17T06:22:48Z",
        "updatedAt" : "2019-01-17T22:32:05Z",
        "lastEditedBy" : "32dee960-ef0f-4311-9a0c-9d09022db82c",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e513db4688f9edf882c6cf5e065a6fd07161f6f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1809,1813 @@^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Bug in :func:`pandas.core.window.Rolling.min` and :func:`pandas.core.window.Rolling.max` with ``closed='left'``, a datetime-like index and only one entry in the series leading to segfault (:issue:`24718`)\n- Bug in :func:`pandas.core.groupby.GroupBy.first` and :func:`pandas.core.groupby.GroupBy.last` with ``as_index=False`` leading to the loss of timezone information (:issue:`15884`)\n- Bug in :meth:`DateFrame.resample` when downsampling across a DST boundary (:issue:`8531`)"
  },
  {
    "id" : "f9c0510d-4ebd-4b20-a6e8-c23ba8226564",
    "prId" : 24911,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24911#pullrequestreview-196383631",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60e66405-85e8-4479-8e51-0f126eaaf953",
        "parentId" : null,
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "At the end of #22476 (and again in #24799), @TomAugspurger  and I were talking about an ambiguous sentence in the EA whatsnew: \"Pandas now requires that extension dtypes be hashable.\"\r\n\r\nHow about: Pandas now requires that extension dtypes be hashable *(i.e. the respective `ExtensionDtype`-objects; hashability is not a requirement for the values of the corresponding `ExtensionArray`)*.",
        "createdAt" : "2019-01-25T06:18:54Z",
        "updatedAt" : "2019-01-25T08:45:21Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      },
      {
        "id" : "4113c306-61d6-400c-8be4-acea01b56444",
        "parentId" : "60e66405-85e8-4479-8e51-0f126eaaf953",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Added, thanks!",
        "createdAt" : "2019-01-25T07:24:52Z",
        "updatedAt" : "2019-01-25T08:45:21Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "f96840b1d84b38a3d57dac6a3d76a758d89badf8",
    "line" : 245,
    "diffHunk" : "@@ -1,1 +1169,1173 @@a default ``__eq__`` and ``__hash__``. If you have a parametrized dtype, you should\nupdate the ``ExtensionDtype._metadata`` tuple to match the signature of your\n``__init__`` method. See :class:`pandas.api.extensions.ExtensionDtype` for more (:issue:`22476`).\n\n**New and changed methods**"
  },
  {
    "id" : "49319998-14dc-40e7-951f-a96d6a9c6aee",
    "prId" : 24989,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24989#pullrequestreview-197357612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4756b3cf-28db-4e7d-a166-3484f99369e7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "understand why u r putting this on 0.24.0 so does this mean u r going to rebuild docs and repush?",
        "createdAt" : "2019-01-29T00:00:31Z",
        "updatedAt" : "2019-01-29T02:48:16Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c703ffde-c756-4611-a716-47061ccb4035",
        "parentId" : "4756b3cf-28db-4e7d-a166-3484f99369e7",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I can if needed. The url off pandas.pydata.org points to `/stable`, so the whatsnew most people see for 0.24.0 will include this change.",
        "createdAt" : "2019-01-29T02:50:25Z",
        "updatedAt" : "2019-01-29T02:50:25Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "c26684d955c83c233d218e2e5bea4bd0fc6813a3",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +652,656 @@.. _whatsnew_0240.api_breaking.read_csv_mixed_tz:\n\nParsing mixed-timezones with :func:`read_csv`\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"
  }
]