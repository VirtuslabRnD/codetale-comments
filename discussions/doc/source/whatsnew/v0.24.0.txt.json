[
  {
    "id" : "8ccc6886-fa05-4212-bec2-bc792eef39c4",
    "prId" : 17900,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17900#pullrequestreview-135216780",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "480c810b-e089-4629-a17f-8fcfae502d7a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "csv, json, pickle as well?",
        "createdAt" : "2018-07-07T23:00:44Z",
        "updatedAt" : "2018-07-08T01:12:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "86a0682d-2ec9-4c7b-ad23-a43bcc7093ab",
        "parentId" : "480c810b-e089-4629-a17f-8fcfae502d7a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "and this is for both reading and writing?",
        "createdAt" : "2018-07-07T23:01:12Z",
        "updatedAt" : "2018-07-08T01:12:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c9a010e7-1857-4e1c-9ac0-932efeb99cbd",
        "parentId" : "480c810b-e089-4629-a17f-8fcfae502d7a",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "* Not sure about `pickle`, as it wasn't tested in the original diff.  Can check.\r\n* Nope, just for writing.  Reading already has support (why we didn't support it for both reading and writing in the first place befuddles me a little...)",
        "createdAt" : "2018-07-07T23:07:05Z",
        "updatedAt" : "2018-07-08T01:12:50Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "cfe22837-cbfe-42f9-b26b-a640daa085b0",
        "parentId" : "480c810b-e089-4629-a17f-8fcfae502d7a",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Ha, `to_pickle` already has support for `infer` per the docs.  Now I'm really confused how we didn't have this for `to_csv` and `to_json`...",
        "createdAt" : "2018-07-07T23:08:57Z",
        "updatedAt" : "2018-07-08T01:12:50Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "651e43f3952119670ba3469d165d02dc00908c47",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +84,88 @@- :meth:`Series.nlargest`, :meth:`Series.nsmallest`, :meth:`DataFrame.nlargest`, and :meth:`DataFrame.nsmallest` now accept the value ``\"all\"`` for the ``keep` argument. This keeps all ties for the nth largest/smallest value (:issue:`16818`)\n- :class:`IntervalIndex` has gained the :meth:`~IntervalIndex.set_closed` method to change the existing ``closed`` value (:issue:`21670`)\n- :func:`~DataFrame.to_csv` and :func:`~DataFrame.to_json` now support ``compression='infer'`` to infer compression based on filename (:issue:`15008`)\n-\n"
  },
  {
    "id" : "73bca508-758a-419e-911f-02b4ec3ca906",
    "prId" : 20046,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20046#pullrequestreview-168825254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7519439b-a516-4d08-bc4f-5100f5629e17",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a ref link to the new docs",
        "createdAt" : "2018-10-26T02:06:36Z",
        "updatedAt" : "2018-10-29T14:28:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e167ec30-b52b-41ed-9c8b-f875bf5f6d37",
        "parentId" : "7519439b-a516-4d08-bc4f-5100f5629e17",
        "authorId" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "body" : "done",
        "createdAt" : "2018-10-26T13:35:08Z",
        "updatedAt" : "2018-10-29T14:28:51Z",
        "lastEditedBy" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "tags" : [
        ]
      }
    ],
    "commit" : "1263a47adf89836920a56c0b28412b78c0b58780",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +187,191 @@\n:func:`DataFrame.rename_axis` now supports ``index`` and ``columns`` arguments\nand :func:`Series.rename_axis` supports ``index`` argument (:issue:`19978`)\n\nThis change allows a dictionary to be passed so that some of the names "
  },
  {
    "id" : "ff353a65-284f-49dd-95f0-ed60679e3283",
    "prId" : 21160,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21160#pullrequestreview-139192389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "215e98af-f8d2-4707-9015-6b02e6115ea0",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "\"of of \" -> \"of a\"",
        "createdAt" : "2018-07-20T20:21:50Z",
        "updatedAt" : "2018-07-20T20:49:44Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f04f90449b9b605c0a12956a91f538aa6db91ae",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +69,73 @@   s + 0.01\n\nThese dtypes can operate as part of of ``DataFrame``.\n\n.. ipython:: python"
  },
  {
    "id" : "9d4c2f61-77f8-4403-bf02-9cfb08bcf015",
    "prId" : 21160,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21160#pullrequestreview-139226361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bd9cb61-26fd-4cf3-8fee-a627d276fe86",
        "parentId" : null,
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "captilized -> capitalized?",
        "createdAt" : "2018-07-20T22:18:28Z",
        "updatedAt" : "2018-07-20T22:18:28Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f04f90449b9b605c0a12956a91f538aa6db91ae",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +87,91 @@.. warning::\n\n   The Integer NA support currently uses the captilized dtype version, e.g. ``Int8`` as compared to the traditional ``int8``. This may be changed at a future date.\n\n.. _whatsnew_0240.enhancements.read_html:"
  },
  {
    "id" : "cd23935e-37cf-4964-b8ca-963022ed8117",
    "prId" : 21394,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21394#pullrequestreview-168720950",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a711a5d-bb83-4328-ae8f-ef8ed3b5e1d4",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "NotImplemented -> raises a TypeError (that is what the user sees) \r\nFixed in https://github.com/pandas-dev/pandas/pull/23355",
        "createdAt" : "2018-10-26T08:34:41Z",
        "updatedAt" : "2018-10-26T08:34:41Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "301615eb7c5e9a10e624163fc8af404a7a69278c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +194,198 @@  The default compression for ``to_csv``, ``to_json``, and ``to_pickle`` methods has been updated to ``'infer'`` (:issue:`22004`).\n- :func:`to_timedelta` now supports iso-formated timedelta strings (:issue:`21877`)\n- Comparing :class:`Timedelta` with unknown types now return ``NotImplemented`` instead of ``False`` (:issue:`20829`)\n- :class:`Series` and :class:`DataFrame` now support :class:`Iterable` in constructor (:issue:`2193`)\n- :class:`DatetimeIndex` gained :attr:`DatetimeIndex.timetz` attribute. Returns local time with timezone information. (:issue:`21358`)"
  },
  {
    "id" : "f28db751-acff-4d53-8132-58637030b844",
    "prId" : 21406,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21406#pullrequestreview-158107667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11276b75-c02f-4e82-a644-7e357154f1fc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "no need to use the leading '-', just write more in a paragraph style. First sentence is great, not sure I understand the 2nd and 3rd ones.",
        "createdAt" : "2018-09-24T13:44:07Z",
        "updatedAt" : "2018-10-19T05:43:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "23ce5c6cf5fd649a19692a9bda0fbc844534127e",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +244,248 @@ for the default line terminator (:issue:`20353`).\nThis change only affects when running on Windows, where ``'\\r\\n'`` was used for line terminator\neven when ``'\\n'`` was passed in ``line_terminator``.\n\nPrevious Behavior on Windows:"
  },
  {
    "id" : "15e2b799-7fdb-4146-96fb-da30e041852f",
    "prId" : 21406,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21406#pullrequestreview-158932693",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3097352f-714f-4e8f-8e4c-4809a5d3cebc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you use pep in these examples, e.g. put spaces after the commas",
        "createdAt" : "2018-09-26T10:37:53Z",
        "updatedAt" : "2018-10-19T05:43:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "23ce5c6cf5fd649a19692a9bda0fbc844534127e",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +254,258 @@   ...:     \"string_with_crlf\": [\"a\\r\\nbc\"]\n   ...: })\n\nIn [2]: # When passing file PATH to to_csv, line_terminator does not work, and csv is saved with '\\r\\n'.\n   ...: # Also, this converts all '\\n's in the data to '\\r\\n'."
  },
  {
    "id" : "1df8d8e2-c433-490b-a5b7-6dc09563e1cd",
    "prId" : 21406,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21406#pullrequestreview-158932693",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb4e19c1-ba5c-4473-967d-f6a1aed2028a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I still not clear what these cases are , can you add a coment for example what 2/3 differe from 4/5",
        "createdAt" : "2018-09-26T10:38:32Z",
        "updatedAt" : "2018-10-19T05:43:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "23ce5c6cf5fd649a19692a9bda0fbc844534127e",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +261,265 @@In [3]: with open(\"test.csv\", mode='rb') as f:\n   ...:     print(f.read())\nb'string_with_lf,string_with_crlf\\r\\n\"a\\r\\nbc\",\"a\\r\\r\\nbc\"\\r\\n'\n\nIn [4]: # When passing file OBJECT with newline option to to_csv, line_terminator works."
  },
  {
    "id" : "fc350620-52f3-40d2-ad0c-2a7e42c178ca",
    "prId" : 21406,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21406#pullrequestreview-163030537",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53d0efc3-3ad7-4947-bab8-ecae70a9232c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@gfyoung can you have a read over this. This should just point out the most common case / change that matters.",
        "createdAt" : "2018-10-09T12:51:35Z",
        "updatedAt" : "2018-10-19T05:43:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "28094264-dff1-4236-9d34-962f602504ae",
        "parentId" : "53d0efc3-3ad7-4947-bab8-ecae70a9232c",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Overall, this looks pretty good!  Left a few comments below.",
        "createdAt" : "2018-10-09T18:21:29Z",
        "updatedAt" : "2018-10-19T05:43:15Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "23ce5c6cf5fd649a19692a9bda0fbc844534127e",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +272,276 @@\n\nNew Behavior on Windows:\n\n- By passing ``line_terminator`` explicitly, line terminator is set to that character."
  },
  {
    "id" : "6bce98be-e6ee-4b52-8097-57c7ca7d42d0",
    "prId" : 21406,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21406#pullrequestreview-163212715",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8df30a1-535e-46b5-aba7-4515eb69aafb",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "\"it does not change the value inside the data\" - what do you mean by that exactly?",
        "createdAt" : "2018-10-09T18:18:27Z",
        "updatedAt" : "2018-10-19T05:43:15Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "0fb596bd-f938-4a1a-9c58-cdf1ca7e5b6e",
        "parentId" : "d8df30a1-535e-46b5-aba7-4515eb69aafb",
        "authorId" : "27d829ad-c68b-406d-8d60-b1078a7b4be3",
        "body" : "Suppose that `data` is like this (which is used in following codes)\r\n\r\n||string_with_lf|string_with_crlf|\r\n|:-|:-|:-|\r\n|1|a\\nbc|a\\r\\nbc|\r\n\r\nAs described in [2]&[3] of \"Previous Behavior\", if there are some `\\n`s INSIDE the data, `to_csv()` changed the value and outputted CSV like this.\r\n\r\n||string_with_lf|string_with_crlf|\r\n|:-|:-|:-|\r\n|1| a **\\r** \\nbc | a **\\r** \\r\\nbc |\r\n\r\nBy this PR, it is fixed to output the following CSV.\r\n\r\n||string_with_lf|string_with_crlf|\r\n|:-|:-|:-|\r\n|1| a\\nbc | a\\r\\nbc |",
        "createdAt" : "2018-10-09T19:12:39Z",
        "updatedAt" : "2018-10-19T05:43:15Z",
        "lastEditedBy" : "27d829ad-c68b-406d-8d60-b1078a7b4be3",
        "tags" : [
        ]
      },
      {
        "id" : "df1bc848-b33e-46e5-8504-0210cf8fb898",
        "parentId" : "d8df30a1-535e-46b5-aba7-4515eb69aafb",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Gotcha.  Could you mention that in [2] and [3]?  What you're describing isn't explicitly mentioned.",
        "createdAt" : "2018-10-10T07:18:07Z",
        "updatedAt" : "2018-10-19T05:43:15Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "23ce5c6cf5fd649a19692a9bda0fbc844534127e",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +276,280 @@- By passing ``line_terminator`` explicitly, line terminator is set to that character.\n- The value of ``line_terminator`` only affects the line terminator of CSV,\n  so it does not change the value inside the data.\n\n.. code-block:: ipython"
  },
  {
    "id" : "c6d03c0a-ce73-4c48-9fe4-2b6f6ce4781a",
    "prId" : 21427,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21427#pullrequestreview-128422798",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "966aba6e-705b-4008-b790-f3f9523b5a86",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add the Current  behavior via an ipython block (obviously w/o normalize passed)",
        "createdAt" : "2018-06-13T10:41:55Z",
        "updatedAt" : "2018-06-13T15:06:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "2dadeb2a-eb05-4035-aeae-e374adb21a19",
        "parentId" : "966aba6e-705b-4008-b790-f3f9523b5a86",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "OK.  And just the same `ts + tic + tic + tic == ts + (tic + tic + tic)` demonstration?  With `normalize=False` that behavior is unchanged.",
        "createdAt" : "2018-06-13T15:05:17Z",
        "updatedAt" : "2018-06-13T15:06:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d15d137b7c04acbe83edb32a9b2a61b3dcf7907f",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +51,55 @@    In [5]: ts + tic + tic + tic == ts + (tic + tic + tic)\n    Out [5]: False\n\nCurrent Behavior:\n"
  },
  {
    "id" : "300ebc7d-a958-443b-bd49-e2cb8e0c0b4f",
    "prId" : 21487,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21487#pullrequestreview-134201700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38cb7a08-e849-48ee-b7ef-9810b00a2424",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is all ok, but would a subsection with a mini-example be instructive to the user about the revised functinaility? not saying 100% need to, but if a simple enough example (or even an image) would be helpful here",
        "createdAt" : "2018-07-03T15:42:24Z",
        "updatedAt" : "2018-07-05T17:45:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "dba75c76-59e3-4d7a-bd81-d7c632bd17a3",
        "parentId" : "38cb7a08-e849-48ee-b7ef-9810b00a2424",
        "authorId" : "118d302a-504a-4e64-ba06-999c7b546b21",
        "body" : "I'm going to display my ignorance of the whatsnew format: ... where would this go?",
        "createdAt" : "2018-07-03T21:58:05Z",
        "updatedAt" : "2018-07-05T17:45:52Z",
        "lastEditedBy" : "118d302a-504a-4e64-ba06-999c7b546b21",
        "tags" : [
        ]
      },
      {
        "id" : "181349a4-526e-4741-9f88-8ea7e75b1067",
        "parentId" : "38cb7a08-e849-48ee-b7ef-9810b00a2424",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "oh, you make a new subsection in the top somewhere, e.g. model after this\r\n\r\n``Series and Index Data-Dtype Incompatibilities`` \r\n\r\njust add a new one below and you can make an extended example",
        "createdAt" : "2018-07-03T23:42:56Z",
        "updatedAt" : "2018-07-05T17:45:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fd863bb3611093aefcda7e0f16573d77a3190d4",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +371,375 @@^^^\n\n- :func:`read_html()` no longer ignores all-whitespace ``<tr>`` within ``<thead>`` when considering the ``skiprows`` and ``header`` arguments. Previously, users had to decrease their ``header`` and ``skiprows`` values on such tables to work around the issue. (:issue:`21641`)\n-\n-"
  },
  {
    "id" : "14d6b0e7-b922-4a16-800f-cb51bd90ca6d",
    "prId" : 21650,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21650#pullrequestreview-132930510",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a465670-3ce4-4b09-8e3b-ebfb00d2b018",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add both issue numbers here?",
        "createdAt" : "2018-06-28T10:34:07Z",
        "updatedAt" : "2018-06-28T17:01:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "79c305f4-af21-4077-8ce7-ffd8121f4eab",
        "parentId" : "9a465670-3ce4-4b09-8e3b-ebfb00d2b018",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "The second issue number #18656 is an actually the old PR.  I mentioned it for completeness.",
        "createdAt" : "2018-06-28T16:51:08Z",
        "updatedAt" : "2018-06-28T17:01:36Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "4998050692991238b26161dd1609f27d3dce42c8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +25,29 @@  (:issue:`21627`)\n- New method :meth:`HDFStore.walk` will recursively walk the group hierarchy of an HDF5 file (:issue:`10932`)\n- :meth:`Series.nlargest`, :meth:`Series.nsmallest`, :meth:`DataFrame.nlargest`, and :meth:`DataFrame.nsmallest` now accept the value ``\"all\"`` for the ``keep` argument. This keeps all ties for the nth largest/smallest value (:issue:`16818`)\n-\n"
  }
]