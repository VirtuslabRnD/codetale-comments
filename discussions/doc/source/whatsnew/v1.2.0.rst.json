[
  {
    "id" : "dcc5509c-43c4-4701-bc3e-6be6ce6da6d2",
    "prId" : 28394,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28394#pullrequestreview-479768060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f736f0c-7356-42e7-a882-bb8da96f778d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you reference the duplicates section itself?",
        "createdAt" : "2020-08-31T23:25:10Z",
        "updatedAt" : "2020-09-01T13:55:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f172ba4f-5723-4789-9b02-145af1587b33",
        "parentId" : "9f736f0c-7356-42e7-a882-bb8da96f778d",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I reference it right above here I think, on line 56.",
        "createdAt" : "2020-09-01T13:57:44Z",
        "updatedAt" : "2020-09-01T13:57:44Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf23fdad7035707f49bd571cf5b9d4d682c9d01f",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +58,62 @@The ``allows_duplicate_labels`` flag is stored in the new :attr:`DataFrame.flags`\nattribute. This stores global attributes that apply to the *pandas object*. This\ndiffers from :attr:`DataFrame.attrs`, which stores information that applies to\nthe dataset.\n"
  },
  {
    "id" : "969db527-eab1-4bfb-99d6-08ae8f9a78bc",
    "prId" : 33767,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33767#pullrequestreview-493903317",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5a6b07c-83e8-4071-ae73-659d89fb34b8",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is \"externally\" shared axes a standard term?",
        "createdAt" : "2020-09-22T22:17:25Z",
        "updatedAt" : "2020-09-23T05:24:56Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "a897f4b3-a2d6-42af-ae43-954b4ebfb303",
        "parentId" : "c5a6b07c-83e8-4071-ae73-659d89fb34b8",
        "authorId" : "5209a5f9-bbf5-4f6d-b585-9d15bb8133ed",
        "body" : "No, hence the quotes. MPL overloading the term \"axes\" is problem:\r\n\r\nTwinned axes were losing their tick labels which should only happen to all but the last row or column of axes shared between axes (:issue:`33819`)",
        "createdAt" : "2020-09-22T22:30:21Z",
        "updatedAt" : "2020-09-23T05:24:56Z",
        "lastEditedBy" : "5209a5f9-bbf5-4f6d-b585-9d15bb8133ed",
        "tags" : [
        ]
      },
      {
        "id" : "ff30db15-1f58-4ee2-a269-1a9d356f7ff7",
        "parentId" : "c5a6b07c-83e8-4071-ae73-659d89fb34b8",
        "authorId" : "5209a5f9-bbf5-4f6d-b585-9d15bb8133ed",
        "body" : "I should add that this is explained more thoroughly in the linked Issue #33819",
        "createdAt" : "2020-09-22T23:02:01Z",
        "updatedAt" : "2020-09-23T05:24:56Z",
        "lastEditedBy" : "5209a5f9-bbf5-4f6d-b585-9d15bb8133ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcb133bef40fb92d74713229911bef8e9db0c2a8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +332,336 @@- Bug in :meth:`DataFrame.plot` was rotating xticklabels when ``subplots=True``, even if the x-axis wasn't an irregular time series (:issue:`29460`)\n- Bug in :meth:`DataFrame.plot` where a marker letter in the ``style`` keyword sometimes causes a ``ValueError`` (:issue:`21003`)\n- Twinned axes were losing their tick labels which should only happen to all but the last row or column of 'externally' shared axes (:issue:`33819`)\n\nGroupby/resample/rolling"
  },
  {
    "id" : "e512a2c3-3978-4a7e-921b-b304d251ec4b",
    "prId" : 34307,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34307#pullrequestreview-499371121",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37893c19-b3fc-4137-91db-f0885a380644",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "could be non-comments (e.g. just before the block itself)",
        "createdAt" : "2020-09-30T12:29:34Z",
        "updatedAt" : "2020-09-30T12:31:16Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "edf9618d49de3f04d8f18e099c60310ae40296f7",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +129,133 @@.. ipython:: python\n\n  # the default numpy float64 dtype\n  s1 = pd.Series([1.5, None])\n  s1"
  },
  {
    "id" : "de39a9eb-fb9c-4cf1-97ad-1e616979bc30",
    "prId" : 34654,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34654#pullrequestreview-487348385",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2235b302-d91b-4df8-8e2f-eb95dcbc917c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you move this to the I/O section",
        "createdAt" : "2020-09-13T23:13:15Z",
        "updatedAt" : "2020-09-22T22:31:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3067b9790eedcf0d60b071d90264545ae5cb65c2",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +374,378 @@Other\n^^^^^\n\n- Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` incorrectly raising ``AssertionError`` instead of ``ValueError`` when invalid parameter combinations are passed (:issue:`36045`)\n- Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` with numeric values and string ``to_replace`` (:issue:`34789`)"
  },
  {
    "id" : "de94cd3b-cdff-4efa-8fa0-acd71374b597",
    "prId" : 35129,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35129#pullrequestreview-460443290",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "678d45ce-9850-4e5d-99e5-106d624a56d8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add this example to the io.rst section as well",
        "createdAt" : "2020-08-03T23:44:31Z",
        "updatedAt" : "2020-08-07T00:24:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7cea46f8-86e9-46bd-8a11-a769f4010fc9",
        "parentId" : "678d45ce-9850-4e5d-99e5-106d624a56d8",
        "authorId" : "42aa2e10-a5f0-418e-8919-5ec1443b7f2b",
        "body" : "I added a new subsection in \"Data Handling\". Is that an appropriate place?",
        "createdAt" : "2020-08-04T01:50:23Z",
        "updatedAt" : "2020-08-07T00:24:15Z",
        "lastEditedBy" : "42aa2e10-a5f0-418e-8919-5ec1443b7f2b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5eaf2766401a50e31e17bbb2665829deb75de67c",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +16,20 @@.. _whatsnew_120.binary_handle_to_csv:\n\nSupport for binary file handles in ``to_csv``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"
  },
  {
    "id" : "7d6d8b6f-0cb8-4b12-9cad-789d9e076c7b",
    "prId" : 35381,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35381#pullrequestreview-463561418",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afe202fe-3c31-4700-85fe-d03b4c0e8eb5",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you reference the updated remove i/o section here",
        "createdAt" : "2020-08-07T19:29:54Z",
        "updatedAt" : "2020-08-10T13:44:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "afdc0309d15e28dcd88ba4646d29a3e91413a948",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +20,24 @@to pass a dictionary of parameters to the storage backend. This allows, for\nexample, for passing credentials to S3 and GCS storage. The details of what\nparameters can be passed to which backends can be found in the documentation\nof the individual storage backends (detailed from the fsspec docs for\n`builtin implementations`_ and linked to `external ones`_). See"
  },
  {
    "id" : "0a1e75c0-6f22-47cf-bf12-911c2ee4fc83",
    "prId" : 35381,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35381#pullrequestreview-463589785",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60df12ec-e631-46fa-b268-76cdde009691",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "are these referenced in io.rst (more important that they are there), ok if they are here *as well* (but not really necessary)",
        "createdAt" : "2020-08-07T20:16:01Z",
        "updatedAt" : "2020-08-10T13:44:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3592fca7-2300-4f67-bffc-60583fb0f2d7",
        "parentId" : "60df12ec-e631-46fa-b268-76cdde009691",
        "authorId" : "91bd3e12-470c-4417-ac08-5f387012a9be",
        "body" : "I phrased it a bit differently (one general link, one specific instead of two specific) - I'll make the two places more similar.",
        "createdAt" : "2020-08-07T20:23:49Z",
        "updatedAt" : "2020-08-10T13:44:29Z",
        "lastEditedBy" : "91bd3e12-470c-4417-ac08-5f387012a9be",
        "tags" : [
        ]
      }
    ],
    "commit" : "afdc0309d15e28dcd88ba4646d29a3e91413a948",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +22,26 @@parameters can be passed to which backends can be found in the documentation\nof the individual storage backends (detailed from the fsspec docs for\n`builtin implementations`_ and linked to `external ones`_). See\nSection :ref:`io.remote`.\n"
  },
  {
    "id" : "1f22f41a-e600-4dee-b050-3204929c10b9",
    "prId" : 35668,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35668#pullrequestreview-510997260",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e52099b2-536c-4eca-b73d-dc346f82ab17",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think we could add a link to to_latest here: https://pandas.pydata.org/docs/user_guide/io.html (followon as prob need a short section as well).",
        "createdAt" : "2020-10-17T16:22:40Z",
        "updatedAt" : "2020-10-17T16:22:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fd73e8fdac7a602251e3a96ff020b14a9f8be95",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +113,117 @@\nUsage of keyword ``caption`` is extended.\nBesides taking a single string as an argument,\none can optionally provide a tuple of ``(full_caption, short_caption)``\nto add a short caption macro."
  },
  {
    "id" : "88d60b40-0999-416f-ae63-f5e107aa129d",
    "prId" : 35848,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35848#pullrequestreview-472970682",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1b2b8e1-3ebb-439a-8f00-c52ad274d019",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "is there a more user-facing explanation?",
        "createdAt" : "2020-08-22T15:51:37Z",
        "updatedAt" : "2020-09-02T05:43:39Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "e1c46128-389f-4b92-a69b-70ea89aea623",
        "parentId" : "c1b2b8e1-3ebb-439a-8f00-c52ad274d019",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "These are public method so they are already pretty use facing?",
        "createdAt" : "2020-08-22T16:08:50Z",
        "updatedAt" : "2020-09-02T05:43:39Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "49dc493c-0f91-4432-a7a7-acb80fe85c76",
        "parentId" : "c1b2b8e1-3ebb-439a-8f00-c52ad274d019",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "i guess, but in practice we dont expect users to use them do we?",
        "createdAt" : "2020-08-22T18:10:58Z",
        "updatedAt" : "2020-09-02T05:43:39Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "4402ffa9-7a8e-4770-a17a-b6496b06b51b",
        "parentId" : "c1b2b8e1-3ebb-439a-8f00-c52ad274d019",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "I figure since we had these two issues. users were using these methods (albeit probably uncommon in general).",
        "createdAt" : "2020-08-22T19:08:22Z",
        "updatedAt" : "2020-09-02T05:43:39Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "bbac517b-ea57-4d3c-b72e-005762b19ee8",
        "parentId" : "c1b2b8e1-3ebb-439a-8f00-c52ad274d019",
        "authorId" : "c27c9674-a30f-42b0-bc20-49c614b7e6c4",
        "body" : "We use `get_slice_bound` pretty consistently for `DatetimeIndex`es where there are multiple rows per time.  We want half-open ranges like `[begin, end)` and a lot of straightforward indexing has, at least historically, returned `[begin, end]`.  So the `side` argument of `get_slice_bound` is handy.",
        "createdAt" : "2020-08-22T20:20:56Z",
        "updatedAt" : "2020-09-02T05:43:39Z",
        "lastEditedBy" : "c27c9674-a30f-42b0-bc20-49c614b7e6c4",
        "tags" : [
        ]
      },
      {
        "id" : "98ec7b10-4808-4e98-abed-647c551d6893",
        "parentId" : "c1b2b8e1-3ebb-439a-8f00-c52ad274d019",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "these tests are fine (will look soon)\nmouth we want to test .loc (and report in the whats new) as this is the user facing method",
        "createdAt" : "2020-08-23T00:39:45Z",
        "updatedAt" : "2020-09-02T05:43:39Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef20794f43fc758c65fd12679ea54af32107dc40",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +178,182 @@- Bug in :class:`DateOffset` where attributes reconstructed from pickle files differ from original objects when input values exceed normal ranges (e.g months=12) (:issue:`34511`)\n- Bug in :meth:`DatetimeIndex.get_slice_bound` where ``datetime.date`` objects were not accepted or naive :class:`Timestamp` with a tz-aware :class:`DatetimeIndex` (:issue:`35690`)\n- Bug in :meth:`DatetimeIndex.slice_locs` where ``datetime.date`` objects were not accepted (:issue:`34077`)\n\nTimedelta"
  },
  {
    "id" : "4acb7268-7f05-4155-acc1-1416be06a2a3",
    "prId" : 35964,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35964#pullrequestreview-487257853",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96e30a38-2b5f-4ec1-bdce-f754d58156e2",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "move to reshaping section (generally we want almost nothing in Other)",
        "createdAt" : "2020-09-12T21:33:14Z",
        "updatedAt" : "2020-09-12T21:36:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "f66a80624812165ffaf53585f7d98c527026d4e2",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +343,347 @@- Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` incorrectly raising ``AssertionError`` instead of ``ValueError`` when invalid parameter combinations are passed (:issue:`36045`)\n- Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` with numeric values and string ``to_replace`` (:issue:`34789`)\n- Bug in :meth:`Series.transform` would give incorrect results or raise when the argument ``func`` was dictionary (:issue:`35811`)\n-\n"
  },
  {
    "id" : "0076ddda-9c02-4b0d-99af-eaf568ae0173",
    "prId" : 36094,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36094#pullrequestreview-483027824",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af1a3fec-651b-43ed-a414-9d62ba4a682e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "just relocated as was incorrect before",
        "createdAt" : "2020-09-05T03:45:46Z",
        "updatedAt" : "2020-09-06T02:50:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c1805536af51189a457b0e6cc8d338d32b3abbc",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +312,316 @@- Bug in :meth:`DataFrameGroupby.tshift` failing to raise ``ValueError`` when a frequency cannot be inferred for the index of a group (:issue:`35937`)\n- Bug in :meth:`DataFrame.groupby` does not always maintain column index name for ``any``, ``all``, ``bfill``, ``ffill``, ``shift`` (:issue:`29764`)\n- Bug in :meth:`DataFrameGroupBy.apply` raising error with ``np.nan`` group(s) when ``dropna=False`` (:issue:`35889`)\n-\n"
  },
  {
    "id" : "e89eaca8-4ebf-4688-af53-85fd41245c04",
    "prId" : 36413,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36413#pullrequestreview-492158662",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46b6ed24-7413-4156-89f9-8c2c608d3699",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the issue reference here.\r\n\r\nAlso I would add the same text here in the docs, maybe in the reshaping section, in a note",
        "createdAt" : "2020-09-19T20:12:35Z",
        "updatedAt" : "2020-10-07T05:08:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e6c383fd-cb82-4648-a175-7724db5acbb7",
        "parentId" : "46b6ed24-7413-4156-89f9-8c2c608d3699",
        "authorId" : "9bb88d30-ac0c-4c78-9ac4-9178345da078",
        "body" : "yep, i ended up adding it as a note in the \"merge, join, concatenate, and compare\" section.",
        "createdAt" : "2020-09-19T22:06:51Z",
        "updatedAt" : "2020-10-07T05:08:34Z",
        "lastEditedBy" : "9bb88d30-ac0c-4c78-9ac4-9178345da078",
        "tags" : [
        ]
      }
    ],
    "commit" : "17254c4768a9cd873d86f428fee14dbfa7834ceb",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +163,167 @@^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWhen aggregating using :meth:`concat` or the :class:`DataFrame` constructor, Pandas\nwill attempt to preserve index (and column) names whenever possible (:issue:`35847`).\nIn the case where all inputs share a common name, this name will be assigned to the"
  },
  {
    "id" : "6cdafe5e-2209-47e7-91e8-54a1bf3b43f2",
    "prId" : 36418,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36418#pullrequestreview-490906122",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28aac35b-d51b-4963-9f21-c76e171afc43",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "looking at the docstring for to_native_types, .astype(str) does not cover all the options. \r\n\r\n@jorisvandenbossche if I am correct, what the to_native_types method does is add some extra formatting options? These could in principle be useful for users as well?  https://github.com/pandas-dev/pandas/issues/23820#issuecomment-501594156 :wink:",
        "createdAt" : "2020-09-17T16:04:05Z",
        "updatedAt" : "2020-09-17T16:04:05Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "949099b5-2660-4d80-a314-07fa8beaecf4",
        "parentId" : "28aac35b-d51b-4963-9f21-c76e171afc43",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah this is almost entirely internal.",
        "createdAt" : "2020-09-17T16:16:04Z",
        "updatedAt" : "2020-09-17T16:16:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d5289ed9-f823-4300-a150-d9dba79afb91",
        "parentId" : "28aac35b-d51b-4963-9f21-c76e171afc43",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Those can indeed be potentially useful, but some of them are exposed through display options already, if you want to control how your dataframe is formatted. \r\n\r\nFurther, I think the main thing is that we simply don't want to have this method in this form public ;) And I mainly wanted to give *some* alternative (for the default arguments), can also leave it out if will only confuse. \r\nThere has been discussion about a generic `format()` method (https://github.com/pandas-dev/pandas/issues/17211)",
        "createdAt" : "2020-09-17T18:57:38Z",
        "updatedAt" : "2020-09-17T18:57:38Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "331761d1-9157-4a56-8af1-3aa2f4b54d3a",
        "parentId" : "28aac35b-d51b-4963-9f21-c76e171afc43",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "> yeah this is almost entirely internal.\r\n\r\nAPI documented https://pandas.pydata.org/pandas-docs/dev/reference/api/pandas.Index.to_native_types.html\r\n\r\n> And I mainly wanted to give _some_ alternative (for the default arguments), can also leave it out if will only confuse.\r\n\r\nsince public, I think the release note should stay.",
        "createdAt" : "2020-09-17T19:09:46Z",
        "updatedAt" : "2020-09-17T19:09:46Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "9ef63883-c8eb-4685-892b-975a1000728d",
        "parentId" : "28aac35b-d51b-4963-9f21-c76e171afc43",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yeah, I only meant to remove the \" Use ``.astype(str)`` instead \" part. We regularly have methods that are deprecated without direct alternative if we don't think it is worth mentioning.",
        "createdAt" : "2020-09-17T19:12:07Z",
        "updatedAt" : "2020-09-17T19:12:08Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "738144978faac4149d3e5c9d5847574098506c2a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +213,217 @@- Date parser functions :func:`~pandas.io.date_converters.parse_date_time`, :func:`~pandas.io.date_converters.parse_date_fields`, :func:`~pandas.io.date_converters.parse_all_fields` and :func:`~pandas.io.date_converters.generic_parser` from ``pandas.io.date_converters`` are deprecated and will be removed in a future version; use :func:`to_datetime` instead (:issue:`35741`)\n- :meth:`DataFrame.lookup` is deprecated and will be removed in a future version, use :meth:`DataFrame.melt` and :meth:`DataFrame.loc` instead (:issue:`18682`)\n- The :meth:`Index.to_native_types` is deprecated. Use ``.astype(str)`` instead (:issue:`28867`)\n\n.. ---------------------------------------------------------------------------"
  },
  {
    "id" : "857298c7-1ffd-43bc-ab59-caea1a01763d",
    "prId" : 36897,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36897#pullrequestreview-522162765",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "181c9bbf-75e3-4b7c-b213-fd874f09f524",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "use ```:class:`DatetimeIndex` ```",
        "createdAt" : "2020-11-03T02:53:56Z",
        "updatedAt" : "2020-11-03T04:59:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "84822c6764a4361999468df4c648e7dd2358f7db",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +534,538 @@- Bug in :func:`join` returned a non deterministic level-order for the resulting :class:`MultiIndex` (:issue:`36910`)\n- Bug in :meth:`DataFrame.combine_first()` caused wrong alignment with dtype ``string`` and one level of ``MultiIndex`` containing only ``NA`` (:issue:`37591`)\n- Fixed regression in :func:`merge` on merging DatetimeIndex with empty DataFrame (:issue:`36895`)\n\nSparse"
  },
  {
    "id" : "2d3d441a-bb7e-47ee-920f-9d055bc96b02",
    "prId" : 36955,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36955#pullrequestreview-506118303",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78aa1826-8b56-4665-bb91-e1b9ed571e79",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "where does this happen? a test for this?",
        "createdAt" : "2020-10-10T17:36:44Z",
        "updatedAt" : "2020-11-25T16:46:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7e450046-c9b9-4913-8002-b0a3bf45921b",
        "parentId" : "78aa1826-8b56-4665-bb91-e1b9ed571e79",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "```python\r\nIn [3]: df = pd.DataFrame({\"A\": [1, 2]})\r\n\r\nIn [4]: np.add.outer(df, df)\r\nOut[4]:\r\narray([[[[2],\r\n         [3]]],\r\n\r\n\r\n       [[[3],\r\n         [4]]]])\r\n```\r\n\r\nThis matches a deprecation / removal we did for Series. Tested at https://github.com/pandas-dev/pandas/pull/36955/files#diff-f47ac75f060a28193618c0eb4ff98a4eR108",
        "createdAt" : "2020-10-10T18:41:41Z",
        "updatedAt" : "2020-11-25T16:46:44Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6b120a1ff07e6a2f22f91b34155c8816febd3ff",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +473,477 @@- Deprecated automatic alignment on comparison operations between :class:`DataFrame` and :class:`Series`, do ``frame, ser = frame.align(ser, axis=1, copy=False)`` before e.g. ``frame == ser`` (:issue:`28759`)\n- :meth:`Rolling.count` with ``min_periods=None`` will default to the size of the window in a future version (:issue:`31302`)\n- Using \"outer\" ufuncs on DataFrames to return 4d ndarray is now deprecated. Convert to an ndarray first (:issue:`23743`)\n- Deprecated slice-indexing on timezone-aware :class:`DatetimeIndex` with naive ``datetime`` objects, to match scalar indexing behavior (:issue:`36148`)\n- :meth:`Index.ravel` returning a ``np.ndarray`` is deprecated, in the future this will return a view on the same index (:issue:`19956`)"
  },
  {
    "id" : "a2a1a6aa-9827-4011-8a8c-4785765e2bf5",
    "prId" : 36955,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36955#pullrequestreview-529236543",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8db8ce00-bce6-49a2-b158-c43183b68487",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "(:issue:\\`28283\\`) (:issue:\\`37381\\`) -> (:issue:\\`28283\\`, :issue:\\`37381\\`) i think",
        "createdAt" : "2020-11-12T15:59:42Z",
        "updatedAt" : "2020-11-25T16:46:44Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "6b95b819-a892-4b06-9e4e-bdc207fb5663",
        "parentId" : "8db8ce00-bce6-49a2-b158-c43183b68487",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "woops, looked at wrong thing, thought this line was part of this PR.  never mind.",
        "createdAt" : "2020-11-12T16:00:19Z",
        "updatedAt" : "2020-11-25T16:46:44Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6b120a1ff07e6a2f22f91b34155c8816febd3ff",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +757,761 @@- Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` incorrectly casting from ``PeriodDtype`` to object dtype (:issue:`34871`)\n- Fixed bug in metadata propagation incorrectly copying DataFrame columns as metadata when the column name overlaps with the metadata name (:issue:`37037`)\n- Fixed metadata propagation in the :class:`Series.dt`, :class:`Series.str` accessors, :class:`DataFrame.duplicated`, :class:`DataFrame.stack`, :class:`DataFrame.unstack`, :class:`DataFrame.pivot`, :class:`DataFrame.append`, :class:`DataFrame.diff`, :class:`DataFrame.applymap` and :class:`DataFrame.update` methods (:issue:`28283`) (:issue:`37381`)\n- Fixed metadata propagation when selecting columns from a DataFrame with ``DataFrame.__getitem__`` (:issue:`28283`)\n- Bug in :meth:`Index.union` behaving differently depending on whether operand is a :class:`Index` or other list-like (:issue:`36384`)"
  }
]