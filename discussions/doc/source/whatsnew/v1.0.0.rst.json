[
  {
    "id" : "2d3cdb35-6198-45b8-ae42-e82e2d8fc65e",
    "prId" : 27242,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27242#pullrequestreview-267471051",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca4324e5-a049-41ca-8016-bccbd90a2bba",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the issue number here (or this PR number)",
        "createdAt" : "2019-07-27T14:41:03Z",
        "updatedAt" : "2019-10-14T21:35:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ff2d02cfe69f6fea3158e7636fb5bf89cfc9b89",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +129,133 @@^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- A :class:`MultiIndex` previously stored the level names as attributes of each of its\n  :attr:`MultiIndex.levels`. From Pandas 1.0, the names are only accessed through\n  :attr:`MultiIndex.names` (which was also possible previously). This is done in order to"
  },
  {
    "id" : "64ce0070-7823-483f-be68-e3e863ec194d",
    "prId" : 27242,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27242#pullrequestreview-301262806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5073ff5-6b20-480b-8c49-252b80520f0b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can u show the previous way in a code block and the new way in an ipython block ",
        "createdAt" : "2019-10-14T12:08:43Z",
        "updatedAt" : "2019-10-14T21:35:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ff2d02cfe69f6fea3158e7636fb5bf89cfc9b89",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +133,137 @@  :attr:`MultiIndex.names` (which was also possible previously). This is done in order to\n  make :attr:`MultiIndex.levels` more similar to :attr:`CategoricalIndex.categories` (:issue:`27242`:).\n\n*pandas 0.25.x*\n"
  },
  {
    "id" : "16405b86-815e-45bb-8342-b41e714b3edb",
    "prId" : 27538,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27538#pullrequestreview-281080518",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58c05b4f-dc2f-46b2-8e6b-f1d0b1067b9c",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "The whatsnew for v0.25.0 already states that we dropped pickle support prior to 0.20.3 so this isn't necessary, though I guess doesn't hurt to include",
        "createdAt" : "2019-08-26T18:33:47Z",
        "updatedAt" : "2019-09-17T18:07:20Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "27415ec7-a25a-446a-af25-2090b2bd6bb8",
        "parentId" : "58c05b4f-dc2f-46b2-8e6b-f1d0b1067b9c",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "IMO it is ok to include this, given that something won't work that previously did work...",
        "createdAt" : "2019-08-28T20:24:01Z",
        "updatedAt" : "2019-09-17T18:08:09Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "79663fb669cce436c6379c83c887755780b84770",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +100,104 @@- Removed the previously deprecated :meth:`ExtensionArray._formatting_values`. Use :attr:`ExtensionArray._formatter` instead. (:issue:`23601`)\n- Removed the previously deprecated ``IntervalIndex.from_intervals`` in favor of the :class:`IntervalIndex` constructor (:issue:`19263`)\n- Ability to read pickles containing :class:`Categorical` instances created with pre-0.16 version of pandas has been removed (:issue:`27538`)\n-\n"
  },
  {
    "id" : "13580f36-7b77-4c75-a60f-1f276743054f",
    "prId" : 27682,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27682#pullrequestreview-299098003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0adc824-c9df-4261-aa41-e0b9cd0734a1",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "These need to be added to `doc/source/reference/window.rst`.",
        "createdAt" : "2019-09-09T15:32:03Z",
        "updatedAt" : "2019-11-08T10:42:44Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "b658b4b1-0aff-4e62-9b20-4af616853191",
        "parentId" : "a0adc824-c9df-4261-aa41-e0b9cd0734a1",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "were these added?",
        "createdAt" : "2019-10-08T12:48:54Z",
        "updatedAt" : "2019-11-08T10:42:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "adba3377-c3f2-4f46-9e4e-6d5401c82c06",
        "parentId" : "a0adc824-c9df-4261-aa41-e0b9cd0734a1",
        "authorId" : "fd6a3bb0-1e01-4fbd-9d3f-28cd7cd4505e",
        "body" : "I have added std and var [here](https://github.com/pandas-dev/pandas/pull/27682/files#diff-8c6a93a870d3534c506b9c1a222c879aR38). Is there anything else?",
        "createdAt" : "2019-10-08T23:08:32Z",
        "updatedAt" : "2019-11-08T10:42:44Z",
        "lastEditedBy" : "fd6a3bb0-1e01-4fbd-9d3f-28cd7cd4505e",
        "tags" : [
        ]
      }
    ],
    "commit" : "c06f2b6c81e8682159b1a98fbd33271ca0dce28b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +111,115 @@- :meth:`DataFrame.to_json` now accepts an ``indent`` integer argument to enable pretty printing of JSON output (:issue:`12004`)\n- :meth:`read_stata` can read Stata 119 dta files. (:issue:`28250`)\n- Implemented :meth:`pandas.core.window.Window.var` and :meth:`pandas.core.window.Window.std` functions (:issue:`26597`)\n- Added ``encoding`` argument to :meth:`DataFrame.to_string` for non-ascii text (:issue:`28766`)\n- Added ``encoding`` argument to :func:`DataFrame.to_html` for non-ascii text (:issue:`28663`)"
  },
  {
    "id" : "bc21e1ff-8d1d-49db-a045-918673890643",
    "prId" : 27929,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27929#pullrequestreview-325105800",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83a590bb-19e8-44fa-9149-62ce47d5debe",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "```suggestion\r\n:meth:`Categorical.min` no longer return ``np.nan`` by default (to honor the ``skipna=True`` default) (:issue:`25303`)\r\n```",
        "createdAt" : "2019-12-02T09:30:14Z",
        "updatedAt" : "2019-12-02T09:38:06Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "260201cf5bc2419a229222f2258a4bb6d31b988c",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +265,269 @@\nWhen :class:`Categorical` contains ``np.nan``,\n:meth:`Categorical.min` no longer return ``np.nan`` by default (skipna=True) (:issue:`25303`)\n\n*pandas 0.25.x*"
  },
  {
    "id" : "d3023363-b631-4628-b56e-98ae72f1c9c4",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-285627865",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac34f9c5-df6f-4015-aaaf-c9ac22574383",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Think this is a simple mistake in diff",
        "createdAt" : "2019-09-09T16:24:02Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +102,106 @@- :meth:`DataFrame.to_string` added the ``max_colwidth`` parameter to control when wide columns are truncated (:issue:`9784`)\n- :meth:`MultiIndex.from_product` infers level names from inputs if not explicitly provided (:issue:`27292`)\n- :meth:`DataFrame.to_latex` now accepts ``caption`` and ``label`` arguments (:issue:`25436`)\n- The :ref:`integer dtype <integer_na>` with support for missing values can now be converted to\n  ``pyarrow`` (>= 0.15.0), which means that it is supported in writing to the Parquet file format"
  },
  {
    "id" : "47fa88ff-ad42-4ad1-8565-de39c881b295",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-290215440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e953c4d9-a8d0-4812-9aa3-6df01bfe5124",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Mark as experimental?",
        "createdAt" : "2019-09-18T20:34:18Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "27e37805-a0e6-4f76-8387-95dfd5dccb36",
        "parentId" : "e953c4d9-a8d0-4812-9aa3-6df01bfe5124",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Probably should.",
        "createdAt" : "2019-09-18T21:34:42Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +53,57 @@.. _whatsnew_100.string:\n\nDedicated string data type\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n"
  },
  {
    "id" : "23f0c742-e993-4f7f-9a02-09aa43428237",
    "prId" : 28018,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28018#pullrequestreview-296182341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c18faefa-e74e-4e6c-8115-774b1288cc83",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this note is not really needed, but ok",
        "createdAt" : "2019-10-02T11:51:00Z",
        "updatedAt" : "2019-10-04T17:48:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd08e1668818a416a73c7dfb3d084659038c8ab9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +177,181 @@- Bug in :meth:`Categorical.astype` where ``NaN`` values were handled incorrectly when casting to int (:issue:`28406`)\n- :meth:`Categorical.searchsorted` and :meth:`CategoricalIndex.searchsorted` now work on unordered categoricals also (:issue:`21667`)\n- Added test to assert roundtripping to parquet with :func:`DataFrame.to_parquet` or :func:`read_parquet` will preserve Categorical dtypes for string types (:issue:`27955`)\n-\n"
  },
  {
    "id" : "7d5e335b-ad9d-44aa-bb2d-31dcd7684c6f",
    "prId" : 28215,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28215#pullrequestreview-326888071",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c3b3086-ccc6-4461-ab30-7ef755210274",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "is pd.eval affected?",
        "createdAt" : "2019-12-03T23:51:11Z",
        "updatedAt" : "2020-01-04T16:42:51Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "3e865890-275c-4a20-b6da-a0edb695b537",
        "parentId" : "1c3b3086-ccc6-4461-ab30-7ef755210274",
        "authorId" : "d4b4f9ca-b436-4124-a7fb-909146d22e2c",
        "body" : "No, DataFrame.eval makes use of pd.eval, but that is downstream in de code of the changes made in this PR. pd.eval expects a query and some name resolvers. This PR interprets the backtick quotes and replaces them with Python valid identifiers in addition to updating the name resolvers, before sending them downstream and then eventually to pd.eval. But pd.eval is not affected by this. ",
        "createdAt" : "2019-12-04T14:31:16Z",
        "updatedAt" : "2020-01-04T16:42:51Z",
        "lastEditedBy" : "d4b4f9ca-b436-4124-a7fb-909146d22e2c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fc1bdd57544fc7241ae73dd2832eb958747efc9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1017,1021 @@- :meth:`Series.append` will no longer raise a ``TypeError`` when passed a tuple of ``Series`` (:issue:`28410`)\n- Fix corrupted error message when calling ``pandas.libs._json.encode()`` on a 0d array (:issue:`18878`)\n- Backtick quoting in :meth:`DataFrame.query` and :meth:`DataFrame.eval` can now also be used to use invalid identifiers like names that start with a digit, are python keywords, or are using single character operators. (:issue:`27017`)\n- Bug in ``pd.core.util.hashing.hash_pandas_object`` where arrays containing tuples were incorrectly treated as non-hashable (:issue:`28969`)\n- Bug in :meth:`DataFrame.append` that raised ``IndexError`` when appending with empty list (:issue:`28769`)"
  },
  {
    "id" : "a5837edb-b652-49e0-8442-f0415c3a2f2b",
    "prId" : 28257,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28257#pullrequestreview-286341836",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae8128aa-b36d-4ef8-ac9c-8fc005209cab",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is a general patch on .union?",
        "createdAt" : "2019-09-10T12:25:13Z",
        "updatedAt" : "2019-10-11T09:47:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7b6a5192-f528-4e87-8c67-b38fcdd4f240",
        "parentId" : "ae8128aa-b36d-4ef8-ac9c-8fc005209cab",
        "authorId" : "1eae5532-0beb-481e-811f-f6b3beccd04b",
        "body" : "Yes.",
        "createdAt" : "2019-09-10T18:13:39Z",
        "updatedAt" : "2019-10-11T09:47:13Z",
        "lastEditedBy" : "1eae5532-0beb-481e-811f-f6b3beccd04b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1d2b66abc18a835c073932a91ef1783c8602814",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +289,293 @@- Fix assignment of column via `.loc` with numpy non-ns datetime type (:issue:`27395`)\n- Bug in :meth:`Float64Index.astype` where ``np.inf`` was not handled properly when casting to an integer dtype (:issue:`28475`)\n- :meth:`Index.union` could fail when the left contained duplicates (:issue:`28257`)\n- :meth:`Index.get_indexer_non_unique` could fail with `TypeError` in some cases, such as when searching for ints in a string index (:issue:`28257`)\n-"
  },
  {
    "id" : "91bccd8d-b531-48e1-bb73-084ba3f055fd",
    "prId" : 28371,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28371#pullrequestreview-340354553",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f6ba733-2cc7-4f1e-b52c-48d31dd7ed3d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "should this be 0.15?",
        "createdAt" : "2020-01-09T03:18:08Z",
        "updatedAt" : "2020-01-09T03:22:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5f1ccdca-cdca-4d8f-a429-6eda10557d26",
        "parentId" : "8f6ba733-2cc7-4f1e-b52c-48d31dd7ed3d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "No, the pandas -> arrow conversion protocol was already included in 0.15, but the other way (for a full roundtrip) only landed after 0.15. It was just decided that the next arrow release will be 0.16 and not 1.0, so therefore changed the text here.",
        "createdAt" : "2020-01-09T08:32:16Z",
        "updatedAt" : "2020-01-09T08:32:17Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3037494cf87272011d8ba78d8220029d1a29ad8",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +207,211 @@- Roundtripping DataFrames with nullable integer, string and period data types to parquet\n  (:meth:`~DataFrame.to_parquet` / :func:`read_parquet`) using the `'pyarrow'` engine\n  now preserve those data types with pyarrow >= 0.16.0 (:issue:`20612`, :issue:`28371`).\n- The ``partition_cols`` argument in :meth:`DataFrame.to_parquet` now accepts a string (:issue:`27117`)\n- :func:`pandas.read_json` now parses ``NaN``, ``Infinity`` and ``-Infinity`` (:issue:`12213`)"
  },
  {
    "id" : "538276b0-2c5b-423b-9c34-0dbc977ae1a5",
    "prId" : 28417,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28417#pullrequestreview-287575569",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e6ed40b-52f7-4511-8d17-fdcde9e341cc",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Is there a (small) behavior change to `MultiIndex.from_arrays`, in that `from_arrays(..., names=None)` will disable inference where it would have previously inferred them?\r\n\r\nI think that's OK to do, but would be good to note somewhere.",
        "createdAt" : "2019-09-12T16:58:15Z",
        "updatedAt" : "2019-09-13T21:47:09Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "57ecc0cc-6c61-4058-85dc-254e3732a85a",
        "parentId" : "4e6ed40b-52f7-4511-8d17-fdcde9e341cc",
        "authorId" : "1105fb32-ff2a-47fa-a653-04016510d06d",
        "body" : "Yes, I made that tweak based on [this](https://github.com/pandas-dev/pandas/pull/27895#issuecomment-521642268) comment.  Should that be documented under \"Other API Changes\"?",
        "createdAt" : "2019-09-12T17:06:28Z",
        "updatedAt" : "2019-09-13T21:47:09Z",
        "lastEditedBy" : "1105fb32-ff2a-47fa-a653-04016510d06d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d29a9ab7fed96970daa560d4f0c47fb5b70bf55",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +28,32 @@^^^^^^^^^^^^^^^^^^\n\n- :meth:`MultiIndex.from_product` infers level names from inputs if not explicitly provided (:issue:`27292`)\n- :meth:`DataFrame.to_latex` now accepts ``caption`` and ``label`` arguments (:issue:`25436`)\n- The :ref:`integer dtype <integer_na>` with support for missing values can now be converted to"
  },
  {
    "id" : "52213201-0f5b-4e32-9cae-42c6cbaf393f",
    "prId" : 28428,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28428#pullrequestreview-325222769",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d21bc1b-b430-4827-8eef-c441ae4fd57f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is now a duplicated whatsnew? (2nd item), can you remove",
        "createdAt" : "2019-12-02T12:46:32Z",
        "updatedAt" : "2019-12-03T14:45:01Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "15089b6f-fa0e-4410-ad8e-19e4a59351cd",
        "parentId" : "9d21bc1b-b430-4827-8eef-c441ae4fd57f",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "oops, good catch!! I forgot to remove it in the other place. ",
        "createdAt" : "2019-12-02T13:05:40Z",
        "updatedAt" : "2019-12-03T14:45:01Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8eaeceeb02a2d7d7f780887a32e3bea1a922a17b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +754,758 @@- Bug in :meth:`DataFrame.groupby` losing column name information when grouping by a categorical column (:issue:`28787`)\n- Remove error raised due to duplicated input functions in named aggregation in :meth:`DataFrame.groupby` and :meth:`Series.groupby`. Previously error will be raised if the same function is applied on the same column and now it is allowed if new assigned names are different. (:issue:`28426`)\n- :meth:`SeriesGroupBy.value_counts` will be able to handle the case even when the :class:`Grouper` makes empty groups (:issue: 28479)\n- Bug in :meth:`DataFrameGroupBy.rolling().quantile()` ignoring ``interpolation`` keyword argument (:issue:`28779`)\n- Bug in :meth:`DataFrame.groupby` where ``any``, ``all``, ``nunique`` and transform functions would incorrectly handle duplicate column labels (:issue:`21668`)"
  },
  {
    "id" : "8ea4344a-e5dd-4d9a-acf2-4998843b2b84",
    "prId" : 28601,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28601#pullrequestreview-293680710",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a42f0e76-5418-46ca-8e63-9909c01c4c0f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "entries -> dtypes (can do in later PR)",
        "createdAt" : "2019-09-26T12:24:54Z",
        "updatedAt" : "2019-09-26T12:25:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "48978cdc5bc1d370eaff9b30411509b1333a8441",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +200,204 @@^^^^^^^\n- Bug in :meth:`DataFrame.quantile` with zero-column :class:`DataFrame` incorrectly raising (:issue:`23925`)\n- :class:`DataFrame` inequality comparisons with object-dtype and ``complex`` entries failing to raise ``TypeError`` like their :class:`Series` counterparts (:issue:`28079`)\n-\n"
  },
  {
    "id" : "e8f8c308-b317-444e-9fc5-4963bd628f70",
    "prId" : 28677,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28677#pullrequestreview-298727904",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4ea2e8b-cba4-488a-8a64-36e48ab27756",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "looks like you picked up some other issue what's news here, can you edit to only add yours",
        "createdAt" : "2019-10-08T12:35:00Z",
        "updatedAt" : "2019-10-09T17:53:31Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c02d527793fb8211721063e24b02e1b47b36ab8",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +222,226 @@- Bug in :meth:`Categorical.astype` not allowing for casting to extension dtypes (:issue:`28668`)\n- Bug where :func:`merge` was unable to join on categorical and extension dtype columns (:issue:`28668`)\n- :meth:`Categorical.searchsorted` and :meth:`CategoricalIndex.searchsorted` now work on unordered categoricals also (:issue:`21667`)\n- Added test to assert roundtripping to parquet with :func:`DataFrame.to_parquet` or :func:`read_parquet` will preserve Categorical dtypes for string types (:issue:`27955`)\n- Changed the error message in :meth:`Categorical.remove_categories` to always show the invalid removals as a set (:issue:`28669`)"
  },
  {
    "id" : "c84bd024-e67f-4fa1-8179-de8dff8b5a72",
    "prId" : 28762,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28762#pullrequestreview-297875174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be0e81c5-51df-4978-8578-d50ea26f1f94",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add *another* note about the merge issue (which was the OP); IIRC its the same issue number. otherwise lgtm, ping on green.",
        "createdAt" : "2019-10-07T00:14:23Z",
        "updatedAt" : "2019-10-07T00:37:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "bcbc4050-c063-484c-aed2-4ca018b92e92",
        "parentId" : "be0e81c5-51df-4978-8578-d50ea26f1f94",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "@jreback Included a note for the merge issue, let me know if it looks good and thanks for the review",
        "createdAt" : "2019-10-07T01:23:26Z",
        "updatedAt" : "2019-10-07T01:23:26Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      }
    ],
    "commit" : "261854062c4e5a3cc4cbd6aa64211db7241e57e6",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +218,222 @@- Added test to assert the :func:`fillna` raises the correct ValueError message when the value isn't a value from categories (:issue:`13628`)\n- Bug in :meth:`Categorical.astype` where ``NaN`` values were handled incorrectly when casting to int (:issue:`28406`)\n- Bug in :meth:`Categorical.astype` not allowing for casting to extension dtypes (:issue:`28668`)\n- Bug where :func:`merge` was unable to join on categorical and extension dtype columns (:issue:`28668`)\n- :meth:`Categorical.searchsorted` and :meth:`CategoricalIndex.searchsorted` now work on unordered categoricals also (:issue:`21667`)"
  },
  {
    "id" : "645ff744-2538-4db0-9ae9-b426a3df6142",
    "prId" : 28876,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28876#pullrequestreview-337593856",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cda8bc71-a6e6-49c6-8f32-0780b89f5241",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a title and underline here (like other sub-sections).",
        "createdAt" : "2020-01-02T02:42:02Z",
        "updatedAt" : "2020-01-02T20:42:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3bbc8ed9-58bb-466c-88fb-e7cce1c3e19a",
        "parentId" : "cda8bc71-a6e6-49c6-8f32-0780b89f5241",
        "authorId" : "28b60f4e-1584-4e58-905f-f41677604804",
        "body" : "Added an underlined title for the new feature, thanks for the feedback",
        "createdAt" : "2020-01-02T10:07:48Z",
        "updatedAt" : "2020-01-02T20:42:29Z",
        "lastEditedBy" : "28b60f4e-1584-4e58-905f-f41677604804",
        "tags" : [
        ]
      }
    ],
    "commit" : "4547ed6de28cdbc6ce939af146962be1b777d0a2",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +300,304 @@^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- :meth:`Dataframe.info` now shows line numbers for the columns summary (:issue:`17304`)\n\n*pandas 0.25.x*"
  }
]