[
  {
    "id" : "2d3cdb35-6198-45b8-ae42-e82e2d8fc65e",
    "prId" : 27242,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27242#pullrequestreview-267471051",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca4324e5-a049-41ca-8016-bccbd90a2bba",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the issue number here (or this PR number)",
        "createdAt" : "2019-07-27T14:41:03Z",
        "updatedAt" : "2019-10-14T21:35:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ff2d02cfe69f6fea3158e7636fb5bf89cfc9b89",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +129,133 @@^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- A :class:`MultiIndex` previously stored the level names as attributes of each of its\n  :attr:`MultiIndex.levels`. From Pandas 1.0, the names are only accessed through\n  :attr:`MultiIndex.names` (which was also possible previously). This is done in order to"
  },
  {
    "id" : "64ce0070-7823-483f-be68-e3e863ec194d",
    "prId" : 27242,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27242#pullrequestreview-301262806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5073ff5-6b20-480b-8c49-252b80520f0b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can u show the previous way in a code block and the new way in an ipython block ",
        "createdAt" : "2019-10-14T12:08:43Z",
        "updatedAt" : "2019-10-14T21:35:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ff2d02cfe69f6fea3158e7636fb5bf89cfc9b89",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +133,137 @@  :attr:`MultiIndex.names` (which was also possible previously). This is done in order to\n  make :attr:`MultiIndex.levels` more similar to :attr:`CategoricalIndex.categories` (:issue:`27242`:).\n\n*pandas 0.25.x*\n"
  },
  {
    "id" : "16405b86-815e-45bb-8342-b41e714b3edb",
    "prId" : 27538,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27538#pullrequestreview-281080518",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58c05b4f-dc2f-46b2-8e6b-f1d0b1067b9c",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "The whatsnew for v0.25.0 already states that we dropped pickle support prior to 0.20.3 so this isn't necessary, though I guess doesn't hurt to include",
        "createdAt" : "2019-08-26T18:33:47Z",
        "updatedAt" : "2019-09-17T18:07:20Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "27415ec7-a25a-446a-af25-2090b2bd6bb8",
        "parentId" : "58c05b4f-dc2f-46b2-8e6b-f1d0b1067b9c",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "IMO it is ok to include this, given that something won't work that previously did work...",
        "createdAt" : "2019-08-28T20:24:01Z",
        "updatedAt" : "2019-09-17T18:08:09Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "79663fb669cce436c6379c83c887755780b84770",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +100,104 @@- Removed the previously deprecated :meth:`ExtensionArray._formatting_values`. Use :attr:`ExtensionArray._formatter` instead. (:issue:`23601`)\n- Removed the previously deprecated ``IntervalIndex.from_intervals`` in favor of the :class:`IntervalIndex` constructor (:issue:`19263`)\n- Ability to read pickles containing :class:`Categorical` instances created with pre-0.16 version of pandas has been removed (:issue:`27538`)\n-\n"
  },
  {
    "id" : "13580f36-7b77-4c75-a60f-1f276743054f",
    "prId" : 27682,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27682#pullrequestreview-299098003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0adc824-c9df-4261-aa41-e0b9cd0734a1",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "These need to be added to `doc/source/reference/window.rst`.",
        "createdAt" : "2019-09-09T15:32:03Z",
        "updatedAt" : "2019-11-08T10:42:44Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "b658b4b1-0aff-4e62-9b20-4af616853191",
        "parentId" : "a0adc824-c9df-4261-aa41-e0b9cd0734a1",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "were these added?",
        "createdAt" : "2019-10-08T12:48:54Z",
        "updatedAt" : "2019-11-08T10:42:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "adba3377-c3f2-4f46-9e4e-6d5401c82c06",
        "parentId" : "a0adc824-c9df-4261-aa41-e0b9cd0734a1",
        "authorId" : "fd6a3bb0-1e01-4fbd-9d3f-28cd7cd4505e",
        "body" : "I have added std and var [here](https://github.com/pandas-dev/pandas/pull/27682/files#diff-8c6a93a870d3534c506b9c1a222c879aR38). Is there anything else?",
        "createdAt" : "2019-10-08T23:08:32Z",
        "updatedAt" : "2019-11-08T10:42:44Z",
        "lastEditedBy" : "fd6a3bb0-1e01-4fbd-9d3f-28cd7cd4505e",
        "tags" : [
        ]
      }
    ],
    "commit" : "c06f2b6c81e8682159b1a98fbd33271ca0dce28b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +111,115 @@- :meth:`DataFrame.to_json` now accepts an ``indent`` integer argument to enable pretty printing of JSON output (:issue:`12004`)\n- :meth:`read_stata` can read Stata 119 dta files. (:issue:`28250`)\n- Implemented :meth:`pandas.core.window.Window.var` and :meth:`pandas.core.window.Window.std` functions (:issue:`26597`)\n- Added ``encoding`` argument to :meth:`DataFrame.to_string` for non-ascii text (:issue:`28766`)\n- Added ``encoding`` argument to :func:`DataFrame.to_html` for non-ascii text (:issue:`28663`)"
  },
  {
    "id" : "bc21e1ff-8d1d-49db-a045-918673890643",
    "prId" : 27929,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27929#pullrequestreview-325105800",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83a590bb-19e8-44fa-9149-62ce47d5debe",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "```suggestion\r\n:meth:`Categorical.min` no longer return ``np.nan`` by default (to honor the ``skipna=True`` default) (:issue:`25303`)\r\n```",
        "createdAt" : "2019-12-02T09:30:14Z",
        "updatedAt" : "2019-12-02T09:38:06Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "260201cf5bc2419a229222f2258a4bb6d31b988c",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +265,269 @@\nWhen :class:`Categorical` contains ``np.nan``,\n:meth:`Categorical.min` no longer return ``np.nan`` by default (skipna=True) (:issue:`25303`)\n\n*pandas 0.25.x*"
  },
  {
    "id" : "d3023363-b631-4628-b56e-98ae72f1c9c4",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-285627865",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac34f9c5-df6f-4015-aaaf-c9ac22574383",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Think this is a simple mistake in diff",
        "createdAt" : "2019-09-09T16:24:02Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +102,106 @@- :meth:`DataFrame.to_string` added the ``max_colwidth`` parameter to control when wide columns are truncated (:issue:`9784`)\n- :meth:`MultiIndex.from_product` infers level names from inputs if not explicitly provided (:issue:`27292`)\n- :meth:`DataFrame.to_latex` now accepts ``caption`` and ``label`` arguments (:issue:`25436`)\n- The :ref:`integer dtype <integer_na>` with support for missing values can now be converted to\n  ``pyarrow`` (>= 0.15.0), which means that it is supported in writing to the Parquet file format"
  },
  {
    "id" : "47fa88ff-ad42-4ad1-8565-de39c881b295",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-290215440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e953c4d9-a8d0-4812-9aa3-6df01bfe5124",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Mark as experimental?",
        "createdAt" : "2019-09-18T20:34:18Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "27e37805-a0e6-4f76-8387-95dfd5dccb36",
        "parentId" : "e953c4d9-a8d0-4812-9aa3-6df01bfe5124",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Probably should.",
        "createdAt" : "2019-09-18T21:34:42Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +53,57 @@.. _whatsnew_100.string:\n\nDedicated string data type\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n"
  },
  {
    "id" : "23f0c742-e993-4f7f-9a02-09aa43428237",
    "prId" : 28018,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28018#pullrequestreview-296182341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c18faefa-e74e-4e6c-8115-774b1288cc83",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this note is not really needed, but ok",
        "createdAt" : "2019-10-02T11:51:00Z",
        "updatedAt" : "2019-10-04T17:48:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd08e1668818a416a73c7dfb3d084659038c8ab9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +177,181 @@- Bug in :meth:`Categorical.astype` where ``NaN`` values were handled incorrectly when casting to int (:issue:`28406`)\n- :meth:`Categorical.searchsorted` and :meth:`CategoricalIndex.searchsorted` now work on unordered categoricals also (:issue:`21667`)\n- Added test to assert roundtripping to parquet with :func:`DataFrame.to_parquet` or :func:`read_parquet` will preserve Categorical dtypes for string types (:issue:`27955`)\n-\n"
  },
  {
    "id" : "7d5e335b-ad9d-44aa-bb2d-31dcd7684c6f",
    "prId" : 28215,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28215#pullrequestreview-326888071",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c3b3086-ccc6-4461-ab30-7ef755210274",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "is pd.eval affected?",
        "createdAt" : "2019-12-03T23:51:11Z",
        "updatedAt" : "2020-01-04T16:42:51Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "3e865890-275c-4a20-b6da-a0edb695b537",
        "parentId" : "1c3b3086-ccc6-4461-ab30-7ef755210274",
        "authorId" : "d4b4f9ca-b436-4124-a7fb-909146d22e2c",
        "body" : "No, DataFrame.eval makes use of pd.eval, but that is downstream in de code of the changes made in this PR. pd.eval expects a query and some name resolvers. This PR interprets the backtick quotes and replaces them with Python valid identifiers in addition to updating the name resolvers, before sending them downstream and then eventually to pd.eval. But pd.eval is not affected by this. ",
        "createdAt" : "2019-12-04T14:31:16Z",
        "updatedAt" : "2020-01-04T16:42:51Z",
        "lastEditedBy" : "d4b4f9ca-b436-4124-a7fb-909146d22e2c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fc1bdd57544fc7241ae73dd2832eb958747efc9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1017,1021 @@- :meth:`Series.append` will no longer raise a ``TypeError`` when passed a tuple of ``Series`` (:issue:`28410`)\n- Fix corrupted error message when calling ``pandas.libs._json.encode()`` on a 0d array (:issue:`18878`)\n- Backtick quoting in :meth:`DataFrame.query` and :meth:`DataFrame.eval` can now also be used to use invalid identifiers like names that start with a digit, are python keywords, or are using single character operators. (:issue:`27017`)\n- Bug in ``pd.core.util.hashing.hash_pandas_object`` where arrays containing tuples were incorrectly treated as non-hashable (:issue:`28969`)\n- Bug in :meth:`DataFrame.append` that raised ``IndexError`` when appending with empty list (:issue:`28769`)"
  },
  {
    "id" : "a5837edb-b652-49e0-8442-f0415c3a2f2b",
    "prId" : 28257,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28257#pullrequestreview-286341836",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae8128aa-b36d-4ef8-ac9c-8fc005209cab",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is a general patch on .union?",
        "createdAt" : "2019-09-10T12:25:13Z",
        "updatedAt" : "2019-10-11T09:47:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7b6a5192-f528-4e87-8c67-b38fcdd4f240",
        "parentId" : "ae8128aa-b36d-4ef8-ac9c-8fc005209cab",
        "authorId" : "1eae5532-0beb-481e-811f-f6b3beccd04b",
        "body" : "Yes.",
        "createdAt" : "2019-09-10T18:13:39Z",
        "updatedAt" : "2019-10-11T09:47:13Z",
        "lastEditedBy" : "1eae5532-0beb-481e-811f-f6b3beccd04b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1d2b66abc18a835c073932a91ef1783c8602814",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +289,293 @@- Fix assignment of column via `.loc` with numpy non-ns datetime type (:issue:`27395`)\n- Bug in :meth:`Float64Index.astype` where ``np.inf`` was not handled properly when casting to an integer dtype (:issue:`28475`)\n- :meth:`Index.union` could fail when the left contained duplicates (:issue:`28257`)\n- :meth:`Index.get_indexer_non_unique` could fail with `TypeError` in some cases, such as when searching for ints in a string index (:issue:`28257`)\n-"
  },
  {
    "id" : "91bccd8d-b531-48e1-bb73-084ba3f055fd",
    "prId" : 28371,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28371#pullrequestreview-340354553",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f6ba733-2cc7-4f1e-b52c-48d31dd7ed3d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "should this be 0.15?",
        "createdAt" : "2020-01-09T03:18:08Z",
        "updatedAt" : "2020-01-09T03:22:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5f1ccdca-cdca-4d8f-a429-6eda10557d26",
        "parentId" : "8f6ba733-2cc7-4f1e-b52c-48d31dd7ed3d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "No, the pandas -> arrow conversion protocol was already included in 0.15, but the other way (for a full roundtrip) only landed after 0.15. It was just decided that the next arrow release will be 0.16 and not 1.0, so therefore changed the text here.",
        "createdAt" : "2020-01-09T08:32:16Z",
        "updatedAt" : "2020-01-09T08:32:17Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3037494cf87272011d8ba78d8220029d1a29ad8",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +207,211 @@- Roundtripping DataFrames with nullable integer, string and period data types to parquet\n  (:meth:`~DataFrame.to_parquet` / :func:`read_parquet`) using the `'pyarrow'` engine\n  now preserve those data types with pyarrow >= 0.16.0 (:issue:`20612`, :issue:`28371`).\n- The ``partition_cols`` argument in :meth:`DataFrame.to_parquet` now accepts a string (:issue:`27117`)\n- :func:`pandas.read_json` now parses ``NaN``, ``Infinity`` and ``-Infinity`` (:issue:`12213`)"
  },
  {
    "id" : "538276b0-2c5b-423b-9c34-0dbc977ae1a5",
    "prId" : 28417,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28417#pullrequestreview-287575569",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e6ed40b-52f7-4511-8d17-fdcde9e341cc",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Is there a (small) behavior change to `MultiIndex.from_arrays`, in that `from_arrays(..., names=None)` will disable inference where it would have previously inferred them?\r\n\r\nI think that's OK to do, but would be good to note somewhere.",
        "createdAt" : "2019-09-12T16:58:15Z",
        "updatedAt" : "2019-09-13T21:47:09Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "57ecc0cc-6c61-4058-85dc-254e3732a85a",
        "parentId" : "4e6ed40b-52f7-4511-8d17-fdcde9e341cc",
        "authorId" : "1105fb32-ff2a-47fa-a653-04016510d06d",
        "body" : "Yes, I made that tweak based on [this](https://github.com/pandas-dev/pandas/pull/27895#issuecomment-521642268) comment.  Should that be documented under \"Other API Changes\"?",
        "createdAt" : "2019-09-12T17:06:28Z",
        "updatedAt" : "2019-09-13T21:47:09Z",
        "lastEditedBy" : "1105fb32-ff2a-47fa-a653-04016510d06d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d29a9ab7fed96970daa560d4f0c47fb5b70bf55",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +28,32 @@^^^^^^^^^^^^^^^^^^\n\n- :meth:`MultiIndex.from_product` infers level names from inputs if not explicitly provided (:issue:`27292`)\n- :meth:`DataFrame.to_latex` now accepts ``caption`` and ``label`` arguments (:issue:`25436`)\n- The :ref:`integer dtype <integer_na>` with support for missing values can now be converted to"
  },
  {
    "id" : "52213201-0f5b-4e32-9cae-42c6cbaf393f",
    "prId" : 28428,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28428#pullrequestreview-325222769",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d21bc1b-b430-4827-8eef-c441ae4fd57f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is now a duplicated whatsnew? (2nd item), can you remove",
        "createdAt" : "2019-12-02T12:46:32Z",
        "updatedAt" : "2019-12-03T14:45:01Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "15089b6f-fa0e-4410-ad8e-19e4a59351cd",
        "parentId" : "9d21bc1b-b430-4827-8eef-c441ae4fd57f",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "oops, good catch!! I forgot to remove it in the other place. ",
        "createdAt" : "2019-12-02T13:05:40Z",
        "updatedAt" : "2019-12-03T14:45:01Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8eaeceeb02a2d7d7f780887a32e3bea1a922a17b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +754,758 @@- Bug in :meth:`DataFrame.groupby` losing column name information when grouping by a categorical column (:issue:`28787`)\n- Remove error raised due to duplicated input functions in named aggregation in :meth:`DataFrame.groupby` and :meth:`Series.groupby`. Previously error will be raised if the same function is applied on the same column and now it is allowed if new assigned names are different. (:issue:`28426`)\n- :meth:`SeriesGroupBy.value_counts` will be able to handle the case even when the :class:`Grouper` makes empty groups (:issue: 28479)\n- Bug in :meth:`DataFrameGroupBy.rolling().quantile()` ignoring ``interpolation`` keyword argument (:issue:`28779`)\n- Bug in :meth:`DataFrame.groupby` where ``any``, ``all``, ``nunique`` and transform functions would incorrectly handle duplicate column labels (:issue:`21668`)"
  },
  {
    "id" : "8ea4344a-e5dd-4d9a-acf2-4998843b2b84",
    "prId" : 28601,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28601#pullrequestreview-293680710",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a42f0e76-5418-46ca-8e63-9909c01c4c0f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "entries -> dtypes (can do in later PR)",
        "createdAt" : "2019-09-26T12:24:54Z",
        "updatedAt" : "2019-09-26T12:25:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "48978cdc5bc1d370eaff9b30411509b1333a8441",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +200,204 @@^^^^^^^\n- Bug in :meth:`DataFrame.quantile` with zero-column :class:`DataFrame` incorrectly raising (:issue:`23925`)\n- :class:`DataFrame` inequality comparisons with object-dtype and ``complex`` entries failing to raise ``TypeError`` like their :class:`Series` counterparts (:issue:`28079`)\n-\n"
  },
  {
    "id" : "e8f8c308-b317-444e-9fc5-4963bd628f70",
    "prId" : 28677,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28677#pullrequestreview-298727904",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4ea2e8b-cba4-488a-8a64-36e48ab27756",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "looks like you picked up some other issue what's news here, can you edit to only add yours",
        "createdAt" : "2019-10-08T12:35:00Z",
        "updatedAt" : "2019-10-09T17:53:31Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c02d527793fb8211721063e24b02e1b47b36ab8",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +222,226 @@- Bug in :meth:`Categorical.astype` not allowing for casting to extension dtypes (:issue:`28668`)\n- Bug where :func:`merge` was unable to join on categorical and extension dtype columns (:issue:`28668`)\n- :meth:`Categorical.searchsorted` and :meth:`CategoricalIndex.searchsorted` now work on unordered categoricals also (:issue:`21667`)\n- Added test to assert roundtripping to parquet with :func:`DataFrame.to_parquet` or :func:`read_parquet` will preserve Categorical dtypes for string types (:issue:`27955`)\n- Changed the error message in :meth:`Categorical.remove_categories` to always show the invalid removals as a set (:issue:`28669`)"
  },
  {
    "id" : "c84bd024-e67f-4fa1-8179-de8dff8b5a72",
    "prId" : 28762,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28762#pullrequestreview-297875174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be0e81c5-51df-4978-8578-d50ea26f1f94",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add *another* note about the merge issue (which was the OP); IIRC its the same issue number. otherwise lgtm, ping on green.",
        "createdAt" : "2019-10-07T00:14:23Z",
        "updatedAt" : "2019-10-07T00:37:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "bcbc4050-c063-484c-aed2-4ca018b92e92",
        "parentId" : "be0e81c5-51df-4978-8578-d50ea26f1f94",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "@jreback Included a note for the merge issue, let me know if it looks good and thanks for the review",
        "createdAt" : "2019-10-07T01:23:26Z",
        "updatedAt" : "2019-10-07T01:23:26Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      }
    ],
    "commit" : "261854062c4e5a3cc4cbd6aa64211db7241e57e6",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +218,222 @@- Added test to assert the :func:`fillna` raises the correct ValueError message when the value isn't a value from categories (:issue:`13628`)\n- Bug in :meth:`Categorical.astype` where ``NaN`` values were handled incorrectly when casting to int (:issue:`28406`)\n- Bug in :meth:`Categorical.astype` not allowing for casting to extension dtypes (:issue:`28668`)\n- Bug where :func:`merge` was unable to join on categorical and extension dtype columns (:issue:`28668`)\n- :meth:`Categorical.searchsorted` and :meth:`CategoricalIndex.searchsorted` now work on unordered categoricals also (:issue:`21667`)"
  },
  {
    "id" : "645ff744-2538-4db0-9ae9-b426a3df6142",
    "prId" : 28876,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28876#pullrequestreview-337593856",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cda8bc71-a6e6-49c6-8f32-0780b89f5241",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a title and underline here (like other sub-sections).",
        "createdAt" : "2020-01-02T02:42:02Z",
        "updatedAt" : "2020-01-02T20:42:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3bbc8ed9-58bb-466c-88fb-e7cce1c3e19a",
        "parentId" : "cda8bc71-a6e6-49c6-8f32-0780b89f5241",
        "authorId" : "28b60f4e-1584-4e58-905f-f41677604804",
        "body" : "Added an underlined title for the new feature, thanks for the feedback",
        "createdAt" : "2020-01-02T10:07:48Z",
        "updatedAt" : "2020-01-02T20:42:29Z",
        "lastEditedBy" : "28b60f4e-1584-4e58-905f-f41677604804",
        "tags" : [
        ]
      }
    ],
    "commit" : "4547ed6de28cdbc6ce939af146962be1b777d0a2",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +300,304 @@^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- :meth:`Dataframe.info` now shows line numbers for the columns summary (:issue:`17304`)\n\n*pandas 0.25.x*"
  },
  {
    "id" : "ea6bedf7-e73d-4142-be66-f28d6213513b",
    "prId" : 29140,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29140#pullrequestreview-340468234",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d399dedc-312c-42e8-9985-eb093f27241e",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Does this need an okexcept? I would think the doc build would fail without it. ",
        "createdAt" : "2020-01-09T11:53:31Z",
        "updatedAt" : "2020-01-09T17:06:35Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5d812cfdf0c3178d8415cea396c69780347a3bf",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +314,318 @@*pandas 1.0.0*\n\n.. ipython:: python\n   :okexcept:\n"
  },
  {
    "id" : "68856744-e09b-4357-88f6-1419c29427c2",
    "prId" : 29173,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29173#pullrequestreview-309434145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30597f15-2def-408b-b40c-52de7c7454cc",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Should have removed this before merging; will clean up after backport",
        "createdAt" : "2019-10-30T18:34:47Z",
        "updatedAt" : "2019-10-30T18:34:47Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "57889db124086a15385f2437495ff48c7652fadd",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +411,415 @@- Bug in :meth:`DataFrameGroupby.agg` not able to use lambda function with named aggregation (:issue:`27519`)\n- Bug in :meth:`DataFrame.groupby` losing column name information when grouping by a categorical column (:issue:`28787`)\n- Bug in :meth:`DataFrameGroupBy.quantile` where NA values in the grouping could cause segfaults or incorrect results (:issue:`28882`)\n\nReshaping"
  },
  {
    "id" : "36e6dbf0-9ec6-4a48-bb0e-4ef6a0974cad",
    "prId" : 29555,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29555#pullrequestreview-322298463",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c1e5e49-6317-4508-9f08-855d7a60be5f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do we have a dedicated doc section that you can link?",
        "createdAt" : "2019-11-25T13:33:15Z",
        "updatedAt" : "2019-11-25T14:33:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c2ae95a6-9538-4b9d-9bc6-ea6c21d8cf3d",
        "parentId" : "9c1e5e49-6317-4508-9f08-855d7a60be5f",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> do we have a dedicated doc section that you can link?\r\n\r\nGoing to write one if we add the actual NA behaviour to boolean array (as this is the actual different with bool dtype that needs to be explained)",
        "createdAt" : "2019-11-25T14:04:03Z",
        "updatedAt" : "2019-11-25T14:33:55Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "0eb3ca2430614982bcf097039f6feb17d70a6894",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +110,114 @@We've added :class:`BooleanDtype` / :class:`~arrays.BooleanArray`, an extension\ntype dedicated to boolean data that can hold missing values. With the default\n``'bool`` data type based on a numpy bool array, the column can only hold\nTrue or False values and not missing values. This new :class:`BooleanDtype`\ncan store missing values as well by keeping track of this in a separate mask."
  },
  {
    "id" : "a0da61bd-b032-4ccd-abf5-c54a93d73e02",
    "prId" : 29640,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29640#pullrequestreview-319039949",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85b767a9-3bef-4b19-ac2e-7903895ad96a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "does this need any updating an/or reference to your new section that you added in text.rst?",
        "createdAt" : "2019-11-19T13:32:26Z",
        "updatedAt" : "2019-11-19T14:36:22Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "eab578d1-d36a-44ce-a767-b75a80613aa5",
        "parentId" : "85b767a9-3bef-4b19-ac2e-7903895ad96a",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "@TomAugspurger you can probably update the sentence \"The usual string accessor methods work. Where appropriate, the return type of the Series or columns of a DataFrame will also have string dtype.\" 20 lines below this line, to include that it can also return IntegerDtype in certain cases.",
        "createdAt" : "2019-11-19T13:39:20Z",
        "updatedAt" : "2019-11-19T14:36:22Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4bae5e2e32da8f19c745b0583fa5d5ab553b436",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +64,68 @@   and parts of the API may change without warning.\n\nThe ``'string'`` extension type solves several issues with object-dtype NumPy arrays:\n\n1. You can accidentally store a *mixture* of strings and non-strings in an"
  },
  {
    "id" : "0e6cc553-0aa4-4f20-94fa-f348bbf9b4b4",
    "prId" : 29725,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29725#pullrequestreview-319803501",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7474bcd7-7121-4f92-88d0-80839bee11af",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yes, this was what I had in mind for whatsnew placing.",
        "createdAt" : "2019-11-20T12:29:40Z",
        "updatedAt" : "2019-11-25T01:34:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "89e69123c740edef3cd13bf9e3abb8377204d49c",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +377,381 @@**Other removals**\n\n- Removed the previously deprecated :meth:`Index.summary` (:issue:`18217`)\n- Removed the previously deprecated \"fastpath\" keyword from the :class:`Index` constructor (:issue:`23110`)\n- Removed the previously deprecated :meth:`Series.get_value`, :meth:`Series.set_value`, :meth:`DataFrame.get_value`, :meth:`DataFrame.set_value` (:issue:`17739`)"
  },
  {
    "id" : "771313f6-e21d-4431-aec2-13fae3779262",
    "prId" : 29755,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29755#pullrequestreview-321046283",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce8491bb-56b7-4c6a-8a20-bb08d7872960",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "should this go under Other API changes instead?",
        "createdAt" : "2019-11-21T16:59:30Z",
        "updatedAt" : "2019-11-21T17:11:12Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "a18eaa3e-f619-4052-a20e-4d2c43651e5c",
        "parentId" : "ce8491bb-56b7-4c6a-8a20-bb08d7872960",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "We aren't changing the intended behavior just removing deprecated arguments, so I think should belong here",
        "createdAt" : "2019-11-21T17:08:28Z",
        "updatedAt" : "2019-11-21T17:11:12Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea9011e5cba423c1400fb4286f37d8853110cb16",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +314,318 @@- Changed the the default value of `inplace` in :meth:`DataFrame.set_index` and :meth:`Series.set_axis`. It now defaults to False (:issue:`27600`)\n- Removed support for nested renaming in :meth:`DataFrame.aggregate`, :meth:`Series.aggregate`, :meth:`DataFrameGroupBy.aggregate`, :meth:`SeriesGroupBy.aggregate`, :meth:`Rolling.aggregate` (:issue:`18529`)\n- A tuple passed to :meth:`DataFrame.groupby` is now exclusively treated as a single key (:issue:`18314`)\n- Removed :meth:`Series.from_array` (:issue:`18258`)\n- Removed :meth:`DataFrame.from_items` (:issue:`18458`)"
  },
  {
    "id" : "023960fc-3715-47a1-9dba-db72fb82e752",
    "prId" : 29766,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29766#pullrequestreview-322638463",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf3c9202-3307-4ec1-8c03-0b3639dfbc37",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you update this to 5.0.1 with an X next time you change something in whatsnew, cc @datapythonista ",
        "createdAt" : "2019-11-25T23:10:03Z",
        "updatedAt" : "2019-11-25T23:10:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb15c4742ce9807dfc71d533083d2496675a05b2",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +257,261 @@| numexpr         | 2.6.2           |          |         |\n+-----------------+-----------------+----------+---------+\n| pytest (dev)    | 4.0.2           |          |         |\n+-----------------+-----------------+----------+---------+\n"
  },
  {
    "id" : "e3a31ab1-b477-46cb-a284-0bb3eb34cbfc",
    "prId" : 29799,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29799#pullrequestreview-322657142",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96e1c3fb-8d6e-4314-bbce-025664d7fa19",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "side issue, we are pretty inconsistent on showing the previous version in the whatsnew",
        "createdAt" : "2019-11-26T00:05:41Z",
        "updatedAt" : "2019-12-02T12:22:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0f3082ce4d2ca66533cdc0b4dabc2612b8e6e04",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +313,317 @@3. Boolean data (including missing values) now returns the new :class:`arrays.BooleanArray`\n\n*pandas 0.25.x*\n\n.. code-block:: python"
  },
  {
    "id" : "d3b4ca3e-fe0e-47cb-921a-28cf304f6483",
    "prId" : 29878,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29878#pullrequestreview-327053073",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a843997d-73fa-4dcd-8526-c46f2fe05df7",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Will need to add this somewhere in docs/source/reference I think.",
        "createdAt" : "2019-12-04T14:57:57Z",
        "updatedAt" : "2019-12-04T21:56:53Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "1361b808-464a-4ecb-ba33-d0247e0425f3",
        "parentId" : "a843997d-73fa-4dcd-8526-c46f2fe05df7",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Good idea. Added in `doc/source/reference/window.rst`",
        "createdAt" : "2019-12-04T18:17:40Z",
        "updatedAt" : "2019-12-04T21:56:53Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ce1967bf6298e53c5cb1483774aaa1e138d7d30",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +175,179 @@^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWe've added a :func:`pandas.api.indexers.BaseIndexer` class that allows users to define how\nwindow bounds are created during ``rolling`` operations. Users can define their own ``get_window_bounds``\nmethod on a :func:`pandas.api.indexers.BaseIndexer` subclass that will generate the start and end"
  },
  {
    "id" : "4b0d1f11-d48e-4047-83d1-74d87111683a",
    "prId" : 29912,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29912#pullrequestreview-324864142",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "786e0df7-d9f8-45a6-a5b2-353971ef77f4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this was never public to begin with, but I guess can't hurt.",
        "createdAt" : "2019-11-29T22:38:58Z",
        "updatedAt" : "2019-11-29T22:39:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b87d6ec1645a991809ce4a0fc70018c3e74a6f3",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +366,370 @@- :func:`is_extension_type` is deprecated, :func:`is_extension_array_dtype` should be used instead (:issue:`29457`)\n- :func:`eval` keyword argument \"truediv\" is deprecated and will be removed in a future version (:issue:`29812`)\n- :meth:`Categorical.take_nd` is deprecated, use :meth:`Categorical.take` instead (:issue:`27745`)\n\n.. _whatsnew_1000.prior_deprecations:"
  },
  {
    "id" : "83b6bc9d-aceb-411c-94a5-f5c5a5ee483d",
    "prId" : 29933,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29933#pullrequestreview-324901077",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eeaa0baf-0616-4599-8431-29b58039b903",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "this is a note i forgot to do in 29641",
        "createdAt" : "2019-11-30T17:29:43Z",
        "updatedAt" : "2019-11-30T17:29:43Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "258ff2ae2b385c1e3e2eb287d2f899e07854e3d5",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +646,650 @@- Bug in :meth:`DataFrameGroupBy.rolling().quantile()` ignoring ``interpolation`` keyword argument (:issue:`28779`)\n- Bug in :meth:`DataFrame.groupby` where ``any``, ``all``, ``nunique`` and transform functions would incorrectly handle duplicate column labels (:issue:`21668`)\n- Bug in :meth:`DataFrameGroupBy.agg` with timezone-aware datetime64 column incorrectly casting results to the original dtype (:issue:`29641`)\n-\n"
  },
  {
    "id" : "b6ef465b-241a-4bea-8df5-3d5e7ecde8e5",
    "prId" : 30146,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30146#pullrequestreview-328635632",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2412cf5-b991-4ecb-bdcd-24af2d4a7cd7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "doesn’t need a separate note as this is not user visible before 1.0, you can instead add this issue number on the same note as where dtype=‘string’ is introduced (above)",
        "createdAt" : "2019-12-08T22:01:32Z",
        "updatedAt" : "2020-01-01T17:41:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ce665a02-6a4a-4d85-8b17-b79cb7999eac",
        "parentId" : "f2412cf5-b991-4ecb-bdcd-24af2d4a7cd7",
        "authorId" : "737b8f26-351b-43e7-8c7d-80abcc2a4d0c",
        "body" : "Will do, thanks!",
        "createdAt" : "2019-12-08T22:04:38Z",
        "updatedAt" : "2020-01-01T17:41:40Z",
        "lastEditedBy" : "737b8f26-351b-43e7-8c7d-80abcc2a4d0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3310fa59c12ba95c7e8e739690be098482062da5",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +986,990 @@- Bug in :class:`Index` where a non-hashable name could be set without raising ``TypeError`` (:issue:`29069`)\n- Bug in :class:`DataFrame` constructor when passing a 2D ``ndarray`` and an extension dtype (:issue:`12513`)\n- Bug in :meth:`DaataFrame.to_csv` when supplied a series with a ``dtype=\"string\"`` and a ``na_rep``, the ``na_rep`` was being truncated to 2 characters. (:issue:`29975`)\n\n.. _whatsnew_1000.contributors:"
  },
  {
    "id" : "aa408716-1e74-4512-b7a6-8c98f4c88023",
    "prId" : 30151,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30151#pullrequestreview-335854524",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40b7df81-1a2a-4f4d-a61d-879aaa0a4ed8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the issue refernce here as well",
        "createdAt" : "2019-12-23T13:15:02Z",
        "updatedAt" : "2019-12-26T18:15:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3da51eb3a301b8fdcf6991c5ea091d206ab21b8",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +177,181 @@We've added an ``engine`` keyword to :meth:`~Rolling.apply` that allows the user to execute the\nroutine using `Numba <https://numba.pydata.org/>`__ instead of Cython. Using the Numba engine\ncan yield significant performance gains if the apply function can operate on numpy arrays and\nthe data set is larger (1 million rows or greater). For more details, see\n:ref:`rolling apply documentation <stats.rolling_apply>` (:issue:`28987`)"
  },
  {
    "id" : "46c0b379-4542-4597-93a5-d970f6c058f3",
    "prId" : 30183,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30183#pullrequestreview-330518815",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da7092bc-8592-45ac-a012-8e2a67d7afe3",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "This is a bit confusingly worded I think, as I would interpret this that it now returns NaN and no longer inf, while it is the other way around? \r\n\r\nAlso NA -> NaN, as the result is about floats with NaNs",
        "createdAt" : "2019-12-11T09:19:25Z",
        "updatedAt" : "2019-12-11T09:19:29Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "82daa04b-d29d-4d9f-acf1-847076f8f171",
        "parentId" : "da7092bc-8592-45ac-a012-8e2a67d7afe3",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "for non-trivially to understand changes we usually have a sub-section, but up to you.",
        "createdAt" : "2019-12-11T12:56:25Z",
        "updatedAt" : "2019-12-11T12:58:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0264f991eb579ce28833a12ba93afcc83d47a59",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +859,863 @@- Fix :class:`AbstractHolidayCalendar` to return correct results for\n  years after 2030 (now goes up to 2200) (:issue:`27790`)\n- Fixed :class:`IntegerArray` returning ``NA`` rather than ``inf`` for operations dividing by 0 (:issue:`27398`)\n- Bug in :meth:`Series.count` raises if use_inf_as_na is enabled (:issue:`29478`)\n"
  },
  {
    "id" : "04096317-540c-4753-92b7-15dc1c3f6ca6",
    "prId" : 30193,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30193#pullrequestreview-331583147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90d3f770-0f46-411f-a13b-04c3f1e494c9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you update the section that has our min supported version (in the whatsnew) (don't really need this issue line in that case)",
        "createdAt" : "2019-12-12T23:07:44Z",
        "updatedAt" : "2019-12-12T23:51:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab0dd27d95fc2b7460091db2b80c5aca52011845",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +456,460 @@^^^^^^^^^^^^^^^^^\n\n- Bumped the minimum supported version of ``s3fs`` from 0.0.8 to 0.3.0 (:issue:`28616`)\n- :class:`pandas.core.groupby.GroupBy.transform` now raises on invalid operation names (:issue:`27489`)\n- :meth:`pandas.api.types.infer_dtype` will now return \"integer-na\" for integer and ``np.nan`` mix (:issue:`27283`)"
  },
  {
    "id" : "e2414017-663e-4434-86f9-bcca318419e1",
    "prId" : 30200,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30200#pullrequestreview-330825584",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c647e4d1-a10b-4d87-aeef-2dd93258f9d0",
        "parentId" : null,
        "authorId" : "123c1393-2602-4758-a036-a9a25697e7fc",
        "body" : "Doesn't seem related to this change.",
        "createdAt" : "2019-12-11T20:33:14Z",
        "updatedAt" : "2019-12-13T01:06:05Z",
        "lastEditedBy" : "123c1393-2602-4758-a036-a9a25697e7fc",
        "tags" : [
        ]
      },
      {
        "id" : "0dca7b75-7c2c-4c2b-aebc-f0d8f346c471",
        "parentId" : "c647e4d1-a10b-4d87-aeef-2dd93258f9d0",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "correct, see comment https://github.com/pandas-dev/pandas/pull/30200#issuecomment-564635679",
        "createdAt" : "2019-12-11T20:35:55Z",
        "updatedAt" : "2019-12-13T01:06:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3dcb30390b0a87983426b2ebcbc2b72e56fe15e2",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +536,540 @@- :meth:`DataFrame.hist` and :meth:`Series.hist` no longer allows ``figsize=\"default\"``, specify figure size by passinig a tuple instead (:issue:`30003`)\n- Floordiv of integer-dtyped array by :class:`Timedelta` now raises ``TypeError`` (:issue:`21036`)\n- :class:`TimedeltaIndex` and :class:`DatetimeIndex` no longer accept non-nanosecond dtype strings like \"timedelta64\" or \"datetime64\", use \"timedelta64[ns]\" and \"datetime64[ns]\" instead (:issue:`24806`)\n- :func:`pandas.api.types.infer_dtype` argument ``skipna`` defaults to ``True`` instead of ``False`` (:issue:`24050`)\n- Removed the previously deprecated :attr:`Series.ix` and :attr:`DataFrame.ix` (:issue:`26438`)"
  },
  {
    "id" : "0acba7cd-3395-404d-b11c-13d3cea45231",
    "prId" : 30285,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30285#pullrequestreview-333634407",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d04d177e-ed7f-487e-a181-d069a36d6428",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "do users need to know about StataWriter118 or can they just use read_stata/to_stata like before?",
        "createdAt" : "2019-12-17T21:53:31Z",
        "updatedAt" : "2019-12-31T16:38:11Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "b410e907-4007-430d-bb45-b158f5336eee",
        "parentId" : "d04d177e-ed7f-487e-a181-d069a36d6428",
        "authorId" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "body" : "to_stata exposes everything for writing (IIRC). The readers expose some metadata that isn't easy to express as a DataFrame.",
        "createdAt" : "2019-12-17T22:51:43Z",
        "updatedAt" : "2019-12-31T16:38:11Z",
        "lastEditedBy" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "tags" : [
        ]
      },
      {
        "id" : "73a7bb64-a834-48c4-87ea-7fd3b71d1db1",
        "parentId" : "d04d177e-ed7f-487e-a181-d069a36d6428",
        "authorId" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "body" : "This is the same enhancement I added for StataWriter117.",
        "createdAt" : "2019-12-17T22:52:35Z",
        "updatedAt" : "2019-12-31T16:38:11Z",
        "lastEditedBy" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ef4ecf49c0bee31a93f66782b1d514e0743e1fc",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +223,227 @@- :meth:`DataFrame.to_markdown` and :meth:`Series.to_markdown` added (:issue:`11052`)\n- :meth:`DataFrame.drop_duplicates` has gained ``ignore_index`` keyword to reset index (:issue:`30114`)\n- Added new writer for exporting Stata dta files in version 118, ``StataWriter118``.  This format supports exporting strings containing Unicode characters (:issue:`23573`)\n\nBuild Changes"
  },
  {
    "id" : "fd50b000-12aa-49e5-8e77-34955fc10b4c",
    "prId" : 30331,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30331#pullrequestreview-334264603",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31a7d22a-a870-48d4-bef3-07b1794eb8fd",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "missing space after \"keyword\"",
        "createdAt" : "2019-12-18T21:08:48Z",
        "updatedAt" : "2019-12-18T21:08:48Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "cabe41e8-f3b5-4bbc-9c17-c4c1afc15d2c",
        "parentId" : "31a7d22a-a870-48d4-bef3-07b1794eb8fd",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "same in the line below (also my fault)",
        "createdAt" : "2019-12-18T21:09:31Z",
        "updatedAt" : "2019-12-18T21:09:31Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "030ffd116a3285097e0a3506fbf66396139b6ceb",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +575,579 @@- :class:`DatetimeIndex`, :class:`TimedeltaIndex`, and :class:`PeriodIndex` constructors no longer allow ``start``, ``end``, and ``periods`` keywords, use :func:`date_range`, :func:`timedelta_range`, and :func:`period_range` instead (:issue:`23919`)\n- :class:`DatetimeIndex` and :class:`TimedeltaIndex` constructors no longer have a ``verify_integrity`` keyword argument (:issue:`23919`)\n- ``pandas.core.internals.blocks.make_block`` no longer accepts the \"fastpath\" keyword(:issue:`19265`)\n- :meth:`Block.make_block_same_class` no longer accepts the \"dtype\" keyword(:issue:`19434`)\n- Removed the previously deprecated :meth:`ExtensionArray._formatting_values`. Use :attr:`ExtensionArray._formatter` instead. (:issue:`23601`)"
  },
  {
    "id" : "374b25d0-d581-4d08-a6b7-a1309eed955c",
    "prId" : 30339,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30339#pullrequestreview-334373337",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f879d7c1-ad9a-4108-955e-1f3486bdb458",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Can remove the whatsnew if it's not needed.",
        "createdAt" : "2019-12-19T02:10:53Z",
        "updatedAt" : "2019-12-19T02:11:21Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6fc9d74d51ef29d75ec22f8214657ae3bdd18887",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +759,763 @@\n- Bug in :meth:`IntervalIndex.get_indexer` where a :class:`Categorical` or :class:`CategoricalIndex` ``target`` would incorrectly raise a ``TypeError`` (:issue:`30063`)\n- Bug in ``pandas.core.dtypes.cast.infer_dtype_from_scalar`` where passing ``pandas_dtype=True`` did not infer :class:`IntervalDtype` (:issue:`30337`)\n\nIndexing"
  },
  {
    "id" : "c0d4fdb7-9160-4251-b733-55c49e6cfb02",
    "prId" : 30519,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30519#pullrequestreview-336957779",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d89454a-f395-491a-8ee5-213ad5ce149d",
        "parentId" : null,
        "authorId" : "53234afb-349b-4fe3-8dbe-64f563e84041",
        "body" : "can anyone clarify the most appropriate between `:func:` and `:meth:`?",
        "createdAt" : "2019-12-29T13:27:07Z",
        "updatedAt" : "2020-01-03T11:16:23Z",
        "lastEditedBy" : "53234afb-349b-4fe3-8dbe-64f563e84041",
        "tags" : [
        ]
      },
      {
        "id" : "3acca9c0-cd5b-4f23-9157-1e263450f6ee",
        "parentId" : "6d89454a-f395-491a-8ee5-213ad5ce149d",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "`:func:` is fine.",
        "createdAt" : "2019-12-29T13:37:45Z",
        "updatedAt" : "2020-01-03T11:16:23Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ab35b2672e2e5b134f63d370a27ec9e90c79850",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +901,905 @@- :meth:`read_gbq` now accepts ``progress_bar_type`` to display progress bar while the data downloads. (:issue:`29857`)\n- Bug in :func:`pandas.io.json.json_normalize` where a missing value in the location specified by `record_path` would raise a ``TypeError`` (:issue:`30148`)\n- :func:`read_excel` now accepts binary data (:issue:`15914`)\n\nPlotting"
  },
  {
    "id" : "4e6a50a8-dcdc-4c66-a70c-1d7543196b92",
    "prId" : 30575,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30575#pullrequestreview-337280437",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c64b434e-224f-4eb3-bda2-8795082abd6a",
        "parentId" : null,
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "This is #30460, right?",
        "createdAt" : "2019-12-31T00:32:29Z",
        "updatedAt" : "2019-12-31T00:32:46Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      },
      {
        "id" : "e4bd4747-3ad8-4a44-9441-baae1a15f785",
        "parentId" : "c64b434e-224f-4eb3-bda2-8795082abd6a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "yes",
        "createdAt" : "2019-12-31T01:34:45Z",
        "updatedAt" : "2019-12-31T01:34:46Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e70b940a7d657171089822da02c1b826070b54d7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +795,799 @@- Bug in :meth:`DataFrame.drop` where attempting to drop non-existent values from a DatetimeIndex would yield a confusing error message (:issue:`30399`)\n- Bug in :meth:`DataFrame.append` would remove the timezone-awareness of new data (:issue:`30238`)\n- Bug in :meth:`Series.cummin` and :meth:`Series.cummax` with timezone-aware dtype incorrectly dropping its timezone (:issue:`15553`)\n- Bug in :class:`DatetimeArray`, :class:`TimedeltaArray`, and :class:`PeriodArray` where inplace addition and subtraction did not actually operate inplace (:issue:`24115`)\n"
  }
]