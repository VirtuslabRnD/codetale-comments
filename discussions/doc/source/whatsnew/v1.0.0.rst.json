[
  {
    "id" : "2d3cdb35-6198-45b8-ae42-e82e2d8fc65e",
    "prId" : 27242,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27242#pullrequestreview-267471051",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca4324e5-a049-41ca-8016-bccbd90a2bba",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the issue number here (or this PR number)",
        "createdAt" : "2019-07-27T14:41:03Z",
        "updatedAt" : "2019-10-14T21:35:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ff2d02cfe69f6fea3158e7636fb5bf89cfc9b89",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +129,133 @@^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- A :class:`MultiIndex` previously stored the level names as attributes of each of its\n  :attr:`MultiIndex.levels`. From Pandas 1.0, the names are only accessed through\n  :attr:`MultiIndex.names` (which was also possible previously). This is done in order to"
  },
  {
    "id" : "64ce0070-7823-483f-be68-e3e863ec194d",
    "prId" : 27242,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27242#pullrequestreview-301262806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5073ff5-6b20-480b-8c49-252b80520f0b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can u show the previous way in a code block and the new way in an ipython block ",
        "createdAt" : "2019-10-14T12:08:43Z",
        "updatedAt" : "2019-10-14T21:35:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ff2d02cfe69f6fea3158e7636fb5bf89cfc9b89",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +133,137 @@  :attr:`MultiIndex.names` (which was also possible previously). This is done in order to\n  make :attr:`MultiIndex.levels` more similar to :attr:`CategoricalIndex.categories` (:issue:`27242`:).\n\n*pandas 0.25.x*\n"
  },
  {
    "id" : "16405b86-815e-45bb-8342-b41e714b3edb",
    "prId" : 27538,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27538#pullrequestreview-281080518",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58c05b4f-dc2f-46b2-8e6b-f1d0b1067b9c",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "The whatsnew for v0.25.0 already states that we dropped pickle support prior to 0.20.3 so this isn't necessary, though I guess doesn't hurt to include",
        "createdAt" : "2019-08-26T18:33:47Z",
        "updatedAt" : "2019-09-17T18:07:20Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "27415ec7-a25a-446a-af25-2090b2bd6bb8",
        "parentId" : "58c05b4f-dc2f-46b2-8e6b-f1d0b1067b9c",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "IMO it is ok to include this, given that something won't work that previously did work...",
        "createdAt" : "2019-08-28T20:24:01Z",
        "updatedAt" : "2019-09-17T18:08:09Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "79663fb669cce436c6379c83c887755780b84770",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +100,104 @@- Removed the previously deprecated :meth:`ExtensionArray._formatting_values`. Use :attr:`ExtensionArray._formatter` instead. (:issue:`23601`)\n- Removed the previously deprecated ``IntervalIndex.from_intervals`` in favor of the :class:`IntervalIndex` constructor (:issue:`19263`)\n- Ability to read pickles containing :class:`Categorical` instances created with pre-0.16 version of pandas has been removed (:issue:`27538`)\n-\n"
  },
  {
    "id" : "13580f36-7b77-4c75-a60f-1f276743054f",
    "prId" : 27682,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27682#pullrequestreview-299098003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0adc824-c9df-4261-aa41-e0b9cd0734a1",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "These need to be added to `doc/source/reference/window.rst`.",
        "createdAt" : "2019-09-09T15:32:03Z",
        "updatedAt" : "2019-11-08T10:42:44Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "b658b4b1-0aff-4e62-9b20-4af616853191",
        "parentId" : "a0adc824-c9df-4261-aa41-e0b9cd0734a1",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "were these added?",
        "createdAt" : "2019-10-08T12:48:54Z",
        "updatedAt" : "2019-11-08T10:42:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "adba3377-c3f2-4f46-9e4e-6d5401c82c06",
        "parentId" : "a0adc824-c9df-4261-aa41-e0b9cd0734a1",
        "authorId" : "fd6a3bb0-1e01-4fbd-9d3f-28cd7cd4505e",
        "body" : "I have added std and var [here](https://github.com/pandas-dev/pandas/pull/27682/files#diff-8c6a93a870d3534c506b9c1a222c879aR38). Is there anything else?",
        "createdAt" : "2019-10-08T23:08:32Z",
        "updatedAt" : "2019-11-08T10:42:44Z",
        "lastEditedBy" : "fd6a3bb0-1e01-4fbd-9d3f-28cd7cd4505e",
        "tags" : [
        ]
      }
    ],
    "commit" : "c06f2b6c81e8682159b1a98fbd33271ca0dce28b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +111,115 @@- :meth:`DataFrame.to_json` now accepts an ``indent`` integer argument to enable pretty printing of JSON output (:issue:`12004`)\n- :meth:`read_stata` can read Stata 119 dta files. (:issue:`28250`)\n- Implemented :meth:`pandas.core.window.Window.var` and :meth:`pandas.core.window.Window.std` functions (:issue:`26597`)\n- Added ``encoding`` argument to :meth:`DataFrame.to_string` for non-ascii text (:issue:`28766`)\n- Added ``encoding`` argument to :func:`DataFrame.to_html` for non-ascii text (:issue:`28663`)"
  },
  {
    "id" : "bc21e1ff-8d1d-49db-a045-918673890643",
    "prId" : 27929,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27929#pullrequestreview-325105800",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83a590bb-19e8-44fa-9149-62ce47d5debe",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "```suggestion\r\n:meth:`Categorical.min` no longer return ``np.nan`` by default (to honor the ``skipna=True`` default) (:issue:`25303`)\r\n```",
        "createdAt" : "2019-12-02T09:30:14Z",
        "updatedAt" : "2019-12-02T09:38:06Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "260201cf5bc2419a229222f2258a4bb6d31b988c",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +265,269 @@\nWhen :class:`Categorical` contains ``np.nan``,\n:meth:`Categorical.min` no longer return ``np.nan`` by default (skipna=True) (:issue:`25303`)\n\n*pandas 0.25.x*"
  },
  {
    "id" : "d3023363-b631-4628-b56e-98ae72f1c9c4",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-285627865",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac34f9c5-df6f-4015-aaaf-c9ac22574383",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Think this is a simple mistake in diff",
        "createdAt" : "2019-09-09T16:24:02Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +102,106 @@- :meth:`DataFrame.to_string` added the ``max_colwidth`` parameter to control when wide columns are truncated (:issue:`9784`)\n- :meth:`MultiIndex.from_product` infers level names from inputs if not explicitly provided (:issue:`27292`)\n- :meth:`DataFrame.to_latex` now accepts ``caption`` and ``label`` arguments (:issue:`25436`)\n- The :ref:`integer dtype <integer_na>` with support for missing values can now be converted to\n  ``pyarrow`` (>= 0.15.0), which means that it is supported in writing to the Parquet file format"
  },
  {
    "id" : "47fa88ff-ad42-4ad1-8565-de39c881b295",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-290215440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e953c4d9-a8d0-4812-9aa3-6df01bfe5124",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Mark as experimental?",
        "createdAt" : "2019-09-18T20:34:18Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "27e37805-a0e6-4f76-8387-95dfd5dccb36",
        "parentId" : "e953c4d9-a8d0-4812-9aa3-6df01bfe5124",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Probably should.",
        "createdAt" : "2019-09-18T21:34:42Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +53,57 @@.. _whatsnew_100.string:\n\nDedicated string data type\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n"
  },
  {
    "id" : "23f0c742-e993-4f7f-9a02-09aa43428237",
    "prId" : 28018,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28018#pullrequestreview-296182341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c18faefa-e74e-4e6c-8115-774b1288cc83",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this note is not really needed, but ok",
        "createdAt" : "2019-10-02T11:51:00Z",
        "updatedAt" : "2019-10-04T17:48:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd08e1668818a416a73c7dfb3d084659038c8ab9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +177,181 @@- Bug in :meth:`Categorical.astype` where ``NaN`` values were handled incorrectly when casting to int (:issue:`28406`)\n- :meth:`Categorical.searchsorted` and :meth:`CategoricalIndex.searchsorted` now work on unordered categoricals also (:issue:`21667`)\n- Added test to assert roundtripping to parquet with :func:`DataFrame.to_parquet` or :func:`read_parquet` will preserve Categorical dtypes for string types (:issue:`27955`)\n-\n"
  }
]