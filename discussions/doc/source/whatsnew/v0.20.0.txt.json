[
  {
    "id" : "79ae0440-5e5a-43cd-8cba-7837cae5c771",
    "prId" : 14295,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/14295#pullrequestreview-8710774",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "877b6c49-aa59-4cb3-b030-e0e9d898ab07",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i would make a sub-section\n",
        "createdAt" : "2016-11-15T22:23:21Z",
        "updatedAt" : "2016-11-25T20:36:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3abb0bd6e46e78557c1fd480ac173881dc5d530b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +41,45 @@\n- ``pd.read_excel`` now preserves sheet order when using ``sheetname=None`` (:issue:`9930`)\n\n\n.. _whatsnew_0200.api_breaking:"
  },
  {
    "id" : "96eacab8-50f0-43d8-b87d-26790df7a24d",
    "prId" : 14318,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/14318#pullrequestreview-11356548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d934182d-1b50-47e6-820f-b500753d7783",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "thrown -> raised",
        "createdAt" : "2016-12-05T11:01:24Z",
        "updatedAt" : "2017-01-06T12:32:35Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba8b6f61aba7bdc0cf46695f83bc206fa147cc01",
    "line" : null,
    "diffHunk" : "@@ -1,1 +215,219 @@\n.. code-block:: ipython\n\n  In [4]: df['2011-12-31 23:59:59']\n  Out[4]:"
  },
  {
    "id" : "28c7bb1c-6291-4eb3-8967-2aedcee9c272",
    "prId" : 14432,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/14432#pullrequestreview-7317013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77dc3f23-d94d-44b3-ad76-389804ccbe0c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this will need an example here. put the same one in groupby.rst (make also need to add to the groupby doc-string)\n",
        "createdAt" : "2016-10-19T12:45:43Z",
        "updatedAt" : "2016-12-14T14:16:12Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "604bdd03-de85-49d4-8f1b-073e5c0778db",
        "parentId" : "77dc3f23-d94d-44b3-ad76-389804ccbe0c",
        "authorId" : "f342d5a1-8520-43c2-8078-e3c8de5c0da3",
        "body" : "@jreback Example added here and in groupby.rst.  I didn't add anything to the groupby-docstring yet as I wasn't quite sure where it would fit in (there are only two examples there right now).  Let me know what you think.\n",
        "createdAt" : "2016-11-05T15:57:33Z",
        "updatedAt" : "2016-12-14T14:16:12Z",
        "lastEditedBy" : "f342d5a1-8520-43c2-8078-e3c8de5c0da3",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d354612e9bce14367e918fa3a962e0e01aaf5de",
    "line" : null,
    "diffHunk" : "@@ -1,1 +32,36 @@\n- ``pd.read_excel`` now preserves sheet order when using ``sheetname=None`` (:issue:`9930`)\n- Strings passed to ``DataFrame.groupby()`` as the ``by`` parameter may now reference either column names or index level names (:issue:`5677`)\n\n.. ipython:: python"
  },
  {
    "id" : "b57bb518-8049-40fe-abfe-800d8f0f2d2e",
    "prId" : 14780,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/14780#pullrequestreview-11297996",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c229bd29-8d3d-44cd-8e8f-178bdaf3eafa",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "Series has gained a ``.to_excel`` method, to output Excel files, similar to ``DataFrame.to_excel``",
        "createdAt" : "2016-12-04T17:26:51Z",
        "updatedAt" : "2016-12-05T06:18:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "605b9cebba9146f920d321f845d80f995845636e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +51,55 @@- ``pd.read_excel`` now preserves sheet order when using ``sheetname=None`` (:issue:`9930`)\n- ``pd.cut`` and ``pd.qcut`` now support datetime64 and timedelta64 dtypes (issue:`14714`)\n- ``Series`` provides a ``to_excel`` method to output Excel files (:issue:`8825`)\n\n.. _whatsnew_0200.api_breaking:"
  },
  {
    "id" : "d3feb5e0-84e3-4d0b-a4bf-461a009fcdf1",
    "prId" : 14837,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/14837#pullrequestreview-12267153",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7155f8db-450b-44de-baf7-4a15ce565910",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "@m-charlton This is not needed, as this enhancement was already added in 0.19.0, and is mentioned in the whatsnew of 0.19.0 (see the changes in the PR https://github.com/pandas-dev/pandas/pull/13375/files)",
        "createdAt" : "2016-12-09T13:05:06Z",
        "updatedAt" : "2016-12-19T22:14:06Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "7556ecfd-f622-4c76-887c-848b4af0031e",
        "parentId" : "7155f8db-450b-44de-baf7-4a15ce565910",
        "authorId" : "7fd30c76-727b-4746-bf1c-c9571ce401e1",
        "body" : "Will leave this file unchanged.",
        "createdAt" : "2016-12-09T17:06:37Z",
        "updatedAt" : "2016-12-19T22:14:06Z",
        "lastEditedBy" : "7fd30c76-727b-4746-bf1c-c9571ce401e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9414a92e27ba9fe70ffba5e4167f0bdb6441791",
    "line" : null,
    "diffHunk" : "@@ -1,1 +86,90 @@   df = pd.read_table(url, compression='bz2')  # explicitly specify compression\n   df.head(2)\n\n.. _whatsnew_0200.enhancements.other:\n"
  },
  {
    "id" : "1f21f4bf-5f1a-4e97-ad4d-2c36072b4a81",
    "prId" : 14904,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/14904#pullrequestreview-20359152",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8f5fd59-d145-4438-8afb-e216a618b9a9",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "This will raise an error, as you didn't specify `date_format='iso'`. \r\nBut it seems a bit unfortunate that it should be also passed as well, when using the table orient.",
        "createdAt" : "2017-02-05T20:59:39Z",
        "updatedAt" : "2017-03-04T11:46:35Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "eb11f65f-215a-417d-a16a-b58f730aec4e",
        "parentId" : "b8f5fd59-d145-4438-8afb-e216a618b9a9",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Yeah, I don't like it either. How about this: I change the default `date_format` to None in `core/generic.py`. Then for the table schema writer the default is `iso`,  and in every other writer the default is `iso`. I just didn't want to ignore the user's input.",
        "createdAt" : "2017-02-05T21:44:04Z",
        "updatedAt" : "2017-03-04T11:46:35Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "5f000e2a-cb0e-4fca-afb9-86cc338324d8",
        "parentId" : "b8f5fd59-d145-4438-8afb-e216a618b9a9",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "see my comment above about this. you can make the default ``date_format=None`` then check / validate in the code itself.",
        "createdAt" : "2017-02-06T20:27:46Z",
        "updatedAt" : "2017-03-04T11:46:35Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "9fac34ce6c646407111c09a942cbd195b6cbf590",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +173,177 @@       }, index=pd.Index(range(3), name='idx'))\n   df\n   df.to_json(orient='table')\n\n"
  },
  {
    "id" : "5585981e-4418-48f7-9cb5-548bb9b40cec",
    "prId" : 15020,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/15020#pullrequestreview-14830004",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd675b2c-6945-490e-a837-ad86fb0ffc51",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "We could also call this an enhancement that read_csv now supports reading uint64 values?",
        "createdAt" : "2017-01-02T09:14:39Z",
        "updatedAt" : "2017-01-02T09:14:44Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "1948f867-5c66-4345-8a63-f224037f0598",
        "parentId" : "fd675b2c-6945-490e-a837-ad86fb0ffc51",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "IMO this is a bug because `read_csv` should be able to handle all data types equally.  In addition, both the issue and this PR have already been tagged as a bug.",
        "createdAt" : "2017-01-02T09:22:24Z",
        "updatedAt" : "2017-01-02T09:22:24Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "6b68ddf1-afbd-4eb4-aeec-a6e4e5909622",
        "parentId" : "fd675b2c-6945-490e-a837-ad86fb0ffc51",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "It doesn't really matter whether it is a bug fix or not (or how we tag the PR), what I just wanted to say is that we can highlight it more by putting it in the enhancement section, if we think it is worth it. ",
        "createdAt" : "2017-01-02T09:26:01Z",
        "updatedAt" : "2017-01-02T09:26:01Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "278fe72c-5542-483a-b0bd-a475340a0518",
        "parentId" : "fd675b2c-6945-490e-a837-ad86fb0ffc51",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Ah, fair enough.  I just realized though: #14937 (see my changes to the`whatsnew`) might actually resolve this discussion?",
        "createdAt" : "2017-01-02T09:27:27Z",
        "updatedAt" : "2017-01-02T09:27:27Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "36266526-30a5-4122-aa47-8a7caf79ad03",
        "parentId" : "fd675b2c-6945-490e-a837-ad86fb0ffc51",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "yep, indeed, we can group all uint enhancement/bug fixes together",
        "createdAt" : "2017-01-02T09:31:13Z",
        "updatedAt" : "2017-01-02T09:31:13Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "56d22984-c58e-4cb7-86e9-b47f67aae8f8",
        "parentId" : "fd675b2c-6945-490e-a837-ad86fb0ffc51",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Okay, so we can leave that for #14937 then.  :smile:",
        "createdAt" : "2017-01-02T09:31:56Z",
        "updatedAt" : "2017-01-02T09:31:56Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "d018e386034e1c6bc04227cf5c5857e871ffde42",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +289,293 @@- Bug in ``TimedeltaIndex`` addition where overflow was being allowed without error (:issue:`14816`)\n- Bug in ``DataFrame`` construction in which unsigned 64-bit integer elements were being converted to objects (:issue:`14881`)\n- Bug in ``pd.read_csv()`` in which unsigned 64-bit integer elements were being improperly converted to the wrong data types (:issue:`14983`)\n- Bug in ``astype()`` where ``inf`` values were incorrectly converted to integers. Now raises error now with ``astype()`` for Series and DataFrames (:issue:`14265`)\n- Bug in ``DataFrame(..).apply(to_numeric)`` when values are of type decimal.Decimal. (:issue:`14827`)"
  }
]