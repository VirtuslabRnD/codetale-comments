[
  {
    "id" : "44e3b0f3-e5c9-4aee-a2e5-5d4d45bd0c64",
    "prId" : 16153,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16153#pullrequestreview-49885845",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b6677f5-df8b-48fc-b386-0f82a13babfc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "the fixed things that are not changed (e.g. [1], [2]), do in a separate ipython block above (to avoid repeating in previous/new).",
        "createdAt" : "2017-07-13T19:45:24Z",
        "updatedAt" : "2017-09-29T12:24:16Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "6084e0ce24218056de5890d88a1def47b636e63e",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +183,187 @@.. code-block:: ipython\n\n   In [1]: pi = pd.period_range('2017-01', periods=12, freq='M')\n\n   In [2]: s = pd.Series(np.arange(12), index=pi)"
  },
  {
    "id" : "b32a291f-fc74-4ca7-bbde-aa9f92910600",
    "prId" : 16449,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16449#pullrequestreview-55950867",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1470154-0c10-41b8-a392-b434a3c82dee",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "actually we need to have a mini-section in api breaking changes that min/max now don't work on ``object`` dtypes.\r\n\r\nand if you can add a couple of tests (does any exiting ones break because of the ``disallow('O')`` changes?",
        "createdAt" : "2017-08-12T17:38:11Z",
        "updatedAt" : "2017-08-14T18:43:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0a51924e-3789-4d93-99ef-601641db948e",
        "parentId" : "d1470154-0c10-41b8-a392-b434a3c82dee",
        "authorId" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "body" : "Okay; I wrote something for the breaking API changes section. Ultimately, though, the difference is just that `argmax` used to throw `ValueError` and now throws `TypeError` with string data; is that an appropriate change for the breaking section?\r\n\r\nI added a couple of other tests for Series with object dtype. I haven't seen any existing tests break as a result of this change.",
        "createdAt" : "2017-08-12T19:58:05Z",
        "updatedAt" : "2017-08-14T18:43:07Z",
        "lastEditedBy" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a3d62dab22a5dde8cb3710fa483d117a380d614",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +370,374 @@- Fixes dtype of result with integer dtype input, from :func:`pivot_table` when called with ``margins=True`` (:issue:`17013`)\n- Bug in :func:`crosstab` where passing two ``Series`` with the same name raised a ``KeyError`` (:issue:`13279`)\n- :func:`Series.argmin`, :func:`Series.argmax`, and their counterparts on ``DataFrame`` and groupby objects work correctly with floating point data that contains infinite values (:issue:`13595`).\n\nNumeric"
  },
  {
    "id" : "abb0ebd3-19f8-4d83-8bf8-715989edcf33",
    "prId" : 16505,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16505#pullrequestreview-43302167",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed80a702-42f9-4912-a937-9c41953297a2",
        "parentId" : null,
        "authorId" : "0bf5e041-50d5-450b-8f53-387ea2fb4724",
        "body" : "@jreback - added",
        "createdAt" : "2017-06-10T17:29:20Z",
        "updatedAt" : "2017-06-13T21:06:14Z",
        "lastEditedBy" : "0bf5e041-50d5-450b-8f53-387ea2fb4724",
        "tags" : [
        ]
      }
    ],
    "commit" : "01eaba1382c8862cca33fa13e23448f02fecca5c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +34,38 @@- ``Series.to_dict()`` and ``DataFrame.to_dict()`` now support an ``into`` keyword which allows you to specify the ``collections.Mapping`` subclass that you would like returned.  The default is ``dict``, which is backwards compatible. (:issue:`16122`)\n- ``RangeIndex.append`` now returns a ``RangeIndex`` object when possible (:issue:`16212`)\n- ``Series.rename_axis()`` and ``DataFrame.rename_axis()`` with ``inplace=True`` now return None while renaming the axis inplace. (:issue:`15704`)\n- :func:`to_pickle` has gained a protocol parameter (:issue:`16252`). By default, this parameter is set to `HIGHEST_PROTOCOL <https://docs.python.org/3/library/pickle.html#data-stream-format>`__\n- :func:`api.types.infer_dtype` now infers decimals. (:issue: `15690`)"
  },
  {
    "id" : "ad28ba59-fce6-4f8f-9e9c-9d456936b770",
    "prId" : 16732,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16732#pullrequestreview-48372108",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0812196e-49e4-400c-9080-bd741e054602",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "don't -> doesn't",
        "createdAt" : "2017-07-06T10:12:53Z",
        "updatedAt" : "2017-07-06T15:29:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e3716c30-16b0-491d-a50e-9b4ca43209db",
        "parentId" : "0812196e-49e4-400c-9080-bd741e054602",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "It's plural (\"arrays\"), so \"don't\" is the correct conjugation there.",
        "createdAt" : "2017-07-06T15:28:36Z",
        "updatedAt" : "2017-07-06T15:29:48Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6f5bcd00b5659161861ce02cc87d98fe91c1796",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +67,71 @@  and integer or boolean arrays are valid indices\n\nThis is a very long way of saying numpy arrays don't support string-item indexing. With this\nchange, the error message is now this:\n"
  },
  {
    "id" : "2f3dd31b-5626-4994-8510-ee5bbb9b8996",
    "prId" : 16860,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16860#pullrequestreview-48758352",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1026d741-ecae-4688-b8d2-f96a40080d74",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "a reason you changed style.ipynb?",
        "createdAt" : "2017-07-08T15:14:46Z",
        "updatedAt" : "2017-07-08T15:54:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a69735dc-ab8a-4dd5-a015-81e374e5c7db",
        "parentId" : "1026d741-ecae-4688-b8d2-f96a40080d74",
        "authorId" : "06a23f71-cd7f-4c82-9329-a95a82adc415",
        "body" : "It got changed automatically by something as part of trying to build docs. I found it actually got deleted at some point and so reverted it from previous commits but the space was different for some reason.",
        "createdAt" : "2017-07-08T15:17:41Z",
        "updatedAt" : "2017-07-08T15:54:20Z",
        "lastEditedBy" : "06a23f71-cd7f-4c82-9329-a95a82adc415",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f9ae6e550d6461d89654180961d28d02fe5a7f5",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +37,41 @@- :func:`to_pickle` has gained a ``protocol`` parameter (:issue:`16252`). By default, this parameter is set to `HIGHEST_PROTOCOL <https://docs.python.org/3/library/pickle.html#data-stream-format>`__\n- :func:`api.types.infer_dtype` now infers decimals. (:issue:`15690`)\n- :func:`read_feather` has gained the ``nthreads`` parameter for multi-threaded operations (:issue:`16359`)\n- :func:`DataFrame.clip()` and :func:`Series.clip()` have gained an ``inplace`` argument. (:issue:`15388`)\n- :func:`crosstab` has gained a ``margins_name`` parameter to define the name of the row / column that will contain the totals when ``margins=True``. (:issue:`15972`)"
  },
  {
    "id" : "ad62547d-0954-4b0e-984d-33a9edd40324",
    "prId" : 16915,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16915#pullrequestreview-50057099",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e834cca2-34ef-48c9-bb73-604d88295954",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add a sub-section reference",
        "createdAt" : "2017-07-14T14:14:48Z",
        "updatedAt" : "2017-07-18T02:00:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4268007aa21b8e28078c5f73790c421be7bf834a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +26,30 @@  and :class:`~pandas.ExcelWriter` to work properly with the file system path protocol (:issue:`13823`)\n\n\n.. _whatsnew_0210.enhancements.infer_objects:\n"
  },
  {
    "id" : "298aeefd-341a-4752-93bb-8f25ab1d71fe",
    "prId" : 16915,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16915#pullrequestreview-50057099",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7145ff93-74c5-4cf4-97d6-9946cfa14f27",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "sould have this same example in the docs (in basics.rst) and a ref to that.",
        "createdAt" : "2017-07-14T14:16:53Z",
        "updatedAt" : "2017-07-18T02:00:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4268007aa21b8e28078c5f73790c421be7bf834a",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +46,50 @@                      'B': np.array([1, 2, 3], dtype='object'),\n                      'C': ['1', '2', '3']})\n   df.dtypes\n   df.infer_objects().dtype\n"
  },
  {
    "id" : "91fc0610-e80b-4376-9eb2-6982ebe14ff4",
    "prId" : 16915,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16915#pullrequestreview-50488663",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab7c4830-74c6-42d9-add7-0d27b1da226b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add a ref to the basics section above.",
        "createdAt" : "2017-07-18T01:19:06Z",
        "updatedAt" : "2017-07-18T02:00:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4268007aa21b8e28078c5f73790c421be7bf834a",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +32,36 @@^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe `:meth:`~DataFrame.infer_objects` and :meth:`~Series.infer_objects`\nmethods have been added to perform dtype inference on object columns, replacing\nsome of the functionality of the deprecated ``convert_objects``"
  },
  {
    "id" : "0a3b5575-8896-4c65-83c4-0d70957ce965",
    "prId" : 16972,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16972#pullrequestreview-52590604",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b2b81d4-b1fd-47b9-8606-ee2c65ee35f3",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "orde -> order",
        "createdAt" : "2017-07-27T08:40:27Z",
        "updatedAt" : "2017-07-27T08:50:59Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "25eadac6ea9de44b9a3b3305061cbccd453bba7c",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +191,195 @@^^^^^^^^^^^^^^^^^\n\nIn orde to promote more consistency among the pandas API, we have added additional top-level\nfunctions :func:`isna` and :func:`notna` that are aliases for :func:`isnull` and :func:`notnull`.\nThe naming scheme is now more consistent with methods like ``.dropna()`` and ``.fillna()``. Furthermore"
  },
  {
    "id" : "936b4870-4b5f-4898-99d1-245f9364b6cb",
    "prId" : 17050,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17050#pullrequestreview-51605299",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1e702e5-915c-4ed9-b5cb-47ee1e564680",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "oh typo from before?",
        "createdAt" : "2017-07-21T23:14:18Z",
        "updatedAt" : "2017-07-22T16:32:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "36d6d592-3323-4bf9-aecd-f929d23fda27",
        "parentId" : "d1e702e5-915c-4ed9-b5cb-47ee1e564680",
        "authorId" : "9b5d970b-5653-41aa-ae1b-e60d67167e6b",
        "body" : "Yea, https://github.com/pandas-dev/pandas/pull/16960",
        "createdAt" : "2017-07-21T23:28:23Z",
        "updatedAt" : "2017-07-22T16:32:32Z",
        "lastEditedBy" : "9b5d970b-5653-41aa-ae1b-e60d67167e6b",
        "tags" : [
        ]
      }
    ],
    "commit" : "61d10fb7d982ae8a5b50ce9d059785fbf3b930a5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +283,287 @@Sparse\n^^^^^^\n- Bug in ``SparseSeries`` raises ``AttributeError`` when a dictionary is passed in as data (:issue:`16905`)\n\n"
  },
  {
    "id" : "eeb580d2-7df3-4cc6-a5f5-f17c7f1c86fd",
    "prId" : 17109,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17109#pullrequestreview-56309012",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17e9efba-fb39-45af-9d6d-e1146130f153",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "issue number and provide a short expl.",
        "createdAt" : "2017-08-15T10:34:05Z",
        "updatedAt" : "2017-09-01T07:00:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5eb7d9cf1349a1df786732fda04aa75f76b2f46c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +302,306 @@\nUTC Localization with Series\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPreviously, :func:`to_datetime` did not localize datetime ``Series`` data when ``utc=True`` was passed. Now, :func:`to_datetime` will correctly localize ``Series`` with a ``datetime64[ns, UTC]`` dtype to be consistent with how list-like and ``Index`` data are handled. (:issue:`6415`)."
  },
  {
    "id" : "c62b16a4-45b0-4f07-b569-0ae889067815",
    "prId" : 17295,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17295#pullrequestreview-58353613",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae315a94-a206-4b61-b2fb-ec24a8a76fda",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I think we need to mention the duplicate keys case in the whatsnew docs as well",
        "createdAt" : "2017-08-24T11:56:44Z",
        "updatedAt" : "2017-10-03T10:08:55Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "44ce09d4b9ac5ee9f51c7e5b05e2099882bf2760",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +350,354 @@.. ipython:: python\n\n  s.reindex([1, 2, 3])\n\nSelection with all keys found is unchanged."
  },
  {
    "id" : "c893b77a-e51f-43a1-9394-2a602cd1f979",
    "prId" : 17346,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17346#pullrequestreview-64735292",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aac14b6f-11e7-41ee-a539-c19e7e70dd60",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "should be FutureWarning",
        "createdAt" : "2017-09-01T16:41:54Z",
        "updatedAt" : "2017-09-24T00:43:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1cbc2bd9-2c12-4b91-bada-2acf9588ac23",
        "parentId" : "aac14b6f-11e7-41ee-a539-c19e7e70dd60",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Doh!  My bad for not catching that.  Fixed.",
        "createdAt" : "2017-09-01T16:49:24Z",
        "updatedAt" : "2017-09-24T00:43:53Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "5b34b18e-a409-4220-875d-eaec4099bb07",
        "parentId" : "aac14b6f-11e7-41ee-a539-c19e7e70dd60",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Changing back to `UserWarning` in light of later discussion.",
        "createdAt" : "2017-09-23T08:37:14Z",
        "updatedAt" : "2017-09-24T00:43:53Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "9fcffa7932f3f780714e6c9bc07f78a434172cf8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +423,427 @@- Accessing a non-existent attribute on a closed :class:`~pandas.HDFStore` will now\n  raise an ``AttributeError`` rather than a ``ClosedFileError`` (:issue:`16301`)\n- :func:`read_csv` now issues a ``UserWarning`` if the ``names`` parameter contains duplicates (:issue:`17095`)\n- :func:`read_csv` now treats ``'null'`` strings as missing values by default (:issue:`16471`)\n- :func:`read_csv` now treats ``'n/a'`` strings as missing values by default (:issue:`16078`)"
  },
  {
    "id" : "207b34f4-3242-4cdd-8308-4097e9ca7db9",
    "prId" : 17482,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17482#pullrequestreview-63174376",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9bd6176e-2167-46fa-a9d3-5a91ea69dd02",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "You are missing `:`'s for all references: `:func:..` instead of `func:..`",
        "createdAt" : "2017-09-15T13:31:03Z",
        "updatedAt" : "2017-09-15T13:31:03Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "0084ee6c-e549-42af-8527-2babab7687ca",
        "parentId" : "9bd6176e-2167-46fa-a9d3-5a91ea69dd02",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "(and also cdate_range here does not work)",
        "createdAt" : "2017-09-15T13:31:24Z",
        "updatedAt" : "2017-09-15T13:31:25Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "c92c437a-6b35-4a17-b58d-c9b4eb1399aa",
        "parentId" : "9bd6176e-2167-46fa-a9d3-5a91ea69dd02",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Thanks, see #17554",
        "createdAt" : "2017-09-15T22:09:40Z",
        "updatedAt" : "2017-09-15T22:09:40Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6cc86053ed1cdfaaaa0b5b23be259f087acc54e",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +364,368 @@^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIn previous versions, there were some inconsistencies between the various range functions: func:`date_range`, func:`bdate_range`, func:`cdate_range`, func:`period_range`, func:`timedelta_range`, and func:`interval_range`. (:issue:`17471`).\n\nOne of the inconsistent behaviors occurred when the ``start``, ``end`` and ``period`` parameters were all specified, potentially leading to ambiguous ranges.  When all three parameters were passed, ``interval_range`` ignored the ``period`` parameter, ``period_range`` ignored the ``end`` parameter, and the other range functions raised.  To promote consistency among the range functions, and avoid potentially ambiguous ranges, ``interval_range`` and ``period_range`` will now raise when all three parameters are passed."
  },
  {
    "id" : "0bbe64c4-42a7-4aa3-8996-b7b49541486e",
    "prId" : 17491,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17491#pullrequestreview-62168567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "825ecc64-920e-426c-8bdc-dee36cdabb23",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "python -> ipython",
        "createdAt" : "2017-09-12T15:25:03Z",
        "updatedAt" : "2017-09-12T15:42:53Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "05f8a6f6b192e9037747d2d0251b8506b53a70d1",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +203,207 @@Previously:\n\n.. code-block:: python\n\n   In [2]: type(list(s)[0])"
  },
  {
    "id" : "4c243312-45df-4dee-b569-20045efc4fea",
    "prId" : 17491,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17491#pullrequestreview-62168567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ea93027-9fea-4a00-a1d2-b881b81a752a",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Series -> pd.Series",
        "createdAt" : "2017-09-12T15:25:12Z",
        "updatedAt" : "2017-09-12T15:42:53Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "05f8a6f6b192e9037747d2d0251b8506b53a70d1",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +198,202 @@.. ipython:: python\n\n   s = Series([1, 2, 3])\n   s\n"
  },
  {
    "id" : "4693459b-b8ac-4466-9a93-e57ebac79e2c",
    "prId" : 17491,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17491#pullrequestreview-62168567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f84d9542-7570-44ac-8bcc-46478020f3fd",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "this only affect -> this only affects",
        "createdAt" : "2017-09-12T15:25:33Z",
        "updatedAt" : "2017-09-12T15:42:53Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "05f8a6f6b192e9037747d2d0251b8506b53a70d1",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +194,198 @@^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPreviously, when using certain iteration methods for a ``Series`` with dtype ``int`` or ``float``, you would receive a ``numpy`` scalar, e.g. a ``np.int64``, rather than a python ``int``. Issue (:issue:`10904`) corrected this for ``Series.tolist()`` and ``list(Series)``. This change makes all iteration methods consistent, in particular, for ``__iter__()`` and ``.map()``; note that this only affect int/float dtypes. (:issue:`13236`, :issue:`13258`, :issue:`14216`).\n\n.. ipython:: python"
  },
  {
    "id" : "eb9b2696-4fc2-4b9f-afdb-727a3eabc4ec",
    "prId" : 17491,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17491#pullrequestreview-62168567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dc3ea5f-caf0-4151-b3d8-8c53f84f35ac",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "python -> ipython",
        "createdAt" : "2017-09-12T15:26:08Z",
        "updatedAt" : "2017-09-12T15:42:53Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "05f8a6f6b192e9037747d2d0251b8506b53a70d1",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +223,227 @@Previously:\n\n.. code-block:: python\n\n   In [8]: type(df.to_dict()['a'][0])"
  },
  {
    "id" : "7e0a5a2b-9249-4d9c-b93f-6ab306174065",
    "prId" : 17611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17611#pullrequestreview-64610832",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ad0449d-ce3b-4949-9858-430b76e6901d",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Those links won't work because the pages are not generated (only the class docstring is included in the api). \r\nTo solve this, we would need to find a way to specify which of the methods to include of which not (or list them manually in the api.rst, that is probably easier)",
        "createdAt" : "2017-09-22T15:17:16Z",
        "updatedAt" : "2017-09-22T15:17:16Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "5379fc29e139db8f76f59e874528df170ebde4e9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +474,478 @@- :attr:`Timestamp.microsecond` no longer re-computes on attribute access (:issue:`17331`)\n- Improved performance of the :class:`CategoricalIndex` for data that is already categorical dtype (:issue:`17513`)\n- Improved performance of :meth:`RangeIndex.min` and :meth:`RangeIndex.max` by using ``RangeIndex`` properties to perform the computations (:issue:`17607`)\n\n.. _whatsnew_0210.bug_fixes:"
  }
]