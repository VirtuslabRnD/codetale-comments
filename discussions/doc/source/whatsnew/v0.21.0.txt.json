[
  {
    "id" : "44e3b0f3-e5c9-4aee-a2e5-5d4d45bd0c64",
    "prId" : 16153,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16153#pullrequestreview-49885845",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b6677f5-df8b-48fc-b386-0f82a13babfc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "the fixed things that are not changed (e.g. [1], [2]), do in a separate ipython block above (to avoid repeating in previous/new).",
        "createdAt" : "2017-07-13T19:45:24Z",
        "updatedAt" : "2017-09-29T12:24:16Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "6084e0ce24218056de5890d88a1def47b636e63e",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +183,187 @@.. code-block:: ipython\n\n   In [1]: pi = pd.period_range('2017-01', periods=12, freq='M')\n\n   In [2]: s = pd.Series(np.arange(12), index=pi)"
  },
  {
    "id" : "b32a291f-fc74-4ca7-bbde-aa9f92910600",
    "prId" : 16449,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16449#pullrequestreview-55950867",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1470154-0c10-41b8-a392-b434a3c82dee",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "actually we need to have a mini-section in api breaking changes that min/max now don't work on ``object`` dtypes.\r\n\r\nand if you can add a couple of tests (does any exiting ones break because of the ``disallow('O')`` changes?",
        "createdAt" : "2017-08-12T17:38:11Z",
        "updatedAt" : "2017-08-14T18:43:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0a51924e-3789-4d93-99ef-601641db948e",
        "parentId" : "d1470154-0c10-41b8-a392-b434a3c82dee",
        "authorId" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "body" : "Okay; I wrote something for the breaking API changes section. Ultimately, though, the difference is just that `argmax` used to throw `ValueError` and now throws `TypeError` with string data; is that an appropriate change for the breaking section?\r\n\r\nI added a couple of other tests for Series with object dtype. I haven't seen any existing tests break as a result of this change.",
        "createdAt" : "2017-08-12T19:58:05Z",
        "updatedAt" : "2017-08-14T18:43:07Z",
        "lastEditedBy" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a3d62dab22a5dde8cb3710fa483d117a380d614",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +370,374 @@- Fixes dtype of result with integer dtype input, from :func:`pivot_table` when called with ``margins=True`` (:issue:`17013`)\n- Bug in :func:`crosstab` where passing two ``Series`` with the same name raised a ``KeyError`` (:issue:`13279`)\n- :func:`Series.argmin`, :func:`Series.argmax`, and their counterparts on ``DataFrame`` and groupby objects work correctly with floating point data that contains infinite values (:issue:`13595`).\n\nNumeric"
  },
  {
    "id" : "abb0ebd3-19f8-4d83-8bf8-715989edcf33",
    "prId" : 16505,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16505#pullrequestreview-43302167",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed80a702-42f9-4912-a937-9c41953297a2",
        "parentId" : null,
        "authorId" : "0bf5e041-50d5-450b-8f53-387ea2fb4724",
        "body" : "@jreback - added",
        "createdAt" : "2017-06-10T17:29:20Z",
        "updatedAt" : "2017-06-13T21:06:14Z",
        "lastEditedBy" : "0bf5e041-50d5-450b-8f53-387ea2fb4724",
        "tags" : [
        ]
      }
    ],
    "commit" : "01eaba1382c8862cca33fa13e23448f02fecca5c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +34,38 @@- ``Series.to_dict()`` and ``DataFrame.to_dict()`` now support an ``into`` keyword which allows you to specify the ``collections.Mapping`` subclass that you would like returned.  The default is ``dict``, which is backwards compatible. (:issue:`16122`)\n- ``RangeIndex.append`` now returns a ``RangeIndex`` object when possible (:issue:`16212`)\n- ``Series.rename_axis()`` and ``DataFrame.rename_axis()`` with ``inplace=True`` now return None while renaming the axis inplace. (:issue:`15704`)\n- :func:`to_pickle` has gained a protocol parameter (:issue:`16252`). By default, this parameter is set to `HIGHEST_PROTOCOL <https://docs.python.org/3/library/pickle.html#data-stream-format>`__\n- :func:`api.types.infer_dtype` now infers decimals. (:issue: `15690`)"
  }
]