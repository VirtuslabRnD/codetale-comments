[
  {
    "id" : "712754d6-1e4f-489b-8198-9f4ac7049ef3",
    "prId" : 28933,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28933#pullrequestreview-348397901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d94bcb6-197a-4fc6-883b-bfc78bb93054",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you make a mini-example (separate sub-section). I think this is very hard to visualize from the text, but the basic example we are using is very clear.",
        "createdAt" : "2020-01-26T01:32:27Z",
        "updatedAt" : "2020-02-02T21:30:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ed12f4fe-61d3-476a-930b-303176fcfb90",
        "parentId" : "8d94bcb6-197a-4fc6-883b-bfc78bb93054",
        "authorId" : "60c8e4cb-b7ef-4974-822d-c9a482b0c3b3",
        "body" : "Sure thing.",
        "createdAt" : "2020-01-26T18:51:01Z",
        "updatedAt" : "2020-02-02T21:30:15Z",
        "lastEditedBy" : "60c8e4cb-b7ef-4974-822d-c9a482b0c3b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "025d304ae21f1003bc3dedff732ab9f16da77dee",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +162,166 @@MultiIndex\n^^^^^^^^^^\n- Bug in :meth:`Dataframe.loc` when used with a :class:`MultiIndex`. The returned values were not in the same order as the given inputs (:issue:`22797`)\n\n.. ipython:: python"
  },
  {
    "id" : "c31d51e0-673e-46cc-89e2-6635e40b41c6",
    "prId" : 29334,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29334#pullrequestreview-380594927",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52d27389-6585-44a3-b376-540938d82799",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "\"Now, new columns would\" -> \"Now, new columns will\"",
        "createdAt" : "2020-03-24T18:37:32Z",
        "updatedAt" : "2020-03-24T18:37:32Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "0d93ff67-c3a3-496d-94f8-2bde0f77b180",
        "parentId" : "52d27389-6585-44a3-b376-540938d82799",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "woops, forgot this is merged, never mind",
        "createdAt" : "2020-03-24T18:38:00Z",
        "updatedAt" : "2020-03-24T18:38:01Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "26ba2a998f8d593f5dbc7d0b5a37905ec1e8f3f1",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +174,178 @@^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nAssignment to multiple columns of a :class:`DataFrame` when some of the columns do not exist would previously assign the values to the last column. Now, new columns would be constructed with the right values. (:issue:`13658`)\n\n.. ipython:: python"
  },
  {
    "id" : "d776518f-c959-42f0-9652-bb5ba43047d3",
    "prId" : 30209,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30209#pullrequestreview-345426187",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dac712a2-a5a0-4fb5-9691-c083e94d89c3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you move to api changes section.",
        "createdAt" : "2020-01-20T16:35:31Z",
        "updatedAt" : "2020-01-20T21:54:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "57a77db0f226b46106b76d1e2795424bfaebc031",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +29,33 @@^^^^^^^^^^^^^^^^^\n\n- :meth:`Series.describe` will now show distribution percentiles for ``datetime`` dtypes, statistics ``first`` and ``last``\n  will now be ``min`` and ``max`` to match with numeric dtypes in :meth:`DataFrame.describe` (:issue:`30164`)\n-"
  },
  {
    "id" : "536a8725-b7a2-448d-8d7e-8887528ebaeb",
    "prId" : 30562,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30562#pullrequestreview-437047494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2aa71d8e-9525-40f2-a71a-db868f5b3921",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you also indicate #9457 here (for a followon PR is fine)",
        "createdAt" : "2020-06-24T22:23:40Z",
        "updatedAt" : "2020-06-24T22:24:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d83880ccb7ebcb8796ee6a765e383362a6d1454a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +784,788 @@- :meth:`util.testing.assert_almost_equal` now accepts both relative and absolute\n  precision through the ``rtol``, and ``atol`` parameters, thus deprecating the\n  ``check_less_precise`` parameter. (:issue:`13357`).\n\n.. ---------------------------------------------------------------------------"
  },
  {
    "id" : "c7d0392d-b2b4-4108-94e9-aaba94b52615",
    "prId" : 30584,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30584#pullrequestreview-400671966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "802e56be-a715-4eb1-8222-e847a036542a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add a ref to the new doc-section.",
        "createdAt" : "2020-04-10T21:10:41Z",
        "updatedAt" : "2020-05-07T07:08:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5d5c02fa-aecd-43e7-a144-091fc747dad6",
        "parentId" : "802e56be-a715-4eb1-8222-e847a036542a",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "emm, what does this mean?",
        "createdAt" : "2020-04-11T07:23:17Z",
        "updatedAt" : "2020-05-07T07:08:32Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      },
      {
        "id" : "9c8e4ea4-d97e-4b59-a428-17f73a2c9385",
        "parentId" : "802e56be-a715-4eb1-8222-e847a036542a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you add something like: ```:ref:`cookbook<cookbook.grouping>` ``` to put in a link to the new groupby section you added about (obviously use the new ref you created)\r\n\r\n",
        "createdAt" : "2020-04-26T21:00:00Z",
        "updatedAt" : "2020-05-07T07:08:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ef442c01-5246-4255-958d-7ee14c158a3e",
        "parentId" : "802e56be-a715-4eb1-8222-e847a036542a",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "thanks for the hint! I added one following other examples, pls let me know if it is okay now",
        "createdAt" : "2020-04-27T06:57:25Z",
        "updatedAt" : "2020-05-07T07:08:32Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ea6aa019fdfe76f6ca3445d12aaf0cace9e0b35",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +46,50 @@allow ``NA`` values in group keys. Users can define ``dropna`` to ``False`` if they want to include\n``NA`` values in groupby keys. The default is set to ``True`` for ``dropna`` to keep backwards\ncompatibility (:issue:`3729`)\n\n.. ipython:: python"
  },
  {
    "id" : "e6146169-26e3-409e-80d0-a198728c3154",
    "prId" : 30584,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30584#pullrequestreview-400548513",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44ad531c-4d03-4f7c-8969-5cda49385532",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "use the same example as in the docs section (e.g. make the changes here as well)",
        "createdAt" : "2020-04-10T21:11:00Z",
        "updatedAt" : "2020-05-07T07:08:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "994a9e2c-98df-4706-99e6-fc61162e64f1",
        "parentId" : "44ad531c-4d03-4f7c-8969-5cda49385532",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "yeah, the example is the same as in `groupby.rst` if it is what you meant. I also make changes as suggested above.",
        "createdAt" : "2020-04-11T09:14:30Z",
        "updatedAt" : "2020-05-07T07:08:32Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      },
      {
        "id" : "b8f48e26-914e-4b2d-8e78-e15d91a55e5d",
        "parentId" : "44ad531c-4d03-4f7c-8969-5cda49385532",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same change here as above",
        "createdAt" : "2020-04-26T21:00:21Z",
        "updatedAt" : "2020-05-07T07:08:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ea6aa019fdfe76f6ca3445d12aaf0cace9e0b35",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +50,54 @@.. ipython:: python\n\n    df_list = [[1, 2, 3], [1, None, 4], [2, 1, 3], [1, 2, 2]]\n    df_dropna = pd.DataFrame(df_list, columns=[\"a\", \"b\", \"c\"])\n"
  },
  {
    "id" : "26b7feab-1f70-4d3a-828e-08de3c7a3bc0",
    "prId" : 30852,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30852#pullrequestreview-355680515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d2376cc-5aef-43a5-a950-74d1ba38b14b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you split this into 2, by adding another ipython block, this is hard to see whats going on",
        "createdAt" : "2020-02-09T22:19:54Z",
        "updatedAt" : "2020-05-27T03:35:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d1bb7c10-f76a-4c2a-8a9d-50b3e9e585a8",
        "parentId" : "1d2376cc-5aef-43a5-a950-74d1ba38b14b",
        "authorId" : "b0a6eeee-8def-464d-ba0c-d3158c1c80bf",
        "body" : "done, can you review?",
        "createdAt" : "2020-02-10T03:54:17Z",
        "updatedAt" : "2020-05-27T03:35:32Z",
        "lastEditedBy" : "b0a6eeee-8def-464d-ba0c-d3158c1c80bf",
        "tags" : [
        ]
      }
    ],
    "commit" : "007eeb71ffecca19d5b54ce4ea81d4b2517bcefe",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +77,81 @@.. ipython:: python\n\n   df2 = df.copy()\n   df2.loc[0, 'col1'] = 'c'\n   df2.loc[2, 'col3'] = 4.0"
  },
  {
    "id" : "28e6b8df-02c5-4f81-998d-77a832278ef0",
    "prId" : 30852,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30852#pullrequestreview-412313327",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35804966-b1e6-460a-975d-8e2312dde290",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a similar example in in reshaping.rst or merge.rst (with a link from the other section) and a link here",
        "createdAt" : "2020-05-12T13:19:52Z",
        "updatedAt" : "2020-05-27T03:35:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b223ce33-c4ed-40e3-ba5f-67e77da5c812",
        "parentId" : "35804966-b1e6-460a-975d-8e2312dde290",
        "authorId" : "b0a6eeee-8def-464d-ba0c-d3158c1c80bf",
        "body" : "Added, can you review?\r\n\r\nI have chosen to add the examples in merge.rst, as this `compare` method is more similar to a merging operation in that they both involved two aligned objects, and somehow combine them both.",
        "createdAt" : "2020-05-15T02:52:52Z",
        "updatedAt" : "2020-05-27T03:35:32Z",
        "lastEditedBy" : "b0a6eeee-8def-464d-ba0c-d3158c1c80bf",
        "tags" : [
        ]
      }
    ],
    "commit" : "007eeb71ffecca19d5b54ce4ea81d4b2517bcefe",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +61,65 @@^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWe've added :meth:`DataFrame.compare` and :meth:`Series.compare` for comparing two `DataFrame` or two `Series` (:issue:`30429`)\n\n.. ipython:: python"
  },
  {
    "id" : "0d85c43b-00b2-4084-b1de-68ceabaae01f",
    "prId" : 30858,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30858#pullrequestreview-448686874",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18ae614b-9150-478c-84eb-c57fd6203857",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "FYI: the link to this method won't render, since `SeriesGroupBy` isn't in the pands namespace.",
        "createdAt" : "2020-07-14T20:32:51Z",
        "updatedAt" : "2020-07-14T20:34:42Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "3ee21d50-207e-4b12-ab63-ba95a155442a",
        "parentId" : "18ae614b-9150-478c-84eb-c57fd6203857",
        "authorId" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "body" : "Sorry about that - will make sure the build the whatsnew file in the future to check",
        "createdAt" : "2020-07-15T07:13:50Z",
        "updatedAt" : "2020-07-15T07:13:50Z",
        "lastEditedBy" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb3ba5c79c629392990d9f581d9d6c1dfe550bed",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1102,1106 @@- :meth:`DataFrame.pivot` can now take lists for ``index`` and ``columns`` arguments (:issue:`21425`)\n- Bug in :func:`concat` where the resulting indices are not copied when ``copy=True`` (:issue:`29879`)\n- Bug in :meth:`SeriesGroupBy.aggregate` was resulting in aggregations being overwritten when they shared the same name (:issue:`30880`)\n- Bug where :meth:`Index.astype` would lose the name attribute when converting from ``Float64Index`` to ``Int64Index``, or when casting to an ``ExtensionArray`` dtype (:issue:`32013`)\n- :meth:`Series.append` will now raise a ``TypeError`` when passed a DataFrame or a sequence containing Dataframe (:issue:`31413`)"
  },
  {
    "id" : "6dbd2db6-ad04-452c-9c7e-bcc6259fae94",
    "prId" : 30929,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30929#pullrequestreview-345425593",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90a53e1e-7e71-41bb-81af-1e718bd8e8b6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "2 ipython blocks here as well",
        "createdAt" : "2020-01-20T16:21:16Z",
        "updatedAt" : "2020-01-24T02:29:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "88086e88-efd5-4b32-88cf-09584cc1070b",
        "parentId" : "90a53e1e-7e71-41bb-81af-1e718bd8e8b6",
        "authorId" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "body" : "done",
        "createdAt" : "2020-01-20T16:34:31Z",
        "updatedAt" : "2020-01-24T02:29:44Z",
        "lastEditedBy" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa93a84474079de79d9cf101cc9d708ceeec2fab",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +36,40 @@.. ipython:: python\n\n   converted = df.convert_dtypes()\n   converted\n   converted.dtypes"
  },
  {
    "id" : "b959de75-be75-49a3-b3ec-1dffd15b1d24",
    "prId" : 30982,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30982#pullrequestreview-382164122",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50c3bd51-1faf-4939-a2ae-e4744b5ef488",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "is `DataFrame.sum` affected?",
        "createdAt" : "2020-03-26T15:49:05Z",
        "updatedAt" : "2020-03-26T16:17:54Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "872086b6-cf02-4a65-8e37-d09f7d9624f2",
        "parentId" : "50c3bd51-1faf-4939-a2ae-e4744b5ef488",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "No, since we don't use the EA implementation for reductions in DataFrame reductions, that's my other PR",
        "createdAt" : "2020-03-26T16:06:55Z",
        "updatedAt" : "2020-03-26T16:17:54Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a43e1058cdc12fc0a05e7a990a16e11f463e45d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +230,234 @@  :meth:`DataFrame.sparse.from_spmatrix` constructor (:issue:`32821`,\n  :issue:`32825`,  :issue:`32826`, :issue:`32856`, :issue:`32858`).\n- Performance improvement in :meth:`Series.sum` for nullable (integer and boolean) dtypes (:issue:`30982`).\n\n"
  },
  {
    "id" : "8f8dffe4-ecca-4540-9ec0-cfe3029ff2d1",
    "prId" : 30995,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30995#pullrequestreview-343030671",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "169545f9-2204-4cbc-9aba-2959ae860059",
        "parentId" : null,
        "authorId" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "body" : "Moved to whatsnew for v1.1.0",
        "createdAt" : "2020-01-15T07:40:58Z",
        "updatedAt" : "2020-01-15T07:40:59Z",
        "lastEditedBy" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "tags" : [
        ]
      }
    ],
    "commit" : "85767afcc9de4cfef0c1bd46f801f4eb11c8b82e",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +60,64 @@Datetimelike\n^^^^^^^^^^^^\n- Bug in :class:`Timestamp` where constructing :class:`Timestamp` from ambiguous epoch time and calling constructor again changed :meth:`Timestamp.value` property (:issue:`24329`)\n-\n-"
  },
  {
    "id" : "9710ac3b-d36b-4017-af19-5c38ac88dc8f",
    "prId" : 31096,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31096#pullrequestreview-344949346",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff579d73-ef44-4558-9537-914bdafce66c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you update the docs: https://pandas.io/docs/user_guide/timeseries.html#partial-string-indexing",
        "createdAt" : "2020-01-18T15:52:32Z",
        "updatedAt" : "2020-01-21T00:24:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "10cdf50e2bb3c8e17987cf225bf98703cbe608e3",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +18,22 @@Nonmonotonic PeriodIndex Partial String Slicing\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n:class:`PeriodIndex` now supports partial string slicing for non-monotonic indexes, mirroring :class:`DatetimeIndex` behavior (:issue:`31096`)\n\nFor example:"
  },
  {
    "id" : "bbf5a348-e4fb-4115-96e5-b051f3627bd4",
    "prId" : 31096,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31096#pullrequestreview-344949346",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5e6ef4e-65a2-44b6-93da-c562992ad6c4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you show ser, maybe break this into 2 to make it more readable",
        "createdAt" : "2020-01-18T15:53:10Z",
        "updatedAt" : "2020-01-21T00:24:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "10cdf50e2bb3c8e17987cf225bf98703cbe608e3",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +25,29 @@\n   dti = pd.date_range(\"2014-01-01\", periods=30, freq=\"30D\")\n   pi = dti.to_period(\"D\")\n   ser_monotonic = pd.Series(np.arange(30), index=pi)\n   shuffler = list(range(0, 30, 2)) + list(range(1, 31, 2))"
  },
  {
    "id" : "c5d59bad-ed4c-4d7c-8e3f-fee24fd799ca",
    "prId" : 31096,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31096#pullrequestreview-345507520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6169a5ae-dd48-4a81-92cc-69f6e8d141bb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you make a separate ipythonblock for these last 2",
        "createdAt" : "2020-01-20T19:51:09Z",
        "updatedAt" : "2020-01-21T00:24:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "10cdf50e2bb3c8e17987cf225bf98703cbe608e3",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +32,36 @@\n.. ipython:: python\n   ser[\"2014\"]\n   ser.loc[\"May 2015\"]\n"
  },
  {
    "id" : "12af843e-ef7b-4ce7-8a83-75f78cd8bb20",
    "prId" : 31247,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31247#pullrequestreview-353423006",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "936a9691-244e-4983-a17d-b1715b367f59",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add a doc-link to the section in the docs where you showcase this (need to add)",
        "createdAt" : "2020-01-26T01:55:20Z",
        "updatedAt" : "2020-02-25T20:44:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c503173b-8e1b-4aa1-b22c-9e2e9b1b38ac",
        "parentId" : "936a9691-244e-4983-a17d-b1715b367f59",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add docs near where we talk about Series.value_counts",
        "createdAt" : "2020-01-26T01:57:54Z",
        "updatedAt" : "2020-02-25T20:44:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "563358ca-02bc-4b2e-89c3-57831b3b42f9",
        "parentId" : "936a9691-244e-4983-a17d-b1715b367f59",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "A bit confused by this one. Where should I showcase the method and how to link to it?",
        "createdAt" : "2020-01-26T07:34:49Z",
        "updatedAt" : "2020-02-25T20:44:11Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      },
      {
        "id" : "bfbc1eac-a3f1-4228-b8ad-e997593c8443",
        "parentId" : "936a9691-244e-4983-a17d-b1715b367f59",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "there is a section in basics.rst where value_counts is used on a Series, add it there",
        "createdAt" : "2020-02-05T01:52:33Z",
        "updatedAt" : "2020-02-25T20:44:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "de40484e31abe47758a564b124329123d3fe5476",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +56,60 @@- :meth:`Series.describe` will now show distribution percentiles for ``datetime`` dtypes, statistics ``first`` and ``last``\n  will now be ``min`` and ``max`` to match with numeric dtypes in :meth:`DataFrame.describe` (:issue:`30164`)\n- Added :meth:`DataFrame.value_counts` (:issue:`5377`)\n- :meth:`Groupby.groups` now returns an abbreviated representation when called on large dataframes (:issue:`1135`)\n- ``loc`` lookups with an object-dtype :class:`Index` and an integer key will now raise ``KeyError`` instead of ``TypeError`` when key is missing (:issue:`31905`)"
  },
  {
    "id" : "637f445c-8984-4eb0-980d-4e7d6a1220c1",
    "prId" : 31312,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31312#pullrequestreview-356822811",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a79315ae-cb52-44d7-b0f7-8629ce479169",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "AFAICT this example works in master, am I reading that wrong?",
        "createdAt" : "2020-02-10T23:36:09Z",
        "updatedAt" : "2020-02-11T10:39:18Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "bebb9ed5-f972-4963-a16f-7c1278787178",
        "parentId" : "a79315ae-cb52-44d7-b0f7-8629ce479169",
        "authorId" : "a976b74e-e526-4565-91d1-0e822f104469",
        "body" : "The implementation in master uses `set(left.values) & set(right.values)`. There is no guarantee to preserve the order. I made the description more explicit. Is that better?",
        "createdAt" : "2020-02-11T10:40:01Z",
        "updatedAt" : "2020-02-11T10:40:01Z",
        "lastEditedBy" : "a976b74e-e526-4565-91d1-0e822f104469",
        "tags" : [
        ]
      },
      {
        "id" : "7eba9f07-7b44-4582-93bc-724d04b82efb",
        "parentId" : "a79315ae-cb52-44d7-b0f7-8629ce479169",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "thanks",
        "createdAt" : "2020-02-11T16:51:29Z",
        "updatedAt" : "2020-02-11T16:51:29Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b790aeffcb5f12b71296aca0e304f701fdbc180f",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +184,188 @@        right = pd.MultiIndex.from_arrays([[\"a\", \"b\", \"c\"], [1, 2, 3]])\n        # Common elements are now guaranteed to be ordered by the left side\n        left.intersection(right, sort=False)\n\n-"
  },
  {
    "id" : "59e3069f-4d33-40e0-a0ba-a2c6303c6500",
    "prId" : 31380,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31380#pullrequestreview-352276632",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b89431c7-5e7e-405f-bbbd-9841e460b67d",
        "parentId" : null,
        "authorId" : "df13c963-1a7e-400d-8549-3b407a6b437e",
        "body" : "BTW, I'm not sure if it was already covered by the earlier PR, but it seems like the change in precision to `total_seconds()` from \"dubiously nanosecond-precision\" to \"microsecond-precision\" should probably show up in the release notes. It seems like this is the only entry under `Timedelta`, so maybe it was done silently? Or was the other change already released?",
        "createdAt" : "2020-02-03T14:06:58Z",
        "updatedAt" : "2020-02-03T14:06:59Z",
        "lastEditedBy" : "df13c963-1a7e-400d-8549-3b407a6b437e",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4ca7a32ca0fd7d3ffde47e8891600b7c7e18cd8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +110,114 @@^^^^^^^^^\n\n- Bug in constructing a :class:`Timedelta` with a high precision integer that would round the :class:`Timedelta` components (:issue:`31354`)\n-\n"
  },
  {
    "id" : "72474e55-1925-41a3-8c52-d2c4af5c84a2",
    "prId" : 31416,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31416#pullrequestreview-355632889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed4cb2af-20de-4261-8ec6-bbedadab497f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "We ought to limit notes in the Other section if at all possible if someone wants to try to classify these better\r\n\r\ncc @pandas-dev/pandas-core ",
        "createdAt" : "2020-02-09T20:55:45Z",
        "updatedAt" : "2020-02-09T20:55:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "b02918ab172531901fc29da4d197070dbd147d1a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +224,228 @@  instead of ``TypeError: Can only append a Series if ignore_index=True or if the Series has a name`` (:issue:`30871`)\n- Set operations on an object-dtype :class:`Index` now always return object-dtype results (:issue:`31401`)\n- Bug in :meth:`AbstractHolidayCalendar.holidays` when no rules were defined (:issue:`31415`)\n-\n"
  },
  {
    "id" : "48b17ca0-e61b-426e-9b33-68036fd66c0f",
    "prId" : 31667,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31667#pullrequestreview-353504408",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "725b3d2e-7447-4684-b0c0-fc818e624e29",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Please resolve the merge conflict.",
        "createdAt" : "2020-02-05T07:15:08Z",
        "updatedAt" : "2020-02-10T09:47:41Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "defecd529e00362479118deb5e3f7848e50f2e58",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +186,190 @@  ``coerce_timestamps``; following pyarrow's default allows writing nanosecond\n  timestamps with ``version=\"2.0\"`` (:issue:`31652`).\n- Bug in :meth:`read_csv` was raising `TypeError` when `sep=None` was used in combination with `comment` keyword (:issue:`31396`)\n- Bug in :class:`HDFStore` that caused it to set to ``int64`` the dtype of a ``datetime64`` column when reading a DataFrame in Python 3 from fixed format written in Python 2 (:issue:`31750`)\n"
  }
]