[
  {
    "id" : "93609486-f6ee-4171-b672-739ee7ae3bfd",
    "prId" : 19704,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19704#pullrequestreview-100920733",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f3fcf4b-f46f-47d0-9cf7-85504274d7f8",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "In practice, we now often say something like \"array-like\", when both lists and arrays are allowed.",
        "createdAt" : "2018-02-14T23:08:08Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "3eba1a55-fad1-49f2-bd02-03277f1e1993",
        "parentId" : "9f3fcf4b-f46f-47d0-9cf7-85504274d7f8",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I am not sure we actually have many cases  in the user facing functions where we *require* a numpy array (I mean, where we don't accept a list as well, and thus we would not use 'array' or 'array-like' in general)",
        "createdAt" : "2018-02-26T23:10:16Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "45751a2d-3c7b-4fc5-a6e6-9b1bd75b9f44",
        "parentId" : "9f3fcf4b-f46f-47d0-9cf7-85504274d7f8",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "I agree, although we could maybe have some place in the docs where we clearly define what an \"array-like\" is (e.g. tuples aren't)... and maybe even refer to it with a footnote?",
        "createdAt" : "2018-03-02T21:34:08Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ebac5551c8ffd02c59ee88c252b4424abd3c708",
    "line" : 377,
    "diffHunk" : "@@ -1,1 +375,379 @@If the type is in a package, the module must be also specified:\n\n- numpy.ndarray\n- scipy.sparse.coo_matrix\n"
  },
  {
    "id" : "645c357f-cb4b-46de-960d-b049fe8488f3",
    "prId" : 19704,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19704#pullrequestreview-99159873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88ede20b-1ef2-4636-8cbe-7d47561b8b28",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Do we want to require a description?\r\n\r\nBecause as a dummy example for pivot:\r\n\r\n```\r\nPivot dataframe.\r\n\r\nLonger explanation ..\r\n\r\nparameters ...\r\n\r\nReturns\r\n-------\r\nDataFrame\r\n    Pivoted dataframe.\r\n```\r\n\r\nit can be quite redundant in some cases I think. \r\nI would say this is only required when some clarification is needed or when there are multiple return values",
        "createdAt" : "2018-02-14T23:13:08Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "218a0243-f381-40a4-bca3-a80dab9902f3",
        "parentId" : "88ede20b-1ef2-4636-8cbe-7d47561b8b28",
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "I'd start requiring them, and if we see examples where it doesn't add any value, I'd make it optional, and clarify when can be omitted based on the examples.",
        "createdAt" : "2018-02-25T22:51:23Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ebac5551c8ffd02c59ee88c252b4424abd3c708",
    "line" : 427,
    "diffHunk" : "@@ -1,1 +425,429 @@\nThe types for \"Returns\" and \"Yields\" are the same as the ones for the\n\"Parameters\". Also, the description must finish with a dot.\n\nFor example, with a single value:"
  },
  {
    "id" : "ef32a811-82e0-43cd-acdd-1a7ff27d974e",
    "prId" : 19704,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19704#pullrequestreview-99646404",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8c8e2c3-00e9-4fdc-b942-dd0ffedd0fb3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a See Also section",
        "createdAt" : "2018-02-27T11:24:00Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ebac5551c8ffd02c59ee88c252b4424abd3c708",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +58,62 @@    \"\"\"\n    return num1 + num2\n\nSome standards exist about docstrings, so they are easier to read, and they can\nbe exported to other formats such as html or pdf."
  },
  {
    "id" : "6787c57c-4270-41e7-aefa-6f19da632531",
    "prId" : 19704,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19704#pullrequestreview-100920854",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1dc661b9-1699-462e-a7af-346a0786492a",
        "parentId" : null,
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "any (lower case)",
        "createdAt" : "2018-03-02T21:34:34Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ebac5551c8ffd02c59ee88c252b4424abd3c708",
    "line" : 390,
    "diffHunk" : "@@ -1,1 +388,392 @@\nIf the exact type is not relevant, but must be compatible with a numpy\narray, array-like can be specified. If Any type that can be iterated is\naccepted, iterable can be used:\n"
  },
  {
    "id" : "64ee0c7e-c70f-4b34-bdf7-688c643d778e",
    "prId" : 19704,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19704#pullrequestreview-100922135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19e8c3bc-b63c-4298-b66c-00659f9d8cd6",
        "parentId" : null,
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "This might be subtle. For instance, ``pd.Series(i for i in range(3))`` works, but it is undocumented. However, I don't think we want to _replace_ \"array-like\" with \"iterable\": probably have both, although they are theoretically redundant.",
        "createdAt" : "2018-03-02T21:39:23Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ebac5551c8ffd02c59ee88c252b4424abd3c708",
    "line" : 394,
    "diffHunk" : "@@ -1,1 +392,396 @@\n- array-like\n- iterable\n\nIf more than one type is accepted, separate them by commas, except the"
  },
  {
    "id" : "08cd85a3-0c4c-47e7-ab58-61153f7cfb70",
    "prId" : 19704,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19704#pullrequestreview-102705680",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4e787fc-ca17-496c-b68f-4c6314f33afc",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Did we settle on single or double backticks here?",
        "createdAt" : "2018-03-09T16:03:15Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "1bd77299-d316-4994-b9b1-5e5090361378",
        "parentId" : "f4e787fc-ca17-496c-b68f-4c6314f33afc",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "For reference, typing\r\n\r\n    `arr`\r\n\r\nUses sphinx's default role. That's currently None (no role) in our `conf.py`, but it could be whatever. Does sphinx have a \"parameter role\"? I'm not finding one.",
        "createdAt" : "2018-03-09T16:06:51Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "c8af7cf2-63d0-4871-876e-ce44a170dfd5",
        "parentId" : "f4e787fc-ca17-496c-b68f-4c6314f33afc",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Single backticks is what numpydoc spec says to do. But I don't know how useful it is to make the distinction between single backticks for parameters but double backticks for code (other function names, parameter name combined with a value, ..).\r\n\r\n",
        "createdAt" : "2018-03-09T16:13:07Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "183e34ab-dbca-407e-8d2f-1d4c1e23cb08",
        "parentId" : "f4e787fc-ca17-496c-b68f-4c6314f33afc",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Numpy uses 'autolink' as their default role. Which makes that they also use single backticks for other functions, and then they automatically become links to the docstring page, which is also nice.\r\n\r\nLook eg at the keepdims explanation in the parameter section: https://docs.scipy.org/doc/numpy/reference/generated/numpy.mean.html \r\nAll of keepdims, ndarray and sum are single backticks. The first is rendered as italic, while the other are links to their docstring page.\r\n\r\n",
        "createdAt" : "2018-03-09T16:16:27Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "7e4bcabf-ad98-4d4f-9504-02a8b49c0ef4",
        "parentId" : "f4e787fc-ca17-496c-b68f-4c6314f33afc",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "But probably a bit late to change now before the sprint, without really trying out. I would propose to keep it as is?\r\n\r\nUsing it would however make the docs a bit more pleasant to read (or write) in plain text.",
        "createdAt" : "2018-03-09T16:19:59Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "0cb61214-ce4d-4f95-a2da-81aa14bf4c86",
        "parentId" : "f4e787fc-ca17-496c-b68f-4c6314f33afc",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "@jorisvandenbossche should we copy this then? https://github.com/numpy/numpy/blob/master/doc/source/conf.py#L65",
        "createdAt" : "2018-03-09T16:21:11Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "44fb83d3-55ec-4be6-83ae-2ce4a4b71002",
        "parentId" : "f4e787fc-ca17-496c-b68f-4c6314f33afc",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "FWIW, I think that'd be the best behavior. I'm not a huge fan of double backticks in docstrings, because they make the text version too noisy. For parameters, we get italics in the HTML (code might be better, but we at least have some formatting), or a link to the object without all the `:ref:` noise.",
        "createdAt" : "2018-03-09T16:23:37Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "29084289-7973-43be-b1fb-676e049623d6",
        "parentId" : "f4e787fc-ca17-496c-b68f-4c6314f33afc",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Sorry didn't see your last post before posting.\r\n\r\nAgreed it's too late to change for the sprint. But let's leave the recommendation as is (use single backtick for parameters), since I think it's what we'll want in the future.",
        "createdAt" : "2018-03-09T16:29:23Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ebac5551c8ffd02c59ee88c252b4424abd3c708",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +118,122 @@    def add_values(arr):\n        \"\"\"\n        Add the values in `arr`.\n\n        This is equivalent to Python `sum` of :meth:`pandas.Series.sum`."
  },
  {
    "id" : "b39f8ae2-1b3f-4623-a447-5af9cc85225d",
    "prId" : 19704,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19704#pullrequestreview-102726025",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "accbc26f-312b-4c38-b21d-5e9803ce0e2d",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Why the exception here? IMO, it'd be clearer to follow the rules that numpydoc / sphinx uses for discovery (so anything in the top-level pandas namespace should be found). That way we have consistency with the `See Also` section.",
        "createdAt" : "2018-03-09T17:28:10Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "7831d029-42d7-4554-9d6b-e95bbd260813",
        "parentId" : "accbc26f-312b-4c38-b21d-5e9803ce0e2d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Do you mean everything with 'pandas', or everything without it? \r\nI suppose without? I am fine with that, I think it was added mainly for being explicit for objects that maybe not everybody knows are coming from pandas. ",
        "createdAt" : "2018-03-09T17:31:43Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ebac5551c8ffd02c59ee88c252b4424abd3c708",
    "line" : 380,
    "diffHunk" : "@@ -1,1 +378,382 @@- scipy.sparse.coo_matrix\n\nIf the type is a pandas type, also specify pandas except for Series and\nDataFrame:\n"
  },
  {
    "id" : "524802be-7946-4db6-a359-6fdacf2aba17",
    "prId" : 19704,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19704#pullrequestreview-102725420",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f52cddc-8f15-4180-aa81-f2bcd1250d12",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "strike pandas, since we'll often link to numpy / python / other libraries as well.",
        "createdAt" : "2018-03-09T17:29:40Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ebac5551c8ffd02c59ee88c252b4424abd3c708",
    "line" : 494,
    "diffHunk" : "@@ -1,1 +492,496 @@~~~~~~~~~~~~~~~~~~~\n\nThis section is used to let users know about pandas functionality\nrelated to the one being documented. In rare cases, if no related methods\nor functions can be found at all, this section can be skipped."
  },
  {
    "id" : "74910ebe-f33f-4027-ab57-9bdde83ec36f",
    "prId" : 19704,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19704#pullrequestreview-102725420",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1cc4c138-c51b-411a-9574-ce657b9d8b5b",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Change these to be links to the methods? So people can click it and see the rendered docstring?",
        "createdAt" : "2018-03-09T17:30:21Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ebac5551c8ffd02c59ee88c252b4424abd3c708",
    "line" : 498,
    "diffHunk" : "@@ -1,1 +496,500 @@or functions can be found at all, this section can be skipped.\n\nAn obvious example would be the `head()` and `tail()` methods. As `tail()` does\nthe equivalent as `head()` but at the end of the `Series` or `DataFrame`\ninstead of at the beginning, it is good to let the users know about it."
  },
  {
    "id" : "70969634-2772-4762-93c3-4dec64a44c98",
    "prId" : 19704,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19704#pullrequestreview-102725420",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81b25aa3-b94b-4ad0-bef8-13f8004ddc00",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I don't think we need to *require* a description, do we? I think if you're writing `read_csv` and want to link to `DataFrame.to_csv`, just the link should be sufficient.",
        "createdAt" : "2018-03-09T17:33:40Z",
        "updatedAt" : "2018-03-12T17:29:48Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ebac5551c8ffd02c59ee88c252b4424abd3c708",
    "line" : 535,
    "diffHunk" : "@@ -1,1 +533,537 @@illustrated what this method or function does, why is it relevant in this\ncontext, and what are the key differences between the documented function and\nthe one referencing. The description must also finish with a dot.\n\nNote that in \"Returns\" and \"Yields\", the description is located in the"
  },
  {
    "id" : "eef88ad3-2e60-4712-a798-07fe255e586b",
    "prId" : 20016,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20016#pullrequestreview-103204225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0723a8f4-4c27-4428-958a-48d611d26e48",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "fillna is actually not a really good example, as it has an example section only targetting DataFrame .. (but anyhow, that is another issue :))",
        "createdAt" : "2018-03-12T20:20:10Z",
        "updatedAt" : "2018-03-27T20:47:58Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c221eaf7ef69f996ec1b5453db92c8be27c141b",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +995,999 @@See ``pandas.core.generic.NDFrame.fillna`` for an example template, and\n``pandas.core.series.Series.fillna`` and ``pandas.core.generic.frame.fillna``\nfor the filled versions."
  },
  {
    "id" : "ce3387a0-5b48-4c23-912f-c7c7785efb58",
    "prId" : 23381,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23381#pullrequestreview-170490407",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7578dea-5082-470e-acdb-3c48a8d9c74a",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Does this directive always work or does it require an external plugin?",
        "createdAt" : "2018-10-31T19:56:06Z",
        "updatedAt" : "2018-11-09T14:16:02Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "c31d7094-6bfc-4a94-879c-c9f9e752faf7",
        "parentId" : "a7578dea-5082-470e-acdb-3c48a8d9c74a",
        "authorId" : "74e431be-b3bc-40dc-90fb-12bc297c2e6f",
        "body" : "its integrated directly in [sphinx](https://www.sphinx-doc.org/en/master/usage/restructuredtext/roles.html?highlight=pep#role-pep)\r\n",
        "createdAt" : "2018-10-31T21:59:28Z",
        "updatedAt" : "2018-11-09T14:16:02Z",
        "lastEditedBy" : "74e431be-b3bc-40dc-90fb-12bc297c2e6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed17b45145daf281d9577edf766d6dcb66d9c25f",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +693,697 @@\nAny other module used in the examples must be explicitly imported, one per line (as\nrecommended in :pep:`8#imports`)\nand avoiding aliases. Avoid excessive imports, but if needed, imports from\nthe standard library go first, followed by third-party libraries (like"
  }
]