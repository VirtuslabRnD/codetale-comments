[
  {
    "id" : "1f7937d1-222a-4968-9771-bedddca7c6f7",
    "prId" : 14546,
    "prUrl" : "https://github.com/numpy/numpy/pull/14546#pullrequestreview-339324675",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec155cda-d827-49d2-af6f-ba3294829489",
        "parentId" : null,
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Should this be code rather than an image?",
        "createdAt" : "2019-11-26T22:02:06Z",
        "updatedAt" : "2020-01-19T20:51:27Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "c0f4abd0-e73a-4685-8884-6483a1ceecee",
        "parentId" : "ec155cda-d827-49d2-af6f-ba3294829489",
        "authorId" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "body" : "I think the visual with the use of matching colors makes this clearer for beginners, but I defer to your judgement",
        "createdAt" : "2019-11-27T00:45:04Z",
        "updatedAt" : "2020-01-19T20:51:30Z",
        "lastEditedBy" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "tags" : [
        ]
      },
      {
        "id" : "e3dd35a2-9a55-4179-9a99-7c85b1bece08",
        "parentId" : "ec155cda-d827-49d2-af6f-ba3294829489",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "You could type this part in LaTeX using `\\textt`, something like:\r\n\r\n```\r\n.. math::\r\n    \\texttt{ error = {\\color{green} 1 / n} ... }\r\n```",
        "createdAt" : "2019-11-28T01:30:39Z",
        "updatedAt" : "2020-01-19T20:51:47Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "6059de6f-08ef-4e25-b6e2-d65da39f79b5",
        "parentId" : "ec155cda-d827-49d2-af6f-ba3294829489",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Although I suppose you then end up doing that for all the images in this section, which might be hard work",
        "createdAt" : "2019-11-28T01:32:16Z",
        "updatedAt" : "2020-01-19T20:51:47Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "6087a430-5608-445b-9154-ef173792280b",
        "parentId" : "ec155cda-d827-49d2-af6f-ba3294829489",
        "authorId" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "body" : "Thanks!",
        "createdAt" : "2019-11-28T04:01:40Z",
        "updatedAt" : "2020-01-19T20:51:47Z",
        "lastEditedBy" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "tags" : [
        ]
      },
      {
        "id" : "104c8e4f-be01-4735-bf4a-594dd9d8c793",
        "parentId" : "ec155cda-d827-49d2-af6f-ba3294829489",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "I'm inclined to leave this as is, since it's quite a bit of work. We can also change it later if needed - the ~200 kb increase in repo size isn't critical.",
        "createdAt" : "2020-01-07T15:50:27Z",
        "updatedAt" : "2020-01-19T20:52:03Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e23d201054a89ba411989963c11dfbbdbffa4c4",
    "line" : 1406,
    "diffHunk" : "@@ -1,1 +1404,1408 @@Implementing this formula is simple and straightforward in NumPy:\n\n.. image:: images/np_MSE_implementation.png\n\nWhat makes this work so well is that ``predictions`` and ``labels`` can contain"
  },
  {
    "id" : "aae22717-c7e5-454a-bd6f-26c2638b4a9b",
    "prId" : 14546,
    "prUrl" : "https://github.com/numpy/numpy/pull/14546#pullrequestreview-324876901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "This would be better as LaTeX. You can use color in mathjax as `{ \\color{green} \\frac{1}{n} }`, or possibly `\\color{green}{\\frac{1}{n}}`, depending on which version we're using.",
        "createdAt" : "2019-11-28T01:30:02Z",
        "updatedAt" : "2020-01-19T20:51:47Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "abf60ad7-0bd4-482b-9511-15be7398f0ab",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "body" : "I'm not sure how to get LaTex/MathJax to correctly render in .rst/Sphinx. Could you please provide a little more direction?",
        "createdAt" : "2019-11-28T18:38:45Z",
        "updatedAt" : "2020-01-19T20:51:49Z",
        "lastEditedBy" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "tags" : [
        ]
      },
      {
        "id" : "99c43786-cab7-4aa7-b992-e064e82fabed",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Wrapping as:\r\n```\r\n.. math::\r\n\r\n    { \\color{green} \\frac{1}{n} } rest of the equation\r\n```\r\nshould do the trick",
        "createdAt" : "2019-11-28T18:50:26Z",
        "updatedAt" : "2020-01-19T20:51:50Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "1e86e6a0-9a49-4ba3-96be-8095505e8cbe",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "body" : "Like this?\r\n```\r\n.. math::\r\n\r\n    MeanSquareError = { \\color{green} \\frac{1}{n} }\r\n    { \\color{blue} \\sum{i=1}^{n} } \r\n    { \\color{red} (predictions - }\r\n    { \\color{purple} labels) }\r\n    { \\color{yellow} ^{2} }\r\n```",
        "createdAt" : "2019-11-28T19:09:31Z",
        "updatedAt" : "2020-01-19T20:51:51Z",
        "lastEditedBy" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "tags" : [
        ]
      },
      {
        "id" : "6e23ab0d-6e02-4bab-aa1b-3dce9b2a44c6",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "The math formula illustration looks like:\r\n\r\n<img width=\"560\" alt=\"image\" src=\"https://user-images.githubusercontent.com/98330/69829734-174fca00-11d6-11ea-874d-5bbd6d6430bc.png\">\r\n\r\n@eric-wieser suggested to change to MathJax (not sure only for the first formula, or for more?). The colors can be replicated that way, but the visualization of the arrays inside the formulas can't. Given the \"absolute beginner\" audience, I think this looks quite friendly. The first math formula does look the worst of all these images though, so worth a try to see if MathJax makes it looks better.",
        "createdAt" : "2019-11-28T20:03:55Z",
        "updatedAt" : "2020-01-19T20:51:52Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "6cda14cc-300b-4596-9d51-6c139ab65a65",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "@bonn0062 , I think you'll want to put the parentheses and minus sign outside the colored sections, else the spacing will end up wrong",
        "createdAt" : "2019-11-28T22:03:47Z",
        "updatedAt" : "2020-01-19T20:51:53Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "484293ba-b4fb-4c6e-a916-2980e8c370b6",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "The images look great, but by showing the arrays vertically I fear we're only adding to the 1d vs 2d confusion faced by former Matlab users. If nothing else, the arrays appear horizontal in output yet vertically here.",
        "createdAt" : "2019-11-28T22:05:37Z",
        "updatedAt" : "2020-01-19T20:51:53Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "6f0ef731-17f0-4b47-ba1e-68e3dc2f9179",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "> depending on which version we're using.\r\n\r\nLooks like MathJax v3 isn't actually released yet, so you probably need the `\\color{green}{contents}` syntax instead.",
        "createdAt" : "2019-11-28T22:55:16Z",
        "updatedAt" : "2020-01-19T20:51:53Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "f37c99ed-ed14-4bf3-8685-14d2bfb9b5e7",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "body" : "```\r\n.. math::\r\n\r\n    MeanSquareError = \\color{green}{\\frac{1}{n}}\r\n    \\color{blue}{\\sum{i=1}^{n}} (\r\n    \\color{red}{predictions} - \r\n    \\color{purple}{labels} )\r\n    \\color{yellow}{^{2}}\r\n```",
        "createdAt" : "2019-11-29T16:01:13Z",
        "updatedAt" : "2020-01-19T20:51:56Z",
        "lastEditedBy" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "tags" : [
        ]
      },
      {
        "id" : "979f59e2-0de0-405d-8964-10f443a4f4a5",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "body" : "Does this look right for syntax?",
        "createdAt" : "2019-11-29T16:02:45Z",
        "updatedAt" : "2020-01-19T20:51:57Z",
        "lastEditedBy" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "tags" : [
        ]
      },
      {
        "id" : "27bec80d-14f9-4500-8efa-a14350e0f06f",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "body" : "Well, that's definitely not correct. Circleci was horrified :)",
        "createdAt" : "2019-11-29T16:33:49Z",
        "updatedAt" : "2020-01-19T20:51:57Z",
        "lastEditedBy" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "tags" : [
        ]
      },
      {
        "id" : "800851a8-df3d-4c35-b940-cafa90fe8085",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Do you have the link to the failed circleCI run??\r\n\r\nThat's mostly ok, but the `^` needs to be outside the coloring. Perhaps:\r\n```\r\n.. math::\r\n\r\n    MeanSquareError = \\color{green}{\\frac{1}{n}}\r\n    \\color{blue}{\\sum{i=1}^{n}} (\r\n    \\color{red}{predictions} - \r\n    \\color{purple}{labels} )\r\n    ^{{\\color{yellow}{2}}\r\n```\r\n\r\nYou might also want to wrap all of the text with `\\mathrm{}` or `\\texttt{}` to make it not look like a product of single-letter variables.",
        "createdAt" : "2019-11-29T16:54:25Z",
        "updatedAt" : "2020-01-19T20:51:57Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "38ddf50d-d038-42db-9984-a7750c4b0919",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "body" : "It's here! https://circleci.com/gh/numpy/numpy/10389?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link Do you think this will work without MathJax? https://github.com/numpy/numpy/pull/14546#issuecomment-559883524",
        "createdAt" : "2019-11-30T00:33:53Z",
        "updatedAt" : "2020-01-19T20:52:00Z",
        "lastEditedBy" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "tags" : [
        ]
      },
      {
        "id" : "ff034c92-3915-4e2f-9c53-095b42524fe3",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "For sure it should be possible to get this to work - I think you need to:\r\n\r\n* set `imgmath_latex_preamble = R\"\\usepackage{xcolor}\"` in conf.py (or append to any existing value)\r\n* replace `\\color` with `\\textcolor` above\r\n\r\nIn the long run, I'd consider switching to mathjax, but that's out of scope for this patch.",
        "createdAt" : "2019-11-30T00:56:49Z",
        "updatedAt" : "2020-01-19T20:52:01Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "24165762-0f48-42bd-b0cf-35ece3039a4c",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "body" : "Hmmmmm...my guess is it would go here https://github.com/numpy/numpy/blob/master/doc/source/conf.py just after line 180 or so, but I'm thinking I won't mess with conf.py unless I'm absolutely sure that's the right thing to do and exactly what to do :)",
        "createdAt" : "2019-11-30T01:18:33Z",
        "updatedAt" : "2020-01-19T20:52:01Z",
        "lastEditedBy" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "tags" : [
        ]
      },
      {
        "id" : "09b31e17-7290-40ab-920b-ed8aaa45dc41",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Yeah, better not to touch that in this PR. It'd be a change like https://github.com/scipy/scipy/pull/7376",
        "createdAt" : "2019-11-30T01:24:10Z",
        "updatedAt" : "2020-01-19T20:52:02Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "0ed5361c-ba46-4d19-8d70-f2c9f6dd6a3b",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "To be clear @rgommers, you're fine with a preamble change in this PR, just not the change to mathjax?\r\n\r\n@bonn0062, that sounds right to me - please go ahead and do so! Line 183 looks like a reasonable place to me, just after the other usepackage.",
        "createdAt" : "2019-11-30T01:28:20Z",
        "updatedAt" : "2020-01-19T20:52:02Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "9217e137-eee4-4ed5-9d08-61ae2c7c1ed5",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Preamble sounds fine. I think MathJax could be done too, but better in a separate PR and then put this one on top.",
        "createdAt" : "2019-11-30T01:29:37Z",
        "updatedAt" : "2020-01-19T20:52:02Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "4e05d157-71b3-48e2-8518-c4abaf21b987",
        "parentId" : "3ae73749-057d-4704-aa55-96bd440d5f13",
        "authorId" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "body" : "I added that line exactly as written above to line 183 on a separate pull request (just in case I break something with this...). If you want it on this pr, just say the word. https://github.com/numpy/numpy/pull/15016 ",
        "createdAt" : "2019-11-30T04:33:30Z",
        "updatedAt" : "2020-01-19T20:52:02Z",
        "lastEditedBy" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e23d201054a89ba411989963c11dfbbdbffa4c4",
    "line" : 1402,
    "diffHunk" : "@@ -1,1 +1400,1404 @@supervised machine learning models that deal with regression):\n\n.. image:: images/np_MSE_formula.png\n\nImplementing this formula is simple and straightforward in NumPy:"
  },
  {
    "id" : "d9a0e347-8b51-45fb-9b02-f0f0144ed9da",
    "prId" : 14546,
    "prUrl" : "https://github.com/numpy/numpy/pull/14546#pullrequestreview-324831879",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5b5bc8b-c688-424d-a2fd-cc40c35a99ae",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I think I mentioned this elsewhere, but I think teaching with this image is a mistake:\r\n\r\n![](https://10393-908607-gh.circle-artifacts.com/0/home/circleci/repo/doc/build/html/_images/np_array.png)\r\n\r\nI would strongly recommend drawing 1d arrays as horizontal, because it's consistent with how they appear on the console - additionally, it lends naturally to visualizing broadcasting of a 1d array against a 2d array.\r\n\r\n",
        "createdAt" : "2019-11-29T18:34:48Z",
        "updatedAt" : "2020-01-19T20:51:58Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "3fb4270a-84ba-4a06-8b70-647e3ecf0874",
        "parentId" : "a5b5bc8b-c688-424d-a2fd-cc40c35a99ae",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Reading the rest, I see that this is quite useful for showing scalar vs 1d broadcasting. I think then we need some visual cue for how many axes an array has, and which order they appear in - in order to allow which ever orientation is convenient. Let's discuss that particular idea in my other comment.",
        "createdAt" : "2019-11-29T18:42:35Z",
        "updatedAt" : "2020-01-19T20:51:59Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "3027b630-3a24-47f5-876d-e749dec52416",
        "parentId" : "a5b5bc8b-c688-424d-a2fd-cc40c35a99ae",
        "authorId" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "body" : "I'm happy to recreate the images, or maybe @jalammar would prefer to handle this since they're his images. Everything is just great by me!",
        "createdAt" : "2019-11-29T18:50:30Z",
        "updatedAt" : "2020-01-19T20:51:59Z",
        "lastEditedBy" : "e359ad03-48bf-4fa1-87dc-4834056b1bc7",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e23d201054a89ba411989963c11dfbbdbffa4c4",
    "line" : 214,
    "diffHunk" : "@@ -1,1 +212,216 @@You can visualize your array this way:\n\n.. image:: images/np_array.png\n\n*Be aware that these visualizations are meant to simplify ideas and give you a basic understanding of NumPy concepts and mechanics. Arrays and array operations are much more complicated than are captured here!*"
  },
  {
    "id" : "983f1b26-c2dd-4a7a-98b2-a4d21168045f",
    "prId" : 15439,
    "prUrl" : "https://github.com/numpy/numpy/pull/15439#pullrequestreview-348716057",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28bb51f9-90f2-4a70-a33d-8adba4f344b8",
        "parentId" : null,
        "authorId" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "body" : "Why the space?  Here's what I get in a Python 3.7 interactive shell:\r\n```\r\n>>> a = np.array([1, 2, 3, 4, 5, 6])\r\n>>> a.shape\r\n(6,)\r\n```",
        "createdAt" : "2020-01-26T18:35:40Z",
        "updatedAt" : "2020-01-29T17:01:28Z",
        "lastEditedBy" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "tags" : [
        ]
      },
      {
        "id" : "02510323-26dc-4330-8913-2b5797930744",
        "parentId" : "28bb51f9-90f2-4a70-a33d-8adba4f344b8",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "to align the output with the input, otherwise the doctest fails.",
        "createdAt" : "2020-01-27T07:33:07Z",
        "updatedAt" : "2020-01-29T17:01:28Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "a7b31460-fe9c-4f18-8916-ccf38079dc43",
        "parentId" : "28bb51f9-90f2-4a70-a33d-8adba4f344b8",
        "authorId" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "body" : "Strange that the doctest fails on correct output.  Go figure.",
        "createdAt" : "2020-01-27T14:01:49Z",
        "updatedAt" : "2020-01-29T17:01:28Z",
        "lastEditedBy" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "tags" : [
        ]
      },
      {
        "id" : "3b49981d-9276-4c75-9cdd-7cd133b95d3e",
        "parentId" : "28bb51f9-90f2-4a70-a33d-8adba4f344b8",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Warren, I think you're just misreading this, or github is misrendering the diff for you.\r\nThe correct output is:\r\n```\r\n    >>> a.shape\r\n    (6,)\r\n```\r\nBefore this patch, it was\r\n```\r\n    >>> a.shape\r\n   (6,)\r\n```\r\nSince usually the `>>>` is column 0, the second code block above is obviously wrong, as `(` can't appear in column -1.",
        "createdAt" : "2020-01-27T14:03:57Z",
        "updatedAt" : "2020-01-29T17:01:28Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "43267c01-019e-4fb9-a5f0-90966bcab91a",
        "parentId" : "28bb51f9-90f2-4a70-a33d-8adba4f344b8",
        "authorId" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "body" : "@eric-wieser, you're right.  Github's rendering was misleading me.",
        "createdAt" : "2020-01-27T14:46:49Z",
        "updatedAt" : "2020-01-29T17:01:28Z",
        "lastEditedBy" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbf7d46f97903325a67060d912d80c9b56f6a70c",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +445,449 @@  >>> a = np.array([1, 2, 3, 4, 5, 6])\n  >>> a.shape\n  (6,)\n\nYou can use ``np.newaxis`` to add a new axis::"
  },
  {
    "id" : "118f4639-61de-4462-a6ee-eabe18249ddd",
    "prId" : 15439,
    "prUrl" : "https://github.com/numpy/numpy/pull/15439#pullrequestreview-348397006",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6c4e290-a948-4abd-8d46-15704d3670a4",
        "parentId" : null,
        "authorId" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "body" : "Same comment as above: I don't get this space in an interactive shell.",
        "createdAt" : "2020-01-26T18:36:27Z",
        "updatedAt" : "2020-01-29T17:01:28Z",
        "lastEditedBy" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbf7d46f97903325a67060d912d80c9b56f6a70c",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +486,490 @@  >>> c = np.expand_dims(a, axis=0)\n  >>> c.shape\n  (1, 6)\n\nFind more information about :ref:`newaxis here <arrays.indexing>` and"
  },
  {
    "id" : "c37d1ce3-3a33-4c60-bf35-9f60a8aa77ab",
    "prId" : 15439,
    "prUrl" : "https://github.com/numpy/numpy/pull/15439#pullrequestreview-348397006",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fd17ec8-ca98-4511-b344-26600af9bad8",
        "parentId" : null,
        "authorId" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "body" : "Result is floating point: `array([0., 1.])`",
        "createdAt" : "2020-01-26T18:40:04Z",
        "updatedAt" : "2020-01-29T17:01:28Z",
        "lastEditedBy" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbf7d46f97903325a67060d912d80c9b56f6a70c",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +753,757 @@\n  >>> data - ones\n  array([0, 1])\n  >>> data * data\n  array([1, 4])"
  },
  {
    "id" : "9ec8115f-0ffe-4486-91a1-90e0f86ff65f",
    "prId" : 15439,
    "prUrl" : "https://github.com/numpy/numpy/pull/15439#pullrequestreview-350340225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bc0daa8-f33b-4cd9-be5b-7d08114dd409",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Perhaps (and below)\r\n```suggestion\r\n  >>> unique_rows\r\n```",
        "createdAt" : "2020-01-29T16:58:13Z",
        "updatedAt" : "2020-01-29T17:01:29Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "41a7fb88-9f03-4e11-9086-3353974df8be",
        "parentId" : "0bc0daa8-f33b-4cd9-be5b-7d08114dd409",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "That changes the printing format: \r\n- adds `array(` before the text, \r\n- indents,\r\n- adds commas between the values.",
        "createdAt" : "2020-01-29T17:01:04Z",
        "updatedAt" : "2020-01-29T17:01:29Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "08cab530-e03a-4547-91f6-22121bda1d63",
        "parentId" : "0bc0daa8-f33b-4cd9-be5b-7d08114dd409",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Indeed - my suggestion is we should use that format",
        "createdAt" : "2020-01-29T18:07:54Z",
        "updatedAt" : "2020-01-29T18:07:54Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "e8a88910-2b04-4288-a9a9-54ef691f24b6",
        "parentId" : "0bc0daa8-f33b-4cd9-be5b-7d08114dd409",
        "authorId" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "body" : "+0, I'd leave that to Matti's discretion.  Presumably the original authors had a reason for using `print`, but when working in an interactive shell, I agree that  _not_  using `print` is more typical.  Then again, using a plain Python shell is not something I would recommend, and it would probably make sense to convert the whole thing to an ipython session, but that's out of scope for this PR.",
        "createdAt" : "2020-01-29T18:31:26Z",
        "updatedAt" : "2020-01-29T18:31:26Z",
        "lastEditedBy" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "tags" : [
        ]
      },
      {
        "id" : "6533ceba-5a69-43a0-91c7-b4b940c30e88",
        "parentId" : "0bc0daa8-f33b-4cd9-be5b-7d08114dd409",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Agreed this is scope creep.\r\n\r\n> Presumably the original authors had a reason for using print, \r\n\r\nThe original author was not aware of the `>>>` convention for examples, and did the minimum work necessary to convert their print-based examples.",
        "createdAt" : "2020-01-29T18:46:30Z",
        "updatedAt" : "2020-01-29T18:46:31Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbf7d46f97903325a67060d912d80c9b56f6a70c",
    "line" : 289,
    "diffHunk" : "@@ -1,1 +1076,1080 @@  >>> unique_rows, indices, occurrence_count = np.unique(\n  ...      a_2d, axis=0, return_counts=True, return_index=True)\n  >>> print(unique_rows)\n  [[ 1  2  3  4]\n   [ 5  6  7  8]"
  },
  {
    "id" : "fa3a8e58-d873-423c-8745-22b7349a0c2b",
    "prId" : 15439,
    "prUrl" : "https://github.com/numpy/numpy/pull/15439#pullrequestreview-350269591",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3b3e830-2f4e-4ef7-bf08-adc9f2cbef57",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "```suggestion\r\n  >>> x\r\n```",
        "createdAt" : "2020-01-29T16:59:15Z",
        "updatedAt" : "2020-01-29T17:01:29Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbf7d46f97903325a67060d912d80c9b56f6a70c",
    "line" : 552,
    "diffHunk" : "@@ -1,1 +1550,1554 @@  >>> # If all of your columns are the same type:\n  >>> x = pd.read_csv('music.csv', header=0).values\n  >>> print(x)\n  [['Billie Holiday' 'Jazz' 1300000 27000000]\n   ['Jimmie Hendrix' 'Rock' 2700000 70000000]"
  }
]