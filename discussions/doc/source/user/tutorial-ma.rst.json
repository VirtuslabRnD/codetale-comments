[
  {
    "id" : "d594892a-104c-4c2a-8b7b-4140c14b0051",
    "prId" : 15791,
    "prUrl" : "https://github.com/numpy/numpy/pull/15791#pullrequestreview-400902265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69e8d14e-be11-4fff-8acb-a582da64ea2e",
        "parentId" : null,
        "authorId" : "e253fa77-eca5-4e66-8b54-4dfce1608e5d",
        "body" : "I think it might be helpful here to provide a description in words of what is in the file and how it is organized.\r\n\r\nThis is aimed at researchers and people not very experienced with Python, so understanding the problem and the data will be very helpful so that they can follow the reasoning for choosing, and understanding, the programming techniques that follow.\r\n\r\nPerhaps something like\r\n\r\n> The data file contains data of different types and is organized as follows.\r\n>\r\n> The first row is a header line that (mostly) describes the data in each column that follow in the rows below, and beginning in the fourth column, the header is the date of the observation.\r\n>\r\n> The second through seventh row contain summary data that is of a different type than that which we are going to examine, so we will need to exclude that from the data with which we will work.\r\n>\r\n> The numerical data we wish to work with begins at column 4, row 8, and extends from there to the rightmost column and the lowermost row.\r\n\r\nwould be relatively short but add to fuller understanding of why you are doing what follows?\r\n",
        "createdAt" : "2020-04-27T12:24:27Z",
        "updatedAt" : "2020-06-24T17:39:05Z",
        "lastEditedBy" : "e253fa77-eca5-4e66-8b54-4dfce1608e5d",
        "tags" : [
        ]
      },
      {
        "id" : "4a0f6c32-5868-44b1-a33e-b80393956079",
        "parentId" : "69e8d14e-be11-4fff-8acb-a582da64ea2e",
        "authorId" : "3dfefa71-8cc3-4b12-b820-eddb864c3569",
        "body" : "Good point, thanks for the suggestion! I'll update it.",
        "createdAt" : "2020-04-27T12:28:11Z",
        "updatedAt" : "2020-06-24T17:39:05Z",
        "lastEditedBy" : "3dfefa71-8cc3-4b12-b820-eddb864c3569",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3e760d374c36850b8d2e942928250b78d163e64",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +114,118 @@  from there to the rightmost column and the lowermost row.\n\nLet's explore the data inside this file for the first 14 days of records. To\ngather data from the ``.csv`` file, we will use the :func:`numpy.genfromtxt`\nfunction, making sure we select only the columns with actual numbers instead of"
  },
  {
    "id" : "ca073bd9-c5a3-4c15-8b56-f53e662ac161",
    "prId" : 15791,
    "prUrl" : "https://github.com/numpy/numpy/pull/15791#pullrequestreview-412029581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "169c9cb9-e1e4-4d98-8e40-e74ee3b868bb",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I think you should make these all rST headings so that they can be linked to.\r\n\r\nThat would look something like:\r\n\r\n```suggestion\r\nWhen can they be useful?\r\n========================\r\n```",
        "createdAt" : "2020-05-08T14:42:10Z",
        "updatedAt" : "2020-06-24T17:39:05Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "6f580c40-9b45-46b4-9e75-d8edd6ad479c",
        "parentId" : "169c9cb9-e1e4-4d98-8e40-e74ee3b868bb",
        "authorId" : "3dfefa71-8cc3-4b12-b820-eddb864c3569",
        "body" : "This was a point made in my other tutorial (tutorial-svd) where I had done all headings and it was requested that I remove them because they were all showing in a global toc somewhere. ",
        "createdAt" : "2020-05-14T17:26:05Z",
        "updatedAt" : "2020-06-24T17:39:05Z",
        "lastEditedBy" : "3dfefa71-8cc3-4b12-b820-eddb864c3569",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3e760d374c36850b8d2e942928250b78d163e64",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +64,68 @@  in order to return a standard :class:`numpy.ndarray`.\n\n**When can they be useful?**\n\nThere are a few situations where masked arrays can be more useful than just"
  },
  {
    "id" : "cf1c6282-6132-4635-8167-6bd7002f51f6",
    "prId" : 15791,
    "prUrl" : "https://github.com/numpy/numpy/pull/15791#pullrequestreview-412007700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b379904-6688-430f-8a90-a8b55164a82a",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "One more option would be to use the `jupyter-execute` directive from `jupyter_sphinx`, which works in almost the same way as `ipython`, but also:\r\n* lets you have multiple lines in a single cell, avoiding the need to suppress this output\r\n* lets you download a complete script at the end\r\n\r\nI don't feel strongly about that, but had a play with it today for a different project, and found it quite neat.",
        "createdAt" : "2020-05-08T18:38:30Z",
        "updatedAt" : "2020-06-24T17:39:05Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "2be8dbcd-86b0-4819-b1b4-578a0f24f60b",
        "parentId" : "0b379904-6688-430f-8a90-a8b55164a82a",
        "authorId" : "3dfefa71-8cc3-4b12-b820-eddb864c3569",
        "body" : "Nice to know, I'll leave this one as is for now but I'll definitely have a look at that. ",
        "createdAt" : "2020-05-14T17:01:57Z",
        "updatedAt" : "2020-06-24T17:39:05Z",
        "lastEditedBy" : "3dfefa71-8cc3-4b12-b820-eddb864c3569",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3e760d374c36850b8d2e942928250b78d163e64",
    "line" : 176,
    "diffHunk" : "@@ -1,1 +174,178 @@   necessary to use the command ``plt.show()`` to show the image window. Note\n   also that we use a semicolon at the end of a line to suppress its output, but\n   this is optional.\n\nThe graph has a strange shape from January 24th to February 1st. It would be"
  }
]