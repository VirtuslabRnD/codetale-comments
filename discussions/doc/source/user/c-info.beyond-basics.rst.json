[
  {
    "id" : "e6606825-a67a-4eb0-acb9-abfafe4b3f0a",
    "prId" : 8836,
    "prUrl" : "https://github.com/numpy/numpy/pull/8836#pullrequestreview-29052090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "246e6e3a-8117-4657-9cd4-7cea5c3401c6",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Does `PyArrayMultiObject *` work just fine here then? The issue is specifically with intersphinx and not `:c:type:`somepointer *` in general?",
        "createdAt" : "2017-03-25T17:16:00Z",
        "updatedAt" : "2017-03-27T23:31:16Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "abee4e53-0b05-4fbe-9ea3-e840adfc3d8a",
        "parentId" : "246e6e3a-8117-4657-9cd4-7cea5c3401c6",
        "authorId" : "4b0602db-f9ac-4b54-b200-2e79d0cfb7c3",
        "body" : "Haha! That's funny because there is no `PyArrayMultiObject` defined so any link (with or without `*`) couldn't work. ðŸ˜„ \r\n\r\nHowever from my understanding `:c:type::`-declared variables can have the `*` and link correctly. See https://docs.scipy.org/doc/numpy/reference/c-api.array.html#data-type-checking for working `PyArrayObject *`-link.",
        "createdAt" : "2017-03-25T17:31:23Z",
        "updatedAt" : "2017-03-27T23:31:16Z",
        "lastEditedBy" : "4b0602db-f9ac-4b54-b200-2e79d0cfb7c3",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b0e3aa11ac5ae7b16ae6c2d72bb5624d3c124bc",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +173,177 @@incrementing is automatically performed by\n:c:func:`PyArray_MultiIter_NEXT` ( ``obj`` ) macro (which can handle a\nmultiterator ``obj`` as either a :c:type:`PyArrayMultiObject *` or a\n:c:type:`PyObject *<PyObject>`). The data from input number ``i`` is available using\n:c:func:`PyArray_MultiIter_DATA` ( ``obj``, ``i`` ) and the total (broadcasted)"
  }
]