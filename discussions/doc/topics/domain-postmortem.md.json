[
  {
    "id" : "cf0c4992-bc5c-42f6-b40d-3d74992613d7",
    "prId" : 6159,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "324b0aa7-66bc-41ef-96cc-8a2b40c502e1",
        "parentId" : null,
        "authorId" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "body" : "A code sample here would do _wonders_ to explain this to people considering domains.\n",
        "createdAt" : "2016-04-12T10:58:41Z",
        "updatedAt" : "2016-04-15T21:12:41Z",
        "lastEditedBy" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "tags" : [
        ]
      },
      {
        "id" : "807b597c-0683-4af8-886e-e095bbffb00e",
        "parentId" : "324b0aa7-66bc-41ef-96cc-8a2b40c502e1",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "added.\n",
        "createdAt" : "2016-04-14T06:50:27Z",
        "updatedAt" : "2016-04-15T21:12:41Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a74fc9776d825115849997f4adacb46f4303494",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +9,13 @@future that couldn't be observed by the thrower. Allowing a module author to\nintercept the exceptions of unrelated code in a different module. Preventing\nthe originator of the code from knowing about its own exceptions.\n\nHere's an example of how one indirectly linked modules can affect another:"
  },
  {
    "id" : "d68294d0-caba-4907-a8e6-29415f8ba617",
    "prId" : 6159,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f33392a7-8f33-4c10-816c-40e9d792baa0",
        "parentId" : null,
        "authorId" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "body" : "A code sample here would also do _wonders_ to explain this. Aside from that both examples are very good.\n",
        "createdAt" : "2016-04-12T10:59:37Z",
        "updatedAt" : "2016-04-15T21:12:41Z",
        "lastEditedBy" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "tags" : [
        ]
      },
      {
        "id" : "3e80f1fe-64df-4042-9ca3-0283fdacf49e",
        "parentId" : "f33392a7-8f33-4c10-816c-40e9d792baa0",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "added.\n",
        "createdAt" : "2016-04-14T06:50:32Z",
        "updatedAt" : "2016-04-15T21:12:41Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a74fc9776d825115849997f4adacb46f4303494",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +44,48 @@and one of them doesn't include an error handler the creator of the domain will\nsuddenly be catching unexpected exceptions, and the thrower's exception will go\nunnoticed by the author.\n\nThe following is a simple example of how a missing `'error'` handler allows"
  },
  {
    "id" : "4f8199f9-1b34-4164-8778-1b663a014cfc",
    "prId" : 6159,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d691b4e-c084-4036-b390-45df6b922f60",
        "parentId" : null,
        "authorId" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "body" : "For what it's worth, most complaints I've seen about deprecating domains are about context and not error handling. \n",
        "createdAt" : "2016-04-12T11:06:58Z",
        "updatedAt" : "2016-04-15T21:12:41Z",
        "lastEditedBy" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "tags" : [
        ]
      },
      {
        "id" : "680add2a-f9b1-4a25-9a55-2e6acb8fed2f",
        "parentId" : "6d691b4e-c084-4036-b390-45df6b922f60",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "are you referring to users using domains as a type of continuation local storage?\n",
        "createdAt" : "2016-04-12T17:01:23Z",
        "updatedAt" : "2016-04-15T21:12:41Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      },
      {
        "id" : "0ff5ffc7-ced7-425a-85ea-c85714d00a86",
        "parentId" : "6d691b4e-c084-4036-b390-45df6b922f60",
        "authorId" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "body" : "Yes, very often people ask in StackOverflow for storage for the duration of a request. They complain about having to pass parameters to 6-7 functions.\n\nIn my opinion passing the parameters around a-la-dependency-injection is a much better and safer idea than 'request/continuation/\"thread\" local storage'  - but I'm just pointing out that people do that. That's just StackOverflow though, maybe it's a lot less common in the wild.\n",
        "createdAt" : "2016-04-12T17:56:28Z",
        "updatedAt" : "2016-04-15T21:12:41Z",
        "lastEditedBy" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "tags" : [
        ]
      },
      {
        "id" : "2393f4e0-714f-4f4b-8335-68e1d4e9ff1e",
        "parentId" : "6d691b4e-c084-4036-b390-45df6b922f60",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "Thanks for clarifying. I know it's being used, but only by users. Haven't come across a module that uses it yet (though I also haven't looked very hard). I'll be happy to make a note of it. Think I made a note of it, but was mostly just cumbersome than anything. e.g. if another module did the same within your async branch then the domains would stack and `process.domain` might not have the information you were looking for.\n",
        "createdAt" : "2016-04-12T18:33:19Z",
        "updatedAt" : "2016-04-15T21:12:41Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      },
      {
        "id" : "26b2b06b-908e-42b4-bc54-11531bacef1a",
        "parentId" : "6d691b4e-c084-4036-b390-45df6b922f60",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "section added for this topic.\n",
        "createdAt" : "2016-04-14T06:50:46Z",
        "updatedAt" : "2016-04-15T21:12:41Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a74fc9776d825115849997f4adacb46f4303494",
    "line" : 174,
    "diffHunk" : "@@ -1,1 +172,176 @@the potentially useful ability to propagate data with the domain is easily\ncountered, in this example, by passing the needed resources as a function\nargument.\n\nOne problem domains perpetuated was the supposed simplicity of being able to"
  }
]