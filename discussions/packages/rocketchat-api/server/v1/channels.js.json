[
  {
    "id" : "622424ab-50c4-4365-bd48-1bb8ecd8a7b5",
    "prId" : 10224,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/10224#pullrequestreview-108503481",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "450ffa8c-be3a-44fc-a263-241ced4dd160",
        "parentId" : null,
        "authorId" : "6c9985ad-b768-4be0-bf3e-d076a90fb435",
        "body" : "Shouldn't the query be sorted desc? Otherwise I guess the results will not be sorted in desc overall ðŸ¤” \r\n\r\nI haven't tested, just reading the code...",
        "createdAt" : "2018-03-31T21:42:06Z",
        "updatedAt" : "2018-03-31T21:42:07Z",
        "lastEditedBy" : "6c9985ad-b768-4be0-bf3e-d076a90fb435",
        "tags" : [
        ]
      }
    ],
    "commit" : "bad29b2963e51602e50a2dc3a1dc3de213b5d39c",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +495,499 @@\t\tconst shouldBeOrderedDesc = Match.test(sort, Object) && Match.test(sort.username, Number) && sort.username === -1;\n\n\t\tlet members = RocketChat.models.Rooms.processQueryOptionsOnResult(Array.from(findResult.usernames).sort(), {\n\t\t\tskip: offset,\n\t\t\tlimit: count"
  },
  {
    "id" : "03b638f3-8906-4f6f-a6d2-6b0ebdcd0a04",
    "prId" : 9424,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/9424#pullrequestreview-93705475",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6c08e5c-05dc-4a4f-9b14-b677c4e2fd95",
        "parentId" : null,
        "authorId" : "beb0c9ad-a917-4bb6-948e-12669fdc6784",
        "body" : "Is it safe to just blindly pass query through?",
        "createdAt" : "2018-01-22T21:49:47Z",
        "updatedAt" : "2018-01-27T15:32:05Z",
        "lastEditedBy" : "beb0c9ad-a917-4bb6-948e-12669fdc6784",
        "tags" : [
        ]
      },
      {
        "id" : "208ec34c-d5a4-4c75-9e64-fd783546bf01",
        "parentId" : "e6c08e5c-05dc-4a4f-9b14-b677c4e2fd95",
        "authorId" : "97008387-ed37-4abe-bd0a-d59f54ba177a",
        "body" : "@geekgonecrazy it's not exactly passing the query blindly. The function `parseJsonQuery` handles several cases and line 410 ensures that the calling user is only able to query their own...although I say that without trying it. @xbolshe what happens whenever someone passes the query with a nested property like the one the string `u._id` is doing? For example, `{ \"u\": { \"_id\": \"other_users_id\" } }`?",
        "createdAt" : "2018-01-22T22:01:33Z",
        "updatedAt" : "2018-01-27T15:32:05Z",
        "lastEditedBy" : "97008387-ed37-4abe-bd0a-d59f54ba177a",
        "tags" : [
        ]
      },
      {
        "id" : "332e313e-2b60-4030-8cfa-83c87b173e6f",
        "parentId" : "e6c08e5c-05dc-4a4f-9b14-b677c4e2fd95",
        "authorId" : "ebe9e2ca-9b01-4959-8f04-31c7719a2e85",
        "body" : "@graywolf336   One string and nested string will have different actions as described here: https://stackoverflow.com/questions/16002659/how-to-query-nested-objects  \r\nBecase \"u\" has several fields inside, only nested \"_id\" will find no records at all:\r\n\r\n![default](https://user-images.githubusercontent.com/10796236/35251187-19f58046-ffeb-11e7-82bb-94971aa9a4f4.png)\r\n\r\nBut one string provides a records selection:\r\n\r\n![default](https://user-images.githubusercontent.com/10796236/35251219-3f43f350-ffeb-11e7-9bed-074b83163f36.png)\r\n\r\nSo, need to use all fields nested inside \"u\" like shown below:\r\n\r\n![default](https://user-images.githubusercontent.com/10796236/35251313-b7e0ba5a-ffeb-11e7-825d-d35db7ed0801.png)\r\n\r\nProviding 2 different values for one field like \"u._id\" will cause a search of no records:\r\n\r\n![default](https://user-images.githubusercontent.com/10796236/35251389-09c37790-ffec-11e7-962a-ce7c78d56e61.png)\r\n\r\nAnswering on your question, one field cannot be equal at the same time to 2 different values. \r\n\r\nIf a value will be duplicated like shown below, a search will be performed:\r\n\r\n![default](https://user-images.githubusercontent.com/10796236/35251588-f46bf4c0-ffec-11e7-87d5-19ae3dad31f8.png)\r\n\r\nSo, only records belongs to this.userId will be searched for channels.list.joined.\r\nI have tried to inherit constraints like this.userId applied before my changes.\r\n\r\n\r\n",
        "createdAt" : "2018-01-23T00:35:00Z",
        "updatedAt" : "2018-01-27T15:32:05Z",
        "lastEditedBy" : "ebe9e2ca-9b01-4959-8f04-31c7719a2e85",
        "tags" : [
        ]
      },
      {
        "id" : "4c4a26b5-fcf8-487e-8fc2-39e85c0813ff",
        "parentId" : "e6c08e5c-05dc-4a4f-9b14-b677c4e2fd95",
        "authorId" : "ebe9e2ca-9b01-4959-8f04-31c7719a2e85",
        "body" : "BTW: the last constraint's value overwrites the previous one:\r\n![default](https://user-images.githubusercontent.com/10796236/35252151-1c3eebb2-fff0-11e7-9955-56a32698e396.png)\r\n\r\n![default](https://user-images.githubusercontent.com/10796236/35252168-2a290294-fff0-11e7-90fc-76658628a636.png)\r\n\r\nSo, 'u._id': this.userId shall be after 'query' as it's done.",
        "createdAt" : "2018-01-23T00:51:03Z",
        "updatedAt" : "2018-01-27T15:32:05Z",
        "lastEditedBy" : "ebe9e2ca-9b01-4959-8f04-31c7719a2e85",
        "tags" : [
        ]
      },
      {
        "id" : "09cd5958-d9cb-42e0-8776-858e82f5f176",
        "parentId" : "e6c08e5c-05dc-4a4f-9b14-b677c4e2fd95",
        "authorId" : "97008387-ed37-4abe-bd0a-d59f54ba177a",
        "body" : "Thanks for looking into it in more depth! :+1: ",
        "createdAt" : "2018-02-02T18:07:25Z",
        "updatedAt" : "2018-02-02T18:07:25Z",
        "lastEditedBy" : "97008387-ed37-4abe-bd0a-d59f54ba177a",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f4da73c573eca135a4f2f2504da0b251a00edd2",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +411,415 @@\t\t});\n\n\t\tlet rooms = _.pluck(RocketChat.models.Subscriptions.find(ourQuery).fetch(), '_room');\n\t\tconst totalCount = rooms.length;\n"
  },
  {
    "id" : "83ce7aaf-b1ca-4549-ab43-5ec3639dcae5",
    "prId" : 5502,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/5502#pullrequestreview-20804067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38cbb285-a936-4476-b1eb-7ca2bee04e6d",
        "parentId" : null,
        "authorId" : "97008387-ed37-4abe-bd0a-d59f54ba177a",
        "body" : "Can you add this to the `groups` as well? And if you're up for it, create the documentation on this over on our docs? https://github.com/RocketChat/Rocket.Chat.Docs/tree/master/6.%20Developer%20Guides/REST%20API",
        "createdAt" : "2017-01-16T18:41:34Z",
        "updatedAt" : "2017-02-08T16:34:27Z",
        "lastEditedBy" : "97008387-ed37-4abe-bd0a-d59f54ba177a",
        "tags" : [
        ]
      },
      {
        "id" : "4bb9e0d2-9f38-4a4c-ba0d-51fdc9c8a569",
        "parentId" : "38cbb285-a936-4476-b1eb-7ca2bee04e6d",
        "authorId" : "6b2de464-07b6-478f-bdd0-b8707d59c1c1",
        "body" : "Done",
        "createdAt" : "2017-02-08T16:32:04Z",
        "updatedAt" : "2017-02-08T16:34:27Z",
        "lastEditedBy" : "6b2de464-07b6-478f-bdd0-b8707d59c1c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "a43564de0e11d296417ee67636b992f3e40dbdc3",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +375,379 @@});\n\nRocketChat.API.v1.addRoute('channels.online', { authRequired: true }, {\n\tget: function() {\n\t\tconst { query } = this.parseJsonQuery();"
  },
  {
    "id" : "c3d7439c-79a0-40bd-a7f8-d301ee399040",
    "prId" : 5411,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/5411#pullrequestreview-15914470",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e3c3b13-d253-42bb-90c7-7fc7b6ccceb5",
        "parentId" : null,
        "authorId" : "6b2de464-07b6-478f-bdd0-b8707d59c1c1",
        "body" : "This is strange, we can improve this query. Maybe we need to fix the integration add method to always save `channel` as an array and create a migration to fix all existent data.",
        "createdAt" : "2017-01-10T13:29:56Z",
        "updatedAt" : "2017-01-10T19:03:40Z",
        "lastEditedBy" : "6b2de464-07b6-478f-bdd0-b8707d59c1c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "3f4536158aea817a0407a2216d9d9b159abbee00",
    "line" : null,
    "diffHunk" : "@@ -1,1 +189,193 @@\t\t\t\t$in: [ourQuery.channel, 'all_public_channels']\n\t\t\t};\n\t\t}\n\n\t\tconst { offset, count } = this.getPaginationItems();"
  }
]