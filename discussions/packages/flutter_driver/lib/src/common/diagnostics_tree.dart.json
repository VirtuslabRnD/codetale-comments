[
  {
    "id" : "8ef0b243-f4dd-40de-9b42-f89e66be12d6",
    "prId" : 34440,
    "prUrl" : "https://github.com/flutter/flutter/pull/34440#pullrequestreview-250611025",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45b76f73-bdc3-4646-8f6c-e0032dde3951",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Says that it defaults to zero, but it looks like it can be null above?",
        "createdAt" : "2019-06-14T23:01:21Z",
        "updatedAt" : "2019-06-18T22:59:31Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "86fdc5e6-0b80-4026-8b5a-97a7408681b9",
        "parentId" : "45b76f73-bdc3-4646-8f6c-e0032dde3951",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "That null handling as a left-over from something else I tried. I am going to remove it and add a non-null assert.",
        "createdAt" : "2019-06-17T16:39:19Z",
        "updatedAt" : "2019-06-18T22:59:31Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "19ceaa3eed030f515b4e1d3d8c0ad112b8a47298",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +42,46 @@  /// How many levels of children to include in the JSON result.\n  ///\n  /// Defaults to zero, which will only return the [DiagnosticsNode] information\n  /// of the object identified by [finder].\n  final int subtreeDepth;"
  },
  {
    "id" : "27397cb0-2fe8-48c6-af4b-9d58e195c831",
    "prId" : 34440,
    "prUrl" : "https://github.com/flutter/flutter/pull/34440#pullrequestreview-250611025",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c085e69e-0da5-4b48-b956-d94fd6cf60ad",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "NPE if `subtreeDepth` is null",
        "createdAt" : "2019-06-14T23:01:54Z",
        "updatedAt" : "2019-06-18T22:59:31Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "e40f0f83-f639-4ea5-ab1a-8d14f0bd0611",
        "parentId" : "c085e69e-0da5-4b48-b956-d94fd6cf60ad",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Calling toString on null is actually perfectly legal: https://dartpad.dartlang.org/be63aa1861c7e7c1dccfbd159121dba0 :)",
        "createdAt" : "2019-06-17T16:38:47Z",
        "updatedAt" : "2019-06-18T22:59:31Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "19ceaa3eed030f515b4e1d3d8c0ad112b8a47298",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +54,58 @@  @override\n  Map<String, String> serialize() => super.serialize()..addAll(<String, String>{\n    'subtreeDepth': subtreeDepth.toString(),\n    'includeProperties': includeProperties.toString(),\n    'diagnosticsType': _diagnosticsTypeIndex.toSimpleName(diagnosticsType),"
  },
  {
    "id" : "73252b37-a956-4860-964f-0c30f1319444",
    "prId" : 67155,
    "prUrl" : "https://github.com/flutter/flutter/pull/67155#pullrequestreview-501422857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5fe3cb1-21e5-47ef-bc85-afaa31fe73b3",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Not `Object?`?",
        "createdAt" : "2020-10-02T20:08:15Z",
        "updatedAt" : "2020-10-05T22:33:09Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "88b0f473-5821-42e7-a6ae-e6a8a065e113",
        "parentId" : "e5fe3cb1-21e5-47ef-bc85-afaa31fe73b3",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "The return type of the method on result is defined as:\r\n\r\n```\r\n /// Serializes this message to a JSON map.\r\n  Map<String, dynamic> toJson();\r\n```",
        "createdAt" : "2020-10-02T20:11:14Z",
        "updatedAt" : "2020-10-05T22:33:09Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "dec09a37-402d-4940-a661-34e749e0f8d3",
        "parentId" : "e5fe3cb1-21e5-47ef-bc85-afaa31fe73b3",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "FWIW, I would lean towards moving from `dynamic` to `Object?` everywhere rather than the other way around, but that's something we can worry about in another PR.",
        "createdAt" : "2020-10-02T20:19:08Z",
        "updatedAt" : "2020-10-05T22:33:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8cf8fe445462d20a65c7ad3a0fd0599adf24d93",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +70,74 @@  /// The JSON encoded [DiagnosticsNode] tree requested by the\n  /// [GetDiagnosticsTree] command.\n  final Map<String, dynamic> json;\n\n  @override"
  }
]