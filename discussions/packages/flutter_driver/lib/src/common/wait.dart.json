[
  {
    "id" : "7d747885-58f9-4545-a5f7-e1ff2a9ad716",
    "prId" : 37736,
    "prUrl" : "https://github.com/flutter/flutter/pull/37736#pullrequestreview-272270531",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b78bd0fa-ba74-469b-a006-00ee23410f49",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "why not always transfer an empty array instead of special casing this?",
        "createdAt" : "2019-08-07T17:54:52Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "9a53c83d-22f7-45e5-8342-6b10b02f6f17",
        "parentId" : "b78bd0fa-ba74-469b-a006-00ee23410f49",
        "authorId" : "191b853a-2a89-4c2f-ad5d-09a244d276dc",
        "body" : "I want to be a bit defensive as we cannot assume that the string to be deserialized is always serialized by this class. And a CombinedCondition with no 'conditions' seems reasonable.",
        "createdAt" : "2019-08-07T22:58:06Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "191b853a-2a89-4c2f-ad5d-09a244d276dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "36adaf7da2d2733eabf156156ce7b5cfe68f69f9",
    "line" : 264,
    "diffHunk" : "@@ -1,1 +262,266 @@    if (jsonMap['conditionName'] != 'CombinedCondition')\n      throw SerializationException('Error occurred during deserializing the CombinedCondition JSON string: $jsonMap');\n    if (jsonMap['conditions'] == null) {\n      return const CombinedCondition(<WaitCondition>[]);\n    }"
  },
  {
    "id" : "dd6ed4b4-8a42-4959-b3ff-6f8eb33c69ea",
    "prId" : 37736,
    "prUrl" : "https://github.com/flutter/flutter/pull/37736#pullrequestreview-273945371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1a54a29-e81e-4ce3-a658-392750190422",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Should this be the default impl in the base class?",
        "createdAt" : "2019-08-09T16:43:21Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "423cc1f9-5b5c-4688-a281-119043451f9f",
        "parentId" : "c1a54a29-e81e-4ce3-a658-392750190422",
        "authorId" : "191b853a-2a89-4c2f-ad5d-09a244d276dc",
        "body" : "Not really. If you look at the newly added `FirstFrameRasterizedCondition`, they are quite different.",
        "createdAt" : "2019-08-10T00:33:57Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "191b853a-2a89-4c2f-ad5d-09a244d276dc",
        "tags" : [
        ]
      },
      {
        "id" : "147754c7-7a51-4a87-9581-f3ecfaca4d97",
        "parentId" : "c1a54a29-e81e-4ce3-a658-392750190422",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I'd still argue that the default is to wait until the next frame if the condition is currently unmet. FirstFrameRasterizedCondition can still override that to provide a custom impl",
        "createdAt" : "2019-08-12T17:07:41Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "c8940d3d-d691-465a-b2c5-c918bb800a21",
        "parentId" : "c1a54a29-e81e-4ce3-a658-392750190422",
        "authorId" : "191b853a-2a89-4c2f-ad5d-09a244d276dc",
        "body" : "Discussed offline, and kept it as is. Since the `condition` itself is unknown in the base class, we do not have the knowledge of whether the condition and the new frame rendering is relevant. They are relevant for noTransientCallbacks, or noPendingFrame, but they are not for other conditions like checks for pending platform channel messages, Timers, etc.",
        "createdAt" : "2019-08-12T20:55:32Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "191b853a-2a89-4c2f-ad5d-09a244d276dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "36adaf7da2d2733eabf156156ce7b5cfe68f69f9",
    "line" : 164,
    "diffHunk" : "@@ -1,1 +162,166 @@\n  @override\n  Future<void> wait() async {\n    while (!condition) {\n      await SchedulerBinding.instance.endOfFrame;"
  },
  {
    "id" : "f1e1e068-838b-48b8-8c06-c30fa0e8ac0e",
    "prId" : 37736,
    "prUrl" : "https://github.com/flutter/flutter/pull/37736#pullrequestreview-273825798",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1723b94-954e-49ef-a36d-49808c90b9a4",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe move this assert to the constructor once? E.g. ensure there that all conditions are non-null?",
        "createdAt" : "2019-08-09T16:50:19Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "809dc159-9d2e-4688-b611-c126be53b324",
        "parentId" : "e1723b94-954e-49ef-a36d-49808c90b9a4",
        "authorId" : "191b853a-2a89-4c2f-ad5d-09a244d276dc",
        "body" : "`const CombinedCondition(this.conditions) : assert(conditions != null), assert(conditions.every((WaitCondition condition) => condition != null));` complains about \"Error: Method invocation is not a constant expression.\" unless I remove the `const` keyword before the constructor.\r\n\r\nAny suggestions?\r\n",
        "createdAt" : "2019-08-09T21:49:53Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "191b853a-2a89-4c2f-ad5d-09a244d276dc",
        "tags" : [
        ]
      },
      {
        "id" : "0276060f-3e74-475f-981d-b46e7e65a048",
        "parentId" : "e1723b94-954e-49ef-a36d-49808c90b9a4",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Ah yeah. Looks like my suggestion will not work.",
        "createdAt" : "2019-08-12T17:10:18Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "36adaf7da2d2733eabf156156ce7b5cfe68f69f9",
    "line" : 287,
    "diffHunk" : "@@ -1,1 +285,289 @@    while (!condition) {\n      for (WaitCondition condition in conditions) {\n        assert (condition != null);\n        await condition.wait();\n      }"
  },
  {
    "id" : "2ff6e9e2-bce9-4a12-846b-48d4ddfe02af",
    "prId" : 37736,
    "prUrl" : "https://github.com/flutter/flutter/pull/37736#pullrequestreview-273825798",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2ed577b-1fa1-47a9-a4ba-be1ef787b3c5",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "The depreciation should also be reflected in the doc comment to ensure it shows up in the documentation.",
        "createdAt" : "2019-08-12T17:04:31Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "36adaf7da2d2733eabf156156ce7b5cfe68f69f9",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +46,50 @@/// WaitForCondition noTransientCallbacks = WaitForCondition(NoTransientCallbacksCondition());\n/// ```\n@Deprecated('This command has been deprecated in favor of WaitForCondition. '\n            'Use WaitForCondition command with NoTransientCallbacksCondition.')\nclass WaitUntilNoTransientCallbacks extends Command {"
  },
  {
    "id" : "fa5a7c19-4422-460b-9589-8fb0815b5413",
    "prId" : 37736,
    "prUrl" : "https://github.com/flutter/flutter/pull/37736#pullrequestreview-273825798",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e0ce753-c8a0-445a-9c05-6c8b4bb0667c",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Same here.",
        "createdAt" : "2019-08-12T17:04:38Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "36adaf7da2d2733eabf156156ce7b5cfe68f69f9",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +68,72 @@/// WaitForCondition noPendingFrame = WaitForCondition(NoPendingFrameCondition());\n/// ```\n@Deprecated('This command has been deprecated in favor of WaitForCondition. '\n            'Use WaitForCondition command with NoPendingFrameCondition.')\nclass WaitUntilNoPendingFrame extends Command {"
  },
  {
    "id" : "46169285-cb20-413e-b357-db73032d65d8",
    "prId" : 37736,
    "prUrl" : "https://github.com/flutter/flutter/pull/37736#pullrequestreview-273825798",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4d6f50d-9f84-4d0d-8d3c-fcbdc0376589",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "And here",
        "createdAt" : "2019-08-12T17:04:52Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "36adaf7da2d2733eabf156156ce7b5cfe68f69f9",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +97,101 @@/// WaitForCondition firstFrameRasterized = WaitForCondition(FirstFrameRasterizedCondition());\n/// ```\n@Deprecated('This command has been deprecated in favor of WaitForCondition. '\n            'Use WaitForCondition command with FirstFrameRasterizedCondition.')\nclass WaitUntilFirstFrameRasterized extends Command {"
  },
  {
    "id" : "1a6ac1ba-9216-4ea6-b52c-3d5e9ab804d8",
    "prId" : 37736,
    "prUrl" : "https://github.com/flutter/flutter/pull/37736#pullrequestreview-275220478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4a7e6dd-cc5f-41f9-ab38-73f70c6e89ed",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "`assert(json != null)`\r\n\r\nAnd add something to the doc string indicating that `json` must not be null.",
        "createdAt" : "2019-08-14T23:13:40Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "dc5fe756-547d-4ba0-a00e-05bd8743e01d",
        "parentId" : "b4a7e6dd-cc5f-41f9-ab38-73f70c6e89ed",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Alternatively, have it be `if (json == null || json['conditionName']...`",
        "createdAt" : "2019-08-14T23:14:13Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "37055e20-d474-48bc-9206-bb1b9a8f090a",
        "parentId" : "b4a7e6dd-cc5f-41f9-ab38-73f70c6e89ed",
        "authorId" : "191b853a-2a89-4c2f-ad5d-09a244d276dc",
        "body" : "Done.",
        "createdAt" : "2019-08-15T00:54:17Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "191b853a-2a89-4c2f-ad5d-09a244d276dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "36adaf7da2d2733eabf156156ce7b5cfe68f69f9",
    "line" : 155,
    "diffHunk" : "@@ -1,1 +153,157 @@  factory NoTransientCallbacksCondition.deserialize(Map<String, dynamic> json) {\n    assert(json != null);\n    if (json['conditionName'] != 'NoTransientCallbacksCondition')\n      throw SerializationException('Error occurred during deserializing the NoTransientCallbacksCondition JSON string: $json');\n    return const NoTransientCallbacksCondition();"
  },
  {
    "id" : "3f10ede9-9c52-4d12-9d9c-8d2c6d50f644",
    "prId" : 37736,
    "prUrl" : "https://github.com/flutter/flutter/pull/37736#pullrequestreview-275197951",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "688b18c7-1182-4323-b0ec-0c533f58ebbb",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Ditto here - check that json is not null before accessing",
        "createdAt" : "2019-08-14T23:14:39Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "36adaf7da2d2733eabf156156ce7b5cfe68f69f9",
    "line" : 190,
    "diffHunk" : "@@ -1,1 +188,192 @@  factory NoPendingFrameCondition.deserialize(Map<String, dynamic> json) {\n    assert(json != null);\n    if (json['conditionName'] != 'NoPendingFrameCondition')\n      throw SerializationException('Error occurred during deserializing the NoPendingFrameCondition JSON string: $json');\n    return const NoPendingFrameCondition();"
  },
  {
    "id" : "e42abb1d-2112-435a-b96f-7a3137da0643",
    "prId" : 37736,
    "prUrl" : "https://github.com/flutter/flutter/pull/37736#pullrequestreview-275197951",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26da413d-cbb2-456e-bfc2-e0d6b184cd0c",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Ditto",
        "createdAt" : "2019-08-14T23:15:03Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "36adaf7da2d2733eabf156156ce7b5cfe68f69f9",
    "line" : 225,
    "diffHunk" : "@@ -1,1 +223,227 @@  factory FirstFrameRasterizedCondition.deserialize(Map<String, dynamic> json) {\n    assert(json != null);\n    if (json['conditionName'] != 'FirstFrameRasterizedCondition')\n      throw SerializationException('Error occurred during deserializing the FirstFrameRasterizedCondition JSON string: $json');\n    return const FirstFrameRasterizedCondition();"
  },
  {
    "id" : "d288d32a-e263-4488-ba21-edad695f6c91",
    "prId" : 37736,
    "prUrl" : "https://github.com/flutter/flutter/pull/37736#pullrequestreview-275197951",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5c4160a-72ec-49b4-afd4-ac44dcc04cf5",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Ditto",
        "createdAt" : "2019-08-14T23:15:14Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "36adaf7da2d2733eabf156156ce7b5cfe68f69f9",
    "line" : 262,
    "diffHunk" : "@@ -1,1 +260,264 @@  factory CombinedCondition.deserialize(Map<String, dynamic> jsonMap) {\n    assert(jsonMap != null);\n    if (jsonMap['conditionName'] != 'CombinedCondition')\n      throw SerializationException('Error occurred during deserializing the CombinedCondition JSON string: $jsonMap');\n    if (jsonMap['conditions'] == null) {"
  },
  {
    "id" : "d14997b8-c11c-43bd-879a-019980efd8d3",
    "prId" : 37736,
    "prUrl" : "https://github.com/flutter/flutter/pull/37736#pullrequestreview-275522091",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39a8283f-96c4-4b16-91ce-65739c96a6a9",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Document that condition must not be null.",
        "createdAt" : "2019-08-15T16:04:27Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "36adaf7da2d2733eabf156156ce7b5cfe68f69f9",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@/// A Flutter Driver command that waits until a given [condition] is satisfied.\nclass WaitForCondition extends Command {\n  /// Creates a command that waits for the given [condition] is met.\n  ///\n  /// The [condition] argument must not be null."
  },
  {
    "id" : "14eaabb6-daa1-48ca-a619-71d84189f08d",
    "prId" : 37736,
    "prUrl" : "https://github.com/flutter/flutter/pull/37736#pullrequestreview-276081592",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b417b83f-a652-4156-8afe-e8030d39a7d9",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I believe elsewhere in flutter we use the phrase \"must not be null\". We should stick with that.",
        "createdAt" : "2019-08-15T16:05:44Z",
        "updatedAt" : "2019-08-16T17:42:31Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "e5025c7f-1f41-438d-942b-6edf41fa0cc9",
        "parentId" : "b417b83f-a652-4156-8afe-e8030d39a7d9",
        "authorId" : "191b853a-2a89-4c2f-ad5d-09a244d276dc",
        "body" : "I've seen both... but I updated all the usage here to \"must not be null\".",
        "createdAt" : "2019-08-16T17:43:09Z",
        "updatedAt" : "2019-08-16T17:43:10Z",
        "lastEditedBy" : "191b853a-2a89-4c2f-ad5d-09a244d276dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "36adaf7da2d2733eabf156156ce7b5cfe68f69f9",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@  /// Deserializes this command from the value generated by [serialize].\n  ///\n  /// The [json] argument cannot be null.\n  WaitForCondition.deserialize(Map<String, String> json)\n      : assert(json != null),"
  }
]