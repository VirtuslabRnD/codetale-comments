[
  {
    "id" : "11e1fcb3-7fd7-4194-a6b6-c5749fc49071",
    "prId" : 18881,
    "prUrl" : "https://github.com/flutter/flutter/pull/18881#pullrequestreview-133384045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b877a87e-0a63-48fb-9722-1286bacfa486",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should probably throw in this case, since it means the test failed badly.",
        "createdAt" : "2018-06-29T18:28:02Z",
        "updatedAt" : "2018-06-29T18:28:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "5d6c319c-57a6-46b3-bebc-f2c0c868b006",
        "parentId" : "b877a87e-0a63-48fb-9722-1286bacfa486",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "The `if empty return null` logic was originally added to `_averageInMillis` and `_maxInMillis` by @yjbanov in https://github.com/flutter/flutter/pull/7190 and further edited by @abarth in https://github.com/flutter/flutter/pull/8113 . If we throw here, maybe we need to also throw in those places for consistency. What's your opinion @yjbanov @abarth?",
        "createdAt" : "2018-06-29T18:41:45Z",
        "updatedAt" : "2018-06-29T18:41:45Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      },
      {
        "id" : "019419b6-4da1-4efc-a1a4-3b66c39345e9",
        "parentId" : "b877a87e-0a63-48fb-9722-1286bacfa486",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Yeah, I think the test script will fail with a cryptic error message if we return `null` here. Might as well throw proactively with something more descriptive.",
        "createdAt" : "2018-06-29T21:32:35Z",
        "updatedAt" : "2018-06-29T21:32:35Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "931e6da6729adb7b4ffe4ed040668de4bd0f60d4",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +171,175 @@  double _percentileInMillis(Iterable<Duration> durations, double percentile) {\n    if (durations.isEmpty)\n      return null;\n\n    assert(percentile >= 0.0 && percentile <= 100.0);"
  },
  {
    "id" : "9301950d-69af-4b2e-9622-4ca35adc6d66",
    "prId" : 53422,
    "prUrl" : "https://github.com/flutter/flutter/pull/53422#pullrequestreview-383097891",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59779309-1eaa-45f2-b82c-7d4f671983cb",
        "parentId" : null,
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Nit: formerly known as the GPU thread",
        "createdAt" : "2020-03-27T18:20:03Z",
        "updatedAt" : "2020-04-02T17:49:14Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ace1997eeb5280bffd8a647390192bb71f2c04d8",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +76,80 @@\n  /// The number of frames that missed the [kBuildBudget] on the raster thread\n  /// and therefore are in the danger of missing frames.\n  int computeMissedFrameRasterizerBudgetCount([ Duration frameBuildBudget = kBuildBudget ]) => _extractGpuRasterizerDrawDurations()\n      .where((Duration duration) => duration > kBuildBudget)"
  },
  {
    "id" : "7e986a4c-3517-43af-93a5-12575626db64",
    "prId" : 54218,
    "prUrl" : "https://github.com/flutter/flutter/pull/54218#pullrequestreview-391549361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "adcded42-62b7-4da6-80a0-2d75c79a9d47",
        "parentId" : null,
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "You'll also need to add these keys to https://github.com/flutter/flutter/blob/19ff596979e407c484a32f4071420fca4f4c885f/dev/devicelab/lib/tasks/perf_tests.dart#L275 so they can show up in our cocoon dashboard.",
        "createdAt" : "2020-04-08T22:49:26Z",
        "updatedAt" : "2020-04-10T17:36:33Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      },
      {
        "id" : "0db5469d-dffc-447a-bdb4-993d7f8a9d37",
        "parentId" : "adcded42-62b7-4da6-80a0-2d75c79a9d47",
        "authorId" : "9d0a4821-6e3a-4276-827f-88b855cd3ae1",
        "body" : "Done!",
        "createdAt" : "2020-04-10T16:59:51Z",
        "updatedAt" : "2020-04-10T17:36:33Z",
        "lastEditedBy" : "9d0a4821-6e3a-4276-827f-88b855cd3ae1",
        "tags" : [
        ]
      }
    ],
    "commit" : "24571691bf62fc7171506665ec6b27ed4f1e1c89",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +110,114 @@        .map<int>((Duration duration) => duration.inMicroseconds)\n        .toList(),\n      'average_vsync_transitions_missed': sceneDisplayLagSummarizer.computeAverageVsyncTransitionsMissed(),\n      '90th_percentile_vsync_transitions_missed': sceneDisplayLagSummarizer.computePercentileVsyncTransitionsMissed(90.0),\n      '99th_percentile_vsync_transitions_missed': sceneDisplayLagSummarizer.computePercentileVsyncTransitionsMissed(99.0)"
  },
  {
    "id" : "25ed8fad-bcfb-4096-81e0-60bd8667dd03",
    "prId" : 54220,
    "prUrl" : "https://github.com/flutter/flutter/pull/54220#pullrequestreview-390277379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "149c2590-6f71-485f-987e-e88bad3a9f8d",
        "parentId" : null,
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "While the code below fixes the case with rogue events that don't come in pairs, it doesn't seem to fix the case where `_extractNamedEvents` didn't return events in time order? Maybe we need to add a `sort` somewhere, and probably assert that events are in order in the `for` loop below.",
        "createdAt" : "2020-04-07T22:18:36Z",
        "updatedAt" : "2020-04-07T22:18:42Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      },
      {
        "id" : "47caae23-562a-4cfc-940f-f4e1b1838b03",
        "parentId" : "149c2590-6f71-485f-987e-e88bad3a9f8d",
        "authorId" : "9d0a4821-6e3a-4276-827f-88b855cd3ae1",
        "body" : "I think it should be the responsibility of the timeline exporter to sort the events prior to producing the json meant for consumption by `chrome://tracing`. I reached out to the team, will respond here with what I hear. I think this is a good change independent of that.\r\n\r\n> typo \"not\" should be \"now\"\r\n\r\nYes, it's now üëç ",
        "createdAt" : "2020-04-08T17:19:45Z",
        "updatedAt" : "2020-04-08T17:19:46Z",
        "lastEditedBy" : "9d0a4821-6e3a-4276-827f-88b855cd3ae1",
        "tags" : [
        ]
      },
      {
        "id" : "168677c9-29d1-47ae-936b-ec8548e87f47",
        "parentId" : "149c2590-6f71-485f-987e-e88bad3a9f8d",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "I see. Since it's their responsibility to sort, we only need to do some `assert` check to make sure that they fulfill the responsibility :)",
        "createdAt" : "2020-04-08T17:49:11Z",
        "updatedAt" : "2020-04-08T17:49:12Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      },
      {
        "id" : "2be6208d-57f1-4b2f-8e66-af533fb2da52",
        "parentId" : "149c2590-6f71-485f-987e-e88bad3a9f8d",
        "authorId" : "9d0a4821-6e3a-4276-827f-88b855cd3ae1",
        "body" : "Given that this assert could currently fail. I've filed https://github.com/flutter/flutter/issues/54300 to enable this once the observatory team has enforced this invariant.",
        "createdAt" : "2020-04-08T19:44:00Z",
        "updatedAt" : "2020-04-08T19:44:01Z",
        "lastEditedBy" : "9d0a4821-6e3a-4276-827f-88b855cd3ae1",
        "tags" : [
        ]
      }
    ],
    "commit" : "315358e28cc86a62f54e13abd390aee17a297886",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +151,155 @@  ) {\n    final List<Duration> result = <Duration>[];\n    final List<TimelineEvent> events = _extractNamedEvents(name);\n\n    // Timeline does not guarantee that the first event is the \"begin\" event."
  }
]