[
  {
    "id" : "ec036de6-a04e-457e-96bd-18cf91e79a5e",
    "prId" : 3165,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f218929-fe15-455a-99a2-2672fe57ba4a",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Is this something we expect most developers to use? It's not immediately clear to me what a command called `skia` would do. Most of our other commands are verbs. Perhaps we could orient this towards what the developer will be using it for? `diagnose-graphics`, `drawing-debug`, `render`?\n",
        "createdAt" : "2016-04-07T01:46:40Z",
        "updatedAt" : "2016-04-07T01:46:40Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "d3ba7a7a-091d-41f1-b543-19bc247ea46e",
        "parentId" : "0f218929-fe15-455a-99a2-2672fe57ba4a",
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "This is a feature intended for engine debugging and performance analysis, and I doubt it would be of interest to most app developers.\n\nHow do you think it should be categorized?  I don't know if there will be any more Skia-related commands, so maybe we should create a top level command for miscellaneous debugging utilities?\n",
        "createdAt" : "2016-04-07T16:45:40Z",
        "updatedAt" : "2016-04-07T16:45:40Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      },
      {
        "id" : "18c71620-e7bb-4f88-bce5-acb2a7d0e5fd",
        "parentId" : "0f218929-fe15-455a-99a2-2672fe57ba4a",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "You don't think end-developers will be interested in looking at this information to figure out how to optimize the performance of their apps?\n",
        "createdAt" : "2016-04-07T16:54:53Z",
        "updatedAt" : "2016-04-07T16:54:53Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "fbc1b6b2-8bb2-4215-8cc3-0b0076e91276",
        "parentId" : "0f218929-fe15-455a-99a2-2672fe57ba4a",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Well, I don't know what it does, so I can't really say. But I think we should introduce it to them more in the context of what they're trying to do at the time. So instead of `flutter skia` perhaps `flutter diagnose-drawing` or `flutter diagnose skia`.\n",
        "createdAt" : "2016-04-07T17:16:18Z",
        "updatedAt" : "2016-04-07T17:16:18Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "262d5995ea5c6e87490f6e9d33d76962306dd5fe",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +68,72 @@    ..addCommand(new RunMojoCommand(hidden: !verboseHelp))\n    ..addCommand(new ScreenshotCommand())\n    ..addCommand(new SkiaCommand())\n    ..addCommand(new StopCommand())\n    ..addCommand(new TestCommand())"
  },
  {
    "id" : "521d9670-be22-4ca5-8b5d-0230fa31bb79",
    "prId" : 3523,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "602ec75d-a956-4207-a616-062803acc967",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "add a comment here explaining the hoops we're jumping through, in case someone looks at this code and cargo-cults it...\n",
        "createdAt" : "2016-04-26T21:11:42Z",
        "updatedAt" : "2016-04-26T23:14:55Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "88905c34-d486-4915-a5ca-b7c7dc145f01",
        "parentId" : "602ec75d-a956-4207-a616-062803acc967",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "kk\n",
        "createdAt" : "2016-04-26T22:58:49Z",
        "updatedAt" : "2016-04-26T23:14:55Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "3371c712f5558e14b24f4955259807d5435081bf",
    "line" : null,
    "diffHunk" : "@@ -1,1 +186,190 @@\n  // Give the task / timer queue one cycle through before we hard exit.\n  await Timer.run(() {\n    exit(code);\n  });"
  },
  {
    "id" : "deeeec3e-34c0-4e0c-9b7a-6c3289385d42",
    "prId" : 4052,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c6a738f-aee8-40e0-8c10-2468951a4b0a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "cc @devoncarew for the flutter_tools changes\n",
        "createdAt" : "2016-05-19T19:53:43Z",
        "updatedAt" : "2016-05-20T21:00:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "242b03e672045b2cd67d5fe6a847170b4eeca08a",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +180,184 @@\n  // Write any buffered output.\n  logger.flush();\n\n  // Give the task / timer queue one cycle through before we hard exit."
  },
  {
    "id" : "8f5261d8-e3bb-4141-a193-565fe48d90bb",
    "prId" : 5911,
    "prUrl" : "https://github.com/flutter/flutter/pull/5911#pullrequestreview-440033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a17b4e8-8595-4b40-b41a-65f255c162b5",
        "parentId" : null,
        "authorId" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "body" : "@leafpetersen, @jmesserly: needing this seems odd.  Shouldn't inferencing make it unnecessary?\n",
        "createdAt" : "2016-09-16T20:53:51Z",
        "updatedAt" : "2016-09-16T22:57:08Z",
        "lastEditedBy" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "tags" : [
        ]
      },
      {
        "id" : "9304df8c-2fdb-49f6-aefd-24512fad2c3d",
        "parentId" : "6a17b4e8-8595-4b40-b41a-65f255c162b5",
        "authorId" : "6fe75f2e-2c3d-4d6a-800e-03a595a5d5aa",
        "body" : "Possibly because the callback has no return, and hence we can't infer a return type for it?  That would make the callback typed to return `Future<dynamic>`, which would essentially override the context type of `Future<Null>`.  We've been considering ways to prefer the context type when available, but not sure what we're going to do there yet.\n",
        "createdAt" : "2016-09-16T21:43:41Z",
        "updatedAt" : "2016-09-16T22:57:08Z",
        "lastEditedBy" : "6fe75f2e-2c3d-4d6a-800e-03a595a5d5aa",
        "tags" : [
        ]
      },
      {
        "id" : "11ad5f69-233e-42b2-aac3-d5b5052ad21c",
        "parentId" : "6a17b4e8-8595-4b40-b41a-65f255c162b5",
        "authorId" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "body" : "Cool.  Thanks.  @Hixie : you OK with this as is?\n",
        "createdAt" : "2016-09-16T22:55:52Z",
        "updatedAt" : "2016-09-16T22:57:08Z",
        "lastEditedBy" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a9804e1b4ed36ecebe4a78eee730b40f4cb7d6d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +86,90 @@    ..addCommand(new UpgradeCommand());\n\n  return Chain.capture/*<Future<Null>>*/(() async {\n    // Initialize globals.\n    context[Logger] = new StdoutLogger();"
  },
  {
    "id" : "39f1b6cd-421e-4f1b-b167-6caed352d342",
    "prId" : 6817,
    "prUrl" : "https://github.com/flutter/flutter/pull/6817#pullrequestreview-8425367",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36c751d2-104c-4160-ba1b-2fa1b7a30314",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "While we're here, let's remove the \"if it persists\". We want all crash reports, not just the bad ones.\n",
        "createdAt" : "2016-11-11T19:50:50Z",
        "updatedAt" : "2016-11-11T19:50:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "187dc9c6-2ca1-42e9-88eb-71162ee87058",
        "parentId" : "36c751d2-104c-4160-ba1b-2fa1b7a30314",
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "Fair enough. I'll do that in the next PR.\n",
        "createdAt" : "2016-11-14T03:08:23Z",
        "updatedAt" : "2016-11-14T03:08:23Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      },
      {
        "id" : "4c258554-48f8-44e3-8e25-0e28f2913a3f",
        "parentId" : "36c751d2-104c-4160-ba1b-2fa1b7a30314",
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "Done in https://github.com/flutter/flutter/pull/6838/commits/0a56cf591e2f5ef32ce6202f3134caef191a49a7 which is part of https://github.com/flutter/flutter/pull/6838\n",
        "createdAt" : "2016-11-14T16:00:02Z",
        "updatedAt" : "2016-11-14T16:00:02Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdc1b585be141f195a75607987b1fc39852a882c",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +113,117 @@      }\n      if (error.isUnusual) {\n        stderr.writeln('If this problem persists, please report the problem at');\n        stderr.writeln('https://github.com/flutter/flutter/issues/new');\n      }"
  }
]