[
  {
    "id" : "ec036de6-a04e-457e-96bd-18cf91e79a5e",
    "prId" : 3165,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f218929-fe15-455a-99a2-2672fe57ba4a",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Is this something we expect most developers to use? It's not immediately clear to me what a command called `skia` would do. Most of our other commands are verbs. Perhaps we could orient this towards what the developer will be using it for? `diagnose-graphics`, `drawing-debug`, `render`?\n",
        "createdAt" : "2016-04-07T01:46:40Z",
        "updatedAt" : "2016-04-07T01:46:40Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "d3ba7a7a-091d-41f1-b543-19bc247ea46e",
        "parentId" : "0f218929-fe15-455a-99a2-2672fe57ba4a",
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "This is a feature intended for engine debugging and performance analysis, and I doubt it would be of interest to most app developers.\n\nHow do you think it should be categorized?  I don't know if there will be any more Skia-related commands, so maybe we should create a top level command for miscellaneous debugging utilities?\n",
        "createdAt" : "2016-04-07T16:45:40Z",
        "updatedAt" : "2016-04-07T16:45:40Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      },
      {
        "id" : "18c71620-e7bb-4f88-bce5-acb2a7d0e5fd",
        "parentId" : "0f218929-fe15-455a-99a2-2672fe57ba4a",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "You don't think end-developers will be interested in looking at this information to figure out how to optimize the performance of their apps?\n",
        "createdAt" : "2016-04-07T16:54:53Z",
        "updatedAt" : "2016-04-07T16:54:53Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "fbc1b6b2-8bb2-4215-8cc3-0b0076e91276",
        "parentId" : "0f218929-fe15-455a-99a2-2672fe57ba4a",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Well, I don't know what it does, so I can't really say. But I think we should introduce it to them more in the context of what they're trying to do at the time. So instead of `flutter skia` perhaps `flutter diagnose-drawing` or `flutter diagnose skia`.\n",
        "createdAt" : "2016-04-07T17:16:18Z",
        "updatedAt" : "2016-04-07T17:16:18Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "262d5995ea5c6e87490f6e9d33d76962306dd5fe",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +68,72 @@    ..addCommand(new RunMojoCommand(hidden: !verboseHelp))\n    ..addCommand(new ScreenshotCommand())\n    ..addCommand(new SkiaCommand())\n    ..addCommand(new StopCommand())\n    ..addCommand(new TestCommand())"
  },
  {
    "id" : "521d9670-be22-4ca5-8b5d-0230fa31bb79",
    "prId" : 3523,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "602ec75d-a956-4207-a616-062803acc967",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "add a comment here explaining the hoops we're jumping through, in case someone looks at this code and cargo-cults it...\n",
        "createdAt" : "2016-04-26T21:11:42Z",
        "updatedAt" : "2016-04-26T23:14:55Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "88905c34-d486-4915-a5ca-b7c7dc145f01",
        "parentId" : "602ec75d-a956-4207-a616-062803acc967",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "kk\n",
        "createdAt" : "2016-04-26T22:58:49Z",
        "updatedAt" : "2016-04-26T23:14:55Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "3371c712f5558e14b24f4955259807d5435081bf",
    "line" : null,
    "diffHunk" : "@@ -1,1 +186,190 @@\n  // Give the task / timer queue one cycle through before we hard exit.\n  await Timer.run(() {\n    exit(code);\n  });"
  },
  {
    "id" : "deeeec3e-34c0-4e0c-9b7a-6c3289385d42",
    "prId" : 4052,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c6a738f-aee8-40e0-8c10-2468951a4b0a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "cc @devoncarew for the flutter_tools changes\n",
        "createdAt" : "2016-05-19T19:53:43Z",
        "updatedAt" : "2016-05-20T21:00:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "242b03e672045b2cd67d5fe6a847170b4eeca08a",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +180,184 @@\n  // Write any buffered output.\n  logger.flush();\n\n  // Give the task / timer queue one cycle through before we hard exit."
  },
  {
    "id" : "8f5261d8-e3bb-4141-a193-565fe48d90bb",
    "prId" : 5911,
    "prUrl" : "https://github.com/flutter/flutter/pull/5911#pullrequestreview-440033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a17b4e8-8595-4b40-b41a-65f255c162b5",
        "parentId" : null,
        "authorId" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "body" : "@leafpetersen, @jmesserly: needing this seems odd.  Shouldn't inferencing make it unnecessary?\n",
        "createdAt" : "2016-09-16T20:53:51Z",
        "updatedAt" : "2016-09-16T22:57:08Z",
        "lastEditedBy" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "tags" : [
        ]
      },
      {
        "id" : "9304df8c-2fdb-49f6-aefd-24512fad2c3d",
        "parentId" : "6a17b4e8-8595-4b40-b41a-65f255c162b5",
        "authorId" : "6fe75f2e-2c3d-4d6a-800e-03a595a5d5aa",
        "body" : "Possibly because the callback has no return, and hence we can't infer a return type for it?  That would make the callback typed to return `Future<dynamic>`, which would essentially override the context type of `Future<Null>`.  We've been considering ways to prefer the context type when available, but not sure what we're going to do there yet.\n",
        "createdAt" : "2016-09-16T21:43:41Z",
        "updatedAt" : "2016-09-16T22:57:08Z",
        "lastEditedBy" : "6fe75f2e-2c3d-4d6a-800e-03a595a5d5aa",
        "tags" : [
        ]
      },
      {
        "id" : "11ad5f69-233e-42b2-aac3-d5b5052ad21c",
        "parentId" : "6a17b4e8-8595-4b40-b41a-65f255c162b5",
        "authorId" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "body" : "Cool.  Thanks.  @Hixie : you OK with this as is?\n",
        "createdAt" : "2016-09-16T22:55:52Z",
        "updatedAt" : "2016-09-16T22:57:08Z",
        "lastEditedBy" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a9804e1b4ed36ecebe4a78eee730b40f4cb7d6d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +86,90 @@    ..addCommand(new UpgradeCommand());\n\n  return Chain.capture/*<Future<Null>>*/(() async {\n    // Initialize globals.\n    context[Logger] = new StdoutLogger();"
  },
  {
    "id" : "39f1b6cd-421e-4f1b-b167-6caed352d342",
    "prId" : 6817,
    "prUrl" : "https://github.com/flutter/flutter/pull/6817#pullrequestreview-8425367",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36c751d2-104c-4160-ba1b-2fa1b7a30314",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "While we're here, let's remove the \"if it persists\". We want all crash reports, not just the bad ones.\n",
        "createdAt" : "2016-11-11T19:50:50Z",
        "updatedAt" : "2016-11-11T19:50:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "187dc9c6-2ca1-42e9-88eb-71162ee87058",
        "parentId" : "36c751d2-104c-4160-ba1b-2fa1b7a30314",
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "Fair enough. I'll do that in the next PR.\n",
        "createdAt" : "2016-11-14T03:08:23Z",
        "updatedAt" : "2016-11-14T03:08:23Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      },
      {
        "id" : "4c258554-48f8-44e3-8e25-0e28f2913a3f",
        "parentId" : "36c751d2-104c-4160-ba1b-2fa1b7a30314",
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "Done in https://github.com/flutter/flutter/pull/6838/commits/0a56cf591e2f5ef32ce6202f3134caef191a49a7 which is part of https://github.com/flutter/flutter/pull/6838\n",
        "createdAt" : "2016-11-14T16:00:02Z",
        "updatedAt" : "2016-11-14T16:00:02Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdc1b585be141f195a75607987b1fc39852a882c",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +113,117 @@      }\n      if (error.isUnusual) {\n        stderr.writeln('If this problem persists, please report the problem at');\n        stderr.writeln('https://github.com/flutter/flutter/issues/new');\n      }"
  },
  {
    "id" : "728747b1-c604-425d-a4b6-048834300e00",
    "prId" : 8518,
    "prUrl" : "https://github.com/flutter/flutter/pull/8518#pullrequestreview-25097650",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4060cab-9f0e-43ba-a6c5-1e8292d7886e",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Future<int>",
        "createdAt" : "2017-03-03T23:04:54Z",
        "updatedAt" : "2017-03-04T00:46:47Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "e1ba3db7-c38d-4500-ad47-477ed20c69f0",
        "parentId" : "c4060cab-9f0e-43ba-a6c5-1e8292d7886e",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "The exit code is reported via the completer (because we also need to reports in the error case), so this is still just `Future<Null>`.",
        "createdAt" : "2017-03-04T00:17:26Z",
        "updatedAt" : "2017-03-04T00:46:47Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "cde8512cd2ad55ab678c0c2c66682cb6e20ce03f",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +142,146 @@\n    Completer<int> runCompleter = new Completer<int>();\n    Chain.capture<Future<Null>>(() async {\n      await runner.run(args);\n      await _exit(0);"
  },
  {
    "id" : "ba8e0775-5406-4da8-92d7-8e5baedf0ff8",
    "prId" : 8779,
    "prUrl" : "https://github.com/flutter/flutter/pull/8779#pullrequestreview-27253411",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16694897-e46a-4ad0-8b84-e6c722bd1e7b",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Why initialize this here versus just lazily initializing it when we first call `watch()`?",
        "createdAt" : "2017-03-14T23:52:29Z",
        "updatedAt" : "2017-03-15T18:02:10Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "319b47a7-3c59-485a-8e22-e7bdffcfb20c",
        "parentId" : "16694897-e46a-4ad0-8b84-e6c722bd1e7b",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "It's important that the default signal handler gets registered even if nobody watches this event. Otherwise the work-around for not breaking the windows console when Ctrl+C is pressed (the whole point of this exercise) wouldn't work.",
        "createdAt" : "2017-03-15T00:18:31Z",
        "updatedAt" : "2017-03-15T18:02:10Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "61891708-6291-4e05-b774-ae024328ac0c",
        "parentId" : "16694897-e46a-4ad0-8b84-e6c722bd1e7b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Ok. We should definitely add a comment that explains this in detail, and ideally a test that verifies this behaviour, because otherwise I guarantee that some well-meaning soul (e.g. me in six months) will \"optimise\" this.",
        "createdAt" : "2017-03-16T04:29:38Z",
        "updatedAt" : "2017-03-16T04:29:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d20c077f9a52f865ca87461c6eabbb9c0dc016a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +60,64 @@/// This function is intended to be used from the `flutter` command line tool.\nFuture<Null> main(List<String> args) async {\n  SigintProcessSignal.instance.init();\n  final bool verbose = args.contains('-v') || args.contains('--verbose');\n  final bool help = args.contains('-h') || args.contains('--help') ||"
  },
  {
    "id" : "593a74e7-9239-4c66-8789-f6e70e24f1f0",
    "prId" : 8803,
    "prUrl" : "https://github.com/flutter/flutter/pull/8803#pullrequestreview-27211498",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "786b0c45-380b-4003-a287-aa41b42c824d",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "/cc @yjbanov who had occasion to change this code to work this way just last week.",
        "createdAt" : "2017-03-15T22:05:26Z",
        "updatedAt" : "2017-03-15T22:29:23Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "2efb18ec-c723-47ed-ab5b-09718c980161",
        "parentId" : "786b0c45-380b-4003-a287-aa41b42c824d",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Actually, n/m -- he didn't add the `Chain.capture()`, and this is still semantically the same",
        "createdAt" : "2017-03-15T22:08:11Z",
        "updatedAt" : "2017-03-15T22:29:23Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a50be7e135454f40401f50e27884477dd10af8a3",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +138,142 @@    await intl.findSystemLocale();\n\n    try {\n      await runner.run(args);\n      await _exit(0);"
  },
  {
    "id" : "81435d48-c148-4808-baab-e847b232567b",
    "prId" : 51500,
    "prUrl" : "https://github.com/flutter/flutter/pull/51500#pullrequestreview-365782823",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fcd4d9ac-03b3-4035-8b40-4d24e284c179",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Is this a breaking change?",
        "createdAt" : "2020-02-26T21:31:36Z",
        "updatedAt" : "2020-02-27T16:03:06Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "050e641f-447e-406b-8043-f75bc48d8c92",
        "parentId" : "fcd4d9ac-03b3-4035-8b40-4d24e284c179",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I'm going to verify with a frob run, but I don't think this is actually used in google3",
        "createdAt" : "2020-02-26T23:07:45Z",
        "updatedAt" : "2020-02-27T16:03:06Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "c5b98983-e528-4935-a476-5c73c3644c93",
        "parentId" : "fcd4d9ac-03b3-4035-8b40-4d24e284c179",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "https://test.corp.google.com/ui#id=OCL:297591207:BASE:297593068:1582817828420:5932081a\r\n\r\nShould be safe to land",
        "createdAt" : "2020-02-27T16:02:30Z",
        "updatedAt" : "2020-02-27T16:03:06Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c55af89c7e89314a8f8d100f8b9be2bc6f7a6746",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +116,120 @@       WebRunnerFactory: () => DwdsWebRunnerFactory(),\n       // The mustache dependency is different in google3\n       TemplateRenderer: () => const MustacheTemplateRenderer(),\n     });\n}"
  },
  {
    "id" : "8e955c13-b9c6-4a50-900a-cad52dbf782e",
    "prId" : 57448,
    "prUrl" : "https://github.com/flutter/flutter/pull/57448#pullrequestreview-418598595",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "faa69729-6675-4510-8de4-24377e43d8e8",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Making creation lazy, so that we can setup the zone and inject feature flags/platforms to commands directly. This will let us avoid globals in the commands classes, and also gate commands like `build web` behind the right flag",
        "createdAt" : "2020-05-26T19:13:38Z",
        "updatedAt" : "2020-06-04T17:27:23Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "eab712d37fb7f94a0af98ea2ec2e5f223af19825",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +68,72 @@  final bool daemon = args.contains('daemon');\n\n  await runner.run(args, () => <FlutterCommand>[\n    AnalyzeCommand(\n      verboseHelp: verboseHelp,"
  },
  {
    "id" : "e48747c9-c455-4c3e-bfdc-a85c3ca40ae2",
    "prId" : 67493,
    "prUrl" : "https://github.com/flutter/flutter/pull/67493#pullrequestreview-505166225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12778a6e-cf11-4b58-a99d-db5fb300dced",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Should we limit this to windows?",
        "createdAt" : "2020-10-07T17:18:26Z",
        "updatedAt" : "2020-10-07T17:21:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "0441155e-c383-4c07-9abd-4318469a99ca",
        "parentId" : "12778a6e-cf11-4b58-a99d-db5fb300dced",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I'm not sure TBH. I don't think we lose anything by supporting it on macOS and linux, and it would otherwise be an uncommon query.",
        "createdAt" : "2020-10-07T17:23:18Z",
        "updatedAt" : "2020-10-07T17:23:18Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "49f138a8-9386-4ea2-8217-3d540c9c65d4",
        "parentId" : "12778a6e-cf11-4b58-a99d-db5fb300dced",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I have decided this will be an easter egg for our Linux/macOS users",
        "createdAt" : "2020-10-08T21:06:54Z",
        "updatedAt" : "2020-10-08T21:06:55Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b75e2fcb55f6e5afca48b5b4b38e327550b677a1",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +62,66 @@  final bool veryVerbose = args.contains('-vv');\n  final bool verbose = args.contains('-v') || args.contains('--verbose') || veryVerbose;\n  // Support the -? Powershell help idiom.\n  final int powershellHelpIndex = args.indexOf('-?');\n  if (powershellHelpIndex != -1) {"
  },
  {
    "id" : "6d29782c-62ab-4ab0-92ed-c41cc8dc5aff",
    "prId" : 68451,
    "prUrl" : "https://github.com/flutter/flutter/pull/68451#pullrequestreview-513111738",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ccc5c37-4ac4-4dec-b8ea-363fd82cce43",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Aren't these null at this point?",
        "createdAt" : "2020-10-19T21:41:12Z",
        "updatedAt" : "2020-10-21T18:47:49Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "24958387-6ead-43ff-aa07-7be0b7046a36",
        "parentId" : "4ccc5c37-4ac4-4dec-b8ea-363fd82cce43",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "No, the only interfaces that can't be injected at this point are those that depend on Cache/Artifacts/Version since those are still constructed when the first FlutterCommand is executed",
        "createdAt" : "2020-10-20T20:35:24Z",
        "updatedAt" : "2020-10-21T18:47:49Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "41771f067f703094320dbe8f80747c3a926f0718",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +98,102 @@    DriveCommand(verboseHelp: verboseHelp,\n      fileSystem: globals.fs,\n      logger: globals.logger,\n    ),\n    EmulatorsCommand(),"
  },
  {
    "id" : "72dfaa08-abb9-4f0b-8e07-3854feed41bf",
    "prId" : 86116,
    "prUrl" : "https://github.com/flutter/flutter/pull/86116#pullrequestreview-703340970",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20b4d8ef-ec80-44d2-8f5b-dde0c52795c1",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this won't work. Consider for example \"flutter create --machine --org run attach\".",
        "createdAt" : "2021-07-09T19:06:36Z",
        "updatedAt" : "2021-07-09T19:06:36Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a36bb7ba-cc75-4896-9021-1c99161c1fcb",
        "parentId" : "20b4d8ef-ec80-44d2-8f5b-dde0c52795c1",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "This is true. Also, this PR doesn't change this behavior.",
        "createdAt" : "2021-07-09T19:08:42Z",
        "updatedAt" : "2021-07-09T19:08:42Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "bbe1cdd5-22ce-4339-a7fc-2530575e5cbb",
        "parentId" : "20b4d8ef-ec80-44d2-8f5b-dde0c52795c1",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Ah right this is what I filed in https://github.com/flutter/flutter/issues/75876",
        "createdAt" : "2021-07-09T19:34:55Z",
        "updatedAt" : "2021-07-09T19:34:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "eddc62cdcb1ea49bfa41c467eecde3c8737e530d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +80,84 @@  final bool machine = args.contains('--machine');\n  final bool runMachine = (machine && args.contains('run')) ||\n                          (machine && args.contains('attach'));\n\n  // Cache.flutterRoot must be set early because other features use it (e.g."
  }
]