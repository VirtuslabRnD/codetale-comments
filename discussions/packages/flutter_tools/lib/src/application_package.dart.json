[
  {
    "id" : "3e236779-5a5a-4670-aef6-0e88289e6a0e",
    "prId" : 1969,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d64d06e1-a88b-4afc-85ec-9590219fa86c",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Is it legal to return null from a factory?\n",
        "createdAt" : "2016-02-17T20:07:34Z",
        "updatedAt" : "2016-02-19T19:49:00Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "516ecc9c-cac0-4477-b486-29ee938f9395",
        "parentId" : "d64d06e1-a88b-4afc-85ec-9590219fa86c",
        "authorId" : "5c85d36f-d476-470a-8ea7-252cdb4fb025",
        "body" : "From a factory, it should be legal. It's a tiny bit odd that factories look like constructors in Dart. So I am not sure if this is idiomatic.\n",
        "createdAt" : "2016-02-17T20:31:13Z",
        "updatedAt" : "2016-02-19T19:49:00Z",
        "lastEditedBy" : "5c85d36f-d476-470a-8ea7-252cdb4fb025",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ed4e417d03473a61c00b1c1bb9b0aae0bf5a055",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +90,94 @@  factory IOSApp.fromBuildConfiguration(BuildConfiguration config) {\n    if (getCurrentHostPlatform() != HostPlatform.mac) {\n      return null;\n    }\n"
  },
  {
    "id" : "bc0ebc3c-5dc5-4144-9893-d7d3404351ff",
    "prId" : 2093,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0256a671-4924-4d32-a126-1eef0a13b0eb",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "We generally prefer `??=` these days for this kind of thing.\n",
        "createdAt" : "2016-02-22T22:22:03Z",
        "updatedAt" : "2016-02-22T22:22:03Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a981acdc-fcf2-4b13-b0e7-2160d2e3da21",
        "parentId" : "0256a671-4924-4d32-a126-1eef0a13b0eb",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Cool, I'm still not in the habit of using all the null aware operators.\n",
        "createdAt" : "2016-02-22T22:39:45Z",
        "updatedAt" : "2016-02-22T22:39:45Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "a49e45106dbe6ebf8cefee365dcb16793c469455",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +148,152 @@        case TargetPlatform.iOSSimulator:\n          if (iOS == null)\n            iOS = new IOSApp.fromBuildConfiguration(config);\n          break;\n"
  },
  {
    "id" : "856990e0-9f6a-4fab-882b-b89a1d36d7b8",
    "prId" : 7345,
    "prUrl" : "https://github.com/flutter/flutter/pull/7345#pullrequestreview-15385814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94358ff7-813b-4448-bcf4-e3c2b39233fe",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "The class is abstract - do we need to provide an implementation here (`=> null`) - do all subclasses override this?",
        "createdAt" : "2017-01-05T20:22:46Z",
        "updatedAt" : "2017-01-10T15:07:47Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "80b03872-8900-4155-b640-129142c8b6e1",
        "parentId" : "94358ff7-813b-4448-bcf4-e3c2b39233fe",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Ah, only overridden for APKs. Perhaps make this method abstract and have all clients implement (even with `=> null` implementations)?",
        "createdAt" : "2017-01-05T20:30:43Z",
        "updatedAt" : "2017-01-10T15:07:47Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "84e48102aa0fbb2b0ad6e03bc106c20605838e94",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +28,32 @@  String get displayName => name;\n\n  String get packagePath => null;\n\n  @override"
  },
  {
    "id" : "09c05cb3-5889-4756-9997-ee20eec85584",
    "prId" : 16245,
    "prUrl" : "https://github.com/flutter/flutter/pull/16245#pullrequestreview-109522434",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad2e0a73-0e60-4f40-be67-f4c20de89892",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this used to support foo=bar and foo='bar', but not only supports foo='bar', is that intentional?",
        "createdAt" : "2018-04-04T22:15:07Z",
        "updatedAt" : "2018-04-04T22:31:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e3691c7b-24c6-4739-af76-cb361beaef8c",
        "parentId" : "ad2e0a73-0e60-4f40-be67-f4c20de89892",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "also this handles `foo='bar baz=quux'` differently than what we did before, and will find a=b in `zz=\"xx a='b' yy\"`\r\n\r\nwe should add tests for these cases to make sure they do what we want, in case someone \"fixes\" the code to be like it was before.",
        "createdAt" : "2018-04-04T22:18:17Z",
        "updatedAt" : "2018-04-04T22:31:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "defa4d50-02f8-46ba-84bd-c3269ca45765",
        "parentId" : "ad2e0a73-0e60-4f40-be67-f4c20de89892",
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "yes, this is WAI - the Android tool always surrounds the attributes that we care about with quotes",
        "createdAt" : "2018-04-04T22:20:59Z",
        "updatedAt" : "2018-04-04T22:31:29Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      },
      {
        "id" : "a61452b7-fcb8-495c-9220-5f9fd29adc6e",
        "parentId" : "ad2e0a73-0e60-4f40-be67-f4c20de89892",
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "(specifically single quotes - it will not use double quotes as in the `zz=\"xx a='b' yy\"` case)",
        "createdAt" : "2018-04-04T22:27:09Z",
        "updatedAt" : "2018-04-04T22:31:29Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b3c23a41c5fafffd89551f891c02fdab619e1c6",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +335,339 @@\n        for (Match m in keyValueRegex.allMatches(line)) {\n          entries[m.group(1)] = m.group(2);\n        }\n      }"
  }
]