[
  {
    "id" : "6957ec57-b7a1-47b5-a314-3601397c9937",
    "prId" : 4679,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c84565a6-2eb2-4773-abc1-5c0dbc88eb55",
        "parentId" : null,
        "authorId" : "29909713-5424-4233-a02b-b02672141af4",
        "body" : "My understanding was the dart vm would pick an open port if you passed --observatory-port=0, and then we had code to read said port from the logs, etc.  Maybe that won't work through our package:test integration?  Devon might know.\n",
        "createdAt" : "2016-06-22T03:48:33Z",
        "updatedAt" : "2016-06-22T03:48:33Z",
        "lastEditedBy" : "29909713-5424-4233-a02b-b02672141af4",
        "tags" : [
        ]
      },
      {
        "id" : "191506dd-4894-4768-aa19-c5f14a9fe7a1",
        "parentId" : "c84565a6-2eb2-4773-abc1-5c0dbc88eb55",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, I didn't want to mess with reading the port back from the logs.  Seemed easier to push the port number in via a command-line parameter.\n",
        "createdAt" : "2016-06-22T04:03:47Z",
        "updatedAt" : "2016-06-22T04:03:47Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "460567e0-3be2-4aad-94d3-d0d37d5aa2d4",
        "parentId" : "c84565a6-2eb2-4773-abc1-5c0dbc88eb55",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "We do have code in `os.dart` - `findAvailablePort()` - that tries to find an available local port. I'm not sure it's more reliable than the random generator below however -\n",
        "createdAt" : "2016-06-22T04:20:22Z",
        "updatedAt" : "2016-06-22T04:20:22Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "9ef94068-894b-4c00-8333-2ebb12e4e26a",
        "parentId" : "c84565a6-2eb2-4773-abc1-5c0dbc88eb55",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Done.\n",
        "createdAt" : "2016-06-22T18:01:27Z",
        "updatedAt" : "2016-06-22T18:01:27Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "7448a4e8e8bb8306bc8d7ed1f4b3b563f491eed4",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +113,117 @@''');\n\n    int observatoryPort;\n    if (CoverageCollector.instance.enabled) {\n      observatoryPort = new math.Random().nextInt(30000) + 2000;"
  },
  {
    "id" : "98fb6c05-6ea1-4f73-b843-0b10b16e5cb8",
    "prId" : 7548,
    "prUrl" : "https://github.com/flutter/flutter/pull/7548#pullrequestreview-17788433",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8f6a0fe-1e27-4f77-a366-193fe3763dc0",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "`-15`?",
        "createdAt" : "2017-01-20T17:07:01Z",
        "updatedAt" : "2017-01-20T17:07:01Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "192f37b1-b1dd-4f48-9f86-c67522472d3b",
        "parentId" : "c8f6a0fe-1e27-4f77-a366-193fe3763dc0",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "https://github.com/flutter/flutter/pull/7571",
        "createdAt" : "2017-01-20T23:54:52Z",
        "updatedAt" : "2017-01-20T23:54:53Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "17ea1802cc7b656324c5fbe209df30bd645c7ec9",
    "line" : 157,
    "diffHunk" : "@@ -1,1 +159,163 @@          final int exitCode = await process.exitCode;\n          subprocessActive = false;\n          if (!controllerSinkClosed && exitCode != -15) {\n            String message = _getErrorMessage(_getExitCodeMessage(exitCode, 'after tests finished'), testPath, shellPath);\n            controller.sink.addError(message);"
  },
  {
    "id" : "dff912b9-3981-46c9-b708-d53fe2e68a0c",
    "prId" : 10520,
    "prUrl" : "https://github.com/flutter/flutter/pull/10520#pullrequestreview-43576230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0c9ecb9-7e9d-451d-ac56-f3cb45cac2ea",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "You're no longer plumbing `collector` through",
        "createdAt" : "2017-06-06T06:56:28Z",
        "updatedAt" : "2017-06-13T19:57:47Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "96faf9ec-f78b-43e3-a696-ec33fc2d2ec8",
        "parentId" : "e0c9ecb9-7e9d-451d-ac56-f3cb45cac2ea",
        "authorId" : "81d87995-2269-496b-ac5e-155cd9fd52eb",
        "body" : "It is being plumbed through as watcher. (CoverageCollector now implements TestWatcher.)\r\n",
        "createdAt" : "2017-06-12T22:10:32Z",
        "updatedAt" : "2017-06-13T19:57:47Z",
        "lastEditedBy" : "81d87995-2269-496b-ac5e-155cd9fd52eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2af7cefbfad748b9623e95d661698bf781638784",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +68,72 @@    () => new _FlutterPlatform(\n      shellPath: shellPath,\n      watcher: watcher,\n      enableObservatory: enableObservatory,\n      startPaused: startPaused,"
  },
  {
    "id" : "f575ef94-52a3-423b-87f4-f55167c73352",
    "prId" : 14135,
    "prUrl" : "https://github.com/flutter/flutter/pull/14135#pullrequestreview-89560913",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85c6aa9d-d619-452a-bc27-be3943a0d80f",
        "parentId" : null,
        "authorId" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "body" : "also add parameter strongMode: true",
        "createdAt" : "2018-01-17T17:16:58Z",
        "updatedAt" : "2018-01-17T17:18:58Z",
        "lastEditedBy" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "tags" : [
        ]
      },
      {
        "id" : "f351fd9d-8686-4f6b-b6cd-a8c5e9bb9e07",
        "parentId" : "85c6aa9d-d619-452a-bc27-be3943a0d80f",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "The test fails in strongMode, we won't be able to confirm the flow until flutter and frontend is strong mode clean. Given that I would prefer to add strong mode separately in follow up PR.",
        "createdAt" : "2018-01-17T18:58:52Z",
        "updatedAt" : "2018-01-17T18:58:52Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "b500fa11-a39a-4db7-91d0-0b1eb1abf6dc",
        "parentId" : "85c6aa9d-d619-452a-bc27-be3943a0d80f",
        "authorId" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "body" : "Ok as discussed off line you will land this PR, follow it up with a PR to make it work on linux too and another PR to add the strong mode option.\r\nIt is important to get the strong mode option in as we want to get to the errors quickly.",
        "createdAt" : "2018-01-17T19:23:42Z",
        "updatedAt" : "2018-01-17T19:24:32Z",
        "lastEditedBy" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "728923c0dbe88f8e42c29098836daf5525a0ac6c",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +204,208 @@            sdkRoot: artifacts.getArtifactPath(Artifact.flutterPatchedSdkPath),\n            incrementalCompilerByteStorePath: '' /* not null is enough */,\n            mainPath: listenerFile.path,\n            packagesPath: PackageMap.globalPackagesPath\n          )"
  },
  {
    "id" : "f64fce34-ce5b-4209-84ac-2fcdbcd641dc",
    "prId" : 14135,
    "prUrl" : "https://github.com/flutter/flutter/pull/14135#pullrequestreview-89520932",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d30b2205-48f4-4129-8a07-4055a2ffb9a3",
        "parentId" : null,
        "authorId" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "body" : "The --strong option needs to be passed to the engine being invoked also as we will want to also test the runtime strong mode checks.",
        "createdAt" : "2018-01-17T17:18:27Z",
        "updatedAt" : "2018-01-17T17:18:58Z",
        "lastEditedBy" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "728923c0dbe88f8e42c29098836daf5525a0ac6c",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +212,216 @@      final String bundlePath = previewDart2 ? artifacts.getArtifactPath(Artifact.flutterPatchedSdkPath) : null;\n\n      final Process process = await _startProcess(\n        shellPath,\n        mainDart,"
  },
  {
    "id" : "6337e989-fe66-4043-8a26-91bc96105a03",
    "prId" : 14135,
    "prUrl" : "https://github.com/flutter/flutter/pull/14135#pullrequestreview-164473789",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98a2d82b-a342-4671-bb1a-6aa998d6357a",
        "parentId" : null,
        "authorId" : "b0e8e5f4-24fc-402d-ba63-9576e63321dc",
        "body" : "@aam Do you recall why this was needed?\r\n\r\nIt is a bit odd that we are passing the SDK path as the asset dir.",
        "createdAt" : "2018-10-11T23:41:46Z",
        "updatedAt" : "2018-10-11T23:41:47Z",
        "lastEditedBy" : "b0e8e5f4-24fc-402d-ba63-9576e63321dc",
        "tags" : [
        ]
      },
      {
        "id" : "e854b106-470d-4ae9-bd55-e5f36fa4e06b",
        "parentId" : "98a2d82b-a342-4671-bb1a-6aa998d6357a",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "I think that option is the way how bundle path(that should have platform.dill) is passed to flutter tester(per accompanying https://github.com/flutter/engine/pull/4564).",
        "createdAt" : "2018-10-12T18:24:39Z",
        "updatedAt" : "2018-10-12T18:24:40Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "c94694b2-83ad-4ba9-9afa-4cc05253ba84",
        "parentId" : "98a2d82b-a342-4671-bb1a-6aa998d6357a",
        "authorId" : "b0e8e5f4-24fc-402d-ba63-9576e63321dc",
        "body" : "This implies all assets to be used by tester needs to be put in the sdk path. That's quite odd. In platform packaging the dill files are not found in the asset directory. Would it make sense to separate these concerns and change the way the dill files are located in the tester? [probably a new flag]?",
        "createdAt" : "2018-10-13T04:43:16Z",
        "updatedAt" : "2018-10-13T04:43:16Z",
        "lastEditedBy" : "b0e8e5f4-24fc-402d-ba63-9576e63321dc",
        "tags" : [
        ]
      },
      {
        "id" : "f5b9e091-a5bc-48a4-8e16-286a42e51684",
        "parentId" : "98a2d82b-a342-4671-bb1a-6aa998d6357a",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Yeah, it does make sense.",
        "createdAt" : "2018-10-13T04:50:49Z",
        "updatedAt" : "2018-10-13T04:50:49Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "7cfe5882-43c2-4416-856d-ea55b43ecf91",
        "parentId" : "98a2d82b-a342-4671-bb1a-6aa998d6357a",
        "authorId" : "b0e8e5f4-24fc-402d-ba63-9576e63321dc",
        "body" : "@tvolkert FYI I will attempt this if you don't have any objection. The request is to change tester to locate dill files w/o needing the asset flag so we can safely remove this particular line of code in flutter_platform.dart. When we add proper asset support [a separate param to installHook?], we can add it back. If you disagree with the methodology, let me know.",
        "createdAt" : "2018-10-13T04:57:16Z",
        "updatedAt" : "2018-10-13T04:57:16Z",
        "lastEditedBy" : "b0e8e5f4-24fc-402d-ba63-9576e63321dc",
        "tags" : [
        ]
      },
      {
        "id" : "864e6df5-2f75-4b4e-8070-697cc3ac3caf",
        "parentId" : "98a2d82b-a342-4671-bb1a-6aa998d6357a",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "No objection.  I agree that a new flag to separate these things for `flutter_tester` would make sense.",
        "createdAt" : "2018-10-13T19:24:10Z",
        "updatedAt" : "2018-10-13T19:24:10Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "728923c0dbe88f8e42c29098836daf5525a0ac6c",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +515,519 @@      command.add('--ipv6');\n    if (bundlePath != null) {\n      command.add('--flutter-assets-dir=$bundlePath');\n    }\n    command.addAll(<String>["
  },
  {
    "id" : "d8eaee24-9225-4ada-b1e3-3c75630b7e05",
    "prId" : 15251,
    "prUrl" : "https://github.com/flutter/flutter/pull/15251#pullrequestreview-102090438",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af023ad5-48a3-4c66-8dd3-88c6075f94cd",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Maybe change `dillFilePath` above (and everywhere in this file) to be `precompiledDillPath`?",
        "createdAt" : "2018-03-07T20:00:33Z",
        "updatedAt" : "2018-03-07T20:45:11Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "ff4bdbcb-8178-4510-af71-abff93e561f7",
        "parentId" : "af023ad5-48a3-4c66-8dd3-88c6075f94cd",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Done",
        "createdAt" : "2018-03-07T20:45:48Z",
        "updatedAt" : "2018-03-07T20:45:48Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "d01d4ba69ccc9b8121c2aac89b2fcee83e3d6a9f",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +85,89 @@\nenum _InitialResult { crashed, timedOut, connected }\nenum _TestResult { crashed, harnessBailed, testBailed }\ntypedef Future<Null> _Finalizer();\n"
  },
  {
    "id" : "82a30fb3-32ac-4321-a37f-ef93582e9d1f",
    "prId" : 15565,
    "prUrl" : "https://github.com/flutter/flutter/pull/15565#pullrequestreview-104621972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24c13907-73bf-4af5-8bcd-280264dd426b",
        "parentId" : null,
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "What is the reason for this logic and supporting infrastructure(like suppressOutput, reportCompilerMessage, compilerMessageConsumer)? Why do we handle this error specially and suppress the rest of compiler output?",
        "createdAt" : "2018-03-16T15:45:22Z",
        "updatedAt" : "2018-03-16T17:18:09Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "ab4ba77b-dfa0-45e1-a512-d800b5d7eb04",
        "parentId" : "24c13907-73bf-4af5-8bcd-280264dd426b",
        "authorId" : "45727d35-317d-432d-b0c6-83fc042c0c8a",
        "body" : "There is a test that tests that a nice message is produced when somebody tries to do `flutter test` on a wrong file (search for 'Failed to load test harness' in the whole file to find that place).\r\n\r\nThe suppression I added just to make output. We can definitely improve this later even further. ",
        "createdAt" : "2018-03-16T15:48:44Z",
        "updatedAt" : "2018-03-16T17:18:09Z",
        "lastEditedBy" : "45727d35-317d-432d-b0c6-83fc042c0c8a",
        "tags" : [
        ]
      },
      {
        "id" : "ee1a323e-ae76-4c7f-89e6-436927e763bc",
        "parentId" : "24c13907-73bf-4af5-8bcd-280264dd426b",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "> The suppression I added just to make output.\r\n\r\nNot sure I understand. It looks like the only place we use suppressOutput(set it to true) is here when we encounter this error. With this special handling we won't need to introduce suppressOutput flag, reportCompilerMessage function, compilerMessageConsumer parameter. Am I reading it wrong?",
        "createdAt" : "2018-03-16T15:57:32Z",
        "updatedAt" : "2018-03-16T17:18:09Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "b36df76a7a2077a63df3e7125433cfad0eaf591e",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +114,118 @@        return;\n\n      if (message.startsWith('compiler message: Error: Could not resolve the package \\'test\\'')) {\n        printTrace(message);\n        printError('\\n\\nFailed to load test harness. Are you missing a dependency on flutter_test?\\n');"
  },
  {
    "id" : "317f9d03-23c0-44a1-a440-dfb1ce479927",
    "prId" : 17290,
    "prUrl" : "https://github.com/flutter/flutter/pull/17290#pullrequestreview-117685941",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05d16920-108e-44a4-8bee-b67964c0992e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i understand why you put in this ignore, but it's gonna come back and bite us.",
        "createdAt" : "2018-05-04T17:10:50Z",
        "updatedAt" : "2018-05-04T17:10:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d770a996b1d4e366155aff7caf35b26a34d3b89",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +121,125 @@  assert(updateGoldens != null);\n\n  final String websocketUrl = host.type == InternetAddressType.IP_V4 // ignore: deprecated_member_use\n      ? 'ws://${host.address}'\n      : 'ws://[${host.address}]';"
  },
  {
    "id" : "1892e800-50b3-4f6b-a154-01853c6338f2",
    "prId" : 20506,
    "prUrl" : "https://github.com/flutter/flutter/pull/20506#pullrequestreview-146162467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9f8a26c-6dd9-4197-af7c-8d580eaad805",
        "parentId" : null,
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Here and below: any reason not to use `_` for unused params? If so, we should probably document in the [style guide](https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo) wiki.",
        "createdAt" : "2018-08-13T21:55:39Z",
        "updatedAt" : "2018-08-15T21:42:45Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "d274d26b-4d33-4822-8b6f-38db62dc9465",
        "parentId" : "d9f8a26c-6dd9-4197-af7c-8d580eaad805",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "`_` doesn't say what the argument is (nor does `value` particularly in this case, but at least it's clear that it's _not_ something like \"elapsedTime\" or \"error\").\r\n\r\nThe style guides (Flutter and Dart) don't seem to suggest using `_`. (I think Flutter's used to, but that changed a while ago.)",
        "createdAt" : "2018-08-14T04:39:48Z",
        "updatedAt" : "2018-08-15T21:42:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "118779a8-5565-4924-bb9a-89613e5830cf",
        "parentId" : "d9f8a26c-6dd9-4197-af7c-8d580eaad805",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Interesting - you're right; I'd thought Effective Dart mentioned this at one point, but after a quick look, it doesn't. It's a bit of an anti-pattern for method overrides and function defs that are intended to match a typedef in any case, which limits it to lambdas with very obvious params. SGTM; thanks for clarifying.",
        "createdAt" : "2018-08-14T17:07:37Z",
        "updatedAt" : "2018-08-15T21:42:45Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "26809eca45092f25cd5fb475280d6b2d7e849fec",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +496,500 @@      final _InitialResult initialResult = await Future.any(<Future<_InitialResult>>[\n        process.exitCode.then<_InitialResult>((int exitCode) => _InitialResult.crashed),\n        timeout.future.then<_InitialResult>((void value) => _InitialResult.timedOut),\n        new Future<_InitialResult>.delayed(_kTestProcessTimeout, () => _InitialResult.timedOut),\n        gotProcessObservatoryUri.future.then<_InitialResult>((void value) {"
  },
  {
    "id" : "99829516-a45b-4000-91ae-5d1775edb258",
    "prId" : 20506,
    "prUrl" : "https://github.com/flutter/flutter/pull/20506#pullrequestreview-146166995",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41e45a6f-b1a2-41ec-afb2-390527306554",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "This condition can't hit - we're in a case statement for `_TestResult.testBailed`",
        "createdAt" : "2018-08-14T17:19:22Z",
        "updatedAt" : "2018-08-15T21:42:45Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "c3c000cc-46a9-494f-88f1-361708f9b682",
        "parentId" : "41e45a6f-b1a2-41ec-afb2-390527306554",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Oh nevermind - you took out the `break`",
        "createdAt" : "2018-08-14T17:19:44Z",
        "updatedAt" : "2018-08-15T21:42:45Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "26809eca45092f25cd5fb475280d6b2d7e849fec",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +598,602 @@            case _TestResult.harnessBailed:\n            case _TestResult.testBailed:\n              if (testResult == _TestResult.harnessBailed) {\n                printTrace('test $ourTestCount: process with pid ${process.pid} no longer needed by test harness');\n              } else {"
  },
  {
    "id" : "faa633fb-66bf-4ff9-9f4d-3f5066e022b4",
    "prId" : 31616,
    "prUrl" : "https://github.com/flutter/flutter/pull/31616#pullrequestreview-230861526",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c199c29-bfe2-4e71-89b6-fee3c6050870",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Consider adding docs for the public fields/methods.",
        "createdAt" : "2019-04-25T19:15:50Z",
        "updatedAt" : "2019-04-25T19:16:03Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "63fa6d7a-ebf5-4ba6-b166-88d50afa2d9b",
        "parentId" : "4c199c29-bfe2-4e71-89b6-fee3c6050870",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I'd like to significantly refactor this configuration so these will likely move around a bit over the next few weeks. I will ensure each field is documented once moved",
        "createdAt" : "2019-04-25T20:14:52Z",
        "updatedAt" : "2019-04-25T20:14:53Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "72bc554a9b140201d22d132e0aa3d8850cde64f1",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +384,388 @@\n/// The flutter test platform used to integrate with package:test.\nclass FlutterPlatform extends PlatformPlugin {\n  FlutterPlatform({\n    @required this.shellPath,"
  }
]