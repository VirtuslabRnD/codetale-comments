[
  {
    "id" : "0ce6c284-bbac-4d86-aea2-9202bf53537d",
    "prId" : 4679,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90dc07ef-ccb2-44eb-a2ce-36f269aefdd0",
        "parentId" : null,
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "New param in 0.7.8 is `packagesPath` (String path to .packages file)\n",
        "createdAt" : "2016-06-22T02:26:41Z",
        "updatedAt" : "2016-06-22T02:26:41Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7448a4e8e8bb8306bc8d7ed1f4b3b563f491eed4",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +64,68 @@    // TODO(abarth): Use PackageMap.globalPackagesPath once\n    // https://github.com/dart-lang/coverage/issues/100 is fixed.\n    Resolver resolver = new Resolver(packageRoot: path.absolute('packages'));\n    Formatter formater = new LcovFormatter(resolver);\n    List<String> reportOn = <String>[path.join(Directory.current.path, 'lib')];"
  },
  {
    "id" : "255b6771-d413-44b1-8980-8d4e701a7234",
    "prId" : 5208,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "781cbcd1-f0aa-468a-9ed3-20f52d89b77f",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "We put spaces inside the `{` and `}` because we're unique snowflakes.\n",
        "createdAt" : "2016-08-03T23:46:29Z",
        "updatedAt" : "2016-08-03T23:46:29Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "df2f04d5-fdc8-4868-ad51-ec5b7e905b3c",
        "parentId" : "781cbcd1-f0aa-468a-9ed3-20f52d89b77f",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "_pretty_ snowflakes. Because we're unique _pretty_ snowflakes.\n",
        "createdAt" : "2016-08-03T23:51:31Z",
        "updatedAt" : "2016-08-03T23:51:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "efe7f8e4-e6c4-4b15-a6a9-054d17c6fa0f",
        "parentId" : "781cbcd1-f0aa-468a-9ed3-20f52d89b77f",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "And in my case, apparently illiterate! Missed this comment; will send a quick patch :)\n",
        "createdAt" : "2016-08-04T01:38:12Z",
        "updatedAt" : "2016-08-04T01:38:12Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "14da31ee3c20bd1a371b94f9ebe03607452ba86d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +59,63 @@  Map<String, dynamic> _globalHitmap;\n\n  Future<String> finalizeCoverage({Formatter formatter}) async {\n    assert(enabled);\n    await finishPendingJobs();"
  },
  {
    "id" : "59205530-639b-44d0-bde2-0429a21732ec",
    "prId" : 7825,
    "prUrl" : "https://github.com/flutter/flutter/pull/7825#pullrequestreview-19915087",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e843a6e5-c71a-4292-8ecc-3168878b80f5",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this one's probably fine, assuming collect is defined to return a string->dynamic map.",
        "createdAt" : "2017-02-02T20:30:59Z",
        "updatedAt" : "2017-02-03T03:17:28Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c4697304-2099-49e2-a019-b2c81a0952fc",
        "parentId" : "e843a6e5-c71a-4292-8ecc-3168878b80f5",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "It is. I've also updated the coverage package to make it explicit that the map returned is a Map<String, dynamic>\r\nhttps://codereview.chromium.org/2670943002/",
        "createdAt" : "2017-02-02T23:10:57Z",
        "updatedAt" : "2017-02-03T03:17:28Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f0db74a09b1718c5f5e89c7b606c00e74b396fe",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +41,45 @@\n    printTrace('pid $pid (port $port): collecting coverage data...');\n    final Map<String, dynamic> data = await collect(host.address, port, false, false);\n    printTrace('pid $pid (port $port): ${ exitCode != null ? \"process terminated prematurely with exit code $exitCode; aborting\" : \"collected coverage data; merging...\" }');\n    if (exitCode != null)"
  },
  {
    "id" : "c571a57d-5f94-4bd4-b3d2-f1e574c1c2cb",
    "prId" : 30811,
    "prUrl" : "https://github.com/flutter/flutter/pull/30811#pullrequestreview-225822580",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57765e94-e45a-452a-96a8-43fd3c71f5e6",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "This method could use some comments.",
        "createdAt" : "2019-04-09T20:34:26Z",
        "updatedAt" : "2019-04-12T06:21:11Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "3634aabf-4c19-4951-ba74-cb5de91ffdc8",
        "parentId" : "57765e94-e45a-452a-96a8-43fd3c71f5e6",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Added a description and a link to the vmservice documentation which describes the format",
        "createdAt" : "2019-04-11T22:25:41Z",
        "updatedAt" : "2019-04-12T06:21:11Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "27cfc8eb5ed80acd2a25765a28215c91d68e465a",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +248,252 @@// corresponds to each token position.\n// The format of this table is described in https://github.com/dart-lang/sdk/blob/master/runtime/vm/service/service.md#script\nList<int> _lineAndColumn(int position, List<dynamic> tokenPositions) {\n  int min = 0;\n  int max = tokenPositions.length;"
  },
  {
    "id" : "23a53187-d0d1-4101-88bf-7fbdda5fea31",
    "prId" : 35186,
    "prUrl" : "https://github.com/flutter/flutter/pull/35186#pullrequestreview-255360740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b51cad41-e811-4014-8074-2b468bc9b46c",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "@bkonyi why does the getScripts vmservice rpc return this?",
        "createdAt" : "2019-06-27T16:25:12Z",
        "updatedAt" : "2019-06-27T17:11:37Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "6bbf112d-d0a0-4a45-ac98-ca81718ba6a2",
        "parentId" : "b51cad41-e811-4014-8074-2b468bc9b46c",
        "authorId" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "body" : "As far as I can tell it should never return anything but a `ScriptList`. I can't imagine a situation where a sentinel would ever be returned (see implementation [here](https://github.com/dart-lang/sdk/blob/master/runtime/vm/service.cc#L1404)).",
        "createdAt" : "2019-06-27T16:32:42Z",
        "updatedAt" : "2019-06-27T17:11:37Z",
        "lastEditedBy" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "tags" : [
        ]
      },
      {
        "id" : "f732cfdb-64fb-4200-8aa0-0c9d175270ca",
        "parentId" : "b51cad41-e811-4014-8074-2b468bc9b46c",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Maybe the request is referring to an object that was garbage collected, and that is caught before the implementation is invoked? Is there any way to know which argument was collected? @jonahwilliams is it possible the getScripts call could be referring to something stale?",
        "createdAt" : "2019-06-27T16:51:38Z",
        "updatedAt" : "2019-06-27T17:11:37Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "5798113c-6376-47b2-a8b5-71e27a399d5a",
        "parentId" : "b51cad41-e811-4014-8074-2b468bc9b46c",
        "authorId" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "body" : "`getScripts` only takes an isolate ID as a parameter, so maybe an isolate had been shutdown? I'm not sure what the service does for isolate specific requests when the isolate has already shutdown, but returning a sentinel seems possible in that case.",
        "createdAt" : "2019-06-27T17:04:16Z",
        "updatedAt" : "2019-06-27T17:11:37Z",
        "lastEditedBy" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "tags" : [
        ]
      },
      {
        "id" : "b6893ffc-2b81-4799-95fc-a40e8520dda5",
        "parentId" : "b51cad41-e811-4014-8074-2b468bc9b46c",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I'm not really sure how that would happen, or how it hasn't happened yet when we run coverage. The repro project in #35120 fairly trivial though",
        "createdAt" : "2019-06-27T17:05:37Z",
        "updatedAt" : "2019-06-27T17:11:37Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2c22c2b351b2317a4cc681a912b815a0e14d5ec",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +210,214 @@\n    // We may receive such objects as\n    // {type: Sentinel, kind: Collected, valueAsString: <collected>}\n    // that need to be skipped.\n    if (scriptList['scripts'] == null) {"
  },
  {
    "id" : "738b36c1-bb80-4dc6-9a78-5479509f9c90",
    "prId" : 51988,
    "prUrl" : "https://github.com/flutter/flutter/pull/51988#pullrequestreview-369891251",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "186502c7-f703-42ad-a57e-b5a7a3df4415",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "This would be a bigger refactor, but is there any way `machine` can be handled at the logger level? This is probably an issue in quite a few places.  (I also kicked that can in https://github.com/flutter/flutter/pull/49408)",
        "createdAt" : "2020-03-05T19:30:05Z",
        "updatedAt" : "2020-03-05T20:26:33Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "397d90a3-288a-4ec1-922d-647975b3ed7f",
        "parentId" : "186502c7-f703-42ad-a57e-b5a7a3df4415",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Yeah, a better way to write the tool logging would have everything be structured data by default, and a to have a FriendlyLogger or similar for non-machine that only displays the raw message",
        "createdAt" : "2020-03-05T20:30:09Z",
        "updatedAt" : "2020-03-05T20:30:09Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "363bbac5081462a7e67027bcac03359ce59f93d8",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +31,35 @@  }\n\n  void _logMessage(String line, { bool error = false }) {\n    if (!verbose) {\n      return;"
  }
]