[
  {
    "id" : "8f5456ec-1c1f-4181-916d-8bba154e2593",
    "prId" : 76200,
    "prUrl" : "https://github.com/flutter/flutter/pull/76200#pullrequestreview-623435875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42eb235a-b4ef-426f-9c4e-99fc22ceaf44",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Its worth thinking about how this implementation could be updated in the future to support testing without rebuilding the APK/IPA on each go. For example, by hot restarting the main isolate with the new entrypoint",
        "createdAt" : "2021-02-24T16:58:39Z",
        "updatedAt" : "2021-03-31T00:16:56Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "525c3d88-9ee3-4b3f-a0ea-0a3404343622",
        "parentId" : "42eb235a-b4ef-426f-9c4e-99fc22ceaf44",
        "authorId" : "724317e3-6a58-4157-9220-ec949b730300",
        "body" : "Yes, I think we could make `flutter_platform.dart` keep track of some sort of mutable state where rebuilding is skipped for subsequent workflows. For the first run we basically do what is here in this PR, and for subsequent runs we would invoke portions of the attach workflow, to attach and then hot restart the application. I can't be sure if it's sufficient without a prototype, but it seems like a `reloadExistingApp` boolean parameter here would be sufficient. It's also fine if we want to make breaking changes to the interface here because it's all internal anyway.",
        "createdAt" : "2021-03-29T14:21:10Z",
        "updatedAt" : "2021-03-31T00:16:56Z",
        "lastEditedBy" : "724317e3-6a58-4157-9220-ec949b730300",
        "tags" : [
        ]
      },
      {
        "id" : "5c256125-3d28-443d-b5fd-31902daad6d3",
        "parentId" : "42eb235a-b4ef-426f-9c4e-99fc22ceaf44",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Sounds reasonable to me",
        "createdAt" : "2021-03-29T16:41:49Z",
        "updatedAt" : "2021-03-31T00:16:56Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "67747164614fbbca0642db78a999b15427843823",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@  @override\n  Future<StreamChannel<String>> start(String entrypointPath) async {\n    final TargetPlatform targetPlatform = await device.targetPlatform;\n    _applicationPackage = await ApplicationPackageFactory.instance.getPackageForPlatform(\n      targetPlatform,"
  }
]