[
  {
    "id" : "b80759c2-7a68-444d-a365-b82181134649",
    "prId" : 36987,
    "prUrl" : "https://github.com/flutter/flutter/pull/36987#pullrequestreview-269168365",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef8b2162-a2c5-4c0d-a2de-fd2c0d378e51",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Describe 'optional' parameter in the doc comment.",
        "createdAt" : "2019-07-31T04:41:29Z",
        "updatedAt" : "2019-07-31T19:30:33Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "e0dc9586-bebe-41ce-8e52-97f30c019589",
        "parentId" : "ef8b2162-a2c5-4c0d-a2de-fd2c0d378e51",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Done",
        "createdAt" : "2019-07-31T17:30:55Z",
        "updatedAt" : "2019-07-31T19:30:33Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c98c32df70a8cff747a87e5bd2f0d11b003a6837",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +42,46 @@  /// [optional] is true, the file is not required to exist. In this case, it\n  /// is never resolved as an input.\n  void visitPattern(String pattern, bool optional) {\n    // perform substitution of the environmental values and then\n    // of the local values."
  },
  {
    "id" : "144966d8-77c4-4705-bac0-1a80e22485e5",
    "prId" : 41530,
    "prUrl" : "https://github.com/flutter/flutter/pull/41530#pullrequestreview-295122638",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "097e4da2-29af-43c3-9ab0-7a9bc6618557",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "What if there is no ': ' ?",
        "createdAt" : "2019-09-30T16:26:50Z",
        "updatedAt" : "2019-09-30T17:07:36Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "39776f60-73b1-4431-800b-e856346ac550",
        "parentId" : "097e4da2-29af-43c3-9ab0-7a9bc6618557",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I think it is invalid. Updated to not crash",
        "createdAt" : "2019-09-30T17:09:45Z",
        "updatedAt" : "2019-09-30T17:09:45Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e247f26e8713d99805d298914272e90df700e96d",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +66,70 @@    }\n    final String contents = depfile.readAsStringSync();\n    final List<String> colonSeparated = contents.split(': ');\n    if (colonSeparated.length != 2) {\n      printError('Invalid depfile: ${depfile.path}');"
  },
  {
    "id" : "52074ec9-6871-4139-b124-d457b118e55b",
    "prId" : 41530,
    "prUrl" : "https://github.com/flutter/flutter/pull/41530#pullrequestreview-295122892",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff4b3921-9f3c-4a0e-8249-bcbc7ec6af7c",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "This processing needs more comprehensive testing, esp. around the escape sequences. Some examples here in the comments of this function would also be good.",
        "createdAt" : "2019-09-30T16:30:07Z",
        "updatedAt" : "2019-09-30T17:07:36Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "00756d6e-e456-4e88-b4f9-7e88fec6e101",
        "parentId" : "ff4b3921-9f3c-4a0e-8249-bcbc7ec6af7c",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I've added a windows path example and a spaces in path example. Also linked to the code that I adapted this from",
        "createdAt" : "2019-09-30T17:10:14Z",
        "updatedAt" : "2019-09-30T17:10:14Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e247f26e8713d99805d298914272e90df700e96d",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +81,85 @@  final RegExp _escapeExpr = RegExp(r'\\\\(.)');\n\n  Iterable<File> _processList(String rawText) {\n    return rawText\n    // Put every file on right-hand side on the separate line"
  }
]