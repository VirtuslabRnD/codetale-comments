[
  {
    "id" : "90e719e6-0460-49b2-b8fe-786910dcca57",
    "prId" : 32816,
    "prUrl" : "https://github.com/flutter/flutter/pull/32816#pullrequestreview-255955485",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78676d7d-f59e-478d-919f-4849c71815de",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Apropos of above: this should either list gen_snapshot, or there should be documentation with a whitelist of things that don't need to be listed, and gen_snapshot should be in that list.",
        "createdAt" : "2019-06-28T17:31:44Z",
        "updatedAt" : "2019-07-11T19:46:31Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "6008c472-8ce8-4766-b387-16c03f845bd0",
        "parentId" : "78676d7d-f59e-478d-919f-4849c71815de",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I added gen_snapshot and dart to this rule, and frontend_server and dart to the above",
        "createdAt" : "2019-06-28T20:12:38Z",
        "updatedAt" : "2019-07-11T19:46:31Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1cfee4671bd84ae9a55f79e4282f45b03076a90c",
    "line" : 195,
    "diffHunk" : "@@ -1,1 +193,197 @@  name: 'aot_elf_profile',\n  inputs: <Source>[\n    Source.pattern('{BUILD_DIR}/main.app.dill'),\n    Source.pattern('{PROJECT_DIR}/.packages'),\n    Source.artifact(Artifact.engineDartBinary),"
  },
  {
    "id" : "7d28986e-e2a8-499b-8a69-afba22933e25",
    "prId" : 32816,
    "prUrl" : "https://github.com/flutter/flutter/pull/32816#pullrequestreview-260917070",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "189a59e3-c365-409e-bf2c-589bce038ff8",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "It feels a bit like a layering violation for there to be iOS specific code here, but since that is what the AOTSnapshotter is expecting, I don't see an easy way around it.",
        "createdAt" : "2019-07-11T18:52:16Z",
        "updatedAt" : "2019-07-11T19:46:31Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "0ee3d6fb-c26b-4979-a739-6b2d1366976c",
        "parentId" : "189a59e3-c365-409e-bf2c-589bce038ff8",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I'll attempt to address the layering a bit when integrating the iOS implementation. It seems likely that there will be no generic \"dart\" rules beyond generation of the kernel.",
        "createdAt" : "2019-07-11T19:47:46Z",
        "updatedAt" : "2019-07-11T19:47:46Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1cfee4671bd84ae9a55f79e4282f45b03076a90c",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +109,113 @@/// Supports compiling a dart kernel file to an assembly file.\n///\n/// If more than one iOS arch is provided, then this rule will\n/// produce a univeral binary.\nFuture<void> compileAotAssembly(Map<String, ChangeType> updates, Environment environment) async {"
  },
  {
    "id" : "a7d81ead-cb06-4df9-9613-12d99befbf55",
    "prId" : 32816,
    "prUrl" : "https://github.com/flutter/flutter/pull/32816#pullrequestreview-260917126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28c1a5c0-7b40-41db-831e-8aae11e7d142",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Further thought along these lines: the existence of a special case for iOS here (and probably also future special cases for Fuchsia) implies that dart artifact build rules will need to be target platform specific. This is okay for now though, I think.",
        "createdAt" : "2019-07-11T18:57:05Z",
        "updatedAt" : "2019-07-11T19:46:31Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "8bb686c2-04f7-4db4-801b-88a838ab1bfa",
        "parentId" : "28c1a5c0-7b40-41db-831e-8aae11e7d142",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Responded to above",
        "createdAt" : "2019-07-11T19:47:53Z",
        "updatedAt" : "2019-07-11T19:47:53Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1cfee4671bd84ae9a55f79e4282f45b03076a90c",
    "line" : 147,
    "diffHunk" : "@@ -1,1 +145,149 @@    // together.\n    final List<Future<int>> pending = <Future<int>>[];\n    for (IOSArch iosArch in iosArchs) {\n      pending.add(snapshotter.build(\n        platform: targetPlatform,"
  },
  {
    "id" : "cf1e27fc-2a63-48b0-b48e-d99b468cbd21",
    "prId" : 40470,
    "prUrl" : "https://github.com/flutter/flutter/pull/40470#pullrequestreview-290296560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64b5fd18-b220-4aec-9b7f-df779d54d982",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "What happens when one of these file operations fails?",
        "createdAt" : "2019-09-18T20:05:44Z",
        "updatedAt" : "2019-09-19T02:41:21Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "a20184ac-6c31-4909-b669-25f3e493bb7a",
        "parentId" : "64b5fd18-b220-4aec-9b7f-df779d54d982",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "We should throw, will update",
        "createdAt" : "2019-09-19T02:38:28Z",
        "updatedAt" : "2019-09-19T02:41:21Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "2ae4ea90-eed3-4c30-adf4-aac58b465dab",
        "parentId" : "64b5fd18-b220-4aec-9b7f-df779d54d982",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "actually, we're already propagating the future, just ensuring that the resource is released first",
        "createdAt" : "2019-09-19T02:40:04Z",
        "updatedAt" : "2019-09-19T02:41:21Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d026bbcc7b4444008ac49413036907acc217afd",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +122,126 @@        try {\n          final File file = fs.file(fs.path.join(environment.outputDir.path, entry.key));\n          file.parent.createSync(recursive: true);\n          final DevFSContent content = entry.value;\n          if (content is DevFSFileContent && content.file is File) {"
  }
]