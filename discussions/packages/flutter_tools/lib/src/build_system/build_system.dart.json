[
  {
    "id" : "7fde9484-7f54-4939-99a4-98aa057c8d5f",
    "prId" : 32816,
    "prUrl" : "https://github.com/flutter/flutter/pull/32816#pullrequestreview-245568047",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5b8c8e8-c5e9-4034-bb90-aa39a42ec125",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "These should probably have doc comments.",
        "createdAt" : "2019-06-04T17:13:01Z",
        "updatedAt" : "2019-07-11T19:46:31Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1cfee4671bd84ae9a55f79e4282f45b03076a90c",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +130,134 @@  /// This information is surfaced in the assemble commands and used as an\n  /// argument to build a particular target.\n  final String name;\n\n  /// The dependencies of this target."
  },
  {
    "id" : "6b953e2b-01c7-4559-8e56-da72395f07fe",
    "prId" : 32816,
    "prUrl" : "https://github.com/flutter/flutter/pull/32816#pullrequestreview-250145249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff67eb8b-fd66-4957-b106-a44bb504d55c",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Is this a negative or positive example? The closest statement is the one I commented on above about what not to do.",
        "createdAt" : "2019-06-04T17:51:04Z",
        "updatedAt" : "2019-07-11T19:46:31Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "3198e215-cccb-43cb-b541-4339d6c38af6",
        "parentId" : "ff67eb8b-fd66-4957-b106-a44bb504d55c",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Updated",
        "createdAt" : "2019-06-14T22:03:38Z",
        "updatedAt" : "2019-07-11T19:46:31Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1cfee4671bd84ae9a55f79e4282f45b03076a90c",
    "line" : 353,
    "diffHunk" : "@@ -1,1 +351,355 @@/// Use the environment to determine where to write an output file.\n///\n///    environment.buildDir.childFile('output')\n///      ..createSync()\n///      ..writeAsStringSync('output data');"
  },
  {
    "id" : "1b634f20-dcac-485e-a735-e0afc2fb0f60",
    "prId" : 32816,
    "prUrl" : "https://github.com/flutter/flutter/pull/32816#pullrequestreview-245740705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a90c565-97b2-4cac-8d33-0f7526453441",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : ":crossed_fingers: https://github.com/dart-lang/language/issues/115\r\n\r\nOnly 7+ years in the making: https://github.com/dart-lang/sdk/issues/2626\r\n",
        "createdAt" : "2019-06-04T18:18:37Z",
        "updatedAt" : "2019-07-11T19:46:31Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "7eb34bb7-098e-4959-8dd3-08670c9107b0",
        "parentId" : "4a90c565-97b2-4cac-8d33-0f7526453441",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Better late than never!",
        "createdAt" : "2019-06-04T23:13:37Z",
        "updatedAt" : "2019-07-11T19:46:31Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1cfee4671bd84ae9a55f79e4282f45b03076a90c",
    "line" : 543,
    "diffHunk" : "@@ -1,1 +541,545 @@    checkCycles(target);\n    // Cheat a bit and re-use the same map.\n    Map<String, Map<String, Object>> fold(Map<String, Map<String, Object>> accumulation, Target current) {\n      accumulation[current.name] = current.toJson(environment);\n      return accumulation;"
  },
  {
    "id" : "855b3bcb-f6d5-4640-aff8-c79d3059b597",
    "prId" : 32816,
    "prUrl" : "https://github.com/flutter/flutter/pull/32816#pullrequestreview-254946960",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70cb680f-3c3f-4c8c-a0a6-0589d76b4759",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "why no outputs?",
        "createdAt" : "2019-06-24T18:24:28Z",
        "updatedAt" : "2019-07-11T19:46:31Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "c97c7ea3-46eb-4fb7-b7db-c48929a81537",
        "parentId" : "70cb680f-3c3f-4c8c-a0a6-0589d76b4759",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I'm not sure what I should do for the glob outputs. If the rule has run, we could output what the last build produced. Or we could essentially output a serialized version of the Patterns. I'm leaning towards the latter.",
        "createdAt" : "2019-06-25T01:23:50Z",
        "updatedAt" : "2019-07-11T19:46:31Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "6d1d95a7-ce99-46f9-a658-3f001e9b1900",
        "parentId" : "70cb680f-3c3f-4c8c-a0a6-0589d76b4759",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I'm going with a concept of implicit vs explicit inputs/outputs.\r\n\r\nglobs will end up as \"implicit\" meaning we don't capture them in the initial description\r\n",
        "createdAt" : "2019-06-27T00:51:59Z",
        "updatedAt" : "2019-07-11T19:46:31Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1cfee4671bd84ae9a55f79e4282f45b03076a90c",
    "line" : 323,
    "diffHunk" : "@@ -1,1 +321,325 @@      'outputs': resolveOutputs(environment, implicit: false)\n          .map((File file) => file.path)\n          .toList(),\n      'stamp': _findStampFile(environment).absolute.path,\n    };"
  },
  {
    "id" : "3f7698cc-c912-4b3c-942a-fd32b1ea7dde",
    "prId" : 41530,
    "prUrl" : "https://github.com/flutter/flutter/pull/41530#pullrequestreview-295122489",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a7b515f-be50-490f-a50f-02972263b864",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Can you `return passed` here and unindent the `else`?",
        "createdAt" : "2019-09-30T16:23:29Z",
        "updatedAt" : "2019-09-30T17:07:36Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "c3b27660-03b2-4a81-9d38-e9b0718d7932",
        "parentId" : "6a7b515f-be50-490f-a50f-02972263b864",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Done",
        "createdAt" : "2019-09-30T17:09:32Z",
        "updatedAt" : "2019-09-30T17:09:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e247f26e8713d99805d298914272e90df700e96d",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +514,518 @@        skipped = true;\n        printTrace('Skipping target: ${node.target.name}');\n        updateGraph();\n        return passed;\n      }"
  },
  {
    "id" : "5176bbf8-42f5-4f4a-98a4-99c72534164c",
    "prId" : 42487,
    "prUrl" : "https://github.com/flutter/flutter/pull/42487#pullrequestreview-302876804",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47bd1299-92a6-4c28-bcc3-3e698df4421e",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "What happens if the user listed a file by accident, and the fix is to remove the file? How do they find out?",
        "createdAt" : "2019-10-16T17:35:38Z",
        "updatedAt" : "2019-10-17T22:10:38Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "91ba535e-2ac6-4942-b31f-c6b099a2844a",
        "parentId" : "47bd1299-92a6-4c28-bcc3-3e698df4421e",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "The user here would be the tools team, so ideally we'd have a test to cover it. Long term, I think we should surface the reasons why targets are re-run.",
        "createdAt" : "2019-10-16T17:48:48Z",
        "updatedAt" : "2019-10-17T22:10:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "3aefa4e7-e894-4e78-a5b7-778bc78cd71d",
        "parentId" : "47bd1299-92a6-4c28-bcc3-3e698df4421e",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Would it be useful to do a `printTrace` here with some diagnostic info?",
        "createdAt" : "2019-10-16T20:57:50Z",
        "updatedAt" : "2019-10-17T22:10:38Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "25ec2b0a-fa52-443b-acaf-0e02472939a0",
        "parentId" : "47bd1299-92a6-4c28-bcc3-3e698df4421e",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "From the description, what is an example of a fairly dynamic rule where a required file doesn't exist at the moment of running the target?",
        "createdAt" : "2019-10-16T21:01:14Z",
        "updatedAt" : "2019-10-17T22:10:38Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "1dc45a7e-ba89-4326-b4b3-d15f2a25de66",
        "parentId" : "47bd1299-92a6-4c28-bcc3-3e698df4421e",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Done",
        "createdAt" : "2019-10-16T21:05:09Z",
        "updatedAt" : "2019-10-17T22:10:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "61762793-2f3c-494e-8718-af1fd93ab175",
        "parentId" : "47bd1299-92a6-4c28-bcc3-3e698df4421e",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Anything using a depfile, which will be lots of rules",
        "createdAt" : "2019-10-16T21:05:46Z",
        "updatedAt" : "2019-10-17T22:10:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1f1be675e6156278231a0a130ca9365adb13305",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +773,777 @@    }\n\n    // If we depend on a file that doesnt exist on disk, mark the build as\n    // dirty. if the rule is not correctly specified, this will result in it\n    // always being rerun."
  },
  {
    "id" : "05ca7596-f3e7-4bc7-bcdb-ce1ac716d2e4",
    "prId" : 53848,
    "prUrl" : "https://github.com/flutter/flutter/pull/53848#pullrequestreview-391110410",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0c49572-33d0-4ae9-9bf8-d13b7073dc7c",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "TODO: verify local engine build behavior",
        "createdAt" : "2020-04-02T19:01:31Z",
        "updatedAt" : "2020-04-19T23:39:09Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "a3ece975-4b75-43e0-b60c-734ad5702822",
        "parentId" : "a0c49572-33d0-4ae9-9bf8-d13b7073dc7c",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Done, need to check for LocalEngineArtifacts",
        "createdAt" : "2020-04-09T20:30:28Z",
        "updatedAt" : "2020-04-19T23:39:09Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c3bf6eca41827a6442fd48a49109cee7317217b",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +306,310 @@    String buildPrefix;\n    final List<String> keys = defines.keys.toList()..sort();\n    final StringBuffer buffer = StringBuffer();\n    // The engine revision is `null` for local or custom engines.\n    if (engineVersion != null) {"
  },
  {
    "id" : "d98d55fa-3930-4c6e-91fd-a025b898f1a2",
    "prId" : 56167,
    "prUrl" : "https://github.com/flutter/flutter/pull/56167#pullrequestreview-405089534",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97211989-fa5d-4cbe-84de-2ddbd1013d9d",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Using this we can safely \"skip\" the target if l10n.yaml does not exist and clean up the old outputs.",
        "createdAt" : "2020-05-04T15:20:07Z",
        "updatedAt" : "2020-05-08T16:41:44Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c6cc8d2e65decaf165b71e3adb7de8a436c967a",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +139,143 @@  /// Returning `true` will cause [build] to be skipped. This is equivalent\n  /// to a build that produces no outputs.\n  bool canSkip(Environment environment) => false;\n\n  /// The action which performs this build step."
  },
  {
    "id" : "0e1543aa-2117-4814-adab-7a0c2397cbc0",
    "prId" : 70065,
    "prUrl" : "https://github.com/flutter/flutter/pull/70065#pullrequestreview-526743131",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2a9d6af-5001-4e83-9ead-6850df1404ca",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Is this used?",
        "createdAt" : "2020-11-09T23:18:54Z",
        "updatedAt" : "2020-11-11T19:16:27Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "d20e865f-b8e6-4341-b32d-dec945467144",
        "parentId" : "d2a9d6af-5001-4e83-9ead-6850df1404ca",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Yeap!",
        "createdAt" : "2020-11-09T23:43:30Z",
        "updatedAt" : "2020-11-11T19:16:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "faf8ea53ee5515283dde79b9146b9671da0e4119",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +1003,1007 @@  /// Returns whether this target can be skipped.\n  bool computeChanges(\n    Environment environment,\n    FileStore fileStore,\n    FileSystem fileSystem,"
  }
]