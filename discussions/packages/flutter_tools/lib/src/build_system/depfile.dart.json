[
  {
    "id" : "efb123c7-69f0-4a29-b8c6-936ac4e8d55a",
    "prId" : 42487,
    "prUrl" : "https://github.com/flutter/flutter/pull/42487#pullrequestreview-300448428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ddab993d-647b-4199-8ef6-b5ca4d8b386b",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Needs to handle empty inputs/outputs.",
        "createdAt" : "2019-10-11T03:11:01Z",
        "updatedAt" : "2019-10-17T22:10:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1f1be675e6156278231a0a130ca9365adb13305",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@  ///\n  /// If either [inputs] or [outputs] is empty, does not write to the file.\n  void writeToFile(File depfile) {\n    if (inputs.isEmpty || outputs.isEmpty) {\n      return;"
  },
  {
    "id" : "31272212-09fe-4ff5-9f7e-e806c2948017",
    "prId" : 42487,
    "prUrl" : "https://github.com/flutter/flutter/pull/42487#pullrequestreview-301610473",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22379f13-18b4-408f-8169-a1b95b97ddd6",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "This looks untested.",
        "createdAt" : "2019-10-14T20:29:22Z",
        "updatedAt" : "2019-10-17T22:10:38Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "717e51db-a50d-4eb0-b7a7-ef7a960b2e6b",
        "parentId" : "22379f13-18b4-408f-8169-a1b95b97ddd6",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "It's tested indirectly via integration tests, but I've added some unit tests to cover it",
        "createdAt" : "2019-10-15T01:17:27Z",
        "updatedAt" : "2019-10-17T22:10:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1f1be675e6156278231a0a130ca9365adb13305",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@  ///\n  /// If the syntax is invalid, returns an empty [Depfile].\n  factory Depfile.parse(File file) {\n    final String contents = file.readAsStringSync();\n    final List<String> colonSeparated = contents.split(': ');"
  },
  {
    "id" : "32e9b6ab-2128-4a4d-bc3d-e0dab23d9e13",
    "prId" : 42487,
    "prUrl" : "https://github.com/flutter/flutter/pull/42487#pullrequestreview-302896532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fe31151-152d-480a-bdf3-673bb42dc9e9",
        "parentId" : null,
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "In which instance returning an empty `Depfile` makes the build successful later?",
        "createdAt" : "2019-10-16T21:05:48Z",
        "updatedAt" : "2019-10-17T22:10:38Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "9ccf1d83-8a51-491d-8f7c-bba6960ab1f7",
        "parentId" : "7fe31151-152d-480a-bdf3-673bb42dc9e9",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "In the case where (for some reason, human intervention) an invalid depfile is written or edited - we don't force the user to `flutter clean`, instead we allow a new one be written which hopefully doesn't have the same issue",
        "createdAt" : "2019-10-16T21:45:40Z",
        "updatedAt" : "2019-10-17T22:10:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1f1be675e6156278231a0a130ca9365adb13305",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +20,24 @@    if (colonSeparated.length != 2) {\n      printError('Invalid depfile: ${file.path}');\n      return const Depfile(<File>[], <File>[]);\n    }\n    final List<File> inputs = _processList(colonSeparated[1].trim());"
  },
  {
    "id" : "c42daa94-560f-47ca-806c-0387f21167c9",
    "prId" : 42487,
    "prUrl" : "https://github.com/flutter/flutter/pull/42487#pullrequestreview-303575606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c79de98-7536-4dd8-a40b-abda5270db4a",
        "parentId" : null,
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "are there duplicated items in the list? If so, would you mind added a comment?",
        "createdAt" : "2019-10-16T21:09:41Z",
        "updatedAt" : "2019-10-17T22:10:38Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "5abd3a81-511e-4464-a3be-c4eef8ddb3f3",
        "parentId" : "5c79de98-7536-4dd8-a40b-abda5270db4a",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Also added  a test case for this",
        "createdAt" : "2019-10-17T22:10:25Z",
        "updatedAt" : "2019-10-17T22:10:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1f1be675e6156278231a0a130ca9365adb13305",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +72,76 @@    // The tool doesn't write duplicates to these lists. This call is an attempt to\n    // be resillient to the outputs of other tools which write or user edits to depfiles.\n        .toSet()\n        .map((String path) => fs.file(path))\n        .toList();"
  },
  {
    "id" : "c6df1b45-8f1c-4d5b-9390-2a6b320b621e",
    "prId" : 42487,
    "prUrl" : "https://github.com/flutter/flutter/pull/42487#pullrequestreview-303575431",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85b341fa-0971-4ef8-baf9-55080bc4aff6",
        "parentId" : null,
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "nit: is the `ß` intentional?",
        "createdAt" : "2019-10-17T21:42:27Z",
        "updatedAt" : "2019-10-17T22:10:38Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "9c64bb8a-0e45-4739-8c7d-479794cb4048",
        "parentId" : "85b341fa-0971-4ef8-baf9-55080bc4aff6",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Yes",
        "createdAt" : "2019-10-17T22:09:56Z",
        "updatedAt" : "2019-10-17T22:10:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1f1be675e6156278231a0a130ca9365adb13305",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +67,71 @@        .replaceAllMapped(_separatorExpr, (Match match) => '${match.group(1)}\\n')\n        .split('\\n')\n    // Expand escape sequences, so that '\\ ', for example,ß becomes ' '\n        .map<String>((String path) => path.replaceAllMapped(_escapeExpr, (Match match) => match.group(1)).trim())\n        .where((String path) => path.isNotEmpty)"
  }
]