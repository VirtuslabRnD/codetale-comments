[
  {
    "id" : "29cbb129-fa8d-4482-81cc-3d6a9b86b9d8",
    "prId" : 4725,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d920ccd6-26a7-4d96-a15b-857153a65980",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "You can just do `return await response.toList()`\n",
        "createdAt" : "2016-06-23T23:03:29Z",
        "updatedAt" : "2016-06-23T23:20:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3585742f7a912c7ddcfcab718f65516db8d4e8f",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +24,28 @@    responseBody.add(chunk);\n\n  return responseBody.takeBytes();\n}"
  },
  {
    "id" : "79f603bf-b248-47fa-a420-feff3c2982e8",
    "prId" : 12293,
    "prUrl" : "https://github.com/flutter/flutter/pull/12293#pullrequestreview-65926063",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "760ee9b7-8802-46f3-a818-13bc0519f508",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "I feel like we should have a `maxRetries` named param with a sensible default.",
        "createdAt" : "2017-09-28T02:49:47Z",
        "updatedAt" : "2017-09-28T23:42:56Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "62c5f9a7-9bb8-4396-8b86-1ff9c097fe47",
        "parentId" : "760ee9b7-8802-46f3-a818-13bc0519f508",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Why? What should the user do if we exceed the max retries? Restart us?",
        "createdAt" : "2017-09-28T16:41:15Z",
        "updatedAt" : "2017-09-28T23:42:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c4217108-5fd5-4dfc-beb3-6ebd274979ce",
        "parentId" : "760ee9b7-8802-46f3-a818-13bc0519f508",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "I guess I just like the aesthetics of a hard failure at some point, but I have no objective reason why",
        "createdAt" : "2017-09-28T16:47:36Z",
        "updatedAt" : "2017-09-28T23:42:56Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa91983b9ff54dff53d2f5ac6237da8f21b6e746",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +19,23 @@  int duration = 1;\n  while (true) {\n    attempts += 1;\n    final List<int> result = await _attempt(url);\n    if (result != null)"
  },
  {
    "id" : "7b878faf-89b4-428f-9cf4-a55e16c73be8",
    "prId" : 12293,
    "prUrl" : "https://github.com/flutter/flutter/pull/12293#pullrequestreview-65924411",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de268135-1317-40d7-9da5-91879cd49758",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "or you could just use \"s\" to represent seconds both singular and plural ðŸ˜› ",
        "createdAt" : "2017-09-28T02:51:42Z",
        "updatedAt" : "2017-09-28T23:42:56Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "190f2a05-0d52-49ea-8f54-ffb3e0279e8d",
        "parentId" : "de268135-1317-40d7-9da5-91879cd49758",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "that's crazy talk!",
        "createdAt" : "2017-09-28T16:41:34Z",
        "updatedAt" : "2017-09-28T23:42:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa91983b9ff54dff53d2f5ac6237da8f21b6e746",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +23,27 @@    if (result != null)\n      return result;\n    printStatus('Download failed -- attempting retry $attempts in $duration second${ duration == 1 ? \"\" : \"s\"}...');\n    await new Future<Null>.delayed(new Duration(seconds: duration));\n    if (duration < 64)"
  },
  {
    "id" : "debd8c95-14ad-4b15-896d-98cf96447078",
    "prId" : 12293,
    "prUrl" : "https://github.com/flutter/flutter/pull/12293#pullrequestreview-65929359",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c196dd80-7da7-4686-88c7-ab8284c499db",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "What about http timeouts?  Does HttpClient take care of timing out, or is it up to us to wrap the future?  In either case, we probably want to handle a server not responding in the same way (exponential backoff retries).",
        "createdAt" : "2017-09-28T02:57:23Z",
        "updatedAt" : "2017-09-28T23:42:56Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "73e8e54e-5164-4568-baf8-973a1501e5cb",
        "parentId" : "c196dd80-7da7-4686-88c7-ab8284c499db",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "What's the difference between a server not responding, and trying to update Flutter on a really really bad connection?",
        "createdAt" : "2017-09-28T16:51:21Z",
        "updatedAt" : "2017-09-28T23:42:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "496737c8-763c-4d7c-8445-2289a77abe98",
        "parentId" : "c196dd80-7da7-4686-88c7-ab8284c499db",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Good point",
        "createdAt" : "2017-09-28T16:58:30Z",
        "updatedAt" : "2017-09-28T23:42:56Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa91983b9ff54dff53d2f5ac6237da8f21b6e746",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +49,53 @@      );\n    }\n    // 5xx errors are server errors and we can try again\n    printTrace('Download error: ${response.statusCode} ${response.reasonPhrase}');\n    return null;"
  },
  {
    "id" : "21bf885f-0738-4164-9622-d0d23546f507",
    "prId" : 49575,
    "prUrl" : "https://github.com/flutter/flutter/pull/49575#pullrequestreview-349038714",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b15829b-5c87-4a20-8748-e17bcd3d914a",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "uber-nit: I don't love the formatting here. Of course, if you do it the other way then you end up odd indentation on the next lines.",
        "createdAt" : "2020-01-27T22:23:59Z",
        "updatedAt" : "2020-01-27T22:23:59Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "7ee7a19b-5320-49b8-a129-48ad6b3b191d",
        "parentId" : "7b15829b-5c87-4a20-8748-e17bcd3d914a",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Yup. I was trying to avoid the odd indentation for the ':'",
        "createdAt" : "2020-01-27T23:08:01Z",
        "updatedAt" : "2020-01-27T23:08:01Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca9d7698b8ed9e8aa5cc867707a59161961d2b4",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +25,29 @@    @required Logger logger,\n    @required Platform platform,\n  }) :\n    _httpClientFactory = httpClientFactory,\n    _logger = logger,"
  }
]