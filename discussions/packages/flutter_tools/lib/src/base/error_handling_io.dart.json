[
  {
    "id" : "dd221234-83f6-40ab-8b5a-3d34e9097083",
    "prId" : 65125,
    "prUrl" : "https://github.com/flutter/flutter/pull/65125#pullrequestreview-482159639",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5359a5a8-8e61-4bc4-a3c5-5ad5084f7916",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "nit. is there either POSIX documentation for these, or macos specific docs?",
        "createdAt" : "2020-09-03T19:55:31Z",
        "updatedAt" : "2020-09-03T20:00:30Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "4d70ef50-2aa1-411c-8cab-466a7b4b1899",
        "parentId" : "5359a5a8-8e61-4bc4-a3c5-5ad5084f7916",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "done",
        "createdAt" : "2020-09-03T20:00:38Z",
        "updatedAt" : "2020-09-03T20:00:39Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fc747620a24920550bdd07ab6e8aad1d371894d",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +494,498 @@  // From:\n  // https://github.com/torvalds/linux/blob/master/include/uapi/asm-generic/errno.h\n  // https://github.com/torvalds/linux/blob/master/include/uapi/asm-generic/errno-base.h\n  // https://github.com/apple/darwin-xnu/blob/master/bsd/dev/dtrace/scripts/errno.d\n  const int enospc = 28;"
  },
  {
    "id" : "76bb39fe-6493-4d4b-8549-6e060216a5da",
    "prId" : 66159,
    "prUrl" : "https://github.com/flutter/flutter/pull/66159#pullrequestreview-492930500",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "392beaae-ce34-4318-a953-9c7c7245bd08",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Sometimes a failure to delete is benign, so I'm not sure this should go here.",
        "createdAt" : "2020-09-21T19:50:29Z",
        "updatedAt" : "2020-09-21T19:50:34Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "24e8121ef9ce42355e0e916b99be369679b4974b",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +309,313 @@\n  @override\n  Future<Directory> delete({bool recursive = false}) {\n    return _run<Directory>(\n      () async => wrap(fileSystem.directory((await delegate.delete(recursive: recursive)).path)),"
  },
  {
    "id" : "e81e5831-06be-441c-80b7-28dec4acc0a3",
    "prId" : 66708,
    "prUrl" : "https://github.com/flutter/flutter/pull/66708#pullrequestreview-502476434",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "036cd749-c7b2-45e9-bbaa-1dea034a9ebb",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Wouldn't this be different on different OS's?",
        "createdAt" : "2020-10-05T21:56:11Z",
        "updatedAt" : "2020-10-05T22:58:19Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "e5f39fbf-bf22-4d9b-ade2-bbac9bd90373",
        "parentId" : "036cd749-c7b2-45e9-bbaa-1dea034a9ebb",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "For files it is the same, windows 2 is ERROR_FILE_NOT_FOUND, and 2 on linux/macOS  2 is ENOENT is No such file or directory. I can check if deleting a directory that does not exist uses the same error code on windows\r\n",
        "createdAt" : "2020-10-05T22:30:34Z",
        "updatedAt" : "2020-10-05T22:58:19Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "215e3565-a97a-42c5-8578-0581c29cdca3",
        "parentId" : "036cd749-c7b2-45e9-bbaa-1dea034a9ebb",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "kk. This would be good to have as a comment in the code here.",
        "createdAt" : "2020-10-05T22:50:01Z",
        "updatedAt" : "2020-10-05T22:58:19Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "7e6e68ce-99ce-48cc-b7d0-8721fd118403",
        "parentId" : "036cd749-c7b2-45e9-bbaa-1dea034a9ebb",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Made the comment more specific",
        "createdAt" : "2020-10-05T22:57:32Z",
        "updatedAt" : "2020-10-05T22:58:19Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "65503e42b9fccf568cf77d7e8ba06215d06d1e1e",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +83,87 @@      // On windows this is error code 2: ERROR_FILE_NOT_FOUND, and on\n      // macOS/Linux it is error code 2/ENOENT: No such file or directory.\n      const int kSystemCannotFindFile = 2;\n      if (err?.osError?.errorCode != kSystemCannotFindFile || _noExitOnFailure) {\n        rethrow;"
  },
  {
    "id" : "d9951f3f-68c1-486c-9be7-fbadae8f62a9",
    "prId" : 67669,
    "prUrl" : "https://github.com/flutter/flutter/pull/67669#pullrequestreview-505182221",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef3c74f1-f9fb-4765-94b2-f54ded0bc9ec",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Should this do whatever `sanitizeExecutablePath` is doing here: https://github.com/google/process.dart/blob/master/lib/src/interface/local_process_manager.dart#L91 ?",
        "createdAt" : "2020-10-08T21:28:54Z",
        "updatedAt" : "2020-10-12T16:43:49Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "39e9e773-5676-4e7b-ab2e-de276753436c",
        "parentId" : "ef3c74f1-f9fb-4765-94b2-f54ded0bc9ec",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This is linked to https://github.com/dart-lang/sdk/issues/37751 which is marked fixed",
        "createdAt" : "2020-10-08T21:33:55Z",
        "updatedAt" : "2020-10-12T16:43:49Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ec99ecf68eb38314fc3765bd7b7348066f22225",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +608,612 @@    return _run(() {\n      return _processRun(\n        _getCommandPath(command, workingDirectory),\n        _getArguments(command),\n        workingDirectory: workingDirectory,"
  },
  {
    "id" : "816547f1-bd8e-42b9-a58a-b2a440cf694b",
    "prId" : 67669,
    "prUrl" : "https://github.com/flutter/flutter/pull/67669#pullrequestreview-505205308",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10ccc69d-a068-4a82-a714-3ed86a771a34",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "This will not correctly handle the case where a new binary is installed in a higher-priority location after a location has already been resolved.\r\n\r\nI don't think we should try to handle that case unless we need to, but it should probably be documented.",
        "createdAt" : "2020-10-08T22:19:41Z",
        "updatedAt" : "2020-10-12T16:43:49Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ec99ecf68eb38314fc3765bd7b7348066f22225",
    "line" : 216,
    "diffHunk" : "@@ -1,1 +677,681 @@  String _getCommandPath(List<dynamic> command, String workingDirectory, { bool strict = false }) {\n    final String executable = command.first.toString();\n    final Map<String, String> workingDirectoryCache = _resolvedExecutables[workingDirectory] ??= <String, String>{};\n    final String resolvedExecutable = workingDirectoryCache[executable]\n      ?? _which(executable, workingDirectory);"
  },
  {
    "id" : "8b0ffece-28a5-47c8-a4c9-90300eaddfd2",
    "prId" : 67669,
    "prUrl" : "https://github.com/flutter/flutter/pull/67669#pullrequestreview-505982037",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8bae5152-675b-440b-91c5-8223cadf09fc",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Not entirely convinced that the new List literal syntax improves things here, but it's up to you.\r\n```dart\r\nString toString(dynamic arg) => arg.toString();\r\nreturn command.skip(1).map(toString).toList();\r\n```",
        "createdAt" : "2020-10-08T22:25:11Z",
        "updatedAt" : "2020-10-12T16:43:49Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "ffdbe27e-d90c-4e5d-9082-58d96d3d94e7",
        "parentId" : "8bae5152-675b-440b-91c5-8223cadf09fc",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "It's to write Iterables after seeing the generated code.",
        "createdAt" : "2020-10-08T22:40:35Z",
        "updatedAt" : "2020-10-12T16:43:49Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "85b59ed3-01c5-4dd7-b51c-a1b63d618309",
        "parentId" : "8bae5152-675b-440b-91c5-8223cadf09fc",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Sorry, I don't follow.",
        "createdAt" : "2020-10-09T20:35:30Z",
        "updatedAt" : "2020-10-12T16:43:49Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "a8040506-d11c-4211-b398-e53327ea12df",
        "parentId" : "8bae5152-675b-440b-91c5-8223cadf09fc",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "oops, i typo'd. I meant to type out: \"It is hard to write iterables after seeing the generated code\"",
        "createdAt" : "2020-10-09T20:51:38Z",
        "updatedAt" : "2020-10-12T16:43:49Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ec99ecf68eb38314fc3765bd7b7348066f22225",
    "line" : 271,
    "diffHunk" : "@@ -1,1 +732,736 @@\n  List<String> _getArguments(List<dynamic> command) {\n    return <String>[for (dynamic arg in command.skip(1)) arg.toString()];\n  }\n}"
  },
  {
    "id" : "de617b30-eaa3-4d45-91a3-35f5f573a349",
    "prId" : 67669,
    "prUrl" : "https://github.com/flutter/flutter/pull/67669#pullrequestreview-506783872",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9599c348-cabf-4401-8372-2342e3a5029e",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Can this be unified with, or can this be a wrapper around, the code in os.dart?",
        "createdAt" : "2020-10-12T16:59:06Z",
        "updatedAt" : "2020-10-12T16:59:10Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "0ab324db-7ab6-47f5-8503-c831b50c7836",
        "parentId" : "9599c348-cabf-4401-8372-2342e3a5029e",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I think I could refactor OS to use `which` exposed through the process manager class (once our dep on package:process is removed), but I can't do that before this is landed since that creates a circular dependency",
        "createdAt" : "2020-10-12T17:01:45Z",
        "updatedAt" : "2020-10-12T17:01:46Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ec99ecf68eb38314fc3765bd7b7348066f22225",
    "line" : 225,
    "diffHunk" : "@@ -1,1 +686,690 @@  }\n\n  String _which(String execName, String workingDirectory) {\n    // `where` always returns all matches, not just the first one.\n    ProcessResult result;"
  },
  {
    "id" : "5066ec95-1dc2-4748-888a-f8c5047bfd61",
    "prId" : 67957,
    "prUrl" : "https://github.com/flutter/flutter/pull/67957#pullrequestreview-506905455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3531209-564c-45ae-bb56-d7a66f1bab4f",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Needed to re-add the `strict` flag since by default we return the executable path if it cannot be found",
        "createdAt" : "2020-10-12T20:43:32Z",
        "updatedAt" : "2020-10-12T20:50:54Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4dbcba52a5db6927198a756592b1031670162b71",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +583,587 @@  bool canRun(dynamic executable, {String workingDirectory}) {\n    return _runSync<bool>(\n      () => _getCommandPath(<dynamic>[executable], workingDirectory, strict: true) != null,\n      platform: _platform,\n    );"
  }
]