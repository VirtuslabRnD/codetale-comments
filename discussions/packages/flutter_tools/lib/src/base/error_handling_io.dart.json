[
  {
    "id" : "dd221234-83f6-40ab-8b5a-3d34e9097083",
    "prId" : 65125,
    "prUrl" : "https://github.com/flutter/flutter/pull/65125#pullrequestreview-482159639",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5359a5a8-8e61-4bc4-a3c5-5ad5084f7916",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "nit. is there either POSIX documentation for these, or macos specific docs?",
        "createdAt" : "2020-09-03T19:55:31Z",
        "updatedAt" : "2020-09-03T20:00:30Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "4d70ef50-2aa1-411c-8cab-466a7b4b1899",
        "parentId" : "5359a5a8-8e61-4bc4-a3c5-5ad5084f7916",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "done",
        "createdAt" : "2020-09-03T20:00:38Z",
        "updatedAt" : "2020-09-03T20:00:39Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fc747620a24920550bdd07ab6e8aad1d371894d",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +494,498 @@  // From:\n  // https://github.com/torvalds/linux/blob/master/include/uapi/asm-generic/errno.h\n  // https://github.com/torvalds/linux/blob/master/include/uapi/asm-generic/errno-base.h\n  // https://github.com/apple/darwin-xnu/blob/master/bsd/dev/dtrace/scripts/errno.d\n  const int enospc = 28;"
  },
  {
    "id" : "76bb39fe-6493-4d4b-8549-6e060216a5da",
    "prId" : 66159,
    "prUrl" : "https://github.com/flutter/flutter/pull/66159#pullrequestreview-492930500",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "392beaae-ce34-4318-a953-9c7c7245bd08",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Sometimes a failure to delete is benign, so I'm not sure this should go here.",
        "createdAt" : "2020-09-21T19:50:29Z",
        "updatedAt" : "2020-09-21T19:50:34Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "24e8121ef9ce42355e0e916b99be369679b4974b",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +309,313 @@\n  @override\n  Future<Directory> delete({bool recursive = false}) {\n    return _run<Directory>(\n      () async => wrap(fileSystem.directory((await delegate.delete(recursive: recursive)).path)),"
  },
  {
    "id" : "e81e5831-06be-441c-80b7-28dec4acc0a3",
    "prId" : 66708,
    "prUrl" : "https://github.com/flutter/flutter/pull/66708#pullrequestreview-502476434",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "036cd749-c7b2-45e9-bbaa-1dea034a9ebb",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Wouldn't this be different on different OS's?",
        "createdAt" : "2020-10-05T21:56:11Z",
        "updatedAt" : "2020-10-05T22:58:19Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "e5f39fbf-bf22-4d9b-ade2-bbac9bd90373",
        "parentId" : "036cd749-c7b2-45e9-bbaa-1dea034a9ebb",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "For files it is the same, windows 2 is ERROR_FILE_NOT_FOUND, and 2 on linux/macOS  2 is ENOENT is No such file or directory. I can check if deleting a directory that does not exist uses the same error code on windows\r\n",
        "createdAt" : "2020-10-05T22:30:34Z",
        "updatedAt" : "2020-10-05T22:58:19Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "215e3565-a97a-42c5-8578-0581c29cdca3",
        "parentId" : "036cd749-c7b2-45e9-bbaa-1dea034a9ebb",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "kk. This would be good to have as a comment in the code here.",
        "createdAt" : "2020-10-05T22:50:01Z",
        "updatedAt" : "2020-10-05T22:58:19Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "7e6e68ce-99ce-48cc-b7d0-8721fd118403",
        "parentId" : "036cd749-c7b2-45e9-bbaa-1dea034a9ebb",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Made the comment more specific",
        "createdAt" : "2020-10-05T22:57:32Z",
        "updatedAt" : "2020-10-05T22:58:19Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "65503e42b9fccf568cf77d7e8ba06215d06d1e1e",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +83,87 @@      // On windows this is error code 2: ERROR_FILE_NOT_FOUND, and on\n      // macOS/Linux it is error code 2/ENOENT: No such file or directory.\n      const int kSystemCannotFindFile = 2;\n      if (err?.osError?.errorCode != kSystemCannotFindFile || _noExitOnFailure) {\n        rethrow;"
  },
  {
    "id" : "d9951f3f-68c1-486c-9be7-fbadae8f62a9",
    "prId" : 67669,
    "prUrl" : "https://github.com/flutter/flutter/pull/67669#pullrequestreview-505182221",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef3c74f1-f9fb-4765-94b2-f54ded0bc9ec",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Should this do whatever `sanitizeExecutablePath` is doing here: https://github.com/google/process.dart/blob/master/lib/src/interface/local_process_manager.dart#L91 ?",
        "createdAt" : "2020-10-08T21:28:54Z",
        "updatedAt" : "2020-10-12T16:43:49Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "39e9e773-5676-4e7b-ab2e-de276753436c",
        "parentId" : "ef3c74f1-f9fb-4765-94b2-f54ded0bc9ec",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This is linked to https://github.com/dart-lang/sdk/issues/37751 which is marked fixed",
        "createdAt" : "2020-10-08T21:33:55Z",
        "updatedAt" : "2020-10-12T16:43:49Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ec99ecf68eb38314fc3765bd7b7348066f22225",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +608,612 @@    return _run(() {\n      return _processRun(\n        _getCommandPath(command, workingDirectory),\n        _getArguments(command),\n        workingDirectory: workingDirectory,"
  },
  {
    "id" : "816547f1-bd8e-42b9-a58a-b2a440cf694b",
    "prId" : 67669,
    "prUrl" : "https://github.com/flutter/flutter/pull/67669#pullrequestreview-505205308",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10ccc69d-a068-4a82-a714-3ed86a771a34",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "This will not correctly handle the case where a new binary is installed in a higher-priority location after a location has already been resolved.\r\n\r\nI don't think we should try to handle that case unless we need to, but it should probably be documented.",
        "createdAt" : "2020-10-08T22:19:41Z",
        "updatedAt" : "2020-10-12T16:43:49Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ec99ecf68eb38314fc3765bd7b7348066f22225",
    "line" : 216,
    "diffHunk" : "@@ -1,1 +677,681 @@  String _getCommandPath(List<dynamic> command, String workingDirectory, { bool strict = false }) {\n    final String executable = command.first.toString();\n    final Map<String, String> workingDirectoryCache = _resolvedExecutables[workingDirectory] ??= <String, String>{};\n    final String resolvedExecutable = workingDirectoryCache[executable]\n      ?? _which(executable, workingDirectory);"
  },
  {
    "id" : "8b0ffece-28a5-47c8-a4c9-90300eaddfd2",
    "prId" : 67669,
    "prUrl" : "https://github.com/flutter/flutter/pull/67669#pullrequestreview-505982037",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8bae5152-675b-440b-91c5-8223cadf09fc",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Not entirely convinced that the new List literal syntax improves things here, but it's up to you.\r\n```dart\r\nString toString(dynamic arg) => arg.toString();\r\nreturn command.skip(1).map(toString).toList();\r\n```",
        "createdAt" : "2020-10-08T22:25:11Z",
        "updatedAt" : "2020-10-12T16:43:49Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "ffdbe27e-d90c-4e5d-9082-58d96d3d94e7",
        "parentId" : "8bae5152-675b-440b-91c5-8223cadf09fc",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "It's to write Iterables after seeing the generated code.",
        "createdAt" : "2020-10-08T22:40:35Z",
        "updatedAt" : "2020-10-12T16:43:49Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "85b59ed3-01c5-4dd7-b51c-a1b63d618309",
        "parentId" : "8bae5152-675b-440b-91c5-8223cadf09fc",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Sorry, I don't follow.",
        "createdAt" : "2020-10-09T20:35:30Z",
        "updatedAt" : "2020-10-12T16:43:49Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "a8040506-d11c-4211-b398-e53327ea12df",
        "parentId" : "8bae5152-675b-440b-91c5-8223cadf09fc",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "oops, i typo'd. I meant to type out: \"It is hard to write iterables after seeing the generated code\"",
        "createdAt" : "2020-10-09T20:51:38Z",
        "updatedAt" : "2020-10-12T16:43:49Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ec99ecf68eb38314fc3765bd7b7348066f22225",
    "line" : 271,
    "diffHunk" : "@@ -1,1 +732,736 @@\n  List<String> _getArguments(List<dynamic> command) {\n    return <String>[for (dynamic arg in command.skip(1)) arg.toString()];\n  }\n}"
  },
  {
    "id" : "de617b30-eaa3-4d45-91a3-35f5f573a349",
    "prId" : 67669,
    "prUrl" : "https://github.com/flutter/flutter/pull/67669#pullrequestreview-506783872",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9599c348-cabf-4401-8372-2342e3a5029e",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Can this be unified with, or can this be a wrapper around, the code in os.dart?",
        "createdAt" : "2020-10-12T16:59:06Z",
        "updatedAt" : "2020-10-12T16:59:10Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "0ab324db-7ab6-47f5-8503-c831b50c7836",
        "parentId" : "9599c348-cabf-4401-8372-2342e3a5029e",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I think I could refactor OS to use `which` exposed through the process manager class (once our dep on package:process is removed), but I can't do that before this is landed since that creates a circular dependency",
        "createdAt" : "2020-10-12T17:01:45Z",
        "updatedAt" : "2020-10-12T17:01:46Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ec99ecf68eb38314fc3765bd7b7348066f22225",
    "line" : 225,
    "diffHunk" : "@@ -1,1 +686,690 @@  }\n\n  String _which(String execName, String workingDirectory) {\n    // `where` always returns all matches, not just the first one.\n    ProcessResult result;"
  },
  {
    "id" : "5066ec95-1dc2-4748-888a-f8c5047bfd61",
    "prId" : 67957,
    "prUrl" : "https://github.com/flutter/flutter/pull/67957#pullrequestreview-506905455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3531209-564c-45ae-bb56-d7a66f1bab4f",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Needed to re-add the `strict` flag since by default we return the executable path if it cannot be found",
        "createdAt" : "2020-10-12T20:43:32Z",
        "updatedAt" : "2020-10-12T20:50:54Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4dbcba52a5db6927198a756592b1031670162b71",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +583,587 @@  bool canRun(dynamic executable, {String workingDirectory}) {\n    return _runSync<bool>(\n      () => _getCommandPath(<dynamic>[executable], workingDirectory, strict: true) != null,\n      platform: _platform,\n    );"
  },
  {
    "id" : "8516f451-0e30-4232-a8f9-ddb953868530",
    "prId" : 69000,
    "prUrl" : "https://github.com/flutter/flutter/pull/69000#pullrequestreview-517011229",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d3f6f13-7106-43b1-9cf3-477dc8daccaa",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "If we had more information about this case, we could report a good bug. Consider recording an analytics event.",
        "createdAt" : "2020-10-26T16:35:00Z",
        "updatedAt" : "2020-10-26T20:09:32Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "f0820bdf-22b7-4d8f-a25d-6b64cf847544",
        "parentId" : "3d3f6f13-7106-43b1-9cf3-477dc8daccaa",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "done",
        "createdAt" : "2020-10-26T17:24:10Z",
        "updatedAt" : "2020-10-26T20:09:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca4e1d913edf37f8268ed5dc44c5f4ad93e8fc37",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +302,306 @@      return wrapFile(delegate.copySync(newPath));\n    } on FileSystemException {\n      // Proceed below\n    }\n    // If the copy failed but both of the above checks passed, copy the bytes"
  },
  {
    "id" : "61b47a85-c4c7-4363-97be-aadd413001e5",
    "prId" : 69000,
    "prUrl" : "https://github.com/flutter/flutter/pull/69000#pullrequestreview-517230984",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd22a184-9b42-4044-95c4-51cfa35de560",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "If something goes wrong with this, we should probably delete the destination file.",
        "createdAt" : "2020-10-26T19:29:14Z",
        "updatedAt" : "2020-10-26T20:09:32Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "89444c9d-6fb6-47fa-92c0-1a7b0cde04aa",
        "parentId" : "bd22a184-9b42-4044-95c4-51cfa35de560",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "done",
        "createdAt" : "2020-10-26T22:48:32Z",
        "updatedAt" : "2020-10-26T22:48:33Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca4e1d913edf37f8268ed5dc44c5f4ad93e8fc37",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +305,309 @@    }\n    // If the copy failed but both of the above checks passed, copy the bytes\n    // directly.\n    _runSync(() {\n      RandomAccessFile source;"
  },
  {
    "id" : "0b888153-be83-4f8e-b29e-c3360adb0960",
    "prId" : 69000,
    "prUrl" : "https://github.com/flutter/flutter/pull/69000#pullrequestreview-517131100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ceb60073-de71-45f6-934f-0cae0a4679b4",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "This will give us the count of `copySync` failing, but the manual copy succeeding. Would any other information be helpful?",
        "createdAt" : "2020-10-26T19:32:48Z",
        "updatedAt" : "2020-10-26T20:09:32Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "831db31d-0421-43da-a99f-df84e822794f",
        "parentId" : "ceb60073-de71-45f6-934f-0cae0a4679b4",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "If one of the file open checks fails, it is likely to be a regular old permission issue. If not, crash logging will handle it.\r\n\r\nif the fallback copySync fails, assuming it is not one of the known issues, crash logging will handle that too",
        "createdAt" : "2020-10-26T20:01:49Z",
        "updatedAt" : "2020-10-26T20:09:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca4e1d913edf37f8268ed5dc44c5f4ad93e8fc37",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +331,335 @@    // The original copy failed, but the manual copy worked. Report an analytics event to\n    // track this to determine if this code path is actually hit.\n    ErrorHandlingEvent('copy-fallback').send();\n    return wrapFile(resultFile);\n  }"
  },
  {
    "id" : "c8e571f3-85f1-4dcc-86bd-d867c80262a2",
    "prId" : 74447,
    "prUrl" : "https://github.com/flutter/flutter/pull/74447#pullrequestreview-576656334",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4deb8d9-f6a0-4055-9029-bbc384dc7fe8",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Not sure if this is feasible, but could you just add new methods to `ErrorHandlingProcessManager` like `runWithoutLookup`, `startWithoutLookup` etc.\r\n\r\nAnother option would be to add a `lookup` optional named argument to `run`, `start`, etc., that defaults to `true`, which you could ignore if `_delegate` is a fake/mock.",
        "createdAt" : "2021-01-22T19:38:41Z",
        "updatedAt" : "2021-02-02T17:40:36Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "9a4e4821-656a-4642-9bee-454df0e10cf8",
        "parentId" : "e4deb8d9-f6a0-4055-9029-bbc384dc7fe8",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "We don't always injected the error handling process manager though. I could `is` check and conditionally call, but I didn't really like that either.\r\n\r\n> Another option would be to add a lookup optional named argument to run, start, etc., that defaults to true, which you could ignore if _delegate is a fake/mock\r\n\r\nSame problem, if I change the interface I need to is/cast or rewrite large swaths of tests. It isn't practical.",
        "createdAt" : "2021-01-22T19:42:43Z",
        "updatedAt" : "2021-02-02T17:40:36Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "49940403-4809-403b-ad53-bf34b2be300b",
        "parentId" : "e4deb8d9-f6a0-4055-9029-bbc384dc7fe8",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Got it.\r\n\r\nOne more thought. Instead of checking `_delegate is LocalProcessManager` below in each call, could you check it before setting `_skipCommandLookup = true` here?",
        "createdAt" : "2021-01-22T19:51:23Z",
        "updatedAt" : "2021-02-02T17:40:36Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "2b612470-41c2-4861-ab6a-6a0bd31d2962",
        "parentId" : "e4deb8d9-f6a0-4055-9029-bbc384dc7fe8",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Ahh, good idea :) ",
        "createdAt" : "2021-01-22T19:53:11Z",
        "updatedAt" : "2021-02-02T17:40:36Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "51be8d85-8710-40a1-8653-9ed3d48d37a1",
        "parentId" : "e4deb8d9-f6a0-4055-9029-bbc384dc7fe8",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "oh wait, no its static ",
        "createdAt" : "2021-01-22T19:58:49Z",
        "updatedAt" : "2021-02-02T17:40:36Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "e5ce4495-570b-41f3-8eb8-a85e340a50a2",
        "parentId" : "e4deb8d9-f6a0-4055-9029-bbc384dc7fe8",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Not sure if it's a cleanup anymore, but `skipCommandLookup` could maybe take the instance that's about to be used as an argument.",
        "createdAt" : "2021-01-22T20:37:05Z",
        "updatedAt" : "2021-02-02T17:40:36Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "bf3b475d-71af-4818-a2e7-b1ae3f44a439",
        "parentId" : "e4deb8d9-f6a0-4055-9029-bbc384dc7fe8",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "this doesn't work because some classes don't have a ProcessManager, they have a ProcessUtils",
        "createdAt" : "2021-01-26T18:48:20Z",
        "updatedAt" : "2021-02-02T17:40:36Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "07d0b9d10d38a2424100dcef4d8e845506dae5f6",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +663,667 @@  ///\n  /// This required that the fully resolved executable path is provided.\n  static Future<T> skipCommandLookup<T>(Future<T> Function() operation) async {\n    final bool previousValue = ErrorHandlingProcessManager._skipCommandLookup;\n    try {"
  },
  {
    "id" : "90f37a5d-f131-4418-958f-0e2d28ecbfb5",
    "prId" : 81942,
    "prUrl" : "https://github.com/flutter/flutter/pull/81942#pullrequestreview-652890929",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7f81745-de37-4147-9596-3504d6a44b64",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "A provided message is always more specific than this vague \"cannot access the file or directory\", don't include it to reduce the wall-o-text effect.",
        "createdAt" : "2021-05-06T01:29:52Z",
        "updatedAt" : "2021-05-08T01:02:18Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a52b85a2b0b737b9c11ef5062dd755a437fe7b5",
    "line" : 212,
    "diffHunk" : "@@ -1,1 +746,750 @@        errorBuffer.writeln('$message.');\n      } else {\n        errorBuffer.writeln('The flutter tool cannot access the file or directory.');\n      }\n      errorBuffer.writeln('Please ensure that the SDK and/or project is installed in a location '"
  }
]