[
  {
    "id" : "ad88603d-5a93-4a7a-be74-6442e97022b5",
    "prId" : 11820,
    "prUrl" : "https://github.com/flutter/flutter/pull/11820#pullrequestreview-124616863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff8b569b-a243-4600-8e67-584a57b554b7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "can we remove this --print option? It adds spurious output when running `flutter run --release`.",
        "createdAt" : "2018-05-30T21:45:07Z",
        "updatedAt" : "2018-05-30T21:45:07Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "54bca34e-8df5-44f8-a317-b487ae5e6384",
        "parentId" : "ff8b569b-a243-4600-8e67-584a57b554b7",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "https://github.com/flutter/flutter/pull/18049",
        "createdAt" : "2018-05-30T22:29:35Z",
        "updatedAt" : "2018-05-30T22:29:35Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "14a4ec5a3c40f686fd6ae7ef913799421bcb7af3",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +48,52 @@      '--packages=$packagesPath',\n      '--dependencies=$depfilePath',\n      '--print_snapshot_sizes',\n    ]..addAll(additionalArgs);\n"
  },
  {
    "id" : "6479c3ae-517b-4354-bafc-b2acf28738bc",
    "prId" : 11924,
    "prUrl" : "https://github.com/flutter/flutter/pull/11924#pullrequestreview-61298723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "896b0800-8a4c-4ecb-845e-c33a4f734476",
        "parentId" : null,
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Any reason to not keep the const? (and if not, `s/new/const/` in `buildScriptSnapshot`)",
        "createdAt" : "2017-09-07T05:29:14Z",
        "updatedAt" : "2017-09-07T10:12:06Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "ddfd45bc-20fb-4629-95a8-4ec8c8ae00d1",
        "parentId" : "896b0800-8a4c-4ecb-845e-c33a4f734476",
        "authorId" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "body" : "Apparently, we cannot have both `const` and asserts just yet. IntelliJ accepts the code below, but `pub run test` chokes on it.\r\n```dart\r\nconst SnapshotType(this.platform, this.mode): assert(mode != null);\r\n```\r\n\r\n`dart -v` says\r\n```\r\nassert_initializer: false (Allow asserts in initializer lists.)\r\n```\r\nI believe this flag will be `true` by default in the not too distant future.",
        "createdAt" : "2017-09-07T07:51:04Z",
        "updatedAt" : "2017-09-07T10:12:06Z",
        "lastEditedBy" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "tags" : [
        ]
      },
      {
        "id" : "7fbdbd04-ff73-4797-9f35-00ff5b63e901",
        "parentId" : "896b0800-8a4c-4ecb-845e-c33a4f734476",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Ah yep - not sure how many times that's bit me now! The engine is compiled with that flag set, but we don't run the tool that way. Thanks.",
        "createdAt" : "2017-09-07T15:18:29Z",
        "updatedAt" : "2017-09-07T15:18:30Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "35191a24-d4ad-4560-b051-3edbd56f1643",
        "parentId" : "896b0800-8a4c-4ecb-845e-c33a4f734476",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Not sure about `const`, but simple fix for asserts support in `pub run test` is to set `DART_VM_OPTIONS=--assert-initializer` for `pub run test` invocation. ",
        "createdAt" : "2017-09-07T17:45:30Z",
        "updatedAt" : "2017-09-07T17:45:31Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "8eb0a49fb886945a38f824496f5e6cd05feb4f8d",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +22,26 @@/// A snapshot build configuration.\nclass SnapshotType {\n  SnapshotType(this.platform, this.mode) {\n    assert(mode != null);\n  }"
  },
  {
    "id" : "b865edf6-f85d-4afc-bf30-725d3ba3d64f",
    "prId" : 36471,
    "prUrl" : "https://github.com/flutter/flutter/pull/36471#pullrequestreview-268142790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe3c08d9-4e45-4e76-8bdc-66efecc18d35",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "This ends up creating 3 App.framework.dSYM folders in the build/ directory. Unfortunately, it seems like this issue https://github.com/flutter/flutter/pull/22540 affects local xcode too. If spotlight finds these files, any attempt to desymbolicate locally will attach to one of these files. But since we don't know which binary architecture the developer ended up using, xcode gets confused. Can we put these transient files in .noindex folders too?",
        "createdAt" : "2019-07-30T03:43:14Z",
        "updatedAt" : "2019-07-30T03:43:14Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8a6ecdd6c2b3674f6e35d150c38f26e0aa1805a",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +258,262 @@      return linkResult;\n    }\n    final RunResult dsymResult = await xcode.dsymutil(<String>[\n      appLib,\n      '-o', fs.path.join(outputPath, 'App.framework.dSYM'),"
  },
  {
    "id" : "ae795983-ed7c-4a33-931c-91f39d131b26",
    "prId" : 39357,
    "prUrl" : "https://github.com/flutter/flutter/pull/39357#pullrequestreview-280485806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "accbb17c-0844-4b17-8c7f-73f8dbca6cac",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "`cc` will emit a warning if this file doesn't end with `.S`.",
        "createdAt" : "2019-08-27T21:34:55Z",
        "updatedAt" : "2019-08-27T22:12:41Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "f186393b39481ed92df084362855601a99ef37eb",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +180,184 @@    // gen_snapshot would provide an argument to do this automatically.\n    if (platform == TargetPlatform.ios && bitcode) {\n      final IOSink sink = fs.file('$assembly.stripped.S').openWrite();\n      for (String line in fs.file(assembly).readAsLinesSync()) {\n        if (line.startsWith('.section __DWARF')) {"
  },
  {
    "id" : "5a5fb75c-3395-475c-a951-092aaa0477a7",
    "prId" : 49377,
    "prUrl" : "https://github.com/flutter/flutter/pull/49377#pullrequestreview-348079056",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d84bf76-6d49-49b4-97b3-f87702970ee5",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "We should also update the flags to gen_snapshot in `fuchsia/fuchsia_build.dart` and `dart_component.gni` in the Fuchsia tree to ensure we're doing the same thing everywhere. @iskakaushik ",
        "createdAt" : "2020-01-24T16:39:25Z",
        "updatedAt" : "2020-01-24T23:16:25Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f601dafc55280ab728c71973699e861a8b013e21",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +159,163 @@    genSnapshotArgs.addAll(<String>[\n      // Faster async/await\n      '--no-causal-async-stacks',\n      '--lazy-async-stacks',\n    ]);"
  }
]