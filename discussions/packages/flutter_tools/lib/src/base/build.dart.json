[
  {
    "id" : "ad88603d-5a93-4a7a-be74-6442e97022b5",
    "prId" : 11820,
    "prUrl" : "https://github.com/flutter/flutter/pull/11820#pullrequestreview-124616863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff8b569b-a243-4600-8e67-584a57b554b7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "can we remove this --print option? It adds spurious output when running `flutter run --release`.",
        "createdAt" : "2018-05-30T21:45:07Z",
        "updatedAt" : "2018-05-30T21:45:07Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "54bca34e-8df5-44f8-a317-b487ae5e6384",
        "parentId" : "ff8b569b-a243-4600-8e67-584a57b554b7",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "https://github.com/flutter/flutter/pull/18049",
        "createdAt" : "2018-05-30T22:29:35Z",
        "updatedAt" : "2018-05-30T22:29:35Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "14a4ec5a3c40f686fd6ae7ef913799421bcb7af3",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +48,52 @@      '--packages=$packagesPath',\n      '--dependencies=$depfilePath',\n      '--print_snapshot_sizes',\n    ]..addAll(additionalArgs);\n"
  },
  {
    "id" : "6479c3ae-517b-4354-bafc-b2acf28738bc",
    "prId" : 11924,
    "prUrl" : "https://github.com/flutter/flutter/pull/11924#pullrequestreview-61298723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "896b0800-8a4c-4ecb-845e-c33a4f734476",
        "parentId" : null,
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Any reason to not keep the const? (and if not, `s/new/const/` in `buildScriptSnapshot`)",
        "createdAt" : "2017-09-07T05:29:14Z",
        "updatedAt" : "2017-09-07T10:12:06Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "ddfd45bc-20fb-4629-95a8-4ec8c8ae00d1",
        "parentId" : "896b0800-8a4c-4ecb-845e-c33a4f734476",
        "authorId" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "body" : "Apparently, we cannot have both `const` and asserts just yet. IntelliJ accepts the code below, but `pub run test` chokes on it.\r\n```dart\r\nconst SnapshotType(this.platform, this.mode): assert(mode != null);\r\n```\r\n\r\n`dart -v` says\r\n```\r\nassert_initializer: false (Allow asserts in initializer lists.)\r\n```\r\nI believe this flag will be `true` by default in the not too distant future.",
        "createdAt" : "2017-09-07T07:51:04Z",
        "updatedAt" : "2017-09-07T10:12:06Z",
        "lastEditedBy" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "tags" : [
        ]
      },
      {
        "id" : "7fbdbd04-ff73-4797-9f35-00ff5b63e901",
        "parentId" : "896b0800-8a4c-4ecb-845e-c33a4f734476",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Ah yep - not sure how many times that's bit me now! The engine is compiled with that flag set, but we don't run the tool that way. Thanks.",
        "createdAt" : "2017-09-07T15:18:29Z",
        "updatedAt" : "2017-09-07T15:18:30Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "35191a24-d4ad-4560-b051-3edbd56f1643",
        "parentId" : "896b0800-8a4c-4ecb-845e-c33a4f734476",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Not sure about `const`, but simple fix for asserts support in `pub run test` is to set `DART_VM_OPTIONS=--assert-initializer` for `pub run test` invocation. ",
        "createdAt" : "2017-09-07T17:45:30Z",
        "updatedAt" : "2017-09-07T17:45:31Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "8eb0a49fb886945a38f824496f5e6cd05feb4f8d",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +22,26 @@/// A snapshot build configuration.\nclass SnapshotType {\n  SnapshotType(this.platform, this.mode) {\n    assert(mode != null);\n  }"
  },
  {
    "id" : "b865edf6-f85d-4afc-bf30-725d3ba3d64f",
    "prId" : 36471,
    "prUrl" : "https://github.com/flutter/flutter/pull/36471#pullrequestreview-268142790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe3c08d9-4e45-4e76-8bdc-66efecc18d35",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "This ends up creating 3 App.framework.dSYM folders in the build/ directory. Unfortunately, it seems like this issue https://github.com/flutter/flutter/pull/22540 affects local xcode too. If spotlight finds these files, any attempt to desymbolicate locally will attach to one of these files. But since we don't know which binary architecture the developer ended up using, xcode gets confused. Can we put these transient files in .noindex folders too?",
        "createdAt" : "2019-07-30T03:43:14Z",
        "updatedAt" : "2019-07-30T03:43:14Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8a6ecdd6c2b3674f6e35d150c38f26e0aa1805a",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +258,262 @@      return linkResult;\n    }\n    final RunResult dsymResult = await xcode.dsymutil(<String>[\n      appLib,\n      '-o', fs.path.join(outputPath, 'App.framework.dSYM'),"
  },
  {
    "id" : "ae795983-ed7c-4a33-931c-91f39d131b26",
    "prId" : 39357,
    "prUrl" : "https://github.com/flutter/flutter/pull/39357#pullrequestreview-280485806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "accbb17c-0844-4b17-8c7f-73f8dbca6cac",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "`cc` will emit a warning if this file doesn't end with `.S`.",
        "createdAt" : "2019-08-27T21:34:55Z",
        "updatedAt" : "2019-08-27T22:12:41Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "f186393b39481ed92df084362855601a99ef37eb",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +180,184 @@    // gen_snapshot would provide an argument to do this automatically.\n    if (platform == TargetPlatform.ios && bitcode) {\n      final IOSink sink = fs.file('$assembly.stripped.S').openWrite();\n      for (String line in fs.file(assembly).readAsLinesSync()) {\n        if (line.startsWith('.section __DWARF')) {"
  },
  {
    "id" : "5a5fb75c-3395-475c-a951-092aaa0477a7",
    "prId" : 49377,
    "prUrl" : "https://github.com/flutter/flutter/pull/49377#pullrequestreview-348079056",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d84bf76-6d49-49b4-97b3-f87702970ee5",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "We should also update the flags to gen_snapshot in `fuchsia/fuchsia_build.dart` and `dart_component.gni` in the Fuchsia tree to ensure we're doing the same thing everywhere. @iskakaushik ",
        "createdAt" : "2020-01-24T16:39:25Z",
        "updatedAt" : "2020-01-24T23:16:25Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f601dafc55280ab728c71973699e861a8b013e21",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +159,163 @@    genSnapshotArgs.addAll(<String>[\n      // Faster async/await\n      '--no-causal-async-stacks',\n      '--lazy-async-stacks',\n    ]);"
  },
  {
    "id" : "9e6c1db5-1aa1-4a2e-a8b1-5f2af2c8def7",
    "prId" : 50612,
    "prUrl" : "https://github.com/flutter/flutter/pull/50612#pullrequestreview-357107738",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "232e0e17-76dc-423f-9ca5-6511e459344f",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Unrelated typo.",
        "createdAt" : "2020-02-12T00:03:55Z",
        "updatedAt" : "2020-02-12T00:03:55Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "074cba77ea3a2ef0589b3d7226e80b9ada43dd58",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +143,147 @@    }\n\n    // The name of the debug file must contain additional information about\n    // the architecture, since a single build command may produce\n    // multiple debug files."
  },
  {
    "id" : "52326f61-599b-4457-9742-167d6bf19504",
    "prId" : 61221,
    "prUrl" : "https://github.com/flutter/flutter/pull/61221#pullrequestreview-519442349",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1d41034-dced-4bbb-9eb5-51aa4ce08654",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "We're trying to move away from the giant switch of platforms. The problem this causes is that it makes a lot of invalid states easily representable.\r\n\r\n\r\nInstead this should be factored out into a LinuxArch enum. This could be done before any of the work to support arm",
        "createdAt" : "2020-07-10T20:39:59Z",
        "updatedAt" : "2021-02-12T17:56:57Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "ae5c9a69-2a6f-4858-ad52-6313be69270b",
        "parentId" : "f1d41034-dced-4bbb-9eb5-51aa4ce08654",
        "authorId" : "7667e3bb-9f23-42ef-b22b-4acaf17fb330",
        "body" : "@jonahwilliams \r\nOkay. I will create a LinuxArch enum like Android/iOS and modify this PR.",
        "createdAt" : "2020-07-13T04:05:55Z",
        "updatedAt" : "2021-02-12T17:56:57Z",
        "lastEditedBy" : "7667e3bb-9f23-42ef-b22b-4acaf17fb330",
        "tags" : [
        ]
      },
      {
        "id" : "3649f2f7-dcb7-44b8-a5fc-bf3108df3981",
        "parentId" : "f1d41034-dced-4bbb-9eb5-51aa4ce08654",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Looking at the cache APIs we have today, it doesn't seem easy to do this. I wonder if you've had any progress? Perhaps we should reconsider for now",
        "createdAt" : "2020-07-14T14:25:32Z",
        "updatedAt" : "2021-02-12T17:56:57Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "b4b82e3f-33a5-4818-b090-c8d9f084fc8e",
        "parentId" : "f1d41034-dced-4bbb-9eb5-51aa4ce08654",
        "authorId" : "7667e3bb-9f23-42ef-b22b-4acaf17fb330",
        "body" : "@jonahwilliams \r\nI'm reading around the source code of cache.dart. I'm also considering a fix to support ARM64 Host. Please give me some time.",
        "createdAt" : "2020-08-06T01:32:21Z",
        "updatedAt" : "2021-02-12T17:56:57Z",
        "lastEditedBy" : "7667e3bb-9f23-42ef-b22b-4acaf17fb330",
        "tags" : [
        ]
      },
      {
        "id" : "b7787881-ab09-445c-924b-eb2c01776d17",
        "parentId" : "f1d41034-dced-4bbb-9eb5-51aa4ce08654",
        "authorId" : "7667e3bb-9f23-42ef-b22b-4acaf17fb330",
        "body" : "@jonahwilliams \r\nBy the way, I think `TargetPlatform` should be separated into OS and Arch. Are you already considering some kind of refactoring? It may take some time, but is it okay for me to consider it? However, there are many changes. The timing of merging is also difficult.",
        "createdAt" : "2020-08-06T09:49:53Z",
        "updatedAt" : "2021-02-12T17:56:57Z",
        "lastEditedBy" : "7667e3bb-9f23-42ef-b22b-4acaf17fb330",
        "tags" : [
        ]
      },
      {
        "id" : "f52253c0-7553-4f1e-95cc-f4941654b32c",
        "parentId" : "f1d41034-dced-4bbb-9eb5-51aa4ce08654",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Sorry I missed this - that is probably a good change but its a bit out of scope",
        "createdAt" : "2020-10-28T17:14:11Z",
        "updatedAt" : "2021-02-12T17:56:57Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "1b2d37bc-d17b-4f90-9cc0-6b286d3fa17c",
        "parentId" : "f1d41034-dced-4bbb-9eb5-51aa4ce08654",
        "authorId" : "7667e3bb-9f23-42ef-b22b-4acaf17fb330",
        "body" : "OK. Thank you.",
        "createdAt" : "2020-10-29T08:46:57Z",
        "updatedAt" : "2021-02-12T17:56:57Z",
        "lastEditedBy" : "7667e3bb-9f23-42ef-b22b-4acaf17fb330",
        "tags" : [
        ]
      }
    ],
    "commit" : "2cd7c9812317a95760a8a045c2affb3d97cab836",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +314,318 @@      TargetPlatform.darwin_x64,\n      TargetPlatform.linux_x64,\n      TargetPlatform.linux_arm64,\n      TargetPlatform.windows_x64,\n    ].contains(platform);"
  },
  {
    "id" : "32612a1c-b49d-4c11-b8f9-8760a6bfef43",
    "prId" : 81243,
    "prUrl" : "https://github.com/flutter/flutter/pull/81243#pullrequestreview-646201795",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19077de7-fa13-42d7-8e3e-b6d3202abdb7",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "I agree with you in https://github.com/flutter/flutter/issues/81205#issuecomment-827131666\r\n> It does feel a bit off that there is `TargetPlatform.ios` and `--define=IosArchs=...` and then `TargetPlatform.darwin`. But iOS _is_ darwin. It really should be `TargetPlatform.macOS` and `--define=MacOSArchs=...`.\r\n\r\nJust glancing at this I wouldn't be sure which to use (the confusion predates this PR).  This also gets hairier when we start targeting iOS apps as native ARM mac apps for the unfortunately named \"Mac Designed for iPad\" https://github.com/flutter/flutter/issues/66184.\r\n\r\nI'd be supportive if you wanted to rename this `macos` instead of `darwin`.",
        "createdAt" : "2021-04-27T17:50:53Z",
        "updatedAt" : "2021-04-27T22:06:41Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "0c91dd17-5200-441e-8f0a-e9039ebc6197",
        "parentId" : "19077de7-fa13-42d7-8e3e-b6d3202abdb7",
        "authorId" : "a83c472d-ad71-42ae-8c4b-09f4ba928af2",
        "body" : "> I'd be supportive if you wanted to rename this macos instead of darwin.\r\n\r\nI'll keep that in mind, but I'm not sure I'd want to do it in this PR.",
        "createdAt" : "2021-04-27T18:08:24Z",
        "updatedAt" : "2021-04-27T22:06:41Z",
        "lastEditedBy" : "a83c472d-ad71-42ae-8c4b-09f4ba928af2",
        "tags" : [
        ]
      }
    ],
    "commit" : "537dcaa64a8b82d4d833adddfc6dd1fe25188cb7",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +312,316 @@      TargetPlatform.android_x64,\n      TargetPlatform.ios,\n      TargetPlatform.darwin,\n      TargetPlatform.linux_x64,\n      TargetPlatform.linux_arm64,"
  }
]