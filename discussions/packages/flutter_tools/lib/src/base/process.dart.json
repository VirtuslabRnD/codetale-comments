[
  {
    "id" : "77a12a4d-d60b-4939-902f-e6a63145b788",
    "prId" : 3375,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74fbe97d-0247-405f-b2d9-cb08bc8402a3",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Rather than having the default here, can we have the default be the command-line arg's default? That way it would show in the usage information.\n",
        "createdAt" : "2016-04-18T16:27:24Z",
        "updatedAt" : "2016-04-18T16:27:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "efbfba6f-0dd6-48f7-bb85-0377e5c535ab",
        "parentId" : "74fbe97d-0247-405f-b2d9-cb08bc8402a3",
        "authorId" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "body" : "Re-cap of side conversation.  The rub is that we can't used `defaultsTo:` since when it gets called, `ArtifactStore.flutterRoot` isn't set yet.  Anyway, we agreed to revisit if needed.\n",
        "createdAt" : "2016-04-18T16:44:02Z",
        "updatedAt" : "2016-04-18T16:44:02Z",
        "lastEditedBy" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "tags" : [
        ]
      }
    ],
    "commit" : "26519aab230c7893c6122894dd6685751c6a23ff",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +96,100 @@/// [sdkLocation].\nString sdkBinaryName(String name, { String sdkLocation }) {\n  return path.absolute(path.join(sdkLocation ?? dartSdkPath, 'bin', Platform.isWindows ? '$name.bat' : name));\n}\n"
  },
  {
    "id" : "313a43e9-c976-4050-b4f4-245ece6475e0",
    "prId" : 4190,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fc35902-0d7e-4eb2-807e-55de492a0585",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "I'm worried that this won't act as overrides but will entirely replace the env vars. Perhaps init it to a copy of the current env. vars?\n",
        "createdAt" : "2016-05-25T21:22:06Z",
        "updatedAt" : "2016-05-25T21:22:06Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "a563ab5e-cac0-44be-80aa-ff76dbaa95cb",
        "parentId" : "7fc35902-0d7e-4eb2-807e-55de492a0585",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Reading this: https://api.dartlang.org/stable/1.16.1/dart-io/Process/run.html, it looks like it defaults to just overridding the specified vars, so looks ok.\n",
        "createdAt" : "2016-05-25T21:23:04Z",
        "updatedAt" : "2016-05-25T21:23:04Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "27921de0-a038-4930-8b77-bbba71fddef7",
        "parentId" : "7fc35902-0d7e-4eb2-807e-55de492a0585",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "docs say that if `incldeParentEnvironment` is true (default), it will include the parent process' environment, giving precedence to the overrides for name conflicts -- so we should be good.\n",
        "createdAt" : "2016-05-25T21:24:06Z",
        "updatedAt" : "2016-05-25T21:24:06Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3580e105307fcc7247b1436bfe0748eac6256b6a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +11,15 @@typedef String StringConverter(String string);\n\nfinal Map<String, String> childEnvironmentOverrides = new Map<String, String>();\n\n/// This runs the command in the background from the specified working"
  },
  {
    "id" : "8001034e-45fe-497c-a910-3b0db1509d87",
    "prId" : 6668,
    "prUrl" : "https://github.com/flutter/flutter/pull/6668#pullrequestreview-7013479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60367015-d1ed-4d5b-a238-e16e377dc53d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we really should avoid adding more ways to run subprocesses... I don't suppose I can get you to embrace a yak shave that involves cleaning up this file, can I? :-)\n",
        "createdAt" : "2016-11-02T22:19:06Z",
        "updatedAt" : "2016-11-03T14:17:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "6e3cadf9-18b9-419a-8f30-d7348745531d",
        "parentId" : "60367015-d1ed-4d5b-a238-e16e377dc53d",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "Agreed but I'm thinking more about instance field initializers...\n",
        "createdAt" : "2016-11-03T14:14:46Z",
        "updatedAt" : "2016-11-03T14:17:22Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ad2c4092f398054a9b78fc1aa97df2ab5632595",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +168,172 @@///\n/// Throws the standard error output if cmd exits with a non-zero value.\nString runSyncAndThrowStdErrOnError(List<String> cmd) {\n  return _runWithLoggingSync(cmd,\n                             checked: true,"
  },
  {
    "id" : "fa6b964f-b9fd-4933-bc2d-14d251f8a329",
    "prId" : 6668,
    "prUrl" : "https://github.com/flutter/flutter/pull/6668#pullrequestreview-6923693",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e21969cd-0bc6-4c58-9dbd-15d161e92efc",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "We should probably move away from \"Sync\" ways of running subprocesses, by the way, since they block progress meters.\n",
        "createdAt" : "2016-11-02T22:25:51Z",
        "updatedAt" : "2016-11-03T14:17:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ad2c4092f398054a9b78fc1aa97df2ab5632595",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +168,172 @@///\n/// Throws the standard error output if cmd exits with a non-zero value.\nString runSyncAndThrowStdErrOnError(List<String> cmd) {\n  return _runWithLoggingSync(cmd,\n                             checked: true,"
  },
  {
    "id" : "408f4394-8207-4676-8bf8-8bf62438564c",
    "prId" : 8435,
    "prUrl" : "https://github.com/flutter/flutter/pull/8435#pullrequestreview-24107786",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30571917-dc7b-4e2b-a4ae-cbeb5e98da43",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "Oh wait, I see you've anticipated my above question!",
        "createdAt" : "2017-02-27T22:06:06Z",
        "updatedAt" : "2017-02-27T23:24:51Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "eeff8d3c99d7311df4e9debaf22bf2fbe83576fc",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +18,22 @@// TODO(ianh): We have way too many ways to run subprocesses in this project.\n\n/// The stage in which a [ShutdownHook] will be run. All shutdown hooks within\n/// a given stage will be started in parallel and will be guaranteed to run to\n/// completion before shutdown hooks in the next stage are started."
  },
  {
    "id" : "d85afa4d-6cc8-4d42-b608-491c020199a7",
    "prId" : 8435,
    "prUrl" : "https://github.com/flutter/flutter/pull/8435#pullrequestreview-24120193",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95e69ede-426b-411b-ae91-a90e90f6ab22",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "Might be nice to have a simple unit test that verifies these stages happen in a specific order. More as a regression test than anything else.",
        "createdAt" : "2017-02-27T22:08:23Z",
        "updatedAt" : "2017-02-27T23:24:51Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "2758c4d9-ad27-4eb7-83fa-fa3e41df719c",
        "parentId" : "95e69ede-426b-411b-ae91-a90e90f6ab22",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Done",
        "createdAt" : "2017-02-27T23:08:45Z",
        "updatedAt" : "2017-02-27T23:24:51Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "eeff8d3c99d7311df4e9debaf22bf2fbe83576fc",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +69,73 @@  _shutdownHooksRunning = true;\n  try {\n    for (ShutdownStage stage in _shutdownHooks.keys.toList()..sort()) {\n      List<ShutdownHook> hooks = _shutdownHooks.remove(stage);\n      List<Future<dynamic>> futures = <Future<dynamic>>[];"
  }
]