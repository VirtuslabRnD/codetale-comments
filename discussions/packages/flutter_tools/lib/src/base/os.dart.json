[
  {
    "id" : "47ec3e52-8824-4c2d-82f5-22ec494f6ae5",
    "prId" : 1526,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f6fd45a-89b5-455b-a65b-305d8d458a6f",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Slightly racy but not sure what else to suggest.\n",
        "createdAt" : "2016-02-02T19:48:18Z",
        "updatedAt" : "2016-02-02T19:48:18Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "8d7d2571-1c89-43b0-9cd4-5e5f220ba6e3",
        "parentId" : "3f6fd45a-89b5-455b-a65b-305d8d458a6f",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Yeah, we're not the ones binding to the port, but are instead looking for an available port to bind to.  Don't know of a better way...\n",
        "createdAt" : "2016-02-02T20:05:09Z",
        "updatedAt" : "2016-02-02T20:05:09Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "c7ddfb6b-9564-422a-8047-b44e9f422fb8",
        "parentId" : "3f6fd45a-89b5-455b-a65b-305d8d458a6f",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Why can't the engine pick a port?\n",
        "createdAt" : "2016-02-02T20:09:18Z",
        "updatedAt" : "2016-02-02T20:09:18Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "83a2da52-7afa-4697-a883-1b038727b3f9",
        "parentId" : "3f6fd45a-89b5-455b-a65b-305d8d458a6f",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "It'll pick one on the device - we need one for clients to connect to on the host.\n",
        "createdAt" : "2016-02-02T20:11:20Z",
        "updatedAt" : "2016-02-02T20:11:20Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b780c076224343f598738f607e8e05f498718fef",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +38,42 @@  int port = socket.port;\n  await socket.close();\n  return port;\n}"
  },
  {
    "id" : "895d79b8-7173-4c5e-8fff-e1d596927ade",
    "prId" : 2204,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5d84740-2342-4036-b299-32dcc9ac8215",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "This is a nice place to init it.\n",
        "createdAt" : "2016-02-26T15:31:50Z",
        "updatedAt" : "2016-02-26T18:23:22Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "677e63b79d82a650d3b83559818b15fd83bc2f96",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +9,13 @@\n/// Returns [OperatingSystemUtils] active in the current app context (i.e. zone).\nOperatingSystemUtils get os => context[OperatingSystemUtils] ?? (context[OperatingSystemUtils] = new OperatingSystemUtils._());\n\nabstract class OperatingSystemUtils {"
  },
  {
    "id" : "7a2e6e4d-de89-43bd-81ae-22613e9cead2",
    "prId" : 5282,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d0c4650-1db5-4f09-82d9-8b13dcb2f413",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "please file a bug asking that we document our dependency on mkfifo\n",
        "createdAt" : "2016-08-06T00:13:36Z",
        "updatedAt" : "2016-08-09T14:10:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ef3c80e6-11c5-4f66-9953-b4396a6e7668",
        "parentId" : "2d0c4650-1db5-4f09-82d9-8b13dcb2f413",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "https://github.com/flutter/flutter/issues/5284\n",
        "createdAt" : "2016-08-06T00:55:01Z",
        "updatedAt" : "2016-08-09T14:10:34Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "a753623177d5612ed349293213af3afcc18b42c8",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +74,78 @@  @override\n  File makePipe(String path) {\n    runSync(<String>['mkfifo', path]);\n    return new File(path);\n  }"
  },
  {
    "id" : "f9ed1445-3843-40ae-8873-9d6dde9f32c8",
    "prId" : 5531,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf59cf6c-a49b-4bd4-a9b7-a3537bd54a92",
        "parentId" : null,
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "If removing the symbolic link resolution, then the method comment should be updated.\n",
        "createdAt" : "2016-08-22T20:20:32Z",
        "updatedAt" : "2016-08-22T21:13:36Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      },
      {
        "id" : "e3a7c349-a435-4555-b089-1a4ca6647dbc",
        "parentId" : "bf59cf6c-a49b-4bd4-a9b7-a3537bd54a92",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "done\n",
        "createdAt" : "2016-08-22T21:13:46Z",
        "updatedAt" : "2016-08-22T21:13:46Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "14faf12cd5f4127e936f770c99af8da775e4ac44",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +63,67 @@      return null;\n    String path = result.stdout.trim().split('\\n').first.trim();\n    return new File(path);\n  }\n"
  },
  {
    "id" : "c4186c7e-6ffb-49c5-b03e-1ccc93f4e4f4",
    "prId" : 7622,
    "prUrl" : "https://github.com/flutter/flutter/pull/7622#pullrequestreview-18304046",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94c8d430-c029-4c4c-97f1-f5616fcbcf22",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "... then you don't need to default it here.",
        "createdAt" : "2017-01-25T00:07:00Z",
        "updatedAt" : "2017-01-25T00:37:07Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "16a94480-b086-4ae4-a757-70e2afdc0f57",
        "parentId" : "94c8d430-c029-4c4c-97f1-f5616fcbcf22",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "See other comment.",
        "createdAt" : "2017-01-25T00:37:47Z",
        "updatedAt" : "2017-01-25T00:37:47Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9277c7c3a2dbe7856f1db79571c95d035645200",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +129,133 @@  @override\n  String getExecutableName(String binaryName, { String winExtension }) {\n    winExtension ??= 'exe';\n    if (path.extension(binaryName).isEmpty && winExtension.isNotEmpty)\n      return '$binaryName.$winExtension';"
  },
  {
    "id" : "18f2e83b-4566-43c8-91ed-3feccf7e6a46",
    "prId" : 58390,
    "prUrl" : "https://github.com/flutter/flutter/pull/58390#pullrequestreview-422913271",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "869fd331-3b75-4ead-86d7-5ec20fef1b16",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "If `Expand-Archive` fails when the zip file is malformed, I wonder if `verifyZip` could be implemented by using the Windows equivalent of `/dev/null` as the output path.",
        "createdAt" : "2020-06-01T21:27:47Z",
        "updatedAt" : "2020-06-03T19:37:43Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "45747cbd-f883-4c4b-b99c-bdb11e064bdb",
        "parentId" : "869fd331-3b75-4ead-86d7-5ec20fef1b16",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "TIL about `NUL` https://stackoverflow.com/questions/313111/is-there-a-dev-null-on-windows",
        "createdAt" : "2020-06-01T21:41:17Z",
        "updatedAt" : "2020-06-03T19:37:43Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "6c3e1154-45aa-4d9e-a20d-6d90f259d108",
        "parentId" : "869fd331-3b75-4ead-86d7-5ec20fef1b16",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Looking at cache.dart, I'm not really sure why we're verifying the zip. Expand-Archive doesn't extract anything if it fails, so verification seems like we would just be extracting it twice",
        "createdAt" : "2020-06-02T17:45:37Z",
        "updatedAt" : "2020-06-03T19:37:43Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5aeb96351844b0d4153e9a470254b5bdb3421a5c",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +346,350 @@  }\n\n  @override\n  bool verifyZip(File zipFile) => true;\n"
  },
  {
    "id" : "23c8f8b3-c6bb-4f84-8f27-943c1ecc1191",
    "prId" : 65112,
    "prUrl" : "https://github.com/flutter/flutter/pull/65112#pullrequestreview-481274502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "896c5b48-a0b0-4354-88af-56ed8e5e295e",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "where you saying that `canRun` is not reliable on Windows?",
        "createdAt" : "2020-09-02T20:24:47Z",
        "updatedAt" : "2020-09-02T20:24:47Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "7fc72b64-d7d3-41c2-b817-76e4679e1eff",
        "parentId" : "896c5b48-a0b0-4354-88af-56ed8e5e295e",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "canRun just checks if the result of https://github.com/google/process.dart/blob/cce751da2076b8345d2f17b9db5cc6fc04f60e69/lib/src/interface/common.dart#L51 is null. I'm not actually sure what it will do in this case.",
        "createdAt" : "2020-09-02T20:28:02Z",
        "updatedAt" : "2020-09-02T20:28:02Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f45eb7890b725b1d159c6fceaff240b8366fa0af",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +294,298 @@    try {\n      result = _processManager.runSync(<String>['where', execName]);\n    } on ArgumentError {\n      // `where` could be missing if system32 is not on the PATH.\n      throwToolExit("
  },
  {
    "id" : "a8dd02e3-114c-4e16-adce-c521d7c424f0",
    "prId" : 66685,
    "prUrl" : "https://github.com/flutter/flutter/pull/66685#pullrequestreview-497987984",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0b3b386-ae57-471a-a436-c087a84df071",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "is command not found the only situation we'd see an `ArgumentError` here?",
        "createdAt" : "2020-09-29T00:37:03Z",
        "updatedAt" : "2020-09-29T00:43:08Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "caba12c3-9581-419b-a314-b018e839b0fd",
        "parentId" : "e0b3b386-ae57-471a-a436-c087a84df071",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Technically we could get it by passing `null` too. If we did not have the ProcessManager wrapper, this would actually be a ProcessException",
        "createdAt" : "2020-09-29T00:42:44Z",
        "updatedAt" : "2020-09-29T00:43:08Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5d85b99cf6cc4ac678a841a32e3af918f471a47",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +216,220 @@        verboseExceptions: true,\n      );\n    } on ArgumentError {\n      // zip is not available. this error message is modeled after the download\n      // error in bin/internal/update_dart_sdk.sh"
  },
  {
    "id" : "928ec865-734d-4573-9fac-3b113a5f29fc",
    "prId" : 66685,
    "prUrl" : "https://github.com/flutter/flutter/pull/66685#pullrequestreview-497991576",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9dad9f2d-036e-4d12-b1a3-287dac040abd",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "should we enable `verboseExceptions` here too?",
        "createdAt" : "2020-09-29T00:38:37Z",
        "updatedAt" : "2020-09-29T00:43:08Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "65f60332-a676-4e30-aab4-70ce728b916a",
        "parentId" : "9dad9f2d-036e-4d12-b1a3-287dac040abd",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "done",
        "createdAt" : "2020-09-29T00:43:14Z",
        "updatedAt" : "2020-09-29T00:43:14Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "60f7c0f5-8f7e-4b1e-999e-6d88279abdc0",
        "parentId" : "9dad9f2d-036e-4d12-b1a3-287dac040abd",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "wonder if that will make any tests fail...",
        "createdAt" : "2020-09-29T00:43:33Z",
        "updatedAt" : "2020-09-29T00:43:34Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "d0ac3081-cc81-4a1f-9384-131566b8fcaf",
        "parentId" : "9dad9f2d-036e-4d12-b1a3-287dac040abd",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "pretty sure every time you ask that question, the answer is yes",
        "createdAt" : "2020-09-29T00:55:36Z",
        "updatedAt" : "2020-09-29T00:55:36Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5d85b99cf6cc4ac678a841a32e3af918f471a47",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +213,217 @@        <String>['zip', '-r', '-q', zipFile.path, '.'],\n        workingDirectory: data.path,\n        throwOnError: true,\n        verboseExceptions: true,\n      );"
  },
  {
    "id" : "b8f17aee-0e73-47df-bec6-2e409714971f",
    "prId" : 68050,
    "prUrl" : "https://github.com/flutter/flutter/pull/68050#pullrequestreview-507898230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb7f784a-9578-4e24-aef9-017af5fd78cc",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "I checked again, it exits 1 on x86 macOS 11, too. ",
        "createdAt" : "2020-10-13T23:31:25Z",
        "updatedAt" : "2020-10-14T20:19:33Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "097cd4c775fdf2cddd22601727449e7f02ff2808",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +305,309 @@          _processUtils.runSync(<String>['sysctl', 'hw.optional.arm64']);\n      // On arm64 stdout is \"sysctl hw.optional.arm64: 1\"\n      // On x86 hw.optional.arm64 is unavailable and exits with 1.\n      if (arm64Check.exitCode == 0 && arm64Check.stdout.trim().endsWith('1')) {\n        _hostPlatform = HostPlatform.darwin_arm;"
  },
  {
    "id" : "75186350-6102-480e-9fa3-5317707b2886",
    "prId" : 78901,
    "prUrl" : "https://github.com/flutter/flutter/pull/78901#pullrequestreview-619181199",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7223b10c-f14e-4d32-8e54-ecd29d527b0c",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I'm really surprised this didn't promote 🤔 ",
        "createdAt" : "2021-03-23T22:43:24Z",
        "updatedAt" : "2021-03-23T22:43:24Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "8b7d44cc-d132-4b23-9534-df4cb6151143",
        "parentId" : "7223b10c-f14e-4d32-8e54-ecd29d527b0c",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "I think if it was setting to a local it would, but because it's passed as a `String?` parameter, when I don't add the `!`s I get:\r\n```\r\nerror: The argument type 'String?' can't be assigned to the parameter type 'String'. (argument_type_not_assignable at [flutter_tools] lib/src/base/os.dart:469)\r\n```\r\nIs that what you meant?",
        "createdAt" : "2021-03-23T22:51:58Z",
        "updatedAt" : "2021-03-23T22:51:58Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "c4b121e9-4245-4d9d-8f5b-e9a677375581",
        "parentId" : "7223b10c-f14e-4d32-8e54-ecd29d527b0c",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I think `??=` normally promotes though, and parameters can be promoted unlike fields. Maybe this is more of a language question. For example:\r\n\r\n```\r\nString? foo;\r\nfoo ??= 'bar'\r\nif (foo != null) { // Err: foo cannot be null?\r\n\r\n}\r\n```\r\n\r\n",
        "createdAt" : "2021-03-23T22:53:33Z",
        "updatedAt" : "2021-03-23T22:53:34Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "3a3ef59b-5031-49c2-8a28-e5cd2ba36d8d",
        "parentId" : "7223b10c-f14e-4d32-8e54-ecd29d527b0c",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Jonah figured out this is because it's being reset in the `while` loop.  When I get rid of `while` it complains about `!`, when I get rid of `directory = parent` in the loop it also promotes.  Even though `parent` is a `String`.",
        "createdAt" : "2021-03-23T23:52:23Z",
        "updatedAt" : "2021-03-23T23:52:23Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b97cf695ac616e69fde27adb374e3b6a0c2b206",
    "line" : 224,
    "diffHunk" : "@@ -1,1 +462,466 @@String? findProjectRoot(FileSystem fileSystem, [ String? directory ]) {\n  const String kProjectRootSentinel = 'pubspec.yaml';\n  directory ??= fileSystem.currentDirectory.path;\n  while (true) {\n    if (fileSystem.isFileSync(fileSystem.path.join(directory!, kProjectRootSentinel))) {"
  }
]