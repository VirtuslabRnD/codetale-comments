[
  {
    "id" : "75095562-b266-4534-8df0-45ecc89752e9",
    "prId" : 33786,
    "prUrl" : "https://github.com/flutter/flutter/pull/33786#pullrequestreview-245123093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38d6f48e-0e55-4d1d-99aa-dbf949244420",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Should this be Windows-only?",
        "createdAt" : "2019-06-03T20:30:04Z",
        "updatedAt" : "2019-06-04T03:40:57Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "b484a1f3-a5a1-4306-8ddf-dfdcb9d9a5b0",
        "parentId" : "38d6f48e-0e55-4d1d-99aa-dbf949244420",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I don't know...",
        "createdAt" : "2019-06-03T21:01:11Z",
        "updatedAt" : "2019-06-04T03:40:57Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e89fd9eb6a9882780bd0f2dd7a178931d262e12",
    "line" : 171,
    "diffHunk" : "@@ -1,1 +169,173 @@      // profile information. Give it some time before attempting to delete\n      // the directory.\n      await Future<void>.delayed(const Duration(milliseconds: 500));\n    } catch (_) {\n      // Silently fail if we can't clean up the profile information."
  },
  {
    "id" : "05c44453-0f90-4613-af0f-0b97bcb81cba",
    "prId" : 39462,
    "prUrl" : "https://github.com/flutter/flutter/pull/39462#pullrequestreview-283108941",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4094880-7668-463e-8a83-7c6006b07009",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "stray debug print",
        "createdAt" : "2019-09-03T06:19:07Z",
        "updatedAt" : "2019-09-03T06:20:28Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "1a60cc54-9c70-4437-83e8-355dc646da19",
        "parentId" : "c4094880-7668-463e-8a83-7c6006b07009",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Fixed in https://github.com/flutter/flutter/pull/39751",
        "createdAt" : "2019-09-03T16:14:34Z",
        "updatedAt" : "2019-09-03T16:14:34Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "15dd784d05a3ac76fa48c2a18f90e3694e7193dc",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +141,145 @@      } catch (e) {\n        await chrome.close();\n        print('here');\n        throwToolExit(\n            'Unable to connect to Chrome debug port: ${chrome.debugPort}\\n $e');"
  },
  {
    "id" : "faf44242-2d19-4c54-831a-6e73ff9e8ff3",
    "prId" : 39462,
    "prUrl" : "https://github.com/flutter/flutter/pull/39462#pullrequestreview-283227158",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "073220df-aca2-4809-a90a-2c079da6fd78",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "It doesn't look like stdout is drained anywhere.",
        "createdAt" : "2019-09-03T06:20:06Z",
        "updatedAt" : "2019-09-03T06:20:28Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "4adaa89b-be10-4cbc-ba44-7b7ba854c0d8",
        "parentId" : "073220df-aca2-4809-a90a-2c079da6fd78",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I didn't think that I needed to, since I don't listen to it. Shouldn't the conversion to a Future (for stderr) deal with draining?",
        "createdAt" : "2019-09-03T16:15:21Z",
        "updatedAt" : "2019-09-03T16:15:21Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "eefcb165-c0a6-41f1-9d92-4598464c5d1b",
        "parentId" : "073220df-aca2-4809-a90a-2c079da6fd78",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Yup, that'll work.",
        "createdAt" : "2019-09-03T19:58:47Z",
        "updatedAt" : "2019-09-03T19:58:47Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "15dd784d05a3ac76fa48c2a18f90e3694e7193dc",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +201,205 @@    chromeConnection.close();\n    _process?.kill();\n    await _process?.exitCode;\n  }\n}"
  },
  {
    "id" : "5f2ca9d0-0368-45bd-b33c-c0f0169a8b17",
    "prId" : 39934,
    "prUrl" : "https://github.com/flutter/flutter/pull/39934#pullrequestreview-284980560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8dd1945-c38d-4e9a-955a-bcf551c0d3e9",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "I wonder if flutter_tools should maintain its own temp directory, perhaps inside the flutter installation. It would be easier to track all things that are generated/cached.",
        "createdAt" : "2019-09-06T16:38:34Z",
        "updatedAt" : "2019-09-06T16:38:45Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "d0651a1c-76cf-441f-9f71-43cc35d234c2",
        "parentId" : "f8dd1945-c38d-4e9a-955a-bcf551c0d3e9",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "One issue with the teardown (regardless of location) is that chrome takes a long time to actually exit, so we can't deleted the profile for several seconds after killing the chrome process (and even then it doesn't seem to reliably work).\r\n\r\nIf we kept our own cache we could check when spinning one up how many there are and delete inactive ones, to hopefully keep below a certain size?\r\n\r\nOne concern might be if this breaks, we'll fill up space that can't be so easily reclaimed",
        "createdAt" : "2019-09-06T16:50:03Z",
        "updatedAt" : "2019-09-06T16:50:03Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c2f7b4d55cacadc63965426dd16719d467cf3cc",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +80,84 @@  Future<Chrome> launch(String url, { bool headless = false, bool skipCheck = false }) async {\n    final String chromeExecutable = findChromeExecutable();\n    final Directory dataDir = fs.systemTempDirectory.createTempSync('flutter_tool_');\n    final int port = await os.findFreePort();\n    final List<String> args = <String>["
  },
  {
    "id" : "511ac7c9-72b1-4886-ba53-300d2bcd9d75",
    "prId" : 50652,
    "prUrl" : "https://github.com/flutter/flutter/pull/50652#pullrequestreview-357768974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d139b015-999b-4142-9e27-991296d67839",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Should be some existing tests for chrome, you'll want to verify that we use the right port in the launch command. I recomend something with FakeProcessManager.list(<FakeCommand>[...expected launch command])",
        "createdAt" : "2020-02-12T20:24:02Z",
        "updatedAt" : "2020-02-13T21:26:05Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "196b49f8-7ba5-4f2f-962b-7921e25d97ed",
        "parentId" : "d139b015-999b-4142-9e27-991296d67839",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done.",
        "createdAt" : "2020-02-12T20:36:30Z",
        "updatedAt" : "2020-02-13T21:26:05Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4eb1abd7212e2293c92fc5df3a33a491961d6547",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +121,125 @@    }\n\n    final int port = debugPort ?? await globals.os.findFreePort();\n    final List<String> args = <String>[\n      chromeExecutable,"
  },
  {
    "id" : "0845f0a4-ae84-40ff-90e8-3303cd139a51",
    "prId" : 52789,
    "prUrl" : "https://github.com/flutter/flutter/pull/52789#pullrequestreview-377043664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "165f3fa4-30e9-4336-8280-6ff85e817fa9",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Can this be tested somehow?",
        "createdAt" : "2020-03-18T07:21:00Z",
        "updatedAt" : "2020-03-18T18:06:07Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "2f2c5f7b-6e5e-4a38-b07b-6710eb2274ce",
        "parentId" : "165f3fa4-30e9-4336-8280-6ff85e817fa9",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done.",
        "createdAt" : "2020-03-18T16:39:50Z",
        "updatedAt" : "2020-03-18T18:06:07Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "15078e04cde906517ec68e52b065626bb349e548",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +266,270 @@  Future<int> get onExit => _process.exitCode;\n\n  Future<void> close() async {\n    if (ChromeLauncher.hasChromeInstance) {\n      ChromeLauncher._currentCompleter = Completer<Chrome>();"
  },
  {
    "id" : "27ad9b5a-57e2-4fa6-9c4c-6777e9b103fb",
    "prId" : 53030,
    "prUrl" : "https://github.com/flutter/flutter/pull/53030#pullrequestreview-379805601",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aae0c86c-c9e4-4bf1-8477-1efdb20344c3",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Is there a link you can add in a comment either describing the schema of this file, or at least of this field?\r\n\r\nAlso, is there a test for the find/replace?",
        "createdAt" : "2020-03-23T16:00:12Z",
        "updatedAt" : "2020-03-24T01:05:36Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "e3180f2a-8d46-41d8-8ca5-df93a42520f3",
        "parentId" : "aae0c86c-c9e4-4bf1-8477-1efdb20344c3",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "I don't believe there's a schema. The existing test (this portion of the PR is existing code) does contain a check for the find / replace for the crash string.",
        "createdAt" : "2020-03-23T19:53:47Z",
        "updatedAt" : "2020-03-24T01:05:36Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "120f8acf-c390-4fb5-ba98-341d7a4617b9",
        "parentId" : "aae0c86c-c9e4-4bf1-8477-1efdb20344c3",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I found one of file locations by reading chrome source, we could link to that?",
        "createdAt" : "2020-03-23T19:54:02Z",
        "updatedAt" : "2020-03-24T01:05:36Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "85c0010e-79c6-4955-a97c-f6bf9b9b9c12",
        "parentId" : "aae0c86c-c9e4-4bf1-8477-1efdb20344c3",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Can you link it here, and I'll add to the PR?",
        "createdAt" : "2020-03-23T19:55:13Z",
        "updatedAt" : "2020-03-24T01:05:36Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "ba0e6750-1a5b-4092-9a05-7a3dbee480a5",
        "parentId" : "aae0c86c-c9e4-4bf1-8477-1efdb20344c3",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I can't find it, It might have just been grepping the user data dir for strings",
        "createdAt" : "2020-03-23T20:28:37Z",
        "updatedAt" : "2020-03-24T01:05:36Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "ba30e86f-1be9-44f6-865c-277cfb0fb632",
        "parentId" : "aae0c86c-c9e4-4bf1-8477-1efdb20344c3",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "I found some info here: https://www.chromium.org/developers/design-documents/preferences; will in-line into the source code.",
        "createdAt" : "2020-03-23T20:41:26Z",
        "updatedAt" : "2020-03-24T01:05:36Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "98340b70e33174990b0dbe12d6d8ec8f701ac31d",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +212,216 @@      // If the file contains a crash string, remove it to hide the popup on next run.\n      final String contents = sourcePreferencesFile.readAsStringSync();\n      targetPreferencesFile.writeAsStringSync(contents\n          .replaceFirst('\"exit_type\":\"Crashed\"', '\"exit_type\":\"Normal\"'));\n    }"
  },
  {
    "id" : "79c455bd-684b-4dcf-b18f-165618cc9cbc",
    "prId" : 67466,
    "prUrl" : "https://github.com/flutter/flutter/pull/67466#pullrequestreview-505001355",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "485e6836-9f80-496a-8bf5-db1fccf8916c",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "`throwToolExit`",
        "createdAt" : "2020-10-07T21:14:59Z",
        "updatedAt" : "2020-10-07T23:02:55Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "102007d6-d6ad-40eb-8cd3-6342d11d202a",
        "parentId" : "485e6836-9f80-496a-8bf5-db1fccf8916c",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Can't use `throwToolExit` because the function must end with a `return` or `throw`.",
        "createdAt" : "2020-10-07T21:27:03Z",
        "updatedAt" : "2020-10-07T23:02:55Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "bfb3ca80-8c37-4c0b-b8b0-3ab67c4fee6a",
        "parentId" : "485e6836-9f80-496a-8bf5-db1fccf8916c",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Would it help if we made `throwToolExit` return `Never`?",
        "createdAt" : "2020-10-08T05:37:16Z",
        "updatedAt" : "2020-10-08T05:37:16Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "f40ed1d1-3e8b-459d-9680-bcf149c45f5d",
        "parentId" : "485e6836-9f80-496a-8bf5-db1fccf8916c",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "We cannot do that until we migrate to null safety",
        "createdAt" : "2020-10-08T17:19:58Z",
        "updatedAt" : "2020-10-08T17:19:58Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca6a77929c050b29d14ff56bff3a94fe34b770d4",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +276,280 @@          }\n          _logger.printTrace('Failed to launch browser. Command used to launch it: ${args.join(' ')}');\n          throw ToolExit(\n            'Failed to launch browser. Make sure you are using an up-to-date '\n            'Chrome or Edge. Otherwise, consider using -d web-server instead '"
  },
  {
    "id" : "c4d493a6-fdfa-4860-99e9-79020f100c69",
    "prId" : 67466,
    "prUrl" : "https://github.com/flutter/flutter/pull/67466#pullrequestreview-504325453",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb62222b-7496-46bb-9e7d-25f9572433c7",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "This can throw dart:io exceptions if the process fails in certain ways/at certain times. Ditto for `process.stdout` which is another reason to do `.listen().asFuture()` and await the `Future` in a `try {} catch {}` for it.",
        "createdAt" : "2020-10-07T22:04:02Z",
        "updatedAt" : "2020-10-07T23:02:55Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "edb96cd3-4a15-4555-bcd5-77547ddd85b9",
        "parentId" : "fb62222b-7496-46bb-9e7d-25f9572433c7",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "This sounds like a good future enhancement. I'd prefer to wait until it actually happens, so we can recreate the exact situation in a test. I ran this code 18000 times and it worked fine.",
        "createdAt" : "2020-10-07T23:01:06Z",
        "updatedAt" : "2020-10-07T23:02:55Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca6a77929c050b29d14ff56bff3a94fe34b770d4",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +257,261 @@      // only required for flutter_test --platform=chrome and not flutter run.\n      bool hitGlibcBug = false;\n      await process.stderr\n        .transform(utf8.decoder)\n        .transform(const LineSplitter())"
  },
  {
    "id" : "e1147a30-e35b-4c0c-bc69-319b6953cc26",
    "prId" : 67466,
    "prUrl" : "https://github.com/flutter/flutter/pull/67466#pullrequestreview-508585767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5afa27f6-7d83-4ac2-8256-ea25913266dc",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "drive by comment: if this code ever has to run on windows, it might fail to kill the process _and_ fail to block execution, leading to accumulation of processes.",
        "createdAt" : "2020-10-08T05:39:36Z",
        "updatedAt" : "2020-10-08T05:39:36Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "50b0000b-8d2d-424f-af46-d293a3ed536a",
        "parentId" : "5afa27f6-7d83-4ac2-8256-ea25913266dc",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "What's a good way to do this on Windows?",
        "createdAt" : "2020-10-14T16:50:03Z",
        "updatedAt" : "2020-10-14T16:50:04Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "fcefb8ff-89cf-424c-9973-a17784bc5e1c",
        "parentId" : "5afa27f6-7d83-4ac2-8256-ea25913266dc",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "There isn't one unfortunately. As far as I can tell, Dart does not offer a way to reliably kill processes on windows - if you want to be really paranoid about it you can try to sleep/poll for when the process actually dies, but if the process is really stuck (like, you have to reboot the machine stuck), that might never end.\r\n\r\nWindows doesn't quite have a \"kill -9\" idea.",
        "createdAt" : "2020-10-14T17:44:22Z",
        "updatedAt" : "2020-10-14T17:44:22Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca6a77929c050b29d14ff56bff3a94fe34b770d4",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +291,295 @@      // launching more processes.\n      unawaited(process.exitCode.timeout(const Duration(seconds: 1), onTimeout: () {\n        process.kill();\n        return null;\n      }));"
  },
  {
    "id" : "d8c10923-df90-4374-9f32-5005d97e9e5d",
    "prId" : 67882,
    "prUrl" : "https://github.com/flutter/flutter/pull/67882#pullrequestreview-506266310",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53bda942-c67a-453f-b63b-270577d2efbc",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "[Headful](https://www.merriam-webster.com/dictionary/headful#:~:text=%3A%20a%20quantity%20(as%20of%20information)%20that%20fills%20the%20head)? I have no idea :)",
        "createdAt" : "2020-10-12T02:37:30Z",
        "updatedAt" : "2020-10-12T02:37:38Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "18aa016e-d74b-46a9-810e-7d4166657d93",
        "parentId" : "53bda942-c67a-453f-b63b-270577d2efbc",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "not headless .. heady? 🤷‍♂️ I did write this after all",
        "createdAt" : "2020-10-12T03:07:53Z",
        "updatedAt" : "2020-10-12T03:07:54Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "83445f56d61a5b02071c965356f3985b33098aa5",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +164,168 @@  ///\n  /// [headless] defaults to false, and controls whether we open a headless or\n  /// a \"headfull\" browser.\n  ///\n  /// [debugPort] is Chrome's debugging protocol port. If null, a random free"
  },
  {
    "id" : "0b525f00-33ff-4a05-b820-02c87145d17a",
    "prId" : 77066,
    "prUrl" : "https://github.com/flutter/flutter/pull/77066#pullrequestreview-602328933",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a02f74d2-f4a1-4a90-a949-6097784f3035",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This has to become a public API otherwise it is not possible to implement the API with a test class",
        "createdAt" : "2021-03-02T15:28:51Z",
        "updatedAt" : "2021-03-02T22:25:00Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "10c5b475-41f7-4a56-bc70-ef12cba06aae",
        "parentId" : "a02f74d2-f4a1-4a90-a949-6097784f3035",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Can it be `@visibleForTesting`?",
        "createdAt" : "2021-03-02T18:11:43Z",
        "updatedAt" : "2021-03-02T22:25:00Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "b7841d5c-4e9f-4bf8-8855-2a0a6c2856bb",
        "parentId" : "a02f74d2-f4a1-4a90-a949-6097784f3035",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Fixed",
        "createdAt" : "2021-03-02T22:25:08Z",
        "updatedAt" : "2021-03-02T22:25:08Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e533e73e7c820b2ea51024c93600ce892da8d0cc",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +138,142 @@\n  @visibleForTesting\n  Completer<Chromium> currentCompleter = Completer<Chromium>();\n\n  /// Whether we can locate the chrome executable."
  },
  {
    "id" : "6562f945-dd9c-43da-a08a-348a928eddcb",
    "prId" : 78386,
    "prUrl" : "https://github.com/flutter/flutter/pull/78386#pullrequestreview-613887385",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ecb8e85-6a40-49da-bd82-73aea331c523",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "So that's where that was coming from.",
        "createdAt" : "2021-03-17T03:13:52Z",
        "updatedAt" : "2021-03-18T01:07:19Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef61159d20611b095879515f96645df214515a13",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +174,178 @@    final String chromeExecutable = _browserFinder(_platform, _fileSystem);\n\n    if (_logger.isVerbose && !_platform.isWindows) {\n      // Note: --version is not supported on windows.\n      final ProcessResult versionResult = await _processManager.run(<String>[chromeExecutable, '--version']);"
  },
  {
    "id" : "c44062a4-ca61-4831-8605-85732e4c282f",
    "prId" : 80758,
    "prUrl" : "https://github.com/flutter/flutter/pull/80758#pullrequestreview-639393591",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "850c42c4-b75c-49c8-a8bf-a5bc5c98a565",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "When you install Chrome on a Mac it asks which architecture you want to install, and it will happily run in Rosetta if you choose \"Mac with Intel Chip\".  So don't assume ARM macs have ARM Chrome installed, and check.\r\n\r\n<img width=\"593\" alt=\"Screen Shot 2021-04-19 at 4 45 52 PM\" src=\"https://user-images.githubusercontent.com/682784/115316703-b6a89080-a12e-11eb-8e6f-6655700a75c6.png\">\r\n",
        "createdAt" : "2021-04-19T23:46:56Z",
        "updatedAt" : "2021-04-21T00:28:41Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "23459d21c56ef3ea6204851e6ee2e56612d5077f",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +239,243 @@    if (_operatingSystemUtils.hostPlatform == HostPlatform.darwin_arm) {\n      final ProcessResult result = _processManager.runSync(<String>['file', chromeExecutable]);\n      // Check if ARM Chrome is installed.\n      // Mach-O 64-bit executable arm64\n      if ((result.stdout as String).contains('arm64')) {"
  },
  {
    "id" : "f8fcbeeb-d9da-431e-b5e4-106e2f49f548",
    "prId" : 80758,
    "prUrl" : "https://github.com/flutter/flutter/pull/80758#pullrequestreview-640582123",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47f2b179-0377-4534-8137-7af5c708d563",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "nit. should we leave ourselves a `printTrace()` breadcrumb here (in case we run into some bug where launching we get failures launching the arm build)?",
        "createdAt" : "2021-04-20T18:30:57Z",
        "updatedAt" : "2021-04-21T00:28:41Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "80deefc3-5cec-45d7-a1c6-fc21efc63c57",
        "parentId" : "47f2b179-0377-4534-8137-7af5c708d563",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Done.",
        "createdAt" : "2021-04-21T02:39:56Z",
        "updatedAt" : "2021-04-21T02:39:56Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "23459d21c56ef3ea6204851e6ee2e56612d5077f",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +241,245 @@      // Check if ARM Chrome is installed.\n      // Mach-O 64-bit executable arm64\n      if ((result.stdout as String).contains('arm64')) {\n        _logger.printTrace('Found ARM Chrome installation at $chromeExecutable, forcing native launch.');\n        // If so, force Chrome to launch natively."
  }
]