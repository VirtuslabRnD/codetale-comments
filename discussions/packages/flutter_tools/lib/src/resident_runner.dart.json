[
  {
    "id" : "8f51fa1e-9dc1-4761-b220-86e3454ca423",
    "prId" : 5453,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa08a6bf-3daf-4f97-b8b7-887b4ea723b2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This should say what's going to happen next, e.g. \"Caught SIGUSR1 - attempting hot reload\".\n",
        "createdAt" : "2016-08-17T16:25:44Z",
        "updatedAt" : "2016-08-17T16:25:44Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "8648209e-73a0-4bc6-aab4-4054c58488ff",
        "parentId" : "aa08a6bf-3daf-4f97-b8b7-887b4ea723b2",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "The hot reload code that we call immediately prints that it is doing a hot reload.\n",
        "createdAt" : "2016-08-18T16:41:43Z",
        "updatedAt" : "2016-08-18T16:41:43Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "62f31b6951e040055383813bd5d67eaaa5a6983c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +67,71 @@    });\n    ProcessSignal.SIGUSR1.watch().listen((ProcessSignal signal) async {\n      printStatus('Caught SIGUSR1');\n      await restart(fullRestart: false);\n    });"
  },
  {
    "id" : "3f9f730f-a704-44a0-b45c-8b5a54881811",
    "prId" : 5453,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24e8446a-c16c-45a6-ac29-48a69ac618be",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ditto\n",
        "createdAt" : "2016-08-17T16:25:47Z",
        "updatedAt" : "2016-08-17T16:25:47Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3177530a-008c-47cb-946f-14ca89f9348c",
        "parentId" : "24e8446a-c16c-45a6-ac29-48a69ac618be",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "ditto\n",
        "createdAt" : "2016-08-18T16:41:47Z",
        "updatedAt" : "2016-08-18T16:41:47Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "62f31b6951e040055383813bd5d67eaaa5a6983c",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +72,76 @@    ProcessSignal.SIGUSR2.watch().listen((ProcessSignal signal) async {\n      printStatus('Caught SIGUSR2');\n      await restart(fullRestart: true);\n    });\n  }"
  },
  {
    "id" : "2c4943bc-6fac-4a5e-8030-961d3c63dc37",
    "prId" : 7061,
    "prUrl" : "https://github.com/flutter/flutter/pull/7061#pullrequestreview-10873779",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7456403d-6044-47f5-bfc7-274386b0b2cf",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "httpUri and wsUri are redundant with each other.",
        "createdAt" : "2016-11-29T17:15:42Z",
        "updatedAt" : "2016-12-01T01:11:37Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "edeba483-dd45-4186-a708-f15e138a56bb",
        "parentId" : "7456403d-6044-47f5-bfc7-274386b0b2cf",
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "Agreed. Added a TODO and will be cleaned up as part of https://github.com/flutter/flutter/issues/7050",
        "createdAt" : "2016-11-30T23:32:08Z",
        "updatedAt" : "2016-12-01T01:11:37Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4d39b0379cdd667e3822d069709d6d2c6c6d947",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +288,292 @@\nclass DebugConnectionInfo {\n  DebugConnectionInfo({ this.httpUri, this.wsUri, this.baseUri });\n\n  // TODO(danrubel): the httpUri field should be removed as part of"
  },
  {
    "id" : "a4c713fb-ad34-4292-9285-151b4099bcc0",
    "prId" : 7800,
    "prUrl" : "https://github.com/flutter/flutter/pull/7800#pullrequestreview-19716222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c9e284d-1763-440c-bad4-c85349cc6ad7",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Should we try to extract the logic here and in screenshot.dart to share nice features like these?",
        "createdAt" : "2017-02-02T02:16:40Z",
        "updatedAt" : "2017-02-02T05:22:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "be276f20-81ac-4b69-b0ed-c8c6f812f6db",
        "parentId" : "2c9e284d-1763-440c-bad4-c85349cc6ad7",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "The problem is that screenshot.dart has a very different context. It doesn't have a VMService connection for example. We could provide a way to specify the observatory port, etc, but that seems more work than this is worth.",
        "createdAt" : "2017-02-02T05:21:52Z",
        "updatedAt" : "2017-02-02T05:22:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c9b82b519bbf5124de8f977f919a698be797905",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +114,118 @@        await vmService.vm.refreshViews();\n      if (isRunningDebug)\n        await currentView.uiIsolate.flutterDebugAllowBanner(false);\n      if (!await device.takeScreenshot(outputFile))\n        printError('Error taking screenshot.');"
  },
  {
    "id" : "62b552a3-9421-45fc-946c-d415ce4fe8f3",
    "prId" : 8764,
    "prUrl" : "https://github.com/flutter/flutter/pull/8764#pullrequestreview-26864144",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36417a4d-9b38-4507-8f7b-7b9fd2017b8e",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "Why is this needed? ",
        "createdAt" : "2017-03-14T16:19:48Z",
        "updatedAt" : "2017-03-14T17:31:30Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "ddb7bdff-387b-4e15-8cc5-a547dcdddb62",
        "parentId" : "36417a4d-9b38-4507-8f7b-7b9fd2017b8e",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Apps on Fuchsia don't shut down cleanly after a 'q'. This is useful maybe only until I track that down and/or while bringing up hot reload for Fuchsia. I'll leave this here and remove the help message.",
        "createdAt" : "2017-03-14T16:43:25Z",
        "updatedAt" : "2017-03-14T17:31:30Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "949f5a9a15d7f59bc02c162d9656bd2a6cc558c2",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +280,284 @@      await stop();\n      return true;\n    } else if (lower == 'd') {\n      await detach();\n      return true;"
  },
  {
    "id" : "c69dd672-c721-4f31-9640-82dca27fa997",
    "prId" : 9585,
    "prUrl" : "https://github.com/flutter/flutter/pull/9585#pullrequestreview-34751536",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f68f1985-326d-43fa-8ca4-759727cc658e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This (and the next one) seem unlikely to be useful to the user, but I don't have a better suggestion.\r\n(Dumping one tree is bad enough, dumping multiple trees... yikes. I guess at least they won't overlap.)",
        "createdAt" : "2017-04-26T00:32:59Z",
        "updatedAt" : "2017-04-26T19:46:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "6d934bdb-c219-4da3-8346-e335848ebbdf",
        "parentId" : "f68f1985-326d-43fa-8ca4-759727cc658e",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "I could imagine adding an 'Are you sure? (y/n)' sort of thing, but for now I think I should just make it do what it says it'll do.",
        "createdAt" : "2017-04-26T05:59:25Z",
        "updatedAt" : "2017-04-26T19:46:31Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e88ca6ba93a60a004b12a9a729e67e30d8cc89ba",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +140,144 @@  Future<Null> debugDumpApp() async {\n    for (FlutterView view in views)\n      await view.uiIsolate.flutterDebugDumpApp();\n  }\n"
  },
  {
    "id" : "419fafe4-ba7d-4bc2-9f8b-cf27f2d028a0",
    "prId" : 12872,
    "prUrl" : "https://github.com/flutter/flutter/pull/12872#pullrequestreview-74606719",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61d4b641-7ce4-47db-b59d-c0b730cb7e16",
        "parentId" : null,
        "authorId" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "body" : "assert deviceAssetsDirectoryUri != null ?",
        "createdAt" : "2017-11-06T23:48:55Z",
        "updatedAt" : "2018-01-04T22:02:30Z",
        "lastEditedBy" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "tags" : [
        ]
      },
      {
        "id" : "5fb38f98-a58e-484b-8bf5-5d2a3995085d",
        "parentId" : "61d4b641-7ce4-47db-b59d-c0b730cb7e16",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Done",
        "createdAt" : "2017-11-07T00:17:12Z",
        "updatedAt" : "2018-01-04T22:02:30Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "e0c7c55e46309b35b10d8ad62d00d7862146dbcb",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +144,148 @@  Future<Null> resetAssetDirectory() async {\n    final Uri deviceAssetsDirectoryUri = devFS.baseUri.resolveUri(\n        fs.path.toUri(getAssetBuildDirectory()));\n    assert(deviceAssetsDirectoryUri != null);\n    await Future.wait(views.map("
  },
  {
    "id" : "ed78be3c-0e0b-49b1-9b8b-11c9e1bd18d7",
    "prId" : 23529,
    "prUrl" : "https://github.com/flutter/flutter/pull/23529#pullrequestreview-169024620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c346a197-8b0c-4b9f-bc0e-41c1af6e2eac",
        "parentId" : null,
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "I think my intent was not to `await `here, so refreshViews could continue without blocking. Was there a reason you put `await` back?",
        "createdAt" : "2018-10-26T19:47:25Z",
        "updatedAt" : "2018-10-27T22:36:55Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "76107ce7-fc52-4640-be98-b7d9388b6dd4",
        "parentId" : "c346a197-8b0c-4b9f-bc0e-41c1af6e2eac",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "The caller of `refreshViews()` can choose to not await the returned future.  The use of async/await here is semantically equivalent to what you were trying to do with the `Completer`.",
        "createdAt" : "2018-10-26T19:55:54Z",
        "updatedAt" : "2018-10-27T22:36:55Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "e31e2231-e7ea-4718-b5cf-3e4a0aaa369e",
        "parentId" : "c346a197-8b0c-4b9f-bc0e-41c1af6e2eac",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Ok, got it.",
        "createdAt" : "2018-10-26T21:39:45Z",
        "updatedAt" : "2018-10-27T22:36:55Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "cad558b3-fb48-411f-b83d-53d6433af189",
        "parentId" : "c346a197-8b0c-4b9f-bc0e-41c1af6e2eac",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yeah these are identical semantically. I happened to have already made this change on my branch; I didn't put the await back so much as have to resolve the merge, and I went with the shorter option. :-)",
        "createdAt" : "2018-10-26T22:57:00Z",
        "updatedAt" : "2018-10-27T22:36:55Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d58c923fd1a46e9ea37d5cf3a42b4eb2fc81026",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +86,90 @@    for (VMService service in vmServices)\n      futures.add(service.vm.refreshViews(waitForViews: true));\n    await Future.wait(futures);\n  }\n"
  },
  {
    "id" : "4e4587c1-2f26-4f7f-8740-56c2f7924fc0",
    "prId" : 23529,
    "prUrl" : "https://github.com/flutter/flutter/pull/23529#pullrequestreview-169549519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60569a8c-1b7c-4771-af7f-d0dcf80f939c",
        "parentId" : null,
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "This is the change that breaks named_isolates_test.\r\nFrom what I can tell flutter engine is getting stuck processing two concurrent listViews requests https://github.com/flutter/engine/blob/master/runtime/service_protocol.cc#L237.\r\n\r\ncc @jason-simmons @chinmaygarde ",
        "createdAt" : "2018-10-29T17:12:23Z",
        "updatedAt" : "2018-10-29T17:12:24Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "72dc8224-96aa-4742-9d4a-2505be7cc0a0",
        "parentId" : "60569a8c-1b7c-4771-af7f-d0dcf80f939c",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "To reproduce the failure pick up this new implementation of refreshViews() method and run named_isolates_test locally from `$FH/flutter/dev/devicelab`: `$FH/flutter/bin/cache/dart-sdk/bin/dart bin/run.dart -t named_isolates_test`",
        "createdAt" : "2018-10-29T19:20:51Z",
        "updatedAt" : "2018-10-29T19:20:52Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "e927883a-040c-45ae-8228-5ff517ecd526",
        "parentId" : "60569a8c-1b7c-4771-af7f-d0dcf80f939c",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "I am fixing refreshViews so it is app-wide, rather than isolate-specific message, that should fix deadlock in the engine((in https://github.com/flutter/flutter/commit/89665ac4527fd8e9cadc1df28c86c9b0c8659a58). @chinmaygarde is making engine more robust to these kind of scenarios.",
        "createdAt" : "2018-10-29T20:27:34Z",
        "updatedAt" : "2018-10-29T20:27:34Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "75dbadce-4932-48d2-a45b-ebc6ebefc907",
        "parentId" : "60569a8c-1b7c-4771-af7f-d0dcf80f939c",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "awesome.",
        "createdAt" : "2018-10-29T22:42:44Z",
        "updatedAt" : "2018-10-29T22:42:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d58c923fd1a46e9ea37d5cf3a42b4eb2fc81026",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +489,493 @@    for (FlutterDevice device in flutterDevices)\n      futures.add(device.refreshViews());\n    await Future.wait(futures);\n  }\n"
  },
  {
    "id" : "ba227449-40db-4efd-b968-e8945a60cd1f",
    "prId" : 23531,
    "prUrl" : "https://github.com/flutter/flutter/pull/23531#pullrequestreview-186804748",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c285b496-f57d-450d-91a8-837099ec8651",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Curious - what's wrong with `i++` in a for loop?",
        "createdAt" : "2018-12-19T18:50:03Z",
        "updatedAt" : "2018-12-20T23:16:48Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "797bc07d-e4d9-4c5b-91ab-54831e38a218",
        "parentId" : "c285b496-f57d-450d-91a8-837099ec8651",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Nothing, I just have a personal vendetta against `++`.",
        "createdAt" : "2018-12-20T00:13:49Z",
        "updatedAt" : "2018-12-20T23:16:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f49aff478cf40502c0d2210f3bb084159ea6f300",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +72,76 @@      return;\n    final List<VMService> localVmServices = List<VMService>(observatoryUris.length);\n    for (int i = 0; i < observatoryUris.length; i += 1) {\n      printTrace('Connecting to service protocol: ${observatoryUris[i]}');\n      localVmServices[i] = await VMService.connect("
  },
  {
    "id" : "80348a73-a6e4-4735-8069-ca32abda148b",
    "prId" : 27257,
    "prUrl" : "https://github.com/flutter/flutter/pull/27257#pullrequestreview-203582159",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdd057a0-1fac-4bbc-be05-893cb7ad5017",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Maybe add a comment here about why this is hardcoded.",
        "createdAt" : "2019-02-14T06:16:05Z",
        "updatedAt" : "2019-02-14T20:54:11Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e07b4df77fafaed8bd803246fb1dff1ae2ee9640",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +900,904 @@    /// runner instead.\n    if (experimentalBuildEnabled) {\n      return false;\n    }\n    final DartDependencySetBuilder dartDependencySetBuilder ="
  },
  {
    "id" : "55d1c505-147a-4e72-ab4f-1391db94dcf5",
    "prId" : 35762,
    "prUrl" : "https://github.com/flutter/flutter/pull/35762#pullrequestreview-259166342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fea0e0a-b7c3-47f8-b544-d3bda365a414",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "looks like `'H'` used to work here",
        "createdAt" : "2019-07-08T21:28:00Z",
        "updatedAt" : "2019-07-08T21:38:10Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "29443e7bbb5151496fdcf5c179ab8492f0ddd431",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +821,825 @@        await detach();\n        return true;\n      case 'h':\n      case 'H':\n      case '?':"
  },
  {
    "id" : "ba42c042-ada4-474c-822b-b37144cdfa0c",
    "prId" : 35762,
    "prUrl" : "https://github.com/flutter/flutter/pull/35762#pullrequestreview-259167151",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a85ca52d-b18c-4bda-bf4e-2c761aaf8825",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "same for `'W'`",
        "createdAt" : "2019-07-08T21:29:48Z",
        "updatedAt" : "2019-07-08T21:38:10Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "8fd04cca-8578-4938-b6ca-afba96992b56",
        "parentId" : "a85ca52d-b18c-4bda-bf4e-2c761aaf8825",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "et. al",
        "createdAt" : "2019-07-08T21:29:54Z",
        "updatedAt" : "2019-07-08T21:38:10Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "29443e7bbb5151496fdcf5c179ab8492f0ddd431",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +889,893 @@        }\n        return false;\n      case 'w':\n      case 'W':\n        if (supportsServiceProtocol) {"
  },
  {
    "id" : "c2a256d4-fb94-43a2-b230-96b0009cd5af",
    "prId" : 35846,
    "prUrl" : "https://github.com/flutter/flutter/pull/35846#pullrequestreview-261072361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6f92166-1dad-441d-8fe5-0fd547f1e041",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "In analytics there are some unhandled JSON RPC exceptions bubbling up through here. Since you're in this code, would you mind catching those and failing more gracefully?",
        "createdAt" : "2019-07-11T18:32:06Z",
        "updatedAt" : "2019-07-11T18:33:09Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "0cc77232-c84d-4591-bfd2-227ffd481337",
        "parentId" : "c6f92166-1dad-441d-8fe5-0fd547f1e041",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Can you send me link to some of the stack traces?",
        "createdAt" : "2019-07-11T18:53:31Z",
        "updatedAt" : "2019-07-11T18:53:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "d76205bf-3efc-4d94-87e3-a0cc357f6872",
        "parentId" : "c6f92166-1dad-441d-8fe5-0fd547f1e041",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Actually, we're already wrapping the restart operation in a `try/finally` at:\r\n\r\nhttps://github.com/flutter/flutter/blob/master/packages/flutter_tools/lib/src/run_hot.dart#L513\r\n\r\nIt seems like that should extended to include a catch that marks the return as a failure?",
        "createdAt" : "2019-07-11T19:00:22Z",
        "updatedAt" : "2019-07-11T19:00:23Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "a1a76f08-f2e4-4857-a70e-9be14f0f46e6",
        "parentId" : "c6f92166-1dad-441d-8fe5-0fd547f1e041",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "From digging into the stack trace more, this error is going down a slightly different path in the daemon: \r\n\r\nhttps://github.com/flutter/flutter/blob/v1.7.8%2Bhotfix.3/packages/flutter_tools/lib/src/commands/daemon.dart#L874\r\n\r\nI think we could add error handling to run_hot instead, and pass a `fatal` flag if the error is one of these json rpc exceptions so we can print a better error",
        "createdAt" : "2019-07-11T23:40:08Z",
        "updatedAt" : "2019-07-11T23:40:08Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "dee0273d-5616-4dbb-b611-89bafa7614e5",
        "parentId" : "c6f92166-1dad-441d-8fe5-0fd547f1e041",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "sgtm",
        "createdAt" : "2019-07-12T06:02:07Z",
        "updatedAt" : "2019-07-12T06:02:07Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c41ce9d4d281c535f07af23ba458fa2e4dc616c2",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +1000,1004 @@          return false;\n        }\n        final OperationResult result = await residentRunner.restart(fullRestart: true);\n        if (!result.isOk) {\n          printStatus('Try again after fixing the above error(s).', emphasis: true);"
  }
]