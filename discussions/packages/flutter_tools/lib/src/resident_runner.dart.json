[
  {
    "id" : "8f51fa1e-9dc1-4761-b220-86e3454ca423",
    "prId" : 5453,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa08a6bf-3daf-4f97-b8b7-887b4ea723b2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This should say what's going to happen next, e.g. \"Caught SIGUSR1 - attempting hot reload\".\n",
        "createdAt" : "2016-08-17T16:25:44Z",
        "updatedAt" : "2016-08-17T16:25:44Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "8648209e-73a0-4bc6-aab4-4054c58488ff",
        "parentId" : "aa08a6bf-3daf-4f97-b8b7-887b4ea723b2",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "The hot reload code that we call immediately prints that it is doing a hot reload.\n",
        "createdAt" : "2016-08-18T16:41:43Z",
        "updatedAt" : "2016-08-18T16:41:43Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "62f31b6951e040055383813bd5d67eaaa5a6983c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +67,71 @@    });\n    ProcessSignal.SIGUSR1.watch().listen((ProcessSignal signal) async {\n      printStatus('Caught SIGUSR1');\n      await restart(fullRestart: false);\n    });"
  },
  {
    "id" : "3f9f730f-a704-44a0-b45c-8b5a54881811",
    "prId" : 5453,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24e8446a-c16c-45a6-ac29-48a69ac618be",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ditto\n",
        "createdAt" : "2016-08-17T16:25:47Z",
        "updatedAt" : "2016-08-17T16:25:47Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3177530a-008c-47cb-946f-14ca89f9348c",
        "parentId" : "24e8446a-c16c-45a6-ac29-48a69ac618be",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "ditto\n",
        "createdAt" : "2016-08-18T16:41:47Z",
        "updatedAt" : "2016-08-18T16:41:47Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "62f31b6951e040055383813bd5d67eaaa5a6983c",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +72,76 @@    ProcessSignal.SIGUSR2.watch().listen((ProcessSignal signal) async {\n      printStatus('Caught SIGUSR2');\n      await restart(fullRestart: true);\n    });\n  }"
  },
  {
    "id" : "2c4943bc-6fac-4a5e-8030-961d3c63dc37",
    "prId" : 7061,
    "prUrl" : "https://github.com/flutter/flutter/pull/7061#pullrequestreview-10873779",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7456403d-6044-47f5-bfc7-274386b0b2cf",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "httpUri and wsUri are redundant with each other.",
        "createdAt" : "2016-11-29T17:15:42Z",
        "updatedAt" : "2016-12-01T01:11:37Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "edeba483-dd45-4186-a708-f15e138a56bb",
        "parentId" : "7456403d-6044-47f5-bfc7-274386b0b2cf",
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "Agreed. Added a TODO and will be cleaned up as part of https://github.com/flutter/flutter/issues/7050",
        "createdAt" : "2016-11-30T23:32:08Z",
        "updatedAt" : "2016-12-01T01:11:37Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4d39b0379cdd667e3822d069709d6d2c6c6d947",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +288,292 @@\nclass DebugConnectionInfo {\n  DebugConnectionInfo({ this.httpUri, this.wsUri, this.baseUri });\n\n  // TODO(danrubel): the httpUri field should be removed as part of"
  },
  {
    "id" : "a4c713fb-ad34-4292-9285-151b4099bcc0",
    "prId" : 7800,
    "prUrl" : "https://github.com/flutter/flutter/pull/7800#pullrequestreview-19716222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c9e284d-1763-440c-bad4-c85349cc6ad7",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Should we try to extract the logic here and in screenshot.dart to share nice features like these?",
        "createdAt" : "2017-02-02T02:16:40Z",
        "updatedAt" : "2017-02-02T05:22:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "be276f20-81ac-4b69-b0ed-c8c6f812f6db",
        "parentId" : "2c9e284d-1763-440c-bad4-c85349cc6ad7",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "The problem is that screenshot.dart has a very different context. It doesn't have a VMService connection for example. We could provide a way to specify the observatory port, etc, but that seems more work than this is worth.",
        "createdAt" : "2017-02-02T05:21:52Z",
        "updatedAt" : "2017-02-02T05:22:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c9b82b519bbf5124de8f977f919a698be797905",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +114,118 @@        await vmService.vm.refreshViews();\n      if (isRunningDebug)\n        await currentView.uiIsolate.flutterDebugAllowBanner(false);\n      if (!await device.takeScreenshot(outputFile))\n        printError('Error taking screenshot.');"
  },
  {
    "id" : "62b552a3-9421-45fc-946c-d415ce4fe8f3",
    "prId" : 8764,
    "prUrl" : "https://github.com/flutter/flutter/pull/8764#pullrequestreview-26864144",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36417a4d-9b38-4507-8f7b-7b9fd2017b8e",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "Why is this needed? ",
        "createdAt" : "2017-03-14T16:19:48Z",
        "updatedAt" : "2017-03-14T17:31:30Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "ddb7bdff-387b-4e15-8cc5-a547dcdddb62",
        "parentId" : "36417a4d-9b38-4507-8f7b-7b9fd2017b8e",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Apps on Fuchsia don't shut down cleanly after a 'q'. This is useful maybe only until I track that down and/or while bringing up hot reload for Fuchsia. I'll leave this here and remove the help message.",
        "createdAt" : "2017-03-14T16:43:25Z",
        "updatedAt" : "2017-03-14T17:31:30Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "949f5a9a15d7f59bc02c162d9656bd2a6cc558c2",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +280,284 @@      await stop();\n      return true;\n    } else if (lower == 'd') {\n      await detach();\n      return true;"
  },
  {
    "id" : "c69dd672-c721-4f31-9640-82dca27fa997",
    "prId" : 9585,
    "prUrl" : "https://github.com/flutter/flutter/pull/9585#pullrequestreview-34751536",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f68f1985-326d-43fa-8ca4-759727cc658e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This (and the next one) seem unlikely to be useful to the user, but I don't have a better suggestion.\r\n(Dumping one tree is bad enough, dumping multiple trees... yikes. I guess at least they won't overlap.)",
        "createdAt" : "2017-04-26T00:32:59Z",
        "updatedAt" : "2017-04-26T19:46:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "6d934bdb-c219-4da3-8346-e335848ebbdf",
        "parentId" : "f68f1985-326d-43fa-8ca4-759727cc658e",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "I could imagine adding an 'Are you sure? (y/n)' sort of thing, but for now I think I should just make it do what it says it'll do.",
        "createdAt" : "2017-04-26T05:59:25Z",
        "updatedAt" : "2017-04-26T19:46:31Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e88ca6ba93a60a004b12a9a729e67e30d8cc89ba",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +140,144 @@  Future<Null> debugDumpApp() async {\n    for (FlutterView view in views)\n      await view.uiIsolate.flutterDebugDumpApp();\n  }\n"
  },
  {
    "id" : "419fafe4-ba7d-4bc2-9f8b-cf27f2d028a0",
    "prId" : 12872,
    "prUrl" : "https://github.com/flutter/flutter/pull/12872#pullrequestreview-74606719",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61d4b641-7ce4-47db-b59d-c0b730cb7e16",
        "parentId" : null,
        "authorId" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "body" : "assert deviceAssetsDirectoryUri != null ?",
        "createdAt" : "2017-11-06T23:48:55Z",
        "updatedAt" : "2018-01-04T22:02:30Z",
        "lastEditedBy" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "tags" : [
        ]
      },
      {
        "id" : "5fb38f98-a58e-484b-8bf5-5d2a3995085d",
        "parentId" : "61d4b641-7ce4-47db-b59d-c0b730cb7e16",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Done",
        "createdAt" : "2017-11-07T00:17:12Z",
        "updatedAt" : "2018-01-04T22:02:30Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "e0c7c55e46309b35b10d8ad62d00d7862146dbcb",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +144,148 @@  Future<Null> resetAssetDirectory() async {\n    final Uri deviceAssetsDirectoryUri = devFS.baseUri.resolveUri(\n        fs.path.toUri(getAssetBuildDirectory()));\n    assert(deviceAssetsDirectoryUri != null);\n    await Future.wait(views.map("
  },
  {
    "id" : "ed78be3c-0e0b-49b1-9b8b-11c9e1bd18d7",
    "prId" : 23529,
    "prUrl" : "https://github.com/flutter/flutter/pull/23529#pullrequestreview-169024620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c346a197-8b0c-4b9f-bc0e-41c1af6e2eac",
        "parentId" : null,
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "I think my intent was not to `await `here, so refreshViews could continue without blocking. Was there a reason you put `await` back?",
        "createdAt" : "2018-10-26T19:47:25Z",
        "updatedAt" : "2018-10-27T22:36:55Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "76107ce7-fc52-4640-be98-b7d9388b6dd4",
        "parentId" : "c346a197-8b0c-4b9f-bc0e-41c1af6e2eac",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "The caller of `refreshViews()` can choose to not await the returned future.  The use of async/await here is semantically equivalent to what you were trying to do with the `Completer`.",
        "createdAt" : "2018-10-26T19:55:54Z",
        "updatedAt" : "2018-10-27T22:36:55Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "e31e2231-e7ea-4718-b5cf-3e4a0aaa369e",
        "parentId" : "c346a197-8b0c-4b9f-bc0e-41c1af6e2eac",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Ok, got it.",
        "createdAt" : "2018-10-26T21:39:45Z",
        "updatedAt" : "2018-10-27T22:36:55Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "cad558b3-fb48-411f-b83d-53d6433af189",
        "parentId" : "c346a197-8b0c-4b9f-bc0e-41c1af6e2eac",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yeah these are identical semantically. I happened to have already made this change on my branch; I didn't put the await back so much as have to resolve the merge, and I went with the shorter option. :-)",
        "createdAt" : "2018-10-26T22:57:00Z",
        "updatedAt" : "2018-10-27T22:36:55Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d58c923fd1a46e9ea37d5cf3a42b4eb2fc81026",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +86,90 @@    for (VMService service in vmServices)\n      futures.add(service.vm.refreshViews(waitForViews: true));\n    await Future.wait(futures);\n  }\n"
  },
  {
    "id" : "4e4587c1-2f26-4f7f-8740-56c2f7924fc0",
    "prId" : 23529,
    "prUrl" : "https://github.com/flutter/flutter/pull/23529#pullrequestreview-169549519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60569a8c-1b7c-4771-af7f-d0dcf80f939c",
        "parentId" : null,
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "This is the change that breaks named_isolates_test.\r\nFrom what I can tell flutter engine is getting stuck processing two concurrent listViews requests https://github.com/flutter/engine/blob/master/runtime/service_protocol.cc#L237.\r\n\r\ncc @jason-simmons @chinmaygarde ",
        "createdAt" : "2018-10-29T17:12:23Z",
        "updatedAt" : "2018-10-29T17:12:24Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "72dc8224-96aa-4742-9d4a-2505be7cc0a0",
        "parentId" : "60569a8c-1b7c-4771-af7f-d0dcf80f939c",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "To reproduce the failure pick up this new implementation of refreshViews() method and run named_isolates_test locally from `$FH/flutter/dev/devicelab`: `$FH/flutter/bin/cache/dart-sdk/bin/dart bin/run.dart -t named_isolates_test`",
        "createdAt" : "2018-10-29T19:20:51Z",
        "updatedAt" : "2018-10-29T19:20:52Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "e927883a-040c-45ae-8228-5ff517ecd526",
        "parentId" : "60569a8c-1b7c-4771-af7f-d0dcf80f939c",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "I am fixing refreshViews so it is app-wide, rather than isolate-specific message, that should fix deadlock in the engine((in https://github.com/flutter/flutter/commit/89665ac4527fd8e9cadc1df28c86c9b0c8659a58). @chinmaygarde is making engine more robust to these kind of scenarios.",
        "createdAt" : "2018-10-29T20:27:34Z",
        "updatedAt" : "2018-10-29T20:27:34Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "75dbadce-4932-48d2-a45b-ebc6ebefc907",
        "parentId" : "60569a8c-1b7c-4771-af7f-d0dcf80f939c",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "awesome.",
        "createdAt" : "2018-10-29T22:42:44Z",
        "updatedAt" : "2018-10-29T22:42:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d58c923fd1a46e9ea37d5cf3a42b4eb2fc81026",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +489,493 @@    for (FlutterDevice device in flutterDevices)\n      futures.add(device.refreshViews());\n    await Future.wait(futures);\n  }\n"
  },
  {
    "id" : "ba227449-40db-4efd-b968-e8945a60cd1f",
    "prId" : 23531,
    "prUrl" : "https://github.com/flutter/flutter/pull/23531#pullrequestreview-186804748",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c285b496-f57d-450d-91a8-837099ec8651",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Curious - what's wrong with `i++` in a for loop?",
        "createdAt" : "2018-12-19T18:50:03Z",
        "updatedAt" : "2018-12-20T23:16:48Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "797bc07d-e4d9-4c5b-91ab-54831e38a218",
        "parentId" : "c285b496-f57d-450d-91a8-837099ec8651",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Nothing, I just have a personal vendetta against `++`.",
        "createdAt" : "2018-12-20T00:13:49Z",
        "updatedAt" : "2018-12-20T23:16:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f49aff478cf40502c0d2210f3bb084159ea6f300",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +72,76 @@      return;\n    final List<VMService> localVmServices = List<VMService>(observatoryUris.length);\n    for (int i = 0; i < observatoryUris.length; i += 1) {\n      printTrace('Connecting to service protocol: ${observatoryUris[i]}');\n      localVmServices[i] = await VMService.connect("
  },
  {
    "id" : "80348a73-a6e4-4735-8069-ca32abda148b",
    "prId" : 27257,
    "prUrl" : "https://github.com/flutter/flutter/pull/27257#pullrequestreview-203582159",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdd057a0-1fac-4bbc-be05-893cb7ad5017",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Maybe add a comment here about why this is hardcoded.",
        "createdAt" : "2019-02-14T06:16:05Z",
        "updatedAt" : "2019-02-14T20:54:11Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e07b4df77fafaed8bd803246fb1dff1ae2ee9640",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +900,904 @@    /// runner instead.\n    if (experimentalBuildEnabled) {\n      return false;\n    }\n    final DartDependencySetBuilder dartDependencySetBuilder ="
  },
  {
    "id" : "55d1c505-147a-4e72-ab4f-1391db94dcf5",
    "prId" : 35762,
    "prUrl" : "https://github.com/flutter/flutter/pull/35762#pullrequestreview-259166342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fea0e0a-b7c3-47f8-b544-d3bda365a414",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "looks like `'H'` used to work here",
        "createdAt" : "2019-07-08T21:28:00Z",
        "updatedAt" : "2019-07-08T21:38:10Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "29443e7bbb5151496fdcf5c179ab8492f0ddd431",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +821,825 @@        await detach();\n        return true;\n      case 'h':\n      case 'H':\n      case '?':"
  },
  {
    "id" : "ba42c042-ada4-474c-822b-b37144cdfa0c",
    "prId" : 35762,
    "prUrl" : "https://github.com/flutter/flutter/pull/35762#pullrequestreview-259167151",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a85ca52d-b18c-4bda-bf4e-2c761aaf8825",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "same for `'W'`",
        "createdAt" : "2019-07-08T21:29:48Z",
        "updatedAt" : "2019-07-08T21:38:10Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "8fd04cca-8578-4938-b6ca-afba96992b56",
        "parentId" : "a85ca52d-b18c-4bda-bf4e-2c761aaf8825",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "et. al",
        "createdAt" : "2019-07-08T21:29:54Z",
        "updatedAt" : "2019-07-08T21:38:10Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "29443e7bbb5151496fdcf5c179ab8492f0ddd431",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +889,893 @@        }\n        return false;\n      case 'w':\n      case 'W':\n        if (supportsServiceProtocol) {"
  },
  {
    "id" : "c2a256d4-fb94-43a2-b230-96b0009cd5af",
    "prId" : 35846,
    "prUrl" : "https://github.com/flutter/flutter/pull/35846#pullrequestreview-261072361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6f92166-1dad-441d-8fe5-0fd547f1e041",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "In analytics there are some unhandled JSON RPC exceptions bubbling up through here. Since you're in this code, would you mind catching those and failing more gracefully?",
        "createdAt" : "2019-07-11T18:32:06Z",
        "updatedAt" : "2019-07-11T18:33:09Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "0cc77232-c84d-4591-bfd2-227ffd481337",
        "parentId" : "c6f92166-1dad-441d-8fe5-0fd547f1e041",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Can you send me link to some of the stack traces?",
        "createdAt" : "2019-07-11T18:53:31Z",
        "updatedAt" : "2019-07-11T18:53:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "d76205bf-3efc-4d94-87e3-a0cc357f6872",
        "parentId" : "c6f92166-1dad-441d-8fe5-0fd547f1e041",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Actually, we're already wrapping the restart operation in a `try/finally` at:\r\n\r\nhttps://github.com/flutter/flutter/blob/master/packages/flutter_tools/lib/src/run_hot.dart#L513\r\n\r\nIt seems like that should extended to include a catch that marks the return as a failure?",
        "createdAt" : "2019-07-11T19:00:22Z",
        "updatedAt" : "2019-07-11T19:00:23Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "a1a76f08-f2e4-4857-a70e-9be14f0f46e6",
        "parentId" : "c6f92166-1dad-441d-8fe5-0fd547f1e041",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "From digging into the stack trace more, this error is going down a slightly different path in the daemon: \r\n\r\nhttps://github.com/flutter/flutter/blob/v1.7.8%2Bhotfix.3/packages/flutter_tools/lib/src/commands/daemon.dart#L874\r\n\r\nI think we could add error handling to run_hot instead, and pass a `fatal` flag if the error is one of these json rpc exceptions so we can print a better error",
        "createdAt" : "2019-07-11T23:40:08Z",
        "updatedAt" : "2019-07-11T23:40:08Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "dee0273d-5616-4dbb-b611-89bafa7614e5",
        "parentId" : "c6f92166-1dad-441d-8fe5-0fd547f1e041",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "sgtm",
        "createdAt" : "2019-07-12T06:02:07Z",
        "updatedAt" : "2019-07-12T06:02:07Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c41ce9d4d281c535f07af23ba458fa2e4dc616c2",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +1000,1004 @@          return false;\n        }\n        final OperationResult result = await residentRunner.restart(fullRestart: true);\n        if (!result.isOk) {\n          printStatus('Try again after fixing the above error(s).', emphasis: true);"
  },
  {
    "id" : "ea243d51-b6fc-4250-b334-3e23d4d2be0e",
    "prId" : 36082,
    "prUrl" : "https://github.com/flutter/flutter/pull/36082#pullrequestreview-261471280",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "779eb3e1-517f-4efb-b24f-dcc7cb3757a4",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Why doesn't throwToolExit work here?",
        "createdAt" : "2019-07-12T20:29:08Z",
        "updatedAt" : "2019-07-13T19:22:12Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "d7d986f1-1153-49a6-b9d1-1b8d369297f5",
        "parentId" : "779eb3e1-517f-4efb-b24f-dcc7cb3757a4",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "That implies that something went wrong, whereas really this is an exit as normal. I'm also not certain that we have integration tests for these process signals so I'd like to keep it as close to what it was before.",
        "createdAt" : "2019-07-12T20:53:52Z",
        "updatedAt" : "2019-07-13T19:22:12Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "70697b4f054e3b04c2500255597b34ddb6c7d0c2",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +912,916 @@    io.ProcessSignal.SIGINT.watch().listen((io.ProcessSignal signal) {\n      _cleanUp(signal);\n      io.exit(0);\n    });\n    io.ProcessSignal.SIGTERM.watch().listen((io.ProcessSignal signal) {"
  },
  {
    "id" : "32c4213f-f345-4cd0-832d-c3f63113edbd",
    "prId" : 36082,
    "prUrl" : "https://github.com/flutter/flutter/pull/36082#pullrequestreview-261470310",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00f9de87-3e8c-4e07-a40a-5f8edc62b330",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "What will catch this? Why not also a throwToolExit?",
        "createdAt" : "2019-07-12T20:30:10Z",
        "updatedAt" : "2019-07-13T19:22:12Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "6a0d9e99-b6df-480d-b79b-7ac189926020",
        "parentId" : "00f9de87-3e8c-4e07-a40a-5f8edc62b330",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "So previously we caught everything and then exited immediately before error reporting. Now we're only catching RpcException and throwing a tool exit in the TerminalHandler.\r\n\r\nThis rethrow allows us to both rethrow the existing tool exit and handle cleanups so we exit nicely. If there are other exceptions that we're not handling, we should probably let those bubble up so we can fix them.",
        "createdAt" : "2019-07-12T20:51:09Z",
        "updatedAt" : "2019-07-13T19:22:12Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "70697b4f054e3b04c2500255597b34ddb6c7d0c2",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +1068,1072 @@      printError('$error\\n$st');\n      await _cleanUp(null);\n      rethrow;\n    } finally {\n      _processingUserRequest = false;"
  },
  {
    "id" : "29c877cc-b7ce-46b5-8bd4-fcd15db49e2f",
    "prId" : 36199,
    "prUrl" : "https://github.com/flutter/flutter/pull/36199#pullrequestreview-262091830",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6e40f94-ad20-41dd-9c6f-6db803a518ed",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Why is this only a problem for `flutterExit`. Wouldn't it also cause issues with other service protocol extensions, as well?",
        "createdAt" : "2019-07-15T20:52:03Z",
        "updatedAt" : "2019-07-15T20:52:03Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "67b967ab-8689-470c-83de-274a1f740039",
        "parentId" : "e6e40f94-ad20-41dd-9c6f-6db803a518ed",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Some of the methods specifically catch or handle this case, like:\r\n\r\nhttps://github.com/flutter/flutter/blob/e3ee5c6bbb80732c30e18cde26602f9f7f018aa2/packages/flutter_tools/lib/src/run_hot.dart#L704\r\n\r\nSome don't. I can fix these separately, but we'll need this fix too so that we don't leave these apps open.",
        "createdAt" : "2019-07-15T21:10:24Z",
        "updatedAt" : "2019-07-15T21:10:24Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "4f08259f-81bc-4dda-93c7-1960158a9622",
        "parentId" : "e6e40f94-ad20-41dd-9c6f-6db803a518ed",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Filled https://github.com/flutter/flutter/issues/36214 to track",
        "createdAt" : "2019-07-15T21:44:51Z",
        "updatedAt" : "2019-07-15T21:44:52Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6777f174189fe2d976b937b098d10ef8a8fc8f28",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +176,180 @@      return;\n    final List<Future<void>> futures = <Future<void>>[];\n    // If any of the flutter views are paused, we might not be able to\n    // cleanly exit since the service extension may not have been registered.\n    if (flutterViews.any((FlutterView view) {"
  },
  {
    "id" : "7bad3484-3aa0-4b8a-995e-3e97d2a3ae5e",
    "prId" : 38575,
    "prUrl" : "https://github.com/flutter/flutter/pull/38575#pullrequestreview-275498912",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "946f0add-7788-4175-9729-c7d1f82b8039",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I added this line so that we do not spam strack traces for known error types",
        "createdAt" : "2019-08-15T00:07:01Z",
        "updatedAt" : "2019-08-15T15:26:25Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "2beb0fc8-96f7-4e3d-a0d9-e05106f0c3fd",
        "parentId" : "946f0add-7788-4175-9729-c7d1f82b8039",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "That sounds like a good comment to put in the code.",
        "createdAt" : "2019-08-15T15:07:33Z",
        "updatedAt" : "2019-08-15T15:26:25Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "f9bac21a-1dcd-4a0f-8376-6ee3edb2b011",
        "parentId" : "946f0add-7788-4175-9729-c7d1f82b8039",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Done",
        "createdAt" : "2019-08-15T15:26:32Z",
        "updatedAt" : "2019-08-15T15:26:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "64a3a89115a4b75f3b7114c2dd2fc9343ff293b0",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1118,1122 @@    } catch (error, st) {\n      // Don't print stack traces for known error types.\n      if (error is! ToolExit) {\n        printError('$error\\n$st');\n      }"
  },
  {
    "id" : "7e41a6e6-b986-4d16-a5fc-4d27fb8a75b9",
    "prId" : 40171,
    "prUrl" : "https://github.com/flutter/flutter/pull/40171#pullrequestreview-286954620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a766901c-4907-411e-8e3c-2582ca14c8ef",
        "parentId" : null,
        "authorId" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "body" : "I think this comment is incorrect now, since it calls `throwToolExit`?",
        "createdAt" : "2019-09-11T11:48:39Z",
        "updatedAt" : "2019-09-11T17:32:09Z",
        "lastEditedBy" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "tags" : [
        ]
      },
      {
        "id" : "cdf045cb-22b9-4aba-9953-626c97c7ae0f",
        "parentId" : "a766901c-4907-411e-8e3c-2582ca14c8ef",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Fixed",
        "createdAt" : "2019-09-11T17:32:30Z",
        "updatedAt" : "2019-09-11T17:32:30Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ff2060d8f10bd8b6d23f0ce7521993e7ee2b309",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +714,718 @@  /// and restore the debug banner before taking the screenshot.\n  ///\n  /// Throws an [AssertionError] if [Devce.supportsScreenshot] is not true.\n  Future<void> screenshot(FlutterDevice device) async {\n    assert(device.device.supportsScreenshot);"
  },
  {
    "id" : "41e87790-3a96-4acb-a0e9-bc63043f9d3f",
    "prId" : 40171,
    "prUrl" : "https://github.com/flutter/flutter/pull/40171#pullrequestreview-287036612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a06d0a7-1f73-400c-94f4-fb46282d0bb4",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Not necessarily for this PR: The status.cancel()s for this status should go in a finally block for the outermost try instead of spamming them before every return.",
        "createdAt" : "2019-09-11T19:50:43Z",
        "updatedAt" : "2019-09-11T19:51:36Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "8268fcad-267e-4fda-90eb-56731b241a78",
        "parentId" : "3a06d0a7-1f73-400c-94f4-fb46282d0bb4",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I'll roll this into my cleanup PR",
        "createdAt" : "2019-09-11T19:57:41Z",
        "updatedAt" : "2019-09-11T19:57:41Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ff2060d8f10bd8b6d23f0ce7521993e7ee2b309",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +718,722 @@    assert(device.device.supportsScreenshot);\n\n    final Status status = logger.startProgress('Taking screenshot for ${device.device.name}...', timeout: timeoutConfiguration.fastOperation);\n    final File outputFile = getUniqueFile(fs.currentDirectory, 'flutter', 'png');\n    try {"
  },
  {
    "id" : "c1fff279-85f8-45f3-ade1-49988f489119",
    "prId" : 40366,
    "prUrl" : "https://github.com/flutter/flutter/pull/40366#pullrequestreview-287721967",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8ee1338-3fcc-47b4-a3cc-2a8e3c321d7d",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Is there an issue filed for this?",
        "createdAt" : "2019-09-12T21:37:35Z",
        "updatedAt" : "2019-09-12T21:37:36Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "80353b4f-5c2f-47ec-97db-89c59d6b0d0f",
        "parentId" : "a8ee1338-3fcc-47b4-a3cc-2a8e3c321d7d",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Filled https://github.com/flutter/flutter/issues/40388",
        "createdAt" : "2019-09-12T21:44:43Z",
        "updatedAt" : "2019-09-12T21:44:43Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0b6b3eecaf2163bb8ae4077707af929db05cb0f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +551,555 @@    // TODO(jonahwilliams): this is a temporary work around to regain some of\n    // the initialize from dill performance. Longer term, we should have a\n    // better way to determine where the appropriate dill file is, as this\n    // doesn't work for Android or macOS builds.}\n    if (dillOutputPath == null) {"
  },
  {
    "id" : "910c55fb-a9c8-4bbd-b765-a419c234e04c",
    "prId" : 44637,
    "prUrl" : "https://github.com/flutter/flutter/pull/44637#pullrequestreview-316622161",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac9e36b2-0ff1-4ff5-8821-3c0600f2482f",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "What does changing this to a Stream do?  I think It takes a list so that for `-d all` the runner can handle multiple vmservice addresses",
        "createdAt" : "2019-11-12T03:38:52Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "dbc83452-d60b-4db7-8a18-ba1264eb5a9c",
        "parentId" : "ac9e36b2-0ff1-4ff5-8821-3c0600f2482f",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "If I'm reading this correctly, it looks like as a list this has either 0 or 1 elements, so I don't think it's related to -d all. What I'm not sure about is why it had to be an empty list rather than null when there were no observatory uris.",
        "createdAt" : "2019-11-12T21:23:38Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "107d1299-e1dd-42ae-a6cc-0a03656c56c5",
        "parentId" : "ac9e36b2-0ff1-4ff5-8821-3c0600f2482f",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "It appears the intention was to support multiple apps running an observatory on a single device, but it's not implemented. Was this done for Fuchsia?",
        "createdAt" : "2019-11-12T22:49:54Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "7c7d568b-9948-4b92-ae6b-e99e86cecfd3",
        "parentId" : "ac9e36b2-0ff1-4ff5-8821-3c0600f2482f",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Yeah, it looks like this was for the now-deleted fuchsia_reload command. Fuchsia is now handled differently, so I think this can be safely modified.",
        "createdAt" : "2019-11-13T17:53:13Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "db2cffe2-943b-4208-9626-847d0db28141",
        "parentId" : "ac9e36b2-0ff1-4ff5-8821-3c0600f2482f",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "At any rate - I'm not really sure what modifying the resident runner here is accomplishing. Isn't the goal to adjust this behavior for attach only?",
        "createdAt" : "2019-11-13T21:41:43Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "af332453-9c8d-4d3b-82d1-33dad7dec247",
        "parentId" : "ac9e36b2-0ff1-4ff5-8821-3c0600f2482f",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "As per offline discussion, I changed this such that it doesn't reuse the resident runner, which aligns with the expected lifecycle of the resident runner.",
        "createdAt" : "2019-11-13T23:14:03Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "77bd8ec8fb9af8dc37f1a7bb85e10c0af0c30b75",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +132,136 @@  final Device device;\n  final ResidentCompiler generator;\n  Stream<Uri> observatoryUris;\n  List<VMService> vmServices;\n  DevFS devFS;"
  },
  {
    "id" : "35b101de-e38c-42f1-832d-9cd7771fccf2",
    "prId" : 44637,
    "prUrl" : "https://github.com/flutter/flutter/pull/44637#pullrequestreview-317425213",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86133e10-7451-4a01-8690-08f4de8bc2d3",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "It looks like you re-added the updates to resident runner. Were these changes necessary for some reason?",
        "createdAt" : "2019-11-15T03:02:51Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "8fa4e3d2-454b-43e1-9621-9a93d62d00f3",
        "parentId" : "86133e10-7451-4a01-8690-08f4de8bc2d3",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "yes -- `observatoryUris` is a stream instead of a list.",
        "createdAt" : "2019-11-15T06:17:53Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "77bd8ec8fb9af8dc37f1a7bb85e10c0af0c30b75",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +159,163 @@    Restart restart,\n    CompileExpression compileExpression,\n  }) {\n    final Completer<void> completer = Completer<void>();\n    StreamSubscription<void> subscription;"
  },
  {
    "id" : "31013f7f-5399-443b-9b89-5c611200791e",
    "prId" : 44637,
    "prUrl" : "https://github.com/flutter/flutter/pull/44637#pullrequestreview-317754101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fe5dd24-4453-40f2-a66f-40a4c50871d8",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "I suspect this listen() call should have an onError callback",
        "createdAt" : "2019-11-15T17:18:54Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "77bd8ec8fb9af8dc37f1a7bb85e10c0af0c30b75",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +164,168 @@    bool isWaitingForVm = false;\n\n    subscription = observatoryUris.listen((Uri observatoryUri) async {\n      // FYI, this message is used as a sentinel in tests.\n      printTrace('Connecting to service protocol: $observatoryUri');"
  },
  {
    "id" : "47ca6e8b-919c-4441-b333-e02bde713a8d",
    "prId" : 44637,
    "prUrl" : "https://github.com/flutter/flutter/pull/44637#pullrequestreview-319350017",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35fa57a8-05b7-48c6-b8ae-dc07c4f34367",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Should this do a `completer.completeError()` in some situations?",
        "createdAt" : "2019-11-18T18:12:35Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "31b0a08c-c84b-48a1-8b4a-b5383c60f352",
        "parentId" : "35fa57a8-05b7-48c6-b8ae-dc07c4f34367",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "fwiw, the only case where this could happen is if `FormatException` is thrown while parsing the observatory URI.  I'm not sure how that would be possible and if it will happen consistently.",
        "createdAt" : "2019-11-18T21:16:39Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "42cbe0bb-98e3-4830-96a1-c17489ee7578",
        "parentId" : "35fa57a8-05b7-48c6-b8ae-dc07c4f34367",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Yeah, that showed up in crash logging at some point, which is why the existing code tries to defend against it.",
        "createdAt" : "2019-11-19T21:01:35Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "77bd8ec8fb9af8dc37f1a7bb85e10c0af0c30b75",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +194,198 @@      await subscription.cancel();\n    }, onError: (dynamic error) {\n      printTrace('Fail to handle observatory URI: $error');\n    }, onDone: () {\n      _isListeningForObservatoryUri = false;"
  },
  {
    "id" : "8f1ee9b0-10e2-42e3-a00a-c8e44bff54ff",
    "prId" : 44637,
    "prUrl" : "https://github.com/flutter/flutter/pull/44637#pullrequestreview-318626733",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f8e3ba4-38ba-4149-8cea-26a66cfdc245",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Is this a separate bug fix?",
        "createdAt" : "2019-11-18T18:28:59Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "2097aae1-e93d-4e70-8a86-56a23ece322f",
        "parentId" : "2f8e3ba4-38ba-4149-8cea-26a66cfdc245",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "Yep. I saw this issue while debugging.",
        "createdAt" : "2019-11-18T21:01:38Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "77bd8ec8fb9af8dc37f1a7bb85e10c0af0c30b75",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +253,257 @@      return view != null &&\n             view.uiIsolate != null &&\n             view.uiIsolate.pauseEvent != null &&\n             view.uiIsolate.pauseEvent.isPauseEvent;\n      }"
  },
  {
    "id" : "8081d5b8-6c1f-4f2d-b1b6-43d63b3a3c02",
    "prId" : 45673,
    "prUrl" : "https://github.com/flutter/flutter/pull/45673#pullrequestreview-323854842",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2d3adc2-75a0-46a5-a70f-25657bdf2549",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "nice",
        "createdAt" : "2019-11-27T17:54:15Z",
        "updatedAt" : "2019-11-27T19:05:59Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "690866ee57fecab0e4dbfff55d0864bff2d57e88",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +216,220 @@\n  List<FlutterView> get views {\n    if (vmService == null || vmService.isClosed) {\n      return <FlutterView>[];\n    }"
  },
  {
    "id" : "5fab82de-e0a4-4ce1-953d-542630313c25",
    "prId" : 46206,
    "prUrl" : "https://github.com/flutter/flutter/pull/46206#pullrequestreview-331587296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4be2c2f9-3b14-4aa8-aa24-0d15f4130d1c",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "What does it mean if `currentPlatform` was something else? Should we emit a warning here?",
        "createdAt" : "2019-12-10T20:21:44Z",
        "updatedAt" : "2019-12-12T21:37:34Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "604a47b4-6a4e-441c-a8ba-af537900ce5d",
        "parentId" : "4be2c2f9-3b14-4aa8-aa24-0d15f4130d1c",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Perhaps there was a bug in the serialization code on the framework side, or a bug else where. Maybe we could assert here?",
        "createdAt" : "2019-12-10T20:23:10Z",
        "updatedAt" : "2019-12-12T21:37:34Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "21c0785f-61df-421e-bb65-a91c380725a6",
        "parentId" : "4be2c2f9-3b14-4aa8-aa24-0d15f4130d1c",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Updated to use an assert",
        "createdAt" : "2019-12-12T21:38:08Z",
        "updatedAt" : "2019-12-12T21:38:09Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "3a111a57-e6e5-4847-aab6-07922f879515",
        "parentId" : "4be2c2f9-3b14-4aa8-aa24-0d15f4130d1c",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "LGTM",
        "createdAt" : "2019-12-12T23:19:37Z",
        "updatedAt" : "2019-12-12T23:19:38Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "e70a61a85e5929d216c1d314e097da0f3f7ee481",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +1309,1313 @@    case 'macOS':\n      return 'android';\n    default:\n      assert(false); // Invalid current platform.\n      return 'android';"
  },
  {
    "id" : "6d6b3d47-2c1e-4690-a478-5044fdceb162",
    "prId" : 53859,
    "prUrl" : "https://github.com/flutter/flutter/pull/53859#pullrequestreview-389377758",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d15add8-b5b7-4885-84eb-cae68555e833",
        "parentId" : null,
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Just to confirm: if I run this 10 times with 10 devices, I'll get 10 different output files, each of which will be a plain text file with all the Base64 encoded SkSLs of that device, right?",
        "createdAt" : "2020-04-03T20:49:43Z",
        "updatedAt" : "2020-04-06T17:45:12Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      },
      {
        "id" : "501bb87b-f3e2-4bcf-ae73-d575540f2e93",
        "parentId" : "3d15add8-b5b7-4885-84eb-cae68555e833",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Another question: if I run this twice on the same device, does it generate two files with the exact same content? (If so, that looks a little duplicative.)",
        "createdAt" : "2020-04-03T20:58:14Z",
        "updatedAt" : "2020-04-06T17:45:12Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      },
      {
        "id" : "2725edfe-55e9-46ad-b6ca-42af17f44270",
        "parentId" : "3d15add8-b5b7-4885-84eb-cae68555e833",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Yes, both are correct. Are you concerned about management of these files? I am too, I'm not quite sure what a reasonable workflow for these files will be",
        "createdAt" : "2020-04-06T17:30:04Z",
        "updatedAt" : "2020-04-06T17:45:12Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "dec5f808-0c24-460c-9a70-f6e694feda74",
        "parentId" : "3d15add8-b5b7-4885-84eb-cae68555e833",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "What if we group the SkSLs with the device id, and use the newer SkSL to rewrite the older SkSL if both the SkSL key and device id matches?",
        "createdAt" : "2020-04-06T18:24:45Z",
        "updatedAt" : "2020-04-06T18:24:46Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      },
      {
        "id" : "4487b60d-d97b-425f-8359-55326bbd1b56",
        "parentId" : "3d15add8-b5b7-4885-84eb-cae68555e833",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Tracking and managing these files is a bit too high level for the command line API. once they are written a user can (and should) be allowed to move and rename them",
        "createdAt" : "2020-04-06T18:55:52Z",
        "updatedAt" : "2020-04-06T18:55:53Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "1acdef97-5b09-4f2d-912d-140f3de06392",
        "parentId" : "3d15add8-b5b7-4885-84eb-cae68555e833",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "I'm curious what would happen for the next PR that package the SkSLs into assets. If each run generates a different json map of SkSLs, how are you going to merge those maps and put them into asset? Do you have to deduplicate by then since you can only have one SkSL file per key/filename?",
        "createdAt" : "2020-04-07T18:18:02Z",
        "updatedAt" : "2020-04-07T18:18:02Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      },
      {
        "id" : "2efb135f-c966-4e22-baa8-44185ddb0ec7",
        "parentId" : "3d15add8-b5b7-4885-84eb-cae68555e833",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I think to start with, it would be fair to say that the tool can support including a single one of these files in the build, something like: \r\n\r\n`flutter build apk --release --include=sksl=path/tp/flutter2.sksl`\r\n\r\nThat allows for different shaders for iOS and Android, but requires them to be the same across Android versions.\r\n\r\nIf we wanted a workflow beyond that, I think it definitely needs more design work. I think that will be easier to do once the entire thing is wired up end to end.",
        "createdAt" : "2020-04-07T18:21:24Z",
        "updatedAt" : "2020-04-07T18:21:25Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "e5683440-f7a7-47f7-8b47-1588d053d2f2",
        "parentId" : "3d15add8-b5b7-4885-84eb-cae68555e833",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "For example, I don't know of a way to do assets per device in an appbundle, only per ABI",
        "createdAt" : "2020-04-07T18:22:10Z",
        "updatedAt" : "2020-04-07T18:22:10Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "d82dad4f-9dd9-4403-af58-a0c08bc012ae",
        "parentId" : "3d15add8-b5b7-4885-84eb-cae68555e833",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Sounds good. LGTM!",
        "createdAt" : "2020-04-07T18:23:00Z",
        "updatedAt" : "2020-04-07T18:23:00Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e378e61f05669ac898e3fcb365ec87ca410fbb3",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +758,762 @@      return;\n    }\n    final File outputFile = globals.fsUtils.getUniqueFile(\n      globals.fs.currentDirectory,\n      'flutter',"
  },
  {
    "id" : "b83de02e-3f06-4e3f-90d2-53d57a8d0ba2",
    "prId" : 53902,
    "prUrl" : "https://github.com/flutter/flutter/pull/53902#pullrequestreview-387766004",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06211c2c-223b-4857-8b28-b64b45cb6ba0",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "For testing: what I would do is give the ResidentRunner an optional constructor argument:\r\n\r\n```\r\nFuture<io.HttpServer> Function({bool enableStdinCommands}) serveDevTools\r\n```\r\n\r\nThen in the launchDevTools method do something like:\r\n\r\n```\r\nawait (serveDevTools ?? devtools_server.serveDevTools)(enabledStinCommands: false)\r\n```\r\n\r\nThat way we can test it without adding more to the context in the short term",
        "createdAt" : "2020-04-03T18:06:35Z",
        "updatedAt" : "2020-04-04T17:45:09Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "e4ededab-4d1c-4cae-bb1e-d44891d8219a",
        "parentId" : "06211c2c-223b-4857-8b28-b64b45cb6ba0",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "After further thought, not much of the behavior of the devtools server and its client in the browser can be tested. Instead, I added a test to `terminal_handler_test.dart` that ensures that `ResidentRunner.launchDevTools` is called when we get 'v' on the terminal.",
        "createdAt" : "2020-04-04T19:38:08Z",
        "updatedAt" : "2020-04-04T19:38:08Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "dae39bd9-d294-4247-a570-5450a1806eb0",
        "parentId" : "06211c2c-223b-4857-8b28-b64b45cb6ba0",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Yeah seems reasonable to me",
        "createdAt" : "2020-04-04T23:07:27Z",
        "updatedAt" : "2020-04-04T23:07:28Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e2e9aa4932061d652c406f0aae4542d41889280",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +988,992 @@  }\n\n  Future<void> launchDevTools() async {\n    try {\n      assert(supportsServiceProtocol);"
  },
  {
    "id" : "1752c101-646b-4162-8192-4244d90ead30",
    "prId" : 55341,
    "prUrl" : "https://github.com/flutter/flutter/pull/55341#pullrequestreview-399979250",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d55cb376-e460-403e-9088-0f06d3d94b9e",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Moved the filtering here instead of on `VM`",
        "createdAt" : "2020-04-24T14:08:02Z",
        "updatedAt" : "2020-04-27T18:53:48Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e960fb175f9574ef5743574ea0cf959d156db80c",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +241,245 @@  final List<FlutterView> _views = <FlutterView>[];\n\n  List<FlutterView> get views {\n    if (vmService == null) {\n      return <FlutterView>[];"
  },
  {
    "id" : "b31e18df-0baa-4a0a-8c53-d05a1fdaaf4f",
    "prId" : 55341,
    "prUrl" : "https://github.com/flutter/flutter/pull/55341#pullrequestreview-400565619",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "907ac1fd-0a94-43de-953b-bbbdf361c4c7",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Regarding the comment below on 282, what would go wrong if we don't wait for `flutterExit` to fail?",
        "createdAt" : "2020-04-24T17:37:24Z",
        "updatedAt" : "2020-04-27T18:53:48Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "08205164-5a15-41f8-9ad0-69043804a657",
        "parentId" : "907ac1fd-0a94-43de-953b-bbbdf361c4c7",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Its not if it fails its that when it succeeds the engine goes down so there is no signal. I could re-arrange this to instead listen to the vm_service `done` signal, that would remove the need for the timeout",
        "createdAt" : "2020-04-24T20:50:43Z",
        "updatedAt" : "2020-04-27T18:53:48Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "4ac280b8-7389-4e0d-9866-5224339e9295",
        "parentId" : "907ac1fd-0a94-43de-953b-bbbdf361c4c7",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Updated the logic to be a bit simpler, and catch any SentinelException (would be thrown if we exited after the app crashed, for example)",
        "createdAt" : "2020-04-27T00:01:43Z",
        "updatedAt" : "2020-04-27T18:53:48Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e960fb175f9574ef5743574ea0cf959d156db80c",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +284,288 @@        unawaited(vmService.flutterExit(\n          isolateId: view.uiIsolate.id,\n        ));\n      }\n    }"
  },
  {
    "id" : "ae304c97-490e-4481-941b-e1df4f10e9b6",
    "prId" : 55797,
    "prUrl" : "https://github.com/flutter/flutter/pull/55797#pullrequestreview-401413246",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc884202-85f2-42ae-8be2-e669ea9eda4d",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This line has the fix, `views` caused a stack overflow.",
        "createdAt" : "2020-04-28T00:14:12Z",
        "updatedAt" : "2020-04-28T00:14:12Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b0c9f3c409757c65fa0372a5235177fe30c2e8ba",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +247,251 @@    if (viewFilter != null) {\n      return <FlutterView>[\n        for (final FlutterView flutterView in _views)\n          if (flutterView.uiIsolate.name.contains(viewFilter))\n            flutterView"
  },
  {
    "id" : "5ac15436-6c58-49da-83ca-ff7b01d1f935",
    "prId" : 55984,
    "prUrl" : "https://github.com/flutter/flutter/pull/55984#pullrequestreview-403045482",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cb0add2-a932-4cda-b263-0cbfe879a6e9",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "Should we also set this to zero for https://github.com/flutter/flutter/blob/bd897dfafc65042e175e0f860d376a562e31ba31/packages/flutter_tools/test/general.shard/resident_runner_test.dart#L812?\r\n\r\nIs there anything we can do to ensure future tests also override this?",
        "createdAt" : "2020-04-29T21:06:27Z",
        "updatedAt" : "2020-04-29T21:06:27Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "7bff2fc3-8dee-468b-8210-24527ff3e69b",
        "parentId" : "5cb0add2-a932-4cda-b263-0cbfe879a6e9",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I don't think there is a requiredButOnlyForTesting ... that would be neat. In this case, we don't hit that code path with the timeout, but if we did the test would fail since it would receive an unexpected vm service request for ext.flutter.exitApp",
        "createdAt" : "2020-04-29T21:10:22Z",
        "updatedAt" : "2020-04-29T21:10:22Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "b1ffc414-6533-47f3-a3e9-0dd31e9df6ce",
        "parentId" : "5cb0add2-a932-4cda-b263-0cbfe879a6e9",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "ahh, good point.",
        "createdAt" : "2020-04-29T21:15:59Z",
        "updatedAt" : "2020-04-29T21:15:59Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd897dfafc65042e175e0f860d376a562e31ba31",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +253,257 @@\n  Future<void> exitApps({\n    @visibleForTesting Duration timeoutDelay = const Duration(seconds: 10),\n  }) async {\n    if (!device.supportsFlutterExit) {"
  },
  {
    "id" : "5c6aa458-ca8f-4d35-86fe-4808e8fd9b62",
    "prId" : 56059,
    "prUrl" : "https://github.com/flutter/flutter/pull/56059#pullrequestreview-403844072",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f6109f9-0f45-44af-987e-d203ddc2d531",
        "parentId" : null,
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Nit: is this conversion just to reduce the number of platform-mismatch warnings? If so, I'd probably prefer to not convert, and print warnings if one tries to use the SkSL bundle from android_x64 on android_arm64.",
        "createdAt" : "2020-04-30T19:29:20Z",
        "updatedAt" : "2020-04-30T19:31:56Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      },
      {
        "id" : "2ea4b1e4-fb35-4a93-aceb-e93bc5f17ba1",
        "parentId" : "6f6109f9-0f45-44af-987e-d203ddc2d531",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I'm not sure how this would be possible today. When building an apk or appbundle, the tool builds for all ABIs simultaneously and assumes that assets are shared. It would take a significant amount of refactoring to support ABI-specific assets.\r\n",
        "createdAt" : "2020-04-30T19:33:41Z",
        "updatedAt" : "2020-04-30T19:33:41Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "cd965e6d-511d-4f41-a545-14e9076c6e8c",
        "parentId" : "6f6109f9-0f45-44af-987e-d203ddc2d531",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Are the SkSL files ABI specific? If so this needs a lot more work :( ",
        "createdAt" : "2020-04-30T19:34:37Z",
        "updatedAt" : "2020-04-30T19:34:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "a3617fc6-948e-4285-b3d2-0b808bacc5a7",
        "parentId" : "6f6109f9-0f45-44af-987e-d203ddc2d531",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "No, they're not ABI specific. I was only thinking about giving them warnings as platform-mismatch may make them less efficient. But there's absolutely no problem of cross-ABI compatibility (as I've used x64 SkSLs on arm).",
        "createdAt" : "2020-04-30T19:42:39Z",
        "updatedAt" : "2020-04-30T19:42:39Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      },
      {
        "id" : "f90e3e18-6433-42c7-8ded-302acecb26b3",
        "parentId" : "6f6109f9-0f45-44af-987e-d203ddc2d531",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This might be something we could fix long term then, would you file an issue with some more details on the efficiency loss from the current implementation? ",
        "createdAt" : "2020-04-30T19:51:28Z",
        "updatedAt" : "2020-04-30T19:51:28Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "a9eac42c-419c-4987-8948-95fe98370e97",
        "parentId" : "6f6109f9-0f45-44af-987e-d203ddc2d531",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Here's an experiment on the efficiency loss: https://github.com/flutter/flutter/issues/53607#issuecomment-608587484\r\n\r\nI don't think the current implementation has any issues. If we truly want to be 100% effective across different ABIs/devices, we probably have to rely on our medium-term solution \"Test-based shader warmup #53609\".",
        "createdAt" : "2020-04-30T20:13:43Z",
        "updatedAt" : "2020-04-30T20:13:43Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "7501d38a92f926391b7a4f26eb8dd10c2051e9fd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +836,840 @@    final Device device = flutterDevices.first.device;\n\n    // Convert android sub-platforms to single target platform.\n    TargetPlatform targetPlatform = await flutterDevices.first.device.targetPlatform;\n    switch (targetPlatform) {"
  },
  {
    "id" : "6199bf1e-78d5-4861-b289-130970cf0c07",
    "prId" : 56387,
    "prUrl" : "https://github.com/flutter/flutter/pull/56387#pullrequestreview-406047215",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "732301c5-bc8a-4e06-a2ac-fa2a2e17ea40",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This is the fix",
        "createdAt" : "2020-05-05T18:26:27Z",
        "updatedAt" : "2020-05-05T18:26:28Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff5b98ed79b5fbce80e5ba1e5085a1339960d99d",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +230,234 @@    @visibleForTesting Duration timeoutDelay = const Duration(seconds: 10),\n  }) async {\n    if (!device.supportsFlutterExit || vmService == null) {\n      return device.stopApp(package);\n    }"
  },
  {
    "id" : "6ce951b1-7994-413e-a234-ccf23316fc7d",
    "prId" : 56564,
    "prUrl" : "https://github.com/flutter/flutter/pull/56564#pullrequestreview-407794671",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe4a93c9-83cb-4201-b058-5d95aaf5700e",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Why did this line change? `_dillOutputPath` could be null here",
        "createdAt" : "2020-05-07T19:46:31Z",
        "updatedAt" : "2020-05-07T19:59:05Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "9781acaa-a368-4c0f-9992-29143fcc5333",
        "parentId" : "fe4a93c9-83cb-4201-b058-5d95aaf5700e",
        "authorId" : "29fe0fde-8759-4bb3-9a06-205d19125d7b",
        "body" : "Yep, but here's how `dillOutputPath` defined\r\n```dart\r\nString get dillOutputPath => _dillOutputPath ?? globals.fs.path.join(artifactDirectory.path, 'app.dill');\r\n```\r\n\r\nThere were only 2 places where `app.diil` was hard-coded in this file and I thought it was a good idea to reduce this to 1",
        "createdAt" : "2020-05-07T19:52:47Z",
        "updatedAt" : "2020-05-07T19:59:05Z",
        "lastEditedBy" : "29fe0fde-8759-4bb3-9a06-205d19125d7b",
        "tags" : [
        ]
      },
      {
        "id" : "32c3c640-2655-4032-9d89-97c9bf0a99bf",
        "parentId" : "fe4a93c9-83cb-4201-b058-5d95aaf5700e",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Ahh makes sense, thanks!",
        "createdAt" : "2020-05-07T20:02:13Z",
        "updatedAt" : "2020-05-07T20:02:13Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ccdd99aa383e3337d11434166f04f76f35b6484b",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +1186,1190 @@    // If _dillOutputPath is null, we created a temporary directory for the dill.\n    if (_dillOutputPath == null && artifactDirectory.existsSync()) {\n      final File outputDill = globals.fs.file(dillOutputPath);\n      if (outputDill.existsSync()) {\n        outputDill.copySync(getDefaultCachedKernelPath("
  },
  {
    "id" : "c42179ca-d571-467a-95b6-35677a164862",
    "prId" : 58284,
    "prUrl" : "https://github.com/flutter/flutter/pull/58284#pullrequestreview-424701013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "394ec2ef-170f-4c1e-bf98-8cbc51edf352",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "the existing output prefixes each line in the error with `flutter: `\r\n@jonahwilliams will this replicate that behavior and is that desirable?",
        "createdAt" : "2020-06-02T21:50:40Z",
        "updatedAt" : "2020-06-06T00:03:19Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "c5e9f5a2-53ab-48d1-8fbc-583737284c69",
        "parentId" : "394ec2ef-170f-4c1e-bf98-8cbc51edf352",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I thought that was only for logs that go through logcat",
        "createdAt" : "2020-06-03T17:23:15Z",
        "updatedAt" : "2020-06-06T00:03:19Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "547526d2-d5cc-4808-9027-23211d42cda1",
        "parentId" : "394ec2ef-170f-4c1e-bf98-8cbc51edf352",
        "authorId" : "62d00f30-6336-453c-a1ce-6840fea2fd93",
        "body" : "The existing code prefixes with `flutter: ` for my test of throwing an early error, but the new code does not prefix with `flutter: `. I figured since this is similar to the change in the flutter-intellij plugin (using structured errors there will stop prefixing) it would make sense to have the change here but can adjust if the prefix is useful.",
        "createdAt" : "2020-06-04T17:58:37Z",
        "updatedAt" : "2020-06-06T00:03:19Z",
        "lastEditedBy" : "62d00f30-6336-453c-a1ce-6840fea2fd93",
        "tags" : [
        ]
      },
      {
        "id" : "0e05c3d1-a197-4d0f-9885-61429f688d76",
        "parentId" : "394ec2ef-170f-4c1e-bf98-8cbc51edf352",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Without the prefix is fine",
        "createdAt" : "2020-06-04T18:06:29Z",
        "updatedAt" : "2020-06-06T00:03:19Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "845b53643b2ef5d11004734aea457154bbcfe015",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +1106,1110 @@      final Map<dynamic, dynamic> json = event.extensionData?.data;\n      if (json != null && json.containsKey('renderedErrorText')) {\n        globals.printStatus('\\n${json['renderedErrorText']}');\n      }\n    }"
  },
  {
    "id" : "f4b19afb-1f43-4251-a684-84a1b7a25d28",
    "prId" : 58455,
    "prUrl" : "https://github.com/flutter/flutter/pull/58455#pullrequestreview-422270623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d04e416a-dcd5-40c2-82ab-d2c365ad1edf",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This was missing",
        "createdAt" : "2020-06-02T00:44:22Z",
        "updatedAt" : "2020-06-02T00:44:22Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b5f4ad470043714c547d410775ba486dc6f50a5",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1100,1104 @@  @protected\n  void cacheInitialDillCompilation() {\n    if (_dillOutputPath != null) {\n      return;\n    }"
  },
  {
    "id" : "bf1c2ec2-ac4b-49d3-871f-42d833b6d0ff",
    "prId" : 58815,
    "prUrl" : "https://github.com/flutter/flutter/pull/58815#pullrequestreview-426477135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85551fa6-36f1-4f42-a042-9df8daac3f52",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "I started by adding `userIdentifier` to `DebuggingOptions` property bag which meant that `userIdentifier` was explicitly passed around in fewer places.  However that didn't really make sense--the user isn't relevant for debugging or build, it's only relevant once you go to install or start the prebuilt app.  So I moved it into FlutterDevice.  You could theoretically deploy to multiple users on the same device, but I don't picture needing to happening often so it's not supported.\r\n\r\nI'm all ears if you guys have a better suggestion for how to inject this into the AndroidDevice install/uninstall/start methods.",
        "createdAt" : "2020-06-05T22:23:43Z",
        "updatedAt" : "2020-06-05T23:32:37Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "ef061d00-b9d0-43f4-97b4-079f677f1f17",
        "parentId" : "85551fa6-36f1-4f42-a042-9df8daac3f52",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I agree that it doesn't really make sense for debuggingOptions. Updating the Device APIs seems like a reasonable approach - though I'm fairly certain there are overrides in google3, so you might want to double check even if FROB passed",
        "createdAt" : "2020-06-05T22:42:49Z",
        "updatedAt" : "2020-06-05T23:32:37Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "99fa0468-b2f1-4c77-9169-ad667137d979",
        "parentId" : "85551fa6-36f1-4f42-a042-9df8daac3f52",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "> though I'm fairly certain there are overrides in google3, so you might want to double check even if FROB passed\r\n\r\nI don't see any obvious overrides that would be impacted by this change.  @mehmetf can you double check me?  You were thinking about this awhile ago\r\nhttps://yaqs.corp.google.com/eng/q/4970372142465024 (internal)\r\nb/142944798",
        "createdAt" : "2020-06-05T23:43:07Z",
        "updatedAt" : "2020-06-05T23:43:08Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "2bdd6056-c742-4f57-8792-524d354039f6",
        "parentId" : "85551fa6-36f1-4f42-a042-9df8daac3f52",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Never mind, @jonahwilliams pointed me in the right direction.",
        "createdAt" : "2020-06-06T00:48:10Z",
        "updatedAt" : "2020-06-06T00:48:10Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "7f72456f-a8f7-4c46-be20-6199ece3c2cd",
        "parentId" : "85551fa6-36f1-4f42-a042-9df8daac3f52",
        "authorId" : "b0e8e5f4-24fc-402d-ba63-9576e63321dc",
        "body" : "We override the DeviceManager. If tests pass, this should be OK to land. Feel free to update the internal bug so we can try it out internally when this lands.",
        "createdAt" : "2020-06-06T14:15:03Z",
        "updatedAt" : "2020-06-06T14:15:04Z",
        "lastEditedBy" : "b0e8e5f4-24fc-402d-ba63-9576e63321dc",
        "tags" : [
        ]
      },
      {
        "id" : "f446dcd1-909e-40a0-902f-24aa0c68ffbd",
        "parentId" : "85551fa6-36f1-4f42-a042-9df8daac3f52",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Supporting CL has been submitted.",
        "createdAt" : "2020-06-08T17:50:14Z",
        "updatedAt" : "2020-06-08T17:50:14Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "682ed70854112f51e4bab3d4c6f08c6e079b30fc",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +48,52 @@    TargetPlatform targetPlatform,\n    ResidentCompiler generator,\n    this.userIdentifier,\n  }) : assert(buildInfo.trackWidgetCreation != null),\n       generator = generator ?? ResidentCompiler("
  },
  {
    "id" : "f05ffc6a-4028-43a3-ae0f-64fb83d6e75f",
    "prId" : 61766,
    "prUrl" : "https://github.com/flutter/flutter/pull/61766#pullrequestreview-451862979",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41e9c875-afa5-451a-81a3-eca4829c033e",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "should this be `printError()`?",
        "createdAt" : "2020-07-20T18:13:30Z",
        "updatedAt" : "2020-07-20T18:13:30Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "0ba14ab5-9aa8-405f-926b-93df15d0cdb6",
        "parentId" : "41e9c875-afa5-451a-81a3-eca4829c033e",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "In this case, its okay for this method to fail - the tool can fallback to the regular re-assemble and still do a hot reload. I'd like to leave this as a trace to be a bit more conservative",
        "createdAt" : "2020-07-20T18:39:11Z",
        "updatedAt" : "2020-07-20T18:39:11Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "51705a96773585d3da16d12f1faf48789cbf7565",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +678,682 @@        );\n      } on Exception catch (err) {\n        globals.printTrace(err.toString());\n        return false;\n      }"
  },
  {
    "id" : "8d844eae-066e-42c9-a1ee-5d3fc6d74542",
    "prId" : 65114,
    "prUrl" : "https://github.com/flutter/flutter/pull/65114#pullrequestreview-481273022",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9166cabe-7ad9-4a6f-9c21-f0f59f5d01ab",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "can we document this some way to avoid future me \"optimizing\" this code back to the previous state?",
        "createdAt" : "2020-09-02T20:22:47Z",
        "updatedAt" : "2020-09-02T21:44:14Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "39564310-dcbe-4291-bf2f-129e95ead233",
        "parentId" : "9166cabe-7ad9-4a6f-9c21-f0f59f5d01ab",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "done! hopefully the test will help too",
        "createdAt" : "2020-09-02T20:25:51Z",
        "updatedAt" : "2020-09-02T21:44:14Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f31905105852c6f90afedafaa24fa0cc603a65a2",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1103,1107 @@      'png',\n    );\n    List<FlutterView> views = <FlutterView>[];\n    Future<bool> setDebugBanner(bool value) async {\n      try {"
  },
  {
    "id" : "36958dd0-8138-47e5-8894-dec318c4f43c",
    "prId" : 65114,
    "prUrl" : "https://github.com/flutter/flutter/pull/65114#pullrequestreview-481293838",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce583a4b-e5a6-4a3b-906d-7f9b0d6957e4",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Optional cleanup: Pull the debug banner toggle out into a helper function.",
        "createdAt" : "2020-09-02T20:25:56Z",
        "updatedAt" : "2020-09-02T21:44:14Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "258e816f-9ff8-4df6-8dfb-8ba16696e91c",
        "parentId" : "ce583a4b-e5a6-4a3b-906d-7f9b0d6957e4",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "done",
        "createdAt" : "2020-09-02T20:55:36Z",
        "updatedAt" : "2020-09-02T21:44:14Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f31905105852c6f90afedafaa24fa0cc603a65a2",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +1121,1125 @@\n    try {\n      if (supportsServiceProtocol && isRunningDebug) {\n        // Ensure that the vmService access is guarded by supportsServiceProtocol, it\n        // will be null in release mode."
  },
  {
    "id" : "2e31eb0d-9273-4906-8c42-a00bdb0355a1",
    "prId" : 66836,
    "prUrl" : "https://github.com/flutter/flutter/pull/66836#pullrequestreview-497866050",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f16b756a-94ee-46aa-841d-ccfc4cfa315d",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Can you explain this startup process and the error cases a bit more?",
        "createdAt" : "2020-09-28T17:26:16Z",
        "updatedAt" : "2020-09-29T16:32:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "a24c71ad-6d1e-4299-b6ce-9835cabfbcf2",
        "parentId" : "f16b756a-94ee-46aa-841d-ccfc4cfa315d",
        "authorId" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "body" : "Sure. I'm happy to add this information in comments as well if you'd like.\r\n\r\nThis first case here is meant to catch errors that occur during DDS startup (e.g., failure to bind to a port, failure to connect to the VM service, attaching to a VM service with existing clients, etc).\r\n\r\nThe second try block below with the new `Future.any(...)` code handles cases where the VM service connection goes down before flutter_tools connects to DDS. The DDS `done` future completes when DDS shuts down, including after an error, so if this future completes before `connectToVmService` we know that something went wrong that caused DDS to shutdown early. ",
        "createdAt" : "2020-09-28T18:18:56Z",
        "updatedAt" : "2020-09-29T16:32:32Z",
        "lastEditedBy" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "tags" : [
        ]
      },
      {
        "id" : "95809e7f-c635-4b99-91e4-cd37d263a3fa",
        "parentId" : "f16b756a-94ee-46aa-841d-ccfc4cfa315d",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Documented too please :) ",
        "createdAt" : "2020-09-28T19:35:41Z",
        "updatedAt" : "2020-09-29T16:32:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "f7192fd2-aee9-430c-9b49-95d3da9bcdba",
        "parentId" : "f16b756a-94ee-46aa-841d-ccfc4cfa315d",
        "authorId" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "body" : "Done.",
        "createdAt" : "2020-09-28T20:20:48Z",
        "updatedAt" : "2020-09-29T16:32:32Z",
        "lastEditedBy" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "tags" : [
        ]
      }
    ],
    "commit" : "16e61363d2d1da751707cc0986224fc5ace87d31",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +234,238 @@        // (e.g., failure to bind to a port, failure to connect to the VM service,\n        // attaching to a VM service with existing clients, etc.).\n        try {\n          await device.dds.startDartDevelopmentService(\n            observatoryUri,"
  },
  {
    "id" : "4010049d-d67f-48e0-ba0b-806facb27e02",
    "prId" : 66836,
    "prUrl" : "https://github.com/flutter/flutter/pull/66836#pullrequestreview-497869831",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f049474-4275-4e00-8f77-6cbc203c530c",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "The tool integration tests could be written to cover this partially - i.e. create an app template that crashes immediately and connect to it. This should work with the flutter tester, right?",
        "createdAt" : "2020-09-28T20:26:45Z",
        "updatedAt" : "2020-09-29T16:32:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "16e61363d2d1da751707cc0986224fc5ace87d31",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +230,234 @@      isWaitingForVm = true;\n      vm_service.VmService service;\n      if (!disableDds) {\n        // This first try block is meant to catch errors that occur during DDS startup\n        // (e.g., failure to bind to a port, failure to connect to the VM service,"
  },
  {
    "id" : "a51041da-98e0-47b0-a77a-879abd2f6198",
    "prId" : 67837,
    "prUrl" : "https://github.com/flutter/flutter/pull/67837#pullrequestreview-506773565",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "800711c9-6987-4b88-b58a-72e992a7bf2e",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Does this cause any problems if the entrypoint is not called main.dart?",
        "createdAt" : "2020-10-12T16:40:30Z",
        "updatedAt" : "2020-10-12T16:42:14Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "ab373633-7615-438b-bf42-b9fc21af8e76",
        "parentId" : "800711c9-6987-4b88-b58a-72e992a7bf2e",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Nope, the file name doesn't really matter - I tested with `test/hello_world_test.dart` and `main_2.dart`. It did historically when reload worked from source files.",
        "createdAt" : "2020-10-12T16:45:18Z",
        "updatedAt" : "2020-10-12T16:45:19Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "738479235579b437cf594bd53f541e5fab5fc391",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +783,787 @@  }) {\n    if (!fullRestart) {\n      return 'main.dart.incremental.dill';\n    }\n    return 'main.dart${swap ? '.swap' : ''}.dill';"
  },
  {
    "id" : "e5cc5445-3c92-4754-bc55-51959cb826fe",
    "prId" : 70126,
    "prUrl" : "https://github.com/flutter/flutter/pull/70126#pullrequestreview-526707643",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "519cc81a-7185-43b2-96b5-e2cde6ff4e21",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Check indentation.",
        "createdAt" : "2020-11-09T22:19:07Z",
        "updatedAt" : "2020-11-09T23:11:46Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "437047e8-b2d1-41b9-99f4-25e9e63a7921",
        "parentId" : "519cc81a-7185-43b2-96b5-e2cde6ff4e21",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Fixed",
        "createdAt" : "2020-11-09T22:30:39Z",
        "updatedAt" : "2020-11-09T23:11:46Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ed572a2b2c47c7aaa4cf1204c0ecbb9165e1e64",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +119,123 @@            '--sound-null-safety',\n          ];\n        } else {\n          platformDillArtifact = Artifact.webPlatformKernelDill;\n          extraFrontEndOptions =  <String>["
  },
  {
    "id" : "184ca587-34a7-4f23-adc6-2ce6eff522fb",
    "prId" : 70323,
    "prUrl" : "https://github.com/flutter/flutter/pull/70323#pullrequestreview-530355593",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10645649-9412-4a66-bb94-8de5be6e4b3d",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "This is a bit non-idiomatic. Can this throw a tool exit or StateError instead? Alternately, assert accepts a string as second argument that can give an explanation for the assert.",
        "createdAt" : "2020-11-13T19:37:56Z",
        "updatedAt" : "2020-11-13T19:38:58Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "25368be0-e2e9-4413-847a-3a67fe36e62d",
        "parentId" : "10645649-9412-4a66-bb94-8de5be6e4b3d",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I count about 14 usages in the flutter tool, all for this sort of enum pattern.",
        "createdAt" : "2020-11-13T19:42:52Z",
        "updatedAt" : "2020-11-13T19:42:53Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "20b6b7434b4d43f84d16b9a6bd0dac08cd87751f",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +107,111 @@        }\n      } else {\n        assert(false);\n      }\n"
  },
  {
    "id" : "ffb7c0cf-32c4-45d1-ab32-823ef4383084",
    "prId" : 74251,
    "prUrl" : "https://github.com/flutter/flutter/pull/74251#pullrequestreview-573567577",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09e7e549-aba6-4019-98c2-8274335b603c",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "It looks like there can be more than one of these.",
        "createdAt" : "2021-01-21T16:59:32Z",
        "updatedAt" : "2021-01-21T16:59:33Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "fb5191b2-caf3-47e2-8c2f-06a6fe1c0e80",
        "parentId" : "09e7e549-aba6-4019-98c2-8274335b603c",
        "authorId" : "0a778f6e-09bf-46ed-b505-d7ff99b039d4",
        "body" : "See - https://github.com/flutter/flutter/issues/74407. Working on a fix now. Have the fix - just working on the test.",
        "createdAt" : "2021-01-21T17:28:01Z",
        "updatedAt" : "2021-01-21T17:28:01Z",
        "lastEditedBy" : "0a778f6e-09bf-46ed-b505-d7ff99b039d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4c363e207ae5a45575844936e18bb24f57bc2b8",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +1423,1427 @@    vmService.onExtensionEvent.listen((vm_service.Event event) {\n      if (event.json['extensionKind'] == 'Flutter.FrameworkInitialization') {\n        completer.complete();\n      }\n    });"
  },
  {
    "id" : "a23093e5-acb9-4130-974d-83edba9555e4",
    "prId" : 74423,
    "prUrl" : "https://github.com/flutter/flutter/pull/74423#pullrequestreview-573578708",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08d86f9d-9073-4a27-89f5-af8a1b8a5052",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I would also cancel this subscription after completing",
        "createdAt" : "2021-01-21T17:34:35Z",
        "updatedAt" : "2021-01-21T18:45:28Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "eea69ff3-8900-46eb-ba8e-9d1f7fd60ea5",
        "parentId" : "08d86f9d-9073-4a27-89f5-af8a1b8a5052",
        "authorId" : "0a778f6e-09bf-46ed-b505-d7ff99b039d4",
        "body" : "done",
        "createdAt" : "2021-01-21T17:40:36Z",
        "updatedAt" : "2021-01-21T18:45:28Z",
        "lastEditedBy" : "0a778f6e-09bf-46ed-b505-d7ff99b039d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "fdf51341e548d39b26352fcd51f92ba470c2f0c3",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1424,1428 @@    extensionStream = vmService.onExtensionEvent.listen((vm_service.Event event) {\n      if (event.json['extensionKind'] == 'Flutter.FrameworkInitialization') {\n        // The 'Flutter.FrameworkInitialization' event is sent on hot restart\n        // as well, so make sure we don't try to complete this twice.\n        if (!completer.isCompleted) {"
  },
  {
    "id" : "8b4b30eb-9dac-42fc-af25-8be027ac880b",
    "prId" : 74534,
    "prUrl" : "https://github.com/flutter/flutter/pull/74534#pullrequestreview-574689116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82601ddf-e12a-43bd-a651-a803799f2f6f",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Some more context here could help: \"Failed to set vm service URI, __ deeplinks will not show in flutter errors\" or something like that.",
        "createdAt" : "2021-01-22T23:19:00Z",
        "updatedAt" : "2021-01-25T17:47:25Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc34bd4b03058b9ff5cefadef2f548463796ef7c",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +1335,1339 @@        ));\n      } on Exception catch (e) {\n        globals.printError(e.toString());\n        globals.printError(\n          'Failed to set vm service URI: ${e.toString()}. Deep links to DevTools'"
  },
  {
    "id" : "6f727cdf-f6d4-45ae-8c62-d7e36ed2c022",
    "prId" : 74534,
    "prUrl" : "https://github.com/flutter/flutter/pull/74534#pullrequestreview-575652581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f65ebc1a-28fb-42ba-a957-dcf833656284",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "For both of these - since they are unawaited, I would make sure they don't run if the resident runner is going to get torn down immediately. Maybe add back the `_devToolsLauncher =null` in tear down, and then do an early return if it is null",
        "createdAt" : "2021-01-25T17:18:24Z",
        "updatedAt" : "2021-01-25T17:47:25Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "279d6a0f-5ebd-4322-8328-f0d527b286d9",
        "parentId" : "f65ebc1a-28fb-42ba-a957-dcf833656284",
        "authorId" : "0a778f6e-09bf-46ed-b505-d7ff99b039d4",
        "body" : "added early return to `_callDevToolsUriExtension`",
        "createdAt" : "2021-01-25T17:47:28Z",
        "updatedAt" : "2021-01-25T17:47:28Z",
        "lastEditedBy" : "0a778f6e-09bf-46ed-b505-d7ff99b039d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc34bd4b03058b9ff5cefadef2f548463796ef7c",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +1294,1298 @@  }\n\n  Future<void> _callDevToolsUriExtension(FlutterDevice device) async {\n    if (_devToolsLauncher == null) {\n      return;"
  },
  {
    "id" : "91d732cf-68a7-4bad-a97b-bf392eb87b3e",
    "prId" : 74664,
    "prUrl" : "https://github.com/flutter/flutter/pull/74664#pullrequestreview-575728622",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b2e7b91-3c53-4bd6-b0c6-ed152c43451f",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "A bit confused. If there are no isolates, is blocking the right behavior here?",
        "createdAt" : "2021-01-25T18:47:44Z",
        "updatedAt" : "2021-01-25T18:47:48Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "4aedf2d4-151b-4703-bc1a-ff12ebb7a22b",
        "parentId" : "0b2e7b91-3c53-4bd6-b0c6-ed152c43451f",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This check is only a fast pass - this can also complete if the vm sends a framework initialization request. In my head, this could happen if the isolate takes a long time to start up.",
        "createdAt" : "2021-01-25T19:17:22Z",
        "updatedAt" : "2021-01-25T19:17:22Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9c3570ba4dc8798245c0bba8d4562d599c00280",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +1480,1484 @@    }\n  }\n  await completer.future;\n}\n"
  }
]