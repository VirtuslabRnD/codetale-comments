[
  {
    "id" : "8f51fa1e-9dc1-4761-b220-86e3454ca423",
    "prId" : 5453,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa08a6bf-3daf-4f97-b8b7-887b4ea723b2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This should say what's going to happen next, e.g. \"Caught SIGUSR1 - attempting hot reload\".\n",
        "createdAt" : "2016-08-17T16:25:44Z",
        "updatedAt" : "2016-08-17T16:25:44Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "8648209e-73a0-4bc6-aab4-4054c58488ff",
        "parentId" : "aa08a6bf-3daf-4f97-b8b7-887b4ea723b2",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "The hot reload code that we call immediately prints that it is doing a hot reload.\n",
        "createdAt" : "2016-08-18T16:41:43Z",
        "updatedAt" : "2016-08-18T16:41:43Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "62f31b6951e040055383813bd5d67eaaa5a6983c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +67,71 @@    });\n    ProcessSignal.SIGUSR1.watch().listen((ProcessSignal signal) async {\n      printStatus('Caught SIGUSR1');\n      await restart(fullRestart: false);\n    });"
  },
  {
    "id" : "3f9f730f-a704-44a0-b45c-8b5a54881811",
    "prId" : 5453,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24e8446a-c16c-45a6-ac29-48a69ac618be",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ditto\n",
        "createdAt" : "2016-08-17T16:25:47Z",
        "updatedAt" : "2016-08-17T16:25:47Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3177530a-008c-47cb-946f-14ca89f9348c",
        "parentId" : "24e8446a-c16c-45a6-ac29-48a69ac618be",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "ditto\n",
        "createdAt" : "2016-08-18T16:41:47Z",
        "updatedAt" : "2016-08-18T16:41:47Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "62f31b6951e040055383813bd5d67eaaa5a6983c",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +72,76 @@    ProcessSignal.SIGUSR2.watch().listen((ProcessSignal signal) async {\n      printStatus('Caught SIGUSR2');\n      await restart(fullRestart: true);\n    });\n  }"
  },
  {
    "id" : "2c4943bc-6fac-4a5e-8030-961d3c63dc37",
    "prId" : 7061,
    "prUrl" : "https://github.com/flutter/flutter/pull/7061#pullrequestreview-10873779",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7456403d-6044-47f5-bfc7-274386b0b2cf",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "httpUri and wsUri are redundant with each other.",
        "createdAt" : "2016-11-29T17:15:42Z",
        "updatedAt" : "2016-12-01T01:11:37Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "edeba483-dd45-4186-a708-f15e138a56bb",
        "parentId" : "7456403d-6044-47f5-bfc7-274386b0b2cf",
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "Agreed. Added a TODO and will be cleaned up as part of https://github.com/flutter/flutter/issues/7050",
        "createdAt" : "2016-11-30T23:32:08Z",
        "updatedAt" : "2016-12-01T01:11:37Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4d39b0379cdd667e3822d069709d6d2c6c6d947",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +288,292 @@\nclass DebugConnectionInfo {\n  DebugConnectionInfo({ this.httpUri, this.wsUri, this.baseUri });\n\n  // TODO(danrubel): the httpUri field should be removed as part of"
  },
  {
    "id" : "a4c713fb-ad34-4292-9285-151b4099bcc0",
    "prId" : 7800,
    "prUrl" : "https://github.com/flutter/flutter/pull/7800#pullrequestreview-19716222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c9e284d-1763-440c-bad4-c85349cc6ad7",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Should we try to extract the logic here and in screenshot.dart to share nice features like these?",
        "createdAt" : "2017-02-02T02:16:40Z",
        "updatedAt" : "2017-02-02T05:22:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "be276f20-81ac-4b69-b0ed-c8c6f812f6db",
        "parentId" : "2c9e284d-1763-440c-bad4-c85349cc6ad7",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "The problem is that screenshot.dart has a very different context. It doesn't have a VMService connection for example. We could provide a way to specify the observatory port, etc, but that seems more work than this is worth.",
        "createdAt" : "2017-02-02T05:21:52Z",
        "updatedAt" : "2017-02-02T05:22:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c9b82b519bbf5124de8f977f919a698be797905",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +114,118 @@        await vmService.vm.refreshViews();\n      if (isRunningDebug)\n        await currentView.uiIsolate.flutterDebugAllowBanner(false);\n      if (!await device.takeScreenshot(outputFile))\n        printError('Error taking screenshot.');"
  },
  {
    "id" : "62b552a3-9421-45fc-946c-d415ce4fe8f3",
    "prId" : 8764,
    "prUrl" : "https://github.com/flutter/flutter/pull/8764#pullrequestreview-26864144",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36417a4d-9b38-4507-8f7b-7b9fd2017b8e",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "Why is this needed? ",
        "createdAt" : "2017-03-14T16:19:48Z",
        "updatedAt" : "2017-03-14T17:31:30Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "ddb7bdff-387b-4e15-8cc5-a547dcdddb62",
        "parentId" : "36417a4d-9b38-4507-8f7b-7b9fd2017b8e",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Apps on Fuchsia don't shut down cleanly after a 'q'. This is useful maybe only until I track that down and/or while bringing up hot reload for Fuchsia. I'll leave this here and remove the help message.",
        "createdAt" : "2017-03-14T16:43:25Z",
        "updatedAt" : "2017-03-14T17:31:30Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "949f5a9a15d7f59bc02c162d9656bd2a6cc558c2",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +280,284 @@      await stop();\n      return true;\n    } else if (lower == 'd') {\n      await detach();\n      return true;"
  },
  {
    "id" : "c69dd672-c721-4f31-9640-82dca27fa997",
    "prId" : 9585,
    "prUrl" : "https://github.com/flutter/flutter/pull/9585#pullrequestreview-34751536",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f68f1985-326d-43fa-8ca4-759727cc658e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This (and the next one) seem unlikely to be useful to the user, but I don't have a better suggestion.\r\n(Dumping one tree is bad enough, dumping multiple trees... yikes. I guess at least they won't overlap.)",
        "createdAt" : "2017-04-26T00:32:59Z",
        "updatedAt" : "2017-04-26T19:46:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "6d934bdb-c219-4da3-8346-e335848ebbdf",
        "parentId" : "f68f1985-326d-43fa-8ca4-759727cc658e",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "I could imagine adding an 'Are you sure? (y/n)' sort of thing, but for now I think I should just make it do what it says it'll do.",
        "createdAt" : "2017-04-26T05:59:25Z",
        "updatedAt" : "2017-04-26T19:46:31Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e88ca6ba93a60a004b12a9a729e67e30d8cc89ba",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +140,144 @@  Future<Null> debugDumpApp() async {\n    for (FlutterView view in views)\n      await view.uiIsolate.flutterDebugDumpApp();\n  }\n"
  },
  {
    "id" : "419fafe4-ba7d-4bc2-9f8b-cf27f2d028a0",
    "prId" : 12872,
    "prUrl" : "https://github.com/flutter/flutter/pull/12872#pullrequestreview-74606719",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61d4b641-7ce4-47db-b59d-c0b730cb7e16",
        "parentId" : null,
        "authorId" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "body" : "assert deviceAssetsDirectoryUri != null ?",
        "createdAt" : "2017-11-06T23:48:55Z",
        "updatedAt" : "2018-01-04T22:02:30Z",
        "lastEditedBy" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "tags" : [
        ]
      },
      {
        "id" : "5fb38f98-a58e-484b-8bf5-5d2a3995085d",
        "parentId" : "61d4b641-7ce4-47db-b59d-c0b730cb7e16",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Done",
        "createdAt" : "2017-11-07T00:17:12Z",
        "updatedAt" : "2018-01-04T22:02:30Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "e0c7c55e46309b35b10d8ad62d00d7862146dbcb",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +144,148 @@  Future<Null> resetAssetDirectory() async {\n    final Uri deviceAssetsDirectoryUri = devFS.baseUri.resolveUri(\n        fs.path.toUri(getAssetBuildDirectory()));\n    assert(deviceAssetsDirectoryUri != null);\n    await Future.wait(views.map("
  },
  {
    "id" : "ed78be3c-0e0b-49b1-9b8b-11c9e1bd18d7",
    "prId" : 23529,
    "prUrl" : "https://github.com/flutter/flutter/pull/23529#pullrequestreview-169024620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c346a197-8b0c-4b9f-bc0e-41c1af6e2eac",
        "parentId" : null,
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "I think my intent was not to `await `here, so refreshViews could continue without blocking. Was there a reason you put `await` back?",
        "createdAt" : "2018-10-26T19:47:25Z",
        "updatedAt" : "2018-10-27T22:36:55Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "76107ce7-fc52-4640-be98-b7d9388b6dd4",
        "parentId" : "c346a197-8b0c-4b9f-bc0e-41c1af6e2eac",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "The caller of `refreshViews()` can choose to not await the returned future.  The use of async/await here is semantically equivalent to what you were trying to do with the `Completer`.",
        "createdAt" : "2018-10-26T19:55:54Z",
        "updatedAt" : "2018-10-27T22:36:55Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "e31e2231-e7ea-4718-b5cf-3e4a0aaa369e",
        "parentId" : "c346a197-8b0c-4b9f-bc0e-41c1af6e2eac",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Ok, got it.",
        "createdAt" : "2018-10-26T21:39:45Z",
        "updatedAt" : "2018-10-27T22:36:55Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "cad558b3-fb48-411f-b83d-53d6433af189",
        "parentId" : "c346a197-8b0c-4b9f-bc0e-41c1af6e2eac",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yeah these are identical semantically. I happened to have already made this change on my branch; I didn't put the await back so much as have to resolve the merge, and I went with the shorter option. :-)",
        "createdAt" : "2018-10-26T22:57:00Z",
        "updatedAt" : "2018-10-27T22:36:55Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d58c923fd1a46e9ea37d5cf3a42b4eb2fc81026",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +86,90 @@    for (VMService service in vmServices)\n      futures.add(service.vm.refreshViews(waitForViews: true));\n    await Future.wait(futures);\n  }\n"
  },
  {
    "id" : "4e4587c1-2f26-4f7f-8740-56c2f7924fc0",
    "prId" : 23529,
    "prUrl" : "https://github.com/flutter/flutter/pull/23529#pullrequestreview-169549519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60569a8c-1b7c-4771-af7f-d0dcf80f939c",
        "parentId" : null,
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "This is the change that breaks named_isolates_test.\r\nFrom what I can tell flutter engine is getting stuck processing two concurrent listViews requests https://github.com/flutter/engine/blob/master/runtime/service_protocol.cc#L237.\r\n\r\ncc @jason-simmons @chinmaygarde ",
        "createdAt" : "2018-10-29T17:12:23Z",
        "updatedAt" : "2018-10-29T17:12:24Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "72dc8224-96aa-4742-9d4a-2505be7cc0a0",
        "parentId" : "60569a8c-1b7c-4771-af7f-d0dcf80f939c",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "To reproduce the failure pick up this new implementation of refreshViews() method and run named_isolates_test locally from `$FH/flutter/dev/devicelab`: `$FH/flutter/bin/cache/dart-sdk/bin/dart bin/run.dart -t named_isolates_test`",
        "createdAt" : "2018-10-29T19:20:51Z",
        "updatedAt" : "2018-10-29T19:20:52Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "e927883a-040c-45ae-8228-5ff517ecd526",
        "parentId" : "60569a8c-1b7c-4771-af7f-d0dcf80f939c",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "I am fixing refreshViews so it is app-wide, rather than isolate-specific message, that should fix deadlock in the engine((in https://github.com/flutter/flutter/commit/89665ac4527fd8e9cadc1df28c86c9b0c8659a58). @chinmaygarde is making engine more robust to these kind of scenarios.",
        "createdAt" : "2018-10-29T20:27:34Z",
        "updatedAt" : "2018-10-29T20:27:34Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "75dbadce-4932-48d2-a45b-ebc6ebefc907",
        "parentId" : "60569a8c-1b7c-4771-af7f-d0dcf80f939c",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "awesome.",
        "createdAt" : "2018-10-29T22:42:44Z",
        "updatedAt" : "2018-10-29T22:42:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d58c923fd1a46e9ea37d5cf3a42b4eb2fc81026",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +489,493 @@    for (FlutterDevice device in flutterDevices)\n      futures.add(device.refreshViews());\n    await Future.wait(futures);\n  }\n"
  },
  {
    "id" : "ba227449-40db-4efd-b968-e8945a60cd1f",
    "prId" : 23531,
    "prUrl" : "https://github.com/flutter/flutter/pull/23531#pullrequestreview-186804748",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c285b496-f57d-450d-91a8-837099ec8651",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Curious - what's wrong with `i++` in a for loop?",
        "createdAt" : "2018-12-19T18:50:03Z",
        "updatedAt" : "2018-12-20T23:16:48Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "797bc07d-e4d9-4c5b-91ab-54831e38a218",
        "parentId" : "c285b496-f57d-450d-91a8-837099ec8651",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Nothing, I just have a personal vendetta against `++`.",
        "createdAt" : "2018-12-20T00:13:49Z",
        "updatedAt" : "2018-12-20T23:16:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f49aff478cf40502c0d2210f3bb084159ea6f300",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +72,76 @@      return;\n    final List<VMService> localVmServices = List<VMService>(observatoryUris.length);\n    for (int i = 0; i < observatoryUris.length; i += 1) {\n      printTrace('Connecting to service protocol: ${observatoryUris[i]}');\n      localVmServices[i] = await VMService.connect("
  },
  {
    "id" : "80348a73-a6e4-4735-8069-ca32abda148b",
    "prId" : 27257,
    "prUrl" : "https://github.com/flutter/flutter/pull/27257#pullrequestreview-203582159",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdd057a0-1fac-4bbc-be05-893cb7ad5017",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Maybe add a comment here about why this is hardcoded.",
        "createdAt" : "2019-02-14T06:16:05Z",
        "updatedAt" : "2019-02-14T20:54:11Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e07b4df77fafaed8bd803246fb1dff1ae2ee9640",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +900,904 @@    /// runner instead.\n    if (experimentalBuildEnabled) {\n      return false;\n    }\n    final DartDependencySetBuilder dartDependencySetBuilder ="
  },
  {
    "id" : "55d1c505-147a-4e72-ab4f-1391db94dcf5",
    "prId" : 35762,
    "prUrl" : "https://github.com/flutter/flutter/pull/35762#pullrequestreview-259166342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fea0e0a-b7c3-47f8-b544-d3bda365a414",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "looks like `'H'` used to work here",
        "createdAt" : "2019-07-08T21:28:00Z",
        "updatedAt" : "2019-07-08T21:38:10Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "29443e7bbb5151496fdcf5c179ab8492f0ddd431",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +821,825 @@        await detach();\n        return true;\n      case 'h':\n      case 'H':\n      case '?':"
  },
  {
    "id" : "ba42c042-ada4-474c-822b-b37144cdfa0c",
    "prId" : 35762,
    "prUrl" : "https://github.com/flutter/flutter/pull/35762#pullrequestreview-259167151",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a85ca52d-b18c-4bda-bf4e-2c761aaf8825",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "same for `'W'`",
        "createdAt" : "2019-07-08T21:29:48Z",
        "updatedAt" : "2019-07-08T21:38:10Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "8fd04cca-8578-4938-b6ca-afba96992b56",
        "parentId" : "a85ca52d-b18c-4bda-bf4e-2c761aaf8825",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "et. al",
        "createdAt" : "2019-07-08T21:29:54Z",
        "updatedAt" : "2019-07-08T21:38:10Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "29443e7bbb5151496fdcf5c179ab8492f0ddd431",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +889,893 @@        }\n        return false;\n      case 'w':\n      case 'W':\n        if (supportsServiceProtocol) {"
  },
  {
    "id" : "c2a256d4-fb94-43a2-b230-96b0009cd5af",
    "prId" : 35846,
    "prUrl" : "https://github.com/flutter/flutter/pull/35846#pullrequestreview-261072361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6f92166-1dad-441d-8fe5-0fd547f1e041",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "In analytics there are some unhandled JSON RPC exceptions bubbling up through here. Since you're in this code, would you mind catching those and failing more gracefully?",
        "createdAt" : "2019-07-11T18:32:06Z",
        "updatedAt" : "2019-07-11T18:33:09Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "0cc77232-c84d-4591-bfd2-227ffd481337",
        "parentId" : "c6f92166-1dad-441d-8fe5-0fd547f1e041",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Can you send me link to some of the stack traces?",
        "createdAt" : "2019-07-11T18:53:31Z",
        "updatedAt" : "2019-07-11T18:53:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "d76205bf-3efc-4d94-87e3-a0cc357f6872",
        "parentId" : "c6f92166-1dad-441d-8fe5-0fd547f1e041",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Actually, we're already wrapping the restart operation in a `try/finally` at:\r\n\r\nhttps://github.com/flutter/flutter/blob/master/packages/flutter_tools/lib/src/run_hot.dart#L513\r\n\r\nIt seems like that should extended to include a catch that marks the return as a failure?",
        "createdAt" : "2019-07-11T19:00:22Z",
        "updatedAt" : "2019-07-11T19:00:23Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "a1a76f08-f2e4-4857-a70e-9be14f0f46e6",
        "parentId" : "c6f92166-1dad-441d-8fe5-0fd547f1e041",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "From digging into the stack trace more, this error is going down a slightly different path in the daemon: \r\n\r\nhttps://github.com/flutter/flutter/blob/v1.7.8%2Bhotfix.3/packages/flutter_tools/lib/src/commands/daemon.dart#L874\r\n\r\nI think we could add error handling to run_hot instead, and pass a `fatal` flag if the error is one of these json rpc exceptions so we can print a better error",
        "createdAt" : "2019-07-11T23:40:08Z",
        "updatedAt" : "2019-07-11T23:40:08Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "dee0273d-5616-4dbb-b611-89bafa7614e5",
        "parentId" : "c6f92166-1dad-441d-8fe5-0fd547f1e041",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "sgtm",
        "createdAt" : "2019-07-12T06:02:07Z",
        "updatedAt" : "2019-07-12T06:02:07Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c41ce9d4d281c535f07af23ba458fa2e4dc616c2",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +1000,1004 @@          return false;\n        }\n        final OperationResult result = await residentRunner.restart(fullRestart: true);\n        if (!result.isOk) {\n          printStatus('Try again after fixing the above error(s).', emphasis: true);"
  },
  {
    "id" : "ea243d51-b6fc-4250-b334-3e23d4d2be0e",
    "prId" : 36082,
    "prUrl" : "https://github.com/flutter/flutter/pull/36082#pullrequestreview-261471280",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "779eb3e1-517f-4efb-b24f-dcc7cb3757a4",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Why doesn't throwToolExit work here?",
        "createdAt" : "2019-07-12T20:29:08Z",
        "updatedAt" : "2019-07-13T19:22:12Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "d7d986f1-1153-49a6-b9d1-1b8d369297f5",
        "parentId" : "779eb3e1-517f-4efb-b24f-dcc7cb3757a4",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "That implies that something went wrong, whereas really this is an exit as normal. I'm also not certain that we have integration tests for these process signals so I'd like to keep it as close to what it was before.",
        "createdAt" : "2019-07-12T20:53:52Z",
        "updatedAt" : "2019-07-13T19:22:12Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "70697b4f054e3b04c2500255597b34ddb6c7d0c2",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +912,916 @@    io.ProcessSignal.SIGINT.watch().listen((io.ProcessSignal signal) {\n      _cleanUp(signal);\n      io.exit(0);\n    });\n    io.ProcessSignal.SIGTERM.watch().listen((io.ProcessSignal signal) {"
  },
  {
    "id" : "32c4213f-f345-4cd0-832d-c3f63113edbd",
    "prId" : 36082,
    "prUrl" : "https://github.com/flutter/flutter/pull/36082#pullrequestreview-261470310",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00f9de87-3e8c-4e07-a40a-5f8edc62b330",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "What will catch this? Why not also a throwToolExit?",
        "createdAt" : "2019-07-12T20:30:10Z",
        "updatedAt" : "2019-07-13T19:22:12Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "6a0d9e99-b6df-480d-b79b-7ac189926020",
        "parentId" : "00f9de87-3e8c-4e07-a40a-5f8edc62b330",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "So previously we caught everything and then exited immediately before error reporting. Now we're only catching RpcException and throwing a tool exit in the TerminalHandler.\r\n\r\nThis rethrow allows us to both rethrow the existing tool exit and handle cleanups so we exit nicely. If there are other exceptions that we're not handling, we should probably let those bubble up so we can fix them.",
        "createdAt" : "2019-07-12T20:51:09Z",
        "updatedAt" : "2019-07-13T19:22:12Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "70697b4f054e3b04c2500255597b34ddb6c7d0c2",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +1068,1072 @@      printError('$error\\n$st');\n      await _cleanUp(null);\n      rethrow;\n    } finally {\n      _processingUserRequest = false;"
  },
  {
    "id" : "29c877cc-b7ce-46b5-8bd4-fcd15db49e2f",
    "prId" : 36199,
    "prUrl" : "https://github.com/flutter/flutter/pull/36199#pullrequestreview-262091830",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6e40f94-ad20-41dd-9c6f-6db803a518ed",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Why is this only a problem for `flutterExit`. Wouldn't it also cause issues with other service protocol extensions, as well?",
        "createdAt" : "2019-07-15T20:52:03Z",
        "updatedAt" : "2019-07-15T20:52:03Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "67b967ab-8689-470c-83de-274a1f740039",
        "parentId" : "e6e40f94-ad20-41dd-9c6f-6db803a518ed",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Some of the methods specifically catch or handle this case, like:\r\n\r\nhttps://github.com/flutter/flutter/blob/e3ee5c6bbb80732c30e18cde26602f9f7f018aa2/packages/flutter_tools/lib/src/run_hot.dart#L704\r\n\r\nSome don't. I can fix these separately, but we'll need this fix too so that we don't leave these apps open.",
        "createdAt" : "2019-07-15T21:10:24Z",
        "updatedAt" : "2019-07-15T21:10:24Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "4f08259f-81bc-4dda-93c7-1960158a9622",
        "parentId" : "e6e40f94-ad20-41dd-9c6f-6db803a518ed",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Filled https://github.com/flutter/flutter/issues/36214 to track",
        "createdAt" : "2019-07-15T21:44:51Z",
        "updatedAt" : "2019-07-15T21:44:52Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6777f174189fe2d976b937b098d10ef8a8fc8f28",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +176,180 @@      return;\n    final List<Future<void>> futures = <Future<void>>[];\n    // If any of the flutter views are paused, we might not be able to\n    // cleanly exit since the service extension may not have been registered.\n    if (flutterViews.any((FlutterView view) {"
  },
  {
    "id" : "7bad3484-3aa0-4b8a-995e-3e97d2a3ae5e",
    "prId" : 38575,
    "prUrl" : "https://github.com/flutter/flutter/pull/38575#pullrequestreview-275498912",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "946f0add-7788-4175-9729-c7d1f82b8039",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I added this line so that we do not spam strack traces for known error types",
        "createdAt" : "2019-08-15T00:07:01Z",
        "updatedAt" : "2019-08-15T15:26:25Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "2beb0fc8-96f7-4e3d-a0d9-e05106f0c3fd",
        "parentId" : "946f0add-7788-4175-9729-c7d1f82b8039",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "That sounds like a good comment to put in the code.",
        "createdAt" : "2019-08-15T15:07:33Z",
        "updatedAt" : "2019-08-15T15:26:25Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "f9bac21a-1dcd-4a0f-8376-6ee3edb2b011",
        "parentId" : "946f0add-7788-4175-9729-c7d1f82b8039",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Done",
        "createdAt" : "2019-08-15T15:26:32Z",
        "updatedAt" : "2019-08-15T15:26:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "64a3a89115a4b75f3b7114c2dd2fc9343ff293b0",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1118,1122 @@    } catch (error, st) {\n      // Don't print stack traces for known error types.\n      if (error is! ToolExit) {\n        printError('$error\\n$st');\n      }"
  },
  {
    "id" : "7e41a6e6-b986-4d16-a5fc-4d27fb8a75b9",
    "prId" : 40171,
    "prUrl" : "https://github.com/flutter/flutter/pull/40171#pullrequestreview-286954620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a766901c-4907-411e-8e3c-2582ca14c8ef",
        "parentId" : null,
        "authorId" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "body" : "I think this comment is incorrect now, since it calls `throwToolExit`?",
        "createdAt" : "2019-09-11T11:48:39Z",
        "updatedAt" : "2019-09-11T17:32:09Z",
        "lastEditedBy" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "tags" : [
        ]
      },
      {
        "id" : "cdf045cb-22b9-4aba-9953-626c97c7ae0f",
        "parentId" : "a766901c-4907-411e-8e3c-2582ca14c8ef",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Fixed",
        "createdAt" : "2019-09-11T17:32:30Z",
        "updatedAt" : "2019-09-11T17:32:30Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ff2060d8f10bd8b6d23f0ce7521993e7ee2b309",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +714,718 @@  /// and restore the debug banner before taking the screenshot.\n  ///\n  /// Throws an [AssertionError] if [Devce.supportsScreenshot] is not true.\n  Future<void> screenshot(FlutterDevice device) async {\n    assert(device.device.supportsScreenshot);"
  },
  {
    "id" : "41e87790-3a96-4acb-a0e9-bc63043f9d3f",
    "prId" : 40171,
    "prUrl" : "https://github.com/flutter/flutter/pull/40171#pullrequestreview-287036612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a06d0a7-1f73-400c-94f4-fb46282d0bb4",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Not necessarily for this PR: The status.cancel()s for this status should go in a finally block for the outermost try instead of spamming them before every return.",
        "createdAt" : "2019-09-11T19:50:43Z",
        "updatedAt" : "2019-09-11T19:51:36Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "8268fcad-267e-4fda-90eb-56731b241a78",
        "parentId" : "3a06d0a7-1f73-400c-94f4-fb46282d0bb4",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I'll roll this into my cleanup PR",
        "createdAt" : "2019-09-11T19:57:41Z",
        "updatedAt" : "2019-09-11T19:57:41Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ff2060d8f10bd8b6d23f0ce7521993e7ee2b309",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +718,722 @@    assert(device.device.supportsScreenshot);\n\n    final Status status = logger.startProgress('Taking screenshot for ${device.device.name}...', timeout: timeoutConfiguration.fastOperation);\n    final File outputFile = getUniqueFile(fs.currentDirectory, 'flutter', 'png');\n    try {"
  },
  {
    "id" : "c1fff279-85f8-45f3-ade1-49988f489119",
    "prId" : 40366,
    "prUrl" : "https://github.com/flutter/flutter/pull/40366#pullrequestreview-287721967",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8ee1338-3fcc-47b4-a3cc-2a8e3c321d7d",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Is there an issue filed for this?",
        "createdAt" : "2019-09-12T21:37:35Z",
        "updatedAt" : "2019-09-12T21:37:36Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "80353b4f-5c2f-47ec-97db-89c59d6b0d0f",
        "parentId" : "a8ee1338-3fcc-47b4-a3cc-2a8e3c321d7d",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Filled https://github.com/flutter/flutter/issues/40388",
        "createdAt" : "2019-09-12T21:44:43Z",
        "updatedAt" : "2019-09-12T21:44:43Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0b6b3eecaf2163bb8ae4077707af929db05cb0f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +551,555 @@    // TODO(jonahwilliams): this is a temporary work around to regain some of\n    // the initialize from dill performance. Longer term, we should have a\n    // better way to determine where the appropriate dill file is, as this\n    // doesn't work for Android or macOS builds.}\n    if (dillOutputPath == null) {"
  },
  {
    "id" : "910c55fb-a9c8-4bbd-b765-a419c234e04c",
    "prId" : 44637,
    "prUrl" : "https://github.com/flutter/flutter/pull/44637#pullrequestreview-316622161",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac9e36b2-0ff1-4ff5-8821-3c0600f2482f",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "What does changing this to a Stream do?  I think It takes a list so that for `-d all` the runner can handle multiple vmservice addresses",
        "createdAt" : "2019-11-12T03:38:52Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "dbc83452-d60b-4db7-8a18-ba1264eb5a9c",
        "parentId" : "ac9e36b2-0ff1-4ff5-8821-3c0600f2482f",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "If I'm reading this correctly, it looks like as a list this has either 0 or 1 elements, so I don't think it's related to -d all. What I'm not sure about is why it had to be an empty list rather than null when there were no observatory uris.",
        "createdAt" : "2019-11-12T21:23:38Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "107d1299-e1dd-42ae-a6cc-0a03656c56c5",
        "parentId" : "ac9e36b2-0ff1-4ff5-8821-3c0600f2482f",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "It appears the intention was to support multiple apps running an observatory on a single device, but it's not implemented. Was this done for Fuchsia?",
        "createdAt" : "2019-11-12T22:49:54Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "7c7d568b-9948-4b92-ae6b-e99e86cecfd3",
        "parentId" : "ac9e36b2-0ff1-4ff5-8821-3c0600f2482f",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Yeah, it looks like this was for the now-deleted fuchsia_reload command. Fuchsia is now handled differently, so I think this can be safely modified.",
        "createdAt" : "2019-11-13T17:53:13Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "db2cffe2-943b-4208-9626-847d0db28141",
        "parentId" : "ac9e36b2-0ff1-4ff5-8821-3c0600f2482f",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "At any rate - I'm not really sure what modifying the resident runner here is accomplishing. Isn't the goal to adjust this behavior for attach only?",
        "createdAt" : "2019-11-13T21:41:43Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "af332453-9c8d-4d3b-82d1-33dad7dec247",
        "parentId" : "ac9e36b2-0ff1-4ff5-8821-3c0600f2482f",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "As per offline discussion, I changed this such that it doesn't reuse the resident runner, which aligns with the expected lifecycle of the resident runner.",
        "createdAt" : "2019-11-13T23:14:03Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "77bd8ec8fb9af8dc37f1a7bb85e10c0af0c30b75",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +132,136 @@  final Device device;\n  final ResidentCompiler generator;\n  Stream<Uri> observatoryUris;\n  List<VMService> vmServices;\n  DevFS devFS;"
  },
  {
    "id" : "35b101de-e38c-42f1-832d-9cd7771fccf2",
    "prId" : 44637,
    "prUrl" : "https://github.com/flutter/flutter/pull/44637#pullrequestreview-317425213",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86133e10-7451-4a01-8690-08f4de8bc2d3",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "It looks like you re-added the updates to resident runner. Were these changes necessary for some reason?",
        "createdAt" : "2019-11-15T03:02:51Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "8fa4e3d2-454b-43e1-9621-9a93d62d00f3",
        "parentId" : "86133e10-7451-4a01-8690-08f4de8bc2d3",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "yes -- `observatoryUris` is a stream instead of a list.",
        "createdAt" : "2019-11-15T06:17:53Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "77bd8ec8fb9af8dc37f1a7bb85e10c0af0c30b75",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +159,163 @@    Restart restart,\n    CompileExpression compileExpression,\n  }) {\n    final Completer<void> completer = Completer<void>();\n    StreamSubscription<void> subscription;"
  },
  {
    "id" : "31013f7f-5399-443b-9b89-5c611200791e",
    "prId" : 44637,
    "prUrl" : "https://github.com/flutter/flutter/pull/44637#pullrequestreview-317754101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fe5dd24-4453-40f2-a66f-40a4c50871d8",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "I suspect this listen() call should have an onError callback",
        "createdAt" : "2019-11-15T17:18:54Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "77bd8ec8fb9af8dc37f1a7bb85e10c0af0c30b75",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +164,168 @@    bool isWaitingForVm = false;\n\n    subscription = observatoryUris.listen((Uri observatoryUri) async {\n      // FYI, this message is used as a sentinel in tests.\n      printTrace('Connecting to service protocol: $observatoryUri');"
  },
  {
    "id" : "47ca6e8b-919c-4441-b333-e02bde713a8d",
    "prId" : 44637,
    "prUrl" : "https://github.com/flutter/flutter/pull/44637#pullrequestreview-319350017",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35fa57a8-05b7-48c6-b8ae-dc07c4f34367",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Should this do a `completer.completeError()` in some situations?",
        "createdAt" : "2019-11-18T18:12:35Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "31b0a08c-c84b-48a1-8b4a-b5383c60f352",
        "parentId" : "35fa57a8-05b7-48c6-b8ae-dc07c4f34367",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "fwiw, the only case where this could happen is if `FormatException` is thrown while parsing the observatory URI.  I'm not sure how that would be possible and if it will happen consistently.",
        "createdAt" : "2019-11-18T21:16:39Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "42cbe0bb-98e3-4830-96a1-c17489ee7578",
        "parentId" : "35fa57a8-05b7-48c6-b8ae-dc07c4f34367",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Yeah, that showed up in crash logging at some point, which is why the existing code tries to defend against it.",
        "createdAt" : "2019-11-19T21:01:35Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "77bd8ec8fb9af8dc37f1a7bb85e10c0af0c30b75",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +194,198 @@      await subscription.cancel();\n    }, onError: (dynamic error) {\n      printTrace('Fail to handle observatory URI: $error');\n    }, onDone: () {\n      _isListeningForObservatoryUri = false;"
  },
  {
    "id" : "8f1ee9b0-10e2-42e3-a00a-c8e44bff54ff",
    "prId" : 44637,
    "prUrl" : "https://github.com/flutter/flutter/pull/44637#pullrequestreview-318626733",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f8e3ba4-38ba-4149-8cea-26a66cfdc245",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Is this a separate bug fix?",
        "createdAt" : "2019-11-18T18:28:59Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "2097aae1-e93d-4e70-8a86-56a23ece322f",
        "parentId" : "2f8e3ba4-38ba-4149-8cea-26a66cfdc245",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "Yep. I saw this issue while debugging.",
        "createdAt" : "2019-11-18T21:01:38Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "77bd8ec8fb9af8dc37f1a7bb85e10c0af0c30b75",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +253,257 @@      return view != null &&\n             view.uiIsolate != null &&\n             view.uiIsolate.pauseEvent != null &&\n             view.uiIsolate.pauseEvent.isPauseEvent;\n      }"
  }
]