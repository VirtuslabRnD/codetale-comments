[
  {
    "id" : "eaac2aa0-b1e9-4cd3-9098-9c0ace8c39f4",
    "prId" : 20035,
    "prUrl" : "https://github.com/flutter/flutter/pull/20035#pullrequestreview-142763691",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1feb48e-ce42-48ea-b6a5-14b3af8921d8",
        "parentId" : null,
        "authorId" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "body" : "Should this be done at construction time rather than when called (since it's supposed to be an immutable snapshot?). Or maybe checking _exampleManifest?",
        "createdAt" : "2018-08-02T07:23:56Z",
        "updatedAt" : "2018-08-02T07:27:17Z",
        "lastEditedBy" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "tags" : [
        ]
      },
      {
        "id" : "634e99c2-b1ac-48dd-9afe-f0d8819bf202",
        "parentId" : "e1feb48e-ce42-48ea-b6a5-14b3af8921d8",
        "authorId" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "body" : "I agree, `hasExampleApp` should not check `example/pubspec.yaml` on-the-fly as it muddles the snapshot semantics. I'll find a better way.",
        "createdAt" : "2018-08-02T09:17:31Z",
        "updatedAt" : "2018-08-02T09:17:31Z",
        "lastEditedBy" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "tags" : [
        ]
      },
      {
        "id" : "1c3b633d-33e0-4cdb-a6e2-9e5393ed97b2",
        "parentId" : "e1feb48e-ce42-48ea-b6a5-14b3af8921d8",
        "authorId" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "body" : "Leaving it to another PR, as \"a better way\" entails more changes.",
        "createdAt" : "2018-08-02T12:12:02Z",
        "updatedAt" : "2018-08-02T12:29:55Z",
        "lastEditedBy" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "fabd95249322a424adc10744d1214247d8c79342",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +120,124 @@\n  /// True, if this project has an example application\n  bool get hasExampleApp => _exampleDirectory.childFile('pubspec.yaml').existsSync();\n\n  /// The directory that will contain the example if an example exists."
  },
  {
    "id" : "382934a7-ac56-40b1-8aae-6257c1a5c9b0",
    "prId" : 20296,
    "prUrl" : "https://github.com/flutter/flutter/pull/20296#pullrequestreview-144141237",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7728b23a-fe8b-41c6-aa00-72566006807d",
        "parentId" : null,
        "authorId" : "8d1522ed-5e26-4cce-a4e4-80c6fd1c88d6",
        "body" : "What will happen after running `flutter materialize`? I thought that was the whole reason to have two types from the beginning.\r\nI guess the different subdirectories can be made to point into `android/blah/` and `.android/foo` respectively, but `AndroidProject.directory` becomes ambiguous.\r\nBut then again, perhaps we never use it on the outside (in that case it should be made private).",
        "createdAt" : "2018-08-07T14:08:27Z",
        "updatedAt" : "2018-08-07T19:15:34Z",
        "lastEditedBy" : "8d1522ed-5e26-4cce-a4e4-80c6fd1c88d6",
        "tags" : [
        ]
      },
      {
        "id" : "11a1d9a4-40bf-4b3e-ba85-d2c089942b42",
        "parentId" : "7728b23a-fe8b-41c6-aa00-72566006807d",
        "authorId" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "body" : "Yes, I'll work towards encapsulating it as I implement `materialize`. The idea is that any external code in need of the `directory` getter on `AndroidProject` or `IosProject` should ask for help instead of information, countering \"feature envy\".",
        "createdAt" : "2018-08-07T19:04:40Z",
        "updatedAt" : "2018-08-07T19:15:34Z",
        "lastEditedBy" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf646872a3638baabfd739ef523e8726cf13c398",
    "line" : 206,
    "diffHunk" : "@@ -1,1 +183,187 @@/// Represents the Android sub-project of a Flutter project.\n///\n/// Instances will reflect the contents of the `android/` sub-folder of\n/// Flutter applications and the `.android/` sub-folder of Flutter modules.\nclass AndroidProject {"
  },
  {
    "id" : "65939c57-cda7-4459-b28c-965199eb84f5",
    "prId" : 20296,
    "prUrl" : "https://github.com/flutter/flutter/pull/20296#pullrequestreview-144138504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a3a2904-a69e-4e30-bb2a-8cb1fde4db58",
        "parentId" : null,
        "authorId" : "8d1522ed-5e26-4cce-a4e4-80c6fd1c88d6",
        "body" : "Move return to previous line?",
        "createdAt" : "2018-08-07T14:27:35Z",
        "updatedAt" : "2018-08-07T19:15:34Z",
        "lastEditedBy" : "8d1522ed-5e26-4cce-a4e4-80c6fd1c88d6",
        "tags" : [
        ]
      },
      {
        "id" : "b6fc1ad3-f22e-46da-a833-1f79f479d3cb",
        "parentId" : "5a3a2904-a69e-4e30-bb2a-8cb1fde4db58",
        "authorId" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "body" : "I believe I'm following the style guide here: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#separate-the-if-expression-from-its-statement",
        "createdAt" : "2018-08-07T18:57:11Z",
        "updatedAt" : "2018-08-07T19:15:34Z",
        "lastEditedBy" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf646872a3638baabfd739ef523e8726cf13c398",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +109,113 @@  Future<void> ensureReadyForPlatformSpecificTooling() async {\n    if (!directory.existsSync() || hasExampleApp)\n      return;\n    await android.ensureReadyForPlatformSpecificTooling();\n    await ios.ensureReadyForPlatformSpecificTooling();"
  },
  {
    "id" : "7b34ebdb-0d62-4916-a468-2db13bb8ae71",
    "prId" : 28302,
    "prUrl" : "https://github.com/flutter/flutter/pull/28302#pullrequestreview-208204917",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4abf2f51-89e0-4a23-9b02-1e6bf6d0edda",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "FWIW internally we already switched to hand-written `index.html`. We consider it equivalent of Java/ObjC code generated by `flutter create` then edited by hand.",
        "createdAt" : "2019-02-22T23:58:40Z",
        "updatedAt" : "2019-02-26T22:00:26Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "89739375-2e46-4582-aef6-c34b2115eb02",
        "parentId" : "4abf2f51-89e0-4a23-9b02-1e6bf6d0edda",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Makes sense, we can generate the index.html only as a part of flutter create and then separate out the generatedPluginRegistry files.",
        "createdAt" : "2019-02-26T21:01:27Z",
        "updatedAt" : "2019-02-26T22:00:26Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d471ac4001b0aa330b2b572e9231bcf1fa678f30",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +470,474 @@   Future<void> ensureReadyForPlatformSpecificTooling() async {\n    /// Generate index.html in build/web. Eventually we could support\n    /// a custom html under the web sub directory.\n    final Directory outputDir = fs.directory(getWebBuildDirectory());\n    if (!outputDir.existsSync()) {"
  },
  {
    "id" : "33b42d48-2ef6-45e0-9edd-b5d26c3928d2",
    "prId" : 31205,
    "prUrl" : "https://github.com/flutter/flutter/pull/31205#pullrequestreview-227881375",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e61e9f2-6ffa-4c7f-8a9d-e22cf770dd84",
        "parentId" : null,
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "It is worth documenting these to explain that this is a temporary shim?",
        "createdAt" : "2019-04-17T17:08:48Z",
        "updatedAt" : "2019-04-17T17:52:56Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2f58afe3db20f4290dc09a7ba0b9c8815971016",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +538,542 @@\n  // Note: The build script file exists as a temporary shim.\n  File get buildScript => project.directory.childDirectory('macos').childFile('build.sh');\n}\n"
  },
  {
    "id" : "5bf8ab09-83df-49d8-865c-4e6ae28bf69c",
    "prId" : 35092,
    "prUrl" : "https://github.com/flutter/flutter/pull/35092#pullrequestreview-254799272",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94a03149-440c-49b2-b7eb-f6fbfcc33b23",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "nit: give this a `const` constructor and make the getter above use that instead",
        "createdAt" : "2019-06-26T18:10:23Z",
        "updatedAt" : "2019-06-26T18:21:30Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "0add025b-3953-4742-9e51-767a70749900",
        "parentId" : "94a03149-440c-49b2-b7eb-f6fbfcc33b23",
        "authorId" : "6cebaf11-1310-4ef0-9c8d-81e6d82c9b9c",
        "body" : "Done.",
        "createdAt" : "2019-06-26T18:33:20Z",
        "updatedAt" : "2019-06-26T18:33:20Z",
        "lastEditedBy" : "6cebaf11-1310-4ef0-9c8d-81e6d82c9b9c",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b90d5d6f9b6cea8128e79af82af619622b5593b",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +26,30 @@FlutterProjectFactory get projectFactory => context.get<FlutterProjectFactory>() ?? const FlutterProjectFactory();\n\nclass FlutterProjectFactory {\n  const FlutterProjectFactory();\n"
  },
  {
    "id" : "02e11f8b-15d1-4501-aea2-7bd03877b695",
    "prId" : 44043,
    "prUrl" : "https://github.com/flutter/flutter/pull/44043#pullrequestreview-311435195",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ddcc8de-fe5d-4c00-aa62-6129e916b927",
        "parentId" : null,
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "nit: indentation ",
        "createdAt" : "2019-11-04T17:56:08Z",
        "updatedAt" : "2019-11-05T02:12:53Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "2c000dcf-3deb-46cf-8908-9e8e7cfa43f4",
        "parentId" : "0ddcc8de-fe5d-4c00-aa62-6129e916b927",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "thanks",
        "createdAt" : "2019-11-05T00:02:07Z",
        "updatedAt" : "2019-11-05T02:12:53Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "68c7bc53327e3db69b20f4ef0d3d3a6ea5e44e79",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +671,675 @@      }\n    }\n    return AndroidEmbeddingVersion.v1;\n  }\n}"
  },
  {
    "id" : "79c9d109-c7e6-4896-8e9f-e10c68d231b3",
    "prId" : 44499,
    "prUrl" : "https://github.com/flutter/flutter/pull/44499#pullrequestreview-315181925",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44efb30a-cfd5-4567-ba31-b8ffd382bbdc",
        "parentId" : null,
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "what about a project that was created with v1 and ran make-host-app-editable?",
        "createdAt" : "2019-11-11T05:16:14Z",
        "updatedAt" : "2019-11-11T22:01:13Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "b61206f2-aaa7-4350-b114-ae94ce2e9886",
        "parentId" : "44efb30a-cfd5-4567-ba31-b8ffd382bbdc",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Discussed on chat. If users generally consumed v1 in add-to-app, it would break in the next stable. Those plugins will need to be registered manually since our tools can't predict whether a v1 or v2 style consumption will be made in the host Android project. \r\n\r\nDocument in https://github.com/flutter/flutter/issues/36491",
        "createdAt" : "2019-11-11T21:59:23Z",
        "updatedAt" : "2019-11-11T22:01:13Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b9726db257bc225dedc3e44036846a61c4543f",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +649,653 @@      // A module type's Android project is used in add-to-app scenarios and\n      // only supports the V2 embedding.\n      return AndroidEmbeddingVersion.v2;\n    }\n    if (appManifestFile == null || !appManifestFile.existsSync()) {"
  },
  {
    "id" : "32b2677e-6e22-42cd-b27d-d571df21c2af",
    "prId" : 48614,
    "prUrl" : "https://github.com/flutter/flutter/pull/48614#pullrequestreview-342216824",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04cc5fa9-b9e6-483d-88d1-e8d56ed0a559",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Please add a doc comment to this class",
        "createdAt" : "2020-01-13T23:53:18Z",
        "updatedAt" : "2020-01-16T16:22:13Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "23cb397f54bba7052ab710f247565851723bf46b",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +254,258 @@\n/// Base class for projects per platform.\nabstract class FlutterProjectPlatform {\n\n  /// Plugin's platform config key, e.g., \"macos\", \"ios\"."
  },
  {
    "id" : "e5e9fa62-1c78-4bd9-94f7-3bab50282fb9",
    "prId" : 51126,
    "prUrl" : "https://github.com/flutter/flutter/pull/51126#pullrequestreview-392306018",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "345f7a62-201b-43cb-8d50-c77ce273eb92",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "I took the liberty of writing some unit tests for this since I know this file is really gross to test.  You can put them in `project_test.dart` or I'd be happy to push it to your fork, if you prefer.\r\n```dart\r\n    group('watch companion', () {\r\n      MemoryFileSystem fs;\r\n      MockPlistUtils mockPlistUtils;\r\n      MockXcodeProjectInterpreter mockXcodeProjectInterpreter;\r\n      FlutterProjectFactory flutterProjectFactory;\r\n      setUp(() {\r\n        fs = MemoryFileSystem.test();\r\n        mockPlistUtils = MockPlistUtils();\r\n        mockXcodeProjectInterpreter = MockXcodeProjectInterpreter();\r\n        flutterProjectFactory = FlutterProjectFactory();\r\n      });\r\n\r\n      testUsingContext('cannot find bundle identifier', () async {\r\n        final FlutterProject project = await someProject();\r\n        expect(await project.ios.containsWatchCompanion(<String>['WatchTarget']), isFalse);\r\n      }, overrides: <Type, Generator>{\r\n        FileSystem: () => fs,\r\n        ProcessManager: () => FakeProcessManager.any(),\r\n        PlistParser: () => mockPlistUtils,\r\n        XcodeProjectInterpreter: () => mockXcodeProjectInterpreter,\r\n        FlutterProjectFactory: () => flutterProjectFactory,\r\n      });\r\n\r\n      group('with bundle identifier', () {\r\n        setUp(() {\r\n          when(mockXcodeProjectInterpreter.getBuildSettings(any, any)).thenAnswer(\r\n              (_) {\r\n              return Future<Map<String,String>>.value(<String, String>{\r\n                'PRODUCT_BUNDLE_IDENTIFIER': 'io.flutter.someProject',\r\n              });\r\n            }\r\n          );\r\n        });\r\n\r\n        testUsingContext('no Info.plist in target', () async {\r\n          final FlutterProject project = await someProject();\r\n          expect(await project.ios.containsWatchCompanion(<String>['WatchTarget']), isFalse);\r\n        }, overrides: <Type, Generator>{\r\n          FileSystem: () => fs,\r\n          ProcessManager: () => FakeProcessManager.any(),\r\n          PlistParser: () => mockPlistUtils,\r\n          XcodeProjectInterpreter: () => mockXcodeProjectInterpreter,\r\n          FlutterProjectFactory: () => flutterProjectFactory,\r\n        });\r\n\r\n        testUsingContext('Info.plist in target does not contain WKCompanionAppBundleIdentifier', () async {\r\n          final FlutterProject project = await someProject();\r\n          project.ios.hostAppRoot.childDirectory('WatchTarget').childFile('Info.plist').createSync(recursive: true);\r\n\r\n          expect(await project.ios.containsWatchCompanion(<String>['WatchTarget']), isFalse);\r\n        }, overrides: <Type, Generator>{\r\n          FileSystem: () => fs,\r\n          ProcessManager: () => FakeProcessManager.any(),\r\n          PlistParser: () => mockPlistUtils,\r\n          XcodeProjectInterpreter: () => mockXcodeProjectInterpreter,\r\n          FlutterProjectFactory: () => flutterProjectFactory,\r\n        });\r\n\r\n        testUsingContext('target WKCompanionAppBundleIdentifier is not project bundle identifier', () async {\r\n          final FlutterProject project = await someProject();\r\n          project.ios.hostAppRoot.childDirectory('WatchTarget').childFile('Info.plist').createSync(recursive: true);\r\n\r\n          when(mockPlistUtils.getValueFromFile(any, 'WKCompanionAppBundleIdentifier')).thenReturn('io.flutter.someOTHERproject');\r\n          expect(await project.ios.containsWatchCompanion(<String>['WatchTarget']), isFalse);\r\n        }, overrides: <Type, Generator>{\r\n          FileSystem: () => fs,\r\n          ProcessManager: () => FakeProcessManager.any(),\r\n          PlistParser: () => mockPlistUtils,\r\n          XcodeProjectInterpreter: () => mockXcodeProjectInterpreter,\r\n          FlutterProjectFactory: () => flutterProjectFactory,\r\n        });\r\n\r\n        testUsingContext('has watch companion', () async {\r\n          final FlutterProject project = await someProject();\r\n          project.ios.hostAppRoot.childDirectory('WatchTarget').childFile('Info.plist').createSync(recursive: true);\r\n          when(mockPlistUtils.getValueFromFile(any, 'WKCompanionAppBundleIdentifier')).thenReturn('io.flutter.someProject');\r\n\r\n          expect(await project.ios.containsWatchCompanion(<String>['WatchTarget']), isTrue);\r\n        }, overrides: <Type, Generator>{\r\n          FileSystem: () => fs,\r\n          ProcessManager: () => FakeProcessManager.any(),\r\n          PlistParser: () => mockPlistUtils,\r\n          XcodeProjectInterpreter: () => mockXcodeProjectInterpreter,\r\n          FlutterProjectFactory: () => flutterProjectFactory,\r\n        });\r\n      });\r\n    });\r\n```",
        "createdAt" : "2020-04-11T01:12:56Z",
        "updatedAt" : "2020-04-15T16:09:12Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "3599e5e5-3980-47a7-86ad-e772f4a3887e",
        "parentId" : "345f7a62-201b-43cb-8d50-c77ce273eb92",
        "authorId" : "448262dc-2b80-4493-bab3-c5fb72d31228",
        "body" : "Thanks a lot! Totally agree that tests for containsWatchCompanion should be included (... and that writing tests for the plist file is not exactly fun ;-) )",
        "createdAt" : "2020-04-12T13:10:24Z",
        "updatedAt" : "2020-04-15T16:09:12Z",
        "lastEditedBy" : "448262dc-2b80-4493-bab3-c5fb72d31228",
        "tags" : [
        ]
      },
      {
        "id" : "38f2df7c-8240-4ac8-8187-7c5c1670e784",
        "parentId" : "345f7a62-201b-43cb-8d50-c77ce273eb92",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "> (... and that writing tests for the plist file is not exactly fun ;-) )\r\n\r\nUgh I know, tell me about it. 😝 \r\nWe're working on making tool tests easier to write, though mocking out a plist parser may never be anyone's favorite pastime.",
        "createdAt" : "2020-04-13T17:40:55Z",
        "updatedAt" : "2020-04-15T16:09:12Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "c73bb88448b4814093e16a8a32a773b8fe971380",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +488,492 @@\n  /// Check if one the [targets] of the project is a watchOS companion app target.\n  Future<bool> containsWatchCompanion(List<String> targets) async {\n    final String bundleIdentifier = await productBundleIdentifier;\n    // A bundle identifier is required for a companion app."
  },
  {
    "id" : "0ac3b1c4-cb85-47e9-babb-877ec94cc0eb",
    "prId" : 61140,
    "prUrl" : "https://github.com/flutter/flutter/pull/61140#pullrequestreview-446032781",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13207915-a0ec-4f85-ab6b-f1ecea1e5fd8",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "This wasted time shelling out to tooling in nonexistent directories when creating a new project.",
        "createdAt" : "2020-07-09T23:28:37Z",
        "updatedAt" : "2020-07-09T23:28:38Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "99364759b4d6851780a31460ec4d93a5c0b299cd",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +116,120 @@        example.android.applicationId,\n      if (example.ios.existsSync())\n        await example.ios.productBundleIdentifier(null),\n    ];\n    return Set<String>.of(candidates"
  },
  {
    "id" : "100239d0-218f-430e-b3e2-f801e848c0cb",
    "prId" : 62395,
    "prUrl" : "https://github.com/flutter/flutter/pull/62395#pullrequestreview-475847600",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1cccdc7d-a940-4e99-b80b-de086bba039a",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "what is this change fixing?",
        "createdAt" : "2020-08-25T16:31:11Z",
        "updatedAt" : "2020-08-27T22:41:53Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "6f816051-d774-4e33-8894-7c78311a580e",
        "parentId" : "1cccdc7d-a940-4e99-b80b-de086bba039a",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "It doesn't fix anything, but I thought that it was a little clearer to me to just be explicit since `fromDirectory()` is simply the same thing as `globals.projectFactory.fromDirectory()`.",
        "createdAt" : "2020-08-26T12:50:10Z",
        "updatedAt" : "2020-08-27T22:41:53Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "4f85e87f-a5db-4d51-9ded-26459cffc790",
        "parentId" : "1cccdc7d-a940-4e99-b80b-de086bba039a",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "ahh, right",
        "createdAt" : "2020-08-26T20:48:25Z",
        "updatedAt" : "2020-08-27T22:41:53Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5bcc7ba51136989c0026a6e29ecd582e3f87362",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +85,89 @@  /// Returns a [FlutterProject] view of the current directory or a ToolExit error,\n  /// if `pubspec.yaml` or `example/pubspec.yaml` is invalid.\n  static FlutterProject current() => globals.projectFactory.fromDirectory(globals.fs.currentDirectory);\n\n  /// Returns a [FlutterProject] view of the given directory or a ToolExit error,"
  },
  {
    "id" : "618fb8a9-67be-4e6f-b2cf-1cde5408bbc7",
    "prId" : 68376,
    "prUrl" : "https://github.com/flutter/flutter/pull/68376#pullrequestreview-512174193",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc1fdadb-1af1-42ec-a2f3-9ff68218c2d4",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "@stuartmorgan I moved the TODOs scattered around to reexamine the logic to this spot.  Let me know if you want it somewhere else, or need it reworded.",
        "createdAt" : "2020-10-19T16:09:28Z",
        "updatedAt" : "2020-10-19T19:05:52Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "2dd0b546-92d4-4ee0-9b43-bd96509d91f2",
        "parentId" : "dc1fdadb-1af1-42ec-a2f3-9ff68218c2d4",
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "The TODO was really about figuring out what `checkProjects` was for and why we would ever want the `checkProjects = false` behavior since it seemed really bizarre, so it looks like this PR obsoletes it. But I can clean it up later.",
        "createdAt" : "2020-10-19T21:30:35Z",
        "updatedAt" : "2020-10-19T21:30:36Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae8f1b949114bedc9da15ede6c130b52a04528cd",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +239,243 @@      iosPlatform: ios.existsSync(),\n      // TODO(stuartmorgan): Revisit the conditions here once the plans for handling\n      // desktop in existing projects are in place.\n      linuxPlatform: featureFlags.isLinuxEnabled && linux.existsSync(),\n      macOSPlatform: featureFlags.isMacOSEnabled && macos.existsSync(),"
  },
  {
    "id" : "b73e744b-5fde-4bc2-8c5c-3c6ec841bbe7",
    "prId" : 69612,
    "prUrl" : "https://github.com/flutter/flutter/pull/69612#pullrequestreview-522089864",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "823d7bad-beae-4462-94cc-9806f0d7311b",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Open to naming suggestions here.",
        "createdAt" : "2020-11-02T22:47:05Z",
        "updatedAt" : "2020-11-02T23:11:44Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "bace368d-e7c3-470c-862b-60c8d65e7ca6",
        "parentId" : "823d7bad-beae-4462-94cc-9806f0d7311b",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Seems reasonable to me. Might want to TODO removal after a stable release cycle or so",
        "createdAt" : "2020-11-02T22:56:26Z",
        "updatedAt" : "2020-11-02T23:11:44Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c39acfd65f204e3220ee1a493b20b402b41c93c",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +686,690 @@  ///\n  /// Used only for \"flutter clean\" to remove old references.\n  Directory get deprecatedCompiledDartFramework => _flutterLibRoot\n      .childDirectory('Flutter')\n      .childDirectory('App.framework');"
  },
  {
    "id" : "c1bf833c-3224-4abe-8a9d-1463658cfd80",
    "prId" : 76258,
    "prUrl" : "https://github.com/flutter/flutter/pull/76258#pullrequestreview-593380566",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92497892-9290-4479-8a90-69463a93370e",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Oh, I guess you have to do it this way rather than have a default for the optional argument because `BufferLogger.test()` is non-const?",
        "createdAt" : "2021-02-18T16:04:39Z",
        "updatedAt" : "2021-02-18T19:31:32Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "be8b7b0b425b64df634533dd990ce08c2970736e",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +91,95 @@  static FlutterProject fromDirectoryTest(Directory directory, [Logger logger]) {\n    final FileSystem fileSystem = directory.fileSystem;\n    logger ??= BufferLogger.test();\n    final FlutterManifest manifest = FlutterProject._readManifest(\n      directory.childFile(bundle.defaultManifestPath).path,"
  },
  {
    "id" : "bb16b751-8299-49f6-af43-c7768544e6af",
    "prId" : 83445,
    "prUrl" : "https://github.com/flutter/flutter/pull/83445#pullrequestreview-669572295",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "370eb2eb-9457-484c-b92e-6b972eaf10aa",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "This method is mostly used to generate dep files.\r\nCould also be convinced to set `version`/`build_number` value to an empty string instead.",
        "createdAt" : "2021-05-26T21:52:01Z",
        "updatedAt" : "2021-05-26T21:57:55Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "96457072b3749c972dcd122d62c270f11251d6a7",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +351,355 @@  /// Returns a json encoded string containing the [appName], [version], and [buildNumber] that is used to generate version.json\n  String getVersionInfo()  {\n    final String buildName = manifest.buildName;\n    final String buildNumber = manifest.buildNumber;\n    final Map<String, String> versionFileJson = <String, String>{"
  },
  {
    "id" : "261989cf-5640-4265-beb2-a752ebb5a00a",
    "prId" : 83445,
    "prUrl" : "https://github.com/flutter/flutter/pull/83445#pullrequestreview-669572295",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b7a5d62-8bda-4041-bdae-34c080db72f4",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Avoid setting a _buildSettingsByBuildContext value to `null`.",
        "createdAt" : "2021-05-26T21:52:17Z",
        "updatedAt" : "2021-05-26T21:56:13Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "96457072b3749c972dcd122d62c270f11251d6a7",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +637,641 @@      final Map<String, String> calculatedBuildSettings = await _xcodeProjectBuildSettings(buildContext);\n      if (calculatedBuildSettings != null) {\n        _buildSettingsByBuildContext[buildContext] = calculatedBuildSettings;\n      }\n    }"
  },
  {
    "id" : "00ae5baa-00ad-4498-9149-0c382e066a63",
    "prId" : 83445,
    "prUrl" : "https://github.com/flutter/flutter/pull/83445#pullrequestreview-669572295",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4817eccc-61aa-4b32-b80e-699b625dee78",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "This seems like a good fallback, already used in https://github.com/flutter/flutter/blob/e7b7ebc066c1b2a5aa5c19f8961307427e0142a6/packages/flutter_tools/lib/src/android/deferred_components_prebuild_validator.dart#L271",
        "createdAt" : "2021-05-26T21:55:38Z",
        "updatedAt" : "2021-05-26T21:56:13Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "96457072b3749c972dcd122d62c270f11251d6a7",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +1005,1009 @@      templateRenderer: globals.templateRenderer,\n    );\n    final String androidIdentifier = parent.manifest.androidPackage ?? 'com.example.${parent.manifest.appName}';\n    template.render(\n      target,"
  },
  {
    "id" : "fd7b86d2-3639-4311-83d9-431c71b33832",
    "prId" : 83445,
    "prUrl" : "https://github.com/flutter/flutter/pull/83445#pullrequestreview-669572295",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8768664d-0931-4cee-a090-01038887fb53",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "See `androidIdentifier` comment, `parent.manifest.appName` seems like a fine fallback value.",
        "createdAt" : "2021-05-26T21:56:05Z",
        "updatedAt" : "2021-05-26T21:56:13Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "96457072b3749c972dcd122d62c270f11251d6a7",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +820,824 @@      templateRenderer: globals.templateRenderer,\n    );\n    final String iosBundleIdentifier = parent.manifest.iosBundleIdentifier ?? 'com.example.${parent.manifest.appName}';\n    template.render(\n      target,"
  },
  {
    "id" : "56adc06f-ff56-4842-a845-8b570cc09708",
    "prId" : 85359,
    "prUrl" : "https://github.com/flutter/flutter/pull/85359#pullrequestreview-693258366",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b341ce54-72d6-42bd-a26e-dc4a4b4c53a1",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Also happy to instead not export these and instead update all imports, including in g3.",
        "createdAt" : "2021-06-26T00:25:17Z",
        "updatedAt" : "2021-06-26T00:25:17Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "e284d346736ed66ac73ba6cd2d4a3a5766a551b4",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +25,29 @@\nexport 'cmake_project.dart';\nexport 'xcode_project.dart';\n\nclass FlutterProjectFactory {"
  }
]