[
  {
    "id" : "a1cb788c-fe40-431a-ac19-d84bdc5e03ef",
    "prId" : 3213,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab6fb6b4-e6ef-4d7d-b02f-8eac42016b1d",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Nice.\n",
        "createdAt" : "2016-04-08T17:18:14Z",
        "updatedAt" : "2016-04-08T17:25:15Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee7133d772ccd1e9f820b5df660e8e9835cec6e4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +19,23 @@  if (pubSpecYaml.lastModifiedSync().isAfter(dotPackagesLastModified))\n    return true;\n  File flutterToolsStamp = Cache.instance.getStampFileFor('flutter_tools');\n  if (flutterToolsStamp.lastModifiedSync().isAfter(dotPackagesLastModified))\n    return true;"
  },
  {
    "id" : "a780c381-8ec5-4c3d-8c8b-081c2e3c6193",
    "prId" : 6856,
    "prUrl" : "https://github.com/flutter/flutter/pull/6856#pullrequestreview-8518748",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b62a51e-3fe1-4ec2-a31d-d6ba0b771a6b",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Is the relative path always the same? For example, if the analyzer override is transitive, would it still produce the same path?\n",
        "createdAt" : "2016-11-15T00:51:51Z",
        "updatedAt" : "2016-11-15T00:52:32Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "7f982793-7e43-4c8a-b42b-8c895ad33fda",
        "parentId" : "4b62a51e-3fe1-4ec2-a31d-d6ba0b771a6b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Seems to. I tried creating a package way off in a different directory, then ran `flutter packages get` and it didn't print anything.\n",
        "createdAt" : "2016-11-15T00:54:06Z",
        "updatedAt" : "2016-11-15T00:54:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a63c0f913d655aaebc1c19c4a9484d0edfe9ad55",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +66,70 @@}\n\nfinal RegExp _analyzerWarning = new RegExp(r'^! analyzer [^ ]+ from path \\.\\./\\.\\./bin/cache/dart-sdk/lib/analyzer$');\n\nString _filterOverrideWarnings(String message) {"
  },
  {
    "id" : "3f2e53b8-14e0-4689-b42c-54c70fb65441",
    "prId" : 13366,
    "prUrl" : "https://github.com/flutter/flutter/pull/13366#pullrequestreview-81560101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38998a60-da93-443c-9175-bacf4ea81087",
        "parentId" : null,
        "authorId" : "1763d25e-2bc0-4671-b03b-79f854e469df",
        "body" : "Can you clarify why we need these to be so specific (and thus less 'stable')? Wouldn't it be enough to differentiate between package commands that are from developers, and commands that are from our internal tooling?",
        "createdAt" : "2017-12-06T09:14:38Z",
        "updatedAt" : "2017-12-06T15:29:22Z",
        "lastEditedBy" : "1763d25e-2bc0-4671-b03b-79f854e469df",
        "tags" : [
        ]
      },
      {
        "id" : "8947df7b-20a5-4948-849e-aa1f958c0d9d",
        "parentId" : "38998a60-da93-443c-9175-bacf4ea81087",
        "authorId" : "af76c3cb-abdd-4771-b9ac-01cc10bb53ad",
        "body" : "the 'update_packages' bits cover a lot of the things we were seeing, but I'm also seeing `barback` coming through w/ a direct dependency via verify, create, etc.\r\n\r\nI want to understand which commands are doing that.",
        "createdAt" : "2017-12-06T15:30:51Z",
        "updatedAt" : "2017-12-06T15:30:51Z",
        "lastEditedBy" : "af76c3cb-abdd-4771-b9ac-01cc10bb53ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a18b4196d55660108a9f24d4e2ba91f3bf17048",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +22,26 @@// DO NOT update without contacting kevmoo.\n// We have server-side tooling that assumes the values are consistent.\nclass PubContext {\n  static final RegExp _validContext = new RegExp('[a-z][a-z_]*[a-z]');\n"
  },
  {
    "id" : "4fa8c2ef-3c10-4551-9fb4-b6ce3d572a30",
    "prId" : 13366,
    "prUrl" : "https://github.com/flutter/flutter/pull/13366#pullrequestreview-81632610",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27eac748-9ec1-4af7-9ea3-8ceba50cb35d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "style nits: please follow flutter style, which has constructors first, avoids newlines in expressions containing `=>`, and always has a newline before the `)` if there's one after the `(`. See https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo",
        "createdAt" : "2017-12-06T19:05:16Z",
        "updatedAt" : "2017-12-06T19:05:16Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a18b4196d55660108a9f24d4e2ba91f3bf17048",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +38,42 @@  final List<String> _values;\n\n  PubContext._(this._values) {\n    for (String item in _values) {\n      if (!_validContext.hasMatch(item)) {"
  },
  {
    "id" : "34647e67-ace5-44a8-b762-86af405a4dc5",
    "prId" : 13366,
    "prUrl" : "https://github.com/flutter/flutter/pull/13366#pullrequestreview-81641092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae693ef1-11bd-4f4d-b776-a065b1f84c9f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Is the server side tooling public code somewhere? It would be nice to actually point to the code rather than to a single person here, in case e.g. you're on vacation or something.",
        "createdAt" : "2017-12-06T19:06:39Z",
        "updatedAt" : "2017-12-06T19:06:39Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "743b0317-d93c-42a5-985a-53bfb718eedb",
        "parentId" : "ae693ef1-11bd-4f4d-b776-a065b1f84c9f",
        "authorId" : "af76c3cb-abdd-4771-b9ac-01cc10bb53ad",
        "body" : "It's not public. We could put a `go` link here. Reasonable?",
        "createdAt" : "2017-12-06T19:09:15Z",
        "updatedAt" : "2017-12-06T19:09:15Z",
        "lastEditedBy" : "af76c3cb-abdd-4771-b9ac-01cc10bb53ad",
        "tags" : [
        ]
      },
      {
        "id" : "615f8985-620f-429b-80dc-3a6a813ec576",
        "parentId" : "ae693ef1-11bd-4f4d-b776-a065b1f84c9f",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Sure. Maybe something like:\r\n\r\n```\r\n// Google runs server-side tooling that depends on these exact values.\r\n// Please avoid updating this code without having someone at Google\r\n// update the corresponding back-end code at the same time.\r\n// Contact @kevmoo for details. Googlers, see go/foobar.\r\n```",
        "createdAt" : "2017-12-06T19:32:24Z",
        "updatedAt" : "2017-12-06T19:32:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a18b4196d55660108a9f24d4e2ba91f3bf17048",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +21,25 @@/// the package site on Flutter's behalf.\n// DO NOT update without contacting kevmoo.\n// We have server-side tooling that assumes the values are consistent.\nclass PubContext {\n  static final RegExp _validContext = new RegExp('[a-z][a-z_]*[a-z]');"
  }
]