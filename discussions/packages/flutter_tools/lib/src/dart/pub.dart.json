[
  {
    "id" : "a1cb788c-fe40-431a-ac19-d84bdc5e03ef",
    "prId" : 3213,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab6fb6b4-e6ef-4d7d-b02f-8eac42016b1d",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Nice.\n",
        "createdAt" : "2016-04-08T17:18:14Z",
        "updatedAt" : "2016-04-08T17:25:15Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee7133d772ccd1e9f820b5df660e8e9835cec6e4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +19,23 @@  if (pubSpecYaml.lastModifiedSync().isAfter(dotPackagesLastModified))\n    return true;\n  File flutterToolsStamp = Cache.instance.getStampFileFor('flutter_tools');\n  if (flutterToolsStamp.lastModifiedSync().isAfter(dotPackagesLastModified))\n    return true;"
  },
  {
    "id" : "a780c381-8ec5-4c3d-8c8b-081c2e3c6193",
    "prId" : 6856,
    "prUrl" : "https://github.com/flutter/flutter/pull/6856#pullrequestreview-8518748",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b62a51e-3fe1-4ec2-a31d-d6ba0b771a6b",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Is the relative path always the same? For example, if the analyzer override is transitive, would it still produce the same path?\n",
        "createdAt" : "2016-11-15T00:51:51Z",
        "updatedAt" : "2016-11-15T00:52:32Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "7f982793-7e43-4c8a-b42b-8c895ad33fda",
        "parentId" : "4b62a51e-3fe1-4ec2-a31d-d6ba0b771a6b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Seems to. I tried creating a package way off in a different directory, then ran `flutter packages get` and it didn't print anything.\n",
        "createdAt" : "2016-11-15T00:54:06Z",
        "updatedAt" : "2016-11-15T00:54:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a63c0f913d655aaebc1c19c4a9484d0edfe9ad55",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +66,70 @@}\n\nfinal RegExp _analyzerWarning = new RegExp(r'^! analyzer [^ ]+ from path \\.\\./\\.\\./bin/cache/dart-sdk/lib/analyzer$');\n\nString _filterOverrideWarnings(String message) {"
  },
  {
    "id" : "3f2e53b8-14e0-4689-b42c-54c70fb65441",
    "prId" : 13366,
    "prUrl" : "https://github.com/flutter/flutter/pull/13366#pullrequestreview-81560101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38998a60-da93-443c-9175-bacf4ea81087",
        "parentId" : null,
        "authorId" : "1763d25e-2bc0-4671-b03b-79f854e469df",
        "body" : "Can you clarify why we need these to be so specific (and thus less 'stable')? Wouldn't it be enough to differentiate between package commands that are from developers, and commands that are from our internal tooling?",
        "createdAt" : "2017-12-06T09:14:38Z",
        "updatedAt" : "2017-12-06T15:29:22Z",
        "lastEditedBy" : "1763d25e-2bc0-4671-b03b-79f854e469df",
        "tags" : [
        ]
      },
      {
        "id" : "8947df7b-20a5-4948-849e-aa1f958c0d9d",
        "parentId" : "38998a60-da93-443c-9175-bacf4ea81087",
        "authorId" : "af76c3cb-abdd-4771-b9ac-01cc10bb53ad",
        "body" : "the 'update_packages' bits cover a lot of the things we were seeing, but I'm also seeing `barback` coming through w/ a direct dependency via verify, create, etc.\r\n\r\nI want to understand which commands are doing that.",
        "createdAt" : "2017-12-06T15:30:51Z",
        "updatedAt" : "2017-12-06T15:30:51Z",
        "lastEditedBy" : "af76c3cb-abdd-4771-b9ac-01cc10bb53ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a18b4196d55660108a9f24d4e2ba91f3bf17048",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +22,26 @@// DO NOT update without contacting kevmoo.\n// We have server-side tooling that assumes the values are consistent.\nclass PubContext {\n  static final RegExp _validContext = new RegExp('[a-z][a-z_]*[a-z]');\n"
  },
  {
    "id" : "4fa8c2ef-3c10-4551-9fb4-b6ce3d572a30",
    "prId" : 13366,
    "prUrl" : "https://github.com/flutter/flutter/pull/13366#pullrequestreview-81632610",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27eac748-9ec1-4af7-9ea3-8ceba50cb35d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "style nits: please follow flutter style, which has constructors first, avoids newlines in expressions containing `=>`, and always has a newline before the `)` if there's one after the `(`. See https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo",
        "createdAt" : "2017-12-06T19:05:16Z",
        "updatedAt" : "2017-12-06T19:05:16Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a18b4196d55660108a9f24d4e2ba91f3bf17048",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +38,42 @@  final List<String> _values;\n\n  PubContext._(this._values) {\n    for (String item in _values) {\n      if (!_validContext.hasMatch(item)) {"
  },
  {
    "id" : "34647e67-ace5-44a8-b762-86af405a4dc5",
    "prId" : 13366,
    "prUrl" : "https://github.com/flutter/flutter/pull/13366#pullrequestreview-81641092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae693ef1-11bd-4f4d-b776-a065b1f84c9f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Is the server side tooling public code somewhere? It would be nice to actually point to the code rather than to a single person here, in case e.g. you're on vacation or something.",
        "createdAt" : "2017-12-06T19:06:39Z",
        "updatedAt" : "2017-12-06T19:06:39Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "743b0317-d93c-42a5-985a-53bfb718eedb",
        "parentId" : "ae693ef1-11bd-4f4d-b776-a065b1f84c9f",
        "authorId" : "af76c3cb-abdd-4771-b9ac-01cc10bb53ad",
        "body" : "It's not public. We could put a `go` link here. Reasonable?",
        "createdAt" : "2017-12-06T19:09:15Z",
        "updatedAt" : "2017-12-06T19:09:15Z",
        "lastEditedBy" : "af76c3cb-abdd-4771-b9ac-01cc10bb53ad",
        "tags" : [
        ]
      },
      {
        "id" : "615f8985-620f-429b-80dc-3a6a813ec576",
        "parentId" : "ae693ef1-11bd-4f4d-b776-a065b1f84c9f",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Sure. Maybe something like:\r\n\r\n```\r\n// Google runs server-side tooling that depends on these exact values.\r\n// Please avoid updating this code without having someone at Google\r\n// update the corresponding back-end code at the same time.\r\n// Contact @kevmoo for details. Googlers, see go/foobar.\r\n```",
        "createdAt" : "2017-12-06T19:32:24Z",
        "updatedAt" : "2017-12-06T19:32:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a18b4196d55660108a9f24d4e2ba91f3bf17048",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +21,25 @@/// the package site on Flutter's behalf.\n// DO NOT update without contacting kevmoo.\n// We have server-side tooling that assumes the values are consistent.\nclass PubContext {\n  static final RegExp _validContext = new RegExp('[a-z][a-z_]*[a-z]');"
  },
  {
    "id" : "27830e87-8322-451b-8508-437440fe3e74",
    "prId" : 14552,
    "prUrl" : "https://github.com/flutter/flutter/pull/14552#pullrequestreview-96059934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e78bdd5-c685-4110-a705-842cb93aa091",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should also update the docs",
        "createdAt" : "2018-02-08T18:30:19Z",
        "updatedAt" : "2018-02-13T08:43:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "943652f4-7cd2-4d5a-b404-d755fcbbcbbd",
        "parentId" : "2e78bdd5-c685-4110-a705-842cb93aa091",
        "authorId" : "1763d25e-2bc0-4671-b03b-79f854e469df",
        "body" : "Done, PTAL",
        "createdAt" : "2018-02-08T19:00:31Z",
        "updatedAt" : "2018-02-13T08:43:42Z",
        "lastEditedBy" : "1763d25e-2bc0-4671-b03b-79f854e469df",
        "tags" : [
        ]
      },
      {
        "id" : "216e8f72-34f8-4850-aee4-d9191d063f0e",
        "parentId" : "2e78bdd5-c685-4110-a705-842cb93aa091",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Those docs aren't quite right (e.g. if isRunningOnBot is true but showTraceForErrors is false, we won't trace). Sorry to nitpick...",
        "createdAt" : "2018-02-13T01:45:30Z",
        "updatedAt" : "2018-02-13T08:43:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "cf519feb-206f-4143-8723-f61565c57281",
        "parentId" : "2e78bdd5-c685-4110-a705-842cb93aa091",
        "authorId" : "1763d25e-2bc0-4671-b03b-79f854e469df",
        "body" : "Attempted to make them more correct",
        "createdAt" : "2018-02-13T08:44:04Z",
        "updatedAt" : "2018-02-13T08:44:04Z",
        "lastEditedBy" : "1763d25e-2bc0-4671-b03b-79f854e469df",
        "tags" : [
        ]
      }
    ],
    "commit" : "09d66866346e91c434b5a74cea4df2eb3c9b8788",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +139,143 @@}) async {\n  showTraceForErrors ??= isRunningOnBot;\n\n  if (showTraceForErrors)\n    arguments.insert(0, '--trace');"
  },
  {
    "id" : "f0e7b4f3-855f-4be3-943b-78082cdb4bdc",
    "prId" : 30115,
    "prUrl" : "https://github.com/flutter/flutter/pull/30115#pullrequestreview-220623102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "959d7b1b-deab-47f9-b778-1abbf5633fba",
        "parentId" : null,
        "authorId" : "af76c3cb-abdd-4771-b9ac-01cc10bb53ad",
        "body" : "should be fine. This is how we track what a user ran if the command ends up hitting the server.",
        "createdAt" : "2019-03-29T15:25:27Z",
        "updatedAt" : "2019-04-09T13:25:02Z",
        "lastEditedBy" : "af76c3cb-abdd-4771-b9ac-01cc10bb53ad",
        "tags" : [
        ]
      },
      {
        "id" : "ecaada0f-a736-451d-8a55-f18498274d7e",
        "parentId" : "959d7b1b-deab-47f9-b778-1abbf5633fba",
        "authorId" : "1763d25e-2bc0-4671-b03b-79f854e469df",
        "body" : "Great, thanks!",
        "createdAt" : "2019-03-29T15:55:44Z",
        "updatedAt" : "2019-04-09T13:25:02Z",
        "lastEditedBy" : "1763d25e-2bc0-4671-b03b-79f854e469df",
        "tags" : [
        ]
      }
    ],
    "commit" : "434e7d91bb76242e42dfa74b757a3dc434ab6545",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +42,46 @@  static final PubContext pubGet = PubContext._(<String>['get']);\n  static final PubContext pubUpgrade = PubContext._(<String>['upgrade']);\n  static final PubContext pubForward = PubContext._(<String>['forward']);\n  static final PubContext runTest = PubContext._(<String>['run_test']);\n"
  },
  {
    "id" : "c165405a-d0ad-4e39-97eb-33c060536e31",
    "prId" : 42491,
    "prUrl" : "https://github.com/flutter/flutter/pull/42491#pullrequestreview-304178677",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8517585-8705-4002-b186-a004c92c521d",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Might want to include the unexpected future date in the error to give an extra hint.\r\nSpooky! 👻",
        "createdAt" : "2019-10-18T23:35:41Z",
        "updatedAt" : "2019-10-18T23:53:09Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "1d219185-4512-4d85-9a3c-72a137222b79",
        "parentId" : "c8517585-8705-4002-b186-a004c92c521d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "oh good idea",
        "createdAt" : "2019-10-18T23:40:02Z",
        "updatedAt" : "2019-10-18T23:53:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "52637283e0a46afc24fb3d5efc1e21c53a43dd21",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +202,206 @@    if (now.isBefore(originalPubspecYamlModificationTime)) {\n      printError(\n        'Warning: File \"${fs.path.absolute(pubSpecYaml.path)}\" was created in the future. '\n        'Optimizations that rely on comparing time stamps will be unreliable. Check your '\n        'system clock for accuracy.\\n'"
  },
  {
    "id" : "049e9ffd-b105-44d3-b540-cd5534a4fa68",
    "prId" : 51440,
    "prUrl" : "https://github.com/flutter/flutter/pull/51440#pullrequestreview-365407781",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0089a6d-75af-47b8-b347-e87836a4dcd5",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "finally over catch rethrow?",
        "createdAt" : "2020-02-26T22:39:34Z",
        "updatedAt" : "2020-02-27T05:02:11Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "95c3eef5-a733-40ca-9efb-1cd2f234abce",
        "parentId" : "d0089a6d-75af-47b8-b347-e87836a4dcd5",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "ditto.",
        "createdAt" : "2020-02-27T04:27:07Z",
        "updatedAt" : "2020-02-27T05:02:11Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c09cf6969ad97d4b6161e8568af9e10300e9e673",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +181,185 @@        );\n        status.stop();\n      // The exception is rethrown, so don't catch only Exceptions.\n      } catch (exception) { // ignore: avoid_catches_without_on_clauses\n        status.cancel();"
  },
  {
    "id" : "656771f8-5856-4b67-9d7f-a924e77d7eb5",
    "prId" : 61261,
    "prUrl" : "https://github.com/flutter/flutter/pull/61261#pullrequestreview-446740916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78ef9416-d4cd-46d7-a4dd-21d36bc23b7f",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I think the characters issues was getting triggered by this code I removed @justinmc . Normally we don't need to invalidate the packages when a dependency changes because the pubspec must have changed, but the flutter sdk is special and needs a bit of help.\r\n\r\nI think we missed it because so much else triggers a pub get that in most cases you won't notice",
        "createdAt" : "2020-07-10T20:59:29Z",
        "updatedAt" : "2020-07-14T20:18:28Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "ee11dfd9-92d1-4564-a601-841b065274e4",
        "parentId" : "78ef9416-d4cd-46d7-a4dd-21d36bc23b7f",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Ah nice, thanks for following up on that!  The [issue](https://github.com/flutter/flutter/issues/59645) is still getting the occasional comment from someone experiencing the build problem, so hopefully this PR will clear that up.",
        "createdAt" : "2020-07-10T22:57:46Z",
        "updatedAt" : "2020-07-14T20:18:28Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebaaef831ac61bca9f526f35aac29b7c8da34352",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +402,406 @@    }\n\n    if (_toolStampFile != null &&\n        _toolStampFile.existsSync() &&\n        _toolStampFile.lastModifiedSync().isAfter(dotPackagesLastModified)) {"
  },
  {
    "id" : "9b7ac928-24b6-49ad-b88d-43e7f22476bf",
    "prId" : 61261,
    "prUrl" : "https://github.com/flutter/flutter/pull/61261#pullrequestreview-448454270",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f64658b-c387-4107-ab72-8cb7035457ff",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "`savePackageConfig` is a utility function written in terms of public APIs:\r\n\r\nhttps://github.com/dart-lang/package_config/blob/9c586d04bd26fef01215fd10e7ab96a3050cfa64/lib/src/package_config_io.dart#L131\r\n\r\nMaybe the tool should do this more manually to avoid the possibly brittle filesystem type check.",
        "createdAt" : "2020-07-14T20:12:09Z",
        "updatedAt" : "2020-07-14T20:18:28Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "5555a8b8-ff2a-4c75-81f5-585819cd5e66",
        "parentId" : "3f64658b-c387-4107-ab72-8cb7035457ff",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Neither writePackageConfigJsonUtf8 nor any of the other utility methods are exported",
        "createdAt" : "2020-07-14T20:17:18Z",
        "updatedAt" : "2020-07-14T20:18:28Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "5f284f56-6bd4-4445-bdd7-124c03112195",
        "parentId" : "3f64658b-c387-4107-ab72-8cb7035457ff",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Oh, whoops. I misread. I thought I saw it using https://pub.dev/documentation/package_config/latest/package_config.package_config_discovery/PackageConfig/writeBytes.html",
        "createdAt" : "2020-07-14T20:25:40Z",
        "updatedAt" : "2020-07-14T20:25:41Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "c2b6d3b1-8303-4f54-95b2-435ba553216c",
        "parentId" : "3f64658b-c387-4107-ab72-8cb7035457ff",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "You could also locally override dart:io with an IOOverrides, but that is possibly not actually an improvement over the type check here.",
        "createdAt" : "2020-07-14T20:48:19Z",
        "updatedAt" : "2020-07-14T20:48:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebaaef831ac61bca9f526f35aac29b7c8da34352",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +479,483 @@    // There is no current API for saving a package_config without hitting the real filesystem.\n    if (packageConfigFile.fileSystem is LocalFileSystem) {\n      await savePackageConfig(newPackageConfig, packageConfigFile.parent.parent);\n    }\n  }"
  }
]