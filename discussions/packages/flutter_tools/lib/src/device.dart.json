[
  {
    "id" : "32ef5208-d66d-4dd0-897b-0017a383a805",
    "prId" : 715,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "984d6cbc-1ab4-4e65-8d66-a14aeef3ddcd",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Late to the party, but String has a padLeft method that could help here:\n\n```\n=> n.toString().padLeft(n, '0');\n```\n",
        "createdAt" : "2015-12-04T03:35:44Z",
        "updatedAt" : "2015-12-04T03:35:44Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d4feaa71a99b2baa4fc644ee7df944e3198bbb3",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +854,858 @@  }\n\n  static String _threeDigits(int n) {\n    if (n >= 100) return \"$n\";\n    if (n >= 10) return \"0$n\";"
  },
  {
    "id" : "f0373d28-8ac5-4709-8be8-f27b8cbe8dde",
    "prId" : 871,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2e0c4ba-bcec-4cd0-9882-505f16c94a7e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "not that it matters here but in general hasMatch() followed by firstMatch() is duplication of potentially significant effort.\n",
        "createdAt" : "2015-12-10T19:26:58Z",
        "updatedAt" : "2015-12-10T19:26:58Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "30e9ef38-19fc-402e-892c-38a6d407c9db",
        "parentId" : "c2e0c4ba-bcec-4cd0-9882-505f16c94a7e",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, these regexps are also pretty redundant.  We could probably match them at once.\n",
        "createdAt" : "2015-12-10T19:27:45Z",
        "updatedAt" : "2015-12-10T19:27:45Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd68f08b7c1326bf76b7eeeee2c4d6a6046e51ba",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +558,562 @@        );\n      } else if (offlineRegex.hasMatch(line)) {\n        Match match = offlineRegex.firstMatch(line);\n        String deviceID = match[1];\n        logging.warning('Device $deviceID is offline.');"
  },
  {
    "id" : "2c88113b-ff5e-4cc3-a02b-85d358252fe5",
    "prId" : 1091,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76a5773f-685b-4d60-bb25-a0c67fbca883",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "`<String>[...]` here and below.\n",
        "createdAt" : "2016-01-06T21:32:19Z",
        "updatedAt" : "2016-01-06T21:32:19Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d783718ba06c578365cdc51ea96ce02abbb1976",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +892,896 @@    // Careful: Android's date command is super-lame, any arguments are taken as\n    // attempts to set the timezone and will screw your device.\n    String output = runCheckedSync(adbCommandForDevice(['shell', 'date'])).trim();\n    // format: Fri Dec 18 13:22:07 PST 2015\n    // intl doesn't handle timezones: https://github.com/dart-lang/intl/issues/93"
  },
  {
    "id" : "c288d99b-2a55-4609-be39-aebfe97199ca",
    "prId" : 1113,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07465b5b-226f-425f-bc3f-13732113ac76",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "`<String>['forward', portString, portString]`\n",
        "createdAt" : "2016-01-07T18:43:26Z",
        "updatedAt" : "2016-01-07T18:43:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3615827f0e42389633c63050302ab20b3dd61bc9",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +774,778 @@    String portString = 'tcp:$_observatoryPort';\n    try {\n      runCheckedSync(adbCommandForDevice(['forward', portString, portString]));\n    } catch (e) {\n      logging.warning('Unable to forward observatory port ($_observatoryPort):\\n$e');"
  },
  {
    "id" : "4b9d9da0-e16b-4d3d-867a-5e4bca9dfece",
    "prId" : 1249,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0abbd649-22c5-491e-bc28-a12314196d98",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "no braces around one-line if statements\n",
        "createdAt" : "2016-01-16T20:43:00Z",
        "updatedAt" : "2016-01-16T20:43:00Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8672a40c1958c1471c52345e5707a6e3a4ee445",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +351,355 @@    List<IOSSimulator> devices = [];\n    String id = _getRunningSimulatorID(mockIOS);\n    if (id != null) {\n      devices.add(new IOSSimulator(id: id));\n    }"
  },
  {
    "id" : "b59262eb-c723-4c6f-a01c-e389f4826a59",
    "prId" : 2474,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2349562-dcca-4fa5-9b2f-86dfb0b68aa3",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "`onLines`?\n",
        "createdAt" : "2016-03-07T23:05:27Z",
        "updatedAt" : "2016-03-08T18:38:29Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "ca0e1ea6-c81e-4401-88ae-3d8609132551",
        "parentId" : "f2349562-dcca-4fa5-9b2f-86dfb0b68aa3",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "We use onFoo for things that are callbacks. This is a Stream, so \"lines\" seems fine.\n",
        "createdAt" : "2016-03-07T23:06:59Z",
        "updatedAt" : "2016-03-08T18:38:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8803cecea1b8897bb5a3a6bfe0d75fdc3236cc6f",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +196,200 @@  /// A broadcast stream where each element in the string is a line of log\n  /// output.\n  Stream<String> get lines;\n\n  /// Start reading logs from the device."
  }
]