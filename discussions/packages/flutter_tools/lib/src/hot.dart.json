[
  {
    "id" : "475ef54d-f90f-4c5a-945a-1d093fc5fa70",
    "prId" : 5272,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "402ea63c-9c1b-4e7b-9dba-d73a68c38765",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "This is existing code, but instead of calling `printTrace` for specific isolate events, you could call printTrace for any isolate event. It's a no-op if the user didn't start with `-v`, and if they did, the additional info could be useful.\n",
        "createdAt" : "2016-08-05T22:45:53Z",
        "updatedAt" : "2016-08-05T22:45:53Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "e227d833174fd4d7c826a619174a41806115c029",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +256,260 @@       serviceProtocol.onIsolateEvent.listen((Event event) {\n     if (event.kind == 'IsolateStart') {\n       printTrace('Isolate is spawned.');\n     } else if (event.kind == 'IsolateRunnable') {\n       printTrace('Isolate is runnable.');"
  },
  {
    "id" : "f2719fcf-7769-4bbf-b635-001092d5bfde",
    "prId" : 5282,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bc6b9d0-58ab-4c9b-90a6-386e48b3b2ec",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this code is wrong. it makes F5 into a cold restart. It should be a warm restart.\n",
        "createdAt" : "2016-08-08T20:00:53Z",
        "updatedAt" : "2016-08-09T14:10:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "5a7b3bea-2af8-40cc-b113-327880bb8d90",
        "parentId" : "0bc6b9d0-58ab-4c9b-90a6-386e48b3b2ec",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "Fixed. 'r' and F5 now trigger _reloadSources. 'R' triggers _restartSources.\n",
        "createdAt" : "2016-08-08T20:17:30Z",
        "updatedAt" : "2016-08-09T14:10:34Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "a753623177d5612ed349293213af3afcc18b42c8",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +215,219 @@        await _reloadSources();\n      } else {\n        // upper-case 'R'.\n        await _restartFromSources();\n      }"
  },
  {
    "id" : "2e06a8d1-e66f-49f6-bff2-477ae39ef843",
    "prId" : 5321,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a59435bf-eab9-48d9-9670-ea8d2e102cbd",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "This updates the loading bar on the device's screen and we should send each one of these events.\n",
        "createdAt" : "2016-08-10T20:41:45Z",
        "updatedAt" : "2016-08-11T16:37:39Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "8209ebe9-841e-41c4-91f5-aa7196bdfa0e",
        "parentId" : "a59435bf-eab9-48d9-9670-ea8d2e102cbd",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "This dials back the number of updates by an order to magnitude. When starting up something like flutter_gallery, we initially sync ~1,800 files, which sends 3x that number of messages (the loader message, progress value, and max). I see a 0.8 - 1.0 second speedup when launching against the ios simulator if we send fewer messages.\n\nWe could also change to doing something like only sending a message if a value has changed, or only updating the progress value every 100ms or so. \n",
        "createdAt" : "2016-08-11T14:31:53Z",
        "updatedAt" : "2016-08-11T16:37:39Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "6039aeb5-2cfe-4d60-8754-0fe14355be48",
        "parentId" : "a59435bf-eab9-48d9-9670-ea8d2e102cbd",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "SGTM\n",
        "createdAt" : "2016-08-11T14:36:59Z",
        "updatedAt" : "2016-08-11T16:37:39Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "679b9015d65f5c0f15720e04e2f983266a218a49",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +196,200 @@      bool devfsResult = await _updateDevFS(\n        progressReporter: (int progress, int max) {\n          if (progress % 10 == 0)\n            _loaderShowMessage('Syncing files to device...', progress: progress, max: max);\n        }"
  },
  {
    "id" : "aac098e6-5b7f-457b-8f00-38d64cf68bae",
    "prId" : 5437,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "397e046c-926b-4e07-8f5d-3b37260c7441",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "You can do a `new Chain.forTrace(st).terse` here to get a more readable stack trace.\n",
        "createdAt" : "2016-08-17T14:51:17Z",
        "updatedAt" : "2016-08-17T16:00:23Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ccbd24e6cc73ba1d328d9d57e9ee3fdc265a803",
    "line" : 142,
    "diffHunk" : "@@ -1,1 +478,482 @@    } catch (errorMessage, st) {\n      reloadStatus.stop(showElapsedTime: true);\n      printError('Hot reload failed:\\n$errorMessage\\n$st');\n      return false;\n    }"
  },
  {
    "id" : "2b8fb8f3-e6ed-4766-acc6-780cbe10ccce",
    "prId" : 5582,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c64fee6f-d5fd-43e3-a9ba-56c9390d44a3",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Should we ensure that we're only catching a `Map` here (`on Map`)?\n",
        "createdAt" : "2016-08-24T22:13:57Z",
        "updatedAt" : "2016-08-24T22:20:44Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8cce238f8ed41dfbd2bee59cb0a16ad5c712d15",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +446,450 @@        flutterUsage.sendEvent('hot', 'reload');\n      }\n    } catch (error, st) {\n      int errorCode = error['code'];\n      if (errorCode == Isolate.kIsolateReloadBarred) {"
  },
  {
    "id" : "7cde6873-d432-4db3-af12-aabde94d00de",
    "prId" : 5787,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3487cb95-1e52-4f3e-ae7c-027856ea6d75",
        "parentId" : null,
        "authorId" : "7b783ce6-a0fd-4147-a5d9-e1f619149d45",
        "body" : "do we want to default this to an explicit value?\n",
        "createdAt" : "2016-09-09T18:27:27Z",
        "updatedAt" : "2016-09-09T18:27:27Z",
        "lastEditedBy" : "7b783ce6-a0fd-4147-a5d9-e1f619149d45",
        "tags" : [
        ]
      },
      {
        "id" : "f2c06041-8122-465d-af17-e2a4bffa49ac",
        "parentId" : "3487cb95-1e52-4f3e-ae7c-027856ea6d75",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "The constructor argument has a default value\n",
        "createdAt" : "2016-09-09T19:39:19Z",
        "updatedAt" : "2016-09-09T19:39:19Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d67d4440bc0a8686721384fc7ecfac89961ad5b",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +134,138 @@  Set<String> _startupDependencies;\n  final AssetBundle bundle = new AssetBundle();\n  final bool benchmarkMode;\n  final Map<String, int> benchmarkData = new Map<String, int>();\n"
  },
  {
    "id" : "c4646ad7-6d7a-4426-82b5-62f5d6f82747",
    "prId" : 6130,
    "prUrl" : "https://github.com/flutter/flutter/pull/6130#pullrequestreview-2236810",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f2a1035-b133-41b4-9a92-52f183fe094e",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "There is a similar message for restart that you should update to be consistent\n",
        "createdAt" : "2016-09-29T21:15:17Z",
        "updatedAt" : "2016-09-29T21:46:17Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "b838308f-ee40-4a5e-9dc1-0cccd85e7274",
        "parentId" : "0f2a1035-b133-41b4-9a92-52f183fe094e",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "will do\n",
        "createdAt" : "2016-09-29T21:43:26Z",
        "updatedAt" : "2016-09-29T21:46:17Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "44dcccf41377e58a0cd5318bfa551878f6829fdf",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +513,517 @@      // event and measure reload itme.\n      await firstFrameTimer.firstFrame();\n      printStatus('Hot reload performed in '\n                  '${getElapsedAsMilliseconds(firstFrameTimer.elapsed)}.');\n      if (benchmarkMode) {"
  },
  {
    "id" : "ea608d55-e613-4927-b502-2cca3e60c324",
    "prId" : 6630,
    "prUrl" : "https://github.com/flutter/flutter/pull/6630#pullrequestreview-6720166",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b22bf068-7831-4655-b2b7-c1fdb100c8bc",
        "parentId" : null,
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "Move this to a separate PR?\n",
        "createdAt" : "2016-11-01T22:39:36Z",
        "updatedAt" : "2016-11-01T22:39:36Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      },
      {
        "id" : "cafede02-c7e5-475a-b4c1-3fa11b316c77",
        "parentId" : "b22bf068-7831-4655-b2b7-c1fdb100c8bc",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "This belongs in this PR because it fixes the error message when we fall over detecting the service protocol port.\n",
        "createdAt" : "2016-11-01T22:42:03Z",
        "updatedAt" : "2016-11-01T22:42:27Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "847034be4c44ea7499d2141452591682b8465838",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +250,254 @@\n    _observatoryPort = result.observatoryPort;\n    try {\n      await connectToServiceProtocol(_observatoryPort);\n    } catch (error) {"
  },
  {
    "id" : "b14e10c5-e48d-4d46-8ee9-8a97880ea79f",
    "prId" : 6677,
    "prUrl" : "https://github.com/flutter/flutter/pull/6677#pullrequestreview-7092781",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08fa197b-24a7-47f6-93b6-9ade51bd221a",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "this could be a finally and rethrow\n",
        "createdAt" : "2016-11-03T20:03:25Z",
        "updatedAt" : "2016-11-03T20:10:34Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "03fac5f1-558e-41d0-80e5-b46194837be3",
        "parentId" : "08fa197b-24a7-47f6-93b6-9ade51bd221a",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Makes sense. I updated this to use `rethrow`; I'm sticking with catch instead of finally since I want a little more control of when stop() is called.\n",
        "createdAt" : "2016-11-03T20:09:41Z",
        "updatedAt" : "2016-11-03T20:10:34Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8ba3b1395ce692c0bcabe85df80ec2df55ea345",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +491,495 @@          printStatus(\"${result.message}.\");\n        return result;\n      } catch (error) {\n        status.stop();\n        rethrow;"
  },
  {
    "id" : "93737d6e-ef87-4e50-af4d-7edec79d34d2",
    "prId" : 6992,
    "prUrl" : "https://github.com/flutter/flutter/pull/6992#pullrequestreview-10313046",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc2ee738-3919-4cda-b5c8-d0092c2b7780",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "change DebugConnectionInfo to take a single Uri. All other bits can be derived.",
        "createdAt" : "2016-11-23T14:32:36Z",
        "updatedAt" : "2016-11-28T14:58:13Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "40e3cb8e-66a1-48ed-b42a-e70b8e96d232",
        "parentId" : "cc2ee738-3919-4cda-b5c8-d0092c2b7780",
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "I could do that, but then I'm making assumptions about the internals of the `VMService` class and breaking encapsulation. If you think it worth the effort, I can rework `DebugConnectionInfo` and `VMService` so that `VMService` returns a `DebugConnectionInfo` or something like that so as not to break encapsulation, but that's more involved than I want to tackle in this PR.",
        "createdAt" : "2016-11-28T13:20:00Z",
        "updatedAt" : "2016-11-28T14:58:13Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      }
    ],
    "commit" : "d83f0cc539f01b79dd8c6ebc558c09127dedf870",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +232,236 @@          new DebugConnectionInfo(\n            httpUri: _observatoryUri,\n            wsUri: vmService.wsAddress,\n            baseUri: baseUri.toString()\n          )"
  }
]