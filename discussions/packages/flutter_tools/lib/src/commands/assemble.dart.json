[
  {
    "id" : "cc6644fe-4e25-4661-b2a9-17f15326e3b5",
    "prId" : 36585,
    "prUrl" : "https://github.com/flutter/flutter/pull/36585#pullrequestreview-265617346",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "995b6a91-eb6d-432a-a324-1de265e00f9e",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Where will e.g. apks end up?",
        "createdAt" : "2019-07-23T16:00:23Z",
        "updatedAt" : "2019-07-23T16:00:23Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "2a6b4b81-8c91-4514-94c9-e979d321f253",
        "parentId" : "995b6a91-eb6d-432a-a324-1de265e00f9e",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "apk/iOS artifacts are currently created by xCode/Gradle, which will only consume the output of assemble via re-entrant flutter calls. I'll need to support placing the artifacts where those tools expect for the near feature, which will most likely be in the form out an `--output=path` argument which copies the non-intermediate outputs into a specified directory. I didn't do that in this PR because I won't have a good idea for the UX until I'm further through hooking up iOS or Android",
        "createdAt" : "2019-07-23T16:29:40Z",
        "updatedAt" : "2019-07-23T16:29:40Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "d86e0ab4-8660-47dc-98a1-fdbbed5e8362",
        "parentId" : "995b6a91-eb6d-432a-a324-1de265e00f9e",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "sgtm",
        "createdAt" : "2019-07-23T19:08:48Z",
        "updatedAt" : "2019-07-23T19:08:49Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "46f6e676bf58d9ca485e77a31f4b4a1c4faa9778",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +98,102 @@      buildDir: flutterProject.directory\n          .childDirectory('.dart_tool')\n          .childDirectory('flutter_build'),\n      projectDir: flutterProject.directory,\n      defines: _parseDefines(argResults['define']),"
  },
  {
    "id" : "4b13f4ee-44f8-4f8c-b893-f304b7794976",
    "prId" : 44468,
    "prUrl" : "https://github.com/flutter/flutter/pull/44468#pullrequestreview-315720761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b19b742-79e4-4d7b-bd4a-3f43729e151b",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Needing to wrap getters in a `try {} catch {}` is a pretty good indication that the getters should probably be regular methods.",
        "createdAt" : "2019-11-12T17:43:45Z",
        "updatedAt" : "2019-11-12T17:51:42Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "856cdf29dbc85f1e99ef75e6bf8ba26a5c45ecd2",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +89,93 @@    }\n    try {\n      final Environment localEnvironment = environment;\n      return <CustomDimensions, String>{\n        CustomDimensions.commandBuildBundleTargetPlatform: localEnvironment.defines['TargetPlatform'],"
  },
  {
    "id" : "d0c2d6b5-48f3-4de9-9d39-09dbf2a6c55c",
    "prId" : 44468,
    "prUrl" : "https://github.com/flutter/flutter/pull/44468#pullrequestreview-315720761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "647e706e-2bc7-4b8c-9c52-93aaffd082d8",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "I don't understand this comment. Usage will still get sent, but not with the custom dimensions filled in.\r\n\r\nMaybe instead of omitting the dimensions, compute `localEnvironment` in the try-catch, and fill in default or '<unknown>' values for the custom dimensions in the `catch {}`, like:\r\n\r\n```dart\r\nString targetPlatform;\r\nString isModule;\r\ntry {\r\n  final Environment localEnvironment = buildEnvironment();\r\n  targetPlatform = localEnvironment.defines['TargetPlatform'];\r\n  isModule = flutterProject.isModule.toString();\r\n} catch (err) {\r\n  printTrace('Failed to build local environment for usage values: $err');\r\n  targetPlatform = '<unknown>';\r\n  isModule = '<unknown>';\r\n}\r\nreturn <CustomDimensions, String>{\r\n  CustomDimensions.commandBuildBundleTargetPlatform: targetPlatform,\r\n  CustomDimensions.commandBuildBundleIsModule: isModule,\r\n};\r\n```",
        "createdAt" : "2019-11-12T17:50:04Z",
        "updatedAt" : "2019-11-12T17:51:42Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "856cdf29dbc85f1e99ef75e6bf8ba26a5c45ecd2",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +95,99 @@      };\n    } catch (err) {\n      // We've failed to send usage.\n    }\n    return const <CustomDimensions, String>{};"
  },
  {
    "id" : "3750374c-a770-4182-91df-0e41b6da9b45",
    "prId" : 55187,
    "prUrl" : "https://github.com/flutter/flutter/pull/55187#pullrequestreview-398441429",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d99ca594-d1f5-4c1b-ae23-9e4e580bbea1",
        "parentId" : null,
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "Is there any kind of structure to this list? Windows is the only thing with a platform-level comment, macOS and Linux are grouped above but Windows is down here, CopyFlutterBundle is in the middle of the Android stuff despite not being (at least based on the name) Android-specific, etc. If it's at the point (which I agree that it is) where a platform grouping comment is useful, maybe do a quick overhaul of the whole list to make it consistent for all platforms.",
        "createdAt" : "2020-04-21T19:07:14Z",
        "updatedAt" : "2020-04-22T18:45:11Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      },
      {
        "id" : "9ea4c220-9ae0-4af7-a545-eafdcdc18475",
        "parentId" : "d99ca594-d1f5-4c1b-ae23-9e4e580bbea1",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I reorganized the list a bit. I agree its unnecessarily messy",
        "createdAt" : "2020-04-22T17:59:01Z",
        "updatedAt" : "2020-04-22T18:45:11Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "11cf511bb6051ece30b98b2c5c45c62c843c0d91",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +61,65 @@  // Windows targets\n  UnpackWindows(),\n  DebugBundleWindowsAssets(),\n];\n"
  },
  {
    "id" : "dc1362dd-2ad5-4b14-86b2-43520da33065",
    "prId" : 58539,
    "prUrl" : "https://github.com/flutter/flutter/pull/58539#pullrequestreview-423182175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9147637-1161-49e3-b76f-f45cee3e9a33",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Only show for verbose errors, actual bugs will get logged to stderr",
        "createdAt" : "2020-06-03T02:45:32Z",
        "updatedAt" : "2020-06-03T18:11:58Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca3225597ee39f02a100befcb53396157060a289",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +227,231 @@    if (!result.success) {\n      for (final ExceptionMeasurement measurement in result.exceptions.values) {\n        if (measurement.fatal || globals.logger.isVerbose) {\n          globals.printError('Target ${measurement.target} failed: ${measurement.exception}',\n            stackTrace: measurement.stackTrace"
  },
  {
    "id" : "e9963775-6b4e-4ef1-b3f5-230dfacbb031",
    "prId" : 78272,
    "prUrl" : "https://github.com/flutter/flutter/pull/78272#pullrequestreview-613690338",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2097fac4-bc10-4fb3-9971-68c330af53cf",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "actually, this includes universal right?",
        "createdAt" : "2021-03-16T19:43:05Z",
        "updatedAt" : "2021-03-16T19:43:05Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "bef4766d-7cca-4949-8183-4cba0a777c49",
        "parentId" : "2097fac4-bc10-4fb3-9971-68c330af53cf",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "(I think the default required artifacts is empty)",
        "createdAt" : "2021-03-16T19:43:15Z",
        "updatedAt" : "2021-03-16T19:43:15Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "97dca05f-5ecd-47e2-9670-0b0de111c1e5",
        "parentId" : "2097fac4-bc10-4fb3-9971-68c330af53cf",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "oh wait, nvm it does",
        "createdAt" : "2021-03-16T19:44:05Z",
        "updatedAt" : "2021-03-16T19:44:06Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "ab69af81-bde4-45b6-aea7-38d10a46838e",
        "parentId" : "2097fac4-bc10-4fb3-9971-68c330af53cf",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Yeah universal doesn't need to be explicitly returned, it always gets downloaded.\r\n\r\nThanks @christopherfujino for the breadcrumb #45267\r\nhttps://github.com/flutter/flutter/blob/a7f7687a2e207cfc87146fb27ab7ab507228cf63/packages/flutter_tools/lib/src/cache.dart#L78-L80",
        "createdAt" : "2021-03-16T20:23:45Z",
        "updatedAt" : "2021-03-16T20:23:46Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "c79cd87ae5bbac910ddab3e8dcf2a1fcb890eb49",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +167,171 @@    final TargetPlatform targetPlatform = getTargetPlatformForName(platform);\n    final DevelopmentArtifact artifact = artifactFromTargetPlatform(targetPlatform);\n    if (artifact != null) {\n      return <DevelopmentArtifact>{artifact};\n    }"
  }
]