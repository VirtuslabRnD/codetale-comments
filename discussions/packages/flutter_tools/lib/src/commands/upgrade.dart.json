[
  {
    "id" : "54b2a03d-b696-4828-81a0-401c69fdde73",
    "prId" : 2955,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4340ab8-f78a-44bf-94ae-377980db9172",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Should we have a flag in the shell script that avoids actually running the Dart part? Or just have all the update logic in a bash script separate from the \"flutter\" one, so that we can run that directly?\n",
        "createdAt" : "2016-03-28T22:09:09Z",
        "updatedAt" : "2016-03-28T22:09:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "500f3818-5c23-4004-b1f7-eca3daee7156",
        "parentId" : "d4340ab8-f78a-44bf-94ae-377980db9172",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yes, although in this case printing out the version actually makes sense because its showing you which version of flutter you've upgraded to.\n",
        "createdAt" : "2016-03-28T22:40:35Z",
        "updatedAt" : "2016-03-28T22:40:35Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "3824e88df71099c3c35bbfeaf9afdbaa4c31a2ad",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +46,50 @@    // Causes us to update our locally cached packages.\n    code = await runCommandAndStreamOutput(<String>[\n      'bin/flutter', '--version'\n    ], workingDirectory: ArtifactStore.flutterRoot);\n"
  },
  {
    "id" : "38f79788-3b9d-4338-8c5d-46d968473348",
    "prId" : 14353,
    "prUrl" : "https://github.com/flutter/flutter/pull/14353#pullrequestreview-99555577",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "448bef3e-dc93-4114-97d2-3c32646332e7",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Why does this need to be in a new process versus just invoking the doctor API?",
        "createdAt" : "2018-01-30T16:22:20Z",
        "updatedAt" : "2018-01-30T17:11:26Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "10bc3dae-9d34-4786-940f-d8e78a5adc8e",
        "parentId" : "448bef3e-dc93-4114-97d2-3c32646332e7",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "because the doctor API is still the version from before we upgraded. It's really obvious in that the output after the upgrade still shows the old version number.",
        "createdAt" : "2018-01-30T16:59:27Z",
        "updatedAt" : "2018-01-30T17:11:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e41b17c3-a995-4f5c-937c-c53d06a262de",
        "parentId" : "448bef3e-dc93-4114-97d2-3c32646332e7",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "FYI, this also fixed an issue whereby running the doctor API from the version before we upgraded could crash the tool when run against an upgraded tree -- https://gist.github.com/tvolkert/c2872310667f019969d9990fcade1ebb",
        "createdAt" : "2018-02-27T04:31:02Z",
        "updatedAt" : "2018-02-27T04:31:03Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "be42b6d99ea383ddbaf6bd4bbfb4ce68bc384db5",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +79,83 @@    printStatus('');\n    printStatus('Running flutter doctor...');\n    code = await runCommandAndStreamOutput(\n      <String>[\n        fs.path.join('bin', 'flutter'), 'doctor',"
  },
  {
    "id" : "ddfc20ff-cc6b-4e6f-bd61-55c3278bca2e",
    "prId" : 18031,
    "prUrl" : "https://github.com/flutter/flutter/pull/18031#pullrequestreview-124839234",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd2f9eec-bcd8-4bc0-976b-10d70a40239c",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "We should pass `--no-version-check` after the command (as below with the `doctor` call), or move the one for doctor to before the command, for consistency.",
        "createdAt" : "2018-05-30T18:06:15Z",
        "updatedAt" : "2018-05-31T14:49:09Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "968507e7-ccb3-4d02-ae32-08aec9e16331",
        "parentId" : "fd2f9eec-bcd8-4bc0-976b-10d70a40239c",
        "authorId" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "body" : "I've moved the doctor one forward; seems more obvious that they're global args if they come before the command.",
        "createdAt" : "2018-05-31T14:49:36Z",
        "updatedAt" : "2018-05-31T14:49:36Z",
        "lastEditedBy" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "tags" : [
        ]
      }
    ],
    "commit" : "15fbe6ccf3487451a4883989c3ade3376573ef82",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +61,65 @@    code = await runCommandAndStreamOutput(\n      <String>[\n        fs.path.join('bin', 'flutter'), '--no-color', '--no-version-check', 'precache',\n      ],\n      workingDirectory: Cache.flutterRoot,"
  },
  {
    "id" : "aae046d1-d723-439e-9e0a-494e9ad30538",
    "prId" : 29192,
    "prUrl" : "https://github.com/flutter/flutter/pull/29192#pullrequestreview-215319556",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f86efb77-c377-4116-a78d-0d1d9826dc81",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Rather than popping, let's make sure they still have their stash that we created for them just in case.\r\n\r\nWhat about having `maybeStashChanges()` return the stash name String (or `null` if no stash was saved)?  Then this would become `applyStash(String stashName)`.",
        "createdAt" : "2019-03-16T16:01:15Z",
        "updatedAt" : "2019-03-21T20:04:25Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1af9c44fa4d9a5ef64f81cca6102236f845e5015",
    "line" : 210,
    "diffHunk" : "@@ -1,1 +213,217 @@      ]);\n    } catch (e) {\n      printError('Failed to re-apply local changes. State may have been lost.');\n    }\n  }"
  },
  {
    "id" : "c85f47e6-8645-4730-b12d-a2935cffe2b3",
    "prId" : 29192,
    "prUrl" : "https://github.com/flutter/flutter/pull/29192#pullrequestreview-215319556",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58ca1ed3-3fdc-4e1d-8d21-7031ed75f614",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "I'd forgotten about channel upgrade.  Can you update this to say that it attempts to migrate the user off a deprecated channel if needed?",
        "createdAt" : "2019-03-16T16:11:15Z",
        "updatedAt" : "2019-03-21T20:04:25Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1af9c44fa4d9a5ef64f81cca6102236f845e5015",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +115,119 @@  }\n\n  /// Attempts to upgrade the channel.\n  ///\n  /// If the user is on a deprecated channel, attempts to migrate them off of"
  },
  {
    "id" : "c4f515bc-a261-4018-96e4-7afc717d4ab8",
    "prId" : 29192,
    "prUrl" : "https://github.com/flutter/flutter/pull/29192#pullrequestreview-218014948",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbd2ee5a-057e-4b27-b6db-0dffdbc1104d",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Should we be checking if the rebase completed successfully, and if not, issue a `git rebase --abort`? We're mitigating some of that with the stash which is good, but I suspect a hot fix could potentially put someone in this state if anything with the hotfix process goes wrong - leaving them with an unusable installation.\r\n\r\nI'm not sure if git sets an exit code in this case. Maybe the answer is to advise them to completely reinstall flutter instead.",
        "createdAt" : "2019-03-21T16:24:49Z",
        "updatedAt" : "2019-03-21T20:04:25Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "7b2f926f-08df-464c-a553-839a8767ab4b",
        "parentId" : "cbd2ee5a-057e-4b27-b6db-0dffdbc1104d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "will a rebase work if the commits we put on the hot fix branch weren't on the new branch?",
        "createdAt" : "2019-03-22T19:56:59Z",
        "updatedAt" : "2019-03-22T19:56:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ab98756a-b035-4944-92c0-fbe129824c18",
        "parentId" : "cbd2ee5a-057e-4b27-b6db-0dffdbc1104d",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "If we checkout the hotfix branch from the same commit that the dev/beta/stable was picked from, then that would have the same history +1 additional commit and the rebase or ff would work.\r\n\r\nIf they upgrade and try to leave the hot fix branch to get back to something based off of master, now there are conflicts because the hotfix commit. We would actually have to reset/checkout to the commit we branched the hotfix from and then fast forward from there?\r\n\r\n",
        "createdAt" : "2019-03-22T20:32:28Z",
        "updatedAt" : "2019-03-22T20:32:29Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "327ddd15-c55d-4d11-a0ac-d23d060cbd29",
        "parentId" : "cbd2ee5a-057e-4b27-b6db-0dffdbc1104d",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "would that be a reset?\r\n\r\ncc @Hixie @tvolkert ",
        "createdAt" : "2019-03-22T20:35:09Z",
        "updatedAt" : "2019-03-22T20:35:09Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "49b0f9fd-5ef6-41db-b675-206e960b04cb",
        "parentId" : "cbd2ee5a-057e-4b27-b6db-0dffdbc1104d",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "I think if we do a `git stash (labeled or whatever) && git fetch upstream && git reset --hard upstream/branchname && git stash pop` we should be good.\r\n\r\nRebase has the potential to mess you up.",
        "createdAt" : "2019-03-22T20:42:19Z",
        "updatedAt" : "2019-03-22T20:42:19Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "c8813f3a-fd93-414f-ab93-d99e83f87aaa",
        "parentId" : "cbd2ee5a-057e-4b27-b6db-0dffdbc1104d",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "The git stash pop can mess you up too, but only if you've modified the flutter repo, in which case you should hopefully know how to modify it again (but this could be something like Xcode changed some properties on flutter_gallery or something).",
        "createdAt" : "2019-03-22T20:43:05Z",
        "updatedAt" : "2019-03-22T20:43:05Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "4dd40cf0-7ffe-4564-9450-1cfa80358cca",
        "parentId" : "cbd2ee5a-057e-4b27-b6db-0dffdbc1104d",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I think we could reset to the tag name the hotfix was branched from right? that would have the fewest changes before the ff",
        "createdAt" : "2019-03-22T20:46:03Z",
        "updatedAt" : "2019-03-22T20:46:03Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "fff8a2c6-0f72-4b82-b7eb-16b6dad26291",
        "parentId" : "cbd2ee5a-057e-4b27-b6db-0dffdbc1104d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "The idea here is that people will be on one branch, e.g. `stable`, the whole time, and the commits on that branch will change over time (and not as strict supersets each time). For example:\r\n* v3.4.5 tag is made, points to a commit on master.\r\n* stable branch is made to point to v3.4.5.\r\n* v3.4.5-hotfixes branch is made, forking master from v3.4.5.\r\n* a commit X is added only to v3.4.5-hotfixes branch.\r\n* v3.4.5-hotfix.1 tag is made, points to X.\r\n* stable branch point is made to point to v3.4.5-hotfix.1.\r\n* v3.7.6 tag is made, points to a commit on master. History of this commit does not include X.\r\n* stable branch point is made to point to v3.7.6. History of this commit does not include X.\r\n\r\nA user which was on stable v3.4.5-hotfix.1 will now attempt to upgrade to v3.7.6 in one step, without changing branch. I would expect rebasing, merging, etc, to fail to do this successfully. Only a forced reset seems likely to succeed at doing this.",
        "createdAt" : "2019-03-23T00:00:10Z",
        "updatedAt" : "2019-03-23T00:00:11Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "f494bdea-5e09-4db4-9f67-56e19c22b8ba",
        "parentId" : "cbd2ee5a-057e-4b27-b6db-0dffdbc1104d",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "In https://github.com/flutter/flutter/pull/29786, I've updated this to first check if we're on a hotfix branch (v3.4.5-hotfix.1). If so, I do a `git reset --hard v3.4.5`, then `ff` as normal",
        "createdAt" : "2019-03-23T00:12:16Z",
        "updatedAt" : "2019-03-23T00:12:17Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1af9c44fa4d9a5ef64f81cca6102236f845e5015",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +130,134 @@  Future<void> attemptRebase() async {\n    final int code = await runCommandAndStreamOutput(\n      <String>['git', 'pull', '--rebase'],\n      workingDirectory: Cache.flutterRoot,\n      mapFunction: (String line) => matchesGitLine(line) ? null : line,"
  },
  {
    "id" : "d9945ef4-aec1-4301-a290-f86c5e973a75",
    "prId" : 29192,
    "prUrl" : "https://github.com/flutter/flutter/pull/29192#pullrequestreview-217949684",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "880dda70-853f-408e-8f1f-bef5465bc9ca",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "`apply` instead of `pop` (and I think you'll have to pass the stash name)",
        "createdAt" : "2019-03-21T16:26:27Z",
        "updatedAt" : "2019-03-21T20:04:25Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "3a7d71e7-f420-4146-92b7-25c5a9be4976",
        "parentId" : "880dda70-853f-408e-8f1f-bef5465bc9ca",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "That would be the stash index though, right? IIRC you can't name a stash, only leave a comment with it",
        "createdAt" : "2019-03-21T19:26:24Z",
        "updatedAt" : "2019-03-21T20:04:25Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "d5d75d87-11f4-49cc-bf8b-01c81629e165",
        "parentId" : "880dda70-853f-408e-8f1f-bef5465bc9ca",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "You're right.  You'd have to call `git stash list` and grep for the topmost match of `stashName` to find out the id (index) of the stash",
        "createdAt" : "2019-03-21T20:00:31Z",
        "updatedAt" : "2019-03-21T20:04:25Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "714de214-035e-4b8e-94fc-06e46305fa6c",
        "parentId" : "880dda70-853f-408e-8f1f-bef5465bc9ca",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "If we succeeded our stash will always be the topmost, which we confirm with the list check above",
        "createdAt" : "2019-03-21T20:02:34Z",
        "updatedAt" : "2019-03-21T20:04:25Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "cd150539-0b61-4ba1-9532-f1614fc47346",
        "parentId" : "880dda70-853f-408e-8f1f-bef5465bc9ca",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Good point.  And if the pop fails for any reason, they'll still be left with the stash.",
        "createdAt" : "2019-03-21T20:06:27Z",
        "updatedAt" : "2019-03-21T20:06:28Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "6440a604-db44-424e-9bf2-0d704e0d21e1",
        "parentId" : "880dda70-853f-408e-8f1f-bef5465bc9ca",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "why do we check the list if we know it'll be topmost?",
        "createdAt" : "2019-03-22T19:58:17Z",
        "updatedAt" : "2019-03-22T19:58:17Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1af9c44fa4d9a5ef64f81cca6102236f845e5015",
    "line" : 207,
    "diffHunk" : "@@ -1,1 +210,214 @@      }\n      await runCheckedAsync(<String>[\n        'git', 'stash', 'pop',\n      ]);\n    } catch (e) {"
  },
  {
    "id" : "9fbd2f3c-7a42-4e40-a418-893770544d44",
    "prId" : 29192,
    "prUrl" : "https://github.com/flutter/flutter/pull/29192#pullrequestreview-217947844",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7cdcba2-cfee-4b3e-a919-19781aa2e479",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you probably want to apply the stash before you try to precache artifacts, otherwise if the stash changes the tool in some way it won't have taken effect in time.",
        "createdAt" : "2019-03-22T19:53:40Z",
        "updatedAt" : "2019-03-22T19:53:41Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1af9c44fa4d9a5ef64f81cca6102236f845e5015",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +74,78 @@    await updatePackages(flutterVersion);\n    await runDoctor();\n    await applyStash(stashName);\n    return null;\n  }"
  },
  {
    "id" : "72c42bd5-c96c-4dc4-8d68-5ac61ff03b75",
    "prId" : 29192,
    "prUrl" : "https://github.com/flutter/flutter/pull/29192#pullrequestreview-217948164",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71b0fff3-03f5-4815-9cc1-ae3ea299a3d8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "> The use of ''off of'' as a preposition is now considered tautological or incorrect by some usage guides and is not suitable for formal or business use. ''Off of'' can be replaced with ''on'', ''from'' or ''off'': \"This is based on (based ''off of'') his first book\"; \"He took a paper off (''off of'') his desk\". \"I got the information from (\"off of\") the Internet\"\r\n",
        "createdAt" : "2019-03-22T19:54:27Z",
        "updatedAt" : "2019-03-22T19:54:27Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1af9c44fa4d9a5ef64f81cca6102236f845e5015",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +56,60 @@        throwToolExit(\n          'Unknown flutter tag. Abandoning upgrade to avoid destroying local '\n          'changes. It is recommended to use git directly if not working off of '\n          'an official channel.'\n        );"
  },
  {
    "id" : "b0f6e6aa-f814-4205-a369-e803f7dee687",
    "prId" : 29192,
    "prUrl" : "https://github.com/flutter/flutter/pull/29192#pullrequestreview-217948425",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8aa36c81-bbed-443b-8671-0be2181bf998",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "shouldn't that be \"origin\" rather than \"upstream\"?",
        "createdAt" : "2019-03-22T19:55:06Z",
        "updatedAt" : "2019-03-22T19:55:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1af9c44fa4d9a5ef64f81cca6102236f845e5015",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +89,93 @@      throwToolExit(\n        'Unable to upgrade Flutter: no upstream repository configured. '\n        'Run \\'git remote add upstream '\n        'https://github.com/flutter/flutter\\' in ${Cache.flutterRoot}',\n      );"
  },
  {
    "id" : "d596ee75-0778-406a-aaea-fafa4488482c",
    "prId" : 29192,
    "prUrl" : "https://github.com/flutter/flutter/pull/29192#pullrequestreview-217949280",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60d81a6f-69cf-4d7f-abe8-ab311e617b47",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "nit: missing period",
        "createdAt" : "2019-03-22T19:57:14Z",
        "updatedAt" : "2019-03-22T19:57:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1af9c44fa4d9a5ef64f81cca6102236f845e5015",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +145,149 @@          'Failed to apply rebase: The flutter installation at'\n          ' ${Cache.flutterRoot} may be corrupted. A reinstallation of Flutter '\n          'is recommended'\n        );\n      }"
  },
  {
    "id" : "cef7b47a-c50a-45f3-987b-dc3a7f081d93",
    "prId" : 38325,
    "prUrl" : "https://github.com/flutter/flutter/pull/38325#pullrequestreview-274614255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b411b6d6-48a9-4552-ada7-690b8c5f8d02",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should expose this in verbose mode.",
        "createdAt" : "2019-08-14T00:00:25Z",
        "updatedAt" : "2019-08-14T00:00:25Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cabcc4fed89f31dfacf926657b2588e4ba070cff",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +30,34 @@      ..addFlag(\n        'continue',\n        hide: true,\n        negatable: false,\n        help: 'For the second half of the upgrade flow requiring the new version of Flutter. Should not be invoked manually, but re-entrantly by the standard upgrade command.',"
  }
]