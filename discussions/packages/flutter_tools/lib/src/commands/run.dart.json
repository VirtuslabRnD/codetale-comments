[
  {
    "id" : "08b025cb-398b-42ab-ae06-e953a519d485",
    "prId" : 1917,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8257051b-b8a2-4a25-b8eb-4f762e8dfa1e",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Perhaps move to the start of `runInProject()`?\n",
        "createdAt" : "2016-02-16T19:19:24Z",
        "updatedAt" : "2016-02-16T19:19:24Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "e8aa426f-e5c8-4c9e-ac03-a586299e2e18",
        "parentId" : "8257051b-b8a2-4a25-b8eb-4f762e8dfa1e",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "That's too late.  We will have already decided this working directory is not a valid project because it doesn't have a sky_engine package.\n",
        "createdAt" : "2016-02-16T19:23:18Z",
        "updatedAt" : "2016-02-16T19:23:18Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "1fc4face-1eab-472d-8863-24938abee641",
        "parentId" : "8257051b-b8a2-4a25-b8eb-4f762e8dfa1e",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "makes sense\n",
        "createdAt" : "2016-02-16T19:27:06Z",
        "updatedAt" : "2016-02-16T19:27:06Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf8116368d88f5a99371d08267838008d1f9aa30",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +81,85 @@  Future<int> run() async {\n    if (argResults['pub'])\n      await pubGet();\n    return await super.run();\n  }"
  },
  {
    "id" : "bdf70347-3aee-4af6-9ae7-8cc28d353b21",
    "prId" : 1917,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1644a615-8c96-425b-9068-ccd076e68435",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "I'm wondering if we could get away w/o a flag, since we only shell out to pub if the pubspec is out-of-date.\n",
        "createdAt" : "2016-02-16T19:20:18Z",
        "updatedAt" : "2016-02-16T19:20:23Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "d5cc95ec-2824-4801-b23c-5d15ae517bad",
        "parentId" : "1644a615-8c96-425b-9068-ccd076e68435",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "People who use this command from inside a continuous integration system will probably want to explicitly skip this step to prevent us from touching the network.\n",
        "createdAt" : "2016-02-16T19:24:07Z",
        "updatedAt" : "2016-02-16T19:24:07Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf8116368d88f5a99371d08267838008d1f9aa30",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +70,74 @@        negatable: false,\n        help: 'Start in a paused mode and wait for a debugger to connect.');\n    argParser.addFlag('pub',\n        defaultsTo: true,\n        help: 'Whether to run \"pub get\" before running the app.');"
  },
  {
    "id" : "146ba935-8b0b-4a98-a6ce-792b632ff230",
    "prId" : 2049,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b49ff6b-c1af-4d82-ac05-0556603fc01c",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "We should retain the different errors messages for when there are no connected devices, and when there was a connected device, but some failure running the application.\n",
        "createdAt" : "2016-02-21T05:01:57Z",
        "updatedAt" : "2016-02-21T05:01:57Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7979956326585e1e05d97ee17f9ba0eb585055b",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +221,225 @@\n  if (!startedSomething) {\n    printError('Unable to run application. Please ensure that a supported device/simulator is connected.');\n  }\n"
  },
  {
    "id" : "59221f3e-4af4-4ef5-a096-2c9280073c4d",
    "prId" : 4105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fefb856-a8e8-49c0-abd3-ced59157d0e6",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Is there a bug we can track? Maybe provide a link to the relevant SDK github issue?\n",
        "createdAt" : "2016-05-26T00:28:08Z",
        "updatedAt" : "2016-05-26T16:53:32Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "0cfa889d-684e-4eeb-a753-7632fff1ff48",
        "parentId" : "4fefb856-a8e8-49c0-abd3-ced59157d0e6",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "filed https://github.com/dart-lang/sdk/issues/26547\n",
        "createdAt" : "2016-05-26T16:39:03Z",
        "updatedAt" : "2016-05-26T16:53:32Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb809040db8e27f4b6cd48e0f1c0614da535ba0c",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +461,465 @@          if (observatory.isolates.isNotEmpty) {\n            observatory.flutterExit(observatory.firstIsolateId);\n            // The Dart WebSockets API does not have a flush() method.\n            await new Future<Null>.delayed(new Duration(milliseconds: 100));\n          }"
  },
  {
    "id" : "e6901bdc-ba89-49c7-91c4-fd3d4ae04185",
    "prId" : 4572,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "470e0877-dc52-4d4f-9317-a651f41c6653",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "I feel like this should be supplied as part of `debuggingOptions`, no?\n",
        "createdAt" : "2016-06-15T16:26:44Z",
        "updatedAt" : "2016-06-15T16:26:44Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "07c9a865-a6d6-423b-9af5-95bc77eb86d5",
        "parentId" : "470e0877-dc52-4d4f-9317-a651f41c6653",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "~~nit: `useDevFs`?~~ update: nvm, https://www.dartlang.org/effective-dart/style/#do-capitalize-acronyms-and-abbreviations-longer-than-two-letters-like-words\n",
        "createdAt" : "2016-06-15T16:26:53Z",
        "updatedAt" : "2016-06-15T16:31:25Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "89458df5-69ce-4ebe-83f3-146d87ffdc92",
        "parentId" : "470e0877-dc52-4d4f-9317-a651f41c6653",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "This option will go away once we've switched over to the devfs more permanently. \n",
        "createdAt" : "2016-06-15T17:23:11Z",
        "updatedAt" : "2016-06-15T17:23:11Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "85e9a2e604db9ca45fedf45d78493911be061a84",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +122,126 @@        target: target,\n        debuggingOptions: options,\n        useDevFS: argResults['devfs']\n      );\n"
  }
]