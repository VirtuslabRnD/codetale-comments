[
  {
    "id" : "08b025cb-398b-42ab-ae06-e953a519d485",
    "prId" : 1917,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8257051b-b8a2-4a25-b8eb-4f762e8dfa1e",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Perhaps move to the start of `runInProject()`?\n",
        "createdAt" : "2016-02-16T19:19:24Z",
        "updatedAt" : "2016-02-16T19:19:24Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "e8aa426f-e5c8-4c9e-ac03-a586299e2e18",
        "parentId" : "8257051b-b8a2-4a25-b8eb-4f762e8dfa1e",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "That's too late.  We will have already decided this working directory is not a valid project because it doesn't have a sky_engine package.\n",
        "createdAt" : "2016-02-16T19:23:18Z",
        "updatedAt" : "2016-02-16T19:23:18Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "1fc4face-1eab-472d-8863-24938abee641",
        "parentId" : "8257051b-b8a2-4a25-b8eb-4f762e8dfa1e",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "makes sense\n",
        "createdAt" : "2016-02-16T19:27:06Z",
        "updatedAt" : "2016-02-16T19:27:06Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf8116368d88f5a99371d08267838008d1f9aa30",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +81,85 @@  Future<int> run() async {\n    if (argResults['pub'])\n      await pubGet();\n    return await super.run();\n  }"
  },
  {
    "id" : "bdf70347-3aee-4af6-9ae7-8cc28d353b21",
    "prId" : 1917,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1644a615-8c96-425b-9068-ccd076e68435",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "I'm wondering if we could get away w/o a flag, since we only shell out to pub if the pubspec is out-of-date.\n",
        "createdAt" : "2016-02-16T19:20:18Z",
        "updatedAt" : "2016-02-16T19:20:23Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "d5cc95ec-2824-4801-b23c-5d15ae517bad",
        "parentId" : "1644a615-8c96-425b-9068-ccd076e68435",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "People who use this command from inside a continuous integration system will probably want to explicitly skip this step to prevent us from touching the network.\n",
        "createdAt" : "2016-02-16T19:24:07Z",
        "updatedAt" : "2016-02-16T19:24:07Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf8116368d88f5a99371d08267838008d1f9aa30",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +70,74 @@        negatable: false,\n        help: 'Start in a paused mode and wait for a debugger to connect.');\n    argParser.addFlag('pub',\n        defaultsTo: true,\n        help: 'Whether to run \"pub get\" before running the app.');"
  },
  {
    "id" : "146ba935-8b0b-4a98-a6ce-792b632ff230",
    "prId" : 2049,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b49ff6b-c1af-4d82-ac05-0556603fc01c",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "We should retain the different errors messages for when there are no connected devices, and when there was a connected device, but some failure running the application.\n",
        "createdAt" : "2016-02-21T05:01:57Z",
        "updatedAt" : "2016-02-21T05:01:57Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7979956326585e1e05d97ee17f9ba0eb585055b",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +221,225 @@\n  if (!startedSomething) {\n    printError('Unable to run application. Please ensure that a supported device/simulator is connected.');\n  }\n"
  },
  {
    "id" : "59221f3e-4af4-4ef5-a096-2c9280073c4d",
    "prId" : 4105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fefb856-a8e8-49c0-abd3-ced59157d0e6",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Is there a bug we can track? Maybe provide a link to the relevant SDK github issue?\n",
        "createdAt" : "2016-05-26T00:28:08Z",
        "updatedAt" : "2016-05-26T16:53:32Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "0cfa889d-684e-4eeb-a753-7632fff1ff48",
        "parentId" : "4fefb856-a8e8-49c0-abd3-ced59157d0e6",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "filed https://github.com/dart-lang/sdk/issues/26547\n",
        "createdAt" : "2016-05-26T16:39:03Z",
        "updatedAt" : "2016-05-26T16:53:32Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb809040db8e27f4b6cd48e0f1c0614da535ba0c",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +461,465 @@          if (observatory.isolates.isNotEmpty) {\n            observatory.flutterExit(observatory.firstIsolateId);\n            // The Dart WebSockets API does not have a flush() method.\n            await new Future<Null>.delayed(new Duration(milliseconds: 100));\n          }"
  },
  {
    "id" : "e6901bdc-ba89-49c7-91c4-fd3d4ae04185",
    "prId" : 4572,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "470e0877-dc52-4d4f-9317-a651f41c6653",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "I feel like this should be supplied as part of `debuggingOptions`, no?\n",
        "createdAt" : "2016-06-15T16:26:44Z",
        "updatedAt" : "2016-06-15T16:26:44Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "07c9a865-a6d6-423b-9af5-95bc77eb86d5",
        "parentId" : "470e0877-dc52-4d4f-9317-a651f41c6653",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "~~nit: `useDevFs`?~~ update: nvm, https://www.dartlang.org/effective-dart/style/#do-capitalize-acronyms-and-abbreviations-longer-than-two-letters-like-words\n",
        "createdAt" : "2016-06-15T16:26:53Z",
        "updatedAt" : "2016-06-15T16:31:25Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "89458df5-69ce-4ebe-83f3-146d87ffdc92",
        "parentId" : "470e0877-dc52-4d4f-9317-a651f41c6653",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "This option will go away once we've switched over to the devfs more permanently. \n",
        "createdAt" : "2016-06-15T17:23:11Z",
        "updatedAt" : "2016-06-15T17:23:11Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "85e9a2e604db9ca45fedf45d78493911be061a84",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +122,126 @@        target: target,\n        debuggingOptions: options,\n        useDevFS: argResults['devfs']\n      );\n"
  },
  {
    "id" : "95d69a9c-e44a-4746-9850-e3952c56f5da",
    "prId" : 5282,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c9b850c-0ab2-4c14-9474-abeeb956ceef",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "why? They seem like orthogonal features.\n",
        "createdAt" : "2016-08-08T20:02:31Z",
        "updatedAt" : "2016-08-09T14:10:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "7f0c2ae4-40ac-4038-8213-7761fcfea4db",
        "parentId" : "1c9b850c-0ab2-4c14-9474-abeeb956ceef",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "non-hot mode is going away.\n",
        "createdAt" : "2016-08-08T20:18:50Z",
        "updatedAt" : "2016-08-09T14:10:34Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "d75d1133-f31c-463b-8bf0-d734f13e0922",
        "parentId" : "1c9b850c-0ab2-4c14-9474-abeeb956ceef",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i thought we needed non-hot mode for --release and --profile modes?\n",
        "createdAt" : "2016-08-08T20:19:44Z",
        "updatedAt" : "2016-08-09T14:10:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a753623177d5612ed349293213af3afcc18b42c8",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +138,142 @@    } else {\n      if (argResults['control-pipe']) {\n        printError('--control-pipe requires --hot');\n        return 1;\n      }"
  },
  {
    "id" : "936470df-ea1f-4508-b51d-520d01c396c6",
    "prId" : 5453,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8aba8e02-3c75-4588-9861-8428e1ddbf13",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This should mention SIGUSR1 and SIGUSR2.\n",
        "createdAt" : "2016-08-17T16:26:09Z",
        "updatedAt" : "2016-08-17T16:26:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "4d72562c-8266-407e-a253-75026cd46666",
        "parentId" : "8aba8e02-3c75-4588-9861-8428e1ddbf13",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "Done (in a separate CL).\n",
        "createdAt" : "2016-08-18T16:42:49Z",
        "updatedAt" : "2016-08-18T16:42:49Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "62f31b6951e040055383813bd5d67eaaa5a6983c",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +71,75 @@    // Option to write the pid to a file.\n    argParser.addOption('pid-file',\n                        help: 'Specify a file to write the process id to.');\n\n"
  },
  {
    "id" : "04b90403-0951-486c-ad05-e5486d4e68a7",
    "prId" : 6485,
    "prUrl" : "https://github.com/flutter/flutter/pull/6485#pullrequestreview-5545606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2934cd8f-d8a7-4c23-a981-94ccd14a8479",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "looks like this should have been fixed by using `'` string literals after all, because as written it is indenting the string.\n",
        "createdAt" : "2016-10-24T21:42:48Z",
        "updatedAt" : "2016-10-24T21:42:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f19ccbf2d52ee8094b84b78ec17e2e6973dfcd83",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +77,81 @@                              and SIGUSR2 to trigger a full restart.\n                              \"\"\");\n\n\n    // Hidden option to enable a benchmarking mode. This will run the given"
  },
  {
    "id" : "9e8d3b5e-53b2-43d8-8f0c-63247d60ab1f",
    "prId" : 7183,
    "prUrl" : "https://github.com/flutter/flutter/pull/7183#pullrequestreview-11856612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80053a3d-2a14-40a3-95bc-ff5bf83befbd",
        "parentId" : null,
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "Good fix. Sorry I missed that [in my earlier PR](https://github.com/flutter/flutter/commit/223f4161996ecd8e950b9375d52a79f3582f69a3#diff-09c5be1877aa83342be68006ff74cb82R167).",
        "createdAt" : "2016-12-07T17:58:30Z",
        "updatedAt" : "2016-12-07T20:36:47Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      }
    ],
    "commit" : "387f4a127c43e4cdcc478c45f482ae58ecb824b9",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +178,182 @@      if (result != 0)\n        throwToolExit(null, exitCode: result);\n      return null;\n    }\n"
  },
  {
    "id" : "802268f2-ab8f-494e-a27f-fff0191b0a14",
    "prId" : 8191,
    "prUrl" : "https://github.com/flutter/flutter/pull/8191#pullrequestreview-22113934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b794379f-f068-4f70-b8e5-e055922cc561",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I would change \"for testing new kernel code execution\" to \"for testing a new Dart VM execution model\" or some such, just in case someone doesn't know what \"kernel code\" is. I don't want to start fielding bugs from enthusiastic users who think it's a Linux kernel or something.",
        "createdAt" : "2017-02-15T21:25:19Z",
        "updatedAt" : "2017-02-15T21:25:19Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa6d2e0715a7e2064112f938479a416e276c4bba",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +99,103 @@        help: 'Path to a pre-built kernel blob to use when running.\\n'\n              'This option only exists for testing new kernel code execution on devices\\n'\n              'and is not needed during normal application development.');\n    argParser.addOption('snapshotter',\n        hide: !verboseHelp,"
  },
  {
    "id" : "733daa19-72a4-4f95-9bcc-4f5a4e73871c",
    "prId" : 9585,
    "prUrl" : "https://github.com/flutter/flutter/pull/9585#pullrequestreview-34670177",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28c5a3d6-9320-4321-bc73-9bdc677600ce",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "maybe add a TODO that references a GitHub issue to support this.",
        "createdAt" : "2017-04-25T19:56:39Z",
        "updatedAt" : "2017-04-26T19:46:31Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "e88ca6ba93a60a004b12a9a729e67e30d8cc89ba",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +235,239 @@    if (argResults['machine']) {\n      if (devices.length > 1)\n        throwToolExit('--machine does not support -d all.');\n      final Daemon daemon = new Daemon(stdinCommandStream, stdoutCommandResponse,\n          notifyingLogger: new NotifyingLogger(), logToStdout: true);"
  },
  {
    "id" : "67f3af8d-e479-4f3f-81f2-c097d1bef1cc",
    "prId" : 10449,
    "prUrl" : "https://github.com/flutter/flutter/pull/10449#pullrequestreview-41667682",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44d8bf39-12bf-4e11-bf02-2a041a5381f9",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Are these options shared with `flutter drive` command? If not, could you add it there too?",
        "createdAt" : "2017-06-02T00:08:36Z",
        "updatedAt" : "2017-06-02T00:36:31Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "67f7d13569b3fe9aa6d836022c987e86061b243e",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +89,93 @@        negatable: false,\n        help: 'Start in a paused mode and wait for a debugger to connect.');\n    argParser.addFlag('enable-software-rendering',\n        defaultsTo: false,\n        negatable: false,"
  },
  {
    "id" : "f121acd0-d6d6-45cf-8cf5-2d697a9c237d",
    "prId" : 10902,
    "prUrl" : "https://github.com/flutter/flutter/pull/10902#pullrequestreview-47209135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "831a2aa4-0310-448f-94f5-448704918813",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "too many spaces here?",
        "createdAt" : "2017-06-29T18:15:43Z",
        "updatedAt" : "2017-07-10T15:56:22Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c98952438cde1a2cc68917b4a791d184e2c4444",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +178,182 @@    final bool isEmulator = await devices[0].isLocalEmulator;\n    final String deviceType = devices.length == 1 \n            ? getNameForTargetPlatform(await devices[0].targetPlatform)\n            : 'multiple';\n"
  },
  {
    "id" : "53f166fd-35e6-42b0-b729-dedc6c31fda6",
    "prId" : 13997,
    "prUrl" : "https://github.com/flutter/flutter/pull/13997#pullrequestreview-90266016",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2f4d123-3c65-4373-9980-ac0e3ac24dc3",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "no default value?",
        "createdAt" : "2018-01-19T22:31:32Z",
        "updatedAt" : "2018-02-12T18:13:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "fbf2f36a-6bdc-47fc-a8df-520c8cd16f2d",
        "parentId" : "f2f4d123-3c65-4373-9980-ac0e3ac24dc3",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "The default default value for flags is false",
        "createdAt" : "2018-01-19T22:35:05Z",
        "updatedAt" : "2018-02-12T18:13:54Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a483dada68b81fbe1f21f99980c7fd83ff91e15",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +117,121 @@    argParser.addFlag('track-widget-creation',\n        hide: !verboseHelp,\n        help: 'Track widget creation locations. Requires Dart 2.0 functionality.');\n    argParser.addOption('project-root',\n        hide: !verboseHelp,"
  },
  {
    "id" : "00488896-2c99-4b9a-9820-e1fdc573bf8e",
    "prId" : 14537,
    "prUrl" : "https://github.com/flutter/flutter/pull/14537#pullrequestreview-94922808",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a19ecda-9a2f-4b19-ba4d-09059e7194e1",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Maybe we should explain in help what happens when target platform is android-arm64 and the device is an ios or an 32 bit android device?",
        "createdAt" : "2018-02-08T00:26:47Z",
        "updatedAt" : "2018-02-08T22:26:12Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "d06283ac-7212-4b3e-9c7a-b2cb62a9c33d",
        "parentId" : "9a19ecda-9a2f-4b19-ba4d-09059e7194e1",
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "Added some help text",
        "createdAt" : "2018-02-08T00:35:32Z",
        "updatedAt" : "2018-02-08T22:26:12Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c8ade30330b7e01f6b5a88f7ef0bb5ce2b062f3",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +35,39 @@    argParser.addOption('route',\n        help: 'Which route to load when running the app.');\n    argParser.addOption('target-platform',\n        defaultsTo: 'default',\n        allowed: <String>['default', 'android-arm', 'android-arm64'],"
  },
  {
    "id" : "e4bfba2c-c436-452b-b3d7-9836fa14d179",
    "prId" : 15266,
    "prUrl" : "https://github.com/flutter/flutter/pull/15266#pullrequestreview-102411539",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d41e099e-7a79-4845-869b-3fca0e561a3a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you're missing a space between \"performance\" and \"with\" in this string literal, so it'll render as \"better performancewith hardware\".",
        "createdAt" : "2018-03-08T18:43:01Z",
        "updatedAt" : "2018-03-08T18:43:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "802280b54f1d5a1007f2f48d4c5dd156e62031e9",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +290,294 @@          if (enableSoftwareRendering) {\n            printStatus(\n              'Using software rendering with device ${device.name}. You may get better performance'\n              'with hardware mode by configuring hardware rendering for your device.'\n            );"
  },
  {
    "id" : "ccaa77fd-6cdf-4916-8066-771232a0a676",
    "prId" : 15266,
    "prUrl" : "https://github.com/flutter/flutter/pull/15266#pullrequestreview-102411562",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01f66265-7bb4-493d-9482-eefd186249e8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "similar here",
        "createdAt" : "2018-03-08T18:43:06Z",
        "updatedAt" : "2018-03-08T18:43:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "802280b54f1d5a1007f2f48d4c5dd156e62031e9",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +296,300 @@            printStatus(\n              'Using hardware rendering with device ${device.name}. If you get graphics artifacts,'\n              'consider enabling software rendering with \"--enable-software-rendering\".'\n            );\n          }"
  },
  {
    "id" : "75de6c5a-ffef-41fe-b81a-e4ce1e03657d",
    "prId" : 23026,
    "prUrl" : "https://github.com/flutter/flutter/pull/23026#pullrequestreview-165858485",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88ff3e30-c68a-4d2e-a517-2270fa710544",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "fyi, syntax for TODOs is `TODO(username): description, link to bug`. I'll fix this one.",
        "createdAt" : "2018-10-17T22:14:27Z",
        "updatedAt" : "2018-10-17T22:14:27Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcde60ed547b251f729551345dd87cd541811769",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +20,24 @@import 'daemon.dart';\n\n// TODO(flutter/flutter#23031): Test this.\nabstract class RunCommandBase extends FlutterCommand {\n  // Used by run and drive commands."
  },
  {
    "id" : "c0c9f6c1-c462-4daa-805b-7e2b08d2ba31",
    "prId" : 24122,
    "prUrl" : "https://github.com/flutter/flutter/pull/24122#pullrequestreview-173227198",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a9a485d-04d9-4e81-a563-830da74a67e9",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "`!device.supportsHotReload && !device.supportsHotRestart`?",
        "createdAt" : "2018-11-08T23:59:12Z",
        "updatedAt" : "2018-11-09T00:00:50Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "2f75e304-eb29-4b67-ad96-f916288af9b9",
        "parentId" : "9a9a485d-04d9-4e81-a563-830da74a67e9",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Either that or adjust the error message",
        "createdAt" : "2018-11-08T23:59:51Z",
        "updatedAt" : "2018-11-09T00:00:50Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "d28390bb-c343-4e25-aef0-76595d3a8e8f",
        "parentId" : "9a9a485d-04d9-4e81-a563-830da74a67e9",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "We definitely still want to support hot mode for fuchsia devices, just not restart.  Updated error message",
        "createdAt" : "2018-11-09T00:01:18Z",
        "updatedAt" : "2018-11-09T00:01:18Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c56f09caba120fe5f1d68d2e536726338b818b99",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +337,341 @@    if (hotMode) {\n      for (Device device in devices) {\n        if (!device.supportsHotReload)\n          throwToolExit('Hot reload is not supported by ${device.name}. Run with --no-hot.');\n      }"
  },
  {
    "id" : "7eafa475-65ba-4ed2-9fbc-5e99c42f077a",
    "prId" : 26988,
    "prUrl" : "https://github.com/flutter/flutter/pull/26988#pullrequestreview-196759563",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f21cb09-442f-4163-97f2-93f02a82a0dc",
        "parentId" : null,
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "enable-experiment being MultiOption won't ever have `null` value. it is always a list, it can be 0-length list if no values are specified for this option",
        "createdAt" : "2019-01-26T00:13:50Z",
        "updatedAt" : "2019-01-26T00:13:51Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "510a4a904419dad8bd7a4c0193f018c699e87d1d",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +337,341 @@    if (argParser.options.containsKey(FlutterOptions.kEnableExperiment) &&\n        argResults[FlutterOptions.kEnableExperiment] != null) {\n      expFlags = argResults[FlutterOptions.kEnableExperiment];\n    }\n    final List<FlutterDevice> flutterDevices = devices.map<FlutterDevice>((Device device) {"
  },
  {
    "id" : "b62b0227-e4f9-4488-a7ee-75dfa2755f42",
    "prId" : 33197,
    "prUrl" : "https://github.com/flutter/flutter/pull/33197#pullrequestreview-242954724",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01754313-4a96-46fb-93c9-b05cd6e2437a",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Does it matter whether hotMode is set here or not?",
        "createdAt" : "2019-05-28T20:50:00Z",
        "updatedAt" : "2019-05-29T15:05:01Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "36ee8d2d-3be2-423f-bcb7-a090782cfb2b",
        "parentId" : "01754313-4a96-46fb-93c9-b05cd6e2437a",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Yes, updated to take that into consideration",
        "createdAt" : "2019-05-28T22:33:05Z",
        "updatedAt" : "2019-05-29T15:05:01Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8fbf23a0434346712a82b3f859f6f1e00ee090f",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +410,414 @@      );\n    } else if (webMode) {\n      runner = ResidentWebRunner(\n        flutterDevices,\n        target: targetFile,"
  },
  {
    "id" : "e1a1e168-976a-4aea-906d-e9c258e05816",
    "prId" : 34181,
    "prUrl" : "https://github.com/flutter/flutter/pull/34181#pullrequestreview-247859842",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0db06a6b-214c-45cc-80b8-05b0f298dc9c",
        "parentId" : null,
        "authorId" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "body" : "This should fix the NPE we were seeing Friday.",
        "createdAt" : "2019-06-10T21:39:51Z",
        "updatedAt" : "2019-06-11T15:34:42Z",
        "lastEditedBy" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "tags" : [
        ]
      }
    ],
    "commit" : "e23aeb99f9b636762eb1b6c921aec89a8564ebd5",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +307,311 @@        startPaused: argResults['start-paused'],\n        disableServiceAuthCodes: argResults['disable-service-auth-codes'],\n        dartFlags: argResults['dart-flags'] ?? '',\n        useTestFonts: argResults['use-test-fonts'],\n        enableSoftwareRendering: argResults['enable-software-rendering'],"
  },
  {
    "id" : "32a2fd9a-cf8a-439f-8e8a-07e9579dfd37",
    "prId" : 39214,
    "prUrl" : "https://github.com/flutter/flutter/pull/39214#pullrequestreview-279886316",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f534dfd-4e8c-44cb-a607-cdacffa34d61",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "Would it be possible to set this in the constructor?",
        "createdAt" : "2019-08-26T18:29:50Z",
        "updatedAt" : "2019-08-26T20:26:27Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "4fc0f21e-c961-4706-8451-7c2cfe9f105f",
        "parentId" : "6f534dfd-4e8c-44cb-a607-cdacffa34d61",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Along the same lines, how do we guard against this flag being set and unset where it shouldn't be?",
        "createdAt" : "2019-08-26T19:23:54Z",
        "updatedAt" : "2019-08-26T20:26:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "bc8bcbf1-36a3-4ef4-8414-4cbc45e97cb4",
        "parentId" : "6f534dfd-4e8c-44cb-a607-cdacffa34d61",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I'm not sure if its possible to set in the constructor or guarantee that it is update correctly. Instead I could throw if `prompt` is ever called when usesTerminalUi is false?",
        "createdAt" : "2019-08-26T19:43:41Z",
        "updatedAt" : "2019-08-26T20:26:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "28ca91ec-8d2c-4b8d-84d4-72a9c266627e",
        "parentId" : "6f534dfd-4e8c-44cb-a607-cdacffa34d61",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "That sounds like a good sanity check.",
        "createdAt" : "2019-08-26T20:09:03Z",
        "updatedAt" : "2019-08-26T20:26:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "91b164b4-17bb-4205-b0fc-3035ab77b9f9",
        "parentId" : "6f534dfd-4e8c-44cb-a607-cdacffa34d61",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Done",
        "createdAt" : "2019-08-26T23:22:09Z",
        "updatedAt" : "2019-08-26T23:22:09Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "79e551aafaf1a63afe4ac93de8afc188f71f604b",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +336,340 @@      );\n    }\n    terminal.usesTerminalUi = true;\n\n    if (argResults['dart-flags'] != null && !FlutterVersion.instance.isMaster) {"
  },
  {
    "id" : "61a1adcd-5b69-46b8-8077-d9bc2f88fc18",
    "prId" : 45431,
    "prUrl" : "https://github.com/flutter/flutter/pull/45431#pullrequestreview-325809940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b40fc64-5840-4c87-955f-0f71c0985656",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Should we do a `throwToolExit` if this is passed for a non-Android device?",
        "createdAt" : "2019-12-02T20:39:02Z",
        "updatedAt" : "2019-12-04T18:08:09Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "70868161-a877-4bf9-8db5-666bb515a156",
        "parentId" : "8b40fc64-5840-4c87-955f-0f71c0985656",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "It's not technically harmful - the app will perform an unnecessary hot restart but otherwise function fine",
        "createdAt" : "2019-12-02T22:39:55Z",
        "updatedAt" : "2019-12-04T18:08:09Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "057bab34-639d-494a-b283-f8fe9e29983d",
        "parentId" : "8b40fc64-5840-4c87-955f-0f71c0985656",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "We could either exit, exit + warn, or ignore it",
        "createdAt" : "2019-12-02T22:40:05Z",
        "updatedAt" : "2019-12-04T18:08:09Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "1aae3b70-62a8-46d9-9bf2-4736e2feff98",
        "parentId" : "8b40fc64-5840-4c87-955f-0f71c0985656",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I'm thinking we could warn and force it to off. I'd like to avoid requiring the IDE plugins to implement logic for determining if the device supports it, and let the tool fallback to the old behavior automatically. That will make it easier to roll out support for new devices",
        "createdAt" : "2019-12-02T22:56:28Z",
        "updatedAt" : "2019-12-04T18:08:09Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "31982247-dbbe-43fd-999d-d194e4a09cdb",
        "parentId" : "8b40fc64-5840-4c87-955f-0f71c0985656",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "> I'm thinking we could warn and force it to off.\r\n\r\nsgtm",
        "createdAt" : "2019-12-02T22:58:10Z",
        "updatedAt" : "2019-12-04T18:08:09Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "69ed8f71-395e-4086-b2c5-38390d1fde53",
        "parentId" : "8b40fc64-5840-4c87-955f-0f71c0985656",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Added code to force it off, printStatus warning for non machine modes, and test case",
        "createdAt" : "2019-12-02T23:22:30Z",
        "updatedAt" : "2019-12-04T18:08:09Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "35f2c1c43d03a805038695ca521d386ff835b3ba",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +193,197 @@        hide: true,\n        help: 'Whether to quickly bootstrap applications with a minimal app. '\n              'Currently this is only supported on Android devices. This option '\n              'cannot be paired with --use-application-binary.'\n      )"
  },
  {
    "id" : "6c280453-1ea8-432d-b424-dc9bcb64dd19",
    "prId" : 46242,
    "prUrl" : "https://github.com/flutter/flutter/pull/46242#pullrequestreview-329189623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49c0576e-1042-432a-9b38-0e7becfc68a7",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Should this give a message like \"Failed to find a target device\" ?",
        "createdAt" : "2019-12-09T17:55:05Z",
        "updatedAt" : "2019-12-09T19:01:01Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "029d3000-4c7e-43f3-8d13-d53d85d12270",
        "parentId" : "49c0576e-1042-432a-9b38-0e7becfc68a7",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "In `findAllTargetDevices()`, before returning `null`, the appropriate `userMessages` will be printed to stdout; in this case:\r\n\r\n```sh\r\n~/git/flutter/examples/hello_world$ flutter run\r\nBuilding flutter tool...\r\nNo supported devices connected.\r\n```\r\n\r\nSo we're covered. I'll add a test verifying this (we have one for attach, but not for run) though.",
        "createdAt" : "2019-12-09T18:23:40Z",
        "updatedAt" : "2019-12-09T19:01:01Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "24aa01e7-6b47-45bb-800f-158760582938",
        "parentId" : "49c0576e-1042-432a-9b38-0e7becfc68a7",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "Added a test, PTAL",
        "createdAt" : "2019-12-09T20:12:46Z",
        "updatedAt" : "2019-12-09T20:12:46Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "34db8d8298de6380446a05aaf93fda8e53cf6888",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +287,291 @@    devices = await findAllTargetDevices();\n    if (devices == null) {\n      throwToolExit(null);\n    }\n    if (deviceManager.hasSpecifiedAllDevices && runningWithPrebuiltApplication) {"
  }
]