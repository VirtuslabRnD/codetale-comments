[
  {
    "id" : "08b025cb-398b-42ab-ae06-e953a519d485",
    "prId" : 1917,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8257051b-b8a2-4a25-b8eb-4f762e8dfa1e",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Perhaps move to the start of `runInProject()`?\n",
        "createdAt" : "2016-02-16T19:19:24Z",
        "updatedAt" : "2016-02-16T19:19:24Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "e8aa426f-e5c8-4c9e-ac03-a586299e2e18",
        "parentId" : "8257051b-b8a2-4a25-b8eb-4f762e8dfa1e",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "That's too late.  We will have already decided this working directory is not a valid project because it doesn't have a sky_engine package.\n",
        "createdAt" : "2016-02-16T19:23:18Z",
        "updatedAt" : "2016-02-16T19:23:18Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "1fc4face-1eab-472d-8863-24938abee641",
        "parentId" : "8257051b-b8a2-4a25-b8eb-4f762e8dfa1e",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "makes sense\n",
        "createdAt" : "2016-02-16T19:27:06Z",
        "updatedAt" : "2016-02-16T19:27:06Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf8116368d88f5a99371d08267838008d1f9aa30",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +81,85 @@  Future<int> run() async {\n    if (argResults['pub'])\n      await pubGet();\n    return await super.run();\n  }"
  },
  {
    "id" : "bdf70347-3aee-4af6-9ae7-8cc28d353b21",
    "prId" : 1917,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1644a615-8c96-425b-9068-ccd076e68435",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "I'm wondering if we could get away w/o a flag, since we only shell out to pub if the pubspec is out-of-date.\n",
        "createdAt" : "2016-02-16T19:20:18Z",
        "updatedAt" : "2016-02-16T19:20:23Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "d5cc95ec-2824-4801-b23c-5d15ae517bad",
        "parentId" : "1644a615-8c96-425b-9068-ccd076e68435",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "People who use this command from inside a continuous integration system will probably want to explicitly skip this step to prevent us from touching the network.\n",
        "createdAt" : "2016-02-16T19:24:07Z",
        "updatedAt" : "2016-02-16T19:24:07Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf8116368d88f5a99371d08267838008d1f9aa30",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +70,74 @@        negatable: false,\n        help: 'Start in a paused mode and wait for a debugger to connect.');\n    argParser.addFlag('pub',\n        defaultsTo: true,\n        help: 'Whether to run \"pub get\" before running the app.');"
  },
  {
    "id" : "146ba935-8b0b-4a98-a6ce-792b632ff230",
    "prId" : 2049,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b49ff6b-c1af-4d82-ac05-0556603fc01c",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "We should retain the different errors messages for when there are no connected devices, and when there was a connected device, but some failure running the application.\n",
        "createdAt" : "2016-02-21T05:01:57Z",
        "updatedAt" : "2016-02-21T05:01:57Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7979956326585e1e05d97ee17f9ba0eb585055b",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +221,225 @@\n  if (!startedSomething) {\n    printError('Unable to run application. Please ensure that a supported device/simulator is connected.');\n  }\n"
  },
  {
    "id" : "59221f3e-4af4-4ef5-a096-2c9280073c4d",
    "prId" : 4105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fefb856-a8e8-49c0-abd3-ced59157d0e6",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Is there a bug we can track? Maybe provide a link to the relevant SDK github issue?\n",
        "createdAt" : "2016-05-26T00:28:08Z",
        "updatedAt" : "2016-05-26T16:53:32Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "0cfa889d-684e-4eeb-a753-7632fff1ff48",
        "parentId" : "4fefb856-a8e8-49c0-abd3-ced59157d0e6",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "filed https://github.com/dart-lang/sdk/issues/26547\n",
        "createdAt" : "2016-05-26T16:39:03Z",
        "updatedAt" : "2016-05-26T16:53:32Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb809040db8e27f4b6cd48e0f1c0614da535ba0c",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +461,465 @@          if (observatory.isolates.isNotEmpty) {\n            observatory.flutterExit(observatory.firstIsolateId);\n            // The Dart WebSockets API does not have a flush() method.\n            await new Future<Null>.delayed(new Duration(milliseconds: 100));\n          }"
  },
  {
    "id" : "e6901bdc-ba89-49c7-91c4-fd3d4ae04185",
    "prId" : 4572,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "470e0877-dc52-4d4f-9317-a651f41c6653",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "I feel like this should be supplied as part of `debuggingOptions`, no?\n",
        "createdAt" : "2016-06-15T16:26:44Z",
        "updatedAt" : "2016-06-15T16:26:44Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "07c9a865-a6d6-423b-9af5-95bc77eb86d5",
        "parentId" : "470e0877-dc52-4d4f-9317-a651f41c6653",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "~~nit: `useDevFs`?~~ update: nvm, https://www.dartlang.org/effective-dart/style/#do-capitalize-acronyms-and-abbreviations-longer-than-two-letters-like-words\n",
        "createdAt" : "2016-06-15T16:26:53Z",
        "updatedAt" : "2016-06-15T16:31:25Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "89458df5-69ce-4ebe-83f3-146d87ffdc92",
        "parentId" : "470e0877-dc52-4d4f-9317-a651f41c6653",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "This option will go away once we've switched over to the devfs more permanently. \n",
        "createdAt" : "2016-06-15T17:23:11Z",
        "updatedAt" : "2016-06-15T17:23:11Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "85e9a2e604db9ca45fedf45d78493911be061a84",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +122,126 @@        target: target,\n        debuggingOptions: options,\n        useDevFS: argResults['devfs']\n      );\n"
  },
  {
    "id" : "95d69a9c-e44a-4746-9850-e3952c56f5da",
    "prId" : 5282,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c9b850c-0ab2-4c14-9474-abeeb956ceef",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "why? They seem like orthogonal features.\n",
        "createdAt" : "2016-08-08T20:02:31Z",
        "updatedAt" : "2016-08-09T14:10:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "7f0c2ae4-40ac-4038-8213-7761fcfea4db",
        "parentId" : "1c9b850c-0ab2-4c14-9474-abeeb956ceef",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "non-hot mode is going away.\n",
        "createdAt" : "2016-08-08T20:18:50Z",
        "updatedAt" : "2016-08-09T14:10:34Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "d75d1133-f31c-463b-8bf0-d734f13e0922",
        "parentId" : "1c9b850c-0ab2-4c14-9474-abeeb956ceef",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i thought we needed non-hot mode for --release and --profile modes?\n",
        "createdAt" : "2016-08-08T20:19:44Z",
        "updatedAt" : "2016-08-09T14:10:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a753623177d5612ed349293213af3afcc18b42c8",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +138,142 @@    } else {\n      if (argResults['control-pipe']) {\n        printError('--control-pipe requires --hot');\n        return 1;\n      }"
  },
  {
    "id" : "936470df-ea1f-4508-b51d-520d01c396c6",
    "prId" : 5453,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8aba8e02-3c75-4588-9861-8428e1ddbf13",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This should mention SIGUSR1 and SIGUSR2.\n",
        "createdAt" : "2016-08-17T16:26:09Z",
        "updatedAt" : "2016-08-17T16:26:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "4d72562c-8266-407e-a253-75026cd46666",
        "parentId" : "8aba8e02-3c75-4588-9861-8428e1ddbf13",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "Done (in a separate CL).\n",
        "createdAt" : "2016-08-18T16:42:49Z",
        "updatedAt" : "2016-08-18T16:42:49Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "62f31b6951e040055383813bd5d67eaaa5a6983c",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +71,75 @@    // Option to write the pid to a file.\n    argParser.addOption('pid-file',\n                        help: 'Specify a file to write the process id to.');\n\n"
  },
  {
    "id" : "04b90403-0951-486c-ad05-e5486d4e68a7",
    "prId" : 6485,
    "prUrl" : "https://github.com/flutter/flutter/pull/6485#pullrequestreview-5545606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2934cd8f-d8a7-4c23-a981-94ccd14a8479",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "looks like this should have been fixed by using `'` string literals after all, because as written it is indenting the string.\n",
        "createdAt" : "2016-10-24T21:42:48Z",
        "updatedAt" : "2016-10-24T21:42:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f19ccbf2d52ee8094b84b78ec17e2e6973dfcd83",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +77,81 @@                              and SIGUSR2 to trigger a full restart.\n                              \"\"\");\n\n\n    // Hidden option to enable a benchmarking mode. This will run the given"
  },
  {
    "id" : "9e8d3b5e-53b2-43d8-8f0c-63247d60ab1f",
    "prId" : 7183,
    "prUrl" : "https://github.com/flutter/flutter/pull/7183#pullrequestreview-11856612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80053a3d-2a14-40a3-95bc-ff5bf83befbd",
        "parentId" : null,
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "Good fix. Sorry I missed that [in my earlier PR](https://github.com/flutter/flutter/commit/223f4161996ecd8e950b9375d52a79f3582f69a3#diff-09c5be1877aa83342be68006ff74cb82R167).",
        "createdAt" : "2016-12-07T17:58:30Z",
        "updatedAt" : "2016-12-07T20:36:47Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      }
    ],
    "commit" : "387f4a127c43e4cdcc478c45f482ae58ecb824b9",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +178,182 @@      if (result != 0)\n        throwToolExit(null, exitCode: result);\n      return null;\n    }\n"
  },
  {
    "id" : "802268f2-ab8f-494e-a27f-fff0191b0a14",
    "prId" : 8191,
    "prUrl" : "https://github.com/flutter/flutter/pull/8191#pullrequestreview-22113934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b794379f-f068-4f70-b8e5-e055922cc561",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I would change \"for testing new kernel code execution\" to \"for testing a new Dart VM execution model\" or some such, just in case someone doesn't know what \"kernel code\" is. I don't want to start fielding bugs from enthusiastic users who think it's a Linux kernel or something.",
        "createdAt" : "2017-02-15T21:25:19Z",
        "updatedAt" : "2017-02-15T21:25:19Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa6d2e0715a7e2064112f938479a416e276c4bba",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +99,103 @@        help: 'Path to a pre-built kernel blob to use when running.\\n'\n              'This option only exists for testing new kernel code execution on devices\\n'\n              'and is not needed during normal application development.');\n    argParser.addOption('snapshotter',\n        hide: !verboseHelp,"
  },
  {
    "id" : "733daa19-72a4-4f95-9bcc-4f5a4e73871c",
    "prId" : 9585,
    "prUrl" : "https://github.com/flutter/flutter/pull/9585#pullrequestreview-34670177",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28c5a3d6-9320-4321-bc73-9bdc677600ce",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "maybe add a TODO that references a GitHub issue to support this.",
        "createdAt" : "2017-04-25T19:56:39Z",
        "updatedAt" : "2017-04-26T19:46:31Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "e88ca6ba93a60a004b12a9a729e67e30d8cc89ba",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +235,239 @@    if (argResults['machine']) {\n      if (devices.length > 1)\n        throwToolExit('--machine does not support -d all.');\n      final Daemon daemon = new Daemon(stdinCommandStream, stdoutCommandResponse,\n          notifyingLogger: new NotifyingLogger(), logToStdout: true);"
  },
  {
    "id" : "67f3af8d-e479-4f3f-81f2-c097d1bef1cc",
    "prId" : 10449,
    "prUrl" : "https://github.com/flutter/flutter/pull/10449#pullrequestreview-41667682",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44d8bf39-12bf-4e11-bf02-2a041a5381f9",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Are these options shared with `flutter drive` command? If not, could you add it there too?",
        "createdAt" : "2017-06-02T00:08:36Z",
        "updatedAt" : "2017-06-02T00:36:31Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "67f7d13569b3fe9aa6d836022c987e86061b243e",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +89,93 @@        negatable: false,\n        help: 'Start in a paused mode and wait for a debugger to connect.');\n    argParser.addFlag('enable-software-rendering',\n        defaultsTo: false,\n        negatable: false,"
  },
  {
    "id" : "f121acd0-d6d6-45cf-8cf5-2d697a9c237d",
    "prId" : 10902,
    "prUrl" : "https://github.com/flutter/flutter/pull/10902#pullrequestreview-47209135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "831a2aa4-0310-448f-94f5-448704918813",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "too many spaces here?",
        "createdAt" : "2017-06-29T18:15:43Z",
        "updatedAt" : "2017-07-10T15:56:22Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c98952438cde1a2cc68917b4a791d184e2c4444",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +178,182 @@    final bool isEmulator = await devices[0].isLocalEmulator;\n    final String deviceType = devices.length == 1 \n            ? getNameForTargetPlatform(await devices[0].targetPlatform)\n            : 'multiple';\n"
  }
]