[
  {
    "id" : "897a968e-b055-430c-bafb-34072498c928",
    "prId" : 2097,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2df610b6-80b9-4cfd-b799-8416864a4583",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Do you have a sense for whether projects will have largely unit tests, or largely driver tests, or some mix of both?\n\nI'm just wondering when (or whether) we should default this to true, and / or remove the flag completely and just generate a test for all apps.\n",
        "createdAt" : "2016-02-23T00:10:17Z",
        "updatedAt" : "2016-02-23T01:11:01Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "3ab4d88d-adaf-417e-87d0-4fffd8eaa4f1",
        "parentId" : "2df610b6-80b9-4cfd-b799-8416864a4583",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "I think it will be a mix for something serious, but for people simply trying out the technology it will be none.\n\nThere are two reasons I decided to make this opt-in:\n1. To keep simple things simple. One great thing about Dart is that you don't need a project generator to get started. As soon as you have a project generator feature creep tends to get the setup to a point that you can no longer live without a generator. Today, you can `flutter create -o myapp` and literally read through all the generated files in less than 5 minutes and understand what's going on. Good luck doing that with native Android/iOS SDKs.\n2. Having tests immediately requires more maintenance. When someone just trying things out, they are likely to break the test as soon as they make the first change in the app and potentially trigger analyzer warnings in Atom.\n\nThis option is useful for people whose purpose is to learn how testing works in Flutter, or for those who are committed to building a production app.\n",
        "createdAt" : "2016-02-23T00:22:31Z",
        "updatedAt" : "2016-02-23T01:11:01Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "83742f16-3424-42e0-8ffa-b1b3a527f258",
        "parentId" : "2df610b6-80b9-4cfd-b799-8416864a4583",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Makes sense re: the opt-in choice\n",
        "createdAt" : "2016-02-23T00:32:21Z",
        "updatedAt" : "2016-02-23T01:11:01Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "40e18122-adf3-4035-9e17-e7326d8f05a2",
        "parentId" : "2df610b6-80b9-4cfd-b799-8416864a4583",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Should we have a similar option to create unit tests?  Should we have the ability to create a driver and/or unit test for an existing project?\n",
        "createdAt" : "2016-02-23T06:54:22Z",
        "updatedAt" : "2016-02-23T06:54:22Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "8c505f6b-31ef-40ce-a762-09a32110baca",
        "parentId" : "2df610b6-80b9-4cfd-b799-8416864a4583",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "> Should we have a similar option to create unit tests?\n\n[I think so](https://github.com/flutter/flutter/issues/2102).\n\n> Should we have the ability to create a driver and/or unit test for an existing project?\n\nWe could, perhaps, generate basic scaffolding, but not generate a real test, since we don't know what to test in an existing project (we wouldn't even know what to import).\n",
        "createdAt" : "2016-02-23T07:00:28Z",
        "updatedAt" : "2016-02-23T07:00:28Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "278630e688d2861470da2751eabdff453d91f431",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +32,36 @@    );\n    argParser.addFlag(\n      'with-driver-test',\n      negatable: true,\n      defaultsTo: false,"
  },
  {
    "id" : "5bd4781d-69a8-4906-a8ad-7a92ce7fc79e",
    "prId" : 2097,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f82313f-aec1-4548-8c6c-e8f98d97e972",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Ah, so driver tests live in their own directory (`test_driver`)?\n",
        "createdAt" : "2016-02-23T00:33:58Z",
        "updatedAt" : "2016-02-23T01:11:01Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "59b4e82b-c769-4c7d-b7e9-311c997733dd",
        "parentId" : "1f82313f-aec1-4548-8c6c-e8f98d97e972",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "_Now_ they do. This is because we do not have integration with `@TestOn` annotations. If I put driver files in `test`, then `flutter test` will attempt to pick them up. For now, `flutter test` will operate only on `test`, and `flutter drive` will operate only on `test_driver`.\n",
        "createdAt" : "2016-02-23T00:44:44Z",
        "updatedAt" : "2016-02-23T01:11:01Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "278630e688d2861470da2751eabdff453d91f431",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +172,176 @@  void withDriverTest() {\n    additionalTemplateVariables['withDriverTest?'] = {};\n    files['test_driver/e2e.dart'] = _e2eApp;\n    files['test_driver/e2e_test.dart'] = _e2eTest;\n  }"
  },
  {
    "id" : "773aadcc-ed11-48ed-8c9c-ae85563e7ff4",
    "prId" : 2118,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4860f8b-f58e-4c17-b78c-1ed16577fa3f",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "This is awesome - that we can support multiple templates w/ this.\n",
        "createdAt" : "2016-02-24T11:15:29Z",
        "updatedAt" : "2016-02-24T19:33:15Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "038367ad24aa1b14bced546a07cb2e9313626cb3",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +120,124 @@      templateContext['withDriverTest?'] = {};\n\n    Template createTemplate = new Template.fromName('create');\n    createTemplate.render(new Directory(dirPath), templateContext,\n        overwriteExisting: false);"
  },
  {
    "id" : "f71f6e94-a336-4fc7-a344-034c9e767d9a",
    "prId" : 2286,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d274de15-849e-42ff-a31f-65966a5447a2",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Thanks!  LGTM\n",
        "createdAt" : "2016-03-01T19:11:07Z",
        "updatedAt" : "2016-03-01T19:11:07Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebf1ecc5bd8f44f0c4f4c5da185206c1f26b40fb",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +190,194 @@  'watcher',\n  'yaml'\n]);\n\n/// Return `null` if the project name is legal. Return a validation message if"
  }
]