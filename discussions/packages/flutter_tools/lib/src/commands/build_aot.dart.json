[
  {
    "id" : "70d6fb0f-6755-4058-89f8-79a8751e9742",
    "prId" : 3592,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e873ccf3-f977-4a42-bb2f-1a6d659a052c",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "We're not using `packages` symlinks anymore. You'll have to locate packages by parsing the `.packages` file. We have code to do that in `lib/src/package_map.dart`.\n",
        "createdAt" : "2016-04-27T23:04:22Z",
        "updatedAt" : "2016-04-28T17:29:40Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "69c6c3fb-cee4-46b3-8d0c-bbed5d30f269",
        "parentId" : "e873ccf3-f977-4a42-bb2f-1a6d659a052c",
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "AFAICT the Dart gen_snapshot tool currently requires a packages directory.\n\nThe iOS snapshot script (sky/build/SnapshotterInvoke) uses a packages directory and requires that \"pub get\" be run before proceeding.\n",
        "createdAt" : "2016-04-27T23:45:39Z",
        "updatedAt" : "2016-04-28T17:29:40Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      },
      {
        "id" : "1c210f41-dbe3-4097-ab9e-da4eddb4a80b",
        "parentId" : "e873ccf3-f977-4a42-bb2f-1a6d659a052c",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "> AFAICT the Dart gen_snapshot tool currently requires a packages directory.\n\nWe did remove all known (at the time) usages of the packages symlinks, including in `sky_snapshot`. Neither `flutter update-packages` nor `flutter upgrade` create symlinks, just `.packages` files. We will need to make `gen_snapshot` .packages aware, if it's not already.\n\nCan you file an issue against gen_snapshot? I don't want to block landing this PR on that, but perhaps we should hide the `aot` command until it's resolved.\n",
        "createdAt" : "2016-04-28T15:14:46Z",
        "updatedAt" : "2016-04-28T17:29:40Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "fd852656-8792-43e0-b663-560ebc424cbf",
        "parentId" : "e873ccf3-f977-4a42-bb2f-1a6d659a052c",
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "filed https://github.com/dart-lang/sdk/issues/26362\n",
        "createdAt" : "2016-04-28T17:15:47Z",
        "updatedAt" : "2016-04-28T17:29:40Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "80a067755cf33d7d7e5f077afdfdd664618de254",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +80,84 @@  String vmEntryPointsAndroid = path.join(bindingsSrc, 'dart_vm_entry_points_android.txt');\n\n  String packagesPath = path.absolute(Directory.current.path, 'packages');\n  if (!FileSystemEntity.isDirectorySync(packagesPath)) {\n    printError('Could not find packages directory: $packagesPath\\n' +"
  },
  {
    "id" : "564b66a4-010b-4975-827b-80d19ee7f64b",
    "prId" : 3592,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6791651c-dd35-4cda-a841-3d10c0c46926",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "This will be pretty fragile as things change. Is there any way we could discover this based on file metadata?\n\nI'm also wondering how we could test this command on a bot, just so we know when it breaks. That'll probably be harder given that this command currently just works w/ local engine builds.\n",
        "createdAt" : "2016-04-27T23:20:41Z",
        "updatedAt" : "2016-04-28T17:29:40Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "d55fa56b-5971-4d83-bbb4-d470ecd7f5f6",
        "parentId" : "6791651c-dd35-4cda-a841-3d10c0c46926",
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "I don't know if there is a way to discover these mappings dynamically.  For now I'm duplicating what the iOS script is doing.\n\nIn the near future the AOT flow on Android should be usable without a local engine.\n",
        "createdAt" : "2016-04-27T23:51:06Z",
        "updatedAt" : "2016-04-28T17:29:40Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      },
      {
        "id" : "0f0f6e55-b8fc-4b9c-b459-abe0fe41c57f",
        "parentId" : "6791651c-dd35-4cda-a841-3d10c0c46926",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "> I don't know if there is a way to discover these mappings dynamically.\n\nYes, I couldn't think of one either :)\n\nWithout this logic being data-driven, or a test running continuously, this will bit rot w/o us knowing it. Can you open an issue to run `build aot` on the chromium bots? It's already doing a local engine build, and has steps that test the other flutter commands.\n",
        "createdAt" : "2016-04-28T15:18:11Z",
        "updatedAt" : "2016-04-28T17:29:40Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "f9e2833e-68ee-4721-bb98-edb6ff39a752",
        "parentId" : "6791651c-dd35-4cda-a841-3d10c0c46926",
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "filed https://github.com/flutter/flutter/issues/3604\n",
        "createdAt" : "2016-04-28T17:16:04Z",
        "updatedAt" : "2016-04-28T17:29:40Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "80a067755cf33d7d7e5f077afdfdd664618de254",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +90,94 @@  String mojoInternalPath = path.join(mojoSdkExt, 'internal.dart');\n\n  String skyEngineSdkExt = _getSdkExtensionPath(packagesPath, 'sky_engine');\n  String uiPath = path.join(skyEngineSdkExt, 'dart_ui.dart');\n  String vmServicePath = path.join(skyEngineSdkExt, 'dart', 'runtime', 'bin', 'vmservice', 'vmservice_io.dart');"
  },
  {
    "id" : "dc8037d7-5250-4c7e-afec-4e2b9d14b25f",
    "prId" : 3879,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ccb8a453-aac5-46ce-916f-7bf4aa772486",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "I'm confused here. We're passing in `--no-checked` for profile and debug builds?\n",
        "createdAt" : "2016-05-12T17:07:03Z",
        "updatedAt" : "2016-05-12T18:00:36Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "ae6ce9b0-9049-45c5-9afb-f90b7c57d89f",
        "parentId" : "ccb8a453-aac5-46ce-916f-7bf4aa772486",
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "Release builds of the AOT tools do not recognize these two flags\n",
        "createdAt" : "2016-05-12T18:01:04Z",
        "updatedAt" : "2016-05-12T18:01:04Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d7aef2bf83b16f6355427ad45c6e6f8381986ed",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +133,137 @@  ];\n\n  if (buildMode != BuildMode.release) {\n    genSnapshotCmd.addAll(<String>[\n      '--no-checked',"
  },
  {
    "id" : "40d09c8a-768e-4562-bdd5-1329af8b9803",
    "prId" : 4168,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "868f4484-75f2-49e2-8720-a8644dc44425",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "btw the dream is to have all this platform-specific logic abstracted out into virtual methods on the platform objects so you just invoke the right method on the platform object and the right thing happens. Ideally we'd never check the platform type in non-platform-specific code.\n",
        "createdAt" : "2016-05-24T22:46:51Z",
        "updatedAt" : "2016-05-24T22:46:51Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "56070458-8a04-4615-bea4-566c70826326",
        "parentId" : "868f4484-75f2-49e2-8720-a8644dc44425",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, this part got a little messy.  Once I get this working, I'll come back and refactor.\n",
        "createdAt" : "2016-05-24T22:49:47Z",
        "updatedAt" : "2016-05-24T22:49:47Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "dba5f6f214ea16ea896063e2548ffba8fe369a6f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +101,105 @@    String artifactsDir = tools.getEngineArtifactsDirectory(platform, buildMode).path;\n    entryPointsDir = artifactsDir;\n    if (platform == TargetPlatform.ios) {\n      genSnapshot = path.join(artifactsDir, 'gen_snapshot');\n    } else {"
  },
  {
    "id" : "615ea92a-d5bb-420c-b86d-e9267b8fa304",
    "prId" : 6714,
    "prUrl" : "https://github.com/flutter/flutter/pull/6714#pullrequestreview-7296466",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd833ec9-6437-49c9-a902-b89590aa9a6c",
        "parentId" : null,
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "Currently this is already being done by gen_snapshot's main.  But it seems prudent to disable it explicitly in case gen_snapshot's defaults change\n",
        "createdAt" : "2016-11-04T22:43:06Z",
        "updatedAt" : "2016-11-04T22:43:06Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f59ec6a886df0eaf201c5925f4e5e90101ec1f7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +234,238 @@        '--embedder_entry_points_manifest=$vmEntryPointsAndroid',\n        '--no-sim-use-hardfp',\n        '--no-use-integer-division',  // Not supported by the Pixel in 32-bit mode.\n      ]);\n      break;"
  },
  {
    "id" : "f65f83b9-3895-43f6-8d6d-f276110da664",
    "prId" : 11084,
    "prUrl" : "https://github.com/flutter/flutter/pull/11084#pullrequestreview-48152847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "295127dd-358a-4708-8eb6-1e8306ca80d7",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "async api?",
        "createdAt" : "2017-07-05T19:08:25Z",
        "updatedAt" : "2017-07-05T19:28:04Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "c6c99360-7af0-4e9e-a14e-a7cde511127f",
        "parentId" : "295127dd-358a-4708-8eb6-1e8306ca80d7",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Hm, I guess it's hard to use in an `every` clause...",
        "createdAt" : "2017-07-05T19:09:38Z",
        "updatedAt" : "2017-07-05T19:28:04Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "e8905b87-0144-4a37-b574-58d95b2e8e17",
        "parentId" : "295127dd-358a-4708-8eb6-1e8306ca80d7",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Generally avoid async `exists`: https://github.com/flutter/flutter/issues/7166",
        "createdAt" : "2017-07-05T19:19:43Z",
        "updatedAt" : "2017-07-05T19:28:04Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "347a10d6-cede-4726-9f3b-89711faed400",
        "parentId" : "295127dd-358a-4708-8eb6-1e8306ca80d7",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "`exists()` checks are actually better sync anyway, since they won't hang and present less overhead than their async variants.",
        "createdAt" : "2017-07-05T19:21:15Z",
        "updatedAt" : "2017-07-05T19:28:04Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c54e6a55355f0b893462699c354a0973943d3547",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +270,274 @@      ..addAll(inputPaths.map(fs.file))\n      ..addAll(outputPaths.map(fs.file));\n  if (checksumFiles.every((File file) => file.existsSync())) {\n    try {\n      final String json = await checksumFile.readAsString();"
  },
  {
    "id" : "98a59f6a-9ac1-4955-b12b-19d4d2a237ae",
    "prId" : 11820,
    "prUrl" : "https://github.com/flutter/flutter/pull/11820#pullrequestreview-59320698",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6152247d-3db8-455d-8087-8e5e5a3a217a",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "(I can't add a comment to the appropriate lines in this file)\r\n\r\nMaybe add a todo in this file where gen_snapshot is referenced to indicate that this should be using the new snapshotter instead?",
        "createdAt" : "2017-08-29T17:26:27Z",
        "updatedAt" : "2017-08-29T17:31:55Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "2ed8293e-36c3-47c4-9a36-5c13b409dfb3",
        "parentId" : "6152247d-3db8-455d-8087-8e5e5a3a217a",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Good point! Done.",
        "createdAt" : "2017-08-29T17:32:07Z",
        "updatedAt" : "2017-08-29T17:32:08Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "14a4ec5a3c40f686fd6ae7ef913799421bcb7af3",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +356,360 @@  // Compute and record checksums.\n  try {\n    final Set<String> snapshotInputPaths = await readDepfile(dependencies)\n      ..add(mainPath)\n      ..addAll(outputPaths);"
  },
  {
    "id" : "51eb7c7e-b052-42e3-b665-a5ada221a953",
    "prId" : 13997,
    "prUrl" : "https://github.com/flutter/flutter/pull/13997#pullrequestreview-87902472",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af7381d5-cc47-4a52-ac41-9e0e2a042f33",
        "parentId" : null,
        "authorId" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "body" : "[nit] Remove spaces before :\r\nThis line and the next.\r\n  ",
        "createdAt" : "2018-01-10T07:10:38Z",
        "updatedAt" : "2018-02-12T18:13:54Z",
        "lastEditedBy" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "tags" : [
        ]
      },
      {
        "id" : "5f6619a2-62e8-4eeb-a282-73efd0553722",
        "parentId" : "af7381d5-cc47-4a52-ac41-9e0e2a042f33",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "done",
        "createdAt" : "2018-01-10T16:46:13Z",
        "updatedAt" : "2018-02-12T18:13:54Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a483dada68b81fbe1f21f99980c7fd83ff91e15",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +340,344 @@      mainPath: mainPath,\n      extraFrontEndOptions: extraFrontEndOptions,\n      linkPlatformKernelIn : true,\n      aot : true,\n      trackWidgetCreation: false,"
  }
]