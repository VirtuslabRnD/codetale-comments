[
  {
    "id" : "d941b39d-411a-4f71-af95-9af6f6a28306",
    "prId" : 2082,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33b9abd8-5669-460b-9fac-e8443f9c7025",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "nit: `' - unsupported'`\n\nAdd a space before the dash, and remove it from the printStatus() line.\n",
        "createdAt" : "2016-02-22T19:58:33Z",
        "updatedAt" : "2016-02-22T19:58:33Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d299b05ab391727a68f3a912b04cd8e9cf9cb69d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +32,36 @@      for (Device device in devices) {\n        String supportIndicator = device.isSupported() ? '' : '- unsupported';\n        printStatus('${device.name} (${device.id}) $supportIndicator');\n      }\n    }"
  },
  {
    "id" : "34dfc034-202d-4dd1-8fe0-3f5782276912",
    "prId" : 6803,
    "prUrl" : "https://github.com/flutter/flutter/pull/6803#pullrequestreview-8122470",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "350104a7-2820-4e95-a5d6-40ef799956b2",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "nit: the `)` should be on the next line\n",
        "createdAt" : "2016-11-10T23:40:17Z",
        "updatedAt" : "2016-11-11T15:23:17Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a4976b909992cac5ac9199385dcd392f0627431",
    "line" : null,
    "diffHunk" : "@@ -1,1 +24,28 @@        \"Unable to locate a development device; please run 'flutter doctor' for \"\n        \"information about installing additional components.\",\n        exitCode: 1);\n    }\n"
  },
  {
    "id" : "c565ccf8-d774-417e-9460-1a3078613c04",
    "prId" : 13346,
    "prUrl" : "https://github.com/flutter/flutter/pull/13346#pullrequestreview-81909165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f0a5fa1-a073-4ef3-98ff-fadfc9af9a85",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "If we're giving them diagnostic messages inline, does it still make sense to tell them to run `flutter doctor`?  Maybe move this message into an `else` block and only show it if there are no inline diagnostic messages...",
        "createdAt" : "2017-12-05T17:25:18Z",
        "updatedAt" : "2017-12-07T17:01:49Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "c4fac7ae-e6a4-469d-b222-6116087009a8",
        "parentId" : "1f0a5fa1-a073-4ef3-98ff-fadfc9af9a85",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "It's a bit of duplication, but we don't know exactly what the diagnostic information will show - it'll be coming from the native toolchain. I'd like to have slightly too much message here, then possibly just a short or cryptic line from the native tool. It may be possible to make this message more terse though?",
        "createdAt" : "2017-12-07T16:21:40Z",
        "updatedAt" : "2017-12-07T17:01:49Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b4b7e8ee76dea5e113dffb478c5ab12d41bcb19",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +33,37 @@      printStatus(\n        'No devices detected.\\n\\n'\n        'If you expected your device to be detected, please run \"flutter doctor\" to diagnose\\n'\n        'potential issues, or visit https://flutter.io/setup/ for troubleshooting tips.');\n      final List<String> diagnostics = await deviceManager.getDeviceDiagnostics();"
  },
  {
    "id" : "0c595303-999f-415d-b19c-d3c1925863b7",
    "prId" : 50581,
    "prUrl" : "https://github.com/flutter/flutter/pull/50581#pullrequestreview-356890413",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c89c4ca1-ec08-4c57-91a2-9be17821df6b",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "The Devices command also needs a test for this new functionality, that passing the flag outputs parsable JSON. You'll need to mock the device manager with a fake device so you know what to expect",
        "createdAt" : "2020-02-11T18:27:12Z",
        "updatedAt" : "2020-03-30T18:52:51Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "78e16607cf0b7516ff52668850b993b4a847dc12",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +13,17 @@import '../runner/flutter_command.dart';\n\nclass DevicesCommand extends FlutterCommand {\n\n  DevicesCommand() {"
  },
  {
    "id" : "e25e9d16-bed7-47c2-9df1-627b9f67f4e1",
    "prId" : 50581,
    "prUrl" : "https://github.com/flutter/flutter/pull/50581#pullrequestreview-373764522",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cd7c118-04b7-4167-97f8-4da1e21c4c97",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This command also needs a test, see the commands.shard for some examples",
        "createdAt" : "2020-02-27T18:40:48Z",
        "updatedAt" : "2020-03-30T18:52:51Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "504e07e1-3a1d-49e3-b5eb-440aca4166ca",
        "parentId" : "8cd7c118-04b7-4167-97f8-4da1e21c4c97",
        "authorId" : "db59bf12-24c4-4a23-b01e-70df2d5d3dd8",
        "body" : "@jonahwilliams I'm confused. I didn't add this command, I just implemented the constructor (the command did have a default constructor before). And I have tests for the only thing I've added: `--machine` flag. \r\n\r\nAlso, the default functionality of the `devices` command does have tests in `test/commands.shard/hermetic/devices_test.dart`\r\n",
        "createdAt" : "2020-03-02T01:52:13Z",
        "updatedAt" : "2020-03-30T18:52:51Z",
        "lastEditedBy" : "db59bf12-24c4-4a23-b01e-70df2d5d3dd8",
        "tags" : [
        ]
      },
      {
        "id" : "c62f9260-e3e6-4f26-8407-598fc611b855",
        "parentId" : "8cd7c118-04b7-4167-97f8-4da1e21c4c97",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "(Sorry for the delay)\r\n\r\nRight, but you need a test that invokes the --machine and then verifies the output as expected. There are some example tests in tests/commands.shard/permeable/**",
        "createdAt" : "2020-03-12T17:35:18Z",
        "updatedAt" : "2020-03-30T18:52:51Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "78e16607cf0b7516ff52668850b993b4a847dc12",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +15,19 @@class DevicesCommand extends FlutterCommand {\n\n  DevicesCommand() {\n\n    argParser.addFlag('machine',"
  }
]