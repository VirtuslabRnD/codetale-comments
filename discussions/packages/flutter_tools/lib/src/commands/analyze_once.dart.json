[
  {
    "id" : "49fb6466-b158-42cf-bf0e-d9cf59230a50",
    "prId" : 16751,
    "prUrl" : "https://github.com/flutter/flutter/pull/16751#pullrequestreview-113760010",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33146700-cbd9-4fa4-bf8b-7f10e4674bcc",
        "parentId" : null,
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "Does `sdk.dartSdkPath` correspond or default to `<flutter-root>/bin/cache/dart-sdk/bin/dartanalyzer` ?",
        "createdAt" : "2018-04-19T18:39:03Z",
        "updatedAt" : "2018-04-19T18:39:29Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      },
      {
        "id" : "bcc6efe9-ddda-48a5-bef4-067f7175904c",
        "parentId" : "33146700-cbd9-4fa4-bf8b-7f10e4674bcc",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "No, it cooresponds to `<flutter-root>/bin/cache/dart-sdk` - we join in to `bin/dartanalyzer` down below :)",
        "createdAt" : "2018-04-19T20:14:09Z",
        "updatedAt" : "2018-04-19T20:39:43Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "1eae1f9bb10ec6b9b3483d9b544afc3c6aeb0ea8",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +95,99 @@      }\n\n      final String sdkPath = argResults['dart-sdk'] ?? sdk.dartSdkPath;\n\n      final String dartanalyzer = fs.path.join(sdkPath, 'bin', 'dartanalyzer');"
  },
  {
    "id" : "54d3654f-ee81-4cf2-a695-a3bb7a21029f",
    "prId" : 21048,
    "prUrl" : "https://github.com/flutter/flutter/pull/21048#pullrequestreview-150903198",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0273a57b-5f5d-45df-b154-221a1a5717f9",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Can the `server.onExit` future ever complete with an error?",
        "createdAt" : "2018-08-27T05:18:17Z",
        "updatedAt" : "2018-08-31T03:15:28Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "8fe0ab0a-c241-416c-947a-d272f6fd67ff",
        "parentId" : "0273a57b-5f5d-45df-b154-221a1a5717f9",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "The comment was for the closure inside (in that if that closure has an error, it won't be handled by anyone (which is ok))",
        "createdAt" : "2018-08-30T09:11:09Z",
        "updatedAt" : "2018-08-31T03:15:28Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ce12a818878a2847dfabcd89b3968e766805aea",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +94,98 @@    await server.start();\n    // Completing the future in the callback can't fail.\n    server.onExit.then((int exitCode) { // ignore: unawaited_futures\n      if (!analysisCompleter.isCompleted) {\n        analysisCompleter.completeError('analysis server exited: $exitCode');"
  },
  {
    "id" : "75198464-117e-480e-842a-6aea3484f5f5",
    "prId" : 58871,
    "prUrl" : "https://github.com/flutter/flutter/pull/58871#pullrequestreview-426580278",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95d53467-1a83-4b57-a237-bd901544f398",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This was the actual bug fix, everything else is for testing",
        "createdAt" : "2020-06-08T20:06:39Z",
        "updatedAt" : "2020-06-08T23:43:05Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9e278c8f58fcaa3ccbde9fd26f83a4312dcbfd4",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +94,98 @@\n    final String sdkPath = argResults['dart-sdk'] as String ??\n      artifacts.getArtifactPath(Artifact.engineDartSdkPath);\n\n    final AnalysisServer server = AnalysisServer("
  },
  {
    "id" : "5d561cf4-89f7-46bf-8b83-6051d8e74d99",
    "prId" : 61589,
    "prUrl" : "https://github.com/flutter/flutter/pull/61589#pullrequestreview-450862656",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "388e6be3-67bf-40a0-8ed2-ee7f5948bca7",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "if you are using early returns, you don't need `if/else` only:\r\n\r\n```dart\r\nif (condition1) {\r\n  return 1;\r\n}\r\nif (condition2) {\r\n  return 2;\r\n}\r\n...\r\n```",
        "createdAt" : "2020-07-17T18:12:03Z",
        "updatedAt" : "2020-08-15T07:09:49Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "33155bc4a12078650ca8b8908b542a0a2cb627f1",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +198,202 @@    for (final AnalysisError error in errors) {\n      final AnalysisSeverity severityLevel = error.writtenError.severityLevel;\n      if (severityLevel == AnalysisSeverity.error) {\n        return true;\n      }"
  },
  {
    "id" : "b5281613-d395-45b0-89ed-93551c4d0f19",
    "prId" : 61589,
    "prUrl" : "https://github.com/flutter/flutter/pull/61589#pullrequestreview-500784795",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15d694a7-6620-4524-88b6-facd333b5462",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "why does this need to check for both info and warning to be set? Seems like it should only be fatal-warnings",
        "createdAt" : "2020-09-24T20:00:02Z",
        "updatedAt" : "2020-09-24T20:00:02Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "9e7345a0-7457-4d44-9ca1-b50e6ce835a3",
        "parentId" : "15d694a7-6620-4524-88b6-facd333b5462",
        "authorId" : "10c8bc6a-2696-47ed-95e0-a5fbb5a61bb0",
        "body" : "warning severity level higher than info, see above experiments.\r\ne.g. if fatal-infos, both error, warning, info will be fatal.",
        "createdAt" : "2020-09-25T02:55:13Z",
        "updatedAt" : "2020-09-25T06:15:41Z",
        "lastEditedBy" : "10c8bc6a-2696-47ed-95e0-a5fbb5a61bb0",
        "tags" : [
        ]
      },
      {
        "id" : "63d9a55f-5ecd-421c-b850-0e9bd147ea01",
        "parentId" : "15d694a7-6620-4524-88b6-facd333b5462",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Instead of having two flags, could we have one option that takes different severity levels? Like `--fatal=infos` ?",
        "createdAt" : "2020-10-01T20:35:04Z",
        "updatedAt" : "2020-10-01T20:35:05Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "a7ef3242-0ca4-4255-b640-e785530a6212",
        "parentId" : "15d694a7-6620-4524-88b6-facd333b5462",
        "authorId" : "96fd573a-2507-4ee0-bbc6-b35279c6b474",
        "body" : "Since error is always more fatal than info, if user has opted for fatal info, then it makes perfect sense to make it fatal for error too and also that feels like the expected behavior. ",
        "createdAt" : "2020-10-01T23:37:46Z",
        "updatedAt" : "2020-10-01T23:37:46Z",
        "lastEditedBy" : "96fd573a-2507-4ee0-bbc6-b35279c6b474",
        "tags" : [
        ]
      }
    ],
    "commit" : "33155bc4a12078650ca8b8908b542a0a2cb627f1",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +202,206 @@      }\n      if (severityLevel == AnalysisSeverity.warning &&\n        (argResults['fatal-warnings'] as bool || argResults['fatal-infos'] as bool)) {\n        return true;\n      }"
  }
]