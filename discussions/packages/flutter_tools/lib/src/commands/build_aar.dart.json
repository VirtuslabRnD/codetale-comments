[
  {
    "id" : "17e2e218-b0a0-458a-a0b9-f140cacf5858",
    "prId" : 35217,
    "prUrl" : "https://github.com/flutter/flutter/pull/35217#pullrequestreview-262720029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50e583aa-395c-4c0e-aa81-2313759ad530",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "report usage for whether it's run on a plugin or module",
        "createdAt" : "2019-07-16T01:43:01Z",
        "updatedAt" : "2019-07-23T00:50:35Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "b4e64f42-0f4c-48a4-970d-79065b531d3e",
        "parentId" : "50e583aa-395c-4c0e-aa81-2313759ad530",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "Done \\o/",
        "createdAt" : "2019-07-16T22:22:45Z",
        "updatedAt" : "2019-07-23T00:50:35Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "6eacd79cdab237c5ba4e6c1a681b171af79ccfc3",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@  @override\n  final String name = 'aar';\n\n  @override\n  Future<Map<String, String>> get usageValues async {"
  },
  {
    "id" : "6832d213-4ea5-4192-8aa9-d2ac06e57c66",
    "prId" : 35217,
    "prUrl" : "https://github.com/flutter/flutter/pull/35217#pullrequestreview-263771898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a78cdddf-5840-495d-96d1-7c35351a8288",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "According to https://codecov.io/gh/flutter/flutter/pull/35217/diff#D12-47, the runCommand method of this has no test coverage. ",
        "createdAt" : "2019-07-16T22:21:49Z",
        "updatedAt" : "2019-07-23T00:50:35Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "96ada8bf-222a-45cc-aaf8-b071d8e84167",
        "parentId" : "a78cdddf-5840-495d-96d1-7c35351a8288",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "I added unit testing to the methods that don't require leaking the entire implementation detail.\r\nWhile mocking is generally useful, it's not ideal to write unit tests that reveal how the underlaying code is implemented.  In other words, changing the implementation detail of a method shouldn't result in changes to the unit test.\r\n\r\nLooking at the code, this seems to be caused by code expecting files at specific location. e.g. `FlutterProject` getters such as `pubspecFile`, `packagesFile` that are used downstream.\r\n\r\nRelevant reads: https://news.ycombinator.com/item?id=7809402, https://medium.com/javascript-scene/mocking-is-a-code-smell-944a70c90a6a",
        "createdAt" : "2019-07-17T05:51:47Z",
        "updatedAt" : "2019-07-23T00:50:35Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "09c0da0f-b160-414c-bea2-f79f932535db",
        "parentId" : "a78cdddf-5840-495d-96d1-7c35351a8288",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Some examples of how to test build commands exit in `test/general.shard/commands/build_*.dart`. This command, and buildAar has several areas where it is possible for regressions/changes to go unnoticed. I'm also expecting that the functionality here will grow over time, so even testing something trivial initially will make it easier for us down the line.\r\n\r\nBuildAarCommand should correctly pass its arguments through the buildAar. We should ensure that defaults work as expected, and unsupported values aren't passed through uninitialized. This might be difficult to do in this case, because buildAar is just a top level function. Its a sort of unhelpful pattern that we're using across the build* commands, so it might be best to take a different approach with build AAR.\r\n\r\nbuildAar itself has several checks for project files/module/gradle plugin. We'll want to ensure those are triggered correctly, given that the underlying detection works. This could be done through mocking, or through the memory file system.\r\n\r\nbuildGradleAar does a lot of configuring. I'm not quite sure how to start here.\r\n\r\n",
        "createdAt" : "2019-07-17T19:47:48Z",
        "updatedAt" : "2019-07-23T00:50:35Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "2918115e-a6ad-455b-a981-174da26cb43d",
        "parentId" : "a78cdddf-5840-495d-96d1-7c35351a8288",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "I hear what you are saying. I think there are a few classes that could be refactored, so it's clear what the boundaries are as a result.  For example, a `FlutterProject` or `AndroidProject` shouldn't preserve state by depending on  `file_system`. There should be factories and methods that operate on those types instead.  This way it's easier to construct one of these types in a unit test.\r\n\r\nCurrently, if I want to create a `FlutterProject` module, I need to create a file with specific content to test that a method operates on a module project only ðŸ˜•, but that is just one case. In practice, you end up with many mocks that aren't related to the code that is being tested. \r\n\r\nAlso, it would be useful to aggregate code coverage from integration test into the final code coverage report. I'm sure I'm testing these paths, but it would be good to get that insight in the report.  wdyt?",
        "createdAt" : "2019-07-17T22:32:55Z",
        "updatedAt" : "2019-07-23T00:50:35Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "69825aa7-d7e6-4da1-b08e-f25bac99e5ab",
        "parentId" : "a78cdddf-5840-495d-96d1-7c35351a8288",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Please don't hesitate to refactor stuff to make it testable. Embrace the yak shave. The entirety of my current (40+ file) PR is a result of my trying to do a tiny cleanup and just following all the threads that came out of that. It's normal for one thing to lead to another in this way. :-)",
        "createdAt" : "2019-07-18T00:12:45Z",
        "updatedAt" : "2019-07-23T00:50:35Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "0e6d3ba5-10c7-4058-aa47-98b098176e0c",
        "parentId" : "a78cdddf-5840-495d-96d1-7c35351a8288",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "Thanks for chiming in, @Hixie.  I filed https://github.com/flutter/flutter/issues/36424, and I'm more than happy to address this issue holistically. :)",
        "createdAt" : "2019-07-18T06:10:13Z",
        "updatedAt" : "2019-07-23T00:50:35Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "7cd5ecbe-b451-4666-a596-d655de5d2f42",
        "parentId" : "a78cdddf-5840-495d-96d1-7c35351a8288",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "I will refactor the current code that calls Gradle to get the list of tasks, properties, and build artifacts right after this PR, so unit testing is easier. This change will likely involve a large diff that isn't related to AARs.",
        "createdAt" : "2019-07-18T16:26:59Z",
        "updatedAt" : "2019-07-23T00:50:35Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "6eacd79cdab237c5ba4e6c1a681b171af79ccfc3",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +17,21 @@AarBuilder get aarBuilder => context.get<AarBuilder>() ?? AarBuilderImpl();\n\nclass BuildAarCommand extends BuildSubCommand {\n  BuildAarCommand({bool verboseHelp = false}) {\n    addBuildModeFlags(verboseHelp: verboseHelp);"
  },
  {
    "id" : "e78b86ac-8b19-4955-bb8c-d1e96ce4e068",
    "prId" : 44797,
    "prUrl" : "https://github.com/flutter/flutter/pull/44797#pullrequestreview-316059255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c40a06d-14a0-460e-91a0-130df6e6fb9f",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Is it possible to make it not do the default? Couldn't tell from reading the implementation. The iOS one has flags like https://github.com/flutter/flutter/blob/01f4f1ac5576a09dca32df6a2c9eaca1af1a7f22/packages/flutter_tools/lib/src/commands/build_ios_framework.dart#L41",
        "createdAt" : "2019-11-13T08:11:51Z",
        "updatedAt" : "2019-11-13T19:30:42Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "acbae01ff6b3ec12b036b795b07c3d16c527d944",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +80,84 @@  @override\n  final String description = 'Build a repository containing an AAR and a POM file.\\n\\n'\n      'By default, AARs are built for `release`, `debug` and `profile`.\\n'\n      'The POM file is used to include the dependencies that the AAR was compiled against.\\n'\n      'To learn more about how to use these artifacts, see '"
  },
  {
    "id" : "f2a197df-c1ff-4779-911c-8baa6f1b2d83",
    "prId" : 56342,
    "prUrl" : "https://github.com/flutter/flutter/pull/56342#pullrequestreview-406953780",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64206f79-a197-46f0-887e-7226afcb7faf",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "https://github.com/flutter/flutter/issues/56068#issuecomment-622054920\r\n> The build_aar command would need to be refactored to get the buildInfo from the flutter command instead of manually constructing it.\r\n\r\nIs this what you meant, @jonahwilliams?",
        "createdAt" : "2020-05-05T02:26:14Z",
        "updatedAt" : "2020-05-07T22:12:32Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "e5e8188d-60f8-498a-bef6-636227e83426",
        "parentId" : "64206f79-a197-46f0-887e-7226afcb7faf",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Yup! though there are some edges here. For example, If a user builds a debug aar with obfuscation enabled, the sources might be scrambled. This might cause confusion if there is some expectation that these flags only work on \"release\" builds",
        "createdAt" : "2020-05-05T02:30:34Z",
        "updatedAt" : "2020-05-07T22:12:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "133e9c45-ee84-4bc4-81aa-5fae145d1456",
        "parentId" : "64206f79-a197-46f0-887e-7226afcb7faf",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "@xster What do you think the best user experience would be here?  \r\n1. Ignore the flags for the debug and profile output\r\n1. Ignore the flags for the debug and profile output, and print a warning\r\n1. Only allow the flags accompanied by `--no-debug` and `--no-profile`",
        "createdAt" : "2020-05-05T02:45:55Z",
        "updatedAt" : "2020-05-07T22:12:32Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "d5154698-2c2b-4f88-8428-1bdb046bb76e",
        "parentId" : "64206f79-a197-46f0-887e-7226afcb7faf",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "FWIW  we do support --obfuscate on --debug `flutter build apk --debug` today, but not through flutter run. The former isn't very common so I didn't think it merited any interception, but it might be more common to build artifacts together here",
        "createdAt" : "2020-05-05T02:50:04Z",
        "updatedAt" : "2020-05-07T22:12:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "15530838-4948-46b6-9a54-3e5e203dafb0",
        "parentId" : "64206f79-a197-46f0-887e-7226afcb7faf",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I vote for 2",
        "createdAt" : "2020-05-05T23:18:16Z",
        "updatedAt" : "2020-05-07T22:12:32Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "f0f16416-3e5b-4b31-8237-df650986b990",
        "parentId" : "64206f79-a197-46f0-887e-7226afcb7faf",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "```\r\n$ flutter build aar --target-platform=android-arm --obfuscate --split-debug-info=foo/                                  \r\nBuilding flutter tool...\r\nChanging current working directory to: /Users/magder/Projects/aaa\r\nDart obfuscation is not supported in Debug mode, skipping.              \r\nRunning Gradle task 'assembleAarDebug'...                               \r\nRunning Gradle task 'assembleAarDebug'... Done                     20.6s\r\nâœ“ Built build/host/outputs/repo.\r\nDart obfuscation is not supported in Profile mode, skipping.            \r\nRunning Gradle task 'assembleAarProfile'...                             \r\nRunning Gradle task 'assembleAarProfile'... Done                   21.4s\r\nâœ“ Built build/host/outputs/repo.\r\nRunning Gradle task 'assembleAarRelease'...                             \r\nRunning Gradle task 'assembleAarRelease'... Done                    3.2s\r\nâœ“ Built build/host/outputs/repo.\r\n```",
        "createdAt" : "2020-05-06T01:41:05Z",
        "updatedAt" : "2020-05-07T22:12:32Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "dbafb933-e44b-4edc-96c0-4cbbcb1222fa",
        "parentId" : "64206f79-a197-46f0-887e-7226afcb7faf",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "LG. \"skipping\" is a bit ambiguous since you didn't skip building debug/profile. Maybe just say building debug/release in unobfuscated mode?",
        "createdAt" : "2020-05-06T16:48:23Z",
        "updatedAt" : "2020-05-07T22:12:32Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "913567fa-9ca5-4101-8361-398e46fb0fcb",
        "parentId" : "64206f79-a197-46f0-887e-7226afcb7faf",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Changed to: \"Dart obfuscation is not supported in Debug mode, building as unobfuscated.\"",
        "createdAt" : "2020-05-06T20:16:02Z",
        "updatedAt" : "2020-05-07T22:12:32Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ade3ac41bce285c490f9c52ce7d8662851b9d786",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +109,113 @@        androidBuildInfo.add(\n          AndroidBuildInfo(\n            getBuildInfo(forcedBuildMode: BuildMode.fromName(buildMode)),\n            targetArchs: targetArchitectures,\n          )"
  }
]