[
  {
    "id" : "d6213a6a-a4ce-4194-9078-16efb88d3873",
    "prId" : 40447,
    "prUrl" : "https://github.com/flutter/flutter/pull/40447#pullrequestreview-289588050",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18c33047-4357-4d48-93c1-b3214a639a15",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Does this need to be public? Could it be `@visibleForTesting`?",
        "createdAt" : "2019-09-17T22:21:45Z",
        "updatedAt" : "2019-09-17T22:41:08Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "8c25e305-fc1d-487f-943c-539e6b9b7ccf",
        "parentId" : "18c33047-4357-4d48-93c1-b3214a639a15",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "added `@visibleForTesting`",
        "createdAt" : "2019-09-17T22:43:17Z",
        "updatedAt" : "2019-09-17T22:43:18Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "9333fab9e4bc0848a1aecfe813fb37f12d662313",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@\n  @visibleForTesting\n  static const String dartObservatoryName = '_dartobservatory._tcp.local';\n\n  static MDnsObservatoryDiscovery get instance => context.get<MDnsObservatoryDiscovery>();"
  },
  {
    "id" : "827dfe99-59c2-41f8-84db-940b193f24cd",
    "prId" : 47157,
    "prUrl" : "https://github.com/flutter/flutter/pull/47157#pullrequestreview-332889146",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "026e0dd7-cfcd-4e42-9af2-3b688bc6a61a",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Should we only be checking this on macOS?",
        "createdAt" : "2019-12-16T21:42:07Z",
        "updatedAt" : "2019-12-16T22:08:31Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "ec74a265-4018-4cb0-b833-68073be8c628",
        "parentId" : "026e0dd7-cfcd-4e42-9af2-3b688bc6a61a",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "If the lookup fails, I thought it might be useful to get the verbose tracing that `_checkForIPv4LinkLocal()` produces regardless of host/target OS. Whether to print a louder error with advice is then gated on the device type. In this case it's iOS, which is limited to macOS. If we know better advice for other host/target combos in the future, we can add them there.",
        "createdAt" : "2019-12-16T21:47:40Z",
        "updatedAt" : "2019-12-16T22:08:31Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "947f39d0-196f-432e-8005-733b9d37e072",
        "parentId" : "026e0dd7-cfcd-4e42-9af2-3b688bc6a61a",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "SGTM",
        "createdAt" : "2019-12-16T21:48:26Z",
        "updatedAt" : "2019-12-16T22:08:31Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd751851cd2265cf9eb2adc733d36195a8768451",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +149,153 @@      deviceVmservicePort: deviceVmservicePort,\n    );\n    if (result == null) {\n      await _checkForIPv4LinkLocal(device);\n      return null;"
  }
]