[
  {
    "id" : "13e896c4-46bf-47c1-bf28-c61f788533d5",
    "prId" : 1302,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3c78fa7-205a-4d15-9e0d-8738826f233f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "nit: constructor first\n",
        "createdAt" : "2016-01-19T20:28:15Z",
        "updatedAt" : "2016-01-19T22:33:17Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5beea64d2bea49b92e8661a59d8acde4968dcbd",
    "line" : null,
    "diffHunk" : "@@ -1,1 +133,137 @@\nclass AdbDevice {\n  AdbDevice(String deviceInfo) {\n    // 'TA95000FQA\tdevice'\n    // 'TA95000FQA             device usb:340787200X product:peregrine_retus model:XT1045 device:peregrine'"
  },
  {
    "id" : "9cbc96c1-ecb4-403a-b071-ace452c98fd5",
    "prId" : 1619,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5503ef91-9f28-403d-961d-bb1b82abd0d3",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "looks like this can be final\n",
        "createdAt" : "2016-02-05T15:35:42Z",
        "updatedAt" : "2016-02-05T15:35:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ba07f6fb-5c7e-4a13-be26-cd4966c87d5a",
        "parentId" : "5503ef91-9f28-403d-961d-bb1b82abd0d3",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "will add in a follow up PR\n",
        "createdAt" : "2016-02-05T22:36:36Z",
        "updatedAt" : "2016-02-05T22:36:36Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ff43bf4187ebfbba0614047681eec0a3e4ee2c2",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +20,24 @@  final String adbPath;\n\n  Map<String, String> _idToNameCache = <String, String>{};\n\n  bool exists() {"
  },
  {
    "id" : "a8fccc70-dd21-41b4-8590-ddcf398f8cf3",
    "prId" : 1619,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6a170ca-5c16-4e48-8368-0b30b42b2613",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "`assert(_idToNameCache[device.id] != null)` ?\n",
        "createdAt" : "2016-02-05T15:36:39Z",
        "updatedAt" : "2016-02-05T15:36:39Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "32ea8f1e-7727-4109-9e88-c9170d2d433f",
        "parentId" : "b6a170ca-5c16-4e48-8368-0b30b42b2613",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "It's not critical if we don't get a name back from adb. The code will fall back on generating a name from 'deviceType deviceId' - which doesn't look great, but works.\n",
        "createdAt" : "2016-02-05T22:37:25Z",
        "updatedAt" : "2016-02-05T22:37:25Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ff43bf4187ebfbba0614047681eec0a3e4ee2c2",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +125,129 @@        if (_idToNameCache[device.id] == null)\n          await _populateDeviceCache();\n\n        // Set the device name from the cached name. Adb device notifications only\n        // have IDs, not names. We get the name by calling `listDevices()`."
  },
  {
    "id" : "30b7ec2f-ac5f-4240-9dfa-39b6b9c721d6",
    "prId" : 1619,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ba46706-e202-4d21-a9dc-c1427c2fb1a8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This is racy. Suppose you had devices A and B but not C, then you populate the names of A and B, then for C you repopulate the entire list, which might update A and B, after we've set their modelIDs.\n\nIt seems better to have _idToNameCache be null until _populateDeviceCache populates the whole thing, and then once it does that, assume it's been done, or something. Even better would be if adb could give us a holistic view of all the information we need in one command, I guess.\n",
        "createdAt" : "2016-02-05T15:41:24Z",
        "updatedAt" : "2016-02-05T15:41:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "625cfbe6-1437-4738-bc22-1cd212e1a3ef",
        "parentId" : "3ba46706-e202-4d21-a9dc-c1427c2fb1a8",
        "authorId" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "body" : "It's a bit wasteful to recalculate A and B when C shows up, but I don't see a race.  The populate-cache process establishes the canonical name; when devices show up, we populate the model name from the cache.  But we don't update the cached objects except in the populate-cache function (because it's the only function that uses 'devices -l' to get the full names of devices).\n",
        "createdAt" : "2016-02-05T18:58:38Z",
        "updatedAt" : "2016-02-05T18:59:04Z",
        "lastEditedBy" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "tags" : [
        ]
      },
      {
        "id" : "c91f4b50-1b5f-4f76-8248-9d4f14df5b29",
        "parentId" : "3ba46706-e202-4d21-a9dc-c1427c2fb1a8",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "The race is if the user plugs or unplugs devices in between the two.\n",
        "createdAt" : "2016-02-05T20:06:41Z",
        "updatedAt" : "2016-02-05T20:06:41Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "deccbad1-8f5b-491d-82b9-e08924610f28",
        "parentId" : "3ba46706-e202-4d21-a9dc-c1427c2fb1a8",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "This code depends on us not clearing the cache between requests, and on device names not changing. I don't think there's a race condition here. Every request that needs names for A and B will wait until they've been populated in the cache before using them. Future (or parallel) requests will only add to the cache.\n\nHappy to clarify or re-write this code if people see a better way :)\n",
        "createdAt" : "2016-02-05T22:42:37Z",
        "updatedAt" : "2016-02-05T22:42:37Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ff43bf4187ebfbba0614047681eec0a3e4ee2c2",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +138,142 @@      _idToNameCache[device.id] = device.modelID;\n  }\n\n  Future<String> _sendAdbServerCommand(String command) async {\n    Socket socket = await Socket.connect(InternetAddress.LOOPBACK_IP_V4, adbServerPort);"
  },
  {
    "id" : "6096de2d-dbd5-4d31-a216-19af3b9a09a8",
    "prId" : 2568,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77520c87-a87d-4fa7-8a0b-b568ba6b35b1",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Isn't the `void` implied, or best practice? It would be nice if the lint ignored setters that didn't have return types.\n",
        "createdAt" : "2016-03-10T02:17:08Z",
        "updatedAt" : "2016-03-10T02:17:08Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "a07c1c23-955c-4e03-b9b4-e3907962dadf",
        "parentId" : "77520c87-a87d-4fa7-8a0b-b568ba6b35b1",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I don't mind if we require that it be there and set to void, or require that we omit it.\nIf you think we should have a lint that requires that we omit it (and have this lint ignore lack of type on setters), then please file a bug here: https://github.com/dart-lang/linter/issues/new\nI'm happy to adjust the code the other way once a new lint comes. :-)\n",
        "createdAt" : "2016-03-10T02:28:19Z",
        "updatedAt" : "2016-03-10T02:28:19Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "91535262-993c-485e-9b0f-6af12480dd8f",
        "parentId" : "77520c87-a87d-4fa7-8a0b-b568ba6b35b1",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Ooh, good news! It already exists: avoid_return_types_on_setters\n\nHopefully these two lints don't conflict. I'll try it tomorrow.\n",
        "createdAt" : "2016-03-10T02:53:48Z",
        "updatedAt" : "2016-03-10T02:53:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7339de6bc9b670719d21625e88a6728543762e9",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +205,209 @@  String get modelID => _info['model'];\n\n  void set modelID(String value) {\n    _info['model'] = value;\n  }"
  }
]