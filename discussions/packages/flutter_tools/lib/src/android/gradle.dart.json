[
  {
    "id" : "71ae37e6-79a9-491b-86e2-f81672ceae33",
    "prId" : 4969,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5981a5ea-2c66-4b0b-8b3b-b6ed4855a97a",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "This seems a bit scary to mess around with the user's gradle install.  Can we run it without making it executable?\n",
        "createdAt" : "2016-07-19T18:47:28Z",
        "updatedAt" : "2016-07-19T22:41:08Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "dca4b187-aa4d-4378-b129-ba8811f1455e",
        "parentId" : "5981a5ea-2c66-4b0b-8b3b-b6ed4855a97a",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "This is one of the issues I ran into (https://github.com/flutter/flutter/issues/4429) when first trying on the gradle flow - the gradle script on my machine wasn't executable.\n\nIt's a bash script, so instead of executing it, we could run it in bash. Or we could fail when it tries to run (w/o the executable bit), and provide a good message to the user and steps to fix.\n",
        "createdAt" : "2016-07-19T18:56:29Z",
        "updatedAt" : "2016-07-19T22:41:08Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "65c92f027b0b6158e0bbc59a94cbf8efbcfe185f",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@    File file = new File(gradle);\n    if (file.existsSync())\n      os.makeExecutable(file);\n  }\n  return gradle;"
  },
  {
    "id" : "d17a9ceb-391a-41fe-9f24-a833ff096b7b",
    "prId" : 8241,
    "prUrl" : "https://github.com/flutter/flutter/pull/8241#pullrequestreview-22883352",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a1f4a6b-0b12-48ff-9568-fb39fdc0efff",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "nit: this might be more readable with raw strings",
        "createdAt" : "2017-02-21T06:10:13Z",
        "updatedAt" : "2017-02-21T06:10:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "847ce33d75da080ae4ea3acfb3079128c115cd5d",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +134,138 @@}\n\nString _escapePath(String path) => platform.isWindows ? path.replaceAll('\\\\', '\\\\\\\\') : path;\n\nFuture<Null> buildGradleProjectV1(String gradle) async {"
  },
  {
    "id" : "d1fc4ddb-2888-4a68-8e10-1600cd461d75",
    "prId" : 8241,
    "prUrl" : "https://github.com/flutter/flutter/pull/8241#pullrequestreview-22883385",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bba28372-499d-476f-bfcc-152fdafe789d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should maybe check how consistent we are about this, but generally we use `\"` quotes for strings in output",
        "createdAt" : "2017-02-21T06:10:42Z",
        "updatedAt" : "2017-02-21T06:10:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "847ce33d75da080ae4ea3acfb3079128c115cd5d",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +138,142 @@Future<Null> buildGradleProjectV1(String gradle) async {\n  // Run 'gradle build'.\n  Status status = logger.startProgress('Running \\'gradle build\\'...', expectSlowOperation: true);\n  int exitcode = await runCommandAndStreamOutput(\n    <String>[fs.file(gradle).absolute.path, 'build'],"
  },
  {
    "id" : "5e49386e-fb27-42e3-9ddc-22e0dea58a0c",
    "prId" : 10798,
    "prUrl" : "https://github.com/flutter/flutter/pull/10798#pullrequestreview-44997042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34f54043-680e-4040-9373-2a0d0e6ae177",
        "parentId" : null,
        "authorId" : "81d87995-2269-496b-ac5e-155cd9fd52eb",
        "body" : "I don't think this will handle upgrades properly. When the user upgrades to the new Gradle plugin, the old apk might still be there. Since this code checks that location first, it will keep using the old apk (from before the upgrade) forever.\r\n\r\nThe workaround is to do a clean build (clearing the build directory), but this could be frustrating for the user to diagnose; it will just look like it doesn't work.\r\n\r\nSo, better to detect which Gradle plugin we're actually using and only look at its output location. Or maybe clear both locations before doing the build?",
        "createdAt" : "2017-06-19T23:07:49Z",
        "updatedAt" : "2017-06-19T23:07:49Z",
        "lastEditedBy" : "81d87995-2269-496b-ac5e-155cd9fd52eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "0610574ee2c477d1df3fd9950528c0f64f2022aa",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +216,220 @@  File apkFile = fs.file('$buildDirectory/$apkFilename');\n  if (apkFile.existsSync())\n    return apkFile;\n  apkFile = fs.file('$buildDirectory/$buildModeName/$apkFilename');\n  if (apkFile.existsSync())"
  }
]