[
  {
    "id" : "f79dbdae-dcec-43a1-ae00-25f68d8e5bc5",
    "prId" : 4105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c7e1b38-06e2-4034-931e-af4e54fe3086",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Shouldn't all build artifacts go in `build` for easier debugging?\n",
        "createdAt" : "2016-05-26T00:22:28Z",
        "updatedAt" : "2016-05-26T16:53:32Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "eeb3b0bb-b17b-4243-a257-c9798973b9ff",
        "parentId" : "1c7e1b38-06e2-4034-931e-af4e54fe3086",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "This is the pattern that the current `flutter refresh` command uses. We may want to put more things into `build/`, and use a temp dir less often. I'd still want most of the build artifacts in `build/` to be semantic wrt to the user - something that they would understand and identify as useful to their project.\n",
        "createdAt" : "2016-05-26T16:32:31Z",
        "updatedAt" : "2016-05-26T16:53:32Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb809040db8e27f4b6cd48e0f1c0614da535ba0c",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +365,369 @@    Observatory observatory\n  }) async {\n    Directory tempDir = await Directory.systemTemp.createTemp('flutter_tools');\n\n    try {"
  },
  {
    "id" : "070a0403-a542-4165-97be-152e91be7783",
    "prId" : 5740,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3100c246-0287-43eb-b2c6-ade29ce3fe5b",
        "parentId" : null,
        "authorId" : "df09570d-f308-4f19-8dc7-0346024a77a6",
        "body" : "Maybe this error message should include info from `result.stderr`?\n",
        "createdAt" : "2016-09-05T19:06:51Z",
        "updatedAt" : "2016-09-26T19:07:46Z",
        "lastEditedBy" : "df09570d-f308-4f19-8dc7-0346024a77a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "404a015191136ef61f6883d72945bfde39085526",
    "line" : null,
    "diffHunk" : "@@ -1,1 +75,79 @@          _properties = parseAdbDeviceProperties(result.stdout);\n        } else {\n          printError('Error retrieving device properties for $name.');\n        }\n      } catch (error) {"
  },
  {
    "id" : "561b45bd-9e7b-46f9-ae86-b34e80921af5",
    "prId" : 5740,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1700dc4e-67e8-450c-a382-aac1665771ee",
        "parentId" : null,
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "Is there any additional error information we should provide here? exitCode?\n",
        "createdAt" : "2016-09-06T13:46:28Z",
        "updatedAt" : "2016-09-26T19:07:46Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      }
    ],
    "commit" : "404a015191136ef61f6883d72945bfde39085526",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +75,79 @@          _properties = parseAdbDeviceProperties(result.stdout);\n        } else {\n          printError('Error retrieving device properties for $name.');\n        }\n      } catch (error) {"
  },
  {
    "id" : "f385f9f4-0b13-4faf-ab94-41ab2047deae",
    "prId" : 6521,
    "prUrl" : "https://github.com/flutter/flutter/pull/6521#pullrequestreview-6036220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "487539a0-2295-475e-a4e8-023b1ddc1840",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Perhaps we should change the contract for `getAdbDevices()` to throw an exception if we have an error listing devices? As a get method, we should be able to call it w/o side effects. Instead of printing an error here, that would likely be the responsibility of a caller of the method.\n\nI'm not sure who calls getAdbDevices, where the best place to print the error would be, and which other callers would have to be made aware that getAdbDevices could now throw...\n",
        "createdAt" : "2016-10-27T08:29:37Z",
        "updatedAt" : "2016-10-27T08:29:37Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "87bba95d-fbcb-4868-9bb8-4670ec55d27f",
        "parentId" : "487539a0-2295-475e-a4e8-023b1ddc1840",
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "That was my initial thought as well and I considered throwing an exception. Looking at call sites for this method, I realized it's not really an exception, but rather additional information for the user. This method is used by higher level functions to gather information about devices, and this method (and others) are already calling `printError` as a sidecar way to provide additional information to the user.\n\nThat said, I agree that `printError` here (and elsewhere throughout this method and others) is not ideal in that it prevents calling methods from choosing how to present this additional information to the user.\n",
        "createdAt" : "2016-10-27T09:48:04Z",
        "updatedAt" : "2016-10-27T09:48:04Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      },
      {
        "id" : "aef2e200-f35c-49c1-bb83-4c21cbad5687",
        "parentId" : "487539a0-2295-475e-a4e8-023b1ddc1840",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Sorry, I didn't look at the rest of the impl of this method. It looks like we're already calling `printError()` here when we hit issues. Longer term we may want to instead return a more structured result from this method; definitely not necessary for this PR!\n",
        "createdAt" : "2016-10-27T11:05:00Z",
        "updatedAt" : "2016-10-27T11:05:00Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "48bc62377ef4b68c1cc6abe9f83634f5eed21724",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +636,640 @@  // Check for error messages from adb\n  if (!text.contains('List of devices')) {\n    printError(text);\n    return <AndroidDevice>[];\n  }"
  },
  {
    "id" : "f21058f7-8a82-47c7-800d-b2fe749039d7",
    "prId" : 6594,
    "prUrl" : "https://github.com/flutter/flutter/pull/6594#pullrequestreview-6493590",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "396d3670-ad11-418a-9841-2b740ac44d84",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "This `runCheckedSync` may mean that we don't get a spinner during the install. We'd need to change this to a async process call (and change the containing method signature to a Future result).\n",
        "createdAt" : "2016-10-31T18:07:46Z",
        "updatedAt" : "2016-10-31T18:07:46Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "64138cce-e708-4da8-9228-943a5d8724e6",
        "parentId" : "396d3670-ad11-418a-9841-2b740ac44d84",
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "Correct. Will tackle in a subsequent PR.\n",
        "createdAt" : "2016-10-31T18:13:56Z",
        "updatedAt" : "2016-10-31T18:13:56Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f09b9fe0526c60d163e868c8fa840f52c554165",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +241,245 @@\n    Status status = logger.startProgress('Installing ${apk.apkPath}...');\n    String installOut = runCheckedSync(adbCommandForDevice(<String>['install', '-r', apk.apkPath]));\n    status.stop(showElapsedTime: true);\n    RegExp failureExp = new RegExp(r'^Failure.*$', multiLine: true);"
  },
  {
    "id" : "aa55bb4d-c47f-4de7-9983-632a5015e75b",
    "prId" : 6630,
    "prUrl" : "https://github.com/flutter/flutter/pull/6630#pullrequestreview-6721164",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e70283b-2d5f-420d-89df-3e7a197dcfd2",
        "parentId" : null,
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "Do these need to be printed?  Users can see them at any time by running logcat\n",
        "createdAt" : "2016-11-01T22:39:25Z",
        "updatedAt" : "2016-11-01T22:39:25Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      },
      {
        "id" : "6a857384-ec0f-4c61-b3d9-ff6ea8a4b4a7",
        "parentId" : "2e70283b-2d5f-420d-89df-3e7a197dcfd2",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "I'm just being consistent with the existing behaviour: log messages that are ignored are still printed via printTrace. See the bottom of this function.\n",
        "createdAt" : "2016-11-01T22:43:42Z",
        "updatedAt" : "2016-11-01T22:43:42Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "e0fb7f46-90e5-46b3-96e9-4de54a7407d1",
        "parentId" : "2e70283b-2d5f-420d-89df-3e7a197dcfd2",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I added this yesterday. May have been a mistake. Feel free to remove that.\n",
        "createdAt" : "2016-11-01T22:49:53Z",
        "updatedAt" : "2016-11-01T22:49:53Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "847034be4c44ea7499d2141452591682b8465838",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +786,790 @@      if (time.isBefore(_timeOrigin)) {\n        // Ignore log messages before the origin.\n        printTrace('skipped old log line: $line');\n        return;\n      }"
  }
]