[
  {
    "id" : "9834af44-b652-41c8-a5a1-ce63bdcc8dc3",
    "prId" : 46130,
    "prUrl" : "https://github.com/flutter/flutter/pull/46130#pullrequestreview-327254326",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18360263-9514-4ccd-8298-168534ac6b9a",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "dartdoc these (i.e. where is the naming source of truth)",
        "createdAt" : "2019-12-05T00:56:45Z",
        "updatedAt" : "2019-12-05T01:12:41Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "d16e5618-a11f-4c27-b501-516ffb87976c",
        "parentId" : "18360263-9514-4ccd-8298-168534ac6b9a",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Totally undocumented by Apple AFAIK.  When people Google it they will find my Flutter comment!",
        "createdAt" : "2019-12-05T01:04:55Z",
        "updatedAt" : "2019-12-05T01:12:41Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a202e3dbc639f04658c270c6607c91903da95b1",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +30,34 @@/// ...\n/// --sdk <sdk name>            find the tool for the given SDK name\nString getNameForSdk(SdkType sdk) {\n  switch (sdk) {\n    case SdkType.iPhone:"
  },
  {
    "id" : "e4e0c6e5-1354-4be6-9912-49d65333ee45",
    "prId" : 46130,
    "prUrl" : "https://github.com/flutter/flutter/pull/46130#pullrequestreview-327270009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d77c0eea-75a3-43df-a621-61f7836848a5",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "If you add new public API surface, these need tests. (Feel free to do them in a separate PR)",
        "createdAt" : "2019-12-05T00:59:23Z",
        "updatedAt" : "2019-12-05T01:12:41Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "a9532d9c-6c25-46ee-9003-daeb96b0c05b",
        "parentId" : "d77c0eea-75a3-43df-a621-61f7836848a5",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "iPhoneSdkLocation didn't have any tests to update.  Will add some.",
        "createdAt" : "2019-12-05T01:03:22Z",
        "updatedAt" : "2019-12-05T01:12:41Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "43384823-fe87-4f1c-b5e2-183e2939e803",
        "parentId" : "d77c0eea-75a3-43df-a621-61f7836848a5",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "https://github.com/flutter/flutter/issues/46137",
        "createdAt" : "2019-12-05T02:03:42Z",
        "updatedAt" : "2019-12-05T02:03:42Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a202e3dbc639f04658c270c6607c91903da95b1",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +143,147 @@  }\n\n  Future<String> sdkLocation(SdkType sdk) async {\n    assert(sdk != null);\n    final RunResult runResult = await processUtils.run("
  },
  {
    "id" : "017919dd-d5ac-4e0a-8e60-1029edcf217d",
    "prId" : 46130,
    "prUrl" : "https://github.com/flutter/flutter/pull/46130#pullrequestreview-327254204",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fbeb9405-4973-4b03-b8e7-77187069d432",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "assert sdk non null",
        "createdAt" : "2019-12-05T01:04:33Z",
        "updatedAt" : "2019-12-05T01:12:41Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a202e3dbc639f04658c270c6607c91903da95b1",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +145,149 @@  Future<String> sdkLocation(SdkType sdk) async {\n    assert(sdk != null);\n    final RunResult runResult = await processUtils.run(\n      <String>['xcrun', '--sdk', getNameForSdk(sdk), '--show-sdk-path'],\n      throwOnError: true,"
  },
  {
    "id" : "52fd6d22-7918-4c2d-a5a4-70eadbb036cc",
    "prId" : 49854,
    "prUrl" : "https://github.com/flutter/flutter/pull/49854#pullrequestreview-351859086",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04d8fb02-dc16-40d3-9c4c-d8f5c7c0747d",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Can we pass a smaller timeout if we know the user doesn't care about wireless debugging?\r\n\r\nSaid another way, if wireless device discovery was under a flag, could this number be smaller?",
        "createdAt" : "2020-01-31T17:37:04Z",
        "updatedAt" : "2020-02-05T23:11:03Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "449ca938-9983-46d8-aad4-135d57accf1d",
        "parentId" : "04d8fb02-dc16-40d3-9c4c-d8f5c7c0747d",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "If the user doesn't care about networked devices and this is changed to `--timeout 1` (faster than the default) , this returns the USB-tethered devices and none of the networked devices.  \r\n\r\nThere's an `xcdevice wait [--usb|--wifi|--both] [--timeout=sec] <udid>` which will return as soon as the device is found but waits until the timeout if not, which would be fast for USB-tethered devices.  That would make sense for `flutter run -d <udid>` `hasSpecifiedDeviceId` situations, though it would require `PollingDeviceDiscovery` to get refactored to take a \"hint\" identifier or something like that.\r\n\r\nMaybe it would be okay for `flutter doctor` and `flutter devices` to take the full 5 seconds since we can then surface that it's networked and that they need to pass in `-d <udid>` to  `flutter run` (`attach`, `logs`, `screenshot`, etc) on the device.  And users would only be running those command infrequently, and they probably would prefer an accurate listing than for them to be fast.\r\n\r\nProposal:\r\n1. Switch to `xcdevice wait --both --timeout=5` for any command using `-d <udid>` (`run`, `attach`, `logs`, `screenshot`) to return fast if possible, but wait if needed.\r\n1. When there's no `-d <udid>` or `-d all` assume USB-only (common case) and use the fastest timeout possible.\r\n1. Keep the long timeout for `flutter doctor` and `flutter devices` and for \"network\" interface show a warning like \"This device is available over the network and must be specified with `-d {}",
        "createdAt" : "2020-01-31T20:43:10Z",
        "updatedAt" : "2020-02-05T23:11:03Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "3f78a861-d099-48e4-bd40-49acfd79ebda",
        "parentId" : "04d8fb02-dc16-40d3-9c4c-d8f5c7c0747d",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Can the `--timeout` value be smaller than 1?",
        "createdAt" : "2020-01-31T23:20:07Z",
        "updatedAt" : "2020-02-05T23:11:03Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "d1a9246f-88ab-4607-999b-457879d75c45",
        "parentId" : "04d8fb02-dc16-40d3-9c4c-d8f5c7c0747d",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "> Can the `--timeout` value be smaller than 1?\r\n\r\n1 seems to be the minimum allowed.  0 reverts to the longer default timeout.",
        "createdAt" : "2020-02-01T02:19:21Z",
        "updatedAt" : "2020-02-05T23:11:03Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "261b285a3fce1e6f3cdf499fd1f83dbe80c11423",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +243,247 @@          'xcdevice',\n          'list',\n          '--timeout',\n          '1',\n        ],"
  },
  {
    "id" : "f0d02485-353e-40d0-8f73-8d7d835a4bbf",
    "prId" : 49854,
    "prUrl" : "https://github.com/flutter/flutter/pull/49854#pullrequestreview-352638298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2280f520-cd1c-4e64-b047-40ef03005289",
        "parentId" : null,
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "This method is pretty long -- could a few smaller methods be factored out to break out? Something like some {sub,super,}set of:\r\n* fetch blob o' json (already done: `_getAllDevices()`)\r\n* `isIPhoneOSDevice(deviceProperties)`\r\n* error message check (already done: `_parseErrorMessage`)\r\n* `_isAvailable(...)` \r\n* `_isUSBDevice(...)` (or alternatively `_getConnectionType(...) == _DeviceConnectionType.usb`)\r\n* get SDK version\r\n* get cpu arch",
        "createdAt" : "2020-02-01T17:41:42Z",
        "updatedAt" : "2020-02-05T23:11:03Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "29793af6-dbc2-4581-acfc-8447d2c4f6fd",
        "parentId" : "2280f520-cd1c-4e64-b047-40ef03005289",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Good idea, done!",
        "createdAt" : "2020-02-03T23:35:29Z",
        "updatedAt" : "2020-02-05T23:11:03Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "261b285a3fce1e6f3cdf499fd1f83dbe80c11423",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +308,312 @@    //    \"name\" : \"Apple Watch Series 5 - 44mm\"\n    //  },\n    // ...\n\n    final List<IOSDevice> devices = <IOSDevice>[];"
  },
  {
    "id" : "22bf85ec-bdd0-47b0-bf6a-938a22e5c4d9",
    "prId" : 49854,
    "prUrl" : "https://github.com/flutter/flutter/pull/49854#pullrequestreview-353292610",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c86f47f2-001d-40b2-b0ed-0fe5a33126c0",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Should this fail more loudly if the reason we can't find devices is that the tool isn't installed like we expect?",
        "createdAt" : "2020-02-04T16:28:09Z",
        "updatedAt" : "2020-02-05T23:11:03Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "c94a3f77-9cec-43cf-bc6e-4a06f7e80c46",
        "parentId" : "c86f47f2-001d-40b2-b0ed-0fe5a33126c0",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "I've seen GitHub issues where people are trying to run `-d chrome` or for a particular Android device, and they are getting crashes because their personal iPhone is plugged in but isn't set up for development.  I don't think we should make people have Xcode installed if they aren't doing iOS development, and we can't really tell what their intentions are at the point we're trying to find a particular device identifier.",
        "createdAt" : "2020-02-04T20:46:08Z",
        "updatedAt" : "2020-02-05T23:11:03Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "a3767980-2a38-45ab-9ffa-e4db13c9430c",
        "parentId" : "c86f47f2-001d-40b2-b0ed-0fe5a33126c0",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Ah, okay, yeah that makes sense.",
        "createdAt" : "2020-02-04T20:52:39Z",
        "updatedAt" : "2020-02-05T23:11:03Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "261b285a3fce1e6f3cdf499fd1f83dbe80c11423",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +231,235 @@    if (!isInstalled) {\n      _logger.printTrace('Xcode not found. Run \\'flutter doctor\\' for more information.');\n      return null;\n    }\n    if (useCache && _cachedListResults != null) {"
  },
  {
    "id" : "f8836d21-d3c3-42d3-ae39-b44b86559732",
    "prId" : 50252,
    "prUrl" : "https://github.com/flutter/flutter/pull/50252#pullrequestreview-354709181",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9838274-a2bb-4b3d-a7b2-bb2fe5ad989f",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "This is the changed logic.",
        "createdAt" : "2020-02-06T03:17:00Z",
        "updatedAt" : "2020-02-06T03:17:00Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "7c282b2c-d279-4351-ac32-e7263d44704b",
        "parentId" : "d9838274-a2bb-4b3d-a7b2-bb2fe5ad989f",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Does the new logic have a test?",
        "createdAt" : "2020-02-06T15:48:31Z",
        "updatedAt" : "2020-02-06T15:48:31Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "b7333e49-13e4-40bd-a8d8-844bf671c120",
        "parentId" : "d9838274-a2bb-4b3d-a7b2-bb2fe5ad989f",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Yes, though GitHub decided to collapse xcode_test.dart. See 'ignores \"Preparing debugger support for iPhone\" error'.",
        "createdAt" : "2020-02-06T19:23:31Z",
        "updatedAt" : "2020-02-06T19:23:31Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "2fd781aae9a9f079f6ec1506edf35d80b53881fa",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +337,341 @@        if (code != -10) {\n          continue;\n        }\n      }\n"
  },
  {
    "id" : "90b940c9-4798-4826-8a53-c1802210544c",
    "prId" : 52570,
    "prUrl" : "https://github.com/flutter/flutter/pull/52570#pullrequestreview-374625602",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf87cba9-0649-4341-9b88-8697e26aeee1",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "it's unfortunate this env var is somewhat ambiguous, but hopefully there won't be collisions...",
        "createdAt" : "2020-03-13T21:18:56Z",
        "updatedAt" : "2020-03-13T22:56:53Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "7511768bb31fcbf084e21b0e4e4675a7e0e920f2",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +167,171 @@\n  Future<String> sdkLocation(SdkType sdk, Map<String, String> environment) async {\n    // If this is run an Xcode script build phase, the SDKROOT is already exported.\n    if (environment.containsKey('SDKROOT')) {\n      return environment['SDKROOT'];"
  },
  {
    "id" : "858efa36-03df-40e7-afce-7f14c6c17f50",
    "prId" : 58137,
    "prUrl" : "https://github.com/flutter/flutter/pull/58137#pullrequestreview-422052030",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf6dd573-a40b-4878-bc2f-eef9bf0979e3",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Can you check/assert somehow that you're not blowing away your handle to an active process?",
        "createdAt" : "2020-05-29T18:25:02Z",
        "updatedAt" : "2020-06-01T18:31:45Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "56499915-dd5f-41a1-8d83-b0f502e853ac",
        "parentId" : "bf6dd573-a40b-4878-bc2f-eef9bf0979e3",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Done.",
        "createdAt" : "2020-06-01T17:47:08Z",
        "updatedAt" : "2020-06-01T18:31:45Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "29bdefb568206cb40f4dc577d2928dc78b71d11a",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +337,341 @@      // Run in interactive mode (via script) to convince\n      // xcdevice it has a terminal attached in order to redirect stdout.\n      _deviceObservationProcess = await _processUtils.start(\n        <String>[\n          'script',"
  },
  {
    "id" : "730102f4-46fa-45e6-a301-990863d2659d",
    "prId" : 58137,
    "prUrl" : "https://github.com/flutter/flutter/pull/58137#pullrequestreview-421284119",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43c71f48-f21e-42b0-8cbe-6b20a6ec3a27",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "This was the piece I was missing when I wasn't closing `_deviceIdentifierByEvent` on the last commit.  I want polling to be able to be started, stopped, and re-started.  Before, I was avoiding closing it so it could be re-listened to, but I guess it should be closed when no one is listening.\r\n\r\nReally I want to be able to pause the subscription and resume it, but the `pause()` documentation says:\r\n```\r\n   * To avoid buffering events on a broadcast stream, it is better to\r\n   * cancel this subscription, and start to listen again when events\r\n   * are needed, if the intermediate events are not important.\r\n```",
        "createdAt" : "2020-05-29T21:00:12Z",
        "updatedAt" : "2020-06-01T18:31:45Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "29bdefb568206cb40f4dc577d2928dc78b71d11a",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +250,254 @@      onCancel: _stopObservingTetheredIOSDevices,\n    );\n  }\n\n  bool get isInstalled => _xcode.isInstalledAndMeetsVersionCheck && xcdevicePath != null;"
  },
  {
    "id" : "28ee4373-6085-48fc-9386-06e17a74d2b7",
    "prId" : 58137,
    "prUrl" : "https://github.com/flutter/flutter/pull/58137#pullrequestreview-421285670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40a8efd1-e9b8-4574-ae94-5edafccc4633",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "I also changed this to `--both` to reflect what I just did in https://github.com/flutter/flutter/pull/58257/files#diff-8d108d6a887a4f5b74f7c7d77003e795R97.  Wireless devices aren't being sufaced yet, so if one attaches it will kick off an unnecessary fetch.  Should be rare.",
        "createdAt" : "2020-05-29T21:03:02Z",
        "updatedAt" : "2020-06-01T18:31:45Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "29bdefb568206cb40f4dc577d2928dc78b71d11a",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +346,350 @@          'xcdevice',\n          'observe',\n          '--both',\n        ],\n      );"
  },
  {
    "id" : "0dc79395-b23a-4af4-b306-db4800bf2d9f",
    "prId" : 58137,
    "prUrl" : "https://github.com/flutter/flutter/pull/58137#pullrequestreview-422062488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b74d1c30-531c-4883-a7c8-5ae107bb52d6",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "should this be `== null` ? This gets called from the `listen` from `_setupDeviceIdentifierByEventStream`, but the whenDone nulls out the process: https://github.com/flutter/flutter/pull/58137/files#diff-ebc648b2067d73f2af30539f5d3a59faR389",
        "createdAt" : "2020-06-01T17:54:59Z",
        "updatedAt" : "2020-06-01T18:31:45Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "eea51858-e818-408b-9260-555bbb21d082",
        "parentId" : "b74d1c30-531c-4883-a7c8-5ae107bb52d6",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "It should always be null since as you saw the `whenDone` should handle nulling it out.\r\nhttps://github.com/flutter/flutter/pull/58137#discussion_r432661646\r\n> Can you check/assert somehow that you're not blowing away your handle to an active process?\r\n\r\nI think the concern is there would be a logic error where `_startObservingTetheredIOSDevices` could be called twice without the process exiting.",
        "createdAt" : "2020-06-01T18:00:30Z",
        "updatedAt" : "2020-06-01T18:31:45Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "140e9042-83cc-4ff1-9a27-1b49a6fedccf",
        "parentId" : "b74d1c30-531c-4883-a7c8-5ae107bb52d6",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Oops, I forgot how != worked briefly...",
        "createdAt" : "2020-06-01T18:02:09Z",
        "updatedAt" : "2020-06-01T18:31:45Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "29bdefb568206cb40f4dc577d2928dc78b71d11a",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +331,335 @@  Future<void> _startObservingTetheredIOSDevices() async {\n    try {\n      if (_deviceObservationProcess != null) {\n        throw Exception('xcdevice observe restart failed');\n      }"
  }
]