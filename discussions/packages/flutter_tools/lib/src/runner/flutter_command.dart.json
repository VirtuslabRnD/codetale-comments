[
  {
    "id" : "c6747c1c-1511-447a-bf75-244a0df1c6cf",
    "prId" : 3384,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bfe3868-e13b-4a64-affe-f88843ae4131",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "having these be flags means it's easy to end up specifying mutually-exclusive flags.\nMaybe `--build-mode=debug` or some such?\nBut that's non-ergonomic.\nIf we stick with flags, we should be very elaborate in our handling of the situation where mutually exclusive flags are given at the same time.\n",
        "createdAt" : "2016-04-18T21:53:22Z",
        "updatedAt" : "2016-04-18T23:29:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e88f2076-539c-44eb-8ab3-726033f7d9dd",
        "parentId" : "0bfe3868-e13b-4a64-affe-f88843ae4131",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "`--build-mode=debug` would be clearer but more to type. I'll add some checks in the `getBuildMode()` call below to handle mutually exclusive flags.\n",
        "createdAt" : "2016-04-18T23:16:42Z",
        "updatedAt" : "2016-04-18T23:29:26Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "a71b1cfacf78a054bbb445d24a3275d2fe584849",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +62,66 @@\n  void addBuildModeFlags() {\n    argParser.addFlag('debug',\n      negatable: false,\n      help: 'Build a debug version of your app (the default).');"
  },
  {
    "id" : "c280d0b0-f656-4d85-9b5a-8f516436d0cf",
    "prId" : 9597,
    "prUrl" : "https://github.com/flutter/flutter/pull/9597#pullrequestreview-34764128",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53a88895-7c14-4809-a3ec-c1603f4f2d7c",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "By starting this here, we'll record the time it takes to update the cache if needed (which is done in `verifyThenRunCommand()`), which will mess with the analytics results...",
        "createdAt" : "2017-04-26T06:10:48Z",
        "updatedAt" : "2017-04-27T21:08:46Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "9b7b913a-84a4-4e10-abb9-9abf05a64b96",
        "parentId" : "53a88895-7c14-4809-a3ec-c1603f4f2d7c",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Ditto. I think that's fine as a metric to optimize for.",
        "createdAt" : "2017-04-26T07:31:17Z",
        "updatedAt" : "2017-04-27T21:08:46Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "b326bed32de992ce24f6c8a6cd4c45ea48eb052d",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +149,153 @@  @override\n  Future<Null> run() async {\n    final DateTime startTime = clock.now();\n\n    if (flutterUsage.isFirstRun)"
  },
  {
    "id" : "aa6b152c-081c-4f87-8864-e0bfa50b8cd5",
    "prId" : 10902,
    "prUrl" : "https://github.com/flutter/flutter/pull/10902#pullrequestreview-47209135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00835c9e-dfce-44f9-a8d4-d32dd38ffadf",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "maybe a test for this? ",
        "createdAt" : "2017-06-29T18:19:37Z",
        "updatedAt" : "2017-07-10T15:56:22Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c98952438cde1a2cc68917b4a791d184e2c4444",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +212,216 @@    if (commandPath != null) {\n      final Map<String, String> additionalUsageValues = await usageValues;\n      flutterUsage.sendCommand(commandPath, parameters: additionalUsageValues);\n    }\n"
  },
  {
    "id" : "db996789-f24b-4e4e-9af5-799ed99d8573",
    "prId" : 10902,
    "prUrl" : "https://github.com/flutter/flutter/pull/10902#pullrequestreview-48949639",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bad4f453-eb4e-460b-9042-0bcd6d9b3fba",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Is usageValue perhaps a bit vague? Since it's in FlutterCommandResult, we might still want to mention that it's analytics related. Perhaps this should replace the original name of 'analyticsParameter' or 'analyticsDimensions' or some such. ",
        "createdAt" : "2017-06-29T18:21:26Z",
        "updatedAt" : "2017-07-10T15:56:22Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "7ad6c4b9-cebc-4612-a27a-9ebbef7aa676",
        "parentId" : "bad4f453-eb4e-460b-9042-0bcd6d9b3fba",
        "authorId" : "7b783ce6-a0fd-4147-a5d9-e1f619149d45",
        "body" : "the other variable was usagePath, so I kept with \"usage\". We could refactor both names?",
        "createdAt" : "2017-07-10T15:55:36Z",
        "updatedAt" : "2017-07-10T15:56:22Z",
        "lastEditedBy" : "7b783ce6-a0fd-4147-a5d9-e1f619149d45",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c98952438cde1a2cc68917b4a791d184e2c4444",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +140,144 @@\n  /// Additional usage values to be sent with the usage ping.\n  Future<Map<String, String>> get usageValues async => const <String, String>{};\n\n  /// Runs this command."
  },
  {
    "id" : "33c79f8c-9679-4753-9059-34befe27e523",
    "prId" : 12219,
    "prUrl" : "https://github.com/flutter/flutter/pull/12219#pullrequestreview-66920335",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a8dd9ee-b614-494f-a031-af3631f4c03b",
        "parentId" : null,
        "authorId" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "body" : "These could be declared top-level, so you wouldn't need the `FlutterOptions.` prefix. Your call.\r\nWould it make sense to add `preview-dart-2` too?",
        "createdAt" : "2017-10-03T19:23:57Z",
        "updatedAt" : "2017-10-03T19:26:07Z",
        "lastEditedBy" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "tags" : [
        ]
      },
      {
        "id" : "3256fbfa-2cb5-4c4a-9849-291fccc2d85e",
        "parentId" : "1a8dd9ee-b614-494f-a031-af3631f4c03b",
        "authorId" : "48f8d3e5-55d5-44a0-a521-e9a89f32d373",
        "body" : "I would prefer to keep these constants in a separate name space rather than making them top-level. I think it makes code a little bit more readable. Also, this approach makes possible to add constants for short options like 'release' or 'target' without introducing top-level constants with such common names.\r\n\r\nIt may be reasonable to add constants for other options such as 'preview-dart-2'. However, I think it is better to do it separately.",
        "createdAt" : "2017-10-03T19:53:13Z",
        "updatedAt" : "2017-10-03T19:54:25Z",
        "lastEditedBy" : "48f8d3e5-55d5-44a0-a521-e9a89f32d373",
        "tags" : [
        ]
      },
      {
        "id" : "e0007601-dd6a-42ce-8259-69982a0f7202",
        "parentId" : "1a8dd9ee-b614-494f-a031-af3631f4c03b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "If they're not global you can probably remove the `k` prefix. The prefix is mostly about making constants group together in documentation, autocomplete, and the like.",
        "createdAt" : "2017-10-03T22:44:11Z",
        "updatedAt" : "2017-10-03T22:44:11Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3c8d0f0d736ff4e4aac7ddaf03e50c015730d0c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +58,62 @@class FlutterOptions {\n  static const String kExtraFrontEndOptions = 'extra-front-end-options';\n  static const String kExtraGenSnapshotOptions = 'extra-gen-snapshot-options';\n}\n"
  },
  {
    "id" : "075954f2-b0f4-4d43-9ddd-793c9b697ee6",
    "prId" : 12258,
    "prUrl" : "https://github.com/flutter/flutter/pull/12258#pullrequestreview-65278253",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53b5c45d-4b7d-46b6-9a80-e3341e2b4504",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "test?",
        "createdAt" : "2017-09-26T16:29:43Z",
        "updatedAt" : "2017-09-26T16:29:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8ad88e38a9d2f188c2ebf59587104b96c79c922",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +348,352 @@\n      // Validate the current package map only if we will not be running \"pub get\" later.\n      if (parent?.name != 'packages' && !(_usesPubOption && argResults['pub'])) {\n        final String error = new PackageMap(PackageMap.globalPackagesPath).checkValid();\n        if (error != null)"
  },
  {
    "id" : "b54633cd-827a-4825-bf24-a2166f28eb42",
    "prId" : 13857,
    "prUrl" : "https://github.com/flutter/flutter/pull/13857#pullrequestreview-86290211",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e406a69-56b5-4d58-9c4c-f80414c37667",
        "parentId" : null,
        "authorId" : "6fe75f2e-2c3d-4d6a-800e-03a595a5d5aa",
        "body" : "The default value of allowTrailingOptions has flipped.  This restores the old behavior.",
        "createdAt" : "2018-01-03T02:54:04Z",
        "updatedAt" : "2018-01-10T21:52:09Z",
        "lastEditedBy" : "6fe75f2e-2c3d-4d6a-800e-03a595a5d5aa",
        "tags" : [
        ]
      }
    ],
    "commit" : "04135b5ab6fb01c4e62a901fa08df260d3320245",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +65,69 @@  @override\n  ArgParser get argParser => _argParser;\n  final ArgParser _argParser = new ArgParser(allowTrailingOptions: false);\n\n  @override"
  },
  {
    "id" : "7f5d2578-3ab1-453f-aff7-fa78ad11d6da",
    "prId" : 20574,
    "prUrl" : "https://github.com/flutter/flutter/pull/20574#pullrequestreview-146595023",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4792e81-eca0-49be-acc6-42053bfb791c",
        "parentId" : null,
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Do you need a check that enforces compilationTraceFilePath flag if dynamicFlag is specified? Otherwise, what is the default value for compilationTraceFilePath?",
        "createdAt" : "2018-08-15T19:34:45Z",
        "updatedAt" : "2018-08-15T19:34:45Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "5e1343e9-0833-4a32-bb3e-7b7d52207108",
        "parentId" : "a4792e81-eca0-49be-acc6-42053bfb791c",
        "authorId" : "cebd9d94-b15e-4cc3-a8fb-3b59bef95c73",
        "body" : "compilationTraceFilePath is always optional, not required when --dynamic is used. Precompilation will be disabled by default.",
        "createdAt" : "2018-08-15T19:41:55Z",
        "updatedAt" : "2018-08-15T19:42:26Z",
        "lastEditedBy" : "cebd9d94-b15e-4cc3-a8fb-3b59bef95c73",
        "tags" : [
        ]
      },
      {
        "id" : "b6083cc9-930a-4106-89ef-ffa1b7092821",
        "parentId" : "a4792e81-eca0-49be-acc6-42053bfb791c",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Where do we initialize to some default value? Which seem to be `trace.txt` in the past",
        "createdAt" : "2018-08-15T19:46:29Z",
        "updatedAt" : "2018-08-15T19:46:29Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "cfc7f0a5-867f-4fe0-96ab-b825e21e4ad4",
        "parentId" : "a4792e81-eca0-49be-acc6-42053bfb791c",
        "authorId" : "cebd9d94-b15e-4cc3-a8fb-3b59bef95c73",
        "body" : "The default is null, which will cause precompilation to be disabled.",
        "createdAt" : "2018-08-15T19:54:37Z",
        "updatedAt" : "2018-08-15T19:54:37Z",
        "lastEditedBy" : "cebd9d94-b15e-4cc3-a8fb-3b59bef95c73",
        "tags" : [
        ]
      },
      {
        "id" : "da671e5f-ce61-4f32-81f6-a73a1a59238c",
        "parentId" : "a4792e81-eca0-49be-acc6-42053bfb791c",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Okay, got it. Thanks.",
        "createdAt" : "2018-08-15T19:57:08Z",
        "updatedAt" : "2018-08-15T19:57:08Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "326c1de37d54d22b508808a23e1aa87dd022705e",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +475,479 @@      throw new ToolExit('Error: --precompile is not allowed when --debug is specified.');\n    if (compilationTraceFilePath != null && !dynamicFlag)\n      throw new ToolExit('Error: --precompile is allowed only when --dynamic is specified.');\n  }\n"
  },
  {
    "id" : "091266ad-1573-4814-9486-d60c55aa2c89",
    "prId" : 20646,
    "prUrl" : "https://github.com/flutter/flutter/pull/20646#pullrequestreview-146906031",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9524c83d-77e9-46fd-a374-5c9f4d8db843",
        "parentId" : null,
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Maybe just:\r\n```\r\nfinal bool dynamicFlag = argResults['dynamic'] ?? false;\r\n```\r\nsince Map returns null when a key isn't present, and either way we'd never want `dynamicFlag` to be null.\r\n",
        "createdAt" : "2018-08-15T22:25:18Z",
        "updatedAt" : "2018-08-15T22:25:32Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "ae8513ea-a5f8-4091-8b88-fdf490aacfd2",
        "parentId" : "9524c83d-77e9-46fd-a374-5c9f4d8db843",
        "authorId" : "cebd9d94-b15e-4cc3-a8fb-3b59bef95c73",
        "body" : "Unfortunately, this isn't a regular map. It overrides [] and will throw if flag doesn't exist. So this is the patterns that's used everywhere for argResults.",
        "createdAt" : "2018-08-16T15:43:29Z",
        "updatedAt" : "2018-08-16T15:43:30Z",
        "lastEditedBy" : "cebd9d94-b15e-4cc3-a8fb-3b59bef95c73",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d5a36e61a05789db289ce91752a03a37882b5a9",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +171,175 @@    final bool dynamicFlag = argParser.options.containsKey('dynamic')\n        ? argResults['dynamic']\n        : false;\n    if (argResults['debug'])\n      return BuildMode.debug;"
  },
  {
    "id" : "950a8916-7c55-447e-ae60-9f47c15f203b",
    "prId" : 26715,
    "prUrl" : "https://github.com/flutter/flutter/pull/26715#pullrequestreview-193833808",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44c7e423-15b7-425c-a74c-8529a8a7b982",
        "parentId" : null,
        "authorId" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "body" : "Do we have to concat '--enable-experiment=' for each flag?\r\nI was wondering if something like this would work\r\nString experimentFlags;\r\nfor (String expFlag in argResults[FlutterOptions.kEnableExperiment]) {\r\n  if (experimentFlags != null) {\r\n    experimentFlags +=  ',' + flag;\r\n  } else {\r\n    experimentFlags = flag;\r\n  }\r\n}\r\n\r\nif (extraFrontEndOptions != null) {\r\n  extraFrontEndOptions += ',' + '--enable-experiment=' + flag;\r\n} else {\r\n  extraFrontEndOptions = '--enable-experiment=' + flag;\r\n}",
        "createdAt" : "2019-01-17T20:30:48Z",
        "updatedAt" : "2019-01-17T20:31:36Z",
        "lastEditedBy" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "tags" : [
        ]
      },
      {
        "id" : "c0e3b8cc-89fc-4219-b606-4a3ffebf65c7",
        "parentId" : "44c7e423-15b7-425c-a74c-8529a8a7b982",
        "authorId" : "8e8333dc-d602-462c-b117-d9b30aeff77f",
        "body" : "That was my initial approach, but extra-front-end-options is also delimited by ','. So \"--extra-front-end-options=--enable-experiment=abc,def\" would be passed to the front end as 2 separate flags: \"--enable-experiment=abc\" and \"def\"",
        "createdAt" : "2019-01-17T20:43:25Z",
        "updatedAt" : "2019-01-17T20:43:26Z",
        "lastEditedBy" : "8e8333dc-d602-462c-b117-d9b30aeff77f",
        "tags" : [
        ]
      },
      {
        "id" : "d79a0f6a-31bd-4527-9f66-94f5e35fe3c7",
        "parentId" : "44c7e423-15b7-425c-a74c-8529a8a7b982",
        "authorId" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "body" : "Thanks for the clarification.",
        "createdAt" : "2019-01-17T20:48:04Z",
        "updatedAt" : "2019-01-17T20:48:04Z",
        "lastEditedBy" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "074a27bfd653e9d20b794f6e8dd67c0b92730c43",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +398,402 @@        argResults[FlutterOptions.kEnableExperiment] != null) {\n      for (String expFlag in argResults[FlutterOptions.kEnableExperiment]) {\n        final String flag = '--enable-experiment=' + expFlag;\n        if (extraFrontEndOptions != null) {\n          extraFrontEndOptions += ',' + flag;"
  },
  {
    "id" : "eb4dc377-4562-4929-8282-e24f4c62a09b",
    "prId" : 27374,
    "prUrl" : "https://github.com/flutter/flutter/pull/27374#pullrequestreview-198875116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "980e0724-c976-4459-a1a9-82b0d7be3a22",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I've updated getBuildMode to not throw if used in a command that does not add the debug, profile, or release arguments.",
        "createdAt" : "2019-01-31T23:59:49Z",
        "updatedAt" : "2019-02-08T22:13:53Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "14ebd153811e31f13c23dabb2043860f819e935a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +324,328 @@\n  BuildMode getBuildMode() {\n    bool debug;\n    bool profile;\n    bool release;"
  },
  {
    "id" : "63434129-f91c-46e8-9b3d-120a98d4b03a",
    "prId" : 27374,
    "prUrl" : "https://github.com/flutter/flutter/pull/27374#pullrequestreview-198875294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ac291c1-8712-42a3-9983-0b47c9646655",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This and below was reported to me as a type error.",
        "createdAt" : "2019-02-01T00:00:33Z",
        "updatedAt" : "2019-02-08T22:13:53Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "14ebd153811e31f13c23dabb2043860f819e935a",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +404,408 @@    }\n\n    List<String> extraFrontEndOptions =\n        argParser.options.containsKey(FlutterOptions.kExtraFrontEndOptions)\n            ? argResults[FlutterOptions.kExtraFrontEndOptions]"
  },
  {
    "id" : "8e7315e1-2b07-452b-9a0b-9c7a36263fc2",
    "prId" : 31505,
    "prUrl" : "https://github.com/flutter/flutter/pull/31505#pullrequestreview-229739515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7c10039-0d3c-4fd4-8d29-e546dc847494",
        "parentId" : null,
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "Given that the entire switch statement is identical between the two methods, how about extracting it to a helper method that takes the target platform as a param?",
        "createdAt" : "2019-04-23T19:02:31Z",
        "updatedAt" : "2019-04-23T19:51:34Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      }
    ],
    "commit" : "836391d0895b14e00e567fd9ae9b6bec6d0be04a",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +625,629 @@      if (developmentArtifact != null) {\n        artifacts.add(developmentArtifact);\n      }\n    }\n    return artifacts;"
  },
  {
    "id" : "4c56a773-ee32-444f-8dbd-d76409d2b05d",
    "prId" : 34802,
    "prUrl" : "https://github.com/flutter/flutter/pull/34802#pullrequestreview-252442368",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ecd7468-bc67-47a1-85f0-3be43e671af8",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "It would be nice to add a test that verifies this behavior including that the error messages shown are as expected.",
        "createdAt" : "2019-06-20T17:16:03Z",
        "updatedAt" : "2019-06-20T19:29:30Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "b7ed57b9-68ac-45dc-b685-40bd582cad7a",
        "parentId" : "9ecd7468-bc67-47a1-85f0-3be43e671af8",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I refactored this logic into a top level function that is now tested",
        "createdAt" : "2019-06-20T17:53:16Z",
        "updatedAt" : "2019-06-20T19:29:30Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7d27d158b6cf303b313828400992df0f298581f",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +536,540 @@      devices = filterDevices(devices);\n    }\n\n    if (devices.isEmpty) {\n      printStatus(userMessages.flutterNoSupportedDevices);"
  },
  {
    "id" : "e27b0735-7805-4865-9730-a7274f2b34b9",
    "prId" : 40191,
    "prUrl" : "https://github.com/flutter/flutter/pull/40191#pullrequestreview-287602834",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dea4c21f-d5f9-40be-a550-d7aa03633819",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "How about --web-hostname and --web-port ?",
        "createdAt" : "2019-09-12T17:43:20Z",
        "updatedAt" : "2019-09-12T17:43:57Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "2edbba3b-3226-47ee-afe8-4a13df5fe4a3",
        "parentId" : "dea4c21f-d5f9-40be-a550-d7aa03633819",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "SGTM",
        "createdAt" : "2019-09-12T17:53:49Z",
        "updatedAt" : "2019-09-12T17:53:50Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9afff8c9293c808c359fb2333d8cf6ed22539a30",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +134,138 @@\n  void usesWebOptions({ bool hide = true }) {\n    argParser.addOption('hostname',\n      defaultsTo: 'localhost',\n      help: 'The hostname to serve web application on.',"
  },
  {
    "id" : "b1f5fc66-cda2-4ec0-9df7-b78e11c38e47",
    "prId" : 40453,
    "prUrl" : "https://github.com/flutter/flutter/pull/40453#pullrequestreview-288272193",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17b5e8c3-56be-4cfc-ab1a-03c76d3a84da",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "My only non-nit for this: should we start by defaulting this to false to make it opt in for now? That would give people a chance to try this in the wild before turning it on. \r\n\r\nIf it's passing all the plugins it's probably ok to just go ahead with, and seems like a really great thing for our users though.  WDYT?",
        "createdAt" : "2019-09-13T21:01:32Z",
        "updatedAt" : "2019-09-13T23:16:30Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "a82f6b96-14df-4880-98dc-5d7c5d872150",
        "parentId" : "17b5e8c3-56be-4cfc-ab1a-03c76d3a84da",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "Discussed offline. It's low risk to turn it on vs the value of getting immediate feedback if someone runs into an issue.",
        "createdAt" : "2019-09-13T22:08:09Z",
        "updatedAt" : "2019-09-13T23:16:30Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "a920d6978038119dfcd6191119038462d1a2ec63",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +281,285 @@    argParser.addFlag('shrink',\n      negatable: true,\n      defaultsTo: true,\n      help: 'Whether to enable code shrinking on release mode.'\n            'When enabling shrinking, you also benefit from obfuscation, '"
  },
  {
    "id" : "8971509e-54fe-4969-8757-740f5a147b52",
    "prId" : 44027,
    "prUrl" : "https://github.com/flutter/flutter/pull/44027#pullrequestreview-316389625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e88f572-04fa-4eae-8c1c-bc04d8d7a2f3",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Not sure if this is the right place, but a check that only one of --observatory-port or --host-vmservice-port is set would be good.",
        "createdAt" : "2019-11-04T21:51:22Z",
        "updatedAt" : "2019-11-13T17:37:40Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "b29526b6-1844-421b-88f3-82dbe7a4ab59",
        "parentId" : "3e88f572-04fa-4eae-8c1c-bc04d8d7a2f3",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Done",
        "createdAt" : "2019-11-13T16:41:33Z",
        "updatedAt" : "2019-11-13T17:37:40Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d86dc9159fdcd6e53bdd0d1236336502cb4ea8b",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +243,247 @@  int get hostVmservicePort {\n    if (!_usesPortOption ||\n        argResults['observatory-port'] == null ||\n        argResults['host-vmservice-port'] == null) {\n      return null;"
  },
  {
    "id" : "61260bdc-a3d8-4e24-8108-d56f7e40e3b8",
    "prId" : 44853,
    "prUrl" : "https://github.com/flutter/flutter/pull/44853#pullrequestreview-316620517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2d3f6f0-aa71-4945-b6ad-f4a56fde2653",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "The bug was here: This was an `||` before, which meant this early returned as null if only one was passed",
        "createdAt" : "2019-11-13T23:10:05Z",
        "updatedAt" : "2019-11-13T23:10:05Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa67e77ddc8adad4e334fc54124dd1b6d068beb0",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +243,247 @@  int get hostVmservicePort {\n    if (!_usesPortOption ||\n        (argResults['observatory-port'] == null &&\n      argResults['host-vmservice-port'] == null)) {\n      return null;"
  },
  {
    "id" : "d3cda81d-849c-4a0b-9cf9-d44c6bc8860e",
    "prId" : 48548,
    "prUrl" : "https://github.com/flutter/flutter/pull/48548#pullrequestreview-341305289",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85a6a620-0faf-4a2f-9bb5-d4663cfe99d0",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Maybe we could add something in here about which directories we traversed and failed to find?",
        "createdAt" : "2020-01-10T17:15:00Z",
        "updatedAt" : "2020-01-27T20:53:37Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "4067faa8538d543a3f60cb656c7bb85cef4b3c5f",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +716,720 @@        final Directory nextCurrent = globals.fs.currentDirectory.parent;\n        if (nextCurrent == null || nextCurrent.path == globals.fs.currentDirectory.path) {\n          throw ToolExit(userMessages.flutterNoPubspec);\n        }\n        globals.fs.currentDirectory = nextCurrent;"
  },
  {
    "id" : "b923ff2b-f7f5-4661-83d5-6c658a0b5881",
    "prId" : 48548,
    "prUrl" : "https://github.com/flutter/flutter/pull/48548#pullrequestreview-345029919",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28f5af6e-8a65-41cc-b2d7-9e543077bb2c",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "If this loop succeeds, it would probably help if we printed a status saying what directory we are using as the cwd.",
        "createdAt" : "2020-01-10T17:15:34Z",
        "updatedAt" : "2020-01-27T20:53:37Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "fd7f3789-c7bc-46c8-877a-cc48bf6597c8",
        "parentId" : "28f5af6e-8a65-41cc-b2d7-9e543077bb2c",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Only if we are _not_ using the cwd we started with ",
        "createdAt" : "2020-01-10T17:16:07Z",
        "updatedAt" : "2020-01-27T20:53:37Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "5e5b0b65-338b-4b15-be87-a13d89755fe7",
        "parentId" : "28f5af6e-8a65-41cc-b2d7-9e543077bb2c",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "We should not ever print non-actionable messages, see https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#only-log-actionable-messages-to-the-console",
        "createdAt" : "2020-01-10T17:25:05Z",
        "updatedAt" : "2020-01-27T20:53:37Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "32f9281a-59f1-4c40-a57f-1de6a5b07138",
        "parentId" : "28f5af6e-8a65-41cc-b2d7-9e543077bb2c",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "The action would be to change your cwd if something has gone wrong, right?",
        "createdAt" : "2020-01-10T17:34:53Z",
        "updatedAt" : "2020-01-27T20:53:37Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "af995967-c6ef-4c9d-8370-40b0bc765810",
        "parentId" : "28f5af6e-8a65-41cc-b2d7-9e543077bb2c",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Imagine, for example, the following directory structures:\r\n\r\n```\r\nsrc/\r\n  pubspec.yaml           // put here last week when I didn't trust git to not lose it on me\r\n  flutter_app_1/\r\n    pubspec.yaml\r\n    android/\r\n  java_app_1/\r\n    // no pubspec.yaml\r\n  lib/\r\n    main.dart\r\n```\r\n\r\nOne day I do `flutter run` in `java_app_1` and to my surprise weird things happen. I would have found it really helpful to know that it was because the tool found a stray pubspec.yaml that I left laying around on my FS.\r\n\r\nAlternatively, imagine I did `flutter run -t ../lib/main.dart` from the `android` directory. And imagine that, for some crazy reason, I have a `../../lib/main.dart` present in my filesystem.  The log message would have made it clearer which main.dart was actually getting used.",
        "createdAt" : "2020-01-10T17:41:02Z",
        "updatedAt" : "2020-01-27T20:53:37Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "15e1a1b1-489c-491a-9dff-ce3895e1e725",
        "parentId" : "28f5af6e-8a65-41cc-b2d7-9e543077bb2c",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "It would change the cwd of the dart process, but nothing else is modified.",
        "createdAt" : "2020-01-10T17:42:24Z",
        "updatedAt" : "2020-01-27T20:53:37Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "0d34d8a0-123f-4c79-ab35-7c999f28a430",
        "parentId" : "28f5af6e-8a65-41cc-b2d7-9e543077bb2c",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Won't the dart process at least potentially be resolving relative paths, such as the `-t` option to flutter run?",
        "createdAt" : "2020-01-10T17:48:44Z",
        "updatedAt" : "2020-01-27T20:53:37Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "9c7820f7-d9bf-4d15-97ff-06b8f48e24f8",
        "parentId" : "28f5af6e-8a65-41cc-b2d7-9e543077bb2c",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Sure, but those might be wrong anyway. At any rate, we're still strictly better than we were before:\r\n\r\n1. flutter run  (in lib/): failed\r\n2. flutter run --target=main.dart (in lib/): failed\r\n\r\nAfter:\r\n\r\n1. flutter run (in lib/): passed\r\n2. flutter run --target=main.dart (in lib/): failed\r\n\r\n\r\nIf this leads to confusion, we can always tweak the error messaging",
        "createdAt" : "2020-01-10T18:16:26Z",
        "updatedAt" : "2020-01-27T20:53:37Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "30603400-4815-420a-9cca-df023eaf7922",
        "parentId" : "28f5af6e-8a65-41cc-b2d7-9e543077bb2c",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "What's the output of `flutter run --target=main.dart` in `lib/` with this patch?",
        "createdAt" : "2020-01-10T18:29:02Z",
        "updatedAt" : "2020-01-27T20:53:37Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "fcdb8f90-3681-46ea-b928-e7f6b28ade97",
        "parentId" : "28f5af6e-8a65-41cc-b2d7-9e543077bb2c",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Target file \"main.dart\" not found.",
        "createdAt" : "2020-01-19T22:06:11Z",
        "updatedAt" : "2020-01-27T20:53:37Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "fde4cb1f-5f7c-438b-89ab-ad72023b651c",
        "parentId" : "28f5af6e-8a65-41cc-b2d7-9e543077bb2c",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Okay, I'll back out my comment on non-actionable message :) . Like you suggested, we status log to the new CWD if it is updated, then the error message above is more interpretable",
        "createdAt" : "2020-01-19T22:09:54Z",
        "updatedAt" : "2020-01-27T20:53:37Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4067faa8538d543a3f60cb656c7bb85cef4b3c5f",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +718,722 @@          throw ToolExit(userMessages.flutterNoPubspec);\n        }\n        globals.fs.currentDirectory = nextCurrent;\n        changedDirectory = true;\n      }"
  }
]