[
  {
    "id" : "eba5489d-0b69-4043-8137-ea222859be31",
    "prId" : 7061,
    "prUrl" : "https://github.com/flutter/flutter/pull/7061#pullrequestreview-10860853",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a88633f-acb7-4d1f-bf3e-d2dba869fc7a",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "consider renaming `nextUri` to `discover`",
        "createdAt" : "2016-11-29T17:14:43Z",
        "updatedAt" : "2016-12-01T01:11:37Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "88f52a56-13f0-4e57-9d69-eb399e3729ff",
        "parentId" : "1a88633f-acb7-4d1f-bf3e-d2dba869fc7a",
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "Per our discussion, the name `nextUri` is more indicative of what this method does, especially given the fact that the class is named `ProtocolDiscovery`. ",
        "createdAt" : "2016-11-30T22:10:19Z",
        "updatedAt" : "2016-12-01T01:11:37Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4d39b0379cdd667e3822d069709d6d2c6c6d947",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +27,31 @@  /// The [Future] returned by this function will complete when the next service\n  /// Uri is found.\n  Future<Uri> nextUri() => _completer.future;\n\n  void cancel() {"
  },
  {
    "id" : "001c7c2d-eb2e-4c90-bf24-ec5e8f4ddd82",
    "prId" : 10092,
    "prUrl" : "https://github.com/flutter/flutter/pull/10092#pullrequestreview-38416980",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94042c8f-3203-4b61-9cff-8b0cf426a08d",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Do we want to throw here or keep looking for a match?",
        "createdAt" : "2017-05-16T12:21:41Z",
        "updatedAt" : "2017-05-16T15:06:31Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "5bda0681-0990-4813-a829-36de85f544be",
        "parentId" : "94042c8f-3203-4b61-9cff-8b0cf426a08d",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "My thought was that if we ever see \"Observatory listening on http://\" and can't parse the associated URI, it's most likely because something went wrong, and we should throw.",
        "createdAt" : "2017-05-16T15:05:58Z",
        "updatedAt" : "2017-05-16T15:06:31Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ee65516c62a8723039df250bc1e9b1f12c33a27",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +76,80 @@        uri = Uri.parse(line.substring(index + prefix.length));\n      } catch (error) {\n        _stopScrapingLogs();\n        _completer.completeError(error);\n      }"
  },
  {
    "id" : "831567c7-e33d-40f1-abb2-6066b90fab42",
    "prId" : 10092,
    "prUrl" : "https://github.com/flutter/flutter/pull/10092#pullrequestreview-38448419",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2cba99cd-b828-48c8-b6a5-6e0d3bbea1cd",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "grammar nit: tense of \"discovers\" and \"forward\" don't match",
        "createdAt" : "2017-05-16T16:55:11Z",
        "updatedAt" : "2017-05-16T16:55:11Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ee65516c62a8723039df250bc1e9b1f12c33a27",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +10,14 @@import 'globals.dart';\n\n/// Discovers a specific service protocol on a device, and forward the service\n/// protocol device port to the host.\nclass ProtocolDiscovery {"
  },
  {
    "id" : "2e4272e1-6401-4b17-87d3-ae632edb7762",
    "prId" : 42026,
    "prUrl" : "https://github.com/flutter/flutter/pull/42026#pullrequestreview-298252553",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c42e74c-40b0-4c68-bd15-8aa18794b582",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "Specifically only try to `_forwardPort` when asked for, because if mDNS discovery succeeds, we'll never use this.",
        "createdAt" : "2019-10-07T16:23:44Z",
        "updatedAt" : "2019-10-08T23:58:11Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "f54b0ad975cb48bea99429fedf4785b35503bf6c",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +54,58 @@  Future<Uri> get uri async {\n    final Uri rawUri = await _completer.future;\n    return await _forwardPort(rawUri);\n  }\n"
  },
  {
    "id" : "ac5f2b84-fdf0-452d-8af2-5d6bd723d73c",
    "prId" : 42026,
    "prUrl" : "https://github.com/flutter/flutter/pull/42026#pullrequestreview-298256200",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f88f1b79-e8d4-43ce-9958-8528a303a0a5",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Is this change necessary?",
        "createdAt" : "2019-10-07T16:24:56Z",
        "updatedAt" : "2019-10-08T23:58:11Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "172723eb-51d8-4845-b96b-558b70cbce4d",
        "parentId" : "f88f1b79-e8d4-43ce-9958-8528a303a0a5",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Ahh, I missed that you moved `_forwardPort`. my bad!",
        "createdAt" : "2019-10-07T16:29:56Z",
        "updatedAt" : "2019-10-08T23:58:11Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f54b0ad975cb48bea99429fedf4785b35503bf6c",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +52,56 @@  /// Port forwarding is only attempted when this is invoked, in case we never\n  /// need to port forward.\n  Future<Uri> get uri async {\n    final Uri rawUri = await _completer.future;\n    return await _forwardPort(rawUri);"
  },
  {
    "id" : "3590c183-bda5-44a8-aa19-6a394d60930a",
    "prId" : 44637,
    "prUrl" : "https://github.com/flutter/flutter/pull/44637#pullrequestreview-317880252",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a9d0332-6601-4dbb-b158-706d752a6744",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Note that if the listener on `_uriStreamController.stream` doesn't have an `onError` callback, then this error will be thrown into the containing zone.",
        "createdAt" : "2019-11-15T17:17:12Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "43b51864-f365-42c4-bd21-792517732805",
        "parentId" : "9a9d0332-6601-4dbb-b158-706d752a6744",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "I added the `onError` callback. Thanks.",
        "createdAt" : "2019-11-15T21:31:38Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "77bd8ec8fb9af8dc37f1a7bb85e10c0af0c30b75",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +112,116 @@      uri = _getObservatoryUri(line);\n    } on FormatException catch(error, stackTrace) {\n      _uriStreamController.addError(error, stackTrace);\n    }\n    if (uri == null) {"
  },
  {
    "id" : "ea1120ee-ca5e-4737-b2be-7f227aebd59b",
    "prId" : 44637,
    "prUrl" : "https://github.com/flutter/flutter/pull/44637#pullrequestreview-318643873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72bedde7-ba70-4935-90e8-a7cbcf688646",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Is this field used/read anywhere?",
        "createdAt" : "2019-11-18T17:54:30Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "ee9819f0-66d7-4a7d-8f17-5e37914ac6fa",
        "parentId" : "72bedde7-ba70-4935-90e8-a7cbcf688646",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "discussed offline",
        "createdAt" : "2019-11-18T21:32:33Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "77bd8ec8fb9af8dc37f1a7bb85e10c0af0c30b75",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +155,159 @@  S latestLine;\n  int lastExecution;\n  Future<void> throttleFuture;\n\n  return StreamTransformer<S, S>"
  },
  {
    "id" : "044c2ae0-ccdb-4925-bd8d-a7b2a97c6f57",
    "prId" : 44637,
    "prUrl" : "https://github.com/flutter/flutter/pull/44637#pullrequestreview-318515127",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4052e8f2-84bc-47bc-b5df-f1b634ba6e00",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "This will create a separate Future that completes at the desired time for every log line. Futures that complete 'at the same time' aren't guaranteed to complete in any particular order, so the log messages might get re-arranged. That might not be a problem for your current use-case, but it might confuse someone who wants to try to use this for something else.\r\n\r\nI'd suggest trying something simpler. Maybe:\r\n```dart\r\nList<S> latestEvents = <S>[];\r\n...\r\nhandleData: (S value, EventSink<S> sink) {\r\n  latestEvents.add(value);\r\n  if (throttleFuture != null) {\r\n    return;\r\n  }\r\n  throttleFuture = Future<void>\r\n    .delayed(Duration(milliseconds: timeInMilliseconds))\r\n    .whenComplete(() {\r\n      sink.addAll(latestEvents);\r\n      latestEvents.clear();\r\n    });\r\n}\r\n```",
        "createdAt" : "2019-11-18T18:08:21Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "77bd8ec8fb9af8dc37f1a7bb85e10c0af0c30b75",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +169,173 @@          : waitDuration.inMilliseconds - remainingTime;\n\n        throttleFuture ??= Future<void>\n          .delayed(Duration(milliseconds: nextExecutionTime))\n          .whenComplete(() {"
  },
  {
    "id" : "71061655-4cde-47a3-9431-64a0753c0f08",
    "prId" : 44637,
    "prUrl" : "https://github.com/flutter/flutter/pull/44637#pullrequestreview-318643711",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e43c7018-b1c3-4bf3-91cf-8aad20568c8c",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Maybe `_batch` instead of `_throttle` ?",
        "createdAt" : "2019-11-18T18:08:46Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "11860edc-764f-4827-965b-a63cd06e3a49",
        "parentId" : "e43c7018-b1c3-4bf3-91cf-8aad20568c8c",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "discussed offline",
        "createdAt" : "2019-11-18T21:32:13Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "77bd8ec8fb9af8dc37f1a7bb85e10c0af0c30b75",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +148,152 @@/// and arrival times: `a (0ms), b (5ms), c (11ms), d (21ms)`.\n/// The events `c` and `d` will be produced as a result.\nStreamTransformer<S, S> _throttle<S>({\n  @required Duration waitDuration,\n}) {"
  },
  {
    "id" : "cecf8a22-68b0-4ced-8976-fb5dd9a30c93",
    "prId" : 44637,
    "prUrl" : "https://github.com/flutter/flutter/pull/44637#pullrequestreview-318679650",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2c437a0-eb40-454b-9d84-cff62bf27ba2",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Should `lastExecution` be initialized earlier? The way this is written it looks like the first event will always be emitted no earlier than `throttleDuration` ms after the first event comes in. Is that what you had in mind?",
        "createdAt" : "2019-11-18T22:21:26Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "47ed3305-4d1d-44e9-8588-3db3f83af4be",
        "parentId" : "a2c437a0-eb40-454b-9d84-cff62bf27ba2",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "I tried it, but I got very different results since the initial value is time sensitive. The time spent between the initialization and the first event was in some cases greater than the actual wait time.",
        "createdAt" : "2019-11-18T22:41:33Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "77bd8ec8fb9af8dc37f1a7bb85e10c0af0c30b75",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +163,167 @@\n        final int currentTime = DateTime.now().millisecondsSinceEpoch;\n        lastExecution ??= currentTime;\n        final int remainingTime = currentTime - lastExecution;\n        final int nextExecutionTime = remainingTime > waitDuration.inMilliseconds"
  },
  {
    "id" : "bfb038cc-ac37-4ffe-af5f-53e966199089",
    "prId" : 44637,
    "prUrl" : "https://github.com/flutter/flutter/pull/44637#pullrequestreview-318748437",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b798d52c-c7b9-4964-b1db-c0c9f61170a5",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Instead of catching the FormatError below, you can get the same behavior as the non-matching case by using `Uri.tryParse` which returns `null` on failures",
        "createdAt" : "2019-11-19T01:48:54Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "3404b4e3-7e34-4b29-8541-d0c2e290e3b5",
        "parentId" : "b798d52c-c7b9-4964-b1db-c0c9f61170a5",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "Currently, the `Future` completes with the associated error object and stack trace. It might be the case that this isn't needed anymore, but I'd prefer to make behavioral changes like this in a separate PR.",
        "createdAt" : "2019-11-19T02:18:20Z",
        "updatedAt" : "2019-11-19T21:50:27Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "77bd8ec8fb9af8dc37f1a7bb85e10c0af0c30b75",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +102,106 @@    final Match match = _getPatternMatch(line);\n    if (match != null) {\n      return Uri.parse(match[1]);\n    }\n    return null;"
  },
  {
    "id" : "858d0a70-efcf-4bb8-ad40-6292c04dc10a",
    "prId" : 44637,
    "prUrl" : "https://github.com/flutter/flutter/pull/44637#pullrequestreview-321685450",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9607f445-e286-4438-aace-d81e32500756",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "@blasten If you're changing this API's name anyhow, @Hixie  [has pointed out](https://github.com/flutter/flutter/pull/45200#discussion_r348794795) that there is no such thing as a URI, they're all URLs, so maybe this should be called `urls` instead?",
        "createdAt" : "2019-11-22T01:42:46Z",
        "updatedAt" : "2019-11-22T01:43:01Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "c5d2f600-c5e3-4b71-aa36-e9544c80d0b5",
        "parentId" : "9607f445-e286-4438-aace-d81e32500756",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "That makes sense. Thanks!",
        "createdAt" : "2019-11-22T17:06:05Z",
        "updatedAt" : "2019-11-22T17:06:06Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "77bd8ec8fb9af8dc37f1a7bb85e10c0af0c30b75",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +78,82 @@  /// Port forwarding is only attempted when this is invoked,\n  /// for each observatory URI in the stream.\n  Stream<Uri> get uris {\n    return _uriStreamController.stream\n      .transform(_throttle<Uri>("
  },
  {
    "id" : "728e083c-cc9b-4918-a730-c360c7102a78",
    "prId" : 65977,
    "prUrl" : "https://github.com/flutter/flutter/pull/65977#pullrequestreview-490289130",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81664199-61fb-4f47-a80f-7b9dad26a279",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "@blasten does this change look okay to you?  On iOS we don't want the logs to scan forever when no observatory URL is found since it needs to detect the URL wasn't found and fail.",
        "createdAt" : "2020-09-17T06:49:33Z",
        "updatedAt" : "2020-09-17T06:50:05Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "706ef999b766c1bd3f6a5cd58fcf686fa4bf5ca6",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +95,99 @@  /// for each observatory URL in the stream.\n  Stream<Uri> get uris {\n    Stream<Uri> uriStream = _uriStreamController.stream\n      .transform(_throttle<Uri>(\n        waitDuration: throttleDuration,"
  },
  {
    "id" : "dda35bde-014f-4de1-a3ef-2ee1b8a9f1af",
    "prId" : 66092,
    "prUrl" : "https://github.com/flutter/flutter/pull/66092#pullrequestreview-491220524",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e6c62a6-a015-48c6-9d56-58c1ac180c45",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "This was previously waiting and buffering for `duration` before sending the first message.  The observatory URL was discovered faster than 200 ms in my tests, so let's not wait to process it.",
        "createdAt" : "2020-09-18T07:37:04Z",
        "updatedAt" : "2020-09-18T21:59:34Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4e2b0c37b26b2319395894df60fb84b123520df",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +247,251 @@\n        // Always send the first event immediately.\n        final int nextExecutionTime = isFirstMessage || remainingTime > waitDuration.inMilliseconds\n          ? 0\n          : waitDuration.inMilliseconds - remainingTime;"
  }
]