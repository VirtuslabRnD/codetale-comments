[
  {
    "id" : "3aade751-7f07-4b25-8217-2fc840ea9792",
    "prId" : 18830,
    "prUrl" : "https://github.com/flutter/flutter/pull/18830#pullrequestreview-132315108",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7dc52f4-47d1-4b2a-a275-2c5dd3dab52b",
        "parentId" : null,
        "authorId" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "body" : "Please add a comment about what the else clause does, similar to the one in the `if` branch.",
        "createdAt" : "2018-06-27T06:14:08Z",
        "updatedAt" : "2018-06-27T13:46:51Z",
        "lastEditedBy" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "tags" : [
        ]
      },
      {
        "id" : "e5f6b291-9723-45a1-b933-2299b97d41ac",
        "parentId" : "b7dc52f4-47d1-4b2a-a275-2c5dd3dab52b",
        "authorId" : "8d1522ed-5e26-4cce-a4e4-80c6fd1c88d6",
        "body" : "Done",
        "createdAt" : "2018-06-27T07:50:07Z",
        "updatedAt" : "2018-06-27T13:46:51Z",
        "lastEditedBy" : "8d1522ed-5e26-4cce-a4e4-80c6fd1c88d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "72a03bf8cf6ba4d2e98bbd3b94d119ff06eef6ba",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +255,259 @@      fs.path.join(registryClassesDirectory, 'GeneratedPluginRegistrant.m'),\n    );\n  } else {\n    // For a non-module create the GeneratedPluginRegistrant as source files\n    // directly in the ios project."
  },
  {
    "id" : "10cb3bed-f170-4222-bfee-0db50d50c4f1",
    "prId" : 38632,
    "prUrl" : "https://github.com/flutter/flutter/pull/38632#pullrequestreview-275676826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb018a23-0348-4159-9a7f-23d95e83dc3c",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I would restructure this so that we can grab unspecified platforms as well as known platforms.",
        "createdAt" : "2019-08-15T21:21:06Z",
        "updatedAt" : "2019-08-28T19:42:33Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3de247d8d8f7ba858bd5b7b15f7886954fc6afc2",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +89,93 @@          MacOSPlugin.fromYaml(name, platformsYaml[MacOSPlugin.kConfigKey]);\n    }\n\n    return Plugin(\n      name: name,"
  },
  {
    "id" : "9b3d0205-d1f7-432a-bd82-72d66efccbde",
    "prId" : 38632,
    "prUrl" : "https://github.com/flutter/flutter/pull/38632#pullrequestreview-280905925",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6313198-db90-42d0-94e2-f90eb46a81e1",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "nit: you may be able to do this nicely with list operators if you like them e.g:\r\n\r\n```dart\r\nfinal List<Plugin> filteredPlugins = plugins.retainWhere((Plugin p) => p.platforms.containsKey(platform));\r\nreturn filteredPlugins.map((Plugin p) => p.toMap());\r\n```",
        "createdAt" : "2019-08-20T17:57:49Z",
        "updatedAt" : "2019-08-28T19:42:33Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "42a906ab-7775-4944-8a64-452b67282690",
        "parentId" : "c6313198-db90-42d0-94e2-f90eb46a81e1",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This does not return a List, it returns an Iterable",
        "createdAt" : "2019-08-21T21:51:41Z",
        "updatedAt" : "2019-08-28T19:42:33Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "a7fd05ff-f5d5-4bb0-9b1a-2088f836596f",
        "parentId" : "c6313198-db90-42d0-94e2-f90eb46a81e1",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "`.toList`? (and update the first type)",
        "createdAt" : "2019-08-21T22:01:09Z",
        "updatedAt" : "2019-08-28T19:42:33Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "4f5bf641-beb8-410e-9160-3ee4fe211c6d",
        "parentId" : "c6313198-db90-42d0-94e2-f90eb46a81e1",
        "authorId" : "9d0a4821-6e3a-4276-827f-88b855cd3ae1",
        "body" : "I find the current implementation quite easy to follow, leaving it as is.",
        "createdAt" : "2019-08-28T15:14:21Z",
        "updatedAt" : "2019-08-28T19:42:33Z",
        "lastEditedBy" : "9d0a4821-6e3a-4276-827f-88b855cd3ae1",
        "tags" : [
        ]
      }
    ],
    "commit" : "3de247d8d8f7ba858bd5b7b15f7886954fc6afc2",
    "line" : 201,
    "diffHunk" : "@@ -1,1 +274,278 @@\nList<Map<String, dynamic>> _extractPlatformMaps(List<Plugin> plugins, String type) {\n  final List<Map<String, dynamic>> pluginConfigs = <Map<String, dynamic>>[];\n  for (Plugin p in plugins) {\n    final PluginPlatform platformPlugin = p.platforms[type];"
  },
  {
    "id" : "4c143ab6-5f8c-49cd-8c46-1fa724df23e2",
    "prId" : 38632,
    "prUrl" : "https://github.com/flutter/flutter/pull/38632#pullrequestreview-282781837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4801e7c1-ad71-41d6-9ab8-8fcafce369de",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "else not needed.",
        "createdAt" : "2019-09-03T06:29:20Z",
        "updatedAt" : "2019-09-03T06:39:52Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3de247d8d8f7ba858bd5b7b15f7886954fc6afc2",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +60,64 @@    if (pluginYaml != null && pluginYaml['platforms'] != null) {\n      return Plugin._fromMultiPlatformYaml(name, path, pluginYaml);\n    } else {\n      return Plugin._fromLegacyYaml(name, path, pluginYaml); // ignore: deprecated_member_use_from_same_package\n    }"
  },
  {
    "id" : "d357c5be-8361-43b1-ad35-4a4db6f5a222",
    "prId" : 38632,
    "prUrl" : "https://github.com/flutter/flutter/pull/38632#pullrequestreview-282781837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3744ec9c-8295-41a4-9f0a-a004f7f4ade9",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Flip the sense and un-indent the larger block:\r\n```dart\r\nif (!yaml.containsKey('platform')) {\r\n  return _validateLegacyYaml(yaml);\r\n}\r\n// no else, un-indent.\r\n```",
        "createdAt" : "2019-09-03T06:31:53Z",
        "updatedAt" : "2019-09-03T06:39:52Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3de247d8d8f7ba858bd5b7b15f7886954fc6afc2",
    "line" : 136,
    "diffHunk" : "@@ -1,1 +128,132 @@\n  static List<String> validatePluginYaml(YamlMap yaml) {\n    if (yaml.containsKey('platforms')) {\n      final int numKeys = yaml.keys.toSet().length;\n      if (numKeys != 1) {"
  },
  {
    "id" : "c01c500c-d1f8-47db-aea6-4f7944df8ccf",
    "prId" : 38632,
    "prUrl" : "https://github.com/flutter/flutter/pull/38632#pullrequestreview-282781837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39496d86-a91a-4935-a9c9-5bfee0dc1579",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "else not needed.",
        "createdAt" : "2019-09-03T06:32:06Z",
        "updatedAt" : "2019-09-03T06:39:52Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3de247d8d8f7ba858bd5b7b15f7886954fc6afc2",
    "line" : 142,
    "diffHunk" : "@@ -1,1 +134,138 @@          'Invalid plugin specification. There must be only one key: \"platforms\", found multiple: ${yaml.keys.join(',')}'\n        ];\n      } else {\n        return _validateMultiPlatformYaml(yaml['platforms']);\n      }"
  },
  {
    "id" : "70079162-c941-4752-b228-56822fdc1acf",
    "prId" : 38632,
    "prUrl" : "https://github.com/flutter/flutter/pull/38632#pullrequestreview-282781837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17163c28-b63a-4579-b80f-f47bcb1b7563",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "If `yaml['platforms']` is not a `YamlMap`, then this call will throw a runtime type error. Please add a check, and return an error instead.",
        "createdAt" : "2019-09-03T06:34:23Z",
        "updatedAt" : "2019-09-03T06:39:52Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3de247d8d8f7ba858bd5b7b15f7886954fc6afc2",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +135,139 @@        ];\n      } else {\n        return _validateMultiPlatformYaml(yaml['platforms']);\n      }\n    } else {"
  },
  {
    "id" : "12838cdf-21b4-46c0-89ce-b63fdc38a704",
    "prId" : 38632,
    "prUrl" : "https://github.com/flutter/flutter/pull/38632#pullrequestreview-282781837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f880424a-941a-41d0-873b-47501d2a616c",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "ditto. Check the type of `yaml[AndroidPlugin.kConfigKey]` etc. and add appropriate error messages.",
        "createdAt" : "2019-09-03T06:38:08Z",
        "updatedAt" : "2019-09-03T06:39:52Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3de247d8d8f7ba858bd5b7b15f7886954fc6afc2",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +145,149 @@    final List<String> errors = <String>[];\n    if (yaml.containsKey(AndroidPlugin.kConfigKey) &&\n        !AndroidPlugin.validate(yaml[AndroidPlugin.kConfigKey])) {\n      errors.add('Invalid \"android\" plugin specification.');\n    }"
  },
  {
    "id" : "09777a81-391a-4f05-a239-d2aa4364d934",
    "prId" : 40302,
    "prUrl" : "https://github.com/flutter/flutter/pull/40302#pullrequestreview-287151475",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72ea3725-72e5-4093-8c23-f7d8e6391660",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "This is the actual change, everything else is tests.",
        "createdAt" : "2019-09-12T01:21:19Z",
        "updatedAt" : "2019-09-13T02:02:23Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "6920069ac3e802428ff633564347733b3a7214b7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +385,389 @@  s.public_header_files = './Classes/**/*.h'\n  s.static_framework    = true\n  s.pod_target_xcconfig = { 'DEFINES_MODULE' => 'YES' }\n  s.dependency '{{framework}}'\n  {{#plugins}}"
  },
  {
    "id" : "198cfc2c-0189-4a01-83f8-9e2176fcb806",
    "prId" : 41666,
    "prUrl" : "https://github.com/flutter/flutter/pull/41666#pullrequestreview-296621716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f1ed0de-6af2-414f-b453-2cbcbdd51642",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Consider giving a pointer back to here and/or explaining how to generate it or where it came from.",
        "createdAt" : "2019-10-02T15:41:18Z",
        "updatedAt" : "2019-10-04T02:11:31Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "bcf95eba-b48d-4f68-923d-1d7dafdfaf30",
        "parentId" : "1f1ed0de-6af2-414f-b453-2cbcbdd51642",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "Done",
        "createdAt" : "2019-10-03T02:59:32Z",
        "updatedAt" : "2019-10-04T02:11:31Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "23859eab7d54c7845f8e8e6aeb2f56a9615aa4cc",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +326,330 @@\n/**\n * Generated file. Do not edit.\n * This file is generated by the Flutter tool based on the\n * plugins that support the Android platform."
  },
  {
    "id" : "38fb78e7-0800-4771-9d72-db8fe32f528e",
    "prId" : 41666,
    "prUrl" : "https://github.com/flutter/flutter/pull/41666#pullrequestreview-296569287",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cb27708-1648-4f37-b3cb-620979510ca3",
        "parentId" : null,
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "Should we only instantiate this if there is at least 1 old plugin?",
        "createdAt" : "2019-10-02T23:00:01Z",
        "updatedAt" : "2019-10-04T02:11:31Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      }
    ],
    "commit" : "23859eab7d54c7845f8e8e6aeb2f56a9615aa4cc",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +333,337 @@  public static void registerWith(@NonNull FlutterEngine flutterEngine) {\n{{#needsShim}}\n    ShimPluginRegistry shimPluginRegistry = new ShimPluginRegistry(flutterEngine);\n{{/needsShim}}\n{{#plugins}}"
  },
  {
    "id" : "f26f4f7e-c65f-4e5f-8055-bbeb1a48515e",
    "prId" : 41666,
    "prUrl" : "https://github.com/flutter/flutter/pull/41666#pullrequestreview-297242157",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f7b0825-c0bc-449d-a7e9-d70f9dece36c",
        "parentId" : null,
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "It would probably be a good idea to check accepted values here and throw an appropriate error if a bad value is passed in.",
        "createdAt" : "2019-10-04T02:48:10Z",
        "updatedAt" : "2019-10-04T02:51:45Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      }
    ],
    "commit" : "23859eab7d54c7845f8e8e6aeb2f56a9615aa4cc",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +380,384 @@    final String name = metaData.getAttribute('android:name');\n    if (name == 'flutterEmbedding') {\n      return metaData.getAttribute('android:value');\n    }\n  }"
  },
  {
    "id" : "f7714ea6-de93-47b5-b3a4-9a48776e7ffc",
    "prId" : 42204,
    "prUrl" : "https://github.com/flutter/flutter/pull/42204#pullrequestreview-299764092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3eeba8d1-0a6d-4f9f-867d-cb277ef75123",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Swift plugins should not need to add an Objective-C header if they don't need it.",
        "createdAt" : "2019-10-10T00:19:12Z",
        "updatedAt" : "2019-10-14T22:23:22Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "893d28ff114fd617266ea92be2e525f11dc3bbe6",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +472,476 @@\n{{#plugins}}\n#if __has_include(<{{name}}/{{class}}.h>)\n#import <{{name}}/{{class}}.h>\n#else"
  },
  {
    "id" : "839b1814-1ab5-4f2a-a731-04363c58aa43",
    "prId" : 42684,
    "prUrl" : "https://github.com/flutter/flutter/pull/42684#pullrequestreview-302254710",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4c4fb5c-4c21-4d9c-ba29-924399dd5abc",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Unrelated to this PR, just curious - would it be possible / make sense for the logic here and in _getEmbeddingVersion in `platform_plugins.dart` to be the same? (seems like one is deciding based on a manifest key and the other based on Java imports?)",
        "createdAt" : "2019-10-15T22:15:18Z",
        "updatedAt" : "2019-10-15T22:16:08Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "b02e51bc-4a10-4439-8846-237855c626f5",
        "parentId" : "e4c4fb5c-4c21-4d9c-ba29-924399dd5abc",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "We don't have the app's main class name in pubspec.yaml, so that would require an extra hop. One possibility is that we get the main app class/package from `AndroidManifest.xml` and then check the import in the java class.  That would still require to parse the XML file.",
        "createdAt" : "2019-10-15T23:39:16Z",
        "updatedAt" : "2019-10-15T23:39:33Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "70a7947b394d50951962a4feb094d7a1eb77569b",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +360,364 @@/// Returns the version of the Android embedding that the current\n/// [project] is using.\nString _getAndroidEmbeddingVersion(FlutterProject project) {\n  assert(project.android != null);\n  final File androidManifest = project.android.appManifestFile;"
  },
  {
    "id" : "e8d6516f-55df-4e76-86cf-a5c9800dcc15",
    "prId" : 44499,
    "prUrl" : "https://github.com/flutter/flutter/pull/44499#pullrequestreview-314537996",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12b9d0bc-3730-4e00-b4f0-053b0eca4a96",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "@zoeyfan to double check on the wording here. ",
        "createdAt" : "2019-11-09T03:16:09Z",
        "updatedAt" : "2019-11-11T22:01:13Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b9726db257bc225dedc3e44036846a61c4543f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +405,409 @@          if (project.isModule) {\n            printStatus(\n              'The plugin `${plugin['name']}` is built using an older version '\n              \"of the Android plugin API which assumes that it's running in a \"\n              'full-Flutter environment. It may have undefined behaviors when '"
  },
  {
    "id" : "8ea0e17a-ac41-4749-b23e-e57af6103f2b",
    "prId" : 45303,
    "prUrl" : "https://github.com/flutter/flutter/pull/45303#pullrequestreview-320564248",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "582f22f6-a316-4cd5-b83e-458b0535ca0b",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Do we have docs/wiki/website we could link to in this error message?",
        "createdAt" : "2019-11-20T23:50:39Z",
        "updatedAt" : "2019-11-20T23:56:43Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "4bfa26a6-cb49-4179-98a6-031682ddd27c",
        "parentId" : "582f22f6-a316-4cd5-b83e-458b0535ca0b",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Added the placeholder link for the new schema documentation (https://flutter.dev/docs/development/packages-and-plugins/developing-packages#plugin).\r\nWe're tracking writing this section in https://github.com/flutter/flutter/issues/44287 I plan to do it this week. I'd like to not wait for the link to be ready before landing this in case there's a chance this will make it to next stable.",
        "createdAt" : "2019-11-20T23:56:36Z",
        "updatedAt" : "2019-11-20T23:56:43Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "1596624fb8ee2938df094ab005f0b508e799c899",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +163,167 @@    if (usesOldPluginFormat && usesNewPluginFormat) {\n      const String errorMessage =\n          'The flutter.plugin.platforms key cannot be used in combination with the old'\n          'flutter.plugin.{androidPackage,iosPrefix,pluginClass} keys.'\n          'See: https://flutter.dev/docs/development/packages-and-plugins/developing-packages#plugin';"
  },
  {
    "id" : "8e4ca465-7ad0-46b9-bd57-91a9ae4797b7",
    "prId" : 45379,
    "prUrl" : "https://github.com/flutter/flutter/pull/45379#pullrequestreview-321790910",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "987f5f9d-5169-4a21-bf8e-e58b13b21438",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This will capture direct dependencies, but not transitive dependencies - is this an issue?. Consider:\r\n\r\nplugin A depends on package 1\r\npackage 1 depends on plugin B\r\n\r\n.flutter-plugins will contain plugin A/plugin B while the dependencies file will not link them. \r\n",
        "createdAt" : "2019-11-22T19:34:35Z",
        "updatedAt" : "2019-11-22T22:06:14Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "a82f362a-0bae-4afc-9356-717eb7e7103f",
        "parentId" : "987f5f9d-5169-4a21-bf8e-e58b13b21438",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "From offline discussion, this isn't a supported use case - and that platform code cannot depend on eachother. Therefore it doesn't seem like the gradle task ordering needs to take this into consideration",
        "createdAt" : "2019-11-22T20:26:08Z",
        "updatedAt" : "2019-11-22T22:06:14Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1fe1d7e8bdc1a97d75a0119e9d49c22dbb4b1ee8",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +277,281 @@  }\n  final String packageRootPath = fs.path.fromUri(packageRoot);\n  final YamlMap dependencies = pubspec['dependencies'];\n  printTrace('Found plugin $name at $packageRootPath');\n  return Plugin.fromYaml("
  },
  {
    "id" : "3c404736-9dd4-4919-af49-d5393071a015",
    "prId" : 48614,
    "prUrl" : "https://github.com/flutter/flutter/pull/48614#pullrequestreview-343469153",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e962664c-5451-4e34-a609-0aae36d58bc9",
        "parentId" : null,
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "Isn't the location of this line in the file going to be \"random\" (not from run to run unless the map implementation changes, but not guaranteed to be first)? I don't have a solution that doesn't break existing apps since we're re-using a file that's already a dictionary--otherwise we could wrap the real content in an array with the comment then the content--but I'm wondering how useful this will end up being without an order dependency. I guess better than nothing...",
        "createdAt" : "2020-01-15T17:29:11Z",
        "updatedAt" : "2020-01-16T16:22:13Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      },
      {
        "id" : "57562891-5560-4f59-a9ae-a21c85da2a78",
        "parentId" : "e962664c-5451-4e34-a609-0aae36d58bc9",
        "authorId" : "13f20ac7-3d73-4c3c-9529-437d3846f1fb",
        "body" : "I changed the test to not require an order comparison and clarified in the comment that the order is not guaranteed",
        "createdAt" : "2020-01-15T19:35:20Z",
        "updatedAt" : "2020-01-16T16:22:13Z",
        "lastEditedBy" : "13f20ac7-3d73-4c3c-9529-437d3846f1fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "23cb397f54bba7052ab710f247565851723bf46b",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +335,339 @@/// file looks something like this (order of keys is not guaranteed):\n/// {\n///   \"info\": \"This is a generated file; do not edit or check into version control.\",\n///   \"plugins\": {\n///     \"ios\": ["
  },
  {
    "id" : "22f0f705-8f74-4163-a91e-9aff50584b5d",
    "prId" : 48614,
    "prUrl" : "https://github.com/flutter/flutter/pull/48614#pullrequestreview-343609784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69ebe78f-a6a9-4d9f-814c-394ed7f911aa",
        "parentId" : null,
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "Is the plan to split \"dependencyGraph\" per platform in a separate PR? ",
        "createdAt" : "2020-01-15T20:46:21Z",
        "updatedAt" : "2020-01-16T16:22:13Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "afe9b560-7fb5-4956-ac34-769d6771da18",
        "parentId" : "69ebe78f-a6a9-4d9f-814c-394ed7f911aa",
        "authorId" : "13f20ac7-3d73-4c3c-9529-437d3846f1fb",
        "body" : "I don't think it makes much sense to split it anymore. It doesn't really add any value. I started that way, but then we'd have change the way the dependencies are handled in gradle, which at that point felt unnecessary. What do you think?",
        "createdAt" : "2020-01-15T22:09:01Z",
        "updatedAt" : "2020-01-16T16:22:13Z",
        "lastEditedBy" : "13f20ac7-3d73-4c3c-9529-437d3846f1fb",
        "tags" : [
        ]
      },
      {
        "id" : "9b38df81-e801-462d-ba3a-ec69999f6d20",
        "parentId" : "69ebe78f-a6a9-4d9f-814c-394ed7f911aa",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "Gradle is working around the fact that `dependencyGraph` isn't split per platform.  I think it would be ideal if Gradle didn't have to workaround that and instead just read this file. This could be done in a separate PR though if that makes sense.",
        "createdAt" : "2020-01-15T22:56:51Z",
        "updatedAt" : "2020-01-16T16:22:13Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "cd159dec-e0a8-4652-a99d-e07cbd5713f4",
        "parentId" : "69ebe78f-a6a9-4d9f-814c-394ed7f911aa",
        "authorId" : "13f20ac7-3d73-4c3c-9529-437d3846f1fb",
        "body" : "Makes sense, I did it here :)",
        "createdAt" : "2020-01-16T00:28:54Z",
        "updatedAt" : "2020-01-16T16:22:13Z",
        "lastEditedBy" : "13f20ac7-3d73-4c3c-9529-437d3846f1fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "23cb397f54bba7052ab710f247565851723bf46b",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +353,357 @@///     \"web\": []\n///   },\n///   \"dependencyGraph\": [\n///     {\n///       \"name\": \"plugin-a\","
  },
  {
    "id" : "cc5c3111-e500-4af9-be74-3dcee0bfef9a",
    "prId" : 48614,
    "prUrl" : "https://github.com/flutter/flutter/pull/48614#pullrequestreview-343510555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c599a4a-f4b9-440d-8811-3856fe98e51a",
        "parentId" : null,
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "nit: file a bug for this TODO if there isn't one already.",
        "createdAt" : "2020-01-15T20:47:51Z",
        "updatedAt" : "2020-01-16T16:22:13Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "23cb397f54bba7052ab710f247565851723bf46b",
    "line" : 228,
    "diffHunk" : "@@ -1,1 +890,894 @@  final List<Plugin> plugins = findPlugins(project);\n\n  // TODO(franciscojma): Remove once migration is complete.\n  // Write the legacy plugin files to avoid breaking existing apps.\n  final bool legacyChanged = _writeFlutterPluginsListLegacy(project, plugins);"
  },
  {
    "id" : "4104ffe2-a764-4967-8c08-f602c2a3a055",
    "prId" : 49085,
    "prUrl" : "https://github.com/flutter/flutter/pull/49085#pullrequestreview-344852413",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "459cd61c-d91f-4ad7-bfd1-612ad9b18631",
        "parentId" : null,
        "authorId" : "13f20ac7-3d73-4c3c-9529-437d3846f1fb",
        "body" : "This logic had to be updated. It was always returning true, since date_created was always different on each file. This caused the podfiles to be invalidated every time.",
        "createdAt" : "2020-01-17T21:31:39Z",
        "updatedAt" : "2020-01-17T21:41:20Z",
        "lastEditedBy" : "13f20ac7-3d73-4c3c-9529-437d3846f1fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "4da2a9d77b837195824a01cf32afa716087578ce",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +414,418 @@  result['version'] = flutterVersion.frameworkVersion;\n\n  // Only notify if the plugins list has changed. [date_created] will always be different,\n  // [version] is not relevant for this check.\n  final String oldPluginsFileStringContent = _readFileContent(pluginsFile);"
  },
  {
    "id" : "8527a0c6-70c1-4659-a269-f98605fa34a0",
    "prId" : 50599,
    "prUrl" : "https://github.com/flutter/flutter/pull/50599#pullrequestreview-357202521",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d92c466e-3c5f-4565-af2a-ca2fee3642b8",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "👍 ",
        "createdAt" : "2020-02-12T05:50:16Z",
        "updatedAt" : "2020-02-12T19:20:58Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9db17eeb712a70bb719fa1696bbeeed6c1f68488",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +323,327 @@const String _kFlutterPluginsNameKey = 'name';\nconst String _kFlutterPluginsPathKey = 'path';\nconst String _kFlutterPluginsDependenciesKey = 'dependencies';\n\n  /// Filters [plugins] to those supported by [platformKey]."
  },
  {
    "id" : "1001ac18-8d34-4fc5-b262-5aba4b4a0b51",
    "prId" : 50599,
    "prUrl" : "https://github.com/flutter/flutter/pull/50599#pullrequestreview-357716229",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6537d49d-dcb1-405f-ace9-3bafe24a1d12",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "nit: closing `)` on newline with trailing `,` here and below",
        "createdAt" : "2020-02-12T05:52:47Z",
        "updatedAt" : "2020-02-12T19:20:58Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "4979fc7a-9461-4b71-a19b-fe74274fbc9a",
        "parentId" : "6537d49d-dcb1-405f-ace9-3bafe24a1d12",
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "Done.",
        "createdAt" : "2020-02-12T19:13:45Z",
        "updatedAt" : "2020-02-12T19:20:58Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      }
    ],
    "commit" : "9db17eeb712a70bb719fa1696bbeeed6c1f68488",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +914,918 @@\n  if (featureFlags.isWindowsEnabled && project.windows.existsSync()) {\n    _createPlatformPluginSymlinks(\n      project.windows.pluginSymlinkDirectory,\n      platformPlugins[project.windows.pluginConfigKey] as List<dynamic>,"
  },
  {
    "id" : "798964ca-cc4b-40ef-b493-b27e9fd683bc",
    "prId" : 50599,
    "prUrl" : "https://github.com/flutter/flutter/pull/50599#pullrequestreview-357716229",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d139e7a6-1e1e-4e62-9eba-a0d58894c194",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Might be worth including the original error after a newline in case something else trips this",
        "createdAt" : "2020-02-12T05:54:18Z",
        "updatedAt" : "2020-02-12T19:20:58Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "e9c0085c-edc9-49e5-ad42-4cb8b4426b72",
        "parentId" : "d139e7a6-1e1e-4e62-9eba-a0d58894c194",
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "Done.",
        "createdAt" : "2020-02-12T19:19:51Z",
        "updatedAt" : "2020-02-12T19:20:58Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      }
    ],
    "commit" : "9db17eeb712a70bb719fa1696bbeeed6c1f68488",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +953,957 @@      if (globals.platform.isWindows && (e.osError?.errorCode ?? 0) == 1314) {\n        throwToolExit(\n          'Building with plugins requires symlink support. '\n          'Please enable Developer Mode in your system settings.\\n\\n$e'\n        );"
  },
  {
    "id" : "d0a8d5ba-45d4-4995-a5f5-a08c076d07c9",
    "prId" : 52422,
    "prUrl" : "https://github.com/flutter/flutter/pull/52422#pullrequestreview-373763453",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e51a9f4-5118-4b2c-acce-f8e6a1f9f863",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "nit: we could just move this to the top of the file and do an `// ignore_for_file: public_member_api_docs`.\r\n\r\nWe should test this by adding an analyzer integration test to something that uses this template too.",
        "createdAt" : "2020-03-11T21:39:52Z",
        "updatedAt" : "2020-03-11T21:39:53Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "24043a58-f8c3-4251-bbff-fd3a510f267d",
        "parentId" : "1e51a9f4-5118-4b2c-acce-f8e6a1f9f863",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I don't really want to commit to keeping this file analysis clean for any arbitrary project's analyzer rules. Ideally we would make it invisible to the user's project",
        "createdAt" : "2020-03-11T23:33:48Z",
        "updatedAt" : "2020-03-11T23:33:49Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "7eae5ee5-1776-4bf6-8f75-d77cce75a5f4",
        "parentId" : "1e51a9f4-5118-4b2c-acce-f8e6a1f9f863",
        "authorId" : "833c8e7e-5022-4bed-a8bb-135bcddd760e",
        "body" : "I think making the file invisible to the user's project would be fine, but I don't know how do this. ",
        "createdAt" : "2020-03-12T09:17:32Z",
        "updatedAt" : "2020-03-12T09:17:33Z",
        "lastEditedBy" : "833c8e7e-5022-4bed-a8bb-135bcddd760e",
        "tags" : [
        ]
      },
      {
        "id" : "27c23a53-d524-4ecd-b6a8-88aa7ef46fbc",
        "parentId" : "1e51a9f4-5118-4b2c-acce-f8e6a1f9f863",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This change is good as is, we'll look for a better long term solutions separately ",
        "createdAt" : "2020-03-12T17:33:46Z",
        "updatedAt" : "2020-03-12T17:33:46Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3f43a31a50f3165928a5925c5f3478d14261bf94",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +754,758 @@import 'package:flutter_web_plugins/flutter_web_plugins.dart';\n\n// ignore: public_member_api_docs\nvoid registerPlugins(PluginRegistry registry) {\n{{#plugins}}"
  },
  {
    "id" : "583ee0a3-1c2b-41de-ba8e-565f3f5e7f98",
    "prId" : 53785,
    "prUrl" : "https://github.com/flutter/flutter/pull/53785#pullrequestreview-386588525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4228c6c8-25cb-43c6-82f2-01736a64af0e",
        "parentId" : null,
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "Please add a declaration comment; it's non-obvious to a new reader what this does based on just the name. (I think in general the tool code under-comments utility methods, and I have many times wished for declaration comments that weren't there :) )",
        "createdAt" : "2020-04-02T16:33:33Z",
        "updatedAt" : "2020-04-02T22:55:11Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      }
    ],
    "commit" : "62723865cd31f0503a3b6f8cd426cc0387935d3f",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +919,923 @@\n/// Filters out Dart-only plugins, which shouldn't be added to the native generated registrants.\nList<Plugin> _filterNativePlugins(List<Plugin> plugins, String platformKey) {\n  return plugins.where((Plugin element) {\n    final PluginPlatform plugin = element.platforms[platformKey];"
  },
  {
    "id" : "8a9efdc7-7a18-461f-8d9f-352aa93342da",
    "prId" : 59080,
    "prUrl" : "https://github.com/flutter/flutter/pull/59080#pullrequestreview-428377946",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64d5f878-f433-4420-9000-22c87be58757",
        "parentId" : null,
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "We should update the plugin template to have an empty list with this name, with a comment explaining what it's for, so that plugin authors can easily see how to add a library rather than needing to dig into the rest of the build system to discover it.",
        "createdAt" : "2020-06-10T19:56:06Z",
        "updatedAt" : "2020-06-10T21:20:53Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ff1dabb3bebdef05a1e7457a33bc93fad97372e",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +807,811 @@  target_link_libraries(${BINARY_NAME} PRIVATE ${plugin}_plugin)\n  list(APPEND PLUGIN_BUNDLED_LIBRARIES $<TARGET_FILE:${plugin}_plugin>)\n  list(APPEND PLUGIN_BUNDLED_LIBRARIES ${${plugin}_bundled_libraries})\nendforeach(plugin)\n''';"
  },
  {
    "id" : "10d43d06-60ac-4a04-94a2-c5dbedf8c29d",
    "prId" : 59507,
    "prUrl" : "https://github.com/flutter/flutter/pull/59507#pullrequestreview-435239124",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54503268-b694-4b09-8e83-2834ca7a9299",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "`iosPrefix` is deprecated?",
        "createdAt" : "2020-06-22T20:08:58Z",
        "updatedAt" : "2020-06-23T23:01:17Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "91ffdeae-b399-4898-93b3-0e525a7f9882",
        "parentId" : "54503268-b694-4b09-8e83-2834ca7a9299",
        "authorId" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "body" : "yes. We don't need iosPrefix in the multi-platform format.",
        "createdAt" : "2020-06-22T20:33:45Z",
        "updatedAt" : "2020-06-23T23:01:17Z",
        "lastEditedBy" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4a9701c066a7b8ade270e7d93fec97c8af20cbf",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +188,192 @@      map[platform] = <String, String>{\n        'pluginClass': pluginClass,\n        ...platform == 'android' ? <String, String>{'package': androidPackage} : <String, String>{},\n      };\n    }"
  },
  {
    "id" : "9b1d4936-d0ef-4e14-b8c6-0872652bad81",
    "prId" : 60629,
    "prUrl" : "https://github.com/flutter/flutter/pull/60629#pullrequestreview-440430178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36dfc9dd-040d-42a0-8c7a-d555d7d45579",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "interesting, this uses posix paths on windows too?",
        "createdAt" : "2020-06-30T20:52:02Z",
        "updatedAt" : "2020-06-30T22:48:06Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "282a1457-adba-4e70-b14c-35713aaeea54",
        "parentId" : "36dfc9dd-040d-42a0-8c7a-d555d7d45579",
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "Yes, CMake always uses posix-style paths. That's what the use of `TO_CMAKE_PATH` in the other generated file is for, but here it was easier to just convert it before writing it.\r\n\r\n(The reason for all the escaped Windows paths in the other file is that those aren't used by CMake, but passed through back to the tool script, so I want them to stay untouched.)",
        "createdAt" : "2020-06-30T22:30:21Z",
        "updatedAt" : "2020-06-30T22:48:06Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d3b22e72515dfc8921a2020af333baa109fb2e7",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +989,993 @@  // that file's directory.\n  final String makefileDirPath = project.windows.cmakeFile.parent.absolute.path;\n  final path.Context cmakePathContext = path.Context(style: path.Style.posix);\n  final List<String> relativePathComponents = globals.fs.path.split(globals.fs.path.relative(\n    project.windows.pluginSymlinkDirectory.absolute.path,"
  },
  {
    "id" : "a3927765-1a92-4c86-a144-bdcde1c98526",
    "prId" : 61338,
    "prUrl" : "https://github.com/flutter/flutter/pull/61338#pullrequestreview-450372327",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2ccf31a-f568-406e-ae19-80db6bf919bc",
        "parentId" : null,
        "authorId" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "body" : "I feel like it doesn't make sense to put these checks here as the method name says \"_validateLegacyYaml\", but the code is actually validating the new format.\r\n\r\nWhat do you think about fixing it in the `validatePluginYaml`? We have something like:\r\n\r\n```dart\r\nif (usesNewPluginFormat) {\r\n  if (yaml['platforms'] != null && yaml['platforms'] is! YamlMap) {\r\n    const String errorMessage = 'flutter.plugin.platforms should be a map with the platform name as the key';\r\n    return <String>[errorMessage];\r\n  }\r\n  return _validateMultiPlatformYaml(yaml['platforms'] as YamlMap);\r\n} else {\r\n  return _validateLegacyYaml(yaml);\r\n}\r\n```\r\n\r\nWe can make it as:\r\n\r\n```dart\r\nif (usesNewPluginFormat) {\r\n  if (yaml['platforms'] != null && yaml['platforms'] is! YamlMap) {\r\n    const String errorMessage = 'flutter.plugin.platforms should be a map with the platform name as the key';\r\n    return <String>[errorMessage];\r\n  }\r\n  return _validateMultiPlatformYaml(yaml['platforms'] as YamlMap);\r\n} else if (usesOldPluginFormat) {\r\n  return _validateLegacyYaml(yaml);\r\n} else {\r\n  return <String>['The flutter.plugin.platforms key in the `pubspec.yaml` is not found. '\r\n                              'An instruction to format the `pubspec.yaml` can be found here: ' \r\n                              'https://flutter.dev/docs/development/packages-and-plugins/developing-packages#plugin'];\r\n}\r\n```",
        "createdAt" : "2020-07-16T23:31:30Z",
        "updatedAt" : "2020-07-21T16:56:09Z",
        "lastEditedBy" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "tags" : [
        ]
      },
      {
        "id" : "fd107173-4f18-4e5f-ae39-fb1299ff74b1",
        "parentId" : "e2ccf31a-f568-406e-ae19-80db6bf919bc",
        "authorId" : "0ab95c3b-6c06-4cf3-9eb5-228159f5a75d",
        "body" : "Yeah, put the check inside the method `_validateLegacyYaml` is weird.\r\nI will modify it later, thanks for the suggestion : ) !",
        "createdAt" : "2020-07-17T02:47:39Z",
        "updatedAt" : "2020-07-21T16:56:09Z",
        "lastEditedBy" : "0ab95c3b-6c06-4cf3-9eb5-228159f5a75d",
        "tags" : [
        ]
      },
      {
        "id" : "0035d8a6-2503-4a46-b0fa-a3dfc990c361",
        "parentId" : "e2ccf31a-f568-406e-ae19-80db6bf919bc",
        "authorId" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "body" : "Thanks! Feel free to @ me when it's ready to be reviewed again :)",
        "createdAt" : "2020-07-17T04:57:04Z",
        "updatedAt" : "2020-07-21T16:56:09Z",
        "lastEditedBy" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4eb5d44217fedd5b1976365f09e7628e9e491bd",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +273,277 @@  static List<String> _validateLegacyYaml(YamlMap yaml) {\n    final List<String> errors = <String>[];\n\n    if (yaml['androidPackage'] != null && yaml['androidPackage'] is! String) {\n      errors.add('The \"androidPackage\" must either be null or a string.');"
  },
  {
    "id" : "77828580-48ee-42e4-9f02-318a4e4c633d",
    "prId" : 62902,
    "prUrl" : "https://github.com/flutter/flutter/pull/62902#pullrequestreview-461285686",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e614d75e-b53b-4452-b2f2-a3301e55007a",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "This is not used for published plugins, it's generated for app and modules that need to import plugins.",
        "createdAt" : "2020-08-05T01:49:09Z",
        "updatedAt" : "2020-08-05T01:49:09Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2aaa3f54ceca93ef6e16a78cd5124b19ecaf356",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +892,896 @@  final Map<String, dynamic> context = <String, dynamic>{\n    'os': 'ios',\n    'deploymentTarget': '9.0',\n    'framework': 'Flutter',\n    'plugins': iosPlugins,"
  },
  {
    "id" : "4f784476-8cff-4bbe-9595-c9e9c17a9815",
    "prId" : 63526,
    "prUrl" : "https://github.com/flutter/flutter/pull/63526#pullrequestreview-465514679",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afff14e1-330e-4853-a34f-d77c37480fd5",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "I'm not familiar with this code, should we printError here, or is this expected to run into `YamlExceptions`s?",
        "createdAt" : "2020-08-11T22:33:50Z",
        "updatedAt" : "2020-08-11T23:09:05Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "c958aff3-f10e-4230-aa75-d5f5a11e6f3e",
        "parentId" : "afff14e1-330e-4853-a34f-d77c37480fd5",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "At this point we're still discovering plugins - I think it should definitely be non-fatal, but I'm not really sure how actionable an error parsing the yaml would be. I will add it to the trace so it gets surfaced somehow",
        "createdAt" : "2020-08-11T23:07:41Z",
        "updatedAt" : "2020-08-11T23:09:05Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "270b75dd-5c50-41e4-9344-f0fe4b632cfa",
        "parentId" : "afff14e1-330e-4853-a34f-d77c37480fd5",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "Yeah, trace makes more sense actually",
        "createdAt" : "2020-08-12T00:28:01Z",
        "updatedAt" : "2020-08-12T00:28:01Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "2fd6b5d7144c76fbcb0297ef2c8fbb3d015caea1",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +318,322 @@  } on YamlException catch (err) {\n    globals.printTrace('Failed to parse plugin manifest for $name: $err');\n    // Do nothing, potentially not a plugin.\n  }\n  if (pubspec == null) {"
  },
  {
    "id" : "11dc67a0-5b17-4d86-862e-2ea8ce75d5d1",
    "prId" : 74469,
    "prUrl" : "https://github.com/flutter/flutter/pull/74469#pullrequestreview-575960550",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3f1d7ce-1a3d-4edc-a2b2-335e3c30d31e",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I don't recall if plugins are sorted by this point, but since the order matters for the errors when their are conflicts, you should ensure they are sorted so the error messages stay consistent.",
        "createdAt" : "2021-01-26T02:13:00Z",
        "updatedAt" : "2021-02-19T15:13:45Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "3998127e-ffb2-4ce2-acf6-3092d788c7aa",
        "parentId" : "b3f1d7ce-1a3d-4edc-a2b2-335e3c30d31e",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "The order of the plugins doesn't affect the entries in the output list. The order of the entries would differ, but that isn't a problem.",
        "createdAt" : "2021-01-26T02:21:53Z",
        "updatedAt" : "2021-02-19T15:13:45Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a3092476b456358fd4106136b5e5766bf503db",
    "line" : 269,
    "diffHunk" : "@@ -1,1 +516,520 @@///  For more details, https://flutter.dev/go/federated-plugins.\nList<PluginInterfaceResolution> resolvePlatformImplementation(\n  List<Plugin> plugins, {\n  bool throwOnPluginPubspecError = true,\n}) {"
  },
  {
    "id" : "69154db7-c3fd-4237-9a12-c7c70735e2d6",
    "prId" : 74469,
    "prUrl" : "https://github.com/flutter/flutter/pull/74469#pullrequestreview-576662317",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e448290d-6393-4d76-8d17-a955ed7c909c",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This needs a language version header. Because it isn't under `lib/` it isn't a part of any package and will take whatever the current default language version is. That may be incorrect for users that have not yet migrated to null safety.\r\n\r\nIn this case, you should pick whatever the language version of the main entrypoint is.",
        "createdAt" : "2021-01-26T02:15:36Z",
        "updatedAt" : "2021-02-19T15:13:45Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "5b991df4-2624-4626-b664-f7639b88f7e5",
        "parentId" : "e448290d-6393-4d76-8d17-a955ed7c909c",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "good point",
        "createdAt" : "2021-01-26T02:26:45Z",
        "updatedAt" : "2021-02-19T15:13:45Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "865c9e51-e26e-4626-b978-b19dbe64d7af",
        "parentId" : "e448290d-6393-4d76-8d17-a955ed7c909c",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "Done. It now sets the language version returned from `determineLanguageVersion`.",
        "createdAt" : "2021-01-26T18:55:43Z",
        "updatedAt" : "2021-02-19T15:13:45Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a3092476b456358fd4106136b5e5766bf503db",
    "line" : 439,
    "diffHunk" : "@@ -1,1 +1094,1098 @@''';\n\n// TODO(egarciad): Evaluate merging the web and desktop plugin registry templates.\nconst String _dartPluginRegistryForDesktopTemplate = '''\n//"
  },
  {
    "id" : "c419ee0d-650c-445b-b09e-81cd07523f1b",
    "prId" : 74469,
    "prUrl" : "https://github.com/flutter/flutter/pull/74469#pullrequestreview-578856943",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d23d18d0-796f-47cf-9c8a-95cd84e945c8",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "What happens if the user adds a new plugin and does a hot reload/hot restart?\r\nWhat happens if the user removes a plugin and does a hot restart?\r\n\r\nIn both cases the file needs to be regenerated, in the former its definitely a nice to have, but in a later that would require a quit/restart cycle to remove a plugin - because the compiler can't resolve it anymore.\r\n\r\nWhat happens if the plugin declaration is invalid in a way that doesn't compile, what do those error messages look like?",
        "createdAt" : "2021-01-26T18:43:33Z",
        "updatedAt" : "2021-02-19T15:13:45Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "c955d369-2419-4891-9c26-d2efa1cd903f",
        "parentId" : "d23d18d0-796f-47cf-9c8a-95cd84e945c8",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "my thought was to follow what the tool currently allows for Android & iOS.  That is, changing pubspec.yaml to add plugins  + hot reload/restart isn't supported, as those flows don't recompile the platform code.",
        "createdAt" : "2021-01-26T19:00:31Z",
        "updatedAt" : "2021-02-19T15:13:45Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "417631c3-a46a-4244-a787-ca817af6d533",
        "parentId" : "d23d18d0-796f-47cf-9c8a-95cd84e945c8",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "But in this case, if its a dart plugin and you remove it - you need to regenerate this file or else the app won't compile at all.",
        "createdAt" : "2021-01-26T19:02:28Z",
        "updatedAt" : "2021-02-19T15:13:45Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "c7b5f5d5-4a7c-4e93-9264-44aba939c110",
        "parentId" : "d23d18d0-796f-47cf-9c8a-95cd84e945c8",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "so the case is:  as a user I have a Dart only plugin, run `flutter run`, then delete the dart plugin from pubspec.yaml, then hot restart?\r\n\r\nSo the workaround is to re-run `flutter run`.  I tried to regenerate the file in the recompile flow, but it required more refactoring.",
        "createdAt" : "2021-01-26T19:10:43Z",
        "updatedAt" : "2021-02-19T15:13:45Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "fcdec427-6daa-4a5d-b0eb-052bbc82e0f6",
        "parentId" : "d23d18d0-796f-47cf-9c8a-95cd84e945c8",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I think there could be more complicated scenarios too - like you update a version and that goes from being a Dart only plugin to not. Unfortunately the error message is going to be very difficult to understand, since the user is going to get a compilation error pointing them to code they didn't write",
        "createdAt" : "2021-01-26T19:13:21Z",
        "updatedAt" : "2021-02-19T15:13:45Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "f2babbec-f95a-4da6-ae09-106ef36a731a",
        "parentId" : "d23d18d0-796f-47cf-9c8a-95cd84e945c8",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "yeah. I didn't know that `flutter run` supports adding/removing dependencies to pubpec.yaml if they don't need platform-side recompilation.  I also wonder if users are able to know the difference. e.g. If they consume a plugin, are they able to know that they can't do that for Android and iOS, but it might be ok for a Dart-only plugin.",
        "createdAt" : "2021-01-26T19:25:43Z",
        "updatedAt" : "2021-02-19T15:13:45Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "6b1cfd19-18e9-4a50-b986-38b6eb6c306c",
        "parentId" : "d23d18d0-796f-47cf-9c8a-95cd84e945c8",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I think removing a plugin needs to be handled otherwise it will become a compilation error.",
        "createdAt" : "2021-01-28T20:33:17Z",
        "updatedAt" : "2021-02-19T15:13:45Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "2a55572e-caca-4ed2-be2b-44a0cbc4e996",
        "parentId" : "d23d18d0-796f-47cf-9c8a-95cd84e945c8",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "Removing a plugin works, they would just need to type `flutter run` again.",
        "createdAt" : "2021-01-28T23:07:42Z",
        "updatedAt" : "2021-02-19T15:13:45Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "49da5230-660c-4ae8-bda7-de3d0663b5bf",
        "parentId" : "d23d18d0-796f-47cf-9c8a-95cd84e945c8",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "while not being able to add a new plugin is in-line with our current behavior on Android/iOS, losing the ability to remove a plugin without restarting the tool is definitely a regression.",
        "createdAt" : "2021-01-28T23:11:38Z",
        "updatedAt" : "2021-02-19T15:13:45Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "1c557b6f-e8fc-4e83-9ace-0cf306c96eaf",
        "parentId" : "d23d18d0-796f-47cf-9c8a-95cd84e945c8",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "I started by handling this case (support adding and removing plugins). Unfortunately, it required additional changes to the test. See your comment about not introducing more globals or using `testUsingContext`.  My suggestion is two separate this feature into two PRs.",
        "createdAt" : "2021-01-29T00:40:17Z",
        "updatedAt" : "2021-02-19T15:13:46Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a3092476b456358fd4106136b5e5766bf503db",
    "line" : 447,
    "diffHunk" : "@@ -1,1 +1102,1106 @@// @dart = {{dartLanguageVersion}}\n\nimport '{{mainEntrypoint}}' as entrypoint;\nimport 'dart:io'; // ignore: dart_io_import.\n{{#linux}}"
  },
  {
    "id" : "e8950a69-9357-441f-81f7-300c9d583911",
    "prId" : 74469,
    "prUrl" : "https://github.com/flutter/flutter/pull/74469#pullrequestreview-581558875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f3cd0d2-5460-4561-aa6f-de043d7f531e",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "@jonahwilliams isn't there a way to propagate errors back to the build system so that you can also get errors from unrelated targets (if any) in the same run?",
        "createdAt" : "2021-01-31T17:59:33Z",
        "updatedAt" : "2021-02-19T15:13:46Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "60b21eff-07e8-4376-9a29-ef69ef85b3d9",
        "parentId" : "3f3cd0d2-5460-4561-aa6f-de043d7f531e",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This should be handled automatically by the build system (see https://github.com/flutter/flutter/pull/75251 ) - the only tasks that get skipped during a failure are those that depend on failed tasks. sibling tasks aren't affected",
        "createdAt" : "2021-02-02T16:55:18Z",
        "updatedAt" : "2021-02-19T15:13:46Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a3092476b456358fd4106136b5e5766bf503db",
    "line" : 343,
    "diffHunk" : "@@ -1,1 +590,594 @@  }\n  if (didFindError && throwOnPluginPubspecError) {\n    throwToolExit('Please resolve the errors');\n  }\n  final List<PluginInterfaceResolution> finalResolution = <PluginInterfaceResolution>[];"
  },
  {
    "id" : "1d2c0ae0-6a2e-4072-8e6b-ce2fe342de0c",
    "prId" : 74469,
    "prUrl" : "https://github.com/flutter/flutter/pull/74469#pullrequestreview-591741519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5610d2eb-5894-47d6-a2a4-990a50ddbf60",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "You can accept a PackageConfig instead of parsing it again, since the kernel compiler already has one",
        "createdAt" : "2021-02-04T18:34:52Z",
        "updatedAt" : "2021-02-19T15:13:46Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "b10c1893-1dae-4dc8-9b51-b269ad28f2c3",
        "parentId" : "5610d2eb-5894-47d6-a2a4-990a50ddbf60",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "Done!",
        "createdAt" : "2021-02-17T00:36:51Z",
        "updatedAt" : "2021-02-19T15:13:46Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a3092476b456358fd4106136b5e5766bf503db",
    "line" : 382,
    "diffHunk" : "@@ -1,1 +938,942 @@  String currentMainUri,\n  File newMainDart,\n  File mainFile,\n) async {\n  final List<Plugin> plugins = await findPlugins(rootProject);"
  }
]