[
  {
    "id" : "845f5dd1-2d86-4345-9ca7-90f60d560aaa",
    "prId" : 2204,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a640d49e-00d2-4a03-8892-3be18b5c43d8",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "The other places accessing the context have been top-level getters, not static methods. If not sure if it's worth continuing that pattern, or using static methods where they make sense.\n",
        "createdAt" : "2016-02-26T15:45:47Z",
        "updatedAt" : "2016-02-26T18:23:22Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "652905f5-5e0f-44e8-a172-7ed4e3c3b34b",
        "parentId" : "a640d49e-00d2-4a03-8892-3be18b5c43d8",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "OK, this serves to namespace the global instances a bit.\n",
        "createdAt" : "2016-02-26T15:58:07Z",
        "updatedAt" : "2016-02-26T18:23:22Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "33bcf042-6b11-4e82-ba48-8be4beda17c1",
        "parentId" : "a640d49e-00d2-4a03-8892-3be18b5c43d8",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "That, and also if you are importing `Foo` explicitly via `show`, then `Foo` is the only thing you need to `show`:\n\n``` dart\nimport 'simulators.dart' show IOSSimulatorUtils;\n\nmain() {\n  IOSSimulatorUtils utils = IOSSimulatorUtils.instance;\n}\n```\n\nI'm also planning to do a PR to clean up `globals.dart`. Otherwise it will grow into reexporting everything in the world.\n",
        "createdAt" : "2016-02-26T17:54:03Z",
        "updatedAt" : "2016-02-26T18:23:22Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "01ae45ea-3960-4bca-8977-074f2317b472",
        "parentId" : "a640d49e-00d2-4a03-8892-3be18b5c43d8",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "sgtm re: the globals cleanup, though I think there are some things we want to have available to much of the code, for convenience.\n",
        "createdAt" : "2016-02-26T18:11:39Z",
        "updatedAt" : "2016-02-26T18:23:22Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "677e63b79d82a650d3b83559818b15fd83bc2f96",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +33,37 @@class IOSSimulatorUtils {\n  /// Returns [IOSSimulatorUtils] active in the current app context (i.e. zone).\n  static IOSSimulatorUtils get instance => context[IOSSimulatorUtils] ?? (context[IOSSimulatorUtils] = new IOSSimulatorUtils());\n\n  List<IOSSimulator> getAttachedDevices() {"
  },
  {
    "id" : "11869733-1cd4-4524-a0bc-b44bcebdb702",
    "prId" : 2219,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c309237e-6d2c-46ee-8657-39bed3bf975e",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Should this be a getter?\n",
        "createdAt" : "2016-02-26T20:11:51Z",
        "updatedAt" : "2016-02-26T20:11:51Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "d584d3ff-496e-4540-a0e9-9f4fa5a6b3b5",
        "parentId" : "c309237e-6d2c-46ee-8657-39bed3bf975e",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "I can switch it. It overrides the parent class.\n",
        "createdAt" : "2016-02-26T20:12:42Z",
        "updatedAt" : "2016-02-26T20:12:55Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "b477651b-4345-4da4-a5c6-719f4698a9d8",
        "parentId" : "c309237e-6d2c-46ee-8657-39bed3bf975e",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Actually, I think I'll remove the method in a follow-on PR. It doesn't really make sense any more. We used to create devices w/o knowing whether they existed - we don't do that anymore.\n",
        "createdAt" : "2016-02-26T20:21:38Z",
        "updatedAt" : "2016-02-26T20:21:38Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c95500ea1bb02b435eb9240c3a408c63aca2388",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +241,245 @@  }\n\n  bool isConnected() => Platform.isMacOS;\n\n  @override"
  },
  {
    "id" : "07e627e0-2c59-4c4a-9980-f1dbdd2d61ed",
    "prId" : 2329,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60067008-4726-4a32-893e-85dc4d729451",
        "parentId" : null,
        "authorId" : "29909713-5424-4233-a02b-b02672141af4",
        "body" : "Do we need to share this constant name somewehre?\n",
        "createdAt" : "2016-03-02T19:44:17Z",
        "updatedAt" : "2016-03-02T19:44:17Z",
        "lastEditedBy" : "29909713-5424-4233-a02b-b02672141af4",
        "tags" : [
        ]
      },
      {
        "id" : "cda35ffd-c3ac-4063-befe-9e6057fb58bd",
        "parentId" : "60067008-4726-4a32-893e-85dc4d729451",
        "authorId" : "5c85d36f-d476-470a-8ea7-252cdb4fb025",
        "body" : "Yeah, that part if a bit brittle. There is no way to query simctl to check if a process is running by its identifier. I am going to make the name a bit more unique to Flutter. Would need to land a change in the engine first though.\n",
        "createdAt" : "2016-03-02T20:19:27Z",
        "updatedAt" : "2016-03-02T20:19:27Z",
        "lastEditedBy" : "5c85d36f-d476-470a-8ea7-252cdb4fb025",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f4fdcb866484d22b339b2d001e31f1f05a66ac6",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +364,368 @@    bool isRunning = exitsHappy([\n      '/usr/bin/killall',\n      'Runner',\n    ]);\n"
  },
  {
    "id" : "e67a2dad-fa83-4d39-bfc1-b38417f0a9bd",
    "prId" : 3692,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "094bdfdb-c955-4803-8e56-fc719e86820e",
        "parentId" : null,
        "authorId" : "29909713-5424-4233-a02b-b02672141af4",
        "body" : "@chinmaygarde what are the numbers in that message?  When I search google it shows me results after autocorrecting the long UUID.  Is that something relating to our signing?\n",
        "createdAt" : "2016-05-03T15:56:09Z",
        "updatedAt" : "2016-05-03T15:56:09Z",
        "lastEditedBy" : "29909713-5424-4233-a02b-b02672141af4",
        "tags" : [
        ]
      },
      {
        "id" : "77831fcd-fd33-4078-a5f1-870212faf40c",
        "parentId" : "094bdfdb-c955-4803-8e56-fc719e86820e",
        "authorId" : "29909713-5424-4233-a02b-b02672141af4",
        "body" : "Another one: http://stackoverflow.com/questions/34876146/unidentified-assertion-in-ios\n",
        "createdAt" : "2016-05-03T15:58:13Z",
        "updatedAt" : "2016-05-03T15:58:13Z",
        "lastEditedBy" : "29909713-5424-4233-a02b-b02672141af4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae3fe0628636f6e6735adfb948fe6a9aaa5f322f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +732,736 @@        return null;\n\n      // assertiond: assertion failed: 15E65 13E230: assertiond + 15801 [3C808658-78EC-3950-A264-79A64E0E463B]: 0x1\n      if (category == 'assertiond' && content.startsWith('assertion failed: ')\n           && content.endsWith(']: 0x1'))"
  },
  {
    "id" : "62d72117-2496-4dea-9427-f9bec873f90a",
    "prId" : 4063,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53c1e2b3-472f-4376-aee4-48c08a8db890",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Perhaps we should return an error condition if the user tries `flutter run --release` on a simulator (instead of remapping to debug mode)?\n",
        "createdAt" : "2016-05-20T03:51:20Z",
        "updatedAt" : "2016-05-23T19:51:02Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "2da350c7-17c1-4358-ad52-754ab70f0d63",
        "parentId" : "53c1e2b3-472f-4376-aee4-48c08a8db890",
        "authorId" : "5c85d36f-d476-470a-8ea7-252cdb4fb025",
        "body" : "I think check is already in place.\n",
        "createdAt" : "2016-05-23T19:48:53Z",
        "updatedAt" : "2016-05-23T19:51:02Z",
        "lastEditedBy" : "5c85d36f-d476-470a-8ea7-252cdb4fb025",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9fd55090b79e9f2c0d861bd6b884348679ab0a2",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +533,537 @@  Future<bool> _buildAndInstallApplicationBundle(ApplicationPackage app) async {\n    // Step 1: Build the Xcode project.\n    // The build mode for the simulator is always debug.\n    bool buildResult = await buildIOSXcodeProject(app, BuildMode.debug, buildForDevice: false);\n    if (!buildResult) {"
  },
  {
    "id" : "bd8f43ee-95fc-44e5-b523-c26583b0d13c",
    "prId" : 5287,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6730ff97-7977-4904-a4f8-65d90cc36ec3",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Is this true for all clients now?\n",
        "createdAt" : "2016-08-08T18:27:42Z",
        "updatedAt" : "2016-08-08T19:42:11Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "83ccaa48-c3b5-4705-b1a1-5699758bf278",
        "parentId" : "6730ff97-7977-4904-a4f8-65d90cc36ec3",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "Yes and I will remove the flag in a future CL\n",
        "createdAt" : "2016-08-08T19:41:31Z",
        "updatedAt" : "2016-08-08T19:42:11Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "e72f747eed1d35a56ef24788759952eeb6557c17",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +364,368 @@\n  @override\n  bool get needsDevFS => true;\n\n  _IOSSimulatorLogReader _logReader;"
  },
  {
    "id" : "2b71a6e2-d540-4b3f-ab7d-d5bcfb2030ab",
    "prId" : 6898,
    "prUrl" : "https://github.com/flutter/flutter/pull/6898#pullrequestreview-8934205",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31817224-716b-4f0c-ae83-a2c259d68564",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "similar question here, who cleans this up?\n",
        "createdAt" : "2016-11-16T23:34:37Z",
        "updatedAt" : "2016-11-16T23:41:09Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "32d0c365-9607-490f-875a-1ea8e0b3f12c",
        "parentId" : "31817224-716b-4f0c-ae83-a2c259d68564",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Discussion above.\n",
        "createdAt" : "2016-11-16T23:44:47Z",
        "updatedAt" : "2016-11-16T23:44:47Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a055e20c993bbd84accc439c30f25638fed387b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +558,562 @@  DeviceLogReader getLogReader({ApplicationPackage app}) {\n    _logReaders ??= <ApplicationPackage, _IOSSimulatorLogReader>{};\n    return _logReaders.putIfAbsent(app, () => new _IOSSimulatorLogReader(this, app));\n  }\n"
  },
  {
    "id" : "0e3438a6-ed17-402d-be79-84f7967f0424",
    "prId" : 6992,
    "prUrl" : "https://github.com/flutter/flutter/pull/6992#pullrequestreview-10314002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1ac2c15-157b-4133-959c-d0c47664e683",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "this should not be a printStatus",
        "createdAt" : "2016-11-23T14:37:10Z",
        "updatedAt" : "2016-11-28T14:58:13Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "9c774e85-c73e-4e5b-99dc-984497be96eb",
        "parentId" : "c1ac2c15-157b-4133-959c-d0c47664e683",
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "I know that some IDEs are (or were) scraping stdout for `Observatory listening on ...`. I'm going to leave it as a `printStatus` until I better understand if that change will break clients.",
        "createdAt" : "2016-11-28T13:26:41Z",
        "updatedAt" : "2016-11-28T14:58:13Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      }
    ],
    "commit" : "d83f0cc539f01b79dd8c6ebc558c09127dedf870",
    "line" : null,
    "diffHunk" : "@@ -1,1 +479,483 @@          .timeout(new Duration(seconds: 20));\n        printTrace('Observatory Uri on simulator: $deviceUri');\n        printStatus('Observatory listening on $deviceUri');\n        return new LaunchResult.succeeded(observatoryUri: deviceUri);\n      } catch (error) {"
  },
  {
    "id" : "3a09043d-5d5b-4c03-b957-48afb4e8b40e",
    "prId" : 7642,
    "prUrl" : "https://github.com/flutter/flutter/pull/7642#pullrequestreview-18524625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f0457e4-2eb3-4694-b214-94b119dd1624",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ditto",
        "createdAt" : "2017-01-25T22:55:42Z",
        "updatedAt" : "2017-01-25T23:51:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee0f539fcde552fd14af193fb812aaabb29434aa",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +14,18 @@import '../base/file_system.dart';\nimport '../base/io.dart';\nimport '../base/platform.dart' as p;\nimport '../base/process.dart';\nimport '../base/process_manager.dart';"
  },
  {
    "id" : "e36028b8-cae1-441a-add3-cd187977a971",
    "prId" : 7856,
    "prUrl" : "https://github.com/flutter/flutter/pull/7856#pullrequestreview-20098950",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0e133d1-3a47-465e-b2a8-05652d0a67ed",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "nit: \"non-Mac\"",
        "createdAt" : "2017-02-03T20:28:35Z",
        "updatedAt" : "2017-02-03T20:28:35Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "b2dcf201-b4fe-4643-abd7-75403fb810ca",
        "parentId" : "d0e133d1-3a47-465e-b2a8-05652d0a67ed",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Re-worded in #7859. Can't believe I missed this! *shame* \r\n\r\nGrepped the entire repo for 'non ', since these drive me insane as well. Turns out this was the only one.",
        "createdAt" : "2017-02-03T20:37:46Z",
        "updatedAt" : "2017-02-03T20:37:46Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd741d1c4ec9334b1c1728af8fbabcb6ef48cd81",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +362,366 @@  bool isSupported() {\n    if (!p.platform.isMacOS) {\n      _supportMessage = 'Not supported on a non Mac host';\n      return false;\n    }"
  },
  {
    "id" : "02f1d94b-0ef7-4d64-847c-22f5d84b0d72",
    "prId" : 7856,
    "prUrl" : "https://github.com/flutter/flutter/pull/7856#pullrequestreview-20097668",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7022b28-28b8-4eda-a506-58cd35e1a75f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yet? :-)",
        "createdAt" : "2017-02-03T20:28:43Z",
        "updatedAt" : "2017-02-03T20:28:44Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e4d98978-2f5d-4846-b888-9e1a1c432ef0",
        "parentId" : "b7022b28-28b8-4eda-a506-58cd35e1a75f",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Fixed in #7857 ",
        "createdAt" : "2017-02-03T20:29:55Z",
        "updatedAt" : "2017-02-03T20:29:55Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd741d1c4ec9334b1c1728af8fbabcb6ef48cd81",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +372,376 @@\n    if (blacklist.hasMatch(name)) {\n      _supportMessage = 'Flutter does not support either the Apple TV or Watch. Choose an iPhone 5s or above.';\n      return false;\n    }"
  },
  {
    "id" : "66750287-61ab-4e0a-8855-29fcc6722af6",
    "prId" : 7857,
    "prUrl" : "https://github.com/flutter/flutter/pull/7857#pullrequestreview-20101550",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0195a124-29e7-4844-bd5f-b770779d9c11",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yet support, not support yet :-)",
        "createdAt" : "2017-02-03T20:45:55Z",
        "updatedAt" : "2017-02-03T20:45:55Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "785afca4-11a1-4974-8879-882fe07cb9b6",
        "parentId" : "0195a124-29e7-4844-bd5f-b770779d9c11",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "That's what I get for being overzealous with vim 'redo command'. Fixed in #7859 along with the Mac host msg.",
        "createdAt" : "2017-02-03T20:53:13Z",
        "updatedAt" : "2017-02-03T20:53:13Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e798accf303e084833ba6d98030a93f5cb409d37",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +392,396 @@      if (name == 'iPhone 5s')\n        return true;\n      _supportMessage = 'Flutter does not support yet iPhone 5 or earlier. Select an iPhone 5s or above.';\n      return false;\n    }"
  },
  {
    "id" : "952aadb1-630e-41ef-b661-2b3c4f039224",
    "prId" : 18960,
    "prUrl" : "https://github.com/flutter/flutter/pull/18960#pullrequestreview-133439002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afec4f8a-4d1d-48bb-a800-7150a3051758",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "I'd change the definition of `_list()` to return `Map<String, dynamic>` instead of a raw `dynamic`.",
        "createdAt" : "2018-06-30T18:38:31Z",
        "updatedAt" : "2018-07-01T00:13:48Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "008b7be1-887b-45fa-b6e8-828f2d6f181a",
        "parentId" : "afec4f8a-4d1d-48bb-a800-7150a3051758",
        "authorId" : "0c8d9a2d-1c1f-4a3a-b013-3ccee758c857",
        "body" : "Done.",
        "createdAt" : "2018-06-30T23:42:55Z",
        "updatedAt" : "2018-06-30T23:42:55Z",
        "lastEditedBy" : "0c8d9a2d-1c1f-4a3a-b013-3ccee758c857",
        "tags" : [
        ]
      }
    ],
    "commit" : "73f46b63dc3250c645d90deda1aba33cf39f2e79",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +92,96 @@    final List<SimDevice> devices = <SimDevice>[];\n\n    final Map<String, dynamic> devicesSection = _list(SimControlListSection.devices);\n\n    for (String deviceCategory in devicesSection.keys) {"
  },
  {
    "id" : "80efdfc7-bab7-4966-b51c-b76804f061b9",
    "prId" : 31039,
    "prUrl" : "https://github.com/flutter/flutter/pull/31039#pullrequestreview-231987381",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9703c1d3-ecd6-4ac1-a237-c3c81900ff77",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Please add a small comment linking back to the original issue filled here (since it describes the issue very nicely, and the fix is otherwise not obvious in the code)",
        "createdAt" : "2019-04-30T04:00:40Z",
        "updatedAt" : "2019-04-30T21:44:18Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "aabbb7e94079c19fb101031a39b1ce9eefd3907c",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +344,348 @@\n    // Launch the updated application in the simulator.\n    try {\n      // Use the built application's Info.plist to get the bundle identifier,\n      // which should always yield the correct value and does not require"
  },
  {
    "id" : "aaac2845-7cbb-40aa-92d1-3f160bcde736",
    "prId" : 31039,
    "prUrl" : "https://github.com/flutter/flutter/pull/31039#pullrequestreview-255001669",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fc1df1f-a495-47e5-bce0-084c1340cc18",
        "parentId" : null,
        "authorId" : "fb6f0237-62e6-44e2-a5dd-6cdf392829dc",
        "body" : "Don't you also need to change isAppInstalled and uninstallApp?",
        "createdAt" : "2019-06-27T04:35:27Z",
        "updatedAt" : "2019-06-27T04:35:28Z",
        "lastEditedBy" : "fb6f0237-62e6-44e2-a5dd-6cdf392829dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "aabbb7e94079c19fb101031a39b1ce9eefd3907c",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +351,355 @@      final IOSApp iosApp = package;\n      final String plistPath = fs.path.join(iosApp.simulatorBundlePath, 'Info.plist');\n      final String bundleIdentifier = iosWorkflow.getPlistValueFromFile(plistPath, kCFBundleIdentifierKey);\n\n      await SimControl.instance.launch(id, bundleIdentifier, args);"
  },
  {
    "id" : "e06e764b-fb88-4f84-b0f2-c02290852314",
    "prId" : 37958,
    "prUrl" : "https://github.com/flutter/flutter/pull/37958#pullrequestreview-273393832",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8aa1400b-93c8-4e51-a75a-1d6f447b3b23",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Maybe put some of this in a printTrace() or printError() depending on whether we can explain how to download the missing artifacts. Also if there are artifacts missing, could that be detected with a doctor validator?",
        "createdAt" : "2019-08-09T20:50:48Z",
        "updatedAt" : "2019-08-09T23:01:52Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "f0c05bca-9003-4fbb-bb9a-87db61b35ee4",
        "parentId" : "8aa1400b-93c8-4e51-a75a-1d6f447b3b23",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "I agree there should be a message, rather than just telling them there aren't any simulators.",
        "createdAt" : "2019-08-09T21:59:40Z",
        "updatedAt" : "2019-08-09T23:01:52Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "9d072841-7109-41ba-a8df-7bd814a634ec",
        "parentId" : "8aa1400b-93c8-4e51-a75a-1d6f447b3b23",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I don't think its our missing artifacts, but some sort of internal initialization that isn't done yet. Like, call me again I'm not ready? Just a theory, I didn't find anything searching for the string",
        "createdAt" : "2019-08-09T22:53:36Z",
        "updatedAt" : "2019-08-09T23:01:52Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "96454d9a-1c9b-4295-bcf0-72a01853cc31",
        "parentId" : "8aa1400b-93c8-4e51-a75a-1d6f447b3b23",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Updated to include printError and raw simctl output",
        "createdAt" : "2019-08-09T23:22:06Z",
        "updatedAt" : "2019-08-09T23:22:06Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "afea8518df3a2c67981c06a121c0b6cb9aad8b05",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +93,97 @@      return json.decode(results.stdout)[section.name];\n    } on FormatException {\n      // We failed to parse the simctl output, or it returned junk.\n      // One known message is \"Install Started\" isn't valid JSON but is\n      // returned sometimes."
  },
  {
    "id" : "70da329a-84b1-45f9-8d22-e3bc6545e245",
    "prId" : 38102,
    "prUrl" : "https://github.com/flutter/flutter/pull/38102#pullrequestreview-273824083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1007fe25-f35a-41c7-8980-12cb7b028d41",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "```dart\r\nreturn int.tryParse(sdkMatch?.group(2)) ?? 11;\r\n```\r\nunless the `FormatException` from `int.parse()` is desired...",
        "createdAt" : "2019-08-12T16:35:12Z",
        "updatedAt" : "2019-08-12T16:59:01Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "1aa9210f-486a-4881-abcc-e4f1c6e0ac46",
        "parentId" : "1007fe25-f35a-41c7-8980-12cb7b028d41",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I had this before but tryParse can't handle null values. Based on the regex, it seems unlikely that group(2) would ever be non-null and contain an invalid number. The correct code with all branches covered would be something like:\r\n\r\n```\r\nfinal String group = sdkMatch?.group(2);\r\nif (group == null) {\r\n  return 11;\r\n}\r\nreturn int.tryParse(group) ?? 11;\r\n```\r\n\r\nBut it just felt so verbose",
        "createdAt" : "2019-08-12T17:01:10Z",
        "updatedAt" : "2019-08-12T17:01:10Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e67eea61c48e48b07aabc392a5e352ea9f6ec89e",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +469,473 @@  Future<int> get sdkMajorVersion async {\n    final Match sdkMatch = _iosSdkRegExp.firstMatch(await sdkNameAndVersion);\n    return int.parse(sdkMatch?.group(2) ?? '11');\n  }\n"
  },
  {
    "id" : "56525c23-7ba7-4803-9e11-68cb46a79c99",
    "prId" : 38102,
    "prUrl" : "https://github.com/flutter/flutter/pull/38102#pullrequestreview-273847143",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7cae737-3c27-4914-a18c-e42bf86c8886",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "nit: Flip the sense of the if and unindent the nested for loop:\r\n```dart\r\nif (devicesData == null || devicesData is! List<dynamic>) {\r\n  continue;\r\n}\r\n...\r\n```",
        "createdAt" : "2019-08-12T17:14:16Z",
        "updatedAt" : "2019-08-12T17:20:58Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "47b85c43-8332-46ce-9dc0-cb2487954bb2",
        "parentId" : "d7cae737-3c27-4914-a18c-e42bf86c8886",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "discussed offline: dart will not type promote outside of the block to `List<dynamic>`, thus requiring another cast",
        "createdAt" : "2019-08-12T17:45:01Z",
        "updatedAt" : "2019-08-12T17:45:01Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e67eea61c48e48b07aabc392a5e352ea9f6ec89e",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +114,118 @@    for (String deviceCategory in devicesSection.keys) {\n      final Object devicesData = devicesSection[deviceCategory];\n      if (devicesData != null && devicesData is List<dynamic>) {\n        for (Map<String, dynamic> data in devicesData.map<Map<String, dynamic>>(castStringKeyedMap)) {\n          devices.add(SimDevice(deviceCategory, data));"
  },
  {
    "id" : "944948a6-55d8-40cc-84a1-62c025b28fb3",
    "prId" : 38102,
    "prUrl" : "https://github.com/flutter/flutter/pull/38102#pullrequestreview-273835470",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b7770f8-d2bf-40da-9e96-86baa18920c3",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "If it's not prebuilt and not buildable, then how did we get here? Should the 'is' check be an assert?",
        "createdAt" : "2019-08-12T17:20:48Z",
        "updatedAt" : "2019-08-12T17:20:58Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "64df5bee-a2ed-476c-ac3f-d0b22fc563db",
        "parentId" : "0b7770f8-d2bf-40da-9e96-86baa18920c3",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "we need the `is` check to make this not an implicit cast, even with the covariant on _setupUpdatedApplicationBundle ",
        "createdAt" : "2019-08-12T17:23:09Z",
        "updatedAt" : "2019-08-12T17:23:10Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e67eea61c48e48b07aabc392a5e352ea9f6ec89e",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +333,337 @@    bool ipv6 = false,\n  }) async {\n    if (!prebuiltApplication && package is BuildableIOSApp) {\n      printTrace('Building ${package.name} for $id.');\n"
  },
  {
    "id" : "01316dad-b29c-43ea-86b4-0e0154f0873c",
    "prId" : 51916,
    "prUrl" : "https://github.com/flutter/flutter/pull/51916#pullrequestreview-370579514",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b9b7242-f12a-4353-92ff-031d866c2f0f",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "The issue indicates that the user might be able to avoid the ProcessExceptions by fixing a plist file. Should the `throwToolExit` include that in the message?",
        "createdAt" : "2020-03-06T06:49:26Z",
        "updatedAt" : "2020-03-06T19:40:24Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "bbdb52a1-37cf-4f30-b61d-85e4c738c037",
        "parentId" : "0b9b7242-f12a-4353-92ff-031d866c2f0f",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "Done.",
        "createdAt" : "2020-03-06T19:40:24Z",
        "updatedAt" : "2020-03-06T19:40:25Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5796e64a9bee9c3572bb613ecc3615edcfad0d2",
    "line" : 142,
    "diffHunk" : "@@ -1,1 +168,172 @@    RunResult result;\n    try {\n      result = await _processUtils.run(\n        <String>[_xcrunPath, 'simctl', 'install', deviceId, appPath],\n        throwOnError: true,"
  },
  {
    "id" : "c575a07d-497a-4f0b-9ead-5f22f77fea63",
    "prId" : 51916,
    "prUrl" : "https://github.com/flutter/flutter/pull/51916#pullrequestreview-370578127",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20333d73-ebca-4a93-8d1f-cad5cfb226dc",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "I'm not sure failing to take a screenshot should throw a tool exit. Maybe it should just print an error and continue?",
        "createdAt" : "2020-03-06T06:49:56Z",
        "updatedAt" : "2020-03-06T19:40:24Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "08e9bfe7-5715-45c3-9c4a-3c259c6979dd",
        "parentId" : "20333d73-ebca-4a93-8d1f-cad5cfb226dc",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "Done.",
        "createdAt" : "2020-03-06T19:38:01Z",
        "updatedAt" : "2020-03-06T19:40:24Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5796e64a9bee9c3572bb613ecc3615edcfad0d2",
    "line" : 185,
    "diffHunk" : "@@ -1,1 +216,220 @@        <String>[_xcrunPath, 'simctl', 'io', deviceId, 'screenshot', outputPath],\n        throwOnError: true,\n      );\n    } on ProcessException catch (exception) {\n      _logger.printError('Unable to take screenshot of $deviceId:\\n$exception');"
  }
]