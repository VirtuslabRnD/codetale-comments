[
  {
    "id" : "845f5dd1-2d86-4345-9ca7-90f60d560aaa",
    "prId" : 2204,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a640d49e-00d2-4a03-8892-3be18b5c43d8",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "The other places accessing the context have been top-level getters, not static methods. If not sure if it's worth continuing that pattern, or using static methods where they make sense.\n",
        "createdAt" : "2016-02-26T15:45:47Z",
        "updatedAt" : "2016-02-26T18:23:22Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "652905f5-5e0f-44e8-a172-7ed4e3c3b34b",
        "parentId" : "a640d49e-00d2-4a03-8892-3be18b5c43d8",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "OK, this serves to namespace the global instances a bit.\n",
        "createdAt" : "2016-02-26T15:58:07Z",
        "updatedAt" : "2016-02-26T18:23:22Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "33bcf042-6b11-4e82-ba48-8be4beda17c1",
        "parentId" : "a640d49e-00d2-4a03-8892-3be18b5c43d8",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "That, and also if you are importing `Foo` explicitly via `show`, then `Foo` is the only thing you need to `show`:\n\n``` dart\nimport 'simulators.dart' show IOSSimulatorUtils;\n\nmain() {\n  IOSSimulatorUtils utils = IOSSimulatorUtils.instance;\n}\n```\n\nI'm also planning to do a PR to clean up `globals.dart`. Otherwise it will grow into reexporting everything in the world.\n",
        "createdAt" : "2016-02-26T17:54:03Z",
        "updatedAt" : "2016-02-26T18:23:22Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "01ae45ea-3960-4bca-8977-074f2317b472",
        "parentId" : "a640d49e-00d2-4a03-8892-3be18b5c43d8",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "sgtm re: the globals cleanup, though I think there are some things we want to have available to much of the code, for convenience.\n",
        "createdAt" : "2016-02-26T18:11:39Z",
        "updatedAt" : "2016-02-26T18:23:22Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "677e63b79d82a650d3b83559818b15fd83bc2f96",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +33,37 @@class IOSSimulatorUtils {\n  /// Returns [IOSSimulatorUtils] active in the current app context (i.e. zone).\n  static IOSSimulatorUtils get instance => context[IOSSimulatorUtils] ?? (context[IOSSimulatorUtils] = new IOSSimulatorUtils());\n\n  List<IOSSimulator> getAttachedDevices() {"
  },
  {
    "id" : "11869733-1cd4-4524-a0bc-b44bcebdb702",
    "prId" : 2219,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c309237e-6d2c-46ee-8657-39bed3bf975e",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Should this be a getter?\n",
        "createdAt" : "2016-02-26T20:11:51Z",
        "updatedAt" : "2016-02-26T20:11:51Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "d584d3ff-496e-4540-a0e9-9f4fa5a6b3b5",
        "parentId" : "c309237e-6d2c-46ee-8657-39bed3bf975e",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "I can switch it. It overrides the parent class.\n",
        "createdAt" : "2016-02-26T20:12:42Z",
        "updatedAt" : "2016-02-26T20:12:55Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "b477651b-4345-4da4-a5c6-719f4698a9d8",
        "parentId" : "c309237e-6d2c-46ee-8657-39bed3bf975e",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Actually, I think I'll remove the method in a follow-on PR. It doesn't really make sense any more. We used to create devices w/o knowing whether they existed - we don't do that anymore.\n",
        "createdAt" : "2016-02-26T20:21:38Z",
        "updatedAt" : "2016-02-26T20:21:38Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c95500ea1bb02b435eb9240c3a408c63aca2388",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +241,245 @@  }\n\n  bool isConnected() => Platform.isMacOS;\n\n  @override"
  },
  {
    "id" : "07e627e0-2c59-4c4a-9980-f1dbdd2d61ed",
    "prId" : 2329,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60067008-4726-4a32-893e-85dc4d729451",
        "parentId" : null,
        "authorId" : "29909713-5424-4233-a02b-b02672141af4",
        "body" : "Do we need to share this constant name somewehre?\n",
        "createdAt" : "2016-03-02T19:44:17Z",
        "updatedAt" : "2016-03-02T19:44:17Z",
        "lastEditedBy" : "29909713-5424-4233-a02b-b02672141af4",
        "tags" : [
        ]
      },
      {
        "id" : "cda35ffd-c3ac-4063-befe-9e6057fb58bd",
        "parentId" : "60067008-4726-4a32-893e-85dc4d729451",
        "authorId" : "5c85d36f-d476-470a-8ea7-252cdb4fb025",
        "body" : "Yeah, that part if a bit brittle. There is no way to query simctl to check if a process is running by its identifier. I am going to make the name a bit more unique to Flutter. Would need to land a change in the engine first though.\n",
        "createdAt" : "2016-03-02T20:19:27Z",
        "updatedAt" : "2016-03-02T20:19:27Z",
        "lastEditedBy" : "5c85d36f-d476-470a-8ea7-252cdb4fb025",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f4fdcb866484d22b339b2d001e31f1f05a66ac6",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +364,368 @@    bool isRunning = exitsHappy([\n      '/usr/bin/killall',\n      'Runner',\n    ]);\n"
  },
  {
    "id" : "e67a2dad-fa83-4d39-bfc1-b38417f0a9bd",
    "prId" : 3692,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "094bdfdb-c955-4803-8e56-fc719e86820e",
        "parentId" : null,
        "authorId" : "29909713-5424-4233-a02b-b02672141af4",
        "body" : "@chinmaygarde what are the numbers in that message?  When I search google it shows me results after autocorrecting the long UUID.  Is that something relating to our signing?\n",
        "createdAt" : "2016-05-03T15:56:09Z",
        "updatedAt" : "2016-05-03T15:56:09Z",
        "lastEditedBy" : "29909713-5424-4233-a02b-b02672141af4",
        "tags" : [
        ]
      },
      {
        "id" : "77831fcd-fd33-4078-a5f1-870212faf40c",
        "parentId" : "094bdfdb-c955-4803-8e56-fc719e86820e",
        "authorId" : "29909713-5424-4233-a02b-b02672141af4",
        "body" : "Another one: http://stackoverflow.com/questions/34876146/unidentified-assertion-in-ios\n",
        "createdAt" : "2016-05-03T15:58:13Z",
        "updatedAt" : "2016-05-03T15:58:13Z",
        "lastEditedBy" : "29909713-5424-4233-a02b-b02672141af4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae3fe0628636f6e6735adfb948fe6a9aaa5f322f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +732,736 @@        return null;\n\n      // assertiond: assertion failed: 15E65 13E230: assertiond + 15801 [3C808658-78EC-3950-A264-79A64E0E463B]: 0x1\n      if (category == 'assertiond' && content.startsWith('assertion failed: ')\n           && content.endsWith(']: 0x1'))"
  },
  {
    "id" : "62d72117-2496-4dea-9427-f9bec873f90a",
    "prId" : 4063,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53c1e2b3-472f-4376-aee4-48c08a8db890",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Perhaps we should return an error condition if the user tries `flutter run --release` on a simulator (instead of remapping to debug mode)?\n",
        "createdAt" : "2016-05-20T03:51:20Z",
        "updatedAt" : "2016-05-23T19:51:02Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "2da350c7-17c1-4358-ad52-754ab70f0d63",
        "parentId" : "53c1e2b3-472f-4376-aee4-48c08a8db890",
        "authorId" : "5c85d36f-d476-470a-8ea7-252cdb4fb025",
        "body" : "I think check is already in place.\n",
        "createdAt" : "2016-05-23T19:48:53Z",
        "updatedAt" : "2016-05-23T19:51:02Z",
        "lastEditedBy" : "5c85d36f-d476-470a-8ea7-252cdb4fb025",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9fd55090b79e9f2c0d861bd6b884348679ab0a2",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +533,537 @@  Future<bool> _buildAndInstallApplicationBundle(ApplicationPackage app) async {\n    // Step 1: Build the Xcode project.\n    // The build mode for the simulator is always debug.\n    bool buildResult = await buildIOSXcodeProject(app, BuildMode.debug, buildForDevice: false);\n    if (!buildResult) {"
  },
  {
    "id" : "bd8f43ee-95fc-44e5-b523-c26583b0d13c",
    "prId" : 5287,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6730ff97-7977-4904-a4f8-65d90cc36ec3",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Is this true for all clients now?\n",
        "createdAt" : "2016-08-08T18:27:42Z",
        "updatedAt" : "2016-08-08T19:42:11Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "83ccaa48-c3b5-4705-b1a1-5699758bf278",
        "parentId" : "6730ff97-7977-4904-a4f8-65d90cc36ec3",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "Yes and I will remove the flag in a future CL\n",
        "createdAt" : "2016-08-08T19:41:31Z",
        "updatedAt" : "2016-08-08T19:42:11Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "e72f747eed1d35a56ef24788759952eeb6557c17",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +364,368 @@\n  @override\n  bool get needsDevFS => true;\n\n  _IOSSimulatorLogReader _logReader;"
  },
  {
    "id" : "2b71a6e2-d540-4b3f-ab7d-d5bcfb2030ab",
    "prId" : 6898,
    "prUrl" : "https://github.com/flutter/flutter/pull/6898#pullrequestreview-8934205",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31817224-716b-4f0c-ae83-a2c259d68564",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "similar question here, who cleans this up?\n",
        "createdAt" : "2016-11-16T23:34:37Z",
        "updatedAt" : "2016-11-16T23:41:09Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "32d0c365-9607-490f-875a-1ea8e0b3f12c",
        "parentId" : "31817224-716b-4f0c-ae83-a2c259d68564",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Discussion above.\n",
        "createdAt" : "2016-11-16T23:44:47Z",
        "updatedAt" : "2016-11-16T23:44:47Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a055e20c993bbd84accc439c30f25638fed387b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +558,562 @@  DeviceLogReader getLogReader({ApplicationPackage app}) {\n    _logReaders ??= <ApplicationPackage, _IOSSimulatorLogReader>{};\n    return _logReaders.putIfAbsent(app, () => new _IOSSimulatorLogReader(this, app));\n  }\n"
  },
  {
    "id" : "0e3438a6-ed17-402d-be79-84f7967f0424",
    "prId" : 6992,
    "prUrl" : "https://github.com/flutter/flutter/pull/6992#pullrequestreview-10314002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1ac2c15-157b-4133-959c-d0c47664e683",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "this should not be a printStatus",
        "createdAt" : "2016-11-23T14:37:10Z",
        "updatedAt" : "2016-11-28T14:58:13Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "9c774e85-c73e-4e5b-99dc-984497be96eb",
        "parentId" : "c1ac2c15-157b-4133-959c-d0c47664e683",
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "I know that some IDEs are (or were) scraping stdout for `Observatory listening on ...`. I'm going to leave it as a `printStatus` until I better understand if that change will break clients.",
        "createdAt" : "2016-11-28T13:26:41Z",
        "updatedAt" : "2016-11-28T14:58:13Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      }
    ],
    "commit" : "d83f0cc539f01b79dd8c6ebc558c09127dedf870",
    "line" : null,
    "diffHunk" : "@@ -1,1 +479,483 @@          .timeout(new Duration(seconds: 20));\n        printTrace('Observatory Uri on simulator: $deviceUri');\n        printStatus('Observatory listening on $deviceUri');\n        return new LaunchResult.succeeded(observatoryUri: deviceUri);\n      } catch (error) {"
  }
]