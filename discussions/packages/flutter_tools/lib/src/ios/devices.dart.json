[
  {
    "id" : "7b63a942-7a8d-49d8-8633-ea85fe94f045",
    "prId" : 4063,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e127f66f-aa9e-41d7-8bce-188d3bf924a0",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "We'll need to reconcile this asymmetry in how ios and android work. For android devices, building and `startApp()` are separate; for ios devices and ios simulators, `startApp()` both builds and runs the app; this is why the build mode is ignored in the android startApp implementation.\n\nCan you open an issue for this? One solution about be to add an abstract `build()` method to `Device`, call the apk build functionality from there for android, and move the ios building functionality out of startApp for ios+ios devices.\n",
        "createdAt" : "2016-05-20T03:46:18Z",
        "updatedAt" : "2016-05-23T19:51:02Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "d519015d-24f8-4f4a-8651-04fd74116dd1",
        "parentId" : "e127f66f-aa9e-41d7-8bce-188d3bf924a0",
        "authorId" : "5c85d36f-d476-470a-8ea7-252cdb4fb025",
        "body" : "I am not sure I understand the asymmetry. If I build the application in `debug` and attempt to start it in `release`, the tools would still need to be able to understand that the existing APK is invalid and must be rebuilt. So how can the mode be ignored when starting the application.\n",
        "createdAt" : "2016-05-20T21:11:06Z",
        "updatedAt" : "2016-05-23T19:51:02Z",
        "lastEditedBy" : "5c85d36f-d476-470a-8ea7-252cdb4fb025",
        "tags" : [
        ]
      },
      {
        "id" : "0b4d23af-fcd5-4ef6-af6c-4db939595e4d",
        "parentId" : "e127f66f-aa9e-41d7-8bce-188d3bf924a0",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Flutter_tools will always issue a build before a startApp, so we won't get into a situation where the apk is built for the wrong mode than startApp would want.\n\nNot for this PR, but I want to iteratively refactor the tool so that the Android and iOS workflows are substantially similar, and differences captured in the device subclasses. Right now we still have some instance of checks spread throughout the tool, to handle Android and iOS differently.\n",
        "createdAt" : "2016-05-21T03:44:46Z",
        "updatedAt" : "2016-05-23T19:51:02Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "e9884d72-a49d-4c72-aec1-1ed4b9a49503",
        "parentId" : "e127f66f-aa9e-41d7-8bce-188d3bf924a0",
        "authorId" : "5c85d36f-d476-470a-8ea7-252cdb4fb025",
        "body" : "Got it.\n",
        "createdAt" : "2016-05-23T19:48:38Z",
        "updatedAt" : "2016-05-23T19:51:02Z",
        "lastEditedBy" : "5c85d36f-d476-470a-8ea7-252cdb4fb025",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9fd55090b79e9f2c0d861bd6b884348679ab0a2",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +166,170 @@\n    // Step 1: Install the precompiled/DBC application if necessary.\n    bool buildResult = await buildIOSXcodeProject(app, mode, buildForDevice: true);\n    if (!buildResult) {\n      printError('Could not build the precompiled application for the device.');"
  },
  {
    "id" : "991ca662-875d-45ce-bcf0-7df08039d02a",
    "prId" : 4424,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "851f54eb-e89a-4c8b-b9b0-c5ba47d35abd",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "It should hopefully be sufficient to check `debuggingOptions.debuggingEnabled`.\n",
        "createdAt" : "2016-06-14T15:52:46Z",
        "updatedAt" : "2016-06-14T18:33:10Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b8f397529dc732da080e7106b04e769f93f7792",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +233,237 @@    int localDiagPort;\n\n    if (!debuggingOptions.debuggingEnabled || mode == BuildMode.release) {\n      // If debugging is not enabled, just launch the application and continue.\n      printTrace(\"Debugging is not enabled\");"
  },
  {
    "id" : "1518edbd-7978-440c-b5be-f40a78b33c58",
    "prId" : 4976,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5348832a-4078-4061-9a6a-4db423a09ddc",
        "parentId" : null,
        "authorId" : "29909713-5424-4233-a02b-b02672141af4",
        "body" : "Does `flutter analyze` not catch this?\n",
        "createdAt" : "2016-07-20T04:11:14Z",
        "updatedAt" : "2016-07-20T04:11:14Z",
        "lastEditedBy" : "29909713-5424-4233-a02b-b02672141af4",
        "tags" : [
        ]
      },
      {
        "id" : "e38e0230-96df-4a62-b484-f4b01b165f59",
        "parentId" : "5348832a-4078-4061-9a6a-4db423a09ddc",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "It does now. An older version of the analyzer had a bug and failed to catch this. We started seeing failures after we picked up a new analyzer.\n",
        "createdAt" : "2016-07-20T04:14:22Z",
        "updatedAt" : "2016-07-20T04:14:22Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "9919caa57a822329d89c025cafdbdf6ec892fbea",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +261,265 @@                                                   debuggingOptions.diagnosticPort);\n        } else {\n          forwardDiagPort = new Future<int>.value(null);\n        }\n"
  },
  {
    "id" : "8d57fc58-f7b9-4863-85a5-9c958dec0787",
    "prId" : 6898,
    "prUrl" : "https://github.com/flutter/flutter/pull/6898#pullrequestreview-8941725",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "acc24b5c-d3cd-4304-9963-f70ddc744bf2",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "Where are you removing dead _logReaders from this map?\n",
        "createdAt" : "2016-11-16T23:33:42Z",
        "updatedAt" : "2016-11-16T23:41:09Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "14d40843-5ceb-4313-be89-37d619c95837",
        "parentId" : "acc24b5c-d3cd-4304-9963-f70ddc744bf2",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "I was purposely letting them live as long as the process to match what was being done before with the instance variable.  Yes, this could _theoretically_ grow without bound, but practically speaking, we're only going to have one `ApplicationPackage` we're passing around.\n\nIf we felt like being super careful, we could override `equals()` and `hashCode()` in `ApplicationPackage`...\n",
        "createdAt" : "2016-11-16T23:44:27Z",
        "updatedAt" : "2016-11-16T23:44:27Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "d1ce6d5e-8673-439c-bdb5-bb07236317a3",
        "parentId" : "acc24b5c-d3cd-4304-9963-f70ddc744bf2",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "Yeah, it occurred to me that almost everything in flutter_tools lives as long as the process and so this isn't any different.\n\nMy long term dream would be for flutter_tools to actually live a long time and operate like a daemon that clients speak to, at that point it may matter. I don't think we need to address this in this CL but maybe add a TODO where we add to the maps to someday remove from them too.\n",
        "createdAt" : "2016-11-17T00:48:31Z",
        "updatedAt" : "2016-11-17T00:48:31Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a055e20c993bbd84accc439c30f25638fed387b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +380,384 @@  @override\n  DeviceLogReader getLogReader({ApplicationPackage app}) {\n    _logReaders ??= <ApplicationPackage, _IOSDeviceLogReader>{};\n    return _logReaders.putIfAbsent(app, () => new _IOSDeviceLogReader(this, app));\n  }"
  },
  {
    "id" : "16376d00-af1e-4c00-b316-8214e89735fd",
    "prId" : 7061,
    "prUrl" : "https://github.com/flutter/flutter/pull/7061#pullrequestreview-10874340",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a48e11b7-57f3-4f52-8390-fe31fed9915b",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "This code could be made device-agnostic (see my comment above in the Android code).",
        "createdAt" : "2016-11-29T17:11:36Z",
        "updatedAt" : "2016-12-01T01:11:37Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "88a49086-0d5e-45c7-9f57-519172527f9e",
        "parentId" : "a48e11b7-57f3-4f52-8390-fe31fed9915b",
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "Agreed but out of scope for this PR. Added a TODO and I'll try and tackle that soon.",
        "createdAt" : "2016-11-30T23:32:25Z",
        "updatedAt" : "2016-12-01T01:11:37Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      },
      {
        "id" : "e25fbd3b-688b-45a5-8a9a-ede517f975e8",
        "parentId" : "a48e11b7-57f3-4f52-8390-fe31fed9915b",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "SGTM",
        "createdAt" : "2016-11-30T23:40:11Z",
        "updatedAt" : "2016-12-01T01:11:37Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4d39b0379cdd667e3822d069709d6d2c6c6d947",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +264,268 @@        debuggingOptions.observatoryPort,\n      );\n      Future<Uri> forwardDiagUri;\n      if (debuggingOptions.buildMode == BuildMode.debug) {\n        forwardDiagUri = _acquireServiceUri("
  },
  {
    "id" : "3f0bc209-0889-47aa-8d55-f19751a3f97c",
    "prId" : 7061,
    "prUrl" : "https://github.com/flutter/flutter/pull/7061#pullrequestreview-10873821",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85b15e66-2626-4c2b-a0ce-e4e76c3412c7",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "each device has it's own way of printing these error messages. If this code was made device-agnostic it will be easier to provide a consistent experience.",
        "createdAt" : "2016-11-29T17:14:03Z",
        "updatedAt" : "2016-12-01T01:11:37Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "7601eaf5-eae9-4420-a16e-e47473eddd2e",
        "parentId" : "85b15e66-2626-4c2b-a0ce-e4e76c3412c7",
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "Agreed. Future.",
        "createdAt" : "2016-11-30T23:32:21Z",
        "updatedAt" : "2016-12-01T01:11:37Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4d39b0379cdd667e3822d069709d6d2c6c6d947",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +345,349 @@\n    if (forwardResult == null) {\n      printTrace(\"Could not foward remote $serviceName port $remoteUri to local port $localPort\");\n      return null;\n    }"
  },
  {
    "id" : "688411b0-1eae-48e4-a18d-a5fc326389b4",
    "prId" : 7061,
    "prUrl" : "https://github.com/flutter/flutter/pull/7061#pullrequestreview-10873812",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a1bfe7f-ac2b-4f1d-bd94-4808bbde0985",
        "parentId" : null,
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "dito",
        "createdAt" : "2016-11-29T17:14:13Z",
        "updatedAt" : "2016-12-01T01:11:37Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "586d4496-99e1-46bf-be53-3f42fe600504",
        "parentId" : "1a1bfe7f-ac2b-4f1d-bd94-4808bbde0985",
        "authorId" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "body" : "Agreed. Future.",
        "createdAt" : "2016-11-30T23:32:19Z",
        "updatedAt" : "2016-12-01T01:11:37Z",
        "lastEditedBy" : "ef18e386-81c5-4d21-83a1-6dee4f1a6e78",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4d39b0379cdd667e3822d069709d6d2c6c6d947",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +351,355 @@    Uri forwardUri = remoteUri.replace(port: forwardResult);\n\n    printStatus('$serviceName listening on $forwardUri');\n    return forwardUri;\n  }"
  },
  {
    "id" : "e978e457-6058-4278-b885-9f7b5509f654",
    "prId" : 7642,
    "prUrl" : "https://github.com/flutter/flutter/pull/7642#pullrequestreview-18526550",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8b703cc-d01c-44a1-a4a1-5c42855fed0b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "why as p?",
        "createdAt" : "2017-01-25T22:55:30Z",
        "updatedAt" : "2017-01-25T23:51:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "8e436e19-8b7e-435b-bc3c-655267c48686",
        "parentId" : "b8b703cc-d01c-44a1-a4a1-5c42855fed0b",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Otherwise it collides with `TargetPlatform get platform`, which is why I added the TODO to change that to `TargetPlatform get targetPlatform`.  I'll remove the alias once I follow-up on that TODO.",
        "createdAt" : "2017-01-25T23:07:22Z",
        "updatedAt" : "2017-01-25T23:51:09Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee0f539fcde552fd14af193fb812aaabb29434aa",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +10,14 @@import '../base/io.dart';\nimport '../base/os.dart';\nimport '../base/platform.dart' as p;\nimport '../base/process.dart';\nimport '../base/process_manager.dart';"
  },
  {
    "id" : "e283dea6-14cd-4bd6-90c9-6d452a64af08",
    "prId" : 12977,
    "prUrl" : "https://github.com/flutter/flutter/pull/12977#pullrequestreview-77254277",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e671a42c-374c-41ce-bb5a-8dd444eea98d",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Maybe add the '0x'?",
        "createdAt" : "2017-11-16T18:28:27Z",
        "updatedAt" : "2017-11-16T18:29:32Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "2db64374-dfd9-49a8-8fc9-b1705e232c70",
        "parentId" : "e671a42c-374c-41ce-bb5a-8dd444eea98d",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "ios_deploy is pretty inconsistent. In this case, it doesn't actually print the 0x",
        "createdAt" : "2017-11-16T20:35:54Z",
        "updatedAt" : "2017-11-16T20:35:55Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ef7f6c2f4c46124809f538a8dab26f17f58f6dc",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +349,353 @@\n    // Launch issues.\n    } else if (stdout.contains('e80000e2')) {\n      printError('''\n═══════════════════════════════════════════════════════════════════════════════════"
  },
  {
    "id" : "61f5e76d-e2ab-4bd5-af14-b96d343cc6a2",
    "prId" : 18488,
    "prUrl" : "https://github.com/flutter/flutter/pull/18488#pullrequestreview-129247412",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d13a43c7-22d5-4312-ad00-ffa690ad1618",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "I filed https://github.com/libimobiledevice/libimobiledevice/issues/674 for `iproxy` to support hostPort==0",
        "createdAt" : "2018-06-15T16:23:16Z",
        "updatedAt" : "2018-06-15T19:52:56Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "2c791184-db9b-4796-9ff9-4749fe4ede10",
        "parentId" : "d13a43c7-22d5-4312-ad00-ffa690ad1618",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "oh thanks. i had looked into doing that (or even submitting a patch) but got confused about which project it corresponded to and then forgot.",
        "createdAt" : "2018-06-15T16:57:48Z",
        "updatedAt" : "2018-06-15T19:52:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "63971d0fe9721f30b827e58caf9d16ac4a941f84",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +516,520 @@\n    bool connected = false;\n    while (!connected) {\n      // Usage: iproxy LOCAL_TCP_PORT DEVICE_TCP_PORT UDID\n      process = await runCommand(<String>["
  },
  {
    "id" : "a50017ad-3c6b-43a6-9f80-b0712e1eb378",
    "prId" : 20555,
    "prUrl" : "https://github.com/flutter/flutter/pull/20555#pullrequestreview-145915997",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b4d04a7-200d-464c-b996-08ec95e15ebe",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This should be a no-op change. Does it change the behaviour?",
        "createdAt" : "2018-08-14T04:53:38Z",
        "updatedAt" : "2018-08-15T22:35:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "d5f09d5a-f58d-4e61-89f4-b1dd54b9a69b",
        "parentId" : "8b4d04a7-200d-464c-b996-08ec95e15ebe",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "oh never mind I see what it's doing.",
        "createdAt" : "2018-08-14T04:53:52Z",
        "updatedAt" : "2018-08-15T22:35:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7e247bd7fb55601bc1608ee18efac11fb6e81a4",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +379,383 @@  Future<Null> takeScreenshot(File outputFile) async {\n    await iMobileDevice.takeScreenshot(outputFile);\n  }\n}\n"
  },
  {
    "id" : "b455d002-a54c-4e08-a2a8-9fb4f5f1b4a4",
    "prId" : 23776,
    "prUrl" : "https://github.com/flutter/flutter/pull/23776#pullrequestreview-171712943",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31668c0a-19cd-4b27-8aab-6ee2510777f2",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "In verbose mode, it'd be good to see this error, so let's make this:\r\n\r\n```dart\r\n} on IOSDeviceNotFoundError catch (error) {\r\n  // Unable to find device with given udid. Possibly a network device.\r\n  printTrace('Error getting attached iOS device: $error');\r\n}\r\n```",
        "createdAt" : "2018-11-05T17:26:10Z",
        "updatedAt" : "2018-11-05T19:10:54Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "b67ce6d4-d47f-4638-a730-f5c8042d7975",
        "parentId" : "31668c0a-19cd-4b27-8aab-6ee2510777f2",
        "authorId" : "ceb61b72-4f62-4773-8997-f5ba4c4f9600",
        "body" : "Done",
        "createdAt" : "2018-11-05T19:11:09Z",
        "updatedAt" : "2018-11-05T19:11:09Z",
        "lastEditedBy" : "ceb61b72-4f62-4773-8997-f5ba4c4f9600",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e667fec357a607694690b69babb82dba539239e",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +155,159 @@        devices.add(IOSDevice(id, name: deviceName, sdkVersion: sdkVersion));\n      } on IOSDeviceNotFoundError catch (error) {\n        // Unable to find device with given udid. Possibly a network device.\n        printTrace('Error getting attached iOS device: $error');\n      }"
  },
  {
    "id" : "14570f25-6e07-4e0d-9960-030392c7adfd",
    "prId" : 34669,
    "prUrl" : "https://github.com/flutter/flutter/pull/34669#pullrequestreview-260936113",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03373e50-b8f0-40db-b0d2-5799d67c99cd",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "return here, then else not needed.",
        "createdAt" : "2019-07-08T21:03:18Z",
        "updatedAt" : "2019-07-12T15:00:49Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "0cdf49d0-97f0-4b04-99c1-d8f4bc7c5474",
        "parentId" : "03373e50-b8f0-40db-b0d2-5799d67c99cd",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Should we throw here instead?  What are the cases where this can get instantiated on an unsupported platform?",
        "createdAt" : "2019-07-10T22:18:36Z",
        "updatedAt" : "2019-07-12T15:00:49Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "07dcc2fe-8ade-427e-be60-8ae06672074c",
        "parentId" : "03373e50-b8f0-40db-b0d2-5799d67c99cd",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "I chatted with @jonahwilliams about this, we it doesn't look like it gets instantiated, but we're not sure. Since it could potentially be a breaking change, I created [this issue for it](https://github.com/flutter/flutter/issues/36008) and will land after this PR.",
        "createdAt" : "2019-07-11T20:28:11Z",
        "updatedAt" : "2019-07-12T15:00:49Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "362debb948a6f835d5ad0795c6a1aa1c3b579845",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +128,132 @@      printError('Cannot control iOS devices or simulators. ideviceinstaller and iproxy are not available on your platform.');\n      _installerPath = null;\n      _iproxyPath = null;\n      return;\n    }"
  },
  {
    "id" : "32edc4fe-fcdf-446c-a4fc-d893448222a9",
    "prId" : 38629,
    "prUrl" : "https://github.com/flutter/flutter/pull/38629#pullrequestreview-275622851",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60cc262f-437f-4ade-9862-ead38e1f5942",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "@zanderso would we want to send an analytics event here so that if we see a spike in untrusted events, we know something's gone wrong?",
        "createdAt" : "2019-08-15T19:17:32Z",
        "updatedAt" : "2019-08-15T20:42:17Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "e040d7d9-9613-49f8-987f-10f73d7198fd",
        "parentId" : "60cc262f-437f-4ade-9862-ead38e1f5942",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Yes, that would be a good signal to generate. Maybe something like `UsageEvent('device', 'ios-trust-failure').send();`",
        "createdAt" : "2019-08-15T19:31:33Z",
        "updatedAt" : "2019-08-15T20:42:17Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb93329351a7947d18feab8268053f8b21cbfe32",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +188,192 @@        printTrace('Error getting attached iOS device: $error');\n      } on IOSDeviceNotTrustedError catch (error) {\n        printTrace('Error getting attached iOS device information: $error');\n        UsageEvent('device', 'ios-trust-failure').send();\n      }"
  }
]