[
  {
    "id" : "5d372997-7f2b-4d1b-beb2-b99f6710958f",
    "prId" : 12674,
    "prUrl" : "https://github.com/flutter/flutter/pull/12674#pullrequestreview-71661263",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09459c4b-f63d-42b9-a6ac-68d60a9c5764",
        "parentId" : null,
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "I really don't understand why this change causes https://travis-ci.org/flutter/flutter/jobs/291503341#L3166-L3208\r\n\r\n```\r\n  NoSuchMethodError: The method 'call' was called on null.\r\n  Receiver: null\r\n  Tried calling: call(\"/path/to/main.dart\")\r\n  dart:core                                          List.forEach\r\n  package:flutter_tools/src/compile.dart 134:22      ResidentCompiler.recompile\r\n  test/compile_test.dart 178:41                      _recompile\r\n  test/compile_test.dart 130:13                      main.<fn>.<fn>\r\n  test/src/context.dart 102:32                       testUsingContext.<fn>.<fn>\r\n  package:flutter_tools/src/base/context.dart 76:26  AppContext._run\r\n  package:flutter_tools/src/base/context.dart 66:13  AppContext.runInZone.<fn>\r\n  dart:async                                         runZoned\r\n  package:flutter_tools/src/base/context.dart 65:12  AppContext.runInZone\r\n  test/src/context.dart 91:32                        testUsingContext.<fn>\r\n  ===== asynchronous gap ===========================\r\n  dart:async                                         _Completer.completeError\r\n  package:flutter_tools/src/compile.dart 138:3       ResidentCompiler.recompile\r\n  ===== asynchronous gap ===========================\r\n  dart:async                                         new Future.microtask\r\n  package:flutter_tools/src/compile.dart 124:82      ResidentCompiler.recompile\r\n  test/compile_test.dart 178:41                      _recompile\r\n  ===== asynchronous gap ===========================\r\n  dart:async                                         new Future.microtask\r\n  test/compile_test.dart 172:36                      _recompile\r\n  test/compile_test.dart 130:13                      main.<fn>.<fn>\r\n  ===== asynchronous gap ===========================\r\n  dart:async                                         _asyncThenWrapperHelper\r\n  test/compile_test.dart 121:56                      main.<fn>.<fn>\r\n  test/src/context.dart 102:32                       testUsingContext.<fn>.<fn>\r\n  ===== asynchronous gap ===========================\r\n  dart:async                                         new Future.microtask\r\n  test/src/context.dart 91:51                        testUsingContext.<fn>.<fn>\r\n  package:flutter_tools/src/base/context.dart 76:26  AppContext._run\r\n  ===== asynchronous gap ===========================\r\n  dart:async                                         new Future.microtask\r\n  package:flutter_tools/src/base/context.dart 72:48  AppContext._run\r\n  package:flutter_tools/src/base/context.dart 66:13  AppContext.runInZone.<fn>\r\n  dart:async                                         runZoned\r\n  package:flutter_tools/src/base/context.dart 65:12  AppContext.runInZone\r\n  test/src/context.dart 91:32                        testUsingContext.<fn>\r\n  ===== asynchronous gap ===========================\r\n  dart:async                                         new Future.microtask\r\n  test/src/context.dart 73:30                        testUsingContext.<fn>\r\n```",
        "createdAt" : "2017-10-23T19:42:55Z",
        "updatedAt" : "2017-10-24T20:04:17Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "0ee379f3-75c9-421e-9bbc-b810f2aa1b46",
        "parentId" : "09459c4b-f63d-42b9-a6ac-68d60a9c5764",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "It seems to be an issue with mocked stdin",
        "createdAt" : "2017-10-23T20:12:55Z",
        "updatedAt" : "2017-10-24T20:04:17Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "39d6f849-8a0a-428e-a422-6f4d9b4b3beb",
        "parentId" : "09459c4b-f63d-42b9-a6ac-68d60a9c5764",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "fix by the last commit",
        "createdAt" : "2017-10-24T20:29:10Z",
        "updatedAt" : "2017-10-24T20:29:10Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7dc498cdc9f95fe3fad31653966d1cd899042457",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +132,136 @@    final String inputKey = new Uuid().generateV4();\n    _server.stdin.writeln('recompile $inputKey');\n    invalidatedFiles.forEach(_server.stdin.writeln);\n    _server.stdin.writeln(inputKey);\n"
  },
  {
    "id" : "b0078688-d4bb-43c8-87ef-f666a248898b",
    "prId" : 15565,
    "prUrl" : "https://github.com/flutter/flutter/pull/15565#pullrequestreview-104233356",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9a81a92-c22e-4735-b6a6-9fd7a70f60df",
        "parentId" : null,
        "authorId" : "3bd4879d-8ad5-4053-ab97-f5d0b89df535",
        "body" : "Would it make sense to make the same change above on line 111 ?",
        "createdAt" : "2018-03-15T13:11:31Z",
        "updatedAt" : "2018-03-16T17:18:09Z",
        "lastEditedBy" : "3bd4879d-8ad5-4053-ab97-f5d0b89df535",
        "tags" : [
        ]
      },
      {
        "id" : "203b4818-4d0d-40cb-a0ff-ffa1151e18c0",
        "parentId" : "f9a81a92-c22e-4735-b6a6-9fd7a70f60df",
        "authorId" : "45727d35-317d-432d-b0c6-83fc042c0c8a",
        "body" : "Maybe in the future.",
        "createdAt" : "2018-03-15T14:46:51Z",
        "updatedAt" : "2018-03-16T17:18:09Z",
        "lastEditedBy" : "45727d35-317d-432d-b0c6-83fc042c0c8a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b36df76a7a2077a63df3e7125433cfad0eaf591e",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +132,136 @@      _trackWidgetCreation = trackWidgetCreation,\n      _packagesPath = packagesPath,\n      stdoutHandler = new _StdoutHandler(consumer: compilerMessageConsumer) {\n    // This is a URI, not a file path, so the forward slash is correct even on Windows.\n    if (!_sdkRoot.endsWith('/'))"
  },
  {
    "id" : "bc1d5dfb-ad3a-445c-b83e-cb0ffd4be47f",
    "prId" : 15565,
    "prUrl" : "https://github.com/flutter/flutter/pull/15565#pullrequestreview-104619469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed676685-da7b-4bd2-a18f-c818579a8a91",
        "parentId" : null,
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Do we have to kill the frontend server? Wouldn't sending 'quit' command work more cleanly?",
        "createdAt" : "2018-03-16T15:27:48Z",
        "updatedAt" : "2018-03-16T17:18:09Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "af28c006-aa02-4320-b90f-b669cb849354",
        "parentId" : "ed676685-da7b-4bd2-a18f-c818579a8a91",
        "authorId" : "45727d35-317d-432d-b0c6-83fc042c0c8a",
        "body" : "Yeah, `quit` is probably cleaner, but I wanted to avoid handling the case when frontend server got into some weird state - handling that would require sending `quit`, waiting with timeout for server to exit, then killing it. \r\n\r\nWe can clean this up after we land this CL.",
        "createdAt" : "2018-03-16T15:30:34Z",
        "updatedAt" : "2018-03-16T17:18:09Z",
        "lastEditedBy" : "45727d35-317d-432d-b0c6-83fc042c0c8a",
        "tags" : [
        ]
      },
      {
        "id" : "6a19401b-d39b-49d0-88c6-464a3a00f335",
        "parentId" : "ed676685-da7b-4bd2-a18f-c818579a8a91",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Arguably, if frontend server can get into weird state so that it doesn't respond to 'quit' command, we would want to know about it now. After all this is test suite that should help us uncover bugs like that.\r\nCleaning it up later is fine though.",
        "createdAt" : "2018-03-16T15:50:58Z",
        "updatedAt" : "2018-03-16T17:18:09Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "b36df76a7a2077a63df3e7125433cfad0eaf591e",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +240,244 @@\n  Future<dynamic> shutdown() {\n    _server.kill();\n    return _server.exitCode;\n  }"
  },
  {
    "id" : "f80a00c6-a8bb-4c96-aca1-14dcc852bd17",
    "prId" : 16518,
    "prUrl" : "https://github.com/flutter/flutter/pull/16518#pullrequestreview-111733899",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cce50ad-bc35-45e4-a505-4ee8ba474fd0",
        "parentId" : null,
        "authorId" : "06e8e4a2-ae13-4edd-80ce-b240ae531995",
        "body" : "Should the error messages themselves be here too?",
        "createdAt" : "2018-04-12T17:57:17Z",
        "updatedAt" : "2018-04-12T22:05:35Z",
        "lastEditedBy" : "06e8e4a2-ae13-4edd-80ce-b240ae531995",
        "tags" : [
        ]
      },
      {
        "id" : "72b326ae-b0f0-4d5d-b7be-d4ca2cf0d932",
        "parentId" : "6cce50ad-bc35-45e4-a505-4ee8ba474fd0",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Perhaps we can add them here later, if it would make sense to expose them like this.\r\nCurrently assumption is that complete compiler output is presented to the user which includes errors/warnings/nits.",
        "createdAt" : "2018-04-12T18:09:08Z",
        "updatedAt" : "2018-04-12T22:05:35Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "6638eae24f1dc7d9e00966cd71bfe0482945b8ea",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +19,23 @@  String outputFilename;\n  int errorCount;\n\n  CompilerOutput(this.outputFilename, this.errorCount);\n}"
  },
  {
    "id" : "edeeca86-00cf-4f33-846b-38d4906d2491",
    "prId" : 21760,
    "prUrl" : "https://github.com/flutter/flutter/pull/21760#pullrequestreview-157007535",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "103e08c7-5770-4796-afd0-35b5a129ab0a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "fyi @aam",
        "createdAt" : "2018-09-19T20:28:34Z",
        "updatedAt" : "2018-09-20T22:42:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "41161ae6817346e966854bb787f6ad8c0dd201e0",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +391,395 @@\n    _server.stdin.writeln('compile $scriptFilename');\n\n    return _stdoutHandler.compilerOutput.future;\n  }"
  },
  {
    "id" : "3af7e792-c684-4afb-baea-adc60f16187e",
    "prId" : 23299,
    "prUrl" : "https://github.com/flutter/flutter/pull/23299#pullrequestreview-166627301",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e637b2a-fda1-4b64-9623-422cb066e444",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "make this required to defensively avoid bugs where parameters are not passed through as required.\r\nIt would be ideal in the future to have some BuildConfig object storing all the parameters we are passing around here so there aren't any bugs flowing the args between the methods but making parameters required is the next best thing.\r\n",
        "createdAt" : "2018-10-19T17:41:52Z",
        "updatedAt" : "2018-10-23T15:13:17Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "12c0f8bfa013e8637dbfcaf552ded785275bc0f5",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +125,129 @@    bool linkPlatformKernelIn = false,\n    bool aot = false,\n    @required bool trackWidgetCreation,\n    List<String> extraFrontEndOptions,\n    String incrementalCompilerByteStorePath,"
  },
  {
    "id" : "b7100fe2-1a17-45f0-88ca-7ee4fbcb6489",
    "prId" : 23384,
    "prUrl" : "https://github.com/flutter/flutter/pull/23384#pullrequestreview-167147595",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b628bb7b-8194-44bf-a3e1-881638884d76",
        "parentId" : null,
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Not sure why we are returning null if fileSystemRoots is null and we can't map file to package:-uri",
        "createdAt" : "2018-10-22T22:21:22Z",
        "updatedAt" : "2018-10-23T00:16:26Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "d1f6d338-d44f-495f-a468-0ff7399fefc8",
        "parentId" : "b628bb7b-8194-44bf-a3e1-881638884d76",
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "This is a helper function wrapped by `mapFilename` and `mapFileUri`.  Returning null tells the wrapper to return the original filename or URI\r\n",
        "createdAt" : "2018-10-22T23:12:36Z",
        "updatedAt" : "2018-10-23T00:16:26Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "2143d8fa850c1cbd1d50c44a595f2cd29ce28bd7",
    "line" : 168,
    "diffHunk" : "@@ -1,1 +545,549 @@      }\n    }\n    return null;\n  }\n"
  },
  {
    "id" : "de026a94-7175-405e-ae4b-4cf827e4e198",
    "prId" : 26988,
    "prUrl" : "https://github.com/flutter/flutter/pull/26988#pullrequestreview-195770046",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7edc85d7-6eac-41c3-8a74-0af9a7ad5fea",
        "parentId" : null,
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "has dart sdk with this flag landed in flutter?",
        "createdAt" : "2019-01-23T22:12:08Z",
        "updatedAt" : "2019-01-23T22:12:09Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "510a4a904419dad8bd7a4c0193f018c699e87d1d",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +476,480 @@    if (_experimentalFlags != null) {\n      var expFlags = _experimentalFlags.join(\",\");\n      command.add('--enable-experiment=${expFlags}');\n    }\n    printTrace(command.join(' '));"
  },
  {
    "id" : "955acd4f-ff8e-4a26-8207-661fa36191e6",
    "prId" : 29399,
    "prUrl" : "https://github.com/flutter/flutter/pull/29399#pullrequestreview-217285321",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7ee1722-554d-455a-8ad4-9c56b9150c21",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Is it possible for a project to go from not having builders to having some while a `flutter` command is running? If so, is this case handled? IOW, would the factory be rerun to get the code-generating compiler?",
        "createdAt" : "2019-03-20T22:30:44Z",
        "updatedAt" : "2019-03-21T16:04:46Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "8cae7907-b3e9-4ec0-8144-b015f1016068",
        "parentId" : "a7ee1722-554d-455a-8ad4-9c56b9150c21",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Yes,  we won't be able to switch them currently. This does fall under the umbrella for \"hot reload literally everything\" that I am working on.\r\n\r\nThe solution is to: 1) always run with build_runner enabled and 2) use manifest invalidation as triggers to update the build script\r\n\r\nHowever, that is a much bigger change. I don't think it should block letting people use the feature",
        "createdAt" : "2019-03-20T22:37:00Z",
        "updatedAt" : "2019-03-21T16:04:46Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "42b23fd8-7771-4cfb-a86d-14eee567b7d3",
        "parentId" : "a7ee1722-554d-455a-8ad4-9c56b9150c21",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Makes sense.",
        "createdAt" : "2019-03-21T14:46:15Z",
        "updatedAt" : "2019-03-21T16:04:46Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "41b0a3d4155002fb6c6e05db6331263b8c0dd539",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +30,34 @@\n  Future<KernelCompiler> create(FlutterProject flutterProject) async {\n    if (flutterProject == null || !flutterProject.hasBuilders) {\n      return const KernelCompiler();\n    }"
  },
  {
    "id" : "fb8dc8bc-81f1-49fc-9788-97b8da386761",
    "prId" : 29434,
    "prUrl" : "https://github.com/flutter/flutter/pull/29434#pullrequestreview-217017545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "635a11d9-f21b-4450-a355-3bada900f696",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "https://github.com/flutter/flutter/pull/29399 makes `hasBuilders` synchronous, so you don't need to `await` if you submit that PR first.",
        "createdAt" : "2019-03-20T22:36:05Z",
        "updatedAt" : "2019-03-20T22:36:17Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "a9d376a5-5d5f-47b2-9189-ee50bbadfdad",
        "parentId" : "635a11d9-f21b-4450-a355-3bada900f696",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "That one needs to wait on another FE server update, so I'll handle it before submitting there",
        "createdAt" : "2019-03-20T22:39:17Z",
        "updatedAt" : "2019-03-20T22:39:17Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0c52a59bd96433afb3945ef25de9209dc78de71",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +202,206 @@          'linkPlatformKernelIn': linkPlatformKernelIn.toString(),\n          'engineHash': engine.version,\n          'buildersUsed': '${flutterProject != null ? await flutterProject.hasBuilders : false}',\n        },\n        depfilePaths: <String>[depFilePath],"
  },
  {
    "id" : "5373b1e2-fe13-4244-bfd1-53a464fa1ec1",
    "prId" : 29627,
    "prUrl" : "https://github.com/flutter/flutter/pull/29627#pullrequestreview-216440947",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce9dd3de-2cf0-4a93-8073-96b9466e586e",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "What are the trace statements for? These only show up in verbose logs",
        "createdAt" : "2019-03-19T21:00:06Z",
        "updatedAt" : "2019-03-19T22:37:57Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "b9e0501a-4210-479b-bd28-0362f121f6dd",
        "parentId" : "ce9dd3de-2cf0-4a93-8073-96b9466e586e",
        "authorId" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "body" : "@aam ",
        "createdAt" : "2019-03-19T21:00:41Z",
        "updatedAt" : "2019-03-19T22:37:57Z",
        "lastEditedBy" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "tags" : [
        ]
      },
      {
        "id" : "22fd01c7-ba78-4c26-ac73-dc7f2e24abb0",
        "parentId" : "ce9dd3de-2cf0-4a93-8073-96b9466e586e",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "They show interaction between frontend server and compiler client.",
        "createdAt" : "2019-03-19T21:03:02Z",
        "updatedAt" : "2019-03-19T22:37:57Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "79c4ab32-6eb7-4f81-bbca-a8cae7448408",
        "parentId" : "ce9dd3de-2cf0-4a93-8073-96b9466e586e",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Even if logs are are hidden we're still spending time building the strings, quite a lot in the case of the initial reload",
        "createdAt" : "2019-03-19T21:08:10Z",
        "updatedAt" : "2019-03-19T22:37:57Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "1a12a8b3-2633-4ad1-b9d3-9a8d4c68ea03",
        "parentId" : "ce9dd3de-2cf0-4a93-8073-96b9466e586e",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Do you know time spent here is noticeable? I found that diagnostic to be useful, which is why I added it.",
        "createdAt" : "2019-03-19T21:19:26Z",
        "updatedAt" : "2019-03-19T22:37:57Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "08537a3e-6627-4853-a04f-ef93a4dad74e",
        "parentId" : "ce9dd3de-2cf0-4a93-8073-96b9466e586e",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "There is absolutely no reason to leave debugging code in production here",
        "createdAt" : "2019-03-19T21:51:59Z",
        "updatedAt" : "2019-03-19T22:37:57Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "a1c5a4ed-00b4-41a7-9518-4fe82f7be8b3",
        "parentId" : "ce9dd3de-2cf0-4a93-8073-96b9466e586e",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "I think we frequently use `printTrace` when running in verbose mode we want to get clarity about what is going with the system to help troubleshoot issues for end users. This is no different.",
        "createdAt" : "2019-03-19T21:57:03Z",
        "updatedAt" : "2019-03-19T22:37:57Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "9df8ee9c29cd7968ce5854a7f88d614622b3d62d",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +494,498 @@    }\n    _server.stdin.writeln(inputKey);\n    printTrace('<- $inputKey');\n\n    return _stdoutHandler.compilerOutput.future;"
  },
  {
    "id" : "6cc1548c-76f6-48f5-b433-c98378e8a9bd",
    "prId" : 41302,
    "prUrl" : "https://github.com/flutter/flutter/pull/41302#pullrequestreview-293196820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e3253ae-72cc-404c-b701-c9b0b2e5aa19",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Maybe it's just the directory of the output file that has to exist already?",
        "createdAt" : "2019-09-25T16:09:26Z",
        "updatedAt" : "2019-09-25T16:56:54Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a01b5ad548c60da083fc720ad91693c155b360f9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +275,279 @@      mainUri = PackageUriMapper.findUri(mainPath, packagesPath, fileSystemScheme, fileSystemRoots);\n    }\n    // TODO(jonahwilliams): The output file must already exist, but this seems\n    // unnecessary.\n    if (outputFilePath != null && !fs.isFileSync(outputFilePath)) {"
  },
  {
    "id" : "5219c8fb-1acb-461c-8167-8c27384fe285",
    "prId" : 42471,
    "prUrl" : "https://github.com/flutter/flutter/pull/42471#pullrequestreview-301569517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46d9d729-6ada-406e-84d9-5e4f3f6a5df2",
        "parentId" : null,
        "authorId" : "48f8d3e5-55d5-44a0-a521-e9a89f32d373",
        "body" : "This is also set depending on 'targetProductVm' at lines 323-324. Consider cleaning up that code.\r\nAlso, consider defining '-Ddart.vm.profile=true' depending on the mode.",
        "createdAt" : "2019-10-14T17:47:44Z",
        "updatedAt" : "2019-10-14T19:18:33Z",
        "lastEditedBy" : "48f8d3e5-55d5-44a0-a521-e9a89f32d373",
        "tags" : [
        ]
      },
      {
        "id" : "77ee5011-dba7-493f-acff-a2261ba83fbe",
        "parentId" : "46d9d729-6ada-406e-84d9-5e4f3f6a5df2",
        "authorId" : "06e8e4a2-ae13-4edd-80ce-b240ae531995",
        "body" : "Done.",
        "createdAt" : "2019-10-14T22:24:51Z",
        "updatedAt" : "2019-10-14T22:24:52Z",
        "lastEditedBy" : "06e8e4a2-ae13-4edd-80ce-b240ae531995",
        "tags" : [
        ]
      }
    ],
    "commit" : "9aaa67e7939d5d172520b7f1fc328eadd782e5ab",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +258,262 @@      return <String>[\n        '-Ddart.vm.profile=false',\n        '-Ddart.vm.product=true',\n        '--bytecode-options=source-positions',\n      ];"
  },
  {
    "id" : "f65e18ce-f7e2-440d-9abb-762244147d31",
    "prId" : 49377,
    "prUrl" : "https://github.com/flutter/flutter/pull/49377#pullrequestreview-348257539",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d7cc9bf-d87a-4cb5-856b-f15d917bd051",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "This leads me to notice that we need to unify the flags used here with the flags used in `fuchsia_kernel_compiler.dart` either by keeping them in sync manually or by eliminating `fuchsia_kernel_compiler.dart` by merging its functionality into this file.",
        "createdAt" : "2020-01-24T16:48:04Z",
        "updatedAt" : "2020-01-24T23:16:25Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "cf1f82b1-43b2-44de-812a-7029adc5f321",
        "parentId" : "2d7cc9bf-d87a-4cb5-856b-f15d917bd051",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "It looks like the kernel_compiler and frontend_server support a slightly different set of flags and have slightly different output behavior. Is there any reason we can't standardize on the frontend_server instead?",
        "createdAt" : "2020-01-24T22:08:50Z",
        "updatedAt" : "2020-01-24T23:16:25Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "3a33f4a6-62ce-4dfe-85a1-5e4721a93334",
        "parentId" : "2d7cc9bf-d87a-4cb5-856b-f15d917bd051",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Ahh right. Functionality of the Fuchsia kernel compiler would need to be integrated into the frontend_server, so there's probably not much we can do right now other than manually try to keep the flags in-sync where possible.",
        "createdAt" : "2020-01-24T22:20:01Z",
        "updatedAt" : "2020-01-24T23:16:25Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f601dafc55280ab728c71973699e861a8b013e21",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +647,651 @@      '--incremental',\n      '--target=$targetModel',\n      '-Ddart.developer.causal_async_stacks=${buildMode == BuildMode.debug}',\n      for (final Object dartDefine in dartDefines)\n        '-D$dartDefine',"
  },
  {
    "id" : "cad1340f-3529-41f4-9b38-a8b9ad2da7d3",
    "prId" : 51004,
    "prUrl" : "https://github.com/flutter/flutter/pull/51004#pullrequestreview-375600535",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b171c3e-b336-48cd-9f89-82c0f7a10d45",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Are there any comments worth adding here about what this flag does?",
        "createdAt" : "2020-03-16T20:21:11Z",
        "updatedAt" : "2020-03-17T22:40:37Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "05ad89b2-8abe-44f9-8c6e-19bd5146fca5",
        "parentId" : "4b171c3e-b336-48cd-9f89-82c0f7a10d45",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Added a comment. This is a breaking change flag, so once all of the tooling is updated we can make it the default and remove",
        "createdAt" : "2020-03-16T21:12:49Z",
        "updatedAt" : "2020-03-17T22:40:37Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "1e42922f-568b-4697-bb6f-a264eb6a0774",
        "parentId" : "4b171c3e-b336-48cd-9f89-82c0f7a10d45",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Is there an issue we can link to for the migration?",
        "createdAt" : "2020-03-16T21:30:14Z",
        "updatedAt" : "2020-03-17T22:40:37Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "946574a0-13c6-4959-88ea-f2087a8e5bbb",
        "parentId" : "4b171c3e-b336-48cd-9f89-82c0f7a10d45",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Filled and linked https://github.com/flutter/flutter/issues/52693",
        "createdAt" : "2020-03-16T21:39:09Z",
        "updatedAt" : "2020-03-17T22:40:37Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4786835fef117b6c7204b34d02df71fb93a16df",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +660,664 @@      // in the frontend_server.\n      // https://github.com/flutter/flutter/issues/52693\n      '--debugger-module-names',\n      '-Ddart.developer.causal_async_stacks=${buildMode == BuildMode.debug}',\n      for (final Object dartDefine in dartDefines)"
  },
  {
    "id" : "0efbbffe-f1b6-4874-bf26-f7cdbb2d2c57",
    "prId" : 54467,
    "prUrl" : "https://github.com/flutter/flutter/pull/54467#pullrequestreview-393246973",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "142e4063-76f8-4c33-8b25-82bc044a4a7d",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Note that failures to write to the `stdin` `IOSink` will manifest as an error completion of the `stdin.done` future. Best practice would be to attach appropriate error handling there. (Maybe just ignore and let the exit code future handle it.)",
        "createdAt" : "2020-04-13T17:18:47Z",
        "updatedAt" : "2020-04-20T19:46:11Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "cf2de027-e91e-4478-9cd1-b216ef7b8c44",
        "parentId" : "142e4063-76f8-4c33-8b25-82bc044a4a7d",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Not sure what you're asking here - should I ignore this for now since its a pre-existing issue?",
        "createdAt" : "2020-04-13T19:36:57Z",
        "updatedAt" : "2020-04-20T19:46:11Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "00f5e28e-ed51-4a1e-baac-9a596474ab65",
        "parentId" : "142e4063-76f8-4c33-8b25-82bc044a4a7d",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Yeah, just wanted to point it out. It's an issue wherever we spawn a subprocess and write to stdin.",
        "createdAt" : "2020-04-14T19:53:39Z",
        "updatedAt" : "2020-04-20T19:46:11Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1478904f5a14eb4ef41107f641997eb12376abe",
    "line" : 195,
    "diffHunk" : "@@ -1,1 +604,608 @@    final String mainUri = request.packageConfig.toPackageUri(request.mainUri)?.toString()\n      ?? request.mainUri.toString();\n    _server.stdin.writeln('recompile $mainUri $inputKey');\n    globals.printTrace('<- recompile $mainUri $inputKey');\n    for (final Uri fileUri in request.invalidatedFiles) {"
  },
  {
    "id" : "8724bde8-9fdf-4c3f-a8db-2e04496e4a21",
    "prId" : 58039,
    "prUrl" : "https://github.com/flutter/flutter/pull/58039#pullrequestreview-418725440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1ef1cfb-26b4-4000-b7e5-aa3192c133f9",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "nit: add a comment linking to the issue",
        "createdAt" : "2020-05-26T22:30:09Z",
        "updatedAt" : "2020-05-26T22:35:29Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "18b71d49-d235-4936-976b-ce14fcf042d9",
        "parentId" : "b1ef1cfb-26b4-4000-b7e5-aa3192c133f9",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Good call. Done.",
        "createdAt" : "2020-05-26T22:35:53Z",
        "updatedAt" : "2020-05-26T22:35:54Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "10d9a4008ebbd4452590cebb8ff418a748bc234d",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +654,658 @@    final List<String> command = <String>[\n      globals.artifacts.getArtifactPath(Artifact.engineDartBinary),\n      '--disable-dart-dev',\n      // This limit is in place to help track down\n      // https://github.com/flutter/flutter/issues/54420. It should be removed"
  },
  {
    "id" : "5a0a5f13-b77e-4330-869a-434f4112dec9",
    "prId" : 76561,
    "prUrl" : "https://github.com/flutter/flutter/pull/76561#pullrequestreview-595856358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e974bdd-587d-4724-8895-8f9371d56cba",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "What about plugins that we don't own and can't fix?  Should this ever be shown when building an app?  Is there something actionable the plugin consumer can do?  If so, we should specialize the warning for them.",
        "createdAt" : "2021-02-22T20:38:27Z",
        "updatedAt" : "2021-02-22T22:06:55Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "fe5ec2bf-8156-4d15-a9f4-a9a60ef22b9d",
        "parentId" : "0e974bdd-587d-4724-8895-8f9371d56cba",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "For those, we could send PRs to fix their pubspec.yaml.  Maybe, we could detect if the app being built is the plugin's example app. \r\n\r\nAlso, this is an action item to the consumer of the plugin as well, since according to the design, a user can specify the default implementation of a plugin for a platform.",
        "createdAt" : "2021-02-22T22:47:58Z",
        "updatedAt" : "2021-02-22T22:47:58Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d30850f39d51c194f16f47c779a663b0e22b400",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +251,255 @@        newMainDart,\n        mainFile,\n        // TODO(egarciad): Turn this on when the plugins are fixed.\n        throwOnPluginPubspecError: false,\n      )) {"
  },
  {
    "id" : "8ef7818b-b9b1-457d-b781-5cad9a6bd701",
    "prId" : 77731,
    "prUrl" : "https://github.com/flutter/flutter/pull/77731#pullrequestreview-608192196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1227fb93-653f-4168-94e1-d8245e318ded",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Why pass an instance here, but a factory above? Can both do the same thing?",
        "createdAt" : "2021-03-09T22:01:19Z",
        "updatedAt" : "2021-03-09T23:08:00Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "7e10672e-7b73-4c89-990a-ffc495af72a3",
        "parentId" : "1227fb93-653f-4168-94e1-d8245e318ded",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Because the kernel compiler creates a new instance every time you tell it to compile, while the resident re-uses one. I think I could change the logic so that kernel compiler also sets up one since we don't actually re-use it.",
        "createdAt" : "2021-03-09T22:05:49Z",
        "updatedAt" : "2021-03-09T23:08:00Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "2dcc66da-a047-4460-b9b4-e3eb6b6f4b52",
        "parentId" : "1227fb93-653f-4168-94e1-d8245e318ded",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Made this behave the same as the ResidentCompiler",
        "createdAt" : "2021-03-09T23:08:18Z",
        "updatedAt" : "2021-03-09T23:08:18Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ac40ed84a5bc5ee87f1a7d1b17f4e4e97d9eedb",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +543,547 @@    List<String> dartDefines,\n    this.librariesSpec,\n    @visibleForTesting StdoutHandler stdoutHandler,\n  }) : assert(sdkRoot != null),\n       _logger = logger,"
  },
  {
    "id" : "cab0df5a-1f16-48c1-8a36-ab81892a530b",
    "prId" : 77867,
    "prUrl" : "https://github.com/flutter/flutter/pull/77867#pullrequestreview-610208022",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a524d7e4-c459-4071-b7ea-2de85f043a33",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Is there something reasonable to do to handle this string parse failing on one of these steps?",
        "createdAt" : "2021-03-11T20:37:52Z",
        "updatedAt" : "2021-03-11T23:55:11Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "99b4e65c-2360-46c4-bbdf-3af7ca51e948",
        "parentId" : "a524d7e4-c459-4071-b7ea-2de85f043a33",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "We probably want this to be a fatal unhandled error so that we see it in crash logging if it ever occurs",
        "createdAt" : "2021-03-11T20:44:44Z",
        "updatedAt" : "2021-03-11T23:55:11Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f7ccb43fc2c2dae6e8e1d6b161f9572c73c48b2",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +120,124 @@      final int spaceDelimiter = message.lastIndexOf(' ');\n      final String fileName = message.substring(boundaryKey.length + 1, spaceDelimiter);\n      final int errorCount = int.parse(message.substring(spaceDelimiter + 1).trim());\n      Uint8List expressionData;\n      if (_readFile) {"
  },
  {
    "id" : "68bfcbb2-8169-4f98-847b-0579fabadfa7",
    "prId" : 79669,
    "prUrl" : "https://github.com/flutter/flutter/pull/79669#pullrequestreview-637222590",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04b04c5d-dc6d-4099-be96-227696baef0c",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This condition isn't currently unit tested. There are some existing test cases that should be straightforward to copy for this:\r\n\r\nhttps://github.com/flutter/flutter/blob/master/packages/flutter_tools/test/general.shard/compile_batch_test.dart#L44",
        "createdAt" : "2021-04-14T20:58:27Z",
        "updatedAt" : "2021-04-23T21:33:16Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "e07a6d91-aec2-4c98-a91c-62d28e5b18bf",
        "parentId" : "04b04c5d-dc6d-4099-be96-227696baef0c",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "Done",
        "createdAt" : "2021-04-15T23:47:09Z",
        "updatedAt" : "2021-04-23T21:33:16Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "b13ffa224cb61e8e5729c7361ae5ca2ba970c2f1",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +259,263 @@      _fileSystem.file(outputFilePath).createSync(recursive: true);\n    }\n    if (buildDir != null && checkDartPluginRegistry) {\n      // Check if there's a Dart plugin registrant.\n      // This is contained in the file `generated_main.dart` under `.dart_tools/flutter_build/`."
  }
]