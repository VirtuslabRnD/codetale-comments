[
  {
    "id" : "1f309f03-0a0c-4ce1-9ef9-08cfe1733260",
    "prId" : 37508,
    "prUrl" : "https://github.com/flutter/flutter/pull/37508#pullrequestreview-281115703",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2318bdb4-7fd8-4e2b-9924-b05f48fa97dd",
        "parentId" : null,
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "do you plan to enable assemble for the remaining cases? ",
        "createdAt" : "2019-08-27T20:56:30Z",
        "updatedAt" : "2019-09-11T00:29:16Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "7379d1c9-7799-4c5b-899b-2ad89423c99e",
        "parentId" : "2318bdb4-7fd8-4e2b-9924-b05f48fa97dd",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I think we could, but I'd like to be conservative here",
        "createdAt" : "2019-08-28T21:33:02Z",
        "updatedAt" : "2019-09-11T00:29:16Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "631667ac7f1560a686eb71412d157101752e2a76",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +81,85 @@    final FlutterProject flutterProject = FlutterProject.current();\n\n    if (shouldBuildWithAssemble) {\n      await buildWithAssemble(\n        buildMode: buildMode ?? BuildMode.debug,"
  },
  {
    "id" : "a2501334-2dc6-4d19-a829-9732be502477",
    "prId" : 37508,
    "prUrl" : "https://github.com/flutter/flutter/pull/37508#pullrequestreview-281116114",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cda21ef-9ef0-4eb6-9bb3-6ff069bf5416",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "@jmagman This is an example of mapping a `build *` command to an assemble command. For example, in the iOS framework case this could include multiple calls if need be.",
        "createdAt" : "2019-08-28T21:34:00Z",
        "updatedAt" : "2019-09-11T00:29:16Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "631667ac7f1560a686eb71412d157101752e2a76",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +149,153 @@  @required String depfilePath,\n}) async {\n  final Environment environment = Environment(\n    projectDir: flutterProject.directory,\n    outputDir: fs.directory(outputDir),"
  },
  {
    "id" : "80015ff8-ef2d-41a3-b17a-4cbb8f89148e",
    "prId" : 40470,
    "prUrl" : "https://github.com/flutter/flutter/pull/40470#pullrequestreview-290296831",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ee76447-2726-45bb-aee0-431e82fbe44b",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "nit: 2 space indent",
        "createdAt" : "2019-09-18T20:06:20Z",
        "updatedAt" : "2019-09-19T02:41:21Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "06f1037c-31ca-40e6-b1d6-8f2874dec21f",
        "parentId" : "9ee76447-2726-45bb-aee0-431e82fbe44b",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Fixed",
        "createdAt" : "2019-09-19T02:41:17Z",
        "updatedAt" : "2019-09-19T02:41:21Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d026bbcc7b4444008ac49413036907acc217afd",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +191,195 @@void _writeFilesToBuffer(List<File> files, StringBuffer buffer) {\n  for (File outputFile in files) {\n    if (platform.isWindows) {\n      // Paths in a depfile have to be escaped on windows.\n      final String escapedPath = outputFile.path.replaceAll(r'\\', r'\\\\');"
  },
  {
    "id" : "c9378d27-fea7-47c4-89c4-36127d840f5f",
    "prId" : 42487,
    "prUrl" : "https://github.com/flutter/flutter/pull/42487#pullrequestreview-303386749",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "878fb29e-d190-4661-b2aa-7424b564ddaa",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "flutter_tester is currently the only use of this logic. In the long term, we should clean this up to use a tempDir or something similar.",
        "createdAt" : "2019-10-12T20:38:10Z",
        "updatedAt" : "2019-10-17T22:10:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "4f89fc87-d405-4c47-85ac-05b0607034d2",
        "parentId" : "878fb29e-d190-4661-b2aa-7424b564ddaa",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Is there an issue open for this?",
        "createdAt" : "2019-10-17T16:26:25Z",
        "updatedAt" : "2019-10-17T22:10:38Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1f1be675e6156278231a0a130ca9365adb13305",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +83,87 @@    );\n    // Work around for flutter_tester placing kernel artifacts in odd places.\n    if (applicationKernelFilePath != null) {\n      final File outputDill = fs.directory(assetDirPath).childFile('kernel_blob.bin');\n      if (outputDill.existsSync()) {"
  }
]