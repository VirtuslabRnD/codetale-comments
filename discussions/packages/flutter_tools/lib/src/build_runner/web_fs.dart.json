[
  {
    "id" : "ce518c86-9d0f-420a-b28d-c07d83cc1cd3",
    "prId" : 39189,
    "prUrl" : "https://github.com/flutter/flutter/pull/39189#pullrequestreview-280557051",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5635c0a-d433-4814-ae64-c8d931b77f3c",
        "parentId" : null,
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "Instead of making `_assetHandler` return a function, have you considered passing a closure here?\r\n```dart\r\ncascade = cascade.add((Request request) => _assetHandler(request, flutterProject));\r\n```\r\nand then, `_assetHandler` could look like this:\r\n```dart\r\nstatic Future<Response> _assetHandler(Request request, FlutterProject flutterProject) {\r\n  if (request.url.path.contains('stack_trace_mapper')) {\r\n    // ...\r\n  }\r\n  // ...\r\n}\r\n```",
        "createdAt" : "2019-08-27T23:11:00Z",
        "updatedAt" : "2019-08-27T23:11:51Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "cfe26301-482c-4082-8e38-3e61bd266c9e",
        "parentId" : "c5635c0a-d433-4814-ae64-c8d931b77f3c",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I thought about it, but then I ended up doing more filesystem operations overall.",
        "createdAt" : "2019-08-28T02:07:34Z",
        "updatedAt" : "2019-08-28T02:07:34Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d56c4daf5d961df1cf8919982db3021af21f066",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +211,215 @@    Cascade cascade = Cascade();\n    cascade = cascade.add(handler);\n    cascade = cascade.add(_assetHandler(flutterProject));\n    final HttpServer server = await httpMultiServerFactory(_kHostName, port);\n    shelf_io.serveRequests(server, cascade.handler);"
  }
]