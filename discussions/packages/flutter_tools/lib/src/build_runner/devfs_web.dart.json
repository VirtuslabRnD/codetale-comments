[
  {
    "id" : "a6c2dc55-08ad-447b-8036-feefc74798ee",
    "prId" : 51067,
    "prUrl" : "https://github.com/flutter/flutter/pull/51067#pullrequestreview-361422837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "829785e5-c1ef-4f00-8eb1-466f44aad97b",
        "parentId" : null,
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "Could you explain what `testMode` means?",
        "createdAt" : "2020-02-19T20:41:19Z",
        "updatedAt" : "2020-02-20T18:55:40Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "5c642e2b-a1eb-4178-a2b0-748b9afcaea0",
        "parentId" : "829785e5-c1ef-4f00-8eb1-466f44aad97b",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Added doc comments",
        "createdAt" : "2020-02-19T20:44:42Z",
        "updatedAt" : "2020-02-20T18:55:40Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa31c566e8c9f6fccf6bc5bebcbc26ab98373bb0",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +58,62 @@    bool enableDwds,\n    Uri entrypoint, {\n    bool testMode = false,\n  }) async {\n    try {"
  },
  {
    "id" : "0adf27d3-369e-4477-a590-63a758f11253",
    "prId" : 51084,
    "prUrl" : "https://github.com/flutter/flutter/pull/51084#pullrequestreview-361607974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9818b63-2953-4f94-8214-087da759126e",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Could you add a simple unit test for the run_hot tests and the resident web runner tests?",
        "createdAt" : "2020-02-20T01:18:29Z",
        "updatedAt" : "2020-02-21T18:19:54Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "08b27a02-072b-4ba2-a044-f79e2c2836a8",
        "parentId" : "a9818b63-2953-4f94-8214-087da759126e",
        "authorId" : "fc83b6f9-d55d-466f-9f23-d9b1e9a41997",
        "body" : "Done.",
        "createdAt" : "2020-02-20T03:11:26Z",
        "updatedAt" : "2020-02-21T18:19:54Z",
        "lastEditedBy" : "fc83b6f9-d55d-466f-9f23-d9b1e9a41997",
        "tags" : [
        ]
      }
    ],
    "commit" : "764094cc2f14bc046ce66a8aaed1e04c945449f5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +377,381 @@\n  @override\n  Uri get baseUri => _baseUri;\n  Uri _baseUri;\n"
  },
  {
    "id" : "6c6a8221-da78-4150-976a-826035841198",
    "prId" : 51084,
    "prUrl" : "https://github.com/flutter/flutter/pull/51084#pullrequestreview-362144942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d72b7ac9-c15f-4791-a4e8-1d40a53418f1",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This might not be the correct information depending on what you need to connect to. For example, `hostname` might be something like a corp workstation hostname that needs to be resolved to an actual network address",
        "createdAt" : "2020-02-20T01:19:25Z",
        "updatedAt" : "2020-02-21T18:19:54Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "135ec1d0-8bb0-4629-ae5e-cead31f681ca",
        "parentId" : "d72b7ac9-c15f-4791-a4e8-1d40a53418f1",
        "authorId" : "fc83b6f9-d55d-466f-9f23-d9b1e9a41997",
        "body" : "For our use case, the application and test will be on the same machine so this should be fine.",
        "createdAt" : "2020-02-20T18:47:04Z",
        "updatedAt" : "2020-02-21T18:19:54Z",
        "lastEditedBy" : "fc83b6f9-d55d-466f-9f23-d9b1e9a41997",
        "tags" : [
        ]
      }
    ],
    "commit" : "764094cc2f14bc046ce66a8aaed1e04c945449f5",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +390,394 @@      entrypoint,\n    );\n    _baseUri = Uri.parse('http://$hostname:$port');\n    return _baseUri;\n  }"
  },
  {
    "id" : "c0b98a6c-e64b-4df0-a5a6-cc0e369b3c4f",
    "prId" : 51143,
    "prUrl" : "https://github.com/flutter/flutter/pull/51143#pullrequestreview-362795673",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88bfb392-1917-44d0-b4bf-c5574f04f906",
        "parentId" : null,
        "authorId" : "1e73ec3f-3dcd-4cbc-b476-0d1c629cd277",
        "body" : "I don't think `List` actually has a useful `hashCode` by default - you should md5 hash the bytes or something like that (it is just falling back on Object.hashCode I think).",
        "createdAt" : "2020-02-21T14:55:04Z",
        "updatedAt" : "2020-02-21T18:28:31Z",
        "lastEditedBy" : "1e73ec3f-3dcd-4cbc-b476-0d1c629cd277",
        "tags" : [
        ]
      },
      {
        "id" : "73f1de97-f24f-4415-b8f7-a2b61a3f2428",
        "parentId" : "88bfb392-1917-44d0-b4bf-c5574f04f906",
        "authorId" : "1e73ec3f-3dcd-4cbc-b476-0d1c629cd277",
        "body" : "Although maybe that is actually fine? If this is always getting the same exact list instance then it will work. ",
        "createdAt" : "2020-02-21T15:00:21Z",
        "updatedAt" : "2020-02-21T18:28:31Z",
        "lastEditedBy" : "1e73ec3f-3dcd-4cbc-b476-0d1c629cd277",
        "tags" : [
        ]
      },
      {
        "id" : "40f899ed-dac6-45f0-b5e8-0e2d395544a4",
        "parentId" : "88bfb392-1917-44d0-b4bf-c5574f04f906",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I'll add a note here, this works because the buffer is only updated when the frontend_server gives new contents. It acts like a revision string.",
        "createdAt" : "2020-02-21T17:31:29Z",
        "updatedAt" : "2020-02-21T18:28:31Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "83b57356bbbb796c7a8d54f3aae87e06cbc72db5",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +147,151 @@      // replaced whenever the frontend_server produces new output files, which\n      // will also change the hashCode.\n      final String etag = bytes.hashCode.toString();\n      if (ifNoneMatch == etag) {\n        return shelf.Response.notModified();"
  }
]