[
  {
    "id" : "fad79aaf-ddd0-4ee6-b567-bd5572a6fe1f",
    "prId" : 9733,
    "prUrl" : "https://github.com/flutter/flutter/pull/9733#pullrequestreview-35898258",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0fba1fd-a620-4773-8702-d65c429a2c9f",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Wouldn't `isPauseEvent` always be true for `view.uiIsolate.pauseEvent`?  Should we use an assert here instead of a condition on the `if`?",
        "createdAt" : "2017-05-02T21:31:19Z",
        "updatedAt" : "2017-05-02T21:40:29Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "dc60271e-62a2-4076-a0c8-739ec162060d",
        "parentId" : "c0fba1fd-a620-4773-8702-d65c429a2c9f",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "I think the name is a bit misleading - from the service protocol docs:\r\n```\r\n// The last pause event delivered to the isolate. If the isolate is\r\n// running, this will be a resume event.\r\nEvent pauseEvent;\r\n```",
        "createdAt" : "2017-05-02T21:35:32Z",
        "updatedAt" : "2017-05-02T21:40:29Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "63dcfee4-c065-4290-94fa-d7a81ba0378b",
        "parentId" : "c0fba1fd-a620-4773-8702-d65c429a2c9f",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Yuck....\r\n\r\nCan you add a DartDoc comment to `vmservice.dart` so that gets capture on the flutter tools side as well?",
        "createdAt" : "2017-05-02T21:38:01Z",
        "updatedAt" : "2017-05-02T21:40:29Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "2c4b2536-c8e0-46fc-9aec-102eae0f9ade",
        "parentId" : "c0fba1fd-a620-4773-8702-d65c429a2c9f",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Sure, added some docs on the `pauseEvent` definition.",
        "createdAt" : "2017-05-02T21:40:39Z",
        "updatedAt" : "2017-05-02T21:40:40Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c9bc280f1156d844418d53d48efcc9d97bfd30a",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +576,580 @@        if (view.uiIsolate != null) {\n          final ServiceEvent pauseEvent = view.uiIsolate.pauseEvent;\n          if (pauseEvent != null && pauseEvent.isPauseEvent) {\n            return true;\n          }"
  },
  {
    "id" : "a6e1471f-18c8-4549-8ea6-3757b687da16",
    "prId" : 12417,
    "prUrl" : "https://github.com/flutter/flutter/pull/12417#pullrequestreview-67703396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c82d535e-9849-42ba-8b56-a89109a07485",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Thanks for cleaning up all the other places!",
        "createdAt" : "2017-10-06T15:21:57Z",
        "updatedAt" : "2017-10-06T15:21:57Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "444b14f2ff1c516d96910e85899b168f50230bfa",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +364,368 @@    // We are now running from sources.\n    _runningFromSnapshot = false;\n    benchmarkData['hotRestartMillisecondsToFrame'] =\n        restartTimer.elapsed.inMilliseconds;\n    flutterUsage.sendEvent('hot', 'restart');"
  },
  {
    "id" : "e9453ede-0a20-4497-9e13-f0b60f9b4372",
    "prId" : 12490,
    "prUrl" : "https://github.com/flutter/flutter/pull/12490#pullrequestreview-68981110",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ede42c4-021c-4aa2-8d66-fd033e533728",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Here too: why not use uri.path?",
        "createdAt" : "2017-10-12T16:11:37Z",
        "updatedAt" : "2017-10-12T22:57:33Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "7560749c29d40be72fe5afe6b87d50267fc8a310",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +437,441 @@\n  String _uriToRelativePath(Uri uri) {\n    final String path = uri.toString();\n    final String base = new Uri.file(projectRootPath).toString();\n    if (path.startsWith(base))"
  },
  {
    "id" : "be0b9774-d1c9-4e44-9cc6-6ab2301dfb2f",
    "prId" : 15622,
    "prUrl" : "https://github.com/flutter/flutter/pull/15622#pullrequestreview-105983125",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1fd729c-f9db-45e9-bc22-afdc3e962af8",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Why did we remove support for `dillOutputPath` here?  This likely breaks dart-2 inside Google.\r\n\r\n/cc @keertip ",
        "createdAt" : "2018-03-22T02:54:45Z",
        "updatedAt" : "2018-03-22T02:54:45Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "2eb076de-0a0d-4eb1-a006-06bec022672a",
        "parentId" : "d1fd729c-f9db-45e9-bc22-afdc3e962af8",
        "authorId" : "44e96c4d-f3de-429a-bda0-aacc5e8ef43c",
        "body" : "Can you revert this? The other changes can work w/o this change. Also, we need `dillOutputPath` for internal testing.",
        "createdAt" : "2018-03-22T03:40:00Z",
        "updatedAt" : "2018-03-22T03:40:22Z",
        "lastEditedBy" : "44e96c4d-f3de-429a-bda0-aacc5e8ef43c",
        "tags" : [
        ]
      },
      {
        "id" : "69cb03cc-6ae9-46d1-8cba-23a2cdaebfda",
        "parentId" : "d1fd729c-f9db-45e9-bc22-afdc3e962af8",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "See https://github.com/flutter/flutter/pull/15655#discussion_r176301237.\r\n\r\nI believe I tested this to make sure latest version of Flutter works inside Google. Can you share logs that shed some more light why this is breaking?",
        "createdAt" : "2018-03-22T03:42:27Z",
        "updatedAt" : "2018-03-22T03:42:27Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "6407279b-92eb-4ab8-94fe-34b961afc141",
        "parentId" : "d1fd729c-f9db-45e9-bc22-afdc3e962af8",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "The latest version would work inside Google regardless because Google hasn't enabled Dart 2 yet (that's what @keertip has a pending CL to enable).  That said, you sound confident this was the right change.  You two should sync up tomorrow to make sure you're both on the same page ðŸ˜„ ",
        "createdAt" : "2018-03-22T04:05:36Z",
        "updatedAt" : "2018-03-22T04:05:37Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "081ae80b-368a-40f4-9094-446887d9e232",
        "parentId" : "d1fd729c-f9db-45e9-bc22-afdc3e962af8",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "I tested it by having cl with @keertip's pending cl patched on top of flutter roll I did myself.",
        "createdAt" : "2018-03-22T04:18:09Z",
        "updatedAt" : "2018-03-22T04:18:09Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "c4372de1-11a4-473f-8265-7b69cb9dc35a",
        "parentId" : "d1fd729c-f9db-45e9-bc22-afdc3e962af8",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Sorry for the spam then - nothing to see here...",
        "createdAt" : "2018-03-22T04:20:12Z",
        "updatedAt" : "2018-03-22T04:20:12Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7387cbaa824adaf4454f377da9b4abd474d97702",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +393,397 @@    _runningFromSnapshot = false;\n    final String launchPath = debuggingOptions.buildInfo.previewDart2\n        ? mainPath + '.dill'\n        : mainPath;\n    await _launchFromDevFS(launchPath);"
  },
  {
    "id" : "5f205b7f-74aa-47c4-856c-989f57221068",
    "prId" : 15655,
    "prUrl" : "https://github.com/flutter/flutter/pull/15655#pullrequestreview-105978684",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30043ed4-7e5b-4bde-9556-bb8c73f7f254",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Why did we remove support for `dillOutputPath` here?  /cc @keertip ",
        "createdAt" : "2018-03-22T02:53:21Z",
        "updatedAt" : "2018-03-22T02:53:22Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "7f485d9c-4045-4183-9d5e-b2e366ad7508",
        "parentId" : "30043ed4-7e5b-4bde-9556-bb8c73f7f254",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "The reason was that in this particular case absolute file path [dillOutputPath] is wrong, because it has to be relative to the device's devfs. That is what [mainPath + '.dill'] is.",
        "createdAt" : "2018-03-22T03:40:15Z",
        "updatedAt" : "2018-03-22T03:40:16Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5883c34174aa38596351b71ed9c6d4e5acbf45b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +393,397 @@    _runningFromSnapshot = false;\n    final String launchPath = debuggingOptions.buildInfo.previewDart2\n        ? mainPath + '.dill'\n        : mainPath;\n    await _launchFromDevFS(launchPath);"
  },
  {
    "id" : "021fcf75-2a4c-4bd0-8282-c07756d87765",
    "prId" : 18851,
    "prUrl" : "https://github.com/flutter/flutter/pull/18851#pullrequestreview-132549099",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dad9b6d6-364c-434c-a5a4-997961c797d7",
        "parentId" : null,
        "authorId" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "body" : "Under what circumstances do we end up with a null compilerOutput?",
        "createdAt" : "2018-06-27T18:01:35Z",
        "updatedAt" : "2018-06-27T18:01:35Z",
        "lastEditedBy" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "tags" : [
        ]
      },
      {
        "id" : "33fb92b3-2377-41b6-b0ad-d8fbe8ddfbd8",
        "parentId" : "dad9b6d6-364c-434c-a5a4-997961c797d7",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "That could happen if compiler was not started or if compiler process crashed unexpectedly.",
        "createdAt" : "2018-06-27T18:12:25Z",
        "updatedAt" : "2018-06-27T18:12:25Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc4ae913ea46c21c366dc3e6bc699bf2d4717b62",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +117,121 @@            await device.generator.compileExpression(expression, definitions,\n                typeDefinitions, libraryUri, klass, isStatic);\n        if (compilerOutput != null && compilerOutput.outputFilename != null) {\n          return base64.encode(fs.file(compilerOutput.outputFilename).readAsBytesSync());\n        }"
  },
  {
    "id" : "a95619ac-1ae7-421d-a6dd-2b6a34bd9136",
    "prId" : 19183,
    "prUrl" : "https://github.com/flutter/flutter/pull/19183#pullrequestreview-135931966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8db287a0-f6e1-411b-93bd-c074d2bbd954",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Do we want to run pub if dirty on reload, or just on restart? Only on restart feels slightly more natural to me, as its handling a bigger change.",
        "createdAt" : "2018-07-10T15:54:43Z",
        "updatedAt" : "2018-07-10T21:19:33Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "fae472a7-906b-4bcc-8e33-aa134fa1b06c",
        "parentId" : "8db287a0-f6e1-411b-93bd-c074d2bbd954",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "The issue I was trying to fix specifically requests hot reload, and I think I agree with that: hot reload should incorporate any changes that it can. In my mind, the main conceptual difference between the two should simply be if you want to preserve state or not (in practice, of course, you are required to restart for other reasons too).",
        "createdAt" : "2018-07-10T16:27:33Z",
        "updatedAt" : "2018-07-10T21:19:33Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "2887cabd-49c1-48ce-80ad-46a0174faa00",
        "parentId" : "8db287a0-f6e1-411b-93bd-c074d2bbd954",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Gotcha. We could also message on reload (`You pubspec is out of date, perform a hot restart to get new dependencies`), but users would then just need to perform the restart. So, this change looks good for both reload and restart.",
        "createdAt" : "2018-07-10T17:32:49Z",
        "updatedAt" : "2018-07-10T21:19:33Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b0322ee80a82c7a98a13a34e6280e1a9c5da199",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +301,305 @@\n  Future<bool> _updateDevFS({ bool fullRestart = false }) async {\n    if (!await _refreshDartDependencies()) {\n      // Did not update DevFS because of a Dart source error.\n      return false;"
  },
  {
    "id" : "11e34c29-bc9f-4a9c-8395-daa09ce320b9",
    "prId" : 19183,
    "prUrl" : "https://github.com/flutter/flutter/pull/19183#pullrequestreview-136038020",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23bbb43d-ce0a-4fba-9980-3338ffb600a6",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Can you confirm that this does print some appropriate message (so the user knows that a pub get is running)?",
        "createdAt" : "2018-07-10T15:55:10Z",
        "updatedAt" : "2018-07-10T21:19:33Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "d37bdf7d-c26b-40db-8a9d-89ffcf135899",
        "parentId" : "23bbb43d-ce0a-4fba-9980-3338ffb600a6",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Well.. it wasn't.  This turned out to be because hot reload calls `startProgress` on the logger, and then `pubGet` does the same, and the daemon code uses a custom logger that completely ignores nested progress messages.\r\n\r\nI've changed it to print nested progress messages again.  You appear to have disabled them (https://github.com/flutter/flutter/pull/6677) to make the messages for hot reload and hot restart the same, however, so that might not be the right answer.  Other alternatives would be to add an argument to tell startProgress to not ignore specific messages, or to change pubGet to not start its own progress (but that's nice to have on the command line).",
        "createdAt" : "2018-07-10T21:08:30Z",
        "updatedAt" : "2018-07-10T21:19:33Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "771989ec-b9a2-4128-a22c-233ce5f293d9",
        "parentId" : "23bbb43d-ce0a-4fba-9980-3338ffb600a6",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Ah, `Nov 3, 2016`. I think I was trying to address having many small progress items flash by, instead of having a single, unified progress.\r\n\r\nIDEs would likely need to upgraded to handle nested progresses, but let me take a look through the PR.",
        "createdAt" : "2018-07-10T22:26:40Z",
        "updatedAt" : "2018-07-10T22:26:40Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "95897fcc-545b-4f79-b995-25f11898271c",
        "parentId" : "23bbb43d-ce0a-4fba-9980-3338ffb600a6",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "The progress bar is an indeterminate bar on IntelliJ, and it does actually seem to work (it turns on the indeterminate progress bar in the status area when the reload starts, and turns it off when it's done). For this case, there are only a couple of steps (running pub get, and syncing to the device), but I imagine there could be some where it was a lot of steps flying by.\r\n\r\nOf course, it looks fine in the IntelliJ \"Run\" console output, and on the regular command line.",
        "createdAt" : "2018-07-10T22:41:34Z",
        "updatedAt" : "2018-07-10T22:41:34Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "288528fa-3bc5-4c1e-838a-818dc7a56828",
        "parentId" : "23bbb43d-ce0a-4fba-9980-3338ffb600a6",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Sounds good! Two steps, where they both don't just flash by, isn't a concern for me. I would just get concerned if we had many very short steps - the text would flash by too quickly for users to read.\r\n",
        "createdAt" : "2018-07-10T22:46:49Z",
        "updatedAt" : "2018-07-10T22:46:49Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b0322ee80a82c7a98a13a34e6280e1a9c5da199",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +92,96 @@    try {\n      // Will return immediately if pubspec.yaml is up-to-date.\n      await pubGet(\n        context: PubContext.pubGet,\n        directory: projectRootPath,"
  },
  {
    "id" : "cb1345c2-3a10-437c-a6a0-3caf92c3f65a",
    "prId" : 19183,
    "prUrl" : "https://github.com/flutter/flutter/pull/19183#pullrequestreview-135893341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6609b274-8ff1-468f-b72a-ad44d817a8f6",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "> should this also add a new PubContext value that describes how the pub get is being called?\r\n\r\nAh, possibly, based on what the current message says? We may want it tweaked so it says slightly different things based on an initial flutter run vs. a restart.\r\n\r\n",
        "createdAt" : "2018-07-10T15:56:35Z",
        "updatedAt" : "2018-07-10T21:19:33Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b0322ee80a82c7a98a13a34e6280e1a9c5da199",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +92,96 @@    try {\n      // Will return immediately if pubspec.yaml is up-to-date.\n      await pubGet(\n        context: PubContext.pubGet,\n        directory: projectRootPath,"
  },
  {
    "id" : "8f558150-cbca-4968-81dd-faf596f78547",
    "prId" : 21376,
    "prUrl" : "https://github.com/flutter/flutter/pull/21376#pullrequestreview-152554094",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf09ba4f-5c48-4772-b439-3ce1dc4bdb34",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Does this method need to be awaited?",
        "createdAt" : "2018-09-05T15:19:59Z",
        "updatedAt" : "2018-09-05T15:27:22Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "b14ff37a-f0d8-4a13-b1d6-49131381e1a0",
        "parentId" : "cf09ba4f-5c48-4772-b439-3ce1dc4bdb34",
        "authorId" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "body" : "It doesn't - it's void-returning only resets the terminal and prints `Application finished`.",
        "createdAt" : "2018-09-05T15:26:20Z",
        "updatedAt" : "2018-09-05T15:27:22Z",
        "lastEditedBy" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e1cb4274f089f628eec953bbaa5c788c678c7db",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +808,812 @@    await stopEchoingDeviceLog();\n    if (_didAttach) {\n      appFinished();\n    } else {\n      await stopApp();"
  },
  {
    "id" : "06e6b01c-fa2a-4769-9745-49b5b7ccc9cd",
    "prId" : 22693,
    "prUrl" : "https://github.com/flutter/flutter/pull/22693#pullrequestreview-166179322",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b5e30a2-4016-458d-9417-d01fd6b45e00",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Might want a comment on this conditional: I had to read it several times to realize what it's doing.",
        "createdAt" : "2018-10-18T16:14:38Z",
        "updatedAt" : "2018-10-26T15:04:46Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6e78248975fc541fce49c0d9710bce0919d6701",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +344,348 @@    }\n    // If there any failures reported, bail out.\n    if (results.any((bool result) => !result)) {\n      return false;\n    }"
  },
  {
    "id" : "d34cb377-f452-48e3-b689-433813eccf3b",
    "prId" : 23531,
    "prUrl" : "https://github.com/flutter/flutter/pull/23531#pullrequestreview-185228264",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6efe9d8e-e64b-4277-97b5-7dcf9a12438a",
        "parentId" : null,
        "authorId" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "body" : "What's the reason for changing from `printError` to `printTrace`? Could this stop the user from getting feedback that it failed? (Seems like in the Daemon's logger we just drop `printTrace` events and only send `printErrors`-  \"This is a lot of traffic to send over the wire\").",
        "createdAt" : "2018-12-03T09:32:46Z",
        "updatedAt" : "2018-12-20T23:16:48Z",
        "lastEditedBy" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "tags" : [
        ]
      },
      {
        "id" : "07456984-a1f5-4e00-a937-52dc64aade36",
        "parentId" : "6efe9d8e-e64b-4277-97b5-7dcf9a12438a",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This whole function is run in the context of a Status progress indicator, so we can't print anything to the console until it's stopped. Also, we should never show a stack trace to the user.\r\n\r\nThe message is still reported, just after the progress indicator is stopped.",
        "createdAt" : "2018-12-14T18:22:41Z",
        "updatedAt" : "2018-12-20T23:16:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f49aff478cf40502c0d2210f3bb084159ea6f300",
    "line" : 165,
    "diffHunk" : "@@ -1,1 +690,694 @@      }\n    } on Map<String, dynamic> catch (error, stackTrace) {\n      printTrace('Hot reload failed: $error\\n$stackTrace');\n      final int errorCode = error['code'];\n      String errorMessage = error['message'];"
  },
  {
    "id" : "5cdf7999-756f-46c5-835b-664328c3d039",
    "prId" : 26537,
    "prUrl" : "https://github.com/flutter/flutter/pull/26537#pullrequestreview-192385982",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f73848a4-108c-42bd-8503-f9782060b98e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this looks like a ui regression? we used to use getElapsedAsMilliseconds() which gives units and suchlike.\r\n\r\n(i'll fix it in my timeout patch)",
        "createdAt" : "2019-01-14T21:54:22Z",
        "updatedAt" : "2019-01-14T21:54:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "17970dea-66d3-430c-b7ad-100929b5eb65",
        "parentId" : "f73848a4-108c-42bd-8503-f9782060b98e",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Oh, thanks. I didn't realize `getElapsedAsMilliseconds()` produces formatted string.",
        "createdAt" : "2019-01-14T22:04:19Z",
        "updatedAt" : "2019-01-14T22:04:20Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "77de630f6950f6548dfcfe5047a7927bbf655321",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +777,781 @@    flutterUsage.sendEvent('hot', 'reload', parameters: analyticsParameters);\n\n    printTrace('Hot reload performed in $reloadInMs.');\n    // Record complete time it took for the reload.\n    _addBenchmarkData('hotReloadMillisecondsToFrame', reloadInMs);"
  },
  {
    "id" : "4e03cada-0043-4ad9-89be-879ada37335f",
    "prId" : 26604,
    "prUrl" : "https://github.com/flutter/flutter/pull/26604#pullrequestreview-193395055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40204f8f-a9b3-4ae6-ac44-22e6964d9af3",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Please add a test case to `hot_test.dart` to ensure this gets called.",
        "createdAt" : "2019-01-15T23:33:18Z",
        "updatedAt" : "2019-01-16T23:43:25Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "aa882909-a415-40ff-be45-5a570fc6cc22",
        "parentId" : "40204f8f-a9b3-4ae6-ac44-22e6964d9af3",
        "authorId" : "4a7c7c50-297e-44a3-a52d-9978a28e0679",
        "body" : "Added a couple of tests",
        "createdAt" : "2019-01-16T23:03:23Z",
        "updatedAt" : "2019-01-16T23:43:25Z",
        "lastEditedBy" : "4a7c7c50-297e-44a3-a52d-9978a28e0679",
        "tags" : [
        ]
      }
    ],
    "commit" : "43defb17a5172eecd53cbc3d669a5ad2eef85711",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +39,43 @@  /// A hook for implementations to perform any necessary operations right\n  /// before the runner is about to be shut down.\n  Future<void> runPreShutdownOperations() async {\n    return;\n  }"
  },
  {
    "id" : "466dc70c-2db2-46ed-8732-da49b8be493f",
    "prId" : 27257,
    "prUrl" : "https://github.com/flutter/flutter/pull/27257#pullrequestreview-203582159",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7a3206b-ea4e-48e5-8900-1f86a6e35ba7",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "ditto",
        "createdAt" : "2019-02-14T06:16:15Z",
        "updatedAt" : "2019-02-14T20:54:11Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e07b4df77fafaed8bd803246fb1dff1ae2ee9640",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +127,131 @@    /// runner instead.\n    if (experimentalBuildEnabled) {\n      return true;\n    }\n    final DartDependencySetBuilder dartDependencySetBuilder = DartDependencySetBuilder(mainPath, packagesFilePath);"
  },
  {
    "id" : "93fa2c6f-be09-472b-b59f-9c6bac2a83ef",
    "prId" : 28152,
    "prUrl" : "https://github.com/flutter/flutter/pull/28152#pullrequestreview-214318961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fcf54c5e-dc9a-413d-b7be-592dc0f3a38d",
        "parentId" : null,
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Do you to monitor packages file itself and update(rebuild?) ProjectWatcher if it changes?",
        "createdAt" : "2019-03-04T16:53:25Z",
        "updatedAt" : "2019-03-14T16:37:17Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "ee87bd69-002a-4c7c-a853-751e5298d94b",
        "parentId" : "fcf54c5e-dc9a-413d-b7be-592dc0f3a38d",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "We have to tear down the runner and restart if packages are updated currently",
        "createdAt" : "2019-03-04T17:50:52Z",
        "updatedAt" : "2019-03-14T16:37:17Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "1306451e-c918-402a-bb54-2f23c8128cf7",
        "parentId" : "fcf54c5e-dc9a-413d-b7be-592dc0f3a38d",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "What are the plans for this in this PR?",
        "createdAt" : "2019-03-14T04:23:47Z",
        "updatedAt" : "2019-03-14T16:37:17Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "242d356f-2904-4a1c-871b-df378a1b3752",
        "parentId" : "fcf54c5e-dc9a-413d-b7be-592dc0f3a38d",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Today, we can't update .packages due to https://github.com/flutter/flutter/issues/29186. Essentially we are producing a massive incremental dill (~40MB for the gallery) and that seems to be crashing in part of the shell.\r\n\r\nAlso related to https://github.com/dart-lang/sdk/issues/36202, where the vmservice does not respond with any caught exceptions.\r\n\r\nNew implementation is to detect changes to .packages and warn the user that they might have to restart the runner.",
        "createdAt" : "2019-03-14T04:50:52Z",
        "updatedAt" : "2019-03-14T16:37:17Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "52c27078a2ee20c2460c195d87a18118cd98ee13",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +82,86 @@             ipv6: ipv6)  {\n    fileInvalidator = ProjectFileInvalidator(\n      packagesFilePath ?? fs.path.absolute(PackageMap.globalPackagesPath),\n      flutterProject,\n    );"
  },
  {
    "id" : "02fc87fb-bed7-44f9-8e47-af508faa7487",
    "prId" : 28152,
    "prUrl" : "https://github.com/flutter/flutter/pull/28152#pullrequestreview-213106457",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7760a031-dc11-4113-adcf-ec01d45751da",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Oh, one more question. How is/should this be tested?",
        "createdAt" : "2019-03-11T20:15:10Z",
        "updatedAt" : "2019-03-14T16:37:17Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "3dd89c3b-9447-43ee-a0c0-41c5b980e7eb",
        "parentId" : "7760a031-dc11-4113-adcf-ec01d45751da",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Right now it is tested via the `integration/hot_reload_test.dart`, the devicelab, and via some google3 tooling tests. I could make this injectable and add some mock filesystem tests ",
        "createdAt" : "2019-03-11T20:20:42Z",
        "updatedAt" : "2019-03-14T16:37:17Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "c832dc74-7af7-45e6-b2b2-833328b87b90",
        "parentId" : "7760a031-dc11-4113-adcf-ec01d45751da",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Actually thanks to the memory filesystem I didn't need to be too fancy here, unit tests added as well.",
        "createdAt" : "2019-03-11T21:57:02Z",
        "updatedAt" : "2019-03-14T16:37:17Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "52c27078a2ee20c2460c195d87a18118cd98ee13",
    "line" : 260,
    "diffHunk" : "@@ -1,1 +928,932 @@}\n\nclass ProjectFileInvalidator {\n  ProjectFileInvalidator(this._packagesPath, this._flutterProject) {\n    final File packagesFile = fs.file(_packagesPath);"
  },
  {
    "id" : "4403331f-e6a8-46f5-b717-7e195a6da8c4",
    "prId" : 38575,
    "prUrl" : "https://github.com/flutter/flutter/pull/38575#pullrequestreview-275211274",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d127931-7afd-4276-b701-78995adbb326",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Offline we discussed seeing if this one alone is sufficient. Also, we should probably include comments at call sites of `asyncGuard`.",
        "createdAt" : "2019-08-14T22:39:24Z",
        "updatedAt" : "2019-08-15T15:26:25Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "1cb00e20-a481-4f6c-b7a1-5cd793dd8d8e",
        "parentId" : "9d127931-7afd-4276-b701-78995adbb326",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Done",
        "createdAt" : "2019-08-15T00:07:15Z",
        "updatedAt" : "2019-08-15T15:26:25Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "64a3a89115a4b75f3b7114c2dd2fc9343ff293b0",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +582,586 @@      // try catch. The usage is [asyncGuard] is required to normalize the error\n      // handling, at least until we can refactor the underlying code.\n      result = await asyncGuard(() => _restartFromSources(\n        reason: reason,\n        benchmarkMode: benchmarkMode,"
  },
  {
    "id" : "8c0d8705-4756-46c3-ab6e-0f9867795f48",
    "prId" : 42028,
    "prUrl" : "https://github.com/flutter/flutter/pull/42028#pullrequestreview-298296734",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2875cedf-dbd8-46b5-9be0-a2662c509a4b",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "@zanderso does the async stat call have the same problem with limited file descriptors that reading/writing does?",
        "createdAt" : "2019-10-07T16:40:57Z",
        "updatedAt" : "2019-10-22T21:26:49Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "f6aa5076-7292-4f77-84b4-cb9af7bf3f6a",
        "parentId" : "2875cedf-dbd8-46b5-9be0-a2662c509a4b",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "No, it doesn't have exactly the same problem, however there are two considerations:\r\n1. On Windows, a handle will be briefly opened if the entity is a reparse point. This will only be a problem if this code is going to be encountering a directory containing 10,000+ reparse points.\r\n2. The VM will spawn up to 32 threads per isolate to service async io requests. If this code will be going above that, then it probably makes sense to use a pool (package:pool) even if file descriptor/handle exhaustion is not an issue.",
        "createdAt" : "2019-10-07T17:40:48Z",
        "updatedAt" : "2019-10-22T21:26:49Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe30251dd5390a7d88f7ddf432fc9aaa312a7802",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +1091,1095 @@        waitList.add(pool.withResource<void>(\n          () => fs\n            .stat(uri.toFilePath(windows: platform.isWindows))\n            .then((FileStat stat) {\n              final DateTime updatedAt = stat.modified;"
  },
  {
    "id" : "4aa10ddb-22f2-4537-8ffc-b1d2a8495811",
    "prId" : 45236,
    "prUrl" : "https://github.com/flutter/flutter/pull/45236#pullrequestreview-321692117",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82c94eec-52b0-4f03-a7c7-fca543b06aea",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "As discussed offline, some comments here about why this is safe, and at the other callsites about why they are still there would be helpful.",
        "createdAt" : "2019-11-21T20:26:07Z",
        "updatedAt" : "2019-11-22T17:18:12Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "16b72249-9d49-459c-b902-adfe7114e96e",
        "parentId" : "82c94eec-52b0-4f03-a7c7-fca543b06aea",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Done",
        "createdAt" : "2019-11-22T17:18:13Z",
        "updatedAt" : "2019-11-22T17:18:14Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "da2e85f6b1e349a7ede19e58a2f22cda1c7b6f6e",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +271,275 @@      // the subsequent invocation in devfs will not overwrite.\n      if (device.generator != null) {\n        startupTasks.add(\n          device.generator.recompile(\n            mainPath,"
  },
  {
    "id" : "708f5350-6fa6-4f40-b155-a3e481cd15e9",
    "prId" : 45431,
    "prUrl" : "https://github.com/flutter/flutter/pull/45431#pullrequestreview-325809978",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcf4bfae-e397-4f9a-ac67-1a6faabe1c34",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Should this check that the device supports fastStart if we haven't thrown a tool exit?",
        "createdAt" : "2019-12-02T20:39:38Z",
        "updatedAt" : "2019-12-04T18:08:09Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "0a778166-9ab1-457c-bfe8-611ab3b4be97",
        "parentId" : "dcf4bfae-e397-4f9a-ac67-1a6faabe1c34",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Addressed above",
        "createdAt" : "2019-12-02T23:22:36Z",
        "updatedAt" : "2019-12-04T18:08:09Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "35f2c1c43d03a805038695ca521d386ff835b3ba",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +212,216 @@    }\n\n    if (debuggingOptions.fastStart) {\n      await restart(\n        fullRestart: true,"
  }
]