[
  {
    "id" : "81831120-a787-4750-ae76-52b73e6bca6c",
    "prId" : 5287,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31f66bea-5902-403a-99ad-3bb6c1a4a651",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "We probably don't need to print this out each time - there generally won't be deleted files.\n",
        "createdAt" : "2016-08-08T18:26:25Z",
        "updatedAt" : "2016-08-08T19:42:11Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "aba4484b-d918-4451-b4f2-dde5eb34cfbd",
        "parentId" : "31f66bea-5902-403a-99ad-3bb6c1a4a651",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "Long term I agree but I'm making the default output verbose until more users say this is stable.\n",
        "createdAt" : "2016-08-08T19:41:17Z",
        "updatedAt" : "2016-08-08T19:42:11Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      }
    ],
    "commit" : "e72f747eed1d35a56ef24788759952eeb6557c17",
    "line" : 257,
    "diffHunk" : "@@ -1,1 +350,354 @@      status.stop(showElapsedTime: true);\n    } else {\n      printStatus(\"No files to remove.\");\n    }\n"
  },
  {
    "id" : "55b9155b-ca33-48f2-b1e8-770113f79857",
    "prId" : 5287,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd2fb88b-f7eb-4b0f-9c73-782e8bc2c6a1",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Perhaps batch this up for fewer writes? `if ((complete % 10) == 0) ...`\n",
        "createdAt" : "2016-08-08T18:29:37Z",
        "updatedAt" : "2016-08-08T19:42:11Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "e72f747eed1d35a56ef24788759952eeb6557c17",
    "line" : 284,
    "diffHunk" : "@@ -1,1 +370,374 @@          _pendingOperations.forEach((Future<dynamic> f) => f.then((dynamic v) {\n            complete += 1;\n            progressReporter(complete, max);\n          }));\n        }"
  }
]