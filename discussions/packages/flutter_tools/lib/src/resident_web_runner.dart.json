[
  {
    "id" : "402064eb-6286-47dc-bb33-0f96a67d068b",
    "prId" : 33197,
    "prUrl" : "https://github.com/flutter/flutter/pull/33197#pullrequestreview-242954780",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26f049c3-3c80-4eb3-bb35-135981d4850e",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "why not http://localhost...",
        "createdAt" : "2019-05-28T21:09:36Z",
        "updatedAt" : "2019-05-29T15:05:01Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "e1f1b6d7-32e7-4a62-87fa-e38fc89e84b0",
        "parentId" : "26f049c3-3c80-4eb3-bb35-135981d4850e",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Done",
        "createdAt" : "2019-05-28T22:33:16Z",
        "updatedAt" : "2019-05-29T15:05:01Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8fbf23a0434346712a82b3f859f6f1e00ee090f",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +129,133 @@\n    // Step 3: Spawn an instance of Chrome and direct it to the created server.\n    await chromeLauncher.launch('http:localhost:${_server.port}');\n\n    // We don't support the debugging proxy yet."
  },
  {
    "id" : "d77dfdb7-e0bc-4d77-b376-1500a9c3ab04",
    "prId" : 33786,
    "prUrl" : "https://github.com/flutter/flutter/pull/33786#pullrequestreview-245123045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b95c6180-ac56-43d9-89b9-0ffa76f36239",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "nit: do we usually capitalize command names?",
        "createdAt" : "2019-06-03T20:26:39Z",
        "updatedAt" : "2019-06-04T03:40:57Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "46852137-a85e-4789-bcae-e8f6687be747",
        "parentId" : "b95c6180-ac56-43d9-89b9-0ffa76f36239",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This is a webkit inspection protocol command",
        "createdAt" : "2019-06-03T21:01:05Z",
        "updatedAt" : "2019-06-04T03:40:57Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e89fd9eb6a9882780bd0f2dd7a178931d262e12",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +64,68 @@  @override\n  Future<void> cleanupAfterSignal() async {\n    await _connection.sendCommand('Browser.close');\n    _connection = null;\n    return _server?.dispose();"
  },
  {
    "id" : "13f98728-74aa-4605-a7ef-921e47f57f1f",
    "prId" : 34084,
    "prUrl" : "https://github.com/flutter/flutter/pull/34084#pullrequestreview-247336880",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d684ab3-0397-4522-93fc-b3a0eee803ac",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This was an unrelated error that was nevertheless an easy fix",
        "createdAt" : "2019-06-07T23:13:28Z",
        "updatedAt" : "2019-06-07T23:13:28Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "036ed76f4398ae19fc46d93aa0d2dfa7efd179b9",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +150,154 @@    _connection = await chromeTab.connect();\n    _connection.onClose.listen((WipConnection connection) {\n      exit();\n    });\n"
  },
  {
    "id" : "201f2e41-3b6a-40c2-8a30-1df10c2648ff",
    "prId" : 34252,
    "prUrl" : "https://github.com/flutter/flutter/pull/34252#pullrequestreview-249067824",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97c12919-1454-4846-96f5-e8aeb9af4534",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Assuming this vmservice works the way I think, most of these extensions could be implemented this way (and then printing some result for the ones that produce output).",
        "createdAt" : "2019-06-11T17:53:01Z",
        "updatedAt" : "2019-08-05T16:54:22Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "4a5fa89c-449f-431a-b927-c531f46bdfd1",
        "parentId" : "97c12919-1454-4846-96f5-e8aeb9af4534",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Actually we get the stdout through the vmservice already",
        "createdAt" : "2019-06-12T23:35:00Z",
        "updatedAt" : "2019-08-05T16:54:22Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4529a44cf636052f07d4231fc11b1be9ce9d1d12",
    "line" : 305,
    "diffHunk" : "@@ -1,1 +252,256 @@\n  @override\n  Future<void> debugDumpLayerTree() async {\n    try {\n      await _vmService.callServiceExtension("
  },
  {
    "id" : "a8b52284-918b-4d32-97ba-7bb1e4b5209f",
    "prId" : 34252,
    "prUrl" : "https://github.com/flutter/flutter/pull/34252#pullrequestreview-270867371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ba66633-fa60-4feb-9457-fafd1abdc0b8",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Let's leave a TODO referencing https://github.com/flutter/flutter/issues/37625",
        "createdAt" : "2019-08-05T16:18:02Z",
        "updatedAt" : "2019-08-05T16:54:22Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4529a44cf636052f07d4231fc11b1be9ce9d1d12",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +26,30 @@// The web engine is currently spamming this message on certain pages. Filter it out\n// until we remove it entirely. See flutter/flutter##37625.\nconst String _kBadError = 'WARNING: 3D transformation matrix was passed to BitmapCanvas.';\n\n/// A hot-runner which handles browser specific delegation."
  }
]