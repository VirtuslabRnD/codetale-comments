[
  {
    "id" : "129b590b-e55c-4f74-bf95-6ad1a2f1b409",
    "prId" : 6968,
    "prUrl" : "https://github.com/flutter/flutter/pull/6968#pullrequestreview-9961803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f4bae1c-3fac-4799-b4ae-eb74ce5d7528",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Please revert this. We should not put sleep statements in our tests. That slows down the tests.\r\n\r\nWhat is the underlying problem here?",
        "createdAt" : "2016-11-22T17:45:52Z",
        "updatedAt" : "2016-11-22T17:45:53Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "aa394bcc-6884-4f54-9cf5-99ce5d647db9",
        "parentId" : "9f4bae1c-3fac-4799-b4ae-eb74ce5d7528",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "The underyling problem is that file modification timestamps on MacOS are not high resolution enough. The flow in the test is:\r\n\r\n1) Write a new file.\r\n2) Modify the file.\r\n3) Verify that we detect the modification.\r\n\r\nPutting a sleep between (1) and (2) makes the mtimes different.\r\n",
        "createdAt" : "2016-11-22T19:04:51Z",
        "updatedAt" : "2016-11-22T19:04:51Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "933523b6-ad6a-4b15-8e85-e3f39b9d4ef0",
        "parentId" : "9f4bae1c-3fac-4799-b4ae-eb74ce5d7528",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Can't we artificially modify the time stamp when we create it?",
        "createdAt" : "2016-11-22T19:11:58Z",
        "updatedAt" : "2016-11-22T19:11:58Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "71ec8b71-8e4a-4c37-9929-f818d89d03f6",
        "parentId" : "9f4bae1c-3fac-4799-b4ae-eb74ce5d7528",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "@Hixie I don't think that is possible via dart:io",
        "createdAt" : "2016-11-22T19:13:17Z",
        "updatedAt" : "2016-11-22T19:13:18Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "f34afb86-1e49-40c7-9216-9319823cf6a4",
        "parentId" : "9f4bae1c-3fac-4799-b4ae-eb74ce5d7528",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Can we shell out to `touch`?",
        "createdAt" : "2016-11-22T19:15:59Z",
        "updatedAt" : "2016-11-22T19:16:00Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "fded5d24-2ab4-4613-a0f4-dcc80631e88f",
        "parentId" : "9f4bae1c-3fac-4799-b4ae-eb74ce5d7528",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "That's an alternative that may work. It may also be just as racey though. @lukechurch ",
        "createdAt" : "2016-11-22T20:39:25Z",
        "updatedAt" : "2016-11-22T20:39:25Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "316f4aa9-f19d-48db-bab7-d3d0ee91bf9c",
        "parentId" : "9f4bae1c-3fac-4799-b4ae-eb74ce5d7528",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I mean to set the time in the past. You can pass a date to `touch` to make it old, then modify it and see if the time changed (or whatever it is you're testing).",
        "createdAt" : "2016-11-22T22:31:41Z",
        "updatedAt" : "2016-11-22T22:31:41Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "d8638902-668f-4978-8460-ece315563da8",
        "parentId" : "9f4bae1c-3fac-4799-b4ae-eb74ce5d7528",
        "authorId" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "body" : "sgtm.",
        "createdAt" : "2016-11-22T22:41:02Z",
        "updatedAt" : "2016-11-22T22:41:02Z",
        "lastEditedBy" : "5a8dd24e-c20a-4956-a91a-c1198c83ac54",
        "tags" : [
        ]
      },
      {
        "id" : "a62fce6a-861b-4505-bbb8-7f0785777b57",
        "parentId" : "9f4bae1c-3fac-4799-b4ae-eb74ce5d7528",
        "authorId" : "1acde0b7-b416-4813-a4b7-26ef8e58e4c1",
        "body" : "Sorry, I was out yesterday. How do we make a scheme dependant on ```touch``` work on Windows?",
        "createdAt" : "2016-11-23T20:40:47Z",
        "updatedAt" : "2016-11-23T20:40:47Z",
        "lastEditedBy" : "1acde0b7-b416-4813-a4b7-26ef8e58e4c1",
        "tags" : [
        ]
      },
      {
        "id" : "8a314ef3-2541-428d-9367-6f31f4dfdbdf",
        "parentId" : "9f4bae1c-3fac-4799-b4ae-eb74ce5d7528",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Working on Windows is not a requirement at the moment.",
        "createdAt" : "2016-11-23T20:42:28Z",
        "updatedAt" : "2016-11-23T20:42:28Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "176cc4d6-a8cf-4271-baef-959e5de11610",
        "parentId" : "9f4bae1c-3fac-4799-b4ae-eb74ce5d7528",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Hopefully by the time we support windows, dart:io will expose the relevant syscalls. (https://github.com/dart-lang/sdk/issues/27877)",
        "createdAt" : "2016-11-23T23:37:26Z",
        "updatedAt" : "2016-11-23T23:37:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "aaa0a6705828ed328e176f78c2942e32cee5385c",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +49,53 @@      // Need to delay between when we first write to a file and when\n      // we modify it.\n      await new Future<Null>.delayed(new Duration(seconds: 1));\n    });\n    testUsingContext('modify existing file on local file system', () async {"
  },
  {
    "id" : "fb8eb857-9f3b-4440-8324-86fcfe01a9e1",
    "prId" : 10196,
    "prUrl" : "https://github.com/flutter/flutter/pull/10196#pullrequestreview-39112637",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4b4743e-728b-4cd1-a30a-be8dbaba71f5",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "SocketException could happen for other reasons. Is there a way to narrow it down more?",
        "createdAt" : "2017-05-19T05:35:25Z",
        "updatedAt" : "2017-05-19T05:35:30Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "dae76e81-6171-4aee-9522-75b8dd2aa1c0",
        "parentId" : "f4b4743e-728b-4cd1-a30a-be8dbaba71f5",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "I could check the errno on the associated `OSError`, but I think that may be overkill?",
        "createdAt" : "2017-05-19T05:37:22Z",
        "updatedAt" : "2017-05-19T05:37:22Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "da9e8900-9e3c-414d-8713-f00a2759f173",
        "parentId" : "f4b4743e-728b-4cd1-a30a-be8dbaba71f5",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "`OSError` errno etc. values differ across platforms. Feels like a bit of a rat's nest to deal with them if we can avoid it. For a test this seems fine.",
        "createdAt" : "2017-05-19T05:39:37Z",
        "updatedAt" : "2017-05-19T05:39:59Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "97236558c3c8e20330c3b50385a6d4235af160a4",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +363,367 @@      _server = await HttpServer.bind(InternetAddress.LOOPBACK_IP_V6, 0);\n      _httpAddress = Uri.parse('http://[::1]:${_server.port}');\n    } on SocketException {\n      // Fall back to IPv4 if the host doesn't support binding to IPv6 localhost\n      _server = await HttpServer.bind(InternetAddress.LOOPBACK_IP_V4, 0);"
  }
]