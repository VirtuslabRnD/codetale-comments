[
  {
    "id" : "5c6a3851-db6b-417f-9c59-6b762e4b882e",
    "prId" : 74533,
    "prUrl" : "https://github.com/flutter/flutter/pull/74533#pullrequestreview-584781033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32093adb-ebf3-47ce-a326-a6b0f552abba",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "We had experimented in the past with not running flutter-update packages for the tool tests, since they were self contained.  I'm not sure if that is still the case, fyi @christopherfujino ",
        "createdAt" : "2021-02-04T17:05:59Z",
        "updatedAt" : "2021-02-10T00:28:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "ffe45846-844f-4e41-b1ab-bb10a4a2de90",
        "parentId" : "32093adb-ebf3-47ce-a326-a6b0f552abba",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "(That would cause this to fail if integration_tests was missing packages)",
        "createdAt" : "2021-02-04T17:06:15Z",
        "updatedAt" : "2021-02-10T00:28:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "19a0fcaa-3b82-4b4d-9abb-61e19ced0807",
        "parentId" : "32093adb-ebf3-47ce-a326-a6b0f552abba",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "`flutter run` will imply a `pub get` so I think that works regardless.",
        "createdAt" : "2021-02-05T20:26:10Z",
        "updatedAt" : "2021-02-10T00:28:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c618b58d-094a-44c2-95ba-31c9a867efeb",
        "parentId" : "32093adb-ebf3-47ce-a326-a6b0f552abba",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "ahh makes sense",
        "createdAt" : "2021-02-05T23:50:21Z",
        "updatedAt" : "2021-02-10T00:28:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "019c3b56e16b457f3afcc3e3c4f3ae5d77014c4a",
    "line" : 380,
    "diffHunk" : "@@ -1,1 +378,382 @@  testWithoutContext('flutter run can hot reload and hot restart, handle \"p\" key', () async {\n    final String tempDirectory = fileSystem.systemTempDirectory.createTempSync('flutter_overall_experience_test.').resolveSymbolicLinksSync();\n    final String testDirectory = fileSystem.path.join(flutterRoot, 'dev', 'integration_tests', 'ui');\n    final String testScript = fileSystem.path.join('lib', 'commands.dart');\n    try {"
  },
  {
    "id" : "fb24eea7-0ade-4f3f-a883-de9e7244f8fb",
    "prId" : 74533,
    "prUrl" : "https://github.com/flutter/flutter/pull/74533#pullrequestreview-584578719",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6b6f190-c1a2-4b7b-9f52-17178d73853c",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I'm curious why you chose to use the integration tests folder instead of adding a custom FlutterProject test, like we do in other integration tests. ",
        "createdAt" : "2021-02-04T17:08:36Z",
        "updatedAt" : "2021-02-10T00:28:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "7dac1890-f469-4e5c-8ea6-3cf597ea3b22",
        "parentId" : "a6b6f190-c1a2-4b7b-9f52-17178d73853c",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Maybe we should be moving those project tests into dev/integration to avoid dart code stored in strings...",
        "createdAt" : "2021-02-04T17:17:56Z",
        "updatedAt" : "2021-02-10T00:28:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "4ee6e654-ab6b-4f9c-9d69-d608ed59efaf",
        "parentId" : "a6b6f190-c1a2-4b7b-9f52-17178d73853c",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I just reused the same test file that was being used in the test you removed. :-)",
        "createdAt" : "2021-02-05T18:01:38Z",
        "updatedAt" : "2021-02-10T00:28:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "019c3b56e16b457f3afcc3e3c4f3ae5d77014c4a",
    "line" : 321,
    "diffHunk" : "@@ -1,1 +319,323 @@    final String tempDirectory = fileSystem.systemTempDirectory.createTempSync('flutter_overall_experience_test.').resolveSymbolicLinksSync();\n    final String pidFile = fileSystem.path.join(tempDirectory, 'flutter.pid');\n    final String testDirectory = fileSystem.path.join(flutterRoot, 'dev', 'integration_tests', 'ui');\n    final String testScript = fileSystem.path.join('lib', 'commands.dart');\n    /*late*/ int pid;"
  },
  {
    "id" : "12d4eee1-68b9-4279-b06f-6a8d02793985",
    "prId" : 74533,
    "prUrl" : "https://github.com/flutter/flutter/pull/74533#pullrequestreview-586988295",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd467a6a-2243-4f86-907c-dda06e4a7088",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I think it is possible for the test to fail and the next one to start before the process gets killed. I noticed that if writing the PID file fails the expect on L279, then the next test will always fail (on windows) because the previous flutter instance is still going. You might need something like a `finally` block that kills the process if a test exception is thrown",
        "createdAt" : "2021-02-04T18:27:45Z",
        "updatedAt" : "2021-02-10T00:28:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "c2cf34ca-1406-4f7c-b768-fcde1b8f8e47",
        "parentId" : "bd467a6a-2243-4f86-907c-dda06e4a7088",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "There's not much I can do about this because the subprocess is a shell process, not the Dart process, so killing it doesn't actually do anything useful.\r\n\r\nI've made the first test avoid expects in the callbacks, which addresses the immediate concern you mention. Not much I can do to enforce that style though.\r\n\r\nThat said, I actually don't think you're right. Each test is generating its own temporary directory with its own PID file, so zombie flutter processes from earlier tests shouldn't affect later tests. (Unless you're saying on Windows you can never run `flutter` twice at the same time? In which case, I wasn't aware of that. Still not much I can do though.)",
        "createdAt" : "2021-02-05T20:33:08Z",
        "updatedAt" : "2021-02-10T00:28:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "d9ddbef8-f8d1-4176-8078-d928730a87f1",
        "parentId" : "bd467a6a-2243-4f86-907c-dda06e4a7088",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I think it's specific to how we `flutter run` on the tester device - we copy the kernel artifacts to a generic location under build/ , but instead it should probably be to a temp directory. Filled https://github.com/flutter/flutter/issues/75534\r\n\r\nBut at any rate, after the test failed and exited I still have some zombie flutter_tester processes running on windows. Maybe write a `q` into stdin to try and shut them down gracefully?",
        "createdAt" : "2021-02-05T20:38:40Z",
        "updatedAt" : "2021-02-10T00:28:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "a310052f-ae40-46e7-9d49-b4077ebb4545",
        "parentId" : "bd467a6a-2243-4f86-907c-dda06e4a7088",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Added this:\r\n```patch\r\n-  final int exitCode = await process.exitCode;\r\n+  final int exitCode = await process.exitCode\r\n+    ..timeout(const Duration(seconds: 15), () {\r\n+      print('(process is not quitting, trying to send a \"q\" just in case that helps)');\r\n+      print('(a functional test should never reach this point)');\r\n+      process.stdin.write('q');\r\n+    });\r\n```",
        "createdAt" : "2021-02-06T01:49:16Z",
        "updatedAt" : "2021-02-10T00:28:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "97804b52-2f89-4033-8253-19dcc3f72e1e",
        "parentId" : "bd467a6a-2243-4f86-907c-dda06e4a7088",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "...I swear I tested that, but somehow the code above (and the code I actually landed) was bogus. Anyway, I've fixed that now...",
        "createdAt" : "2021-02-09T20:38:00Z",
        "updatedAt" : "2021-02-10T00:28:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "019c3b56e16b457f3afcc3e3c4f3ae5d77014c4a",
    "line" : 159,
    "diffHunk" : "@@ -1,1 +157,161 @@  Duration expectedMaxDuration = const Duration(seconds: 25), // must be less than test timeout of 30 seconds!\n}) async {\n  final Process process = await processManager.start(\n    <String>[flutterBin, ...arguments],\n    workingDirectory: workingDirectory,"
  }
]