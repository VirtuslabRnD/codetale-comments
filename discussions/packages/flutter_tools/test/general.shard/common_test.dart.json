[
  {
    "id" : "ad00a5ff-94d1-412b-9dbe-87fa90a7d7d4",
    "prId" : 54756,
    "prUrl" : "https://github.com/flutter/flutter/pull/54756#pullrequestreview-395759318",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "149288c6-d59c-4f95-9f30-464a3a23793a",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "This test result is a little surprising to me. Could you clarify the reason why we wouldn't want `any text` to match `Give me anytext`? And if so, we should probably document in the code.",
        "createdAt" : "2020-04-17T16:10:54Z",
        "updatedAt" : "2020-04-18T08:36:08Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "c526dac5-63c6-444e-b650-3ab8ee27b9f2",
        "parentId" : "149288c6-d59c-4f95-9f30-464a3a23793a",
        "authorId" : "c8dc4205-cd5e-46a0-96b2-2762e1b69481",
        "body" : "I checked documentation for \"equalsIgnoreWhitespace\" and it won't match if \"hello world\" should be matched against \"This is a helloworld example.\". Actually it's hard to tell for me what should be the correct behaviour.It would be nice if you can give me any hints here:\r\nhttps://api.flutter.dev/flutter/package-matcher_matcher/equalsIgnoringWhitespace.html\r\n",
        "createdAt" : "2020-04-17T17:20:35Z",
        "updatedAt" : "2020-04-18T08:36:08Z",
        "lastEditedBy" : "c8dc4205-cd5e-46a0-96b2-2762e1b69481",
        "tags" : [
        ]
      },
      {
        "id" : "ce082e0b-eaaa-4e6e-9683-9db1947f3b5e",
        "parentId" : "149288c6-d59c-4f95-9f30-464a3a23793a",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "Ahhh, I see. If I'm reading that right, what the linked matcher is doing is:\r\n\r\n1) trimming leading and trailing whitespace\r\n2) normalizing all whitespace to spaces\r\n3) collapsing all repeated whitespace to a single space\r\n\r\nWhich makes sense to me, since we probably want to preserve the distinction between `go to` and `goto`",
        "createdAt" : "2020-04-17T18:47:55Z",
        "updatedAt" : "2020-04-18T08:36:08Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "54f3e229-1937-4be5-8b8a-9057663a84ab",
        "parentId" : "149288c6-d59c-4f95-9f30-464a3a23793a",
        "authorId" : "c8dc4205-cd5e-46a0-96b2-2762e1b69481",
        "body" : "Should I then implement similar logic here? What you've described sounds very reasonable. I think I got it wrong on the first try.",
        "createdAt" : "2020-04-17T20:27:03Z",
        "updatedAt" : "2020-04-18T08:36:08Z",
        "lastEditedBy" : "c8dc4205-cd5e-46a0-96b2-2762e1b69481",
        "tags" : [
        ]
      },
      {
        "id" : "d8c3660b-d72e-4d09-8c19-bc6f422c5517",
        "parentId" : "149288c6-d59c-4f95-9f30-464a3a23793a",
        "authorId" : "c8dc4205-cd5e-46a0-96b2-2762e1b69481",
        "body" : "I reimplemented the logic using \"colapseWhitespace\" function.",
        "createdAt" : "2020-04-17T20:41:25Z",
        "updatedAt" : "2020-04-18T08:36:08Z",
        "lastEditedBy" : "c8dc4205-cd5e-46a0-96b2-2762e1b69481",
        "tags" : [
        ]
      }
    ],
    "commit" : "06d7bca37dbe15dc3e1a09c706ea71862f05f03c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@      });\n\n      test(\"shouldn't match when it's only because of removing whitespaces\", () {\n        expect('Give me anytext!', isNot(containsIgnoringWhitespace('any text!')));\n      });"
  }
]