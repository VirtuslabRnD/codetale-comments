[
  {
    "id" : "b279f10e-08ba-4a29-a21b-eee82a4abfb1",
    "prId" : 39751,
    "prUrl" : "https://github.com/flutter/flutter/pull/39751#pullrequestreview-283137209",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd61d073-2bf0-48b5-b073-a10aa50357ce",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Maybe a comment line above explaining what might be unsafe about it?",
        "createdAt" : "2019-09-03T17:08:19Z",
        "updatedAt" : "2019-09-03T17:08:23Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbfc5dc20129f7e04aafafd7b4a63a1049a3754d",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +356,360 @@\n    await residentWebRunner.exit();\n    await residentWebRunner.exit();\n  }));\n}"
  },
  {
    "id" : "37d686e6-d63d-475b-a99c-f43d688f369d",
    "prId" : 41545,
    "prUrl" : "https://github.com/flutter/flutter/pull/41545#pullrequestreview-295110350",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ea64269-e134-4d37-8384-8404455e920a",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Should there have been a web-recompile here too?",
        "createdAt" : "2019-09-30T16:44:52Z",
        "updatedAt" : "2019-09-30T16:47:38Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "39a5431a-9ab3-4bca-95eb-f846cbbfdfe6",
        "parentId" : "9ea64269-e134-4d37-8384-8404455e920a",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Done",
        "createdAt" : "2019-09-30T16:47:43Z",
        "updatedAt" : "2019-09-30T16:47:50Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d71873b42549a88c2e40e1e082c34be8e20234b4",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +190,194 @@      'cd30': 'true',\n    })).called(1);\n    verify(Usage.instance.sendTiming('hot', 'web-restart', any)).called(1);\n    verify(Usage.instance.sendTiming('hot', 'web-refresh', any)).called(1);\n    verify(Usage.instance.sendTiming('hot', 'web-recompile', any)).called(1);"
  },
  {
    "id" : "3d95e0e4-101f-4948-b4e9-e50180103dd7",
    "prId" : 41545,
    "prUrl" : "https://github.com/flutter/flutter/pull/41545#pullrequestreview-295110350",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f3c5972-e8b8-4b7c-af3d-531b406d7170",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "ditto.",
        "createdAt" : "2019-09-30T16:45:00Z",
        "updatedAt" : "2019-09-30T16:47:38Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "78277db4-7455-4e76-88f4-f778b09eb9dc",
        "parentId" : "6f3c5972-e8b8-4b7c-af3d-531b406d7170",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Done",
        "createdAt" : "2019-09-30T16:47:47Z",
        "updatedAt" : "2019-09-30T16:47:50Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d71873b42549a88c2e40e1e082c34be8e20234b4",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +220,224 @@      'cd30': 'true',\n    })).called(1);\n    verify(Usage.instance.sendTiming('hot', 'web-restart', any)).called(1);\n    verify(Usage.instance.sendTiming('hot', 'web-refresh', any)).called(1);\n    verify(Usage.instance.sendTiming('hot', 'web-recompile', any)).called(1);"
  },
  {
    "id" : "0ecb12fb-800c-47a3-b6f2-c8a49467e984",
    "prId" : 42698,
    "prUrl" : "https://github.com/flutter/flutter/pull/42698#pullrequestreview-301648624",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f56cc0f-2b9c-4bc4-abc6-e8fb76fd363f",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Why 2?",
        "createdAt" : "2019-10-15T04:28:32Z",
        "updatedAt" : "2019-10-15T04:33:36Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "06bfdcaa-75a6-4984-a600-e6dc313e6810",
        "parentId" : "1f56cc0f-2b9c-4bc4-abc6-e8fb76fd363f",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Oh, is it because you're reusing the same mock status object?",
        "createdAt" : "2019-10-15T04:34:10Z",
        "updatedAt" : "2019-10-15T04:34:10Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "8cfab533-4a54-4e45-a3c2-e7d629385925",
        "parentId" : "1f56cc0f-2b9c-4bc4-abc6-e8fb76fd363f",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Yup!",
        "createdAt" : "2019-10-15T04:35:38Z",
        "updatedAt" : "2019-10-15T04:35:39Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "44eaf44987093f5493528230f47e94e92e1622cc",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +144,148 @@    verify(mockAppConnection.runMain()).called(1);\n    verify(mockVmService.registerService('reloadSources', 'FlutterTools')).called(1);\n    verify(status.stop()).called(2);\n\n    expect(bufferLogger.statusText, contains('Debug service listening on ws://127.0.0.1/abcd/'));"
  },
  {
    "id" : "2144dda5-68cc-4ec3-9394-bb43c66dd55b",
    "prId" : 58284,
    "prUrl" : "https://github.com/flutter/flutter/pull/58284#pullrequestreview-424700127",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9256175-7a0b-42a1-96d3-b29f623ffdaa",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I would recommend unit tests to validate:\r\n\r\nExtension event for non-structured errors is ignored:\r\nExtension event for invalid json is ignored:\r\nExtension event for valid structured errors is OK",
        "createdAt" : "2020-06-02T20:24:53Z",
        "updatedAt" : "2020-06-06T00:03:19Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "36f78345-24c5-43d8-be2d-d5c4305cca85",
        "parentId" : "b9256175-7a0b-42a1-96d3-b29f623ffdaa",
        "authorId" : "62d00f30-6336-453c-a1ce-6840fea2fd93",
        "body" : "The first and last situations are tested, but I'm not sure how to test invalid JSON since the JSON seems to be formed (and presumably checked) when the event is created. Would I need to test with different setup or is this out of scope?",
        "createdAt" : "2020-06-03T22:44:08Z",
        "updatedAt" : "2020-06-06T00:03:19Z",
        "lastEditedBy" : "62d00f30-6336-453c-a1ce-6840fea2fd93",
        "tags" : [
        ]
      },
      {
        "id" : "7690ac94-c4af-4ede-ae5e-52de6133afd1",
        "parentId" : "b9256175-7a0b-42a1-96d3-b29f623ffdaa",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I wouldn't worry about invalid JSON then, perhaps just json without a renderedErrorText field?",
        "createdAt" : "2020-06-04T18:05:18Z",
        "updatedAt" : "2020-06-06T00:03:19Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "845b53643b2ef5d11004734aea457154bbcfe015",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +56,60 @@    args: <String, Object>{\n      'streamId': 'Isolate'\n    }\n  ),\n  FakeVmServiceRequest("
  }
]