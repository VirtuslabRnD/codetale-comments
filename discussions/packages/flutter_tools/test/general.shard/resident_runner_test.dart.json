[
  {
    "id" : "16751206-6171-4f6f-9d7f-f4a09b6912d7",
    "prId" : 43915,
    "prUrl" : "https://github.com/flutter/flutter/pull/43915#pullrequestreview-310170690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9d57afe-097e-47b7-b2f8-a7eb322e9e51",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "wow, does this verify that an assignment happened? I didn't know you could do that.",
        "createdAt" : "2019-10-31T20:36:35Z",
        "updatedAt" : "2019-11-01T19:28:18Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "008ca97d-a64f-408d-9c8e-9ff47c6ed769",
        "parentId" : "c9d57afe-097e-47b7-b2f8-a7eb322e9e51",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Seems to.  From the mockito docs:\r\n```\r\n// You can verify setters.\r\ncat.lives = 9;\r\nverify(cat.lives=9);\r\n```",
        "createdAt" : "2019-10-31T20:41:04Z",
        "updatedAt" : "2019-11-01T19:28:18Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "8dfd168d-8338-4d58-a3c5-51ad4f73bd92",
        "parentId" : "c9d57afe-097e-47b7-b2f8-a7eb322e9e51",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "I've skimmed that README many times and yet seem to have missed that. Cool.",
        "createdAt" : "2019-10-31T20:43:38Z",
        "updatedAt" : "2019-11-01T19:28:18Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfae97b367b8637b2566a956de6948702fc6d1bf",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +641,645 @@\n    await flutterDevice.connect();\n    verify(mockLogReader.connectedVMServices = <VMService>[ mockVMService ]);\n  }, overrides: <Type, Generator>{\n    VMServiceConnector: () => (Uri httpUri, { ReloadSources reloadSources, Restart restart, CompileExpression compileExpression, io.CompressionOptions compression }) async => mockVMService,"
  },
  {
    "id" : "e7f604a8-a09d-40d7-9434-3d8fe1efb924",
    "prId" : 50034,
    "prUrl" : "https://github.com/flutter/flutter/pull/50034#pullrequestreview-353102908",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19ad4f7f-b973-4efd-bbcf-dab3e584a992",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Does this need to write something to the logger first? I'm not sure what terminal.clear screen actually does in tests...",
        "createdAt" : "2020-02-03T20:56:33Z",
        "updatedAt" : "2020-02-05T21:25:07Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "2459baa4-da3d-4177-9bc1-341f0d38a2d1",
        "parentId" : "19ad4f7f-b973-4efd-bbcf-dab3e584a992",
        "authorId" : "cb307bee-bad3-4ec2-8529-7fc45a67a8ee",
        "body" : "I wasn't sure either, but the test output clears and it's marked as \"passed\", so I guess it works. ",
        "createdAt" : "2020-02-03T20:58:56Z",
        "updatedAt" : "2020-02-05T21:25:07Z",
        "lastEditedBy" : "cb307bee-bad3-4ec2-8529-7fc45a67a8ee",
        "tags" : [
        ]
      },
      {
        "id" : "322ae9ae-da20-4555-99d8-cf04765d0bbb",
        "parentId" : "19ad4f7f-b973-4efd-bbcf-dab3e584a992",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "It sounds like it is clearing the actual test runner screen? That is probably not what we want to do. In this case, I would instead inject a mock Stdio and assert that the correct method is called",
        "createdAt" : "2020-02-03T21:01:33Z",
        "updatedAt" : "2020-02-05T21:25:07Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "b3a55027-8c26-465d-9e5e-da2669df7a6d",
        "parentId" : "19ad4f7f-b973-4efd-bbcf-dab3e584a992",
        "authorId" : "cb307bee-bad3-4ec2-8529-7fc45a67a8ee",
        "body" : "It's a bit odd behavior, (at least on Windows, ) it \"clears\" the test screen, but really it's just pushed up to the top of the screen -- you can scroll right back up to see it again. \r\n\r\nAs for mocking, `testLogger` is provided by this code (`test/lib/src/context.dart`)\r\n\r\n```dart\r\n/// Return the test logger. This assumes that the current Logger is a BufferLogger.\r\nBufferLogger get testLogger => context.get<Logger>() as BufferLogger;\r\n```\r\n\r\nSo, I changed `clearScreen` from: \r\n\r\n```dart\r\n// Clears the screen.\r\nvoid clearScreen() => globals.stdio.stdoutWrite(globals.terminal.clearScreen() + '\\n');\r\n```\r\nto:\r\n \r\n```dart\r\n// Clears the screen.\r\nvoid clearScreen([BufferLogger logger]) => logger == null\r\n  ? globals.stdio.stdoutWrite(globals.terminal.clearScreen() + '\\n')\r\n  : logger.clear();\r\n```\r\n\r\nAnd then changed the tests to a test that looks like this, and it passed:\r\n```dart\r\nresidentRunner.clearScreen(testLogger);\r\nexpect(testLogger.statusText, equals(''));\r\n```",
        "createdAt" : "2020-02-04T16:09:29Z",
        "updatedAt" : "2020-02-05T21:25:07Z",
        "lastEditedBy" : "cb307bee-bad3-4ec2-8529-7fc45a67a8ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1d09ad307423b075c268e5fa17b6145c74d7542",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +429,433 @@    testLogger.printStatus(message);\n    expect(testLogger.statusText, equals(message + '\\n'));  // printStatus makes a newline\n    residentRunner.clearScreen();\n    expect(testLogger.statusText, equals(''));\n  }));"
  },
  {
    "id" : "38bfca59-1ce2-40b6-a79e-e7a72441de8d",
    "prId" : 50034,
    "prUrl" : "https://github.com/flutter/flutter/pull/50034#pullrequestreview-354032202",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7bbe918-ec77-4623-ab1b-6af10633ebb5",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I believe the logger is already the testLogger here, so you shouldn't need to provide it at all",
        "createdAt" : "2020-02-04T21:03:00Z",
        "updatedAt" : "2020-02-05T21:25:08Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "526e7f48-b785-4209-83d7-88eb7b5aaa4f",
        "parentId" : "d7bbe918-ec77-4623-ab1b-6af10633ebb5",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Though you should assert that the BufferLogger clear is called somehow",
        "createdAt" : "2020-02-04T21:04:21Z",
        "updatedAt" : "2020-02-05T21:25:08Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "0300476b-ed3f-4a60-b582-ee392350c75b",
        "parentId" : "d7bbe918-ec77-4623-ab1b-6af10633ebb5",
        "authorId" : "cb307bee-bad3-4ec2-8529-7fc45a67a8ee",
        "body" : "About asserting the call is actually made, shouldn't `expect(testLogger.statusText, equals(''));` be enough? After all, that's the practical effect we want to achieve. ",
        "createdAt" : "2020-02-05T03:49:31Z",
        "updatedAt" : "2020-02-05T21:25:08Z",
        "lastEditedBy" : "cb307bee-bad3-4ec2-8529-7fc45a67a8ee",
        "tags" : [
        ]
      },
      {
        "id" : "b337626a-6106-490e-be6c-482244e8f4fc",
        "parentId" : "d7bbe918-ec77-4623-ab1b-6af10633ebb5",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "but was there anything in the logger before you cleared it?",
        "createdAt" : "2020-02-05T06:02:55Z",
        "updatedAt" : "2020-02-05T21:25:08Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "7c7c2bc2-47a9-4e93-b527-704e2256c3fe",
        "parentId" : "d7bbe918-ec77-4623-ab1b-6af10633ebb5",
        "authorId" : "cb307bee-bad3-4ec2-8529-7fc45a67a8ee",
        "body" : "You're right, `testLogger` was previously empty. I added a new commit which first writes a message and then checks that it was there before being cleared, and that it's gone after.",
        "createdAt" : "2020-02-05T20:52:55Z",
        "updatedAt" : "2020-02-05T21:25:08Z",
        "lastEditedBy" : "cb307bee-bad3-4ec2-8529-7fc45a67a8ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1d09ad307423b075c268e5fa17b6145c74d7542",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +431,435 @@    residentRunner.clearScreen();\n    expect(testLogger.statusText, equals(''));\n  }));\n\n  test('ResidentRunner bails taking screenshot on debug device if debugAllowBanner throws post', () => testbed.run(() async {"
  },
  {
    "id" : "73bcd5dd-a44a-4230-be88-1883393b7895",
    "prId" : 55797,
    "prUrl" : "https://github.com/flutter/flutter/pull/55797#pullrequestreview-401413393",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a807edb6-6b61-41b8-8a57-4d6cfae03402",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I added this test to cover the view filter",
        "createdAt" : "2020-04-28T00:14:36Z",
        "updatedAt" : "2020-04-28T00:14:44Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b0c9f3c409757c65fa0372a5235177fe30c2e8ba",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +173,177 @@  });\n\n  test('FlutterDevice can list views with a filter', () => testbed.run(() async {\n    fakeVmServiceHost = FakeVmServiceHost(requests: <VmServiceExpectation>[\n      FakeVmServiceRequest("
  },
  {
    "id" : "ccda68c0-b331-4f8b-923c-9ce451349e0c",
    "prId" : 56167,
    "prUrl" : "https://github.com/flutter/flutter/pull/56167#pullrequestreview-408339472",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc0b3701-48ac-4b21-9b86-b0ef7601b8ab",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "The command now needs to account for the inputs/outputs list:\r\n```\r\n01:32 +232 -1: test/general.shard/resident_runner_test.dart: ResidentRunner can run source generation [E]                                                                                              \r\n  Expected: ['bin/cache/dart-sdk/bin/dart', 'dev/tools/localization/bin/gen_l10n.dart']\r\n    Actual: [\r\n              'bin/cache/dart-sdk/bin/dart',\r\n              'dev/tools/localization/bin/gen_l10n.dart',\r\n              '--gen-inputs-and-outputs-list=/build/6ec2559087977927717927ede0a147f1'\r\n            ]\r\n```",
        "createdAt" : "2020-05-08T16:04:02Z",
        "updatedAt" : "2020-05-08T16:41:44Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c6cc8d2e65decaf165b71e3adb7de8a436c967a",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +546,550 @@      command: <String>[\n        globals.artifacts.getArtifactPath(Artifact.engineDartBinary),\n        globals.fs.path.join(Cache.flutterRoot, 'dev', 'tools', 'localization', 'bin', 'gen_l10n.dart'),\n        '--gen-inputs-and-outputs-list=${dependencies.absolute.path}',\n      ],"
  },
  {
    "id" : "049531c7-56d7-4d22-a43a-4219646e14c2",
    "prId" : 56167,
    "prUrl" : "https://github.com/flutter/flutter/pull/56167#pullrequestreview-408339472",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2523dd29-32f7-4e9e-808b-614ae4542328",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "ditto",
        "createdAt" : "2020-05-08T16:04:19Z",
        "updatedAt" : "2020-05-08T16:41:44Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c6cc8d2e65decaf165b71e3adb7de8a436c967a",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +574,578 @@      command: <String>[\n        globals.artifacts.getArtifactPath(Artifact.engineDartBinary),\n        globals.fs.path.join(Cache.flutterRoot, 'dev', 'tools', 'localization', 'bin', 'gen_l10n.dart'),\n        '--gen-inputs-and-outputs-list=${dependencies.absolute.path}',\n      ],"
  },
  {
    "id" : "83eacf4d-399b-4a1c-b91c-360a7aadca15",
    "prId" : 56387,
    "prUrl" : "https://github.com/flutter/flutter/pull/56387#pullrequestreview-406047495",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c2cc712-3747-48d1-a64a-796568eabc71",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This is the test",
        "createdAt" : "2020-05-05T18:26:51Z",
        "updatedAt" : "2020-05-05T18:26:51Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff5b98ed79b5fbce80e5ba1e5085a1339960d99d",
    "line" : 367,
    "diffHunk" : "@@ -1,1 +819,823 @@  }));\n\n  test('FlutterDevice can exit from a release mode isolate with no VmService', () => testbed.run(() async {\n    final TestFlutterDevice flutterDevice = TestFlutterDevice(\n      mockDevice,"
  },
  {
    "id" : "8519b102-c316-4f07-b284-d1f2538d3196",
    "prId" : 58539,
    "prUrl" : "https://github.com/flutter/flutter/pull/58539#pullrequestreview-423182526",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99de538c-0b64-43e5-9589-881951046086",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "When there is an applicationBinary then there was no native build step, so we need to show the flutter run errors as normal",
        "createdAt" : "2020-06-03T02:46:45Z",
        "updatedAt" : "2020-06-03T18:11:58Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca3225597ee39f02a100befcb53396157060a289",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +263,267 @@        mockFlutterDevice,\n      ],\n      applicationBinary: globals.fs.file('app.apk'),\n      stayResident: false,\n      debuggingOptions: DebuggingOptions.enabled(BuildInfo.debug),"
  },
  {
    "id" : "0ae76c5d-2bc3-4327-8783-e17dfc1c67e8",
    "prId" : 68978,
    "prUrl" : "https://github.com/flutter/flutter/pull/68978#pullrequestreview-516401805",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf6b054d-70a9-4e0e-9a92-bc0ca8eb8bba",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "added test case for isolate barred error",
        "createdAt" : "2020-10-25T22:11:17Z",
        "updatedAt" : "2020-10-25T22:11:17Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc5caf118b278911b71062659ca290bc4123d8f6",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +530,534 @@  }));\n\n  testUsingContext('ResidentRunner can handle an reload-barred exception from hot reload', () => testbed.run(() async {\n    fakeVmServiceHost = FakeVmServiceHost(requests: <VmServiceExpectation>[\n      listViews,"
  },
  {
    "id" : "7b181a8c-d1a1-41dd-9853-8a8827d171cc",
    "prId" : 70065,
    "prUrl" : "https://github.com/flutter/flutter/pull/70065#pullrequestreview-526718093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e09d393-af39-43aa-bd1a-23e019e3e318",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This fixes were required since I changed the timing of the no-op builds slightly. Fix is to properly await for the app to be started.",
        "createdAt" : "2020-11-09T22:49:53Z",
        "updatedAt" : "2020-11-11T19:16:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "faf8ea53ee5515283dde79b9146b9671da0e4119",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +892,896 @@\n  testUsingContext('ResidentRunner can send target platform to analytics from hot reload', () => testbed.run(() async {\n    fakeVmServiceHost = FakeVmServiceHost(requests: <VmServiceExpectation>[\n      listViews,\n      listViews,"
  },
  {
    "id" : "085f5896-106b-4984-845e-67fb32d79920",
    "prId" : 72736,
    "prUrl" : "https://github.com/flutter/flutter/pull/72736#pullrequestreview-556715453",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7673bca3-2424-4a0d-99d9-ce190c0559c8",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "nit: remove extra newlines",
        "createdAt" : "2020-12-21T22:37:16Z",
        "updatedAt" : "2020-12-22T00:15:48Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "4d2d9fbc-feb5-4f25-b2b0-0a3dbc77384c",
        "parentId" : "7673bca3-2424-4a0d-99d9-ce190c0559c8",
        "authorId" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "body" : "Done.",
        "createdAt" : "2020-12-21T22:58:03Z",
        "updatedAt" : "2020-12-22T00:15:48Z",
        "lastEditedBy" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "tags" : [
        ]
      }
    ],
    "commit" : "49bd90543d5423cb2e065492c6338e0d7210a56f",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +2735,2739 @@    }\n  }));\n\n  testUsingContext('nextPlatform moves through expected platforms', () {\n    expect(nextPlatform('android', TestFeatureFlags()), 'iOS');"
  },
  {
    "id" : "cfc09e7a-deb3-4a2f-b75a-f44b7886d1d6",
    "prId" : 72736,
    "prUrl" : "https://github.com/flutter/flutter/pull/72736#pullrequestreview-556706493",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e3540b8-2e47-4c71-bf0c-3f584d41a69c",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "```suggestion\r\n    final Completer<void> done = Completer<void>();\r\n```",
        "createdAt" : "2020-12-21T22:38:41Z",
        "updatedAt" : "2020-12-22T00:15:48Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "49bd90543d5423cb2e065492c6338e0d7210a56f",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +2718,2722 @@    );\n    bool caught = false;\n    final Completer<void>done = Completer<void>();\n    runZonedGuarded(() {\n      flutterDevice.connect(allowExistingDdsInstance: true).then((_) => done.complete());"
  },
  {
    "id" : "f0a4816f-655f-41f1-a28f-3ec5591f4976",
    "prId" : 72736,
    "prUrl" : "https://github.com/flutter/flutter/pull/72736#pullrequestreview-556715381",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48ca92a9-234f-4f0e-919a-4804bb20f30b",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "If the above is changed to `handleError(e)` from `rethrow`, can this be:\r\n```dart\r\ntry {\r\n  await flutterDevice.connect(...);\r\n} on dds.DartDevelopmentServiceException catch (e) {\r\n  ...\r\n}\r\n```",
        "createdAt" : "2020-12-21T22:44:11Z",
        "updatedAt" : "2020-12-22T00:15:48Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "fddd0cdd-b67c-4086-9cfb-9a6d35a6ee84",
        "parentId" : "48ca92a9-234f-4f0e-919a-4804bb20f30b",
        "authorId" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "body" : "Ah, that's much nicer!",
        "createdAt" : "2020-12-21T22:57:51Z",
        "updatedAt" : "2020-12-22T00:15:48Z",
        "lastEditedBy" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "tags" : [
        ]
      }
    ],
    "commit" : "49bd90543d5423cb2e065492c6338e0d7210a56f",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +2719,2723 @@    bool caught = false;\n    final Completer<void>done = Completer<void>();\n    runZonedGuarded(() {\n      flutterDevice.connect(allowExistingDdsInstance: true).then((_) => done.complete());\n    }, (Object e, StackTrace st) {"
  }
]