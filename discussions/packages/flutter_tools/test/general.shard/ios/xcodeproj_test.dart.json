[
  {
    "id" : "ac6bc223-498b-4b99-8362-ecf8f9e7fef2",
    "prId" : 43553,
    "prUrl" : "https://github.com/flutter/flutter/pull/43553#pullrequestreview-308177549",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef746483-d407-48c3-a307-a71d7a3ab75a",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "Cool, I didn't know about `testUsingOsxContext`",
        "createdAt" : "2019-10-28T22:07:25Z",
        "updatedAt" : "2019-10-29T02:03:38Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f2a95afe1434879d9427b6713987860db28de24",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +174,178 @@    });\n\n    testUsingOsxContext('build settings contains Flutter Xcode environment variables', () async {\n      macOS.environment = Map<String, String>.unmodifiable(<String, String>{\n        'FLUTTER_XCODE_CODE_SIGN_STYLE': 'Manual',"
  },
  {
    "id" : "83a4716b-36b3-42ad-a836-653af96862c7",
    "prId" : 48661,
    "prUrl" : "https://github.com/flutter/flutter/pull/48661#pullrequestreview-346822862",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "994459e2-afe5-42b6-b40e-5051247406ca",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Can this test also be `testWithoutContext` ?",
        "createdAt" : "2020-01-22T18:34:52Z",
        "updatedAt" : "2020-01-22T18:54:16Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "5d586518-6978-433c-a0e8-452874ac23bd",
        "parentId" : "994459e2-afe5-42b6-b40e-5051247406ca",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Yes, fixed!",
        "createdAt" : "2020-01-22T18:54:22Z",
        "updatedAt" : "2020-01-22T18:54:22Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1e89b227fb621a9c64350e005e83c7d92e27e6f",
    "line" : 702,
    "diffHunk" : "@@ -1,1 +429,433 @@        'FLUTTER_XCODE_ARCHS': 'arm64'\n      });\n      final List<String> environmentVariablesAsBuildSettings = environmentVariablesAsXcodeBuildSettings(platform);\n      expect(environmentVariablesAsBuildSettings, <String>['CODE_SIGN_STYLE=Manual', 'ARCHS=arm64']);\n    });"
  },
  {
    "id" : "f508261e-768b-4da6-bcc5-1b43ea4f19ec",
    "prId" : 53443,
    "prUrl" : "https://github.com/flutter/flutter/pull/53443#pullrequestreview-383246447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ccc6402b-7aea-480d-976f-947082ecbb89",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "In the future we'll likely want to make these non-nullable. Consider creating a `FlutterUsage.test()` which can be created at low cost to avoid explicitly passing null",
        "createdAt" : "2020-03-27T23:13:42Z",
        "updatedAt" : "2020-03-30T21:11:10Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ca010fd126c28e50639103acb19088670898746",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +50,54 @@      processManager: processManager,\n      terminal: terminal,\n      usage: null,\n    );\n  });"
  },
  {
    "id" : "ed7d4148-0e35-4870-af4f-406f235687f1",
    "prId" : 56505,
    "prUrl" : "https://github.com/flutter/flutter/pull/56505#pullrequestreview-407110517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02a7e92d-4130-4dee-b55f-841f24137a7c",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "This was the test that should have failed but didn't.\r\n\r\n`platform.pathSeparator` is null, `fileSystem.path.separator` is `/` but this processManager `runSync` was never being verified.",
        "createdAt" : "2020-05-07T02:29:52Z",
        "updatedAt" : "2020-05-07T19:14:08Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "373c786d8644e0b4903003ef0f5c9ee5d24782ea",
    "line" : 327,
    "diffHunk" : "@@ -1,1 +267,271 @@        xcodebuild,\n        '-project',\n        fileSystem.path.separator,\n        '-target',\n        'Runner',"
  },
  {
    "id" : "77281757-d9cf-4948-8365-078230635668",
    "prId" : 61140,
    "prUrl" : "https://github.com/flutter/flutter/pull/61140#pullrequestreview-446041736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6385e2e-597a-4665-9d1f-2109796958ab",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "technically, you could pass in `defaultInfo.reportFlavorNotFoundAndExit` as a tear-off, since the throws matchers just require a zero-arity function. Just an FYI",
        "createdAt" : "2020-07-09T23:35:25Z",
        "updatedAt" : "2020-07-09T23:35:25Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "04973959-8ce3-4a22-ab84-5834e10cf64f",
        "parentId" : "b6385e2e-597a-4665-9d1f-2109796958ab",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Audited, got a PR coming your way.",
        "createdAt" : "2020-07-09T23:55:50Z",
        "updatedAt" : "2020-07-09T23:55:50Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "99364759b4d6851780a31460ec4d93a5c0b299cd",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +475,479 @@\n    expect(\n      () => defaultInfo.reportFlavorNotFoundAndExit(),\n      throwsToolExit(\n        message: 'The Xcode project does not define custom schemes. You cannot use the --flavor option.'"
  },
  {
    "id" : "bf892480-d393-4b94-abf2-73e3da9e5abb",
    "prId" : 87244,
    "prUrl" : "https://github.com/flutter/flutter/pull/87244#pullrequestreview-719309416",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2fb17feb-a47a-4f3a-9398-b24419c42d40",
        "parentId" : null,
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "Optional: you've got a lot of copies of this very long command; it might be helpful to have a little utility method that takes output (and an optional exit code) and builds the `FakeCommand`, to make the tests a bit less verbose and easier to update if the argument list needs to be changed slightly in the future.",
        "createdAt" : "2021-07-30T14:04:05Z",
        "updatedAt" : "2021-07-30T14:04:25Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      },
      {
        "id" : "8447bbeb-b1e4-48cb-a7fb-675e89c21980",
        "parentId" : "2fb17feb-a47a-4f3a-9398-b24419c42d40",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "I put the `hw.optional.arm64: 1` command into a constant which cleaned it up a bit.  Generally I prefer seeing the \"important\" command inline in the test rather than trying to keep tests DRY.  That's just preference though. Fortunately the test will start failing if the arguments ever change, so it's usually really easy to update even in a few places.",
        "createdAt" : "2021-07-30T17:14:10Z",
        "updatedAt" : "2021-07-30T17:14:41Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "6eb0a9a66f035620f007758dddce0c6a9d49a72a",
    "line" : 340,
    "diffHunk" : "@@ -1,1 +809,813 @@                podXcodeProject.path,\n                '-showBuildSettings',\n              ],\n              stdout: '''\nBuild settings for action build and target plugin1:"
  }
]