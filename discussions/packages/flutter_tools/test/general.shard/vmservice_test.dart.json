[
  {
    "id" : "2c8b7cf5-2701-45fb-9ae7-a73e90eb0f32",
    "prId" : 54700,
    "prUrl" : "https://github.com/flutter/flutter/pull/54700#pullrequestreview-392558792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1962d1d0-9901-4a98-925f-bce9bb53d430",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Unlike the FakeProcessManager, this has to support both request/response and notifications. The latter have no corresponding request (like a log message, or isolate notification).\r\n\r\nCombining these two concepts as a `VmServiceExpectation` allows us to describe  a more complex operation like runInView, which we need to ack the streamListen, ack the runInView request, and then return an isolate runnable notification",
        "createdAt" : "2020-04-14T02:18:22Z",
        "updatedAt" : "2020-04-15T00:23:15Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a9329910887ae10a616fefa192dd1a2230af316",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +284,288 @@\n  testWithoutContext('runInView forwards arguments correctly', () async {\n    final FakeVmServiceHost fakeVmServiceHost = FakeVmServiceHost(\n      requests: <VmServiceExpectation>[\n        const FakeVmServiceRequest(method: 'streamListen', id: '1', params: <String, Object>{"
  }
]