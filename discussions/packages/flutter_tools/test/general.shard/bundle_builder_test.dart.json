[
  {
    "id" : "53ba306b-da59-47cb-ab8f-f9f185da2f43",
    "prId" : 80740,
    "prUrl" : "https://github.com/flutter/flutter/pull/80740#pullrequestreview-639824427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9864901e-ef6e-438e-aaac-28e8b67aca12",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "You should be able to create the build system object in the test body. That lets you avoid settings as much stuff up in the testUsingContext overrides list.",
        "createdAt" : "2021-04-19T22:54:10Z",
        "updatedAt" : "2021-04-20T00:45:34Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "02d8b20e-4af6-4ff7-98cd-ccf16a2b611f",
        "parentId" : "9864901e-ef6e-438e-aaac-28e8b67aca12",
        "authorId" : "493e27a2-5090-4479-8c03-6c418bfad375",
        "body" : "yep forgot about that for this test, however I'm not sure I can save any overrides, `BundleBuilder.build` accesses some globals directly\r\n\r\nGenerally, what stuff should be passed via the app context and what via arguments? Are you trying to use arguments as much as possible, or environment or does it not matter? I mean theoretically I could also make `BundleBuilder` accept the `fileSystem`, `cache`, `processManager`, `buildContext` and so on via the constructor similiar to how all the Device-related (`CustomDevice` etc) classes do it",
        "createdAt" : "2021-04-20T00:54:48Z",
        "updatedAt" : "2021-04-20T00:54:48Z",
        "lastEditedBy" : "493e27a2-5090-4479-8c03-6c418bfad375",
        "tags" : [
        ]
      },
      {
        "id" : "1539d754-b7a4-4cd2-9765-f4a4f870d582",
        "parentId" : "9864901e-ef6e-438e-aaac-28e8b67aca12",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "global context injection is the legacy method of providing dependencies. Generally we've been slowly, slowly migrating code to just use regular old constructor injection of deps, or to provide visibleForTesting arguments where globals are still used heavily. If you're refactoring or rewriting code, prefer restructuring it to not depend on context injection",
        "createdAt" : "2021-04-20T02:09:25Z",
        "updatedAt" : "2021-04-20T02:09:25Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "717c7fcd-12f3-4f5d-a990-71d4d0139ce9",
        "parentId" : "9864901e-ef6e-438e-aaac-28e8b67aca12",
        "authorId" : "493e27a2-5090-4479-8c03-6c418bfad375",
        "body" : "Ah okay. Yeah I might as well use constructor arguments then",
        "createdAt" : "2021-04-20T11:19:35Z",
        "updatedAt" : "2021-04-20T11:19:36Z",
        "lastEditedBy" : "493e27a2-5090-4479-8c03-6c418bfad375",
        "tags" : [
        ]
      }
    ],
    "commit" : "5dd51259a1b1219f03da5f1050c372fe17d74b06",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@    );\n\n    await BundleBuilder().build(\n      platform: TargetPlatform.ios,\n      buildInfo: const BuildInfo("
  }
]