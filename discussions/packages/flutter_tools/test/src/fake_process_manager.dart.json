[
  {
    "id" : "cbe42bf8-3169-4b0b-9b42-b1e95be21671",
    "prId" : 42369,
    "prUrl" : "https://github.com/flutter/flutter/pull/42369#pullrequestreview-300848948",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d35414d-f50a-47fc-98a9-3152480f4e29",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "This file needs comments.",
        "createdAt" : "2019-10-10T17:19:55Z",
        "updatedAt" : "2019-10-11T04:18:30Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "b50a997a-f4dc-4f2c-bb57-0fedb8b50b02",
        "parentId" : "1d35414d-f50a-47fc-98a9-3152480f4e29",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "done",
        "createdAt" : "2019-10-11T00:22:16Z",
        "updatedAt" : "2019-10-11T04:18:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "d9c11da3-3fe2-42a1-97e3-c4975c2a1fb8",
        "parentId" : "1d35414d-f50a-47fc-98a9-3152480f4e29",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Cool, thanks. This is a really nice API, but it doesn't appear to have any non-trivial uses in this PR. What are your plans for it?",
        "createdAt" : "2019-10-11T15:53:44Z",
        "updatedAt" : "2019-10-11T15:53:44Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "4230ecb2-bf67-45e3-8801-ae5542097dfc",
        "parentId" : "1d35414d-f50a-47fc-98a9-3152480f4e29",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "My first customer is https://github.com/flutter/flutter/pull/42491. I suspect the API will evolve as it gets more users.",
        "createdAt" : "2019-10-11T18:13:20Z",
        "updatedAt" : "2019-10-11T18:13:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fce8013413c154226a9e26c869e51b1482203b67",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2,6 @@// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport 'dart:convert';\nimport 'dart:io' as io show ProcessSignal;"
  },
  {
    "id" : "777158d7-3218-4f08-af76-c4a96dfbc75f",
    "prId" : 52772,
    "prUrl" : "https://github.com/flutter/flutter/pull/52772#pullrequestreview-376506579",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cebbec13-9e95-470c-9cd1-34c056a01864",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "We needed a way to differentiate the stream being empty versus containing an empty string.",
        "createdAt" : "2020-03-17T22:58:00Z",
        "updatedAt" : "2020-03-17T23:31:18Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "9e56adb6-0c00-4170-9cf7-63c85c0d6d02",
        "parentId" : "cebbec13-9e95-470c-9cd1-34c056a01864",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "what does `utf8.encode('')` return?",
        "createdAt" : "2020-03-18T00:46:47Z",
        "updatedAt" : "2020-03-18T00:46:48Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "aba4e358-8a6e-43e1-91f1-d304b5572eb7",
        "parentId" : "cebbec13-9e95-470c-9cd1-34c056a01864",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "EmptyList, but the Stream constructor leads to a non-empty stream with a single empty list emitted on it. ",
        "createdAt" : "2020-03-18T01:23:31Z",
        "updatedAt" : "2020-03-18T01:23:31Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6a01243f0714af5d33ed143089ae51e4faf41b2",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +138,142 @@        return _exitCode;\n      }),\n      stderr = _stderr == null\n        ? const Stream<List<int>>.empty()\n        : Stream<List<int>>.value(utf8.encode(_stderr)),"
  },
  {
    "id" : "9d48db5c-4830-4a2f-b40c-4e9272a68d70",
    "prId" : 52854,
    "prUrl" : "https://github.com/flutter/flutter/pull/52854#pullrequestreview-377293342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d105178-b2e0-45a2-9704-b23b27fb738d",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Using the built in matches gives much better error messages:\r\n\r\nNow:\r\n```\r\n00:03 +1 -3: IOSDevice.startApp fails in debug mode when mDNS fails and when Observatory URI is malformed [E]\r\n  Expected: [\r\n              'ios-deploy',\r\n              '--id',\r\n              '123',\r\n              '--bundle',\r\n              '/',\r\n              '--no-wifi',\r\n              '--justlaunch',\r\n              '--args',\r\n              '--enable-dart-profiling --enable-service-port-fallback --disable-service-auth-codes --observatory-port=60700'\r\n            ]\r\n    Actual: [\r\n              'ios-deploy',\r\n              '--id',\r\n              '123',\r\n              '--bundle',\r\n              '/',\r\n              '--no-wifi',\r\n              '--justlaunch',\r\n              '--args',\r\n              '--enable-dart-profiling --enable-service-port-fallback --disable-service-auth-codes --observatory-port=60700 --enable-checked-mode --verify-entry-points'\r\n            ]\r\n     Which: was '--enable-dart-profiling --enable-service-port-fallback --disable-service-auth-codes --observatory-port=60700 --enable-checked-mode --verify-entry-points' instead of '--enable-dart-profiling --enable-service-port-fallback --disable-service-auth-codes --observatory-port=60700' at location [8]\r\n  \r\n```\r\nBefore:\r\n\r\n```\r\n00:03 +1 -3: IOSDevice.startApp fails in debug mode when mDNS fails and when Observatory URI is malformed [E]\r\n  Expected: true\r\n    Actual: <false>\r\n  ProcessManager was told to execute [ios-deploy, --id, 123, --bundle, /, --no-wifi, --justlaunch, --args, --enable-dart-profiling --enable-service-port-fallback --disable-service-auth-codes --observatory-port=60700 --enable-checked-mode --verify-entry-points] (in null, with environment {PATH: /usr/bin:null, DYLD_LIBRARY_PATH: /path/to/libraries}) but the next process that was expected was [ios-deploy, --id, 123, --bundle, /, --no-wifi, --justlaunch, --args, --enable-dart-profiling --enable-service-port-fallback --disable-service-auth-codes --observatory-port=60700] (in null, with environment {PATH: /usr/bin:null, DYLD_LIBRARY_PATH: /path/to/libraries})}.\r\n``` ",
        "createdAt" : "2020-03-18T22:46:41Z",
        "updatedAt" : "2020-03-18T23:09:34Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "9f0bfc84-7a96-423c-97ec-3216062be80d",
        "parentId" : "9d105178-b2e0-45a2-9704-b23b27fb738d",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "nice",
        "createdAt" : "2020-03-18T22:57:00Z",
        "updatedAt" : "2020-03-18T23:09:34Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "96bfef65bbc563d5b9867711dbc495bfc39c2182",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +83,87 @@  final Completer<void> completer;\n\n  void _matches(List<String> command, String workingDirectory, Map<String, String> environment) {\n    expect(command, equals(this.command));\n    if (this.workingDirectory != null) {"
  },
  {
    "id" : "923342b6-6c99-4ecc-9303-2f9a5d9478f4",
    "prId" : 77985,
    "prUrl" : "https://github.com/flutter/flutter/pull/77985#pullrequestreview-611053250",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3e04c2b-95da-4463-acf9-fbb0afc62ee7",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "`Iterable.join` will call toString on each element first, so you can simplify this to:\r\n\r\n`fakeProcessManager._remainingExpectations.join('\\n')`\r\n",
        "createdAt" : "2021-03-12T06:22:12Z",
        "updatedAt" : "2021-03-12T18:49:42Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "9e811094-306b-42d2-8258-8b2b76598029",
        "parentId" : "c3e04c2b-95da-4463-acf9-fbb0afc62ee7",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "I need `command.command`.  Your suggestion gives:\r\n```\r\n   Which: has remaining expectations:\r\n          Instance of 'FakeCommand'\r\n```\r\nBut we want:\r\n```\r\n   Which: has remaining expectations:\r\n          [git, describe]\r\n```\r\nYou're right though I don't need the `toString`.",
        "createdAt" : "2021-03-12T18:37:34Z",
        "updatedAt" : "2021-03-12T18:49:42Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb6379cf9a2c7da07feb51fc92b9fa3ff6bf8146",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +417,421 @@      ) {\n    final FakeProcessManager fakeProcessManager = item as FakeProcessManager;\n    return description.add(\n        'has remaining expectations:\\n${fakeProcessManager._remainingExpectations.map((FakeCommand command) => command.command).join('\\n')}');\n  }"
  }
]