[
  {
    "id" : "bbc52cc1-ae2d-46d8-bd04-b3bc6fdedc69",
    "prId" : 12293,
    "prUrl" : "https://github.com/flutter/flutter/pull/12293#pullrequestreview-65925555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a88e01d-18b2-43f9-823b-99b744bacf22",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "This is already added in `_defaultInitializeContext()`",
        "createdAt" : "2017-09-28T02:45:09Z",
        "updatedAt" : "2017-09-28T23:42:56Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "64150bad-f8af-4b9e-b9f8-8fd2eeaa4e1a",
        "parentId" : "7a88e01d-18b2-43f9-823b-99b744bacf22",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Not sure what you mean; this _is_ `_defaultInitializeContext()`.",
        "createdAt" : "2017-09-28T16:23:51Z",
        "updatedAt" : "2017-09-28T23:42:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "6e3ac1c6-4f0b-4dc0-9881-8bb485a18cc5",
        "parentId" : "7a88e01d-18b2-43f9-823b-99b744bacf22",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "That's what I get for reviewing when I'm tired - I read this as a new line instead of a mutated line ðŸ˜ª ",
        "createdAt" : "2017-09-28T16:45:46Z",
        "updatedAt" : "2017-09-28T23:42:56Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa91983b9ff54dff53d2f5ac6237da8f21b6e746",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +61,65 @@    ..putIfAbsent(Usage, () => new MockUsage())\n    ..putIfAbsent(FlutterVersion, () => new MockFlutterVersion())\n    ..putIfAbsent(Clock, () => const Clock())\n    ..putIfAbsent(HttpClient, () => new MockHttpClient());\n}"
  },
  {
    "id" : "b70b2cc8-d13b-4434-9af7-d40e0ef82a7f",
    "prId" : 22037,
    "prUrl" : "https://github.com/flutter/flutter/pull/22037#pullrequestreview-156917029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3c0a9f3-a0cf-4449-812e-3173cae79d62",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "I'm curious what would happen if we used something more aggressive here - like a file system that threw for all operations, forcing the test author to always provide a test-specific file system.",
        "createdAt" : "2018-09-19T16:37:47Z",
        "updatedAt" : "2018-10-03T14:44:46Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "fa6d139b-be4b-47b5-b4a9-4ad8b4ded50a",
        "parentId" : "b3c0a9f3-a0cf-4449-812e-3173cae79d62",
        "authorId" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "body" : "I think it'd add quite a bit of boilerplate for a relatively small benefit. Most use of the file system is safe, it's only really global mutable state like this causing issues. It'd be nice if we could default to an in-memory file system here, but we have many tests that require reading/writing real files (for ex. they write files into temp folder, then spawn processes that interact with them).",
        "createdAt" : "2018-09-19T16:43:50Z",
        "updatedAt" : "2018-10-03T14:44:46Z",
        "lastEditedBy" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "tags" : [
        ]
      }
    ],
    "commit" : "882e1f8cb9ab60f6b2dfa820dc94b553e9c6ea07",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +82,86 @@          Usage: () => MockUsage(),\n          XcodeProjectInterpreter: () => MockXcodeProjectInterpreter(),\n          FileSystem: () => LocalFileSystemBlockingSetCurrentDirectory(),\n        },\n        body: () {"
  },
  {
    "id" : "d10ef3a9-1290-475a-825b-f7d9dc9f8375",
    "prId" : 33163,
    "prUrl" : "https://github.com/flutter/flutter/pull/33163#pullrequestreview-263961747",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3d9da86-e788-400c-bb10-2d058645babd",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Rename `FakeOperatingSystemUtils`.  Otherwise, it looks like a Mockito mock and makes the reader wonder how the test is getting by without the mock having been set up (`when(...).thenReturn(...)`)\r\n\r\n/me deletes his earlier comment asking how the test was getting by without the mock having been set up.",
        "createdAt" : "2019-05-22T04:48:27Z",
        "updatedAt" : "2019-05-22T05:29:20Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "6107c1b7-07f2-46ec-b74b-a2041fff570b",
        "parentId" : "a3d9da86-e788-400c-bb10-2d058645babd",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "We have lots of MockFoos in here that aren't mockito mocks.",
        "createdAt" : "2019-05-22T05:21:58Z",
        "updatedAt" : "2019-05-22T05:29:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "531eb3ec-8630-46ca-9f01-a43ea66c4b86",
        "parentId" : "a3d9da86-e788-400c-bb10-2d058645babd",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(in fact they're in the majority compared to MockFoos that are mockito-related)",
        "createdAt" : "2019-05-22T05:23:01Z",
        "updatedAt" : "2019-05-22T05:29:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "f268c6c8-47ec-40e1-8a4f-79432553218e",
        "parentId" : "a3d9da86-e788-400c-bb10-2d058645babd",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "heh, looks like you ended up doing this anyway...",
        "createdAt" : "2019-07-18T23:59:29Z",
        "updatedAt" : "2019-07-18T23:59:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "901f82376eaf6e9b889ebf3a4118044c494415b5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +223,227 @@}\n\nclass MockOperatingSystemUtils implements OperatingSystemUtils {\n  @override\n  ProcessResult makeExecutable(File file) => null;"
  }
]