[
  {
    "id" : "82edcdaf-e8ea-4cdd-9f33-e098f060fa51",
    "prId" : 19253,
    "prUrl" : "https://github.com/flutter/flutter/pull/19253#pullrequestreview-136733296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e121e0d8-32dc-4147-95f3-83fcc9707fdf",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "You could also consider using the `print` variant from package:test that only prints when the test fails.",
        "createdAt" : "2018-07-12T14:52:07Z",
        "updatedAt" : "2018-07-12T14:52:08Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "a955b0f9-66ee-4258-b6c7-06887b944889",
        "parentId" : "e121e0d8-32dc-4147-95f3-83fcc9707fdf",
        "authorId" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "body" : "I think it might be less useful here - this text gets streamed as the test runs (if you've enabled the flag). A lot of the time working on these tests you hit timeouts because you didn't get the response you expected; and not seeing any output until the timeout expires (and not getting it at all if you terminate) might make it frustrating.",
        "createdAt" : "2018-07-12T16:25:48Z",
        "updatedAt" : "2018-07-12T16:25:48Z",
        "lastEditedBy" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "tags" : [
        ]
      },
      {
        "id" : "25be8bf7-26fa-475e-b5ea-a2d797aa021a",
        "parentId" : "e121e0d8-32dc-4147-95f3-83fcc9707fdf",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "gotcha",
        "createdAt" : "2018-07-12T16:35:51Z",
        "updatedAt" : "2018-07-12T16:35:52Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "58f3778445d891f11ef11123fa82b0b62791b810",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +43,47 @@    _allMessages.add(truncatedMsg);\n    if (_printJsonAndStderr) {\n      print(truncatedMsg);\n    }\n    return msg;"
  },
  {
    "id" : "b926e7a7-e27d-41fc-a476-abf8b794e21a",
    "prId" : 19473,
    "prUrl" : "https://github.com/flutter/flutter/pull/19473#pullrequestreview-140997601",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03cc3df7-a420-4785-ad36-5cfc8b097dcc",
        "parentId" : null,
        "authorId" : "8d1522ed-5e26-4cce-a4e4-80c6fd1c88d6",
        "body" : "double await?\r\nFrom the dart spec:\r\n\r\n> We collapse multiple layers of futures into one. If e evaluates to a future f,\r\n> the future will not invoke its then() callback until f completes to a non-future\r\n> value, and so the result of an await is never a future, and the result of an async\r\n> function will never have type Future< X > where X itself is an invocation of\r\n> Future.\r\n\r\n",
        "createdAt" : "2018-07-25T12:48:51Z",
        "updatedAt" : "2018-07-25T13:42:21Z",
        "lastEditedBy" : "8d1522ed-5e26-4cce-a4e4-80c6fd1c88d6",
        "tags" : [
        ]
      },
      {
        "id" : "02cbd15e-3599-4587-8c29-27da1aaff442",
        "parentId" : "03cc3df7-a420-4785-ad36-5cfc8b097dcc",
        "authorId" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "body" : "I can't call `setExceptionPauseMode` until the first future completes, and the second await is for the result of that, so I think this is slightly different (this is `await (await a()).something()` not `await (await a())`. I didn't know about that behaviour though, it's good to know.\r\n\r\n(If you think I can still improve this, lmk)",
        "createdAt" : "2018-07-25T13:34:07Z",
        "updatedAt" : "2018-07-25T13:42:21Z",
        "lastEditedBy" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "tags" : [
        ]
      },
      {
        "id" : "e98ace80-41d8-41fd-854f-54d4f63d5718",
        "parentId" : "03cc3df7-a420-4785-ad36-5cfc8b097dcc",
        "authorId" : "8d1522ed-5e26-4cce-a4e4-80c6fd1c88d6",
        "body" : "Sorry - I read that wrong.",
        "createdAt" : "2018-07-27T06:28:56Z",
        "updatedAt" : "2018-07-27T06:28:57Z",
        "lastEditedBy" : "8d1522ed-5e26-4cce-a4e4-80c6fd1c88d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "19f8682df110dd79ed45d9cb054d4cc712268abb",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +130,134 @@      await waitForPause();\n      if (pauseOnExceptions) {\n        await (await getFlutterIsolate()).setExceptionPauseMode(VMExceptionPauseMode.unhandled);\n      }\n      await resume(wait: false);"
  }
]