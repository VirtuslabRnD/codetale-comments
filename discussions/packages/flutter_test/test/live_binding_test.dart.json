[
  {
    "id" : "6611f461-e0b2-48ac-b758-04dafadf3c04",
    "prId" : 61102,
    "prUrl" : "https://github.com/flutter/flutter/pull/61102#pullrequestreview-444914236",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2ae9ed4-6eae-4871-a9e0-8d6146121719",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "nit: consider adding a comment here or at the top of the test explaining that this mimics the start of a gesture as seen on a device.",
        "createdAt" : "2020-07-08T16:04:15Z",
        "updatedAt" : "2020-07-08T16:07:14Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae5521ac5356c42487a220ede7a45cacc4b27470",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@    // This mimics the start of a gesture as seen on a device, where inputs\n    // starts with a PointerAddedEvent.\n    await gesture.addPointer();\n  });\n}"
  },
  {
    "id" : "b5e19a03-eb74-4aa8-aa5c-0321794d37fc",
    "prId" : 61901,
    "prUrl" : "https://github.com/flutter/flutter/pull/61901#pullrequestreview-452025441",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24d49ddb-a8f3-47d8-a3e9-2970b6f484b7",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Don't you want to have some expectations after this line?  Or is it just that you expect it to not crash? At the least, you might want to verify that the `Text` actually received a hover event (in which case, you probably want to surround it with a `MouseRegion`).",
        "createdAt" : "2020-07-20T21:33:57Z",
        "updatedAt" : "2020-07-20T23:25:26Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "a1866779-bc30-48f8-9db0-0521017725f1",
        "parentId" : "24d49ddb-a8f3-47d8-a3e9-2970b6f484b7",
        "authorId" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "body" : "I'm just expecting it not to crash (or rather, not to trigger the assert in the original version before the PR, since that one can actually run on profile mode). The `location` can be anything in the app for the test purposes but it's just `moveTo` has to have a location. ",
        "createdAt" : "2020-07-20T21:57:47Z",
        "updatedAt" : "2020-07-20T23:25:26Z",
        "lastEditedBy" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "tags" : [
        ]
      },
      {
        "id" : "e6424934-5f02-4d74-84ca-e01f8d992444",
        "parentId" : "24d49ddb-a8f3-47d8-a3e9-2970b6f484b7",
        "authorId" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "body" : "But let me know if you think I should catch the event. @gspencergoog ",
        "createdAt" : "2020-07-20T21:58:29Z",
        "updatedAt" : "2020-07-20T23:25:26Z",
        "lastEditedBy" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "tags" : [
        ]
      },
      {
        "id" : "42a224b6-8b14-4025-8fb2-a4002a8f06b8",
        "parentId" : "24d49ddb-a8f3-47d8-a3e9-2970b6f484b7",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "I would suggest at least one expect in there that makes sure that the hover event occurred. Something like:\r\n```dart\r\n  testWidgets('Input PointerHoverEvent', (WidgetTester tester) async {\r\n    PointerHoverEvent hoverEvent;\r\n    await tester.pumpWidget(MaterialApp(home: MouseRegion(child: Text('Test'), onHover: (PointerHoverEvent event){\r\n      hoverEvent = event;\r\n    },)));\r\n    await tester.pumpWidget(const MaterialApp(home: Text('Test')));\r\n    await tester.pump();\r\n    final TestGesture gesture = await tester.createGesture(\r\n        kind: PointerDeviceKind.mouse);\r\n    final Offset location = tester.getCenter(find.text('Test'));\r\n    // for mouse input without a down event, moveTo generates a hover event\r\n    await gesture.moveTo(location);\r\n    expect(hoverEvent, isNotNull);\r\n    await gesture.removePointer();\r\n  });\r\n```\r\n\r\nIt just makes it clearer that the test does something: without any expectations, someone (like me!) might look at the test and wonder if it is testing anything, or if the expectations were just accidentally omitted.\r\n\r\nAt the least, you could have a comment saying that the test is expected to not assert (which is probably all you can do for the first test in the file).",
        "createdAt" : "2020-07-20T22:33:34Z",
        "updatedAt" : "2020-07-20T23:25:26Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "6230c86a-6e53-4ec5-bfb5-e91f7f827d68",
        "parentId" : "24d49ddb-a8f3-47d8-a3e9-2970b6f484b7",
        "authorId" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "body" : "Done with a little different. ",
        "createdAt" : "2020-07-20T23:25:49Z",
        "updatedAt" : "2020-07-20T23:25:50Z",
        "lastEditedBy" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbb5e685f3cba2e17a648092ad2e24b82482e8e4",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +34,38 @@    final Offset location = tester.getCenter(find.text('Test'));\n    // for mouse input without a down event, moveTo generates a hover event\n    await gesture.moveTo(location);\n    expect(hoverEvent, isNotNull);\n    expect(hoverEvent.position, location);"
  }
]