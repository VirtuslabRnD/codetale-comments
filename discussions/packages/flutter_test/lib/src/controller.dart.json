[
  {
    "id" : "41e6c2b9-7485-4c41-97d3-944060788815",
    "prId" : 4001,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bda099d9-bcbe-48b2-89b4-3128bf529b84",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Do you need a space before the `*` to make this into a bullet?\n",
        "createdAt" : "2016-05-17T23:42:09Z",
        "updatedAt" : "2016-05-17T23:59:45Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "8213a6ef-df0e-4c42-8f8a-eae616ff3070",
        "parentId" : "bda099d9-bcbe-48b2-89b4-3128bf529b84",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "You need a newline before, but not a space before. See cassowary library for instance.\n",
        "createdAt" : "2016-05-17T23:58:48Z",
        "updatedAt" : "2016-05-17T23:59:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0632bb8a06ff657eb5f9f04adcf5868e693f3889",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +138,142 @@  ///\n  /// * Use [firstState] if you expect to match several states but only want the first.\n  /// * Use [stateList] if you expect to match several states and want all of them.\n  State/*=T*/ state/*<T extends State>*/(Finder finder) {\n    TestAsyncUtils.guardSync();"
  },
  {
    "id" : "d8a37579-7a72-4156-aa46-e67abe178e88",
    "prId" : 19630,
    "prUrl" : "https://github.com/flutter/flutter/pull/19630#pullrequestreview-142177549",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d73b2d12-d6a2-4786-bac9-04e2e6eeed20",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "duh :stuck_out_tongue_closed_eyes: ",
        "createdAt" : "2018-07-30T22:44:26Z",
        "updatedAt" : "2018-08-01T23:12:40Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "8f77ca9f-774e-438e-838f-747a18a7fdf8",
        "parentId" : "d73b2d12-d6a2-4786-bac9-04e2e6eeed20",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yeah... constructors are hard to document :-)",
        "createdAt" : "2018-07-31T23:03:33Z",
        "updatedAt" : "2018-08-01T23:12:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6f171df23fba1ec5707fa108e2ca0ce36a367c9",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +528,532 @@/// This is used, for instance, by [FlutterDriver].\nclass LiveWidgetController extends WidgetController {\n  /// Creates a widget controller that uses the given binding.\n  LiveWidgetController(WidgetsBinding binding) : super(binding);\n"
  },
  {
    "id" : "6be56d67-bd19-46c0-a499-6c5013928156",
    "prId" : 24830,
    "prUrl" : "https://github.com/flutter/flutter/pull/24830#pullrequestreview-197310249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "157ea6b2-4814-447f-92a5-2c79c5403d7b",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Link back to createGesture so people who don't want the initial down gesture can find it easily?",
        "createdAt" : "2019-01-25T22:12:12Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "38857889-908e-4490-9d70-29405f36f5a2",
        "parentId" : "157ea6b2-4814-447f-92a5-2c79c5403d7b",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done.",
        "createdAt" : "2019-01-28T23:44:39Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f684a923245b2b3f1be91086d491a0128fd641fd",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +458,462 @@  /// Creates a gesture with an initial down gesture at a particular point, and\n  /// returns the [TestGesture] object which you can use to continue the\n  /// gesture.\n  ///\n  /// You can use [createGesture] if your gesture doesn't begin with an initial"
  },
  {
    "id" : "5b1b4959-e3df-4258-af1c-f2af47ce48d3",
    "prId" : 26438,
    "prUrl" : "https://github.com/flutter/flutter/pull/26438#pullrequestreview-204035719",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64eada0d-26b8-41bd-b7d7-38da9b7f8126",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this changes the logic so that instead of moving diagonally, it now moves in an L shape. I assume that's not what you want?",
        "createdAt" : "2019-01-12T01:30:03Z",
        "updatedAt" : "2019-02-25T20:53:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "f24bb52f-3678-46ed-9b2d-874b1896f209",
        "parentId" : "64eada0d-26b8-41bd-b7d7-38da9b7f8126",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "yup, I already fixed this",
        "createdAt" : "2019-01-12T01:31:13Z",
        "updatedAt" : "2019-02-25T20:53:24Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "9c4ab9b7-f339-41cd-9faf-a8ac042808fc",
        "parentId" : "64eada0d-26b8-41bd-b7d7-38da9b7f8126",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Is there a test that verifies that this is fixed?\r\n\r\nIn particular, it should verify at least the following cases (assuming kTouchSlop is 10 to make the maths simpler):\r\n\r\n- dragging 3,8 - one drag\r\n- dragging 8,3 - one drag.\r\n- dragging 20,5 - 2 drags, one by 10,2.5, next by another 10,2.5.\r\n- dragging 20,15 - 3 drags, one by 10,7.5, next by 3.333,2.5, finally another by the remainder (6.666,5).\r\n- dragging 15,20 - 3 drags, one by 7.5,10, next by 2.5,3.333, one by 5,6.666.\r\n- dragging 20,20 - 2 drags, one by 10,10, next by another 10,10.\r\n- dragging 5,20 - 2 drags, one by 2.5,10, next by another 2.5,10.\r\n- dragging 0,5 - 1 drag\r\n- dragging -150,200 - 3 drags, one by -75,100, next by -25,33.333, one by -50,66.666.\r\n",
        "createdAt" : "2019-02-11T22:54:57Z",
        "updatedAt" : "2019-02-25T20:53:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "98a55e58-5da4-4945-b4c5-06bbed5fcbf1",
        "parentId" : "64eada0d-26b8-41bd-b7d7-38da9b7f8126",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "That last example is wrong. (-7.5, 10.0 | -2.5, 3.3 |  -140.0, 186.7). But yah, I get the point! :) I was not thinking about this problem correctly.",
        "createdAt" : "2019-02-15T00:22:32Z",
        "updatedAt" : "2019-02-25T20:53:24Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6c41fef52fef7b29fd7586324da04c54080e5e7",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +517,521 @@      } else { // The drag ends inside the box.\n        await gesture.moveBy(offset);\n      }\n      await gesture.up();\n    });"
  },
  {
    "id" : "dcabc9b1-2e0d-4350-9e5a-bff4797889b2",
    "prId" : 26438,
    "prUrl" : "https://github.com/flutter/flutter/pull/26438#pullrequestreview-205391664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb9d8bb5-df2b-489c-9563-35f45ff409c3",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This code is very clean and well commented.",
        "createdAt" : "2019-02-19T18:55:45Z",
        "updatedAt" : "2019-02-25T20:53:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6c41fef52fef7b29fd7586324da04c54080e5e7",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +517,521 @@      } else { // The drag ends inside the box.\n        await gesture.moveBy(offset);\n      }\n      await gesture.up();\n    });"
  },
  {
    "id" : "4ccb705c-b043-43ee-884d-5f3959bb765e",
    "prId" : 26438,
    "prUrl" : "https://github.com/flutter/flutter/pull/26438#pullrequestreview-207540516",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbaabb0e-af8d-463f-8842-0ad1c0e7032c",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: the first paragraph should be a one sentence summary. (Just put \"This value ...\" on it's own paragraph).",
        "createdAt" : "2019-02-25T17:51:49Z",
        "updatedAt" : "2019-02-25T20:53:24Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6c41fef52fef7b29fd7586324da04c54080e5e7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +14,18 @@import 'test_pointer.dart';\n\n/// The default drag touch slop used to break up a large drag into multiple\n/// smaller moves.\n///"
  },
  {
    "id" : "f397ca7c-2924-42e5-914d-890bafc93be2",
    "prId" : 26438,
    "prUrl" : "https://github.com/flutter/flutter/pull/26438#pullrequestreview-207540516",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f701870-c465-474f-aac8-bfd56a06a48a",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "When reading this doc I'm left with a few unanswered questions. Maybe you can add some more information to answer them for our curious users?\r\n\r\n* Why are the gestures broken up into multiple gestures in the first place?\r\n* Why should I ever modify touchSlopX or tochSlopY?\r\n* If I change them how do I determine the values I want for them?",
        "createdAt" : "2019-02-25T18:01:24Z",
        "updatedAt" : "2019-02-25T20:53:24Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6c41fef52fef7b29fd7586324da04c54080e5e7",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +419,423 @@  ///\n  /// {@template flutter.flutter_test.drag}\n  /// By default, if the x or y component of offset is greater than [kTouchSlop], the\n  /// gesture is broken up into two separate moves calls. Changing 'touchSlopX' or\n  /// `touchSlopY` will change the minimum amount of movement in the respective axis"
  },
  {
    "id" : "e6d581f0-ed6e-4d20-85cd-79f7d88df3fa",
    "prId" : 26438,
    "prUrl" : "https://github.com/flutter/flutter/pull/26438#pullrequestreview-207648915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84832762-ec72-41fa-bb39-f1ebc0623163",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Can this be expressed as an assert instead?",
        "createdAt" : "2019-02-25T20:47:50Z",
        "updatedAt" : "2019-02-25T20:53:24Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "8c10b696-1e42-4382-af8f-afa3a1dfdb88",
        "parentId" : "84832762-ec72-41fa-bb39-f1ebc0623163",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "yup!",
        "createdAt" : "2019-02-25T21:42:49Z",
        "updatedAt" : "2019-02-25T21:42:49Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6c41fef52fef7b29fd7586324da04c54080e5e7",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +475,479 @@            assert(offsetX.abs() > touchSlopX);\n            // The drag goes through the vertical edge of the box.\n            // It is guaranteed that the |offsetX| > touchSlopX.\n            final double diffY = offsetSlope.abs() * touchSlopX * ySign;\n"
  },
  {
    "id" : "89d140c4-1660-44b9-ba5d-fe15245e3667",
    "prId" : 60796,
    "prUrl" : "https://github.com/flutter/flutter/pull/60796#pullrequestreview-444986136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53f764d5-71f1-4c2c-b9d8-20618088124f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "why not implement it?",
        "createdAt" : "2020-07-08T17:33:43Z",
        "updatedAt" : "2020-07-10T21:02:36Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "062c927ca4a3473a6f861e8a2d2d2218d37cadef",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +699,703 @@    // TODO(CareF): This will be implemented after we decide what should be the\n    // correct pumping strategy.\n    throw UnimplementedError;\n  }\n}"
  },
  {
    "id" : "8514fc15-5abf-4cf4-9b1f-90e1e67e7633",
    "prId" : 60796,
    "prUrl" : "https://github.com/flutter/flutter/pull/60796#pullrequestreview-446676672",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e68ddfd9-bf36-4e18-85d0-f8e442c43b28",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "please file a bug and link it here",
        "createdAt" : "2020-07-10T18:52:28Z",
        "updatedAt" : "2020-07-10T21:02:36Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "9c47847b-876a-41db-9e3e-57987e5943a0",
        "parentId" : "e68ddfd9-bf36-4e18-85d0-f8e442c43b28",
        "authorId" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "body" : "I'm thinking implementing it should be mostly the same as the implementation in `WidgetTester`, but when I had a look at how we are using this `LiveWidgetController` in the repo I found very limited to a few test cases in `dev/`, where\r\n1. `dev/benchmarks/complex_layout/test_memory/scroll_perf.dart` is using `fling` which already is pumping regardless. \r\n2. `dev/integration_tests/flutter_gallery/test/live_smoketest.dart` and `dev/integration_tests/flutter_gallery/test_memory/image_cache_memory.dart` don't pump at all\r\n3. `packages/flutter_driver/lib/src/extension/extension.dart` is used in `flutter_driver` and don't have pump. \r\n\r\nFrom these use cases I believe 1 is just not taking much consideration about pumping while 2 and 3 already suggest not to pump. ",
        "createdAt" : "2020-07-10T20:15:24Z",
        "updatedAt" : "2020-07-10T21:02:36Z",
        "lastEditedBy" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "tags" : [
        ]
      },
      {
        "id" : "ee68463c-0daf-4189-bc75-6b8edb7be1a2",
        "parentId" : "e68ddfd9-bf36-4e18-85d0-f8e442c43b28",
        "authorId" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "body" : "And `LiveWidgetController` is not unit tested. ",
        "createdAt" : "2020-07-10T20:16:16Z",
        "updatedAt" : "2020-07-10T21:02:36Z",
        "lastEditedBy" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "tags" : [
        ]
      }
    ],
    "commit" : "062c927ca4a3473a6f861e8a2d2d2218d37cadef",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +698,702 @@  Future<List<Duration>> handlePointerEventRecord(List<PointerEventRecord> records) {\n    // TODO(CareF): This will be implemented after we decide what should be the\n    // correct pumping strategy.\n    throw UnimplementedError;\n  }"
  },
  {
    "id" : "329f16cd-4140-4163-99db-78fcdffe2921",
    "prId" : 61266,
    "prUrl" : "https://github.com/flutter/flutter/pull/61266#pullrequestreview-446729252",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fda45b51-b0f1-47f3-a68b-d48757220d20",
        "parentId" : null,
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "Can you comment when this will happen?",
        "createdAt" : "2020-07-10T21:59:34Z",
        "updatedAt" : "2020-07-17T23:51:19Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      },
      {
        "id" : "976e4857-7457-4986-9730-cda271e82041",
        "parentId" : "fda45b51-b0f1-47f3-a68b-d48757220d20",
        "authorId" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "body" : "When something along the way is expensive and causes miss of a frame. My experiments using #60796 + e2e usually have 2 or 3 packet out of like about 200 that falls here on a MotoG4 with the complex_layout test case and a set of input simulating scrolling, which looks like doing GC or something. ",
        "createdAt" : "2020-07-10T22:16:15Z",
        "updatedAt" : "2020-07-17T23:51:19Z",
        "lastEditedBy" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "tags" : [
        ]
      }
    ],
    "commit" : "277378ba4a67b15c536487a163f29af1702b8ced",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +733,737 @@        // So that the first event is promised to receive a zero timeDiff\n        final Duration timeDiff = record.timeDelay - now.difference(startTime);\n        if (timeDiff.isNegative) {\n          // This happens when something (e.g. GC) takes a long time during the\n          // processing of the events."
  },
  {
    "id" : "99c52c5f-7b59-4d13-808e-0827898229d2",
    "prId" : 62091,
    "prUrl" : "https://github.com/flutter/flutter/pull/62091#pullrequestreview-456252734",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31937c97-8258-4065-82df-5acdc0bab2ef",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should probably make it clear that the time that is advanced is the FakeAsync clock when you're using this in `flutter test`, and the real clock in live environments.",
        "createdAt" : "2020-07-27T22:49:15Z",
        "updatedAt" : "2020-07-28T17:36:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c2f1a0b9-eb66-4906-9f43-db1fc4b13087",
        "parentId" : "31937c97-8258-4065-82df-5acdc0bab2ef",
        "authorId" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "body" : "Similar things are already in the xxxTestBinding.pump. I added a sentence in `WidgetTester` for this but I don't think it should be in `WidgetController` because `WidgetController` does not necessarily come with a test binding and there isn't the context about FakeAsync because controller is assuming the binding to be general. ",
        "createdAt" : "2020-07-28T02:06:14Z",
        "updatedAt" : "2020-07-28T17:36:42Z",
        "lastEditedBy" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "tags" : [
        ]
      }
    ],
    "commit" : "b64b716ae586329103d866c61028a478bb980857",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +425,429 @@\n  /// Called to indicate that there should be a new frame after an optional\n  /// delay.\n  ///\n  /// The frame is pumped after a delay of [duration] if [duration] is not null,"
  },
  {
    "id" : "e3a5c995-cc27-40ec-955c-446b41a30135",
    "prId" : 62640,
    "prUrl" : "https://github.com/flutter/flutter/pull/62640#pullrequestreview-460287114",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1da6391e-62d3-41b0-abcf-20fd7c74ef40",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this implementation needs a test",
        "createdAt" : "2020-08-03T18:52:06Z",
        "updatedAt" : "2020-08-03T19:53:27Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "2a4385d5-4f28-4a75-af75-a3bae54c8f2d",
        "parentId" : "1da6391e-62d3-41b0-abcf-20fd7c74ef40",
        "authorId" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "body" : "It is tested in `'Test pumpAndSettle on LiveWidgetController'` from `packages/flutter_test/test/live_widget_controller_test.dart`",
        "createdAt" : "2020-08-03T19:31:57Z",
        "updatedAt" : "2020-08-03T19:53:27Z",
        "lastEditedBy" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "tags" : [
        ]
      }
    ],
    "commit" : "f92fc28d98d48e61ac05317acb2e97108906d668",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +908,912 @@  }\n\n  @override\n  Future<int> pumpAndSettle([\n    Duration duration = const Duration(milliseconds: 100),"
  },
  {
    "id" : "92201026-eba3-4712-bba5-850caff28565",
    "prId" : 63390,
    "prUrl" : "https://github.com/flutter/flutter/pull/63390#pullrequestreview-464505661",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa810c21-e360-47bc-9907-c31e189f8252",
        "parentId" : null,
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Nit: use `[offset], [speed], [frameInterval]` so the IDE/doc can cross reference with the argument declarations?",
        "createdAt" : "2020-08-10T18:55:11Z",
        "updatedAt" : "2020-08-10T19:12:47Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      },
      {
        "id" : "cbcce3b5-88d9-4caa-b9d0-f9a8d430f542",
        "parentId" : "fa810c21-e360-47bc-9907-c31e189f8252",
        "authorId" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "body" : "I don't think `[...]` can reference arguments. In all other docs `[...]` is only used for methods, functions, classes, consts, etc, but not arguments of a method. e.g. https://github.com/flutter/flutter/blob/master/packages/flutter_test/lib/src/controller.dart#L44 \r\nplus, in api.flutter.dev, we don't have an independent page for an argument. ",
        "createdAt" : "2020-08-10T19:19:14Z",
        "updatedAt" : "2020-08-10T19:21:14Z",
        "lastEditedBy" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "tags" : [
        ]
      }
    ],
    "commit" : "d52102fb0015c2005d7af375fefab4375d8d5473",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +319,323 @@  ///\n  /// To make tests more realistic, frames may be pumped during this time (using\n  /// calls to [pump]). If the total duration is longer than `frameInterval`,\n  /// then one frame is pumped each time that amount of time elapses while\n  /// sending events, or each time an event is synthesized, whichever is rarer."
  },
  {
    "id" : "41701a08-029f-44ef-8d71-cd68e3c9bf34",
    "prId" : 65817,
    "prUrl" : "https://github.com/flutter/flutter/pull/65817#pullrequestreview-493925890",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "773b62df-1ff7-416a-9f9a-828c4246c7d4",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "The second sentence sounds like an implementation detail that doesn't really belong in a doc? If this is a problem we could wire up a parameters passed in here to Scrollable.ensureVisible, though.",
        "createdAt" : "2020-09-16T21:44:49Z",
        "updatedAt" : "2020-09-16T21:44:52Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "b0789018-7cc4-4a80-b7fd-6d097e319599",
        "parentId" : "773b62df-1ff7-416a-9f9a-828c4246c7d4",
        "authorId" : "b0e8e5f4-24fc-402d-ba63-9576e63321dc",
        "body" : "I thought of wiring up the parameter but, as you say, there's currently no problem that necessitates the use of that parameter. Just that the behavior is not clear from documentation. I also did not want to just say: \"until the start of `finder` is visible` and leave it at that because this method does not own that functionality. Therefore, I wanted to provide a link to how the behavior is determined so someone else, if needed, can make a request to plumb that parameter.",
        "createdAt" : "2020-09-23T00:07:21Z",
        "updatedAt" : "2020-09-23T00:07:21Z",
        "lastEditedBy" : "b0e8e5f4-24fc-402d-ba63-9576e63321dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "d47f2635618ee5bf7b4e6864ac42e41066df606a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +977,981 @@  ///\n  /// Scroll is performed until the start of the `finder` is visible. This is\n  /// due to the default parameter values of [Scrollable.ensureVisible] method.\n  ///\n  /// See also [dragUntilVisible]."
  }
]