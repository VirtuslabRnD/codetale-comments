[
  {
    "id" : "fc0ef1a3-bc4e-4448-bfd7-e5ccae3d577e",
    "prId" : 27389,
    "prUrl" : "https://github.com/flutter/flutter/pull/27389#pullrequestreview-199319509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50763eae-c5b2-4d24-a42f-049bbdfd433c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "license",
        "createdAt" : "2019-02-01T20:20:20Z",
        "updatedAt" : "2019-02-04T23:45:32Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "04cf16ae-1d8e-457c-8271-9be19a2835ba",
        "parentId" : "50763eae-c5b2-4d24-a42f-049bbdfd433c",
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "Done",
        "createdAt" : "2019-02-02T00:30:33Z",
        "updatedAt" : "2019-02-04T23:45:32Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      }
    ],
    "commit" : "556548903f0fcde3dcc83308f2b4b53cd2d7e681",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3,7 @@// found in the LICENSE file.\n\nimport 'dart:typed_data' show ByteData;\nimport 'dart:ui' hide window;\n"
  },
  {
    "id" : "f841ed99-43da-4cd7-9256-4bc8cb94f461",
    "prId" : 27389,
    "prUrl" : "https://github.com/flutter/flutter/pull/27389#pullrequestreview-199319531",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90b7a329-b7d0-4f2c-b38b-01e050d40d53",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should elaborate some more here. Maybe some sample code, talk about what happens to overridden values when one test ends and another starts, talk about the general approach (overriding, null values allowing passthrough, etc)...",
        "createdAt" : "2019-02-01T20:30:41Z",
        "updatedAt" : "2019-02-04T23:45:32Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "33cb4073-27eb-461e-b56d-330fb208cafc",
        "parentId" : "90b7a329-b7d0-4f2c-b38b-01e050d40d53",
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "Done",
        "createdAt" : "2019-02-02T00:30:41Z",
        "updatedAt" : "2019-02-04T23:45:32Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      }
    ],
    "commit" : "556548903f0fcde3dcc83308f2b4b53cd2d7e681",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +9,13 @@\n/// [Window] that wraps another [Window] and allows faking of some properties\n/// for testing purposes.\n///\n/// Tests for certain widgets, e.g., [MaterialApp], might require faking certain"
  },
  {
    "id" : "39f83dce-501f-4406-9d64-10f3a7473eca",
    "prId" : 27389,
    "prUrl" : "https://github.com/flutter/flutter/pull/27389#pullrequestreview-199820373",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45a1584f-f460-4f89-b903-e626e8eec7ba",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This should be in a `{@tool ..}` section or under a `## Sample Code` heading to ensure that it is analyzed by our tools.",
        "createdAt" : "2019-02-04T18:40:09Z",
        "updatedAt" : "2019-02-04T23:45:32Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "3752c886-d773-4e5f-8727-8d581fa6094c",
        "parentId" : "45a1584f-f460-4f89-b903-e626e8eec7ba",
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "Done",
        "createdAt" : "2019-02-04T21:39:46Z",
        "updatedAt" : "2019-02-04T23:45:32Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      }
    ],
    "commit" : "556548903f0fcde3dcc83308f2b4b53cd2d7e681",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +21,25 @@/// A test can utilize a [TestWindow] in the following way:\n///\n/// ```dart\n/// testWidgets('your test name here', (WidgetTester tester) async {\n///   // Retrieve the TestWidgetsFlutterBinding."
  },
  {
    "id" : "f1a7f71c-c81a-4828-85a2-fdc60d872f1e",
    "prId" : 27389,
    "prUrl" : "https://github.com/flutter/flutter/pull/27389#pullrequestreview-199863826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2386baff-dfbc-4c98-9d2c-d0eb2c98d853",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: `## Sample code` should probably be above the sentence above since that's an explanation of the sample code.",
        "createdAt" : "2019-02-04T23:39:31Z",
        "updatedAt" : "2019-02-04T23:45:32Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "1f830378-cdb3-4033-923d-540ae86d7980",
        "parentId" : "2386baff-dfbc-4c98-9d2c-d0eb2c98d853",
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "Done",
        "createdAt" : "2019-02-04T23:45:34Z",
        "updatedAt" : "2019-02-04T23:45:34Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      }
    ],
    "commit" : "556548903f0fcde3dcc83308f2b4b53cd2d7e681",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +17,21 @@/// that is used by all tests.\n///\n/// ## Sample Code\n///\n/// A test can utilize a [TestWindow] in the following way:"
  },
  {
    "id" : "61cb1e44-7eac-4dd9-99d5-270fa83970ec",
    "prId" : 37417,
    "prUrl" : "https://github.com/flutter/flutter/pull/37417#pullrequestreview-269896082",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52813e59-05d7-40e0-b8a5-921d42c39964",
        "parentId" : null,
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "Seems like we should be doing more than just making this a no-op, right? Any time an end-user hits this, it is a legitimate and significant error...",
        "createdAt" : "2019-08-01T20:04:45Z",
        "updatedAt" : "2019-08-01T20:04:46Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      },
      {
        "id" : "3db201ef-c8df-49c5-a23f-a384cda5cb24",
        "parentId" : "52813e59-05d7-40e0-b8a5-921d42c39964",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "This turns the class effectively into a mock.\r\n\r\nWhat are you thinking an end user would do that causes this?  this is meant to make it so that when we add properties to window, we don't break this implementation (requiring manual rolls and mismatched google3/fuchsia contention).",
        "createdAt" : "2019-08-01T20:12:10Z",
        "updatedAt" : "2019-08-01T20:12:10Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "d096945b-ddc4-4ef0-9689-d8557030fbf3",
        "parentId" : "52813e59-05d7-40e0-b8a5-921d42c39964",
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "If a developer invokes a non-existent method on Window in his/her code, will it throw an exception? Or will it fizzle until some other area of the code fails?",
        "createdAt" : "2019-08-01T20:16:22Z",
        "updatedAt" : "2019-08-01T20:16:23Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      },
      {
        "id" : "444a88ef-99e9-444b-992d-029bd1507a83",
        "parentId" : "52813e59-05d7-40e0-b8a5-921d42c39964",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "It would happen if they were writing a test against TestWindow, casted that to dynamic, and then called a non-existent method/property.",
        "createdAt" : "2019-08-01T21:35:33Z",
        "updatedAt" : "2019-08-01T21:35:33Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "f4e99d10-3e72-40a8-8f3e-9b242c1e6495",
        "parentId" : "52813e59-05d7-40e0-b8a5-921d42c39964",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "This is effectively turning `TestWindow` into a `Mock` instead of a real implementation, for the sake of making rolls less painful.",
        "createdAt" : "2019-08-01T21:39:21Z",
        "updatedAt" : "2019-08-01T21:39:21Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "2849f766-4ad0-4b5e-ac40-3711fa0e96aa",
        "parentId" : "52813e59-05d7-40e0-b8a5-921d42c39964",
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "We spoke offline. I thought this was Window, but its TestWindow.",
        "createdAt" : "2019-08-01T21:47:22Z",
        "updatedAt" : "2019-08-01T21:47:22Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      }
    ],
    "commit" : "433aa5df174266f9625936176dbc568ab5b109a3",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +379,383 @@  /// catch up.\n  @override\n  dynamic noSuchMethod(Invocation invocation) {\n    return null;\n  }"
  }
]