[
  {
    "id" : "a8e73309-c183-4a3b-aed9-79fd94f40fb3",
    "prId" : 39983,
    "prUrl" : "https://github.com/flutter/flutter/pull/39983#pullrequestreview-286356673",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27374347-8c2e-4a4c-a66a-59c1e015bcd6",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "I haven't worked out all the details, but I suspect that with sufficient cleverness the analyzer and/or kernel compiler can be made to check that two different libraries implement the same signature by reducing it to the problem of checking that a class correctly implements an interface and then injecting the class into the right place, like we do in the tool. In a world where we want to do something like that, top-levels and statics would get in the way a bit.",
        "createdAt" : "2019-09-10T18:16:43Z",
        "updatedAt" : "2019-09-10T18:40:25Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "29512baf-e1e4-4196-96b9-94b706c8239f",
        "parentId" : "27374347-8c2e-4a4c-a66a-59c1e015bcd6",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I've implemented this check manually in the engine repo by walking both libraries and comparing types, its not great.\r\n\r\nCurrently we are running tests in both environments so we can catch type errors in CI.\r\n\r\nLonger term I would like to not use config specific imports at all, but that is somewhat gated on what is decided on the SDK structure for flutter for web.",
        "createdAt" : "2019-09-10T18:39:55Z",
        "updatedAt" : "2019-09-10T18:44:36Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d679192b513952afb95b0668f3536376230b21e",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +136,140 @@/// Returns a [ComparisonResult] to describe the pixel differential of the\n/// [test] and [master] image bytes provided.\nComparisonResult compareLists(List<int> test, List<int> master) {\n  if (identical(test, master))\n    return ComparisonResult(passed: true);"
  }
]