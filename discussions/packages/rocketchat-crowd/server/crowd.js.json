[
  {
    "id" : "8ca97e64-bf93-4c15-b0af-8d7ccfb5d51c",
    "prId" : 12981,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/12981#pullrequestreview-194556121",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "079389c5-de1e-4eb1-b985-ff9d940975b5",
        "parentId" : null,
        "authorId" : "6b2de464-07b6-478f-bdd0-b8707d59c1c1",
        "body" : "Should have a setting to enable/disable this behavior. Some companies would like to block auth if user was removed from Crowd",
        "createdAt" : "2019-01-19T20:12:11Z",
        "updatedAt" : "2019-02-22T20:01:50Z",
        "lastEditedBy" : "6b2de464-07b6-478f-bdd0-b8707d59c1c1",
        "tags" : [
        ]
      },
      {
        "id" : "183b2fa3-ae79-4f1d-b411-2f0c981b3d80",
        "parentId" : "079389c5-de1e-4eb1-b985-ff9d940975b5",
        "authorId" : "d8fea046-e44f-4f3c-af58-97f6f6eaea23",
        "body" : "Correct. I changed the behaviour to check if the user has been a crowd user -> then he/she is blocked. If it has been a local user, the fallback method is used.\r\n\r\nI would return a \r\n```\r\nreturn new Meteor.Error('not-authorized', 'User is not authorized by crowd');\r\n```\r\nin the first case. Is that the correct way here, or should something else be returned to create the correct behaviour in the frontend (like 'you are not authorized') @rodrigok ?",
        "createdAt" : "2019-01-21T11:31:42Z",
        "updatedAt" : "2019-02-22T20:01:50Z",
        "lastEditedBy" : "d8fea046-e44f-4f3c-af58-97f6f6eaea23",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e68684be11768340eae5940c0cb06d73c058737",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +284,288 @@\t\tif (user && (user.crowd === false)) {\n\t\t\tlogger.debug(`User ${ loginRequest.username } is not a valid crowd user, falling back`);\n\t\t\treturn fallbackDefaultAccountSystem(this, loginRequest.username, loginRequest.crowdPassword);\n\t\t}\n"
  }
]