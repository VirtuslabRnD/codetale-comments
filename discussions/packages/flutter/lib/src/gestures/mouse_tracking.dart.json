[
  {
    "id" : "2fbe524f-375d-4198-bfe0-da1d3724404e",
    "prId" : 24830,
    "prUrl" : "https://github.com/flutter/flutter/pull/24830#pullrequestreview-190968973",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fba30e00-f2eb-4624-baf9-8e39fa91f666",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "it's a pity if there was no frame scheduled that we have to wait an average of 24ms to get a result...",
        "createdAt" : "2018-12-13T01:06:49Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "42d54d91-d36b-44c9-8f17-590722ce8b46",
        "parentId" : "fba30e00-f2eb-4624-baf9-8e39fa91f666",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes, but wouldn't that mean we have to do hit testing for every move event?",
        "createdAt" : "2018-12-13T17:22:08Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "72215b20-9abe-490e-b4f1-586e941db953",
        "parentId" : "fba30e00-f2eb-4624-baf9-8e39fa91f666",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "oh i'm not saying i have a better solution, just that it's a pity",
        "createdAt" : "2019-01-09T22:25:39Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f684a923245b2b3f1be91086d491a0128fd641fd",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +130,134 @@  void _scheduleMousePositionCheck() {\n    SchedulerBinding.instance.addPostFrameCallback((Duration _) => collectMousePositions());\n    SchedulerBinding.instance.scheduleFrame();\n  }\n"
  },
  {
    "id" : "9374f464-2853-40a2-a2d2-add694698a58",
    "prId" : 24830,
    "prUrl" : "https://github.com/flutter/flutter/pull/24830#pullrequestreview-197310249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e6904ca-80b2-40c1-bac4-6b85bd344825",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Does this need to be public?",
        "createdAt" : "2019-01-25T22:27:39Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "7b6a133a-6f13-4931-9ac0-e18090de4ce1",
        "parentId" : "9e6904ca-80b2-40c1-bac4-6b85bd344825",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "No, but it does need to be visible for testing.  Added @visibleForTesting annotation.",
        "createdAt" : "2019-01-28T23:35:47Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f684a923245b2b3f1be91086d491a0128fd641fd",
    "line" : 184,
    "diffHunk" : "@@ -1,1 +182,186 @@  /// MouseTracker. Do not call in other contexts.\n  @visibleForTesting\n  void collectMousePositions() {\n    void exitAnnotation(_TrackedAnnotation trackedAnnotation, int deviceId) {\n      if (trackedAnnotation.annotation?.onExit != null && trackedAnnotation.activeDevices.contains(deviceId)) {"
  },
  {
    "id" : "cde29319-58c4-431e-8e7f-0e51f3d2b477",
    "prId" : 28990,
    "prUrl" : "https://github.com/flutter/flutter/pull/28990#pullrequestreview-212076896",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b328328-4ece-4539-88ec-7eefb1576830",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Nice find, thanks!",
        "createdAt" : "2019-03-07T23:30:16Z",
        "updatedAt" : "2019-03-08T20:11:09Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebe8adc3c3f9cd89b5796596ababd66c2d979abd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +125,129 @@      annotation.onExit(PointerExitEvent.fromHoverEvent(_lastMouseEvent[deviceId]));\n    }\n    _trackedAnnotations.remove(annotation);\n  }\n"
  },
  {
    "id" : "674a2a2c-c1a4-403d-b0be-fc84bc64788a",
    "prId" : 28990,
    "prUrl" : "https://github.com/flutter/flutter/pull/28990#pullrequestreview-212076896",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e94e5f8c-d03a-4e15-8240-33efd33a1227",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Make this `@visibleForTesting` too: it's not generally useful, so we don't want to add to the API surface unnecessarily.",
        "createdAt" : "2019-03-07T23:49:54Z",
        "updatedAt" : "2019-03-08T20:11:09Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebe8adc3c3f9cd89b5796596ababd66c2d979abd",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +178,182 @@  /// MouseTracker. Do not call in other contexts.\n  @visibleForTesting\n  bool isAnnotationAttached(MouseTrackerAnnotation annotation) {\n    return _trackedAnnotations[annotation] != null;\n  }"
  },
  {
    "id" : "1c58bee1-6499-407f-bbe9-a30fdb03b129",
    "prId" : 33477,
    "prUrl" : "https://github.com/flutter/flutter/pull/33477#pullrequestreview-243573024",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea78b0ae-ba06-4763-9a5c-61ffff44d228",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Could we add an `assert(event != null)` before this line? (Or are there cases where this is still legally null?)",
        "createdAt" : "2019-05-29T16:10:24Z",
        "updatedAt" : "2019-05-30T15:56:48Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "2f9bcf9e-731d-44e6-9c57-2ee00103263b",
        "parentId" : "ea78b0ae-ba06-4763-9a5c-61ffff44d228",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done.",
        "createdAt" : "2019-05-30T00:03:55Z",
        "updatedAt" : "2019-05-30T15:56:48Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "a440db188fbd5c9267cb32dc6fcacb4cf4da9cb3",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +128,132 @@        final PointerEvent event = _lastMouseEvent[deviceId] ?? _pendingRemovals[deviceId];\n        assert(event != null);\n        annotation.onExit(PointerExitEvent.fromMouseEvent(event));\n      }\n    }"
  },
  {
    "id" : "e9415cbe-d588-47e1-a6cf-6898314b4476",
    "prId" : 33477,
    "prUrl" : "https://github.com/flutter/flutter/pull/33477#pullrequestreview-243573024",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e96d8776-4585-47ea-9c0b-907f520c4b26",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Same assert here.",
        "createdAt" : "2019-05-29T16:10:33Z",
        "updatedAt" : "2019-05-30T15:56:48Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "e7241f2c-276b-44e4-93fa-1c05ba4478e2",
        "parentId" : "e96d8776-4585-47ea-9c0b-907f520c4b26",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done.",
        "createdAt" : "2019-05-30T00:04:40Z",
        "updatedAt" : "2019-05-30T15:56:48Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "a440db188fbd5c9267cb32dc6fcacb4cf4da9cb3",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +212,216 @@        final PointerEvent event = _lastMouseEvent[deviceId] ?? _pendingRemovals[deviceId];\n        assert(event != null);\n        trackedAnnotation.annotation.onExit(PointerExitEvent.fromMouseEvent(event));\n        trackedAnnotation.activeDevices.remove(deviceId);\n      }"
  },
  {
    "id" : "44c2c31a-91ad-405a-aa95-6b7402809fbf",
    "prId" : 41014,
    "prUrl" : "https://github.com/flutter/flutter/pull/41014#pullrequestreview-292111230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "187294b3-e116-4a10-b6d5-26b9a7eb8d74",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "seems sketchy for detachAnnotation to do things synchronously",
        "createdAt" : "2019-09-23T23:39:43Z",
        "updatedAt" : "2019-09-25T18:17:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "91a4c9e0-f458-49cf-8890-130e17e570be",
        "parentId" : "187294b3-e116-4a10-b6d5-26b9a7eb8d74",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(e.g. is this going to fire the notifications during composition?)",
        "createdAt" : "2019-09-23T23:45:14Z",
        "updatedAt" : "2019-09-25T18:17:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e95ab69c-0e11-4673-aec6-d6f8c9a18974",
        "parentId" : "187294b3-e116-4a10-b6d5-26b9a7eb8d74",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Well, it happens just before we deactivate the `Element` (in `RenderMouseRegion.preDeactivate`), and if we did it post frame then it calls `onExit` on something that has already been deactivated, and if that thing calls its `setState` (which is common), it will assert.",
        "createdAt" : "2019-09-24T00:12:54Z",
        "updatedAt" : "2019-09-25T18:17:10Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "91d8fedb9348490cd917368ac0293c3b18dc7704",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +143,147 @@      }\n    }\n    _trackedAnnotations.remove(annotation);\n  }\n"
  },
  {
    "id" : "08b30af7-a660-4222-b1d7-0aab5257b810",
    "prId" : 42031,
    "prUrl" : "https://github.com/flutter/flutter/pull/42031#pullrequestreview-299658945",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da38886a-acc8-488f-a6b2-7a60541648fb",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I know its private, but maybe give this a doc comment.",
        "createdAt" : "2019-10-09T19:58:31Z",
        "updatedAt" : "2019-10-10T21:37:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff940c876903e2916894d19eeaf7552d983329d2",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +74,78 @@// It is used by [MouseTracker] to compute which callbacks should be triggered\n// by each event.\nclass _MouseState {\n  _MouseState({\n    @required PointerEvent mostRecentEvent,"
  },
  {
    "id" : "72c36f80-8e0e-483a-b8a8-0fa8195c746b",
    "prId" : 42031,
    "prUrl" : "https://github.com/flutter/flutter/pull/42031#pullrequestreview-299753816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d78f8db7-9c70-4e11-b458-95b2bdf61b25",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This should probably document that the iterable needs to contain the annotations in visual order?",
        "createdAt" : "2019-10-09T20:52:58Z",
        "updatedAt" : "2019-10-10T21:37:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "396f1dd5-c197-40c7-ad8e-279b638eeff7",
        "parentId" : "d78f8db7-9c70-4e11-b458-95b2bdf61b25",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "I added document at `MouseTracker.annotationFinder`, since the signature itself doesn't convey this idea.",
        "createdAt" : "2019-10-09T23:37:28Z",
        "updatedAt" : "2019-10-10T21:37:30Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff940c876903e2916894d19eeaf7552d983329d2",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +66,70 @@/// Signature for searching for [MouseTrackerAnnotation]s at the given offset.\n///\n/// It is used by the [MouseTracker] to fetch annotations for the mouse\n/// position.\ntypedef MouseDetectorAnnotationFinder = Iterable<MouseTrackerAnnotation> Function(Offset offset);"
  },
  {
    "id" : "8117d430-ee14-4da1-b714-e9fdee5d75cc",
    "prId" : 42031,
    "prUrl" : "https://github.com/flutter/flutter/pull/42031#pullrequestreview-300301078",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a811020-561c-4512-a7ef-d43c18a5a178",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "maybe document that this is in a certain order (to make clear why this is explicitly a LinkedHashSet).",
        "createdAt" : "2019-10-10T19:29:36Z",
        "updatedAt" : "2019-10-10T21:37:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff940c876903e2916894d19eeaf7552d983329d2",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +80,84 @@       _mostRecentEvent = mostRecentEvent;\n\n  // The list of annotations that contains this device during the last frame.\n  //\n  // It uses [LinkedHashSet] to keep the insertion order."
  },
  {
    "id" : "5c10bf42-8455-4a88-bf10-66eff002c183",
    "prId" : 42031,
    "prUrl" : "https://github.com/flutter/flutter/pull/42031#pullrequestreview-300359346",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "603b9944-d190-4209-92d8-a2e87aed60fb",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Why do you need to pass this in separately (seems like it complicates the logic in this method as well)? Could you add a boolean \"disconnected\" to MouseState and flip it to true here instead of removing the mouse state from _mouseStates. And then after _checkDeviceUpdates comes back, you remove it from the list?",
        "createdAt" : "2019-10-10T19:36:58Z",
        "updatedAt" : "2019-10-10T21:37:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "6e7b2907-a7c9-4f06-956c-b4e8891e19b9",
        "parentId" : "603b9944-d190-4209-92d8-a2e87aed60fb",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "I'm concerned that keeping disconnected states in `_mouseStates` will affect `mouseIsConnected`. If the callback called by `_checkDeviceUpdates` checks `mouseIsConnected`, it'll get a `true` even when the last mouse has been disconnected.",
        "createdAt" : "2019-10-10T20:22:45Z",
        "updatedAt" : "2019-10-10T21:37:30Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      },
      {
        "id" : "9c268382-e28f-4532-9a1e-01129b4f5321",
        "parentId" : "603b9944-d190-4209-92d8-a2e87aed60fb",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I see. Makes sense.",
        "createdAt" : "2019-10-10T21:21:06Z",
        "updatedAt" : "2019-10-10T21:37:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff940c876903e2916894d19eeaf7552d983329d2",
    "line" : 229,
    "diffHunk" : "@@ -1,1 +196,200 @@    _checkDeviceUpdates(\n      device: device,\n      disconnectedMouseState: disconnectedMouseState,\n    );\n    if (mouseIsConnected != wasConnected) {"
  },
  {
    "id" : "9fd7e703-9ea4-4c21-b884-4d63faaa2101",
    "prId" : 42031,
    "prUrl" : "https://github.com/flutter/flutter/pull/42031#pullrequestreview-300311243",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a964c75-6efe-4e90-a318-b4da3ceab169",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Why do we need to send a hover event if previousEvent is PointerAddedEvent, but the position hasn't changed?",
        "createdAt" : "2019-10-10T19:38:37Z",
        "updatedAt" : "2019-10-10T21:37:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "98b0483c-91cf-4f17-8866-83a32e3c9b5d",
        "parentId" : "0a964c75-6efe-4e90-a318-b4da3ceab169",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Because some things are listening to add/remove, and some are listening to hover only, so if a mouse gets added, then the hover only folks need to get an event.",
        "createdAt" : "2019-10-10T19:52:05Z",
        "updatedAt" : "2019-10-10T21:37:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff940c876903e2916894d19eeaf7552d983329d2",
    "line" : 271,
    "diffHunk" : "@@ -1,1 +217,221 @@      final PointerEvent previousEvent = mouseState.mostRecentEvent;\n      mouseState.mostRecentEvent = event;\n      if (previousEvent is PointerAddedEvent || previousEvent.position != event.position) {\n        // Only send notifications if we have our first event, or if the\n        // location of the mouse has changed"
  },
  {
    "id" : "e6520ac9-db7e-44c4-9dfb-9800a43b1dbd",
    "prId" : 42031,
    "prUrl" : "https://github.com/flutter/flutter/pull/42031#pullrequestreview-300301078",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d7be506-c849-432a-b980-66a5abe3c42e",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe move this method after _checkDeviceUpdates. It's only called from there and you kinda have to read that one first to understand what's going on.",
        "createdAt" : "2019-10-10T19:45:04Z",
        "updatedAt" : "2019-10-10T21:37:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff940c876903e2916894d19eeaf7552d983329d2",
    "line" : 372,
    "diffHunk" : "@@ -1,1 +290,294 @@  // This function should not change the provided states, and should not access\n  // information that is not provided in parameters (hence being static).\n  static void _dispatchDeviceCallbacks({\n    @required LinkedHashSet<MouseTrackerAnnotation> nextAnnotations,\n    @required _MouseState currentState,"
  },
  {
    "id" : "869238c8-d5f7-412a-af67-e06e5c2eda1b",
    "prId" : 44631,
    "prUrl" : "https://github.com/flutter/flutter/pull/44631#pullrequestreview-318658502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e72bc17-5b37-48ee-913b-aa5fa65d0d21",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Is it still marking all of them dirty?",
        "createdAt" : "2019-11-15T00:17:54Z",
        "updatedAt" : "2019-12-02T18:10:26Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "a9932f3b-a2ba-4254-ae10-0c72cb1fee40",
        "parentId" : "2e72bc17-5b37-48ee-913b-aa5fa65d0d21",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "Yes. After every new frame, all annotations might have been moved around, so it's necessary to check the state of all devices again.",
        "createdAt" : "2019-11-18T21:58:50Z",
        "updatedAt" : "2019-12-02T18:10:26Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      }
    ],
    "commit" : "73b7b75f76f65e55f3d0da5b31c262553b00a3ca",
    "line" : 584,
    "diffHunk" : "@@ -1,1 +489,493 @@\n  bool _hasScheduledPostFrameCheck = false;\n  /// Mark all devices as dirty, and schedule a callback that is executed in the\n  /// upcoming post-frame phase to check their updates.\n  ///"
  },
  {
    "id" : "ef401c1f-4f7d-48e2-9240-1cf7567211ea",
    "prId" : 44631,
    "prUrl" : "https://github.com/flutter/flutter/pull/44631#pullrequestreview-319424025",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1fa3ef7-5e9e-41fa-a5f1-59458e99b8e2",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "tiny nit: in the rest of the docs, we use a \" - \" as the beginning of bulleted lists in markdown.  Probably best to be consistent.",
        "createdAt" : "2019-11-19T09:16:49Z",
        "updatedAt" : "2019-12-02T18:10:26Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "2d19d697-8f31-4116-a798-005a521c8c37",
        "parentId" : "d1fa3ef7-5e9e-41fa-a5f1-59458e99b8e2",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "It's actually the first time that I know we sometimes use \" - \" as bulleted list. Interestingly we actually use \" * \" a lot too, for example [InkWell](https://github.com/flutter/flutter/blob/master/packages/flutter/lib/src/material/ink_well.dart#L111) or [RangeSlider](https://github.com/flutter/flutter/blob/master/packages/flutter/lib/src/material/range_slider.dart#L38), as well as all the \"See also\" sections.",
        "createdAt" : "2019-11-19T18:48:59Z",
        "updatedAt" : "2019-12-02T18:10:26Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      },
      {
        "id" : "006f008a-98be-40fc-96d3-c8a16cd22d90",
        "parentId" : "d1fa3ef7-5e9e-41fa-a5f1-59458e99b8e2",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Actually, I've apparently been doing it wrong all my life: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#leave-breadcrumbs-in-the-comments\r\n\r\nPlease ignore my suggestion above. :-)",
        "createdAt" : "2019-11-19T23:29:18Z",
        "updatedAt" : "2019-12-02T18:10:26Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "73b7b75f76f65e55f3d0da5b31c262553b00a3ca",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +44,48 @@  /// More specifically, the callback is triggered by the following cases:\n  ///\n  ///  * A new annotated region has appeared under a pointer.\n  ///  * An existing annotated region has moved to under a pointer.\n  ///  * A new pointer has been added to somewhere within an annotated region."
  },
  {
    "id" : "d029f90d-9671-4f6d-93dc-823a98ef3213",
    "prId" : 44631,
    "prUrl" : "https://github.com/flutter/flutter/pull/44631#pullrequestreview-318881003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "228b8c35-8689-43a5-90e4-9d27f9a8e435",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "You don't need square brackets here.",
        "createdAt" : "2019-11-19T09:21:53Z",
        "updatedAt" : "2019-12-02T18:10:26Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "73b7b75f76f65e55f3d0da5b31c262553b00a3ca",
    "line" : 217,
    "diffHunk" : "@@ -1,1 +249,253 @@\n  // The collection of annotations that are currently being tracked. It is\n  // operated on by [attachAnnotation] and [detachAnnotation].\n  final Set<MouseTrackerAnnotation> _trackedAnnotations = <MouseTrackerAnnotation>{};\n"
  },
  {
    "id" : "65b1f292-0c1a-4008-a678-750a011ba68f",
    "prId" : 44631,
    "prUrl" : "https://github.com/flutter/flutter/pull/44631#pullrequestreview-319383952",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0295171-960e-427a-8f4f-0c29a9f62ba3",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "No need for backticks here.",
        "createdAt" : "2019-11-19T09:22:53Z",
        "updatedAt" : "2019-12-02T18:10:26Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "c46819a8-9035-4963-b955-75076dbd6287",
        "parentId" : "c0295171-960e-427a-8f4f-0c29a9f62ba3",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "Is it ok to use backticks in docs so that it's clearer that I'm referring to a symbol?",
        "createdAt" : "2019-11-19T18:49:59Z",
        "updatedAt" : "2019-12-02T18:10:26Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      },
      {
        "id" : "869c23bb-e007-43c2-b3e4-002781d71034",
        "parentId" : "c0295171-960e-427a-8f4f-0c29a9f62ba3",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "Actually I've found quite a few existing examples of [using backticks](https://github.com/flutter/flutter/blob/master/packages/flutter/lib/src/widgets/heroes.dart#L329) or [using square brackets](https://github.com/flutter/flutter/blob/master/packages/flutter/lib/src/material/reorderable_list.dart#L183) in normal comments.",
        "createdAt" : "2019-11-19T19:36:48Z",
        "updatedAt" : "2019-12-02T18:10:26Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      },
      {
        "id" : "b6507ca4-e97e-4517-b00f-32da9ee1f244",
        "parentId" : "c0295171-960e-427a-8f4f-0c29a9f62ba3",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Well, just because they're common, doesn't make them right. :-) Since they're not checked for correctness by dartdoc, and sometimes are not searched during IDE refactors, references can become invalid over time, so not having the markup and using `//` serves as a reminder that if that API or comment ever goes into the public docs that it needs to be looked over carefully.\r\n\r\nFor the comments that are documenting a private interface, I'd suggest making them `///` comments: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#use--for-public-quality-private-documentation . Then just write them as if they were public, with markdown and all.",
        "createdAt" : "2019-11-19T20:54:09Z",
        "updatedAt" : "2019-12-02T18:10:26Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "79fec56d-02eb-4f63-b7a2-277209fe4f91",
        "parentId" : "c0295171-960e-427a-8f4f-0c29a9f62ba3",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "I agree with the argument that `//` serves as a reminder when we make it `///`. But with without backticks (or even square brackets), these reference can go stale anyways. I don't see a benefit of _not_ using them just because `//` comments can get outdated. The `//` is sufficient as a reminder for re-checking them when publishing.\r\n\r\nOn the other hand, adding backticks and square brackets make the comment more readable, and even enables Ctrl-clicking to jump to definition.",
        "createdAt" : "2019-11-19T22:00:17Z",
        "updatedAt" : "2019-12-02T18:10:26Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      }
    ],
    "commit" : "73b7b75f76f65e55f3d0da5b31c262553b00a3ca",
    "line" : 357,
    "diffHunk" : "@@ -1,1 +308,312 @@  //\n  // If the device is not connected or there are no annotations attached, empty\n  // is returned without calling `annotationFinder`.\n  LinkedHashSet<MouseTrackerAnnotation> _findAnnotations(_MouseState state) {\n    final Offset globalPosition = state.latestEvent.position;"
  },
  {
    "id" : "d890e4ca-0bad-4c92-971c-f86ea9904062",
    "prId" : 44631,
    "prUrl" : "https://github.com/flutter/flutter/pull/44631#pullrequestreview-318881003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1be9c0d7-cfc2-4bd4-a680-7009ac25010b",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "No need for markdown in these comments.",
        "createdAt" : "2019-11-19T09:23:24Z",
        "updatedAt" : "2019-12-02T18:10:26Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "73b7b75f76f65e55f3d0da5b31c262553b00a3ca",
    "line" : 413,
    "diffHunk" : "@@ -1,1 +340,344 @@\n  bool _duringDeviceUpdate = false;\n  // Update device states with the change of a new event or a new frame, and\n  // trigger `handleUpdateDevice` for each dirty device.\n  //"
  },
  {
    "id" : "eeca5e49-3db1-47d6-b1e0-fb8079b9f715",
    "prId" : 48453,
    "prUrl" : "https://github.com/flutter/flutter/pull/48453#pullrequestreview-346294506",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "636c9447-8efa-4a2c-ba9f-6381e35d37d9",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "(sidenote): Now that we are working on providing local coordinates in the events this should presumably change?",
        "createdAt" : "2020-01-13T18:19:58Z",
        "updatedAt" : "2020-01-28T20:55:01Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "0d922839-3946-4efe-a62f-1c559b14efc5",
        "parentId" : "636c9447-8efa-4a2c-ba9f-6381e35d37d9",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "Since we're delaying the local coordinates it's not gonna be soon. \r\nAdditionally, I'm still unsure if we should dispatch hover when the widget moves, because it might be expensive during animations. ",
        "createdAt" : "2020-01-22T01:11:30Z",
        "updatedAt" : "2020-01-28T20:55:01Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      }
    ],
    "commit" : "4eda4bbd0c89267b46e3584738c10a789ffbf8e1",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +59,63 @@  ///    pressed.\n  ///\n  /// This callback is not triggered when:\n  ///\n  ///  * An annotation that is containing the pointer has moved, and still"
  }
]