[
  {
    "id" : "fa4bad98-67d1-4a2e-a03d-e9dd2328a28d",
    "prId" : 3552,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35f49488-00d7-4fcd-9cfa-a11ea566a40c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "?\n",
        "createdAt" : "2016-04-26T21:07:15Z",
        "updatedAt" : "2016-04-26T21:26:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "b9253c23-9242-4207-87bc-b607684def2b",
        "parentId" : "35f49488-00d7-4fcd-9cfa-a11ea566a40c",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this looks like it was accidental?\n",
        "createdAt" : "2016-04-26T21:09:57Z",
        "updatedAt" : "2016-04-26T21:26:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b39065b541aaed392eb92052b80f8ac01fc632bc",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +58,62 @@/// simultaneous touches to each result in a separate tap.\nabstract class OneSequenceGestureRecognizer extends GestureRecognizer {\n  final Map<int, GestureArenaEntry> _entries = <int, GestureArenaEntry>{};\n  final Set<int> _trackedPointers = new HashSet<int>();\n"
  },
  {
    "id" : "c5da31a5-f025-429d-becc-5503e2bbee04",
    "prId" : 3994,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4d2a7b8-4d14-4d01-b724-56a628858677",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "it's confusing when looking at this enum that there's no state for \"accepted\". The enum description should discuss why this is.\n",
        "createdAt" : "2016-05-17T22:06:29Z",
        "updatedAt" : "2016-05-17T22:13:23Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4e19751d227e2f994efa6a09794af862e1eaf89",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +131,135 @@}\n\n/// The possible states of a [PrimaryPointerGestureRecognizer].\n///\n/// The recognizer advances from [ready] to [possible] when starts tracking a"
  },
  {
    "id" : "f5e69efa-125d-4368-bc79-cbe741b79215",
    "prId" : 3994,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98aee7ff-1618-49fc-99bd-871de00f8838",
        "parentId" : null,
        "authorId" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "body" : "Typo: plural \"recognizers\" should be singular \"recognizer\"\n",
        "createdAt" : "2016-05-17T23:01:47Z",
        "updatedAt" : "2016-05-17T23:01:47Z",
        "lastEditedBy" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4e19751d227e2f994efa6a09794af862e1eaf89",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +69,73 @@  void rejectGesture(int pointer) { }\n\n  /// Called when the number of pointers this recognizers is tracking changes from one to zero.\n  ///\n  /// The given pointer ID is the ID of the last pointer this recognizer was"
  },
  {
    "id" : "fcb7e7a0-e270-4e81-9924-90e86c87fc89",
    "prId" : 7481,
    "prUrl" : "https://github.com/flutter/flutter/pull/7481#pullrequestreview-16654112",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "211c925b-9a4f-46fb-8f70-077b2cc46d2b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Another option here that might be cleaner would be to have a single interface implemented by both GestureArena and GestureArenaTeam, and have all gestures always be assigned an \"owner\", which is used here.\r\n\r\nThat would avoid the GestureRecognizer needing to know about GestureArenaTeam. It seems weird for it to know about teams. It would also remove another use of a global static, and would therefore allow you to run multiple arenas at the same time (which might be useful when you have multiple pipelines or something).",
        "createdAt" : "2017-01-13T21:19:38Z",
        "updatedAt" : "2017-01-13T22:30:53Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fdbc546d0a17a3c156d20b20c8d93eb30783d3f9",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +154,158 @@    return GestureBinding.instance.gestureArena.add(pointer, this);\n  }\n\n  /// Causes events related to the given pointer ID to be routed to this recognizer.\n  ///"
  },
  {
    "id" : "b11b7696-b076-47a7-a573-b274e94c6d8c",
    "prId" : 11419,
    "prUrl" : "https://github.com/flutter/flutter/pull/11419#pullrequestreview-52753145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "541488e5-8868-4296-abdc-740eb94b78e0",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Can an @required argument be optional?",
        "createdAt" : "2017-07-27T18:54:59Z",
        "updatedAt" : "2017-07-27T20:41:12Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "28b3c4c4-87d2-4553-be58-8c8e65e1c62a",
        "parentId" : "541488e5-8868-4296-abdc-740eb94b78e0",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Oops, I didn't mean to leave it required.",
        "createdAt" : "2017-07-27T18:57:28Z",
        "updatedAt" : "2017-07-27T20:41:12Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "409e7168d1c9d7fdaeb0e0745a3264d4cf7d8d77",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +39,43 @@  /// Initializes the gesture recognizer.\n  ///\n  /// The argument is optional and is only used for debug purposes (e.g. in the\n  /// [toString] serialization).\n  GestureRecognizer({ this.debugOwner });"
  },
  {
    "id" : "8d04499e-a515-48e1-a181-4b3d312eea78",
    "prId" : 11419,
    "prUrl" : "https://github.com/flutter/flutter/pull/11419#pullrequestreview-52754237",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70eae6a5-8740-4c9a-bbd7-d18d66149f28",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "You could explain the debugReport parameter here",
        "createdAt" : "2017-07-27T18:56:52Z",
        "updatedAt" : "2017-07-27T20:41:12Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "975db31b-fec3-44b4-9234-cc031aa1803a",
        "parentId" : "70eae6a5-8740-4c9a-bbd7-d18d66149f28",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "done",
        "createdAt" : "2017-07-27T19:01:36Z",
        "updatedAt" : "2017-07-27T20:41:12Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "409e7168d1c9d7fdaeb0e0745a3264d4cf7d8d77",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +79,83 @@  /// exceptions.\n  ///\n  /// The `name` argument is ignored except when reporting exceptions.\n  ///\n  /// The `debugReport` argument is optional and is used when"
  },
  {
    "id" : "57970124-2fbe-473e-9910-d678334ed74b",
    "prId" : 23424,
    "prUrl" : "https://github.com/flutter/flutter/pull/23424#pullrequestreview-175071247",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f0ac836-fab9-4060-b26b-519e06fed390",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This needs mode information. By just reading this I have no idea what this does.\r\n\r\nMaybe also have a \"See also\" section linking to the example you gave for [DragGestureRecognizer. dragStartBehavior].",
        "createdAt" : "2018-11-14T20:58:31Z",
        "updatedAt" : "2019-01-07T19:36:26Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "98f463e9f73d8a7eb59f05588877bc12fec02d40",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +25,29 @@typedef RecognizerCallback<T> = T Function();\n\n/// Configuration of offset passed to [DragStartDetails].\n///\n/// The settings determines when a drag formally starts when the user"
  }
]