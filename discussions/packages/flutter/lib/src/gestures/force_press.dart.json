[
  {
    "id" : "824d8782-58a2-4c68-81b3-8b169676d6db",
    "prId" : 24554,
    "prUrl" : "https://github.com/flutter/flutter/pull/24554#pullrequestreview-177016249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c47a1838-ffc8-4d5a-a973-9a3ec1a5acf3",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "copyright block",
        "createdAt" : "2018-11-20T23:11:40Z",
        "updatedAt" : "2018-12-20T02:36:24Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3dd465a8ef93da36466af10a084e430518a961b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2,6 @@// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport 'dart:ui' show Offset;\n"
  },
  {
    "id" : "e0a51991-9bf2-4a0b-bc46-2955a6f925bf",
    "prId" : 24554,
    "prUrl" : "https://github.com/flutter/flutter/pull/24554#pullrequestreview-177016249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab4c6fe7-6f58-4c98-a367-ed11d02a5909",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Document these for future readers. At a glance, I can't guess what the difference between accepted and started would be. It also seems possible to start responding to a minimum threshold force before the accepting the gesture. We may not have to change or add any enums but it's good to document this.",
        "createdAt" : "2018-11-20T23:20:17Z",
        "updatedAt" : "2018-12-20T02:36:24Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3dd465a8ef93da36466af10a084e430518a961b",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +23,27 @@  // accepted as soon as the gesture state is possible, the gesture will not\n  // yet have started.\n  accepted,\n\n  // A pointer is down and the gesture has started, ie. the pressure of the pointer"
  },
  {
    "id" : "59276dc9-bcb2-4caf-91f0-3c1182662f84",
    "prId" : 24554,
    "prUrl" : "https://github.com/flutter/flutter/pull/24554#pullrequestreview-179520963",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb902f5e-e9d2-483a-8b78-1dc2080e641b",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "If you reached start, you should already have a pressure value no?",
        "createdAt" : "2018-11-20T23:24:30Z",
        "updatedAt" : "2018-12-20T02:36:24Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "79ad06e1-0170-4b89-abe1-3e907148148f",
        "parentId" : "eb902f5e-e9d2-483a-8b78-1dc2080e641b",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "Yes? But the pressure value will be sent in onUpdate. In this way, onStart and the first onUpdate will sent in the same frames. It's the way it's done for monodrag.dart so I thought it would make sense to replicate the behavior on this recognizer. I guess it would still make sense to include the pressure value for the onStart callback even though it will be the same as the one sent for onUpdate?",
        "createdAt" : "2018-11-21T18:39:49Z",
        "updatedAt" : "2018-12-20T02:36:24Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "5938ebf6-ff45-474c-ab7d-2df8f0876bbd",
        "parentId" : "eb902f5e-e9d2-483a-8b78-1dc2080e641b",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Ah I see, didn't realize it was on the same frame. Sounds ok then. ",
        "createdAt" : "2018-11-28T07:27:35Z",
        "updatedAt" : "2018-12-20T02:36:24Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "f18d8021-0bc6-49e0-a0c7-472bf36e9ef0",
        "parentId" : "eb902f5e-e9d2-483a-8b78-1dc2080e641b",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "I decided to just add the pressure into all the calls – so you don't have to have an onUpdate to get the pressure if you really only want the onStart call.",
        "createdAt" : "2018-11-28T21:17:09Z",
        "updatedAt" : "2018-12-20T02:36:24Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3dd465a8ef93da36466af10a084e430518a961b",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +35,39 @@}\n\n/// Details object for callbacks that use [GestureForcePressStartCallback],\n/// [GestureForcePressPeakCallback], [GestureForcePressEndCallback] or\n/// [GestureForcePressUpdateCallback]."
  },
  {
    "id" : "4be9a596-22c5-46a2-8647-7e9f05e66d2c",
    "prId" : 24554,
    "prUrl" : "https://github.com/flutter/flutter/pull/24554#pullrequestreview-177016249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80fe199b-6367-4019-8b60-f8704f827edf",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Describe this recognizer's interactions with the single tap and the long tap recognizers.\r\n\r\nDescribe the platforms that supports this currently and the pressure range.",
        "createdAt" : "2018-11-20T23:33:11Z",
        "updatedAt" : "2018-12-20T02:36:24Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3dd465a8ef93da36466af10a084e430518a961b",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +86,90 @@\n/// Recognizes a force press on devices that have force sensors.\n///\n/// Only the force from a single pointer is used to invoke events. A tap\n/// recognizer will win against this recognizer on pointer up as long as the"
  },
  {
    "id" : "28c89234-859d-4264-91c5-7bd387c0e16e",
    "prId" : 24554,
    "prUrl" : "https://github.com/flutter/flutter/pull/24554#pullrequestreview-184886736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa38cf90-0ecc-4d22-b3de-ddff2913c588",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Both UITouch and our PointerEvents scale 1.0 to mean an average touch. We shouldn't create a different scale system here.",
        "createdAt" : "2018-11-20T23:35:08Z",
        "updatedAt" : "2018-12-20T02:36:24Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "120c78c8-8f9d-41bd-bb21-dde552eba576",
        "parentId" : "aa38cf90-0ecc-4d22-b3de-ddff2913c588",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "So, I don't know if this is the wrong approach, but the events that come in off the device actually have pressures in the range of [0, 6.66], however, I interpolate the recorded values into the range [0,1], so that functionality will work the same across all devices even in this range is different. Maybe it would make more sense to change the default pointer pressure max on these events to 6.66?",
        "createdAt" : "2018-11-21T18:57:31Z",
        "updatedAt" : "2018-12-20T02:36:24Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "0191207b-3bf9-4247-bad9-1499ee25d556",
        "parentId" : "aa38cf90-0ecc-4d22-b3de-ddff2913c588",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "ya, we're in a bit of a pickle here. Unfortunately neither solution will be very convenient. \r\n\r\nLinearly interpolating is pretty convenient today but the apple API makes no contractual promises with the range or the curve of the values. Neither does Android and things are even more likely to be the wild west there. Trying to shield our users from the rawness of it will likely reach a limit sooner or later. \r\n\r\nJust referring to some arbitrary absolute value would be crappy too since the user has to go capture the device's min/max range first before constructing this recognizer.\r\n\r\nI think we have 2 options: \r\n1- Make getting the device's capability super statically easy (like https://developer.android.com/reference/android/view/InputDevice.MotionRange on Android).\r\n2- Composability is likely our friend. Let there be 2 customizable predicate function arguments where the user can decide whether start and peak are reached given the device's min and max pressure. That function itself can actually have a const default function that maps to a reasonable value but it's overridable. \r\n\r\n@Hixie for opinions and prior art too.",
        "createdAt" : "2018-11-28T08:07:52Z",
        "updatedAt" : "2018-12-20T02:36:24Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "ed7d5f4f-7929-414d-9eed-4d2333173af9",
        "parentId" : "aa38cf90-0ecc-4d22-b3de-ddff2913c588",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "We definitely need to address this before merging. \r\n\r\nTo @Hixie's comment. We don't really need to worry about subjectively interpreting the 0-1 range. The Android and iOS APIs already contractually assign meanings to those bounds. We can just pass them directly. \r\n\r\nThere are no higher bound API definitions. I would prefer letting start and peak be predicates in those cases. The user may want to curve differently if the device can go to 3 vs if it can go to 10. We don't have that future information and shouldn't lock our users to our present interpretation.",
        "createdAt" : "2018-12-13T22:13:24Z",
        "updatedAt" : "2018-12-20T02:36:25Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3dd465a8ef93da36466af10a084e430518a961b",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +109,113 @@  ///\n  /// The [startPressure] defaults to 0.4, and [peakPressure] defaults to 0.85\n  /// where a value of 0.0 is no pressure and a value of 1.0 is maximum pressure.\n  ///\n  /// [startPressure], [peakPressure] and [interpolation] must not be null."
  },
  {
    "id" : "2d85ebaa-6fc5-4e55-a1cf-875ee4528125",
    "prId" : 24554,
    "prUrl" : "https://github.com/flutter/flutter/pull/24554#pullrequestreview-178944329",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c49f71f7-7ada-4464-bc2e-67aefb7aa3a5",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "similarly here",
        "createdAt" : "2018-11-27T18:37:27Z",
        "updatedAt" : "2018-12-20T02:36:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3dd465a8ef93da36466af10a084e430518a961b",
    "line" : 281,
    "diffHunk" : "@@ -1,1 +279,283 @@  void didStopTrackingLastPointer(int pointer) {\n    final bool wasAccepted = _state == _ForceState.started || _state == _ForceState.peaked;\n    if (_state == _ForceState.possible) {\n      resolve(GestureDisposition.rejected);\n      return;"
  },
  {
    "id" : "96596e59-9019-4f7c-ba05-909d9345cacf",
    "prId" : 24554,
    "prUrl" : "https://github.com/flutter/flutter/pull/24554#pullrequestreview-179165633",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ce9d0ef-076e-46bc-995f-642de83c8a0f",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Suspicious that these aren't final and aren't in the constructor",
        "createdAt" : "2018-11-28T08:12:13Z",
        "updatedAt" : "2018-12-20T02:36:24Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "17af929e-f4d4-4237-8aa9-31bdc2126b24",
        "parentId" : "0ce9d0ef-076e-46bc-995f-642de83c8a0f",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Seems like the other recognizers do this too. Never mind. ",
        "createdAt" : "2018-11-28T08:16:53Z",
        "updatedAt" : "2018-12-20T02:36:24Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3dd465a8ef93da36466af10a084e430518a961b",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +133,137 @@  /// The position of the pointer is provided in the callback's `details`\n  /// argument, which is a [ForcePressDetails] object.\n  GestureForcePressStartCallback onStart;\n\n  /// A pointer is in contact with the screen and is either moving on the plane"
  },
  {
    "id" : "598ef092-d1a3-4baf-83af-ce03f64f59b7",
    "prId" : 24554,
    "prUrl" : "https://github.com/flutter/flutter/pull/24554#pullrequestreview-179571350",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df353733-c75c-411f-b602-f2972b081718",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Not sure what this means. If line 181 ran, wouldn't this always always run? Maybe I'm missing something. ",
        "createdAt" : "2018-11-28T08:14:06Z",
        "updatedAt" : "2018-12-20T02:36:24Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "99a9dc7f-07e7-42ba-a3ac-cc2d78dd446f",
        "parentId" : "df353733-c75c-411f-b602-f2972b081718",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "It wouldn't because I set the state to started before line 181 runs. I'm navigating the case where the gesture has been accepted, but the pressure isn't greater than the start pressure. That's the scenario in which this line will run.",
        "createdAt" : "2018-11-28T23:43:07Z",
        "updatedAt" : "2018-12-20T02:36:24Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3dd465a8ef93da36466af10a084e430518a961b",
    "line" : 232,
    "diffHunk" : "@@ -1,1 +230,234 @@      }\n      // In case this is the only gesture detector we still don't want to start\n      // the gesture until the pressure is greater than the startPressure.\n      if (pressure > startPressure && _state == _ForceState.accepted) {\n        _state = _ForceState.started;"
  },
  {
    "id" : "973a2570-07ae-4404-95c3-6634d806ad74",
    "prId" : 24554,
    "prUrl" : "https://github.com/flutter/flutter/pull/24554#pullrequestreview-184939142",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2016068-dae1-4054-9e68-5a34fdfb56dd",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "It's fine to do it in a different PR but I was saying above, there will be cases where users will use the pressure double value before start is triggered. See on the home screen, when you barely force press an icon, it'll visually respond before you trigger the start. ",
        "createdAt" : "2018-12-13T22:05:28Z",
        "updatedAt" : "2018-12-20T02:36:25Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "316fc1c2-5b01-4e9b-bd1d-d211ecc8f635",
        "parentId" : "d2016068-dae1-4054-9e68-5a34fdfb56dd",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "I thought start was supposed to be the pressure at which it begins to visually respond?",
        "createdAt" : "2018-12-14T01:24:11Z",
        "updatedAt" : "2018-12-20T02:36:25Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3dd465a8ef93da36466af10a084e430518a961b",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +62,66 @@  final double pressure;\n}\n\n/// Signature used by a [ForcePressGestureRecognizer] for when a pointer has\n/// pressed with at least [ForcePressGestureRecognizer.startPressure]."
  },
  {
    "id" : "c272327d-b586-438f-9350-f30d8e01e31e",
    "prId" : 24554,
    "prUrl" : "https://github.com/flutter/flutter/pull/24554#pullrequestreview-184886736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c7d8eb5-a8e1-48b7-b170-fbb357776905",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "if you have brackets for if, have brackets for else too",
        "createdAt" : "2018-12-13T22:14:39Z",
        "updatedAt" : "2018-12-20T02:36:25Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3dd465a8ef93da36466af10a084e430518a961b",
    "line" : 228,
    "diffHunk" : "@@ -1,1 +226,230 @@          resolve(GestureDisposition.accepted);\n        } else if (event.delta.distanceSquared > kTouchSlop) {\n          resolve(GestureDisposition.rejected);\n        }\n      }"
  },
  {
    "id" : "44c6330a-3b52-4b96-bc17-d9881ae11e89",
    "prId" : 24554,
    "prUrl" : "https://github.com/flutter/flutter/pull/24554#pullrequestreview-185848235",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee389b64-af7d-4ca8-a16b-ef4b1ff2647f",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Reference the interpolation here too",
        "createdAt" : "2018-12-17T23:31:42Z",
        "updatedAt" : "2018-12-20T02:36:25Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3dd465a8ef93da36466af10a084e430518a961b",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +99,103 @@/// a small handful of Android devices have this functionality as well.\n///\n/// Reported pressure will always be in the range [0.0, 1.0], where 1.0 is\n/// maximum pressure and 0.0 is minimum pressure. If using a non-linear\n/// interpolation equation, the pressure reported will correspond with the"
  },
  {
    "id" : "ef4db4dc-1083-41c8-8c85-780a1aa8f843",
    "prId" : 24554,
    "prUrl" : "https://github.com/flutter/flutter/pull/24554#pullrequestreview-192987474",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1478c028-9f00-401c-be7e-90a6e99c612e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Generally speaking I would recommend using asserts that only use `||` and `&&`, and ranges should be checked low-then-high for clarity, so this would be better written as:\r\n\r\n```dart\r\nassert(pressure.isNaN || (pressure >= 0.0 && pressure <= 1.0));\r\n```\r\n\r\ncc @xster who reviewed",
        "createdAt" : "2019-01-16T06:23:06Z",
        "updatedAt" : "2019-01-16T06:23:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3dd465a8ef93da36466af10a084e430518a961b",
    "line" : 219,
    "diffHunk" : "@@ -1,1 +217,221 @@    if (event is PointerMoveEvent || event is PointerDownEvent) {\n      final double pressure = interpolation(event.pressureMin, event.pressureMax, event.pressure);\n      assert(pressure.isNaN ? true : (pressure <= 1.0 && pressure >= 0.0));\n      _lastPosition = event.position;\n      _lastPressure = pressure;"
  },
  {
    "id" : "bb7451ce-dda0-4a80-9dc7-62969e071282",
    "prId" : 24554,
    "prUrl" : "https://github.com/flutter/flutter/pull/24554#pullrequestreview-192987613",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23a740a9-3956-450e-aa2f-8b882c6500d6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "cc @xster: when reviewing, please look out for trailing blank lines on comments such as here",
        "createdAt" : "2019-01-16T06:24:02Z",
        "updatedAt" : "2019-01-16T06:24:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3dd465a8ef93da36466af10a084e430518a961b",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +104,108 @@/// custom curve. (ie. if the interpolation maps t(0.5) -> 0.1, a value of 0.1\n/// will be reported at a device pressure value of 0.5).\n///\nclass ForcePressGestureRecognizer extends OneSequenceGestureRecognizer {\n  /// Creates a force press gesture recognizer."
  },
  {
    "id" : "427ec87a-2b72-4a40-8496-cbb996e5f489",
    "prId" : 24554,
    "prUrl" : "https://github.com/flutter/flutter/pull/24554#pullrequestreview-192987897",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4d7d4a8-b708-424f-ae63-8a443d0a6f91",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "@xster while i'm at it: when reviewing, please look out for sentences that don't start with a capital letter. This would be better written as: `The arguments [...], [...], and [...] must not be null.`",
        "createdAt" : "2019-01-16T06:25:41Z",
        "updatedAt" : "2019-01-16T06:25:41Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3dd465a8ef93da36466af10a084e430518a961b",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +111,115 @@  /// where a value of 0.0 is no pressure and a value of 1.0 is maximum pressure.\n  ///\n  /// [startPressure], [peakPressure] and [interpolation] must not be null.\n  /// [peakPressure] must be greater than [startPressure]. [interpolation] must\n  /// always return a value in the range [0.0, 1.0] where"
  }
]