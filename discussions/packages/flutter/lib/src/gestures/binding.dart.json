[
  {
    "id" : "084cd98a-8590-4363-8fad-d1c7b886625a",
    "prId" : 902,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d75e382-e5c9-4992-8795-e4b5c26c17f2",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Pointerer is kind of a goofy name.  PointerBinding?\n",
        "createdAt" : "2015-12-14T05:50:47Z",
        "updatedAt" : "2015-12-14T07:35:35Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "6b67b487-6401-47bf-a4d7-1fd5819fb893",
        "parentId" : "1d75e382-e5c9-4992-8795-e4b5c26c17f2",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Yeah, Pointerer was my placeholder name. I was thinking maybe Gesturer?\n\nI'm trying to keep a consistent naming scheme between the various binding mixins. There's one in the scheduler library, one in the gestures library, one in the rendering library, and maybe one in the widgets library, though at the moment I'm not using a mixin for the last one, that's a concrete class. (There's also a concrete class at the rendering level though that one just brings in the mixins without additional logic involved.)\n",
        "createdAt" : "2015-12-14T06:06:05Z",
        "updatedAt" : "2015-12-14T07:35:35Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ade93651ac31fc7826474a149b804366aee475ca",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +17,21 @@import 'pointer_router.dart';\n\nabstract class Pointerer extends BindingBase implements HitTestTarget, HitTestable {\n\n  void initInstances() {"
  }
]