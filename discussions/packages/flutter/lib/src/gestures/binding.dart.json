[
  {
    "id" : "084cd98a-8590-4363-8fad-d1c7b886625a",
    "prId" : 902,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d75e382-e5c9-4992-8795-e4b5c26c17f2",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Pointerer is kind of a goofy name.  PointerBinding?\n",
        "createdAt" : "2015-12-14T05:50:47Z",
        "updatedAt" : "2015-12-14T07:35:35Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "6b67b487-6401-47bf-a4d7-1fd5819fb893",
        "parentId" : "1d75e382-e5c9-4992-8795-e4b5c26c17f2",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Yeah, Pointerer was my placeholder name. I was thinking maybe Gesturer?\n\nI'm trying to keep a consistent naming scheme between the various binding mixins. There's one in the scheduler library, one in the gestures library, one in the rendering library, and maybe one in the widgets library, though at the moment I'm not using a mixin for the last one, that's a concrete class. (There's also a concrete class at the rendering level though that one just brings in the mixins without additional logic involved.)\n",
        "createdAt" : "2015-12-14T06:06:05Z",
        "updatedAt" : "2015-12-14T07:35:35Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ade93651ac31fc7826474a149b804366aee475ca",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +17,21 @@import 'pointer_router.dart';\n\nabstract class Pointerer extends BindingBase implements HitTestTarget, HitTestable {\n\n  void initInstances() {"
  },
  {
    "id" : "7e143cec-c204-488e-b396-5b1f39200109",
    "prId" : 24830,
    "prUrl" : "https://github.com/flutter/flutter/pull/24830#pullrequestreview-193896282",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b40192d-0973-43d3-a3fa-ead01c12a469",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "do we expect this to be useful long term?",
        "createdAt" : "2019-01-17T23:40:07Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "30c2dfb4-839a-40b0-ba6e-7ea9af619133",
        "parentId" : "7b40192d-0973-43d3-a3fa-ead01c12a469",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes, I do think that people building interfaces will occasionally want to see the hover events as they occur.",
        "createdAt" : "2019-01-17T23:48:10Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f684a923245b2b3f1be91086d491a0128fd641fd",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +142,146 @@        debugPrint('$event');\n      return true;\n    }());\n    if (hitTestResult != null ||\n        event is PointerHoverEvent ||"
  },
  {
    "id" : "d96402d0-7621-4c50-a487-0ddb5f86fd8b",
    "prId" : 24830,
    "prUrl" : "https://github.com/flutter/flutter/pull/24830#pullrequestreview-195193406",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8af8792f-7a2b-4ede-a636-13de85898dbe",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this seems like a major change? don't we want to be dispatching other events anymore?",
        "createdAt" : "2019-01-17T23:41:30Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "7ff83c4b-e294-46fb-91cc-5e995ab57994",
        "parentId" : "8af8792f-7a2b-4ede-a636-13de85898dbe",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "It's not a major change: all events that have a hit test result will still be processed as before. This is saying \"dispatch the event if there is hit test information [as before], or if there is a PointerHoverEvent, PointerAddedEvent or PointerRemovedEvent that doesn't have hit test information\".  I have broadened the conditional this way because unlike other events, these three events are meant to be dispatched even when they don't have hit test information. They weren't being handled before.",
        "createdAt" : "2019-01-17T23:52:05Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "a26aff55-ecc8-47f0-8ea9-51b503311b94",
        "parentId" : "8af8792f-7a2b-4ede-a636-13de85898dbe",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Oh, I see. `!= null` covers the previously covered cases. Got it.",
        "createdAt" : "2019-01-22T19:35:57Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f684a923245b2b3f1be91086d491a0128fd641fd",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +148,152 @@        event is PointerRemovedEvent) {\n      dispatchEvent(event, hitTestResult);\n    }\n  }\n"
  },
  {
    "id" : "a9626983-a080-4e24-a360-26bd8e09acc0",
    "prId" : 24830,
    "prUrl" : "https://github.com/flutter/flutter/pull/24830#pullrequestreview-195690145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9fcd666d-9660-4318-b9f6-3eb67cf64670",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "The documentation above this line probably needs updating. It claims that results must not be null, but the first line of the method implements logic for when it is null.",
        "createdAt" : "2019-01-23T00:16:36Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "515f534a-5d9f-4abb-876f-dba47568979e",
        "parentId" : "9fcd666d-9660-4318-b9f6-3eb67cf64670",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done.",
        "createdAt" : "2019-01-23T19:01:00Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f684a923245b2b3f1be91086d491a0128fd641fd",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +163,167 @@  /// might throw. The [hitTestResult] argument may only be null for\n  /// [PointerHoverEvent], [PointerAddedEvent], or [PointerRemovedEvent] events.\n  @override // from HitTestDispatcher\n  void dispatchEvent(PointerEvent event, HitTestResult hitTestResult) {\n    assert(!locked);"
  },
  {
    "id" : "d56d9f3f-78be-48bb-a802-7394654376e3",
    "prId" : 24830,
    "prUrl" : "https://github.com/flutter/flutter/pull/24830#pullrequestreview-197310249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "560b27d5-adf5-4982-b018-8a9f77767dd1",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Should this comment (and the doc comment above) be expressed as an assert?",
        "createdAt" : "2019-01-25T20:37:14Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "73d930cd-6931-4d72-ac08-0482196072bd",
        "parentId" : "560b27d5-adf5-4982-b018-8a9f77767dd1",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Sure.",
        "createdAt" : "2019-01-28T23:24:50Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f684a923245b2b3f1be91086d491a0128fd641fd",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +166,170 @@  void dispatchEvent(PointerEvent event, HitTestResult hitTestResult) {\n    assert(!locked);\n    // No hit test information implies that this is a hover or pointer\n    // add/remove event.\n    if (hitTestResult == null) {"
  }
]