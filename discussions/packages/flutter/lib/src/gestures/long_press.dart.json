[
  {
    "id" : "9f2ffbc4-75cc-43ac-83a6-cd98518143d1",
    "prId" : 26001,
    "prUrl" : "https://github.com/flutter/flutter/pull/26001#pullrequestreview-204476233",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38a90424-4b64-40f3-a5a6-f78ce9373fb2",
        "parentId" : null,
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "Is there a need for a sourceTimeStamp in this gesture detector?",
        "createdAt" : "2019-01-04T18:13:28Z",
        "updatedAt" : "2019-02-07T19:15:01Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "bbcbd1bf-793c-4219-b78e-6c754ddca286",
        "parentId" : "38a90424-4b64-40f3-a5a6-f78ce9373fb2",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Not right now but I feel like our gesture classes are a bit relatively under-engineered for a low level API. I'm keeping it mostly consistent with the drag details which this is comparable to.",
        "createdAt" : "2019-01-08T01:32:10Z",
        "updatedAt" : "2019-02-07T19:15:01Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "09a0035b-0a32-4f7b-aec4-773eab2d028a",
        "parentId" : "38a90424-4b64-40f3-a5a6-f78ce9373fb2",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "being underengineered is intentional. :-)\r\nhttps://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#lazy-programming",
        "createdAt" : "2019-02-15T23:13:04Z",
        "updatedAt" : "2019-02-15T23:13:04Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5725a2658d8ec7bee93bbac5b0818122b39d02a3",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +52,56 @@  ///\n  ///  * [PointerEvent.synthesized] for details on synthesized pointer events.\n  final Duration sourceTimeStamp;\n\n  /// The global position at which the pointer contacted the screen."
  },
  {
    "id" : "f6bc9c0f-33a0-4b1b-bc7e-727905412b18",
    "prId" : 26001,
    "prUrl" : "https://github.com/flutter/flutter/pull/26001#pullrequestreview-190063174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36ae96d4-4a7e-43d8-8b61-94929aa27bd9",
        "parentId" : null,
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "Same here.",
        "createdAt" : "2019-01-04T18:13:57Z",
        "updatedAt" : "2019-02-07T19:15:01Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "b0a8f17a-7f16-4598-add2-5ac47637f624",
        "parentId" : "36ae96d4-4a7e-43d8-8b61-94929aa27bd9",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Same",
        "createdAt" : "2019-01-08T01:32:14Z",
        "updatedAt" : "2019-02-07T19:15:01Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "5725a2658d8ec7bee93bbac5b0818122b39d02a3",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +84,88 @@  ///\n  ///  * [PointerEvent.synthesized] for details on synthesized pointer events.\n  final Duration sourceTimeStamp;\n\n  /// The global position of the pointer when it triggered this update."
  },
  {
    "id" : "2aeae769-4629-42ca-9f6b-73d8e9e4a218",
    "prId" : 26001,
    "prUrl" : "https://github.com/flutter/flutter/pull/26001#pullrequestreview-190066009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65a72c4c-d3ec-46ab-8427-8668f97d3c25",
        "parentId" : null,
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "```the point where the pointer initially contacted the screen to the point where the pointer is located when this callback is triggered.```",
        "createdAt" : "2019-01-04T18:23:50Z",
        "updatedAt" : "2019-02-07T19:15:01Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "f363195d-eb95-4b9c-8332-305008d874fe",
        "parentId" : "65a72c4c-d3ec-46ab-8427-8668f97d3c25",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "sure",
        "createdAt" : "2019-01-08T01:49:06Z",
        "updatedAt" : "2019-02-07T19:15:01Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "5725a2658d8ec7bee93bbac5b0818122b39d02a3",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +92,96 @@  /// the screen to the point where the pointer is currently located when\n  /// this callback is triggered.\n  final Offset offsetFromOrigin;\n}\n"
  },
  {
    "id" : "d385d622-50cb-4d7c-a8dc-890f4f68adba",
    "prId" : 26001,
    "prUrl" : "https://github.com/flutter/flutter/pull/26001#pullrequestreview-190066025",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "055fcb52-832a-48d9-bd5f-833627761efe",
        "parentId" : null,
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "Lifted from the screen?",
        "createdAt" : "2019-01-04T18:24:39Z",
        "updatedAt" : "2019-02-07T19:15:01Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "da33faf2-80b4-41de-9631-71b39be54b7d",
        "parentId" : "055fcb52-832a-48d9-bd5f-833627761efe",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "done",
        "createdAt" : "2019-01-08T01:49:11Z",
        "updatedAt" : "2019-02-07T19:15:01Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "5725a2658d8ec7bee93bbac5b0818122b39d02a3",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +120,124 @@\n  /// The global position at which the pointer lifted from the screen.\n  final Offset globalPosition;\n}\n"
  },
  {
    "id" : "52a7ffc2-b98c-4b99-9fa7-99e0ac8fb42d",
    "prId" : 26001,
    "prUrl" : "https://github.com/flutter/flutter/pull/26001#pullrequestreview-190066032",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff953b49-d6fa-4efe-9957-cce46a59aaea",
        "parentId" : null,
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "```pointer when it triggered this update```.",
        "createdAt" : "2019-01-04T18:31:19Z",
        "updatedAt" : "2019-02-07T19:15:01Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "6a9a1a0a-2cd5-4847-bb9a-a6c1d73696f4",
        "parentId" : "ff953b49-d6fa-4efe-9957-cce46a59aaea",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "done",
        "createdAt" : "2019-01-08T01:49:14Z",
        "updatedAt" : "2019-02-07T19:15:01Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "5725a2658d8ec7bee93bbac5b0818122b39d02a3",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +87,91 @@\n  /// The global position of the pointer when it triggered this update.\n  final Offset globalPosition;\n\n  /// A delta offset from the point where the long press drag initially contacted"
  },
  {
    "id" : "feb65994-44ec-469c-9ac8-3f6bb560c284",
    "prId" : 26001,
    "prUrl" : "https://github.com/flutter/flutter/pull/26001#pullrequestreview-190065553",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "938df4c7-95b2-456e-8de8-f6711c92e965",
        "parentId" : null,
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "If the touch was canceled, do you need to call ```onLongPressUp``` here?",
        "createdAt" : "2019-01-04T18:56:46Z",
        "updatedAt" : "2019-02-07T19:15:01Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "06767a89-702b-416e-8a3f-03cf0f5801bd",
        "parentId" : "938df4c7-95b2-456e-8de8-f6711c92e965",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I don't think we're still calling 'onLongPressUp' still. Which line were you referring to?",
        "createdAt" : "2019-01-08T01:46:17Z",
        "updatedAt" : "2019-02-07T19:15:01Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "5725a2658d8ec7bee93bbac5b0818122b39d02a3",
    "line" : 227,
    "diffHunk" : "@@ -1,1 +262,266 @@\n  @override\n  void didStopTrackingLastPointer(int pointer) {\n    _longPressAccepted = false;\n    _longPressOrigin = null;"
  },
  {
    "id" : "52573f71-b911-4747-87d7-65ce1d7b7678",
    "prId" : 26001,
    "prUrl" : "https://github.com/flutter/flutter/pull/26001#pullrequestreview-190065822",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcbb4f60-c9cf-48b6-b4a2-8563dad6123f",
        "parentId" : null,
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "Would it make sense to also include the touch delta in this class?",
        "createdAt" : "2019-01-04T18:58:40Z",
        "updatedAt" : "2019-02-07T19:15:01Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "f66213ad-ebb0-4e6a-9ffc-9eb5ba209eb8",
        "parentId" : "bcbb4f60-c9cf-48b6-b4a2-8563dad6123f",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Did you mean something similar to DragUpdateDetails? Chatted with Hans a bit and I feel like providing absolute values is better than providing relative to relative values. It's a lot easier to go from one way to the other than the reverse.",
        "createdAt" : "2019-01-08T01:47:53Z",
        "updatedAt" : "2019-02-07T19:15:01Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "5725a2658d8ec7bee93bbac5b0818122b39d02a3",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +65,69 @@///  * [GestureLongPressDragUpDetails], the details for [GestureLongPressDragUpCallback]\n///  * [GestureLongPressDragStartDetails], the details for [GestureLongPressDragStartCallback].\nclass GestureLongPressDragUpdateDetails {\n  /// Creates the details for a [GestureLongPressDragUpdateCallback].\n  ///"
  },
  {
    "id" : "3a0aa821-4ed0-44e3-8588-d5fb1495e801",
    "prId" : 26001,
    "prUrl" : "https://github.com/flutter/flutter/pull/26001#pullrequestreview-192895161",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8beb994d-cead-4401-b1d4-2f5268e0a2ed",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Recognizes a long press followed by a drag, followed by an up event.",
        "createdAt" : "2019-01-15T18:06:10Z",
        "updatedAt" : "2019-02-07T19:15:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "c285c8f7-0bb1-432a-8dd2-1a02eac90862",
        "parentId" : "8beb994d-cead-4401-b1d4-2f5268e0a2ed",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "It doesn't have to be dragged around",
        "createdAt" : "2019-01-15T22:26:06Z",
        "updatedAt" : "2019-02-07T19:15:01Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "5725a2658d8ec7bee93bbac5b0818122b39d02a3",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +169,173 @@}\n\n/// Recognizes long presses that can be subsequently dragged around.\n///\n/// Similar to a [LongPressGestureRecognizer] where a press has to be held down"
  },
  {
    "id" : "28e6e6eb-c606-4dac-a714-bacdfc80d278",
    "prId" : 26001,
    "prUrl" : "https://github.com/flutter/flutter/pull/26001#pullrequestreview-204489354",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39f9e739-9f3e-4625-8e00-45a16fda4907",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "shouldn't this be a DragGestureRecognizer subclass?",
        "createdAt" : "2019-02-07T05:01:01Z",
        "updatedAt" : "2019-02-07T19:15:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "fe844932-4b8d-4612-9839-6d367e121d49",
        "parentId" : "39f9e739-9f3e-4625-8e00-45a16fda4907",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "The DragGestureRecognizer is unconcerned with the time dimension which is important here. Perhaps both PrimaryPointerGestureRecognizer and/or DragGestureRecognizer can be refactored to be mixins, though that would break more APIs",
        "createdAt" : "2019-02-07T19:19:27Z",
        "updatedAt" : "2019-02-07T19:19:37Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "48feb285-bf6d-430e-a047-52e668713bf5",
        "parentId" : "39f9e739-9f3e-4625-8e00-45a16fda4907",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Presumably adding the time dimension would be what you would do in the DragGestureRecognizer subclass.",
        "createdAt" : "2019-02-15T23:10:59Z",
        "updatedAt" : "2019-02-15T23:11:00Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "d5098275-00c8-41cc-bc05-e2a92a2b749e",
        "parentId" : "39f9e739-9f3e-4625-8e00-45a16fda4907",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "We could add a time component to DragGestureRecognizer or a move component to PrimaryPointerGestureRecognizer. I don't feel strongly either way. We can modify DragGestureRecognizer and have this subclass it instead if you prefer. \r\n\r\nIdeally, the time and position components would both come in via mixins. We can also just not change either subclasses and do it here directly but we'd have to repeat that work for some of the other gestures that are coming up such as double tap drag.",
        "createdAt" : "2019-02-16T00:25:17Z",
        "updatedAt" : "2019-02-16T00:25:18Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "5725a2658d8ec7bee93bbac5b0818122b39d02a3",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +181,185 @@///  * [LongPressGestureRecognizer], which cancels its gesture if a drag event\n///    occurs at any point during the long-press.\nclass LongPressDragGestureRecognizer extends PrimaryPointerGestureRecognizer {\n  /// Creates a long-press-drag gesture recognizer.\n  ///"
  },
  {
    "id" : "42293293-a103-43d8-b07c-1f0bfc24ac21",
    "prId" : 28242,
    "prUrl" : "https://github.com/flutter/flutter/pull/28242#pullrequestreview-206526466",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "159ac66a-a541-45f0-a8c0-6a9523f7032e",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: first paragraph should be one-sentence summary. ",
        "createdAt" : "2019-02-21T20:33:28Z",
        "updatedAt" : "2019-02-22T21:43:07Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "70433d1964a629d61c0c33acbe6e87361594c3ac",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +24,28 @@/// Called when a pointer has remained in contact with the screen at the\n/// same location for a long period of time. Also reports the long press down\n/// position.\ntypedef GestureLongPressStartCallback = void Function(LongPressStartDetails details);\n"
  },
  {
    "id" : "606b9195-7e12-46ab-9c15-6cb6802c4182",
    "prId" : 28242,
    "prUrl" : "https://github.com/flutter/flutter/pull/28242#pullrequestreview-206526466",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "730e6cf9-268a-44d7-843d-04cfba61b912",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: one sentence first paragraph",
        "createdAt" : "2019-02-21T20:35:41Z",
        "updatedAt" : "2019-02-22T21:43:07Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "70433d1964a629d61c0c33acbe6e87361594c3ac",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +37,41 @@///\n/// Called when a pointer stops contacting the screen after a long press\n/// gesture was detected. Also reports the position where the pointer stopped\n/// contacting the screen.\ntypedef GestureLongPressEndCallback = void Function(LongPressEndDetails details);"
  },
  {
    "id" : "ce5a59cf-29d8-41c7-a6a6-fda12dfd76b6",
    "prId" : 28242,
    "prUrl" : "https://github.com/flutter/flutter/pull/28242#pullrequestreview-206526466",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99ff6428-86c9-46a8-b4bf-38e3c8d29a9d",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Link to onLongPressStart from here mentioning that it gets more details?",
        "createdAt" : "2019-02-21T20:42:38Z",
        "updatedAt" : "2019-02-22T21:43:07Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "70433d1964a629d61c0c33acbe6e87361594c3ac",
    "line" : 136,
    "diffHunk" : "@@ -1,1 +135,139 @@  Offset _longPressOrigin;\n\n  /// Called when a long press gesture has been recognized.\n  ///\n  /// See also:"
  },
  {
    "id" : "aad734b0-2b6c-4499-8eb5-3b55eb11ebb0",
    "prId" : 28242,
    "prUrl" : "https://github.com/flutter/flutter/pull/28242#pullrequestreview-206526466",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "641446d3-836c-46e2-b6e2-90a30ec0aafa",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Can we call this out on the relevant `onLongPress*` callback docs again to remind developers that they may not see those callbacks if the pointer moved too much?",
        "createdAt" : "2019-02-21T20:49:05Z",
        "updatedAt" : "2019-02-22T21:43:07Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "70433d1964a629d61c0c33acbe6e87361594c3ac",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +116,120 @@  /// object.\n  ///\n  /// The [postAcceptSlopTolerance] argument can be used to specify a maximum\n  /// allowed distance for the gesture to deviate from the starting point once\n  /// the long press has triggered. If the gesture deviates past that point,"
  },
  {
    "id" : "f2990092-90af-46eb-bd42-1032b860e074",
    "prId" : 35829,
    "prUrl" : "https://github.com/flutter/flutter/pull/35829#pullrequestreview-267424979",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f7ff49d-479b-44cf-81cb-2f711226e1e2",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Why do ignore synthesized events? Might be worth a comment",
        "createdAt" : "2019-07-22T18:39:19Z",
        "updatedAt" : "2019-07-31T15:34:20Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "6db00df5-5f16-4066-8b06-073552562412",
        "parentId" : "8f7ff49d-479b-44cf-81cb-2f711226e1e2",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "I don't know!  I copied this from the other gesture recognizers that track velocity. https://github.com/flutter/flutter/blob/master/packages/flutter/lib/src/gestures/monodrag.dart#L239",
        "createdAt" : "2019-07-22T22:04:08Z",
        "updatedAt" : "2019-07-31T15:34:20Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "c557eebd-ba96-4242-95fa-dd5b9ca2357f",
        "parentId" : "8f7ff49d-479b-44cf-81cb-2f711226e1e2",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Maybe enabling this for synthesized events would make it more difficult to scroll to a specific place without inertia keeping the scroll going.",
        "createdAt" : "2019-07-22T22:05:16Z",
        "updatedAt" : "2019-07-31T15:34:20Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "0e6c01b2-7015-4d83-9d97-b72c5d95c6cb",
        "parentId" : "8f7ff49d-479b-44cf-81cb-2f711226e1e2",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "OK. At least we're consistent!",
        "createdAt" : "2019-07-26T22:18:19Z",
        "updatedAt" : "2019-07-31T15:34:20Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "97fb0f1b8d44bde62f67710e04c0c99452366fcd",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +252,256 @@  @override\n  void handlePrimaryPointer(PointerEvent event) {\n    if (!event.synthesized) {\n      if (event is PointerDownEvent) {\n        _velocityTracker = VelocityTracker();"
  },
  {
    "id" : "b1f67867-cced-4cf9-a9fe-21d0db4a2e2a",
    "prId" : 35829,
    "prUrl" : "https://github.com/flutter/flutter/pull/35829#pullrequestreview-267424979",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ad4b896-4aaf-46f4-b97d-ca59656f8313",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "`assert(_velocityTracker == null)` here?",
        "createdAt" : "2019-07-22T18:42:19Z",
        "updatedAt" : "2019-07-31T15:34:20Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "9989f035-ea85-4433-933e-d4ba869d464a",
        "parentId" : "7ad4b896-4aaf-46f4-b97d-ca59656f8313",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "I'll try it and keep an eye out for it logging an error.",
        "createdAt" : "2019-07-22T22:09:28Z",
        "updatedAt" : "2019-07-31T15:34:20Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "bdec4462-67ea-4053-b78f-02e3122d3b26",
        "parentId" : "7ad4b896-4aaf-46f4-b97d-ca59656f8313",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "I did see the assertion throwing errors while trying out the code, so I went back to using no assertion.",
        "createdAt" : "2019-07-23T21:43:27Z",
        "updatedAt" : "2019-07-31T15:34:20Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "cec6c324-5542-4ef8-96c2-e93e576d4c7c",
        "parentId" : "7ad4b896-4aaf-46f4-b97d-ca59656f8313",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Sounds good.",
        "createdAt" : "2019-07-26T22:18:43Z",
        "updatedAt" : "2019-07-31T15:34:20Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "97fb0f1b8d44bde62f67710e04c0c99452366fcd",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +254,258 @@    if (!event.synthesized) {\n      if (event is PointerDownEvent) {\n        _velocityTracker = VelocityTracker();\n        _velocityTracker.addPosition(event.timeStamp, event.localPosition);\n      }"
  },
  {
    "id" : "79bab685-1399-4cf1-9c39-6c3e16b89fe3",
    "prId" : 35829,
    "prUrl" : "https://github.com/flutter/flutter/pull/35829#pullrequestreview-266340116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66bc0695-c12a-4a77-b4e6-43fa85cc08d8",
        "parentId" : null,
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "See the commend regarding velocity above, if that's true then we don't need this new field. ",
        "createdAt" : "2019-07-24T23:45:50Z",
        "updatedAt" : "2019-07-31T15:34:20Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      }
    ],
    "commit" : "97fb0f1b8d44bde62f67710e04c0c99452366fcd",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +118,122 @@    this.globalPosition = Offset.zero,\n    Offset localPosition,\n    this.velocity = Velocity.zero,\n  }) : assert(globalPosition != null),\n       localPosition = localPosition ?? globalPosition;"
  },
  {
    "id" : "6616536b-13c0-489c-b8ee-b0ab68eb36b1",
    "prId" : 41799,
    "prUrl" : "https://github.com/flutter/flutter/pull/41799#pullrequestreview-296968955",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ebe827c9-9371-4d75-a838-49b3a3ebf2d0",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Maybe name this `deadline` to keep it consistent with the super class?",
        "createdAt" : "2019-10-02T20:56:32Z",
        "updatedAt" : "2019-10-28T19:57:31Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "356b152a-bcc7-4f4a-b9a0-930a18607938",
        "parentId" : "ebe827c9-9371-4d75-a838-49b3a3ebf2d0",
        "authorId" : "9e3eed31-b5ce-483c-91dd-e8ca18b84239",
        "body" : "I originally called it deadline, but it seems a bit off to expose the inner workings by using that name. So I called it duration instead since it will be clear to anyone using it what it means.",
        "createdAt" : "2019-10-02T21:44:53Z",
        "updatedAt" : "2019-10-28T19:57:31Z",
        "lastEditedBy" : "9e3eed31-b5ce-483c-91dd-e8ca18b84239",
        "tags" : [
        ]
      },
      {
        "id" : "30cdac91-9533-4544-ab5c-c2e5f0725b9a",
        "parentId" : "ebe827c9-9371-4d75-a838-49b3a3ebf2d0",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Got it, that makes sense.",
        "createdAt" : "2019-10-03T15:44:44Z",
        "updatedAt" : "2019-10-28T19:57:31Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fa0627f2d291c6e48380fcb5583868edb20f443",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +161,165 @@  /// after which the long press will be recognized.\n  LongPressGestureRecognizer({\n    Duration duration,\n    double postAcceptSlopTolerance,\n    PointerDeviceKind kind,"
  }
]