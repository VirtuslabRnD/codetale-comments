[
  {
    "id" : "089792b5-9add-4380-a543-adfab65fee17",
    "prId" : 22762,
    "prUrl" : "https://github.com/flutter/flutter/pull/22762#pullrequestreview-207713478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3f9ccee-81cf-4bb9-9776-cb67a53fdb82",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "assert _currentEvent == null",
        "createdAt" : "2019-02-22T00:24:31Z",
        "updatedAt" : "2019-03-09T03:20:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ac6a6c11-3527-4143-9af1-52aa0820d68e",
        "parentId" : "b3f9ccee-81cf-4bb9-9776-cb67a53fdb82",
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "Done.",
        "createdAt" : "2019-02-26T00:56:22Z",
        "updatedAt" : "2019-03-09T03:20:45Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      }
    ],
    "commit" : "092139733a891104377c1d0256bd6dacfed7942d",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +46,50 @@    if (_firstRegisteredCallback == null) {\n      assert(_currentEvent == null);\n      return;\n    }\n    assert(_currentEvent == event);"
  },
  {
    "id" : "f9913d03-7ed2-4e76-84ac-9aa7d6e02875",
    "prId" : 22762,
    "prUrl" : "https://github.com/flutter/flutter/pull/22762#pullrequestreview-207713478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51a15209-e248-4388-8ce8-853f77f389b6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "might want to wrap this in a try/catch/reportError block like for other places in gestures where we call callbacks",
        "createdAt" : "2019-02-22T00:25:07Z",
        "updatedAt" : "2019-03-09T03:20:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "5a744e13-c3b7-4597-b20f-fce48e0a3b4d",
        "parentId" : "51a15209-e248-4388-8ce8-853f77f389b6",
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "Done.",
        "createdAt" : "2019-02-26T00:56:28Z",
        "updatedAt" : "2019-03-09T03:20:45Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      }
    ],
    "commit" : "092139733a891104377c1d0256bd6dacfed7942d",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@    assert(_currentEvent == event);\n    try {\n    _firstRegisteredCallback(event);\n    } catch (exception, stack) {\n      FlutterError.reportError(FlutterErrorDetails("
  },
  {
    "id" : "50b68234-94b7-4382-ab54-557a0ff8d644",
    "prId" : 48149,
    "prUrl" : "https://github.com/flutter/flutter/pull/48149#pullrequestreview-338869018",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e28321d-8070-4b81-8a07-0c855ba8acc7",
        "parentId" : null,
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "@goderbauer @stuartmorgan is `resolve()` supposed to be called only with the original event?",
        "createdAt" : "2020-01-03T20:24:30Z",
        "updatedAt" : "2020-01-03T20:24:31Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "a074bf3f-b4dd-4101-a8ba-3c91201acc56",
        "parentId" : "5e28321d-8070-4b81-8a07-0c855ba8acc7",
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "This assertion is here because pointer signals are resolved synchronously, and thus there was no expectation that there would be more than one event being processed at any one time. After discussion with Hixie, the decision was to use a single event rather than a set, and assert that nothing was violating that invariant.\r\n\r\n> If two hit targets receive a PointerSignalEvent, they both try to call `PointerSignalResolver.register()` but they pass different events (each target receives its own transformed event).\r\n\r\nI'm not familiar with transformed events, is it just local coordinates per target or something along those lines? I.e., are they still a single conceptual event, which only one item should be claiming? If so, then this change should be fine. If there are multiple conceptual events at once then a more substantial change is required.",
        "createdAt" : "2020-01-03T22:42:10Z",
        "updatedAt" : "2020-01-03T22:42:10Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      },
      {
        "id" : "d0c819b8-ba72-4c7a-bbb9-c750ac72a227",
        "parentId" : "5e28321d-8070-4b81-8a07-0c855ba8acc7",
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "> is it just local coordinates per target or something along those lines?\r\n\r\nThat's exactly right.\r\n\r\nMichael made a change few months ago so each hit target receives a \"transformed\" event. The transformed event keeps track of the original event it was created from. What I'm doing here is checking if the events have the `original` event (I.e. they were created from the same event).",
        "createdAt" : "2020-01-03T23:35:40Z",
        "updatedAt" : "2020-01-03T23:36:13Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "2b9450aa-ca9a-41e0-9582-2eb4b2ce7761",
        "parentId" : "5e28321d-8070-4b81-8a07-0c855ba8acc7",
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "IOW, yes the two events are generated from the same conceptual event.",
        "createdAt" : "2020-01-03T23:37:26Z",
        "updatedAt" : "2020-01-03T23:37:26Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "4b0fe88f-aaa0-42da-82b4-6410a4002c18",
        "parentId" : "5e28321d-8070-4b81-8a07-0c855ba8acc7",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "> yes the two events are generated from the same conceptual event.\r\n\r\nThis is correct. And for the intents of the SignalRessolver they should be treated as the same event.\r\n\r\nThey way \"resolve\" is currently called grantees that it will always get the untransformed original event. However, I think it's fine to loosen that constraint as is done in this PR.",
        "createdAt" : "2020-01-06T20:13:14Z",
        "updatedAt" : "2020-01-06T20:16:52Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f800f34753a60972e825eabdd6fd29f2e4ec78c",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +52,56 @@      return;\n    }\n    assert(_isSameEvent(_currentEvent, event));\n    try {\n      _firstRegisteredCallback(_currentEvent);"
  }
]