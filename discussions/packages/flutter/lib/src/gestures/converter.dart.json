[
  {
    "id" : "e27946fe-e0c7-4797-84b1-0ba4a8702525",
    "prId" : 29998,
    "prUrl" : "https://github.com/flutter/flutter/pull/29998#pullrequestreview-220722418",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5e6a044-ffb3-4ce1-85f5-99f8270bc48a",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "Is this something that can be fix on the embedder side? The project I am working on is moving all this expanding to embedder. The fix here will eventually move to embedder.",
        "createdAt" : "2019-03-27T16:54:56Z",
        "updatedAt" : "2019-04-03T01:17:09Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "45bc27ac-c409-41d1-a90a-c8b34dac9fe6",
        "parentId" : "a5e6a044-ffb3-4ce1-85f5-99f8270bc48a",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "Which device that will hit this edge case?",
        "createdAt" : "2019-03-27T17:01:47Z",
        "updatedAt" : "2019-04-03T01:17:09Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "c1e83421-d7b1-427d-a27f-30d01f0dde25",
        "parentId" : "a5e6a044-ffb3-4ce1-85f5-99f8270bc48a",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "Yes, most of the changes in this PR are supposed to be moved to the engine (embedder?)  eventually, so that the framework will remain 1-to-1 event mapping.\r\n\r\nI haven't met devices that will hit this edge case, but missing of this breaks the invariance of \"lastEvent.position + thisEvent.delta = thisEvent.position\".",
        "createdAt" : "2019-03-27T18:32:41Z",
        "updatedAt" : "2019-04-03T01:17:09Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      },
      {
        "id" : "edb3247e-cfad-4072-a20b-f0b5e65428e6",
        "parentId" : "a5e6a044-ffb3-4ce1-85f5-99f8270bc48a",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "Is it only affecting the test? also, I think there are two possible possible expand, a move-> cancel-> remove\r\nor a cancel-> hover-> remove. not sure which one is the correct intention of the remove",
        "createdAt" : "2019-03-27T19:41:03Z",
        "updatedAt" : "2019-04-03T01:17:09Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "d9551c3e-486b-48cf-b6cf-3648d8c88df7",
        "parentId" : "a5e6a044-ffb3-4ce1-85f5-99f8270bc48a",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "You're right. To be more precise, the first one is \r\n```\r\n((move -> cancel) | (hover)) -> remove\r\n```\r\nwhile the second one is \r\n```\r\ncancel -> hover -> remove\r\n```\r\nThe reason I choose the 2nd one over the 1st is complete due to complexity.",
        "createdAt" : "2019-03-27T20:12:08Z",
        "updatedAt" : "2019-04-03T01:17:09Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      },
      {
        "id" : "aaf40216-1a9b-4df9-8d02-d50fb2a8ba62",
        "parentId" : "a5e6a044-ffb3-4ce1-85f5-99f8270bc48a",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "If it is only the test is failing due to the new implementation of more secure state check, we should fix the test to remove at the right position instead. If no real device is hitting this edge case, the test is testing some that are unrealistic.",
        "createdAt" : "2019-03-27T20:21:00Z",
        "updatedAt" : "2019-04-03T01:17:09Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "182e1b2d-2bdb-470c-981f-9165d318b4ff",
        "parentId" : "a5e6a044-ffb3-4ce1-85f5-99f8270bc48a",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "I think it's worth maintaining the invariance of \"lastEvent.position + thisEvent.delta = thisEvent.position\" to allow framework use either `position` or `delta` freely. \r\n\r\nMay I ask for @Hixie 's opinion here?",
        "createdAt" : "2019-03-27T20:34:43Z",
        "updatedAt" : "2019-04-03T01:17:09Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      },
      {
        "id" : "801cce3e-d774-4a8f-ac21-f9f8180c5eee",
        "parentId" : "a5e6a044-ffb3-4ce1-85f5-99f8270bc48a",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I really don't understand the question here. Can you elaborate?",
        "createdAt" : "2019-03-28T02:12:23Z",
        "updatedAt" : "2019-04-03T01:17:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "61d91190-9fc3-4e17-bac9-d71a8ab6cdaf",
        "parentId" : "a5e6a044-ffb3-4ce1-85f5-99f8270bc48a",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "Yes. This change adds an additional `PointerHoverEvent` when a `PointerChange.remove` features a different position than before, because currently neither of the two events Flutter expand it to allows non-zero `delta`, however `position` is eventually updated any way.\r\nWe're talking about whether we should make this change:\r\n1. I think it should because it's a bug that broke the contract of \"lastEvent.position + thisEvent.delta = thisEvent.position\".\r\n2. Chunheng thinks it shouldn't because no devices has hit this edge case yet.",
        "createdAt" : "2019-03-28T17:09:43Z",
        "updatedAt" : "2019-04-03T01:17:09Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      },
      {
        "id" : "5e6a1a5b-ed77-45af-a041-dec400a7df22",
        "parentId" : "a5e6a044-ffb3-4ce1-85f5-99f8270bc48a",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "We don't check for position when we receive pointer remove event. This PR implement the check, and that cause one test to fail. There are two way to fix this.\r\n1, expand the remove to hover and remove to ensure the position invariance\r\n2, fix the test to remove at the right position.",
        "createdAt" : "2019-03-28T17:17:33Z",
        "updatedAt" : "2019-04-03T01:17:09Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "bc44ba1d-3edd-4996-9b4a-83be1095142f",
        "parentId" : "a5e6a044-ffb3-4ce1-85f5-99f8270bc48a",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yes, we should send a hover if the remove event happens at a different position than the last event.\r\n\r\nthat said, that normalization should happen in the platform-specific code (java, objc, whatever), not in the dart code. the assert should be in the dart code though, if possible, so that it verifies every platform is sending sane data.",
        "createdAt" : "2019-03-28T22:28:43Z",
        "updatedAt" : "2019-04-03T01:17:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "33d8ccaa-10c0-4a01-ba6c-210abbd233d1",
        "parentId" : "a5e6a044-ffb3-4ce1-85f5-99f8270bc48a",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "Yes. The expansion will be moved to embedder in a PR by @chunhtai that is currently pending.",
        "createdAt" : "2019-03-29T19:30:21Z",
        "updatedAt" : "2019-04-03T01:17:09Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9c69850210bdc2ad14b571f126e4b8bcd358934",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +363,367 @@              );\n            }\n            if (position != state.lastPosition) {\n              yield PointerHoverEvent(\n                timeStamp: timeStamp,"
  },
  {
    "id" : "f4e15dc2-c905-4ccf-b781-52619a0d8dfb",
    "prId" : 30457,
    "prUrl" : "https://github.com/flutter/flutter/pull/30457#pullrequestreview-223044840",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae41d793-b5dc-403d-bfb7-df42162b3251",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "as written won't that break mice?\r\n\r\ni would expect this to only happen for kind = touch and kind = stylus devices while down.",
        "createdAt" : "2019-04-04T22:40:19Z",
        "updatedAt" : "2019-04-04T22:40:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "76cff210-d742-4692-a9b8-ed66cfb0eab0",
        "parentId" : "ae41d793-b5dc-403d-bfb7-df42162b3251",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "You're right, that's a stupid mistake. I'll fix it ASAP.",
        "createdAt" : "2019-04-04T23:17:42Z",
        "updatedAt" : "2019-04-04T23:17:43Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f73e15df1360c38ef3d8cb45b29ae0d0107a4db",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +209,213 @@              position: position,\n              // TODO(tongmu): Move button patching to embedder, https://github.com/flutter/flutter/issues/30454\n              buttons: datum.buttons | kPrimaryButton,\n              obscured: datum.obscured,\n              pressure: datum.pressure,"
  },
  {
    "id" : "d7fa03d0-55cb-401c-bd75-cd466e26b224",
    "prId" : 30535,
    "prUrl" : "https://github.com/flutter/flutter/pull/30535#pullrequestreview-223057772",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7094b01-a3fe-4f27-b081-fb4c0d9c0c1e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "indent the body of the switch by 2",
        "createdAt" : "2019-04-05T00:17:14Z",
        "updatedAt" : "2019-04-05T00:19:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b38cd118d8746f4414139cb3a2d60333b8162e5",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +54,58 @@    default:\n      return buttons;\n  }\n}\n"
  }
]