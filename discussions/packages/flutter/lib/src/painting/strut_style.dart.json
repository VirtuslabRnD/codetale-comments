[
  {
    "id" : "f4387fce-9c6d-4009-a696-be83d466274d",
    "prId" : 26332,
    "prUrl" : "https://github.com/flutter/flutter/pull/26332#pullrequestreview-193909220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6da0306a-fff3-4dd4-bbe2-fc55438c0446",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "A strut defines the minimum height of all of the lines in a paragraph?",
        "createdAt" : "2019-01-17T20:18:10Z",
        "updatedAt" : "2019-02-02T10:01:33Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "10363298-6338-4cc9-8803-fbc2610a84fb",
        "parentId" : "6da0306a-fff3-4dd4-bbe2-fc55438c0446",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "That is a (mostly) accurate but not completely accurate way to put it. I can try to come up with a better short description that is both true and simple.\r\n\r\nStrut defines the minimum ascents and descents from the baseline of all lines in the paragraph.",
        "createdAt" : "2019-01-18T00:48:32Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b03aa2e9dee2458d8e6608b5406e658a262fddb",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +10,14 @@/// relative to the baseline. Strut applies to all lines in the pararaph.\n///\n/// Strut is a feature that allows minimum line heights to be set. The effect is as\n/// if a zero width space was included at the beginning of each line in the\n/// paragraph. This imaginary space is 'shaped' according the properties defined"
  },
  {
    "id" : "28cb1986-fc10-43e1-97a4-7f3eff47eebc",
    "prId" : 26332,
    "prUrl" : "https://github.com/flutter/flutter/pull/26332#pullrequestreview-193820549",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f327f2a2-d332-4361-a93a-7386f8c1db9d",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "In #26085, this was `leadingScale`. Maybe update #26085's description?",
        "createdAt" : "2019-01-17T20:24:01Z",
        "updatedAt" : "2019-02-02T10:01:33Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b03aa2e9dee2458d8e6608b5406e658a262fddb",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@/// The vertical components of strut are as follows:\n///\n///  * `leading * fontSize / 2` or half the font leading if `leading` is undefined (half leading)\n///  * `ascent * height`\n///  * `descent * height`"
  },
  {
    "id" : "5673bac2-18ac-426c-a1b9-f94a5523dfbf",
    "prId" : 26332,
    "prUrl" : "https://github.com/flutter/flutter/pull/26332#pullrequestreview-193820549",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a00aa275-4618-4803-a26c-7acc35669dc6",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Not sure how this paragraph jibes with the list of products (like \"descent * lineHeight\") above.  I think the conventional way to explain this would to define the lineHeight and the baseline (measured from the top of the line).",
        "createdAt" : "2019-01-17T20:28:21Z",
        "updatedAt" : "2019-02-02T10:01:33Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b03aa2e9dee2458d8e6608b5406e658a262fddb",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@/// platform's default family will be used.\n///\n/// Each line's spacing above the baseline will be at least as tall as the half\n/// leading plus ascent. Each line's spacing below the baseline will be at least as\n/// tall as the half leading plus descent."
  },
  {
    "id" : "78e38448-463c-4db3-a37e-a74047d1cf80",
    "prId" : 26332,
    "prUrl" : "https://github.com/flutter/flutter/pull/26332#pullrequestreview-193910037",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8f12d84-ca92-4359-ac96-9f317d489a11",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I'm not sure why this needs to be said?",
        "createdAt" : "2019-01-17T20:40:49Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "fac432f2-d04a-49e0-9d02-da7291e81713",
        "parentId" : "c8f12d84-ca92-4359-ac96-9f317d489a11",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "The font family properties in TextStyle and paragaphStyle are used for actual drawing of the text. My concern was possible confusion of this fontFamily (which is never rendered) and a fontFamily being used as a TextStyle. People may put in a font family here and expect it to impact the fonts used in the rest of the text, which is false.",
        "createdAt" : "2019-01-18T00:52:31Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b03aa2e9dee2458d8e6608b5406e658a262fddb",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@///\n///  * [fontFamily]: the name of the font to use when calcualting the strut (e.g., Roboto).\n///    No glyphs from the font will be drawn and the font will be used purely for metrics.\n///\n///  * [fontFamilyFallback]: an ordered list of font family names that will be searched for when"
  },
  {
    "id" : "8a8f80c2-01dc-4a82-90d1-78224de2cfaf",
    "prId" : 26332,
    "prUrl" : "https://github.com/flutter/flutter/pull/26332#pullrequestreview-193820549",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfed3065-de47-496e-94a2-41f7f1327e7b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "however text in adjacent lines might overlap.",
        "createdAt" : "2019-01-17T20:48:23Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b03aa2e9dee2458d8e6608b5406e658a262fddb",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +89,93 @@///  * [forceStrutHeight]: when true, all lines will be laid out with the height of the\n///    strut. All line and run-specific metrics will be ignored/overridden and only strut\n///    metrics will be used instead. This property guarantees uniform line spacing, however\n///    text in adjacent lines may overlap. This property should be enabled with caution as\n///    it bypasses a large portion of the vertical layout system."
  },
  {
    "id" : "910c8af8-4828-4476-9e2c-a2208c541786",
    "prId" : 26332,
    "prUrl" : "https://github.com/flutter/flutter/pull/26332#pullrequestreview-193820549",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da6e2213-d29d-4a6d-96dd-2a2a5a1ac59a",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "In this sample the second line's font is bigger than the other lines' fonts. If the `strutStyle` wasn't specified, the second line would be higher than the others. Instead all of the line heights have the same height, which is TBD (14 * 1.5?).",
        "createdAt" : "2019-01-17T20:58:07Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b03aa2e9dee2458d8e6608b5406e658a262fddb",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +118,122 @@///\n/// {@tool sample}\n/// Here, strut is used to absorb the additional line height in the second line.\n/// The strut [height] was defined as 1.5 (the default font size is 14), which\n/// caused all lines to be laid out taller than without strut. This extra space was"
  },
  {
    "id" : "3f217d0b-c3cb-415b-9b97-4176e4ff7a71",
    "prId" : 26332,
    "prUrl" : "https://github.com/flutter/flutter/pull/26332#pullrequestreview-193820549",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af3ccdd5-93a2-4a8b-ac0f-5be62d5ab11b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This image is great, it would have been hard to understand what's going on without it.",
        "createdAt" : "2019-01-17T21:22:15Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b03aa2e9dee2458d8e6608b5406e658a262fddb",
    "line" : 166,
    "diffHunk" : "@@ -1,1 +164,168 @@/// as a 'grid' for the glyphs to draw on.\n///\n/// ![The result of the example below.](https://flutter.github.io/assets-for-api-docs/assets/painting/strut_force_example.png)\n///\n/// ```dart"
  },
  {
    "id" : "973025e8-fd33-45af-8571-9c88d3f9a286",
    "prId" : 26332,
    "prUrl" : "https://github.com/flutter/flutter/pull/26332#pullrequestreview-193820549",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c211692d-9470-4281-bda2-0f75283d0c27",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "If package != null it looks like we should assert that fontFamily != null, since that's probably an error.",
        "createdAt" : "2019-01-17T22:56:41Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b03aa2e9dee2458d8e6608b5406e658a262fddb",
    "line" : 277,
    "diffHunk" : "@@ -1,1 +275,279 @@    this.debugLabel,\n    String package,\n  }) : fontFamily = package == null ? fontFamily : 'packages/$package/$fontFamily',\n       _fontFamilyFallback = fontFamilyFallback,\n       _package = package,"
  },
  {
    "id" : "644d3b18-f37c-4f92-b734-bbcb1507dfc3",
    "prId" : 26332,
    "prUrl" : "https://github.com/flutter/flutter/pull/26332#pullrequestreview-193908411",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "908b815e-6f0f-4834-8e63-5efa3dbd95c8",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "If I want to create a strut with leading that's 50% bigger than the font's default leading, what do I do? \r\n\r\nAllowing all negative values to mean \"use the font's leading\" seems likely to obscure the occasional mistake. Why not just require leading to be null or >= 0?",
        "createdAt" : "2019-01-17T23:47:08Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "7c51eaa2-5517-45e4-9b7e-0c6ed50f29d1",
        "parentId" : "908b815e-6f0f-4834-8e63-5efa3dbd95c8",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "I think it is still very often useful to use the font's default leading. For example, if the user wants the strut to be the same as the rest of the text, if we do not provide an option to use default leading, then the user is unable to match the strut to the rest of the text as we do not (yet) provide direct access to metrics such as the leading. Normally, when the user provides a custom leading, the are trying to accomplish something specific. Otherwise, the default leading is likely what they wish to use for the majority of cases.\r\n\r\nThis API does not provide an easy way to make something 50% the size of the default leading. One (confusing) possibility is to make negative values a multiplier on the default leading. For example, `leading: -0.5` would indicate 50% of the default leading and we simply drop the sign.",
        "createdAt" : "2019-01-18T00:44:32Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b03aa2e9dee2458d8e6608b5406e658a262fddb",
    "line" : 366,
    "diffHunk" : "@@ -1,1 +364,368 @@  ///\n  /// The default leading is null, which will use the font-specified leading.\n  final double leading;\n\n  /// Whether the strut height should be forced."
  },
  {
    "id" : "81df75c1-c372-42cb-a6ea-415cbb5bf94d",
    "prId" : 26332,
    "prUrl" : "https://github.com/flutter/flutter/pull/26332#pullrequestreview-193908800",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a012c700-8cb9-45e9-8a0c-3f4b084a9dea",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Not just the height but the baseline too?",
        "createdAt" : "2019-01-17T23:47:45Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "ce6f02ee-3d2b-48b3-83a4-c9fa290cde34",
        "parentId" : "a012c700-8cb9-45e9-8a0c-3f4b084a9dea",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "I guess it would be more accurate to say that the baselines will be laid out according to the strut, and the rest of the text would blindly place their alphabetic baselines along this forced baseline.",
        "createdAt" : "2019-01-18T00:46:27Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b03aa2e9dee2458d8e6608b5406e658a262fddb",
    "line" : 370,
    "diffHunk" : "@@ -1,1 +368,372 @@  /// Whether the strut height should be forced.\n  ///\n  /// When true, all lines will be laid out with the height of the\n  /// strut. All line and run-specific metrics will be ignored/overridden and only strut\n  /// metrics will be used instead. This property guarantees uniform line spacing, however"
  },
  {
    "id" : "41964bf5-840e-44f5-90fb-98bbfa3ad37a",
    "prId" : 26332,
    "prUrl" : "https://github.com/flutter/flutter/pull/26332#pullrequestreview-197782351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b55ed775-8685-42af-b6e6-1c36ddc062d3",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "no backticks around null",
        "createdAt" : "2019-01-29T21:03:03Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b03aa2e9dee2458d8e6608b5406e658a262fddb",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +79,83 @@///    from [height] since the spacing is equally distributed above and below the\n///    baseline.\n///    Default is `null`, which will use the font-specified leading.\n///\n///  * [fontWeight]: the typeface thickness to use when calculating the strut (e.g., bold)."
  },
  {
    "id" : "061b674f-81d2-4aa3-84b3-1c7f01ce3f14",
    "prId" : 26332,
    "prUrl" : "https://github.com/flutter/flutter/pull/26332#pullrequestreview-197788065",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32802f93-7f9e-435c-8ec6-d6178af7afbf",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Is this equivalent to setting `height` and `leading` to zero for all TextSpans?",
        "createdAt" : "2019-01-29T21:03:50Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "8b922f1c-a0b1-47d5-8a7b-04f549f0f905",
        "parentId" : "32802f93-7f9e-435c-8ec6-d6178af7afbf",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "Yes, although this flag is more performant than setting height to zero as it skips a lot of the per-run height logic. Another benefit is that it provides a single location where this can be controlled. It can be confusing and un-intuitive for users to be making changes to many TextStyles to adjust something that is controlled by strut. I would expect that the \"set to zero\" equivalency is not immediately obvious to most people learning this API.\r\n\r\nThere is also not yet a TextStyle leading property. The leading is currently bundled into the TextStyle.height property. I have plans to expose the leading in TextStyle though.",
        "createdAt" : "2019-01-29T21:16:51Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b03aa2e9dee2458d8e6608b5406e658a262fddb",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +92,96 @@///    text in adjacent lines may overlap. This property should be enabled with caution as\n///    it bypasses a large portion of the vertical layout system.\n///    The default value is false.\n///\n/// ### Examples"
  },
  {
    "id" : "322fb244-2f48-4dfb-ae1e-d6e799aeec4b",
    "prId" : 26332,
    "prUrl" : "https://github.com/flutter/flutter/pull/26332#pullrequestreview-197827380",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7fb2855-c057-41d7-b845-6447222eacae",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "see above for comments regarding `1.0`, `w400`, etc",
        "createdAt" : "2019-01-29T22:53:51Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b03aa2e9dee2458d8e6608b5406e658a262fddb",
    "line" : 356,
    "diffHunk" : "@@ -1,1 +354,358 @@  ///\n  /// The default fontStyle is [FontStyle.normal].\n  final FontStyle fontStyle;\n\n  /// The custom leading to apply to the strut as a multiple of [fontSize]."
  },
  {
    "id" : "3b6293ba-0153-4d84-b5a4-b481b2cc4d98",
    "prId" : 26332,
    "prUrl" : "https://github.com/flutter/flutter/pull/26332#pullrequestreview-197840033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8401a188-a7f0-40cd-9312-4bb0036123c5",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "there's a lot of code duplication in this file (e.g. the switch for font weights), which is sad. maybe a private mixin or something could make this better?",
        "createdAt" : "2019-01-29T22:54:46Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "7a5f53e0-c199-4f28-b2de-d5d1c4412188",
        "parentId" : "8401a188-a7f0-40cd-9312-4bb0036123c5",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "The whole switch could be replaced by: `weightDescription = '${fontWeight.index + 1}00';`",
        "createdAt" : "2019-01-29T23:34:14Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b03aa2e9dee2458d8e6608b5406e658a262fddb",
    "line" : 478,
    "diffHunk" : "@@ -1,1 +476,480 @@      properties.add(FlagProperty('forceStrutHeight', value: forceStrutHeight, ifTrue: '$prefix<strut height forced>', ifFalse: '$prefix<strut height normal>'));\n  }\n}"
  },
  {
    "id" : "83e9d512-a50b-4df1-9f7b-73b60ea03edc",
    "prId" : 27612,
    "prUrl" : "https://github.com/flutter/flutter/pull/27612#pullrequestreview-201688070",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f73b03a8-53f7-471d-86bb-b70a9cbcaf06",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "We're asserting many other things about the input parameters. Probably need to explain them all.",
        "createdAt" : "2019-02-08T17:09:55Z",
        "updatedAt" : "2019-02-23T07:37:27Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "0642aa749afd3ea3ff4b5fd453d36a1ba2e8704f",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +289,293 @@  /// the provided [textStyle].\n  ///\n  /// The [textStyle] parameter must not be null.\n  ///\n  /// The named parameters override the [textStyle]'s argument's properties."
  },
  {
    "id" : "724e79b5-26ab-46da-a896-b7f244281546",
    "prId" : 27612,
    "prUrl" : "https://github.com/flutter/flutter/pull/27612#pullrequestreview-205534290",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bce253ec-a18e-4aff-b9f1-e8383e52e065",
        "parentId" : null,
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "Is there a reason that this is the desired behavior?",
        "createdAt" : "2019-02-19T22:32:07Z",
        "updatedAt" : "2019-02-23T07:37:27Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      },
      {
        "id" : "295838fd-0e32-4507-abd7-1e740ecc9c99",
        "parentId" : "bce253ec-a18e-4aff-b9f1-e8383e52e065",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "This was based around the same override in `text_style.dart:935` where presumably, the full toString that includes all of the properties, is often times too long and makes output unreadable. A similar argument can be applied to StrutStyle, which also contains a large number of potentially cluttering properties that are not necessarily relevant in the short version of the toString.",
        "createdAt" : "2019-02-20T01:13:15Z",
        "updatedAt" : "2019-02-23T07:37:27Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0642aa749afd3ea3ff4b5fd453d36a1ba2e8704f",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +524,528 @@\n  @override\n  String toStringShort() => '$runtimeType';\n\n  /// Adds all properties prefixing property names with the optional `prefix`."
  },
  {
    "id" : "9fe28c77-21fe-4d88-9a97-4d91b368d851",
    "prId" : 33281,
    "prUrl" : "https://github.com/flutter/flutter/pull/33281#pullrequestreview-252003472",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3e5affb-7635-4b64-b5fe-7a71d7e78efd",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Am I missing a diagram somewhere?  Or even just a wikipedia link that has one?",
        "createdAt" : "2019-05-31T22:37:15Z",
        "updatedAt" : "2019-07-08T22:08:45Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "dc3cee9f-cf06-4a92-a523-31701feaf57d",
        "parentId" : "d3e5affb-7635-4b64-b5fe-7a71d7e78efd",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "Making one :)",
        "createdAt" : "2019-05-31T23:08:33Z",
        "updatedAt" : "2019-07-08T22:08:45Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      },
      {
        "id" : "ff01d593-edfe-471c-ac47-39a3a7fe73bb",
        "parentId" : "d3e5affb-7635-4b64-b5fe-7a71d7e78efd",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "Diagram is at https://github.com/flutter/assets-for-api-docs/pull/86",
        "createdAt" : "2019-06-19T00:52:14Z",
        "updatedAt" : "2019-07-08T22:08:45Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      },
      {
        "id" : "f163fdfc-25f1-4834-b036-5dfbca65cfee",
        "parentId" : "d3e5affb-7635-4b64-b5fe-7a71d7e78efd",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "Will update the docs to reference it once it lands.",
        "createdAt" : "2019-06-19T00:52:47Z",
        "updatedAt" : "2019-07-08T22:08:45Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      },
      {
        "id" : "8e036297-959f-4308-81ef-47b6477e3326",
        "parentId" : "d3e5affb-7635-4b64-b5fe-7a71d7e78efd",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "https://github.com/flutter/assets-for-api-docs/pull/87",
        "createdAt" : "2019-06-19T22:29:12Z",
        "updatedAt" : "2019-07-08T22:08:45Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ec4eee2cac6a7f69dcf063b04cd8efd79ee4ef4",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +39,43 @@/// descent is the spacing below the baseline without leading. Leading is\n/// split evenly betweenthe top and bottom. The values for `ascent` and\n/// `descent` are provided by the font named by [fontFamily]. If no\n/// [fontFamily] or [fontFamilyFallback] is provided, then the platform's\n/// default family will be used."
  }
]