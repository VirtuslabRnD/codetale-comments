[
  {
    "id" : "d94e21c5-357b-47fd-8f9f-904a54e5d74a",
    "prId" : 1471,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b36a5b7-6b9c-429b-845c-a28f917972db",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "use `boxes.single` since you expect it to be just 1\n",
        "createdAt" : "2016-01-30T00:08:09Z",
        "updatedAt" : "2016-01-30T00:08:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5cfbad87699e4b7b5cbb32a4644338c44b26a84",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +222,226 @@    if (boxes.isEmpty)\n      return null;\n    ui.TextBox box = boxes[0];\n    double caretEnd = box.end;\n    double dx = box.direction == ui.TextDirection.rtl ? caretEnd : caretEnd - caretPrototype.width;"
  },
  {
    "id" : "20b90675-0e76-4943-9e0d-8fa19e84f9e3",
    "prId" : 1471,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df856f6c-1ee4-4d00-a23d-7fd231656cbd",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ditto\n",
        "createdAt" : "2016-01-30T00:08:16Z",
        "updatedAt" : "2016-01-30T00:08:16Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5cfbad87699e4b7b5cbb32a4644338c44b26a84",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +232,236 @@    if (boxes.isEmpty)\n      return null;\n    ui.TextBox box = boxes[0];\n    double caretStart = box.start;\n    double dx = box.direction == ui.TextDirection.rtl ? caretStart - caretPrototype.width : caretStart;"
  },
  {
    "id" : "1fbdc403-022f-4dce-8d95-2cac17868534",
    "prId" : 3061,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "824c4c9d-acac-436d-8565-4f6b70d04a77",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this will cause all the accessors to null-deref. none of them check whether _paragraph is set or not.\n",
        "createdAt" : "2016-04-02T08:16:13Z",
        "updatedAt" : "2016-04-04T17:46:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "650767b8-cf11-4aaa-8644-f018a1b9e319",
        "parentId" : "824c4c9d-acac-436d-8565-4f6b70d04a77",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i guess this is no worse than it already is...\n",
        "createdAt" : "2016-04-02T08:16:31Z",
        "updatedAt" : "2016-04-04T17:46:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "0dcc05bc-6fd1-4be3-b137-4bd1d70fc7d3",
        "parentId" : "824c4c9d-acac-436d-8565-4f6b70d04a77",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should probably make this class require the text to not be null, for sanity.\n",
        "createdAt" : "2016-04-02T08:16:56Z",
        "updatedAt" : "2016-04-04T17:46:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "09e457f384210570f639444291d345d907426828",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +260,264 @@      _needsLayout = true;\n    } else {\n      _paragraph = null;\n      _needsLayout = false;\n    }"
  },
  {
    "id" : "0c7d1e63-ad01-4356-b2a6-7d002d0057c5",
    "prId" : 3061,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6bd6661c-4dcc-458f-a976-eac1feeb306f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Why do we need this at all? Can't we just lay out without a maxWidth constraint, and then use the maxIntrinsicWidth to position it?\n",
        "createdAt" : "2016-04-02T16:55:08Z",
        "updatedAt" : "2016-04-04T17:46:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a127f655-6ac2-49b2-aa8d-67c010f19655",
        "parentId" : "6bd6661c-4dcc-458f-a976-eac1feeb306f",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Doesn't work for RTL text.  It will be positioned from the right edge of the width instead of the left edge.\n",
        "createdAt" : "2016-04-02T17:46:51Z",
        "updatedAt" : "2016-04-04T17:46:29Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "d12ba3b5-c70a-4a66-9a34-a799d1a2d8e0",
        "parentId" : "6bd6661c-4dcc-458f-a976-eac1feeb306f",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Oh, fair point.\n",
        "createdAt" : "2016-04-02T18:00:26Z",
        "updatedAt" : "2016-04-04T17:46:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "81ead1f8-8f15-46be-bb03-58c59cbdbfc3",
        "parentId" : "6bd6661c-4dcc-458f-a976-eac1feeb306f",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "maybe note that in the docs\n",
        "createdAt" : "2016-04-02T18:00:41Z",
        "updatedAt" : "2016-04-04T17:46:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "09e457f384210570f639444291d345d907426828",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +361,365 @@\n  /// Computes the visual position of the glyphs using the unconstrainted max intrinsic width.\n  void layoutToMaxIntrinsicWidth() {\n    if (!_needsLayout && _lastLayoutWasToMaxIntrinsicWidth && width == maxIntrinsicWidth)\n      return;"
  },
  {
    "id" : "4cbe7608-0157-4051-ae51-4957de3d7082",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b40d72fa-da53-45c8-8ec5-f426e31446cc",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "say what happens if you omit the text (namely that the object is created but that we will crash if you try to paint() before setting the text to a non-null value? I think? We should probably be more graceful about that...)\n",
        "createdAt" : "2016-04-22T21:17:34Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +249,253 @@/// return to step 1.\nclass TextPainter {\n  /// Creates a text painter that paints the given text.\n  ///\n  /// The text argument is optional but [text] must be non-null before calling"
  },
  {
    "id" : "d3d4811c-eeee-4da8-8d0f-101a1e3fe9ee",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cbad94f-05f2-4210-8fe2-673f9836106d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "pretty sure this actually does nothing\n",
        "createdAt" : "2016-04-22T21:19:30Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +301,305 @@  }\n\n  /// The minimum height at which to layout the text.\n  ///\n  /// Requires [layout] or [layoutToMaxIntrinsicWidth] to be called again before painting."
  },
  {
    "id" : "3f276be4-7e9a-4642-90ef-153adac07dce",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44f75a0f-af18-40b0-8f62-b935a1f2d5e1",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ditto\n",
        "createdAt" : "2016-04-22T21:19:33Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +312,316 @@  }\n\n  /// The maximum height at which to layout the text.\n  ///\n  /// Requires [layout] or [layoutToMaxIntrinsicWidth] to be called again before painting."
  },
  {
    "id" : "3c8a9ba0-aa06-4387-9eda-dca134cb4691",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd1a1f47-84f7-4f69-a8a5-606ff5f2fc41",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "add docs to layoutToMaxIntrinsicWidth saying that it overwrites previously configured constraint values.\n",
        "createdAt" : "2016-04-22T21:21:11Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +109,113 @@    if (hasStyle)\n      builder.pop();\n  }\n\n  /// Walks this text span and its decendants in pre-order and calls [visitor] for each span that has text."
  },
  {
    "id" : "35953c3c-ab07-4bb1-92df-ff21ffea869a",
    "prId" : 7493,
    "prUrl" : "https://github.com/flutter/flutter/pull/7493#pullrequestreview-16671122",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f626372e-03ec-4f42-93a6-f786dfbe1777",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Why is this a property on the text painter?  I would have expected it to come in through the TextStyle only",
        "createdAt" : "2017-01-13T23:06:45Z",
        "updatedAt" : "2017-01-18T17:07:56Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "a19eb456-4006-4660-a1ab-c02a831dbb60",
        "parentId" : "f626372e-03ec-4f42-93a6-f786dfbe1777",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Nevermind.  This is correct.",
        "createdAt" : "2017-01-13T23:10:32Z",
        "updatedAt" : "2017-01-18T17:07:56Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "312cf05c53927654e97567a07bf769ac9bda0714",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +112,116 @@    _paragraph = null;\n    _needsLayout = true;\n  }\n\n  ui.Paragraph _layoutTemplate;"
  },
  {
    "id" : "3212f176-4ce1-417d-b3d9-561a4454968e",
    "prId" : 13405,
    "prUrl" : "https://github.com/flutter/flutter/pull/13405#pullrequestreview-82042504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96f0b379-71ac-437b-b1eb-8c11de321f14",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Or really any grapheme clusters larger than one code unit...",
        "createdAt" : "2017-12-07T16:32:47Z",
        "updatedAt" : "2017-12-07T22:32:11Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "887d57ac-b42b-4d3e-95df-9bedcc0cc1ed",
        "parentId" : "96f0b379-71ac-437b-b1eb-8c11de321f14",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "True, I wish we had https://github.com/dart-lang/sdk/issues/28404.",
        "createdAt" : "2017-12-07T18:18:23Z",
        "updatedAt" : "2017-12-07T22:32:11Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "410c7ef6-17bb-4c83-a53f-026a1c9f403f",
        "parentId" : "96f0b379-71ac-437b-b1eb-8c11de321f14",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes, me too!\r\n\r\nI guess I'm just saying the comment shouldn't be about flag emojis, except as an example.",
        "createdAt" : "2017-12-08T00:59:58Z",
        "updatedAt" : "2017-12-08T00:59:59Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "1de8209aa0299a453452db9b2d44d873ff34b6e5",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +408,412 @@    if (nextCodeUnit == null)\n      return null;\n    // TODO(goderbauer): doesn't handle flag emojis (https://github.com/flutter/flutter/issues/13404).\n    return _isUtf16Surrogate(nextCodeUnit) ? offset + 2 : offset + 1;\n  }"
  },
  {
    "id" : "a7b76a1f-7797-4544-b013-ac6dcadb05a1",
    "prId" : 24797,
    "prUrl" : "https://github.com/flutter/flutter/pull/24797#pullrequestreview-185801382",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ea185f7-8f76-4709-a39e-6c0c19c94a0d",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "while you're here, can you dartdoc the _isUtf16Surrogate function?",
        "createdAt" : "2018-12-18T00:23:53Z",
        "updatedAt" : "2018-12-18T01:22:33Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed325d2c0bd3e6696bd3e1662d61a3c5e0563966",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +425,429 @@      return null;\n    // Check for multi-code-unit glyphs such as emojis or zero width joiner\n    final bool needsSearch = _isUtf16Surrogate(prevCodeUnit) || _text.codeUnitAt(offset) == _zwjUtf16;\n    int graphemeClusterLength = needsSearch ? 2 : 1;\n    List<TextBox> boxes = <TextBox>[];"
  },
  {
    "id" : "19f3cd22-1963-465d-bf08-f5ec37183f44",
    "prId" : 24797,
    "prUrl" : "https://github.com/flutter/flutter/pull/24797#pullrequestreview-185801382",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "564a7988-8c0f-4c75-8eb3-9b05d68d86a4",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Be liberal with comments and document any idiosyncrasies you're depending on (e.g. it returning empty if the range doesn't encompass an entire cluster). ",
        "createdAt" : "2018-12-18T00:48:07Z",
        "updatedAt" : "2018-12-18T01:22:33Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed325d2c0bd3e6696bd3e1662d61a3c5e0563966",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +432,436 @@      boxes = _paragraph.getBoxesForRange(prevRuneOffset, offset);\n      // When the range does not include a full cluster, no boxes will be returned.\n      if (boxes.isEmpty) {\n        // When we are at the beginning of the line, a non-surrogate position will\n        // return empty boxes. We break and try from downstream instead."
  },
  {
    "id" : "a86c06f8-6c47-4d94-8e3e-70eabd764d08",
    "prId" : 24797,
    "prUrl" : "https://github.com/flutter/flutter/pull/24797#pullrequestreview-185801382",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4cee75c-f412-472b-9393-6002d22c13de",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Add a comment for which scenario should boxes be empty and needsSearch would be false for future readers (e.g. we're at the beginning of the line or some such)",
        "createdAt" : "2018-12-18T00:49:06Z",
        "updatedAt" : "2018-12-18T01:22:33Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed325d2c0bd3e6696bd3e1662d61a3c5e0563966",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +435,439 @@        // When we are at the beginning of the line, a non-surrogate position will\n        // return empty boxes. We break and try from downstream instead.\n        if (!needsSearch)\n          break; // Only perform one iteration if no search is required.\n        if (prevRuneOffset < -_text.text.length)"
  },
  {
    "id" : "d22928b9-0a23-4f51-b75f-1ff2747049d4",
    "prId" : 24797,
    "prUrl" : "https://github.com/flutter/flutter/pull/24797#pullrequestreview-185801382",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fcd0a49-d782-4ba2-9060-a597aaf3b220",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Not clear why it's *2 instead of +1. Add comment.",
        "createdAt" : "2018-12-18T00:50:14Z",
        "updatedAt" : "2018-12-18T01:22:33Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed325d2c0bd3e6696bd3e1662d61a3c5e0563966",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +443,447 @@        // of certain large clusters taking much longer than others, which can\n        // cause jank.\n        graphemeClusterLength *= 2;\n        continue;\n      }"
  },
  {
    "id" : "a64bf723-fc34-4f86-9dcc-8d670378afec",
    "prId" : 26332,
    "prUrl" : "https://github.com/flutter/flutter/pull/26332#pullrequestreview-193820549",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb1389d4-270e-4c22-92c7-b761524eb937",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This would be a good place to summarize what those metrics are.",
        "createdAt" : "2019-01-17T23:55:09Z",
        "updatedAt" : "2019-02-02T10:01:34Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b03aa2e9dee2458d8e6608b5406e658a262fddb",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +204,208 @@  /// {@template flutter.painting.textPainter.strutStyle}\n  /// The strut style to use. Strut style defines the strut, which sets minimum\n  /// vertical layout metrics.\n  ///\n  /// Omitting or providing null will disable strut."
  },
  {
    "id" : "7f6c82e4-95a0-4e6f-aa27-2ed27dced806",
    "prId" : 34019,
    "prUrl" : "https://github.com/flutter/flutter/pull/34019#pullrequestreview-252504630",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cd4486e-68df-4564-837c-df3ae0c4e3c8",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Did you change this in order to prevent it from using `_paragraph.longestLine` ever?  We should make sure that `textWidthBasis: TextWidthBasis.longestLine` still works with this.",
        "createdAt" : "2019-06-12T15:48:36Z",
        "updatedAt" : "2019-07-18T23:47:01Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "a4cd0427-cf7e-4839-a900-dc4477ed8c8f",
        "parentId" : "3cd4486e-68df-4564-837c-df3ae0c4e3c8",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "dx is related to _paragraph.width, 'width' will not work if text align is not start. ",
        "createdAt" : "2019-06-20T20:04:29Z",
        "updatedAt" : "2019-07-18T23:47:01Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "be32ea44e7039448da1451856923c1bc82d68e27",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +653,657 @@      final double caretEnd = box.end;\n      final double dx = box.direction == TextDirection.rtl ? caretEnd - caretPrototype.width : caretEnd;\n      return Rect.fromLTRB(min(dx, _paragraph.width), box.top, min(dx, _paragraph.width), box.bottom);\n    }\n    return null;"
  },
  {
    "id" : "b5d9fda9-36f5-4067-8764-f4c2265cdf24",
    "prId" : 38930,
    "prUrl" : "https://github.com/flutter/flutter/pull/38930#pullrequestreview-288939378",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de7b5d83-6e11-4f69-bf59-9dac5c15fa97",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This should include information about when somebody may want to call this.",
        "createdAt" : "2019-09-16T22:51:49Z",
        "updatedAt" : "2019-09-24T16:42:06Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "75e1926c01e4512e6b3a7a81ca90c92ccd87cbae",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +163,167 @@\n  /// Marks this text painter's layout information as dirty and removes cached\n  /// information.\n  ///\n  /// Uses this method to notify text painter to relayout in the case of"
  },
  {
    "id" : "c537a47c-960d-4252-a3c8-aaca7e927172",
    "prId" : 39282,
    "prUrl" : "https://github.com/flutter/flutter/pull/39282#pullrequestreview-281126779",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "166cb5e0-e991-465f-98bf-7787fc1f23a1",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "nit: can we clean this up a little? What's a `LineMetrics` and why do I want it (besides that it's metrics about lines)? :)",
        "createdAt" : "2019-08-28T05:41:01Z",
        "updatedAt" : "2019-08-29T00:10:34Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "12af1dae-6da7-48f2-8a7b-f25aa856d83d",
        "parentId" : "166cb5e0-e991-465f-98bf-7787fc1f23a1",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "further nit: can we update teh second half of this sentence to not use the word metrics again?",
        "createdAt" : "2019-08-28T21:59:25Z",
        "updatedAt" : "2019-08-29T00:10:34Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "862793de-7a0a-4269-ac47-d22d8983aac4",
        "parentId" : "166cb5e0-e991-465f-98bf-7787fc1f23a1",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Or maybe just `Returns the full list of [LineMetrics] that describe each laid out line.`, since you describe it below.",
        "createdAt" : "2019-08-28T21:59:57Z",
        "updatedAt" : "2019-08-29T00:10:34Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "e0255f434a80bad93fe2a8db4f8ce87cea37b8d5",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +819,823 @@\n  /// Returns the full list of [LineMetrics] that describe in detail the various\n  /// metrics of each laid out line.\n  ///\n  /// The [LineMetrics] list is presented in the order of the lines they represent."
  },
  {
    "id" : "d76a6ecc-1645-43da-9bb2-8bc6173209ea",
    "prId" : 39282,
    "prUrl" : "https://github.com/flutter/flutter/pull/39282#pullrequestreview-281151415",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c46fb70b-b175-4399-b410-33df0776708f",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "`This will assert if called before [layout].`",
        "createdAt" : "2019-08-28T22:01:35Z",
        "updatedAt" : "2019-08-29T00:10:34Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "636c6293-e096-4540-9e03-19716b6d11b8",
        "parentId" : "c46fb70b-b175-4399-b410-33df0776708f",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "The rest of the docs currently uses `Valid only after [layout] has been called.`.\r\n\r\nSince the asserts do not fire in release, I'm not sure if the fact that the assert is there belongs in the docs?",
        "createdAt" : "2019-08-28T22:09:56Z",
        "updatedAt" : "2019-08-29T00:10:34Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      },
      {
        "id" : "dd6f44ed-311d-400a-b123-50a81c2eed6a",
        "parentId" : "c46fb70b-b175-4399-b410-33df0776708f",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "In release, I believe this would just return zero for most of the values if called before layout",
        "createdAt" : "2019-08-28T22:12:23Z",
        "updatedAt" : "2019-08-29T00:10:34Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      },
      {
        "id" : "e14a5939-7b83-42cd-ab64-28c421e10b11",
        "parentId" : "c46fb70b-b175-4399-b410-33df0776708f",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Ahh ok - this is fine then.",
        "createdAt" : "2019-08-28T23:19:04Z",
        "updatedAt" : "2019-08-29T00:10:34Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "e0255f434a80bad93fe2a8db4f8ce87cea37b8d5",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +828,832 @@  /// widgets to a particular line.\n  ///\n  /// Valid only after [layout] has been called.\n  ///\n  /// This can potentially return a large amount of data, so it is not recommended"
  },
  {
    "id" : "80a6e62f-52c0-4386-b8ff-d5fa77d96ec3",
    "prId" : 39761,
    "prUrl" : "https://github.com/flutter/flutter/pull/39761#pullrequestreview-283288500",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7cfe968f-91f1-4572-a6d6-9710ad1611b0",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "Since we are repeating the the same documentation across text_painter selectable_text and text, I think we can define the template here and use macro for selectable_text and text?",
        "createdAt" : "2019-09-03T22:05:39Z",
        "updatedAt" : "2019-09-03T22:12:30Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "1e14c1bd-9997-47b7-a116-e966728e3b9d",
        "parentId" : "7cfe968f-91f1-4572-a6d6-9710ad1611b0",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Good call, will do.",
        "createdAt" : "2019-09-03T22:11:19Z",
        "updatedAt" : "2019-09-03T22:12:30Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "80af01ec47c85a0fa4b110ff6efecf80f19b1935",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +325,329 @@\n  /// {@template flutter.painting.textPainter.textWidthBasis}\n  /// Defines how to measure the width of the rendered text.\n  /// {@endtemplate}\n  TextWidthBasis get textWidthBasis => _textWidthBasis;"
  },
  {
    "id" : "1385d7ec-dee8-4e27-880d-91195b8bcbd6",
    "prId" : 44622,
    "prUrl" : "https://github.com/flutter/flutter/pull/44622#pullrequestreview-320201681",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53fb269d-791e-4ca8-8606-39fb83a76f55",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "This already exists in the tree.  You should sync to head..\r\n\r\nI do like your doc comment better though, so you might keep that.",
        "createdAt" : "2019-11-20T19:02:38Z",
        "updatedAt" : "2019-11-20T20:53:15Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "64380976ea5ec21fe1c1517b4c3eff4cd7b6bca1",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +828,832 @@  /// This can potentially be expensive, since it needs to compute the full\n  /// layout before it is available.\n  TextRange getLineBoundary(TextPosition position) {\n    assert(!_needsLayout);\n    return _paragraph.getLineBoundary(position);"
  }
]