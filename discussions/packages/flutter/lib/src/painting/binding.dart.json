[
  {
    "id" : "06d95cba-1f51-4c04-9d21-79a07e339e64",
    "prId" : 22452,
    "prUrl" : "https://github.com/flutter/flutter/pull/22452#pullrequestreview-160042140",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad60af4f-d0aa-48dc-bd1b-e48a22a1a287",
        "parentId" : null,
        "authorId" : "adb5cc5c-9d1c-4103-8ffa-619d28e09399",
        "body" : "I'd like to test this, but wasn't seeing a good way to. This calls through to a static method and the effect of `decodedCacheRatioCap` is invisible to the dart layer.",
        "createdAt" : "2018-09-28T22:26:17Z",
        "updatedAt" : "2018-10-11T17:46:04Z",
        "lastEditedBy" : "adb5cc5c-9d1c-4103-8ffa-619d28e09399",
        "tags" : [
        ]
      }
    ],
    "commit" : "200f5801242ade835020ef6edd5021c7da3d8ace",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +76,80 @@\n  /// Calls through to [dart:ui] with [decodedCacheRatioCap] from [ImageCache].\n  Future<ui.Codec> instantiateImageCodec(Uint8List list) {\n    return ui.instantiateImageCodec(list, decodedCacheRatioCap: decodedCacheRatioCap);\n  }"
  },
  {
    "id" : "33e3465f-6614-40ee-ae93-68c3daf07b81",
    "prId" : 22452,
    "prUrl" : "https://github.com/flutter/flutter/pull/22452#pullrequestreview-164822720",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05c139e5-9e0f-481b-91f2-094265245c03",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "might be good to put this method on ImageCache itself, or put the configuration option on the binding, so that they're together. It's a bit weird to have the configuration so distant from the use site.",
        "createdAt" : "2018-10-06T00:14:44Z",
        "updatedAt" : "2018-10-11T17:46:04Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a071f91d-e06f-4078-b99a-a3f948ce1c63",
        "parentId" : "05c139e5-9e0f-481b-91f2-094265245c03",
        "authorId" : "adb5cc5c-9d1c-4103-8ffa-619d28e09399",
        "body" : "Moved it to the binding. I think that makes a bit more sense since this isn't really going to `ImageCache`, it's going to `Codec`.",
        "createdAt" : "2018-10-08T20:59:11Z",
        "updatedAt" : "2018-10-11T17:46:04Z",
        "lastEditedBy" : "adb5cc5c-9d1c-4103-8ffa-619d28e09399",
        "tags" : [
        ]
      },
      {
        "id" : "2226c6b0-270e-4d0b-ad58-9e5b31baaa7c",
        "parentId" : "05c139e5-9e0f-481b-91f2-094265245c03",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "SGTM.\r\n\r\nFWIW, the reason to put it on another object is that if you override this, you may not care about the cache ratio cap, but since it's on the superclass you can't get rid of it. If it was on its own object (or the image cache), you would replace the lot in one go (assuming that they implemented an interface that didn't include these fields, etc). But it's not important (and doing that would be a lot of faffing around for minimal gain anyway.)",
        "createdAt" : "2018-10-15T17:30:45Z",
        "updatedAt" : "2018-10-15T17:30:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "2d881074-b675-4689-a02e-8292ea834324",
        "parentId" : "05c139e5-9e0f-481b-91f2-094265245c03",
        "authorId" : "adb5cc5c-9d1c-4103-8ffa-619d28e09399",
        "body" : "OK, makes sense. I think it's probably better to keep this here for now still.",
        "createdAt" : "2018-10-15T17:50:55Z",
        "updatedAt" : "2018-10-15T17:50:55Z",
        "lastEditedBy" : "adb5cc5c-9d1c-4103-8ffa-619d28e09399",
        "tags" : [
        ]
      }
    ],
    "commit" : "200f5801242ade835020ef6edd5021c7da3d8ace",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +78,82 @@  Future<ui.Codec> instantiateImageCodec(Uint8List list) {\n    return ui.instantiateImageCodec(list, decodedCacheRatioCap: decodedCacheRatioCap);\n  }\n\n  @override"
  },
  {
    "id" : "3a5a4e21-3aa3-4306-9255-03a04d1c0386",
    "prId" : 28614,
    "prUrl" : "https://github.com/flutter/flutter/pull/28614#pullrequestreview-209363153",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30711ef2-2211-4916-9737-e97535c8fcad",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "\"\\`flutter drive\\`\" or \"Flutter driver\" probably",
        "createdAt" : "2019-02-28T23:08:50Z",
        "updatedAt" : "2019-02-28T23:08:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e438b74c-8da4-4e4f-8355-d5cd35497378",
        "parentId" : "30711ef2-2211-4916-9737-e97535c8fcad",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "See https://github.com/flutter/flutter/pull/28679",
        "createdAt" : "2019-02-28T23:19:33Z",
        "updatedAt" : "2019-02-28T23:19:33Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e01e15a79a97ede7e00448e12bdf3aebaec49fc",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +40,44 @@  /// [shaderWarmUp] to a custom [ShaderWarmUp] before calling [initInstances]\n  /// (usually before [runApp] for normal Flutter apps, and before\n  /// [enableFlutterDriverExtension] for Flutter drive tests). Paint the scene\n  /// in the custom [ShaderWarmUp] so Flutter can pre-compile and cache the\n  /// shaders during startup. The warm up is only costly (100ms-200ms,"
  },
  {
    "id" : "ad51b079-3081-407d-9189-55943a96248f",
    "prId" : 38930,
    "prUrl" : "https://github.com/flutter/flutter/pull/38930#pullrequestreview-285623760",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53773715-7c5e-4518-a535-57f4c27fd9e9",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe add a little more details here, e.g. objects that show text and/or measure text (e.g. via [TextPainter]) should listen to this and redraw/remeasure.",
        "createdAt" : "2019-09-09T16:21:49Z",
        "updatedAt" : "2019-09-24T16:42:06Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "75e1926c01e4512e6b3a7a81ca90c92ccd87cbae",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +86,90 @@  /// System fonts can change when the system installs or removes new font. To\n  /// correctly reflect the change, it is important to relayout text related\n  /// widgets when this happens.\n  ///\n  /// Objects that show text and/or measure text (e.g. via [TextPainter] or"
  },
  {
    "id" : "490d1ddd-5cd5-477d-95bd-64378961caaa",
    "prId" : 41415,
    "prUrl" : "https://github.com/flutter/flutter/pull/41415#pullrequestreview-295279342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91a6609b-bcd3-4fab-b915-235b98811cad",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "assert cacheWidth and cacheHeight are null or > 0",
        "createdAt" : "2019-09-30T22:10:13Z",
        "updatedAt" : "2019-10-15T00:14:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "db075f3b795792d92f1bd17eeba76c5325fddcc6",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +86,90 @@    assert(cacheWidth == null || cacheWidth > 0);\n    assert(cacheHeight == null || cacheHeight > 0);\n    return ui.instantiateImageCodec(\n      bytes,\n      targetWidth: cacheWidth,"
  },
  {
    "id" : "f59d988a-f76c-49e8-9575-b61255203fe2",
    "prId" : 41415,
    "prUrl" : "https://github.com/flutter/flutter/pull/41415#pullrequestreview-295279655",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9271f80-434b-45b0-9c97-33e932e83e07",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "when you add arguments, you should document them. :-)",
        "createdAt" : "2019-09-30T22:10:45Z",
        "updatedAt" : "2019-10-15T00:14:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "553637b8-cd07-490c-91cf-e3f231a449d6",
        "parentId" : "f9271f80-434b-45b0-9c97-33e932e83e07",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(especially here where the semantics are different than what you're forwarding to)",
        "createdAt" : "2019-09-30T22:11:05Z",
        "updatedAt" : "2019-10-15T00:14:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "db075f3b795792d92f1bd17eeba76c5325fddcc6",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +82,86 @@  Future<ui.Codec> instantiateImageCodec(Uint8List bytes, {\n    int cacheWidth,\n    int cacheHeight,\n  }) {\n    assert(cacheWidth == null || cacheWidth > 0);"
  },
  {
    "id" : "15fca571-43e2-47f8-b230-ebfb337bc162",
    "prId" : 41415,
    "prUrl" : "https://github.com/flutter/flutter/pull/41415#pullrequestreview-298431433",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ddfb1d2-d720-4f86-9500-1ffb1265fe80",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "what if you only specify one? are negative values valid? etc",
        "createdAt" : "2019-10-07T21:48:59Z",
        "updatedAt" : "2019-10-15T00:14:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "db075f3b795792d92f1bd17eeba76c5325fddcc6",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +73,77 @@  ///\n  /// The [cacheWidth] and [cacheHeight] parameters, when specified, indicate the\n  /// size to decode the image to.\n  ///\n  /// Both [cacheWidth] and [cacheHeight] must be positive values greater than or"
  },
  {
    "id" : "d6cb4ed0-525c-4ab4-b03c-3a1e27e2532e",
    "prId" : 41415,
    "prUrl" : "https://github.com/flutter/flutter/pull/41415#pullrequestreview-300414995",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49ef49e0-7f18-4278-a4e0-27b48a838119",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "is it ok for both to be null? docs say no, asserts say yes",
        "createdAt" : "2019-10-10T20:49:42Z",
        "updatedAt" : "2019-10-15T00:14:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "5c4fd9b3-187f-4aa9-9273-bcae0ddc922f",
        "parentId" : "49ef49e0-7f18-4278-a4e0-27b48a838119",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "Updated docs.",
        "createdAt" : "2019-10-11T00:12:52Z",
        "updatedAt" : "2019-10-15T00:14:54Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "db075f3b795792d92f1bd17eeba76c5325fddcc6",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +90,94 @@      targetWidth: cacheWidth,\n      targetHeight: cacheHeight,\n    );\n  }\n"
  },
  {
    "id" : "d19b957f-3fbb-4763-b8e3-89599c8b5ca2",
    "prId" : 41415,
    "prUrl" : "https://github.com/flutter/flutter/pull/41415#pullrequestreview-301593348",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bdcc19b9-5465-45ed-b38c-be190bf5a782",
        "parentId" : null,
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "I added this",
        "createdAt" : "2019-10-14T23:53:41Z",
        "updatedAt" : "2019-10-15T00:14:54Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "db075f3b795792d92f1bd17eeba76c5325fddcc6",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +76,80 @@  ///\n  /// Both [cacheWidth] and [cacheHeight] must be positive values greater than or\n  /// equal to 1 or null. It is valid to specify only one of [cacheWidth] and\n  /// [cacheHeight] with the other remaining null, in which case the omitted\n  /// dimension will decode to its original size. When both are null or omitted,"
  },
  {
    "id" : "d1237cae-5414-48ca-b66d-a394272a0069",
    "prId" : 53422,
    "prUrl" : "https://github.com/flutter/flutter/pull/53422#pullrequestreview-383097891",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67a7aefc-c67d-43b8-9693-8b0e477c09e6",
        "parentId" : null,
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Nit: formerly known as the GPU thread",
        "createdAt" : "2020-03-27T18:18:32Z",
        "updatedAt" : "2020-04-02T17:49:14Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ace1997eeb5280bffd8a647390192bb71f2c04d8",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +47,51 @@  /// Currently the warm-up happens synchronously on the raster thread which\n  /// means the rendering of the first frame on the raster thread will be\n  /// postponed until the warm-up is finished.\n  ///\n  /// See also:"
  },
  {
    "id" : "292a6975-8910-43d9-bd91-e75ef40109cb",
    "prId" : 59856,
    "prUrl" : "https://github.com/flutter/flutter/pull/59856#pullrequestreview-434348014",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90148d37-e537-46be-b3ec-b4792df66cf7",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Can you add a sentence about this parameter to the doc comment above?",
        "createdAt" : "2020-06-19T19:20:54Z",
        "updatedAt" : "2020-06-19T22:32:38Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "0699954d-3cdf-4e57-8473-0d835a823f19",
        "parentId" : "90148d37-e537-46be-b3ec-b4792df66cf7",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "I updated the docstring in general here - there were some old no-longer-existant things in there and some formatting issues, as well as something that's changed about aspect ratio preservation.  PTAL",
        "createdAt" : "2020-06-19T21:24:01Z",
        "updatedAt" : "2020-06-19T22:32:38Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3083f90f519a9105426668b891c8e803f066119",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +93,97 @@    int cacheWidth,\n    int cacheHeight,\n    bool allowUpscaling = false,\n  }) {\n    assert(cacheWidth == null || cacheWidth > 0);"
  },
  {
    "id" : "9288fd47-aa94-4fba-8aa3-30cb34293c53",
    "prId" : 62696,
    "prUrl" : "https://github.com/flutter/flutter/pull/62696#pullrequestreview-460511805",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87c1cd58-400d-4991-bbf3-91326a24a2bc",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "When is the imageCache ever expected to be null?\r\n\r\n/cc @dnfield ",
        "createdAt" : "2020-08-03T17:16:37Z",
        "updatedAt" : "2020-08-04T06:54:24Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "c945513d-2b34-48d6-8ff2-0673784230ee",
        "parentId" : "87c1cd58-400d-4991-bbf3-91326a24a2bc",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "No but it gets created by a virtual method. Can we make it late?",
        "createdAt" : "2020-08-03T17:51:25Z",
        "updatedAt" : "2020-08-04T06:54:24Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "c971c410-a82a-495e-8af7-b18d2c6f59c6",
        "parentId" : "87c1cd58-400d-4991-bbf3-91326a24a2bc",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "I made it nullable because L117 there's `imageCache?.clear();`. I will change it to late non-nullable",
        "createdAt" : "2020-08-03T19:24:57Z",
        "updatedAt" : "2020-08-04T06:54:24Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "b221f8fd-d09b-49ac-a7d4-f3c256d0955b",
        "parentId" : "87c1cd58-400d-4991-bbf3-91326a24a2bc",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "This change makes the following test fails:\r\n\r\n```dart\r\n  test('PaintingBinding with memory pressure before initInstances', () {\r\n    // Observed in devicelab: the device sends a memory pressure event to us\r\n    // after PaintingBinding has been created but before initInstances called,\r\n    // meaning the imageCache member is still null.\r\n    final PaintingBinding binding = TestPaintingBinding();\r\n    expect(binding.imageCache, null);\r\n    binding.handleMemoryPressure();\r\n    expect(binding.imageCache, null);\r\n    binding.initInstances();\r\n    expect(binding.imageCache, isNotNull);\r\n    expect(binding.imageCache.currentSize, 0);\r\n  });\r\n```\r\n\r\nI guess I can remove it?",
        "createdAt" : "2020-08-03T19:35:00Z",
        "updatedAt" : "2020-08-04T06:54:24Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "9dc0fed9-2574-496c-b98d-97f157c7028b",
        "parentId" : "87c1cd58-400d-4991-bbf3-91326a24a2bc",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Ahh I remember now.  This caused flakes sometimes because the memory pressure would get processed before finishing binding initialization on rare occasions.  I guess we have to leave it as nullable.",
        "createdAt" : "2020-08-03T19:36:34Z",
        "updatedAt" : "2020-08-04T06:54:24Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "ceef2262-3d92-4ae2-8f6f-d1726a41819b",
        "parentId" : "87c1cd58-400d-4991-bbf3-91326a24a2bc",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Please don't remove this test, this was a real failure. @dnfield I think re-ordered some of the initialization but I don't think it is solved.\r\n\r\nSpecifically, we can have a queued up message for us when initializing the binding, which might be a low memory event. I believe that gets forwarded immediately, but due to the binding order will run before the image cache is initialized. That doesn't mean that the image cache needs to be nullable, since this state isn't generally observable - but you do need to track whether it has been initialized somewhere.",
        "createdAt" : "2020-08-03T19:37:38Z",
        "updatedAt" : "2020-08-04T06:54:24Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "ae23dbc8-c49a-4f87-8dd8-a287dd0a759a",
        "parentId" : "87c1cd58-400d-4991-bbf3-91326a24a2bc",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Something like:\r\n```dart\r\nlate ImageCache imageCache;\r\nbool _imageCacheSetup = false;\r\n\r\n```",
        "createdAt" : "2020-08-03T19:38:35Z",
        "updatedAt" : "2020-08-04T06:54:24Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "4a014582-636e-4dcb-82a0-97ef8d309288",
        "parentId" : "87c1cd58-400d-4991-bbf3-91326a24a2bc",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "ok, after reading more carefully the comment I understood that it was not a good idea to remove it :)",
        "createdAt" : "2020-08-03T19:39:29Z",
        "updatedAt" : "2020-08-04T06:54:24Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "d5a871ba-ef6e-425e-b6f2-f9255d7c7448",
        "parentId" : "87c1cd58-400d-4991-bbf3-91326a24a2bc",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "@jonahwilliams I'm not sure to follow. Do you expect a change in this PR or are you just talking about a future change that could happen?",
        "createdAt" : "2020-08-03T19:48:02Z",
        "updatedAt" : "2020-08-04T06:54:24Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "6d8c84c7-d83a-4c62-a623-b1a7fd02f963",
        "parentId" : "87c1cd58-400d-4991-bbf3-91326a24a2bc",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "nullable is fine for now",
        "createdAt" : "2020-08-04T05:47:17Z",
        "updatedAt" : "2020-08-04T06:54:24Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "934a64f6650c8ac5bb6247a29b78120439c62e0e",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +60,64 @@  /// The image cache is created during startup by the [createImageCache]\n  /// method.\n  ImageCache? get imageCache => _imageCache;\n  ImageCache? _imageCache;\n"
  },
  {
    "id" : "884494a2-72c4-4fb5-acfc-318d222594b7",
    "prId" : 62696,
    "prUrl" : "https://github.com/flutter/flutter/pull/62696#pullrequestreview-460238944",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43a4398b-ac29-4350-bb4c-63f942419a14",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Same question about the image cache here.\r\n\r\n@dnfield (unrelated to this PR): Why do we expose the image cache twice: as part of the binding and as a global? Should one of them be deprecated?",
        "createdAt" : "2020-08-03T17:18:24Z",
        "updatedAt" : "2020-08-04T06:54:24Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "0c8174ad-ff71-4fa5-bae3-3203d3f21a8d",
        "parentId" : "43a4398b-ac29-4350-bb4c-63f942419a14",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "That predates my work.  @jonahwilliams might know.  I would be fine with deprecating the global.",
        "createdAt" : "2020-08-03T17:51:59Z",
        "updatedAt" : "2020-08-04T06:54:24Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "3c19d035-46aa-401b-823b-7f0cbc2f99a8",
        "parentId" : "43a4398b-ac29-4350-bb4c-63f942419a14",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I don't quite remember. It might have been global before we moved it into a binding",
        "createdAt" : "2020-08-03T17:56:42Z",
        "updatedAt" : "2020-08-04T06:54:24Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "4571a0b3-27da-4e0e-b79e-25cf937db78c",
        "parentId" : "43a4398b-ac29-4350-bb4c-63f942419a14",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Did some digging, looks like it was moved into the binding in https://github.com/flutter/flutter/pull/13409 and the global was kept. I'll prepare a PR to deprecate the global similarly to how we deprecated the global `defaultBinaryMessenger`.",
        "createdAt" : "2020-08-03T18:11:01Z",
        "updatedAt" : "2020-08-04T06:54:24Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "934a64f6650c8ac5bb6247a29b78120439c62e0e",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +168,172 @@/// The image cache is created during startup by the [PaintingBinding]'s\n/// [PaintingBinding.createImageCache] method.\nImageCache? get imageCache => PaintingBinding.instance!.imageCache;"
  }
]