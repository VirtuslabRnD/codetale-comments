[
  {
    "id" : "06d95cba-1f51-4c04-9d21-79a07e339e64",
    "prId" : 22452,
    "prUrl" : "https://github.com/flutter/flutter/pull/22452#pullrequestreview-160042140",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad60af4f-d0aa-48dc-bd1b-e48a22a1a287",
        "parentId" : null,
        "authorId" : "adb5cc5c-9d1c-4103-8ffa-619d28e09399",
        "body" : "I'd like to test this, but wasn't seeing a good way to. This calls through to a static method and the effect of `decodedCacheRatioCap` is invisible to the dart layer.",
        "createdAt" : "2018-09-28T22:26:17Z",
        "updatedAt" : "2018-10-11T17:46:04Z",
        "lastEditedBy" : "adb5cc5c-9d1c-4103-8ffa-619d28e09399",
        "tags" : [
        ]
      }
    ],
    "commit" : "200f5801242ade835020ef6edd5021c7da3d8ace",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +76,80 @@\n  /// Calls through to [dart:ui] with [decodedCacheRatioCap] from [ImageCache].\n  Future<ui.Codec> instantiateImageCodec(Uint8List list) {\n    return ui.instantiateImageCodec(list, decodedCacheRatioCap: decodedCacheRatioCap);\n  }"
  },
  {
    "id" : "33e3465f-6614-40ee-ae93-68c3daf07b81",
    "prId" : 22452,
    "prUrl" : "https://github.com/flutter/flutter/pull/22452#pullrequestreview-164822720",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05c139e5-9e0f-481b-91f2-094265245c03",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "might be good to put this method on ImageCache itself, or put the configuration option on the binding, so that they're together. It's a bit weird to have the configuration so distant from the use site.",
        "createdAt" : "2018-10-06T00:14:44Z",
        "updatedAt" : "2018-10-11T17:46:04Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a071f91d-e06f-4078-b99a-a3f948ce1c63",
        "parentId" : "05c139e5-9e0f-481b-91f2-094265245c03",
        "authorId" : "adb5cc5c-9d1c-4103-8ffa-619d28e09399",
        "body" : "Moved it to the binding. I think that makes a bit more sense since this isn't really going to `ImageCache`, it's going to `Codec`.",
        "createdAt" : "2018-10-08T20:59:11Z",
        "updatedAt" : "2018-10-11T17:46:04Z",
        "lastEditedBy" : "adb5cc5c-9d1c-4103-8ffa-619d28e09399",
        "tags" : [
        ]
      },
      {
        "id" : "2226c6b0-270e-4d0b-ad58-9e5b31baaa7c",
        "parentId" : "05c139e5-9e0f-481b-91f2-094265245c03",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "SGTM.\r\n\r\nFWIW, the reason to put it on another object is that if you override this, you may not care about the cache ratio cap, but since it's on the superclass you can't get rid of it. If it was on its own object (or the image cache), you would replace the lot in one go (assuming that they implemented an interface that didn't include these fields, etc). But it's not important (and doing that would be a lot of faffing around for minimal gain anyway.)",
        "createdAt" : "2018-10-15T17:30:45Z",
        "updatedAt" : "2018-10-15T17:30:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "2d881074-b675-4689-a02e-8292ea834324",
        "parentId" : "05c139e5-9e0f-481b-91f2-094265245c03",
        "authorId" : "adb5cc5c-9d1c-4103-8ffa-619d28e09399",
        "body" : "OK, makes sense. I think it's probably better to keep this here for now still.",
        "createdAt" : "2018-10-15T17:50:55Z",
        "updatedAt" : "2018-10-15T17:50:55Z",
        "lastEditedBy" : "adb5cc5c-9d1c-4103-8ffa-619d28e09399",
        "tags" : [
        ]
      }
    ],
    "commit" : "200f5801242ade835020ef6edd5021c7da3d8ace",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +78,82 @@  Future<ui.Codec> instantiateImageCodec(Uint8List list) {\n    return ui.instantiateImageCodec(list, decodedCacheRatioCap: decodedCacheRatioCap);\n  }\n\n  @override"
  },
  {
    "id" : "3a5a4e21-3aa3-4306-9255-03a04d1c0386",
    "prId" : 28614,
    "prUrl" : "https://github.com/flutter/flutter/pull/28614#pullrequestreview-209363153",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30711ef2-2211-4916-9737-e97535c8fcad",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "\"\\`flutter drive\\`\" or \"Flutter driver\" probably",
        "createdAt" : "2019-02-28T23:08:50Z",
        "updatedAt" : "2019-02-28T23:08:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e438b74c-8da4-4e4f-8355-d5cd35497378",
        "parentId" : "30711ef2-2211-4916-9737-e97535c8fcad",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "See https://github.com/flutter/flutter/pull/28679",
        "createdAt" : "2019-02-28T23:19:33Z",
        "updatedAt" : "2019-02-28T23:19:33Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e01e15a79a97ede7e00448e12bdf3aebaec49fc",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +40,44 @@  /// [shaderWarmUp] to a custom [ShaderWarmUp] before calling [initInstances]\n  /// (usually before [runApp] for normal Flutter apps, and before\n  /// [enableFlutterDriverExtension] for Flutter drive tests). Paint the scene\n  /// in the custom [ShaderWarmUp] so Flutter can pre-compile and cache the\n  /// shaders during startup. The warm up is only costly (100ms-200ms,"
  },
  {
    "id" : "ad51b079-3081-407d-9189-55943a96248f",
    "prId" : 38930,
    "prUrl" : "https://github.com/flutter/flutter/pull/38930#pullrequestreview-285623760",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53773715-7c5e-4518-a535-57f4c27fd9e9",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe add a little more details here, e.g. objects that show text and/or measure text (e.g. via [TextPainter]) should listen to this and redraw/remeasure.",
        "createdAt" : "2019-09-09T16:21:49Z",
        "updatedAt" : "2019-09-24T16:42:06Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "75e1926c01e4512e6b3a7a81ca90c92ccd87cbae",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +86,90 @@  /// System fonts can change when the system installs or removes new font. To\n  /// correctly reflect the change, it is important to relayout text related\n  /// widgets when this happens.\n  ///\n  /// Objects that show text and/or measure text (e.g. via [TextPainter] or"
  }
]