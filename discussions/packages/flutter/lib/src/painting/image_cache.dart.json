[
  {
    "id" : "d8865a55-a807-4c5c-a6fa-5c784464f87d",
    "prId" : 18135,
    "prUrl" : "https://github.com/flutter/flutter/pull/18135#pullrequestreview-125767875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8af8bea1-4508-463e-b93b-9191356f9d53",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "~~Maybe call this length, for consistency with Map?~~",
        "createdAt" : "2018-06-04T22:43:53Z",
        "updatedAt" : "2018-06-08T01:36:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "2ae25414-37da-43c0-926d-7225987efd9a",
        "parentId" : "8af8bea1-4508-463e-b93b-9191356f9d53",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "oh but then you lose the symmetry with maximumSize.\r\nSo yeah, I'd keep this as you have it.",
        "createdAt" : "2018-06-04T22:45:17Z",
        "updatedAt" : "2018-06-08T01:36:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bb4d981104f41656b0d478c8a13cf1aa1a946c3",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +57,61 @@\n  /// The current number of cached entries.\n  int get currentSize => _cache.length;\n\n  /// Maximum size of entries to store in the cache in bytes."
  },
  {
    "id" : "f76af1ff-6587-4f22-996c-3f75ebb0039e",
    "prId" : 18135,
    "prUrl" : "https://github.com/flutter/flutter/pull/18135#pullrequestreview-125792424",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6db185b-dd2e-46eb-a2a2-9a35c3c36e69",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "You don't seem to actually use this map.",
        "createdAt" : "2018-06-04T22:52:15Z",
        "updatedAt" : "2018-06-08T01:36:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e342d6eb-0515-49bd-b2d0-867a18e5f699",
        "parentId" : "d6db185b-dd2e-46eb-a2a2-9a35c3c36e69",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Fixed - should be used for de-duping multiple requests for the same image key",
        "createdAt" : "2018-06-05T01:19:44Z",
        "updatedAt" : "2018-06-08T01:36:43Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bb4d981104f41656b0d478c8a13cf1aa1a946c3",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +27,31 @@/// subclasses automatically handle the caching of images.\nclass ImageCache {\n  final Map<Object, ImageStreamCompleter> _pendingImages = <Object, ImageStreamCompleter>{};\n  final Map<Object, _CachedImage> _cache = <Object, _CachedImage>{};\n"
  },
  {
    "id" : "c961a580-4c3f-4560-89db-22c34a3dddec",
    "prId" : 23860,
    "prUrl" : "https://github.com/flutter/flutter/pull/23860#pullrequestreview-172102689",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0eae5dca-2800-4fff-9f37-088dacf709a8",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Two questions:\r\n\r\n- Does the returned value still make sense if I evict an image that has failed to load? Currently, evict will return false and the image will not be removed from pending images. With this change, it will be removed at still return false.\r\n\r\n- Removing an image from pending won't prevent it from adding itself to the cache later if it eventually completes. Should this also remove the cache listener to prevent this from happening, or is it a desirable behavior?\r\n",
        "createdAt" : "2018-11-06T07:19:04Z",
        "updatedAt" : "2019-01-07T07:04:57Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "8d89d4cd-7967-4c25-8809-f13fa99102ae",
        "parentId" : "0eae5dca-2800-4fff-9f37-088dacf709a8",
        "authorId" : "b70035f0-e3cc-47e9-8cfa-1e6bed955871",
        "body" : "* I think the behavior of the evict method should be as follows:\r\n  When the image is in the cache the behavior should be as it is now.\r\n  When the image is not in the cache but in the pending images it should be removed from the pending images and `true` should be returned.\r\n  The cache size should only be adjusted when the image is in the cache (because pending images do not have an effect on the cache size).\r\n  I think to return `true` when the image is still pending is completely fine because the user of the cache does maybe not know if the image is already loaded or not, he only wants it to be removed from it.\r\n  \r\n* In my opinion it would not be correct when the image can add itself to the cache after it is evicted from it. This could lead to unexpected behavior.\r\n  So yes, removing the listener would probably be the right choice.\r\n  For that the inner function `listener` must be moved to class-level. But if it would be private I think there should not be any implications.\r\n  \r\nIf you agree I can make the changes.",
        "createdAt" : "2018-11-06T09:39:29Z",
        "updatedAt" : "2019-01-07T07:04:57Z",
        "lastEditedBy" : "b70035f0-e3cc-47e9-8cfa-1e6bed955871",
        "tags" : [
        ]
      },
      {
        "id" : "0bf5827c-9271-41f8-bf01-ef57f97914eb",
        "parentId" : "0eae5dca-2800-4fff-9f37-088dacf709a8",
        "authorId" : "b70035f0-e3cc-47e9-8cfa-1e6bed955871",
        "body" : "Minor addition: It's not possible with moving the `listener` method to class-level. I solved it with another approach: I introduced a _PendingImage class that holds the completer and a reference to the `listener `method (used for later removal in the evict-case).",
        "createdAt" : "2018-11-06T10:36:46Z",
        "updatedAt" : "2019-01-07T07:04:57Z",
        "lastEditedBy" : "b70035f0-e3cc-47e9-8cfa-1e6bed955871",
        "tags" : [
        ]
      },
      {
        "id" : "3053a6dc-d781-4382-b6c2-f11655279669",
        "parentId" : "0eae5dca-2800-4fff-9f37-088dacf709a8",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "That sounds like a reasonable approach",
        "createdAt" : "2018-11-06T16:16:44Z",
        "updatedAt" : "2019-01-07T07:04:57Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "98f7304b2c4907ccc3c60b04874b1424fe622e35",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +116,120 @@  ///\n  ///  * [ImageProvider], for providing images to the [Image] widget.\n  bool evict(Object key) {\n    final _PendingImage pendingImage = _pendingImages.remove(key);\n    if (pendingImage != null) {"
  }
]