[
  {
    "id" : "42edeff7-97d3-4dde-85a0-12bd6e8079c1",
    "prId" : 12294,
    "prUrl" : "https://github.com/flutter/flutter/pull/12294#pullrequestreview-65916042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c465e16b-cd99-4541-b6ae-a395fef9c8a3",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Aren't these asserts covered by the `canMerge()` assert?  ... not that extra asserts hurt anything...",
        "createdAt" : "2017-09-28T03:10:00Z",
        "updatedAt" : "2017-09-28T16:15:28Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "fb60a49a-512a-443b-a95a-f5344e726906",
        "parentId" : "c465e16b-cd99-4541-b6ae-a395fef9c8a3",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I work on the principle that asserts don't trust the rest of the code, because if we trusted the rest of the code, we wouldn't need any asserts. So this is basically verifying that canMerge isn't busted.",
        "createdAt" : "2017-09-28T16:12:59Z",
        "updatedAt" : "2017-09-28T16:15:28Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "99c53a9702c11ece185c68743e1034fb06e3cb98",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +97,101 @@    if (b == null)\n      return a;\n    assert(a.color == b.color);\n    assert(a.style == b.style);\n    return new BorderSide("
  },
  {
    "id" : "c2694cdc-5091-4822-96e0-1413e6392bb7",
    "prId" : 12327,
    "prUrl" : "https://github.com/flutter/flutter/pull/12327#pullrequestreview-66276162",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c277a68f-94b5-49f0-b183-b21ada8db95f",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Docs please",
        "createdAt" : "2017-09-29T21:21:35Z",
        "updatedAt" : "2017-09-29T21:50:09Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "fe41529e-55e3-4378-8ddb-d9cd7486bb52",
        "parentId" : "c277a68f-94b5-49f0-b183-b21ada8db95f",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Docs are here and will be merged in a subsequent PR, I'm just merging that branch piecemeal:\r\nhttps://github.com/Hixie/flutter/blob/borders/packages/flutter/lib/src/painting/borders.dart#L279",
        "createdAt" : "2017-09-29T21:26:32Z",
        "updatedAt" : "2017-09-29T21:50:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7de82549ecf7fa21cb761a0fba02e100eed0b901",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +411,415 @@  }\n\n  Border add(Border typedOther) {\n    if (BorderSide.canMerge(top, typedOther.top) &&\n        BorderSide.canMerge(right, typedOther.right) &&"
  },
  {
    "id" : "8bd6b317-4e14-409f-96d0-b90f19e10ce5",
    "prId" : 12327,
    "prUrl" : "https://github.com/flutter/flutter/pull/12327#pullrequestreview-66276306",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65042455-a1f1-4d10-91f5-6e5a8d3414b2",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Why not assert versus returning null?",
        "createdAt" : "2017-09-29T21:21:54Z",
        "updatedAt" : "2017-09-29T21:50:09Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "67404709-adae-44f0-b06f-59c6f1972ce8",
        "parentId" : "65042455-a1f1-4d10-91f5-6e5a8d3414b2",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "In the full branch, if add() returns null then a CompoundBorder is generated instead:\r\nhttps://github.com/Hixie/flutter/blob/borders/packages/flutter/lib/src/painting/borders.dart#L300",
        "createdAt" : "2017-09-29T21:27:15Z",
        "updatedAt" : "2017-09-29T21:50:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7de82549ecf7fa21cb761a0fba02e100eed0b901",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +418,422 @@      return Border.merge(this, typedOther);\n    }\n    return null;\n  }\n"
  },
  {
    "id" : "57812875-df20-461e-873b-5c3fc61a573d",
    "prId" : 12327,
    "prUrl" : "https://github.com/flutter/flutter/pull/12327#pullrequestreview-66276342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6dfbd58e-a151-4f55-a598-77fdf132ecd2",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Can we have `top.style` be `none` but have a solid style on another edge?",
        "createdAt" : "2017-09-29T21:24:50Z",
        "updatedAt" : "2017-09-29T21:50:09Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "8d2fbb8e-1bff-4389-9260-56437a903bde",
        "parentId" : "6dfbd58e-a151-4f55-a598-77fdf132ecd2",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "not if isUniform is true",
        "createdAt" : "2017-09-29T21:27:26Z",
        "updatedAt" : "2017-09-29T21:50:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7de82549ecf7fa21cb761a0fba02e100eed0b901",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +470,474 @@    if (isUniform) {\n      switch (top.style) {\n        case BorderStyle.none:\n          return;\n        case BorderStyle.solid:"
  },
  {
    "id" : "28f862fe-e78c-4e35-8ebd-c2d15aa13e5e",
    "prId" : 12335,
    "prUrl" : "https://github.com/flutter/flutter/pull/12335#pullrequestreview-66521263",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6368ab1d-6ab2-46b2-9bf9-8e1390e7402d",
        "parentId" : null,
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Here and below: what's the valid range of `t`? Specifically, are negatives permitted?",
        "createdAt" : "2017-09-30T00:35:40Z",
        "updatedAt" : "2017-10-02T17:01:15Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "9ab23f60-6aa2-4097-948c-d3def0909781",
        "parentId" : "6368ab1d-6ab2-46b2-9bf9-8e1390e7402d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Any (finite) value is valid. I'm reluctant to add this information here because if we add it here we should add it to all other scale (and lerp?) methods, but maybe we should do that (in another PR)? Please file a bug if you think we should do that, and I'll make sure it's done.",
        "createdAt" : "2017-10-02T16:55:40Z",
        "updatedAt" : "2017-10-02T17:01:15Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7cfa9ae740948d5d1fe1672413947979ccf4efad",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +310,314 @@  }\n\n  /// Creates a new border with the widths of this border multiplied by `t`.\n  ShapeBorder scale(double t);\n"
  },
  {
    "id" : "caaa1e99-fd6e-4d71-95f9-4af1e9bc6a92",
    "prId" : 12335,
    "prUrl" : "https://github.com/flutter/flutter/pull/12335#pullrequestreview-66521763",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f29c76f6-8dcc-4e46-b475-07ddb725a085",
        "parentId" : null,
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "nit: would `[add]` be overboard here? :)",
        "createdAt" : "2017-09-30T00:53:08Z",
        "updatedAt" : "2017-10-02T17:01:15Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "908d0fd5-0392-4f7c-8b26-f65efe461f65",
        "parentId" : "f29c76f6-8dcc-4e46-b475-07ddb725a085",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It would be wrong, no? That would point to ShapeBorder.add, whereas what you want here is Path.addPath (as mentioned at the end in parentheses).",
        "createdAt" : "2017-10-02T16:57:32Z",
        "updatedAt" : "2017-10-02T17:01:15Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7cfa9ae740948d5d1fe1672413947979ccf4efad",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +370,374 @@  ///\n  /// To obtain a [Path] that describes the area of the border itself, set the\n  /// [Path.fillType] of the returned object to [PathFillType.evenOdd], and add\n  /// to this object the path returned from [getInnerPath] (using\n  /// [Path.addPath])."
  }
]