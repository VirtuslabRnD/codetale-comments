[
  {
    "id" : "eacec0bf-56b1-449a-ad06-f79a9ee309db",
    "prId" : 27660,
    "prUrl" : "https://github.com/flutter/flutter/pull/27660#pullrequestreview-206457670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac5a49cb-9ca3-4bbb-99c9-1719514b7d2c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "missing license",
        "createdAt" : "2019-02-21T01:24:55Z",
        "updatedAt" : "2019-02-22T20:53:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "d41f828c-dfa3-411d-bf0f-92bf11e055a2",
        "parentId" : "ac5a49cb-9ca3-4bbb-99c9-1719514b7d2c",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "consider adding a test that verifies that all source files have a license",
        "createdAt" : "2019-02-21T01:25:07Z",
        "updatedAt" : "2019-02-22T20:53:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e18a5611-0234-4234-9c77-3f35e236a63a",
        "parentId" : "ac5a49cb-9ca3-4bbb-99c9-1719514b7d2c",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "License added. Will consider adding a test in a separate PR.",
        "createdAt" : "2019-02-21T18:05:24Z",
        "updatedAt" : "2019-02-22T20:53:10Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "cea0143e15b3136a24568488573bcb868b1475b4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3,7 @@// found in the LICENSE file.\n\nimport 'dart:developer';\nimport 'dart:ui' as ui;\n"
  },
  {
    "id" : "5cb8f5ee-a77a-46f8-b184-119c8004758f",
    "prId" : 27660,
    "prUrl" : "https://github.com/flutter/flutter/pull/27660#pullrequestreview-206457670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c178111-a045-4f70-86c0-1c8ece02df57",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "> Having that time as a startup latency is much better than having a jank in the middle of an animation.\r\n\r\nI think we should say it's \"often\" better, and make sure we provide a way for people to opt-out.",
        "createdAt" : "2019-02-21T01:26:07Z",
        "updatedAt" : "2019-02-22T20:53:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "632e5fd9-797a-45c0-a21d-3d4d82fe62ef",
        "parentId" : "3c178111-a045-4f70-86c0-1c8ece02df57",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Done. And added \"If no warm up is desired (e.g., when the startup latency is crucial), send a custom ShaderWarmUp with an empty [warmUpOnCanvas] to [runApp].\"",
        "createdAt" : "2019-02-21T18:15:03Z",
        "updatedAt" : "2019-02-22T20:53:10Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "cea0143e15b3136a24568488573bcb868b1475b4",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@/// compile the corresponding shader. The compilation can be slow (20ms-200ms).\n/// Having that time as a startup latency is often better than having a jank in\n/// the middle of an animation.\n///\n/// Therefore, we use this during the [PaintingBinding.initInstances] call to"
  },
  {
    "id" : "f1e3723f-c685-4497-ba0e-30b0171032d5",
    "prId" : 27660,
    "prUrl" : "https://github.com/flutter/flutter/pull/27660#pullrequestreview-206457670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "461785c2-6a81-413c-b9bf-790eb27151ff",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "s/copied/based on the path/",
        "createdAt" : "2019-02-21T01:31:56Z",
        "updatedAt" : "2019-02-22T20:53:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "f7b4299d-2d56-433e-a4e6-f61e9283c48b",
        "parentId" : "461785c2-6a81-413c-b9bf-790eb27151ff",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Done.",
        "createdAt" : "2019-02-21T18:34:57Z",
        "updatedAt" : "2019-02-22T20:53:10Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "cea0143e15b3136a24568488573bcb868b1475b4",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +94,98 @@\n    // The following path is based on\n    // https://skia.org/user/api/SkCanvas_Reference#SkCanvas_drawPath\n    final ui.Path path = ui.Path();\n    path.moveTo(20.0, 60.0);"
  },
  {
    "id" : "7dcbddc9-2649-4949-b37e-4528f48b0610",
    "prId" : 28614,
    "prUrl" : "https://github.com/flutter/flutter/pull/28614#pullrequestreview-208909705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "831f1fea-fd14-40cf-8398-517e2b9ed24a",
        "parentId" : null,
        "authorId" : "29909713-5424-4233-a02b-b02672141af4",
        "body" : "drive by: I wonder how I will ever know if I can modify/remove this code?   A comment might be warranted.",
        "createdAt" : "2019-02-28T02:41:38Z",
        "updatedAt" : "2019-02-28T18:53:42Z",
        "lastEditedBy" : "29909713-5424-4233-a02b-b02672141af4",
        "tags" : [
        ]
      },
      {
        "id" : "541dc5c1-7b2f-46d0-b72a-5ac0a380659d",
        "parentId" : "831f1fea-fd14-40cf-8398-517e2b9ed24a",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Good question. I've added additional comments/docs to address this question.\r\n\r\nWriting (English) is not one of my strongest skills so it may still be suboptimal. But I'm very happy to learn and improve that skill. Please let me know if you have further suggestions ðŸ˜„ ",
        "createdAt" : "2019-02-28T06:38:44Z",
        "updatedAt" : "2019-02-28T18:53:42Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e01e15a79a97ede7e00448e12bdf3aebaec49fc",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +121,125 @@    path.quadraticBezierTo(60.0, 60.0, 20.0, 60.0);\n\n    final ui.Path convexPath = ui.Path();\n    convexPath.moveTo(20.0, 30.0);\n    convexPath.lineTo(40.0, 20.0);"
  },
  {
    "id" : "b0667c18-9797-4a8c-9f56-8e236b6bcfba",
    "prId" : 28614,
    "prUrl" : "https://github.com/flutter/flutter/pull/28614#pullrequestreview-209363132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "acd7f2b6-073d-48a1-be5a-71b98e2f4caa",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this isn't really part of our public API, i'm not sure people will know what to do with that.\r\nI would say something about looking at the slowest GPU frame in a trace, or something like that.",
        "createdAt" : "2019-02-28T23:06:05Z",
        "updatedAt" : "2019-02-28T23:06:05Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "9ea7805c-636b-4e1e-8f88-ff1240c57c94",
        "parentId" : "acd7f2b6-073d-48a1-be5a-71b98e2f4caa",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "See https://github.com/flutter/flutter/pull/28679",
        "createdAt" : "2019-02-28T23:19:27Z",
        "updatedAt" : "2019-02-28T23:19:27Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e01e15a79a97ede7e00448e12bdf3aebaec49fc",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +24,28 @@///\n/// To determine whether a draw operation is useful for warming up shaders,\n/// check the difference in the `worst_frame_rasterizer_time_millis` benchmarks.\n/// Also, tracing with `flutter run --profile --trace-skia` may reveal whether\n/// there is shader-compilation-related jank. If there is such jank, some long"
  },
  {
    "id" : "044411ae-b918-4e1f-baed-f02ae06e71d9",
    "prId" : 28614,
    "prUrl" : "https://github.com/flutter/flutter/pull/28614#pullrequestreview-209359088",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0efc621f-c8f2-4b43-87a1-64fb866758d1",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this is great",
        "createdAt" : "2019-02-28T23:06:18Z",
        "updatedAt" : "2019-02-28T23:06:18Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e01e15a79a97ede7e00448e12bdf3aebaec49fc",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +34,38 @@/// with `flutter run --profile --trace-skia --start-paused`. The\n/// `GrGLProgramBuilder` with the associated `XyzOp` should appear during\n/// startup rather than in the middle of a later animation.\n///\n/// This warm-up needs to be run on each individual device because the shader"
  },
  {
    "id" : "b907b8f5-a983-43d8-bbb6-ca61cfce4631",
    "prId" : 28687,
    "prUrl" : "https://github.com/flutter/flutter/pull/28687#pullrequestreview-211348805",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e62fe003-e735-4b7e-913a-725a328d7365",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This seems like a breaking change?",
        "createdAt" : "2019-03-06T09:26:40Z",
        "updatedAt" : "2019-03-06T09:26:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "2e77d073-50bd-4cc6-ad59-3016dfb34ed3",
        "parentId" : "e62fe003-e735-4b7e-913a-725a328d7365",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "I was hoping that the API was added only a few days before this new change kicks in so it won't affect anyone. But I can surely send a breaking change notification. My major concern is that our breaking change notification usually needs to give developers some time for feedback before we can make the breaking change. But our urgent customer at Google probably couldn't wait for that long.",
        "createdAt" : "2019-03-06T16:55:15Z",
        "updatedAt" : "2019-03-06T17:16:47Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "340899d9e0a040ef7fa1dacac965013436a430e7",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +77,81 @@  /// are causing janks.\n  @protected\n  Future<void> warmUpOnCanvas(ui.Canvas canvas);\n\n  /// Construct an offscreen image of [size], and execute [warmUpOnCanvas] on a"
  },
  {
    "id" : "1359689c-c537-49f5-bbfd-94ab0e5c59a0",
    "prId" : 28687,
    "prUrl" : "https://github.com/flutter/flutter/pull/28687#pullrequestreview-211348805",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ccb9550-8304-4dda-b186-12cbce20be25",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This is not grammatically correct.\r\n\r\nBut also, what parameter? The only parameter here is `canvas`.\r\n\r\nAlso, please hyperlink `drawImage` appropriately.",
        "createdAt" : "2019-03-06T09:28:29Z",
        "updatedAt" : "2019-03-06T09:28:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "129e507e-1061-41be-ad97-049ac976228a",
        "parentId" : "6ccb9550-8304-4dda-b186-12cbce20be25",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Sorry, that's an obsolete comment. Will remove it ASAP.",
        "createdAt" : "2019-03-06T16:51:17Z",
        "updatedAt" : "2019-03-06T17:16:47Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "340899d9e0a040ef7fa1dacac965013436a430e7",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +67,71 @@  /// compilation cache.\n  ///\n  /// Parameter [image] is to be used for drawImage related operations.\n  ///\n  /// To decide which draw operations to be added to your custom warm up"
  },
  {
    "id" : "125efbcd-674a-4376-b4f5-836e4c76fcc2",
    "prId" : 28687,
    "prUrl" : "https://github.com/flutter/flutter/pull/28687#pullrequestreview-211348805",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0631498-86ef-463f-bc8b-6092cee2ed1a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "please avoid `_` argument names",
        "createdAt" : "2019-03-06T09:28:48Z",
        "updatedAt" : "2019-03-06T09:28:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ea80ff38-6268-461a-8dcd-8417ad8ee569",
        "parentId" : "b0631498-86ef-463f-bc8b-6092cee2ed1a",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Will fix ASAP.",
        "createdAt" : "2019-03-06T16:58:44Z",
        "updatedAt" : "2019-03-06T17:16:47Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "340899d9e0a040ef7fa1dacac965013436a430e7",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +90,94 @@    final TimelineTask shaderWarmUpTask = TimelineTask();\n    shaderWarmUpTask.start('Warm-up shader');\n    picture.toImage(size.width.ceil(), size.height.ceil()).then((ui.Image _) {\n      shaderWarmUpTask.finish();\n    });"
  },
  {
    "id" : "769e41a3-3d45-4d11-a6cf-865484f1c8a0",
    "prId" : 28687,
    "prUrl" : "https://github.com/flutter/flutter/pull/28687#pullrequestreview-211348805",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d86c1bb-7b5e-4899-8a2f-56b2f336cac8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "extraneous blank line",
        "createdAt" : "2019-03-06T09:28:57Z",
        "updatedAt" : "2019-03-06T09:28:57Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ec509e82-57a0-4e31-b29e-b9dbefd4b3bc",
        "parentId" : "6d86c1bb-7b5e-4899-8a2f-56b2f336cac8",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Will fix ASAP.",
        "createdAt" : "2019-03-06T16:59:35Z",
        "updatedAt" : "2019-03-06T17:16:47Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "340899d9e0a040ef7fa1dacac965013436a430e7",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +184,188 @@    canvas.drawParagraph(paragraph, const ui.Offset(20.0, 20.0));\n\n\n    // Construct an image for drawImage related operations\n    const int imageWidth = 40;"
  },
  {
    "id" : "1e0e46ac-f59c-4663-bf83-80a712b44a6f",
    "prId" : 28687,
    "prUrl" : "https://github.com/flutter/flutter/pull/28687#pullrequestreview-211348805",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b2e66f6-fca9-462f-aef8-cca42e65baba",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This PR had a substantial impact on our memory usage (increased by ~20%). This seems like a very high cost for an operation that will only benefit apps that have images.",
        "createdAt" : "2019-03-06T09:30:18Z",
        "updatedAt" : "2019-03-06T09:30:18Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "cd56e586-7647-471e-84a4-99cac2fcfef9",
        "parentId" : "6b2e66f6-fca9-462f-aef8-cca42e65baba",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "I'll decrease the image size from 40x40 to 10x10 ASAP which should decrease the memory usage 16x.\r\n\r\nIf the memory usage is still high after the change, I'll remove this part ASAP and put it in a custom shader warm up that's only used by a specific client.",
        "createdAt" : "2019-03-06T17:00:54Z",
        "updatedAt" : "2019-03-06T17:16:47Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "340899d9e0a040ef7fa1dacac965013436a430e7",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +208,212 @@    });\n\n    return completer.future;\n  }\n}"
  },
  {
    "id" : "decb78b5-cc8e-49e9-8dfa-e6805fb1faf0",
    "prId" : 28687,
    "prUrl" : "https://github.com/flutter/flutter/pull/28687#pullrequestreview-211348805",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2942020c-fd76-4713-860b-e1e506e30782",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This has been made to return a `Future`, but nothing seems to await this future?",
        "createdAt" : "2019-03-06T09:31:18Z",
        "updatedAt" : "2019-03-06T09:31:18Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e3a562fa-6e62-437b-992e-88b1dc09feb2",
        "parentId" : "2942020c-fd76-4713-860b-e1e506e30782",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "I thought an async function will automatically return a Future<void> that completes when all the await and the remaining function finishes?\r\n\r\nI got that impression from the example you gave below:\r\n\r\n`Future<void> foo() async { await something; }` is identical to:\r\n```\r\nFuture<void> foo() {\r\n  Completer<void> completer = Completer<void>();\r\n  something.then((value) {\r\n    completer.complete();\r\n  }).catchError((error, stack) { completer.completeError(error, stack); });\r\n  return completer.future;\r\n}\r\n```",
        "createdAt" : "2019-03-06T16:58:15Z",
        "updatedAt" : "2019-03-06T17:16:47Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "340899d9e0a040ef7fa1dacac965013436a430e7",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +81,85 @@  /// Construct an offscreen image of [size], and execute [warmUpOnCanvas] on a\n  /// canvas associated with that image.\n  Future<void> execute() async {\n    final ui.PictureRecorder recorder = ui.PictureRecorder();\n    final ui.Canvas canvas = ui.Canvas(recorder);"
  }
]