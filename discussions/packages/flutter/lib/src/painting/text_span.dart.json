[
  {
    "id" : "83df132a-a411-4f5b-a4c0-a55034caacc3",
    "prId" : 10606,
    "prUrl" : "https://github.com/flutter/flutter/pull/10606#pullrequestreview-43278232",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e533b7d4-f5b2-4438-bbf4-029e92e6dd88",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I mean, this is one of those cases where the API is bad.  I'm not sure what would be involved in making a better API.",
        "createdAt" : "2017-06-09T22:30:58Z",
        "updatedAt" : "2017-06-09T23:37:01Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "7e71ce01-f44d-4bb5-bffa-f24cb7fb6260",
        "parentId" : "e533b7d4-f5b2-4438-bbf4-029e92e6dd88",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Yeah. I'm also guessing we can't remove this one since I'm sure people have used it by now. It's an attractive API that does something people want to do. That's why I figured I should document it rather than remove it.",
        "createdAt" : "2017-06-09T23:00:30Z",
        "updatedAt" : "2017-06-09T23:37:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4a1b147a9d9d70e6175c226ec357eca4996a3f3",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +93,97 @@  final List<TextSpan> children;\n\n  /// A gesture recognizer that will receive events that hit this text span.\n  ///\n  /// [TextSpan] itself does not implement hit testing or event dispatch. The"
  },
  {
    "id" : "7a5fe248-7a28-42b9-8719-b15f1f02b18a",
    "prId" : 11806,
    "prUrl" : "https://github.com/flutter/flutter/pull/11806#pullrequestreview-59102884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31f2bcff-ec4e-484f-8069-423b82b77c0d",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "toStringDeep() is currently handling null children adding `<null>` when a  a entry from debugDescribeChildren() is null. I'm also fine with making it explicit but if we do we should remove the special case in debugDescribeChildren() that is emitting  `'<null>'`",
        "createdAt" : "2017-08-28T23:41:26Z",
        "updatedAt" : "2017-08-29T00:49:30Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "bd6b0dda-688d-4fda-87be-470c83a4d62e",
        "parentId" : "31f2bcff-ec4e-484f-8069-423b82b77c0d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "As far as I can tell toStringDeep doesn't fully handle null children (e.g. it uses `children.first.textTreeConfiguration` without checking for null first). But I do see what you mean that there's some special check in there. I guess I'll remove the check.",
        "createdAt" : "2017-08-29T00:16:06Z",
        "updatedAt" : "2017-08-29T00:49:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e7802a533e93ba6ee50fde31c35b2d72c307422",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +360,364 @@        return child.toDiagnosticsNode();\n      } else {\n        return new DiagnosticsNode.message('<null child>');\n      }\n    }).toList();"
  },
  {
    "id" : "3ae24765-4ee4-47e1-afbc-6ae20016d9af",
    "prId" : 11806,
    "prUrl" : "https://github.com/flutter/flutter/pull/11806#pullrequestreview-59105388",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7815766-d8e7-41bf-80aa-25d85af89256",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "add a test case with a null child",
        "createdAt" : "2017-08-28T23:42:32Z",
        "updatedAt" : "2017-08-29T00:49:30Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "804561e4-ba1f-4a80-beaa-85471cf10bfc",
        "parentId" : "d7815766-d8e7-41bf-80aa-25d85af89256",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "There's already a test for that.",
        "createdAt" : "2017-08-29T00:18:21Z",
        "updatedAt" : "2017-08-29T00:49:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "da195b83-fa6b-47cd-a38f-a8c7a8c55cc2",
        "parentId" : "d7815766-d8e7-41bf-80aa-25d85af89256",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(It's the test that failed on Travis... Fixing.)",
        "createdAt" : "2017-08-29T00:36:48Z",
        "updatedAt" : "2017-08-29T00:49:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e7802a533e93ba6ee50fde31c35b2d72c307422",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +353,357 @@\n  @override\n  List<DiagnosticsNode> debugDescribeChildren() {\n    if (children == null)\n      return const <DiagnosticsNode>[];"
  }
]