[
  {
    "id" : "83df132a-a411-4f5b-a4c0-a55034caacc3",
    "prId" : 10606,
    "prUrl" : "https://github.com/flutter/flutter/pull/10606#pullrequestreview-43278232",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e533b7d4-f5b2-4438-bbf4-029e92e6dd88",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I mean, this is one of those cases where the API is bad.  I'm not sure what would be involved in making a better API.",
        "createdAt" : "2017-06-09T22:30:58Z",
        "updatedAt" : "2017-06-09T23:37:01Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "7e71ce01-f44d-4bb5-bffa-f24cb7fb6260",
        "parentId" : "e533b7d4-f5b2-4438-bbf4-029e92e6dd88",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Yeah. I'm also guessing we can't remove this one since I'm sure people have used it by now. It's an attractive API that does something people want to do. That's why I figured I should document it rather than remove it.",
        "createdAt" : "2017-06-09T23:00:30Z",
        "updatedAt" : "2017-06-09T23:37:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4a1b147a9d9d70e6175c226ec357eca4996a3f3",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +93,97 @@  final List<TextSpan> children;\n\n  /// A gesture recognizer that will receive events that hit this text span.\n  ///\n  /// [TextSpan] itself does not implement hit testing or event dispatch. The"
  },
  {
    "id" : "7a5fe248-7a28-42b9-8719-b15f1f02b18a",
    "prId" : 11806,
    "prUrl" : "https://github.com/flutter/flutter/pull/11806#pullrequestreview-59102884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31f2bcff-ec4e-484f-8069-423b82b77c0d",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "toStringDeep() is currently handling null children adding `<null>` when a  a entry from debugDescribeChildren() is null. I'm also fine with making it explicit but if we do we should remove the special case in debugDescribeChildren() that is emitting  `'<null>'`",
        "createdAt" : "2017-08-28T23:41:26Z",
        "updatedAt" : "2017-08-29T00:49:30Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "bd6b0dda-688d-4fda-87be-470c83a4d62e",
        "parentId" : "31f2bcff-ec4e-484f-8069-423b82b77c0d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "As far as I can tell toStringDeep doesn't fully handle null children (e.g. it uses `children.first.textTreeConfiguration` without checking for null first). But I do see what you mean that there's some special check in there. I guess I'll remove the check.",
        "createdAt" : "2017-08-29T00:16:06Z",
        "updatedAt" : "2017-08-29T00:49:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e7802a533e93ba6ee50fde31c35b2d72c307422",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +360,364 @@        return child.toDiagnosticsNode();\n      } else {\n        return new DiagnosticsNode.message('<null child>');\n      }\n    }).toList();"
  },
  {
    "id" : "3ae24765-4ee4-47e1-afbc-6ae20016d9af",
    "prId" : 11806,
    "prUrl" : "https://github.com/flutter/flutter/pull/11806#pullrequestreview-59105388",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7815766-d8e7-41bf-80aa-25d85af89256",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "add a test case with a null child",
        "createdAt" : "2017-08-28T23:42:32Z",
        "updatedAt" : "2017-08-29T00:49:30Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "804561e4-ba1f-4a80-beaa-85471cf10bfc",
        "parentId" : "d7815766-d8e7-41bf-80aa-25d85af89256",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "There's already a test for that.",
        "createdAt" : "2017-08-29T00:18:21Z",
        "updatedAt" : "2017-08-29T00:49:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "da195b83-fa6b-47cd-a38f-a8c7a8c55cc2",
        "parentId" : "d7815766-d8e7-41bf-80aa-25d85af89256",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(It's the test that failed on Travis... Fixing.)",
        "createdAt" : "2017-08-29T00:36:48Z",
        "updatedAt" : "2017-08-29T00:49:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e7802a533e93ba6ee50fde31c35b2d72c307422",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +353,357 @@\n  @override\n  List<DiagnosticsNode> debugDescribeChildren() {\n    if (children == null)\n      return const <DiagnosticsNode>[];"
  },
  {
    "id" : "07494ae7-9bbe-41b9-bf5c-1668d2f9930f",
    "prId" : 73747,
    "prUrl" : "https://github.com/flutter/flutter/pull/73747#pullrequestreview-572802026",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ebbe872-5f73-4eef-b96e-5a13964e3c18",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Is the `@override` no longer needed here? or is this an oversight?",
        "createdAt" : "2021-01-12T01:21:35Z",
        "updatedAt" : "2021-01-22T18:57:51Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "f7834b77-997f-4851-b575-25dc90841a85",
        "parentId" : "8ebbe872-5f73-4eef-b96e-5a13964e3c18",
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "No longer needed. :) ",
        "createdAt" : "2021-01-21T00:18:13Z",
        "updatedAt" : "2021-01-22T18:57:51Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      }
    ],
    "commit" : "d243114077bf3d1dc0e7b31809a09129f53669d0",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +314,318 @@  ///\n  /// Any [GestureRecognizer]s are added to `semanticsElements`. Null is added to\n  /// `semanticsElements` for [PlaceholderSpan]s.\n  void describeSemantics(Accumulator offset, List<int> semanticsOffsets, List<dynamic> semanticsElements) {\n    if ("
  },
  {
    "id" : "6b0d2afe-6e85-40c6-a7e7-7315e3a2c792",
    "prId" : 75666,
    "prUrl" : "https://github.com/flutter/flutter/pull/75666#pullrequestreview-586732664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b854b1c4-f454-4808-801f-541c52a1a168",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "I'm wondering what real use cases would cause this to trigger, and if we should support them better by doing `text ?? semanticsLabel` on L284 below.",
        "createdAt" : "2021-02-09T04:04:39Z",
        "updatedAt" : "2021-02-10T18:12:56Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "e4b448f4-e058-47ec-b622-c279eb752f62",
        "parentId" : "b854b1c4-f454-4808-801f-541c52a1a168",
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "I don't know of a use case for a `TextSpan` with a semantics label but no text.\r\n\r\n`InlineSpanSemanticsInformation` specifically requires that `text` be non-null, so this logic should be adjusted to match.\r\n",
        "createdAt" : "2021-02-09T16:15:46Z",
        "updatedAt" : "2021-02-10T18:12:56Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      },
      {
        "id" : "49b910fa-b16e-4960-b0b7-16c14f5b3356",
        "parentId" : "b854b1c4-f454-4808-801f-541c52a1a168",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "This seems like an error. If someone expected a screen reader to read the label it wouldn't happen if the text was null. I think we should add an assert that it's not the case and fix the other issue in the linked bug about why the user tried this",
        "createdAt" : "2021-02-09T16:20:36Z",
        "updatedAt" : "2021-02-10T18:12:56Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "c27c5dd9a1052d66486a2d60226a05a82fee64b0",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +281,285 @@  void computeSemanticsInformation(List<InlineSpanSemanticsInformation> collector) {\n    assert(debugAssertIsValid());\n    if (text != null) {\n      collector.add(InlineSpanSemanticsInformation(\n        text!,"
  },
  {
    "id" : "d3679677-7073-4f0a-acce-91de7bc687af",
    "prId" : 77754,
    "prUrl" : "https://github.com/flutter/flutter/pull/77754#pullrequestreview-613423385",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b254c31-0587-4367-91b4-c02d48c1d90c",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Nit: You've probably already thought about this, but is there a way to combine mouseCursor and cursor?\r\n\r\n```dart\r\n@override\r\nfinal MouseCursor cursor;\r\n```\r\n\r\nMaybe you have to override a getter with a getter...",
        "createdAt" : "2021-03-16T15:52:18Z",
        "updatedAt" : "2021-03-24T20:34:56Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "675520714572f010592ea8b4b2ff2cd9f516db01",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +204,208 @@  @protected\n  @override\n  MouseCursor get cursor => mouseCursor;\n\n  /// An alternative semantics label for this [TextSpan]."
  }
]