[
  {
    "id" : "402a04fe-81c2-49e2-9ddb-2d10e1d3792c",
    "prId" : 18424,
    "prUrl" : "https://github.com/flutter/flutter/pull/18424#pullrequestreview-129017057",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a7a1393-95ec-4121-94a1-2838073893b3",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Should this clear an error in `_currentError` ? Since a listener could be called multiple times, if a prior completer has an error wouldn't all subsequent images complete with an error?",
        "createdAt" : "2018-06-12T22:06:01Z",
        "updatedAt" : "2018-07-31T17:36:11Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "fa4cfbba-56f8-4b37-b81b-4a2a02f73bcf",
        "parentId" : "7a7a1393-95ec-4121-94a1-2838073893b3",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Ya, I wasn't sure if I covered all the scenarios either. Though I was thinking, if it's a multiframe image, and one of the frames failed but subsequent frames succeeded, we'd still want to make the error visible.\r\n\r\ncc @amirh for thoughts\r\n\r\nPerhaps we need another API on the ImageStreamCompleter to clear itself when passing into setCompleter of an ImageStream?",
        "createdAt" : "2018-06-12T22:11:16Z",
        "updatedAt" : "2018-07-31T17:36:11Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "df06fe0b-8204-4234-ab24-43a53f4aaf52",
        "parentId" : "7a7a1393-95ec-4121-94a1-2838073893b3",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Turned out this will never happen. A failed decode will never try to decode the next frame again. ",
        "createdAt" : "2018-06-15T00:59:35Z",
        "updatedAt" : "2018-07-31T17:36:11Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4d4567f341d35763731bbf4ef150e8e14b28345",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +268,272 @@  @protected\n  void setImage(ImageInfo image) {\n    _currentImage = image;\n    if (_listeners.isEmpty)\n      return;"
  },
  {
    "id" : "6de2ebfd-f53d-4a73-b14c-a3591ef91158",
    "prId" : 18424,
    "prUrl" : "https://github.com/flutter/flutter/pull/18424#pullrequestreview-134485162",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "830e98db-ca08-4125-9e18-ff1a6e7334b6",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "pass onError to `super.addListener`.\r\nDo we have a test for this logic?",
        "createdAt" : "2018-06-19T16:58:39Z",
        "updatedAt" : "2018-07-31T17:36:11Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "24dc68f2-66a6-4b01-9bed-b5e9222d6956",
        "parentId" : "830e98db-ca08-4125-9e18-ff1a6e7334b6",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Good catch. Thanks! Added tests to image_stream_test.dart",
        "createdAt" : "2018-07-05T00:55:23Z",
        "updatedAt" : "2018-07-31T17:36:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4d4567f341d35763731bbf4ef150e8e14b28345",
    "line" : 319,
    "diffHunk" : "@@ -1,1 +527,531 @@    if (!_hasActiveListeners && _codec != null) {\n      _decodeNextFrameAndSchedule();\n    }\n    super.addListener(listener, onError: onError);\n  }"
  },
  {
    "id" : "6202a42c-bec7-47b9-ba7f-6e8a52a2d01d",
    "prId" : 18424,
    "prUrl" : "https://github.com/flutter/flutter/pull/18424#pullrequestreview-142600817",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb6b59c0-80d6-4513-8548-08e67d5e594b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "everything below the `try` seems to be indented two more than expected",
        "createdAt" : "2018-08-01T23:33:28Z",
        "updatedAt" : "2018-08-01T23:33:28Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4d4567f341d35763731bbf4ef150e8e14b28345",
    "line" : 145,
    "diffHunk" : "@@ -1,1 +253,257 @@            ),\n          );\n        }\n    }\n  }"
  },
  {
    "id" : "9db44dfb-d0b5-4be9-b6b5-e1a34d782ac5",
    "prId" : 18424,
    "prUrl" : "https://github.com/flutter/flutter/pull/18424#pullrequestreview-142636266",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c15331c-81d1-47bd-adda-63b809f45b6d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this removes all the matches, we should only remove the first match.",
        "createdAt" : "2018-08-01T23:34:17Z",
        "updatedAt" : "2018-08-01T23:34:17Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "05d0028c-44c5-4a30-9772-41411dbe9271",
        "parentId" : "5c15331c-81d1-47bd-adda-63b809f45b6d",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Ah, other `removeListener`s seem to do that. Done in follow-up PR",
        "createdAt" : "2018-08-02T03:48:51Z",
        "updatedAt" : "2018-08-02T03:48:51Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4d4567f341d35763731bbf4ef150e8e14b28345",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +262,266 @@    _listeners.removeWhere((_ImageListenerPair listenerPair) {\n      return listenerPair.listener == listener;\n    });\n  }\n"
  },
  {
    "id" : "6257fad6-782c-4fa7-865b-97d052e26747",
    "prId" : 18424,
    "prUrl" : "https://github.com/flutter/flutter/pull/18424#pullrequestreview-142600987",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "038399a4-7b98-42e8-9054-b8e3982dd82c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this removes all the matches, we should only remove the first match.",
        "createdAt" : "2018-08-01T23:34:25Z",
        "updatedAt" : "2018-08-01T23:34:25Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4d4567f341d35763731bbf4ef150e8e14b28345",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +167,171 @@      return _completer.removeListener(listener);\n    assert(_listeners != null);\n    _listeners.removeWhere((_ImageListenerPair listenerPair) {\n      return listenerPair.listener == listener;\n    });"
  },
  {
    "id" : "477982fc-18d4-4fd1-aa55-43bffa00b0cf",
    "prId" : 18424,
    "prUrl" : "https://github.com/flutter/flutter/pull/18424#pullrequestreview-142600998",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4aad000-243b-497b-b0e9-5fadd8ec9e80",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this removes all the matches, we should only remove the first match.",
        "createdAt" : "2018-08-01T23:34:30Z",
        "updatedAt" : "2018-08-01T23:34:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4d4567f341d35763731bbf4ef150e8e14b28345",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +260,264 @@  /// its associated [ImageErrorListener].\n  void removeListener(ImageListener listener) {\n    _listeners.removeWhere((_ImageListenerPair listenerPair) {\n      return listenerPair.listener == listener;\n    });"
  },
  {
    "id" : "d9bf08e2-aef7-4006-9847-39f659fde7b5",
    "prId" : 18424,
    "prUrl" : "https://github.com/flutter/flutter/pull/18424#pullrequestreview-142636321",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "479e34c0-6207-40f6-96ec-194770ed445d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "why?",
        "createdAt" : "2018-08-01T23:35:12Z",
        "updatedAt" : "2018-08-01T23:35:12Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "542e2ed9-1494-481a-ae2d-881d52860368",
        "parentId" : "479e34c0-6207-40f6-96ec-194770ed445d",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I even wrote a test to assert otherwise :) Don't know how I forgot to update the docs. In follow-up PR",
        "createdAt" : "2018-08-02T03:49:24Z",
        "updatedAt" : "2018-08-02T03:49:24Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4d4567f341d35763731bbf4ef150e8e14b28345",
    "line" : 190,
    "diffHunk" : "@@ -1,1 +291,295 @@  ///\n  /// If the same error listener is attached with multiple listeners, that\n  /// error listener will only be notified once.\n  ///\n  /// If no error listeners are attached, a [FlutterError] will be reported"
  },
  {
    "id" : "fbaf01f1-f51f-42fd-932d-e7586447b9c5",
    "prId" : 20125,
    "prUrl" : "https://github.com/flutter/flutter/pull/20125#pullrequestreview-188886360",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4266f68-e275-4efd-9628-4022f656d4f1",
        "parentId" : null,
        "authorId" : "c9e9bbc2-ed24-4b13-aa7d-8e801fdfa59d",
        "body" : "this should be break?",
        "createdAt" : "2018-12-27T02:50:06Z",
        "updatedAt" : "2018-12-27T02:50:06Z",
        "lastEditedBy" : "c9e9bbc2-ed24-4b13-aa7d-8e801fdfa59d",
        "tags" : [
        ]
      },
      {
        "id" : "4d5f85e6-1264-4a2c-bebd-d32660fdc810",
        "parentId" : "c4266f68-e275-4efd-9628-4022f656d4f1",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Thanks https://github.com/flutter/flutter/pull/25994",
        "createdAt" : "2019-01-03T01:58:09Z",
        "updatedAt" : "2019-01-03T01:58:09Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3f2267e45e230fb294b584a743b7ecf71645af6",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +168,172 @@      if (_listeners[i].listener == listener) {\n        _listeners.removeAt(i);\n        continue;\n      }\n    }"
  },
  {
    "id" : "1f602196-eef3-4702-a5ff-95f6f3a68834",
    "prId" : 25865,
    "prUrl" : "https://github.com/flutter/flutter/pull/25865#pullrequestreview-192019263",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c9e2dcc-3b24-4cd1-a0ef-d1312cf6e4a7",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Would this work if listener is found in the list in sequence, e.g if `_listeners` is `[x, y, listener, listener, z]`, wouldn't we remove the `listener` at index 2 (which puts the second `listener` now at index 2) and then continue to iterate at index 3 leaving us with `[x, y, listener, z]`?",
        "createdAt" : "2019-01-02T20:55:02Z",
        "updatedAt" : "2019-01-31T06:25:25Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "9658d9f8-dad5-4eca-823c-6c26c4f285f1",
        "parentId" : "2c9e2dcc-3b24-4cd1-a0ef-d1312cf6e4a7",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "with xster's change, this is no longer an issue",
        "createdAt" : "2019-01-14T05:21:04Z",
        "updatedAt" : "2019-01-31T06:25:25Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "91c0af402e13aa63421aafa263a95d342be78266",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +186,190 @@    for (int i = 0; i < _listeners.length; i += 1) {\n      if (_listeners[i].listener == listener) {\n        _listeners.removeAt(i);\n        break;\n      }"
  },
  {
    "id" : "c0953bae-c003-4239-802b-6f8ac886d6f8",
    "prId" : 25865,
    "prUrl" : "https://github.com/flutter/flutter/pull/25865#pullrequestreview-188825174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c06cadb-3477-4c33-a022-cf14e286ddad",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "same here",
        "createdAt" : "2019-01-02T20:55:58Z",
        "updatedAt" : "2019-01-31T06:25:25Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "91c0af402e13aa63421aafa263a95d342be78266",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +317,321 @@    for (int i = 0; i < _listeners.length; i += 1) {\n      if (_listeners[i].listener == listener) {\n        _listeners.removeAt(i);\n        break;\n      }"
  },
  {
    "id" : "a03a89e7-c628-41b6-8080-f2e0bdb08d2c",
    "prId" : 25865,
    "prUrl" : "https://github.com/flutter/flutter/pull/25865#pullrequestreview-198429190",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d2e601e-39b0-4b61-9881-7b6e58154761",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I'm not sure what the last sentence means. Elaborate a bit more or remove.",
        "createdAt" : "2019-01-17T07:25:24Z",
        "updatedAt" : "2019-01-31T06:25:25Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "0ce1a3f0-cb39-4cb8-8835-0fa0d3f04ba3",
        "parentId" : "3d2e601e-39b0-4b61-9881-7b6e58154761",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "added an example.",
        "createdAt" : "2019-01-31T05:27:14Z",
        "updatedAt" : "2019-01-31T06:25:25Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "91c0af402e13aa63421aafa263a95d342be78266",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +168,172 @@  /// If `listener` has been added multiple times, this removes the first\n  /// instance of the listener, along with the `onError` listener that was\n  /// registered with that first instance. This might not be the instance that\n  /// the `addListener` corresponding to this `removeListener` had added.\n  ///"
  },
  {
    "id" : "46467bb3-4433-4992-ac5a-df3ede8c9f60",
    "prId" : 30346,
    "prUrl" : "https://github.com/flutter/flutter/pull/30346#pullrequestreview-221446394",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5dbfbc9f-5a2b-497c-aa38-54db90bdba17",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Would it make sense guarding the timer with this check too, so that you don't even register the timer if it's already been registered?\r\n\r\nCould you possibly achieve this same effect by just doing something like `_timer ??=`?",
        "createdAt" : "2019-04-02T00:30:42Z",
        "updatedAt" : "2019-04-02T18:15:50Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "7907c160-218d-48da-b284-affb18790cdc",
        "parentId" : "5dbfbc9f-5a2b-497c-aa38-54db90bdba17",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "I don't see how guarding just against double timer registration fixes the described issue (e.g in the addListener,removeListener,addListener scenario).\r\n\r\nI'm not sure I see a scenario where we will have double timer registration with the current guard given that `removeListener` cancels the timer after removing all listeners.\r\n\r\nCan you describe the scenario you're thinking about in which there will be double timer registration?",
        "createdAt" : "2019-04-02T01:23:00Z",
        "updatedAt" : "2019-04-02T18:15:50Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "650f3e1c-97ef-408a-9d58-f0384e3d4f61",
        "parentId" : "5dbfbc9f-5a2b-497c-aa38-54db90bdba17",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "I may be misreading something here, but it looks like this timer can get created multiple times without getting cancelled, which could be leading to multiple registration.",
        "createdAt" : "2019-04-02T03:15:11Z",
        "updatedAt" : "2019-04-02T18:15:50Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "ce7d84ea-0b1b-4313-9fae-7ebdef253a61",
        "parentId" : "5dbfbc9f-5a2b-497c-aa38-54db90bdba17",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "I'm probably missing what you see, can you please describe the sequence of events that leads to multiple timer registration?",
        "createdAt" : "2019-04-02T03:39:42Z",
        "updatedAt" : "2019-04-02T18:15:50Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "1ac0a212-2325-4f1e-a954-b20e06e9676f",
        "parentId" : "5dbfbc9f-5a2b-497c-aa38-54db90bdba17",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "It looks like the constructor of this class calls `_handleAppFrame` when the codec is ready (https://github.com/flutter/flutter/blob/44c127024d1cddcbf0e63652cbf36ba22d6384f1/packages/flutter/lib/src/painting/image_stream.dart#L515), and when the first listener is added it's also called (https://github.com/flutter/flutter/blob/44c127024d1cddcbf0e63652cbf36ba22d6384f1/packages/flutter/lib/src/painting/image_stream.dart#L616).  It seems entirely possible that the `Image` widget ends up making a new image stream which ends up creating a timer and then adding a listener which creates a second timer before the first has finished.\r\n\r\n",
        "createdAt" : "2019-04-02T03:55:19Z",
        "updatedAt" : "2019-04-02T18:15:50Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "47944937-f826-47a4-b84c-220ba1325645",
        "parentId" : "5dbfbc9f-5a2b-497c-aa38-54db90bdba17",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Good catch!\r\nThe scenario you describe can actually result in the first frame being skipped(as `_nextFrame` can be set to the second codec frame before the next flutter frame is executed).\r\n\r\nFixed it by only starting to decode after both the codec is ready and a frame listener is added.\r\nIn practice I'd imagine that this was very unlikely to happen as the first frame listener was likely to be added synchronously right after creating the stream completer at which point `_codec` is still null (as the async call had no chance to complete) thus the second `_decodeNextFrameAndSchedule` will not be invoked (it's guarded by a check that `_codec` is not null).\r\n\r\nAnyway with this fixed I don't see a scenario where the timer is registered multiple times simultaneously.",
        "createdAt" : "2019-04-02T04:37:09Z",
        "updatedAt" : "2019-04-02T18:15:50Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "bec0589795ab752d85231983fb25baea0b3ae7dd",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +561,565 @@    }\n    final Duration delay = _frameDuration - (timestamp - _shownTimestamp);\n    _timer = Timer(delay * timeDilation, () {\n      _scheduleAppFrame();\n    });"
  },
  {
    "id" : "9cfd0b09-efee-4a3e-9320-a5959e3516da",
    "prId" : 32936,
    "prUrl" : "https://github.com/flutter/flutter/pull/32936#pullrequestreview-239178336",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74ffaa2e-7514-4dcf-9e18-3bf69d064afc",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "`@immutable`",
        "createdAt" : "2019-05-17T23:40:34Z",
        "updatedAt" : "2019-05-20T23:42:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "548a2bd0-876a-4968-b4f9-a81e8431e5a8",
        "parentId" : "74ffaa2e-7514-4dcf-9e18-3bf69d064afc",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Done",
        "createdAt" : "2019-05-18T01:17:34Z",
        "updatedAt" : "2019-05-20T23:42:56Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "40da9f5f31b1ea8e7a712429141be617d9eba13d",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +68,72 @@/// Used by [ImageStream] and [ImageStreamCompleter].\n@immutable\nclass ImageStreamListener {\n  /// Creates a new [ImageStreamListener].\n  ///"
  },
  {
    "id" : "5d4c5776-f6c6-499f-899c-57ef92fd10eb",
    "prId" : 32936,
    "prUrl" : "https://github.com/flutter/flutter/pull/32936#pullrequestreview-239749548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f043f0ba-41d6-43bb-9804-39dd6d977185",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe worthwhile to crosslink to onError from here.",
        "createdAt" : "2019-05-20T21:08:56Z",
        "updatedAt" : "2019-05-20T23:42:56Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "8c8f1f00-0fff-4e34-b131-6dd7caaed4bf",
        "parentId" : "f043f0ba-41d6-43bb-9804-39dd6d977185",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "done",
        "createdAt" : "2019-05-20T22:24:03Z",
        "updatedAt" : "2019-05-20T23:42:56Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "40da9f5f31b1ea8e7a712429141be617d9eba13d",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +85,89 @@  ///\n  /// For more information on how to interpret the parameters to the callback,\n  /// see the documentation on [ImageListener].\n  ///\n  /// See also:"
  },
  {
    "id" : "4835bb04-fd4c-4493-a36b-857dea8bd26a",
    "prId" : 33092,
    "prUrl" : "https://github.com/flutter/flutter/pull/33092#pullrequestreview-240244380",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8ae2571-c4ba-477a-ab3e-8119c53d145a",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Why do you need this to be a list? The for loop below could just iterate over an iterable as well?",
        "createdAt" : "2019-05-21T16:06:12Z",
        "updatedAt" : "2019-05-21T19:08:06Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "bf684174-2ab1-4b59-8ae8-561a80a943c6",
        "parentId" : "a8ae2571-c4ba-477a-ab3e-8119c53d145a",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "To make a copy to allow for concurrent modification.",
        "createdAt" : "2019-05-21T17:16:35Z",
        "updatedAt" : "2019-05-21T19:08:06Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "d555f3d8-24da-492c-b1bb-58a1a9a20b45",
        "parentId" : "a8ae2571-c4ba-477a-ab3e-8119c53d145a",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Makes sense. Maybe add a short comment?",
        "createdAt" : "2019-05-21T18:31:05Z",
        "updatedAt" : "2019-05-21T19:08:07Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "61cbc72c-78b1-44c7-9ed9-c06a859f225d",
        "parentId" : "a8ae2571-c4ba-477a-ab3e-8119c53d145a",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Done",
        "createdAt" : "2019-05-21T19:08:25Z",
        "updatedAt" : "2019-05-21T19:08:26Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "979d163712fb7ee17a5b9e19678bad2ae5cd1f0e",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +603,607 @@                .map<ImageChunkListener>((ImageStreamListener listener) => listener.onChunk)\n                .where((ImageChunkListener chunkListener) => chunkListener != null)\n                .toList();\n            for (ImageChunkListener listener in localListeners) {\n              listener(event);"
  },
  {
    "id" : "ec08872e-5386-4676-af61-aec5d98f79db",
    "prId" : 50318,
    "prUrl" : "https://github.com/flutter/flutter/pull/50318#pullrequestreview-358452038",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa1f09a4-0de7-46fe-b779-71dd02055509",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Feels odd that there's no way to remove a onlastlistenerremoved listener.",
        "createdAt" : "2020-02-13T18:06:54Z",
        "updatedAt" : "2020-02-14T21:26:46Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "bf4a88bc-eb71-4174-b5db-fa0f9c469d7d",
        "parentId" : "aa1f09a4-0de7-46fe-b779-71dd02055509",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "I don't have a use case for it.  I also suspect that it would be better to track these by ID if we ever want to do that, to avoid the confusion about what happens when someone removes a duplicate listener.  WDYT?",
        "createdAt" : "2020-02-13T18:29:46Z",
        "updatedAt" : "2020-02-14T21:26:46Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "01e4b258d6cab3ad4316fe13173dbc152e77e1fa",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +411,415 @@  /// list of listeners.\n  ///\n  /// This callback will never fire if [removeListener] is never called.\n  void addOnLastListenerRemovedCallback(VoidCallback callback) {\n    assert(callback != null);"
  }
]