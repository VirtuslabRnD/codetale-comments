[
  {
    "id" : "df0d7f71-d38d-4dff-840f-d4e164adbb24",
    "prId" : 27953,
    "prUrl" : "https://github.com/flutter/flutter/pull/27953#pullrequestreview-203962279",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4858d7d-9c55-4183-aa3d-7c46cd7eb777",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Instead of wrapping everything in a try-catch, just wrap the invocation of obtainKey.\r\n\r\n```\r\nFuture<T> obtainedKey;\r\ntry {\r\n  obtainedKey = obtainKey(configuration);\r\n}\r\n```",
        "createdAt" : "2019-02-14T20:25:44Z",
        "updatedAt" : "2019-02-14T21:25:47Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "f78ff4bd-d86c-43e2-9bef-92c83a8f7f93",
        "parentId" : "d4858d7d-9c55-4183-aa3d-7c46cd7eb777",
        "authorId" : "9d0a4821-6e3a-4276-827f-88b855cd3ae1",
        "body" : "There was a variable `obtainedKey` already in the scope, so i used `key` instead.",
        "createdAt" : "2019-02-14T20:47:28Z",
        "updatedAt" : "2019-02-14T21:25:47Z",
        "lastEditedBy" : "9d0a4821-6e3a-4276-827f-88b855cd3ae1",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a58bd9af3f2d635220582916650224720aac348",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +287,291 @@    // `onError` callback on [ImageCache] handles the cases where `obtainKey` is a sync future and `load` throws.\n    Future<T> key;\n    try {\n      key = obtainKey(configuration);\n    } catch (error, stackTrace) {"
  },
  {
    "id" : "f9b713bb-c160-42fb-951b-a1008f4c563b",
    "prId" : 27953,
    "prUrl" : "https://github.com/flutter/flutter/pull/27953#pullrequestreview-203974333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea9e2d9b-dfe4-454f-9a26-b4eeff147c0d",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "If you catch an error here `key` will be null, right?",
        "createdAt" : "2019-02-14T20:55:17Z",
        "updatedAt" : "2019-02-14T21:25:47Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "a6a5e262-3553-4535-83ea-f9cef947a0cf",
        "parentId" : "ea9e2d9b-dfe4-454f-9a26-b4eeff147c0d",
        "authorId" : "9d0a4821-6e3a-4276-827f-88b855cd3ae1",
        "body" : "ðŸ¤• yeah, sorry will fix this",
        "createdAt" : "2019-02-14T21:07:32Z",
        "updatedAt" : "2019-02-14T21:25:47Z",
        "lastEditedBy" : "9d0a4821-6e3a-4276-827f-88b855cd3ae1",
        "tags" : [
        ]
      },
      {
        "id" : "6a515e19-cb98-4ced-a1a4-885770ec8475",
        "parentId" : "ea9e2d9b-dfe4-454f-9a26-b4eeff147c0d",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Please add a test case which exercises this new code",
        "createdAt" : "2019-02-14T21:16:14Z",
        "updatedAt" : "2019-02-14T21:25:47Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a58bd9af3f2d635220582916650224720aac348",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +290,294 @@      key = obtainKey(configuration);\n    } catch (error, stackTrace) {\n      handleError(error, stackTrace);\n      return stream;\n    }"
  },
  {
    "id" : "f8782e0b-9026-4371-af2c-46a3d77d8f9b",
    "prId" : 33092,
    "prUrl" : "https://github.com/flutter/flutter/pull/33092#pullrequestreview-240244331",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e004f8f-bdf9-4bbb-96a7-5623747ec566",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Probably would be better if `consolidateHttpClientResponseBytes` calls `onBytesReceived` with null instead of -1 as well. Sorry, I missed that in the other PR...",
        "createdAt" : "2019-05-21T18:28:05Z",
        "updatedAt" : "2019-05-21T19:08:07Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "30eb246c-be1b-458a-aa68-f6f27186855e",
        "parentId" : "6e004f8f-bdf9-4bbb-96a7-5623747ec566",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Done",
        "createdAt" : "2019-05-21T19:08:18Z",
        "updatedAt" : "2019-05-21T19:08:18Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "979d163712fb7ee17a5b9e19678bad2ae5cd1f0e",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +554,558 @@        response,\n        client: _httpClient,\n        onBytesReceived: (int cumulative, int total) {\n          chunkEvents.add(ImageChunkEvent(\n            cumulativeBytesLoaded: cumulative,"
  },
  {
    "id" : "984b3a1b-bdfd-40de-8655-3002861e49aa",
    "prId" : 34112,
    "prUrl" : "https://github.com/flutter/flutter/pull/34112#pullrequestreview-250043148",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d33a54b-beab-4120-beff-11d2d65d53d0",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "(comment meant for two lines above... github Â¯\\_(ãƒ„)_/Â¯)\r\n\r\nI see, the original also had double ui imports....",
        "createdAt" : "2019-06-14T16:59:07Z",
        "updatedAt" : "2019-06-14T17:54:56Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "00a5e0ca-2259-430c-bf59-19d30adc412f",
        "parentId" : "3d33a54b-beab-4120-beff-11d2d65d53d0",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Still, cleaned it up",
        "createdAt" : "2019-06-14T17:55:37Z",
        "updatedAt" : "2019-06-14T17:55:37Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f62c2f355d62be4458c920dd7d272cfdab7a9a32",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +9,13 @@import 'dart:ui' show Size, Locale, TextDirection, hashValues;\n\nimport 'package:flutter/foundation.dart';\nimport 'package:flutter/services.dart';\n"
  },
  {
    "id" : "0e686ac5-7901-4d7d-832a-89a048be61e9",
    "prId" : 41415,
    "prUrl" : "https://github.com/flutter/flutter/pull/41415#pullrequestreview-297716487",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f039905-ee0d-400e-a2c8-cb46d65387f6",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "Let's make width and height named arguments.",
        "createdAt" : "2019-10-04T21:02:11Z",
        "updatedAt" : "2019-10-15T00:14:54Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "db075f3b795792d92f1bd17eeba76c5325fddcc6",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +528,532 @@  const ResizeImage(\n    this.imageProvider, {\n    this.width,\n    this.height,\n  }) : assert(width != null || height != null);"
  },
  {
    "id" : "273f8f92-c0aa-42d1-8ac2-5119c804f69f",
    "prId" : 41415,
    "prUrl" : "https://github.com/flutter/flutter/pull/41415#pullrequestreview-298430988",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2848e46c-aa9c-4f8c-ba6c-71b7d4a1b43e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this is where you need to document NetworkImage doesn't support ResizeImage when used with Flutter for Web.",
        "createdAt" : "2019-10-07T21:47:54Z",
        "updatedAt" : "2019-10-15T00:14:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "db075f3b795792d92f1bd17eeba76c5325fddcc6",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +559,563 @@  }\n}\n\n/// Fetches the given URL from the network, associating it with the given scale.\n///"
  },
  {
    "id" : "6eb4ced4-a38f-45de-88e2-64498f9c650c",
    "prId" : 41415,
    "prUrl" : "https://github.com/flutter/flutter/pull/41415#pullrequestreview-298432021",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e65614a7-3c26-4117-907f-69b6bcf087b7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "maybe add\r\n```\r\n///\r\n/// See also:\r\n///\r\n///  * [ResizeImage], which uses this to override the `cacheWidth` and `cacheHeight` parameters.\r\n```",
        "createdAt" : "2019-10-07T21:50:17Z",
        "updatedAt" : "2019-10-15T00:14:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "db075f3b795792d92f1bd17eeba76c5325fddcc6",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +161,165 @@///\n///  * [ResizeImage], which uses this to override the `cacheWidth` and `cacheHeight` parameters.\ntypedef DecoderCallback = Future<ui.Codec> Function(Uint8List bytes, {int cacheWidth, int cacheHeight});\n\n/// Identifies an image without committing to the precise final asset. This"
  }
]