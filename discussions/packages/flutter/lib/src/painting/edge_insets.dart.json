[
  {
    "id" : "47c06d77-a80c-4d96-a4ed-314371059560",
    "prId" : 4845,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d5f8b47-66a6-49b8-9482-64d0f5943c96",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This is great. There are probably a bunch of classes that would benefit from along(Axis) methods. Maybe Size, Offset, FractionalOffset. No need to do them all right away; this seems like a good pattern to apply in the future.\n",
        "createdAt" : "2016-07-07T23:39:40Z",
        "updatedAt" : "2016-07-07T23:39:40Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "877614d5-4662-40a1-a080-b9032ad6022b",
        "parentId" : "3d5f8b47-66a6-49b8-9482-64d0f5943c96",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Ah, good idea.\n",
        "createdAt" : "2016-07-07T23:44:10Z",
        "updatedAt" : "2016-07-07T23:44:10Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "6950b94056094091f2ff6ea22f0ce97a6e5c4d32",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +67,71 @@\n  /// The total offset in the given direction.\n  double along(Axis axis) {\n    assert(axis != null);\n    switch (axis) {"
  },
  {
    "id" : "67d6cdb6-e26b-48f4-a88e-60af4ded3f75",
    "prId" : 5382,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b308ee0-d41e-4f08-8c66-50dd45226451",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Do you want to check for negative sizes (e.g., the left passing the right)?\n",
        "createdAt" : "2016-08-13T02:03:07Z",
        "updatedAt" : "2016-08-15T17:56:10Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "a87a4da462ac88ef5f0dbe486347908c7abe3613",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +128,132 @@  ///  * [inflateRect], to inflate a [Rect] rather than deflating it.\n  Rect deflateRect(Rect rect) {\n    return new Rect.fromLTRB(rect.left + left, rect.top + top, rect.right - right, rect.bottom - bottom);\n  }\n"
  },
  {
    "id" : "60465db7-d438-47be-89c3-1b0152541f84",
    "prId" : 5382,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3091e85-bc95-45e0-ae34-84ee6e477d15",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Same question here about negatives.\n",
        "createdAt" : "2016-08-13T02:03:30Z",
        "updatedAt" : "2016-08-15T17:56:10Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "a87a4da462ac88ef5f0dbe486347908c7abe3613",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +153,157 @@  ///  * [inflateSize], to inflate a [Size] rather than deflating it.\n  Size deflateSize(Size size) {\n    return new Size(size.width - horizontal, size.height - vertical);\n  }\n"
  },
  {
    "id" : "8f9d578f-ab21-487b-85ae-83ea3cbe24a4",
    "prId" : 5382,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dff8eda0-904b-4535-a393-7c02693ebbeb",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I guess you doc that negatives are possible...\n",
        "createdAt" : "2016-08-13T02:03:47Z",
        "updatedAt" : "2016-08-15T17:56:10Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "a1b949a7-b975-43d0-a684-2918418554fd",
        "parentId" : "dff8eda0-904b-4535-a393-7c02693ebbeb",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yeah. I don't really think it makes sense to call these when you could go negative, so this is probably the wrong level to be doing explicit checks.\n",
        "createdAt" : "2016-08-15T17:36:33Z",
        "updatedAt" : "2016-08-15T17:56:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a87a4da462ac88ef5f0dbe486347908c7abe3613",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +146,150 @@  ///\n  /// If the argument is smaller than [collapsedSize], then the resulting size\n  /// will have negative dimensions.\n  ///\n  /// See also:"
  },
  {
    "id" : "67b1c439-e9b5-4d77-a3f3-51bb3393db13",
    "prId" : 62951,
    "prUrl" : "https://github.com/flutter/flutter/pull/62951#pullrequestreview-463951545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dce844d-21fe-464e-9438-59449e437a74",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Ditto here - if it's all because of the super class we should look at just making the super class non-nullable as well.",
        "createdAt" : "2020-08-10T04:26:06Z",
        "updatedAt" : "2020-08-11T13:05:55Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbce05f7ed9985e33ea4ef848fa2a6b8bf3c1d1d",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +838,842 @@\n  @override\n  EdgeInsets resolve(TextDirection? direction) {\n    assert(direction != null);\n    switch (direction!) {"
  }
]