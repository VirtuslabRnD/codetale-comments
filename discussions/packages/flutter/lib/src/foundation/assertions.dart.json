[
  {
    "id" : "0d2404ef-e883-47cc-822e-fcee329c26fa",
    "prId" : 4052,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6100fe01-26bd-49c7-8954-4df34657e2c4",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "cc @HansMuller for the flutter package changes\n",
        "createdAt" : "2016-05-19T19:54:40Z",
        "updatedAt" : "2016-05-20T21:00:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "242b03e672045b2cd67d5fe6a847170b4eeca08a",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +288,292 @@          continue;\n        }\n      }\n      result.add(line);\n    }"
  },
  {
    "id" : "19580e57-1933-4284-9ab9-4e396aa05418",
    "prId" : 9937,
    "prUrl" : "https://github.com/flutter/flutter/pull/9937#pullrequestreview-37190413",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6c1b524-fa6e-4632-a561-57073856a2ae",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I don't think we should assert here. If this ever fires, it's going to be confusing as heck. In practice the code handles null fine. It's just never supposed to be null because that indicates another error somewhere (like when people show the error message for ID 0 and it says \"error: no error\").",
        "createdAt" : "2017-05-09T23:58:47Z",
        "updatedAt" : "2017-05-09T23:58:47Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ba101d9b-a140-4cd8-b4f0-0f02d5e3f1ae",
        "parentId" : "e6c1b524-fa6e-4632-a561-57073856a2ae",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Good point -- reverting this one in #9939",
        "createdAt" : "2017-05-10T00:50:27Z",
        "updatedAt" : "2017-05-10T00:50:27Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "da41a90a852f7632a45fd2e8e55c75325c759655",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +34,38 @@    this.informationCollector,\n    this.silent: false\n  }) : assert(exception != null);\n\n  /// The exception. Often this will be an [AssertionError], maybe specifically"
  },
  {
    "id" : "2a5391c0-7342-4c28-bea5-00fd8673f699",
    "prId" : 9945,
    "prUrl" : "https://github.com/flutter/flutter/pull/9945#pullrequestreview-37194304",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e3a9f72-0b9c-4da7-bd08-da14ff1d9f21",
        "parentId" : null,
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Based on feedback from #9937",
        "createdAt" : "2017-05-10T01:32:07Z",
        "updatedAt" : "2017-05-10T03:55:13Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0df428da8b7824e9c23ba5fcee5ebf53a1e7c1c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +34,38 @@    this.informationCollector,\n    this.silent: false\n  });\n\n  /// The exception. Often this will be an [AssertionError], maybe specifically"
  },
  {
    "id" : "0689bfc0-5b91-48ef-badd-d5400453b74b",
    "prId" : 12473,
    "prUrl" : "https://github.com/flutter/flutter/pull/12473#pullrequestreview-68165038",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79e5052c-f355-4495-a5c1-65599fddd890",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "If this function will be called more than once, then I believe there are performance benefits in JIT mode in caching a single instance of this RegExp in a lazily allocated static. It looks like this function might only be called once when an exception is thrown though?",
        "createdAt" : "2017-10-10T04:26:59Z",
        "updatedAt" : "2017-10-10T04:26:59Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "3d880a31-d055-459a-a36d-48981bf58693",
        "parentId" : "79e5052c-f355-4495-a5c1-65599fddd890",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "The function is called once per exception to clean up stack trace, yes.",
        "createdAt" : "2017-10-10T04:33:09Z",
        "updatedAt" : "2017-10-10T04:33:09Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b97156f44d9d0ee4c68049f4c5b1419e0f41e79",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +330,334 @@      '_FrameCallbackEntry',\n    ];\n    final RegExp stackParser = new RegExp(r'^#[0-9]+ +([^.]+).* \\(([^/]*)/.+:[0-9]+(?::[0-9]+)?\\)$');\n    final RegExp packageParser = new RegExp(r'^([^:]+):(.+)$');\n    final List<String> result = <String>[];"
  },
  {
    "id" : "54a6769b-3c15-4329-8b78-e198aa50f6ea",
    "prId" : 30983,
    "prUrl" : "https://github.com/flutter/flutter/pull/30983#pullrequestreview-226675651",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bafbdb86-76c5-4516-8ef7-9bfffbcf286e",
        "parentId" : null,
        "authorId" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "body" : "I think this line needs updating?",
        "createdAt" : "2019-04-14T14:16:22Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "tags" : [
        ]
      },
      {
        "id" : "3a6b088e-42a2-4cb3-a70c-fd586e21d471",
        "parentId" : "bafbdb86-76c5-4516-8ef7-9bfffbcf286e",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Sorry can you clarify what about this line should be updated? It is still technically correct that every FlutterError starts with an ErrorSummary although sometimes the ErrorSummary is inferred parsing the text of the message.",
        "createdAt" : "2019-04-14T16:56:56Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "5b34b8b6-e0a3-4919-aea4-f8e4ff6b26ff",
        "parentId" : "bafbdb86-76c5-4516-8ef7-9bfffbcf286e",
        "authorId" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "body" : "Sorry, I wasn't clear.  I just wondered if you wanted to remove the reference to the `ErrorSummary` type in favor of a string since that's what folks will be passing in.  A not really so no worries either way!",
        "createdAt" : "2019-04-15T14:20:47Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ba17fce6036bd4207970d1d5a528fe05af1b596",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +119,123 @@///\n/// A [FlutterError] must start with an [ErrorSummary] and may not contain\n/// multiple summaries.\n///\n/// See also:"
  },
  {
    "id" : "5bcc64eb-4335-4c26-9ecd-abb28f4d6ffd",
    "prId" : 30983,
    "prUrl" : "https://github.com/flutter/flutter/pull/30983#pullrequestreview-226675917",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84272685-fb2d-49ad-99fb-b307bf719a89",
        "parentId" : null,
        "authorId" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "body" : "Consider dropping the `new` here and below?",
        "createdAt" : "2019-04-14T14:17:53Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "tags" : [
        ]
      },
      {
        "id" : "88ba8b27-f191-4352-a4d7-a6a5ba411181",
        "parentId" : "84272685-fb2d-49ad-99fb-b307bf719a89",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "I think that is a DartDoc convention based on the 90+ uses of this pattern in package:flutter. Presumably that lets the link go to the constructor call instead of the class definition.",
        "createdAt" : "2019-04-14T16:58:49Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "ad86e0b7-3086-489e-be81-c50c3e8180db",
        "parentId" : "84272685-fb2d-49ad-99fb-b307bf719a89",
        "authorId" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "body" : "Oh, right. Makes sense. Thanks!",
        "createdAt" : "2019-04-15T14:21:10Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ba17fce6036bd4207970d1d5a528fe05af1b596",
    "line" : 389,
    "diffHunk" : "@@ -1,1 +450,454 @@  /// do end the error message with a period).\n  ///\n  /// This constructor defers to the [new FlutterError.fromParts] constructor.\n  /// The first line is wrapped in an implied [ErrorSummary], and subsequent\n  /// lines are wrapped in implied [ErrorDescription]s. Consider using the"
  },
  {
    "id" : "237d037d-a151-45fa-b8c8-d7a590919517",
    "prId" : 30983,
    "prUrl" : "https://github.com/flutter/flutter/pull/30983#pullrequestreview-228407039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e5e36dc-39c1-4d1f-a504-8f3ef9fcf8ce",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Why's this not a limitation for the other Error* classes?",
        "createdAt" : "2019-04-18T00:36:12Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "56e1cd71-63ba-48ca-b85b-142bcedc6bb6",
        "parentId" : "1e5e36dc-39c1-4d1f-a504-8f3ef9fcf8ce",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "The limitation should apply to all these classes. Updated the documentation in all 3 similar classes to reflect that.",
        "createdAt" : "2019-04-18T17:17:46Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ba17fce6036bd4207970d1d5a528fe05af1b596",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +160,164 @@/// * [FlutterError], which is the most common place to use an [ErrorHint].\nclass ErrorHint extends _ErrorDiagnostic {\n  /// A lint enforces that this constructor can only be called with a string\n  /// literal to match the limitations of the Dart Kernel transformer that\n  /// optionally extracts out objects referenced using string interpolation in"
  },
  {
    "id" : "674e9c22-39c7-43b1-bb7f-406bd2c2bad8",
    "prId" : 30983,
    "prUrl" : "https://github.com/flutter/flutter/pull/30983#pullrequestreview-228538649",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ceb7b200-da72-4b1f-8202-af659d936d91",
        "parentId" : null,
        "authorId" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "body" : "If the advice is obvious from the summary/description of the error, it probably should not be included in the message? I feel this line is a bit extranous. ",
        "createdAt" : "2019-04-18T19:31:57Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "tags" : [
        ]
      },
      {
        "id" : "1c4767a1-d720-41d3-9a18-826ee2b83a61",
        "parentId" : "ceb7b200-da72-4b1f-8202-af659d936d91",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "I do like having the advice duplicated here as a reminder to only use hints for things that meet the fairly narrow charter of what a hint is.",
        "createdAt" : "2019-04-18T22:50:02Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ba17fce6036bd4207970d1d5a528fe05af1b596",
    "line" : 152,
    "diffHunk" : "@@ -1,1 +149,153 @@///\n/// If your message provides obvious advice that is always applicable it is an\n/// [ErrorDescription] not a hint.\n///\n/// See also:"
  },
  {
    "id" : "fe658d1b-56b6-4846-9789-1982371d3b49",
    "prId" : 30983,
    "prUrl" : "https://github.com/flutter/flutter/pull/30983#pullrequestreview-230841997",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0772650f-de83-43ac-877f-ba62520d434d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this one surprises me. The `context` was intended to just be a string that gets interpolated into another; does it still work well if it's a DiagnosticsNode?",
        "createdAt" : "2019-04-19T23:38:15Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "b03e7cc0-4f25-4a9a-b8b8-e59f93b259fb",
        "parentId" : "0772650f-de83-43ac-877f-ba62520d434d",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Yes. DiagnosticsNode in general and ErrorDescription in particular works great with String interpolation. As long as you wrap each call to string interpolation with an ErrorDescription you will maintain all the nested object references so that they are still clickable in the inspector regardless of how much nested interpolation you did.\r\nBasically you can think of an ErrorDescription as just a String with object references captured for purposes of String interpolation.\r\n\r\nExamples of use cases this supports:\r\n```dart\r\n          context: ErrorDescription('during a service extension callback for \"$method\"'),\r\n          context: ErrorDescription('while notifying listeners for $runtimeType'),\r\n```\r\nAdvanced case in debugFillProperties for FlutterErrorDetails where we use this\r\n```\r\n    final DiagnosticsNode verb = ErrorDescription('thrown${ context != null ? ErrorDescription(\" $context\") : \"\"}');\r\n\r\n```",
        "createdAt" : "2019-04-20T00:01:05Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "93ed54a2-2af7-4bd1-ab2f-2ecee78e3c55",
        "parentId" : "0772650f-de83-43ac-877f-ba62520d434d",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "@Hixie does this address your concerns about context being a DiagnosticsNode? Put more concisely: this allows the same interpolation use case and if you use ErrorDescription in every level of interpolation you don't lose the object references.",
        "createdAt" : "2019-04-24T21:28:14Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "982680b7-2654-4f79-84d4-4fdd7b89b721",
        "parentId" : "0772650f-de83-43ac-877f-ba62520d434d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Yeah, that sounds good.",
        "createdAt" : "2019-04-25T19:30:41Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ba17fce6036bd4207970d1d5a528fe05af1b596",
    "line" : 192,
    "diffHunk" : "@@ -1,1 +228,232 @@  /// the network\" (for the context \"while obtaining the image from the\n  /// network\").\n  final DiagnosticsNode context;\n\n  /// A callback which filters the [stack] trace. Receives an iterable of"
  },
  {
    "id" : "016936cb-ae5d-4320-bae8-96bd4e5fd487",
    "prId" : 30983,
    "prUrl" : "https://github.com/flutter/flutter/pull/30983#pullrequestreview-232476601",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d86b0355-1c65-46d9-97c8-adaaf5dd681a",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "is it on purpose that the following is just a regular `//` comment and not a dart docs `///` comment? Why?",
        "createdAt" : "2019-04-30T08:49:05Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "3fc5ae8c-a5da-4809-813c-5ae03bd42fba",
        "parentId" : "d86b0355-1c65-46d9-97c8-adaaf5dd681a",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "The problem is we don't want this in the official docs and are worried about someone copying and pasting it so it would show up in the officel docs.  This should not be in the public docs because it references privates. There is a discussion of this issue with Ian. ",
        "createdAt" : "2019-05-01T02:00:52Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ba17fce6036bd4207970d1d5a528fe05af1b596",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +38,42 @@  /// constructors for [ErrorSummary], [ErrorDetails], and [ErrorHint] to use\n  /// this constructor.\n  //\n  // ```dart\n  // _ErrorDiagnostic('Element $element must be $color')"
  },
  {
    "id" : "25271276-2e35-4c5a-be12-3a7caddebfd4",
    "prId" : 35750,
    "prUrl" : "https://github.com/flutter/flutter/pull/35750#pullrequestreview-264256126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11c6c916-3e15-4d6a-80a8-f056602d6a77",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "There are already some tests that check this output but they are going on the SCREAMING CAPS VERSION of this message. If you search for EXCEPTION CAUGHT BY you should find them.",
        "createdAt" : "2019-07-16T21:51:15Z",
        "updatedAt" : "2019-07-19T14:36:33Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "4321b5cc-fa91-4cba-a45a-f2b1d4f365db",
        "parentId" : "11c6c916-3e15-4d6a-80a8-f056602d6a77",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "https://github.com/flutter/flutter/blob/07735578af6864adf078a8cf5343736dbc00be8a/packages/flutter/lib/src/foundation/diagnostics.dart#L1210\r\nIt seems this converts it to upper case and it is majority of the test that is test on.\r\nMaybe create a test specifically test toStringShort?",
        "createdAt" : "2019-07-17T17:49:16Z",
        "updatedAt" : "2019-07-19T14:36:33Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "fcb0648a-a4c6-4b92-b6bc-8a68f2647c08",
        "parentId" : "11c6c916-3e15-4d6a-80a8-f056602d6a77",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "I added a new test for `FlutterErrorDetails.toStringShort`.",
        "createdAt" : "2019-07-19T14:44:00Z",
        "updatedAt" : "2019-07-19T14:44:01Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "3545c04e0f5ca5c1814be9e476d70472af2a98e2",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +460,464 @@  @override\n  String toStringShort() {\n    return library != null ? 'Exception caught by $library' : 'Exception caught';\n  }\n"
  },
  {
    "id" : "e5200a8d-e463-4e19-9b11-07ec1033f73f",
    "prId" : 48413,
    "prUrl" : "https://github.com/flutter/flutter/pull/48413#pullrequestreview-347687895",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "483c74f0-18be-400e-ac4a-a47afcf97c98",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Maybe reference https://github.com/dart-lang/sdk/issues/40117 here",
        "createdAt" : "2020-01-23T15:41:15Z",
        "updatedAt" : "2020-01-29T19:00:14Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "0d26be19-b1fa-4a59-8a6b-d622264a3d2f",
        "parentId" : "483c74f0-18be-400e-ac4a-a47afcf97c98",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Done",
        "createdAt" : "2020-01-24T00:05:09Z",
        "updatedAt" : "2020-01-29T19:00:14Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "3438250d6dd5f54cfa0aa3dc360cea809dab68ce",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +58,62 @@  /// The method name for this frame line.\n  ///\n  /// On web, private methods are wrapped with `[]`.\n  final String method;\n"
  },
  {
    "id" : "ced57d67-f180-4fa2-87a1-627c4051688f",
    "prId" : 53843,
    "prUrl" : "https://github.com/flutter/flutter/pull/53843#pullrequestreview-394848081",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98e69a04-e421-4003-8f93-fdaf4cf0bc35",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "could this just be\r\n\r\n```suggestion\r\nstatic FlutterExceptionHandler onError = presentError;\r\n```",
        "createdAt" : "2020-04-16T00:03:07Z",
        "updatedAt" : "2020-04-22T17:03:09Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "0e053037-df25-4567-88d9-a0a7f4b3477f",
        "parentId" : "98e69a04-e421-4003-8f93-fdaf4cf0bc35",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "This is intentional. ```static FlutterExceptionHandler onError = presentError;``` will cause an issue\r\nwhen other people override `presentError`. If someone do `Flutter.presentError = some other method`,  `flutter.onError` will still use the old `presentError` instead of the new one.",
        "createdAt" : "2020-04-16T17:17:11Z",
        "updatedAt" : "2020-04-22T17:03:09Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "0a4f672b-a309-42a2-8942-9071b4f189a2",
        "parentId" : "98e69a04-e421-4003-8f93-fdaf4cf0bc35",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Ah, makes sense.",
        "createdAt" : "2020-04-16T17:26:19Z",
        "updatedAt" : "2020-04-22T17:03:09Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "2192f603f620d5bc9f18be4af772bd35754b1992",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +726,730 @@  /// Set this to null to silently catch and ignore errors. This is not\n  /// recommended.\n  static FlutterExceptionHandler onError = (FlutterErrorDetails details) => presentError(details);\n\n  /// Called whenever the Flutter framework wants to present an error to the"
  },
  {
    "id" : "5c6e201d-6dcd-4bcc-aef5-8c01757a42c3",
    "prId" : 54291,
    "prUrl" : "https://github.com/flutter/flutter/pull/54291#pullrequestreview-390279966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "febac6da-3929-4747-b376-33ac377f74d5",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "How much does this increase binary size?  That was the primary driver of this change",
        "createdAt" : "2020-04-08T18:55:17Z",
        "updatedAt" : "2020-04-08T18:55:17Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "728f5c5f-7e0d-44b1-9501-fb867e7c12fb",
        "parentId" : "febac6da-3929-4747-b376-33ac377f74d5",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Ideally we want to completely avoid retaining the diagnostics related classes",
        "createdAt" : "2020-04-08T18:56:00Z",
        "updatedAt" : "2020-04-08T18:56:01Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "06bcd72f-57ab-40e6-b607-50bc0199c8d2",
        "parentId" : "febac6da-3929-4747-b376-33ac377f74d5",
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "This will slightly reduce the binary size.  For the sample app in https://github.com/flutter/flutter/issues/54038 the total size of the segments in libapp.so is:\r\n  * 3611038 with this patch\r\n  * 3613222 without\r\n\r\nThe diagnostics classes are present in the release build, but their `toString` methods return an empty string.  `FlutterError.toString` was passing the diagnostics nodes to the `TextTreeRenderer`, which just yields a series of empty strings.  With this patch `FlutterError.toString` will return the value of the `ErrorSummary`, and the compiler can eliminate the `TextTreeRenderer` invocation.\r\n",
        "createdAt" : "2020-04-08T19:30:58Z",
        "updatedAt" : "2020-04-08T19:30:59Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      },
      {
        "id" : "a878531e-1d2e-4ffd-b7c5-4365c925ebca",
        "parentId" : "febac6da-3929-4747-b376-33ac377f74d5",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Ahh ok nice ",
        "createdAt" : "2020-04-08T19:48:00Z",
        "updatedAt" : "2020-04-08T19:48:01Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "17b1d1c49147007e3fc6f561601ca1b6c574a9aa",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +892,896 @@  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {\n    if (kReleaseMode) {\n      final Iterable<_ErrorDiagnostic> errors = diagnostics.whereType<_ErrorDiagnostic>();\n      return errors.isNotEmpty ? errors.first.valueToString() : toStringShort();\n    }"
  },
  {
    "id" : "596029dc-52d3-4772-a84a-0d2669b66728",
    "prId" : 55001,
    "prUrl" : "https://github.com/flutter/flutter/pull/55001#pullrequestreview-398609496",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "374f3573-aa3d-46df-befd-84936c695b86",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Can this be wrapped in a `@{tool ...}` section?",
        "createdAt" : "2020-04-22T16:09:01Z",
        "updatedAt" : "2020-04-23T17:25:49Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "4a06bc92-59b0-44fc-a534-f322ac99f5ec",
        "parentId" : "374f3573-aa3d-46df-befd-84936c695b86",
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "Sure! Do you mean an app that throws an error and crashes? I can't wrap it in a `{@tool ...}` and pass the analyzer without adding a lot of irrelevant code.",
        "createdAt" : "2020-04-22T17:19:39Z",
        "updatedAt" : "2020-04-23T17:25:49Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "35c1dcdc-d74c-4414-b0e7-04609c616257",
        "parentId" : "374f3573-aa3d-46df-befd-84936c695b86",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Can you just wrap this in a method to make analyzer happy?",
        "createdAt" : "2020-04-22T21:39:16Z",
        "updatedAt" : "2020-04-23T17:25:49Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "1460e91b30fbb517d658a84c7b8fe7a5617b5a02",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +333,337 @@/// [FlutterError.reportError].\n///\n/// ```dart\n/// void main() {\n///   try {"
  },
  {
    "id" : "50055738-d5cf-4c4a-8089-75d9ec4c8f2c",
    "prId" : 60478,
    "prUrl" : "https://github.com/flutter/flutter/pull/60478#pullrequestreview-441051522",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3de9d7b5-d506-43dc-950a-f2a2267bb004",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "nit: might be worth mentioning that this should be used if someone is using `package:stack_trace`, with a small example of how.",
        "createdAt" : "2020-07-01T17:07:00Z",
        "updatedAt" : "2020-07-04T07:29:54Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "356b65fa7644bd37a267081003123cd54874b0a7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +30,34 @@\n/// Signature for a function that demangles [StackTrace] objects into a format\n/// that can be parsed by [StackFrame].\n///\n/// See also:"
  }
]