[
  {
    "id" : "b66073e2-50da-4d56-9c91-7a4bc64b38fb",
    "prId" : 17977,
    "prUrl" : "https://github.com/flutter/flutter/pull/17977#pullrequestreview-124091110",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd6bf879-af54-4669-8a9c-e9acbe9cf163",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "docs should mention that this runs the code synchronously, since it's not necessarily obvious.",
        "createdAt" : "2018-05-29T17:20:37Z",
        "updatedAt" : "2018-05-29T17:20:37Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e671d66080b45a9764036178b40fe6a8978aaa74",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +44,48 @@///\n/// Returns the result of running [action], wrapped in a `Future` if the action\n/// was synchronous.\nFuture<T> debugInstrumentAction<T>(String description, FutureOr<T> action()) {\n  if (!debugInstrumentationEnabled)"
  },
  {
    "id" : "d4cfbd9e-3605-4f7d-ae0f-0ef03cf180b4",
    "prId" : 17977,
    "prUrl" : "https://github.com/flutter/flutter/pull/17977#pullrequestreview-124092299",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf965bc2-7add-4c72-88c4-6028bdef621d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "these asserts aren't really saving you much. You're still doing a try/finally block, still comparing the results' types, still creating futures, etc. The overhead saved by not doing the stopwatch part is _de minimis_.\r\n\r\nIf we want to ignore the flag in release builds, use a pattern like:\r\n\r\n```dart\r\n  bool instrument = false;\r\n  assert(() { instrument = debugInstrumentationEnabled; return true; });\r\n  if (instrument) {\r\n    // ...\r\n  } else {\r\n    // ...\r\n  }\r\n```\r\n\r\nThat way the instrumented code will get optimised out entirely in release builds.",
        "createdAt" : "2018-05-29T17:23:40Z",
        "updatedAt" : "2018-05-29T17:23:41Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e671d66080b45a9764036178b40fe6a8978aaa74",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +50,54 @@\n  Stopwatch stopwatch;\n  assert(() {\n    stopwatch = new Stopwatch()..start();\n    return true;"
  },
  {
    "id" : "53388b7a-f8ee-4f18-878e-8a6af68766c7",
    "prId" : 17977,
    "prUrl" : "https://github.com/flutter/flutter/pull/17977#pullrequestreview-124092567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4e6c967-2344-4906-888c-b2e3f56b774c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "for everyone's sanity I recommend deciding if action should return a Future or not, and just supporting that option, not both.\r\n\r\nIf you really have to support both, I'd have two different methods rather than shoe-horning it into one.",
        "createdAt" : "2018-05-29T17:24:23Z",
        "updatedAt" : "2018-05-29T17:24:23Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e671d66080b45a9764036178b40fe6a8978aaa74",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +45,49 @@/// Returns the result of running [action], wrapped in a `Future` if the action\n/// was synchronous.\nFuture<T> debugInstrumentAction<T>(String description, FutureOr<T> action()) {\n  if (!debugInstrumentationEnabled)\n    return new Future<T>.value(action());"
  },
  {
    "id" : "469be2ee-829d-458e-980c-91932915acc6",
    "prId" : 17977,
    "prUrl" : "https://github.com/flutter/flutter/pull/17977#pullrequestreview-124093188",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1e65fde-829b-4f97-99a7-89255f587af7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Consider also reporting this to the `Timeline`.",
        "createdAt" : "2018-05-29T17:25:43Z",
        "updatedAt" : "2018-05-29T17:25:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "1bf818b2-7ef0-4c54-9f02-f16153f29a67",
        "parentId" : "b1e65fde-829b-4f97-99a7-89255f587af7",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(If you want to only do that in profile and debug builds, you can use `profile()`.)",
        "createdAt" : "2018-05-29T17:26:00Z",
        "updatedAt" : "2018-05-29T17:26:00Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e671d66080b45a9764036178b40fe6a8978aaa74",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +75,79 @@  }\n  return returnResult;\n}\n\n/// Arguments to whitelist [Timeline] events in order to be shown in the"
  },
  {
    "id" : "1cf4a295-9fbf-4091-bba5-61cafb5d09a1",
    "prId" : 23530,
    "prUrl" : "https://github.com/flutter/flutter/pull/23530#pullrequestreview-168615619",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9fd524e-9b9e-438d-9d36-302db556c695",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit that cannot be fixed in this PR: I wish [Timeline.startSync] would explain what the `arguments` argument is used for. Docs just state \"Optionally takes a Map of arguments.\" - Thank you, I can see that from the method signature... ",
        "createdAt" : "2018-10-25T21:01:13Z",
        "updatedAt" : "2018-10-25T21:04:35Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "726f6b4b-b40c-4c0f-8461-371da47b4a02",
        "parentId" : "c9fd524e-9b9e-438d-9d36-302db556c695",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "file a bug on the dart sdk?",
        "createdAt" : "2018-10-25T22:41:43Z",
        "updatedAt" : "2018-10-25T22:41:44Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "45c0b2455aa3ecfa842d39c08d80d0bb704567e8",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +69,73 @@/// See also:\n///\n///  * [Timeline.startSync], which typically takes this value as its `arguments`\n///    argument.\nconst Map<String, String> timelineWhitelistArguments = <String, String>{"
  },
  {
    "id" : "26ea65e1-91c0-4c92-bed7-2adad454c00e",
    "prId" : 33488,
    "prUrl" : "https://github.com/flutter/flutter/pull/33488#pullrequestreview-243573200",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4af6da1b-f949-4589-9b6a-60fd4e348172",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "`debug.dart` doesn't really feel like the right place for this since it is not a debug method and called from regular code?",
        "createdAt" : "2019-05-29T23:27:06Z",
        "updatedAt" : "2019-05-30T00:10:14Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "60eaddac-fce9-4b7e-9368-8d6ca81f1130",
        "parentId" : "4af6da1b-f949-4589-9b6a-60fd4e348172",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Hopefully toDiagnosticsNode and toString are debug code...",
        "createdAt" : "2019-05-30T00:04:37Z",
        "updatedAt" : "2019-05-30T00:10:14Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "38a2c26522e6578abd97f02d4c5f5e9b3caf64cc",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +84,88 @@///\n/// This behavior can be overriden by [debugDoublePrecision].\nString debugFormatDouble(double value) {\n  if (value == null) {\n    return 'null';"
  }
]