[
  {
    "id" : "ab6519b0-ff14-4142-8dbb-f9c54ac6e3bd",
    "prId" : 11458,
    "prUrl" : "https://github.com/flutter/flutter/pull/11458#pullrequestreview-53645232",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcb316bb-960c-4753-9b08-9497e3449bcb",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "If style is allowed to be null, update the docs...",
        "createdAt" : "2017-08-01T21:41:14Z",
        "updatedAt" : "2017-08-03T16:23:04Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "694d63ca9b1980078316ea3a9a8c8e1dd8bc6dd6",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +583,587 @@    this.showName: true,\n    this.showSeparator: true,\n  }) : assert(showName != null),\n       assert(showSeparator != null) {\n    // A name ending with ':' indicates that the user forgot that the ':' will"
  },
  {
    "id" : "131abc1b-c485-4a32-811d-f5f080a7abbb",
    "prId" : 11514,
    "prUrl" : "https://github.com/flutter/flutter/pull/11514#pullrequestreview-54449222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de8b2bb2-82c7-4bfd-99c9-9898bcd0fd12",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "`between the [name] and the description`?",
        "createdAt" : "2017-08-04T18:53:36Z",
        "updatedAt" : "2017-08-04T18:53:36Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "742c53cb7246112504eeee8446e284ed5d955940",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +629,633 @@  String toDescription({ TextTreeConfiguration parentConfiguration });\n\n  /// Whether to show a separator between [name] and description.\n  ///\n  /// If false, name and description should be shown with no separation."
  },
  {
    "id" : "1559df8a-d930-4872-b8c5-b301e97463c7",
    "prId" : 11995,
    "prUrl" : "https://github.com/flutter/flutter/pull/11995#pullrequestreview-61984228",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "860660e5-8ff4-4594-820c-c65e2e5fee73",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "these docs should talk about `missingIfNull`",
        "createdAt" : "2017-09-09T19:35:39Z",
        "updatedAt" : "2017-09-12T00:54:32Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "1ad344e2-5968-4b50-9bf4-8cb9a8003474",
        "parentId" : "860660e5-8ff4-4594-820c-c65e2e5fee73",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "done",
        "createdAt" : "2017-09-11T23:24:33Z",
        "updatedAt" : "2017-09-12T00:54:32Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "632c0905596ef6058c3ab0e9b298f59f6dda95ad",
    "line" : 857,
    "diffHunk" : "@@ -1,1 +1801,1805 @@  /// If the [value] of the property equals [defaultValue] the priority [level]\n  /// of the property is downgraded to [DiagnosticLevel.fine] as the property\n  /// value is uninteresting.\n  ///\n  /// [defaultValue] has type [T] or is [kNoDefaultValue]."
  },
  {
    "id" : "1aca60e0-cf86-4650-a4c5-413f61ada58b",
    "prId" : 30983,
    "prUrl" : "https://github.com/flutter/flutter/pull/30983#pullrequestreview-232477249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "925c4dfc-3fe9-4b17-940b-317d1b19ed5a",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Here too.",
        "createdAt" : "2019-04-30T08:52:54Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "3dd22c46-7068-4543-b44c-c401b49abee0",
        "parentId" : "925c4dfc-3fe9-4b17-940b-317d1b19ed5a",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "done",
        "createdAt" : "2019-05-01T02:06:38Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ba17fce6036bd4207970d1d5a528fe05af1b596",
    "line" : 394,
    "diffHunk" : "@@ -1,1 +742,746 @@/// See also:\n///\n///  * [DiagnosticsTreeStyle.shallow]\nfinal TextTreeConfiguration shallowTextConfiguration = TextTreeConfiguration(\n  prefixLineOne: '',"
  },
  {
    "id" : "e85c6fc9-c5dc-4bd1-a1b6-fad81c855edd",
    "prId" : 31960,
    "prUrl" : "https://github.com/flutter/flutter/pull/31960#pullrequestreview-232826146",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "168970dc-a408-4639-8b33-c41aa9c1fefb",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Using the type of the value is more useful in this case as you can't expand a null value anyway. My test was failing until I fixed this somewhat minor bug.",
        "createdAt" : "2019-05-02T02:25:59Z",
        "updatedAt" : "2019-05-02T02:32:54Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "3dfe4de63072b931a3ea69a28698ad834a5faf5e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +2487,2491 @@    json['propertyType'] = propertyType.toString();\n    json['defaultLevel'] = describeEnum(_defaultLevel);\n    if (value is Diagnosticable || value is DiagnosticsNode)\n      json['isDiagnosticableValue'] = true;\n    return json;"
  },
  {
    "id" : "f5957edc-48aa-4f9a-b651-c46f4d05b36d",
    "prId" : 34474,
    "prUrl" : "https://github.com/flutter/flutter/pull/34474#pullrequestreview-250009503",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8820626-6d3a-4811-99f4-4742240b7963",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "This filters everything out of release mode but I suspect not in a way that helps tree shaking. Perhaps I'm missing the intent of this change?",
        "createdAt" : "2019-06-14T15:56:50Z",
        "updatedAt" : "2019-06-15T07:55:56Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "cf00d4cd-f0dd-45bd-a665-d8161b2f1a32",
        "parentId" : "e8820626-6d3a-4811-99f4-4742240b7963",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "When I re-compiled with this set, I saw fewer bytes in the snapshots.  It's possible that I didn't do this in isolation though.\r\n\r\nMy thought is that making these properties constant in release mode is helping tree shaking.",
        "createdAt" : "2019-06-14T16:02:47Z",
        "updatedAt" : "2019-06-15T07:55:56Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "ca12744b-8488-46b9-b6da-329655eb9f9d",
        "parentId" : "e8820626-6d3a-4811-99f4-4742240b7963",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "In my experiments about half a year ago the tree shaker was not smart enough to act on the always-true or always-false return value of a method. Did anything change there?",
        "createdAt" : "2019-06-14T16:24:04Z",
        "updatedAt" : "2019-06-15T07:55:56Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "6445ca3d-6b2c-4433-a47d-a78f55b3a382",
        "parentId" : "e8820626-6d3a-4811-99f4-4742240b7963",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Apparently something did.  It's a small difference but it does take some size off.",
        "createdAt" : "2019-06-14T16:40:18Z",
        "updatedAt" : "2019-06-15T07:55:56Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e43a8295a331e7093c5cad4c8adcfb99352d4d0",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +1470,1474 @@  /// If `minLevel` is [DiagnosticLevel.hidden] no diagnostics will be filtered.\n  /// If `minLevel` is [DiagnosticLevel.off] all diagnostics will be filtered.\n  bool isFiltered(DiagnosticLevel minLevel) => kReleaseMode ? true : level.index < minLevel.index;\n\n  /// Priority level of the diagnostic used to control which diagnostics should"
  },
  {
    "id" : "3ad421ae-0c24-4712-93ec-c992d09d32e3",
    "prId" : 34474,
    "prUrl" : "https://github.com/flutter/flutter/pull/34474#pullrequestreview-250738051",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c979a9d-e909-4613-9b99-39fb4a332aef",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This also seems odd for the same reasons...",
        "createdAt" : "2019-06-14T16:24:29Z",
        "updatedAt" : "2019-06-15T07:55:56Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "c882a7a3-d11d-4f11-82b9-46507465a571",
        "parentId" : "4c979a9d-e909-4613-9b99-39fb4a332aef",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "This definitely makes a difference today.",
        "createdAt" : "2019-06-14T16:39:00Z",
        "updatedAt" : "2019-06-15T07:55:56Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "c4598980-53a1-4660-819a-9d0ad8b25312",
        "parentId" : "4c979a9d-e909-4613-9b99-39fb4a332aef",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "(For AOT mode and Dart2js apparently)",
        "createdAt" : "2019-06-14T16:39:16Z",
        "updatedAt" : "2019-06-15T07:55:56Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "29d58f3a-a2ee-4e72-a75d-782cdd2b5e2e",
        "parentId" : "4c979a9d-e909-4613-9b99-39fb4a332aef",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "There are other getters for level. We should probably also override them for release mode.",
        "createdAt" : "2019-06-17T20:48:14Z",
        "updatedAt" : "2019-06-17T20:48:15Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e43a8295a331e7093c5cad4c8adcfb99352d4d0",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +1481,1485 @@  /// whether an exception is thrown computing a property value\n  /// [DiagnosticLevel.error] is returned.\n  DiagnosticLevel get level => kReleaseMode ? DiagnosticLevel.hidden : DiagnosticLevel.info;\n\n  /// Whether the name of the property should be shown when showing the default"
  },
  {
    "id" : "e603972d-07ca-46cb-824d-3c39328208ba",
    "prId" : 34474,
    "prUrl" : "https://github.com/flutter/flutter/pull/34474#pullrequestreview-250140688",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e719eb0-825f-4f88-a305-bfdcc86ccf82",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "now you will NPE inside the toStringDeep code unless you add extra checks there to short circuit.",
        "createdAt" : "2019-06-14T17:34:18Z",
        "updatedAt" : "2019-06-15T07:55:56Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "ef64c8b6-8334-4c36-9044-b0826f0806c4",
        "parentId" : "0e719eb0-825f-4f88-a305-bfdcc86ccf82",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Changed that.",
        "createdAt" : "2019-06-14T21:46:18Z",
        "updatedAt" : "2019-06-15T07:55:56Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e43a8295a331e7093c5cad4c8adcfb99352d4d0",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +1663,1667 @@    assert(style != null);\n    switch (style) {\n      case DiagnosticsTreeStyle.none:\n        return null;\n      case DiagnosticsTreeStyle.dense:"
  },
  {
    "id" : "3ac75ae3-b6ab-4205-bb11-114bd4a46876",
    "prId" : 37515,
    "prUrl" : "https://github.com/flutter/flutter/pull/37515#pullrequestreview-270421469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d6e4752-d0ca-4808-bdee-317ae4700dec",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Why not support this without forking the cases for regular and double properties?\r\nIf you wrote\r\n```dart\r\nIterable<String> formattedValues = value.map((T v) { return v is double ? debugFormatDouble : v.toString(); });\r\n```\r\nThen you could reuse the existing logic for formatting the output in both the line break and regular cases. Someone might add an additional customization for formatting iterables in the future as the current options aren't always ideal so it would be nice to keep one copy of that code.",
        "createdAt" : "2019-08-02T21:49:20Z",
        "updatedAt" : "2019-08-02T22:40:31Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "0c685bfb-dcf6-48e4-8a3b-3294467fc584",
        "parentId" : "4d6e4752-d0ca-4808-bdee-317ae4700dec",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Triggering the transform on whether `T== double` would also be fine with me. E.g\r\n\r\nIterable<Object> formattedValue = T == double ? value.map(debugFormatDouble) : value;",
        "createdAt" : "2019-08-02T21:51:26Z",
        "updatedAt" : "2019-08-02T22:40:31Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "9ace1c13-732d-4694-ae59-4e51cd294e69",
        "parentId" : "4d6e4752-d0ca-4808-bdee-317ae4700dec",
        "authorId" : "6f375fe5-c051-4de5-a3bf-80579a781e7f",
        "body" : "Thank you for suggestion. I had tried value.map(debugFormatDouble) but it complained about closure, somehow T == double type check didn't flow through.\r\n\r\nVery hard to pass flutter lint rules on this one since v as double is not allowed and T == double keeps v's type as T so you can pass without casting. So (T == double && v is double) was only way to unify since \"v is double\" won't work on web platform since int and double use num.\r\n\r\nI updated the code to a simplified version.",
        "createdAt" : "2019-08-02T22:40:37Z",
        "updatedAt" : "2019-08-02T22:40:37Z",
        "lastEditedBy" : "6f375fe5-c051-4de5-a3bf-80579a781e7f",
        "tags" : [
        ]
      }
    ],
    "commit" : "276a06173953bcc6f49c499507f423a5347d8206",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +2232,2236 @@      }\n    });\n\n    if (parentConfiguration != null && !parentConfiguration.lineBreakProperties) {\n      // Always display the value as a single line and enclose the iterable"
  },
  {
    "id" : "bdb83c9c-d55a-4014-9f2b-81f4e82c6814",
    "prId" : 37515,
    "prUrl" : "https://github.com/flutter/flutter/pull/37515#pullrequestreview-270436207",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7d50b76-03ab-468e-a3b5-939d9bf94c06",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "@munificent It is unfortunate Flutter lints are requiring this check when all we want to do is check.\r\nCan we get the T == double check to flow through or correct the Flutter lints to not worry about sealed types like double?",
        "createdAt" : "2019-08-02T22:48:33Z",
        "updatedAt" : "2019-08-02T22:48:34Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "9390c2f4-847c-4542-9903-49ff0e2597c5",
        "parentId" : "c7d50b76-03ab-468e-a3b5-939d9bf94c06",
        "authorId" : "cdb816a8-95c4-4353-8393-0013979a51b3",
        "body" : "Checking the type parameter for each element doesn't make much sense to me. It's a property of the surrounding class, so it's going to be the same each time. Why not just do `if (v is double)`?\r\n\r\nThat accomplishes everything you're trying to express. If you really want to check the type argument, you could do:\r\n\r\n```\r\nIterable<String> formattedValues;\r\nif (T == double) {\r\n  formattedValues = value.map((T v) => debugFormatDouble(v as double));\r\n} else {\r\n  formattedValues = value.map((T v) => v.toString());\r\n}\r\n```\r\n\r\nBut you still have to do some kind of runtime type check per element because Dart doesn't have anything like template specialization.",
        "createdAt" : "2019-08-03T00:22:27Z",
        "updatedAt" : "2019-08-03T00:22:28Z",
        "lastEditedBy" : "cdb816a8-95c4-4353-8393-0013979a51b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "276a06173953bcc6f49c499507f423a5347d8206",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +2226,2230 @@\n    final Iterable<String> formattedValues = value.map((T v) {\n      if (T == double && v is double) {\n        return debugFormatDouble(v);\n      } else {"
  },
  {
    "id" : "105cd118-29e6-47ed-ae94-2c99dcdf4a00",
    "prId" : 39354,
    "prUrl" : "https://github.com/flutter/flutter/pull/39354#pullrequestreview-280536207",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f1ec223-8317-4fe0-b689-4d24e53fdb63",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "The value is a Map<String, T> not Iterable<T> so the word Iterable in the name doesn't make sense. I would suggest naming this FlagsProperty or FlagsSummaryProperty<T>",
        "createdAt" : "2019-08-27T22:31:19Z",
        "updatedAt" : "2019-08-29T01:44:16Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "190f5c34-5968-438d-a9d0-d59a1dda0222",
        "parentId" : "6f1ec223-8317-4fe0-b689-4d24e53fdb63",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Another idea is ListenerSummary, force the value type to be Function, and remove the word Property completely as this is really a summary of multiple properties.",
        "createdAt" : "2019-08-27T22:38:40Z",
        "updatedAt" : "2019-08-29T01:44:16Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "20247367-3888-449a-af7d-860a7983cbb9",
        "parentId" : "6f1ec223-8317-4fe0-b689-4d24e53fdb63",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "I changed the name to `FlagsSummary` since I'm still wondering if there are other opaque values than closures.",
        "createdAt" : "2019-08-28T00:09:07Z",
        "updatedAt" : "2019-08-29T01:44:16Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      },
      {
        "id" : "21884972-fec9-454f-882a-6917451b28f3",
        "parentId" : "6f1ec223-8317-4fe0-b689-4d24e53fdb63",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "FlagsSummary seems reasonable to me.",
        "createdAt" : "2019-08-28T00:23:52Z",
        "updatedAt" : "2019-08-29T01:44:16Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b578751231d57f8784837b116455e38ac98ca0d",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +2449,2453 @@  FlagsSummary(\n    String name,\n    Map<String, T> value, {\n    String ifEmpty,\n    bool showName = true,"
  },
  {
    "id" : "7648abe2-9afe-4187-8a6d-36bbc0696240",
    "prId" : 40099,
    "prUrl" : "https://github.com/flutter/flutter/pull/40099#pullrequestreview-285753598",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fb77275-f633-40a7-8e46-8d3a4aed5854",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Add a comment explaining this is due to json restrictions.",
        "createdAt" : "2019-09-09T19:29:35Z",
        "updatedAt" : "2019-09-09T20:10:30Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "664eb76e-13ac-4f5b-b669-3cac405860bb",
        "parentId" : "6fb77275-f633-40a7-8e46-8d3a4aed5854",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "done",
        "createdAt" : "2019-09-09T20:10:38Z",
        "updatedAt" : "2019-09-09T20:10:38Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1596fc3f6820ff728819ddcf093dc84a08087fc",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +2673,2677 @@      // Workaround for https://github.com/flutter/flutter/issues/39937#issuecomment-529558033.\n      // JSON.stringify replaces infinity and NaN with null.\n      json['value'] = v.isFinite ? v :  v.toString();\n    if (value is String || value is bool || value == null)\n      json['value'] = value;"
  },
  {
    "id" : "1d419ebe-7bd7-47d3-937d-0833d11ebcb1",
    "prId" : 51495,
    "prUrl" : "https://github.com/flutter/flutter/pull/51495#pullrequestreview-373027859",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ff6cb0b-e908-4842-a6ef-8067f710c794",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "There's a trailing `_` here. Also: \"most code\" could probably use some clarification.",
        "createdAt" : "2020-02-26T20:53:37Z",
        "updatedAt" : "2020-03-11T17:08:06Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "f5afd47c-084e-480d-a6e3-e63ed73f0410",
        "parentId" : "8ff6cb0b-e908-4842-a6ef-8067f710c794",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "That's no trailing `_`, that's the end of the italics for the paragraph.",
        "createdAt" : "2020-03-11T18:39:18Z",
        "updatedAt" : "2020-03-11T18:39:19Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "16c4f824826dea6375fb09d91071c538112b950e",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +3026,3030 @@///\n/// _This mixin is exists only to support plugins that require older Flutter\n/// versions: Use the identical mixin [Diagnosticable] instead for most code._\nmixin DiagnosticableMixin implements Diagnosticable {\n  @override"
  },
  {
    "id" : "aae9e3ec-14e9-47a6-9378-e01912549bc7",
    "prId" : 51495,
    "prUrl" : "https://github.com/flutter/flutter/pull/51495#pullrequestreview-372473290",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e74dfe4-107a-42af-a22f-d4755539ab40",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Given that we intend to remove this, should it be marked as deprecated?\r\n",
        "createdAt" : "2020-03-11T02:26:36Z",
        "updatedAt" : "2020-03-11T02:28:33Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "6d453d1d-41a1-4394-bba2-827f501fbd66",
        "parentId" : "3e74dfe4-107a-42af-a22f-d4755539ab40",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes, I definitely considered that, but mainly, I didn't want a plugin that wants to work with both master and stable to start throwing deprecation warnings on master: some projects would consider that an error and so they could no longer use that plugin on master, and the plugin author couldn't do anything about it until this change hit stable.  So I decided to wait to deprecate it until the change reached stable.",
        "createdAt" : "2020-03-11T04:45:14Z",
        "updatedAt" : "2020-03-11T04:45:14Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "16c4f824826dea6375fb09d91071c538112b950e",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +3027,3031 @@/// _This mixin is exists only to support plugins that require older Flutter\n/// versions: Use the identical mixin [Diagnosticable] instead for most code._\nmixin DiagnosticableMixin implements Diagnosticable {\n  @override\n  String toStringShort() => describeIdentity(this);"
  },
  {
    "id" : "897b2db1-ff95-4fa9-a1ce-b47dfa05931e",
    "prId" : 53303,
    "prUrl" : "https://github.com/flutter/flutter/pull/53303#pullrequestreview-382418072",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41dd94c1-d3fd-4536-bece-4dd1c38a40cc",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "(here and elsewhere): Wrapping things in asserts should turn the functionality off in profile _and_ release mode. Any reason we still need to keep these kReleaseMode guards around? ",
        "createdAt" : "2020-03-26T17:09:19Z",
        "updatedAt" : "2020-03-26T21:52:10Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "dcf069be-c8fe-45eb-ae22-a0a15525cf51",
        "parentId" : "41dd94c1-d3fd-4536-bece-4dd1c38a40cc",
        "authorId" : "6f375fe5-c051-4de5-a3bf-80579a781e7f",
        "body" : "Maybe performance since assert with closure alloc etc may be a little slower, don't know. Beyond the scope of this PR to change all kRelease usages across code base. I have reverted TextTreeRenderer case.",
        "createdAt" : "2020-03-26T18:15:08Z",
        "updatedAt" : "2020-03-26T21:52:10Z",
        "lastEditedBy" : "6f375fe5-c051-4de5-a3bf-80579a781e7f",
        "tags" : [
        ]
      },
      {
        "id" : "468a6755-c9e4-4d82-93a5-0faddd93c36f",
        "parentId" : "41dd94c1-d3fd-4536-bece-4dd1c38a40cc",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "My comment was only meant for the changes introduced in this PR. The following pattern introduced by this PR seems odd:\r\n\r\n```dart\r\nif (kReleaseMode) {\r\n  return null;\r\n}\r\nFoo result;\r\nassert(() {\r\n  // Do something in debug mode.\r\n});\r\nreturn result;\r\n```\r\n\r\nMy understanding is that in this setup the `kReleaseMode` guard is just unnecessary clutter in the code now because asserts are also disabled in release mode. With and without that `if(kReleaseMode)` the code should behave exactly the same so there shouldn't be any reason to have this extra `if(kReleaseMode)` guard. ",
        "createdAt" : "2020-03-26T21:02:40Z",
        "updatedAt" : "2020-03-26T21:52:10Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c6d9e6c96c65993051e9ad151391f8d84bd5f7d",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +1111,1115 @@    TextTreeConfiguration parentConfiguration,\n  }) {\n    if (kReleaseMode) {\n      return '';\n    } else {"
  },
  {
    "id" : "491ff1a1-5d4d-493c-9a0a-d2cf815b0f09",
    "prId" : 53303,
    "prUrl" : "https://github.com/flutter/flutter/pull/53303#pullrequestreview-382447265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9411e6c8-3c8e-44ab-bcec-a67c5f685319",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "In release mode, this function returns an empty map (line 1554). In profile mode, this function now returns null. Is there a reason why those two have to be different?",
        "createdAt" : "2020-03-26T21:04:14Z",
        "updatedAt" : "2020-03-26T21:52:10Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "dd1c4549-27b4-4521-a2e0-bf9cea6cda0e",
        "parentId" : "9411e6c8-3c8e-44ab-bcec-a67c5f685319",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "(This difference is also present in other functions changed by this PR).",
        "createdAt" : "2020-03-26T21:04:44Z",
        "updatedAt" : "2020-03-26T21:52:10Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "b690d868-5ed2-44b8-9b15-63905692d669",
        "parentId" : "9411e6c8-3c8e-44ab-bcec-a67c5f685319",
        "authorId" : "6f375fe5-c051-4de5-a3bf-80579a781e7f",
        "body" : "Done. Thanks. I only kept kRelease in instances where it was calling super.toString() , didn't want to call twice.",
        "createdAt" : "2020-03-26T21:52:08Z",
        "updatedAt" : "2020-03-26T21:52:10Z",
        "lastEditedBy" : "6f375fe5-c051-4de5-a3bf-80579a781e7f",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c6d9e6c96c65993051e9ad151391f8d84bd5f7d",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +1595,1599 @@      return true;\n    }());\n    return result;\n  }\n"
  }
]