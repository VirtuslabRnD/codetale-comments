[
  {
    "id" : "ae05a5c7-46db-4997-ae66-057ac78198f3",
    "prId" : 13273,
    "prUrl" : "https://github.com/flutter/flutter/pull/13273#pullrequestreview-80317768",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f34eff7-7c8c-4ee9-a922-dcf4c50b2b43",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I'd just default to false instead of requiring it",
        "createdAt" : "2017-11-30T19:23:21Z",
        "updatedAt" : "2017-11-30T19:28:16Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "a66edc79-9800-4749-bc68-83e686580f3e",
        "parentId" : "8f34eff7-7c8c-4ee9-a922-dcf4c50b2b43",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It's a private constructor and we already specify it everywhere we use it, so a default value wouldn't matter.",
        "createdAt" : "2017-11-30T20:23:59Z",
        "updatedAt" : "2017-11-30T20:23:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd2fa24a7d267403456ff00869a6b16a547a5e2c",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +294,298 @@    @required Animation<double> secondaryRouteAnimation,\n    @required this.child,\n    @required bool linearTransition,\n  }) : assert(linearTransition != null),\n       _primaryPositionAnimation = linearTransition"
  },
  {
    "id" : "87f6f240-02f1-4530-9d7c-896db556a57d",
    "prId" : 19232,
    "prUrl" : "https://github.com/flutter/flutter/pull/19232#pullrequestreview-143808761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "563a08ae-8ca7-4b95-9ef8-ee16b63cfa40",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Should ActionSheet be CupertinoActionSheet? Or is that all happening in the other rename PR?",
        "createdAt" : "2018-08-07T01:14:57Z",
        "updatedAt" : "2018-08-10T04:11:44Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4eb6cbd6cb0bd3d6872db2bc4283ad077df8a54",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +800,804 @@/// See also:\n///\n///  * [ActionSheet], which is the widget usually returned by the `builder`\n///    argument to [showCupertinoModalPopup].\n///  * <https://developer.apple.com/design/human-interface-guidelines/ios/views/action-sheets/>"
  },
  {
    "id" : "b2b754c2-e2ef-475e-8d3b-17924f5bd291",
    "prId" : 21715,
    "prUrl" : "https://github.com/flutter/flutter/pull/21715#pullrequestreview-158261787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd4d89af-7e75-4e99-ada6-603884743318",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "nit: (not new, but since you're here) return after else",
        "createdAt" : "2018-09-13T23:24:07Z",
        "updatedAt" : "2018-09-25T00:36:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e8235360-928b-4bf3-9726-be0b35ae2730",
        "parentId" : "cd4d89af-7e75-4e99-ada6-603884743318",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I assumed that what's needed here is:\r\n```\r\nassert(false);\r\nreturn null;\r\n```\r\nAt the end of the method. The analyzer reports that as dead code. What did you want here?",
        "createdAt" : "2018-09-14T18:24:13Z",
        "updatedAt" : "2018-09-25T00:36:48Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "97984559-89fa-4501-b748-97602e94c71c",
        "parentId" : "cd4d89af-7e75-4e99-ada6-603884743318",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I just meant that you could remove the `else {` part and just have that be at the top level of the method.",
        "createdAt" : "2018-09-24T19:36:01Z",
        "updatedAt" : "2018-09-25T00:36:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d98dccff29c29503443072ee32370b4ac7ca8db",
    "line" : 211,
    "diffHunk" : "@@ -1,1 +303,307 @@      return CupertinoPageTransition(\n        primaryRouteAnimation: animation,\n        secondaryRouteAnimation: secondaryAnimation,\n        // In the middle of a back gesture drag, let the transition be linear to\n        // match finger motions."
  },
  {
    "id" : "4a272748-f166-48ad-a12a-7c8e9f111adb",
    "prId" : 21715,
    "prUrl" : "https://github.com/flutter/flutter/pull/21715#pullrequestreview-158262323",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8202b1e7-c16e-4914-96bf-ea419ada0551",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this one should probably transform if it's being driven by the user and not otherwise... :-/",
        "createdAt" : "2018-09-24T19:37:30Z",
        "updatedAt" : "2018-09-25T00:36:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d98dccff29c29503443072ee32370b4ac7ca8db",
    "line" : 244,
    "diffHunk" : "@@ -1,1 +379,383 @@      position: _secondaryPositionAnimation,\n      textDirection: textDirection,\n      transformHitTests: false,\n      child: SlideTransition(\n        position: _primaryPositionAnimation,"
  },
  {
    "id" : "8072d583-d529-4491-a232-900383ec0643",
    "prId" : 21715,
    "prUrl" : "https://github.com/flutter/flutter/pull/21715#pullrequestreview-158323829",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fb2b419-4c39-4a50-b5b2-d5371ebab92c",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Needs a small tweak. As-is, it reads a bit as if this class itself doesn't use this.",
        "createdAt" : "2018-09-24T22:46:27Z",
        "updatedAt" : "2018-09-25T00:36:48Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d98dccff29c29503443072ee32370b4ac7ca8db",
    "line" : 191,
    "diffHunk" : "@@ -1,1 +280,284 @@  ///\n  /// This method can be applied to any [PageRoute], not just\n  /// [CupertinoPageRoute]. It's typically used to provide a Cupertino style\n  /// horizontal transition for material widgets when the target platform\n  /// is [TargetPlatform.iOS]."
  },
  {
    "id" : "57df8e8c-3052-4875-bb41-73feb941b38d",
    "prId" : 23320,
    "prUrl" : "https://github.com/flutter/flutter/pull/23320#pullrequestreview-167601346",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9252c10e-3909-4d41-9559-c048225e61f8",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2018-10-23T19:40:10Z",
        "updatedAt" : "2018-10-24T21:09:58Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c8a11dbd6cacc9e7e97ce65bcb6c56c86dc40e4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +254,258 @@\n  // Called by _CupertinoBackGestureDetector when a pop (\"back\") drag start\n  // gesture is detected. The returned controller handles all of the subsequent\n  // drag events.\n  static _CupertinoBackGestureController<T> _startPopGesture<T>(PageRoute<T> route) {"
  },
  {
    "id" : "3ef06959-469d-4785-90e1-add17a3e0e5f",
    "prId" : 24375,
    "prUrl" : "https://github.com/flutter/flutter/pull/24375#pullrequestreview-175513962",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38389fae-6aa7-4ffc-8faa-a56f86cc765f",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Add a code comment for what this is about",
        "createdAt" : "2018-11-15T19:18:11Z",
        "updatedAt" : "2018-11-15T22:07:57Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "31b71083e22c4cfeb9ac7ebf35c89587d880d86a",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +522,526 @@    // For devices with notches, the drag area needs to be larger on the side\n    // that has the notch.\n    double dragAreaWidth = Directionality.of(context) == TextDirection.ltr ?\n                           MediaQuery.of(context).padding.left :\n                           MediaQuery.of(context).padding.right;"
  },
  {
    "id" : "6843d630-524e-4e1c-942c-d5ce81d124b7",
    "prId" : 25488,
    "prUrl" : "https://github.com/flutter/flutter/pull/25488#pullrequestreview-190075811",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cca9187-e534-48fa-a66b-b79b5f0c4b6f",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "ditto",
        "createdAt" : "2019-01-08T02:50:57Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a1257890f13c3f0d11776b29862d4e6976afcea",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +164,168 @@  @override\n  // A relatively rigorous eyeball estimation.\n  Duration get transitionDuration => const Duration(milliseconds: 400);\n\n  @override"
  },
  {
    "id" : "4a311f11-e844-4920-9a1d-c1090e569811",
    "prId" : 25488,
    "prUrl" : "https://github.com/flutter/flutter/pull/25488#pullrequestreview-190882826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "080751dc-9bbe-45c2-b652-143efab95043",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "ditto",
        "createdAt" : "2019-01-08T02:51:01Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "9661a5fe-7c6c-4491-9fe6-4f4ce6dc1de9",
        "parentId" : "080751dc-9bbe-45c2-b652-143efab95043",
        "authorId" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "body" : "Wouldn't a regular curve work here (e.g. `curveWithPower(4/5)`)? Playing around with my iPhone SE, IMO `linearToEaseOut` seems a little less natural as only the end is dampened.",
        "createdAt" : "2019-01-08T18:28:19Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "tags" : [
        ]
      },
      {
        "id" : "366c33d6-f6fd-450f-a3f5-b8ec14ab2b03",
        "parentId" : "080751dc-9bbe-45c2-b652-143efab95043",
        "authorId" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "body" : "Same for the other instances of `easeInToLinear`/`linearToEaseOut`",
        "createdAt" : "2019-01-08T18:28:56Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "tags" : [
        ]
      },
      {
        "id" : "2790f642-29bf-420a-89bd-eec41eefdf0f",
        "parentId" : "080751dc-9bbe-45c2-b652-143efab95043",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "To be honest, without a rigorous check comparing frames between native iOS and our Cupertino implementation, it's hard to say for sure which curve is the most accurate. Looking at a recording of native iOS frames, it seemed to me that a linear to ease curve was the most accurate. However, we are planning on making a framework to do native vs flutter testing in the future. \r\n\r\nAlso, if you are testing this code, make sure you test in release mode as the animations feel quite different than they do in debug mode.",
        "createdAt" : "2019-01-08T18:40:34Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "c097eaf7-99ae-4482-bfe0-c461e1b6ffc5",
        "parentId" : "080751dc-9bbe-45c2-b652-143efab95043",
        "authorId" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "body" : "With a bit too much time on my hands :smile: , I [plotted the frames](https://plot.ly/~marcoms/1) of a screen recording I made on my iPhone. The raw data is the following (measured with a ruler and lerp'd):\r\n\r\n```\r\n0\r\n0.121212\r\n0.208588\r\n0.339393\r\n0.442424\r\n0.533333\r\n0.618181\r\n0.690909\r\n0.751515\r\n0.842424\r\n0.878787\r\n0.903030\r\n0.921212\r\n0.939393\r\n0.951515\r\n0.963636\r\n0.969696\r\n0.975757\r\n0.981818\r\n0.987878\r\n0.990909\r\n0.992424\r\n0.993939\r\n0.996969\r\n1\r\n```\r\n\r\nActually you're right that it is more of a linear curve followed by an ease out (and 400ms is about right too). The only difference is the native curve is fairly steeper.\r\n\r\nHere it is modeled on cubic-bezier.com: http://cubic-bezier.com/#.35,.91,.33,.97\r\n\r\nHopefully plugging that into `Cubic()` will get us feeling more native. My only concern is whether Apple internally uses a parameterized curve that changes depending on the UI element :/",
        "createdAt" : "2019-01-09T18:23:53Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "tags" : [
        ]
      },
      {
        "id" : "34492c28-cf83-4530-ab8d-db410931d6c0",
        "parentId" : "080751dc-9bbe-45c2-b652-143efab95043",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "Wow! That's awesome! Thanks for doing that! I'll add that function and see how it feels!\r\n\r\nAnd by eyeball estimation, it looked like all their transition curves are the same across all their apps, tho it's hard to say absolutely for sure without checking. What I did notice tho is that the curve they use for animating a page back or forward if you release mid drag is different than the animation they use for when you tap a button to show a page.\r\n\r\nAgain, thanks for verifying this ! 😊",
        "createdAt" : "2019-01-09T19:09:10Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a1257890f13c3f0d11776b29862d4e6976afcea",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +366,370 @@         CurvedAnimation(\n           parent: primaryRouteAnimation,\n           curve: Curves.linearToEaseOut,\n           reverseCurve: Curves.easeInToLinear,\n         )"
  },
  {
    "id" : "510f356a-4241-4431-82e8-e9111437af80",
    "prId" : 25488,
    "prUrl" : "https://github.com/flutter/flutter/pull/25488#pullrequestreview-193813446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3615b50-8fae-41e1-a2c4-eb51607257a1",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Are we sure the curve is the same in either direction? Either way this PR is fine. I'm just wondering.",
        "createdAt" : "2019-01-11T02:53:36Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "254cc80b-c900-4e84-a834-e49606fded95",
        "parentId" : "e3615b50-8fae-41e1-a2c4-eb51607257a1",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "I'm like almost 100% sure. I just inverted the bezier points, it should be the reflected curve, but I did not verify my math checking the graphs or anything...",
        "createdAt" : "2019-01-17T19:56:24Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a1257890f13c3f0d11776b29862d4e6976afcea",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +625,629 @@      animateForward = controller.value > 0.5 ? true : false;\n\n    if (animateForward) {\n      // The closer the panel is to dismissing, the shorter the animation is.\n      // We want to cap the animation time, but we want to use a linear curve"
  },
  {
    "id" : "a31fb305-7604-4423-970f-42edbb8f3c68",
    "prId" : 27261,
    "prUrl" : "https://github.com/flutter/flutter/pull/27261#pullrequestreview-206180873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45d58b88-b8ff-4532-b6bb-cf6433b42932",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "I'm not sure we want to add spaces for `[`.  I think for `{` it makes sense though.",
        "createdAt" : "2019-01-30T16:57:02Z",
        "updatedAt" : "2019-02-21T07:24:12Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "5abf1e18-9121-44ff-8353-f7ad0cdb6ed3",
        "parentId" : "45d58b88-b8ff-4532-b6bb-cf6433b42932",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "I'm not sure where the space after `{` is coming from in named optional parameters (perhaps @Hixie knows).\r\nI thought the pattern should be similar for optional positional parameters.",
        "createdAt" : "2019-01-30T20:16:22Z",
        "updatedAt" : "2019-02-21T07:24:12Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "6d3d3cd0-36cc-41d6-821e-2adb02bff4a1",
        "parentId" : "45d58b88-b8ff-4532-b6bb-cf6433b42932",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "Let me know what should be done here. I'll make the change if needed.",
        "createdAt" : "2019-01-30T21:23:52Z",
        "updatedAt" : "2019-02-21T07:24:12Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "11382a3a-ac6e-483b-8741-79d38b8528e5",
        "parentId" : "45d58b88-b8ff-4532-b6bb-cf6433b42932",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "We used to have this in the style guide, but people thought it was micromanaging a bit too much so we've removed it. Do whatever you think is best.",
        "createdAt" : "2019-02-02T22:11:09Z",
        "updatedAt" : "2019-02-21T07:24:12Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "0356192d-b3ff-4014-9682-25e845297597",
        "parentId" : "45d58b88-b8ff-4532-b6bb-cf6433b42932",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "I'd just use the same format for named optional parameters and positional optional parameters. I chose to use spaces because it's the most used format across the current codebase. But I'm not sold with it. If no-space looks better I have no problem to use this no-space style (which is what `dartfmt` use). ",
        "createdAt" : "2019-02-04T08:10:18Z",
        "updatedAt" : "2019-02-21T07:24:12Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "96ce284e-1b5b-4007-b9d4-734d9e0c832c",
        "parentId" : "45d58b88-b8ff-4532-b6bb-cf6433b42932",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "being consistent with dartfmt if the style is as readable either way is probably best to minimize variation.",
        "createdAt" : "2019-02-21T08:40:30Z",
        "updatedAt" : "2019-02-21T08:40:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "62be33e8-7c17-4605-93a9-e51ffd869223",
        "parentId" : "45d58b88-b8ff-4532-b6bb-cf6433b42932",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "argg, I just merged the PR...\r\n\r\nSo I can change this style in an other PR to have:\r\n\r\n```diff\r\n-void f(int a, int b, { int c = 1, int d }) { ... }\r\n+void f(int a, int b, {int c = 1, int d}) { ... }\r\n-void f(int a, int b, [ int c = 1, int d ]) { ... }\r\n+void f(int a, int b, [int c = 1, int d]) { ... }\r\n```",
        "createdAt" : "2019-02-21T08:46:51Z",
        "updatedAt" : "2019-02-21T08:46:51Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      }
    ],
    "commit" : "08797df126a96ea376efd6d800eaa4f47deb8cb2",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +731,735 @@\n  @override\n  _CupertinoEdgeShadowPainter createBoxPainter([ VoidCallback onChanged ]) {\n    return _CupertinoEdgeShadowPainter(this, onChanged);\n  }"
  },
  {
    "id" : "8be98a49-f710-4c37-878d-064c6e3f1352",
    "prId" : 28597,
    "prUrl" : "https://github.com/flutter/flutter/pull/28597#pullrequestreview-214246521",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f88bea81-39a5-4d34-9329-ad280d96944e",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Describe how this was derived in a comment (just saying eyeballed is fine). This will help the next maintainer judge how hard the previous person tried to make this perfect and how much confidence they should have in trying to improve this.",
        "createdAt" : "2019-03-01T22:36:40Z",
        "updatedAt" : "2019-03-20T09:32:19Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "ef19c65a-8bfc-4a9a-9896-c2488e545ea1",
        "parentId" : "f88bea81-39a5-4d34-9329-ad280d96944e",
        "authorId" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "body" : "Done",
        "createdAt" : "2019-03-13T22:38:39Z",
        "updatedAt" : "2019-03-20T09:32:19Z",
        "lastEditedBy" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "11c7dd4111f8a92ad8b4df1a86c659c959881d85",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +824,828 @@      // These curves were initially measured from native iOS horizontal page\n      // route animations and seemed to be a good match here as well.\n      curve: Curves.linearToEaseOut,\n      reverseCurve: Curves.linearToEaseOut.flipped,\n    );"
  },
  {
    "id" : "02cc1ec4-d728-4ba4-a21f-70e8df1f8d76",
    "prId" : 28597,
    "prUrl" : "https://github.com/flutter/flutter/pull/28597#pullrequestreview-209813719",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bce7dbb0-77eb-48eb-8551-88bb1f91a28c",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "ditto",
        "createdAt" : "2019-03-01T22:36:58Z",
        "updatedAt" : "2019-03-20T09:32:19Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "11c7dd4111f8a92ad8b4df1a86c659c959881d85",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +953,957 @@    barrierColor: _kModalBarrierColor,\n    // This transition duration was eyeballed comparing with iOS\n    transitionDuration: const Duration(milliseconds: 250),\n    pageBuilder: (BuildContext context, Animation<double> animation, Animation<double> secondaryAnimation) {\n      return builder(context);"
  },
  {
    "id" : "ce236a61-d7ac-4039-a73a-bfcc88e9dbea",
    "prId" : 28629,
    "prUrl" : "https://github.com/flutter/flutter/pull/28629#pullrequestreview-212487272",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32a27eef-243f-4565-873d-d801de6cdbc6",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Not sure why we now want to do this first. Previously it seemed like effectively an else clause. Why would we want to unconditionally dispose the route before removing it?",
        "createdAt" : "2019-03-08T18:25:55Z",
        "updatedAt" : "2019-03-27T23:16:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "4f8ac48c-af59-4f7d-a1e8-d4274453593b",
        "parentId" : "32a27eef-243f-4565-873d-d801de6cdbc6",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I thought I wrote it somewhere in the PR but didn't. This is a bug on everything downstream from didStopUserGesture such as NavigatorObserver.didStopUserGesture or NavigatorState.userGestureInProgress. It never worked because the route would be disposed before the back controller would be disposed. We were just lucky that those APIs weren't really used.\r\n\r\nAdded new tests.",
        "createdAt" : "2019-03-08T21:28:02Z",
        "updatedAt" : "2019-03-27T23:16:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d7ae72a6582d12c0cfc3eb42bb9676ba4e472d7",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +662,666 @@    }\n    _animating = false;\n    onEnded();\n    if (status == AnimationStatus.dismissed)\n      route.navigator.removeRoute(route); // This also disposes the route."
  },
  {
    "id" : "4027fbac-1b33-48e0-88aa-df4f6bc42b1c",
    "prId" : 28629,
    "prUrl" : "https://github.com/flutter/flutter/pull/28629#pullrequestreview-219765629",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cf941d6-f81c-40c3-8918-80ddbae3e792",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I'm surprised that we need this method, but OK. I like the fact that it's possible to just ask the navigator.",
        "createdAt" : "2019-03-27T22:42:38Z",
        "updatedAt" : "2019-03-27T23:16:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "f27b90d5-a497-4d89-af8b-3349f836e002",
        "parentId" : "4cf941d6-f81c-40c3-8918-80ddbae3e792",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "We absolutely don't need this method since it adds more indirection confusion. But we can't break the API.",
        "createdAt" : "2019-03-27T22:56:06Z",
        "updatedAt" : "2019-03-27T23:16:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d7ae72a6582d12c0cfc3eb42bb9676ba4e472d7",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +190,194 @@  ///    would be allowed.\n  static bool isPopGestureInProgress(PageRoute<dynamic> route) {\n    return route.navigator.userGestureInProgress;\n  }\n"
  },
  {
    "id" : "b02006cd-589a-4de1-b4e0-9e3f126726df",
    "prId" : 28756,
    "prUrl" : "https://github.com/flutter/flutter/pull/28756#pullrequestreview-220700816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c1855f2-3f3a-4b07-8ba8-a084b30ccf3e",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Turns out this has a subtle (untested :()problem. This will dispose the route first which means by the time the controller is disposed, the route's reference to the navigator is gone already and we can't call didStopUserGesture. Breaks a few uncommon APIs on the NavigatorObserver. I'll fix it in a next pr.",
        "createdAt" : "2019-03-04T23:59:10Z",
        "updatedAt" : "2019-03-04T23:59:11Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "2e6b1d09-ebf8-40f8-89ab-4a21ef0a1e4e",
        "parentId" : "8c1855f2-3f3a-4b07-8ba8-a084b30ccf3e",
        "authorId" : "dd64e231-6bf8-4544-873d-0e6113729625",
        "body" : "Of course, I don’t understand how it all works, but this change caused this problem #29596, I added\r\nroute.navigator.pop ();\r\ninstead\r\nroute.navigator.removeRoute (route);\r\nAt first glance, everything works, but what this leads to, I cannot say) you know better,\r\non stable branch navigator.pop<T>(); =)",
        "createdAt" : "2019-03-29T14:38:20Z",
        "updatedAt" : "2019-03-29T14:55:09Z",
        "lastEditedBy" : "dd64e231-6bf8-4544-873d-0e6113729625",
        "tags" : [
        ]
      },
      {
        "id" : "027800fa-5136-4127-a2e2-e7c801cb72e9",
        "parentId" : "8c1855f2-3f3a-4b07-8ba8-a084b30ccf3e",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Thanks so much for digging through this @1AlexFix1, I think you're right in that this would break existing NavigatorObserver.didPop. \r\n\r\n@HansMuller, let's chat about this next week. Though I'm not sure what is the right solution. Since didPop() actually returns the route that was popped whereas pop() doesn't let you specify which route was popped, this API asymmetry might be the root of the issue. ",
        "createdAt" : "2019-03-29T18:36:31Z",
        "updatedAt" : "2019-03-29T18:36:32Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "890d25701dfad841bd2552323f71a8be745ab4b8",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +648,652 @@    _animating = false;\n    if (status == AnimationStatus.dismissed)\n      route.navigator.removeRoute(route); // this will cause the route to get disposed, which will dispose us\n    onEnded(); // this will call dispose if popping the route failed to do so\n  }"
  },
  {
    "id" : "f829ef96-6568-4709-a788-db024136b2e3",
    "prId" : 40007,
    "prUrl" : "https://github.com/flutter/flutter/pull/40007#pullrequestreview-286506580",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ea6526c-e2f1-4178-afb4-6e0256cb7b6c",
        "parentId" : null,
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "The caveat of doing this is, the color won't change unless the dialog is dismissed then shown again.",
        "createdAt" : "2019-09-07T04:50:49Z",
        "updatedAt" : "2019-09-07T04:50:50Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "b76b2552-e6bf-4247-8a50-aae0c416c6c7",
        "parentId" : "6ea6526c-e2f1-4178-afb4-6e0256cb7b6c",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Seems OK.  Even if we recreated showGeneralDialog's _DialogRoute, it still wouldn't be easy to get the scrim to redraw when the platform's brightness changed.",
        "createdAt" : "2019-09-11T00:51:20Z",
        "updatedAt" : "2019-09-11T00:52:18Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "afd26850e16ac7bbc6721e109d85a0726b62b886",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +956,960 @@    context: context,\n    barrierDismissible: false,\n    barrierColor: CupertinoDynamicColor.resolve(_kModalBarrierColor, context),\n    // This transition duration was eyeballed comparing with iOS\n    transitionDuration: const Duration(milliseconds: 250),"
  },
  {
    "id" : "4e5b5518-ee98-44d1-86ea-6e2e5db87345",
    "prId" : 42602,
    "prUrl" : "https://github.com/flutter/flutter/pull/42602#pullrequestreview-304928360",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ddaaeeae-e5e1-49d0-8c28-b6ff164ba722",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This looks like a perfectly OK change. Is there an issue with the code crashing before it gets to the assert?",
        "createdAt" : "2019-10-21T22:05:42Z",
        "updatedAt" : "2019-10-21T22:05:42Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "7ddb8bed-b47c-4290-86b5-04b8b604782c",
        "parentId" : "ddaaeeae-e5e1-49d0-8c28-b6ff164ba722",
        "authorId" : "b7f7a0f6-1a85-41e8-885c-39eab9f63c4c",
        "body" : "I was not aware of an open issue mentioning that, but I tried reproducing pushing a CupertinoPageRoute with builder that returns null earlier, it didn't crash, but it showed a black empty screen instead of ErrorWidget with the red screen. \r\nIf this looks like a perfectly ok change, can I merge this one?",
        "createdAt" : "2019-10-22T01:03:53Z",
        "updatedAt" : "2019-10-22T01:04:25Z",
        "lastEditedBy" : "b7f7a0f6-1a85-41e8-885c-39eab9f63c4c",
        "tags" : [
        ]
      },
      {
        "id" : "5d38896a-c4f6-4530-bff0-15849355c0a5",
        "parentId" : "ddaaeeae-e5e1-49d0-8c28-b6ff164ba722",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "SG!",
        "createdAt" : "2019-10-22T01:07:46Z",
        "updatedAt" : "2019-10-22T01:07:47Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "da2a148a993f7f239d339dad5fff9550b96aa77b",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +258,262 @@      scopesRoute: true,\n      explicitChildNodes: true,\n      child: child,\n    );\n    assert(() {"
  },
  {
    "id" : "55a7e214-af1b-4add-99ca-21b7008b278e",
    "prId" : 42842,
    "prUrl" : "https://github.com/flutter/flutter/pull/42842#pullrequestreview-309917454",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1e06799-f2a0-49c1-84bf-7a24f69c65e1",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Add an assert here and elsewhere that useRootNavigator is not null.",
        "createdAt" : "2019-10-30T17:20:14Z",
        "updatedAt" : "2019-10-31T14:28:39Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "1cefd7c5-3d1d-423a-a54f-4166013e6359",
        "parentId" : "b1e06799-f2a0-49c1-84bf-7a24f69c65e1",
        "authorId" : "29803342-7ca7-460f-82cf-fbf3a408b47f",
        "body" : "Done.",
        "createdAt" : "2019-10-31T14:23:52Z",
        "updatedAt" : "2019-10-31T14:28:39Z",
        "lastEditedBy" : "29803342-7ca7-460f-82cf-fbf3a408b47f",
        "tags" : [
        ]
      }
    ],
    "commit" : "67720bd9332166e65b37d53588b09b7d13b47d53",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +890,894 @@}) {\n  assert(useRootNavigator != null);\n  return Navigator.of(context, rootNavigator: useRootNavigator).push(\n    _CupertinoModalPopupRoute<T>(\n      builder: builder,"
  },
  {
    "id" : "04a06a13-a4e3-421d-a6a6-48893ee86fe4",
    "prId" : 45502,
    "prUrl" : "https://github.com/flutter/flutter/pull/45502#pullrequestreview-331433972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4984fce1-e971-4e44-9184-d2d39e9fa3c8",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Do these have to be changed?  If not, should we move this to a separate patch?",
        "createdAt" : "2019-12-12T16:59:56Z",
        "updatedAt" : "2019-12-13T08:02:07Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "04f45238-ba66-4a16-b37e-2a684165e9b5",
        "parentId" : "4984fce1-e971-4e44-9184-d2d39e9fa3c8",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "By changing the order `a` can be promoted to `_CupertinoEdgeShadowDecoration` and avoid an explicit cast if the order remain the same.\r\n\r\nNote that with changes regarding type promotion in NNBD the previous code would have working without changes.",
        "createdAt" : "2019-12-12T18:27:32Z",
        "updatedAt" : "2019-12-13T08:02:07Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdf6ef3b2ccc6ce4cc6ea03c7668b88c918d5639",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +724,728 @@    if (a is _CupertinoEdgeShadowDecoration)\n      return _CupertinoEdgeShadowDecoration.lerp(a, this, t);\n    return _CupertinoEdgeShadowDecoration.lerp(null, this, t);\n  }\n"
  },
  {
    "id" : "5db8dca7-156d-481b-8f80-d4c278ea6f16",
    "prId" : 45502,
    "prUrl" : "https://github.com/flutter/flutter/pull/45502#pullrequestreview-331381668",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af229354-8449-4f1a-a1cb-96d424ec9854",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Ditto",
        "createdAt" : "2019-12-12T17:00:03Z",
        "updatedAt" : "2019-12-13T08:02:07Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdf6ef3b2ccc6ce4cc6ea03c7668b88c918d5639",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +731,735 @@    if (b is _CupertinoEdgeShadowDecoration)\n      return _CupertinoEdgeShadowDecoration.lerp(this, b, t);\n    return _CupertinoEdgeShadowDecoration.lerp(this, null, t);\n  }\n"
  },
  {
    "id" : "2951d593-35d6-46a6-b45b-5576bb70872a",
    "prId" : 48915,
    "prUrl" : "https://github.com/flutter/flutter/pull/48915#pullrequestreview-344176636",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d2ae103-c635-4a95-98aa-7a57d754cdb6",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Why not `this.semanticsDismissible = false`?\r\n\r\nAnd then below instead of the getter:\r\n\r\n```\r\n@override\r\nfinal bool semanticsDismissible;\r\n```",
        "createdAt" : "2020-01-15T23:55:07Z",
        "updatedAt" : "2020-01-16T19:53:08Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "ab48dd5e-13ea-495e-9331-62e08c995920",
        "parentId" : "4d2ae103-c635-4a95-98aa-7a57d754cdb6",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "Hmm this doesn't work because in the `ModalRoute` abstract class it is defined as simply a getter that returns true, so it then ignores the property that I set in `_CupertinoModalPopupRoute`",
        "createdAt" : "2020-01-16T15:07:53Z",
        "updatedAt" : "2020-01-16T19:53:08Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      },
      {
        "id" : "55a3e9a2-86b7-43eb-b0cb-52dfc8cc382c",
        "parentId" : "4d2ae103-c635-4a95-98aa-7a57d754cdb6",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I believe dart allows overwriting a getter with a final field? We do it elsewhere in the framework and the analyzer seems to be happy about it: https://dartpad.dev/ed41bd0c9b87802c42701569278fcbad",
        "createdAt" : "2020-01-16T18:39:59Z",
        "updatedAt" : "2020-01-16T19:53:08Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "8064b089-0aa8-41dc-a0d0-e6a67cc46d53",
        "parentId" : "4d2ae103-c635-4a95-98aa-7a57d754cdb6",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "Seems like I wasn't able to get this to work, going to leave as-is.",
        "createdAt" : "2020-01-16T19:56:23Z",
        "updatedAt" : "2020-01-16T19:56:24Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "e160bb1e7a0dbb49f04f4f237e16db8d0f0d82a6",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +793,797 @@    this.barrierLabel,\n    this.builder,\n    bool semanticsDismissible,\n    ImageFilter filter,\n    RouteSettings settings,"
  },
  {
    "id" : "007ff673-573c-4830-bd48-55248494e7ee",
    "prId" : 58511,
    "prUrl" : "https://github.com/flutter/flutter/pull/58511#pullrequestreview-429172922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b223908f-fa9a-414f-8cd7-47b4b7b53ab7",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Why do we need the Mixin? Isn't _PageBasedCupertinoPageRoute just a subclass of CupertinoPageRoute that has an extra `page` getter?",
        "createdAt" : "2020-06-11T18:05:15Z",
        "updatedAt" : "2020-06-25T18:55:48Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "b72b9782-429f-4613-aede-2d5f06710a2f",
        "parentId" : "b223908f-fa9a-414f-8cd7-47b4b7b53ab7",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "I need to override all the property getter in CupertinoPageRoute, i figure it is cleaner to separate out the logic into a mixin",
        "createdAt" : "2020-06-11T18:17:55Z",
        "updatedAt" : "2020-06-25T18:55:48Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "265641408cc5fe68bdd60c3817e3a83f0591f876",
    "line" : 165,
    "diffHunk" : "@@ -1,1 +368,372 @@// This route uses the builder from the page to build its content. This ensures\n// the content is up to date after page updates.\nclass _PageBasedCupertinoPageRoute<T> extends PageRoute<T> with CupertinoRouteTransitionMixin<T> {\n  _PageBasedCupertinoPageRoute({\n    @required CupertinoPage<T> page,"
  },
  {
    "id" : "c41e388b-9abc-423b-8178-6139332f2742",
    "prId" : 66692,
    "prUrl" : "https://github.com/flutter/flutter/pull/66692#pullrequestreview-497796517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcaadced-9e3c-4404-b4ea-47290e2c51c4",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "`tapping` instead of `clicking`. We already say `tapping` elsewhere in this file. Be consistent here.",
        "createdAt" : "2020-09-28T18:45:09Z",
        "updatedAt" : "2020-09-29T20:37:05Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a502c907d532118520b472aa8323a597abc8648",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +1016,1020 @@/// black scrim based on iOS's dialog screens.\n///\n/// The `barrierDismissible` argument determines whether clicking outside the\n/// popup results in dismissal. It is `true` by default.\n///"
  },
  {
    "id" : "d4b62f40-d647-46ec-b0ad-51194e778199",
    "prId" : 66692,
    "prUrl" : "https://github.com/flutter/flutter/pull/66692#pullrequestreview-498083155",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd378f2e-daa0-4a1f-a8c4-32bb259c35ff",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Slightly out of scope but since we're here, let's also make the showCupertinoDialog parameters consistent with these new ones as well",
        "createdAt" : "2020-09-28T19:32:25Z",
        "updatedAt" : "2020-09-29T20:37:05Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "37ad183a-fd14-4038-8e2c-edbebbdbd7bb",
        "parentId" : "fd378f2e-daa0-4a1f-a8c4-32bb259c35ff",
        "authorId" : "257794f0-27f6-43b1-b274-9297a5801216",
        "body" : "Thought I would do a different PR for that since it doesn't involve the popup and I would have to write tests for that too. Would you rather I do that in this PR?",
        "createdAt" : "2020-09-28T19:48:03Z",
        "updatedAt" : "2020-09-29T20:37:05Z",
        "lastEditedBy" : "257794f0-27f6-43b1-b274-9297a5801216",
        "tags" : [
        ]
      },
      {
        "id" : "77004366-7d75-4e41-8239-ab55ed7c89cc",
        "parentId" : "fd378f2e-daa0-4a1f-a8c4-32bb259c35ff",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Nope. A different PR sounds good :)",
        "createdAt" : "2020-09-29T04:14:47Z",
        "updatedAt" : "2020-09-29T20:37:05Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a502c907d532118520b472aa8323a597abc8648",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +1045,1049 @@  required WidgetBuilder builder,\n  ImageFilter? filter,\n  Color barrierColor = _kModalBarrierColor,\n  bool barrierDismissible = true,\n  bool useRootNavigator = true,"
  }
]