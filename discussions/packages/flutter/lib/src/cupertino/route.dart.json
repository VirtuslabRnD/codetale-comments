[
  {
    "id" : "ae05a5c7-46db-4997-ae66-057ac78198f3",
    "prId" : 13273,
    "prUrl" : "https://github.com/flutter/flutter/pull/13273#pullrequestreview-80317768",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f34eff7-7c8c-4ee9-a922-dcf4c50b2b43",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I'd just default to false instead of requiring it",
        "createdAt" : "2017-11-30T19:23:21Z",
        "updatedAt" : "2017-11-30T19:28:16Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "a66edc79-9800-4749-bc68-83e686580f3e",
        "parentId" : "8f34eff7-7c8c-4ee9-a922-dcf4c50b2b43",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It's a private constructor and we already specify it everywhere we use it, so a default value wouldn't matter.",
        "createdAt" : "2017-11-30T20:23:59Z",
        "updatedAt" : "2017-11-30T20:23:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd2fa24a7d267403456ff00869a6b16a547a5e2c",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +294,298 @@    @required Animation<double> secondaryRouteAnimation,\n    @required this.child,\n    @required bool linearTransition,\n  }) : assert(linearTransition != null),\n       _primaryPositionAnimation = linearTransition"
  },
  {
    "id" : "87f6f240-02f1-4530-9d7c-896db556a57d",
    "prId" : 19232,
    "prUrl" : "https://github.com/flutter/flutter/pull/19232#pullrequestreview-143808761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "563a08ae-8ca7-4b95-9ef8-ee16b63cfa40",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Should ActionSheet be CupertinoActionSheet? Or is that all happening in the other rename PR?",
        "createdAt" : "2018-08-07T01:14:57Z",
        "updatedAt" : "2018-08-10T04:11:44Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4eb6cbd6cb0bd3d6872db2bc4283ad077df8a54",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +800,804 @@/// See also:\n///\n///  * [ActionSheet], which is the widget usually returned by the `builder`\n///    argument to [showCupertinoModalPopup].\n///  * <https://developer.apple.com/design/human-interface-guidelines/ios/views/action-sheets/>"
  },
  {
    "id" : "b2b754c2-e2ef-475e-8d3b-17924f5bd291",
    "prId" : 21715,
    "prUrl" : "https://github.com/flutter/flutter/pull/21715#pullrequestreview-158261787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd4d89af-7e75-4e99-ada6-603884743318",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "nit: (not new, but since you're here) return after else",
        "createdAt" : "2018-09-13T23:24:07Z",
        "updatedAt" : "2018-09-25T00:36:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e8235360-928b-4bf3-9726-be0b35ae2730",
        "parentId" : "cd4d89af-7e75-4e99-ada6-603884743318",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I assumed that what's needed here is:\r\n```\r\nassert(false);\r\nreturn null;\r\n```\r\nAt the end of the method. The analyzer reports that as dead code. What did you want here?",
        "createdAt" : "2018-09-14T18:24:13Z",
        "updatedAt" : "2018-09-25T00:36:48Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "97984559-89fa-4501-b748-97602e94c71c",
        "parentId" : "cd4d89af-7e75-4e99-ada6-603884743318",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I just meant that you could remove the `else {` part and just have that be at the top level of the method.",
        "createdAt" : "2018-09-24T19:36:01Z",
        "updatedAt" : "2018-09-25T00:36:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d98dccff29c29503443072ee32370b4ac7ca8db",
    "line" : 211,
    "diffHunk" : "@@ -1,1 +303,307 @@      return CupertinoPageTransition(\n        primaryRouteAnimation: animation,\n        secondaryRouteAnimation: secondaryAnimation,\n        // In the middle of a back gesture drag, let the transition be linear to\n        // match finger motions."
  },
  {
    "id" : "4a272748-f166-48ad-a12a-7c8e9f111adb",
    "prId" : 21715,
    "prUrl" : "https://github.com/flutter/flutter/pull/21715#pullrequestreview-158262323",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8202b1e7-c16e-4914-96bf-ea419ada0551",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this one should probably transform if it's being driven by the user and not otherwise... :-/",
        "createdAt" : "2018-09-24T19:37:30Z",
        "updatedAt" : "2018-09-25T00:36:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d98dccff29c29503443072ee32370b4ac7ca8db",
    "line" : 244,
    "diffHunk" : "@@ -1,1 +379,383 @@      position: _secondaryPositionAnimation,\n      textDirection: textDirection,\n      transformHitTests: false,\n      child: SlideTransition(\n        position: _primaryPositionAnimation,"
  },
  {
    "id" : "8072d583-d529-4491-a232-900383ec0643",
    "prId" : 21715,
    "prUrl" : "https://github.com/flutter/flutter/pull/21715#pullrequestreview-158323829",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fb2b419-4c39-4a50-b5b2-d5371ebab92c",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Needs a small tweak. As-is, it reads a bit as if this class itself doesn't use this.",
        "createdAt" : "2018-09-24T22:46:27Z",
        "updatedAt" : "2018-09-25T00:36:48Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d98dccff29c29503443072ee32370b4ac7ca8db",
    "line" : 191,
    "diffHunk" : "@@ -1,1 +280,284 @@  ///\n  /// This method can be applied to any [PageRoute], not just\n  /// [CupertinoPageRoute]. It's typically used to provide a Cupertino style\n  /// horizontal transition for material widgets when the target platform\n  /// is [TargetPlatform.iOS]."
  },
  {
    "id" : "57df8e8c-3052-4875-bb41-73feb941b38d",
    "prId" : 23320,
    "prUrl" : "https://github.com/flutter/flutter/pull/23320#pullrequestreview-167601346",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9252c10e-3909-4d41-9559-c048225e61f8",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2018-10-23T19:40:10Z",
        "updatedAt" : "2018-10-24T21:09:58Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c8a11dbd6cacc9e7e97ce65bcb6c56c86dc40e4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +254,258 @@\n  // Called by _CupertinoBackGestureDetector when a pop (\"back\") drag start\n  // gesture is detected. The returned controller handles all of the subsequent\n  // drag events.\n  static _CupertinoBackGestureController<T> _startPopGesture<T>(PageRoute<T> route) {"
  },
  {
    "id" : "3ef06959-469d-4785-90e1-add17a3e0e5f",
    "prId" : 24375,
    "prUrl" : "https://github.com/flutter/flutter/pull/24375#pullrequestreview-175513962",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38389fae-6aa7-4ffc-8faa-a56f86cc765f",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Add a code comment for what this is about",
        "createdAt" : "2018-11-15T19:18:11Z",
        "updatedAt" : "2018-11-15T22:07:57Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "31b71083e22c4cfeb9ac7ebf35c89587d880d86a",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +522,526 @@    // For devices with notches, the drag area needs to be larger on the side\n    // that has the notch.\n    double dragAreaWidth = Directionality.of(context) == TextDirection.ltr ?\n                           MediaQuery.of(context).padding.left :\n                           MediaQuery.of(context).padding.right;"
  },
  {
    "id" : "6843d630-524e-4e1c-942c-d5ce81d124b7",
    "prId" : 25488,
    "prUrl" : "https://github.com/flutter/flutter/pull/25488#pullrequestreview-190075811",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cca9187-e534-48fa-a66b-b79b5f0c4b6f",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "ditto",
        "createdAt" : "2019-01-08T02:50:57Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a1257890f13c3f0d11776b29862d4e6976afcea",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +164,168 @@  @override\n  // A relatively rigorous eyeball estimation.\n  Duration get transitionDuration => const Duration(milliseconds: 400);\n\n  @override"
  },
  {
    "id" : "4a311f11-e844-4920-9a1d-c1090e569811",
    "prId" : 25488,
    "prUrl" : "https://github.com/flutter/flutter/pull/25488#pullrequestreview-190882826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "080751dc-9bbe-45c2-b652-143efab95043",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "ditto",
        "createdAt" : "2019-01-08T02:51:01Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "9661a5fe-7c6c-4491-9fe6-4f4ce6dc1de9",
        "parentId" : "080751dc-9bbe-45c2-b652-143efab95043",
        "authorId" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "body" : "Wouldn't a regular curve work here (e.g. `curveWithPower(4/5)`)? Playing around with my iPhone SE, IMO `linearToEaseOut` seems a little less natural as only the end is dampened.",
        "createdAt" : "2019-01-08T18:28:19Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "tags" : [
        ]
      },
      {
        "id" : "366c33d6-f6fd-450f-a3f5-b8ec14ab2b03",
        "parentId" : "080751dc-9bbe-45c2-b652-143efab95043",
        "authorId" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "body" : "Same for the other instances of `easeInToLinear`/`linearToEaseOut`",
        "createdAt" : "2019-01-08T18:28:56Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "tags" : [
        ]
      },
      {
        "id" : "2790f642-29bf-420a-89bd-eec41eefdf0f",
        "parentId" : "080751dc-9bbe-45c2-b652-143efab95043",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "To be honest, without a rigorous check comparing frames between native iOS and our Cupertino implementation, it's hard to say for sure which curve is the most accurate. Looking at a recording of native iOS frames, it seemed to me that a linear to ease curve was the most accurate. However, we are planning on making a framework to do native vs flutter testing in the future. \r\n\r\nAlso, if you are testing this code, make sure you test in release mode as the animations feel quite different than they do in debug mode.",
        "createdAt" : "2019-01-08T18:40:34Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "c097eaf7-99ae-4482-bfe0-c461e1b6ffc5",
        "parentId" : "080751dc-9bbe-45c2-b652-143efab95043",
        "authorId" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "body" : "With a bit too much time on my hands :smile: , I [plotted the frames](https://plot.ly/~marcoms/1) of a screen recording I made on my iPhone. The raw data is the following (measured with a ruler and lerp'd):\r\n\r\n```\r\n0\r\n0.121212\r\n0.208588\r\n0.339393\r\n0.442424\r\n0.533333\r\n0.618181\r\n0.690909\r\n0.751515\r\n0.842424\r\n0.878787\r\n0.903030\r\n0.921212\r\n0.939393\r\n0.951515\r\n0.963636\r\n0.969696\r\n0.975757\r\n0.981818\r\n0.987878\r\n0.990909\r\n0.992424\r\n0.993939\r\n0.996969\r\n1\r\n```\r\n\r\nActually you're right that it is more of a linear curve followed by an ease out (and 400ms is about right too). The only difference is the native curve is fairly steeper.\r\n\r\nHere it is modeled on cubic-bezier.com: http://cubic-bezier.com/#.35,.91,.33,.97\r\n\r\nHopefully plugging that into `Cubic()` will get us feeling more native. My only concern is whether Apple internally uses a parameterized curve that changes depending on the UI element :/",
        "createdAt" : "2019-01-09T18:23:53Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "tags" : [
        ]
      },
      {
        "id" : "34492c28-cf83-4530-ab8d-db410931d6c0",
        "parentId" : "080751dc-9bbe-45c2-b652-143efab95043",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "Wow! That's awesome! Thanks for doing that! I'll add that function and see how it feels!\r\n\r\nAnd by eyeball estimation, it looked like all their transition curves are the same across all their apps, tho it's hard to say absolutely for sure without checking. What I did notice tho is that the curve they use for animating a page back or forward if you release mid drag is different than the animation they use for when you tap a button to show a page.\r\n\r\nAgain, thanks for verifying this ! 😊",
        "createdAt" : "2019-01-09T19:09:10Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a1257890f13c3f0d11776b29862d4e6976afcea",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +366,370 @@         CurvedAnimation(\n           parent: primaryRouteAnimation,\n           curve: Curves.linearToEaseOut,\n           reverseCurve: Curves.easeInToLinear,\n         )"
  },
  {
    "id" : "510f356a-4241-4431-82e8-e9111437af80",
    "prId" : 25488,
    "prUrl" : "https://github.com/flutter/flutter/pull/25488#pullrequestreview-193813446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3615b50-8fae-41e1-a2c4-eb51607257a1",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Are we sure the curve is the same in either direction? Either way this PR is fine. I'm just wondering.",
        "createdAt" : "2019-01-11T02:53:36Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "254cc80b-c900-4e84-a834-e49606fded95",
        "parentId" : "e3615b50-8fae-41e1-a2c4-eb51607257a1",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "I'm like almost 100% sure. I just inverted the bezier points, it should be the reflected curve, but I did not verify my math checking the graphs or anything...",
        "createdAt" : "2019-01-17T19:56:24Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a1257890f13c3f0d11776b29862d4e6976afcea",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +625,629 @@      animateForward = controller.value > 0.5 ? true : false;\n\n    if (animateForward) {\n      // The closer the panel is to dismissing, the shorter the animation is.\n      // We want to cap the animation time, but we want to use a linear curve"
  }
]