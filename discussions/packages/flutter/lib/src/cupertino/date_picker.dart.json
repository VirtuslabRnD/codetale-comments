[
  {
    "id" : "4674c417-9675-40d0-9943-319b25c6e374",
    "prId" : 20966,
    "prUrl" : "https://github.com/flutter/flutter/pull/20966#pullrequestreview-149135551",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19d374c8-ce59-4cb4-9c6e-3654ceaa5e6e",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Is this right? We should let the user pick the background color.",
        "createdAt" : "2018-08-23T22:34:45Z",
        "updatedAt" : "2018-08-27T17:40:44Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "5b0d83c3-01d2-42db-bc05-0455c98fa3c4",
        "parentId" : "19d374c8-ce59-4cb4-9c6e-3654ceaa5e6e",
        "authorId" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "body" : "`CupertinoPicker` has colors fixed in `gradientScreen` (based on white background), so changing background color would make the picker looks weird.\r\nhttps://github.com/doxuanviet1996/flutter/blob/countdown_timer/packages/flutter/lib/src/cupertino/picker.dart#L184\r\n\r\nHaving a different background color and we also have to change this gradient screen. Personally I think supporting black and white background is enough and pretty easy to add (reverting the color of `gradientScreen` would do it).",
        "createdAt" : "2018-08-23T23:27:56Z",
        "updatedAt" : "2018-08-27T17:40:44Z",
        "lastEditedBy" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "tags" : [
        ]
      },
      {
        "id" : "3dfa7896-ab62-4cf2-ba09-0e00d0ab724e",
        "parentId" : "19d374c8-ce59-4cb4-9c6e-3654ceaa5e6e",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Ah right. Ideally we should do https://github.com/flutter/flutter/issues/16831 but outside the scope of this PR. ",
        "createdAt" : "2018-08-23T23:45:15Z",
        "updatedAt" : "2018-08-27T17:40:44Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "e83cecc136dcc3b9134b98f42d32185e9c9a532d",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@const double _kPickerWidth = 330.0;\n/// Considers setting the default background color from the theme, in the future.\nconst Color _kBackgroundColor = CupertinoColors.white;\n\n"
  },
  {
    "id" : "86bf0ed7-1d23-4c2d-9d29-04368c5160c6",
    "prId" : 20966,
    "prUrl" : "https://github.com/flutter/flutter/pull/20966#pullrequestreview-149525693",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2b53de8-92fd-4505-9890-ab2eea4150f0",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Assert not null I assume",
        "createdAt" : "2018-08-26T03:07:06Z",
        "updatedAt" : "2018-08-27T17:40:44Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "e83cecc136dcc3b9134b98f42d32185e9c9a532d",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +67,71 @@  /// positive integer factor of 60.\n  CupertinoTimerPicker({\n    this.mode = CupertinoTimerPickerMode.hms,\n    this.initialTimerDuration = const Duration(),\n    this.minuteInterval = 1,"
  },
  {
    "id" : "d4bd1dcf-534c-44d8-9e64-09d849bc93c4",
    "prId" : 20966,
    "prUrl" : "https://github.com/flutter/flutter/pull/20966#pullrequestreview-149525693",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a94799bb-c244-45ce-ac52-aaf728c2b151",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "extra space",
        "createdAt" : "2018-08-26T03:09:48Z",
        "updatedAt" : "2018-08-27T17:40:44Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "e83cecc136dcc3b9134b98f42d32185e9c9a532d",
    "line" : 322,
    "diffHunk" : "@@ -1,1 +320,324 @@      );\n    }\n\n    return Stack(\n      children: <Widget>["
  },
  {
    "id" : "142cb7b8-3897-4b6b-9062-db4d57ce6c39",
    "prId" : 21251,
    "prUrl" : "https://github.com/flutter/flutter/pull/21251#pullrequestreview-151586602",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de9975ab-c07d-4ed4-95fa-a51aa7552878",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Describe how is it optional and how you make it appear or not. In docs.flutter.io, the enum will appear without any docs from their surrounding class. They must fully describe themselves in isolation.",
        "createdAt" : "2018-09-01T11:20:56Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "4141d368e8d5ac23b9345eb2645f4272e4cb8bd7",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +77,81 @@///  * [CupertinoPicker], the class that implements a content agnostic spinner UI.\nenum CupertinoDatePickerMode {\n  /// Mode that shows the date in hour, minute, and (optional) an AM/PM designation.\n  /// The AM/PM designation is shown only if [CupertinoDatePicker] does not use 24h format.\n  /// Column order is subject to internationalization."
  },
  {
    "id" : "59742ddd-7db2-4101-b41f-c2d854a2b051",
    "prId" : 21251,
    "prUrl" : "https://github.com/flutter/flutter/pull/21251#pullrequestreview-151586602",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5fdddd5e-cc44-497d-8d08-73815a77e742",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Is the order subject to internationalization?",
        "createdAt" : "2018-09-01T11:21:55Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "4141d368e8d5ac23b9345eb2645f4272e4cb8bd7",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +83,87 @@  /// Example: [4 | 14 | PM].\n  time,\n  /// Mode that shows the date in month, day of month, and year.\n  /// Name of month is spelled in full.\n  /// Column order is subject to internationalization."
  },
  {
    "id" : "d0e83e58-b8b7-49df-aece-b3181de2a9c5",
    "prId" : 21251,
    "prUrl" : "https://github.com/flutter/flutter/pull/21251#pullrequestreview-151586602",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e072e18b-951f-417e-a058-5c09241f8ce1",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Describe whether it tries to spell the month is full etc. ",
        "createdAt" : "2018-09-01T11:22:11Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "4141d368e8d5ac23b9345eb2645f4272e4cb8bd7",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +87,91 @@  /// Column order is subject to internationalization.\n  ///\n  /// Example: [July | 13 | 2012].\n  date,\n  /// Mode that shows the date as day of the week, month, day of month and"
  },
  {
    "id" : "d32ec94d-c88c-4c17-a47a-7fe1f33fa2cc",
    "prId" : 21251,
    "prUrl" : "https://github.com/flutter/flutter/pull/21251#pullrequestreview-151586602",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86071dbc-3ffe-4689-b38d-938399630189",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Specifically in those combinations in that order in all regions?",
        "createdAt" : "2018-09-01T11:22:37Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "4141d368e8d5ac23b9345eb2645f4272e4cb8bd7",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +89,93 @@  /// Example: [July | 13 | 2012].\n  date,\n  /// Mode that shows the date as day of the week, month, day of month and\n  /// the time in hour, minute, and (optional) an AM/PM designation.\n  /// The AM/PM designation is shown only if [CupertinoDatePicker] does not use 24h format."
  },
  {
    "id" : "d4fb4ea4-adc5-4b47-90da-fa222971475c",
    "prId" : 21251,
    "prUrl" : "https://github.com/flutter/flutter/pull/21251#pullrequestreview-151586602",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edcbd817-a2fa-4364-9103-4dccfe0aff20",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "This needs more details. How does this widget display the dates. How does it respond to internationalization. ",
        "createdAt" : "2018-09-01T11:23:48Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "4141d368e8d5ac23b9345eb2645f4272e4cb8bd7",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +118,122 @@/// A date picker widget in iOS style.\n///\n/// There are several modes of the date picker listed in [CupertinoDatePickerMode].\n///\n/// The class will display its children as consecutive columns. Its children"
  },
  {
    "id" : "37116a3d-f902-4819-a79e-bfa1c244a1bf",
    "prId" : 21251,
    "prUrl" : "https://github.com/flutter/flutter/pull/21251#pullrequestreview-152885777",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1197db02-0b0a-41ab-bf50-5dce7b57c45b",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "how is this different from having a minimum date at the beginning of a year?",
        "createdAt" : "2018-09-01T11:25:31Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "e593e9a1-89e4-4c6b-9858-923981e3198b",
        "parentId" : "1197db02-0b0a-41ab-bf50-5dce7b57c45b",
        "authorId" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "body" : "I want to avoid the situation where user scrolls past a limit and it's not clear what we should do.\r\nFor example, if the lower limit is [June | 15 | 2018] and the current picker's value is \r\n[February | 19 | 2019]. If user scrolls the year column to 2018, what should we do? There's 2 options:\r\n - Scroll the year column to 2019.\r\n - Scroll the picker's value to [June | 15 | 2018].\r\n\r\nIn my opinion, the second one has usability issue because there's no quick way of undoing the action (user has to reselect all columns).\r\nThe constraints I set here is only applied to one column, to avoid the issue.",
        "createdAt" : "2018-09-04T18:20:11Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "tags" : [
        ]
      },
      {
        "id" : "5b892013-c187-4b84-bbbb-bdc6bee37dcd",
        "parentId" : "1197db02-0b0a-41ab-bf50-5dce7b57c45b",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Doesn't this ambiguity apply to month and day too? So we're just partially solving it anyway. \r\n\r\nSince years actually scroll infinitely and month and days only loop, what about just having a min/max year and no min/max date? My general recommendation is to only limit the options that appear (e.g. years) and not force scroll (leave those to the user).",
        "createdAt" : "2018-09-06T11:33:57Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "4141d368e8d5ac23b9345eb2645f4272e4cb8bd7",
    "line" : 155,
    "diffHunk" : "@@ -1,1 +152,156 @@  /// [CupertinoDatePickerMode.dateAndTime] mode. Null if there's no limit.\n  ///\n  /// [minimumYear] is the minimum year that the picker can be scrolled to in\n  /// [CupertinoDatePickerMode.date] mode. Defaults to 1 and must not be null.\n  ///"
  },
  {
    "id" : "3a5c7129-6258-4130-9846-b0203292bab1",
    "prId" : 21251,
    "prUrl" : "https://github.com/flutter/flutter/pull/21251#pullrequestreview-152199242",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f36ddd5d-d81d-43e6-84bb-d3513ae5a1cb",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I'm still not sure why we need a *Date and a *Year",
        "createdAt" : "2018-09-01T11:28:35Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "a13b2b41-5f38-4fa2-afca-3a8df055d893",
        "parentId" : "f36ddd5d-d81d-43e6-84bb-d3513ae5a1cb",
        "authorId" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "body" : "See above.",
        "createdAt" : "2018-09-04T18:36:41Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "4141d368e8d5ac23b9345eb2645f4272e4cb8bd7",
    "line" : 229,
    "diffHunk" : "@@ -1,1 +226,230 @@  /// Minimum year that the picker can be scrolled to in\n  /// [CupertinoDatePickerMode.date] mode. Defaults to 1 and must not be null.\n  final int minimumYear;\n\n  /// Maximum year that the picker can be scrolled to in"
  },
  {
    "id" : "9756c030-be5e-48f4-b75c-6493dc4056bf",
    "prId" : 21251,
    "prUrl" : "https://github.com/flutter/flutter/pull/21251#pullrequestreview-151586602",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8009798-2297-4e2e-83be-78d38e6a972a",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Describe the difference between this and _CupertinoDatePickerDateState and why it needs to be 2 classes in // comments.",
        "createdAt" : "2018-09-01T11:29:33Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "4141d368e8d5ac23b9345eb2645f4272e4cb8bd7",
    "line" : 338,
    "diffHunk" : "@@ -1,1 +335,339 @@typedef _ColumnBuilder = Widget Function(double offAxisFraction, TransitionBuilder itemPositioningBuilder);\n\nclass _CupertinoDatePickerDateTimeState extends State<CupertinoDatePicker> {\n  int textDirectionFactor;\n  CupertinoLocalizations localizations;"
  },
  {
    "id" : "9e17187d-c9d1-41dc-8909-689a17ca1868",
    "prId" : 21251,
    "prUrl" : "https://github.com/flutter/flutter/pull/21251#pullrequestreview-152286408",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "562b1961-114b-4e08-acaf-064dc92608b1",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Make sure to add a test for what happens if you scroll past the threshold but before the 300ms finishes, scroll back",
        "createdAt" : "2018-09-01T11:45:19Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "a63a37af-1dd2-4329-a729-6bb8f15c71ec",
        "parentId" : "562b1961-114b-4e08-acaf-064dc92608b1",
        "authorId" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "body" : "By trying manually, it seems like I would fail this kind of test. The animation has to finished before the controller moves to a new one.\r\nAnother issue is when scrolling really fast, the `onSelectedItemChanged` function is not called for consecutive items, so the condition here is not satisfied, although we do want to scroll in such condition.\r\nI will think about it. Any suggestion/hint on how to improve this would be great.",
        "createdAt" : "2018-09-04T23:11:06Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "4141d368e8d5ac23b9345eb2645f4272e4cb8bd7",
    "line" : 485,
    "diffHunk" : "@@ -1,1 +482,486 @@          if (currentHourIn24h ~/ 12 != index ~/ 12) {\n            selectedHour = index % 12;\n            amPmController.animateToItem(\n              1 - amPmController.selectedItem,\n              duration: const Duration(milliseconds: 300), // Set by comparing with iOS version."
  },
  {
    "id" : "d3a9cffa-f0cd-4452-a6fd-9da3f30ec340",
    "prId" : 21251,
    "prUrl" : "https://github.com/flutter/flutter/pull/21251#pullrequestreview-151586602",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c316bc6-fa70-44d6-874f-3e1230a5b190",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Hard to figure out why this is the right math just given the variable name. Add more comments",
        "createdAt" : "2018-09-01T11:45:57Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "4141d368e8d5ac23b9345eb2645f4272e4cb8bd7",
    "line" : 486,
    "diffHunk" : "@@ -1,1 +483,487 @@            selectedHour = index % 12;\n            amPmController.animateToItem(\n              1 - amPmController.selectedItem,\n              duration: const Duration(milliseconds: 300), // Set by comparing with iOS version.\n              curve: Curves.easeOut,"
  },
  {
    "id" : "8a3bfcdd-0d93-47d0-a0cc-06f36f05794d",
    "prId" : 21251,
    "prUrl" : "https://github.com/flutter/flutter/pull/21251#pullrequestreview-152247800",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38a96fba-2e9f-4178-b4c4-347839cefd6d",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Ideally we should base this on the middle of the current i's width divided by the sum of widths.",
        "createdAt" : "2018-09-01T12:01:19Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "876df514-2e6a-4deb-b245-88ae0d7d405e",
        "parentId" : "38a96fba-2e9f-4178-b4c4-347839cefd6d",
        "authorId" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "body" : "Technically that's correct, but I've tried centering all columns to the center of the screen, and that makes the columns skew too much.",
        "createdAt" : "2018-09-04T20:50:00Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "4141d368e8d5ac23b9345eb2645f4272e4cb8bd7",
    "line" : 607,
    "diffHunk" : "@@ -1,1 +603,607 @@\n    for (int i = 0; i < columnWidths.length; i++) {\n      double offAxisFraction = 0.0;\n      if (i == 0)\n        offAxisFraction = -0.5 * textDirectionFactor;"
  },
  {
    "id" : "878742ec-c700-48e0-842d-fc4fea66df82",
    "prId" : 21251,
    "prUrl" : "https://github.com/flutter/flutter/pull/21251#pullrequestreview-153226345",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b5beb81-99c9-4824-81fa-60b88041b601",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I feel like a number of things can be shared. Can't they be extracted into a mixin or a superclass?",
        "createdAt" : "2018-09-01T12:04:10Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "610388a1-288c-47cd-b41f-90263d47b08b",
        "parentId" : "5b5beb81-99c9-4824-81fa-60b88041b601",
        "authorId" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "body" : "From the users' view, I want them to see this as just one class (same as how iOS does), and mostly what users actually need to do is specifying the mode.\r\nI've thought about writing superclass and inheritance, but that will also goes to user's level, and then calling a picker will goes to new class names like CupertinoDatePicker, CupertinoDateTimePicker, CupertinoTimePicker, etc.",
        "createdAt" : "2018-09-04T21:16:55Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "tags" : [
        ]
      },
      {
        "id" : "54eea384-6df3-4000-b491-aabfeb553bbb",
        "parentId" : "5b5beb81-99c9-4824-81fa-60b88041b601",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Sorry, I meant extracting common logic between the private _CupertinoDatePickerDateTimeState and _CupertinoDatePickerDateState. They could be private static functions in this file too.",
        "createdAt" : "2018-09-06T11:41:03Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "fd2aa6a9-98c6-4890-b82a-f20c0cc14996",
        "parentId" : "5b5beb81-99c9-4824-81fa-60b88041b601",
        "authorId" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "body" : "The one function that is I think can be shared is `_getColumnWidth`, however that one is reading information from the current BuildContext, so I can't extract that out. Any suggestion?",
        "createdAt" : "2018-09-06T17:55:26Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "tags" : [
        ]
      },
      {
        "id" : "a5f7c152-4134-4d79-9124-495e62747d38",
        "parentId" : "5b5beb81-99c9-4824-81fa-60b88041b601",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "You can pass this.context as a parameter to static functions.",
        "createdAt" : "2018-09-07T07:15:05Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "4141d368e8d5ac23b9345eb2645f4272e4cb8bd7",
    "line" : 655,
    "diffHunk" : "@@ -1,1 +651,655 @@}\n\nclass _CupertinoDatePickerDateState extends State<CupertinoDatePicker> {\n  int textDirectionFactor;\n  CupertinoLocalizations localizations;"
  },
  {
    "id" : "e3c70f11-db06-4a09-ab73-43c5464139f4",
    "prId" : 21251,
    "prUrl" : "https://github.com/flutter/flutter/pull/21251#pullrequestreview-153036268",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be704e18-dffe-4ca9-9fc2-01514afef4f7",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Reading this logic, since you already know how wide each column should be, is this really different from just having a Row where the first and last items have an expanded with flex 1 and everything else has a sizedbox with a padding?\r\n\r\ni.e. do we need a CustomMultiChildLayout?",
        "createdAt" : "2018-09-06T11:27:59Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "0930cbc1-6a5b-4ca9-bb51-97e5a0345111",
        "parentId" : "be704e18-dffe-4ca9-9fc2-01514afef4f7",
        "authorId" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "body" : "In that case, the leftmost and rightmost column will share the remaining width and each has half of it. The picker's content is not centered this way.\r\nWhat happens here is the leftmost has its own width, the rightmost has its own width, and then afterwards the remaining width is divided equally to them (so in the end, their width are not equal). That makes they expanded all the way to the border and the picker's content is still in the center.",
        "createdAt" : "2018-09-06T17:22:11Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "4141d368e8d5ac23b9345eb2645f4272e4cb8bd7",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +41,45 @@  @override\n  void performLayout(Size size) {\n    double remainingWidth = size.width;\n\n    for (int i = 0; i < columnWidths.length; i++)"
  },
  {
    "id" : "4424b553-30ff-4b1d-bcfe-7a1aa4307c1c",
    "prId" : 21251,
    "prUrl" : "https://github.com/flutter/flutter/pull/21251#pullrequestreview-152885777",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e21374d-6019-420b-b223-196709038477",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Thanks for adding comments.",
        "createdAt" : "2018-09-06T11:36:16Z",
        "updatedAt" : "2018-09-28T23:09:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "4141d368e8d5ac23b9345eb2645f4272e4cb8bd7",
    "line" : 248,
    "diffHunk" : "@@ -1,1 +245,249 @@  @override\n  State<StatefulWidget> createState() {\n    // The `time` mode and `dateAndTime` mode of the picker share the time\n    // columns, so they are placed together to one state.\n    // The `date` mode has different children and is implemented in a different"
  },
  {
    "id" : "efeb8209-f7d6-4da1-882f-82a38b342181",
    "prId" : 26904,
    "prUrl" : "https://github.com/flutter/flutter/pull/26904#pullrequestreview-200711045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a564743-601f-4a2c-a99c-fb8c044e17d4",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Do we really need a new `previousHourIndex`? It seems like selectedHour is only read while building onDateTimeChanged(_getDateTime()) which is deferred in this branch. Can we just compare index against selectedHour and set selectedHour after the animateToItem?\r\n\r\nI may have missed something too.",
        "createdAt" : "2019-01-29T22:49:45Z",
        "updatedAt" : "2019-02-06T19:21:41Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "beff2a64-baca-4070-8495-4dab8e0f321b",
        "parentId" : "0a564743-601f-4a2c-a99c-fb8c044e17d4",
        "authorId" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "body" : "If we're in 12-hour mode, then selectedHour only ranges from 0-11, which is first assigned that way in `initState()` - so it won't work for us to compare against index which ranges from 0-23.",
        "createdAt" : "2019-01-30T19:34:21Z",
        "updatedAt" : "2019-02-06T19:21:41Z",
        "lastEditedBy" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "tags" : [
        ]
      },
      {
        "id" : "60ac2ce7-1931-4189-89b6-3e1205536d50",
        "parentId" : "0a564743-601f-4a2c-a99c-fb8c044e17d4",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Ah I see. Can you make sure this is commented at the definition of previousHourIndex or make it clearer by its name such as _previous24RangeHourIndex or some such to distinguish its public-facing-ness and range from `selectedHour`?",
        "createdAt" : "2019-02-05T22:13:55Z",
        "updatedAt" : "2019-02-06T19:21:41Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "d8be76a0-b7ee-417f-b8e9-d55b2b915193",
        "parentId" : "0a564743-601f-4a2c-a99c-fb8c044e17d4",
        "authorId" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "body" : "Improved the docs in my latest commit",
        "createdAt" : "2019-02-06T17:41:12Z",
        "updatedAt" : "2019-02-06T19:21:41Z",
        "lastEditedBy" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f07c654378e17a40ee6fe9dcc51faf40b1d4501",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +500,504 @@          widget.onDateTimeChanged(_getDateTime());\n        } else {\n          selectedHour = index % 12;\n\n          // Automatically scrolls the am/pm column when the hour column value"
  },
  {
    "id" : "78e7488c-1f2e-4127-a655-6f7f1e8b7e7b",
    "prId" : 38481,
    "prUrl" : "https://github.com/flutter/flutter/pull/38481#pullrequestreview-275104672",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58845db7-15ee-4fcf-8591-bc763ea8f300",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Would it simplify any of these build methods to break them out as separate widgets instead?  Either way is fine, just throwing that out there.",
        "createdAt" : "2019-08-14T19:47:28Z",
        "updatedAt" : "2019-09-03T17:11:06Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "2220cef9e00c2a2dbe6d964f57f8f36edd708296",
    "line" : 260,
    "diffHunk" : "@@ -1,1 +1265,1269 @@  // The picker has to be wider than its content, since the separators\n  // are part of the picker.\n  Widget _buildPickerNumberLabel(String text, EdgeInsetsDirectional padding) {\n    return Container(\n      width: _kTimerPickerColumnIntrinsicWidth + padding.horizontal,"
  },
  {
    "id" : "ddaf4c39-0a54-4968-aa93-53ee05cbcaa1",
    "prId" : 38481,
    "prUrl" : "https://github.com/flutter/flutter/pull/38481#pullrequestreview-275104672",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2663436-9659-4090-b1b9-5dcf726b9dbe",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Any way to share the hm and ms code that's the same here?  Don't worry about it if it makes the code harder to understand, this is pretty good as it is.",
        "createdAt" : "2019-08-14T19:51:25Z",
        "updatedAt" : "2019-09-03T17:11:06Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "2220cef9e00c2a2dbe6d964f57f8f36edd708296",
    "line" : 615,
    "diffHunk" : "@@ -1,1 +1483,1487 @@          _buildMinuteColumn(const EdgeInsetsDirectional.only(start: paddingValue / 2, end: _kTimerPickerHalfColumnPadding)),\n          _buildSecondColumn(const EdgeInsetsDirectional.only(start: _kTimerPickerHalfColumnPadding, end: paddingValue / 2))\n        ];\n        break;\n      case CupertinoTimerPickerMode.hms:"
  }
]