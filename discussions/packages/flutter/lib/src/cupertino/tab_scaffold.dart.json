[
  {
    "id" : "898fbe48-7d72-4329-9e8b-ae2f32bec19f",
    "prId" : 13194,
    "prUrl" : "https://github.com/flutter/flutter/pull/13194#pullrequestreview-80361379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3e38e81-0ec4-4d94-ab70-42a956029df3",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "hinting?",
        "createdAt" : "2017-11-30T23:07:55Z",
        "updatedAt" : "2017-11-30T23:07:55Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a4ce414e5f9f861d63073d0e703b63af0e78e7a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +119,123 @@  ///\n  /// Content can slide under the [tabBar] when it's translucent with a\n  /// [MediaQuery] padding hinting the bottom obstructed area.\n  final IndexedWidgetBuilder tabBuilder;\n"
  },
  {
    "id" : "5926466a-7943-4957-ae01-3331eb91371b",
    "prId" : 13194,
    "prUrl" : "https://github.com/flutter/flutter/pull/13194#pullrequestreview-80361400",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12e9cccf-6cf0-4303-b574-ce508f154919",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "todo syntax",
        "createdAt" : "2017-11-30T23:08:01Z",
        "updatedAt" : "2017-11-30T23:08:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a4ce414e5f9f861d63073d0e703b63af0e78e7a",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +142,146 @@      final MediaQueryData existingMediaQuery = MediaQuery.of(context);\n\n      // TODO(https://github.com/flutter/flutter/issues/12912):\n      // Use real size after partial layout instead of preferred size.\n      final double bottomPadding = widget.tabBar.preferredSize.height"
  },
  {
    "id" : "3670e344-025c-4402-be06-586e18d3bf22",
    "prId" : 19130,
    "prUrl" : "https://github.com/flutter/flutter/pull/19130#pullrequestreview-135560628",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83ac3631-3268-49c5-a166-3e601d06f3cf",
        "parentId" : null,
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "I know this is just for documentation, so this PR handles that, but this is probably a poor coding practice.  It suggests that there is something special about 2 level navigation when in reality, we could have any number of levels of navigation.  We should consider some kind of ID system for Navigators, instead.",
        "createdAt" : "2018-07-07T05:00:51Z",
        "updatedAt" : "2018-07-07T05:00:52Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      },
      {
        "id" : "d03ac1d0-e37d-43f0-91a9-395da654ccb0",
        "parentId" : "83ac3631-3268-49c5-a166-3e601d06f3cf",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Nested navigators are all individually addressable via `GlobalKey<NavigatorState>`",
        "createdAt" : "2018-07-09T19:31:32Z",
        "updatedAt" : "2018-07-09T19:31:32Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbfa9d55ca4e5d92ededa17014028907b011c12c",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +74,78 @@/// To push a route above all tabs instead of inside the currently selected one\n/// (such as when showing a dialog on top of this scaffold), use\n/// `Navigator.of(rootNavigator: true)` from inside the [BuildContext] of a\n/// [CupertinoTabView].\n///"
  },
  {
    "id" : "a80b8345-4af8-4516-a04e-a2f8437dc03a",
    "prId" : 31227,
    "prUrl" : "https://github.com/flutter/flutter/pull/31227#pullrequestreview-228056955",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4d5dbe0-6d9d-4b0a-8856-6359e820d464",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Mention that changing the controller will update the scaffold and the tab bar to the new controller's index value.",
        "createdAt" : "2019-04-18T00:49:02Z",
        "updatedAt" : "2019-05-17T01:43:18Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "6edccbd5b09f4c7e42a8ca8dd98c20b12e88da6c",
    "line" : 173,
    "diffHunk" : "@@ -1,1 +235,239 @@  /// index value.\n  ///\n  /// Defaults to null.\n  final CupertinoTabController controller;\n"
  },
  {
    "id" : "f9490687-aa67-4016-8608-a2374bd3d010",
    "prId" : 31227,
    "prUrl" : "https://github.com/flutter/flutter/pull/31227#pullrequestreview-229351066",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e8da7f8-357a-407a-8dd3-6658d7fe7820",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Don't leave the body empty. Add a code comment saying what would read from _controller.value after.",
        "createdAt" : "2019-04-23T05:22:58Z",
        "updatedAt" : "2019-05-17T01:43:18Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "6edccbd5b09f4c7e42a8ca8dd98c20b12e88da6c",
    "line" : 222,
    "diffHunk" : "@@ -1,1 +311,315 @@    // The value of `_controller.index` has already been updated at this point.\n    // Calling `setState` to rebuild using `_controller.index`.\n    setState(() {});\n  }\n"
  },
  {
    "id" : "52f06447-2d68-404a-ad44-5f43142a15b8",
    "prId" : 31227,
    "prUrl" : "https://github.com/flutter/flutter/pull/31227#pullrequestreview-235883364",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40dbf087-1b4e-4848-95cc-031fc02c8836",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This looks like it could be a subclass of ValueNotifier<int>",
        "createdAt" : "2019-05-10T00:39:30Z",
        "updatedAt" : "2019-05-17T01:43:18Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6edccbd5b09f4c7e42a8ca8dd98c20b12e88da6c",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +60,64 @@/// * [CupertinoTabScaffold], a tabbed application root layout that can be\n///   controlled by a [CupertinoTabController].\nclass CupertinoTabController extends ChangeNotifier {\n  /// Creates a [CupertinoTabController] to control the tab index of [CupertinoTabScaffold]\n  /// and [CupertinoTabBar]."
  },
  {
    "id" : "bcc0fbc4-8e90-4a7b-97e5-391d93d5e505",
    "prId" : 31227,
    "prUrl" : "https://github.com/flutter/flutter/pull/31227#pullrequestreview-235883364",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f07e7015-97c3-41dc-90cc-029171c6561b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This class should override dispose to `_controller.dispose`",
        "createdAt" : "2019-05-10T00:47:15Z",
        "updatedAt" : "2019-05-17T01:43:18Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6edccbd5b09f4c7e42a8ca8dd98c20b12e88da6c",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +25,29 @@///\n/// class _CupertinoTabScaffoldPageState extends State<MyCupertinoTabScaffoldPage> {\n///   final CupertinoTabController _controller = CupertinoTabController();\n///\n///   @override"
  },
  {
    "id" : "ed810480-426d-4928-94ab-b0a1f414e031",
    "prId" : 31227,
    "prUrl" : "https://github.com/flutter/flutter/pull/31227#pullrequestreview-235883364",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13fb76da-b87d-43d4-8d02-13c6abac882a",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "If this class owns the tab controller, then this class needs to dispose it.\r\n\r\n",
        "createdAt" : "2019-05-10T00:50:39Z",
        "updatedAt" : "2019-05-17T01:43:18Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6edccbd5b09f4c7e42a8ca8dd98c20b12e88da6c",
    "line" : 197,
    "diffHunk" : "@@ -1,1 +286,290 @@      // User provided a new controller, update `_controller` with it.\n      widget.controller\n      ?? CupertinoTabController(initialIndex: widget.tabBar.currentIndex);\n\n    if (newController == _controller) {"
  },
  {
    "id" : "3af7a221-b3ac-4f40-8e22-7d61d7254a99",
    "prId" : 31227,
    "prUrl" : "https://github.com/flutter/flutter/pull/31227#pullrequestreview-238512832",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85dc7f8a-dccf-4034-b753-af10576c73b9",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Don't notify listeners if `value == _index`",
        "createdAt" : "2019-05-16T16:43:43Z",
        "updatedAt" : "2019-05-17T01:43:18Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6edccbd5b09f4c7e42a8ca8dd98c20b12e88da6c",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +89,93 @@      return;\n    }\n    _index = value;\n    notifyListeners();\n  }"
  },
  {
    "id" : "5face48d-27a8-4909-8da8-9c0df5c63b07",
    "prId" : 40100,
    "prUrl" : "https://github.com/flutter/flutter/pull/40100#pullrequestreview-287760701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e71e77b-0d36-4cfc-ae35-184bc28cabb5",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It seems odd that we don't eagerly dispose discarded nodes. Maybe explain why we hang on to them until the enclosing widget is disposed, here.",
        "createdAt" : "2019-09-10T15:52:17Z",
        "updatedAt" : "2019-09-13T00:20:40Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "01aea018-49e7-49a8-a711-d2d627881509",
        "parentId" : "8e71e77b-0d36-4cfc-ae35-184bc28cabb5",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done.",
        "createdAt" : "2019-09-12T23:52:45Z",
        "updatedAt" : "2019-09-13T00:20:40Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "71531b96c199212bcc7fcc2c70d6acd2f551952e",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +473,477 @@  // disposed of, so when they are no longer needed, we move them to this list,\n  // and dispose of them when we dispose of this widget.\n  final List<FocusScopeNode> discardedNodes = <FocusScopeNode>[];\n\n  @override"
  },
  {
    "id" : "7ad3df28-fe73-4a1f-9d96-7d2c60cd1884",
    "prId" : 48223,
    "prUrl" : "https://github.com/flutter/flutter/pull/48223#pullrequestreview-383197451",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33dca8fe-f742-4b3f-b6cf-c95e638bb938",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "This seems like a bandage fix.\r\n\r\nI am not sure if this make sense, but should we apply HeroMode in Offstage directly? For example if Offstage.offstage = true, the it will wrap its child with HeroMode. \r\n\r\ncc @goderbauer @justinmc ",
        "createdAt" : "2020-03-27T19:16:26Z",
        "updatedAt" : "2020-10-31T02:52:52Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "434e4d70-0140-4ce6-94bd-21b5377c520d",
        "parentId" : "33dca8fe-f742-4b3f-b6cf-c95e638bb938",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "No, it should be composable. Just like Offstage also doesn't wrap TickerMode and some other widgets.",
        "createdAt" : "2020-03-27T20:23:19Z",
        "updatedAt" : "2020-10-31T02:52:52Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "0b1be8eb-9157-46c6-9bdb-bb32a29b9d16",
        "parentId" : "33dca8fe-f742-4b3f-b6cf-c95e638bb938",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "sounds good",
        "createdAt" : "2020-03-27T21:02:10Z",
        "updatedAt" : "2020-10-31T02:52:52Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "885272fa93dd757f1a9fe748057f19c360036c03",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +577,581 @@        shouldBuildTab[index] = active || shouldBuildTab[index];\n\n        return HeroMode(\n          enabled: active,\n          child: Offstage("
  }
]