[
  {
    "id" : "8eb83c67-843a-4f26-9bd6-b86276724721",
    "prId" : 23759,
    "prUrl" : "https://github.com/flutter/flutter/pull/23759#pullrequestreview-173226515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4daebf7b-2c70-46e4-bede-da514b26fa15",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Since there are two values here and the same comment ...\r\n```\r\n// Values derived from https://developer.apple.com/design/resources/.\r\nconst Color _kDefaultBarLightBackgroundColor = Color(0xCCF8F8F8);\r\nconst Color _kDefaultBarDarkBackgroundColor = Color(0xB7212121);\r\n```\r\n",
        "createdAt" : "2018-11-08T20:29:58Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "a19da51e-5b06-4153-ae7d-649938d4cc02",
        "parentId" : "4daebf7b-2c70-46e4-bede-da514b26fa15",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "sure",
        "createdAt" : "2018-11-08T23:58:15Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0cc8fc1fd15cf27ba5f1c0431547b433e6c9112",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@export 'package:flutter/services.dart' show Brightness;\n\n// Values derived from https://developer.apple.com/design/resources/.\nconst Color _kDefaultBarLightBackgroundColor = Color(0xCCF8F8F8);\nconst Color _kDefaultBarDarkBackgroundColor = Color(0xB7212121);"
  },
  {
    "id" : "f2c18526-8738-4c2e-8955-c5ba33af4698",
    "prId" : 23759,
    "prUrl" : "https://github.com/flutter/flutter/pull/23759#pullrequestreview-173226839",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7bb49729-20f6-451c-935f-c9f4ef22de07",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Maybe default data to `const CupertinoThemeData()` and (unrelated) don't require child to be non null?",
        "createdAt" : "2018-11-08T22:51:19Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "cca06caa-0d7d-43b3-a7c7-f1dc899108d3",
        "parentId" : "7bb49729-20f6-451c-935f-c9f4ef22de07",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Let's keep CupertinoTheme and MaterialTheme the same for now. There's no reason to add a CupertinoTheme without a theme for now. The CupertinoApp adds one with a const CupertinoThemeData already.",
        "createdAt" : "2018-11-08T23:59:38Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0cc8fc1fd15cf27ba5f1c0431547b433e6c9112",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@  /// Creates a [CupertinoTheme] to change descendant Cupertino widgets' styling.\n  ///\n  /// The [data] and [child] parameters must not be null.\n  const CupertinoTheme({\n    Key key,"
  },
  {
    "id" : "f592edf9-e037-4d50-9d3e-5dbe6c76c62d",
    "prId" : 23759,
    "prUrl" : "https://github.com/flutter/flutter/pull/23759#pullrequestreview-173227740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f27d243e-0e2f-4c66-b247-d9e764f9c8fb",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It looks like it's only the textTheme that can be partially specified. Might be best to just explain how its null properties are defaulted.",
        "createdAt" : "2018-11-08T22:53:50Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "95fb2cf4-573f-4029-89bc-d97319b3a706",
        "parentId" : "f27d243e-0e2f-4c66-b247-d9e764f9c8fb",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Actually I meant this constructor's parameters can be partially specified. Rather than each one of the parameters can be specified in part. ",
        "createdAt" : "2018-11-09T00:03:48Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0cc8fc1fd15cf27ba5f1c0431547b433e6c9112",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +64,68 @@/// [CupertinoColors.activeBlue] based default iOS theme styling is used.\n///\n/// Parameters can also be partially specified, in which case some parameters\n/// will cascade down to other dependent parameters to create a cohesive\n/// visual effect. For instance, if a [primaryColor] is specified, it would"
  },
  {
    "id" : "82a44b19-2fd9-4cb3-ad9c-0214670f11cd",
    "prId" : 23759,
    "prUrl" : "https://github.com/flutter/flutter/pull/23759#pullrequestreview-173230451",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f088f387-0c8a-40aa-aea2-decc08b6d69c",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It would be more conventional to use @required named parameters here.",
        "createdAt" : "2018-11-08T22:56:52Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "af8256a8-73b1-41a1-a55c-acc25142a866",
        "parentId" : "f088f387-0c8a-40aa-aea2-decc08b6d69c",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "This is mainly to avoid verbosity for a protected constructor",
        "createdAt" : "2018-11-09T00:16:45Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0cc8fc1fd15cf27ba5f1c0431547b433e6c9112",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +96,100 @@      );\n\n  /// Same as the default constructor but with positional arguments to avoid\n  /// forgetting any and to specify all arguments.\n  ///"
  },
  {
    "id" : "a5ee005a-173a-4446-9b82-bb4fc40494ab",
    "prId" : 23759,
    "prUrl" : "https://github.com/flutter/flutter/pull/23759#pullrequestreview-173230548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f58fa66-2b05-43d0-9c98-61acd0b264e5",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "need a blank line here",
        "createdAt" : "2018-11-08T22:57:57Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "2f606c3c-8dba-4a5d-bc83-447c69f6e65d",
        "parentId" : "7f58fa66-2b05-43d0-9c98-61acd0b264e5",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I'm just grouping the private fields with the getters",
        "createdAt" : "2018-11-09T00:17:07Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0cc8fc1fd15cf27ba5f1c0431547b433e6c9112",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +112,116 @@  bool get _isLight => brightness == Brightness.light;\n\n  /// The general brightness theme of the [CupertinoThemeData].\n  ///\n  /// Affects all other theme properties when unspecified. Defaults to"
  },
  {
    "id" : "b68b4976-1d78-4b69-a576-8e4e2aaf52b3",
    "prId" : 23759,
    "prUrl" : "https://github.com/flutter/flutter/pull/23759#pullrequestreview-173535292",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f903ab68-2912-458a-9a72-7b64657594a8",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I think what you mean is that, by default, the MaterialTheme creates a CupertinoTheme with the same brightness value.",
        "createdAt" : "2018-11-08T22:59:09Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "e2eed335-99f6-4a73-959e-f3f9fe300ed2",
        "parentId" : "f903ab68-2912-458a-9a72-7b64657594a8",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Some subtle nuances here but it does not. CupertinoThemes under MaterialThemes are specific overrides. If you took that CupertinoThemeData and put it under a different MaterialTheme, it would use that new MaterialTheme's brightness. It wouldn't work if that CupertinoThemeData was constructed with the first material theme's brightness.",
        "createdAt" : "2018-11-09T00:08:53Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "4d826c87-7ddc-4a96-8d89-3006b93e36a1",
        "parentId" : "f903ab68-2912-458a-9a72-7b64657594a8",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "OK, so it's:\r\n\r\nBy default, the MaterialTheme creates a CupertinoTheme that inherits the MaterialTheme's [ThemeData.brightness].",
        "createdAt" : "2018-11-09T18:31:01Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0cc8fc1fd15cf27ba5f1c0431547b433e6c9112",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +117,121 @@  /// [Brightness.light].\n  ///\n  /// If coming from a Material [Theme] and unspecified, [brightness] will be\n  /// derived from the Material [ThemeData]'s `brightness`.\n  Brightness get brightness => _brightness ?? Brightness.light;"
  },
  {
    "id" : "6bf2715d-9f84-4272-981a-a260520c3200",
    "prId" : 23759,
    "prUrl" : "https://github.com/flutter/flutter/pull/23759#pullrequestreview-173229220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d1736dd-90cb-4a0e-8e5a-4a3b79f703cc",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I will not belabor this trivial point any further but: \"derived from\" sounds more complicated than simple copying.  In this case \"will be derived from\" could just be \"the same as\".",
        "createdAt" : "2018-11-08T23:01:45Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "11177839-8f87-494a-8760-66e781655364",
        "parentId" : "5d1736dd-90cb-4a0e-8e5a-4a3b79f703cc",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Ya same as below. It doesn't copy it. The actual value at that node is null. It defers the value to the ancestor material theme.",
        "createdAt" : "2018-11-09T00:10:41Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0cc8fc1fd15cf27ba5f1c0431547b433e6c9112",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +129,133 @@  ///\n  /// If coming from a Material [Theme] and unspecified, [primaryColor] will be\n  /// derived from the Material [ThemeData]'s `colorScheme.primary`. However, in\n  /// iOS styling, the [primaryColor] is more sparsely used than in Material\n  /// Design where the [primaryColor] can appear on non-interactive surfaces like"
  },
  {
    "id" : "8dd1bc9e-f560-4cc8-92b3-203c447f16de",
    "prId" : 23759,
    "prUrl" : "https://github.com/flutter/flutter/pull/23759#pullrequestreview-174163567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7406ae04-a554-40c7-8c64-d2febaf19b05",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "do we actually need this? we only need it in ThemeData because the default constructor does all kinds of magic.",
        "createdAt" : "2018-11-12T23:43:37Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "bdc2d193-dff9-4ab0-a7d5-6185928c3edb",
        "parentId" : "7406ae04-a554-40c7-8c64-d2febaf19b05",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I just needed 2 different constructors for optional arguments and required arguments. But you point below about the raw constructor and method overlap is a good point. I'll rename this (since it's `@protected` and less important).",
        "createdAt" : "2018-11-13T01:42:20Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0cc8fc1fd15cf27ba5f1c0431547b433e6c9112",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +101,105 @@  /// Used by subclasses to get the superclass's defaulting behaviors.\n  @protected\n  const CupertinoThemeData.raw(\n    this._brightness,\n    this._primaryColor,"
  },
  {
    "id" : "da071b93-06c2-49f7-8061-e423bc871292",
    "prId" : 23759,
    "prUrl" : "https://github.com/flutter/flutter/pull/23759#pullrequestreview-175613312",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3696499-3b09-4cb4-a092-7ee5fd041107",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this explanation really doesn't help anyone who doesn't understand the subtleties of the class hierarchy here.",
        "createdAt" : "2018-11-12T23:44:53Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "8975e106-683b-4aa9-abb1-615b165af713",
        "parentId" : "d3696499-3b09-4cb4-a092-7ee5fd041107",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "added more text",
        "createdAt" : "2018-11-16T00:10:38Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0cc8fc1fd15cf27ba5f1c0431547b433e6c9112",
    "line" : 187,
    "diffHunk" : "@@ -1,1 +185,189 @@\n  /// Return an instance of the [CupertinoThemeData] whose property getters\n  /// only return the construction time specifications with no derived values.\n  ///\n  /// Used in Material themes to let unspecified properties fallback to Material"
  },
  {
    "id" : "50ab671c-c976-48d7-92e4-d399dd922e22",
    "prId" : 23759,
    "prUrl" : "https://github.com/flutter/flutter/pull/23759#pullrequestreview-175613417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7887178-18d9-4055-80fa-e5525af48056",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "it's very confusing that CupertinoThemeData.raw() doesn't return the same thing as CupertinoThemeData().raw()",
        "createdAt" : "2018-11-12T23:45:31Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "f3d32c51-1714-4153-b719-fabb3463140f",
        "parentId" : "b7887178-18d9-4055-80fa-e5525af48056",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Changed the non-constructor method to noDefault() instead since it's more explicit",
        "createdAt" : "2018-11-16T00:11:07Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0cc8fc1fd15cf27ba5f1c0431547b433e6c9112",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +101,105 @@  /// Used by subclasses to get the superclass's defaulting behaviors.\n  @protected\n  const CupertinoThemeData.raw(\n    this._brightness,\n    this._primaryColor,"
  },
  {
    "id" : "ce7ab8ad-82a9-427d-9500-9bb8b9b16e38",
    "prId" : 37719,
    "prUrl" : "https://github.com/flutter/flutter/pull/37719#pullrequestreview-273849424",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98c988fb-f900-436b-8aba-a58ef8e4fd4a",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Shouldn't the inherited theme data be resolved against context?",
        "createdAt" : "2019-08-08T15:44:48Z",
        "updatedAt" : "2019-08-22T00:12:12Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "38ef405d-5c79-4072-8a67-4bd51c96b524",
        "parentId" : "98c988fb-f900-436b-8aba-a58ef8e4fd4a",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "Not sure I follow this one. It is resolved against the `context`?",
        "createdAt" : "2019-08-08T18:59:04Z",
        "updatedAt" : "2019-08-22T00:12:12Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "14ce3a8d-714b-4e16-870a-bcec6e639418",
        "parentId" : "98c988fb-f900-436b-8aba-a58ef8e4fd4a",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "context.inheritFromWidgetOfExactType(_InheritedCupertinoTheme) returns the closest _InheritedCupertinoTheme widget that's an ancestor of context. Its colors will have been resolved relative to the context that the _InheritedCupertinoTheme widget _itself_ was built in. So I think you'll want to resolve the colors against the local context parameter.",
        "createdAt" : "2019-08-09T18:11:31Z",
        "updatedAt" : "2019-08-22T00:12:12Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "4eb3acf8-ed02-4663-8151-768a05810529",
        "parentId" : "98c988fb-f900-436b-8aba-a58ef8e4fd4a",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "I think I resolved the color in the return expression?",
        "createdAt" : "2019-08-11T22:32:16Z",
        "updatedAt" : "2019-08-22T00:12:12Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "37362d15-0e08-4cee-88dc-e96c7dd43b26",
        "parentId" : "98c988fb-f900-436b-8aba-a58ef8e4fd4a",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Yes! Sorry if I missed that.",
        "createdAt" : "2019-08-12T17:48:58Z",
        "updatedAt" : "2019-08-22T00:12:12Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "5202fc64fdd32918588795dc08a7247c14fd10c8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +55,59 @@  static CupertinoThemeData of(BuildContext context) {\n    final _InheritedCupertinoTheme inheritedTheme = context.inheritFromWidgetOfExactType(_InheritedCupertinoTheme);\n    return (inheritedTheme?.theme?.data ?? const CupertinoThemeData()).resolveFrom(context, nullOk: true);\n  }\n"
  },
  {
    "id" : "9559845c-ba1f-49e6-868a-56db5a617fc0",
    "prId" : 41859,
    "prUrl" : "https://github.com/flutter/flutter/pull/41859#pullrequestreview-304140746",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1222ce41-e79e-494c-8993-0d99eaeb36e0",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It would be helpful if we explained here (and probably elsewhere) that the CupertinoTheme can be overriden and that the default one is provided by CupertinoApp. Along the same lines: explain that MaterialApp includes a MaterialBasedCupertinoTheme, it will be visible to Cupertino widgets created within the MaterialApp, and it can be overridden with a CupertinoTheme.",
        "createdAt" : "2019-10-17T20:42:43Z",
        "updatedAt" : "2019-10-28T21:01:15Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "546925b4-ed81-4888-a188-05c59d500b1c",
        "parentId" : "1222ce41-e79e-494c-8993-0d99eaeb36e0",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "`CupertinoApp` and `Theme` are briefly mentioned in the see also section. Expanded it a little bit:\r\n> See also:                                                                      \r\n>                                                                               \r\n> * [CupertinoThemeData], specifies the theme's visual styling.                 \r\n> * [CupertinoApp], which will automatically add a [CupertinoTheme] based on the\r\n   value of [CupertinoApp.theme].                                              \r\n> * [Theme], a Material theme which will automatically add a [CupertinoTheme]   \r\n   with a [CupertinoThemeData] derived from the Material [ThemeData].          ",
        "createdAt" : "2019-10-18T21:14:08Z",
        "updatedAt" : "2019-10-28T21:01:16Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      }
    ],
    "commit" : "cddac15aae139f39f27dc2755b520d798499ed92",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +28,32 @@\n/// Applies a visual styling theme to descendant Cupertino widgets.\n///\n/// Affects the color and text styles of Cupertino widgets whose styling\n/// are not overridden when constructing the respective widgets instances."
  },
  {
    "id" : "69e59907-ece2-4110-8276-6ab5ac555825",
    "prId" : 41859,
    "prUrl" : "https://github.com/flutter/flutter/pull/41859#pullrequestreview-303603817",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "912008ca-503c-437c-a800-a32483d4d7d2",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It would help to refer to MaterialBasedCupertinoThemeData here; assuming that class has a good explanation for why it exists, how it's created, etc.",
        "createdAt" : "2019-10-17T23:51:56Z",
        "updatedAt" : "2019-10-28T21:01:16Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "cddac15aae139f39f27dc2755b520d798499ed92",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +207,211 @@  /// elements. Defaults to [CupertinoColors.activeBlue].\n  ///\n  /// If coming from a Material [Theme] and unspecified, [primaryColor] will be\n  /// derived from the Material [ThemeData]'s `colorScheme.primary`. However, in\n  /// iOS styling, the [primaryColor] is more sparsely used than in Material"
  },
  {
    "id" : "eca4ca75-f86b-489e-be0c-827b10799b17",
    "prId" : 65880,
    "prUrl" : "https://github.com/flutter/flutter/pull/65880#pullrequestreview-491395464",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d87642da-6f2d-4ef7-a15c-1e0130fa1b62",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Looking at this again, isn't it guaranteed that this will always return a non-null value? primaryColor should always be non-null in the default theme?\r\n\r\nSame for many of the getters below that reference the default.",
        "createdAt" : "2020-09-17T20:24:21Z",
        "updatedAt" : "2020-09-17T20:24:21Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "9004dc27-6a53-4b6d-9daa-eabb6a23b215",
        "parentId" : "d87642da-6f2d-4ef7-a15c-1e0130fa1b62",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "Same explanation as https://github.com/flutter/flutter/pull/66024#discussion_r490767475",
        "createdAt" : "2020-09-18T11:51:45Z",
        "updatedAt" : "2020-09-18T11:51:45Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      }
    ],
    "commit" : "691562bdc102b0456917d458d6f36a15f1b28019",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +231,235 @@  ///  * [MaterialBasedCupertinoThemeData], a [CupertinoThemeData] that defers\n  ///    [primaryColor] to its Material [Theme] parent if it's unspecified.\n  Color? get primaryColor => _primaryColor ?? _defaults!.primaryColor;\n  final Color? _primaryColor;\n"
  }
]