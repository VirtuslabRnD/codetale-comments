[
  {
    "id" : "e06f7a62-d479-4ea0-9d92-c6952bb575ba",
    "prId" : 15324,
    "prUrl" : "https://github.com/flutter/flutter/pull/15324#pullrequestreview-105187013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6a440ab-ca63-4720-9a43-c09f560b96d5",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "if these properties can't be null, assert non-null in the constructor and the setters",
        "createdAt" : "2018-03-12T16:23:41Z",
        "updatedAt" : "2018-03-21T23:09:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "6ea4038b-3198-4778-b17e-4bce8d3cfbbe",
        "parentId" : "e6a440ab-ca63-4720-9a43-c09f560b96d5",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Done",
        "createdAt" : "2018-03-20T00:36:45Z",
        "updatedAt" : "2018-03-21T23:09:38Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "8493eec1ca6f0e1e2f1c81e67f4a226513bb50e5",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +94,98 @@    markNeedsLayout();\n  }\n\n  // This keeps track of the previously applied scroll offsets to the scrollable\n  // so that when [refreshIndicatorLayoutExtent] or [hasLayoutExtent] changes,"
  },
  {
    "id" : "899f3e31-598d-4603-b5aa-4aee88a596f3",
    "prId" : 15324,
    "prUrl" : "https://github.com/flutter/flutter/pull/15324#pullrequestreview-105187217",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee14038d-e3bd-45e1-8c1e-dab03f966692",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "~~prefer @protected~~ oh i see it's static",
        "createdAt" : "2018-03-12T16:27:30Z",
        "updatedAt" : "2018-03-21T23:09:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "8d337c8e-8628-4ff8-9b6d-f2f93dc5600c",
        "parentId" : "ee14038d-e3bd-45e1-8c1e-dab03f966692",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i'd rather we didn't expose this. You can get the state in the test by getting the widget by string (use a predicate finder that examines the runtimeType.toString) then getting its state as dynamic (tester.state).",
        "createdAt" : "2018-03-12T16:29:21Z",
        "updatedAt" : "2018-03-21T23:09:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "dd2ec75c-0058-4b98-87c1-a4a952e6afcd",
        "parentId" : "ee14038d-e3bd-45e1-8c1e-dab03f966692",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "ya, I was trying to figure out how to not expose this too. I can get to the state but the issue is getting the field in the state since the state class is private",
        "createdAt" : "2018-03-20T00:38:11Z",
        "updatedAt" : "2018-03-21T23:09:38Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "8493eec1ca6f0e1e2f1c81e67f4a226513bb50e5",
    "line" : 328,
    "diffHunk" : "@@ -1,1 +326,330 @@  /// Retrieve the current state of the CupertinoRefreshControl. The same as the\n  /// state that gets passed into the [builder] function. Used for testing.\n  @visibleForTesting\n  static RefreshIndicatorMode state(BuildContext context) {\n    final _CupertinoRefreshControlState state"
  },
  {
    "id" : "e48ba639-7c97-49c4-99ed-1d7e23aa03a5",
    "prId" : 15324,
    "prUrl" : "https://github.com/flutter/flutter/pull/15324#pullrequestreview-105187790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77db543b-20d2-48f1-862d-5f3da2bcf806",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "CupertinoRefreshControl. The same as the --> CupertinoRefreshControl, which is the same as the",
        "createdAt" : "2018-03-19T15:37:49Z",
        "updatedAt" : "2018-03-21T23:09:38Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "38cecdb0-92f2-483e-a91f-9b9551678619",
        "parentId" : "77db543b-20d2-48f1-862d-5f3da2bcf806",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "done",
        "createdAt" : "2018-03-20T00:42:06Z",
        "updatedAt" : "2018-03-21T23:09:38Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "8493eec1ca6f0e1e2f1c81e67f4a226513bb50e5",
    "line" : 326,
    "diffHunk" : "@@ -1,1 +324,328 @@  static const double _kDefaultRefreshIndicatorExtent = 60.0;\n\n  /// Retrieve the current state of the CupertinoRefreshControl. The same as the\n  /// state that gets passed into the [builder] function. Used for testing.\n  @visibleForTesting"
  },
  {
    "id" : "c11aca05-eb3f-41c2-974c-4f0ecb08abb0",
    "prId" : 58392,
    "prUrl" : "https://github.com/flutter/flutter/pull/58392#pullrequestreview-426395683",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "222d5ea6-9005-4cac-b367-f8eb3c3ce4de",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Nit: Would it help to include references to the states like `[RefreshIndicatorMode.armed]` here?",
        "createdAt" : "2020-06-04T18:25:59Z",
        "updatedAt" : "2020-06-23T00:45:51Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "b359acc2-1a01-4dc1-ab49-35f91406a71f",
        "parentId" : "222d5ea6-9005-4cac-b367-f8eb3c3ce4de",
        "authorId" : "5abdd7dd-ac99-4bf1-9e93-af03cdbb4bc5",
        "body" : "I had a couple of goes at trying this, but each attempt resulted in an unwieldy mouthful. \r\n\r\nAt the moment, the function description is more like an overview, rather than an explanation of the internal mechanics. As a consumer of this function, I'm not sure if I would really need the gory details, which seem reasonably clear in the `switch` statement further down, but I'm happy to try further if you feel it is warranted.",
        "createdAt" : "2020-06-05T03:14:33Z",
        "updatedAt" : "2020-06-23T00:45:51Z",
        "lastEditedBy" : "5abdd7dd-ac99-4bf1-9e93-af03cdbb4bc5",
        "tags" : [
        ]
      },
      {
        "id" : "847c93e4-d162-4275-bee1-4689158d1ae1",
        "parentId" : "222d5ea6-9005-4cac-b367-f8eb3c3ce4de",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "No worries, I'm happy with leaving it as-is.  Thanks for taking a look.",
        "createdAt" : "2020-06-08T16:10:04Z",
        "updatedAt" : "2020-06-23T00:45:51Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "e23559499964b8caacdd62f9c9ef971dff54998e",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +362,366 @@  /// changes depending on the current refreshState. As the user initially drags\n  /// down, the indicator will gradually reveal individual ticks until the refresh\n  /// becomes armed. At this point, the animated activity indicator will begin rotating.\n  /// Once the refresh has completed, the activity indicator shrinks away as the\n  /// space allocation animates back to closed."
  },
  {
    "id" : "b31bd78e-5259-41ac-b32e-73f60906629d",
    "prId" : 58392,
    "prUrl" : "https://github.com/flutter/flutter/pull/58392#pullrequestreview-424709136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcb27ff0-f5a0-4c9d-8c37-70c1e648b5cb",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Nit: I've been called out on my PRs before for using static methods that return widgets and told to just make a new StatelessWidget instead.  In this case I realize that `buildSimpleRefreshIndicator` was already guilty of this though :) Just something to keep in mind if you see a better way to do this, otherwise it's fine as-is.",
        "createdAt" : "2020-06-04T18:30:32Z",
        "updatedAt" : "2020-06-23T00:45:51Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "e23559499964b8caacdd62f9c9ef971dff54998e",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +396,400 @@  }\n\n  static Widget _buildIndicatorForRefreshState(RefreshIndicatorMode refreshState, double radius, double percentageComplete) {\n    switch (refreshState) {\n      case RefreshIndicatorMode.drag:"
  },
  {
    "id" : "8f714f4b-c98f-4a50-90a0-ddc55e97df90",
    "prId" : 58392,
    "prUrl" : "https://github.com/flutter/flutter/pull/58392#pullrequestreview-424993306",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85b312e9-3b57-4e25-9622-b8c2f65b0938",
        "parentId" : null,
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "nit: native `UIRefreshIndicator`s dismiss with a 0.3s shrink + fadeout animation (independent of `percentageComplete`)",
        "createdAt" : "2020-06-05T17:29:29Z",
        "updatedAt" : "2020-06-23T00:45:51Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      }
    ],
    "commit" : "e23559499964b8caacdd62f9c9ef971dff54998e",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +413,417 @@      case RefreshIndicatorMode.done:\n        // When the user lets go, the standard transition is to shrink the spinner.\n        return CupertinoActivityIndicator(radius: radius * percentageComplete);\n      default:\n        // Anything else doesn't show anything."
  },
  {
    "id" : "2874268c-147c-4dfe-95f3-fc1f9ae2ba4d",
    "prId" : 58392,
    "prUrl" : "https://github.com/flutter/flutter/pull/58392#pullrequestreview-435150803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d53e6ecd-da37-4f2d-a860-2fb0c2da1f4e",
        "parentId" : null,
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "Oh wow this is brilliant :+1: ",
        "createdAt" : "2020-06-22T17:54:13Z",
        "updatedAt" : "2020-06-23T00:45:52Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      }
    ],
    "commit" : "e23559499964b8caacdd62f9c9ef971dff54998e",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +383,387 @@    return Center(\n      child: Stack(\n        overflow: Overflow.visible,\n        children: <Widget>[\n          Positioned("
  }
]