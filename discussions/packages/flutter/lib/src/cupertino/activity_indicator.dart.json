[
  {
    "id" : "5e9f5a43-1fc0-422d-aeb5-25fea06d7c3c",
    "prId" : 58392,
    "prUrl" : "https://github.com/flutter/flutter/pull/58392#pullrequestreview-427919183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9aad80fe-340d-4b04-8cdb-c46536b84c74",
        "parentId" : null,
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "nit: it would make the paint logic slightly easier to understand if `tickFundamentalRRect` starts off from a vertical position, instead of making the adjustment later using `canvas.rotate(math.pi / 2);`",
        "createdAt" : "2020-06-05T04:48:30Z",
        "updatedAt" : "2020-06-23T00:45:51Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "94f42dde-c8fc-4394-8c72-4a37289bdabf",
        "parentId" : "9aad80fe-340d-4b04-8cdb-c46536b84c74",
        "authorId" : "5abdd7dd-ac99-4bf1-9e93-af03cdbb4bc5",
        "body" : "Fixed.",
        "createdAt" : "2020-06-10T10:24:40Z",
        "updatedAt" : "2020-06-23T00:45:51Z",
        "lastEditedBy" : "5abdd7dd-ac99-4bf1-9e93-af03cdbb4bc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e23559499964b8caacdd62f9c9ef971dff54998e",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +142,146 @@    @required this.radius,\n    @required this.progress,\n  }) : tickFundamentalRRect = RRect.fromLTRBXY(\n         -radius / _kDefaultIndicatorRadius,\n         -radius / 2.0,"
  },
  {
    "id" : "f44a9380-a18a-4df2-9489-fe8ae33251d1",
    "prId" : 58392,
    "prUrl" : "https://github.com/flutter/flutter/pull/58392#pullrequestreview-427920008",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ed2b601-2df7-44cb-b002-2ef00910c57f",
        "parentId" : null,
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "It seems when progress is under 1, setting `animating` to true or false makes no difference visually? Maybe we should `assert(!animating)` if progress < 1 , since `progress` basically takes control from the state's animation controller and it doesn't really make too much sense to have the animation running when progress is manually set?",
        "createdAt" : "2020-06-05T08:32:11Z",
        "updatedAt" : "2020-06-23T00:45:51Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "0f812d34-49ce-46cb-9abd-690016f8378b",
        "parentId" : "2ed2b601-2df7-44cb-b002-2ef00910c57f",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "+1. This is implicitly controlling whether it's static or animating. It should definitely be pointed out in the docs. Perhaps allow null and make it mutually exclusive with animating? Since it's a bit harder to explain that 1 specific value of this double has a secondary meaning. \r\n\r\nI also strongly encourage consistency with https://api.flutter.dev/flutter/material/ProgressIndicator/value.html",
        "createdAt" : "2020-06-05T18:36:25Z",
        "updatedAt" : "2020-06-23T00:45:51Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "35282f99-de2d-40af-89e7-adfb30153e5b",
        "parentId" : "2ed2b601-2df7-44cb-b002-2ef00910c57f",
        "authorId" : "5abdd7dd-ac99-4bf1-9e93-af03cdbb4bc5",
        "body" : "I wonder if it is worth creating an explicit constructor for the \"progressive release\" version? That might help with trying to keep the mutually exclusive values separate... not sure if there's any specific guidelines around when we should/shouldn't create a separate constructor?",
        "createdAt" : "2020-06-08T07:01:33Z",
        "updatedAt" : "2020-06-23T00:45:51Z",
        "lastEditedBy" : "5abdd7dd-ac99-4bf1-9e93-af03cdbb4bc5",
        "tags" : [
        ]
      },
      {
        "id" : "dace6224-1a0a-42aa-a99b-2206bab12240",
        "parentId" : "2ed2b601-2df7-44cb-b002-2ef00910c57f",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "I think that's a great idea! Many widgets have more than one constructor so it doesn't look like a problem to me. ",
        "createdAt" : "2020-06-08T16:43:06Z",
        "updatedAt" : "2020-06-23T00:45:51Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "27269c67-b738-4ed3-90c9-cc14993e058a",
        "parentId" : "2ed2b601-2df7-44cb-b002-2ef00910c57f",
        "authorId" : "5abdd7dd-ac99-4bf1-9e93-af03cdbb4bc5",
        "body" : "Have added a new constructor called `CupertinoActivityIndicator.partiallyRevealed()` but am open to suggestions about better naming (I'm not super-thrilled about what I have now). Also updated some of the internal comments to be more accurate.",
        "createdAt" : "2020-06-10T10:25:55Z",
        "updatedAt" : "2020-06-23T00:45:51Z",
        "lastEditedBy" : "5abdd7dd-ac99-4bf1-9e93-af03cdbb4bc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e23559499964b8caacdd62f9c9ef971dff54998e",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +68,72 @@  ///\n  /// Defaults to 1.0. Must be between 0.0 and 1.0 inclusive, and cannot be null.\n  final double progress;\n\n  @override"
  },
  {
    "id" : "a8cef6ac-f886-42f9-b422-cd0ea8614b75",
    "prId" : 58392,
    "prUrl" : "https://github.com/flutter/flutter/pull/58392#pullrequestreview-427920368",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ee7ff25-7e2d-46a1-8f34-bb2c868b8dae",
        "parentId" : null,
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "`shouldRepaint` should return true when progress changes. Not sure why it's repainting, maybe it's because the indicator is inside a LayoutBuilder.",
        "createdAt" : "2020-06-05T09:32:15Z",
        "updatedAt" : "2020-06-23T00:45:51Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "ed7dbf69-3fc8-4fd6-b199-aaa6125b1c7c",
        "parentId" : "7ee7ff25-7e2d-46a1-8f34-bb2c868b8dae",
        "authorId" : "5abdd7dd-ac99-4bf1-9e93-af03cdbb4bc5",
        "body" : "Fixed ",
        "createdAt" : "2020-06-10T10:26:28Z",
        "updatedAt" : "2020-06-23T00:45:51Z",
        "lastEditedBy" : "5abdd7dd-ac99-4bf1-9e93-af03cdbb4bc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e23559499964b8caacdd62f9c9ef971dff54998e",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +156,160 @@  final Color activeColor;\n  final double radius;\n  final double progress;\n\n  @override"
  },
  {
    "id" : "d3beff97-3915-43dc-be7e-4116cf6eb7c2",
    "prId" : 58392,
    "prUrl" : "https://github.com/flutter/flutter/pull/58392#pullrequestreview-429158640",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef021b40-811d-431c-b6ae-6f61bbe1c029",
        "parentId" : null,
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "If you change the rotate direction here, doesn't it counteract the iteration direction change?",
        "createdAt" : "2020-06-05T17:08:52Z",
        "updatedAt" : "2020-06-23T00:45:51Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "2d5632e0-4c78-4635-858d-c6c9aed01dc7",
        "parentId" : "ef021b40-811d-431c-b6ae-6f61bbe1c029",
        "authorId" : "5abdd7dd-ac99-4bf1-9e93-af03cdbb4bc5",
        "body" : "There's three things all going on here at once: 1) looping through rendering each tick when spinning, 2) pulling out an opacity for each tick, and 3) incrementally revealing each tick when `progress < 1`.\r\n\r\nThe first two don't really matter what sequence you do them in (or rotate) as long as you get the indexes correct for the colours (this is because in the finish, all 12 of them need to be drawn). However, the last case /must/ reveal the ticks in specific order (clockwise).",
        "createdAt" : "2020-06-10T10:33:25Z",
        "updatedAt" : "2020-06-23T00:45:51Z",
        "lastEditedBy" : "5abdd7dd-ac99-4bf1-9e93-af03cdbb4bc5",
        "tags" : [
        ]
      },
      {
        "id" : "08b90bc4-934b-4477-b85c-f93d268d98a5",
        "parentId" : "ef021b40-811d-431c-b6ae-6f61bbe1c029",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "Thank for cleaning this up! Now the `_alphaValues` array is a lot easier to reason about.",
        "createdAt" : "2020-06-11T20:07:22Z",
        "updatedAt" : "2020-06-23T00:45:51Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      }
    ],
    "commit" : "e23559499964b8caacdd62f9c9ef971dff54998e",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +171,175 @@      paint.color = activeColor.withAlpha(progress < 1 ? _partiallyRevealedAlpha : _alphaValues[t]);\n      canvas.drawRRect(tickFundamentalRRect, paint);\n      canvas.rotate(_kTwoPI / _kTickCount);\n    }\n"
  },
  {
    "id" : "90b9e5a6-bd6b-4ebe-a487-aae3115d0726",
    "prId" : 62741,
    "prUrl" : "https://github.com/flutter/flutter/pull/62741#pullrequestreview-460875832",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69f917e6-93bb-4118-b3e8-3cd7871d8d80",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Instead of deprecating just the iOS13 value, should you deprecate this parameter now?  That way in the future we only need one follow up PR to remove this parameter.  Otherwise you need one to deprecate this and a second later one to remove it.",
        "createdAt" : "2020-08-03T18:06:11Z",
        "updatedAt" : "2020-08-11T02:18:59Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "9fb0ebfd-78a4-4a89-b3c9-95f195e22818",
        "parentId" : "69f917e6-93bb-4118-b3e8-3cd7871d8d80",
        "authorId" : "d1efd903-9c8d-40b4-8464-1ad26c4a355e",
        "body" : "Sure, the parameter should be deprecated now to make user use default value.",
        "createdAt" : "2020-08-04T14:36:11Z",
        "updatedAt" : "2020-08-11T02:18:59Z",
        "lastEditedBy" : "d1efd903-9c8d-40b4-8464-1ad26c4a355e",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f908f4b6709bc0dd1be9014984568d148ebf41f",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +100,104 @@  ///\n  /// Defaults to [CupertinoActivityIndicatorIOSVersionStyle.iOS14].\n  // TODO(ctrysbita): Deprecate after official release, https://github.com/flutter/flutter/issues/62521\n  final CupertinoActivityIndicatorIOSVersionStyle iOSVersionStyle;\n"
  }
]