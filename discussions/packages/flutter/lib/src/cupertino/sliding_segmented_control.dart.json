[
  {
    "id" : "8e9761d8-5272-4446-bca8-069cc456567d",
    "prId" : 42775,
    "prUrl" : "https://github.com/flutter/flutter/pull/42775#pullrequestreview-304690488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b310622f-5a3d-4dbe-9846-df984cd5be3b",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Just for my own curiosity going forward, what is our plan for parameters like this versus theming?",
        "createdAt" : "2019-10-15T18:10:04Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "10ec8fa5-fa0f-482d-b0c8-387161c89f9f",
        "parentId" : "b310622f-5a3d-4dbe-9846-df984cd5be3b",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "I remember I had the same question and I vaguely remember Hans' answer was themes are complicated so we want to make a careful decision. @HansMuller did I just put words in your mouth?",
        "createdAt" : "2019-10-18T00:45:49Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "0b6a5549-a302-4b11-b9e7-e13add1d550f",
        "parentId" : "b310622f-5a3d-4dbe-9846-df984cd5be3b",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The CupertinoTheme is pretty spare and  I think that's a good thing. Providing widget parameters for a few visual customizations is also a good thing. Our primary goal is to look native by default. Enabling the developer to make sweeping changes to component types with the CupertinoTheme isn't really a goal.",
        "createdAt" : "2019-10-21T16:43:33Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "11743a0ec2d19f9f9b95b53f58ad343e56abe842",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +158,162 @@///\n/// A segmented control may optionally be created with custom colors. The\n/// [thumbColor], [backgroundColor] arguments can be used to override the segmented\n/// control's colors from its defaults.\n///"
  },
  {
    "id" : "d0b4d1cc-5913-43e1-83e1-5103f09168d3",
    "prId" : 42775,
    "prUrl" : "https://github.com/flutter/flutter/pull/42775#pullrequestreview-303424397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22be4b57-0865-4915-ab45-b189986b811e",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "I mentioned in another comment up above that there might be a concern about ordered vs. unordered Maps.  Maybe just say the same thing up there as this says here, if needed.",
        "createdAt" : "2019-10-15T18:13:00Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "1281e170-6983-4250-9ea1-14613a0e3592",
        "parentId" : "22be4b57-0865-4915-ab45-b189986b811e",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "You mean to mention `such as a [LinkedHashMap]`?",
        "createdAt" : "2019-10-15T22:01:35Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "92fadefa-e0fc-49d9-ab49-0fc978a287f7",
        "parentId" : "22be4b57-0865-4915-ab45-b189986b811e",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Yeah the part about `The [children] argument must be an ordered [Map] such as a [LinkedHashMap].`.  I'm responding on that comment above (https://github.com/flutter/flutter/pull/42775#discussion_r335096179).",
        "createdAt" : "2019-10-17T17:31:05Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "11743a0ec2d19f9f9b95b53f58ad343e56abe842",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +168,172 @@  ///\n  /// The [children] and [controller] arguments must not be null. The [children]\n  /// argument must be an ordered [Map] such as a [LinkedHashMap]. Further, the\n  /// length of the [children] list must be greater than one.\n  ///"
  },
  {
    "id" : "05b8a7d4-5713-4621-98fe-12a06365b3fd",
    "prId" : 42775,
    "prUrl" : "https://github.com/flutter/flutter/pull/42775#pullrequestreview-302092632",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e81b0587-e38d-4458-9e17-a1c767c2b656",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Could any of these instance variables here and above be made private?",
        "createdAt" : "2019-10-15T18:25:08Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "11743a0ec2d19f9f9b95b53f58ad343e56abe842",
    "line" : 255,
    "diffHunk" : "@@ -1,1 +253,257 @@\n  final TapGestureRecognizer tap = TapGestureRecognizer();\n  final HorizontalDragGestureRecognizer drag = HorizontalDragGestureRecognizer();\n  final LongPressGestureRecognizer longPress = LongPressGestureRecognizer();\n"
  },
  {
    "id" : "8163eaaf-32be-4d35-999e-a1e664a5b4a6",
    "prId" : 42775,
    "prUrl" : "https://github.com/flutter/flutter/pull/42775#pullrequestreview-303421998",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad364ea9-ddab-4aff-8727-0147f394edc3",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Why is this a ValueNotifier instead of just passing the key in directly?  I see below that you are listening to the controller and calling setState when it changes.",
        "createdAt" : "2019-10-15T19:44:42Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "99db5d83-4b4b-4245-a28b-bd6b7a4274f1",
        "parentId" : "ad364ea9-ddab-4aff-8727-0147f394edc3",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Discussed offline.  I missed that this is passed in by the user at the top level.  Looks good as-is.",
        "createdAt" : "2019-10-17T17:27:00Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "11743a0ec2d19f9f9b95b53f58ad343e56abe842",
    "line" : 215,
    "diffHunk" : "@@ -1,1 +213,217 @@  /// changed programmatically, in which case all sliding animations will play as\n  /// if the new selected child widget was tapped on.\n  final ValueNotifier<T> controller;\n\n  /// The color used to paint the rounded rect behind the [children] and the separators."
  },
  {
    "id" : "cf915112-afd8-408b-9066-a751a8021d8a",
    "prId" : 42775,
    "prUrl" : "https://github.com/flutter/flutter/pull/42775#pullrequestreview-303618154",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abb2efb3-f6a7-468e-886f-62755214760e",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "What's the reason for keeping the old CupertinoSegmentedControl around and making this a new widget?  Can you use both on native?\r\n\r\nActually though, I see that someone is requesting to still be able to use the old one: https://github.com/flutter/flutter/issues/33796#issuecomment-517397735",
        "createdAt" : "2019-10-15T20:22:18Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "fdbafb3d-5db5-4d00-a962-9a146ff45250",
        "parentId" : "abb2efb3-f6a7-468e-886f-62755214760e",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Assuming that we are keeping both, is there any code that can be shared between the two, or are there tests that could cover both?  I didn't look very closely, but just checking that you have tried to avoid code duplication as much as possible.",
        "createdAt" : "2019-10-15T21:33:43Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "c709fa9c-909a-4799-bd8a-9dee5212c4d3",
        "parentId" : "abb2efb3-f6a7-468e-886f-62755214760e",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "The reason for keeping both is the API of `CupertinoSlidingSegmentedControl` is drastically different from `CupertinoSegmentedControl`. It's probably too big of a breaking change (and breaks every existing `CupertinoSegmentedControl`) to introduce in one go. Introducing it as a new widget will allow people to migrate as they feel comfortable. But yeah we will have to maintain both widgets with duplicated code for the time being now. ",
        "createdAt" : "2019-10-15T22:47:08Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "c88daaa9-c2fd-43a7-bce5-e5e2fb3b324f",
        "parentId" : "abb2efb3-f6a7-468e-886f-62755214760e",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Ah I see, makes sense.  Is it worth adding a `@deprecated` flag to CupertinoSegmentedControl now?",
        "createdAt" : "2019-10-17T17:26:31Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "fca341c0-b1d1-423a-ae7c-dc4b1317c46e",
        "parentId" : "abb2efb3-f6a7-468e-886f-62755214760e",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "IMO for now it doesn't hurt for them to coexist, as the comment you mentioned requested. ",
        "createdAt" : "2019-10-18T00:47:42Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      }
    ],
    "commit" : "11743a0ec2d19f9f9b95b53f58ad343e56abe842",
    "line" : 166,
    "diffHunk" : "@@ -1,1 +164,168 @@///\n///  * <https://developer.apple.com/design/human-interface-guidelines/ios/controls/segmented-controls/>\nclass CupertinoSlidingSegmentedControl<T> extends StatefulWidget {\n  /// Creates an iOS-style segmented control bar.\n  ///"
  },
  {
    "id" : "3ea3f0d5-6dcf-4c84-92da-00143d84fbcf",
    "prId" : 42775,
    "prUrl" : "https://github.com/flutter/flutter/pull/42775#pullrequestreview-304796897",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "406fa825-5133-4146-afce-95ac5d4f0d44",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The stiffness and damping values seem oddly specific. What are they based one?",
        "createdAt" : "2019-10-21T16:28:32Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "c5add79b-5525-456f-badc-d0a4000fce85",
        "parentId" : "406fa825-5133-4146-afce-95ac5d4f0d44",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "I got those values from the native `UISegmentedControl`. ",
        "createdAt" : "2019-10-21T19:29:46Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      }
    ],
    "commit" : "11743a0ec2d19f9f9b95b53f58ad343e56abe842",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +62,66 @@// The spring animation used when the thumb changes its rect.\nfinal SpringSimulation _kThumbSpringAnimationSimulation = SpringSimulation(\n  const SpringDescription(mass: 1, stiffness: 503.551, damping: 44.8799),\n  0,\n  1,"
  },
  {
    "id" : "5aa7450b-5e30-4899-a50b-9af9f1fec101",
    "prId" : 42775,
    "prUrl" : "https://github.com/flutter/flutter/pull/42775#pullrequestreview-304690488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe41fa37-cc51-4807-809b-1b4c9b17604b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Might include a comment here like:\r\n```dart\r\n// null means no selection\r\n```",
        "createdAt" : "2019-10-21T16:36:54Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "11743a0ec2d19f9f9b95b53f58ad343e56abe842",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +111,115 @@///\n/// // No segment is initially selected because the controller's value is null.\n/// final ValueNotifier<int> controller = ValueNotifier<int>(null);\n///\n/// @override"
  },
  {
    "id" : "958ba3d7-ff60-4c11-ab63-84520fbc187a",
    "prId" : 42775,
    "prUrl" : "https://github.com/flutter/flutter/pull/42775#pullrequestreview-304891617",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfd613fa-e3ab-4355-9dfd-6f7c56eaeb11",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The constructor should document all of the constraints on input parameters (even though they're also noted per each parameter below).",
        "createdAt" : "2019-10-21T17:01:46Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "e834678e-ec82-4866-ab9c-ad4b707afd1f",
        "parentId" : "dfd613fa-e3ab-4355-9dfd-6f7c56eaeb11",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "It is documented as:\r\n> Further, the length of the [children] list must be greater than one.\r\n",
        "createdAt" : "2019-10-21T22:32:57Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "f8843f43-7e29-4ad2-8157-2cb6ef97ddfd",
        "parentId" : "dfd613fa-e3ab-4355-9dfd-6f7c56eaeb11",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Good point, my mistake.",
        "createdAt" : "2019-10-21T22:41:20Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "11743a0ec2d19f9f9b95b53f58ad343e56abe842",
    "line" : 190,
    "diffHunk" : "@@ -1,1 +188,192 @@    this.backgroundColor = CupertinoColors.tertiarySystemFill,\n  }) : assert(children != null),\n       assert(children.length >= 2),\n       assert(padding != null),\n       assert(controller != null),"
  },
  {
    "id" : "511bd307-52d4-470a-b6bf-2505d9ada613",
    "prId" : 42775,
    "prUrl" : "https://github.com/flutter/flutter/pull/42775#pullrequestreview-304690488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cc5f36f-9ee3-4c25-8897-e661c9594274",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2019-10-21T17:42:30Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "11743a0ec2d19f9f9b95b53f58ad343e56abe842",
    "line" : 279,
    "diffHunk" : "@@ -1,1 +277,281 @@    super.initState();\n\n    final GestureArenaTeam team = GestureArenaTeam();\n    // If the long press or horizontal drag recognizer gets accepted, we know for\n    // sure the gesture is meant for the segmented control. Hand everything to"
  },
  {
    "id" : "a112aeec-cb92-40dc-9a9f-5aa54dedc044",
    "prId" : 42775,
    "prUrl" : "https://github.com/flutter/flutter/pull/42775#pullrequestreview-304897925",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f72b3ff0-865e-4552-8449-4d6c13629a58",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It doesn't seem like this needs to be widget state.",
        "createdAt" : "2019-10-21T17:45:44Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "f9ee1063-ffc3-4c0f-9cf7-cd47023b3456",
        "parentId" : "f72b3ff0-865e-4552-8449-4d6c13629a58",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "It's used by `indexToKey` which is in turned used by the render object to convert indices (integers) to keys of type `T`. ",
        "createdAt" : "2019-10-21T23:00:39Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      }
    ],
    "commit" : "11743a0ec2d19f9f9b95b53f58ad343e56abe842",
    "line" : 248,
    "diffHunk" : "@@ -1,1 +246,250 @@  final Tween<double> _pressTween = Tween<double>(begin: 1, end: 0.2);\n\n  List<T> keys;\n\n  AnimationController thumbController;"
  },
  {
    "id" : "b39a1f92-fd39-4f44-8c77-a4194badaf49",
    "prId" : 42775,
    "prUrl" : "https://github.com/flutter/flutter/pull/42775#pullrequestreview-304690488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82dcba9c-1e96-4b2b-933c-c603cc015e1d",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2019-10-21T17:55:44Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "11743a0ec2d19f9f9b95b53f58ad343e56abe842",
    "line" : 430,
    "diffHunk" : "@@ -1,1 +428,432 @@        break;\n      case TextDirection.rtl:\n        keys = widget.children.keys.toList().reversed.toList(growable: false);\n        break;\n    }"
  },
  {
    "id" : "70e1fa3d-e168-4d6c-95b9-5c74829340e0",
    "prId" : 42775,
    "prUrl" : "https://github.com/flutter/flutter/pull/42775#pullrequestreview-304903528",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e6db85e-7810-4416-9d23-983f5ddfb439",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "On the face of it, it seems odd to pass along selectedIndex and the widget state (which could provide a selectedIndex getter) but not update selectedIndex in updateRenderObject.",
        "createdAt" : "2019-10-21T18:12:10Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "36f44dc2-7dd4-44b0-a766-db2567f8767c",
        "parentId" : "4e6db85e-7810-4416-9d23-983f5ddfb439",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "`selectedIndex` is conditionally updated in `updateRenderObject`. If the user is currently dragging the thumb around attempting to update `selectedIndex` programmatically will have no effect.\r\n```\r\n      ..guardedSetHighlightedIndex(selectedIndex);\r\n```",
        "createdAt" : "2019-10-21T23:19:49Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      }
    ],
    "commit" : "11743a0ec2d19f9f9b95b53f58ad343e56abe842",
    "line" : 508,
    "diffHunk" : "@@ -1,1 +506,510 @@  RenderObject createRenderObject(BuildContext context) {\n    return _RenderSegmentedControl<T>(\n      selectedIndex: selectedIndex,\n      thumbColor: CupertinoDynamicColor.resolve(thumbColor, context),\n      state: state,"
  },
  {
    "id" : "70f68936-3d1b-42d1-9b84-b6a5eb948872",
    "prId" : 42775,
    "prUrl" : "https://github.com/flutter/flutter/pull/42775#pullrequestreview-304919610",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8d333a0-3823-4484-9a9b-bcfc6409cf4e",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Could this be:\r\n```dart\r\nreturn getChildrenAsList.fold<double>(0, (double minHeight, RenderBox child) {\r\n  return math.max(minHeight, child.getMinIntrinsicHeight(width));\r\n});\r\n```\r\n\r\nHere and for computeMaxIntrinsicHeight().",
        "createdAt" : "2019-10-21T18:29:53Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "2980e9ae-2896-4d3e-bd18-aa60863b7415",
        "parentId" : "a8d333a0-3823-4484-9a9b-bcfc6409cf4e",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "`getChildrenAsList`'s documentation says\r\n>   /// This function is useful when you need random-access to the children of\r\n  /// this render object. If you're accessing the children in order, consider\r\n  /// walking the child list directly.\r\n\r\nI think the imperative way is slightly more efficient?",
        "createdAt" : "2019-10-22T00:09:34Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "4051d1e6-d3b7-4a6c-9387-801644e7ceb0",
        "parentId" : "a8d333a0-3823-4484-9a9b-bcfc6409cf4e",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I don't think the efficiency aspect will matter,  but there's no harm in leaving this code as it is. It's pretty easy to read.",
        "createdAt" : "2019-10-22T00:21:46Z",
        "updatedAt" : "2019-10-30T06:47:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "11743a0ec2d19f9f9b95b53f58ad343e56abe842",
    "line" : 812,
    "diffHunk" : "@@ -1,1 +810,814 @@  @override\n  double computeMinIntrinsicHeight(double width) {\n    RenderBox child = firstChild;\n    double maxMinChildHeight = 0;\n    while (child != null) {"
  },
  {
    "id" : "7e195a97-10a0-4cb6-8a76-f0829bc3240e",
    "prId" : 43932,
    "prUrl" : "https://github.com/flutter/flutter/pull/43932#pullrequestreview-310584522",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4263e1d-f772-486c-8912-5e57e032c22a",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Why make this a map instead of a list?  What is the use case for wanting a key that's something other than an integer index?\r\n\r\nI'm not familiar with this widget at all, so this may be a dumb question :) Just trying to understand.",
        "createdAt" : "2019-10-31T23:54:34Z",
        "updatedAt" : "2019-11-01T00:02:05Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "afb1f7a6-de36-4d9d-8c11-4472e2976eb0",
        "parentId" : "b4263e1d-f772-486c-8912-5e57e032c22a",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Part of the motivation for this change was to be consistent with the existing [CupertinoSegmentedControl](https://api.flutter.dev/flutter/cupertino/CupertinoSegmentedControl-class.html).",
        "createdAt" : "2019-11-01T00:07:14Z",
        "updatedAt" : "2019-11-01T00:07:14Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "f17c032d-0a58-4d4b-9c23-b5ee0427d160",
        "parentId" : "b4263e1d-f772-486c-8912-5e57e032c22a",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "I don't think I gave too much thought about it:sweat: , inherited from the original `CupertinoSegmentedControl`. I guess the map keys make reordering (in `didUpdateWidget`) a bit easier, much like `Widget.Key`s?",
        "createdAt" : "2019-11-01T00:34:40Z",
        "updatedAt" : "2019-11-01T00:34:40Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "923f4e1c-9b81-4d01-a02c-f11c3d531d4e",
        "parentId" : "b4263e1d-f772-486c-8912-5e57e032c22a",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "As for the motivation I think we want to keep it as close to `CupertinoSegmetnedControl` as possible, so it looks more familiar and it's easier to migrate from `CupertinoSegmentedControl`. This was prompted by https://github.com/flutter/flutter/pull/43841#discussion_r341316580",
        "createdAt" : "2019-11-01T02:35:46Z",
        "updatedAt" : "2019-11-01T02:39:07Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "a09ffeb8-9e81-43eb-b457-c91b44c20d0e",
        "parentId" : "b4263e1d-f772-486c-8912-5e57e032c22a",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Sounds good, thanks for the explanations.",
        "createdAt" : "2019-11-01T17:17:25Z",
        "updatedAt" : "2019-11-01T17:17:26Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a5768450ea9df467d28ab5e027d6858dda8ba70",
    "line" : 152,
    "diffHunk" : "@@ -1,1 +188,192 @@  ///\n  /// class SegmentedControlExampleState extends State<SegmentedControlExample> {\n  ///   final Map<int, Widget> children = const {\n  ///     0: Text('Child 1'),\n  ///     1: Text('Child 2'),"
  },
  {
    "id" : "ff0f19b8-c803-4207-9f7e-dae1e796b1b5",
    "prId" : 45502,
    "prUrl" : "https://github.com/flutter/flutter/pull/45502#pullrequestreview-331381890",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d322f05-ae85-4b62-88d1-07a499a68e5b",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "`.toInt()`",
        "createdAt" : "2019-12-12T17:00:23Z",
        "updatedAt" : "2019-12-13T08:02:07Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdf6ef3b2ccc6ce4cc6ea03c7668b88c918d5639",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +689,693 @@      : ((location.dx / (size.width / childCount))\n        .floor()\n        .clamp(0, childCount - 1) as int);\n  }\n"
  }
]