[
  {
    "id" : "5e2ee70c-bad0-493e-ba99-529bfb53e179",
    "prId" : 6754,
    "prUrl" : "https://github.com/flutter/flutter/pull/6754#pullrequestreview-7916552",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1679bda5-7029-41aa-9981-b385125bd287",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "\"makes they\" on line 89 is grammatically dubious, while you're here...\n",
        "createdAt" : "2016-11-09T23:09:19Z",
        "updatedAt" : "2016-11-15T18:23:25Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbe3fb2e6c8b5c8041f0f48bb2b63abcffb27ae9",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +86,90 @@/// Base class for raw key events.\n///\n/// Raw key events pass through as much information as possible from the\n/// underlying platform's key events, which makes they provide a high level of\n/// fidelity but a low level of portability."
  },
  {
    "id" : "17eb0d25-e45b-4f5f-bfd2-c180a06b9815",
    "prId" : 6754,
    "prUrl" : "https://github.com/flutter/flutter/pull/6754#pullrequestreview-8658974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b29dfe57-1ded-43db-88e2-f32589f32195",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "before the switch, maybe in the argument type, assert that message is a Map\n",
        "createdAt" : "2016-11-09T23:10:27Z",
        "updatedAt" : "2016-11-15T18:23:25Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c52f93b9-e270-471a-921a-1c8777e3cdfa",
        "parentId" : "b29dfe57-1ded-43db-88e2-f32589f32195",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "...and that it contains a key 'keymap'\n",
        "createdAt" : "2016-11-09T23:10:42Z",
        "updatedAt" : "2016-11-15T18:23:25Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "310e774d-65af-47ee-b22c-e6a61257a2ce",
        "parentId" : "b29dfe57-1ded-43db-88e2-f32589f32195",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "If there's no keymap, it will hit the default case and throw an exception\n",
        "createdAt" : "2016-11-15T17:54:44Z",
        "updatedAt" : "2016-11-15T18:23:25Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbe3fb2e6c8b5c8041f0f48bb2b63abcffb27ae9",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +132,136 @@        keyCode: message['keyCode'] ?? 0,\n        scanCode: message['scanCode'] ?? 0,\n        metaState: message['metaState'] ?? 0,\n      );\n      break;"
  },
  {
    "id" : "43a06cc3-ecc9-4c46-bfa5-59b7c94571e3",
    "prId" : 9945,
    "prUrl" : "https://github.com/flutter/flutter/pull/9945#pullrequestreview-37194607",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2409bd6f-2845-41b0-bd31-7eea1f1d3223",
        "parentId" : null,
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Note: doc fix, but looks to be the case.",
        "createdAt" : "2017-05-10T01:35:32Z",
        "updatedAt" : "2017-05-10T03:55:13Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0df428da8b7824e9c23ba5fcee5ebf53a1e7c1c",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +72,76 @@  /// Creates a key event data structure specific for Android.\n  ///\n  /// The [hidUsage], [codePoint], and [modifiers] arguments must not be null.\n  const RawKeyEventDataFuchsia({\n    this.hidUsage: 0,"
  },
  {
    "id" : "bd4ec1a2-709c-4b03-b376-6ddedad0fd60",
    "prId" : 26265,
    "prUrl" : "https://github.com/flutter/flutter/pull/26265#pullrequestreview-190875135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbf96de7-0430-4ea2-b3f0-79745d977a2f",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "(not part of your PR, but since you're in here): I believe there is a typo in the sentence above: they -> them?",
        "createdAt" : "2019-01-09T17:47:26Z",
        "updatedAt" : "2019-01-11T20:38:15Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "a2778208-50af-4937-b176-46eb03a3d6a2",
        "parentId" : "dbf96de7-0430-4ea2-b3f0-79745d977a2f",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Fixed.",
        "createdAt" : "2019-01-09T18:51:37Z",
        "updatedAt" : "2019-01-11T20:38:15Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2be7ef87c295a744e9b7b69fd1a2ef727658d180",
    "line" : 239,
    "diffHunk" : "@@ -1,1 +174,178 @@/// underlying platform's key events, which allows them to provide a high level\n/// of fidelity but a low level of portability.\n///\n/// See also:\n///"
  },
  {
    "id" : "3ac85fb5-fd9e-4a2c-b619-e7f303af2518",
    "prId" : 26265,
    "prUrl" : "https://github.com/flutter/flutter/pull/26265#pullrequestreview-191812635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b2d93b3-dde4-45ca-9a6a-99a732daffbd",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Should this document that the return value is going to be as specific as possible, e.g. that it never returns KeyboardSide.any?",
        "createdAt" : "2019-01-11T18:00:04Z",
        "updatedAt" : "2019-01-11T20:38:15Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "ea4548b2-d00e-4ede-a269-19ddce76d835",
        "parentId" : "6b2d93b3-dde4-45ca-9a6a-99a732daffbd",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes.  Added that information.",
        "createdAt" : "2019-01-11T19:37:47Z",
        "updatedAt" : "2019-01-11T20:38:20Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2be7ef87c295a744e9b7b69fd1a2ef727658d180",
    "line" : 183,
    "diffHunk" : "@@ -1,1 +130,134 @@  /// [KeyboardSide.all] if pressed. Never returns [KeyboardSide.any], because\n  /// that doesn't make sense in this context.\n  KeyboardSide getModifierSide(ModifierKey key);\n\n  /// Returns true if a CTRL modifier key was pressed at the time of this event,"
  },
  {
    "id" : "95e6eda0-ce5b-4b89-b589-eaa967ca1d6b",
    "prId" : 44410,
    "prUrl" : "https://github.com/flutter/flutter/pull/44410#pullrequestreview-314452984",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b760b8dc-f8c0-48e0-a52f-9531ce6f8d74",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Does `RawKeyEventDataMacOs` only apply to macOS, or is it the entire Apple platform (i.e. iOS, iPadOS, etc)?\r\n",
        "createdAt" : "2019-11-08T20:22:55Z",
        "updatedAt" : "2019-11-08T20:24:47Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "aef8d250-d03f-4622-bd68-c629e2fbc039",
        "parentId" : "b760b8dc-f8c0-48e0-a52f-9531ce6f8d74",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "It only applies to macOS.  We don't have any keyboard support on iOS at all (yet).",
        "createdAt" : "2019-11-08T20:51:56Z",
        "updatedAt" : "2019-11-08T20:51:57Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f5fc2dfc695087d6f6857ff3a26919bb56d3745",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +503,507 @@      return;\n    }\n    if (event.data is RawKeyEventDataMacOs && event.logicalKey == LogicalKeyboardKey.fn) {\n      // On macOS laptop keyboards, the fn key is used to generate home/end and\n      // f1-f12, but it ALSO generates a separate down/up event for the fn key"
  },
  {
    "id" : "253724d0-f415-43f2-b6f1-d3ae1a918aea",
    "prId" : 51095,
    "prUrl" : "https://github.com/flutter/flutter/pull/51095#pullrequestreview-362241649",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8bd48030-18a2-41c4-a272-f555927fd5be",
        "parentId" : null,
        "authorId" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "body" : "Isn't it possible for non-modifier keys to be pressed (or released) when the app isn't in focus? This seems like it might be the root cause of https://github.com/flutter/flutter/issues/50553.\r\n\r\nI wonder if this logic should be expanded to cover all keys and not just modifiers. Also, I think this needs to be called when the app gains or loses focus and not just when key events happen - otherwise any call to keysPressed that happens after app focus but before any further key events are issued will be wrong.\r\n\r\nFixing this logic could be a separate PR though.",
        "createdAt" : "2020-02-20T20:59:37Z",
        "updatedAt" : "2020-02-20T21:56:57Z",
        "lastEditedBy" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "tags" : [
        ]
      },
      {
        "id" : "a47041e8-9faa-400f-a72b-9fa656fe78fc",
        "parentId" : "8bd48030-18a2-41c4-a272-f555927fd5be",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes, this is one of the problems with the current design, which is why this is one of the points covered in the new key event design: https://flutter.dev/go/platform-based-key-events that is currently being implemented\r\n\r\nPart of that design is to include a `sync` and `cancel` event in addition to `key up` and `key down` events, which communicate a change in key state to the app when it doesn't have keyboard focus (or when it loses/gains keyboard focus), that can be sent by the underlying platform code, which knows far better whether the app has focus or not, and what keys are down.",
        "createdAt" : "2020-02-20T21:31:52Z",
        "updatedAt" : "2020-02-20T21:56:59Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "40806cd8607efcd8a08fdc09fd6aa381ebbae615",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +588,592 @@    // has focus. This is just to synchronize the modifier keys when they are\n    // pressed/released while the app doesn't have focus, to make sure that\n    // _keysPressed reflects reality at all times.\n\n    final Map<ModifierKey, KeyboardSide> modifiersPressed = event.data.modifiersPressed;"
  },
  {
    "id" : "d3b0f074-77d6-42ae-b36a-e3ba476ebe52",
    "prId" : 51095,
    "prUrl" : "https://github.com/flutter/flutter/pull/51095#pullrequestreview-362241649",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d87ced61-28e8-4097-aea2-228cb803dc30",
        "parentId" : null,
        "authorId" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "body" : "Related to the above comment, events might need to send the full keys-pressed map and not just the modifiers in order for this logic to work completely correctly.",
        "createdAt" : "2020-02-20T21:00:57Z",
        "updatedAt" : "2020-02-20T21:56:57Z",
        "lastEditedBy" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "tags" : [
        ]
      },
      {
        "id" : "76dc016a-df85-4f63-a7eb-59fb4ac96a2d",
        "parentId" : "d87ced61-28e8-4097-aea2-228cb803dc30",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes, see the `sync` and `cancel` events in the new design, meant to address this.",
        "createdAt" : "2020-02-20T21:51:49Z",
        "updatedAt" : "2020-02-20T21:56:59Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "40806cd8607efcd8a08fdc09fd6aa381ebbae615",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +590,594 @@    // _keysPressed reflects reality at all times.\n\n    final Map<ModifierKey, KeyboardSide> modifiersPressed = event.data.modifiersPressed;\n    final Map<PhysicalKeyboardKey, LogicalKeyboardKey> modifierKeys = <PhysicalKeyboardKey, LogicalKeyboardKey>{};\n    for (final ModifierKey key in modifiersPressed.keys) {"
  },
  {
    "id" : "e0d5057d-8608-4809-9ae7-bf4b1b6aac22",
    "prId" : 59358,
    "prUrl" : "https://github.com/flutter/flutter/pull/59358#pullrequestreview-437098567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb1cfa08-123c-4578-b3e8-5a49e3f4c43d",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "maybe link to [addListener] as well from here and say how that's different then receiving the key events from here.",
        "createdAt" : "2020-06-17T21:08:10Z",
        "updatedAt" : "2020-06-25T01:05:10Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "e4447f90-cc40-41e0-b3b3-f57e6a1827e3",
        "parentId" : "bb1cfa08-123c-4578-b3e8-5a49e3f4c43d",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done.",
        "createdAt" : "2020-06-25T00:48:02Z",
        "updatedAt" : "2020-06-25T03:00:10Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "25712368084ea227a04b3b8fb87cceb4821f0096",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +553,557 @@  /// See also:\n  ///\n  ///  * [Focus.onKey], a [Focus] callback attribute that will be given key\n  ///    events distributed by the [FocusManager] based on the current primary\n  ///    focus."
  }
]