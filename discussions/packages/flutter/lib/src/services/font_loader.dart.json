[
  {
    "id" : "3d3970ab-0ac8-4e34-8c7d-761c4270f58c",
    "prId" : 23595,
    "prUrl" : "https://github.com/flutter/flutter/pull/23595#pullrequestreview-169014921",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5f333cc-d2fd-4b73-91dd-16dd75d03c06",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "maybe add:\r\n\r\n```\r\n///\r\n/// It is the responsibility of the caller to handle errors on the provided [Future].\r\n/// If any of the [Future]s provided to [addFont] fail, then [load] will not complete.\r\n```",
        "createdAt" : "2018-10-26T22:02:20Z",
        "updatedAt" : "2018-10-30T23:38:19Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "1cba14b2-f5d2-4fed-89e1-b5e3f73099a5",
        "parentId" : "a5f333cc-d2fd-4b73-91dd-16dd75d03c06",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(or will it complete but return failure? we should figure out exactly what this code does if one of these futures fails, and document it)",
        "createdAt" : "2018-10-26T22:04:47Z",
        "updatedAt" : "2018-10-30T23:38:19Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0baaa82dfb82be1a3f97c8d1527d1b92c317919",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@  /// The [bytes] argument specifies the actual font asset bytes. Currently,\n  /// only TrueType (TTF) fonts are supported.\n  void addFont(Future<ByteData> bytes) {\n    if (_loaded)\n      throw StateError('FontLoader is already loaded');"
  },
  {
    "id" : "fa00c158-939b-43e4-8c78-124767ac64bf",
    "prId" : 23595,
    "prUrl" : "https://github.com/flutter/flutter/pull/23595#pullrequestreview-169020435",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3f34d02-a68d-4c97-9ad5-1b7c0b06f031",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "document how this method works if any of the futures fail here, too",
        "createdAt" : "2018-10-26T22:05:00Z",
        "updatedAt" : "2018-10-30T23:38:19Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3075eaf6-9557-4696-a625-f4c4ae2dfcd0",
        "parentId" : "d3f34d02-a68d-4c97-9ad5-1b7c0b06f031",
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "The future returned by `load` will complete with an error if any of the underlying futures completes with an error.  Updating the docs.",
        "createdAt" : "2018-10-26T22:32:38Z",
        "updatedAt" : "2018-10-30T23:38:19Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0baaa82dfb82be1a3f97c8d1527d1b92c317919",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +49,53 @@  /// This method should only be called once per font loader. Attempts to\n  /// load fonts from the same loader more than once will cause a [StateError]\n  /// to be thrown.\n  ///\n  /// The returned future will complete with an error if any of the font asset"
  },
  {
    "id" : "b6c90f5b-ca53-4399-b058-3231fdd2d647",
    "prId" : 23595,
    "prUrl" : "https://github.com/flutter/flutter/pull/23595#pullrequestreview-169536317",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28284b2e-e862-49be-8710-e5b19c31163c",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Throw if the loader is already loaded.",
        "createdAt" : "2018-10-29T21:56:59Z",
        "updatedAt" : "2018-10-30T23:38:19Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0baaa82dfb82be1a3f97c8d1527d1b92c317919",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@      throw StateError('FontLoader is already loaded');\n\n    _fontFutures.add(bytes.then(\n        (ByteData data) => Uint8List.view(data.buffer, data.offsetInBytes, data.lengthInBytes)\n    ));"
  }
]