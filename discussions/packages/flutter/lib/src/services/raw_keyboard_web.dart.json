[
  {
    "id" : "04f3172d-e67b-4aa9-b104-bc3bec49f086",
    "prId" : 41397,
    "prUrl" : "https://github.com/flutter/flutter/pull/41397#pullrequestreview-293969824",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "511f441e-be6c-47b8-99ab-23864478a591",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Can this be made `@immutable`?",
        "createdAt" : "2019-09-26T20:21:15Z",
        "updatedAt" : "2019-09-30T20:25:56Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e70b6baba6f584b4d84523abbfa1f269b8e63451",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@///  * [RawKeyboard], which uses this interface to expose key data.\n@immutable\nclass RawKeyEventDataWeb extends RawKeyEventData {\n  /// Creates a key event data structure specific for Web.\n  ///"
  },
  {
    "id" : "d1c044d4-f08a-4164-b8d0-fc21fd16100b",
    "prId" : 41397,
    "prUrl" : "https://github.com/flutter/flutter/pull/41397#pullrequestreview-293969824",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57cd1b47-c89d-4b58-a6b2-ed69f11b3cb1",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Can you have `default` together with fucntionModifier and symbolModifier and avoid two returns?",
        "createdAt" : "2019-09-26T20:25:01Z",
        "updatedAt" : "2019-09-30T20:25:56Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e70b6baba6f584b4d84523abbfa1f269b8e63451",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +112,116 @@      default:\n        // On Web, the browser doesn't report the state of the FN and SYM modifiers.\n        return false;\n    }\n  }"
  },
  {
    "id" : "c9333763-2d24-4394-8586-11c1e4d9a0cc",
    "prId" : 64071,
    "prUrl" : "https://github.com/flutter/flutter/pull/64071#pullrequestreview-469730901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51efba94-5e65-4698-86e7-b515f5e96c5d",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "supertype is nullable anyway",
        "createdAt" : "2020-08-18T18:47:27Z",
        "updatedAt" : "2020-08-18T18:47:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7c46e5cdfb376d0a79adb351abbf80dc210a1bd6",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +57,61 @@\n  @override\n  String? get keyLabel => key;\n\n  @override"
  },
  {
    "id" : "7bb7ad56-cab8-4c6f-b8df-93ea3a6254a1",
    "prId" : 86679,
    "prUrl" : "https://github.com/flutter/flutter/pull/86679#pullrequestreview-714543111",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c8921d0-7fe8-45e5-8f42-f161868abacf",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "Maybe explain a bit more in detail? what is the KeyboardEvent.location? or give a example",
        "createdAt" : "2021-07-20T18:02:48Z",
        "updatedAt" : "2021-07-20T18:03:11Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "82f7a73e-0492-419c-abaa-fb4423060c0a",
        "parentId" : "3c8921d0-7fe8-45e5-8f42-f161868abacf",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "I added some explanation to each field, but generally they're fields of Web's `KeyboardEvent` class, as linked at the end of each comment.",
        "createdAt" : "2021-07-26T07:50:34Z",
        "updatedAt" : "2021-07-26T07:50:34Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      }
    ],
    "commit" : "8dd59e30c92b8b5c5006556105efefc245c864ed",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +48,52 @@  final String key;\n\n  /// The `KeyboardEvent.location` corresponding to this event.\n  ///\n  /// The [location] represents the location of the key on the keyboard or other"
  }
]