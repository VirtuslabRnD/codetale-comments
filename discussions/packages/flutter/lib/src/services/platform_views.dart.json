[
  {
    "id" : "b23b0bf9-0183-4e35-b444-1d8d7a4fb6c0",
    "prId" : 19325,
    "prUrl" : "https://github.com/flutter/flutter/pull/19325#pullrequestreview-138420009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "150d2993-660f-4da2-b0ef-be849a11ae55",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Inconsistent pluralization in the names. If this is a service that deals with multiple platform views, I assume the registry also registers multiple platform views. Perhaps keep everything singular.",
        "createdAt" : "2018-07-18T18:56:07Z",
        "updatedAt" : "2018-07-18T20:18:39Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "d2f83af1-6283-4d39-a449-c6bbb87ba34d",
        "parentId" : "150d2993-660f-4da2-b0ef-be849a11ae55",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Renamed the registry to platformViewsRegistry",
        "createdAt" : "2018-07-18T20:14:40Z",
        "updatedAt" : "2018-07-18T20:18:40Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "684060994e0c0b54d0cd22b900743bd892fa3eab",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@///\n/// See also: [PlatformView].\nclass PlatformViewsService {\n  PlatformViewsService._();\n"
  },
  {
    "id" : "716f2939-59c2-4dc6-a769-44480d099d4a",
    "prId" : 19325,
    "prUrl" : "https://github.com/flutter/flutter/pull/19325#pullrequestreview-138459578",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77799548-f7e2-4c70-95b2-a6d06e946862",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Should this return a boolean in case users want to know whether disposing succeeded? (since it'll be hard to change this API after)",
        "createdAt" : "2018-07-18T19:04:49Z",
        "updatedAt" : "2018-07-18T20:18:39Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "162942f4-f5ce-417a-b2e0-9c14ab4a715d",
        "parentId" : "77799548-f7e2-4c70-95b2-a6d06e946862",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "The future will complete with a PlatformException in that case, isn't that enough?",
        "createdAt" : "2018-07-18T20:03:38Z",
        "updatedAt" : "2018-07-18T20:18:40Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "11739471-ea6c-4b29-bcc8-d3e6d8fa8baf",
        "parentId" : "77799548-f7e2-4c70-95b2-a6d06e946862",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Ah, makes sense.",
        "createdAt" : "2018-07-18T21:34:24Z",
        "updatedAt" : "2018-07-18T21:34:24Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "07e4c78f-c3fe-402a-992c-0a13238efd21",
        "parentId" : "77799548-f7e2-4c70-95b2-a6d06e946862",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "If that is part of the expected API, you should add a doc comment like:\r\n\r\n/// Throws [PlatformException] if ...",
        "createdAt" : "2018-07-18T22:01:00Z",
        "updatedAt" : "2018-07-18T22:01:01Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "7b2300e4-49ac-4f07-8c5a-88578757c0d6",
        "parentId" : "77799548-f7e2-4c70-95b2-a6d06e946862",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "I don't really see it happens, unless something really blows up on the platform side.\r\nI can see that it makes sense to add such comments when there's an obvious failure case.\r\nEverytime we invokeMethod on a method channel we can get a PlatformException... (I guess theoretically you can always get some exception thrown if something really bad happens) randomly sampling a few call sites to invokeMethod in our codebase non of them mentions in dartdoc that an exception might be thrown.",
        "createdAt" : "2018-07-18T22:07:09Z",
        "updatedAt" : "2018-07-18T22:07:09Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "b55c9eef-bcda-46fc-a24b-ce747fbbf8a3",
        "parentId" : "77799548-f7e2-4c70-95b2-a6d06e946862",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "If that exception doesn't indicate any useful information besides \"something broke\" then I wouldn't include it",
        "createdAt" : "2018-07-18T22:11:56Z",
        "updatedAt" : "2018-07-18T22:11:56Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "684060994e0c0b54d0cd22b900743bd892fa3eab",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +120,124 @@  /// The identifier of the platform view cannot be reused after the view is\n  /// disposed.\n  Future<void> dispose() async {\n    if (_state == _AndroidViewState.creating || _state == _AndroidViewState.created)\n      await SystemChannels.platform_views.invokeMethod('dispose', id);"
  },
  {
    "id" : "195cf04b-2702-4d9e-882d-3f5c5da411dd",
    "prId" : 19325,
    "prUrl" : "https://github.com/flutter/flutter/pull/19325#pullrequestreview-138416240",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ee35def-6940-43ff-8416-bc84a5f6d211",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "ditto for return type",
        "createdAt" : "2018-07-18T19:05:14Z",
        "updatedAt" : "2018-07-18T20:18:39Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "bc03932d-ec58-476e-8d0d-73b6a208a3b9",
        "parentId" : "6ee35def-6940-43ff-8416-bc84a5f6d211",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "ditto",
        "createdAt" : "2018-07-18T20:03:41Z",
        "updatedAt" : "2018-07-18T20:18:40Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "684060994e0c0b54d0cd22b900743bd892fa3eab",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +131,135 @@  ///\n  /// The first time a size is set triggers the creation of the Android view.\n  Future<void> setSize(Size size) async {\n    if (_state == _AndroidViewState.disposed)\n      throw new FlutterError('trying to size a disposed Android View. View id: $id');"
  },
  {
    "id" : "914ba6a5-60b3-42d4-996f-4898285a3942",
    "prId" : 19907,
    "prUrl" : "https://github.com/flutter/flutter/pull/19907#pullrequestreview-142944859",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0abc5fd-bb85-4391-9f94-da0ce3edc70a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "if it must, could we just get it from those lists instead of requiring it?",
        "createdAt" : "2018-08-02T19:33:46Z",
        "updatedAt" : "2018-08-02T19:48:28Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "6b2d8d4b-4d00-4ea2-bfa8-0b841fb35263",
        "parentId" : "b0abc5fd-bb85-4391-9f94-da0ce3edc70a",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "I'd rather to keep an exact mirror of the Android API, in case we'll find out in the future some exception when it actually makes sense to pass different numbers. This \"must\" is to my best understanding a of today.",
        "createdAt" : "2018-08-02T19:37:51Z",
        "updatedAt" : "2018-08-02T19:48:28Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "6af7b32cadc1793404cc322dce143c4a3cb62da0",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +241,245 @@\n  /// The number of pointers that are part of this event.\n  /// This must be equivalent to the length of `pointerProperties` and `pointerCoords`.\n  ///\n  /// See Android's [MotionEvent#getPointerCount](https://developer.android.com/reference/android/view/MotionEvent.html#getPointerCount())."
  },
  {
    "id" : "1b57771d-8a6e-4303-9df7-187db65d3944",
    "prId" : 20838,
    "prUrl" : "https://github.com/flutter/flutter/pull/20838#pullrequestreview-148698401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6304cae0-00f3-47c1-a1f9-7f398b1973f1",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "GitHub doesn't let me add comments on the lines above, but doc which params can't be null? Also use `@required`?",
        "createdAt" : "2018-08-22T22:14:26Z",
        "updatedAt" : "2018-08-22T22:41:49Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "b1e5021d-551c-499c-a881-40dc48245d16",
        "parentId" : "6304cae0-00f3-47c1-a1f9-7f398b1973f1",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "We decided to move the `@required` to the public function (the constructor is private), see: https://github.com/flutter/flutter/pull/19325#discussion_r203199063\r\n\r\nAdded null param documentation there.",
        "createdAt" : "2018-08-22T22:29:39Z",
        "updatedAt" : "2018-08-22T22:41:51Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "29d5c4fa08606f8b84d4166a863023eda71f19e5",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +346,350 @@/// Typically created with [PlatformViewsService.initAndroidView].\nclass AndroidViewController {\n  AndroidViewController._(\n    this.id,\n    String viewType,"
  },
  {
    "id" : "67cc3fd5-5818-4dd6-b8cf-929b92c53bd2",
    "prId" : 21067,
    "prUrl" : "https://github.com/flutter/flutter/pull/21067#pullrequestreview-149807414",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31fe2998-6e07-4974-acb1-fb65497ad6b0",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This seems like a good place to offer a hint about what a typical value of `createParamsCodec` would be.",
        "createdAt" : "2018-08-27T17:17:04Z",
        "updatedAt" : "2018-08-27T17:34:29Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "743adc5b-ace7-49da-bed6-95e132ed2714",
        "parentId" : "31fe2998-6e07-4974-acb1-fb65497ad6b0",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "done",
        "createdAt" : "2018-08-27T17:34:13Z",
        "updatedAt" : "2018-08-27T17:34:29Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "614303889d85afa72815ef3088dc97b388fe0728",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +63,67 @@  ///\n  /// `creationParamsCodec` is the codec used to encode `creationParams` before sending it to the\n  /// platform side. It should match the codec passed to the constructor of [PlatformViewFactory](/javadoc/io/flutter/plugin/platform/PlatformViewFactory.html#PlatformViewFactory-io.flutter.plugin.common.MessageCodec-).\n  /// This is typically one of: [StandardMessageCodec], [JSONMessageCodec], [StringCodec], or [BinaryCodec].\n  ///"
  },
  {
    "id" : "3e069982-6370-4553-8f7f-1bcbadc5a552",
    "prId" : 23412,
    "prUrl" : "https://github.com/flutter/flutter/pull/23412#pullrequestreview-168006816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "993c180c-793a-4e68-a03c-51acd75d4857",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Do you not need to call it initially for the first time? Or is that your todo above?",
        "createdAt" : "2018-10-24T00:10:16Z",
        "updatedAt" : "2018-10-31T03:03:44Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "4a5d6510-acfc-4396-be67-9ac8aee0882e",
        "parentId" : "993c180c-793a-4e68-a03c-51acd75d4857",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "The layoutDirection will be passed as an argument of the create call (this is not yet implemented in the engine).",
        "createdAt" : "2018-10-24T17:21:44Z",
        "updatedAt" : "2018-10-31T03:03:44Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "377482d8e8105b07b178979c923513d27275da98",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +593,597 @@  ) : assert(id != null),\n      assert(layoutDirection != null),\n      _layoutDirection = layoutDirection;\n\n"
  },
  {
    "id" : "3e2ba7fb-9702-4901-bd96-05d7991a9d11",
    "prId" : 23412,
    "prUrl" : "https://github.com/flutter/flutter/pull/23412#pullrequestreview-168006816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed931334-47d5-4b96-b698-7e513635a9fb",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "cross reference the registry here again?",
        "createdAt" : "2018-10-24T00:11:34Z",
        "updatedAt" : "2018-10-31T03:03:44Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "466d7c20-4397-48e4-8140-81b181a3d511",
        "parentId" : "ed931334-47d5-4b96-b698-7e513635a9fb",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "done",
        "createdAt" : "2018-10-24T17:23:05Z",
        "updatedAt" : "2018-10-31T03:03:44Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "377482d8e8105b07b178979c923513d27275da98",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +596,600 @@\n\n  /// The unique identifier of the iOS view controlled by this controller.\n  ///\n  /// This identifer is typically generated by [PlatformViewsRegistry.getNextPlatformViewId]."
  }
]