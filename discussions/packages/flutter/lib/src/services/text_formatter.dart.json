[
  {
    "id" : "5dc73b67-2825-4f66-be84-b5159543b672",
    "prId" : 12648,
    "prUrl" : "https://github.com/flutter/flutter/pull/12648#pullrequestreview-71673009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f1b558c-bfb4-4e8e-b7ca-19777b40bf7e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "List the various test cases I gave in this TODO so that when we fix it we have ready-made things to test it with.",
        "createdAt" : "2017-10-23T17:30:31Z",
        "updatedAt" : "2017-10-24T21:23:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "9e309caa-567c-4d45-becc-44b68469f53e",
        "parentId" : "8f1b558c-bfb4-4e8e-b7ca-19777b40bf7e",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "OK.  I did already have some of them in the TODO in the test (and I added the rest).  Does it really need to be both places?  I updated the TODO in the test to include the other cases, and documented what they were.  Please take a look and make sure my statements are truthful. :-)",
        "createdAt" : "2017-10-23T18:56:20Z",
        "updatedAt" : "2017-10-24T21:23:42Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "d4cd05ef-9f94-44f1-a579-552b9380dac9",
        "parentId" : "8f1b558c-bfb4-4e8e-b7ca-19777b40bf7e",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Yeah, having them in the test looks good.",
        "createdAt" : "2017-10-24T21:07:22Z",
        "updatedAt" : "2017-10-24T21:23:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dc9f3bb644ef3860d1cd6c16636813f58e41cdf",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +185,189 @@      // TODO(gspencer): convert this to count actual characters when Dart\n      // supports that.\n      final RuneIterator iterator = new RuneIterator(newValue.text);\n      if (iterator.moveNext())\n        for (int count = 0; count < maxLength; ++count)"
  },
  {
    "id" : "8b4b17a0-0074-4cb1-be16-01405b9719e8",
    "prId" : 59120,
    "prUrl" : "https://github.com/flutter/flutter/pull/59120#pullrequestreview-432011270",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79703c5c-f730-4d64-8ada-e17a1f90e9a2",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Nice comprehensive doc comment!",
        "createdAt" : "2020-06-17T02:13:44Z",
        "updatedAt" : "2020-06-18T20:37:11Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "d001fe1883bb6548d3faf66b0fb805b27c626983",
    "line" : 189,
    "diffHunk" : "@@ -1,1 +209,213 @@  ///\n  /// See also [String.splitMapJoin], which is used to implement this\n  /// behavior in both cases.\n  final String replacementString;\n"
  },
  {
    "id" : "de73e7b9-b502-49c9-843e-a23369952078",
    "prId" : 59120,
    "prUrl" : "https://github.com/flutter/flutter/pull/59120#pullrequestreview-433601445",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "427c3cd8-85d8-450b-87cb-0a322093f003",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Which samples is this referring to?",
        "createdAt" : "2020-06-17T02:16:11Z",
        "updatedAt" : "2020-06-18T20:37:11Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "27ee0ebd-6e33-4dc4-87f1-8c46e9551c95",
        "parentId" : "427c3cd8-85d8-450b-87cb-0a322093f003",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe add a link?",
        "createdAt" : "2020-06-17T02:17:38Z",
        "updatedAt" : "2020-06-18T20:37:11Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "141f94e6-b3a5-4353-a2cd-dd905eb396c8",
        "parentId" : "427c3cd8-85d8-450b-87cb-0a322093f003",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "gallery in samples. they've said they'll fix it when i land this.",
        "createdAt" : "2020-06-18T19:32:34Z",
        "updatedAt" : "2020-06-18T20:37:11Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "358b51c1-1497-436f-8a5e-7983f14faf10",
        "parentId" : "427c3cd8-85d8-450b-87cb-0a322093f003",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "https://github.com/flutter/gallery/blob/74d9d92883c6ca10742c44df309f065289cf2f55/lib/demos/material/text_field_demo.dart#L225",
        "createdAt" : "2020-06-18T19:54:34Z",
        "updatedAt" : "2020-06-18T20:37:11Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "d001fe1883bb6548d3faf66b0fb805b27c626983",
    "line" : 248,
    "diffHunk" : "@@ -1,1 +269,273 @@\n/// Old name for [FilteringTextInputFormatter.allow].\n// TODO(ianh): Deprecate these once the samples are migrated.\n// at-Deprecated(\n//   'Use FilteringTextInputFormatter.allow instead. '"
  },
  {
    "id" : "6e7005e6-693c-427a-b8df-48e56f0088fd",
    "prId" : 63754,
    "prUrl" : "https://github.com/flutter/flutter/pull/63754#pullrequestreview-472598594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c7d1b34-a74e-49cd-8d14-5b6817d56b0a",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "I didn't realize NNBD had been turned on here already 👍 ",
        "createdAt" : "2020-08-21T16:51:31Z",
        "updatedAt" : "2020-08-21T18:06:27Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b412d6ecdb6fece87e0bb6a39b405603f30dda9",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +383,387 @@    // limit or the old value is composing too.\n    if (newValue.composing.isValid) {\n      if (maxLength != null && maxLength! > 0 &&\n          oldValue.text.characters.length == maxLength! &&\n          !oldValue.composing.isValid) {"
  },
  {
    "id" : "bce7be47-2966-4a9e-8e48-63762edce76f",
    "prId" : 66567,
    "prUrl" : "https://github.com/flutter/flutter/pull/66567#pullrequestreview-496536980",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62c41ac1-cb94-4ee1-a244-5008a7edf164",
        "parentId" : null,
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "Also @justinmc it appears the docs here talk in length about how we are counting characters in Unicode scalar values. I believe that's no longer true?",
        "createdAt" : "2020-09-24T18:03:49Z",
        "updatedAt" : "2020-09-24T18:22:27Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "f0523737-ac51-404f-8bd7-77ad3a613db6",
        "parentId" : "62c41ac1-cb94-4ee1-a244-5008a7edf164",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Ah good catch.  Yeah below it incorrectly says it *doesn't* count grapheme clusters correctly.",
        "createdAt" : "2020-09-24T18:24:33Z",
        "updatedAt" : "2020-09-24T18:24:33Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "012e5498-ab5f-4384-8051-a4cdf7b3a39c",
        "parentId" : "62c41ac1-cb94-4ee1-a244-5008a7edf164",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "I'll update that in a separate PR right now.",
        "createdAt" : "2020-09-24T18:26:53Z",
        "updatedAt" : "2020-09-24T18:26:53Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "6ce62d8f-0176-411a-a196-a79ad5b8e13e",
        "parentId" : "62c41ac1-cb94-4ee1-a244-5008a7edf164",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "That separate PR is here for the record: https://github.com/flutter/flutter/pull/66582",
        "createdAt" : "2020-09-25T15:41:32Z",
        "updatedAt" : "2020-09-25T15:41:33Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d187c05ac134c8ff52c39219082a7bb37d0c4d5",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +320,324 @@  /// will allow.\n  ///\n  /// The value must be null or greater than zero. If it is null or -1, then no\n  /// limit is enforced.\n  ///"
  },
  {
    "id" : "9c98ce5c-536f-40c2-9347-c51cfd12344b",
    "prId" : 66582,
    "prUrl" : "https://github.com/flutter/flutter/pull/66582#pullrequestreview-495923756",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d0abf6f-475b-407d-8437-f0c9a273ff4d",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "I debated whether to drop these two paragraphs altogether, thinking that they might be more confusing than just removing them, but I decided to keep them.  Let me know if you think they should go.",
        "createdAt" : "2020-09-24T20:07:11Z",
        "updatedAt" : "2020-09-25T15:30:34Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "7297b00c-e70f-46cd-b7c4-14130d410c1c",
        "parentId" : "9d0abf6f-475b-407d-8437-f0c9a273ff4d",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "Personally I think it helps clarify what the problem is without involving the terrifying terms. ",
        "createdAt" : "2020-09-24T20:23:53Z",
        "updatedAt" : "2020-09-25T15:30:34Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      }
    ],
    "commit" : "a764dd2156d71e58b46e50c449e30f1f14d94626",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +333,337 @@  /// character.\n  ///\n  /// For instance, the character \"ö\" can be represented as '\\u{006F}\\u{0308}',\n  /// which is the letter \"o\" followed by a composed diaeresis \"¨\", or it can\n  /// be represented as '\\u{00F6}', which is the Unicode scalar value \"LATIN"
  }
]