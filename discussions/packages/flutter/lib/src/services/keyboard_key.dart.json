[
  {
    "id" : "9a1169af-c764-45fd-ba26-cd88ecff2ffa",
    "prId" : 27627,
    "prUrl" : "https://github.com/flutter/flutter/pull/27627#pullrequestreview-201715244",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d2abb8f-c591-435b-b3cd-41ce7adb06f4",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Bonus points for adding a concrete example that shows the difference between the two.",
        "createdAt" : "2019-02-07T23:54:53Z",
        "updatedAt" : "2019-02-08T19:05:23Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "e1049c6a-0e28-45c0-8347-993e6d004eb5",
        "parentId" : "3d2abb8f-c591-435b-b3cd-41ce7adb06f4",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Working on it.",
        "createdAt" : "2019-02-08T01:01:34Z",
        "updatedAt" : "2019-02-08T19:05:23Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "4dfd6a91-83ef-430c-bbab-397a979101a1",
        "parentId" : "3d2abb8f-c591-435b-b3cd-41ce7adb06f4",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done",
        "createdAt" : "2019-02-08T18:10:52Z",
        "updatedAt" : "2019-02-08T19:05:23Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bb807835bcf38ea3f36dffa963550adadc455b8",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +103,107 @@/// ```\n/// {@end-tool}\n/// See also:\n///\n///  * [RawKeyEvent], the keyboard event object received by widgets that listen"
  },
  {
    "id" : "93d309b2-da04-4931-ac8e-3ee42875c378",
    "prId" : 27627,
    "prUrl" : "https://github.com/flutter/flutter/pull/27627#pullrequestreview-201395668",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75c4cb7a-1249-4fd0-9cb2-7d277e4aed71",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "If somebody finds an unsupported key - is that a bug? should they file a bug report?",
        "createdAt" : "2019-02-08T00:01:10Z",
        "updatedAt" : "2019-02-08T19:05:23Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "59f6d24e-1471-4250-99c1-47b93dac78f5",
        "parentId" : "75c4cb7a-1249-4fd0-9cb2-7d277e4aed71",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Hmm. I guess?  I'll add a note to file a bug in that case...",
        "createdAt" : "2019-02-08T01:05:20Z",
        "updatedAt" : "2019-02-08T19:05:23Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bb807835bcf38ea3f36dffa963550adadc455b8",
    "line" : 201,
    "diffHunk" : "@@ -1,1 +199,203 @@  /// persistent way.\n  ///\n  /// Autogenerated IDs should be a rare occurrence: Flutter supports most keys.\n  ///\n  /// Keys that generate Unicode characters (even if unknown to Flutter) will"
  },
  {
    "id" : "db7f0e52-c3ab-4329-87f1-2aa7cda01b4f",
    "prId" : 42879,
    "prUrl" : "https://github.com/flutter/flutter/pull/42879#pullrequestreview-303536940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "392ae179-72cd-4cb4-bcc8-894c49d191c1",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "I love static methods.  This could even be directly unit tested if you want.",
        "createdAt" : "2019-10-17T15:06:13Z",
        "updatedAt" : "2019-10-17T21:27:56Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "aa9f5f22-ac07-45b3-8b96-a4d2bf0a146c",
        "parentId" : "392ae179-72cd-4cb4-bcc8-894c49d191c1",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "LOL!  Yeah, ok, added a test.  Very subtle. :-)",
        "createdAt" : "2019-10-17T18:36:23Z",
        "updatedAt" : "2019-10-17T21:27:56Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "e7a63402-aa8b-477f-a371-a078a65bba79",
        "parentId" : "392ae179-72cd-4cb4-bcc8-894c49d191c1",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "ðŸ˜„ ",
        "createdAt" : "2019-10-17T20:48:38Z",
        "updatedAt" : "2019-10-17T21:27:57Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "38c148549c5256cee072092354184543ac03e6a6",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +245,249 @@  /// [controlRight] and [controlLeft] and convert that set to contain just\n  /// [control], so that the question \"is any control key down?\" can be asked.\n  static Set<LogicalKeyboardKey> collapseSynonyms(Set<LogicalKeyboardKey> input) {\n    final Set<LogicalKeyboardKey> result = <LogicalKeyboardKey>{};\n    for (LogicalKeyboardKey key in input) {"
  }
]