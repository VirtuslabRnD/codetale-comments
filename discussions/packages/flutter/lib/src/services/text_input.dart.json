[
  {
    "id" : "0350326e-5bcb-4067-a209-2b0452c5b0e2",
    "prId" : 12120,
    "prUrl" : "https://github.com/flutter/flutter/pull/12120#pullrequestreview-65285492",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c3f0c67-59f4-4a9d-b7a8-38f68bab4771",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this isn't a JSON object, it's a Map...",
        "createdAt" : "2017-09-20T21:34:40Z",
        "updatedAt" : "2017-09-26T19:21:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "188c93da-e2a9-48ea-8eb5-ce6c380e39c9",
        "parentId" : "5c3f0c67-59f4-4a9d-b7a8-38f68bab4771",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(no need to fix this unless you want to go on a rampage and fix all of them)",
        "createdAt" : "2017-09-20T21:39:36Z",
        "updatedAt" : "2017-09-26T19:21:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e9b858d9-3a18-422c-b129-950197cbcb24",
        "parentId" : "5c3f0c67-59f4-4a9d-b7a8-38f68bab4771",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "I think I'll leave that for another rampage.  But I agree with you.",
        "createdAt" : "2017-09-26T16:57:56Z",
        "updatedAt" : "2017-09-26T19:22:07Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c73630bffcc2e6ce29060719dc5bcc03501116b",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +112,116 @@\n  /// Returns a representation of this object as a JSON object.\n  Map<String, dynamic> toJSON() {\n    return <String, dynamic>{\n      'inputType': inputType.toString(),"
  },
  {
    "id" : "eac395d6-b32d-4a86-a02b-27830d102e05",
    "prId" : 12120,
    "prUrl" : "https://github.com/flutter/flutter/pull/12120#pullrequestreview-65285492",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9226eab-f1a9-4f72-8363-71f3a475d596",
        "parentId" : null,
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Would `multilineText` be better, or just more pedantic?",
        "createdAt" : "2017-09-20T23:31:51Z",
        "updatedAt" : "2017-09-26T19:21:13Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "d63b6fb9-d063-4701-994e-975cdf1e0167",
        "parentId" : "b9226eab-f1a9-4f72-8363-71f3a475d596",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "I think it would be redundant. I like multiline because we're already talking about \"TextInputType\", so it's already clear that it's text.",
        "createdAt" : "2017-09-26T16:55:55Z",
        "updatedAt" : "2017-09-26T19:22:07Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c73630bffcc2e6ce29060719dc5bcc03501116b",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +28,32 @@  /// enter key is pressed. This is the input type used for all multi-line text\n  /// fields.\n  multiline,\n\n  /// Optimize for numerical information."
  },
  {
    "id" : "a45b530d-f576-42cb-b391-360a064814f9",
    "prId" : 18855,
    "prUrl" : "https://github.com/flutter/flutter/pull/18855#pullrequestreview-133399663",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e5c308d-c1ac-4c11-8f71-835ddaf886f4",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "these docs are fantastic. thanks!",
        "createdAt" : "2018-06-29T23:02:56Z",
        "updatedAt" : "2018-06-29T23:47:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2cb7bbd9ab930ab99534169f2c7dddf55754199",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +162,166 @@/// the inappropriate value, Android will use \"unspecified\" on the platform\n/// side and iOS will use \"default\" on the platform side.\n///\n/// See also:\n///"
  },
  {
    "id" : "bdfbbbd8-4a7e-48cd-8107-fb1fc55c33db",
    "prId" : 24761,
    "prUrl" : "https://github.com/flutter/flutter/pull/24761#pullrequestreview-183424572",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68e138d4-f4ec-4a5e-bac9-689c119515f1",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "If this value can be null, describe what it means.",
        "createdAt" : "2018-12-10T23:27:48Z",
        "updatedAt" : "2018-12-14T01:00:48Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "796062110a2673d6617ff854e3747b4d1c3eba24",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +467,471 @@       assert(state == FloatingCursorDragState.Update ? offset != null : true);\n\n  /// The raw position of the floating cursor as determined by the iOS sdk.\n  final Offset offset;\n"
  },
  {
    "id" : "360600d5-8cc2-4010-9c68-4ef4bdba44ff",
    "prId" : 33377,
    "prUrl" : "https://github.com/flutter/flutter/pull/33377#pullrequestreview-248390550",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61891de6-84e1-4b1f-b243-31d48dadfe6a",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "nit: let's spell it `TODO(flutter_web)` so our regexes can find this TODO later.",
        "createdAt" : "2019-06-11T19:28:38Z",
        "updatedAt" : "2019-06-11T20:42:42Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "5803d5821e7f55135fd786e489a1f18d836f61bb",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +830,834 @@    assert(() {\n      if (_kIsBrowser) {\n        // TODO(flutterweb): what makes sense here?\n        return true;\n      }"
  },
  {
    "id" : "2c10fb20-8998-42e1-9ce5-393edb7a4626",
    "prId" : 35100,
    "prUrl" : "https://github.com/flutter/flutter/pull/35100#pullrequestreview-262243244",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2623af8-81fa-400b-8235-e2f96b034910",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I tend to think this might be a bit too all-encompassing and doesn't leave us room to expand later (if we're implying that the only reason why this object would call you back is to disconnect). I'd just add an explicit listener. ",
        "createdAt" : "2019-07-15T23:37:50Z",
        "updatedAt" : "2019-08-19T21:02:18Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "a4e37aaf-6afb-471b-98fa-fa4f95f37e0f",
        "parentId" : "c2623af8-81fa-400b-8235-e2f96b034910",
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "Doesn't `ChangeNotifier` mean \"something has changed, query me to determine what you need to do\"?",
        "createdAt" : "2019-07-16T07:56:52Z",
        "updatedAt" : "2019-08-19T21:02:18Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      }
    ],
    "commit" : "00c35f9cf68417b06cf9be5518b957d422485377",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +633,637 @@///\n///  * [TextInput.attach]\nclass TextInputConnection with ChangeNotifier {\n  TextInputConnection._(this._client)\n    : assert(_client != null),"
  },
  {
    "id" : "4ebe61ed-fe37-4ee2-87ee-b5acf1124c2d",
    "prId" : 35100,
    "prUrl" : "https://github.com/flutter/flutter/pull/35100#pullrequestreview-262247076",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2560ad5a-b81f-4554-9cc7-dfff198dda71",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "add a comment here? i.e. we think it's safe to assume that the platform already hide what needed to hiding if the platform calls us to tell us that we disconnected?",
        "createdAt" : "2019-07-15T23:39:21Z",
        "updatedAt" : "2019-08-19T21:02:18Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "a6c08ce4-7f1c-4d14-b05f-0056a26ad14d",
        "parentId" : "2560ad5a-b81f-4554-9cc7-dfff198dda71",
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "I'm not sure I understand...the line you commented is the one that actually does hide the keyboard. Did you mean that we should comment from the other place where `_onConnectionClosed()` is invoked? or something else?",
        "createdAt" : "2019-07-16T08:04:52Z",
        "updatedAt" : "2019-08-19T21:02:18Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      }
    ],
    "commit" : "00c35f9cf68417b06cf9be5518b957d422485377",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +669,673 @@      SystemChannels.textInput.invokeMethod<void>('TextInput.clearClient');\n      _onConnectionClosed();\n      _clientHandler._scheduleHide();\n    }\n    assert(!attached);"
  },
  {
    "id" : "c2ddc021-15c4-488b-b4ff-d6e3a63ac95c",
    "prId" : 39344,
    "prUrl" : "https://github.com/flutter/flutter/pull/39344#pullrequestreview-281511157",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d94b861d-654f-43fd-93ac-b56f268586bf",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I think this information could also be used for autocomplete on android, see https://developer.android.com/reference/android/view/autofill/AutofillManager.html#notifyViewEntered(android.view.View)",
        "createdAt" : "2019-08-27T18:54:41Z",
        "updatedAt" : "2019-08-29T22:21:58Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "2a29ea2d-bf07-4c46-9aba-e49f11906152",
        "parentId" : "d94b861d-654f-43fd-93ac-b56f268586bf",
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "Since the info is sent as a platform message, all platforms will be able to take advantage of it.",
        "createdAt" : "2019-08-27T21:29:58Z",
        "updatedAt" : "2019-08-29T22:21:58Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "69b5d52e-47e3-4142-8cf2-e6b2854a984d",
        "parentId" : "d94b861d-654f-43fd-93ac-b56f268586bf",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "What do you think of creating a class that contains all information pertaining to an editable? We could extend this class to include other data in the future without changing the signature of this method?\r\n\r\nHaving said that, we probably want to keep things that are updated on different schedules separate. For example, positioning and size are updated on every frame, but autocomplete might be scheduled based on user input. `SemanticsNode` is one example that contains everything in the world and I'm not sure I'm a fan of that design. We end up pushing way more data than we need on every frame.",
        "createdAt" : "2019-08-29T14:50:53Z",
        "updatedAt" : "2019-08-29T22:21:58Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0ee01d4103bdc1ae737ec86eb3f82c5e87aa140",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +669,673 @@  }\n\n  /// Send the size and transform of the editable text to engine.\n  ///\n  /// The values are sent as platform messages so they can be used on web for"
  },
  {
    "id" : "ec91298a-76c1-4796-b8c0-4f747c9991ea",
    "prId" : 41108,
    "prUrl" : "https://github.com/flutter/flutter/pull/41108#pullrequestreview-292071208",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfa8f153-02bb-499e-b387-d980c7ce49c5",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Wondering if we should store a copy of `transform`. Unfortunately, `Matrix4` is mutable.",
        "createdAt" : "2019-09-23T18:15:21Z",
        "updatedAt" : "2019-09-23T21:42:33Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "b7e0dc42-6002-4888-a17d-3ec90f154ecd",
        "parentId" : "cfa8f153-02bb-499e-b387-d980c7ce49c5",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "done.  thanks for the suggestion",
        "createdAt" : "2019-09-23T21:43:08Z",
        "updatedAt" : "2019-09-23T21:43:09Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f5997fcfc244d1ffa8fa23dac0a53c5c628ed90",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +684,688 @@    if (editableBoxSize != _cachedSize || transform != _cachedTransform) {\n      _cachedSize = editableBoxSize;\n      _cachedTransform = transform;\n      SystemChannels.textInput.invokeMethod<void>(\n        'TextInput.setEditableSizeAndTransform',"
  },
  {
    "id" : "94603e55-2b68-4453-b10e-391434daa524",
    "prId" : 42550,
    "prUrl" : "https://github.com/flutter/flutter/pull/42550#pullrequestreview-304894707",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d40c0f08-92a9-4d94-8994-1521d47b3d3c",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Maybe link \"Android\" to the native doc that describes the feature we depend on.",
        "createdAt" : "2019-10-21T22:50:59Z",
        "updatedAt" : "2019-10-23T22:31:40Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "83230d53d75413a18e57722a0acaafe37852e393",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +416,420 @@  /// Whether to show input suggestions as the user types.\n  ///\n  /// This flag only affects Android. On iOS, suggestions are tied directly to\n  /// [autocorrect], so that suggestions are only shown when [autocorrect] is\n  /// true. On Android autocorrection and suggestion are controlled separately."
  },
  {
    "id" : "c683bcb0-9e1d-4187-be6d-cde1e70505a4",
    "prId" : 43466,
    "prUrl" : "https://github.com/flutter/flutter/pull/43466#pullrequestreview-310548081",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9db2037-4642-4b8c-b72f-2634fe2159d2",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Is this a request to close the connection (and the framework responds with actually closing the connection)? Or is this to inform the framework that the connection has been closed already (and the framework should not respond with closing it again)?",
        "createdAt" : "2019-10-25T16:26:39Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "fa16ceef-8c9e-4c0e-9260-3dd2ce29ad97",
        "parentId" : "a9db2037-4642-4b8c-b72f-2634fe2159d2",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Right now its name suggests the latter, but the responds is currently the former, I think?",
        "createdAt" : "2019-10-25T16:27:41Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "28e3e47c-3c48-4796-abdf-f2d8963eb318",
        "parentId" : "a9db2037-4642-4b8c-b72f-2634fe2159d2",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "Shall we use a method name like \"ConnectionCloseRequest\"? \r\n\r\n@mdebbar do you have a suggestion?",
        "createdAt" : "2019-10-25T17:05:14Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "4d8cf22c-08a0-4135-a5e7-c341276fa66e",
        "parentId" : "a9db2037-4642-4b8c-b72f-2634fe2159d2",
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "I personally prefer the latter (the platform message informs the framework that the connection has been closed, and the framework doesn't respond).\r\n\r\nFor the web, both approaches are possible, I believe. Not sure about Android and iOS.",
        "createdAt" : "2019-10-25T17:16:16Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "94268efe-c595-4777-8902-9e361fedef52",
        "parentId" : "a9db2037-4642-4b8c-b72f-2634fe2159d2",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "Thanks I'll continue with the latter(connectionClosed), then.",
        "createdAt" : "2019-10-28T14:31:35Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "11db6c7b-15d8-4165-b04f-11bb1f96c6bc",
        "parentId" : "a9db2037-4642-4b8c-b72f-2634fe2159d2",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "The current implementation calls _closeInputConnectionIfNeeded, though. Which will make the framework respond by closing the connection?\r\n\r\nAlso: We need to double-check that this model would work on other platforms like iOS and Android.",
        "createdAt" : "2019-10-28T16:05:57Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "9fafc945-8d4a-4b4f-b2ec-3f7a03a1769a",
        "parentId" : "a9db2037-4642-4b8c-b72f-2634fe2159d2",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "The implementation of _closeInputConnectionIfNeeded:\r\n```\r\nvoid _closeInputConnectionIfNeeded() {\r\n    if (_hasInputConnection) {\r\n      _textInputConnection.close();\r\n      _textInputConnection = null;\r\n      _lastKnownRemoteTextEditingValue = null;\r\n    }\r\n  }\r\n```\r\n\r\nI believe this implementation is correct and this is what we need to do for closing the connection after the platform message is received. \r\n\r\nShall I rename this method instead? Am I missing anything?",
        "createdAt" : "2019-10-28T16:53:12Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "c72629f7-5618-44f8-9650-78d4d1e0e94f",
        "parentId" : "a9db2037-4642-4b8c-b72f-2634fe2159d2",
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "`_textInputConnection.close();` sends a platform message (`TextInput.clearClient`) back to the engine asking it to close the connection. But since the engine is the one that requested the connection to be closed, there's no need for the framework to send the `TextInput.clearClient` message.",
        "createdAt" : "2019-10-28T17:02:42Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "cbb30bdc-b829-4c22-8f5d-2c85c08ebfb3",
        "parentId" : "a9db2037-4642-4b8c-b72f-2634fe2159d2",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "done. Also updated the comments.",
        "createdAt" : "2019-11-01T16:09:19Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf166460da28e2fd0e3125963a5c4a66df45478e",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +638,642 @@  ///\n  /// [TextInputClient] should cleanup its connection and finalize editing.\n  void connectionClosed();\n}\n"
  },
  {
    "id" : "6c3c1e74-bfe3-4593-ac22-706a316825db",
    "prId" : 43466,
    "prUrl" : "https://github.com/flutter/flutter/pull/43466#pullrequestreview-310058545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a80797ba-57f2-44f8-9039-7dc328fdcfcb",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "How does this not suffer from the same bugs that led to reverting https://github.com/flutter/flutter/pull/39523/files",
        "createdAt" : "2019-10-31T17:09:31Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "af666214-0307-48f2-a87b-0bb2733746ee",
        "parentId" : "a80797ba-57f2-44f8-9039-7dc328fdcfcb",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "We don't think this will break android since:\r\n\r\n(1) This is an optional channel, we will use it on web, android won't get effected as long as it is not implemented. \r\n(2) The implementations are not the same. In the previous implementation the connection was getting closed but the editabletext widget's state was not changed. In this implementation as well as closing the connection, these two lines are added in editabletext:\r\n_lastKnownRemoteTextEditingValue = null;\r\n _finalizeEditing(true);",
        "createdAt" : "2019-10-31T17:30:57Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf166460da28e2fd0e3125963a5c4a66df45478e",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +829,833 @@        break;\n      case 'TextInputClient.onConnectionClosed':\n        _currentConnection._client.connectionClosed();\n        break;\n      default:"
  },
  {
    "id" : "b24b64ab-b9d9-42c3-8745-43447b639ab8",
    "prId" : 43466,
    "prUrl" : "https://github.com/flutter/flutter/pull/43466#pullrequestreview-310705492",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77708262-f999-43bc-9ce4-f5577ae18733",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Sorry, I forgot to notice this before, but this looks like a breaking change. Subclasses/Implementors of TextInputClient will have to be changed. We should follow the breaking change process, maybe sync up with Dan since he also has a breaking change in this area: https://github.com/flutter/flutter/pull/43959",
        "createdAt" : "2019-11-01T19:27:24Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "0adcd1ca-02c9-4414-b302-6ecfde69e9b4",
        "parentId" : "77708262-f999-43bc-9ce4-f5577ae18733",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "Thanks for noticing this. I synced with @dnfield I'll send the email for both of us now.",
        "createdAt" : "2019-11-01T21:30:39Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf166460da28e2fd0e3125963a5c4a66df45478e",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +638,642 @@  ///\n  /// [TextInputClient] should cleanup its connection and finalize editing.\n  void connectionClosed();\n}\n"
  },
  {
    "id" : "5f8b00c3-3634-4e81-b0b5-e2e6b9372f76",
    "prId" : 43466,
    "prUrl" : "https://github.com/flutter/flutter/pull/43466#pullrequestreview-310735781",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81600da7-f3b4-4585-903a-c1fad131cf01",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "system_channels.dart documents the messages a channel uses. Can you please add that there?",
        "createdAt" : "2019-11-01T19:33:11Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "9ccf270e-c3a6-433e-8b84-9cd865bb3b18",
        "parentId" : "81600da7-f3b4-4585-903a-c1fad131cf01",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "done. Thanks for the suggestion!",
        "createdAt" : "2019-11-01T23:28:18Z",
        "updatedAt" : "2019-11-01T23:28:19Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf166460da28e2fd0e3125963a5c4a66df45478e",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +828,832 @@        _currentConnection._client.updateFloatingCursor(_toTextPoint(_toTextCursorAction(args[1]), args[2]));\n        break;\n      case 'TextInputClient.onConnectionClosed':\n        _currentConnection._client.connectionClosed();\n        break;"
  }
]