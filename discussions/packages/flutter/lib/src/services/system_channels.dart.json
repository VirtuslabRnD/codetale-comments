[
  {
    "id" : "3366dfa4-f70a-4f73-9f65-96cb0c515794",
    "prId" : 26262,
    "prUrl" : "https://github.com/flutter/flutter/pull/26262#pullrequestreview-192842026",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01fec1ad-bfb7-46fc-b88f-d81c2f3a752b",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Maybe name this (and other instances of `skia`) something like `graphics`, or, alternatively, make this method live on the existing `system` channel.\r\n\r\nIt's been commented before that Skia is an implementation detail as far as the engine is concerned - and even if we were to say we'd never realistically replace Skia, it's possible Skia would get renamed, etc.",
        "createdAt" : "2019-01-09T02:52:10Z",
        "updatedAt" : "2019-01-30T01:18:50Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "b8c33df9-0c28-4da2-8212-7467be173d98",
        "parentId" : "01fec1ad-bfb7-46fc-b88f-d81c2f3a752b",
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "@Hixie : any preference for naming of this API?\r\n\r\nThis message needs to be on a separate channel because it has to be intercepted by the engine (versus the `flutter/system` channel which is forwarded to the embedder).\r\n\r\nThis particular parameter is specific to the implementation of Skia - if the engine switched to another graphics library then developers' code would need to be updated.\r\n",
        "createdAt" : "2019-01-09T17:46:52Z",
        "updatedAt" : "2019-01-30T01:18:50Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      },
      {
        "id" : "3be9ee05-b9a8-48cb-8702-53d9ec56f82f",
        "parentId" : "01fec1ad-bfb7-46fc-b88f-d81c2f3a752b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "`graphics` seems reasonable to me.",
        "createdAt" : "2019-01-15T20:11:54Z",
        "updatedAt" : "2019-01-30T01:18:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "b58e5040-4a28-4359-a9e8-a85fa8a12a89",
        "parentId" : "01fec1ad-bfb7-46fc-b88f-d81c2f3a752b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "`skia` is probably also reasonable, since it's Skia-specific, as you say.",
        "createdAt" : "2019-01-15T20:12:50Z",
        "updatedAt" : "2019-01-30T01:18:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2fb12f824a3ac66ac7836d23baa30c9d44a1d2e5",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +232,236 @@  ///  * `Skia.setResourceCacheMaxBytes`: Set the maximum number of bytes that\n  ///    can be held in the GPU resource cache.\n  static const MethodChannel skia = MethodChannel(\n    'flutter/skia',\n    JSONMethodCodec(),"
  },
  {
    "id" : "73428cdb-9f10-4149-94a5-18afab40a764",
    "prId" : 43466,
    "prUrl" : "https://github.com/flutter/flutter/pull/43466#pullrequestreview-311231311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9993fd5d-0e90-41bb-9859-4dbe25470fe9",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "used? Oh, maybe \"the user closed...\"?",
        "createdAt" : "2019-11-04T17:24:13Z",
        "updatedAt" : "2019-11-04T17:25:25Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf166460da28e2fd0e3125963a5c4a66df45478e",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +162,166 @@  ///  * `TextInputClient.onConnectionClosed`: The text input connection closed\n  ///    on the platform side. For example the application is moved to\n  ///    background or used closed the virtual keyboard. This method informs\n  ///    [TextInputClient] to clear connection and finalize editing.\n  ///    `TextInput.clearClient` and `TextInput.hide` is not called after"
  },
  {
    "id" : "84a400aa-7155-4684-a5a0-81591c027d21",
    "prId" : 43466,
    "prUrl" : "https://github.com/flutter/flutter/pull/43466#pullrequestreview-311231311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c3476ae-efb3-4a7e-bb40-9153661d0d35",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "is not called -> must not be called?",
        "createdAt" : "2019-11-04T17:25:00Z",
        "updatedAt" : "2019-11-04T17:25:25Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf166460da28e2fd0e3125963a5c4a66df45478e",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +164,168 @@  ///    background or used closed the virtual keyboard. This method informs\n  ///    [TextInputClient] to clear connection and finalize editing.\n  ///    `TextInput.clearClient` and `TextInput.hide` is not called after\n  ///    clearing the connection since on the platform side the connection is\n  ///    already finalized."
  },
  {
    "id" : "7bc82f8e-ed9f-48f8-b995-518b7d9410a3",
    "prId" : 43959,
    "prUrl" : "https://github.com/flutter/flutter/pull/43959#pullrequestreview-310718675",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac653953-4d33-4277-8f37-dc9ea216cef1",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Let's document what should happen if there's nothing to send.",
        "createdAt" : "2019-11-01T21:51:56Z",
        "updatedAt" : "2019-11-04T22:26:50Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "7aa168b7-9d1d-48e3-8133-20f0daa18084",
        "parentId" : "ac653953-4d33-4277-8f37-dc9ea216cef1",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Done",
        "createdAt" : "2019-11-01T22:12:27Z",
        "updatedAt" : "2019-11-04T22:26:50Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b2860a7ce123a8a6331be5e5d243bb3781daaa5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +160,164 @@  ///    of the values of the [TextInputAction] enum.\n  ///\n  ///  * `TextInputClient.requestExistingInputState`: The embedding may have\n  ///    lost its internal state about the current editing client, if there is\n  ///    one. The framework should call `TextInput.setClient` and"
  },
  {
    "id" : "9a0f385f-5064-41d2-a53d-479bc05d7a1a",
    "prId" : 54171,
    "prUrl" : "https://github.com/flutter/flutter/pull/54171#pullrequestreview-394242077",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "065dba1f-d6f1-427c-9d8e-acf4b5d2111d",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Wondering whether this needs to be a Method channel or if a Message Channel would be enough. Do we anticipate other methods then activateSystemCursor on here?",
        "createdAt" : "2020-04-15T21:33:35Z",
        "updatedAt" : "2020-05-11T19:47:28Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "4f96b2a6-a83d-4abd-8f8c-80a290b069b7",
        "parentId" : "065dba1f-d6f1-427c-9d8e-acf4b5d2111d",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "Yes, image cursors will also use this channel to create image cursors and activate image cursors.",
        "createdAt" : "2020-04-16T01:35:12Z",
        "updatedAt" : "2020-05-11T19:47:28Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      }
    ],
    "commit" : "695c855b18f78925820d77811994d4f62e0fda50",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +281,285 @@  ///    device to a system cursor. The parameters are\n  ///    integer `device`, and string `kind`.\n  static const MethodChannel mouseCursor = OptionalMethodChannel(\n    'flutter/mousecursor',\n    StandardMethodCodec(),"
  },
  {
    "id" : "b53546d3-c28b-41bc-a42b-afe605ed1547",
    "prId" : 62513,
    "prUrl" : "https://github.com/flutter/flutter/pull/62513#pullrequestreview-458721911",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5443b306-bb3f-45a1-aa38-793d16726ed8",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This surprises me, why is null allowed here? (according to the doc it only sends string representation of enum values.)",
        "createdAt" : "2020-07-30T17:22:37Z",
        "updatedAt" : "2020-07-31T06:35:16Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "5f667f58-d0e4-47b8-bcec-72e56fb362d3",
        "parentId" : "5443b306-bb3f-45a1-aa38-793d16726ed8",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "Because `StringCodec` implements `MessageCodec<String?>` and its decode/encode methods accepts/returns null.",
        "createdAt" : "2020-07-30T20:20:07Z",
        "updatedAt" : "2020-07-31T06:35:16Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      }
    ],
    "commit" : "21fc1d74a6397d8664b6725b87947779006c4725",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +218,222 @@  ///  * [WidgetsBindingObserver.didChangeAppLifecycleState], which triggers\n  ///    whenever a message is received on this channel.\n  static const BasicMessageChannel<String?> lifecycle = BasicMessageChannel<String?>(\n      'flutter/lifecycle',\n      StringCodec(),"
  },
  {
    "id" : "ce6d9604-1540-43af-afb5-248d46d837ef",
    "prId" : 71879,
    "prUrl" : "https://github.com/flutter/flutter/pull/71879#pullrequestreview-548904905",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "236423cf-4872-4258-9fa6-499ce31d0f93",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Should this be an enum that also exists on the framework side? ",
        "createdAt" : "2020-12-08T08:02:02Z",
        "updatedAt" : "2020-12-11T21:20:13Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "4d88994a-28f8-4451-b760-fd34140323c1",
        "parentId" : "236423cf-4872-4258-9fa6-499ce31d0f93",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "I haven't fully decided on this. On one hand, we could fully define this in an enum, but custom implementers of DynamicFeatureManager may wish to have a custom and/or far more detailed set of states. Maybe show percentage downloaded, etc. An enum on just the framework side for the default implementation could exist for convenience, but I don't want to restrict this particular channel to just these states, as it has potential for more, and could be useful to the more advanced users we are targeting with this feature.",
        "createdAt" : "2020-12-08T21:14:58Z",
        "updatedAt" : "2020-12-11T21:20:13Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      },
      {
        "id" : "d607bfe5-7ec2-4226-b874-aabe7ee47db3",
        "parentId" : "236423cf-4872-4258-9fa6-499ce31d0f93",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Sure, you can decide. One thing to keep in mind, we'll want to bring this to iOS (at least the asset part) at some point https://developer.apple.com/library/archive/documentation/FileManagement/Conceptual/On_Demand_Resources_Guide/index.html. \r\n\r\nIdeally the user should just have to touch the dart facing parts (yaml, asset files, deferred instructions in dart) and never touch anything platform specific or have to read platform specific values.",
        "createdAt" : "2020-12-08T21:20:17Z",
        "updatedAt" : "2020-12-11T21:20:13Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "4a2d72b7-d1a2-457a-a5ca-4a550143f4eb",
        "parentId" : "236423cf-4872-4258-9fa6-499ce31d0f93",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "I'll defer adding enums to a later PR/decision.",
        "createdAt" : "2020-12-10T07:08:50Z",
        "updatedAt" : "2020-12-11T21:20:13Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0022c48a7c70caddab961d088bf9d41a75e66b42",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +338,342 @@  ///    the dynamic feature identified by the loadingUnitId or moduleName.\n  ///    This method returns a string that represents the state. Depending on\n  ///    the implementation, this string may vary, but the default Google Play\n  ///    Store implementation beings in the \"Requested\" state before transitioning\n  ///    into the \"Downloading\" and finally the \"Installed\" state."
  },
  {
    "id" : "81ddb103-1b81-4d6c-a309-d5d0355ebc54",
    "prId" : 71879,
    "prUrl" : "https://github.com/flutter/flutter/pull/71879#pullrequestreview-548903979",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3fbfd85d-37ad-42a1-8a03-c3876006a7e2",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "You wanna cross-reference the dart API that does the same thing on deferred libraries? ",
        "createdAt" : "2020-12-10T07:06:52Z",
        "updatedAt" : "2020-12-11T21:20:13Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "0022c48a7c70caddab961d088bf9d41a75e66b42",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +325,329 @@  /// [OptionalMethodChannel.invokeMethod]):\n  ///\n  ///  * `installDynamicFeature`: Requests that a dynamic feature identified by\n  ///    the provided loadingUnitId or moduleName be downloaded and installed.\n  ///    Providing a loadingUnitId with null moduleName will install a dynamic"
  }
]