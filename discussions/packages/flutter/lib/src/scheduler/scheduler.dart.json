[
  {
    "id" : "8b33597a-79c8-44a7-a04d-1b1062215264",
    "prId" : 405,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47297162-ad0b-42d1-8fdf-0c4505da87c6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Where is this intended to fit in the layering?:\nhttps://docs.google.com/presentation/d/1cw7A4HbvM_Abv320rVgPVGiUP2msVs7tfGbkgdrTy0I/edit#slide=id.gbb3c3233b_0_162\n\nSpecifically, is it above or below \"animation\"?\n",
        "createdAt" : "2015-11-16T23:03:51Z",
        "updatedAt" : "2015-11-18T00:00:41Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c157de15-e181-4c42-b430-154b6a42febb",
        "parentId" : "47297162-ad0b-42d1-8fdf-0c4505da87c6",
        "authorId" : "737a0826-b675-46cd-a553-2ca54d538080",
        "body" : "I will merge with the animation scheduler, in which case it will be below animation (but above services).\n",
        "createdAt" : "2015-11-17T01:51:04Z",
        "updatedAt" : "2015-11-18T00:00:41Z",
        "lastEditedBy" : "737a0826-b675-46cd-a553-2ca54d538080",
        "tags" : [
        ]
      }
    ],
    "commit" : "371bf37dd9557590339325999fb524f51944b782",
    "line" : null,
    "diffHunk" : "@@ -1,1 +7,11 @@\nimport 'package:collection/priority_queue.dart';\nimport 'package:flutter/animation.dart' as animation show scheduler;\n\n/// An entry in the scheduler's priority queue."
  },
  {
    "id" : "c7c29f83-c2f1-4cfa-80e9-ed53bb1ab529",
    "prId" : 405,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b85b79d-f014-489d-bb3b-d9c5f15085d0",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "put the getter just above the field, so that when we /// dartdoc the getter, the comment is in a block just above the getter and the field (otherwise the dartdocs comments end up splitting the field and the getter)\n",
        "createdAt" : "2015-11-16T23:06:51Z",
        "updatedAt" : "2015-11-18T00:00:41Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e18b3379-735f-433e-8122-37a5ed8eea13",
        "parentId" : "0b85b79d-f014-489d-bb3b-d9c5f15085d0",
        "authorId" : "737a0826-b675-46cd-a553-2ca54d538080",
        "body" : "done.\n",
        "createdAt" : "2015-11-17T02:15:23Z",
        "updatedAt" : "2015-11-18T00:00:41Z",
        "lastEditedBy" : "737a0826-b675-46cd-a553-2ca54d538080",
        "tags" : [
        ]
      }
    ],
    "commit" : "371bf37dd9557590339325999fb524f51944b782",
    "line" : null,
    "diffHunk" : "@@ -1,1 +33,37 @@  const Priority._(this._value);\n\n  int get value => _value;\n  final int _value;\n"
  },
  {
    "id" : "eab6f583-da95-42a0-a71f-da49148ed701",
    "prId" : 405,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ea246b9-fe2f-41e0-8baf-8034a23c1eb9",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "What is the purpose of kMaxOffset? Is it to reduce the likelihood of priority inflation?\n",
        "createdAt" : "2015-11-16T23:08:16Z",
        "updatedAt" : "2015-11-18T00:00:41Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "dfeb4266-ac40-44f9-b713-d9805e6ee484",
        "parentId" : "7ea246b9-fe2f-41e0-8baf-8034a23c1eb9",
        "authorId" : "737a0826-b675-46cd-a553-2ca54d538080",
        "body" : "Yes.\n",
        "createdAt" : "2015-11-16T23:09:06Z",
        "updatedAt" : "2015-11-18T00:00:41Z",
        "lastEditedBy" : "737a0826-b675-46cd-a553-2ca54d538080",
        "tags" : [
        ]
      }
    ],
    "commit" : "371bf37dd9557590339325999fb524f51944b782",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@  /// A positive [offset] indicates a higher priority.\n  ///\n  /// The parameter [offset] is clamped to +/-[kMaxOffset].\n  Priority operator +(int offset) {\n    if (offset.abs() > kMaxOffset) {"
  },
  {
    "id" : "93163050-3966-4ae2-b05d-4bc7d335d20b",
    "prId" : 405,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "940cb9d4-2929-46e0-aee2-870c00d0ca8c",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Do we need to go through the event loop for each task?  I guess the concern is that there might be higher priority work in the event queue?\n",
        "createdAt" : "2015-11-17T06:14:26Z",
        "updatedAt" : "2015-11-18T00:00:41Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "0adb3206-c6d6-41c4-b4f2-a94e27f8da1e",
        "parentId" : "940cb9d4-2929-46e0-aee2-870c00d0ca8c",
        "authorId" : "737a0826-b675-46cd-a553-2ca54d538080",
        "body" : "Going through the event-loop also allows the system to trigger a `beginFrame`.\nWe could avoid the event-loop by adding a way to see how much time there was left before the next `beginFrame`.\nAnd yes: I would also like to give other event-loop operations the opportunity to run.\n",
        "createdAt" : "2015-11-17T06:17:36Z",
        "updatedAt" : "2015-11-18T00:00:41Z",
        "lastEditedBy" : "737a0826-b675-46cd-a553-2ca54d538080",
        "tags" : [
        ]
      },
      {
        "id" : "198c70e8-9e1b-4a17-a38d-666cf9e442bc",
        "parentId" : "940cb9d4-2929-46e0-aee2-870c00d0ca8c",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "That makes sense.\n\nAnother thing we could consider is spinning the event loop inside Dart.  All the incoming signals to this thread are mojo handles and we have the MojoWaitMany primitive available in Dart.  IMHO, we should see how far we can get spinning the event loop in C++ though.\n",
        "createdAt" : "2015-11-17T06:23:46Z",
        "updatedAt" : "2015-11-18T00:00:41Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "371bf37dd9557590339325999fb524f51944b782",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +100,104 @@      } finally {\n        if (_queue.isNotEmpty)\n          _wakeNow();\n      }\n    } else {"
  },
  {
    "id" : "dea77c84-d40f-48e3-b836-573c29a699ca",
    "prId" : 405,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9bf3c294-4b5c-4023-b666-88fe87859dcc",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Why not schedule a post-frame callback?\n",
        "createdAt" : "2015-11-17T06:15:04Z",
        "updatedAt" : "2015-11-18T00:00:41Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "752a74bd-c60b-4e8a-b5a0-9d6681c9f665",
        "parentId" : "9bf3c294-4b5c-4023-b666-88fe87859dcc",
        "authorId" : "737a0826-b675-46cd-a553-2ca54d538080",
        "body" : "Didn't know about it when I wrote the code.\n\nI could switch, but there is the concern that we would run before other postAnimationFrame callbacks.\n",
        "createdAt" : "2015-11-17T06:20:13Z",
        "updatedAt" : "2015-11-18T00:00:41Z",
        "lastEditedBy" : "737a0826-b675-46cd-a553-2ca54d538080",
        "tags" : [
        ]
      },
      {
        "id" : "4052450b-79e1-4613-9b55-f8ddd8b22548",
        "parentId" : "9bf3c294-4b5c-4023-b666-88fe87859dcc",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "We can also elaborate the other scheduler.dart.  My point is just that going through the event loop here isn't what you want.  You want to run at defined time at the start of the idle period.  What you've got here is fine for the first iteration, but we'll eventually want to merge the two scheduling systems, and when we do, we'll probably change the timing of this callback.\n",
        "createdAt" : "2015-11-17T06:26:18Z",
        "updatedAt" : "2015-11-18T00:00:41Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "371bf37dd9557590339325999fb524f51944b782",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +130,134 @@      // to run in the idle-phase of an animation. We therefore request to be\n      // woken up as soon as possible.\n      _wakeNow();\n    });\n  }"
  },
  {
    "id" : "9c21800e-6a1d-49fb-bf36-af057dd46e64",
    "prId" : 662,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2ba4783-b1e0-43e0-8bf9-4e1f04be1855",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Please don't leave a dart:developer import. :-)\n",
        "createdAt" : "2015-12-02T07:05:16Z",
        "updatedAt" : "2015-12-02T07:05:16Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "141e3f35-f805-4655-909e-bf158877a896",
        "parentId" : "e2ba4783-b1e0-43e0-8bf9-4e1f04be1855",
        "authorId" : "737a0826-b675-46cd-a553-2ca54d538080",
        "body" : "It's needed for the `Timeline` calls. (I just copied it from the animation scheduler).\n",
        "createdAt" : "2015-12-02T07:08:15Z",
        "updatedAt" : "2015-12-02T07:08:15Z",
        "lastEditedBy" : "737a0826-b675-46cd-a553-2ca54d538080",
        "tags" : [
        ]
      },
      {
        "id" : "5f4bbd08-d7a2-4529-9f0e-f5e89b6b6acd",
        "parentId" : "e2ba4783-b1e0-43e0-8bf9-4e1f04be1855",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "oh, wow, ok. Interesting. Nevermind then!\n",
        "createdAt" : "2015-12-02T07:22:28Z",
        "updatedAt" : "2015-12-02T07:22:28Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "10c80f2e1a5443457d9b5d7f0879f053245eedb6",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +4,8 @@\nimport 'dart:async';\nimport 'dart:developer';\nimport 'dart:ui' as ui;\n"
  },
  {
    "id" : "81a721b9-fa42-44df-8eaa-644221f2c362",
    "prId" : 664,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77916158-ba3b-448e-a4a5-2cde9ed96622",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "We already have a type like this in the engine:\n\nhttps://github.com/flutter/engine/blob/master/sky/engine/core/dart/window.dart#L8\n\nWe could make the one in dart:ui public and re-export it here, although maybe having a fresh declaration here is better for loose coupling.\n",
        "createdAt" : "2015-12-02T05:00:31Z",
        "updatedAt" : "2015-12-02T23:37:18Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "9dda9518-501f-4dbf-9481-0874ac049b46",
        "parentId" : "77916158-ba3b-448e-a4a5-2cde9ed96622",
        "authorId" : "737a0826-b675-46cd-a553-2ca54d538080",
        "body" : "I will leave it in this CL, but will follow up.\nSince onBeginFrame is public, we might as well make its type public too, and then we should probably have only one type.\nHowever, it requires two move the Engine and Flutter forward in sync, so I prefer doing that change in separate PRs.\n",
        "createdAt" : "2015-12-02T23:32:05Z",
        "updatedAt" : "2015-12-02T23:37:18Z",
        "lastEditedBy" : "737a0826-b675-46cd-a553-2ca54d538080",
        "tags" : [
        ]
      }
    ],
    "commit" : "728211526a26a5030b1aaae41767ff63303f8bbe",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +18,22 @@/// timelines so that all the animations in the system are synchronized to a\n/// common time base.\ntypedef void FrameCallback(Duration timeStamp);\n\ntypedef void SchedulerExceptionHandler(dynamic exception, StackTrace stack);"
  }
]