[
  {
    "id" : "f8ffaef5-1647-4e7f-8ab8-ee01f04d7042",
    "prId" : 3388,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c0f78a6-35d2-453d-ad22-bbbd4e1c1b92",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I assume this means that we'll execute as many tasks as we have time for?\n",
        "createdAt" : "2016-04-18T22:08:11Z",
        "updatedAt" : "2016-04-19T16:48:46Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "52931e25-c1c4-4f28-acce-3569eff4fbee",
        "parentId" : "2c0f78a6-35d2-453d-ad22-bbbd4e1c1b92",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "technically i believe what we actually do is run them until our frame callback is late...\n",
        "createdAt" : "2016-04-19T16:42:37Z",
        "updatedAt" : "2016-04-19T16:48:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e3961ddc-02f0-4757-b3f8-d349dfaceb15",
        "parentId" : "2c0f78a6-35d2-453d-ad22-bbbd4e1c1b92",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I've added something saying the tasks should be short. I haven't said exactly how many we'll execute since this really needs to be reworked some.\n",
        "createdAt" : "2016-04-19T16:44:16Z",
        "updatedAt" : "2016-04-19T16:48:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a3e9874d74dde88d99c17ac4f41c392c6a66df5",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +96,100 @@  /// Schedules the given `task` with the given `priority`.\n  ///\n  /// Tasks will be executed between frames, in priority order,\n  /// excluding tasks that are skipped by the current\n  /// [schedulingStrategy]. Tasks should be short (as in, up to a"
  },
  {
    "id" : "a4ad8dc1-27d7-47d0-8340-eeea0d99a614",
    "prId" : 4715,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2ad0a2f-5c21-4bdd-80a4-ddc490fdfe05",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this comment is great. One additional thing it should mention is whether to call resetEpoch() before or after setting timeDilation (or if it doesn't matter).\n",
        "createdAt" : "2016-06-23T17:39:15Z",
        "updatedAt" : "2016-06-23T19:36:41Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "40674a4c60e39c3c96c9d1bd1a1170b860effec6",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +394,398 @@  /// current value. For example, if the [timeDilation] decreases, rather than\n  /// scaling down the [Duration] since the beginning of time, [resetEpoch] will\n  /// ensure that we only scale down the duration since [resetEpoch] was called.\n  ///\n  /// Note: Setting [timeDilation] calls [resetEpoch] automatically. You don't"
  },
  {
    "id" : "ee0e1820-8231-4682-97fc-22f3ec5b0204",
    "prId" : 5762,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e814f8b-3a41-4296-928b-3e0c46de4072",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Maybe a _debugPrintTimeStamp() or a _debugTimeStampToString() method would make it easier to see what's going on here in handleBeginFrame().\n",
        "createdAt" : "2016-09-07T23:25:49Z",
        "updatedAt" : "2016-09-08T19:23:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "ce428984-6e44-4923-8687-cc2b5026ebf3",
        "parentId" : "9e814f8b-3a41-4296-928b-3e0c46de4072",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "done\n",
        "createdAt" : "2016-09-08T19:18:50Z",
        "updatedAt" : "2016-09-08T19:23:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "76688eb26edf44ba35bc927a9ed4364fd96eb4ef",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +518,522 @@      _debugFrameNumber += 1;\n      if (debugPrintBeginFrameBanner || debugPrintEndFrameBanner) {\n        StringBuffer frameTimeStampDescription = new StringBuffer();\n        if (rawTimeStamp != null) {\n          _debugDescribeTimeStamp(_currentFrameTimeStamp, frameTimeStampDescription);"
  },
  {
    "id" : "1971937b-c823-4c62-8cad-67ff2709d6b1",
    "prId" : 5762,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb2cbc4c-4f26-4395-b6eb-1038a28a5437",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Set this again in the finally clause, in case transient frame callback or a persistent frame callback throws?\n",
        "createdAt" : "2016-09-07T23:30:05Z",
        "updatedAt" : "2016-09-08T19:23:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "cabc3e29-f9f6-42de-9324-a6a555c80dbf",
        "parentId" : "eb2cbc4c-4f26-4395-b6eb-1038a28a5437",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "done, though arguably we should remove this whole try-finally since everything interesting done by this block is itself wrapped in try-catch blocks.\n",
        "createdAt" : "2016-09-08T19:20:43Z",
        "updatedAt" : "2016-09-08T19:23:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "76688eb26edf44ba35bc927a9ed4364fd96eb4ef",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +542,546 @@      for (FrameCallback callback in _persistentCallbacks)\n        _invokeFrameCallback(callback, _currentFrameTimeStamp);\n      _isProducingFrame = false;\n\n      // POST-FRAME CALLBACKS"
  },
  {
    "id" : "da46768b-8cd0-48de-bd05-637b873f72ce",
    "prId" : 5762,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd162284-c4bd-46d0-b202-9b8c4b9eaaae",
        "parentId" : null,
        "authorId" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "body" : "Maybe 'triggers' or 'runs' would be better than 'calls' here?\n",
        "createdAt" : "2016-09-08T16:10:49Z",
        "updatedAt" : "2016-09-08T19:23:43Z",
        "lastEditedBy" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "tags" : [
        ]
      },
      {
        "id" : "b6078049-a19f-47aa-969e-22f856d08566",
        "parentId" : "dd162284-c4bd-46d0-b202-9b8c4b9eaaae",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we decided a while back to use the word \"call\" to say what we do to callbacks.\n",
        "createdAt" : "2016-09-08T19:22:19Z",
        "updatedAt" : "2016-09-08T19:23:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "6f4de7c7-d63d-44f0-ba2d-ced6752f1f9c",
        "parentId" : "dd162284-c4bd-46d0-b202-9b8c4b9eaaae",
        "authorId" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "body" : "Should probably make sure I do the same. ðŸ˜ƒ \n",
        "createdAt" : "2016-09-08T19:23:31Z",
        "updatedAt" : "2016-09-08T19:23:43Z",
        "lastEditedBy" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "76688eb26edf44ba35bc927a9ed4364fd96eb4ef",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +485,489 @@  /// Called by the engine to produce a new frame.\n  ///\n  /// This function first calls all the callbacks registered by\n  /// [scheduleFrameCallback]/[addFrameCallback], then calls all the callbacks\n  /// registered by [addPersistentFrameCallback], which typically drive the"
  },
  {
    "id" : "ed9df6f5-ade9-4086-8834-78f30d76f349",
    "prId" : 11459,
    "prUrl" : "https://github.com/flutter/flutter/pull/11459#pullrequestreview-53962897",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8526fd66-63ee-4bba-ba4b-090d4c1b8547",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "seems like you did it in the other file, perhaps assert !locked in _ensureEventLoopCallback too",
        "createdAt" : "2017-08-02T01:10:12Z",
        "updatedAt" : "2017-08-02T23:43:51Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "88fe44ea-7a21-4c13-b399-f9eed8342582",
        "parentId" : "8526fd66-63ee-4bba-ba4b-090d4c1b8547",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "will do",
        "createdAt" : "2017-08-02T02:15:03Z",
        "updatedAt" : "2017-08-02T23:43:51Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c39bcdd1-d64e-45e4-9eec-53969f3c2af7",
        "parentId" : "8526fd66-63ee-4bba-ba4b-090d4c1b8547",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "done",
        "createdAt" : "2017-08-02T23:43:34Z",
        "updatedAt" : "2017-08-02T23:43:51Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "54159529f67d616bf4535415c5a72596f317ce83",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +209,213 @@    _taskQueue.add(new _TaskEntry(task, priority.value));\n    if (isFirstTask && !locked)\n      _ensureEventLoopCallback();\n  }\n"
  },
  {
    "id" : "1a4625da-da63-4b94-8bb5-6a867d16a5bb",
    "prId" : 13344,
    "prUrl" : "https://github.com/flutter/flutter/pull/13344#pullrequestreview-81656485",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cebbe7e-b459-4874-8490-28d8501113c6",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "This looks a little fiddly",
        "createdAt" : "2017-12-06T03:11:03Z",
        "updatedAt" : "2017-12-08T23:09:54Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "f2b027e4-e9a7-462e-8871-ba0108b15b3f",
        "parentId" : "3cebbe7e-b459-4874-8490-28d8501113c6",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yeah i'm not too happy with this either. I tried a bunch of different ways of handling this:\r\n- an enum with a state machine\r\n- hooking/unhooking the listeners\r\n- not trying to catch this case at all\r\n- rescheduling frames via Timer.run\r\n- multiple bools (in this patch)\r\n- various others\r\n\r\nThe two-bool mechanism I have here is really the least fiddly solution I could find.",
        "createdAt" : "2017-12-06T20:25:17Z",
        "updatedAt" : "2017-12-08T23:09:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f71c4f3b13f35fe5e44e8369adeeb78ce8de67eb",
    "line" : 356,
    "diffHunk" : "@@ -1,1 +755,759 @@    if (_warmUpFrame) {\n      assert(!_ignoreNextEngineDrawFrame);\n      _ignoreNextEngineDrawFrame = true;\n      return;\n    }"
  },
  {
    "id" : "5c34df3f-3b44-4bbb-a4cb-66cc58e1548e",
    "prId" : 33886,
    "prUrl" : "https://github.com/flutter/flutter/pull/33886#pullrequestreview-246178307",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1353f654-f57b-4f30-89a3-830394dc9263",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Let's add something like:\r\n\r\n> On most platforms, this is a more or less arbitrary value, and should generally be ignored. On Fuchsia, this corresponds to the system-provided presentation time, and can be used to ensure that animations running in different processes are synchronized.",
        "createdAt" : "2019-06-05T18:21:00Z",
        "updatedAt" : "2019-06-05T22:30:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e65ae0a8c93b8442c71ff96b9640df813f4cc9cd",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +854,858 @@  /// presentation time, and can be used to ensure that animations running in\n  /// different processes are synchronized.\n  Duration get currentSystemFrameTimeStamp {\n    assert(_lastRawTimeStamp != null);\n    return _lastRawTimeStamp;"
  },
  {
    "id" : "93019ebd-ae09-4b3a-9c7b-b659b7730c81",
    "prId" : 34365,
    "prUrl" : "https://github.com/flutter/flutter/pull/34365#pullrequestreview-250052553",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62899bd3-48fe-4c8e-a720-648b66695b81",
        "parentId" : null,
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "If the app has already set a `window.onReportTimings` listener, will this make it not work? Maybe we should also call the original `onReportTimings` if it's not null.",
        "createdAt" : "2019-06-13T16:52:09Z",
        "updatedAt" : "2019-06-13T16:52:29Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      },
      {
        "id" : "58bb7ee1-97a0-4eb0-aef6-ce1fbd72f807",
        "parentId" : "62899bd3-48fe-4c8e-a720-648b66695b81",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "This is called pretty early in app initialization; I don't know how likely it is that we'll lose the race condition with user code.\r\n\r\nIf a user of the API is responsible for delegating to the last person who set `onReportTimings`, how would that user know to stop calling the previous closure when that closure was no longer interested in events?\r\n\r\nIf we're concerned about this, I think an option here is to adjust the API to use a broadcast stream based approach (`Stream<FrameTiming> get onFrameTimings`). Clients could add themselves as a listener to the stream, and remove themselves, without having to worry about other potential users of the API interfering with them.\r\n",
        "createdAt" : "2019-06-13T17:14:37Z",
        "updatedAt" : "2019-06-13T17:14:37Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "3d60a41a-726a-491f-87cf-7edf5bb265f9",
        "parentId" : "62899bd3-48fe-4c8e-a720-648b66695b81",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Right, I think I'll keep the current API for a simple engine-to-framework communication, and add a broadcast stream for flexibility later as a pure framework pull request.",
        "createdAt" : "2019-06-14T17:08:25Z",
        "updatedAt" : "2019-06-14T17:08:31Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      },
      {
        "id" : "b13663f7-5421-460d-b603-999c173325e6",
        "parentId" : "62899bd3-48fe-4c8e-a720-648b66695b81",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "OK, makes sense.",
        "createdAt" : "2019-06-14T18:16:07Z",
        "updatedAt" : "2019-06-14T18:16:08Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "494446f7c7060343bbd5ee5f5e3327a1894a5c9c",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +203,207 @@      int frameNumber = 0;\n\n      window.onReportTimings = (List<FrameTiming> timings) {\n        for (FrameTiming frameTiming in timings) {\n          frameNumber += 1;"
  },
  {
    "id" : "c38f5eb3-ea6f-4e3e-a4a7-a5db2fe549df",
    "prId" : 39535,
    "prUrl" : "https://github.com/flutter/flutter/pull/39535#pullrequestreview-282271895",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64c1a1b7-89f9-455e-941f-860e8ed95d3d",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "It feels a little bit hacky to me that we prevent the engine to achieve frame by not attaching listener, but i can't think of a better way, either.",
        "createdAt" : "2019-08-30T22:55:05Z",
        "updatedAt" : "2019-09-05T00:44:42Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7b84a4f1739afeaa158a18d8a29c0aa746870d7",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +718,722 @@      return true;\n    }());\n    ensureFrameCallbacksRegistered();\n    window.scheduleFrame();\n    _hasScheduledFrame = true;"
  },
  {
    "id" : "da87626f-e358-43ff-8e31-53fc81ed337a",
    "prId" : 39945,
    "prUrl" : "https://github.com/flutter/flutter/pull/39945#pullrequestreview-297174499",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60a1dd21-fcdf-4013-ae18-6b42928c17ef",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "worth adding something to the tests on this side in dev/integration_tests as well now that we have integration tests on the framework. Perhaps in the ios_add2app test. ",
        "createdAt" : "2019-09-07T00:05:22Z",
        "updatedAt" : "2019-11-06T02:32:29Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "70f14d7b-196d-4f5f-8a1c-680a7dc27b4e",
        "parentId" : "60a1dd21-fcdf-4013-ae18-6b42928c17ef",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "+1",
        "createdAt" : "2019-09-09T16:14:10Z",
        "updatedAt" : "2019-11-06T02:32:29Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "15159f0c-aa5e-4732-9458-c0774e05ba1a",
        "parentId" : "60a1dd21-fcdf-4013-ae18-6b42928c17ef",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "done",
        "createdAt" : "2019-09-30T20:45:29Z",
        "updatedAt" : "2019-11-06T02:32:29Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "9d1a1303-c1a1-477a-9718-5649a513dfb2",
        "parentId" : "60a1dd21-fcdf-4013-ae18-6b42928c17ef",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "I can't run this:\r\n```\r\nlib/main.dart:36:23: Error: Getter not found: 'detached'.\r\n    AppLifecycleState.detached,\r\n                      ^^^^^^^^\r\n../../../../packages/flutter/lib/src/scheduler/binding.dart:278:30: Error: Getter not found: 'detached'.\r\n      case AppLifecycleState.detached:\r\n                             ^^^^^^^^\r\n../../../../packages/flutter/lib/src/scheduler/binding.dart:298:34: Error: Getter not found: 'detached'.\r\n        return AppLifecycleState.detached;\r\n```\r\nDoes it need to be added to `AppLifecycleState`?",
        "createdAt" : "2019-10-03T21:30:13Z",
        "updatedAt" : "2019-11-06T02:32:29Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "0d0f5c2f-a766-4d42-a84a-f35cc3d92d4d",
        "parentId" : "60a1dd21-fcdf-4013-ae18-6b42928c17ef",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Never mind, I see it needs to be on https://github.com/flutter/engine/pull/11913.",
        "createdAt" : "2019-10-03T21:31:33Z",
        "updatedAt" : "2019-11-06T02:32:29Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "c6495e08-9ac7-4685-a532-7db25dc6bfdf",
        "parentId" : "60a1dd21-fcdf-4013-ae18-6b42928c17ef",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "I compiled the engine and put --local-engine=host_debug_unopt in https://github.com/flutter/flutter/pull/39945/files#diff-98f8467c300c0f2c4e14432a072a9306R8\r\nin order to run the test",
        "createdAt" : "2019-10-03T21:55:57Z",
        "updatedAt" : "2019-11-06T02:32:29Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fdfd15ad80b5b62b97ce15df1b5775b603cbbc3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +334,338 @@        break;\n      case AppLifecycleState.paused:\n      case AppLifecycleState.detached:\n        _setFramesEnabledState(false);\n        break;"
  },
  {
    "id" : "36806609-598e-41be-8a18-4435e4316939",
    "prId" : 43676,
    "prUrl" : "https://github.com/flutter/flutter/pull/43676#pullrequestreview-308788015",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87d7578d-c4e1-4222-ae0b-949c927932ce",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Should this maybe also say that using this is preferred over window.onReportTimings because it allows for multiple callbacks?",
        "createdAt" : "2019-10-29T00:25:27Z",
        "updatedAt" : "2019-10-29T23:37:57Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "1f588718-90cf-47d7-bebd-fc5c7f7e2aba",
        "parentId" : "87d7578d-c4e1-4222-ae0b-949c927932ce",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Done.",
        "createdAt" : "2019-10-29T19:48:22Z",
        "updatedAt" : "2019-10-29T23:37:57Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "41bf72f4e0130b204858bc779952fb61f646bfde",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +214,218 @@  ///\n  /// This can be used, for example, to monitor the performance in release mode,\n  /// or to get a signal when the first frame is rasterized.\n  ///\n  /// This is preferred over using [Window.onReportTimings] directly because"
  },
  {
    "id" : "48426b13-7f87-47b5-8682-b0be40e25e3f",
    "prId" : 45133,
    "prUrl" : "https://github.com/flutter/flutter/pull/45133#pullrequestreview-318725340",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9135f4bc-b20b-45af-a60f-5861e6ab6469",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "This is the workaround, and it is the only change from the previous revert.\r\n@xster ",
        "createdAt" : "2019-11-19T00:53:47Z",
        "updatedAt" : "2019-11-19T17:49:44Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb44f6bd96134f1969ffbc7caa4a014466c1aa45",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +802,806 @@  /// rendering as soon as possible (e.g. at application startup).\n  void scheduleForcedFrame() {\n    // TODO(chunhtai): Removes the if case once the issue is fixed\n    // https://github.com/flutter/flutter/issues/45131\n    if (!_framesEnabled)"
  },
  {
    "id" : "26e15ec6-b55b-4782-ac8f-6d740960505e",
    "prId" : 61570,
    "prUrl" : "https://github.com/flutter/flutter/pull/61570#pullrequestreview-449322319",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7be05203-8dac-475d-a74b-aa48b8fcf22a",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I would expect this one to always return a non-null value. At the time when you can read it, `_lifecycleState` has always been initialized.",
        "createdAt" : "2020-07-15T20:43:42Z",
        "updatedAt" : "2020-07-15T20:59:03Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "b5aa5d34-e302-4d7b-a509-cc33a1c52400",
        "parentId" : "7be05203-8dac-475d-a74b-aa48b8fcf22a",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "Changing this line to:\r\n\r\n```\r\nAppLifecycleState get lifecycleState => _lifecycleState!;\r\n```\r\n\r\ncauses a lot of failures in tests. For instance:\r\n\r\n```\r\nNull check operator used on a null value\r\n  package:flutter/src/scheduler/binding.dart 340:58   SchedulerBinding.lifecycleState\r\n  package:flutter/src/services/binding.dart 180:9     ServicesBinding.readInitialLifecycleStateFromNativeWindow\r\n  package:flutter/src/services/binding.dart 34:5      ServicesBinding.initInstances\r\n  package:flutter/src/gestures/binding.dart 66:11     GestureBinding.initInstances\r\n  package:flutter/src/semantics/binding.dart 24:11    SemanticsBinding.initInstances\r\n  package:flutter/src/rendering/binding.dart 32:11    RendererBinding.initInstances\r\n  package:flutter/src/painting/binding.dart 23:11     PaintingBinding.initInstances\r\n  package:flutter/src/widgets/binding.dart 257:11     WidgetsBinding.initInstances\r\n  package:flutter_test/src/binding.dart 302:11        TestWidgetsFlutterBinding.initInstances\r\n  package:flutter_test/src/binding.dart 898:11        AutomatedTestWidgetsFlutterBinding.initInstances\r\n  package:flutter/src/foundation/binding.dart 57:5    new BindingBase\r\n  package:flutter_test/src/binding.dart               new _TestWidgetsFlutterBinding&BindingBase&SchedulerBinding\r\n  package:flutter_test/src/binding.dart               new _TestWidgetsFlutterBinding&BindingBase&SchedulerBinding&ServicesBinding\r\n  package:flutter_test/src/binding.dart               new _TestWidgetsFlutterBinding&BindingBase&SchedulerBinding&ServicesBinding&GestureBinding\r\n  package:flutter_test/src/binding.dart               new _TestWidgetsFlutterBinding&BindingBase&SchedulerBinding&ServicesBinding&GestureBinding&SemanticsBinding\r\n  package:flutter_test/src/binding.dart               new _TestWidgetsFlutterBinding&BindingBase&SchedulerBinding&ServicesBinding&GestureBinding&SemanticsBinding&RendererBinding\r\n  package:flutter_test/src/binding.dart               new _TestWidgetsFlutterBinding&BindingBase&SchedulerBinding&ServicesBinding&GestureBinding&SemanticsBinding&RendererBinding&PaintingBinding\r\n  package:flutter_test/src/binding.dart               new _TestWidgetsFlutterBinding&BindingBase&SchedulerBinding&ServicesBinding&GestureBinding&SemanticsBinding&RendererBinding&PaintingBinding&WidgetsBinding\r\n  package:flutter_test/src/binding.dart               new TestWidgetsFlutterBinding\r\n  package:flutter_test/src/binding.dart               new AutomatedTestWidgetsFlutterBinding\r\n  package:flutter_test/src/_binding_io.dart 25:7      ensureInitialized\r\n  package:flutter_test/src/binding.dart 298:100       TestWidgetsFlutterBinding.ensureInitialized\r\n  package:flutter_test/src/widget_tester.dart 123:71  testWidgets\r\n  material/tabbed_scrollview_warp_test.dart 79:3      main\r\n  package:flutter_goldens/flutter_goldens.dart 43:17  main\r\n  dart:async                                          _completeOnAsyncReturn\r\n  package:flutter_goldens/flutter_goldens.dart        FlutterLocalFileComparator.fromDefaultComparator\r\n  dart:async                                          _completeOnAsyncReturn\r\n  package:flutter_goldens_client/skia_client.dart     SkiaGoldClient.getExpectations\r\n  dart:async                                          _completeOnAsyncReturn\r\n  package:flutter_goldens_client/skia_client.dart     SkiaGoldClient.getExpectations.<fn>\r\n```",
        "createdAt" : "2020-07-15T20:53:50Z",
        "updatedAt" : "2020-07-15T20:59:03Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c9ee9f2d646aa2b899787329d8fb2db851811bb",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +338,342 @@  /// The preferred way to watch for changes to this value is using\n  /// [WidgetsBindingObserver.didChangeAppLifecycleState].\n  AppLifecycleState? get lifecycleState => _lifecycleState;\n  AppLifecycleState? _lifecycleState;\n"
  },
  {
    "id" : "aee58c69-d768-4347-8013-617251e7c2ec",
    "prId" : 63194,
    "prUrl" : "https://github.com/flutter/flutter/pull/63194#pullrequestreview-463657380",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d324ace-2d94-41e5-ab05-82d8b13573f5",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Can you make those hyperlinks?",
        "createdAt" : "2020-08-07T21:47:53Z",
        "updatedAt" : "2020-08-07T21:47:53Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba5b6ece75fa7e8414e79852a9b587eb637bf198",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +722,726 @@\n  /// Ensures callbacks for `window.onBeginFrame` and `window.onDrawFrame`\n  /// are registered.\n  @protected\n  void ensureFrameCallbacksRegistered() {"
  },
  {
    "id" : "b67c84e7-059c-4f51-81e0-f65daf1147da",
    "prId" : 86438,
    "prUrl" : "https://github.com/flutter/flutter/pull/86438#pullrequestreview-706644212",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9019ffa6-cf81-4eb0-b76a-7f13f31abae8",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe add a unit test to cover this case?",
        "createdAt" : "2021-07-14T19:29:46Z",
        "updatedAt" : "2021-07-14T19:29:52Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "b23d4b02-77f9-4e0d-b559-15c15b377f5e",
        "parentId" : "9019ffa6-cf81-4eb0-b76a-7f13f31abae8",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "done",
        "createdAt" : "2021-07-14T19:32:13Z",
        "updatedAt" : "2021-07-14T19:32:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "854ecf11fcf77ee36519c5eb678f620d7fc439e3",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +30,34 @@  // If the binding has been created, we need to resetEpoch first so that we\n  // capture start of the epoch with the current time dilation.\n  SchedulerBinding._instance?.resetEpoch();\n  _timeDilation = value;\n}"
  }
]