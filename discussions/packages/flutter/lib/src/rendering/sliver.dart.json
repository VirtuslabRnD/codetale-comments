[
  {
    "id" : "9c3e1602-dd68-4f08-89bc-3c0ef8e354c3",
    "prId" : 7620,
    "prUrl" : "https://github.com/flutter/flutter/pull/7620#pullrequestreview-18281079",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0698988-e36a-4c8c-b706-10d5504c8a43",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Can you add some examples here?",
        "createdAt" : "2017-01-24T22:12:14Z",
        "updatedAt" : "2017-01-24T22:58:53Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fae803580de75b03069c93910ee05b08909de37",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +1024,1028 @@  factory ViewportOffset.zero() = _FixedViewportOffset.zero;\n\n  /// The number of pixels to offset the children in the opposite of the axis direction.\n  ///\n  /// For example, if the axis direction is down, then the pixel value"
  },
  {
    "id" : "f21066d9-01d4-4bcf-87c8-1e80e0cb3998",
    "prId" : 7641,
    "prUrl" : "https://github.com/flutter/flutter/pull/7641#pullrequestreview-18522149",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c7e7403-fae3-4e54-966a-99581caec6f3",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "should be tested in debugAssertIsValid and printed in toString",
        "createdAt" : "2017-01-25T22:43:10Z",
        "updatedAt" : "2017-01-25T23:33:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "01662b6495d27d520a05e9836b33fec6aa693b2e",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +423,427 @@  /// its children. If any slivers have visual overflow, the viewport will apply\n  /// a clip to its children.\n  final bool hasVisualOverflow;\n\n  /// If this is non-zero after [RenderSliver.performLayout] returns, the scroll"
  },
  {
    "id" : "c5d4c616-a8ff-4708-8fc6-829e90a5e541",
    "prId" : 7790,
    "prUrl" : "https://github.com/flutter/flutter/pull/7790#pullrequestreview-19727907",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6314d309-b577-491a-aa49-d87ac7b0cb2e",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I see, this is why you're calling it `effectiveExtent` in `rereportDimensions`",
        "createdAt" : "2017-02-02T07:51:44Z",
        "updatedAt" : "2017-02-02T22:15:16Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "25aa1c934a9bb8e5df28630800c0506374dc137a",
    "line" : 1084,
    "diffHunk" : "@@ -1,1 +1946,1950 @@\n    double correction;\n    double effectiveExtent;\n    do {\n      assert(offset.pixels != null);"
  },
  {
    "id" : "b40a59f9-d9f0-4553-b12e-916048af064b",
    "prId" : 7871,
    "prUrl" : "https://github.com/flutter/flutter/pull/7871#pullrequestreview-20141497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6438071-3752-40e3-8c0b-bd494a5a7e30",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "the comment higher up is a bit wrong too",
        "createdAt" : "2017-02-04T01:03:15Z",
        "updatedAt" : "2017-02-04T04:31:53Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "5584a664-963a-40c3-8af7-fbeaa3a20e65",
        "parentId" : "b6438071-3752-40e3-8c0b-bd494a5a7e30",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Fixed.",
        "createdAt" : "2017-02-04T04:47:25Z",
        "updatedAt" : "2017-02-04T04:47:25Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd987462e4205432ecd7989fc8f9d938db8e09dc",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +557,561 @@///\n/// This data structure is optimised for fast layout. It is best used by parents\n/// that expect to have many children whose relative positions don't change even\n/// when the scroll offset does.\nclass SliverLogicalParentData extends ParentData {"
  },
  {
    "id" : "43abe973-5732-406c-9d2f-dec4cb0af6fb",
    "prId" : 8284,
    "prUrl" : "https://github.com/flutter/flutter/pull/8284#pullrequestreview-22651694",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3205192f-47cd-4994-83ed-a43153ec404c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "talk about the coordinate system used here?\r\n\r\nOtherwise this doc is barely above our bar of \"can't be written by someone who has just the name of the class\". :-)",
        "createdAt" : "2017-02-19T04:14:04Z",
        "updatedAt" : "2017-02-19T04:44:25Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "398ebac0b2c10e3fc18bf5acba069b637c4ee499",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +556,560 @@}\n\n/// A hit test entry used by [RenderSliver].\n///\n/// The coordinate system used by this hit test entry is relative to the"
  },
  {
    "id" : "a4e3a1bc-0149-4658-8364-012e8236b015",
    "prId" : 8284,
    "prUrl" : "https://github.com/flutter/flutter/pull/8284#pullrequestreview-22651701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c526f56-e1f1-4854-901b-f823a55f2c5d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "...should only be set by `performLayout`.\r\n...only valid after layout is complete.\r\n",
        "createdAt" : "2017-02-19T04:15:14Z",
        "updatedAt" : "2017-02-19T04:44:25Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "398ebac0b2c10e3fc18bf5acba069b637c4ee499",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +680,684 @@  SliverConstraints get constraints => super.constraints;\n\n  /// The amount of space this sliver occupies.\n  ///\n  /// This value is stale whenever this object is marked as needing layout."
  },
  {
    "id" : "9fb14882-c967-42e6-be3c-2b203d2e1e61",
    "prId" : 8383,
    "prUrl" : "https://github.com/flutter/flutter/pull/8383#pullrequestreview-23665935",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b40a5ca-7b66-475a-b885-f6bafdd218d0",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "`Defaults to 0.0, i.e. by default slivers paint starting at their layout position.`",
        "createdAt" : "2017-02-24T08:17:28Z",
        "updatedAt" : "2017-02-24T15:49:39Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "989187ceeed279045333bf0787abd3ceedd5fb5a",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +469,473 @@  /// position. This value does affect where the [paintExtent] extent is\n  /// measured from when computing the [SliverConstraints.overlap] for the next\n  /// sliver.\n  ///\n  /// Defaults to 0.0, which means slivers start painting at their layout"
  },
  {
    "id" : "5bc0d8aa-627c-4f59-afed-b2fc630867e6",
    "prId" : 10272,
    "prUrl" : "https://github.com/flutter/flutter/pull/10272#pullrequestreview-40099888",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcea8149-b7c5-4e26-84fc-fef398d41c93",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Maybe mention that this is used by ensureVisible to explain why it is needed?",
        "createdAt" : "2017-05-24T02:28:49Z",
        "updatedAt" : "2017-05-24T17:44:36Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "0cdf16e5-d1a8-47d1-941a-e92ef4d916ea",
        "parentId" : "bcea8149-b7c5-4e26-84fc-fef398d41c93",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "done",
        "createdAt" : "2017-05-24T17:44:45Z",
        "updatedAt" : "2017-05-24T17:44:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "38ffb339ef3accc99ec1b438738ccde3bfac3578",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +885,889 @@/// zero, it should override [childScrollOffset]. For example,\n/// [RenderSliverList] and [RenderSliverGrid] override this method, but\n/// [RenderSliverToBoxAdapter] does not.\n///\n/// This is used by, among other things, [Scrollable.ensureVisible]."
  },
  {
    "id" : "52ff0d38-4a9d-48ca-a383-ee4c9ed1b4ae",
    "prId" : 11921,
    "prUrl" : "https://github.com/flutter/flutter/pull/11921#pullrequestreview-60663491",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe0b81d7-98db-45a6-99fd-db44fc4a66cf",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "@lukechurch This is the kind of thing for which I really wish I could put methods on enums.",
        "createdAt" : "2017-09-05T16:39:47Z",
        "updatedAt" : "2017-09-05T16:50:08Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "01f76b58e1fd8f183bd700d8afb9ea979cd5ca29",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +102,106 @@      return AxisDirection.right;\n  }\n  return null;\n}\n"
  },
  {
    "id" : "e4c763fd-3a30-4a1a-a4d4-b1f0c6d55c21",
    "prId" : 15229,
    "prUrl" : "https://github.com/flutter/flutter/pull/15229#pullrequestreview-101805577",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f8eabd3-fe1c-4699-af0e-6fff47ce0d25",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "This is unfortunate. It'll be API breaking but I think it's deep enough that it's hopefully not really used. I didn't find any references to it in Github at least.",
        "createdAt" : "2018-03-07T04:33:51Z",
        "updatedAt" : "2018-03-07T05:03:14Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "4533929c2245a105089cb6892a0392d39bf1429a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +72,76 @@/// [ScrollDirection] and a [GrowthDirection] and wish to compute the\n/// [ScrollDirection] in which growth will occur.\nScrollDirection applyGrowthDirectionToScrollDirection(ScrollDirection scrollDirection, GrowthDirection growthDirection) {\n  assert(scrollDirection != null);\n  assert(growthDirection != null);"
  },
  {
    "id" : "ef24136f-1b49-496b-8515-0f9f6d0dec06",
    "prId" : 24026,
    "prUrl" : "https://github.com/flutter/flutter/pull/24026#pullrequestreview-172306800",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53723876-7f1f-40b8-8b8b-d00fee306615",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I would use the absolute difference to cover rounding errors on either side",
        "createdAt" : "2018-11-07T01:14:10Z",
        "updatedAt" : "2018-11-07T01:14:10Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "527e649f8dd204ea04e59d9924207aeb433277b4",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +691,695 @@      // If the paintExtent is slightly more than the maxPaintExtent, but the difference is still less\n      // than epsilon, we will not throw the assert below.\n      if (paintExtent - maxPaintExtent > _epsilon) {\n        verify(false,\n          'The \"maxPaintExtent\" is less than the \"paintExtent\".\\n' +"
  },
  {
    "id" : "2db5c061-aabb-44ef-ab08-e15c591910e3",
    "prId" : 24551,
    "prUrl" : "https://github.com/flutter/flutter/pull/24551#pullrequestreview-177158639",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce7ce844-1da4-4ab2-8154-89f0d8f34fb4",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I read halfway through the second paragraph to realize that you're not really continuing to elaborate on the first paragraph, you're pointing out exceptions to the first paragraph. Add a `## Edge cases` section header or some such.",
        "createdAt" : "2018-11-21T02:06:40Z",
        "updatedAt" : "2018-11-22T03:38:40Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "ee1aecb3-baa0-48bc-95c7-e29a72bc4b6a",
        "parentId" : "ce7ce844-1da4-4ab2-8154-89f0d8f34fb4",
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "done",
        "createdAt" : "2018-11-21T10:03:47Z",
        "updatedAt" : "2018-11-22T03:38:40Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      }
    ],
    "commit" : "6dafc63778fef74a734dd4e2208322a796d3b9c9",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +239,243 @@  /// their children are built lazily, and the [Sliver] does not have enough\n  /// information to estimate its total extent, [precedingScrollExtent] will be\n  /// [double.infinity] for all [Sliver]s that appear after the lazily\n  /// constructed child. This is because a total [scrollExtent] cannot be\n  /// calculated unless all inner children have been created and sized, or the"
  },
  {
    "id" : "87ba02f5-b868-444d-a32b-c66b675a678d",
    "prId" : 30809,
    "prUrl" : "https://github.com/flutter/flutter/pull/30809#pullrequestreview-226316427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad1dc6be-322b-474e-8f24-8cd040c09702",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we really shouldn't expose this in our public API. This kind of thing is a hack at best.",
        "createdAt" : "2019-04-12T22:08:19Z",
        "updatedAt" : "2019-04-12T22:08:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "39bc1099-314c-4da6-bdb4-686facb0cccb",
        "parentId" : "ad1dc6be-322b-474e-8f24-8cd040c09702",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "I am happy to revert this is this is not preferable. This issue has been happened in a lot different place. There is another bug in performlayout I am trying to fix .  https://github.com/flutter/flutter/pull/30979/files\r\nI think it is better to have a central place to define this constant. That is why I exposed this to public api. ",
        "createdAt" : "2019-04-12T22:26:22Z",
        "updatedAt" : "2019-04-12T22:26:22Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "9dd94936-c562-432c-b184-8ec753702392",
        "parentId" : "ad1dc6be-322b-474e-8f24-8cd040c09702",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I guess it's better to expose it and use it consistently than to have it in many places...",
        "createdAt" : "2019-04-12T22:56:41Z",
        "updatedAt" : "2019-04-12T22:56:41Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "504d9121bd3642526bcc520177f5fbf02d3f69ce",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +688,692 @@\n  /// The epsilon of tolerable double precision error.\n  static const double precisionErrorTolerance = 1e-10;\n\n  /// Asserts that this geometry is internally consistent."
  }
]