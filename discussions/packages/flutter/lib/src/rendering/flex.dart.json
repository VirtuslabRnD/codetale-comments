[
  {
    "id" : "448de81d-e731-4119-b45c-d94c61824abe",
    "prId" : 5931,
    "prUrl" : "https://github.com/flutter/flutter/pull/5931#pullrequestreview-631189",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61ebbf64-5acd-47eb-a4fd-423e15fae821",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "maybe mention that a tight flexible child is going to make this get essentially ignored?\n",
        "createdAt" : "2016-09-19T20:28:49Z",
        "updatedAt" : "2016-09-19T20:41:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d206a236c94eeaef5c6b5ddb4ddda72a34b57003",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +170,174 @@  /// After allocating space to children, there might be some remaining free\n  /// space. This value controls whether to maximize or minimize the amount of\n  /// free space, subject to the incoming layout contraints.\n  ///\n  /// If some children have a non-zero flex factors (and none have a fit of"
  },
  {
    "id" : "4c956d4c-f559-4b1b-a4bb-5ee0c8aa755e",
    "prId" : 10331,
    "prUrl" : "https://github.com/flutter/flutter/pull/10331#pullrequestreview-40636539",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67237658-538c-4266-a52f-28e39003ac01",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "a [Flex] with a vertical axis?",
        "createdAt" : "2017-05-26T18:33:35Z",
        "updatedAt" : "2017-05-26T23:54:10Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "b2210580-618c-4ef9-b0e7-04bb5e958b90",
        "parentId" : "67237658-538c-4266-a52f-28e39003ac01",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I've added some \"see also\"s to the enum definition, but I'm reluctant to point to [Flex] too strongly.",
        "createdAt" : "2017-05-26T23:30:50Z",
        "updatedAt" : "2017-05-26T23:54:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c479eeba88a0f85baff627f158a4ad3fe03affb8",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +128,132 @@  /// Place the children as close to the end of the cross axis as possible.\n  ///\n  /// For example, in a column (a flex with a vertical axis), this aligns the\n  /// right edge of the children along the right edge of the column.\n  end,"
  },
  {
    "id" : "e56e6932-00a1-410d-b27f-27beb888f95e",
    "prId" : 11458,
    "prUrl" : "https://github.com/flutter/flutter/pull/11458#pullrequestreview-111479828",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30d4bdf3-6887-40a0-b153-82797ccebb58",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Turns out this hides a regression: we're now missing a newline at the end of the ancestor print out, and the \"See also\" on the next line ends up on the last line:\r\n\r\n```\r\n...\r\nI/flutter ( 4533): The nearest ancestor providing an unbounded width constraint is:\r\nI/flutter ( 4533):   _RenderSingleChildViewport#76a9a relayoutBoundary=up10 NEEDS-LAYOUT NEEDS-PAINT\r\nI/flutter ( 4533):   creator: _SingleChildViewport ← _ScrollableScope ← IgnorePointer-[GlobalKey#4a64a] ← Semantics ←\r\nI/flutter ( 4533):   Listener ← _GestureSemantics ←\r\nI/flutter ( 4533):   RawGestureDetector-[LabeledGlobalKey<RawGestureDetectorState>#20712] ←\r\nI/flutter ( 4533):   _ExcludableScrollSemantics-[GlobalKey#fc34f] ← RepaintBoundary ← CustomPaint ← RepaintBoundary ←\r\nI/flutter ( 4533):   NotificationListener<ScrollNotification> ← ⋯\r\nI/flutter ( 4533):   parentData: <none> (can use size)\r\nI/flutter ( 4533):   constraints: BoxConstraints(0.0<=w<=484.0, 0.0<=h<=920.0)\r\nI/flutter ( 4533):   layer: OffsetLayer#77c9c\r\nI/flutter ( 4533):   size: Size(484.0, 920.0)See also: https://flutter.io/layout/\r\nI/flutter ( 4533): If this message did not help you determine the problem, consider using debugDumpRenderTree():\r\nI/flutter ( 4533):   https://flutter.io/debugging/#rendering-layer\r\nI/flutter ( 4533):   http://docs.flutter.io/flutter/rendering/debugDumpRenderTree.html\r\n...\r\n```",
        "createdAt" : "2018-04-12T04:30:18Z",
        "updatedAt" : "2018-04-12T04:30:18Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "37f97ccc-0223-4be3-b1a2-ea96885393e4",
        "parentId" : "30d4bdf3-6887-40a0-b153-82797ccebb58",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I'll submit a PR to fix it.",
        "createdAt" : "2018-04-12T04:58:43Z",
        "updatedAt" : "2018-04-12T04:58:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "694d63ca9b1980078316ea3a9a8c8e1dd8bc6dd6",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +491,495 @@              information.writeln('The nearest ancestor providing an unbounded width constraint is:');\n              information.write('  ');\n              information.write(node.toStringShallow('\\n  '));\n            }\n            information.writeln('See also: https://flutter.io/layout/');"
  },
  {
    "id" : "bb4e974b-8e1d-49f7-a7bc-0dfc7f799647",
    "prId" : 11709,
    "prUrl" : "https://github.com/flutter/flutter/pull/11709#pullrequestreview-57949812",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e745838c-9273-4d0e-92db-f5221072c7a4",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "It would be consistent with our philosophy to have start always be \"top\" if the main axis is vertical.",
        "createdAt" : "2017-08-23T00:53:21Z",
        "updatedAt" : "2017-08-25T23:51:29Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "9419dcdd366f3b62cdd01ffbe7d71059ee6efc57",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +106,110 @@  ///\n  /// If this value is used in a vertical direction, a [VerticalDirection] must be\n  /// available to determine if the start is the top or the bottom.\n  start,\n"
  },
  {
    "id" : "7b1baa15-3e90-48c2-a0ea-bc3d2614484c",
    "prId" : 11709,
    "prUrl" : "https://github.com/flutter/flutter/pull/11709#pullrequestreview-57950018",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a95dbbe8-0269-47d7-88e9-813f28300cd1",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "We shouldn't need to call _startIsTopLeft twice.  We have the value above.  We can just remember it.",
        "createdAt" : "2017-08-23T00:54:56Z",
        "updatedAt" : "2017-08-25T23:51:29Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "c79bfcf3-6c33-449a-aeed-e3934cd88309",
        "parentId" : "a95dbbe8-0269-47d7-88e9-813f28300cd1",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Nevermind, this call is for the flipped axis.",
        "createdAt" : "2017-08-23T00:55:16Z",
        "updatedAt" : "2017-08-25T23:51:29Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "9419dcdd366f3b62cdd01ffbe7d71059ee6efc57",
    "line" : 334,
    "diffHunk" : "@@ -1,1 +889,893 @@        case CrossAxisAlignment.start:\n        case CrossAxisAlignment.end:\n          childCrossPosition = _startIsTopLeft(flipAxis(direction), textDirection, verticalDirection)\n                               == (_crossAxisAlignment == CrossAxisAlignment.start)\n                             ? 0.0"
  },
  {
    "id" : "0267453b-6a8c-4045-8620-f15f32e70913",
    "prId" : 30983,
    "prUrl" : "https://github.com/flutter/flutter/pull/30983#pullrequestreview-228546003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d42fde1f-c612-4c85-88f3-7b9dc681f6d5",
        "parentId" : null,
        "authorId" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "body" : "This last part is neither a hint nor a description, following our definitions. I suggest we treat this as a description for now to avoid drawing undeserving attention to it. We should probably track how often this error reporting link is collected, maybe we can set up a URL redirect via flutter.dev.  ",
        "createdAt" : "2019-04-18T20:29:29Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "tags" : [
        ]
      },
      {
        "id" : "b97210fa-f10a-493d-aa18-538eb2d35d43",
        "parentId" : "d42fde1f-c612-4c85-88f3-7b9dc681f6d5",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Agreed. Made it a description.",
        "createdAt" : "2019-04-18T23:24:12Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ba17fce6036bd4207970d1d5a528fe05af1b596",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +711,715 @@             'If none of the above helps enough to fix this problem, please don\\'t hesitate to file a bug:\\n'\n             '  https://github.com/flutter/flutter/issues/new?template=BUG.md'\n          )));\n        }());\n        totalFlex += childParentData.flex;"
  },
  {
    "id" : "73315536-6ccd-4a31-b346-aa5d3c2a761a",
    "prId" : 30983,
    "prUrl" : "https://github.com/flutter/flutter/pull/30983#pullrequestreview-228546225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e47ddb76-b1a6-456b-9c60-86fa0d7767cb",
        "parentId" : null,
        "authorId" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "body" : "The hint starts from this line. I'd consider the three lines above it a description of the error. ",
        "createdAt" : "2019-04-18T21:51:17Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "tags" : [
        ]
      },
      {
        "id" : "33ea96eb-ee68-43c7-a1a3-470b301cd05a",
        "parentId" : "e47ddb76-b1a6-456b-9c60-86fa0d7767cb",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "done",
        "createdAt" : "2019-04-18T23:25:18Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ba17fce6036bd4207970d1d5a528fe05af1b596",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +967,971 @@        ),\n        ErrorHint(\n          'Consider applying a flex factor (e.g. using an Expanded widget) to '\n          'force the children of the $runtimeType to fit within the available '\n          'space instead of being sized to their natural size.'"
  },
  {
    "id" : "69c5d74e-9809-41f4-a123-b4a374376d76",
    "prId" : 55977,
    "prUrl" : "https://github.com/flutter/flutter/pull/55977#pullrequestreview-415821830",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33372ba6-5d70-42c5-92db-d37a7b79f950",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "should this be part of the if (!hasOverflow) above to simplify the logic?",
        "createdAt" : "2020-05-13T22:20:41Z",
        "updatedAt" : "2020-05-28T23:07:03Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "cba346fb-8735-4ad7-b5b4-ae5cdf3e21f7",
        "parentId" : "33372ba6-5d70-42c5-92db-d37a7b79f950",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "I didn't do this in `if (!hasOverflow)` because we still need to execute the `assert` below to trigger some warnings. Otherwise, some unit tests would fail. Actually, I believe I moved it out of `if (!hasOverflow)` after I discovered the unit test failure.",
        "createdAt" : "2020-05-21T01:35:27Z",
        "updatedAt" : "2020-05-28T23:07:03Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bf12f969f96eb5291090f7f46ff3520dfd43598",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +973,977 @@      return;\n\n    if (clipBehavior == Clip.none) {\n      defaultPaint(context, offset);\n    } else {"
  },
  {
    "id" : "05124562-05ab-4eb3-85c8-9ad1792c34cd",
    "prId" : 64227,
    "prUrl" : "https://github.com/flutter/flutter/pull/64227#pullrequestreview-471799851",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f37f77f-be8f-40da-9a64-69e0429170fb",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Looks like these two could be `late final`?",
        "createdAt" : "2020-08-20T16:40:35Z",
        "updatedAt" : "2020-08-20T21:40:48Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd8c2dd0b21eefeec3b231f6bdcd628310d88bd7",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +551,555 @@        // TODO(ianh): these should be late final\n        /*late*/ double/*!*/ mainSize;\n        /*late*/ double/*!*/ crossSize;\n        if (flex == 0) {\n          switch (_direction) {"
  },
  {
    "id" : "457e6056-c614-4a17-88d3-23d9088f2841",
    "prId" : 64227,
    "prUrl" : "https://github.com/flutter/flutter/pull/64227#pullrequestreview-471799851",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04947440-1279-4de6-982e-19ff845c301b",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "`late final`?",
        "createdAt" : "2020-08-20T16:41:30Z",
        "updatedAt" : "2020-08-20T21:40:48Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd8c2dd0b21eefeec3b231f6bdcd628310d88bd7",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +792,796 @@          final double maxChildExtent = canFlex ? (child == lastFlexChild ? (freeSpace - allocatedFlexSpace) : spacePerFlex * flex) : double.infinity;\n          // TODO(ianh): this should be late final\n          /*late*/ double/*!*/ minChildExtent;\n          switch (_getFit(child)) {\n            case FlexFit.tight:"
  },
  {
    "id" : "9418c02a-7642-44e9-9826-0ca85967e1b6",
    "prId" : 64227,
    "prUrl" : "https://github.com/flutter/flutter/pull/64227#pullrequestreview-471799851",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "763bcdc5-bcd4-4f56-bb28-9193bca0a0f7",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "late final?",
        "createdAt" : "2020-08-20T16:42:30Z",
        "updatedAt" : "2020-08-20T21:40:48Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd8c2dd0b21eefeec3b231f6bdcd628310d88bd7",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +885,889 @@    // TODO(ianh): these should be late final\n    /*late*/ double/*!*/ leadingSpace;\n    /*late*/ double/*!*/ betweenSpace;\n    // flipMainAxis is used to decide whether to lay out left-to-right/top-to-bottom (false), or\n    // right-to-left/bottom-to-top (true). The _startIsTopLeft will return null if there's only"
  }
]