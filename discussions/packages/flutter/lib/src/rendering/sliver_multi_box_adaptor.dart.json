[
  {
    "id" : "63443f0b-8228-47dc-be70-127d58c6f1ac",
    "prId" : 7727,
    "prUrl" : "https://github.com/flutter/flutter/pull/7727#pullrequestreview-19006416",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73f28b02-5699-49ba-aac4-523af48d2f54",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "[createChild] (which will then be broken...)",
        "createdAt" : "2017-01-29T23:54:45Z",
        "updatedAt" : "2017-01-30T08:10:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "07b21399c8145f70fdb1681e02d2591859f1047d",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +158,162 @@  ///\n  /// When this is called, there are no children, so no children can be removed\n  /// during the call to createChild. No child should be added during that call\n  /// either, except for the one that is created and returned by createChild.\n  @protected"
  },
  {
    "id" : "e522d24f-ce87-43ef-b918-b8900c940775",
    "prId" : 7727,
    "prUrl" : "https://github.com/flutter/flutter/pull/7727#pullrequestreview-19006427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0817213-5755-495e-b346-e9dd4aa4ca4f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "update docs here too",
        "createdAt" : "2017-01-29T23:55:08Z",
        "updatedAt" : "2017-01-30T08:10:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "07b21399c8145f70fdb1681e02d2591859f1047d",
    "line" : 183,
    "diffHunk" : "@@ -1,1 +181,185 @@  }\n\n  /// Called during layout to create, add, and layout the child before\n  /// [firstChild].\n  ///"
  },
  {
    "id" : "9d7d568b-a407-41fc-b9c3-0dd16b620f77",
    "prId" : 7727,
    "prUrl" : "https://github.com/flutter/flutter/pull/7727#pullrequestreview-19006433",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b2071e3-fe33-44bd-80af-a6fccdf48b9f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "and here",
        "createdAt" : "2017-01-29T23:55:21Z",
        "updatedAt" : "2017-01-30T08:10:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "07b21399c8145f70fdb1681e02d2591859f1047d",
    "line" : 212,
    "diffHunk" : "@@ -1,1 +210,214 @@  }\n\n  /// Called during layout to create, add, and layout the child after\n  /// the given child.\n  ///"
  },
  {
    "id" : "13d93ed0-e761-4d4d-b311-709fc7026399",
    "prId" : 29188,
    "prUrl" : "https://github.com/flutter/flutter/pull/29188#pullrequestreview-218592695",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5da32c7b-d3ee-40a0-8152-26047b45d6d3",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Looks like this is only accessed in the if branch. Move it in there?",
        "createdAt" : "2019-03-24T22:10:11Z",
        "updatedAt" : "2019-04-18T16:48:53Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "5fba6adf-9643-4754-ae17-99ba478e5fbb",
        "parentId" : "5da32c7b-d3ee-40a0-8152-26047b45d6d3",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "it will be used for determining the if else condition",
        "createdAt" : "2019-03-25T21:08:49Z",
        "updatedAt" : "2019-04-18T16:48:53Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "17c7969f-decb-4724-9dab-4147770c983b",
        "parentId" : "5da32c7b-d3ee-40a0-8152-26047b45d6d3",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Oh, sorry. I overlooked that...",
        "createdAt" : "2019-03-25T21:22:57Z",
        "updatedAt" : "2019-04-18T16:48:53Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "005dabf818421f28ac6f9203478514b24cee63bc",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +287,291 @@    // In this case, the child is no longer in the childList but might be stored in\n    // [_keepAliveBucket]. We need to update the location of the child in the bucket.\n    final SliverMultiBoxAdaptorParentData childParentData = child.parentData;\n    if (!childParentData.keptAlive) {\n      super.move(child, after: after);"
  },
  {
    "id" : "da1d5e77-62a3-4cf4-a212-6e0b94525c97",
    "prId" : 29188,
    "prUrl" : "https://github.com/flutter/flutter/pull/29188#pullrequestreview-219216039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "560e6367-824a-47e9-a8e6-dc6f5e9b5031",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Also, add an assert that enabled is not null?",
        "createdAt" : "2019-03-26T16:44:36Z",
        "updatedAt" : "2019-04-18T16:48:53Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "7af7ed26-4438-41dd-a346-550fadd00ca1",
        "parentId" : "560e6367-824a-47e9-a8e6-dc6f5e9b5031",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "done",
        "createdAt" : "2019-03-26T23:55:53Z",
        "updatedAt" : "2019-04-18T16:48:53Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "0d4faf74-2b43-4bba-810e-3e99e0b45494",
        "parentId" : "560e6367-824a-47e9-a8e6-dc6f5e9b5031",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "done",
        "createdAt" : "2019-03-26T23:59:51Z",
        "updatedAt" : "2019-04-18T16:48:53Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "005dabf818421f28ac6f9203478514b24cee63bc",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +235,239 @@  set debugChildIntegrityEnabled(bool enabled) {\n    assert(enabled != null);\n    assert(() {\n      _debugChildIntegrityEnabled = enabled;\n      return _debugVerifyChildOrder() &&"
  },
  {
    "id" : "0353dbb2-5800-4ff7-98d5-1c114103c2b1",
    "prId" : 29188,
    "prUrl" : "https://github.com/flutter/flutter/pull/29188#pullrequestreview-220726875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "654e669b-7c51-4785-a3d8-e314c0586965",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "If didAdoptChild needs to happen in both if and else: can it be pulled out and happen once after the if/else?",
        "createdAt" : "2019-03-28T18:12:47Z",
        "updatedAt" : "2019-04-18T16:48:53Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "3c70eb70-f890-40e3-bbcd-02de575497ce",
        "parentId" : "654e669b-7c51-4785-a3d8-e314c0586965",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "didAdoptChild in this else case has to be in between remove and insert. It will be messy if I move it out",
        "createdAt" : "2019-03-28T18:55:33Z",
        "updatedAt" : "2019-04-18T16:48:53Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "78514150-e239-4518-82cb-9fb566b918e8",
        "parentId" : "654e669b-7c51-4785-a3d8-e314c0586965",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I see. Maybe also add the comment here that didAdoptChild updates the slot which we later use to re-insert the thing in the right position.",
        "createdAt" : "2019-03-29T19:43:31Z",
        "updatedAt" : "2019-04-18T16:48:53Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "005dabf818421f28ac6f9203478514b24cee63bc",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +305,309 @@      }());\n      // Update the slot and reinsert back to _keepAliveBucket in the new slot.\n      childManager.didAdoptChild(child);\n      // If there is an existing child in the new slot, that mean that child will\n      // be moved to other index. In other cases, the existing child should have been"
  },
  {
    "id" : "da0da753-d6a4-44cc-ba7e-6ecbae7e3e99",
    "prId" : 29188,
    "prUrl" : "https://github.com/flutter/flutter/pull/29188#pullrequestreview-220241171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32b6bfa8-d3fc-4227-8ea1-7b2b441cc93c",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "We could have a `List _debugDangelingKeepAlives` to which we add (in an assert) children from the keepAliveBucket that are overwritten. When they get re-inserted in the keepAliveBucket we remove them from the list. When we turn the integrity checks back on we check that the list is empty.",
        "createdAt" : "2019-03-28T18:15:12Z",
        "updatedAt" : "2019-04-18T16:48:53Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "bd62f591-ad3a-4393-8901-e346b94d9ada",
        "parentId" : "32b6bfa8-d3fc-4227-8ea1-7b2b441cc93c",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "done",
        "createdAt" : "2019-03-28T19:54:42Z",
        "updatedAt" : "2019-04-18T16:48:53Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "005dabf818421f28ac6f9203478514b24cee63bc",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +308,312 @@      // If there is an existing child in the new slot, that mean that child will\n      // be moved to other index. In other cases, the existing child should have been\n      // removed by updateChild. Thus, it is ok to overwrite it.\n      assert(() {\n        if (_keepAliveBucket.containsKey(childParentData.index))"
  },
  {
    "id" : "b0da4e7e-4ea0-48d7-83d4-58f1fa91b5dc",
    "prId" : 29188,
    "prUrl" : "https://github.com/flutter/flutter/pull/29188#pullrequestreview-220726875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e1b772d-d8ae-4dae-b83f-bd370c58a4e7",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This sentence looks incomplete. Someone has what?",
        "createdAt" : "2019-03-29T19:42:38Z",
        "updatedAt" : "2019-04-18T16:48:53Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "005dabf818421f28ac6f9203478514b24cee63bc",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +295,299 @@      markNeedsLayout();\n    } else {\n      // If the child in the bucket is not current child, that means someone has\n      // already moved and replaced current child, and we cannot remove this child.\n      if (_keepAliveBucket[childParentData.index] == child) {"
  },
  {
    "id" : "2cc01460-1a53-43c2-a541-71cfd92e97e0",
    "prId" : 29188,
    "prUrl" : "https://github.com/flutter/flutter/pull/29188#pullrequestreview-222342265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a08402e-ee4c-4e95-9c02-8328a4e39c41",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Do we need to remove things from _debugDanglingKeepAlives if `remove` below is called? If yes, please make sure you have a failing test if this doesn't happen.",
        "createdAt" : "2019-03-29T19:46:03Z",
        "updatedAt" : "2019-04-18T16:48:53Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "0e7a924f-9093-444c-a1bc-0148555de5d8",
        "parentId" : "1a08402e-ee4c-4e95-9c02-8328a4e39c41",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "no, this is a tricky one. If there is a dangling child, it will have to be swapped in the later move. In other cases, the dangling child should have been removed in line 1106 in sliver.dart.",
        "createdAt" : "2019-03-29T22:57:45Z",
        "updatedAt" : "2019-04-18T16:48:53Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "ef6aef59-dd87-4825-8500-73225c20b293",
        "parentId" : "1a08402e-ee4c-4e95-9c02-8328a4e39c41",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Hm, but that's only true because of how things are ordered in sliver.dart, no? It's kinda brittle to rely in that implementation detail here...",
        "createdAt" : "2019-03-30T09:06:05Z",
        "updatedAt" : "2019-04-18T16:48:53Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "6acea8a9-d773-43af-8572-b4ddc0dd9244",
        "parentId" : "1a08402e-ee4c-4e95-9c02-8328a4e39c41",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "Added in the remove function",
        "createdAt" : "2019-04-03T17:12:53Z",
        "updatedAt" : "2019-04-18T16:48:53Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "005dabf818421f28ac6f9203478514b24cee63bc",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +311,315 @@      assert(() {\n        if (_keepAliveBucket.containsKey(childParentData.index))\n          _debugDanglingKeepAlives.add(_keepAliveBucket[childParentData.index]);\n        return true;\n      }());"
  },
  {
    "id" : "ab10eb86-e2ac-4503-85e8-2ef32934063e",
    "prId" : 60129,
    "prUrl" : "https://github.com/flutter/flutter/pull/60129#pullrequestreview-436958738",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1036462-6c81-4799-9640-39462ea7638c",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It is possible that children in the keepAlive list will want to paint themselves.",
        "createdAt" : "2020-06-24T19:52:52Z",
        "updatedAt" : "2020-06-24T19:54:17Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "17f21ffadfa79c32d4e70a03a1cd897dcd85d573",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +587,591 @@  void applyPaintTransform(RenderBox child, Matrix4 transform) {\n    if (_keepAliveBucket.containsKey(indexOf(child))) {\n      // It is possible that widgets under kept alive children want to paint\n      // themselves. For example, the Material widget tries to paint all\n      // InkFeatures under its subtree as long as they are not disposed. In"
  },
  {
    "id" : "5b1a1674-0fd6-4625-9d27-2975547a316f",
    "prId" : 60129,
    "prUrl" : "https://github.com/flutter/flutter/pull/60129#pullrequestreview-436958738",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8685787e-6870-4f75-ba7f-066169999e55",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "In such case, we give it => For cases like that, we give the InkFeature children a zero",
        "createdAt" : "2020-06-24T19:54:09Z",
        "updatedAt" : "2020-06-24T19:54:17Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "17f21ffadfa79c32d4e70a03a1cd897dcd85d573",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +589,593 @@      // It is possible that widgets under kept alive children want to paint\n      // themselves. For example, the Material widget tries to paint all\n      // InkFeatures under its subtree as long as they are not disposed. In\n      // such case, we give it a zero transform to prevent them from painting.\n      transform.setZero();"
  }
]