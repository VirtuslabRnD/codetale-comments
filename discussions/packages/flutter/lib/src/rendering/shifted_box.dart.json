[
  {
    "id" : "b97d9d3a-dd64-40c1-bbda-29fffaf05be2",
    "prId" : 779,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0363c901-3adf-4a22-b17a-626fa1cb8aa7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Maybe add \"Can be a fraction less than one\" or some such?\n",
        "createdAt" : "2015-12-07T06:33:23Z",
        "updatedAt" : "2015-12-07T18:28:05Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "069fc6dd8bc4fc2b0cc9e550a8d76e94a8c09857",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +192,196 @@  }\n\n  /// If non-null, sets its width to the child's width multipled by this factor.\n  ///\n  /// Can be both greater and less than 1.0 but must be positive."
  },
  {
    "id" : "9f860914-3e36-4928-8a0a-40f256163d92",
    "prId" : 779,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3648f332-4baa-4864-81a0-22028a367b7d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ditto1\n",
        "createdAt" : "2015-12-07T06:33:27Z",
        "updatedAt" : "2015-12-07T18:28:05Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "069fc6dd8bc4fc2b0cc9e550a8d76e94a8c09857",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +205,209 @@  }\n\n  /// If non-null, sets its height to the child's height multipled by this factor.\n  ///\n  /// Can be both greater and less than 1.0 but must be positive."
  },
  {
    "id" : "db1ca94b-2d0d-41c1-a3a4-64b3237926fe",
    "prId" : 830,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a682994-3848-47d4-b1c8-e0416a41faab",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Neat\n",
        "createdAt" : "2015-12-09T05:51:48Z",
        "updatedAt" : "2015-12-09T05:51:48Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a049c14e52176e35707d83a3f0cdb5e1900ce84",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +321,325 @@      child.layout(childConstraints, parentUsesSize: !childConstraints.isTight);\n      final BoxParentData childParentData = child.parentData;\n      childParentData.position = delegate.getPositionForChild(size, childConstraints.isTight ? childConstraints.smallest : child.size);\n    }\n  }"
  },
  {
    "id" : "ea69cea6-13d3-47c8-a7bd-2cf4f3abfe7b",
    "prId" : 55977,
    "prUrl" : "https://github.com/flutter/flutter/pull/55977#pullrequestreview-415821830",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3d511c0-27e9-4731-96d4-ca29a288a829",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "add this condition to the if !_isOverflowing above and merge the ifs?",
        "createdAt" : "2020-05-13T22:21:19Z",
        "updatedAt" : "2020-05-28T23:07:03Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "d4f948f3-b11c-48b3-ab9a-0eaf4573c615",
        "parentId" : "f3d511c0-27e9-4731-96d4-ca29a288a829",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Same as before. Still need to execute the `assert`.",
        "createdAt" : "2020-05-21T01:35:57Z",
        "updatedAt" : "2020-05-28T23:07:03Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bf12f969f96eb5291090f7f46ff3520dfd43598",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +712,716 @@    }\n\n    if (clipBehavior == Clip.none) {\n      super.paint(context, offset);\n    } else {"
  },
  {
    "id" : "e076f854-0f4a-4f2b-a698-32493e5cdd85",
    "prId" : 63639,
    "prUrl" : "https://github.com/flutter/flutter/pull/63639#pullrequestreview-472876797",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab09339f-1549-4b9a-b123-5df7f9d75ceb",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Is there a use for retaining constraints on neither axis?  ",
        "createdAt" : "2020-08-21T23:57:52Z",
        "updatedAt" : "2020-08-25T00:08:49Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "53a93842-cd5a-4e03-9ac3-dffb9c278d53",
        "parentId" : "ab09339f-1549-4b9a-b123-5df7f9d75ceb",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "Don't think there's one in the framework or material or cupertino. But this PR does not change `RenderUnconstrainedBox`'s API or functionality.",
        "createdAt" : "2020-08-22T00:28:30Z",
        "updatedAt" : "2020-08-25T00:08:49Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e1d9e1a144e9e638395caa8461e4b24149cb4e6",
    "line" : 173,
    "diffHunk" : "@@ -1,1 +778,782 @@       }\n\n  /// The axis to retain constraints on, if any.\n  ///\n  /// If not set, or set to null (the default), neither axis will retain its"
  },
  {
    "id" : "29ba22a0-9cc5-49ae-8054-9615ed3e3f7c",
    "prId" : 63639,
    "prUrl" : "https://github.com/flutter/flutter/pull/63639#pullrequestreview-473660515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97607a9c-dbe9-4eb2-84ff-fc7651bb5d42",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Could you use `default` to handle `constrainedAxis == null` and then just do everything in the switch statement?",
        "createdAt" : "2020-08-21T23:59:51Z",
        "updatedAt" : "2020-08-25T00:08:49Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "5745ebea-6cc4-4336-87f0-c5a55f7aa30c",
        "parentId" : "97607a9c-dbe9-4eb2-84ff-fc7651bb5d42",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "per the style guide default should be avoided: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#avoid-using-if-chains-or--or--with-enum-values",
        "createdAt" : "2020-08-22T00:31:21Z",
        "updatedAt" : "2020-08-25T00:08:49Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "53bb20ad-cf19-439f-9b73-ccb00709e95a",
        "parentId" : "97607a9c-dbe9-4eb2-84ff-fc7651bb5d42",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Ah got it, that makes sense.",
        "createdAt" : "2020-08-24T16:26:16Z",
        "updatedAt" : "2020-08-25T00:08:49Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e1d9e1a144e9e638395caa8461e4b24149cb4e6",
    "line" : 200,
    "diffHunk" : "@@ -1,1 +805,809 @@    assert(false);\n    return null;\n  }\n}\n"
  },
  {
    "id" : "0bb41cf1-3dea-4e13-a8b2-ffcc814ea83d",
    "prId" : 63639,
    "prUrl" : "https://github.com/flutter/flutter/pull/63639#pullrequestreview-473664876",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b1b00f0-b13b-4e12-a98e-31bdc22ca0c5",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Alone on an Infinite Canvas with No Constraints will be the name of my breakout studio album.",
        "createdAt" : "2020-08-24T16:31:51Z",
        "updatedAt" : "2020-08-25T00:08:49Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e1d9e1a144e9e638395caa8461e4b24149cb4e6",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +740,744 @@///\n/// This allows a child to render at the size it would render if it were alone\n/// on an infinite canvas with no constraints. This box will then attempt to\n/// adopt the same size, within the limits of its own constraints. If it ends\n/// up with a different size, it will align the child based on [alignment]."
  },
  {
    "id" : "909c2f66-b119-4eeb-b708-cf20e8853968",
    "prId" : 77994,
    "prUrl" : "https://github.com/flutter/flutter/pull/77994#pullrequestreview-611085835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3d44ab6-3171-4bb9-8db5-868eac3cf6e4",
        "parentId" : null,
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "Should this class be deprecated? No one is using it internally and the superclass is more generalized.",
        "createdAt" : "2021-03-12T04:59:17Z",
        "updatedAt" : "2021-03-18T01:02:30Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "16e08ff2-f349-429b-bc60-2857627506c5",
        "parentId" : "d3d44ab6-3171-4bb9-8db5-868eac3cf6e4",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I'd be OK with deprecating this and redirecting people to RenderConstraintsTransformBox.",
        "createdAt" : "2021-03-12T19:35:36Z",
        "updatedAt" : "2021-03-18T01:02:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac0e8dfeb0d10cf94a94bebe505077ab9bd1d74b",
    "line" : 240,
    "diffHunk" : "@@ -1,1 +832,836 @@  'This feature was deprecated after v2.1.0-11.0.pre.'\n)\nclass RenderUnconstrainedBox extends RenderConstraintsTransformBox {\n  /// Create a render object that sizes itself to the child but does not\n  /// pass the [constraints] down to that child."
  },
  {
    "id" : "3859568f-1bdd-4d6f-864a-3f0594dc5a16",
    "prId" : 77994,
    "prUrl" : "https://github.com/flutter/flutter/pull/77994#pullrequestreview-611085835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f288fb4e-c799-4ed4-b310-24f01cc89970",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Might be worthwhile to document somewhere in here what this does if child is null.",
        "createdAt" : "2021-03-12T19:29:48Z",
        "updatedAt" : "2021-03-18T01:02:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac0e8dfeb0d10cf94a94bebe505077ab9bd1d74b",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +636,640 @@}\n\n/// A [RenderBox] that applies an arbitrary transform to its [constraints]\n/// before sizing its child using the new constraints, treating any overflow as\n/// error."
  },
  {
    "id" : "8882e644-8483-4fde-ac5d-a11efe9e750a",
    "prId" : 77994,
    "prUrl" : "https://github.com/flutter/flutter/pull/77994#pullrequestreview-611261163",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ad2e1e4-e800-4548-a3c5-9327a655aabb",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Just an idea, let me know what you think:\r\n\r\nMake this not required.  If it's null, then it just uses the constraints it has as-is.\r\n\r\nMaybe that's kind of pointless, but I was thinking it would allow you to get rid of _unmodified in the main PR: https://github.com/flutter/flutter/pull/64615/files#diff-f5f93c879cef9a102adbf148583de9f3d9a05f9678fdcad7bde106f62200bb34R2606",
        "createdAt" : "2021-03-12T23:15:51Z",
        "updatedAt" : "2021-03-18T01:02:30Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "9537ee22-ee11-45ad-bd45-d58a593a0180",
        "parentId" : "3ad2e1e4-e800-4548-a3c5-9327a655aabb",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "I'll expose the static functions ('unconstrained' etc,.), instead of the named constructors then.",
        "createdAt" : "2021-03-13T00:38:52Z",
        "updatedAt" : "2021-03-18T01:02:30Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac0e8dfeb0d10cf94a94bebe505077ab9bd1d74b",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +682,686 @@    required AlignmentGeometry alignment,\n    required TextDirection? textDirection,\n    required BoxConstraintsTransform constraintsTransform,\n    RenderBox? child,\n    Clip clipBehavior = Clip.none,"
  },
  {
    "id" : "8e85107f-325d-4825-8c5e-1f6dc00f428c",
    "prId" : 77994,
    "prUrl" : "https://github.com/flutter/flutter/pull/77994#pullrequestreview-612434234",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43d706b5-bcfc-4f02-ba5d-997c40c74e17",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Mention the deprecation and what to use instead in the doc above?",
        "createdAt" : "2021-03-15T17:01:24Z",
        "updatedAt" : "2021-03-18T01:02:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac0e8dfeb0d10cf94a94bebe505077ab9bd1d74b",
    "line" : 237,
    "diffHunk" : "@@ -1,1 +829,833 @@///\n@Deprecated(\n  'Use RenderConstraintsTransformBox instead. '\n  'This feature was deprecated after v2.1.0-11.0.pre.'\n)"
  }
]