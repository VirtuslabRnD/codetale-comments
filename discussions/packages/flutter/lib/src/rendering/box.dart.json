[
  {
    "id" : "fcf939a3-4f8b-4ecd-be6d-2e9f17494a71",
    "prId" : 3516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53460c68-a804-4e0d-ba11-d220594acd1a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "wow\n",
        "createdAt" : "2016-04-24T01:07:43Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53a5a525b0c035e3c7df9c96bff5343726e1578",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1050,1054 @@  double defaultComputeDistanceToFirstActualBaseline(TextBaseline baseline) {\n    assert(!needsLayout);\n    ChildType child = firstChild;\n    while (child != null) {\n      final ParentDataType childParentData = child.parentData;"
  },
  {
    "id" : "68ccc205-dbeb-4906-b062-9b17badf084c",
    "prId" : 3516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4bcd225-7e2f-4f59-901a-ddfd8c79ecf3",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Alternatively, this could be built as an iterator (with yield).\n",
        "createdAt" : "2016-04-24T01:08:23Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a241bea9-e2c7-4f4c-9628-731c31794c69",
        "parentId" : "b4bcd225-7e2f-4f59-901a-ddfd8c79ecf3",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "nevermind, i see what you're doing, an iterator wouldn't help\n",
        "createdAt" : "2016-04-24T01:27:41Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "4b24e6bf-c508-49d4-a2e9-f36f6d9cc0ba",
        "parentId" : "b4bcd225-7e2f-4f59-901a-ddfd8c79ecf3",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I'll make it an iterator and put the `toList` in the calling code.  That puts the slowness nearer to the reason for the slowness.\n",
        "createdAt" : "2016-04-24T02:24:42Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "267b5a44-4c54-40d1-ac4a-cf513706d62c",
        "parentId" : "b4bcd225-7e2f-4f59-901a-ddfd8c79ecf3",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Actually, I decided not to do that because it adds some nutty re-entrancy cases that I don't want to worry about (e.g., if someone mutates the tree while iterating the iterator).\n",
        "createdAt" : "2016-04-24T02:26:53Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "c6056aab-bf86-4d6b-ada7-367bcde25ec5",
        "parentId" : "b4bcd225-7e2f-4f59-901a-ddfd8c79ecf3",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yeah the way you use it an iterator doesn't make sense\n",
        "createdAt" : "2016-04-24T16:42:22Z",
        "updatedAt" : "2016-04-24T16:42:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53a5a525b0c035e3c7df9c96bff5343726e1578",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +1121,1125 @@    }\n    return result;\n  }\n}\n"
  },
  {
    "id" : "a0ca4666-9b87-498d-b878-c2d8f4408903",
    "prId" : 4232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2168629c-8562-43e9-b23f-2fb97d26c01b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "mention that this is called for every render box if debugPaintSizeEnabled is true\n",
        "createdAt" : "2016-05-27T07:32:27Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "69ef23a7a145657fef2050fefab2e255a1e2bc95",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +1011,1015 @@  }\n\n  /// In debug mode, paints a border around this render box.\n  ///\n  /// Called for every [RenderBox] when [debugPaintSizeEnabled] is true."
  },
  {
    "id" : "a7182a67-7e41-4333-8fda-daf98f6081ff",
    "prId" : 4232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d5badae-04bb-4209-a678-46b3b152bdd7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "mention debugPaintBaselinesEnabled\n",
        "createdAt" : "2016-05-27T07:32:35Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "69ef23a7a145657fef2050fefab2e255a1e2bc95",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +1025,1029 @@  }\n\n  /// In debug mode, paints a line for each baseline.\n  ///\n  /// Called for every [RenderBox] when [debugPaintBaselinesEnabled] is true."
  },
  {
    "id" : "1195ecdf-96cc-4884-8bb9-0093868eea07",
    "prId" : 4232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e15852b-c354-4783-8ac7-7ea63680c8df",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "mention the debug flag for this one too\n",
        "createdAt" : "2016-05-27T07:32:43Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "69ef23a7a145657fef2050fefab2e255a1e2bc95",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +1056,1060 @@  }\n\n  /// In debug mode, paints a rectangle if this render box has received more pointer downs than pointer up events.\n  ///\n  /// Called for every [RenderBox] when [debugPaintPointersEnabled] is true."
  },
  {
    "id" : "e95c8882-cbc7-431b-8cfb-69efea5945dd",
    "prId" : 4232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a7e4281-7855-4c77-9693-646f406a1ddf",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "mention that this isn't especially cheap (why do we even have this?)\n",
        "createdAt" : "2016-05-27T07:33:10Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "48025173-2b15-4684-be54-f3743f517f6d",
        "parentId" : "6a7e4281-7855-4c77-9693-646f406a1ddf",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "It's used by Flow, which needs random access to the children.\n",
        "createdAt" : "2016-05-27T15:37:16Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "69ef23a7a145657fef2050fefab2e255a1e2bc95",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +1153,1157 @@  }\n\n  /// Returns a list containing the children of this render object.\n  ///\n  /// This function is useful when you need random-access to the children of"
  },
  {
    "id" : "5a450bba-4a18-4549-b01f-f32a2f293918",
    "prId" : 9330,
    "prUrl" : "https://github.com/flutter/flutter/pull/9330#pullrequestreview-33679127",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c912586-4c18-466d-a389-86e6423e8ad0",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Not sure how I feel about this one. I'd intentionally put in the \"this\" to match the \"child\" case below.\r\nI guess I'll live with it.",
        "createdAt" : "2017-04-20T05:50:42Z",
        "updatedAt" : "2017-04-20T07:27:12Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "25a9c9bc9b7f89430309d636714bdab0d98d387e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1770,1774 @@          '$runtimeType does not implement applyPaintTransform.\\n'\n          'The following $runtimeType object:\\n'\n          '  ${toStringShallow()}\\n'\n          '...did not use a BoxParentData class for the parentData field of the following child:\\n'\n          '  ${child.toStringShallow()}\\n'"
  },
  {
    "id" : "4474dc72-f5d9-49b7-a6e4-de01d610feac",
    "prId" : 10653,
    "prUrl" : "https://github.com/flutter/flutter/pull/10653#pullrequestreview-43782486",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d83aeb2c-11a3-416a-825b-b17ecfc6dc01",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "You might want to say something about how the parent picks the child's position after the child has picked its size.  In other system, the child has a Rect rather than a Size, which means it knows its position as well as its size.  One of the unusual things about our system is that we separate those two pieces.",
        "createdAt" : "2017-06-13T15:07:41Z",
        "updatedAt" : "2017-06-13T16:40:04Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "20777ba3-6598-4289-a622-e022b161db6d",
        "parentId" : "d83aeb2c-11a3-416a-825b-b17ecfc6dc01",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Added:\r\n```\r\n/// Render objects position their children independently of laying them out.\r\n/// Frequently, the parent will use the children's sizes to determine their\r\n/// position. A child does not know its position and will not necessarily be\r\n/// laid out again, or repainted, if its position changes.\r\n```",
        "createdAt" : "2017-06-13T16:35:52Z",
        "updatedAt" : "2017-06-13T16:40:04Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c07e38b9e5ccd16feacad77377df7e008399817",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +52,56 @@/// Each [RenderBox] (the objects that provide the layout models for box\n/// widgets) receives [BoxConstraints] from its parent, then lays out each of\n/// its children, then picks a [Size] that satisfies the [BoxConstraints].\n///\n/// Render objects position their children independently of laying them out."
  },
  {
    "id" : "ff4a1bcf-7de2-430e-91ff-72a18fe37fcd",
    "prId" : 11343,
    "prUrl" : "https://github.com/flutter/flutter/pull/11343#pullrequestreview-51560427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8397d26-71ef-4d01-80c7-584b27de3215",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "unrelated to changes in this PR: I wonder if the existence of this subclass causes the AOT compiler to believe that `Size` is polymorphic and makes it slower than it could be.\r\n\r\n@rmacnak-google?",
        "createdAt" : "2017-07-21T19:08:33Z",
        "updatedAt" : "2017-07-21T20:44:16Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3712f941d4cc82f366b1c5f77e6894890797e89f",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +15,19 @@\n// This class should only be used in debug builds.\nclass _DebugSize extends Size {\n  _DebugSize(Size source, this._owner, this._canBeUsedByParent) : super.copy(source);\n  final RenderBox _owner;"
  },
  {
    "id" : "f76e8006-b7f6-4a5a-951e-3a16df569f11",
    "prId" : 11343,
    "prUrl" : "https://github.com/flutter/flutter/pull/11343#pullrequestreview-51580225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89c6f2d4-8987-4efa-bb4b-201d721c101c",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "s/object/box/?",
        "createdAt" : "2017-07-21T19:12:15Z",
        "updatedAt" : "2017-07-21T20:44:16Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "60c2fff8-7b7e-4f40-a7d2-7164db0729c5",
        "parentId" : "89c6f2d4-8987-4efa-bb4b-201d721c101c",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It would make the later text confusing (\"this second render object\" wouldn't be as obvious), so I've left it as object.",
        "createdAt" : "2017-07-21T20:38:56Z",
        "updatedAt" : "2017-07-21T20:44:16Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3712f941d4cc82f366b1c5f77e6894890797e89f",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +1513,1517 @@            throw new FlutterError(\n              'The size property was assigned a size inappropriately.\\n'\n              'The following render object:\\n'\n              '  $this\\n'\n              '...was assigned a size obtained from:\\n'"
  },
  {
    "id" : "a909dd47-0ec3-476f-bdb5-054a9c6cea97",
    "prId" : 22985,
    "prUrl" : "https://github.com/flutter/flutter/pull/22985#pullrequestreview-165862500",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76c240f6-18c4-4a53-984e-4fcf9fecb91c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "What's the likely performance impact of this change? (This code is potentially hot in certain cases.)",
        "createdAt" : "2018-10-17T21:24:41Z",
        "updatedAt" : "2018-10-18T00:22:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "4acba41b-fe14-47b0-baa8-e04ceddf23a8",
        "parentId" : "76c240f6-18c4-4a53-984e-4fcf9fecb91c",
        "authorId" : "cebd9d94-b15e-4cc3-a8fb-3b59bef95c73",
        "body" : "I went ahead and optimized it slightly, but it shouldn't be bad either way since it's still relatively light weight (only four divisions) and is only called O(1) times per frame. It could be optimized further, but likely not worth it.",
        "createdAt" : "2018-10-17T22:29:56Z",
        "updatedAt" : "2018-10-18T00:22:31Z",
        "lastEditedBy" : "cebd9d94-b15e-4cc3-a8fb-3b59bef95c73",
        "tags" : [
        ]
      }
    ],
    "commit" : "200106e5e75c2f9eb3d2d0a02c3607bf81ad190d",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +2023,2027 @@    final Vector3 s = transform.perspectiveTransform(Vector3(point.dx, point.dy, 0.0));\n    final Vector3 p = s - d * (n.dot(s) / n.dot(d));\n    return Offset(p.x, p.y);\n  }\n"
  },
  {
    "id" : "585b5b09-f0cf-4c24-ba74-3c4ed1cd75b0",
    "prId" : 30983,
    "prUrl" : "https://github.com/flutter/flutter/pull/30983#pullrequestreview-228539492",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f8fd55e-6a35-4de0-a16e-8bdf184f2ed0",
        "parentId" : null,
        "authorId" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "body" : "Maybe we should spell out 'NaN' to make the message more beginner friendly. ",
        "createdAt" : "2019-04-18T19:46:38Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "tags" : [
        ]
      },
      {
        "id" : "353f7377-96de-4040-b938-9da6164340d1",
        "parentId" : "9f8fd55e-6a35-4de0-a16e-8bdf184f2ed0",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Added that to the list of items to cleanup with a followup CL.",
        "createdAt" : "2019-04-18T22:53:54Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ba17fce6036bd4207970d1d5a528fe05af1b596",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +528,532 @@          whichFields = affectedFieldsList.single;\n        }\n        throwError(ErrorSummary('BoxConstraints has ${affectedFieldsList.length == 1 ? 'a NaN value' : 'NaN values' } in $whichFields.'));\n      }\n      if (minWidth < 0.0 && minHeight < 0.0)"
  },
  {
    "id" : "fb23c811-fb45-45e4-8427-d6748b2d437c",
    "prId" : 30983,
    "prUrl" : "https://github.com/flutter/flutter/pull/30983#pullrequestreview-228542882",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3662ca1e-c7ec-402c-bad3-ef7e4c8db420",
        "parentId" : null,
        "authorId" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "body" : "This looks like an ErrorDescription, too. To add a hint, what advice could we give someone who runs into this error? Would something like \"try giving a finite size to the render object [link to documentation]\" be useful as a hint here?   ",
        "createdAt" : "2019-04-18T19:57:21Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "tags" : [
        ]
      },
      {
        "id" : "0f039389-9e8c-4b4b-a910-e4c22902ae8f",
        "parentId" : "3662ca1e-c7ec-402c-bad3-ef7e4c8db420",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Switched to a description. Added to my list of things that could be nice to have a hint.",
        "createdAt" : "2019-04-18T23:08:54Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ba17fce6036bd4207970d1d5a528fe05af1b596",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +1731,1735 @@            'This probably means that it is a render object that tries to be '\n            'as big as possible, but it was put inside another render object '\n            'that allows its children to pick their own size.'\n          )\n        ];"
  },
  {
    "id" : "4867566d-6992-441a-b4f3-f488177fd270",
    "prId" : 30983,
    "prUrl" : "https://github.com/flutter/flutter/pull/30983#pullrequestreview-228543299",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b23ec99-79cd-4734-9a54-833550f9c453",
        "parentId" : null,
        "authorId" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "body" : "I noticed this message is the same as the one in L1732. I'm not sure if this is a problem or not. Please see my comment there about whether this qualifies as a hint.",
        "createdAt" : "2019-04-18T20:00:36Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "tags" : [
        ]
      },
      {
        "id" : "b8b1bf9d-aa51-4d30-b7bc-d5326332f5a8",
        "parentId" : "4b23ec99-79cd-4734-9a54-833550f9c453",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Downgraded this one as well.",
        "createdAt" : "2019-04-18T23:10:13Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "02d8b300-7037-4505-9ddf-5165016750f4",
        "parentId" : "4b23ec99-79cd-4734-9a54-833550f9c453",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "also noted that it would be nice to dedupe the text.",
        "createdAt" : "2019-04-18T23:10:59Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ba17fce6036bd4207970d1d5a528fe05af1b596",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +1752,1756 @@        errorParts.add(ErrorDescription(\n          'This probably means that it is a render object that tries to be '\n          'as big as possible, but it was put inside another render object '\n          'that allows its children to pick their own size.'\n        ));"
  },
  {
    "id" : "dc9e6782-f398-45c9-93e7-9802706ac495",
    "prId" : 30983,
    "prUrl" : "https://github.com/flutter/flutter/pull/30983#pullrequestreview-228552184",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3772a88-22a6-4257-bdaa-189a61b06b9e",
        "parentId" : null,
        "authorId" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "body" : "A side question: will the user be able to locate this particular widget in their code, especially when there are many instances of this type?",
        "createdAt" : "2019-04-18T20:12:27Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "tags" : [
        ]
      },
      {
        "id" : "01cca7ae-e449-47de-94d5-cb4b44ce597f",
        "parentId" : "e3772a88-22a6-4257-bdaa-189a61b06b9e",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "They will be as soon as the kernel transformer for ErrorSummary is enabled, click on the type name in the UI will lead you to the RenderObject matching the type in the inspector.",
        "createdAt" : "2019-04-18T23:16:13Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "c6175bc5-c8e0-4977-8d3a-efdc037a5652",
        "parentId" : "e3772a88-22a6-4257-bdaa-189a61b06b9e",
        "authorId" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "body" : "Sounds good",
        "createdAt" : "2019-04-18T23:59:41Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ba17fce6036bd4207970d1d5a528fe05af1b596",
    "line" : 188,
    "diffHunk" : "@@ -1,1 +1764,1768 @@      if (!constraints.isSatisfiedBy(_size)) {\n        throw FlutterError.fromParts(<DiagnosticsNode>[\n          ErrorSummary('$runtimeType does not meet its constraints.'),\n          DiagnosticsProperty<BoxConstraints>('Constraints', constraints, style: DiagnosticsTreeStyle.errorProperty),\n          DiagnosticsProperty<Size>('Size', _size, style: DiagnosticsTreeStyle.errorProperty),"
  },
  {
    "id" : "97254217-534b-4240-9a71-9938ad726e38",
    "prId" : 45720,
    "prUrl" : "https://github.com/flutter/flutter/pull/45720#pullrequestreview-325976325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8327425-2861-43fe-84da-3b7b895377db",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I wish clamp on a double would just always return a double. \r\n\r\nMaybe we can add an extension method `double clamp(double lowerLimit, double upperLimit)` to foundation that implements that protocol instead of casting the clamp everywhere? It seems cluttery...",
        "createdAt" : "2019-12-02T20:31:57Z",
        "updatedAt" : "2019-12-02T21:51:33Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "5e688eec-9e33-4eae-b0c6-9dfe1afcdd23",
        "parentId" : "f8327425-2861-43fe-84da-3b7b895377db",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : ">Maybe we can add an extension method\r\n\r\nThat's what I planned to do in an upcoming PR (to avoid too much changes).\r\n\r\nHowever I don't think `clamp` can be used as name. I was thinking to `clampDouble` and `clampInt`. (Note that the SDK could also make some changes  https://github.com/dart-lang/sdk/issues/30403#issuecomment-323717772 )",
        "createdAt" : "2019-12-02T21:29:13Z",
        "updatedAt" : "2019-12-02T21:51:33Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "941dc3aa-31f7-4d0f-9999-25ad3b55cfeb",
        "parentId" : "f8327425-2861-43fe-84da-3b7b895377db",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Another name for the function could be `within`.",
        "createdAt" : "2019-12-02T21:55:52Z",
        "updatedAt" : "2019-12-02T21:55:52Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "da2eda97-4e26-4930-8d94-ef4abebb97c8",
        "parentId" : "f8327425-2861-43fe-84da-3b7b895377db",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I would prefer it if we did the clamp extension method before the implicit-cast:false change then, since the clamp stuff adds a lot of noise to them..",
        "createdAt" : "2019-12-02T21:56:53Z",
        "updatedAt" : "2019-12-02T21:56:53Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "c0070b4e-9639-4724-9307-44a9f2d70c39",
        "parentId" : "f8327425-2861-43fe-84da-3b7b895377db",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : ">I would prefer it if we did the clamp extension method before the implicit-cast:false change then, since the clamp stuff adds a lot of noise to them\r\n\r\nRegarding all the changes I already made it would be a nightmare to handle merge conflits if I change `clamp` before implicit-casts now :-( Don't worry the extension clamp changes should be really easy/quick to do afterwards.  ",
        "createdAt" : "2019-12-03T08:56:27Z",
        "updatedAt" : "2019-12-03T08:56:27Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fc98d908c36eccc4419fd1a8e2d9451dfb70737",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +211,215 @@  BoxConstraints enforce(BoxConstraints constraints) {\n    return BoxConstraints(\n      minWidth: minWidth.clamp(constraints.minWidth, constraints.maxWidth) as double,\n      maxWidth: maxWidth.clamp(constraints.minWidth, constraints.maxWidth) as double,\n      minHeight: minHeight.clamp(constraints.minHeight, constraints.maxHeight) as double,"
  },
  {
    "id" : "98debdce-fd88-4c5e-b6e2-fc2a5bd7ddee",
    "prId" : 48295,
    "prUrl" : "https://github.com/flutter/flutter/pull/48295#pullrequestreview-339294703",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44dfecdd-4b9e-413f-a7d0-f3e56c34865d",
        "parentId" : null,
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "This could actually be a breaking change, since any users of `BoxConstraints` could begin running into assertions. If that is the case, then the breaking change policy should be followed.\r\n\r\ncc @HansMuller ",
        "createdAt" : "2020-01-07T14:59:06Z",
        "updatedAt" : "2020-01-07T14:59:06Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      },
      {
        "id" : "abe79334-2a94-44cd-a0b3-25e527e663ff",
        "parentId" : "44dfecdd-4b9e-413f-a7d0-f3e56c34865d",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "That's true, however - strictly speaking - this isn't a breaking change because it doesn't break an existing test in the Flutter test suite or in the tests repo.",
        "createdAt" : "2020-01-07T15:03:20Z",
        "updatedAt" : "2020-01-07T15:03:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "a4ac7ec6-ea43-42c6-8ef2-540cd9137145",
        "parentId" : "44dfecdd-4b9e-413f-a7d0-f3e56c34865d",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "Gotcha, this makes sense to me then.",
        "createdAt" : "2020-01-07T15:07:38Z",
        "updatedAt" : "2020-01-07T15:07:39Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "c074e60c33669aaa73bd968c0785118893e65bd9",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +91,95 @@    this.minHeight = 0.0,\n    this.maxHeight = double.infinity,\n  }) : assert (minWidth != null),\n       assert (maxWidth != null),\n       assert (minHeight != null),"
  },
  {
    "id" : "a293dcd3-a974-410b-9803-4c496eac0e61",
    "prId" : 64227,
    "prUrl" : "https://github.com/flutter/flutter/pull/64227#pullrequestreview-472003847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55ab77ca-1e8e-4618-bcdf-91e1fcab67f0",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Presumably, `_IntrinsicDimensionsCacheEntry` would also be `/*!*/` ?",
        "createdAt" : "2020-08-20T17:04:11Z",
        "updatedAt" : "2020-08-20T21:40:48Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "d932b91e-3c5b-4634-a15c-50d7495d4012",
        "parentId" : "55ab77ca-1e8e-4618-bcdf-91e1fcab67f0",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "somehow it got that right",
        "createdAt" : "2020-08-20T21:37:40Z",
        "updatedAt" : "2020-08-20T21:40:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd8c2dd0b21eefeec3b231f6bdcd628310d88bd7",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +1295,1299 @@  }\n\n  Map<_IntrinsicDimensionsCacheEntry, double/*!*/> _cachedIntrinsicDimensions;\n\n  double/*!*/ _computeIntrinsicDimension(_IntrinsicDimension dimension, double argument, double/*!*/ computer(double argument)) {"
  },
  {
    "id" : "f31a3055-28bd-498c-9560-f266fd6c6be0",
    "prId" : 70656,
    "prUrl" : "https://github.com/flutter/flutter/pull/70656#pullrequestreview-531874579",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcb9876a-7507-4bbd-948b-1fea818d4401",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "should this mention debugCheckingIntrinsics? It seems to be the real reason this function exists...",
        "createdAt" : "2020-11-16T23:01:17Z",
        "updatedAt" : "2020-11-20T23:10:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "548b602633c3665c328f870251ee7672041b0af1",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +1866,1870 @@  ///\n  ///  * [computeDryLayout], which lists some reasons why it may not be feasible\n  ///    to compute the dry layout.\n  bool debugCannotComputeDryLayout({String? reason, FlutterError? error}) {\n    assert((reason == null) != (error == null));"
  },
  {
    "id" : "9c216f70-0ace-4384-9cfa-5d2febc84203",
    "prId" : 70656,
    "prUrl" : "https://github.com/flutter/flutter/pull/70656#pullrequestreview-535844267",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37102e10-37b4-489d-a13b-93ba1ffa8fae",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "The name feels a little odd: If I was someone seeing it for the first time, I might wonder if there was a wet layout too, and what dry refers to.\r\n\r\nMaybe `computeDryRunLayout`? `computeDesiredLayout`? `computeAPrioriLayout`?",
        "createdAt" : "2020-11-20T22:43:01Z",
        "updatedAt" : "2020-11-20T23:10:10Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "71eaa2ae-e2e5-4c9e-b3e8-ca1d2fec7088",
        "parentId" : "37102e10-37b4-489d-a13b-93ba1ffa8fae",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I am not really happy about any of these names... I added a paragraph to the docs explaining why this is dry and the other layout is wet.",
        "createdAt" : "2020-11-20T23:09:24Z",
        "updatedAt" : "2020-11-20T23:10:10Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "0a3e5659-d8c0-44ff-86e8-b0f184b74ea1",
        "parentId" : "37102e10-37b4-489d-a13b-93ba1ffa8fae",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Instead of the paragraph, why not change the name to `computeDryRunLayout`?  Seems more self-documenting.",
        "createdAt" : "2020-11-20T23:38:31Z",
        "updatedAt" : "2020-11-20T23:38:31Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "548b602633c3665c328f870251ee7672041b0af1",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +1838,1842 @@  /// value of `const Size(0, 0)`.\n  @protected\n  Size computeDryLayout(BoxConstraints constraints) {\n    assert(debugCannotComputeDryLayout(\n      error: FlutterError.fromParts(<DiagnosticsNode>["
  },
  {
    "id" : "79620007-3341-417d-9f4b-cb1ecb970142",
    "prId" : 70656,
    "prUrl" : "https://github.com/flutter/flutter/pull/70656#pullrequestreview-546514294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffa1547e-2510-48cf-be59-496f19008aeb",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "We should update the docs in `sizedByParent` to point the user in the right direction too",
        "createdAt" : "2020-12-02T19:55:27Z",
        "updatedAt" : "2020-12-02T20:03:37Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "7753527a-efb1-465c-86fd-a80cf3fc9570",
        "parentId" : "ffa1547e-2510-48cf-be59-496f19008aeb",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Will open a PR to add a note to sizedByParent.",
        "createdAt" : "2020-12-07T20:34:50Z",
        "updatedAt" : "2020-12-07T21:03:22Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "548b602633c3665c328f870251ee7672041b0af1",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1184,1188 @@/// Sizing purely based on the constraints allows the system to make some\n/// significant optimizations. Classes that use this approach should override\n/// [sizedByParent] to return true, and then override [computeDryLayout] to\n/// compute the [Size] using nothing but the constraints, e.g.:\n///"
  },
  {
    "id" : "45015238-948e-4270-a3f0-80f8292961a4",
    "prId" : 70656,
    "prUrl" : "https://github.com/flutter/flutter/pull/70656#pullrequestreview-547647284",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b589dd7-6660-491f-9172-10d0a2e75095",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "This seems like a hugely breaking change.  Many (if not most) render objects that set `sizedByParent` to true were likely relying on the old default behavior in `performResize`, and now they'll get assertion errors in the default implementation of `computeDryLayout`.\r\n\r\nI know this is listed as a breaking change, but was it intentional for it to break so many places?",
        "createdAt" : "2020-12-02T19:58:29Z",
        "updatedAt" : "2020-12-02T20:03:37Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "5596b1fd-47b7-4154-8bf1-ea994b1e82af",
        "parentId" : "1b589dd7-6660-491f-9172-10d0a2e75095",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "In the framework there appear to be a total of 16 RenderObject subclasses that set `sizedByParent` to true. Of those, only 2 used to rely on the default of `performResize` (constraints.smallest) and the remaining 14 had custom implementations. If I recall correctly, there also wasn't any customer_test that relied on the old default of `performResize`. With that, I wouldn't really call this \"hugely breaking\"...\r\n\r\nI considered making the default computeDryLayout return `constraints.smallest` if `sizedByParent` was set, but ultimately decided against making that method more complicated (and harder to reason about) since the impact of the change seemed so low. \r\n\r\nHaving said all that, is there something I missed that makes this change more breaking?",
        "createdAt" : "2020-12-07T21:03:17Z",
        "updatedAt" : "2020-12-07T21:03:22Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "f758bf16-98c7-4379-bdd6-f86ff2b19455",
        "parentId" : "1b589dd7-6660-491f-9172-10d0a2e75095",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Interesting.  When I ran across this, it's because I hit the error in my app; I had three render objects in which I had overridden `sizedByParent` to return true, and in all three cases, I was relying on the old default `performResize` behavior.\r\n\r\nBut based on your data, it seems I may be an outlier.",
        "createdAt" : "2020-12-08T21:28:21Z",
        "updatedAt" : "2020-12-08T21:28:21Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "82e7924f-003f-49d5-be46-c648a251e2da",
        "parentId" : "1b589dd7-6660-491f-9172-10d0a2e75095",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Side-note: once my app's done (and I write tests), I plan to add them to the customer tests 🙂 ",
        "createdAt" : "2020-12-08T21:29:05Z",
        "updatedAt" : "2020-12-08T21:29:05Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "548b602633c3665c328f870251ee7672041b0af1",
    "line" : 210,
    "diffHunk" : "@@ -1,1 +2302,2306 @@  void performResize() {\n    // default behavior for subclasses that have sizedByParent = true\n    size = computeDryLayout(constraints);\n    assert(size.isFinite);\n  }"
  },
  {
    "id" : "0b56dfae-6d49-49c8-93be-1dd9c14efbad",
    "prId" : 70656,
    "prUrl" : "https://github.com/flutter/flutter/pull/70656#pullrequestreview-546514294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db6bf2a8-d696-49e3-a164-64dd12b2ca4c",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "... or subclasses of `RenderBox` that set `sizedByParent` to true but _didn't_ override `performResize` (see comment below).",
        "createdAt" : "2020-12-02T20:03:33Z",
        "updatedAt" : "2020-12-02T20:03:37Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "cd95685c-916f-4bd5-935c-15f76b7dd0b4",
        "parentId" : "db6bf2a8-d696-49e3-a164-64dd12b2ca4c",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Will open a PR to add this.",
        "createdAt" : "2020-12-07T20:37:46Z",
        "updatedAt" : "2020-12-07T21:03:22Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "548b602633c3665c328f870251ee7672041b0af1",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +1809,1813 @@  /// function directly, instead, call [getDryLayout].\n  ///\n  /// Override in subclasses that implement [performLayout] or [performResize].\n  /// This method should return the [Size] that this [RenderBox] would like to\n  /// be given the provided [BoxConstraints]."
  },
  {
    "id" : "28a48f5a-acdc-4595-bcbc-bdb37982328f",
    "prId" : 70730,
    "prUrl" : "https://github.com/flutter/flutter/pull/70730#pullrequestreview-566797036",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98471e7b-b73d-4114-8f3e-880723b6b682",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we might want to put this on the docs for the computeIntrinsic* methods too, come to think of it",
        "createdAt" : "2021-01-12T18:45:21Z",
        "updatedAt" : "2021-01-12T23:54:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "9b6ee1bf-255e-48b5-aa97-10a5020e3f50",
        "parentId" : "98471e7b-b73d-4114-8f3e-880723b6b682",
        "authorId" : "724317e3-6a58-4157-9220-ec949b730300",
        "body" : "Done!",
        "createdAt" : "2021-01-12T23:59:03Z",
        "updatedAt" : "2021-01-12T23:59:04Z",
        "lastEditedBy" : "724317e3-6a58-4157-9220-ec949b730300",
        "tags" : [
        ]
      }
    ],
    "commit" : "a870bcb6f6e12b714ed9e0cbc6eca498a169356b",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +1345,1349 @@/// do override any of these methods, which will add additional checks to\n/// help validate your implementation.\n///\n/// In addition, if the box has any children, it must implement\n/// [computeDistanceToActualBaseline]. [RenderProxyBox] provides a simple"
  }
]