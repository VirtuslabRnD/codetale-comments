[
  {
    "id" : "fcf939a3-4f8b-4ecd-be6d-2e9f17494a71",
    "prId" : 3516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53460c68-a804-4e0d-ba11-d220594acd1a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "wow\n",
        "createdAt" : "2016-04-24T01:07:43Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53a5a525b0c035e3c7df9c96bff5343726e1578",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1050,1054 @@  double defaultComputeDistanceToFirstActualBaseline(TextBaseline baseline) {\n    assert(!needsLayout);\n    ChildType child = firstChild;\n    while (child != null) {\n      final ParentDataType childParentData = child.parentData;"
  },
  {
    "id" : "68ccc205-dbeb-4906-b062-9b17badf084c",
    "prId" : 3516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4bcd225-7e2f-4f59-901a-ddfd8c79ecf3",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Alternatively, this could be built as an iterator (with yield).\n",
        "createdAt" : "2016-04-24T01:08:23Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a241bea9-e2c7-4f4c-9628-731c31794c69",
        "parentId" : "b4bcd225-7e2f-4f59-901a-ddfd8c79ecf3",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "nevermind, i see what you're doing, an iterator wouldn't help\n",
        "createdAt" : "2016-04-24T01:27:41Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "4b24e6bf-c508-49d4-a2e9-f36f6d9cc0ba",
        "parentId" : "b4bcd225-7e2f-4f59-901a-ddfd8c79ecf3",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I'll make it an iterator and put the `toList` in the calling code.  That puts the slowness nearer to the reason for the slowness.\n",
        "createdAt" : "2016-04-24T02:24:42Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "267b5a44-4c54-40d1-ac4a-cf513706d62c",
        "parentId" : "b4bcd225-7e2f-4f59-901a-ddfd8c79ecf3",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Actually, I decided not to do that because it adds some nutty re-entrancy cases that I don't want to worry about (e.g., if someone mutates the tree while iterating the iterator).\n",
        "createdAt" : "2016-04-24T02:26:53Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "c6056aab-bf86-4d6b-ada7-367bcde25ec5",
        "parentId" : "b4bcd225-7e2f-4f59-901a-ddfd8c79ecf3",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yeah the way you use it an iterator doesn't make sense\n",
        "createdAt" : "2016-04-24T16:42:22Z",
        "updatedAt" : "2016-04-24T16:42:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53a5a525b0c035e3c7df9c96bff5343726e1578",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +1121,1125 @@    }\n    return result;\n  }\n}\n"
  }
]