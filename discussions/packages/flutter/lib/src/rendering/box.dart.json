[
  {
    "id" : "fcf939a3-4f8b-4ecd-be6d-2e9f17494a71",
    "prId" : 3516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53460c68-a804-4e0d-ba11-d220594acd1a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "wow\n",
        "createdAt" : "2016-04-24T01:07:43Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53a5a525b0c035e3c7df9c96bff5343726e1578",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1050,1054 @@  double defaultComputeDistanceToFirstActualBaseline(TextBaseline baseline) {\n    assert(!needsLayout);\n    ChildType child = firstChild;\n    while (child != null) {\n      final ParentDataType childParentData = child.parentData;"
  },
  {
    "id" : "68ccc205-dbeb-4906-b062-9b17badf084c",
    "prId" : 3516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4bcd225-7e2f-4f59-901a-ddfd8c79ecf3",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Alternatively, this could be built as an iterator (with yield).\n",
        "createdAt" : "2016-04-24T01:08:23Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a241bea9-e2c7-4f4c-9628-731c31794c69",
        "parentId" : "b4bcd225-7e2f-4f59-901a-ddfd8c79ecf3",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "nevermind, i see what you're doing, an iterator wouldn't help\n",
        "createdAt" : "2016-04-24T01:27:41Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "4b24e6bf-c508-49d4-a2e9-f36f6d9cc0ba",
        "parentId" : "b4bcd225-7e2f-4f59-901a-ddfd8c79ecf3",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I'll make it an iterator and put the `toList` in the calling code.  That puts the slowness nearer to the reason for the slowness.\n",
        "createdAt" : "2016-04-24T02:24:42Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "267b5a44-4c54-40d1-ac4a-cf513706d62c",
        "parentId" : "b4bcd225-7e2f-4f59-901a-ddfd8c79ecf3",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Actually, I decided not to do that because it adds some nutty re-entrancy cases that I don't want to worry about (e.g., if someone mutates the tree while iterating the iterator).\n",
        "createdAt" : "2016-04-24T02:26:53Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "c6056aab-bf86-4d6b-ada7-367bcde25ec5",
        "parentId" : "b4bcd225-7e2f-4f59-901a-ddfd8c79ecf3",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yeah the way you use it an iterator doesn't make sense\n",
        "createdAt" : "2016-04-24T16:42:22Z",
        "updatedAt" : "2016-04-24T16:42:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53a5a525b0c035e3c7df9c96bff5343726e1578",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +1121,1125 @@    }\n    return result;\n  }\n}\n"
  },
  {
    "id" : "a0ca4666-9b87-498d-b878-c2d8f4408903",
    "prId" : 4232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2168629c-8562-43e9-b23f-2fb97d26c01b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "mention that this is called for every render box if debugPaintSizeEnabled is true\n",
        "createdAt" : "2016-05-27T07:32:27Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "69ef23a7a145657fef2050fefab2e255a1e2bc95",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +1011,1015 @@  }\n\n  /// In debug mode, paints a border around this render box.\n  ///\n  /// Called for every [RenderBox] when [debugPaintSizeEnabled] is true."
  },
  {
    "id" : "a7182a67-7e41-4333-8fda-daf98f6081ff",
    "prId" : 4232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d5badae-04bb-4209-a678-46b3b152bdd7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "mention debugPaintBaselinesEnabled\n",
        "createdAt" : "2016-05-27T07:32:35Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "69ef23a7a145657fef2050fefab2e255a1e2bc95",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +1025,1029 @@  }\n\n  /// In debug mode, paints a line for each baseline.\n  ///\n  /// Called for every [RenderBox] when [debugPaintBaselinesEnabled] is true."
  },
  {
    "id" : "1195ecdf-96cc-4884-8bb9-0093868eea07",
    "prId" : 4232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e15852b-c354-4783-8ac7-7ea63680c8df",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "mention the debug flag for this one too\n",
        "createdAt" : "2016-05-27T07:32:43Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "69ef23a7a145657fef2050fefab2e255a1e2bc95",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +1056,1060 @@  }\n\n  /// In debug mode, paints a rectangle if this render box has received more pointer downs than pointer up events.\n  ///\n  /// Called for every [RenderBox] when [debugPaintPointersEnabled] is true."
  },
  {
    "id" : "e95c8882-cbc7-431b-8cfb-69efea5945dd",
    "prId" : 4232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a7e4281-7855-4c77-9693-646f406a1ddf",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "mention that this isn't especially cheap (why do we even have this?)\n",
        "createdAt" : "2016-05-27T07:33:10Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "48025173-2b15-4684-be54-f3743f517f6d",
        "parentId" : "6a7e4281-7855-4c77-9693-646f406a1ddf",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "It's used by Flow, which needs random access to the children.\n",
        "createdAt" : "2016-05-27T15:37:16Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "69ef23a7a145657fef2050fefab2e255a1e2bc95",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +1153,1157 @@  }\n\n  /// Returns a list containing the children of this render object.\n  ///\n  /// This function is useful when you need random-access to the children of"
  },
  {
    "id" : "5a450bba-4a18-4549-b01f-f32a2f293918",
    "prId" : 9330,
    "prUrl" : "https://github.com/flutter/flutter/pull/9330#pullrequestreview-33679127",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c912586-4c18-466d-a389-86e6423e8ad0",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Not sure how I feel about this one. I'd intentionally put in the \"this\" to match the \"child\" case below.\r\nI guess I'll live with it.",
        "createdAt" : "2017-04-20T05:50:42Z",
        "updatedAt" : "2017-04-20T07:27:12Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "25a9c9bc9b7f89430309d636714bdab0d98d387e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1770,1774 @@          '$runtimeType does not implement applyPaintTransform.\\n'\n          'The following $runtimeType object:\\n'\n          '  ${toStringShallow()}\\n'\n          '...did not use a BoxParentData class for the parentData field of the following child:\\n'\n          '  ${child.toStringShallow()}\\n'"
  },
  {
    "id" : "4474dc72-f5d9-49b7-a6e4-de01d610feac",
    "prId" : 10653,
    "prUrl" : "https://github.com/flutter/flutter/pull/10653#pullrequestreview-43782486",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d83aeb2c-11a3-416a-825b-b17ecfc6dc01",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "You might want to say something about how the parent picks the child's position after the child has picked its size.  In other system, the child has a Rect rather than a Size, which means it knows its position as well as its size.  One of the unusual things about our system is that we separate those two pieces.",
        "createdAt" : "2017-06-13T15:07:41Z",
        "updatedAt" : "2017-06-13T16:40:04Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "20777ba3-6598-4289-a622-e022b161db6d",
        "parentId" : "d83aeb2c-11a3-416a-825b-b17ecfc6dc01",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Added:\r\n```\r\n/// Render objects position their children independently of laying them out.\r\n/// Frequently, the parent will use the children's sizes to determine their\r\n/// position. A child does not know its position and will not necessarily be\r\n/// laid out again, or repainted, if its position changes.\r\n```",
        "createdAt" : "2017-06-13T16:35:52Z",
        "updatedAt" : "2017-06-13T16:40:04Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c07e38b9e5ccd16feacad77377df7e008399817",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +52,56 @@/// Each [RenderBox] (the objects that provide the layout models for box\n/// widgets) receives [BoxConstraints] from its parent, then lays out each of\n/// its children, then picks a [Size] that satisfies the [BoxConstraints].\n///\n/// Render objects position their children independently of laying them out."
  },
  {
    "id" : "ff4a1bcf-7de2-430e-91ff-72a18fe37fcd",
    "prId" : 11343,
    "prUrl" : "https://github.com/flutter/flutter/pull/11343#pullrequestreview-51560427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8397d26-71ef-4d01-80c7-584b27de3215",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "unrelated to changes in this PR: I wonder if the existence of this subclass causes the AOT compiler to believe that `Size` is polymorphic and makes it slower than it could be.\r\n\r\n@rmacnak-google?",
        "createdAt" : "2017-07-21T19:08:33Z",
        "updatedAt" : "2017-07-21T20:44:16Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3712f941d4cc82f366b1c5f77e6894890797e89f",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +15,19 @@\n// This class should only be used in debug builds.\nclass _DebugSize extends Size {\n  _DebugSize(Size source, this._owner, this._canBeUsedByParent) : super.copy(source);\n  final RenderBox _owner;"
  },
  {
    "id" : "f76e8006-b7f6-4a5a-951e-3a16df569f11",
    "prId" : 11343,
    "prUrl" : "https://github.com/flutter/flutter/pull/11343#pullrequestreview-51580225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89c6f2d4-8987-4efa-bb4b-201d721c101c",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "s/object/box/?",
        "createdAt" : "2017-07-21T19:12:15Z",
        "updatedAt" : "2017-07-21T20:44:16Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "60c2fff8-7b7e-4f40-a7d2-7164db0729c5",
        "parentId" : "89c6f2d4-8987-4efa-bb4b-201d721c101c",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It would make the later text confusing (\"this second render object\" wouldn't be as obvious), so I've left it as object.",
        "createdAt" : "2017-07-21T20:38:56Z",
        "updatedAt" : "2017-07-21T20:44:16Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3712f941d4cc82f366b1c5f77e6894890797e89f",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +1513,1517 @@            throw new FlutterError(\n              'The size property was assigned a size inappropriately.\\n'\n              'The following render object:\\n'\n              '  $this\\n'\n              '...was assigned a size obtained from:\\n'"
  },
  {
    "id" : "a909dd47-0ec3-476f-bdb5-054a9c6cea97",
    "prId" : 22985,
    "prUrl" : "https://github.com/flutter/flutter/pull/22985#pullrequestreview-165862500",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76c240f6-18c4-4a53-984e-4fcf9fecb91c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "What's the likely performance impact of this change? (This code is potentially hot in certain cases.)",
        "createdAt" : "2018-10-17T21:24:41Z",
        "updatedAt" : "2018-10-18T00:22:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "4acba41b-fe14-47b0-baa8-e04ceddf23a8",
        "parentId" : "76c240f6-18c4-4a53-984e-4fcf9fecb91c",
        "authorId" : "cebd9d94-b15e-4cc3-a8fb-3b59bef95c73",
        "body" : "I went ahead and optimized it slightly, but it shouldn't be bad either way since it's still relatively light weight (only four divisions) and is only called O(1) times per frame. It could be optimized further, but likely not worth it.",
        "createdAt" : "2018-10-17T22:29:56Z",
        "updatedAt" : "2018-10-18T00:22:31Z",
        "lastEditedBy" : "cebd9d94-b15e-4cc3-a8fb-3b59bef95c73",
        "tags" : [
        ]
      }
    ],
    "commit" : "200106e5e75c2f9eb3d2d0a02c3607bf81ad190d",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +2023,2027 @@    final Vector3 s = transform.perspectiveTransform(Vector3(point.dx, point.dy, 0.0));\n    final Vector3 p = s - d * (n.dot(s) / n.dot(d));\n    return Offset(p.x, p.y);\n  }\n"
  }
]