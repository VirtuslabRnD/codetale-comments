[
  {
    "id" : "cbe4c578-b433-4f76-933d-a6a66d6eae0f",
    "prId" : 1309,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c7f7b55-b4c6-495f-93cc-942156d8a2ca",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I really don't like that we're building the tree upside down. It'd be much cleaner if it built it straight down. ~~I think this might be part of the cause of the bug where things are getting lost (drop the popup menu, cancel it, drop it again, the box that would be getting the cancel isn't included the second time).~~\n",
        "createdAt" : "2016-01-20T02:56:13Z",
        "updatedAt" : "2016-01-27T18:04:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a1788371bd78a74f763aab26bca87e92224cc7",
    "line" : 215,
    "diffHunk" : "@@ -1,1 +213,217 @@            // TODO(ianh): Find a way to assert that the same node didn't\n            // actually appear in the tree in two places.\n            child.parent?.dropChild(child);\n          }\n          assert(!child.attached);"
  },
  {
    "id" : "cbd73030-b6ff-4534-aa19-b7fe0a333d62",
    "prId" : 1309,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "045348ac-d4c3-4dbd-a484-9e8cbd7e32a9",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "assert(! _detachedNodes.contains(this))\n",
        "createdAt" : "2016-01-26T07:58:20Z",
        "updatedAt" : "2016-01-27T18:04:54Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a1788371bd78a74f763aab26bca87e92224cc7",
    "line" : 267,
    "diffHunk" : "@@ -1,1 +265,269 @@  void detach() {\n    super.detach();\n    assert(_nodes.containsKey(_id));\n    assert(!_detachedNodes.contains(this));\n    _nodes.remove(_id);"
  },
  {
    "id" : "8909c133-46f0-4ae6-b991-c4575c6add9e",
    "prId" : 1309,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f18e157f-5ad2-46e3-b6aa-074138ff30cb",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "assert(node._dirty)\n",
        "createdAt" : "2016-01-26T08:01:00Z",
        "updatedAt" : "2016-01-27T18:04:54Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a1788371bd78a74f763aab26bca87e92224cc7",
    "line" : 349,
    "diffHunk" : "@@ -1,1 +347,351 @@    for (int index = 0; index < _dirtyNodes.length; index += 1) {\n      // we mutate the list as we walk it here, which is why we use an index instead of an iterator\n      SemanticsNode node = _dirtyNodes[index];\n      assert(node._dirty);\n      assert(node.parent == null || !node.parent.mergeAllDescendantsIntoThisNode || node.mergeAllDescendantsIntoThisNode);"
  },
  {
    "id" : "fefbe08f-722b-4eeb-a051-6135dfd09709",
    "prId" : 4232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f752426-1224-4c70-b1eb-704390b3a50a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yeah. there's a bug on this.\n",
        "createdAt" : "2016-05-27T07:47:39Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "54ac8672-8e09-4152-967b-78f32cfc02d6",
        "parentId" : "9f752426-1224-4c70-b1eb-704390b3a50a",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "oh actually the bug is about something related, namely that we should shut down semantics processing while we have no listeners. but similar idea.\n",
        "createdAt" : "2016-05-27T07:48:05Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "d6ab214d-78b3-4d39-959b-9775c4f0d0e4",
        "parentId" : "9f752426-1224-4c70-b1eb-704390b3a50a",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I added a link to the bug.\n",
        "createdAt" : "2016-05-27T15:46:54Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "69ef23a7a145657fef2050fefab2e255a1e2bc95",
    "line" : 229,
    "diffHunk" : "@@ -1,1 +551,555 @@  @override\n  void addSemanticsListener(mojom.SemanticsListenerProxy listener) {\n    // TODO(abarth): We should remove the listener when this pipe closes.\n    // See <https://github.com/flutter/flutter/issues/3342>.\n    SemanticsNode.addListener(listener.ptr);"
  },
  {
    "id" : "e8664870-f485-4f1c-b4f7-8fad544c0c50",
    "prId" : 4791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "274d4d00-8be1-4b5a-9c7a-b4a35b355cbf",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "`addAdjustmentActions()`?\n",
        "createdAt" : "2016-06-30T17:23:52Z",
        "updatedAt" : "2016-07-01T00:18:46Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "2bc81003-2c90-4489-bd44-0f3c955f0cd5",
        "parentId" : "274d4d00-8be1-4b5a-9c7a-b4a35b355cbf",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Probably a good idea.  I was going to wait to add that until I added the first client (which will be Slider).\n",
        "createdAt" : "2016-06-30T17:28:52Z",
        "updatedAt" : "2016-07-01T00:18:46Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "043ed09b8804630d86f98f4e30e98ed51b808c7f",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +146,150 @@    addAction(SemanticAction.scrollDown);\n  }\n\n  bool _hasAction(SemanticAction action) {\n    return _actionHandler != null && _actions.contains(action);"
  },
  {
    "id" : "4c2e2bda-43e4-46fd-9a27-127f20a36292",
    "prId" : 4791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4593a06c-5ded-4e6c-90b9-403b25922d7d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "missing dartdocs :-)\n",
        "createdAt" : "2016-06-30T17:35:52Z",
        "updatedAt" : "2016-07-01T00:18:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "043ed09b8804630d86f98f4e30e98ed51b808c7f",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +14,18 @@import 'node.dart';\n\nenum SemanticAction {\n  tap,\n  longPress,"
  },
  {
    "id" : "98b360ba-060d-4d28-b763-5c4cb958b5cf",
    "prId" : 4791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87f2e7e4-5286-46e1-922d-ab91824a2280",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "rather than ignoring one_member_abstracts, maybe we should just provide a callback? is there a benefit to us continuing to provide the whole class instead?\n",
        "createdAt" : "2016-06-30T17:36:40Z",
        "updatedAt" : "2016-07-01T00:18:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "043ed09b8804630d86f98f4e30e98ed51b808c7f",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +32,36 @@/// [SemanticsNode.canBeTapped] is true, [handleSemanticScrollDown]() will only\n/// be called if [SemanticsNode.canBeScrolledVertically] is true, etc).\nabstract class SemanticActionHandler { // ignore: one_member_abstracts\n  void performAction(SemanticAction action);\n}"
  },
  {
    "id" : "7ed82be8-a1fb-4fb8-9c2d-a518a8a2fa15",
    "prId" : 4791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f1da093-ae52-4493-8a58-1c4149bc9860",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "if you're not removing this (which i think you probably are), we should change \"The type of function\" to \"Signature of function\".\n",
        "createdAt" : "2016-06-30T19:18:18Z",
        "updatedAt" : "2016-07-01T00:18:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "043ed09b8804630d86f98f4e30e98ed51b808c7f",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +36,40 @@}\n\n/// The type of function returned by [RenderObject.getSemanticAnnotators()].\n///\n/// These callbacks are called with the [SemanticsNode] object that"
  },
  {
    "id" : "a921d8c2-8b18-4dc3-9c98-f0b66d4011e7",
    "prId" : 6234,
    "prUrl" : "https://github.com/flutter/flutter/pull/6234#pullrequestreview-3174275",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6075bd7c-b5f1-4a7c-b1ca-e824e4f1f881",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Heh, I recall working hard to avoid `values.values` in the past. :-)\n",
        "createdAt" : "2016-10-06T18:00:16Z",
        "updatedAt" : "2016-10-06T18:00:16Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "87fd5f67-3a34-447d-8a3f-cbd76a321fcb",
        "parentId" : "6075bd7c-b5f1-4a7c-b1ca-e824e4f1f881",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, I was originally trying to make `SemanticsAction` look as much like an enum as possible, but it's not really what you want because `values` is a map...\n",
        "createdAt" : "2016-10-06T18:29:36Z",
        "updatedAt" : "2016-10-06T18:29:36Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "53f329d9d74ee0bc9889725c1c49141bf876a6f8",
    "line" : 225,
    "diffHunk" : "@@ -1,1 +439,443 @@    if (wasAffectedByClip)\n      buffer.write(' (clipped)');\n    for (SemanticsAction action in SemanticsAction.values.values) {\n      if ((_actions & action.index) != 0)\n        buffer.write('; $action');"
  },
  {
    "id" : "de9a631e-ac4e-4aa1-a972-183fa09d227b",
    "prId" : 6252,
    "prUrl" : "https://github.com/flutter/flutter/pull/6252#pullrequestreview-3399032",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c754d98c-bd27-4ce3-ba0d-8e39dc9180b3",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "self-evident doc. though i'm not sure what we could add.\n",
        "createdAt" : "2016-10-07T23:24:23Z",
        "updatedAt" : "2016-10-08T02:37:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "1440ac76-c446-42f7-ac98-86fd5528de7f",
        "parentId" : "c754d98c-bd27-4ce3-ba0d-8e39dc9180b3",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "We can say the fields must not be null.\n",
        "createdAt" : "2016-10-08T01:13:16Z",
        "updatedAt" : "2016-10-08T02:37:02Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "cfcc1038f128afac3d817bb4f0f58f5d003c9405",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +56,60 @@/// Typically obtained from [SemanticsNode.getSemanticsData].\nclass SemanticsData {\n  /// Creates a semantics data object.\n  ///\n  /// The [flags], [actions], [label], and [rect] arguments must not be null."
  },
  {
    "id" : "b5b04e92-2a9a-4c82-9af1-0b0b2ff1bad1",
    "prId" : 6268,
    "prUrl" : "https://github.com/flutter/flutter/pull/6268#pullrequestreview-3749904",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c35aefe1-864a-4a8c-b053-d30ec86359c5",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "should they all be @required maybe?\n",
        "createdAt" : "2016-10-11T19:44:30Z",
        "updatedAt" : "2016-10-11T19:44:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9db6c06d039ed34d2b1142b88af2f03526185177",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +547,551 @@      label: data.label,\n      transform: data.transform?.storage ?? _kIdentityTransform,\n      children: children,\n    );\n    _dirty = false;"
  },
  {
    "id" : "ee62d1a4-3f11-40a3-955a-18ba0c95f568",
    "prId" : 7996,
    "prUrl" : "https://github.com/flutter/flutter/pull/7996#pullrequestreview-20915657",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5f712cb-af29-43be-ace5-d9112551e1e5",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "@abarth changes in this file are new since your review. they fix a bug we've seen people complain about which the gallery test started hitting (presumably because it's now lazy -- it's about when you move nodes out of the tree with semantics on)",
        "createdAt" : "2017-02-09T01:50:36Z",
        "updatedAt" : "2017-02-09T01:50:36Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b309daa5d15cf961835f69db6e640880d19d9ff",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +471,475 @@    assert(owner._nodes.containsKey(id));\n    assert(!owner._detachedNodes.contains(this));\n    owner._nodes.remove(id);\n    owner._detachedNodes.add(this);\n    super.detach();"
  },
  {
    "id" : "09d98691-d2cf-4165-9c4a-948b7342cffa",
    "prId" : 11888,
    "prUrl" : "https://github.com/flutter/flutter/pull/11888#pullrequestreview-60249826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76d2bd48-9775-4345-ba72-5b291ec22535",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "No cool diagnostics node here!",
        "createdAt" : "2017-09-01T04:20:22Z",
        "updatedAt" : "2017-09-07T23:29:30Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "46c0bbcb-1355-4800-91ac-360fba906787",
        "parentId" : "76d2bd48-9775-4345-ba72-5b291ec22535",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Yeah, @jacob314 didn't convert the semantics logic to use the new diagnostics logic. And @goderbauer has since made it much harder to do so by introducing a way to control what order they're painted in. It's a whole thing. ;-)",
        "createdAt" : "2017-09-01T19:22:55Z",
        "updatedAt" : "2017-09-07T23:29:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "f1ab50bb-0c0a-4736-a489-a0b0fb86aaff",
        "parentId" : "76d2bd48-9775-4345-ba72-5b291ec22535",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "I'll go ahead and work on converting the Semantics logic now.I don't expect being able to display the data in two orders should be that big an issue to support. ",
        "createdAt" : "2017-09-01T19:56:14Z",
        "updatedAt" : "2017-09-07T23:29:30Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "75dd975e-adbb-487e-87ab-7a5b844f05cc",
        "parentId" : "76d2bd48-9775-4345-ba72-5b291ec22535",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Oh sweet, thanks!",
        "createdAt" : "2017-09-01T21:53:56Z",
        "updatedAt" : "2017-09-07T23:29:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e327e2bc2a495503f14ea998f046626aee33ec5b",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +161,165 @@    if (textDirection != null)\n      buffer.write('; $textDirection');\n    buffer.write(')');\n    return buffer.toString();\n  }"
  },
  {
    "id" : "282904f7-0a4e-4ea8-b1ac-66999c69ed95",
    "prId" : 11909,
    "prUrl" : "https://github.com/flutter/flutter/pull/11909#pullrequestreview-61067939",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e47502c2-9d8a-415b-9b13-1dbfa628840d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this should talk about why you would do this.",
        "createdAt" : "2017-09-06T22:23:27Z",
        "updatedAt" : "2017-09-06T23:54:03Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a25d0788592c73c986c415bda28310df4aeb82e6",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +660,664 @@  }\n\n  /// Sends a [SemanticsEvent] associated with this [SemanticsNode].\n  ///\n  /// Semantics events should be sent to inform interested parties (like"
  },
  {
    "id" : "53084572-f7da-4310-acce-f679c41e72bd",
    "prId" : 12332,
    "prUrl" : "https://github.com/flutter/flutter/pull/12332#pullrequestreview-66285920",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba27782a-8fa4-4b17-b965-644776267181",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "should these bools go in the flags?",
        "createdAt" : "2017-09-29T22:15:13Z",
        "updatedAt" : "2017-09-29T22:39:23Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "f5a565be-4c0f-47a8-bbef-42a5648ba6c4",
        "parentId" : "ba27782a-8fa4-4b17-b965-644776267181",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "They are currently not transfered to the engine side and only processed on the framework side. That's why I've kept them separate from the flags for now. ",
        "createdAt" : "2017-09-29T22:26:34Z",
        "updatedAt" : "2017-09-29T22:39:23Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "e545e7c7855dfaa2188518179b5a275ee798df41",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +351,355 @@    _isMergedIntoParent = value;\n    _markDirty();\n  }\n\n  /// Whether this node is taking part in a merge of semantic information."
  },
  {
    "id" : "64c5978e-0c92-4ba0-b1a3-69bb1897c21f",
    "prId" : 12821,
    "prUrl" : "https://github.com/flutter/flutter/pull/12821#pullrequestreview-73909372",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57b28544-6d29-4680-947b-42230e43c5fd",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "need a blank line after `See also:` otherwise markdown gets confused",
        "createdAt" : "2017-11-02T19:17:40Z",
        "updatedAt" : "2017-11-02T19:17:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac30598de381f1dddc9f5ecd1abb3e94931fe990",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +1236,1240 @@  ///\n  /// See also:\n  ///  * [addTagForChildren] to add a tag and for more information about their\n  ///    usage.\n  Iterable<SemanticsTag> get tagsForChildren => _tagsForChildren;"
  },
  {
    "id" : "33fb5455-01fb-4ae1-b2f9-3c787521b4b9",
    "prId" : 12821,
    "prUrl" : "https://github.com/flutter/flutter/pull/12821#pullrequestreview-73909428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c59eb84e-934c-4a21-84c1-67ec7636d202",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ditto",
        "createdAt" : "2017-11-02T19:17:53Z",
        "updatedAt" : "2017-11-02T19:17:53Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac30598de381f1dddc9f5ecd1abb3e94931fe990",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +1253,1257 @@  ///\n  /// See also:\n  ///  * [RenderSemanticsGestureHandler.excludeFromScrolling] for an example of\n  ///    how tags are used.\n  void addTagForChildren(SemanticsTag tag) {"
  }
]