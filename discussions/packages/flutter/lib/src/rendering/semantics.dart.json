[
  {
    "id" : "cbe4c578-b433-4f76-933d-a6a66d6eae0f",
    "prId" : 1309,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c7f7b55-b4c6-495f-93cc-942156d8a2ca",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I really don't like that we're building the tree upside down. It'd be much cleaner if it built it straight down. ~~I think this might be part of the cause of the bug where things are getting lost (drop the popup menu, cancel it, drop it again, the box that would be getting the cancel isn't included the second time).~~\n",
        "createdAt" : "2016-01-20T02:56:13Z",
        "updatedAt" : "2016-01-27T18:04:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a1788371bd78a74f763aab26bca87e92224cc7",
    "line" : 215,
    "diffHunk" : "@@ -1,1 +213,217 @@            // TODO(ianh): Find a way to assert that the same node didn't\n            // actually appear in the tree in two places.\n            child.parent?.dropChild(child);\n          }\n          assert(!child.attached);"
  },
  {
    "id" : "cbd73030-b6ff-4534-aa19-b7fe0a333d62",
    "prId" : 1309,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "045348ac-d4c3-4dbd-a484-9e8cbd7e32a9",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "assert(! _detachedNodes.contains(this))\n",
        "createdAt" : "2016-01-26T07:58:20Z",
        "updatedAt" : "2016-01-27T18:04:54Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a1788371bd78a74f763aab26bca87e92224cc7",
    "line" : 267,
    "diffHunk" : "@@ -1,1 +265,269 @@  void detach() {\n    super.detach();\n    assert(_nodes.containsKey(_id));\n    assert(!_detachedNodes.contains(this));\n    _nodes.remove(_id);"
  },
  {
    "id" : "8909c133-46f0-4ae6-b991-c4575c6add9e",
    "prId" : 1309,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f18e157f-5ad2-46e3-b6aa-074138ff30cb",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "assert(node._dirty)\n",
        "createdAt" : "2016-01-26T08:01:00Z",
        "updatedAt" : "2016-01-27T18:04:54Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a1788371bd78a74f763aab26bca87e92224cc7",
    "line" : 349,
    "diffHunk" : "@@ -1,1 +347,351 @@    for (int index = 0; index < _dirtyNodes.length; index += 1) {\n      // we mutate the list as we walk it here, which is why we use an index instead of an iterator\n      SemanticsNode node = _dirtyNodes[index];\n      assert(node._dirty);\n      assert(node.parent == null || !node.parent.mergeAllDescendantsIntoThisNode || node.mergeAllDescendantsIntoThisNode);"
  },
  {
    "id" : "fefbe08f-722b-4eeb-a051-6135dfd09709",
    "prId" : 4232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f752426-1224-4c70-b1eb-704390b3a50a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yeah. there's a bug on this.\n",
        "createdAt" : "2016-05-27T07:47:39Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "54ac8672-8e09-4152-967b-78f32cfc02d6",
        "parentId" : "9f752426-1224-4c70-b1eb-704390b3a50a",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "oh actually the bug is about something related, namely that we should shut down semantics processing while we have no listeners. but similar idea.\n",
        "createdAt" : "2016-05-27T07:48:05Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "d6ab214d-78b3-4d39-959b-9775c4f0d0e4",
        "parentId" : "9f752426-1224-4c70-b1eb-704390b3a50a",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I added a link to the bug.\n",
        "createdAt" : "2016-05-27T15:46:54Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "69ef23a7a145657fef2050fefab2e255a1e2bc95",
    "line" : 229,
    "diffHunk" : "@@ -1,1 +551,555 @@  @override\n  void addSemanticsListener(mojom.SemanticsListenerProxy listener) {\n    // TODO(abarth): We should remove the listener when this pipe closes.\n    // See <https://github.com/flutter/flutter/issues/3342>.\n    SemanticsNode.addListener(listener.ptr);"
  },
  {
    "id" : "e8664870-f485-4f1c-b4f7-8fad544c0c50",
    "prId" : 4791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "274d4d00-8be1-4b5a-9c7a-b4a35b355cbf",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "`addAdjustmentActions()`?\n",
        "createdAt" : "2016-06-30T17:23:52Z",
        "updatedAt" : "2016-07-01T00:18:46Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "2bc81003-2c90-4489-bd44-0f3c955f0cd5",
        "parentId" : "274d4d00-8be1-4b5a-9c7a-b4a35b355cbf",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Probably a good idea.  I was going to wait to add that until I added the first client (which will be Slider).\n",
        "createdAt" : "2016-06-30T17:28:52Z",
        "updatedAt" : "2016-07-01T00:18:46Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "043ed09b8804630d86f98f4e30e98ed51b808c7f",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +146,150 @@    addAction(SemanticAction.scrollDown);\n  }\n\n  bool _hasAction(SemanticAction action) {\n    return _actionHandler != null && _actions.contains(action);"
  },
  {
    "id" : "4c2e2bda-43e4-46fd-9a27-127f20a36292",
    "prId" : 4791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4593a06c-5ded-4e6c-90b9-403b25922d7d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "missing dartdocs :-)\n",
        "createdAt" : "2016-06-30T17:35:52Z",
        "updatedAt" : "2016-07-01T00:18:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "043ed09b8804630d86f98f4e30e98ed51b808c7f",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +14,18 @@import 'node.dart';\n\nenum SemanticAction {\n  tap,\n  longPress,"
  },
  {
    "id" : "98b360ba-060d-4d28-b763-5c4cb958b5cf",
    "prId" : 4791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87f2e7e4-5286-46e1-922d-ab91824a2280",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "rather than ignoring one_member_abstracts, maybe we should just provide a callback? is there a benefit to us continuing to provide the whole class instead?\n",
        "createdAt" : "2016-06-30T17:36:40Z",
        "updatedAt" : "2016-07-01T00:18:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "043ed09b8804630d86f98f4e30e98ed51b808c7f",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +32,36 @@/// [SemanticsNode.canBeTapped] is true, [handleSemanticScrollDown]() will only\n/// be called if [SemanticsNode.canBeScrolledVertically] is true, etc).\nabstract class SemanticActionHandler { // ignore: one_member_abstracts\n  void performAction(SemanticAction action);\n}"
  },
  {
    "id" : "7ed82be8-a1fb-4fb8-9c2d-a518a8a2fa15",
    "prId" : 4791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f1da093-ae52-4493-8a58-1c4149bc9860",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "if you're not removing this (which i think you probably are), we should change \"The type of function\" to \"Signature of function\".\n",
        "createdAt" : "2016-06-30T19:18:18Z",
        "updatedAt" : "2016-07-01T00:18:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "043ed09b8804630d86f98f4e30e98ed51b808c7f",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +36,40 @@}\n\n/// The type of function returned by [RenderObject.getSemanticAnnotators()].\n///\n/// These callbacks are called with the [SemanticsNode] object that"
  }
]