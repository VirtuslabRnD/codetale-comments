[
  {
    "id" : "1a8630de-7cb1-4054-b89d-0b3ce86bf3ed",
    "prId" : 3243,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cf92189-c770-4a3b-b6be-1b9e062349c1",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Why wouldn't this have `isAppliedConstraint: true`?\n",
        "createdAt" : "2016-04-11T17:47:21Z",
        "updatedAt" : "2016-04-11T17:47:21Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "cfee3cc2-8427-4c60-a0fb-0fb5045cac39",
        "parentId" : "9cf92189-c770-4a3b-b6be-1b9e062349c1",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It can be if you think it should. I wasn't really sure what the semantics of minWidth for Paragraph were and wasn't sure if infinity made sense for that.\n",
        "createdAt" : "2016-04-11T18:03:08Z",
        "updatedAt" : "2016-04-11T18:03:08Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "43d8abad-0943-47e9-8ef8-0c98d1f42ba1",
        "parentId" : "9cf92189-c770-4a3b-b6be-1b9e062349c1",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I think it's ignored.  We really need to re-work the Paragraph API to make actual sense.\n",
        "createdAt" : "2016-04-11T18:07:54Z",
        "updatedAt" : "2016-04-11T18:07:54Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "f7b90d25-a17e-4bcc-9b64-99b3793fdaef",
        "parentId" : "9cf92189-c770-4a3b-b6be-1b9e062349c1",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Ok. I won't bother adding the extra assert here then since it would just add extra places for people to trip over that aren't actually real bugs.\n",
        "createdAt" : "2016-04-11T18:10:07Z",
        "updatedAt" : "2016-04-11T18:10:07Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3771048fdafd25445baf18a9ea8cd866252f7eb4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +37,41 @@  void _layoutText(BoxConstraints constraints) {\n    assert(constraints != null);\n    assert(constraints.debugAssertIsValid());\n    if (_constraintsForCurrentLayout == constraints)\n      return; // already cached this layout"
  },
  {
    "id" : "a83ae4e5-3080-4898-80b5-10b2d88190bd",
    "prId" : 3818,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "082a2e82-0e90-4cd5-987f-bdec9397075b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "could be final\n",
        "createdAt" : "2016-05-09T22:32:59Z",
        "updatedAt" : "2016-05-09T22:49:49Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b29931d028a1616b1f3fbf6bb0295b1b735420d",
    "line" : 165,
    "diffHunk" : "@@ -1,1 +221,225 @@        if (_overflow == TextOverflow.ellipsis) {\n          // TODO(abarth): This paint offset has an LTR bias.\n          Offset ellipseOffset = new Offset(size.width - _overflowPainter.width, 0.0);\n          _overflowPainter.paint(canvas, ellipseOffset);\n        }"
  },
  {
    "id" : "fcecf31f-b7aa-4289-a2dd-162f0c797be2",
    "prId" : 3818,
    "prUrl" : "https://github.com/flutter/flutter/pull/3818#pullrequestreview-42970597",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7322227b-650a-43ed-bf65-a96f7a180dc6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "@abarth Doesn't this mean that textAligns other than left won't work when softWrap is false?",
        "createdAt" : "2017-06-08T01:15:33Z",
        "updatedAt" : "2017-06-08T01:15:33Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "530fc45d-76c0-48f3-b688-674d3bce06a1",
        "parentId" : "7322227b-650a-43ed-bf65-a96f7a180dc6",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "In principle it should work because this is just the max width.  We layout the text twice: once to get the intrinsic width and once at that width (subject to these constraints).\r\n\r\nWith libtxt, we can do this more efficiently because we'll be able to compute the intrinsic sizes without actually doing a fully layout.",
        "createdAt" : "2017-06-08T03:10:58Z",
        "updatedAt" : "2017-06-08T03:10:58Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "a9fd0daf-a207-406a-8b15-3d50ca7b63d2",
        "parentId" : "7322227b-650a-43ed-bf65-a96f7a180dc6",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "But if softWrap is false, we always lay out at infinity width, even when we do the actual \"real\" layout, and then if text-align isn't left, the text ends up infinitely far to the right, no?",
        "createdAt" : "2017-06-08T15:53:50Z",
        "updatedAt" : "2017-06-08T15:53:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "f37f6f03-2f7c-4e75-87a7-d1d6613e0797",
        "parentId" : "7322227b-650a-43ed-bf65-a96f7a180dc6",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "We layout with a max width of infinite, that doesn't mean the width will end up as infinity.",
        "createdAt" : "2017-06-08T16:02:20Z",
        "updatedAt" : "2017-06-08T16:02:20Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "d106b69b-bcff-4125-bd84-18930986ceae",
        "parentId" : "7322227b-650a-43ed-bf65-a96f7a180dc6",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "so if softWrap is false, and you overflow, you'll be aligned relative to an arbitrary point off the edge, but otherwise it'll work. I see. That makes sort of sense I guess.",
        "createdAt" : "2017-06-08T18:12:48Z",
        "updatedAt" : "2017-06-08T18:12:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b29931d028a1616b1f3fbf6bb0295b1b735420d",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +91,95 @@    assert(constraints != null);\n    assert(constraints.debugAssertIsValid());\n    _textPainter.layout(minWidth: constraints.minWidth, maxWidth: _softWrap ? constraints.maxWidth : double.INFINITY);\n  }\n"
  },
  {
    "id" : "8cecaa73-75d9-4ece-bec9-5710813c9325",
    "prId" : 4391,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e393f67-7d6d-4ae6-8a38-a197a258fdf7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "hmm, this is a problem. Can you file a bug on me to take a closer look at this?\n",
        "createdAt" : "2016-06-07T02:26:06Z",
        "updatedAt" : "2016-06-07T02:26:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "cb8d0daa-f19c-432a-88b0-7f1f920d7905",
        "parentId" : "5e393f67-7d6d-4ae6-8a38-a197a258fdf7",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Filed https://github.com/flutter/flutter/issues/4413\n",
        "createdAt" : "2016-06-07T02:56:30Z",
        "updatedAt" : "2016-06-07T02:56:30Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "45321527fe4bd188e8a1b7de6947505e060a08df",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +149,153 @@  void performLayout() {\n    _layoutText(minWidth: constraints.minWidth, maxWidth: constraints.maxWidth);\n    // We grab _textPainter.size here because assigning to `size` will trigger\n    // us to validate our intrinsic sizes, which will change _textPainter's\n    // layout because the intrinsic size calculations are destructive."
  },
  {
    "id" : "781f7dd3-ecbb-4c89-88c5-0657b3b761eb",
    "prId" : 7456,
    "prUrl" : "https://github.com/flutter/flutter/pull/7456#pullrequestreview-16289344",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6c9bfa2-2477-46f2-b5bf-4a6451157199",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "should we export TextBox?",
        "createdAt" : "2017-01-12T04:01:38Z",
        "updatedAt" : "2017-01-13T07:04:21Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "412d7b32-e607-4dd8-8b47-cd450725c836",
        "parentId" : "d6c9bfa2-2477-46f2-b5bf-4a6451157199",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "It's pretty obscure.  I guess we could.",
        "createdAt" : "2017-01-12T04:50:10Z",
        "updatedAt" : "2017-01-13T07:04:21Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c1e322af987d41efdc525307d1b0d54d2ea7243",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +266,270 @@  ///\n  /// Valid only after [layout].\n  List<ui.TextBox> getBoxesForSelection(TextSelection selection) {\n    assert(!needsLayout);\n    _layoutTextWithConstraints(constraints);"
  },
  {
    "id" : "c1a4a5b3-8f9d-4fdf-b098-fcd73bf29944",
    "prId" : 7493,
    "prUrl" : "https://github.com/flutter/flutter/pull/7493#pullrequestreview-17104147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75aa2d1d-206b-4098-91db-1634b6509337",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Let's skip the vertical fade.  It's even less clear how it should work than the horizontal fade.",
        "createdAt" : "2017-01-17T21:55:52Z",
        "updatedAt" : "2017-01-18T17:07:56Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "312cf05c53927654e97567a07bf769ac9bda0714",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +230,234 @@              <Point>[new Point(0.0, fadeStart), new Point(0.0, fadeEnd)],\n              <Color>[const Color(0xFFFFFFFF), const Color(0x00FFFFFF)]\n            );\n          }\n          break;"
  }
]