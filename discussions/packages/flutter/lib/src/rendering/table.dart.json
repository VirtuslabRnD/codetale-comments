[
  {
    "id" : "4e631b8f-03b8-414a-b72d-57e1369224f8",
    "prId" : 2917,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26c5ef25-7cfa-489e-9498-f32a52ed3b44",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Where's the Tween!  :)\n",
        "createdAt" : "2016-03-25T23:32:51Z",
        "updatedAt" : "2016-03-26T06:46:45Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "cab09739-df5b-484d-8fa4-4e1fee4f643b",
        "parentId" : "26c5ef25-7cfa-489e-9498-f32a52ed3b44",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "waiting for a use case :-P\n",
        "createdAt" : "2016-03-26T01:15:37Z",
        "updatedAt" : "2016-03-26T06:46:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c53f18bfeec9d57034908b959078574b8c994e56",
    "line" : 276,
    "diffHunk" : "@@ -1,1 +274,278 @@  }\n\n  static TableBorder lerp(TableBorder a, TableBorder b, double t) {\n    if (a == null && b == null)\n      return null;"
  },
  {
    "id" : "d513585e-6e10-4cd0-83f4-812a551cd8ef",
    "prId" : 2917,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67e1fb33-a1df-4aee-9200-ac1e46ac87a9",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "You'll probably want a setter that sets the number of rows, columns, and children all at once.  Without that, there's no efficient want to add a column to the table.\n",
        "createdAt" : "2016-03-25T23:35:58Z",
        "updatedAt" : "2016-03-26T06:46:45Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "5c247f95-3511-4bdb-a84c-b6b58b304c31",
        "parentId" : "67e1fb33-a1df-4aee-9200-ac1e46ac87a9",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "done\n",
        "createdAt" : "2016-03-26T01:38:36Z",
        "updatedAt" : "2016-03-26T06:46:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c53f18bfeec9d57034908b959078574b8c994e56",
    "line" : 372,
    "diffHunk" : "@@ -1,1 +370,374 @@  int get columns => _columns;\n  int _columns;\n  void set columns(int value) {\n    assert(value != null);\n    assert(value >= 0);"
  },
  {
    "id" : "fecb97a0-9bd0-4549-8bd7-b535d4c46775",
    "prId" : 2917,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7429e128-940c-41c9-b0fa-1d102ae8db92",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "We'll probably eventually want a smarter version of this function that omits the drop/adopt pair if the identical child exists in the identical slot but we can wait for the widget layer to see exactly which of these functions is going to get used a lot.\n",
        "createdAt" : "2016-03-26T03:39:07Z",
        "updatedAt" : "2016-03-26T06:46:45Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "893d8d45-98d4-4416-abd6-c0c7cc7f63e8",
        "parentId" : "7429e128-940c-41c9-b0fa-1d102ae8db92",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Makes sense.\n",
        "createdAt" : "2016-03-26T06:47:21Z",
        "updatedAt" : "2016-03-26T06:47:21Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c53f18bfeec9d57034908b959078574b8c994e56",
    "line" : 465,
    "diffHunk" : "@@ -1,1 +463,467 @@    for (RenderBox oldChild in cells) {\n      if (oldChild != null)\n        dropChild(oldChild);\n    }\n    assert(columns >= 0);"
  },
  {
    "id" : "61d41b0d-416b-41be-809e-f3409e853761",
    "prId" : 12226,
    "prUrl" : "https://github.com/flutter/flutter/pull/12226#pullrequestreview-64746814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6efb107e-2727-4008-a61e-eaa644f22e0f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I guess this is fine in Dart, but in C++ this would be crazy...",
        "createdAt" : "2017-09-23T19:52:11Z",
        "updatedAt" : "2017-09-23T20:15:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f5872320f94b4fd36dd3c1d8e1645897ec1bdb4",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +1009,1013 @@        for (int x = columns - 2; x >= 0; x -= 1)\n          positions[x] = positions[x+1] + widths[x+1];\n        _columnLefts = positions.reversed;\n        tableWidth = positions.first + widths.first;\n        break;"
  },
  {
    "id" : "f2932652-ec82-4c03-b9d7-de54606ca45e",
    "prId" : 29452,
    "prUrl" : "https://github.com/flutter/flutter/pull/29452#pullrequestreview-216591341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3bc00672-091d-4874-bdb9-1ab62993af64",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I'd move the comments around a bit but I wouldn't leave the else if to start on its own line. ",
        "createdAt" : "2019-03-19T23:22:10Z",
        "updatedAt" : "2019-03-20T20:58:47Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "22bed251-d001-4ef8-abcb-14f2e21bdaf4",
        "parentId" : "3bc00672-091d-4874-bdb9-1ab62993af64",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "We agree on the fact that `else if` should never be splitted.\r\n\r\nI allowed this pattern for several reasons:\r\n\r\n```dart\r\n    var m;\r\n    if (m) {\r\n      m;\r\n    }\r\n    // my comment on this else branch\r\n    else if (m) {\r\n      m;\r\n    }\r\n    // my comment on this else branch\r\n    else if (m) {\r\n      m;\r\n    }\r\n```\r\n\r\nlooks better IMHO than end of line comments:\r\n\r\n```dart\r\n    var m;\r\n    if (m) {\r\n      m;\r\n    } else if (m) { // my comment on this else branch that can not be multiline and should be short to not goes to far at right\r\n      m;\r\n    } else if (m) { // my comment on this else branch\r\n      m;\r\n    }\r\n```\r\n\r\nor\r\n\r\n```dart\r\n    var m;\r\n    if (m) {\r\n      m;\r\n    } else if (m) {\r\n      // my comment on this else branch here seems to reference the code that follows this comment and not the condition.\r\n      m;\r\n    } else if (m) {\r\n      // my comment on this else branch\r\n      m;\r\n    }\r\n```\r\n\r\nFinally, `else if` may already start its own line without blocks:\r\n\r\n```dart\r\n    var m;\r\n    if (m)\r\n      m;\r\n    else if (m)\r\n      m;\r\n```\r\n\r\n",
        "createdAt" : "2019-03-20T09:00:34Z",
        "updatedAt" : "2019-03-20T20:58:47Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0615a724a34330805ec0c763e8ba9bbfb7619b4b",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +886,890 @@    // 3. if there were no flex columns, then grow the table to the\n    //    minWidth.\n    else if (tableWidth < minWidthConstraint) {\n      final double delta = (minWidthConstraint - tableWidth) / columns;\n      for (int x = 0; x < columns; x += 1)"
  },
  {
    "id" : "2cf9a0bb-d5f8-4a29-a2ba-9eea7bc12af1",
    "prId" : 34285,
    "prUrl" : "https://github.com/flutter/flutter/pull/34285#pullrequestreview-249044281",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c006591e-49be-4fba-ab98-9d591b0664c0",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "In a key place (maybe paint) add an assert for this condition?",
        "createdAt" : "2019-06-12T22:10:28Z",
        "updatedAt" : "2019-06-12T22:51:16Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "a11ac33dd9f683e19b842e9c98692fa738be5abf",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +519,523 @@  /// either.\n  List<Decoration> get rowDecorations => List<Decoration>.unmodifiable(_rowDecorations ?? const <Decoration>[]);\n  // _rowDecorations and _rowDecorationPainters need to be in sync. They have to\n  // either both be null or have same length.\n  List<Decoration> _rowDecorations;"
  }
]