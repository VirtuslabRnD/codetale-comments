[
  {
    "id" : "6e1bd5e9-5d88-4b9f-87d5-ca876ac1c8c5",
    "prId" : 832,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "229e3cab-67da-4753-961f-030eb1c1827c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "That's a confusing way to put it. Isn't \"hit\" the same as \"put it in the event path\"?\n\nHow about \"Consider this target hit whenever the position being hit tested is within its bounds, and continue hit testing further elements behind this one.\"\n\nAnd maybe the other two should be rephrased to split the \"getting hit\" concept from the \"prevent going through\" concept? I'm not sure exactly how to phrase this.\n\nMaybe just remove the \"Never consider...\" sentence and just let the other sentence for translucent describe it...\n",
        "createdAt" : "2015-12-09T17:01:50Z",
        "updatedAt" : "2015-12-09T17:01:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "9258201b-e42f-4851-95a5-1f2e8b9b26ba",
        "parentId" : "229e3cab-67da-4753-961f-030eb1c1827c",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I've reworked this a bit so that the different cases are parallel.  The subtly is that if you defer to your child, which is translucent, you don't get events.\n",
        "createdAt" : "2015-12-09T17:22:31Z",
        "updatedAt" : "2015-12-09T17:22:31Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "e55858411fae9f7de2efc75400c6e706dddd5b07",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1110,1114 @@  opaque,\n\n  /// Never consider this target hit but always add the target to the event path anyway.\n  ///\n  /// Translucent targets both receive events at a given location and permit"
  },
  {
    "id" : "4cbebf08-0211-4abb-b945-45129812ce75",
    "prId" : 1192,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c4376bc-d516-4a99-985c-96d3f196ee3e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you need to update the bits when child changes from null to non-null or vice-versa\n",
        "createdAt" : "2016-01-11T23:21:25Z",
        "updatedAt" : "2016-01-12T05:58:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "82bb3bd40dd8664b29b91c96aa68e723843fc28b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +541,545 @@  }\n\n  bool get alwaysNeedsCompositing => child != null && (_alpha != 0 && _alpha != 255);\n\n  /// The fraction to scale the child's alpha value."
  },
  {
    "id" : "3901f4ff-0717-4674-843f-37cf3504963b",
    "prId" : 1192,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "100e2c46-3c2a-4c9b-9194-7d99457e2ec2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you need to update the bits when child changes from null to non-null or vice-versa\n",
        "createdAt" : "2016-01-11T23:21:28Z",
        "updatedAt" : "2016-01-12T05:58:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "17a9ebd2-9613-43af-824d-f8c0bf138910",
        "parentId" : "100e2c46-3c2a-4c9b-9194-7d99457e2ec2",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "RenderObject itself does that for us.\n",
        "createdAt" : "2016-01-11T23:26:32Z",
        "updatedAt" : "2016-01-12T05:58:10Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "52bdc115-0643-4a8f-9e11-e3988bef3803",
        "parentId" : "100e2c46-3c2a-4c9b-9194-7d99457e2ec2",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ah right.\n",
        "createdAt" : "2016-01-11T23:27:23Z",
        "updatedAt" : "2016-01-12T05:58:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "82bb3bd40dd8664b29b91c96aa68e723843fc28b",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +607,611 @@  }\n\n  bool get alwaysNeedsCompositing => child != null;\n\n  void paint(PaintingContext context, Offset offset) {"
  },
  {
    "id" : "69cfa33b-af15-467a-ae0d-b3e959c64cb5",
    "prId" : 1309,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "404fd931-5084-46a9-91df-eb56575d7a41",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "0.8?\n",
        "createdAt" : "2016-01-26T08:07:18Z",
        "updatedAt" : "2016-01-27T18:04:54Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "f1b757bf-d400-4a33-ab7d-5c6de3932092",
        "parentId" : "404fd931-5084-46a9-91df-eb56575d7a41",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "So that when you scroll you still see some of the previous page. This is completely arbitrary though. Would you prefer 1.0? I expect to tweak this based on real user feedback eventually.\n",
        "createdAt" : "2016-01-26T15:54:00Z",
        "updatedAt" : "2016-01-27T18:04:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a1788371bd78a74f763aab26bca87e92224cc7",
    "line" : 152,
    "diffHunk" : "@@ -1,1 +1413,1417 @@    GestureDragUpdateCallback onHorizontalDragUpdate,\n    GestureDragUpdateCallback onVerticalDragUpdate,\n    this.scrollFactor: 0.8\n  }) : _onTap = onTap,\n       _onLongPress = onLongPress,"
  },
  {
    "id" : "39255de1-1a3c-4a60-855f-0b42292e11ab",
    "prId" : 2826,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20d78769-7e98-4fe1-85ad-c368e3ab6f92",
        "parentId" : null,
        "authorId" : "4e76ff9c-c2fa-4e9c-86e7-21e393fec217",
        "body" : "s/\"with potentially hilarious but confusing results\"/\"with unexpected results\"/\n\nSince hilarity is rather subjective, let's keep this plain :)\n",
        "createdAt" : "2016-03-22T17:52:27Z",
        "updatedAt" : "2016-03-23T04:36:48Z",
        "lastEditedBy" : "4e76ff9c-c2fa-4e9c-86e7-21e393fec217",
        "tags" : [
        ]
      },
      {
        "id" : "8d140f4f-bb52-484a-abcb-328252cd2e5c",
        "parentId" : "20d78769-7e98-4fe1-85ad-c368e3ab6f92",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I think I can reliably say that I've never seen someone see the output of an app when the save/restore count was off, and not think it was funny. :-)\n",
        "createdAt" : "2016-03-23T04:26:11Z",
        "updatedAt" : "2016-03-23T04:36:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "942840748a960d46ed85e6751805faa2183a1075",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +1208,1212 @@  /// [Canvas.save]/[Canvas.saveLayer] and [Canvas.restore], otherwise all\n  /// subsequent painting on this canvas may be affected, with potentially\n  /// hilarious but confusing results.\n  ///\n  /// To paint text on a [Canvas], use a [TextPainter]."
  },
  {
    "id" : "e67bb7d4-9f3d-4a2e-b720-23abd367b244",
    "prId" : 2826,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "768a1066-73d0-4f05-8d70-5d33157b95bc",
        "parentId" : null,
        "authorId" : "4e76ff9c-c2fa-4e9c-86e7-21e393fec217",
        "body" : "Suggest using active voice:\n\"If non-null, the framework invokes this method to paint behind the children (widgets?).\"\n",
        "createdAt" : "2016-03-22T18:19:46Z",
        "updatedAt" : "2016-03-23T04:36:48Z",
        "lastEditedBy" : "4e76ff9c-c2fa-4e9c-86e7-21e393fec217",
        "tags" : [
        ]
      },
      {
        "id" : "ddce13f2-d52e-439b-a6b7-7ec2e986ef6f",
        "parentId" : "768a1066-73d0-4f05-8d70-5d33157b95bc",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This class could be used by non-framework code, so i am reluctant to explicitly say the framework is the caller.\n\nThe children are really render objects here (this is the layer below the widgets). I'm not sure what to say exactly. Technically there's only one child for this class. I hesitate to say \"descendants\", since some might not paint (consider e.g. RenderOffStage). Hence my compromise on \"children\".\n",
        "createdAt" : "2016-03-23T04:36:21Z",
        "updatedAt" : "2016-03-23T04:36:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "942840748a960d46ed85e6751805faa2183a1075",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +1289,1293 @@  /// The background custom paint delegate.\n  ///\n  /// This painter, if non-null, is invoked to paint behind the children.\n  CustomPainter get painter => _painter;\n  CustomPainter _painter;"
  },
  {
    "id" : "3592439f-b325-4f63-b920-3f1f11de5c16",
    "prId" : 3742,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0dc04264-5aeb-4f59-b0a7-f6f8e77f527e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "_checkForRepaint sounds like it would be idempotent. Maybe rename this function now that it's a change handler?\n",
        "createdAt" : "2016-05-04T22:18:52Z",
        "updatedAt" : "2016-05-04T23:01:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4211778535095741409c4ae6fc2922467c1be7a7",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +1547,1551 @@      markNeedsPaint();\n    }\n    if (attached) {\n      oldPainter._repaint?.removeListener(markNeedsPaint);\n      newPainter._repaint?.addListener(markNeedsPaint);"
  },
  {
    "id" : "0900f198-f4df-4ef6-aa01-6e203d84a54c",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "106f0696-9b36-47ec-bbd5-945ac0118a54",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "should this mention how expensive this usually ends up being?\n",
        "createdAt" : "2016-05-30T06:26:52Z",
        "updatedAt" : "2016-05-30T06:26:52Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +832,836 @@}\n\n/// Applies a filter to the existing painted content and then paints [child].\nclass RenderBackdropFilter extends RenderProxyBox {\n  /// Creates a backdrop filter."
  },
  {
    "id" : "70aa3d1b-30ae-4ba0-a4e2-7d22f72a75fd",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfb58d9c-79b1-4b69-add2-e4a90736c7f5",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "of the clip oval\n",
        "createdAt" : "2016-05-30T06:27:27Z",
        "updatedAt" : "2016-05-30T06:27:27Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 189,
    "diffHunk" : "@@ -1,1 +1024,1028 @@/// By default, inscribes an oval into its layout dimensions and prevents its\n/// child from painting outside that oval, but the size and location of the clip\n/// can be customized using a custom [clipper].\nclass RenderClipOval extends _RenderCustomClip<Rect> {\n  /// Creates an oval-shaped clip."
  },
  {
    "id" : "6fa0147e-5869-4a0f-85b2-3f638791160c",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "036549fb-42c9-4030-8bef-b13c73571739",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "size and location of the clip rect\n",
        "createdAt" : "2016-05-30T06:27:40Z",
        "updatedAt" : "2016-05-30T06:27:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +931,935 @@///\n/// By default, [RenderClipRect] prevents its child from painting outside its\n/// bounds, but the size and location of the clip can be customized using a\n/// custom [clipper].\nclass RenderClipRect extends _RenderCustomClip<Rect> {"
  },
  {
    "id" : "5059e941-b924-464d-a7f7-167905133bd4",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53cfb73f-bcdd-437b-9a9d-82f9290ea284",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "maybe mention that it's axis-aligned?\n",
        "createdAt" : "2016-05-30T06:28:06Z",
        "updatedAt" : "2016-05-30T06:28:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 187,
    "diffHunk" : "@@ -1,1 +1022,1026 @@/// Clips its child using an oval.\n///\n/// By default, inscribes an oval into its layout dimensions and prevents its\n/// child from painting outside that oval, but the size and location of the clip\n/// can be customized using a custom [clipper]."
  },
  {
    "id" : "78c9dd74-ee37-4e45-9d55-5e0e13f5a42a",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa4366ef-c4f6-4574-9a69-1ae7e734e3c4",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "asks\n",
        "createdAt" : "2016-05-30T06:28:46Z",
        "updatedAt" : "2016-05-30T06:28:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 253,
    "diffHunk" : "@@ -1,1 +1552,1556 @@/// Provides a canvas on which to draw during the paint phase.\n///\n/// When asked to paint, [CustomPaint] first ask its [painter] to paint on the\n/// current canvas, then it paints its child, and then, after painting its\n/// child, it ask its [foregroundPainter] to paint. The coodinate system of the"
  },
  {
    "id" : "d3b21bb1-19e7-4ee6-bba0-69235f8d6be0",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29af1ebf-dee8-4e38-b141-6053309170f6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "painters paint\n",
        "createdAt" : "2016-05-30T06:29:04Z",
        "updatedAt" : "2016-05-30T06:29:04Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 258,
    "diffHunk" : "@@ -1,1 +1557,1561 @@/// canvas matches the coordinate system of the [CustomPaint] object. The\n/// painters are expected to paint within a rectangle starting at the origin and\n/// encompassing a region of the given size. (If the painters paints outside\n/// those bounds, there might be insufficient memory allocated to rasterize the\n/// painting commands and the resulting behavior is undefined.)"
  },
  {
    "id" : "c29709c8-627d-454a-b568-bf9960d896f2",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "311b8ce9-9268-4ada-8c57-9b1a59bb5ee8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "check what the usual punctuation is for see-also lists... i don't think we normally put a comma there\n",
        "createdAt" : "2016-05-30T06:29:52Z",
        "updatedAt" : "2016-05-30T06:29:52Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "4f099953-cda7-4251-a9c8-baa9406fae1c",
        "parentId" : "311b8ce9-9268-4ada-8c57-9b1a59bb5ee8",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Nope.\n",
        "createdAt" : "2016-05-30T19:25:17Z",
        "updatedAt" : "2016-05-30T19:25:17Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 273,
    "diffHunk" : "@@ -1,1 +1569,1573 @@/// See also:\n///\n///  * [CustomPainter],\n///  * [Canvas]\nclass RenderCustomPaint extends RenderProxyBox {"
  },
  {
    "id" : "82857c86-673b-4027-84f8-30a8f73a9f2e",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38f6d7aa-a108-4f0a-b018-c40aae78dcc4",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "delegates\n",
        "createdAt" : "2016-05-30T06:29:59Z",
        "updatedAt" : "2016-05-30T06:29:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 276,
    "diffHunk" : "@@ -1,1 +1572,1576 @@///  * [Canvas]\nclass RenderCustomPaint extends RenderProxyBox {\n  /// Creates a render object that delgates its painting.\n  RenderCustomPaint({\n    CustomPainter painter,"
  },
  {
    "id" : "d8ea7f68-f9ee-4338-9b2c-45a62a2efcee",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "851789b4-4374-46fa-ab99-753ed780d6f1",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "invisible\n",
        "createdAt" : "2016-05-30T06:30:48Z",
        "updatedAt" : "2016-05-30T06:30:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 371,
    "diffHunk" : "@@ -1,1 +1928,1932 @@/// [ignoringSemantics] is null, it uses the value of [ignoring].\nclass RenderIgnorePointer extends RenderProxyBox {\n  /// Creates a render object that is invisivle to hit testing.\n  ///\n  /// The [ignoring] argument must not be null. If [ignoringSemantics], this"
  },
  {
    "id" : "ee13cb52-14f1-4bda-b442-eb164bfda1ca",
    "prId" : 4791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0d9aae9-17b7-4c60-bc39-598a2d702f09",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "add a test that verifies that the semantics are correct when you are changing whether these are present or not.\n",
        "createdAt" : "2016-06-30T17:35:04Z",
        "updatedAt" : "2016-07-01T00:18:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "043ed09b8804630d86f98f4e30e98ed51b808c7f",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +2127,2131 @@          semantics.addHorizontalScrollingActions();\n        if (onVerticalDragUpdate != null)\n          semantics.addVerticalScrollingActions();\n      };\n    }"
  },
  {
    "id" : "18440f7a-7e03-4f44-bf7f-09a9452a8969",
    "prId" : 4791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39167541-cae3-4c05-b475-1e06a26444b9",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "default, maybe?\n",
        "createdAt" : "2016-06-30T17:35:24Z",
        "updatedAt" : "2016-07-01T00:18:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "043ed09b8804630d86f98f4e30e98ed51b808c7f",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +2176,2180 @@        break;\n      case SemanticAction.increase:\n      case SemanticAction.decrease:\n        assert(false);\n        break;"
  },
  {
    "id" : "5adb0679-b91c-4405-8c01-b6b13353aca2",
    "prId" : 6325,
    "prUrl" : "https://github.com/flutter/flutter/pull/6325#pullrequestreview-4283692",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0038934-3687-4a21-861c-b7deee9ca0ff",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I think you should discuss reclip in the class description dartdocs (also maybe describe the general design of the class there), and in more detail in the constructor description.\n",
        "createdAt" : "2016-10-14T14:21:41Z",
        "updatedAt" : "2016-10-14T18:11:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3acd3916-5e6c-4db4-a8d2-61374b96ebd4",
        "parentId" : "d0038934-3687-4a21-861c-b7deee9ca0ff",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yes, custom painter has many more docs about this.  I'll try adapting them.\n",
        "createdAt" : "2016-10-14T14:54:34Z",
        "updatedAt" : "2016-10-14T18:11:45Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a535435a992ba78d8e8f4b1c3d8fe3d49dc76fc",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +877,881 @@  const CustomClipper({ Listenable reclip }) : _reclip = reclip;\n\n  final Listenable _reclip;\n\n  /// Returns a description of the clip given that the render object being"
  },
  {
    "id" : "28eee0b2-6815-4a8f-9123-f712b6176907",
    "prId" : 8560,
    "prUrl" : "https://github.com/flutter/flutter/pull/8560#pullrequestreview-25068934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1cd6ca99-4d80-4c0a-9eef-fafbf7afe530",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Maybe mention Stack and any other widgets that do clip here?",
        "createdAt" : "2017-03-03T20:36:47Z",
        "updatedAt" : "2017-03-03T23:22:35Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "cce41af5-250c-4ea4-99c6-af4d5d299c41",
        "parentId" : "1cd6ca99-4d80-4c0a-9eef-fafbf7afe530",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I was mistaken about Stack.  It doesn't clip all the time.",
        "createdAt" : "2017-03-03T20:59:10Z",
        "updatedAt" : "2017-03-03T23:22:35Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "a53f82d7193c088e314d8651c2c777089ff54c1b",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +888,892 @@///  * [ClipRRect], which can be customized with a [CustomClipper].\n///  * [ClipOval], which can be customized with a [CustomClipper].\n///  * [ClipPath], which can be customized with a [CustomClipper].\nabstract class CustomClipper<T> {\n  /// Creates a custom clipper."
  },
  {
    "id" : "ebba82dc-b92c-4231-98f8-4f04dee5d941",
    "prId" : 10805,
    "prUrl" : "https://github.com/flutter/flutter/pull/10805#pullrequestreview-45188746",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0261c0e1-036d-4066-a03a-598f357f5459",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "See also LeaderLayer",
        "createdAt" : "2017-06-19T18:21:20Z",
        "updatedAt" : "2017-06-20T16:16:17Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "f2bf4a65-63fb-475b-91a9-308103607029",
        "parentId" : "0261c0e1-036d-4066-a03a-598f357f5459",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "done",
        "createdAt" : "2017-06-20T16:12:40Z",
        "updatedAt" : "2017-06-20T16:16:17Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "567ba5c9b5e597777a2130d84103a3610e8c3a18",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +3045,3049 @@}\n\n/// Provides an anchor for a [RenderFollowerLayer].\n///\n/// See also:"
  },
  {
    "id" : "835df623-51ba-4853-9e81-d119bc6fcd9b",
    "prId" : 11286,
    "prUrl" : "https://github.com/flutter/flutter/pull/11286#pullrequestreview-50974082",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db8e0dc2-4b3b-4569-b0cc-beb3f74306f5",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this is O(N^2). Since validActions is only used for this, maybe it should be a Set instead of a List?\r\nOr maybe it should just be a pair of booleans (\"can scroll backwards\" and \"can scroll forwards\")? Then you could just check the booleans when adding the actions?",
        "createdAt" : "2017-07-19T16:38:40Z",
        "updatedAt" : "2017-07-19T17:02:05Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "42a0c84d-6e90-4295-8a44-bb95893e9a87",
        "parentId" : "db8e0dc2-4b3b-4569-b0cc-beb3f74306f5",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I wasn't too worried about that as validActions is guaranteed to be very small. Having said that, I refactored it to a Set, which gives us O(1) for `contains`. Happy to optimize further if this turns out to be an actual performance bottleneck.",
        "createdAt" : "2017-07-19T17:02:28Z",
        "updatedAt" : "2017-07-19T17:02:28Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ae248ee8e9b3f18f51ce998eb1bc32760f6099e",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +2829,2833 @@    // If a set of validActions has been provided only expose those.\n    if (validActions != null)\n      actions = actions.where((SemanticsAction action) => validActions.contains(action)).toList();\n\n    actions.forEach(node.addAction);"
  },
  {
    "id" : "a1742f84-e4c7-443b-a810-43f7bf11c2e0",
    "prId" : 11458,
    "prUrl" : "https://github.com/flutter/flutter/pull/11458#pullrequestreview-53379764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03be7101-6a64-4c7a-a706-c2079765397b",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "the regular toString for a decoration is now just fine. Having the method be toStringDeep for a decoration seems odd as a decoration doesn't have children.",
        "createdAt" : "2017-08-01T00:58:43Z",
        "updatedAt" : "2017-08-03T16:23:04Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "694d63ca9b1980078316ea3a9a8c8e1dd8bc6dd6",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +1486,1490 @@            'Every call to save() or saveLayer() must be matched by a call to restore().\\n'\n            'The decoration was:\\n'\n            '  $decoration\\n'\n            'The painter was:\\n'\n            '  $_painter'"
  },
  {
    "id" : "217f1b5a-dc43-4e2e-a114-e1303e911e20",
    "prId" : 12605,
    "prUrl" : "https://github.com/flutter/flutter/pull/12605#pullrequestreview-70383570",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c811ec70-e10e-4dce-8548-c1d9bddfef66",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "any particular reason not to do this now?",
        "createdAt" : "2017-10-18T22:35:12Z",
        "updatedAt" : "2017-10-18T22:56:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "139f4c73-d85c-4263-8c35-5f56f5011f89",
        "parentId" : "c811ec70-e10e-4dce-8548-c1d9bddfef66",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Let's do this in a follow-up. This requires some plumbing and this PR is already pretty big.",
        "createdAt" : "2017-10-18T22:55:49Z",
        "updatedAt" : "2017-10-18T22:56:20Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "696e428dc83db3220c39b3779f3cc48ad62357e1",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +3002,3006 @@\n    // TODO(goderbauer): this needs to be set even when there is only potential\n    //    for this to become a scroll view.\n    config.explicitChildNodes = onHorizontalDragUpdate != null\n        || onVerticalDragUpdate != null;"
  },
  {
    "id" : "048eb5ab-4211-4f66-b22b-969129aa9975",
    "prId" : 12695,
    "prUrl" : "https://github.com/flutter/flutter/pull/12695#pullrequestreview-71703439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "211ba658-0c79-43cc-922e-6f6fbcb9d649",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Can we have more details on each of these? What the semantics of the action are, examples of how the user might trigger it, and so on?\r\n\r\nThis is the main entry-point to this API so you cannot assume that the user will know about [SemanticsAction].",
        "createdAt" : "2017-10-24T20:33:16Z",
        "updatedAt" : "2017-10-26T00:38:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ae8a7207-653e-416e-995b-118fa6bf0487",
        "parentId" : "211ba658-0c79-43cc-922e-6f6fbcb9d649",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Done.",
        "createdAt" : "2017-10-24T23:22:13Z",
        "updatedAt" : "2017-10-26T00:38:38Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f25ff7753cd6c4610e8d5980b0ea4d572f1b492",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +3334,3338 @@  }\n\n  /// The handler for [SemanticsAction.tap].\n  ///\n  /// This is the semantic equivalent of a user briefly tapping the screen with"
  },
  {
    "id" : "485efa31-18ab-478d-970e-7b691dcbe9e9",
    "prId" : 12695,
    "prUrl" : "https://github.com/flutter/flutter/pull/12695#pullrequestreview-71712320",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3bc1fb67-ebf6-4d7c-8ecc-43b16f7a704e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i guess the concern is that the system will invoke our callbacks sometime after we've been told we no longer have an onTap handler?",
        "createdAt" : "2017-10-24T20:38:30Z",
        "updatedAt" : "2017-10-26T00:38:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "21d7cf10-c3f0-4143-9b25-dc98f7f0e801",
        "parentId" : "3bc1fb67-ebf6-4d7c-8ecc-43b16f7a704e",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "That was my concern. Does the system guarantee that that will never happen?",
        "createdAt" : "2017-10-24T23:23:07Z",
        "updatedAt" : "2017-10-26T00:38:38Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "7131fd0e-a8ca-4300-9542-0c8f31ee5cb6",
        "parentId" : "3bc1fb67-ebf6-4d7c-8ecc-43b16f7a704e",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "At the render level, I guess not. You can modify a render object, then drive the pipeline much later.",
        "createdAt" : "2017-10-25T00:22:25Z",
        "updatedAt" : "2017-10-26T00:38:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f25ff7753cd6c4610e8d5980b0ea4d572f1b492",
    "line" : 238,
    "diffHunk" : "@@ -1,1 +3539,3543 @@\n  void _performTap() {\n    if (onTap != null)\n      onTap();\n  }"
  },
  {
    "id" : "acb3c1b6-5127-4bbb-8112-07c1aa4e6a84",
    "prId" : 12870,
    "prUrl" : "https://github.com/flutter/flutter/pull/12870#pullrequestreview-74227495",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60f2f8bd-19cb-45a9-9e32-ca1dad54218b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you want to use the markNeedsResolve pattern, see some of the other classes here or in shifted_box",
        "createdAt" : "2017-11-03T21:38:16Z",
        "updatedAt" : "2017-11-03T21:58:44Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ed524b61-c3b4-4708-85b4-9efd7e06917f",
        "parentId" : "60f2f8bd-19cb-45a9-9e32-ca1dad54218b",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Transform allows alignment to be null which complicated applying the pattern. Plus the cost of resolving an Alignment is small.",
        "createdAt" : "2017-11-03T22:24:52Z",
        "updatedAt" : "2017-11-03T22:24:52Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "011fb70d7fbc816c5afdf7c7ac00a5aaada904ab",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +1661,1665 @@      return;\n    _textDirection = value;\n    markNeedsPaint();\n  }\n"
  },
  {
    "id" : "66ae1fc5-9cfc-4306-8d08-adaba5e9cd20",
    "prId" : 13405,
    "prUrl" : "https://github.com/flutter/flutter/pull/13405#pullrequestreview-82009686",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07dbe644-924b-46f3-8506-47ccb981b19d",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Should this use the word \"character\", since it's not characters?  Or is that just because that's the TalkBack name for it?",
        "createdAt" : "2017-12-07T17:33:51Z",
        "updatedAt" : "2017-12-07T22:32:11Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "01ae978e-84a0-447c-a48e-ceede3486f5e",
        "parentId" : "07dbe644-924b-46f3-8506-47ccb981b19d",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I am not 100% fluent in the Unicode terminology and open to naming suggestions...\r\n\r\nHaving said that, this is one meaning the [Unicode glossary](https://www.unicode.org/glossary/#character) defines for the Word Character:\r\n> (1) The smallest component of written language that has semantic value; refers to the abstract meaning and/or shape, rather than a specific shape (see also glyph), [...]\r\n\r\nwhich seems very fitting here...",
        "createdAt" : "2017-12-07T18:18:15Z",
        "updatedAt" : "2017-12-07T22:32:11Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "f4148903-9823-4649-87ec-a4614dd50734",
        "parentId" : "07dbe644-924b-46f3-8506-47ccb981b19d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "In general I would avoid the word \"character\" because it's hugely vague.\r\nHowever in this case I think the vagueness works in our favour, since we're planning on changing the semantics from \"Unicode scalar value\" (sometimes ambiguously called \"rune\") to \"extended grapheme cluster\" at some point.",
        "createdAt" : "2017-12-07T22:03:46Z",
        "updatedAt" : "2017-12-07T22:32:12Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1de8209aa0299a453452db9b2d44d873ff34b6e5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2832,2836 @@    VoidCallback onIncrease,\n    VoidCallback onDecrease,\n    VoidCallback onMoveCursorForwardByCharacter,\n    VoidCallback onMoveCursorBackwardByCharacter,\n  }) : assert(container != null),"
  },
  {
    "id" : "8b481ab6-ee43-4f53-b2e8-60bc8dee3504",
    "prId" : 13682,
    "prUrl" : "https://github.com/flutter/flutter/pull/13682#pullrequestreview-86525216",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc785124-b82a-4221-9b5a-f1afe066c363",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It seems like this hack should depend on the elevation.",
        "createdAt" : "2017-12-19T23:48:50Z",
        "updatedAt" : "2018-01-12T23:26:09Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "d14079d1-6928-41b7-8a07-ae260c6ce360",
        "parentId" : "cc785124-b82a-4221-9b5a-f1afe066c363",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "I tried to follow Skia'a shadow drawing code to see if there's a simple way to derive the padding needed for a given elevation. I couldn't figure what's happening after the call to private_draw_shadow_rec here: https://github.com/google/skia/blob/master/src/utils/SkShadowUtils.cpp#L503\r\n\r\nThis 20.0 value was originally added in \r\nhttps://github.com/flutter/flutter/pull/9654\r\n\r\n@jason-simmons do you have some more details about this 20.0 value? do you know if there's an easy way to derive the exact value from the elevation value?",
        "createdAt" : "2017-12-20T02:17:24Z",
        "updatedAt" : "2018-01-12T23:26:09Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "ac404f07-5280-444b-a6ce-d11a52e9dd28",
        "parentId" : "cc785124-b82a-4221-9b5a-f1afe066c363",
        "authorId" : "96a98276-7acb-4411-9633-960c20044a6f",
        "body" : "It was a guess of how much padding would be needed for the highest elevation shadow that we would draw.  I'm not aware of a way to calculate this precisely.\r\n\r\nIdeally Skia itself would adjust the bounds of the picture to encompass the shadow, but I don't know if they have implemented that yet.\r\n",
        "createdAt" : "2017-12-20T17:42:39Z",
        "updatedAt" : "2018-01-12T23:26:09Z",
        "lastEditedBy" : "96a98276-7acb-4411-9633-960c20044a6f",
        "tags" : [
        ]
      },
      {
        "id" : "132a35af-108b-40f5-a844-f6797aeee784",
        "parentId" : "cc785124-b82a-4221-9b5a-f1afe066c363",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "FWIW, @jason-simmons is looking at getting rid of the need for this hack in general.",
        "createdAt" : "2018-01-03T23:54:27Z",
        "updatedAt" : "2018-01-12T23:26:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f4abe21360263e066f801eb23a526dfcc838cc5",
    "line" : 299,
    "diffHunk" : "@@ -1,1 +1615,1619 @@          // TODO(jsimmons): remove this when Skia does it for us.\n          canvas.drawRect(\n            offsetBounds.inflate(20.0),\n            _RenderPhysicalModelBase._transparentPaint,\n          );"
  },
  {
    "id" : "08d70c2e-097c-4b7d-bdd7-a2e317838c16",
    "prId" : 13682,
    "prUrl" : "https://github.com/flutter/flutter/pull/13682#pullrequestreview-86803396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96549aea-7986-4a49-b282-caa36df567fa",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Who calls _shape.paint()?",
        "createdAt" : "2017-12-20T00:02:22Z",
        "updatedAt" : "2018-01-12T23:26:09Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "ce926372-9737-4985-97d7-242257ed37d7",
        "parentId" : "96549aea-7986-4a49-b282-caa36df567fa",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Aimilarly to RenderPhysicalModel, this currently doesn't paint the border, but just clips and casts shadow.\r\nThis is intended to be used by the Material widget, which currently doesn't paint any border... (it is using RenderPhysicalModel to clip itself to a shape though)",
        "createdAt" : "2017-12-20T00:44:49Z",
        "updatedAt" : "2018-01-12T23:26:09Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "a05f58cb-64e9-457a-a510-d867852834c0",
        "parentId" : "96549aea-7986-4a49-b282-caa36df567fa",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should probably have Material paint the border (doesn't have to be in this PR though).",
        "createdAt" : "2018-01-05T01:07:23Z",
        "updatedAt" : "2018-01-12T23:26:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f4abe21360263e066f801eb23a526dfcc838cc5",
    "line" : 202,
    "diffHunk" : "@@ -1,1 +1488,1492 @@\n  @override\n  void paint(PaintingContext context, Offset offset) {\n    if (child != null) {\n      _updateClip();"
  },
  {
    "id" : "69f5f495-bc3b-4464-9106-6b7a780e1a2a",
    "prId" : 13682,
    "prUrl" : "https://github.com/flutter/flutter/pull/13682#pullrequestreview-86803170",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8c6d7b7-b929-4faa-9d03-fe28bc301209",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "please put this class above its subclasses so that reading the file you get to it first",
        "createdAt" : "2018-01-03T23:54:50Z",
        "updatedAt" : "2018-01-12T23:26:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "d53d0592-a747-43db-aea2-6c0220f91dde",
        "parentId" : "a8c6d7b7-b929-4faa-9d03-fe28bc301209",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Done.\r\nIs that in our style guide?\r\nI typically used to first see the public, higher-level classes first, and the implementation details below...",
        "createdAt" : "2018-01-04T19:18:11Z",
        "updatedAt" : "2018-01-12T23:26:09Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "8f6e2f9f-f5ab-4239-8449-314d79d2a5fd",
        "parentId" : "a8c6d7b7-b929-4faa-9d03-fe28bc301209",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It's not explicitly in our style guide, but it was confusing to read the patch because there was suddenly mention of this class that hadn't been defined yet. :-)",
        "createdAt" : "2018-01-05T01:05:27Z",
        "updatedAt" : "2018-01-12T23:26:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f4abe21360263e066f801eb23a526dfcc838cc5",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +1333,1337 @@/// The concrete implementations [RenderPhysicalModel] and [RenderPhysicalShape]\n/// determine the actual shape of the physical model.\nabstract class _RenderPhysicalModelBase<T> extends _RenderCustomClip<T> {\n  /// The [shape], [elevation], [color], and [shadowColor] must not be null.\n  _RenderPhysicalModelBase({"
  },
  {
    "id" : "2c2f9f62-fa52-4534-b881-09d0e25c30bb",
    "prId" : 13682,
    "prUrl" : "https://github.com/flutter/flutter/pull/13682#pullrequestreview-86735173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ad1d5bf-5dbf-47fa-8c1a-7d7cd403d8a8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "no hittest?",
        "createdAt" : "2018-01-03T23:56:28Z",
        "updatedAt" : "2018-01-12T23:26:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "22b9aae5-11b2-4c0f-a436-74301f9a95e8",
        "parentId" : "2ad1d5bf-5dbf-47fa-8c1a-7d7cd403d8a8",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Fixed by moving the hittest implementation from RenderPhysicalModel to the base class.\r\nI added a test for the hittest in basic_test.dart",
        "createdAt" : "2018-01-04T19:03:00Z",
        "updatedAt" : "2018-01-12T23:26:09Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "18f2de36-51c5-419d-9acb-2a95d36e9e99",
        "parentId" : "2ad1d5bf-5dbf-47fa-8c1a-7d7cd403d8a8",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Actually analyzer complains as there are no static guarantees that the clip template type has a contains method.\r\nDuplicated the same hittest implementation in both RenderPhysicalModel and RenderPhysicalShape",
        "createdAt" : "2018-01-04T19:30:15Z",
        "updatedAt" : "2018-01-12T23:26:09Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f4abe21360263e066f801eb23a526dfcc838cc5",
    "line" : 318,
    "diffHunk" : "@@ -1,1 +1634,1638 @@    }\n  }\n\n  @override\n  void debugFillProperties(DiagnosticPropertiesBuilder description) {"
  },
  {
    "id" : "6e824006-98d2-4ff4-a05e-4b8ec3e418bb",
    "prId" : 13682,
    "prUrl" : "https://github.com/flutter/flutter/pull/13682#pullrequestreview-86525611",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c54b9c23-0dc5-4a05-90e8-ecade6f4cb0e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "clever",
        "createdAt" : "2018-01-03T23:57:00Z",
        "updatedAt" : "2018-01-12T23:26:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f4abe21360263e066f801eb23a526dfcc838cc5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +956,960 @@\n/// A [CustomClipper] that clips to the outer path of a [ShapeBorder].\nclass ShapeBorderClipper extends CustomClipper<Path> {\n  /// Creates a [ShapeBorder] clipper.\n  ///"
  },
  {
    "id" : "d082be2c-69a5-43a2-b58a-4c2e74b4a456",
    "prId" : 14155,
    "prUrl" : "https://github.com/flutter/flutter/pull/14155#pullrequestreview-89982729",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23af6c01-dda0-4e33-80da-cced9da56595",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Could there be times when we have an alpha of zero, but still want to visit the render object? I'm thinking about Semantics or other non-visual things (e.g. objects used for place-holding in a layout).  I can see the argument for \"well, if it's not visible, then there shouldn't be any kind of representation\", however.",
        "createdAt" : "2018-01-18T21:50:48Z",
        "updatedAt" : "2018-01-19T00:25:16Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "e7689887-8193-4fc9-8e48-cfe38d5fab00",
        "parentId" : "23af6c01-dda0-4e33-80da-cced9da56595",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "See https://github.com/flutter/flutter/issues/12283 for the history here. This is just duplicating what Opacity does.",
        "createdAt" : "2018-01-19T00:24:29Z",
        "updatedAt" : "2018-01-19T00:25:16Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a97349e4-52dc-47c0-a69e-e11c991206b9",
        "parentId" : "23af6c01-dda0-4e33-80da-cced9da56595",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Ahh, OK, just so we're aware...",
        "createdAt" : "2018-01-19T00:44:13Z",
        "updatedAt" : "2018-01-19T00:44:13Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d32b9b146b2ee9c45a07c52e4b0651af3f1c7057",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +860,864 @@  @override\n  void visitChildrenForSemantics(RenderObjectVisitor visitor) {\n    if (child != null && _alpha != 0)\n      visitor(child);\n  }"
  },
  {
    "id" : "0d009509-8aab-4e8e-83a2-95d6bfd3973d",
    "prId" : 14275,
    "prUrl" : "https://github.com/flutter/flutter/pull/14275#pullrequestreview-91921509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1408b48f-d8c1-464c-80b0-cb09cb7dfdbf",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "nit: I'd create a variable `final bool hasValue = handler != null;` so the `if` expression is more clear.",
        "createdAt" : "2018-01-26T00:15:07Z",
        "updatedAt" : "2018-01-26T18:11:01Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "35cba7e8-e2f4-4c65-ab3c-740267059d40",
        "parentId" : "1408b48f-d8c1-464c-80b0-cb09cb7dfdbf",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I left this one as is for now because all the other setters for the various handlers in this file follow the same pattern.",
        "createdAt" : "2018-01-26T18:10:29Z",
        "updatedAt" : "2018-01-26T18:11:01Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "3285e582fed89d46883b029486ce7218357307e6",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +3416,3420 @@    final bool hadValue = _onSetSelection != null;\n    _onSetSelection = handler;\n    if ((handler != null) != hadValue)\n      markNeedsSemanticsUpdate();\n  }"
  },
  {
    "id" : "ab32a6a7-0f53-4328-b9e7-34e880ad9de4",
    "prId" : 14392,
    "prUrl" : "https://github.com/flutter/flutter/pull/14392#pullrequestreview-94136126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ae27b73-ca1b-42cb-8e8e-c48fdbedebe9",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This should be two slashes, not three.",
        "createdAt" : "2018-02-05T20:45:49Z",
        "updatedAt" : "2018-02-05T20:45:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "24a3f83fe978fceeb08b1efcd4c4dc85283661d5",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +52,56 @@/// of [RenderProxyBox] is desired but inheriting from [RenderProxyBox] is\n/// impractical (e.g. because you want to mix in other classes as well).\n/// TODO(ianh): Remove this class once https://github.com/dart-lang/sdk/issues/15101 is fixed\n@optionalTypeArgs \nabstract class RenderProxyBoxMixin<T extends RenderBox> extends RenderBox with RenderObjectWithChildMixin<T> {"
  },
  {
    "id" : "be43b8c5-cca5-4443-b7d1-e9b3dff73741",
    "prId" : 17060,
    "prUrl" : "https://github.com/flutter/flutter/pull/17060#pullrequestreview-116098164",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57d5fa1b-66be-4afe-9be3-7ea302cbd5fb",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "would be good to have some sample code here showing how you go from a GlobalKey on a RepaintBoundary to a PNG.",
        "createdAt" : "2018-04-27T22:18:11Z",
        "updatedAt" : "2018-04-28T00:44:17Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea1a8c048b0461ffddf93ecc171d6c648dc25a24",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +2510,2514 @@  /// ```\n  ///\n  /// See also:\n  ///\n  ///  * [OffsetLayer.toImage] for a similar API at the layer level."
  },
  {
    "id" : "3e8bd70c-cc8e-46a2-b465-0534c04f417f",
    "prId" : 17060,
    "prUrl" : "https://github.com/flutter/flutter/pull/17060#pullrequestreview-116118919",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "024287da-00fb-42a0-bc12-4d4bcae45991",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "maybe write them to disk rather than to the console? :-P",
        "createdAt" : "2018-04-28T00:36:21Z",
        "updatedAt" : "2018-04-28T00:44:17Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "892e6121-e60b-40e6-9cab-39fa402a9682",
        "parentId" : "024287da-00fb-42a0-bc12-4d4bcae45991",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "But then they'd go to device disk... and I should really use the `path_provider` plugin, and the example gets dramatically more complicated..",
        "createdAt" : "2018-04-28T00:38:29Z",
        "updatedAt" : "2018-04-28T00:44:17Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "0b3be979-c9e7-40db-a662-27dc6828474c",
        "parentId" : "024287da-00fb-42a0-bc12-4d4bcae45991",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Yeah fair enough.",
        "createdAt" : "2018-04-28T02:54:55Z",
        "updatedAt" : "2018-04-28T02:54:55Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea1a8c048b0461ffddf93ecc171d6c648dc25a24",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +2492,2496 @@  ///     ByteData byteData = await image.toByteData(format: ui.ImageByteFormat.png);\n  ///     Uint8List pngBytes = byteData.buffer.asUint8List();\n  ///     print(pngBytes);\n  ///   }\n  ///"
  },
  {
    "id" : "b3e525b7-4e82-4ff5-b075-6536946e9cb4",
    "prId" : 17363,
    "prUrl" : "https://github.com/flutter/flutter/pull/17363#pullrequestreview-118219839",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "835b7778-475b-429b-8708-3aa6e905ddd1",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Why * 2?",
        "createdAt" : "2018-05-08T01:05:01Z",
        "updatedAt" : "2018-05-09T02:01:35Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "d6cd04ef-db2d-457f-ba91-dfe08997ec35",
        "parentId" : "835b7778-475b-429b-8708-3aa6e905ddd1",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "To make the difference more obvious. It was just a guess as to what would look good, I'm happy to change it to 1.0 if you like.",
        "createdAt" : "2018-05-08T03:36:16Z",
        "updatedAt" : "2018-05-09T02:01:35Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ec1259a1-25fd-45ba-85b8-9df3c5bb30f8",
        "parentId" : "835b7778-475b-429b-8708-3aa6e905ddd1",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "That's what I was figuring.  2.0 sgtm",
        "createdAt" : "2018-05-08T03:38:30Z",
        "updatedAt" : "2018-05-09T02:01:35Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfcde3e7c68dbfd50b52ef3a6ec246591b7b01d9",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +1606,1610 @@              ..color = shadowColor\n              ..style = PaintingStyle.stroke\n              ..strokeWidth = elevation * 2.0,\n          );\n          paintShadows = false;"
  },
  {
    "id" : "25961bbf-22c0-4170-b490-a61069c15d01",
    "prId" : 18121,
    "prUrl" : "https://github.com/flutter/flutter/pull/18121#pullrequestreview-130623555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0ea644e-b56d-44dc-a678-d69fd24d2173",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should add a test for this (other than a golden test, since that golden test was such a subtle difference that many people wouldn't have bothered to try to track it down, instead just saying \"bah, antialiasing, let's just redo the goldens\")",
        "createdAt" : "2018-06-20T23:26:07Z",
        "updatedAt" : "2018-06-21T00:33:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "16e59d25-5942-430c-8227-70e3a6e9f964",
        "parentId" : "f0ea644e-b56d-44dc-a678-d69fd24d2173",
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "Should the test check the alwaysNeedsCompositing value for full opaque and transparent?  Is that sufficient?",
        "createdAt" : "2018-06-20T23:28:43Z",
        "updatedAt" : "2018-06-21T00:33:02Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      },
      {
        "id" : "c9214357-d358-4dc3-a2ce-176783b1d7ca",
        "parentId" : "f0ea644e-b56d-44dc-a678-d69fd24d2173",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "probably just check to see if a layer gets created. There should be an equivalent test for the RenderOpacity class -- try breaking the equivalent code in that class and seeing if a test fails.",
        "createdAt" : "2018-06-20T23:30:42Z",
        "updatedAt" : "2018-06-21T00:33:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5cde242335be9ec5a7f98eea1c245b551c0e43c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +838,842 @@    if (oldAlpha != _alpha) {\n      final bool didNeedCompositing = _currentlyNeedsCompositing;\n      _currentlyNeedsCompositing = _alpha > 0 && _alpha < 255;\n      if (child != null && didNeedCompositing != _currentlyNeedsCompositing)\n        markNeedsCompositingBitsUpdate();"
  },
  {
    "id" : "d0f7a7bb-cd7f-4794-a31c-ca55085ebd66",
    "prId" : 18758,
    "prUrl" : "https://github.com/flutter/flutter/pull/18758#pullrequestreview-147416219",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea7a8894-8beb-4175-bf46-ddb51ef1ddf1",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this argument is ignored. was that a mistake?",
        "createdAt" : "2018-08-18T01:09:02Z",
        "updatedAt" : "2018-08-18T01:09:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "87234d32-13e6-4b16-a1be-b1b06f7ecc79",
        "parentId" : "ea7a8894-8beb-4175-bf46-ddb51ef1ddf1",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "yup",
        "createdAt" : "2018-08-18T01:14:55Z",
        "updatedAt" : "2018-08-18T01:14:55Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "d53c39ba-b27e-4c67-a2a8-95c0650fc33a",
        "parentId" : "ea7a8894-8beb-4175-bf46-ddb51ef1ddf1",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "It's not breaking anything - but it is entirely redundant. Will remove",
        "createdAt" : "2018-08-18T01:19:36Z",
        "updatedAt" : "2018-08-18T01:19:36Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "5b5482f7-929c-45c3-bf93-5e2ba1f1c903",
        "parentId" : "ea7a8894-8beb-4175-bf46-ddb51ef1ddf1",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i have a PR out to remove it",
        "createdAt" : "2018-08-18T02:01:47Z",
        "updatedAt" : "2018-08-18T02:01:47Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e78ebf88adcdfa85c422fdae71ba85258568e3be",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +3140,3144 @@    bool image,\n    bool liveRegion,\n    bool isSwitch,\n    String label,\n    String value,"
  },
  {
    "id" : "ccfa3eb0-5569-4470-b530-d064c8b3541b",
    "prId" : 20365,
    "prUrl" : "https://github.com/flutter/flutter/pull/20365#pullrequestreview-145025813",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2c96620-ba3b-40ac-89f6-548989799091",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "we changed our style here? (thought we omit curly braces for a one line block)",
        "createdAt" : "2018-08-09T01:56:18Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "9a1e39a3-e915-4782-8b6b-aef7a1f912dd",
        "parentId" : "e2c96620-ba3b-40ac-89f6-548989799091",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "The style guide these days says do whatever you want on this issue, because people had Strong Opinions on both side and it didn't seem worth fighting over. In this case I added the brace so that the method was internally consistent which I feel aids with readability (the other case has two statements so can't lose its braces).",
        "createdAt" : "2018-08-09T21:06:16Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "97e9d6137e5c25ec20ec4fc0408cdc6fd7d36f50",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +780,784 @@  void paint(PaintingContext context, Offset offset) {\n    if (child != null) {\n      if (_alpha == 0) {\n        return;\n      }"
  },
  {
    "id" : "7ff47803-c895-44e8-923c-058438f22e14",
    "prId" : 24830,
    "prUrl" : "https://github.com/flutter/flutter/pull/24830#pullrequestreview-197626936",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9726cf6-4325-40d5-b00a-a2fe3f75379a",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Do we need to guard this call to only happen when render object is attached? ",
        "createdAt" : "2019-01-29T00:41:12Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "25a8c606-05d1-41c2-b38d-beb6ce9bb024",
        "parentId" : "d9726cf6-4325-40d5-b00a-a2fe3f75379a",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes, I guess that would be prudent.",
        "createdAt" : "2019-01-29T15:51:31Z",
        "updatedAt" : "2019-01-29T15:55:33Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f684a923245b2b3f1be91086d491a0128fd641fd",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +2579,2583 @@  void _updateAnnotations() {\n    if (_hoverAnnotation != null && attached) {\n      RendererBinding.instance.mouseTracker.detachAnnotation(_hoverAnnotation);\n    }\n    if (_onPointerEnter != null || _onPointerHover != null || _onPointerExit != null) {"
  }
]