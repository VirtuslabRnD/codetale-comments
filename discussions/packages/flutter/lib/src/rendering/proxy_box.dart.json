[
  {
    "id" : "6e1bd5e9-5d88-4b9f-87d5-ca876ac1c8c5",
    "prId" : 832,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "229e3cab-67da-4753-961f-030eb1c1827c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "That's a confusing way to put it. Isn't \"hit\" the same as \"put it in the event path\"?\n\nHow about \"Consider this target hit whenever the position being hit tested is within its bounds, and continue hit testing further elements behind this one.\"\n\nAnd maybe the other two should be rephrased to split the \"getting hit\" concept from the \"prevent going through\" concept? I'm not sure exactly how to phrase this.\n\nMaybe just remove the \"Never consider...\" sentence and just let the other sentence for translucent describe it...\n",
        "createdAt" : "2015-12-09T17:01:50Z",
        "updatedAt" : "2015-12-09T17:01:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "9258201b-e42f-4851-95a5-1f2e8b9b26ba",
        "parentId" : "229e3cab-67da-4753-961f-030eb1c1827c",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I've reworked this a bit so that the different cases are parallel.  The subtly is that if you defer to your child, which is translucent, you don't get events.\n",
        "createdAt" : "2015-12-09T17:22:31Z",
        "updatedAt" : "2015-12-09T17:22:31Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "e55858411fae9f7de2efc75400c6e706dddd5b07",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1110,1114 @@  opaque,\n\n  /// Never consider this target hit but always add the target to the event path anyway.\n  ///\n  /// Translucent targets both receive events at a given location and permit"
  },
  {
    "id" : "4cbebf08-0211-4abb-b945-45129812ce75",
    "prId" : 1192,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c4376bc-d516-4a99-985c-96d3f196ee3e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you need to update the bits when child changes from null to non-null or vice-versa\n",
        "createdAt" : "2016-01-11T23:21:25Z",
        "updatedAt" : "2016-01-12T05:58:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "82bb3bd40dd8664b29b91c96aa68e723843fc28b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +541,545 @@  }\n\n  bool get alwaysNeedsCompositing => child != null && (_alpha != 0 && _alpha != 255);\n\n  /// The fraction to scale the child's alpha value."
  },
  {
    "id" : "3901f4ff-0717-4674-843f-37cf3504963b",
    "prId" : 1192,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "100e2c46-3c2a-4c9b-9194-7d99457e2ec2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you need to update the bits when child changes from null to non-null or vice-versa\n",
        "createdAt" : "2016-01-11T23:21:28Z",
        "updatedAt" : "2016-01-12T05:58:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "17a9ebd2-9613-43af-824d-f8c0bf138910",
        "parentId" : "100e2c46-3c2a-4c9b-9194-7d99457e2ec2",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "RenderObject itself does that for us.\n",
        "createdAt" : "2016-01-11T23:26:32Z",
        "updatedAt" : "2016-01-12T05:58:10Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "52bdc115-0643-4a8f-9e11-e3988bef3803",
        "parentId" : "100e2c46-3c2a-4c9b-9194-7d99457e2ec2",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ah right.\n",
        "createdAt" : "2016-01-11T23:27:23Z",
        "updatedAt" : "2016-01-12T05:58:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "82bb3bd40dd8664b29b91c96aa68e723843fc28b",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +607,611 @@  }\n\n  bool get alwaysNeedsCompositing => child != null;\n\n  void paint(PaintingContext context, Offset offset) {"
  },
  {
    "id" : "69cfa33b-af15-467a-ae0d-b3e959c64cb5",
    "prId" : 1309,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "404fd931-5084-46a9-91df-eb56575d7a41",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "0.8?\n",
        "createdAt" : "2016-01-26T08:07:18Z",
        "updatedAt" : "2016-01-27T18:04:54Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "f1b757bf-d400-4a33-ab7d-5c6de3932092",
        "parentId" : "404fd931-5084-46a9-91df-eb56575d7a41",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "So that when you scroll you still see some of the previous page. This is completely arbitrary though. Would you prefer 1.0? I expect to tweak this based on real user feedback eventually.\n",
        "createdAt" : "2016-01-26T15:54:00Z",
        "updatedAt" : "2016-01-27T18:04:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a1788371bd78a74f763aab26bca87e92224cc7",
    "line" : 152,
    "diffHunk" : "@@ -1,1 +1413,1417 @@    GestureDragUpdateCallback onHorizontalDragUpdate,\n    GestureDragUpdateCallback onVerticalDragUpdate,\n    this.scrollFactor: 0.8\n  }) : _onTap = onTap,\n       _onLongPress = onLongPress,"
  },
  {
    "id" : "39255de1-1a3c-4a60-855f-0b42292e11ab",
    "prId" : 2826,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20d78769-7e98-4fe1-85ad-c368e3ab6f92",
        "parentId" : null,
        "authorId" : "4e76ff9c-c2fa-4e9c-86e7-21e393fec217",
        "body" : "s/\"with potentially hilarious but confusing results\"/\"with unexpected results\"/\n\nSince hilarity is rather subjective, let's keep this plain :)\n",
        "createdAt" : "2016-03-22T17:52:27Z",
        "updatedAt" : "2016-03-23T04:36:48Z",
        "lastEditedBy" : "4e76ff9c-c2fa-4e9c-86e7-21e393fec217",
        "tags" : [
        ]
      },
      {
        "id" : "8d140f4f-bb52-484a-abcb-328252cd2e5c",
        "parentId" : "20d78769-7e98-4fe1-85ad-c368e3ab6f92",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I think I can reliably say that I've never seen someone see the output of an app when the save/restore count was off, and not think it was funny. :-)\n",
        "createdAt" : "2016-03-23T04:26:11Z",
        "updatedAt" : "2016-03-23T04:36:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "942840748a960d46ed85e6751805faa2183a1075",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +1208,1212 @@  /// [Canvas.save]/[Canvas.saveLayer] and [Canvas.restore], otherwise all\n  /// subsequent painting on this canvas may be affected, with potentially\n  /// hilarious but confusing results.\n  ///\n  /// To paint text on a [Canvas], use a [TextPainter]."
  },
  {
    "id" : "e67bb7d4-9f3d-4a2e-b720-23abd367b244",
    "prId" : 2826,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "768a1066-73d0-4f05-8d70-5d33157b95bc",
        "parentId" : null,
        "authorId" : "4e76ff9c-c2fa-4e9c-86e7-21e393fec217",
        "body" : "Suggest using active voice:\n\"If non-null, the framework invokes this method to paint behind the children (widgets?).\"\n",
        "createdAt" : "2016-03-22T18:19:46Z",
        "updatedAt" : "2016-03-23T04:36:48Z",
        "lastEditedBy" : "4e76ff9c-c2fa-4e9c-86e7-21e393fec217",
        "tags" : [
        ]
      },
      {
        "id" : "ddce13f2-d52e-439b-a6b7-7ec2e986ef6f",
        "parentId" : "768a1066-73d0-4f05-8d70-5d33157b95bc",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This class could be used by non-framework code, so i am reluctant to explicitly say the framework is the caller.\n\nThe children are really render objects here (this is the layer below the widgets). I'm not sure what to say exactly. Technically there's only one child for this class. I hesitate to say \"descendants\", since some might not paint (consider e.g. RenderOffStage). Hence my compromise on \"children\".\n",
        "createdAt" : "2016-03-23T04:36:21Z",
        "updatedAt" : "2016-03-23T04:36:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "942840748a960d46ed85e6751805faa2183a1075",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +1289,1293 @@  /// The background custom paint delegate.\n  ///\n  /// This painter, if non-null, is invoked to paint behind the children.\n  CustomPainter get painter => _painter;\n  CustomPainter _painter;"
  },
  {
    "id" : "3592439f-b325-4f63-b920-3f1f11de5c16",
    "prId" : 3742,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0dc04264-5aeb-4f59-b0a7-f6f8e77f527e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "_checkForRepaint sounds like it would be idempotent. Maybe rename this function now that it's a change handler?\n",
        "createdAt" : "2016-05-04T22:18:52Z",
        "updatedAt" : "2016-05-04T23:01:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4211778535095741409c4ae6fc2922467c1be7a7",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +1547,1551 @@      markNeedsPaint();\n    }\n    if (attached) {\n      oldPainter._repaint?.removeListener(markNeedsPaint);\n      newPainter._repaint?.addListener(markNeedsPaint);"
  },
  {
    "id" : "0900f198-f4df-4ef6-aa01-6e203d84a54c",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "106f0696-9b36-47ec-bbd5-945ac0118a54",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "should this mention how expensive this usually ends up being?\n",
        "createdAt" : "2016-05-30T06:26:52Z",
        "updatedAt" : "2016-05-30T06:26:52Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +832,836 @@}\n\n/// Applies a filter to the existing painted content and then paints [child].\nclass RenderBackdropFilter extends RenderProxyBox {\n  /// Creates a backdrop filter."
  },
  {
    "id" : "70aa3d1b-30ae-4ba0-a4e2-7d22f72a75fd",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfb58d9c-79b1-4b69-add2-e4a90736c7f5",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "of the clip oval\n",
        "createdAt" : "2016-05-30T06:27:27Z",
        "updatedAt" : "2016-05-30T06:27:27Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 189,
    "diffHunk" : "@@ -1,1 +1024,1028 @@/// By default, inscribes an oval into its layout dimensions and prevents its\n/// child from painting outside that oval, but the size and location of the clip\n/// can be customized using a custom [clipper].\nclass RenderClipOval extends _RenderCustomClip<Rect> {\n  /// Creates an oval-shaped clip."
  },
  {
    "id" : "6fa0147e-5869-4a0f-85b2-3f638791160c",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "036549fb-42c9-4030-8bef-b13c73571739",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "size and location of the clip rect\n",
        "createdAt" : "2016-05-30T06:27:40Z",
        "updatedAt" : "2016-05-30T06:27:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +931,935 @@///\n/// By default, [RenderClipRect] prevents its child from painting outside its\n/// bounds, but the size and location of the clip can be customized using a\n/// custom [clipper].\nclass RenderClipRect extends _RenderCustomClip<Rect> {"
  },
  {
    "id" : "5059e941-b924-464d-a7f7-167905133bd4",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53cfb73f-bcdd-437b-9a9d-82f9290ea284",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "maybe mention that it's axis-aligned?\n",
        "createdAt" : "2016-05-30T06:28:06Z",
        "updatedAt" : "2016-05-30T06:28:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 187,
    "diffHunk" : "@@ -1,1 +1022,1026 @@/// Clips its child using an oval.\n///\n/// By default, inscribes an oval into its layout dimensions and prevents its\n/// child from painting outside that oval, but the size and location of the clip\n/// can be customized using a custom [clipper]."
  },
  {
    "id" : "78c9dd74-ee37-4e45-9d55-5e0e13f5a42a",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa4366ef-c4f6-4574-9a69-1ae7e734e3c4",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "asks\n",
        "createdAt" : "2016-05-30T06:28:46Z",
        "updatedAt" : "2016-05-30T06:28:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 253,
    "diffHunk" : "@@ -1,1 +1552,1556 @@/// Provides a canvas on which to draw during the paint phase.\n///\n/// When asked to paint, [CustomPaint] first ask its [painter] to paint on the\n/// current canvas, then it paints its child, and then, after painting its\n/// child, it ask its [foregroundPainter] to paint. The coodinate system of the"
  },
  {
    "id" : "d3b21bb1-19e7-4ee6-bba0-69235f8d6be0",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29af1ebf-dee8-4e38-b141-6053309170f6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "painters paint\n",
        "createdAt" : "2016-05-30T06:29:04Z",
        "updatedAt" : "2016-05-30T06:29:04Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 258,
    "diffHunk" : "@@ -1,1 +1557,1561 @@/// canvas matches the coordinate system of the [CustomPaint] object. The\n/// painters are expected to paint within a rectangle starting at the origin and\n/// encompassing a region of the given size. (If the painters paints outside\n/// those bounds, there might be insufficient memory allocated to rasterize the\n/// painting commands and the resulting behavior is undefined.)"
  },
  {
    "id" : "c29709c8-627d-454a-b568-bf9960d896f2",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "311b8ce9-9268-4ada-8c57-9b1a59bb5ee8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "check what the usual punctuation is for see-also lists... i don't think we normally put a comma there\n",
        "createdAt" : "2016-05-30T06:29:52Z",
        "updatedAt" : "2016-05-30T06:29:52Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "4f099953-cda7-4251-a9c8-baa9406fae1c",
        "parentId" : "311b8ce9-9268-4ada-8c57-9b1a59bb5ee8",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Nope.\n",
        "createdAt" : "2016-05-30T19:25:17Z",
        "updatedAt" : "2016-05-30T19:25:17Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 273,
    "diffHunk" : "@@ -1,1 +1569,1573 @@/// See also:\n///\n///  * [CustomPainter],\n///  * [Canvas]\nclass RenderCustomPaint extends RenderProxyBox {"
  },
  {
    "id" : "82857c86-673b-4027-84f8-30a8f73a9f2e",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38f6d7aa-a108-4f0a-b018-c40aae78dcc4",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "delegates\n",
        "createdAt" : "2016-05-30T06:29:59Z",
        "updatedAt" : "2016-05-30T06:29:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 276,
    "diffHunk" : "@@ -1,1 +1572,1576 @@///  * [Canvas]\nclass RenderCustomPaint extends RenderProxyBox {\n  /// Creates a render object that delgates its painting.\n  RenderCustomPaint({\n    CustomPainter painter,"
  },
  {
    "id" : "d8ea7f68-f9ee-4338-9b2c-45a62a2efcee",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "851789b4-4374-46fa-ab99-753ed780d6f1",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "invisible\n",
        "createdAt" : "2016-05-30T06:30:48Z",
        "updatedAt" : "2016-05-30T06:30:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 371,
    "diffHunk" : "@@ -1,1 +1928,1932 @@/// [ignoringSemantics] is null, it uses the value of [ignoring].\nclass RenderIgnorePointer extends RenderProxyBox {\n  /// Creates a render object that is invisivle to hit testing.\n  ///\n  /// The [ignoring] argument must not be null. If [ignoringSemantics], this"
  },
  {
    "id" : "ee13cb52-14f1-4bda-b442-eb164bfda1ca",
    "prId" : 4791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0d9aae9-17b7-4c60-bc39-598a2d702f09",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "add a test that verifies that the semantics are correct when you are changing whether these are present or not.\n",
        "createdAt" : "2016-06-30T17:35:04Z",
        "updatedAt" : "2016-07-01T00:18:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "043ed09b8804630d86f98f4e30e98ed51b808c7f",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +2127,2131 @@          semantics.addHorizontalScrollingActions();\n        if (onVerticalDragUpdate != null)\n          semantics.addVerticalScrollingActions();\n      };\n    }"
  },
  {
    "id" : "18440f7a-7e03-4f44-bf7f-09a9452a8969",
    "prId" : 4791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39167541-cae3-4c05-b475-1e06a26444b9",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "default, maybe?\n",
        "createdAt" : "2016-06-30T17:35:24Z",
        "updatedAt" : "2016-07-01T00:18:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "043ed09b8804630d86f98f4e30e98ed51b808c7f",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +2176,2180 @@        break;\n      case SemanticAction.increase:\n      case SemanticAction.decrease:\n        assert(false);\n        break;"
  },
  {
    "id" : "5adb0679-b91c-4405-8c01-b6b13353aca2",
    "prId" : 6325,
    "prUrl" : "https://github.com/flutter/flutter/pull/6325#pullrequestreview-4283692",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0038934-3687-4a21-861c-b7deee9ca0ff",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I think you should discuss reclip in the class description dartdocs (also maybe describe the general design of the class there), and in more detail in the constructor description.\n",
        "createdAt" : "2016-10-14T14:21:41Z",
        "updatedAt" : "2016-10-14T18:11:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3acd3916-5e6c-4db4-a8d2-61374b96ebd4",
        "parentId" : "d0038934-3687-4a21-861c-b7deee9ca0ff",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yes, custom painter has many more docs about this.  I'll try adapting them.\n",
        "createdAt" : "2016-10-14T14:54:34Z",
        "updatedAt" : "2016-10-14T18:11:45Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a535435a992ba78d8e8f4b1c3d8fe3d49dc76fc",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +877,881 @@  const CustomClipper({ Listenable reclip }) : _reclip = reclip;\n\n  final Listenable _reclip;\n\n  /// Returns a description of the clip given that the render object being"
  },
  {
    "id" : "28eee0b2-6815-4a8f-9123-f712b6176907",
    "prId" : 8560,
    "prUrl" : "https://github.com/flutter/flutter/pull/8560#pullrequestreview-25068934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1cd6ca99-4d80-4c0a-9eef-fafbf7afe530",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Maybe mention Stack and any other widgets that do clip here?",
        "createdAt" : "2017-03-03T20:36:47Z",
        "updatedAt" : "2017-03-03T23:22:35Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "cce41af5-250c-4ea4-99c6-af4d5d299c41",
        "parentId" : "1cd6ca99-4d80-4c0a-9eef-fafbf7afe530",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I was mistaken about Stack.  It doesn't clip all the time.",
        "createdAt" : "2017-03-03T20:59:10Z",
        "updatedAt" : "2017-03-03T23:22:35Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "a53f82d7193c088e314d8651c2c777089ff54c1b",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +888,892 @@///  * [ClipRRect], which can be customized with a [CustomClipper].\n///  * [ClipOval], which can be customized with a [CustomClipper].\n///  * [ClipPath], which can be customized with a [CustomClipper].\nabstract class CustomClipper<T> {\n  /// Creates a custom clipper."
  },
  {
    "id" : "ebba82dc-b92c-4231-98f8-4f04dee5d941",
    "prId" : 10805,
    "prUrl" : "https://github.com/flutter/flutter/pull/10805#pullrequestreview-45188746",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0261c0e1-036d-4066-a03a-598f357f5459",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "See also LeaderLayer",
        "createdAt" : "2017-06-19T18:21:20Z",
        "updatedAt" : "2017-06-20T16:16:17Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "f2bf4a65-63fb-475b-91a9-308103607029",
        "parentId" : "0261c0e1-036d-4066-a03a-598f357f5459",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "done",
        "createdAt" : "2017-06-20T16:12:40Z",
        "updatedAt" : "2017-06-20T16:16:17Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "567ba5c9b5e597777a2130d84103a3610e8c3a18",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +3045,3049 @@}\n\n/// Provides an anchor for a [RenderFollowerLayer].\n///\n/// See also:"
  },
  {
    "id" : "835df623-51ba-4853-9e81-d119bc6fcd9b",
    "prId" : 11286,
    "prUrl" : "https://github.com/flutter/flutter/pull/11286#pullrequestreview-50974082",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db8e0dc2-4b3b-4569-b0cc-beb3f74306f5",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this is O(N^2). Since validActions is only used for this, maybe it should be a Set instead of a List?\r\nOr maybe it should just be a pair of booleans (\"can scroll backwards\" and \"can scroll forwards\")? Then you could just check the booleans when adding the actions?",
        "createdAt" : "2017-07-19T16:38:40Z",
        "updatedAt" : "2017-07-19T17:02:05Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "42a0c84d-6e90-4295-8a44-bb95893e9a87",
        "parentId" : "db8e0dc2-4b3b-4569-b0cc-beb3f74306f5",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I wasn't too worried about that as validActions is guaranteed to be very small. Having said that, I refactored it to a Set, which gives us O(1) for `contains`. Happy to optimize further if this turns out to be an actual performance bottleneck.",
        "createdAt" : "2017-07-19T17:02:28Z",
        "updatedAt" : "2017-07-19T17:02:28Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ae248ee8e9b3f18f51ce998eb1bc32760f6099e",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +2829,2833 @@    // If a set of validActions has been provided only expose those.\n    if (validActions != null)\n      actions = actions.where((SemanticsAction action) => validActions.contains(action)).toList();\n\n    actions.forEach(node.addAction);"
  },
  {
    "id" : "a1742f84-e4c7-443b-a810-43f7bf11c2e0",
    "prId" : 11458,
    "prUrl" : "https://github.com/flutter/flutter/pull/11458#pullrequestreview-53379764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03be7101-6a64-4c7a-a706-c2079765397b",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "the regular toString for a decoration is now just fine. Having the method be toStringDeep for a decoration seems odd as a decoration doesn't have children.",
        "createdAt" : "2017-08-01T00:58:43Z",
        "updatedAt" : "2017-08-03T16:23:04Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "694d63ca9b1980078316ea3a9a8c8e1dd8bc6dd6",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +1486,1490 @@            'Every call to save() or saveLayer() must be matched by a call to restore().\\n'\n            'The decoration was:\\n'\n            '  $decoration\\n'\n            'The painter was:\\n'\n            '  $_painter'"
  },
  {
    "id" : "217f1b5a-dc43-4e2e-a114-e1303e911e20",
    "prId" : 12605,
    "prUrl" : "https://github.com/flutter/flutter/pull/12605#pullrequestreview-70383570",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c811ec70-e10e-4dce-8548-c1d9bddfef66",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "any particular reason not to do this now?",
        "createdAt" : "2017-10-18T22:35:12Z",
        "updatedAt" : "2017-10-18T22:56:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "139f4c73-d85c-4263-8c35-5f56f5011f89",
        "parentId" : "c811ec70-e10e-4dce-8548-c1d9bddfef66",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Let's do this in a follow-up. This requires some plumbing and this PR is already pretty big.",
        "createdAt" : "2017-10-18T22:55:49Z",
        "updatedAt" : "2017-10-18T22:56:20Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "696e428dc83db3220c39b3779f3cc48ad62357e1",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +3002,3006 @@\n    // TODO(goderbauer): this needs to be set even when there is only potential\n    //    for this to become a scroll view.\n    config.explicitChildNodes = onHorizontalDragUpdate != null\n        || onVerticalDragUpdate != null;"
  },
  {
    "id" : "048eb5ab-4211-4f66-b22b-969129aa9975",
    "prId" : 12695,
    "prUrl" : "https://github.com/flutter/flutter/pull/12695#pullrequestreview-71703439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "211ba658-0c79-43cc-922e-6f6fbcb9d649",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Can we have more details on each of these? What the semantics of the action are, examples of how the user might trigger it, and so on?\r\n\r\nThis is the main entry-point to this API so you cannot assume that the user will know about [SemanticsAction].",
        "createdAt" : "2017-10-24T20:33:16Z",
        "updatedAt" : "2017-10-26T00:38:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ae8a7207-653e-416e-995b-118fa6bf0487",
        "parentId" : "211ba658-0c79-43cc-922e-6f6fbcb9d649",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Done.",
        "createdAt" : "2017-10-24T23:22:13Z",
        "updatedAt" : "2017-10-26T00:38:38Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f25ff7753cd6c4610e8d5980b0ea4d572f1b492",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +3334,3338 @@  }\n\n  /// The handler for [SemanticsAction.tap].\n  ///\n  /// This is the semantic equivalent of a user briefly tapping the screen with"
  },
  {
    "id" : "485efa31-18ab-478d-970e-7b691dcbe9e9",
    "prId" : 12695,
    "prUrl" : "https://github.com/flutter/flutter/pull/12695#pullrequestreview-71712320",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3bc1fb67-ebf6-4d7c-8ecc-43b16f7a704e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i guess the concern is that the system will invoke our callbacks sometime after we've been told we no longer have an onTap handler?",
        "createdAt" : "2017-10-24T20:38:30Z",
        "updatedAt" : "2017-10-26T00:38:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "21d7cf10-c3f0-4143-9b25-dc98f7f0e801",
        "parentId" : "3bc1fb67-ebf6-4d7c-8ecc-43b16f7a704e",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "That was my concern. Does the system guarantee that that will never happen?",
        "createdAt" : "2017-10-24T23:23:07Z",
        "updatedAt" : "2017-10-26T00:38:38Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "7131fd0e-a8ca-4300-9542-0c8f31ee5cb6",
        "parentId" : "3bc1fb67-ebf6-4d7c-8ecc-43b16f7a704e",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "At the render level, I guess not. You can modify a render object, then drive the pipeline much later.",
        "createdAt" : "2017-10-25T00:22:25Z",
        "updatedAt" : "2017-10-26T00:38:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f25ff7753cd6c4610e8d5980b0ea4d572f1b492",
    "line" : 238,
    "diffHunk" : "@@ -1,1 +3539,3543 @@\n  void _performTap() {\n    if (onTap != null)\n      onTap();\n  }"
  },
  {
    "id" : "acb3c1b6-5127-4bbb-8112-07c1aa4e6a84",
    "prId" : 12870,
    "prUrl" : "https://github.com/flutter/flutter/pull/12870#pullrequestreview-74227495",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60f2f8bd-19cb-45a9-9e32-ca1dad54218b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you want to use the markNeedsResolve pattern, see some of the other classes here or in shifted_box",
        "createdAt" : "2017-11-03T21:38:16Z",
        "updatedAt" : "2017-11-03T21:58:44Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ed524b61-c3b4-4708-85b4-9efd7e06917f",
        "parentId" : "60f2f8bd-19cb-45a9-9e32-ca1dad54218b",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Transform allows alignment to be null which complicated applying the pattern. Plus the cost of resolving an Alignment is small.",
        "createdAt" : "2017-11-03T22:24:52Z",
        "updatedAt" : "2017-11-03T22:24:52Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "011fb70d7fbc816c5afdf7c7ac00a5aaada904ab",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +1661,1665 @@      return;\n    _textDirection = value;\n    markNeedsPaint();\n  }\n"
  }
]