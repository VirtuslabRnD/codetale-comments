[
  {
    "id" : "51bc1fa1-2ecc-4355-9767-d85966222afa",
    "prId" : 45942,
    "prUrl" : "https://github.com/flutter/flutter/pull/45942#pullrequestreview-325830069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ab8a2d7-c054-44fa-8697-35071d05b881",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "```suggestion\r\nimport 'sliver.dart';\r\n\r\n```",
        "createdAt" : "2019-12-03T00:23:34Z",
        "updatedAt" : "2019-12-16T19:08:12Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      }
    ],
    "commit" : "2acc2921c46a78b99f1d1fdb992e5c0314e5c606",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +10,14 @@import 'object.dart';\nimport 'sliver.dart';\n\n/// A base class for sliver render objects that resemble their children.\n///"
  },
  {
    "id" : "f10a7918-5328-48de-8e7a-e8515fcbd2c8",
    "prId" : 45942,
    "prUrl" : "https://github.com/flutter/flutter/pull/45942#pullrequestreview-325831406",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3bee3b0-94a9-470d-b3a1-ec3ac26eb6ea",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "```suggestion\r\nimport 'package:vector_math/vector_math_64.dart';\r\n\r\n```",
        "createdAt" : "2019-12-03T00:27:55Z",
        "updatedAt" : "2019-12-16T19:08:12Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      }
    ],
    "commit" : "2acc2921c46a78b99f1d1fdb992e5c0314e5c606",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +7,11 @@import 'package:flutter/foundation.dart';\nimport 'package:vector_math/vector_math_64.dart';\n\nimport 'object.dart';\nimport 'sliver.dart';"
  },
  {
    "id" : "4d9b7fa4-e408-4202-a053-29c9defd7184",
    "prId" : 45942,
    "prUrl" : "https://github.com/flutter/flutter/pull/45942#pullrequestreview-327043989",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b2b09c3-58a3-43e4-9b07-621fb603737f",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe add an see also to RenderProxyBox, since that seems to be doing the same in the box world? (Maybe also link back to this from RenderProxyBox)?",
        "createdAt" : "2019-12-04T18:02:04Z",
        "updatedAt" : "2019-12-16T19:08:12Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "2acc2921c46a78b99f1d1fdb992e5c0314e5c606",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@/// replace the proxy sliver with its child. However, RenderProxySliver is a\n/// useful base class for render objects that wish to mimic most, but not all,\n/// of the properties of their sliver child.\n///\n/// See also:"
  },
  {
    "id" : "cb89e029-3a9e-411d-b0b2-0fd680a7e183",
    "prId" : 45942,
    "prUrl" : "https://github.com/flutter/flutter/pull/45942#pullrequestreview-327142009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7ea9472-791c-4e7c-8e38-c20cd7430bde",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Here and elsewhere: Why do we require these objects to have a child?",
        "createdAt" : "2019-12-04T18:14:55Z",
        "updatedAt" : "2019-12-16T19:08:12Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "08f812eb-5782-434c-a88d-82eb0a8cc41c",
        "parentId" : "a7ea9472-791c-4e7c-8e38-c20cd7430bde",
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "I think they should have a child since these slivers mimic their children. If there is no child, there essentially is no sliver. What do you think?",
        "createdAt" : "2019-12-04T20:46:54Z",
        "updatedAt" : "2019-12-16T19:08:12Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      }
    ],
    "commit" : "2acc2921c46a78b99f1d1fdb992e5c0314e5c606",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +46,50 @@  @override\n  void performLayout() {\n    assert(child != null);\n    child.layout(constraints, parentUsesSize: true);\n    geometry = child.geometry;"
  }
]