[
  {
    "id" : "b5039855-35af-4467-8697-33b7499cadd1",
    "prId" : 1896,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e13de828-821f-4ba9-b4b0-e2ef5c512d54",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "This doesn't work quite as cleanly as I would like.  Ideally I would be able to associate a context with a parameter when I added to to a solver.  That way a single AutoLayoutParams object could interact with many RenderBoxes at once.  As currently implemented, this will blow up if you try to move the AutoLayoutParams object from one RenderBox to another and you add it to the new RenderBox before removing it from the old RenderBox.\n",
        "createdAt" : "2016-02-15T11:05:54Z",
        "updatedAt" : "2016-02-15T11:06:18Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "8cec2f98-e6cc-4933-913f-0d0abb2ff7f4",
        "parentId" : "e13de828-821f-4ba9-b4b0-e2ef5c512d54",
        "authorId" : "5c85d36f-d476-470a-8ea7-252cdb4fb025",
        "body" : ">  Ideally I would be able to associate a context with a parameter when I added to to a solver.\n\nYou can already do this on [parameters you add to the solver](https://github.com/flutter/flutter/blob/cdc4055444dc8f9f9183d0919cbf5e1c74d2c86b/packages/cassowary/lib/param.dart#L9). At that level of interaction with the solver, a `Variable` is the solvers view of an indeterminate in the linear equation while a `Param` maps that indeterminate to some quantity in the outside world. How changes to the `Variable` affect anything in the outside world is not the concern (nor responsibility) of the solver.\n\nThe `AutoLayoutParams` object was my (possibly clumsy) attempt at encapsulating all the variables on an entity that could possibly be affected by auto layout. We might want to retool that if you find the current interaction with the solver is not as elegant as it could be.\n",
        "createdAt" : "2016-02-15T11:36:50Z",
        "updatedAt" : "2016-02-15T11:36:50Z",
        "lastEditedBy" : "5c85d36f-d476-470a-8ea7-252cdb4fb025",
        "tags" : [
        ]
      }
    ],
    "commit" : "262dd7a63b69dec2f754910e7f25d353a6d63e63",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +87,91 @@    _params = value;\n    if (_params != null) {\n      assert(_params._renderBox == null);\n      _params._renderBox = _renderBox;\n      _params._addImplicitConstraints();"
  },
  {
    "id" : "9006a87f-94ce-492b-8822-c70f745dbe63",
    "prId" : 4232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "037ba047-ac3a-4745-b939-c0c18a6daa6a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "not necessarily in this PR, but the various members in this class could do with sample code showing how to use them.\n",
        "createdAt" : "2016-05-27T07:28:29Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "69ef23a7a145657fef2050fefab2e255a1e2bc95",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +11,15 @@/// for constraints. Also sets up and manages implicit constraints and edit\n/// variables.\nclass AutoLayoutRect {\n  /// Creates parameters for a rectangle for use with auto layout.\n  AutoLayoutRect()"
  }
]