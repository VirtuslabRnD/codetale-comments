[
  {
    "id" : "d522cfbe-9618-4f76-9cf0-9a2951677964",
    "prId" : 19565,
    "prUrl" : "https://github.com/flutter/flutter/pull/19565#pullrequestreview-138838066",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3581175b-cecb-4fae-8894-ce5e4393739a",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Please don't use SCREAMING_CAPS",
        "createdAt" : "2018-07-19T20:16:28Z",
        "updatedAt" : "2018-07-20T19:52:41Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "08976ac1-d452-4a10-8c79-5b878624d467",
        "parentId" : "3581175b-cecb-4fae-8894-ce5e4393739a",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "k",
        "createdAt" : "2018-07-19T20:29:20Z",
        "updatedAt" : "2018-07-20T19:52:41Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cff87a530f4f68e60f4805590439e0175054a45",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +14,18 @@\n\nenum _PlatformViewState {\n  uninitialized,\n  resizing,"
  },
  {
    "id" : "8190f7ee-7c3d-4a7f-97a7-0655492f7100",
    "prId" : 19565,
    "prUrl" : "https://github.com/flutter/flutter/pull/19565#pullrequestreview-139186344",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48b42971-dec6-4368-9593-f4c1b0a9c608",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "What happens if the constraints aren't bounded?",
        "createdAt" : "2018-07-20T18:43:13Z",
        "updatedAt" : "2018-07-20T19:52:41Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "e19eb96e-805e-4917-b6aa-4b952b64266b",
        "parentId" : "48b42971-dec6-4368-9593-f4c1b0a9c608",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Red screen of death :fearful:\r\nThat's the same behavior we have for Texture.\r\nNot sure what better to do here, I added a note about this to the class comments for the render object and the widget.",
        "createdAt" : "2018-07-20T19:39:16Z",
        "updatedAt" : "2018-07-20T19:52:41Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cff87a530f4f68e60f4805590439e0175054a45",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +63,67 @@  @override\n  void performResize() {\n    size = constraints.biggest;\n    _sizePlatformView();\n  }"
  },
  {
    "id" : "67525e3b-5e78-4e30-a322-2d01ed95e59b",
    "prId" : 20052,
    "prUrl" : "https://github.com/flutter/flutter/pull/20052#pullrequestreview-144073367",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c518508a-15c0-41fd-98f2-4ac8a35c8979",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "are you sure this doesn't need markNeedsLayout?",
        "createdAt" : "2018-08-07T08:50:49Z",
        "updatedAt" : "2018-08-07T21:32:14Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "84d8e5d0-360d-4de4-ab23-e9c85e0836e7",
        "parentId" : "c518508a-15c0-41fd-98f2-4ac8a35c8979",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "The renderbox layout doesn't change here, just the Android view controller.\r\nThat probably means we are going to place a different Android view in exactly the same rectangle, so no need to relayout the renderbox.",
        "createdAt" : "2018-08-07T16:15:15Z",
        "updatedAt" : "2018-08-07T21:32:14Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "95a10faccd45e8dc7ad39b8ed2b62285c262e908",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +73,77 @@      return;\n    _viewController = viewController;\n    _sizePlatformView();\n  }\n"
  },
  {
    "id" : "18c1a63f-7317-4f15-870b-cd07a83e84f5",
    "prId" : 20052,
    "prUrl" : "https://github.com/flutter/flutter/pull/20052#pullrequestreview-144142653",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb403615-22b3-46d7-8706-6adf88b0524b",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Is this screen density dependent?",
        "createdAt" : "2018-08-07T19:02:08Z",
        "updatedAt" : "2018-08-07T21:32:14Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "6747656b-5606-40e2-9d43-731bb99f889e",
        "parentId" : "eb403615-22b3-46d7-8706-6adf88b0524b",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Documentation for the field is kind of vague...\r\n\r\n\"A normalized value that describes the approximate size of the pointer touch area in relation to the maximum detectable size of the device.\"\r\n\r\nI'm guessing device is the pointing device.",
        "createdAt" : "2018-08-07T19:08:42Z",
        "updatedAt" : "2018-08-07T21:32:14Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "95a10faccd45e8dc7ad39b8ed2b62285c262e908",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +245,249 @@        pressure: event.pressure,\n        // Currently the engine omits the pointer size, for now I'm fixing this to 0.33 which is roughly\n        // what I typically see on Android.\n        //\n        // TODO(amirh): Use the original pointer's size."
  },
  {
    "id" : "2bf190fc-0fd2-495f-890f-af53f24c8999",
    "prId" : 20917,
    "prUrl" : "https://github.com/flutter/flutter/pull/20917#pullrequestreview-149886398",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03034183-c0f7-435e-8c4b-2413b649e54a",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Wouldn't we want a mode where nothing is routed to the Android view for showing static content?",
        "createdAt" : "2018-08-27T20:20:18Z",
        "updatedAt" : "2018-08-27T21:24:31Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "28733fd9-8454-4485-9a23-cccf5cd56af4",
        "parentId" : "03034183-c0f7-435e-8c4b-2413b649e54a",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "This can be achieved by setting a transparent hit test behavior",
        "createdAt" : "2018-08-27T21:11:35Z",
        "updatedAt" : "2018-08-27T21:24:31Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "81df3d65b5e95d5e732f1f8d5dd472ebfe051e31",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +50,54 @@/// [RenderAndroidView.gestureRecognizers] is empty, the gesture will be dispatched to the Android\n/// view iff it was not claimed by any other gesture recognizer.\n///\n/// See also:\n///  * [AndroidView] which is a widget that is used to show an Android view."
  },
  {
    "id" : "7974c4e2-35d8-494b-8c07-cebb52a6ae39",
    "prId" : 20917,
    "prUrl" : "https://github.com/flutter/flutter/pull/20917#pullrequestreview-149887133",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b74babe9-6a6c-4820-853e-11278a21ab9d",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Maybe call this forwardingGestureRecognizers? Since (if I understand the docs right) unlike all other gesture recognizers, nothing is responded to in dart",
        "createdAt" : "2018-08-27T20:20:43Z",
        "updatedAt" : "2018-08-27T21:24:31Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "083ff5f2-2a9e-420e-9a61-4682de240c35",
        "parentId" : "b74babe9-6a6c-4820-853e-11278a21ab9d",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "I see your point, but I'm not sure about calling it forwarding, as these gesture recognizers don't really forward anything (they win for their team so I guess you could think of them as \"forwarding\" the win, but I don't think that's what forwarding will mean to most people)",
        "createdAt" : "2018-08-27T21:18:47Z",
        "updatedAt" : "2018-08-27T21:24:31Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "81df3d65b5e95d5e732f1f8d5dd472ebfe051e31",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +60,64 @@    @required AndroidViewController viewController,\n    @required this.hitTestBehavior,\n    List<OneSequenceGestureRecognizer> gestureRecognizers = const <OneSequenceGestureRecognizer> [],\n  }) : assert(viewController != null),\n       assert(hitTestBehavior != null),"
  },
  {
    "id" : "ba4f29f6-c451-4248-a453-7ea4a515abe2",
    "prId" : 21657,
    "prUrl" : "https://github.com/flutter/flutter/pull/21657#pullrequestreview-164967042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3653183c-d35c-4f59-8b38-595a476116e8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "why do you check for null here if you're not allowed to pass null to setGestureRecognizers?",
        "createdAt" : "2018-10-15T23:23:24Z",
        "updatedAt" : "2018-10-16T03:19:16Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "b0f2eeb8-683c-4d36-af6d-02009f624b65",
        "parentId" : "3653183c-d35c-4f59-8b38-595a476116e8",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "on the first invocation of `updateGestureRecognizer` (from the constructor) we start with a null _gestureRecognizer.",
        "createdAt" : "2018-10-16T02:57:16Z",
        "updatedAt" : "2018-10-16T03:19:16Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ba182afc1499abf281a3cc3baad81de13c84da8",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +121,125 @@      return true;\n    }\n    if (a == null ||  b == null) {\n      return false;\n    }"
  },
  {
    "id" : "65d8ef84-abf5-49d6-9c58-4b42cc991e59",
    "prId" : 23412,
    "prUrl" : "https://github.com/flutter/flutter/pull/23412#pullrequestreview-168050763",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17709f0b-e4b8-424b-bfad-4f14e6ee800c",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Add more details about hit testing and how it delegates painting.",
        "createdAt" : "2018-10-23T23:56:05Z",
        "updatedAt" : "2018-10-31T03:03:44Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "5e77c6bc-8a0e-42ed-8bde-b68907fab525",
        "parentId" : "17709f0b-e4b8-424b-bfad-4f14e6ee800c",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Added a note about how the UIViews are composited (this is still churning so I'm purposely keeping it pretty abstract here).\r\n\r\nHit testing is explained on `PlatformViewHitTestBehavior`, skimming through proxy_box.dart I see that this is the common practice (e.g we don't normally describe hit testing behavior in the render objects class docs).\r\n\r\nRight now touch support is not yet implemented, I'm planning to add some docs about it when adding the support.",
        "createdAt" : "2018-10-24T17:17:40Z",
        "updatedAt" : "2018-10-31T03:03:44Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "e76c010c-4c91-4bff-a1ae-e46078fa4c97",
        "parentId" : "17709f0b-e4b8-424b-bfad-4f14e6ee800c",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "SG",
        "createdAt" : "2018-10-24T18:18:28Z",
        "updatedAt" : "2018-10-31T03:03:44Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "377482d8e8105b07b178979c923513d27275da98",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +240,244 @@/// [RenderUiKitView] is responsible for sizing and displaying an iOS\n/// [UIView](https://developer.apple.com/documentation/uikit/uiview).\n///\n/// UIViews are added as sub views of the FlutterView and are composited by Quartz.\n///"
  },
  {
    "id" : "0d9b5d31-06ac-4cf8-8ae9-d742f0f8e348",
    "prId" : 23412,
    "prUrl" : "https://github.com/flutter/flutter/pull/23412#pullrequestreview-168006816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91459fcf-ce0d-4f6c-88e8-1f5737b1b7a2",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Cross reference platform view services here again?",
        "createdAt" : "2018-10-23T23:58:43Z",
        "updatedAt" : "2018-10-31T03:03:44Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "f4fcab11-0944-4367-97bc-f358e368c5d1",
        "parentId" : "91459fcf-ce0d-4f6c-88e8-1f5737b1b7a2",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "done",
        "createdAt" : "2018-10-24T17:19:45Z",
        "updatedAt" : "2018-10-31T03:03:44Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "377482d8e8105b07b178979c923513d27275da98",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +260,264 @@\n\n  /// The unique identifier of the UIView controlled by this controller.\n  ///\n  /// Typically generated by [PlatformViewsRegistry.getNextPlatformViewId], the UIView"
  },
  {
    "id" : "fb95e865-f236-4b13-9ae8-f45ac71e5b00",
    "prId" : 23536,
    "prUrl" : "https://github.com/flutter/flutter/pull/23536#pullrequestreview-168602961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c480f4f-674d-4e99-8fc2-e411732d7276",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "We can probably delete the entire comment now",
        "createdAt" : "2018-10-25T21:55:05Z",
        "updatedAt" : "2018-10-26T18:13:45Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "9799b741935747d6ecbafc413b6b96b04d50b3dd",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +423,427 @@        orientation: event.orientation,\n        pressure: event.pressure,\n        size: event.size,\n        toolMajor: event.radiusMajor,\n        toolMinor: event.radiusMinor,"
  },
  {
    "id" : "b970048e-a574-4d3d-9461-f197b69342b0",
    "prId" : 24027,
    "prUrl" : "https://github.com/flutter/flutter/pull/24027#pullrequestreview-173072220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfed7c35-29e4-4141-a5bc-86a2ec7de80a",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Describe interplay with the platform hit test behavior? What happens when there are recognizers and the hit test is set to transparent etc?",
        "createdAt" : "2018-11-08T00:34:52Z",
        "updatedAt" : "2018-11-08T17:50:18Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "b1875274-48da-4ea4-a9eb-67214abe003d",
        "parentId" : "cfed7c35-29e4-4141-a5bc-86a2ec7de80a",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "The hit testing behavior is the same as any other render object, the different behaviors are described on the PlatformViewHitTestBehavior enum.\r\nWe don't normally comment on hit testing behaviors on the class doc for render objects...",
        "createdAt" : "2018-11-08T17:05:48Z",
        "updatedAt" : "2018-11-08T17:50:18Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "cad8bba8121460d3117398dda51abc132a43c162",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +68,72 @@/// view can be specified with factories in the `gestureRecognizers` constructor parameter or\n/// by calling `updateGestureRecognizers`. If the set of gesture recognizers is empty, the gesture\n/// will be dispatched to the platform view iff it was not claimed by any other gesture recognizer.\n/// {@endtemplate}\n///"
  },
  {
    "id" : "f21f9354-436e-4b7d-ab79-af62d4dc36bb",
    "prId" : 24027,
    "prUrl" : "https://github.com/flutter/flutter/pull/24027#pullrequestreview-173072220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cc9754e-b193-4271-80ec-9a47f1dd3e4d",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "What happens if you moved the UiKitView using GlobalKey? Do you need to do something on re-attach?",
        "createdAt" : "2018-11-08T00:41:39Z",
        "updatedAt" : "2018-11-08T17:50:18Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "d0abb5f9-3f2f-4269-a102-1bb55c0cd791",
        "parentId" : "4cc9754e-b193-4271-80ec-9a47f1dd3e4d",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "There's nothing special to do on attach, the reset will just reject any active unresolved gesture recognizers.",
        "createdAt" : "2018-11-08T17:21:41Z",
        "updatedAt" : "2018-11-08T17:50:18Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "cad8bba8121460d3117398dda51abc132a43c162",
    "line" : 187,
    "diffHunk" : "@@ -1,1 +348,352 @@  @override\n  void detach() {\n    _gestureRecognizer.reset();\n    super.detach();\n  }"
  },
  {
    "id" : "cf2870e8-0299-4788-8582-da8db466cee0",
    "prId" : 24027,
    "prUrl" : "https://github.com/flutter/flutter/pull/24027#pullrequestreview-173072220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94e6a686-4c08-458c-9ae6-a5c5480cc11c",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Maybe add some comments to summarize how this recognizer works",
        "createdAt" : "2018-11-08T00:42:09Z",
        "updatedAt" : "2018-11-08T17:50:18Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "8eeec0f2-66df-48d1-975a-4517c1eeaab2",
        "parentId" : "94e6a686-4c08-458c-9ae6-a5c5480cc11c",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Added here and for `_AndroidViewGestureRecognizer`",
        "createdAt" : "2018-11-08T17:27:20Z",
        "updatedAt" : "2018-11-08T17:50:18Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "cad8bba8121460d3117398dda51abc132a43c162",
    "line" : 197,
    "diffHunk" : "@@ -1,1 +358,362 @@// When the team wins a gesture the recognizer notifies the engine that it should release\n// the touch sequence to the embedded UIView.\nclass _UiKitViewGestureRecognizer extends OneSequenceGestureRecognizer {\n  _UiKitViewGestureRecognizer(this.controller, this.gestureRecognizerFactories) {\n    team = GestureArenaTeam();"
  },
  {
    "id" : "c71c0565-2ccd-458c-990e-3c1490d82eef",
    "prId" : 24027,
    "prUrl" : "https://github.com/flutter/flutter/pull/24027#pullrequestreview-173072220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37a6b856-df01-406b-94f5-9d00e18c15e1",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Might be sensible to add debugFillProperties with the inner recognizers",
        "createdAt" : "2018-11-08T00:52:20Z",
        "updatedAt" : "2018-11-08T17:50:18Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "2f6df393-e4f4-4ffa-851c-4e2ee37c6ecc",
        "parentId" : "37a6b856-df01-406b-94f5-9d00e18c15e1",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "The doc comment for this field says \"**very short** pretty description\", I guess that is because it is used for concatenating all the the recognizers of a `RawGestureDetector` into a single descriptive string. So I'd keep it short.\r\nAnyway right now this code path is not used as this is private and is not used with a raw gesture detector, it's mainly here to implement the full interface.",
        "createdAt" : "2018-11-08T17:37:36Z",
        "updatedAt" : "2018-11-08T17:50:18Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "cad8bba8121460d3117398dda51abc132a43c162",
    "line" : 227,
    "diffHunk" : "@@ -1,1 +388,392 @@  @override\n  String get debugDescription => 'UIKit view';\n\n  @override\n  void didStopTrackingLastPointer(int pointer) {}"
  },
  {
    "id" : "f4c82a1e-15c3-4e7e-a344-7d4de8f4d9a6",
    "prId" : 29304,
    "prUrl" : "https://github.com/flutter/flutter/pull/29304#pullrequestreview-214103865",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f513c67-13ec-45f9-88f5-375f2bba9fe1",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: remove extra blank line",
        "createdAt" : "2019-03-13T17:03:28Z",
        "updatedAt" : "2019-03-26T23:04:20Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "0841b9be-7743-4729-b2a6-3299fd67332b",
        "parentId" : "7f513c67-13ec-45f9-88f5-375f2bba9fe1",
        "authorId" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "body" : "done",
        "createdAt" : "2019-03-13T17:28:27Z",
        "updatedAt" : "2019-03-26T23:04:20Z",
        "lastEditedBy" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "tags" : [
        ]
      }
    ],
    "commit" : "59bf079e564f2d151297c46acc982ce20ad133f1",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +410,414 @@    config.platformViewId = _viewController.id;\n  }\n\n  @override\n  void attach(PipelineOwner owner) {"
  },
  {
    "id" : "d7b7fe1d-412b-4d23-a291-f53c55d55de9",
    "prId" : 36955,
    "prUrl" : "https://github.com/flutter/flutter/pull/36955#pullrequestreview-266868131",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0261ab0-724b-4fbb-825a-2b5b3d117b63",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "nit: new line before this",
        "createdAt" : "2019-07-25T19:59:12Z",
        "updatedAt" : "2019-08-01T23:24:39Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "dabb413d-039f-4eef-a50e-2de5c60653ba",
        "parentId" : "e0261ab0-724b-4fbb-825a-2b5b3d117b63",
        "authorId" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "body" : "done",
        "createdAt" : "2019-07-25T20:44:33Z",
        "updatedAt" : "2019-08-01T23:24:40Z",
        "lastEditedBy" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc061166c801ae6a038b970b8286c974ccb809bd",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +742,746 @@       _controller = controller;\n\n  /// Sets the [controller] for this render object.\n  ///\n  /// This value must not be null, and setting it to a new value will result in a repaint."
  },
  {
    "id" : "14f85f7f-0eec-4f69-b3d3-a6d6b73daf16",
    "prId" : 61671,
    "prUrl" : "https://github.com/flutter/flutter/pull/61671#pullrequestreview-450372497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f98bb6d1-c2d2-4ecd-bbd7-177923db07bd",
        "parentId" : null,
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "Add a comment to explain here. Probably link to the comment that proposed the workaround.",
        "createdAt" : "2020-07-16T23:38:25Z",
        "updatedAt" : "2020-07-17T04:55:54Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      },
      {
        "id" : "656815ad-e864-4a65-9433-1535818f3dd9",
        "parentId" : "f98bb6d1-c2d2-4ecd-bbd7-177923db07bd",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "+1",
        "createdAt" : "2020-07-16T23:46:00Z",
        "updatedAt" : "2020-07-17T04:55:54Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "9afcf189-31d0-4051-8013-87261c164baf",
        "parentId" : "f98bb6d1-c2d2-4ecd-bbd7-177923db07bd",
        "authorId" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "body" : "done",
        "createdAt" : "2020-07-17T04:57:37Z",
        "updatedAt" : "2020-07-17T04:57:37Z",
        "lastEditedBy" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2e7670976f8ae617665b672773e31ae5028fe3e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +402,406 @@    _gestureRecognizers = gestureRecognizerFactories.map(\n      (Factory<OneSequenceGestureRecognizer> recognizerFactory) {\n        final OneSequenceGestureRecognizer gestureRecognizer = recognizerFactory.constructor();\n        gestureRecognizer.team = team;\n        // The below gesture recognizers requires at least one non-empty callback to"
  }
]