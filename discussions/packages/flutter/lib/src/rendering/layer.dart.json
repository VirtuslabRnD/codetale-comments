[
  {
    "id" : "b29c9b6e-c424-499c-9999-6d515f21b64c",
    "prId" : 4232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "027ed13f-0cef-45c5-8b03-f1ff1038b082",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "no constructor dartdoc? :-)\n",
        "createdAt" : "2016-05-27T07:37:52Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c0031dd9-70df-44ee-8a07-e1ee3367d994",
        "parentId" : "027ed13f-0cef-45c5-8b03-f1ff1038b082",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I didn't doc the members either.  I'll have to come back to it.\n",
        "createdAt" : "2016-05-27T15:42:35Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "69ef23a7a145657fef2050fefab2e255a1e2bc95",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +119,123 @@/// (mojo-only) A layer that represents content from another process.\nclass ChildSceneLayer extends Layer {\n  ChildSceneLayer({\n    this.offset,\n    this.devicePixelRatio,"
  },
  {
    "id" : "a228b2ad-b189-4fe0-8dce-d9b40a972f60",
    "prId" : 4232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c7f8db2-afe6-42ae-b040-b76612bb1c18",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should document where the SkPicture trace goes and how to use it.\n",
        "createdAt" : "2016-05-27T07:38:16Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e705e2fa-fbd0-4a37-a2e5-dd76ef167843",
        "parentId" : "0c7f8db2-afe6-42ae-b040-b76612bb1c18",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I'm not sure this feature makes sense anymore.  We should replace it with something that integrates with the diagnostic server.\n",
        "createdAt" : "2016-05-27T15:43:11Z",
        "updatedAt" : "2016-05-27T15:48:14Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "69ef23a7a145657fef2050fefab2e255a1e2bc95",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +173,177 @@  /// The rasterizer threshold is an integer specifying the number of frame\n  /// intervals that the rasterizer must miss before it decides that the frame\n  /// is suitable for capturing an SkPicture trace for further analysis.\n  final int rasterizerThreshold;\n"
  },
  {
    "id" : "b9d0d72c-b942-48d1-bf8f-2aae98475aec",
    "prId" : 4316,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99623d9e-3c2b-4015-a7e1-fa2c0759a581",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Is this really physical pixels? e.g. consider if the ChildSceneLayer is inside a transformed layer with a scale and a rotation and a skew.\n",
        "createdAt" : "2016-06-02T16:44:07Z",
        "updatedAt" : "2016-06-02T17:56:18Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "30264609-da4d-47e4-9a50-2164f92e213b",
        "parentId" : "99623d9e-3c2b-4015-a7e1-fa2c0759a581",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yes, it needs to take that information into account.  The child needs to produce physical pixels so it needs to be informed how much scaling is going to happen by its parents.  (I'm sure we don't compute this accurately yet.)\n",
        "createdAt" : "2016-06-02T16:46:55Z",
        "updatedAt" : "2016-06-02T17:56:18Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "40ec6a2a76d0261416b7a20a588497a5c734817f",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +133,137 @@  Offset offset;\n\n  /// The number of physical pixels the child should produce for each logical pixel.\n  double devicePixelRatio;\n"
  },
  {
    "id" : "1a0b48f8-3990-46ff-aa01-2d56bfb06d86",
    "prId" : 8819,
    "prUrl" : "https://github.com/flutter/flutter/pull/8819#pullrequestreview-27250316",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5596d352-1917-4e95-b6c3-6e3341dc7093",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this should explain \"physical model\"",
        "createdAt" : "2017-03-16T03:40:24Z",
        "updatedAt" : "2017-03-16T03:46:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "80c028a9-574c-4cc1-b916-a1a2b6db60b5",
        "parentId" : "5596d352-1917-4e95-b6c3-6e3341dc7093",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "done.",
        "createdAt" : "2017-03-16T03:46:33Z",
        "updatedAt" : "2017-03-16T03:46:56Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4e33f636567c7cf76660edfa0ad0ddecc13f670",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +523,527 @@}\n\n/// A composited layer that uses a physical model to producing lighting effects.\n///\n/// For example, the layer casts a shadow according to its geometry and the"
  },
  {
    "id" : "faf9d5c6-77f0-4409-9188-1996fe57a198",
    "prId" : 9456,
    "prUrl" : "https://github.com/flutter/flutter/pull/9456#pullrequestreview-33376848",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbf32adb-ab41-4344-b1c0-3f2c53a6310e",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "parent is null for the root layer?",
        "createdAt" : "2017-04-18T21:33:02Z",
        "updatedAt" : "2017-04-18T23:47:57Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "63c31c07-7114-48bc-9aa9-0e0169a28657",
        "parentId" : "bbf32adb-ab41-4344-b1c0-3f2c53a6310e",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "added",
        "createdAt" : "2017-04-18T23:36:40Z",
        "updatedAt" : "2017-04-18T23:47:57Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f11a74a7adf54bac58830a11c214db57ec7d5622",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +33,37 @@///    for painting [RenderObject] trees on the the display.\nabstract class Layer extends AbstractNode with TreeDiagnosticsMixin {\n  /// This layer's parent in the layer tree.\n  ///\n  /// The [parent] of the root node in the layer tree is null."
  },
  {
    "id" : "1a8bcdab-0865-40ef-960d-bc4029f66e9b",
    "prId" : 9456,
    "prUrl" : "https://github.com/flutter/flutter/pull/9456#pullrequestreview-33377792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9023a1ae-3c37-4852-b5bc-2beab139085a",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This might be a good place for a See Also that links to the subclasses.",
        "createdAt" : "2017-04-18T21:42:11Z",
        "updatedAt" : "2017-04-18T23:47:57Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "644d5bd1-8542-4aa8-ac87-d9c23d3bd3b5",
        "parentId" : "9023a1ae-3c37-4852-b5bc-2beab139085a",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "the docs will include a list of subclasses automatically",
        "createdAt" : "2017-04-18T23:44:25Z",
        "updatedAt" : "2017-04-18T23:47:57Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f11a74a7adf54bac58830a11c214db57ec7d5622",
    "line" : 183,
    "diffHunk" : "@@ -1,1 +203,207 @@/// A [ContainerLayer] instance merely takes a list of children and inserts them\n/// into the composited rendering in order. There are subclasses of\n/// [ContainerLayer] which apply more elaborate effects in the process.\nclass ContainerLayer extends Layer {\n  /// The first composited layer in this layer's child list."
  },
  {
    "id" : "a7607000-851f-4b4d-9625-6d25a89fc7f4",
    "prId" : 9456,
    "prUrl" : "https://github.com/flutter/flutter/pull/9456#pullrequestreview-33564210",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d29c834-b247-4602-b47f-2ad9b2dc36f6",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I was a little surprised to see the handmade linked list support here. Maybe this class should be a LinkedListEntry?",
        "createdAt" : "2017-04-18T21:46:46Z",
        "updatedAt" : "2017-04-18T23:47:57Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "a0f96290-4707-496c-8c89-a619d032b420",
        "parentId" : "7d29c834-b247-4602-b47f-2ad9b2dc36f6",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I'm not sure it really matters. This is really low-level stuff in the framework. Unless there's a performance reason to do it (and I wouldn't be surprised if it was the opposite), I'd rather keep this simple.",
        "createdAt" : "2017-04-18T23:46:50Z",
        "updatedAt" : "2017-04-18T23:47:57Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "d6410951-8335-4fff-8d25-c1179dae95d9",
        "parentId" : "7d29c834-b247-4602-b47f-2ad9b2dc36f6",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Using LinkedListEntry implies exposing more list manipulation via the API that we want, unfortunately.",
        "createdAt" : "2017-04-19T17:20:51Z",
        "updatedAt" : "2017-04-19T17:20:51Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "f11a74a7adf54bac58830a11c214db57ec7d5622",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +32,36 @@///  * [RenderView.compositeFrame], which implements this recomposition protocol\n///    for painting [RenderObject] trees on the the display.\nabstract class Layer extends AbstractNode with TreeDiagnosticsMixin {\n  /// This layer's parent in the layer tree.\n  ///"
  }
]