[
  {
    "id" : "06cc1b07-03b8-41fc-a73f-1bf5d4ab195f",
    "prId" : 3963,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45a1b528-0d89-493c-8353-9f3958d86a20",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this should say what direction the saw tooth is in. Presumably, it goes from 0.0 to 1.0 `count` times, with a discontinuous drop from 1.0 back to 0.0 between each iteration.\n",
        "createdAt" : "2016-05-17T16:50:08Z",
        "updatedAt" : "2016-05-17T17:39:21Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "00e83e50cb51134f34b5b875b97ab793894086ab",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +46,50 @@}\n\n/// A sawtooth curve that repeats a given number of times over the unit interval.\n///\n/// The curve rises linearly from 0.0 to 1.0 and then falls discontinuously back"
  },
  {
    "id" : "9636a355-2d0f-482d-82ba-b5e3163d5d59",
    "prId" : 3963,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f94a2cd-7a5d-4fea-9978-18adda618800",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "presumably where the comment below says \"step\" it really means \"`t==threshold`\" or some such.\n",
        "createdAt" : "2016-05-17T16:51:16Z",
        "updatedAt" : "2016-05-17T17:39:21Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "00e83e50cb51134f34b5b875b97ab793894086ab",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +115,119 @@  const Step(this.threshold);\n\n  /// The value before which the curve is 0.0 and after which the curve is 1.0.\n  ///\n  /// When t is exactly [threshold], the curve has the value 1.0."
  },
  {
    "id" : "840cf2f2-2644-4bb2-a8ee-2f609b21548d",
    "prId" : 3963,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "323393ac-c363-4c99-b749-7c844266082a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we really should explain FlippedCurve more.\n",
        "createdAt" : "2016-05-17T16:52:34Z",
        "updatedAt" : "2016-05-17T17:39:21Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "00e83e50cb51134f34b5b875b97ab793894086ab",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +209,213 @@}\n\n/// A curve that is the reversed inversion of its given curve.\n///\n/// This curve evalutes the given curve in reverse (i.e., from 1.0 to 0.0 as t"
  },
  {
    "id" : "dec7af6e-353a-430e-842e-34aefd40fae2",
    "prId" : 21540,
    "prUrl" : "https://github.com/flutter/flutter/pull/21540#pullrequestreview-157407093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bdd8f3e-33f1-445d-9608-433294ca8a59",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Does \" a mapping of the unit interval to the unit interval\" really help clarify what an easing curve is?",
        "createdAt" : "2018-09-07T16:57:33Z",
        "updatedAt" : "2018-09-22T09:05:34Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "01cc0c93-6af3-4b2c-b8b0-383f583e5e58",
        "parentId" : "1bdd8f3e-33f1-445d-9608-433294ca8a59",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It explains it better than \"easing curve\" for people who understand math but not the term \"easing curve\"... I'm open to even better explanations though. :-)",
        "createdAt" : "2018-09-07T17:48:57Z",
        "updatedAt" : "2018-09-22T09:05:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "8e13bcf7-cd3b-4ecf-b541-c7fdafffbe24",
        "parentId" : "1bdd8f3e-33f1-445d-9608-433294ca8a59",
        "authorId" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "body" : "Maybe we can use the definition of easing from Material Design?\r\n\r\n> Easing is a way to adjust an animation’s rate of change. Easing allows transitioning elements to speed up and slow down, rather than moving at a constant rate.\r\n>\r\n> In the real world, things don’t start or stop moving instantaneously. They take time to speed up and slow down. Easing makes elements move as though influenced by natural forces like friction.\"\r\n\r\nhttps://material.io/design/motion/speed.html#easing\r\n\r\n\r\nAlternatives I've seen from design website:\r\n\r\n* \"An easing curve is a line that defines the acceleration pattern on a graph.\" [1]\r\n* \"Easing functions specify the rate of change of a parameter over time.\" [2]\r\n\r\n\r\n\r\n1. https://www.invisionapp.com/blog/crafting-easing-curves/\r\n2. https://easings.net/\r\n\r\n",
        "createdAt" : "2018-09-07T17:59:03Z",
        "updatedAt" : "2018-09-22T09:05:34Z",
        "lastEditedBy" : "4c4f4d7a-cf21-4e96-a7ad-56aa3a3c1b4e",
        "tags" : [
        ]
      },
      {
        "id" : "395e7b0c-4db2-43e2-a0f8-a5d61d94a8e8",
        "parentId" : "1bdd8f3e-33f1-445d-9608-433294ca8a59",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "the next sentence is: \"Easing curves are used to adjust the rate of change of an animation over time.\"\r\n\r\nI've added \"allowing them to speed up and slow down, rather than moving at a constant rate.\"\r\n\r\n\"a line that defines the acceleration pattern on a graph\" doesn't really make sense.\r\n\"specify the rate of change of a parameter over time\" is what the current text says.",
        "createdAt" : "2018-09-20T18:26:03Z",
        "updatedAt" : "2018-09-22T09:05:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8e73d7e44a0bd65d5403a9d0157143ff3a940d6",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +7,11 @@import 'package:flutter/foundation.dart';\n\n/// An easing curve, i.e. a mapping of the unit interval to the unit interval.\n///\n/// Easing curves are used to adjust the rate of change of an animation over"
  },
  {
    "id" : "302502bb-e027-49f0-89f1-c94fde7adc74",
    "prId" : 25488,
    "prUrl" : "https://github.com/flutter/flutter/pull/25488#pullrequestreview-194240702",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1dc41fc3-3559-4c64-85ad-daac3181192e",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "there's a lot of subjective adjectives here. What each person can mentally visualize this to be can be very different. ",
        "createdAt" : "2019-01-11T02:45:42Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "de101b0b-e04d-4dc9-a8c0-238980d925e5",
        "parentId" : "1dc41fc3-3559-4c64-85ad-daac3181192e",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "I'm not sure how to make this easier to understand? I'm also linked the bezier curve so people can see exactly what it looks like by clicking on the link?",
        "createdAt" : "2019-01-11T04:54:47Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "fe95541b-0ecb-4210-bbda-8f4e0b9baa67",
        "parentId" : "1dc41fc3-3559-4c64-85ad-daac3181192e",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Not sure how publicly re-usable this is if we can't describe it in an objective way. I'd just leave this privately defined in route.dart.",
        "createdAt" : "2019-01-18T01:43:57Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "dc0abbca-bf48-4404-8443-441bd611d8c2",
        "parentId" : "1dc41fc3-3559-4c64-85ad-daac3181192e",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "I can totally do this, but I guess I'm unclear on how you're measuring a description's objectivity? ",
        "createdAt" : "2019-01-18T19:06:53Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a1257890f13c3f0d11776b29862d4e6976afcea",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +519,523 @@  ///\n  /// {@animation 464 192 https://flutter.github.io/assets-for-api-docs/assets/animation/fast_linear_to_slow_ease_in.mp4}\n  static const Cubic fastLinearToSlowEaseIn = Cubic(0.18, 1.0, 0.04, 1.0);\n\n  /// A cubic animation curve that speeds up quickly and ends slowly."
  },
  {
    "id" : "3aae6b97-797a-450a-91a2-ab659b106f2e",
    "prId" : 25488,
    "prUrl" : "https://github.com/flutter/flutter/pull/25488#pullrequestreview-191500550",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "311bd8f9-2508-47ca-a2ee-20e2102aec71",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "These ones seem better described. Remember to add an animation movie here and in the class doc. @dnfield has this fresh in his mind so he might be able to help.",
        "createdAt" : "2019-01-11T02:46:16Z",
        "updatedAt" : "2019-01-18T21:36:31Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a1257890f13c3f0d11776b29862d4e6976afcea",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +533,537 @@  /// A cubic animation curve that starts starts slowly and ends linearly.\n  ///\n  /// The symmetric animation to [linearToEaseOut].\n  ///\n  /// {@animation 464 192 https://flutter.github.io/assets-for-api-docs/assets/animation/curve_ease_in_to_linear.mp4}"
  },
  {
    "id" : "5c60f65f-4e9b-4d5f-b82b-5a7848aa135b",
    "prId" : 25788,
    "prUrl" : "https://github.com/flutter/flutter/pull/25788#pullrequestreview-189940773",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c20922ae-9f53-4457-b53e-77f5ca01b121",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "It would be helpful for each Sine/Quad/Cubic/Quart/Expo/Circ/Back function to have a line explaining why it's named this way.  e.g. \"This curve is like [Curves.easeIn], but with sinusoidal easing for a gentler curve\".  Penner's chapter on this topic (http://robertpenner.com/easing/penner_chapter7_tweening.pdf) may be helpful here!",
        "createdAt" : "2019-01-07T18:45:51Z",
        "updatedAt" : "2019-01-08T17:17:46Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8801b70c7367ba28e6bd0e470a6ee6233b3de91",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +528,532 @@  /// hard to distinguish from [Curves.linear] at a glance.\n  ///\n  /// Derived from Robert Penner’s easing functions.\n  ///\n  /// {@animation 464 192 https://flutter.github.io/assets-for-api-docs/assets/animation/curve_ease_in_sine.mp4}"
  },
  {
    "id" : "ddc5f352-a2a2-4ea4-aaab-a7a93a6d3d8e",
    "prId" : 25788,
    "prUrl" : "https://github.com/flutter/flutter/pull/25788#pullrequestreview-189941565",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f44a857a-6d8c-4021-8a97-736c54df9517",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Please add a dartdoc tag for each of these as well - you can see the file names in the linked PR in assets-for-api-docs.  e.g., this one should be:\r\n\r\n```\r\n{@animation 464 192 https://flutter.github.io/assets-for-api-docs/assets/animation/curve_ease_in_sine.mp4}\r\n```",
        "createdAt" : "2019-01-07T18:46:49Z",
        "updatedAt" : "2019-01-08T17:17:46Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "0306a88d-6b02-49db-a085-f6810dae3540",
        "parentId" : "f44a857a-6d8c-4021-8a97-736c54df9517",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "(This will add an animation of the curve type to our docs, but I still think we should have some kind of prose around what differentiates these curves)",
        "createdAt" : "2019-01-07T18:47:51Z",
        "updatedAt" : "2019-01-08T17:17:46Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8801b70c7367ba28e6bd0e470a6ee6233b3de91",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +528,532 @@  /// hard to distinguish from [Curves.linear] at a glance.\n  ///\n  /// Derived from Robert Penner’s easing functions.\n  ///\n  /// {@animation 464 192 https://flutter.github.io/assets-for-api-docs/assets/animation/curve_ease_in_sine.mp4}"
  },
  {
    "id" : "d3580279-6f06-48ba-b30e-d9de94c9f3e2",
    "prId" : 25788,
    "prUrl" : "https://github.com/flutter/flutter/pull/25788#pullrequestreview-190737832",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2186e4aa-f9e4-49f2-8d81-23d865a618f8",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "If you'd like to help with it, it'd be nice to add these new videos to the class doc on like 489 too :D",
        "createdAt" : "2019-01-09T01:04:40Z",
        "updatedAt" : "2019-01-09T01:04:41Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "6019e5ae-cbd1-45bf-beac-7c9066002104",
        "parentId" : "2186e4aa-f9e4-49f2-8d81-23d865a618f8",
        "authorId" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "body" : "Oops! Will submit a PR shortly :+1: ",
        "createdAt" : "2019-01-09T13:59:54Z",
        "updatedAt" : "2019-01-09T13:59:55Z",
        "lastEditedBy" : "8d794178-0b47-4a99-9f44-641c78e4c6a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8801b70c7367ba28e6bd0e470a6ee6233b3de91",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +530,534 @@  /// Derived from Robert Penner’s easing functions.\n  ///\n  /// {@animation 464 192 https://flutter.github.io/assets-for-api-docs/assets/animation/curve_ease_in_sine.mp4}\n  static const Cubic easeInSine = Cubic(0.47, 0, 0.745, 0.715);\n"
  },
  {
    "id" : "1bb81dff-68ab-4bb6-b6b6-0c891dcec305",
    "prId" : 27929,
    "prUrl" : "https://github.com/flutter/flutter/pull/27929#pullrequestreview-203700846",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad3c7a85-c5b8-4c7a-940c-adadf61614b2",
        "parentId" : null,
        "authorId" : "3bd4879d-8ad5-4053-ab97-f5d0b89df535",
        "body" : "The code already uses `1.0` instead of `1`. So this makes it more consistent.",
        "createdAt" : "2019-02-14T11:48:19Z",
        "updatedAt" : "2019-02-14T11:48:26Z",
        "lastEditedBy" : "3bd4879d-8ad5-4053-ab97-f5d0b89df535",
        "tags" : [
        ]
      }
    ],
    "commit" : "630e53ca10689e8e4eaea4aa7afbc6e1abdaacca",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +803,807 @@  ///\n  /// {@animation 464 192 https://flutter.github.io/assets-for-api-docs/assets/animation/curve_ease_in_out_quart.mp4}\n  static const Cubic easeInOutQuart = Cubic(0.77, 0.0, 0.175, 1.0);\n\n  /// A cubic animation curve that starts slowly, speeds up, and then and ends"
  },
  {
    "id" : "1cd18353-a4b2-4666-b9a5-87b89e0ea822",
    "prId" : 47547,
    "prUrl" : "https://github.com/flutter/flutter/pull/47547#pullrequestreview-338959183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6531bfa5-91ad-42ff-aef6-83eecd4ae2d6",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This should describe how this is different from a regular \"Curve\"",
        "createdAt" : "2020-01-06T18:09:35Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "918e54c7-5e21-4320-9365-48d24c0b0d91",
        "parentId" : "6531bfa5-91ad-42ff-aef6-83eecd4ae2d6",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Isn't Curve also a 2D curve?",
        "createdAt" : "2020-01-06T18:10:10Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "6c5431d1-a363-4849-8f81-faecd2990918",
        "parentId" : "6531bfa5-91ad-42ff-aef6-83eecd4ae2d6",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "The only difference seems to be that Curve maps t=1.0 and t=0.0 to 1.0 and 0.0, respectively, while this curve doesn't have this requirement? ",
        "createdAt" : "2020-01-06T18:11:16Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "c48a84ac-6c96-45d4-a0ea-e3b50489f825",
        "parentId" : "6531bfa5-91ad-42ff-aef6-83eecd4ae2d6",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "It also seems somewhat confusing that a Curve2D is not a Curve (or vice versa). ",
        "createdAt" : "2020-01-06T18:11:47Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "e58a9d23-64d2-46e7-814e-cf4cdbf15e1a",
        "parentId" : "6531bfa5-91ad-42ff-aef6-83eecd4ae2d6",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "The naming is confusing.",
        "createdAt" : "2020-01-06T18:39:21Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "d066f7e9-7600-4ce2-9a54-fb22bff14d9e",
        "parentId" : "6531bfa5-91ad-42ff-aef6-83eecd4ae2d6",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "I can see how it can be confusing, but no, `Curve` is not a 2D curve in the sense that the output of the parametric curve is a single double value, while the output of the `Curve2D` class is an `Offset`.  I.e. `Curve` is mapping `f(t) -> x`, where `Curve2D` is mapping `f(t) -> (x, y)`.",
        "createdAt" : "2020-01-06T18:57:46Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "09743245-d59c-4cd6-a39a-69f075ea1bea",
        "parentId" : "6531bfa5-91ad-42ff-aef6-83eecd4ae2d6",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "OK, I've modified things so that there is a base generic `ParametricCurve` class that both `Curve` and `Curve2D` descend from. I've moved some of the non-Catmull-Rom-specific functions up to `Curve2D`, and added some more documentation around each of the curve classes.",
        "createdAt" : "2020-01-07T01:59:41Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b576c80db31166fb6e6d22cf5c6ff9900943957b",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +305,309 @@}\n\n/// Abstract class that defines an API for evaluating 2D parametric curves.\n///\n/// [Curve2D] differs from [Curve] in that the values interpolated are [Offset]"
  },
  {
    "id" : "60f02d00-bd01-40f8-baf1-fdea2f34aa3c",
    "prId" : 47547,
    "prUrl" : "https://github.com/flutter/flutter/pull/47547#pullrequestreview-338959183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6994f653-9448-4ddd-8a32-a08dac8de1a3",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "What's a handle position? Are the endHandle and  startHandle offsets going to be on the curve? How are these offsets different from the ones given in controlPoints?",
        "createdAt" : "2020-01-06T18:19:38Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "ed927c69-a99d-4946-b951-beed993c6bbe",
        "parentId" : "6994f653-9448-4ddd-8a32-a08dac8de1a3",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Added better descriptions. Does it make more sense now?",
        "createdAt" : "2020-01-07T02:05:30Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b576c80db31166fb6e6d22cf5c6ff9900943957b",
    "line" : 425,
    "diffHunk" : "@@ -1,1 +606,610 @@  ///\n  /// The optional `endHandle` and `startHandle` points are the beginning and\n  /// ending handle positions. If not specified, they are created automatically\n  /// by extending the line formed by the first and/or last line segment in the\n  /// `controlPoints`, respectively. The spline will not go through these handle"
  },
  {
    "id" : "470fe71a-9dbe-4e80-b25d-51a71f944fa1",
    "prId" : 47547,
    "prUrl" : "https://github.com/flutter/flutter/pull/47547#pullrequestreview-338959183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fea9ee8e-cb2d-4f8a-ab0e-8f5d827d56af",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe mention here that the curve will also go through 0.0,0.0 and 1.0,1.0?",
        "createdAt" : "2020-01-06T18:31:23Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "ee89eb62-3afb-4d15-95b4-cb900dbde573",
        "parentId" : "fea9ee8e-cb2d-4f8a-ab0e-8f5d827d56af",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done.",
        "createdAt" : "2020-01-07T02:52:29Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b576c80db31166fb6e6d22cf5c6ff9900943957b",
    "line" : 602,
    "diffHunk" : "@@ -1,1 +783,787 @@  /// Constructs a centripetal [CatmullRomCurve].\n  ///\n  /// It takes a list of two or more points that describe the points that the\n  /// curve must pass through. See [controlPoints] for a description of the\n  /// restrictions placed on control points. In addition to the given"
  },
  {
    "id" : "d2524b60-59b0-4982-b3c6-6c354ade1535",
    "prId" : 47547,
    "prUrl" : "https://github.com/flutter/flutter/pull/47547#pullrequestreview-338959183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7eb278d1-c326-454a-9b3c-cd5b844ab945",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Is there ever a reason to call this in non-debug mode? Should this be named debugValidateControlPoints and be a no-op in release mode?",
        "createdAt" : "2020-01-06T18:37:35Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "7d405538-cad9-4f92-9217-6eb152b8084f",
        "parentId" : "7eb278d1-c326-454a-9b3c-cd5b844ab945",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes, you might want to validate a proposed change in a curve to make sure it would still be valid before applying it.  The curve explorer uses this.",
        "createdAt" : "2020-01-07T03:52:23Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b576c80db31166fb6e6d22cf5c6ff9900943957b",
    "line" : 712,
    "diffHunk" : "@@ -1,1 +893,897 @@  /// well-formed and will not produce a spline that self-intersects.\n  ///\n  /// This method is also used in debug mode to validate a curve to make sure\n  /// that it won't violate the contract for the [new CatmullRomCurve]\n  /// constructor."
  },
  {
    "id" : "2f2a7dac-082f-440e-acf1-04a11150dad3",
    "prId" : 47547,
    "prUrl" : "https://github.com/flutter/flutter/pull/47547#pullrequestreview-338959183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9aca44b5-de55-4070-9ed1-e85bac7b0cde",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Wondering whether we should do this computation lazily the first time we need it.",
        "createdAt" : "2020-01-06T18:40:11Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "51cd85fb-29e9-410c-af3d-b150e83acdc3",
        "parentId" : "9aca44b5-de55-4070-9ed1-e85bac7b0cde",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Well, I thought about that, but the problem is that it's hard to know when the calculation will happen then, and might make things janky when you don't want them to be, and to avoid it you'd have to know to evaluate the curve once first.  This way you can create them ahead of time and be ready to go.\r\n\r\nThe down side of that, of course, is that if you have a lot of them and don't use any, then you did a lot of work for nothing.  I'm not sure which is better.\r\n\r\nThe other downside of being lazy is that then I have to store the `controlPoints` instead of throwing them away like I do now, because I only need the cubic segments to evaluate the curve. It would increase the storage per object by about 75%.",
        "createdAt" : "2020-01-07T02:21:15Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "0600f1c9-34b5-442c-8820-a2386af97003",
        "parentId" : "9aca44b5-de55-4070-9ed1-e85bac7b0cde",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "I could add a `.lazy` or `.precompute` constructor that does one or the other (and just not store the control points in the non-lazy case).",
        "createdAt" : "2020-01-07T02:51:44Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "5a3ff18a-57f9-4417-93d9-09eb04e58bf6",
        "parentId" : "9aca44b5-de55-4070-9ed1-e85bac7b0cde",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "I've added a `.precompute` constructor, and switched the base constructor to be lazy by default.",
        "createdAt" : "2020-01-07T02:56:08Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b576c80db31166fb6e6d22cf5c6ff9900943957b",
    "line" : 495,
    "diffHunk" : "@@ -1,1 +676,680 @@    ];\n\n    // An alpha of 0.5 is what makes it a centripetal Catmull-Rom spline. A\n    // value of 0.0 would make it a uniform Catmull-Rom spline, and a value of\n    // 1.0 would make it a chordal Catmull-Rom spline. Non-centripetal values"
  },
  {
    "id" : "c8e17071-c850-4745-a327-dbfa86373f9b",
    "prId" : 47547,
    "prUrl" : "https://github.com/flutter/flutter/pull/47547#pullrequestreview-339656245",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56e21867-ff31-49da-8f66-a068f7d712d3",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It might be clearer to say that this method asserts that t is between 0 and 1 before delegating to transformInternal.",
        "createdAt" : "2020-01-08T00:34:04Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "8e969ea5-7bd4-45ef-a14c-03e15a363a5b",
        "parentId" : "56e21867-ff31-49da-8f66-a068f7d712d3",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done.",
        "createdAt" : "2020-01-08T05:46:27Z",
        "updatedAt" : "2020-01-08T05:54:17Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b576c80db31166fb6e6d22cf5c6ff9900943957b",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +29,33 @@  ///\n  /// It is recommended that subclasses override [transformInternal] instead of\n  /// this function, as the above case is already handled in the default\n  /// implementation of [transform], which delegates the remaining logic to\n  /// [transformInternal]."
  },
  {
    "id" : "1fa7b1e5-ce47-4d90-b4ff-07c154b58e0d",
    "prId" : 47547,
    "prUrl" : "https://github.com/flutter/flutter/pull/47547#pullrequestreview-339590992",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c33c5e5-26c8-4b4b-8f4c-3ce0a37f96e3",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2020-01-08T00:37:23Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "b576c80db31166fb6e6d22cf5c6ff9900943957b",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +10,14 @@/// An abstract class providing an interface for evaluating a parametric curve.\n///\n/// A parametric curve transforms a parameter (hence the name) `t` along a curve\n/// to the value of the curve at that value of `t`. The curve can be of\n/// arbitrary dimension, but is typically a 1D, 2D, or 3D curve."
  },
  {
    "id" : "7cc11922-55c8-40f8-a023-ccd4cf11be44",
    "prId" : 47547,
    "prUrl" : "https://github.com/flutter/flutter/pull/47547#pullrequestreview-339656245",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e36c4d4a-6a65-4660-93d4-dd21f9e80b42",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "extra blank lines",
        "createdAt" : "2020-01-08T01:10:20Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "3f8bfb97-f0cd-4d8d-b8d7-668bb213b651",
        "parentId" : "e36c4d4a-6a65-4660-93d4-dd21f9e80b42",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Fixed.",
        "createdAt" : "2020-01-08T05:49:04Z",
        "updatedAt" : "2020-01-08T05:54:17Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b576c80db31166fb6e6d22cf5c6ff9900943957b",
    "line" : 456,
    "diffHunk" : "@@ -1,1 +637,641 @@           _tension = tension,\n           _cubicSegments = <List<Offset>>[];\n\n  /// Constructs a centripetal Catmull-Rom spline curve.\n  ///"
  },
  {
    "id" : "9a4b7256-0afd-4b16-a622-a4c8b7b0c961",
    "prId" : 47547,
    "prUrl" : "https://github.com/flutter/flutter/pull/47547#pullrequestreview-339656245",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "369c64ad-aee1-474d-9d88-776ebfd3b4a8",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "extra blank line\r\n",
        "createdAt" : "2020-01-08T01:12:31Z",
        "updatedAt" : "2020-01-08T05:53:33Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "fdd96c65-0e05-4a2c-97ce-6f5d63ed022f",
        "parentId" : "369c64ad-aee1-474d-9d88-776ebfd3b4a8",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Removed.",
        "createdAt" : "2020-01-08T05:50:19Z",
        "updatedAt" : "2020-01-08T05:54:17Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b576c80db31166fb6e6d22cf5c6ff9900943957b",
    "line" : 635,
    "diffHunk" : "@@ -1,1 +816,820 @@        // all the time in transformInternal.\n        _precomputedSamples = <Curve2DSample>[];\n\n  /// Constructs a centripetal [CatmullRomCurve].\n  ///"
  },
  {
    "id" : "a855aa73-e54f-4b33-a090-be2ad018908f",
    "prId" : 67682,
    "prUrl" : "https://github.com/flutter/flutter/pull/67682#pullrequestreview-515871382",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06f83cdd-644e-4f0f-b368-56f069a9520d",
        "parentId" : null,
        "authorId" : "85faa813-453a-425a-a946-675fa6c1ea59",
        "body" : "`position` is changed in line 745 (4 lines below). How can we make this variable `final`?\r\n\r\nThis happens everywhere in this pull request. It looks very wrong.",
        "createdAt" : "2020-10-23T05:19:20Z",
        "updatedAt" : "2020-10-23T05:21:37Z",
        "lastEditedBy" : "85faa813-453a-425a-a946-675fa6c1ea59",
        "tags" : [
        ]
      },
      {
        "id" : "5c32db63-722b-49b2-b883-0977e1a24610",
        "parentId" : "06f83cdd-644e-4f0f-b368-56f069a9520d",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "> `position` is changed in line 745\r\n\r\n`position` is rather initialized at line 745. With null-safety you can make a final declaration (the variable will not be initialized at declaration site) and initialize it later. The compiler/analyzer will ensure that when the variable is used it has been fully initialized. So you can have the following initialization:\r\n\r\n```dart\r\nfinal String s;\r\nif (boolCondition) {\r\n  s = 'a';\r\n} else {\r\n  s = 'b';\r\n}\r\nprint(s); // if else branch is omitted you will get an error\r\n```\r\n\r\n",
        "createdAt" : "2020-10-23T06:33:44Z",
        "updatedAt" : "2020-10-23T06:33:44Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "5412faea-7ad3-4180-9868-3d246b4c338e",
        "parentId" : "06f83cdd-644e-4f0f-b368-56f069a9520d",
        "authorId" : "85faa813-453a-425a-a946-675fa6c1ea59",
        "body" : "ah ha! Thanks for pointing this out. I was not aware of the new \"null-safety\" support in Dart.",
        "createdAt" : "2020-10-23T17:34:05Z",
        "updatedAt" : "2020-10-23T17:34:05Z",
        "lastEditedBy" : "85faa813-453a-425a-a946-675fa6c1ea59",
        "tags" : [
        ]
      }
    ],
    "commit" : "ace47ca38c7cc4842524c813b561d1caa44280b3",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +739,743 @@    _initializeIfNeeded();\n    final double length = _cubicSegments.length.toDouble();\n    final double position;\n    final double localT;\n    final int index;"
  },
  {
    "id" : "773dc592-363c-4651-ab78-81dc000b61e8",
    "prId" : 80836,
    "prUrl" : "https://github.com/flutter/flutter/pull/80836#pullrequestreview-641663898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0f4bb64-57d0-497a-8710-cd2c1aaadd41",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Should t be the same as x? ",
        "createdAt" : "2021-04-21T22:08:30Z",
        "updatedAt" : "2021-04-22T02:19:05Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "62850c0d-da3d-4359-8411-6d67f57abe05",
        "parentId" : "d0f4bb64-57d0-497a-8710-cd2c1aaadd41",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "No, `t` is the parametric value we're evaluating at, and it is the traditional variable name for a parametric value. It's also what is used in the base class declaration, so I'd get a warning if I didn't use it.\r\n\r\nI often wish we had some more \"point\" classes, so that I could use a `Parametric` or something that had members called `s` and `t`, or a `Point` with `x` and `y`. These are only \"offsets\" because that's the only point class we have.",
        "createdAt" : "2021-04-21T23:20:21Z",
        "updatedAt" : "2021-04-22T02:19:05Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "d595e40c-2340-4660-861c-925b517ef218",
        "parentId" : "d0f4bb64-57d0-497a-8710-cd2c1aaadd41",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Maybe I should use a `Point<double>` for this (from `dart:math`)?",
        "createdAt" : "2021-04-21T23:27:23Z",
        "updatedAt" : "2021-04-22T02:19:05Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "9e9bbd45-b432-4e33-8dc8-7c7eee89bc24",
        "parentId" : "d0f4bb64-57d0-497a-8710-cd2c1aaadd41",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "That looks pretty ugly, though:\r\n```dart\r\n  static const ThreePointCubic easeInOutCubicEmphasized = ThreePointCubic(\r\n    math.Point<double>(0.05, 0), math.Point<double>(0.133333, 0.06),\r\n    math.Point<double>(0.166666, 0.4),\r\n    math.Point<double>(0.208333, 0.82), math.Point<double>(0.25, 1),\r\n  );\r\n```",
        "createdAt" : "2021-04-21T23:33:17Z",
        "updatedAt" : "2021-04-22T02:19:05Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "3f86eab6-bfba-42bc-a78a-4b8b07b29ac9",
        "parentId" : "d0f4bb64-57d0-497a-8710-cd2c1aaadd41",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I see now: the X axis is t, and the Y axis is S(t) - the value of the parametric curve. Thanks for the explanation!",
        "createdAt" : "2021-04-22T00:47:16Z",
        "updatedAt" : "2021-04-22T02:19:05Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b865018ccdc2652877d9885cf166007e1ffd6cc",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +368,372 @@  @override\n  double transformInternal(double t) {\n    final bool firstCurve = t < midpoint.dx;\n    final double scaleX = firstCurve ? midpoint.dx : 1.0 - midpoint.dx;\n    final double scaleY = firstCurve ? midpoint.dy : 1.0 - midpoint.dy;"
  }
]