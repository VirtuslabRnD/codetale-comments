[
  {
    "id" : "1332c1e8-fa05-4087-92f6-65b2101ccb21",
    "prId" : 1611,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb7e773d-333c-4e72-aa15-935344024f94",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Mention that it's mutable and that the listeners will be appropriately forwarded.\n",
        "createdAt" : "2016-02-04T21:53:33Z",
        "updatedAt" : "2016-02-05T03:51:15Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "29d1d2eee44f017aebb5716a056406bac8b21418",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +102,106 @@  double _value;\n\n  /// The animation whose value this animation will proxy.\n  ///\n  /// This value is mutable. When mutated, the listeners on the proxy animation"
  },
  {
    "id" : "4d6917d0-a2c2-42e2-bb5a-d7700e20b5b3",
    "prId" : 1611,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9a3d4de-4ec1-497d-abf1-258f3e862112",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "there's a bug in _valueChangeHandler.\nThe line that says:\n\n```\n_nextTrain.addListener(_valueChangeHandler);\n```\n\n...should be setting a status listener on the next train, not a value listener, and it should pass in _statusChangeHandler, not _valueChangeHandler.\n",
        "createdAt" : "2016-02-04T21:58:16Z",
        "updatedAt" : "2016-02-05T03:51:15Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ff2cc50c-b78f-47b9-8211-cc5143989415",
        "parentId" : "d9a3d4de-4ec1-497d-abf1-258f3e862112",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Added as a TODO(hixie)\n",
        "createdAt" : "2016-02-05T03:40:43Z",
        "updatedAt" : "2016-02-05T03:51:15Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "29d1d2eee44f017aebb5716a056406bac8b21418",
    "line" : 155,
    "diffHunk" : "@@ -1,1 +314,318 @@  VoidCallback onSwitchedTrain;\n\n  AnimationStatus _lastStatus;\n  void _statusChangeHandler(AnimationStatus status) {\n    assert(_currentTrain != null);"
  },
  {
    "id" : "4592f722-0a94-4597-ac1e-cfc19d2f2cbc",
    "prId" : 2780,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "deca1952-8cb2-41bd-b054-11bd1b65ec89",
        "parentId" : null,
        "authorId" : "0247a40a-bc0a-4493-a4c2-035547be3e1b",
        "body" : "This statement is literally correct, but it's confusing to someone who hasn't used this before. You normally attach a `Tween` to a curve using `.animate()`. It's possible to do this backwards by using CurveTween, but it's unusual. However, this DartDoc section doesn't document the normal case using .animate(), so this line could easily cause people to view everything backwards.\n",
        "createdAt" : "2016-03-21T23:01:55Z",
        "updatedAt" : "2016-03-21T23:01:55Z",
        "lastEditedBy" : "0247a40a-bc0a-4493-a4c2-035547be3e1b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbd0aa5bd3812ede6b010ecd61915911bf565160",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +253,257 @@/// overshoot or undershoot the default range of 0.0 to 1.0.\n///\n/// If you want to apply a [Curve] to a [Tween], consider using [CurveTween].\nclass CurvedAnimation extends Animation<double> with AnimationWithParentMixin<double> {\n  CurvedAnimation({"
  },
  {
    "id" : "d7a730a1-9361-48f3-90c5-896c2cdc0476",
    "prId" : 3963,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f967f5c8-4a01-44b8-bab1-1832dbee1961",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This should say what a proxy animation is.\n",
        "createdAt" : "2016-05-17T16:45:53Z",
        "updatedAt" : "2016-05-17T17:39:21Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "acef73de-09e4-4dbc-8e18-4dee89f64227",
        "parentId" : "f967f5c8-4a01-44b8-bab1-1832dbee1961",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "oh never mind, i see the class was already docced.\n",
        "createdAt" : "2016-05-17T16:46:23Z",
        "updatedAt" : "2016-05-17T17:39:21Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "00e83e50cb51134f34b5b875b97ab793894086ab",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +156,160 @@  with AnimationLazyListenerMixin, AnimationLocalListenersMixin, AnimationLocalStatusListenersMixin {\n\n  /// Creates a proxy animation.\n  ///\n  /// If the animation argument is omitted, the proxy animation will have the"
  },
  {
    "id" : "6fccd01d-e8e6-4e09-b2c7-5709e5f5378f",
    "prId" : 3963,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4afff15a-7ed4-48f5-ba86-e4016c1ba6be",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "What is a reverse animation?\n",
        "createdAt" : "2016-05-17T16:46:03Z",
        "updatedAt" : "2016-05-17T17:39:21Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "404642a5-2d78-4ac9-8d6e-2151857c3a1a",
        "parentId" : "4afff15a-7ed4-48f5-ba86-e4016c1ba6be",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "never mind.\n",
        "createdAt" : "2016-05-17T16:46:34Z",
        "updatedAt" : "2016-05-17T17:39:21Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "00e83e50cb51134f34b5b875b97ab793894086ab",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +239,243 @@  with AnimationLazyListenerMixin, AnimationLocalStatusListenersMixin {\n\n  /// Creates a reverse animation.\n  ///\n  /// The parent argument must not be null."
  },
  {
    "id" : "c40cbb01-85fc-4f53-a4ef-6fb37dded796",
    "prId" : 3963,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea5838da-c02b-40be-8bc4-a9021601ae94",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Should we remove the default for curve?\n",
        "createdAt" : "2016-05-17T16:47:03Z",
        "updatedAt" : "2016-05-17T17:39:21Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e00a527f-a7cf-42a3-ad36-8e71d43401f4",
        "parentId" : "ea5838da-c02b-40be-8bc4-a9021601ae94",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, it seems pretty useless.\n",
        "createdAt" : "2016-05-17T17:03:21Z",
        "updatedAt" : "2016-05-17T17:39:21Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "00e83e50cb51134f34b5b875b97ab793894086ab",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +318,322 @@  /// Creates a curved animation.\n  ///\n  /// The parent and curve arguments must not be null.\n  CurvedAnimation({\n    this.parent,"
  },
  {
    "id" : "ecc8e9c7-d688-4595-9228-8e34b6f909f9",
    "prId" : 5037,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0127b98c-800d-40fb-9f7e-aa2e684b60d4",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE\n",
        "createdAt" : "2016-07-25T23:54:16Z",
        "updatedAt" : "2016-07-25T23:54:16Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8420d44eef021211e81db2df600e1a3a36b6a60",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +395,399 @@        final double roundedTransformedValue = transformedValue.round().toDouble();\n        if (roundedTransformedValue != t) {\n          throw new FlutterError(\n            'Invalided curve endpoint at $t.\\n'\n            'Curves must map 0.0 to near zero and 1.0 to near one but '"
  },
  {
    "id" : "b7386138-055d-41c0-bc49-c11e0175e1d5",
    "prId" : 5037,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a292026-1284-438b-a317-1e84f1eaac67",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "typo in \"Invalid\"\n",
        "createdAt" : "2016-07-26T00:15:41Z",
        "updatedAt" : "2016-07-26T00:15:41Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8420d44eef021211e81db2df600e1a3a36b6a60",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +396,400 @@        if (roundedTransformedValue != t) {\n          throw new FlutterError(\n            'Invalided curve endpoint at $t.\\n'\n            'Curves must map 0.0 to near zero and 1.0 to near one but '\n            '${activeCurve.runtimeType} mapped $t to $transformedValue, which '"
  },
  {
    "id" : "9bf3f131-b8f7-41ae-a6d8-e390ad848cd2",
    "prId" : 5512,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f83a626e-3da0-43cd-a49b-17dbfef7944b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "avoid `_` as an argument name, to ease copy/pasting later.\n",
        "createdAt" : "2016-08-23T22:25:14Z",
        "updatedAt" : "2016-08-25T18:05:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "de947cf1-f769-4333-9909-b0e2d0de3927",
        "parentId" : "f83a626e-3da0-43cd-a49b-17dbfef7944b",
        "authorId" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "body" : "What copy/pasting? I'm using _ because it's an unused parameter.\n",
        "createdAt" : "2016-08-23T22:29:52Z",
        "updatedAt" : "2016-08-25T18:05:01Z",
        "lastEditedBy" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "tags" : [
        ]
      },
      {
        "id" : "0c5d8774-d025-44ee-8a30-ed02e0d35a80",
        "parentId" : "f83a626e-3da0-43cd-a49b-17dbfef7944b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Say I want to write a status listener some day. I happen to be near this code. If you have the argument with a name, I can just swipe it and reuse it and it's self-documenting. If you use `_`, then I either have to find another one, or have to look it up in the docs to find out what that argument actually is.\n",
        "createdAt" : "2016-08-23T23:01:27Z",
        "updatedAt" : "2016-08-25T18:05:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ce42547c-be29-4129-9905-7244ebbb6f0c",
        "parentId" : "f83a626e-3da0-43cd-a49b-17dbfef7944b",
        "authorId" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "body" : "I don't think naming the parameter `status` is much more illuminating, given the type name. And in any case, I think code clarity here is more important, to show that the parameter is unused.\n",
        "createdAt" : "2016-08-24T18:42:33Z",
        "updatedAt" : "2016-08-25T18:05:01Z",
        "lastEditedBy" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "tags" : [
        ]
      },
      {
        "id" : "9bea6600-cd7b-439b-b374-5ceb28dba83b",
        "parentId" : "f83a626e-3da0-43cd-a49b-17dbfef7944b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It's a little confusing because this argument is normally called status, and there is an identifier with that name in scope here that you do use, it's just not the argument. I dunno what to suggest. I worry that one day I'll be going through the code and will change this to \"status\" reflexively so that the code is more self-documenting, and will thus break the method (because now it'll mean something else).\n\nMaybe what that tells us is that what we really need here is a test of this class, in particular a test that verifies that this function works as expected. :-)\n",
        "createdAt" : "2016-08-24T20:45:38Z",
        "updatedAt" : "2016-08-25T18:05:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a7eee5a4-1cef-4c7e-afbe-1cdb1280f8e6",
        "parentId" : "f83a626e-3da0-43cd-a49b-17dbfef7944b",
        "authorId" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "body" : "Good point that it may be confusing that I reference a `status` var here. I'll change it to `this.status` to be extra obvious.\n",
        "createdAt" : "2016-08-24T21:04:56Z",
        "updatedAt" : "2016-08-25T18:05:01Z",
        "lastEditedBy" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfaf7c9bf268d8b0ad6110f4374325a9ac3a31d1",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +591,595 @@\n  AnimationStatus _lastStatus;\n  void _maybeNotifyStatusListeners(AnimationStatus _) {\n    if (this.status != _lastStatus) {\n      _lastStatus = this.status;"
  },
  {
    "id" : "e9ee68c4-1cfd-4c51-8b9f-1b8894380073",
    "prId" : 5902,
    "prUrl" : "https://github.com/flutter/flutter/pull/5902#pullrequestreview-679728",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bea3d0ea-820e-41f2-9f82-1a3154590ae6",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, clearly we need a `@mustCallSuper` somewhere.\n",
        "createdAt" : "2016-09-20T04:44:28Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "57b9f88bf58da56769af22de167f61deb943ec3c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +525,529 @@    _nextTrain?.removeListener(_valueChangeHandler);\n    _nextTrain = null;\n    super.dispose();\n  }\n"
  },
  {
    "id" : "9ff9dd2e-4dd8-48f3-b72c-22a66dde1c82",
    "prId" : 5903,
    "prUrl" : "https://github.com/flutter/flutter/pull/5903#pullrequestreview-291184",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a8e823a-6d58-4d2e-b9ab-90e0f8d54795",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Nice.\n",
        "createdAt" : "2016-09-16T03:42:42Z",
        "updatedAt" : "2016-09-16T03:52:20Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "1aec9040-6795-4950-948d-d0ace38f5103",
        "parentId" : "8a8e823a-6d58-4d2e-b9ab-90e0f8d54795",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It was hard to come up with documentation that didn't say the animation was nasty. :-P\n",
        "createdAt" : "2016-09-16T03:51:19Z",
        "updatedAt" : "2016-09-16T03:52:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "add6289414775996410d226e4a3a10f8b48ccacc",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +614,618 @@/// The [value] of this animation is the [double] that represents the mean value\n/// of the values of the `left` and `right` animations.\nclass AnimationMean extends CompoundAnimation<double> {\n  /// Creates an animation that tracks the mean of two other animations.\n  AnimationMean({"
  }
]