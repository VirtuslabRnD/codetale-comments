[
  {
    "id" : "eac0959f-db0c-4a8f-844e-c0d05312bfea",
    "prId" : 1352,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6bfe84c-716c-47b0-941d-119e79035e9e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "!! we exceeded the 20 values that hashValues() supports?! Blimey. Filed https://github.com/flutter/flutter/issues/1356.\n",
        "createdAt" : "2016-01-24T02:28:01Z",
        "updatedAt" : "2016-01-24T02:28:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f3b2d48359a7ca6be9ad6392b8d51d072d2f344",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +282,286 @@        primaryTextTheme,\n        primaryIconTheme\n      )\n    );\n  }"
  },
  {
    "id" : "e9d9c8e9-6f09-4f8b-b68a-2bdc80438ee1",
    "prId" : 3002,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68d91098-c13f-4289-b451-43a315752386",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Why teal specifically?\n",
        "createdAt" : "2016-03-30T17:59:37Z",
        "updatedAt" : "2016-03-30T19:05:20Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "3f17bdee-b716-4f90-a275-25ad04dc51b5",
        "parentId" : "68d91098-c13f-4289-b451-43a315752386",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I picked the color that matched the accent color used by MD for the dark theme date picker examples: https://www.google.com/design/spec/components/pickers.html#pickers-date-pickers\n\nThe accentColor we had been using often didn't work with the dark. It's possible that applications will need to be more assertive about the accent color, there's a lot of variety in the MD spec.\n",
        "createdAt" : "2016-03-30T18:29:53Z",
        "updatedAt" : "2016-03-30T19:05:20Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "eb619b87-2018-49e4-878b-a70bfb941590",
        "parentId" : "68d91098-c13f-4289-b451-43a315752386",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Sounds reasonable.\n",
        "createdAt" : "2016-03-30T19:03:13Z",
        "updatedAt" : "2016-03-30T19:05:20Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "2fd5285c-108d-4e9a-922c-6a7c0d360563",
        "parentId" : "68d91098-c13f-4289-b451-43a315752386",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I thought this was what `accentColorBrightness` was about. You have to handle the case of it being bright and it being dark.\n",
        "createdAt" : "2016-03-31T21:38:20Z",
        "updatedAt" : "2016-03-31T21:38:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2366f331857de082c4eee40a6c678a3973ed69f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +62,66 @@    primaryColor ??= isDark ? Colors.grey[900] : primarySwatch[500];\n    primaryColorBrightness ??= ThemeBrightness.dark;\n    accentColor ??= isDark ? Colors.tealAccent[200] : primarySwatch[500];\n    accentColorBrightness ??= ThemeBrightness.dark;\n    canvasColor ??= isDark ? Colors.grey[850] : Colors.grey[50];"
  },
  {
    "id" : "2bf238ac-4f43-48ea-80d9-44abe5a3f451",
    "prId" : 5024,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "744cd78d-df99-476a-a010-9f71745a935a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this should gets its value from a getter in foundation/platform.dart\n",
        "createdAt" : "2016-07-25T21:04:01Z",
        "updatedAt" : "2016-07-25T21:04:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "0a7a0348-dccb-4d9c-8977-ce98f44fce86",
        "parentId" : "744cd78d-df99-476a-a010-9f71745a935a",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "and that getter should throw an exception saying that a new enum should be added if it's a new platform\n",
        "createdAt" : "2016-07-25T21:05:05Z",
        "updatedAt" : "2016-07-25T21:05:05Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfee0f715cd2f208b820540568786c8f579e27e1",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +126,130 @@    iconTheme ??= isDark ? const IconThemeData(color: Colors.white) : const IconThemeData(color: Colors.black);\n    primaryIconTheme ??= primaryIsDark ? const IconThemeData(color: Colors.white) : const IconThemeData(color: Colors.black);\n    platform ??= (Platform.isIOS || Platform.isMacOS) ? TargetPlatform.iOS : TargetPlatform.android;\n    return new ThemeData.raw(\n      brightness: brightness,"
  },
  {
    "id" : "df032d06-d558-441c-bc8b-18b864ca668f",
    "prId" : 6808,
    "prUrl" : "https://github.com/flutter/flutter/pull/6808#pullrequestreview-8111138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9aedeacf-ed0b-45f9-a3c0-d1ef09ecb1f0",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "there are more constructors, sir!\n",
        "createdAt" : "2016-11-10T22:15:34Z",
        "updatedAt" : "2016-11-10T23:23:37Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ebf38434-fcb7-403b-936e-c4194a273c6b",
        "parentId" : "9aedeacf-ed0b-45f9-a3c0-d1ef09ecb1f0",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "also operator == and hashCode\n",
        "createdAt" : "2016-11-10T22:15:53Z",
        "updatedAt" : "2016-11-10T23:23:37Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3ec81680-18a5-4058-ad6a-ec8662e69833",
        "parentId" : "9aedeacf-ed0b-45f9-a3c0-d1ef09ecb1f0",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "I now have `accentTextTheme`s and `accentIconTheme`s in all my various constructors and methods.\n",
        "createdAt" : "2016-11-10T22:21:58Z",
        "updatedAt" : "2016-11-10T23:23:37Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "8023578b198808c3b1216ba4ef2e8173bfca3e44",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +350,354 @@  /// The platform the material widgets should adapt to target.\n  ///\n  /// Defaults to the current platform.\n  final TargetPlatform platform;\n"
  },
  {
    "id" : "8135224b-776c-4fe4-8a6d-12c3162d25f4",
    "prId" : 7104,
    "prUrl" : "https://github.com/flutter/flutter/pull/7104#pullrequestreview-10847361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df0217a6-747b-41d0-adaf-b2e8895bdb36",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "If this isn't the body of a scaffold, what is it?",
        "createdAt" : "2016-11-30T20:53:34Z",
        "updatedAt" : "2016-11-30T21:03:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a487193f-d8a2-49ac-8666-12d1fe769fec",
        "parentId" : "df0217a6-747b-41d0-adaf-b2e8895bdb36",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It's the color of the Material you get for `new Material(child: ...)`.  ",
        "createdAt" : "2016-11-30T20:58:24Z",
        "updatedAt" : "2016-11-30T21:03:14Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae01adf15c42983d7a7ad073454666d63bf423cd",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +275,279 @@  final Brightness accentColorBrightness;\n\n  /// The default color of [MaterialType.canvas] [Material].\n  final Color canvasColor;\n"
  },
  {
    "id" : "8601f01a-db16-4980-bcea-c974ae53b4f6",
    "prId" : 10071,
    "prUrl" : "https://github.com/flutter/flutter/pull/10071#pullrequestreview-38004262",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85ce3e1f-5f24-4f92-a834-3f38aa9fd309",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Should we put this on `Color` itself?",
        "createdAt" : "2017-05-14T16:43:44Z",
        "updatedAt" : "2017-05-14T16:43:44Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "1e403533-c2d2-4a4c-82e8-6c75ab1bfa3a",
        "parentId" : "85ce3e1f-5f24-4f92-a834-3f38aa9fd309",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I guess not, since the threshold is debated.",
        "createdAt" : "2017-05-14T16:48:49Z",
        "updatedAt" : "2017-05-14T16:48:49Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "0269b7d1-164f-484d-8437-7b7eee041de9",
        "parentId" : "85ce3e1f-5f24-4f92-a834-3f38aa9fd309",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah...",
        "createdAt" : "2017-05-14T17:09:47Z",
        "updatedAt" : "2017-05-14T17:09:47Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c0205578f63982affca6845b7e5a177dcf4e064",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +69,73 @@  return Brightness.dark;\n}\n\n/// Holds the color and typography values for a material design theme.\n///"
  },
  {
    "id" : "392cc7b6-a27d-44be-8366-9c8a444763ff",
    "prId" : 10508,
    "prUrl" : "https://github.com/flutter/flutter/pull/10508#pullrequestreview-42134450",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "680f4876-c4f1-46e9-a70b-80600bed69ca",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I'm surprised that it's necessary to mask of the lower 8 bits. I thought Color.foo already masked off 8 bits",
        "createdAt" : "2017-06-05T19:40:34Z",
        "updatedAt" : "2017-06-05T19:40:34Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "efec1dce-1307-44aa-a0c7-2af4180ac4bd",
        "parentId" : "680f4876-c4f1-46e9-a70b-80600bed69ca",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "That line doesn't mask off the low 8 bits, it converts the integer representation (0 - 255) to a real interpretation (0.0 - 1.0).",
        "createdAt" : "2017-06-05T19:45:45Z",
        "updatedAt" : "2017-06-05T19:45:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "7e91c623-8509-4e32-b47a-aebdad9e515f",
        "parentId" : "680f4876-c4f1-46e9-a70b-80600bed69ca",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Oops, that was a '/' not an &. ",
        "createdAt" : "2017-06-05T19:46:23Z",
        "updatedAt" : "2017-06-05T19:46:23Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "523232afd72efe561af0e266fa3daf3281e829b5",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +456,460 @@  static Brightness estimateBrightnessForColor(Color color) {\n    // See <https://www.w3.org/TR/WCAG20/#relativeluminancedef>\n    final double R = _linearizeColorComponent(color.red / 0xFF);\n    final double G = _linearizeColorComponent(color.green / 0xFF);\n    final double B = _linearizeColorComponent(color.blue / 0xFF);"
  },
  {
    "id" : "45495cce-7fd6-454e-a668-e23f71ede357",
    "prId" : 12249,
    "prUrl" : "https://github.com/flutter/flutter/pull/12249#pullrequestreview-65049626",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c579b82-85d0-4fbd-adfc-6f2fc0a2aa0b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you can add the @immutable back to Theme",
        "createdAt" : "2017-09-25T21:55:17Z",
        "updatedAt" : "2017-10-05T04:23:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "b5c569f2-1e5f-4e53-9953-586afcccc51d",
        "parentId" : "8c579b82-85d0-4fbd-adfc-6f2fc0a2aa0b",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done.",
        "createdAt" : "2017-09-25T21:58:55Z",
        "updatedAt" : "2017-10-05T04:23:45Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4560d2872cb0286862721bda8c29815bac003e23",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +417,421 @@    IconThemeData iconTheme,\n    IconThemeData primaryIconTheme,\n    IconThemeData accentIconTheme,\n    TargetPlatform platform,\n  }) {"
  },
  {
    "id" : "69ae0aa7-fcc3-4b9c-8e1c-b4417bbcbe34",
    "prId" : 12249,
    "prUrl" : "https://github.com/flutter/flutter/pull/12249#pullrequestreview-67265764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be6996e0-a25b-405c-8be9-e563eaa1012e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "maybe add a comment here that this hash code function must be fast",
        "createdAt" : "2017-10-05T00:24:23Z",
        "updatedAt" : "2017-10-05T04:23:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "fc4e6d77-9c81-4fef-ad10-9e633b793018",
        "parentId" : "be6996e0-a25b-405c-8be9-e563eaa1012e",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done.",
        "createdAt" : "2017-10-05T04:22:16Z",
        "updatedAt" : "2017-10-05T04:23:45Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4560d2872cb0286862721bda8c29815bac003e23",
    "line" : 214,
    "diffHunk" : "@@ -1,1 +655,659 @@  // noticeably slower).\n  @override\n  int get hashCode => identityHashCode(baseTheme) ^ identityHashCode(localTextGeometry);\n\n  @override"
  },
  {
    "id" : "e1f8daf1-fb90-40f0-b89c-b38189377eb1",
    "prId" : 14901,
    "prUrl" : "https://github.com/flutter/flutter/pull/14901#pullrequestreview-99896792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f281be7-dc1c-435d-bce0-c13a25110ccc",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2018-02-28T02:13:33Z",
        "updatedAt" : "2018-03-01T20:05:24Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1cb3bc91888746c4c9144f3d9016d40240b20f2",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +385,389 @@  ///  * [InkSplash.splashFactory], which defines the default splash.\n  ///  * [InkRipple.splashFactory], which defines a splash that spreads out\n  ///    more aggressively than the default.\n  final InteractiveInkFeatureFactory splashFactory;\n"
  },
  {
    "id" : "7cf9fce7-d602-4394-bc59-8aed4cbd018a",
    "prId" : 14901,
    "prUrl" : "https://github.com/flutter/flutter/pull/14901#pullrequestreview-101723972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85821751-e618-4b0b-9d8a-377b7609bc4b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should probably mark most of these such that they don't show up in the debugDumpApp() output, because it basically makes the output unreadable as it stands today.",
        "createdAt" : "2018-03-05T00:07:20Z",
        "updatedAt" : "2018-03-05T00:07:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "f26b8e37-4bdb-4e9d-8a02-250b6c91ab40",
        "parentId" : "85821751-e618-4b0b-9d8a-377b7609bc4b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(also, minor nit: this would be more readable if all the lines were consistently wrapped or not wrapped)",
        "createdAt" : "2018-03-05T00:07:47Z",
        "updatedAt" : "2018-03-05T00:07:47Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "bb2c76fc-1a72-4137-a5d5-5186a136cec5",
        "parentId" : "85821751-e618-4b0b-9d8a-377b7609bc4b",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "OK, in another PR I've reformatted these with dartfmt, but with a line length of 200.  That seems to keep the line breaks at bay.",
        "createdAt" : "2018-03-05T16:42:35Z",
        "updatedAt" : "2018-03-05T16:44:39Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "59da0063-f2b2-4775-8bd7-473d8dd823b6",
        "parentId" : "85821751-e618-4b0b-9d8a-377b7609bc4b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i was more worried about the problem of this all making debugDumpApp useless :-)",
        "createdAt" : "2018-03-06T20:24:13Z",
        "updatedAt" : "2018-03-06T20:24:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "777d5a13-60dd-46c6-ab34-103d4d950434",
        "parentId" : "85821751-e618-4b0b-9d8a-377b7609bc4b",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yeah, I was wondering about that too.  How does one mark them so they don't show up there?  I didn't see a switch on the DiagnosticsProperty object.  I added these because the previous toString was useless for debugging one of my tests.",
        "createdAt" : "2018-03-06T21:45:49Z",
        "updatedAt" : "2018-03-06T21:58:06Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1cb3bc91888746c4c9144f3d9016d40240b20f2",
    "line" : 386,
    "diffHunk" : "@@ -1,1 +827,831 @@    description.add(new DiagnosticsProperty<IconThemeData>('primaryIconTheme', primaryIconTheme));\n    description.add(new DiagnosticsProperty<IconThemeData>('accentIconTheme', accentIconTheme));\n    description.add(new DiagnosticsProperty<SliderThemeData>('sliderTheme', sliderTheme));\n  }\n}"
  },
  {
    "id" : "f6bed529-2799-4f4f-af7c-878470e1bfbd",
    "prId" : 14901,
    "prUrl" : "https://github.com/flutter/flutter/pull/14901#pullrequestreview-101702296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98b44ba7-4fe5-4870-9ed7-08c2eea57b3a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "does this lack of vertical alignment comes from dartfmt, perchance?",
        "createdAt" : "2018-03-05T00:08:23Z",
        "updatedAt" : "2018-03-05T00:08:23Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "90f7ac08-c5e8-4e66-92f8-197cd0a3653e",
        "parentId" : "98b44ba7-4fe5-4870-9ed7-08c2eea57b3a",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes, it is indenting a continued line by 4 spaces.  Changing the line length to 200 seems to have solved that problem.",
        "createdAt" : "2018-03-05T16:43:47Z",
        "updatedAt" : "2018-03-05T16:44:39Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "30030860-59af-4792-8d43-ef3964db5eff",
        "parentId" : "98b44ba7-4fe5-4870-9ed7-08c2eea57b3a",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "fwiw, i don't mind it being wrapped, i just want it to be more readable by keeping the vertical alignment consistent if it's wrapped",
        "createdAt" : "2018-03-06T20:24:39Z",
        "updatedAt" : "2018-03-06T20:24:39Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1cb3bc91888746c4c9144f3d9016d40240b20f2",
    "line" : 397,
    "diffHunk" : "@@ -1,1 +848,852 @@    final _IdentityThemeDataCacheKey otherKey = other;\n    return identical(baseTheme, otherKey.baseTheme) &&\n        identical(localTextGeometry, otherKey.localTextGeometry);\n  }\n}"
  },
  {
    "id" : "a2d31f15-18a5-4f8b-be14-fceeb77a26a1",
    "prId" : 14901,
    "prUrl" : "https://github.com/flutter/flutter/pull/14901#pullrequestreview-101701953",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8eb74c7-fe5f-4554-939d-28041968e9e4",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "looks like dartfmt broke you here too",
        "createdAt" : "2018-03-06T20:23:40Z",
        "updatedAt" : "2018-03-06T20:23:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1cb3bc91888746c4c9144f3d9016d40240b20f2",
    "line" : 280,
    "diffHunk" : "@@ -1,1 +722,726 @@  int get hashCode {\n    return hashValues(\n        brightness,\n        primaryColor,\n        primaryColorBrightness,"
  },
  {
    "id" : "78bb6829-e574-43f5-9f20-f1206c9bfe84",
    "prId" : 21715,
    "prUrl" : "https://github.com/flutter/flutter/pull/21715#pullrequestreview-155312099",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0def93da-6b82-4d2c-85e3-07f663997c8f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "boy is this out of hand",
        "createdAt" : "2018-09-13T23:46:21Z",
        "updatedAt" : "2018-09-25T00:36:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d98dccff29c29503443072ee32370b4ac7ca8db",
    "line" : 231,
    "diffHunk" : "@@ -1,1 +884,888 @@          materialTapTargetSize,\n          pageTransitionsTheme,\n        ),\n      ),\n    );"
  },
  {
    "id" : "58155951-62c3-48d4-a108-63adf0e79e35",
    "prId" : 21715,
    "prUrl" : "https://github.com/flutter/flutter/pull/21715#pullrequestreview-155606983",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77fbd62c-2252-4bb5-8e22-09306af0c359",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "please make sure these are in the exact same order as in operator == and in the constructor and in the order of fields in the class",
        "createdAt" : "2018-09-13T23:46:59Z",
        "updatedAt" : "2018-09-25T00:36:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ab417280-70f0-4215-8653-ce1243c539a3",
        "parentId" : "77fbd62c-2252-4bb5-8e22-09306af0c359",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "and in the lerps",
        "createdAt" : "2018-09-13T23:47:08Z",
        "updatedAt" : "2018-09-25T00:36:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "b89676e7-fc8d-4f73-aa95-3b1f83be5825",
        "parentId" : "77fbd62c-2252-4bb5-8e22-09306af0c359",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Fixed up the order of everything and added some missing (yikes) arguments to hashValues/==.\r\n",
        "createdAt" : "2018-09-14T18:15:45Z",
        "updatedAt" : "2018-09-25T00:36:48Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d98dccff29c29503443072ee32370b4ac7ca8db",
    "line" : 231,
    "diffHunk" : "@@ -1,1 +884,888 @@          materialTapTargetSize,\n          pageTransitionsTheme,\n        ),\n      ),\n    );"
  },
  {
    "id" : "4814560f-9784-4d56-82db-51cfe86fe1b1",
    "prId" : 22012,
    "prUrl" : "https://github.com/flutter/flutter/pull/22012#pullrequestreview-158668351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61a32b57-077c-4202-8d91-d657a1d8913e",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE.\r\n\r\nThe block of text that follows appears about 40x in the flutter package, so we should probably extend this good work in a separate PR.",
        "createdAt" : "2018-09-25T17:20:48Z",
        "updatedAt" : "2018-09-25T20:30:08Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "cedc26e8-b93f-4f57-a83b-d0b10e07bedb",
        "parentId" : "61a32b57-077c-4202-8d91-d657a1d8913e",
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Sounds good, I'll send a follow up PR replacing the rest of the usages in the flutter packages. ",
        "createdAt" : "2018-09-25T17:54:21Z",
        "updatedAt" : "2018-09-25T20:30:08Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      }
    ],
    "commit" : "27fee7f9cc5b118cc0ac170ae2f3b1ec2ecc65f2",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +731,735 @@  /// Linearly interpolate between two themes.\n  ///\n  /// {@template flutter.material.themeData.lerp}\n  /// The arguments must not be null.\n  ///"
  },
  {
    "id" : "11fe9ef0-17e2-4caf-84da-2a64d1ca654c",
    "prId" : 22285,
    "prUrl" : "https://github.com/flutter/flutter/pull/22285#pullrequestreview-158791792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a125fae1-81be-4856-8d0c-75cc36e4829c",
        "parentId" : null,
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Does the order actually matter here?",
        "createdAt" : "2018-09-25T23:58:21Z",
        "updatedAt" : "2018-09-25T23:58:21Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      },
      {
        "id" : "75561dd1-41ef-408d-834b-3bf7fe150548",
        "parentId" : "a125fae1-81be-4856-8d0c-75cc36e4829c",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "For the sanity's sake, the properties appear in the same order in the class, the .raw constructor, etc.",
        "createdAt" : "2018-09-26T00:10:40Z",
        "updatedAt" : "2018-09-26T00:10:40Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "4cd6740e95f5af7c0e906f14da5afa777f3c348f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +894,898 @@        accentIconTheme,\n        sliderTheme,\n        tabBarTheme,\n        hashValues(\n          chipTheme,"
  },
  {
    "id" : "b2948d9e-3d78-44a8-ad4e-275a70405db1",
    "prId" : 22309,
    "prUrl" : "https://github.com/flutter/flutter/pull/22309#pullrequestreview-159681872",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69f97250-f50d-482b-91db-0f6add2daf1d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should probably move this to the first inclusion of this text in the animation layer... it's weird that the animation layer refers to documentation in the material layer.",
        "createdAt" : "2018-09-27T21:01:19Z",
        "updatedAt" : "2018-09-27T21:01:19Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "2be1b7fc-a0fb-4460-bcbf-9edc6a4e74a0",
        "parentId" : "69f97250-f50d-482b-91db-0f6add2daf1d",
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "I couldn't think of an obvious place, but you're right, it is weird to put it in `material/`.\r\n\r\nMoved `painting/gradient.dart`\r\n\r\nSee: https://github.com/flutter/flutter/pull/22388/",
        "createdAt" : "2018-09-27T23:54:20Z",
        "updatedAt" : "2018-09-27T23:54:21Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba3a9e48f621273961fee39fd03c56f144e2d085",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +731,735 @@  /// Linearly interpolate between two themes.\n  ///\n  /// {@template flutter.material.themeData.lerp}\n  /// The `t` argument represents position on the timeline, with 0.0 meaning\n  /// that the interpolation has not started, returning `a` (or something"
  },
  {
    "id" : "9db06060-ab36-4af7-b3bc-8232ef2f2739",
    "prId" : 22330,
    "prUrl" : "https://github.com/flutter/flutter/pull/22330#pullrequestreview-162619523",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c026416-061a-4056-9c52-9e5c5034c987",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "missing docs",
        "createdAt" : "2018-10-05T23:57:15Z",
        "updatedAt" : "2018-10-08T20:20:11Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "5d0d3152-5057-4a2a-86d9-7e530424c424",
        "parentId" : "8c026416-061a-4056-9c52-9e5c5034c987",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Oops, done.",
        "createdAt" : "2018-10-08T20:02:40Z",
        "updatedAt" : "2018-10-08T20:20:11Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "9eb82e4df988d2305caef0efa752ff6afb396c66",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +620,624 @@  /// The color and geometry [TextTheme] values used to configure [textTheme],\n  /// [primaryTextTheme], and [accentTextTheme].\n  final Typography typography;\n\n  /// Creates a copy of this theme but with the given fields replaced with the new values."
  },
  {
    "id" : "9cec0627-c063-410a-8fa8-bd5b101c4266",
    "prId" : 23569,
    "prUrl" : "https://github.com/flutter/flutter/pull/23569#pullrequestreview-169400042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "654da57b-88d6-4c23-bf47-c89a4ceb3cd8",
        "parentId" : null,
        "authorId" : "209f805a-621a-40dd-b493-fb897c4b0bcb",
        "body" : "The alpha in me wants the dialog above the typography but below the colorscheme.",
        "createdAt" : "2018-10-26T16:33:25Z",
        "updatedAt" : "2018-10-30T21:24:06Z",
        "lastEditedBy" : "209f805a-621a-40dd-b493-fb897c4b0bcb",
        "tags" : [
        ]
      },
      {
        "id" : "239e744d-719b-47c9-a15f-02db020f7be4",
        "parentId" : "654da57b-88d6-4c23-bf47-c89a4ceb3cd8",
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Done.",
        "createdAt" : "2018-10-29T16:35:56Z",
        "updatedAt" : "2018-10-30T21:24:06Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      }
    ],
    "commit" : "289c26889a11bb6de4a0f971a4b8440f583f33c9",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +152,156 @@    PageTransitionsTheme pageTransitionsTheme,\n    ColorScheme colorScheme,\n    DialogTheme dialogTheme,\n    Typography typography,\n  }) {"
  },
  {
    "id" : "31e3a9cd-5284-4da7-b653-b78f565cdb90",
    "prId" : 23759,
    "prUrl" : "https://github.com/flutter/flutter/pull/23759#pullrequestreview-173647638",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "baf9632b-51b7-48cc-812e-79e0ade4f55d",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Can't we lerp CupertinoThemeData?",
        "createdAt" : "2018-11-08T23:55:08Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "c18be1d2-7b55-4226-a9d4-ad2ffee2295c",
        "parentId" : "baf9632b-51b7-48cc-812e-79e0ade4f55d",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Large area animations are actually un-iOS-y. It does a lot of single frame changes like switching tabs etc. I'll implement it when there are prior art in iOS.",
        "createdAt" : "2018-11-10T02:58:12Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0cc8fc1fd15cf27ba5f1c0431547b433e6c9112",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +875,879 @@      dialogTheme: DialogTheme.lerp(a.dialogTheme, b.dialogTheme, t),\n      typography: Typography.lerp(a.typography, b.typography, t),\n      cupertinoOverrideTheme: t < 0.5 ? a.cupertinoOverrideTheme : b.cupertinoOverrideTheme,\n    );\n  }"
  },
  {
    "id" : "501f7aaa-0cdc-41c8-8b0f-1b903c6f1dec",
    "prId" : 23759,
    "prUrl" : "https://github.com/flutter/flutter/pull/23759#pullrequestreview-174162790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1195370-372c-4c11-9220-2a6bd89ee1ad",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "If there were a CupertinoThemeData.merge() method, roughly like [TextStyle's merge](https://docs.flutter.io/flutter/painting/TextStyle/merge.html) then you could just say that the default  MaterialBasedCupertinoThemeData will be merged with the cupertinoOverrideTheme.",
        "createdAt" : "2018-11-09T00:12:16Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "32b6f989-5f8c-4516-aefa-19b0d89035fc",
        "parentId" : "b1195370-372c-4c11-9220-2a6bd89ee1ad",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I'm worried it might create more confusion on having to explain the difference between a CupertinoThemeData.merge, a CupertinoThemeData.copyWith, a MaterialBasedCupertinoThemeData.merge and a MaterialBasedCupertinoThemeData.copyWith.",
        "createdAt" : "2018-11-13T01:38:04Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0cc8fc1fd15cf27ba5f1c0431547b433e6c9112",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +637,641 @@  final Typography typography;\n\n  /// Components of the [CupertinoThemeData] to override from the Material\n  /// [ThemeData] adaptation.\n  ///"
  },
  {
    "id" : "6419223e-ef1c-4527-aa80-24e5dcd6989b",
    "prId" : 23759,
    "prUrl" : "https://github.com/flutter/flutter/pull/23759#pullrequestreview-173647861",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc53127c-6fc9-47a2-97e7-3cee9e6b89e0",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "to its Material [Theme] ancestor.",
        "createdAt" : "2018-11-09T00:18:46Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "20874d66-f330-4f38-8745-1fadf6b14d0f",
        "parentId" : "dc53127c-6fc9-47a2-97e7-3cee9e6b89e0",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Not 100% technically true. It's not a widget so it has no ancestors. Material Theme builds it with a material's ThemeData.",
        "createdAt" : "2018-11-10T03:04:23Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0cc8fc1fd15cf27ba5f1c0431547b433e6c9112",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +1048,1052 @@}\n\n/// A [CupertinoThemeData] that defers unspecified theme attributes to an\n/// upstream Material [ThemeData].\n///"
  },
  {
    "id" : "6687217e-1006-42fc-8153-6b9cfebf403e",
    "prId" : 23759,
    "prUrl" : "https://github.com/flutter/flutter/pull/23759#pullrequestreview-174173617",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fce21162-4f8d-4ecc-a2b2-e3e8ea687fef",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "fyi: having a subclass here makes CupertinoThemeData less efficient to access (every access now has to have a potential dynamic dispatch). If we could just create a regular CupertinoThemeData directly with the fallback logic in the caller, rather than having a subclass, it might be better for performance.",
        "createdAt" : "2018-11-12T23:21:01Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "4b662284-1233-4ab0-8987-f6e57ed0bd57",
        "parentId" : "fce21162-4f8d-4ecc-a2b2-e3e8ea687fef",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Ya, I was debating about inheritance too. The compromise is basically using inheritance or interface (and composition here) but the base CupertinoThemeData can't be const constructed. \r\n\r\nI don't have a strong opinion either way. Do you feel strongly one way? Material ThemeData is factory constructed with all the fields initializing logic but it sounds like Hans is moving away from that too.",
        "createdAt" : "2018-11-13T02:38:37Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0cc8fc1fd15cf27ba5f1c0431547b433e6c9112",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +1077,1081 @@// is from the superclass and based on the primaryColor but the primaryColor\n// comes from the Material theme unless overridden.\nclass MaterialBasedCupertinoThemeData extends CupertinoThemeData {\n  /// Create a [MaterialBasedCupertinoThemeData] based on a Material [ThemeData]\n  /// and its `cupertinoOverrideTheme`."
  },
  {
    "id" : "12585406-c906-4099-a265-0d3100bd477d",
    "prId" : 24156,
    "prUrl" : "https://github.com/flutter/flutter/pull/24156#pullrequestreview-190541033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc4f936e-9aa3-466f-b5df-d40ee770297c",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "of [BottomAppBar]s.",
        "createdAt" : "2019-01-04T23:51:01Z",
        "updatedAt" : "2019-01-10T13:23:45Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "149023cf-812a-4cb5-a252-a099e298a9b1",
        "parentId" : "bc4f936e-9aa3-466f-b5df-d40ee770297c",
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Done.",
        "createdAt" : "2019-01-09T01:18:53Z",
        "updatedAt" : "2019-01-10T13:23:45Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa61d74c6c3e834bf5cbcd652124ff113385c664",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +626,630 @@  final PageTransitionsTheme pageTransitionsTheme;\n\n  /// A theme for customizing the shape, elevation, and color of a [BottomAppBar].\n  final BottomAppBarTheme bottomAppBarTheme;\n"
  },
  {
    "id" : "72848468-4fed-4866-aebe-69853ecebb59",
    "prId" : 31438,
    "prUrl" : "https://github.com/flutter/flutter/pull/31438#pullrequestreview-236350797",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eeecba37-4d82-4b10-bddd-ae229fc69940",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Why was the original code using the hashValues function instead of the hashList that you are using? Was it a performance concern or somesuch?\r\n",
        "createdAt" : "2019-05-10T20:05:22Z",
        "updatedAt" : "2019-05-15T02:08:38Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "2b78368b-6b46-4bd4-97ef-c98007b99c43",
        "parentId" : "eeecba37-4d82-4b10-bddd-ae229fc69940",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "No, it's not that,`hashList` just didn't exist when this `hashCode` function was first added.",
        "createdAt" : "2019-05-11T01:31:00Z",
        "updatedAt" : "2019-05-15T02:08:38Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "388e9d68eb6ab7adad56ff72b72aa9a455332b49",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +1055,1059 @@    // are in the exact same order as in operator == and in the raw constructor\n    // and in the order of fields in the class and in the lerp() method.\n    final List<Object> values = <Object>[\n      brightness,\n      primaryColor,"
  },
  {
    "id" : "ba46732a-117b-4a40-8474-be06bf0ba890",
    "prId" : 35560,
    "prUrl" : "https://github.com/flutter/flutter/pull/35560#pullrequestreview-257792119",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "211664b7-6996-4a5b-8fc3-88ce91e9eb51",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Same comment as earlier about explaining the need for this (dark shadows, etc).\r\n\r\nIt looks like there are some opportunities for using `@template` and `@macro` here.",
        "createdAt" : "2019-07-04T01:26:10Z",
        "updatedAt" : "2019-07-16T01:10:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff556012a000c9fb293a5dfbf4ff534365002a68",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +701,705 @@  ///\n  /// Defaults to [false].\n  ///\n  /// Note: this setting is here to maintain backwards compatibility with\n  /// apps that were built before the Material Dark theme specification"
  },
  {
    "id" : "83878e55-f062-4f7d-8bba-ecb7e06e22e1",
    "prId" : 43547,
    "prUrl" : "https://github.com/flutter/flutter/pull/43547#pullrequestreview-321887929",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a10bcda-7d64-428c-b5d0-0c60608c49ac",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Shouldn't this be \r\n```dart\r\nstatic const VisualDensity minimum = VisualDensity(horizontal: -4, vertical: -4);\r\n```\r\n\r\nThe assertions could compare against minimum.vertical, etc",
        "createdAt" : "2019-11-23T01:02:28Z",
        "updatedAt" : "2019-12-04T01:06:05Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "1237c913-c32c-420c-aa2a-a90ccca452db",
        "parentId" : "3a10bcda-7d64-428c-b5d0-0c60608c49ac",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Nope: \"compile time expression depends on itself\".",
        "createdAt" : "2019-11-23T02:31:07Z",
        "updatedAt" : "2019-12-04T01:06:06Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bba2f9ce3d180ad16694824c23778f195bf08f1",
    "line" : 176,
    "diffHunk" : "@@ -1,1 +1715,1719 @@\n  /// The minimum allowed density.\n  static const double minimumDensity = -4.0;\n\n  /// The maximum allowed density."
  },
  {
    "id" : "bf94d30d-c20b-4a9e-b6cf-4c602cc56215",
    "prId" : 43547,
    "prUrl" : "https://github.com/flutter/flutter/pull/43547#pullrequestreview-322635792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55887506-8751-44f5-be3a-c2850d5f5542",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "A suggestion about this section that could improve readability:\r\n\r\n1. Could we add a little bit more that a positive value means \"less dense\" and a negative value means \"more dense\"?  I got confused for a bit translating a positive value to \"spacing increase\" to \"less dense\". \r\n\r\n2. Assuming the section on \"using density values appropriately for the needs of a component\" --> the rule of thumb of ~4 logical pixels per integral change, would it be possible to reword it? For a moment, I thought that this meant that the meaning of the positive/negative values could be flipped for different components. It might be worth separating the two sections to keep this clear.\r\n\r\nMaybe something like: \r\n```\r\n  /// As a rule of thumb, a change of 1 or -1 in density corresponds to 4\r\n  /// logical pixels (or whatever the [VisualDensity.interval] is set to). However,\r\n  /// this is not a strict relationship since components interpret the density\r\n  /// values appropriately for their needs.\r\n  ///\r\n  /// A positive value translates to a spacing increase (less dense), and a \r\n  /// negative value translates to a spacing decrease (more dense).\r\n```",
        "createdAt" : "2019-11-25T18:39:12Z",
        "updatedAt" : "2019-12-04T01:06:06Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "ff2d4a8f-d56f-4315-a43b-7ec9fe1ff81d",
        "parentId" : "55887506-8751-44f5-be3a-c2850d5f5542",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes, I've asked for the spec to actually change the scale so that positive numbers result in increased density, which would make it much easier to talk about.  Barring that, I've updated the text to something similar to what you suggested.",
        "createdAt" : "2019-11-25T23:47:44Z",
        "updatedAt" : "2019-12-04T01:06:06Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bba2f9ce3d180ad16694824c23778f195bf08f1",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +695,699 @@  /// in the Material Design specification.\n  ///\n  /// As a rule of thumb, a change of 1 or -1 in density corresponds to 4\n  /// logical pixels. However, this is not a strict relationship since\n  /// components interpret the density values appropriately for their needs."
  },
  {
    "id" : "291a2d08-df81-49c4-a2ec-cd128badc3ef",
    "prId" : 43547,
    "prUrl" : "https://github.com/flutter/flutter/pull/43547#pullrequestreview-322635792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d415e26-b2b6-4d5e-b5c8-7bf9e9e232aa",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Is there an available spec to visually showcase what different densities look like? It could be helpful to add a link to it.",
        "createdAt" : "2019-11-25T18:40:13Z",
        "updatedAt" : "2019-12-04T01:06:06Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "cc3eee21-27f0-469c-a0b2-43d703a22b71",
        "parentId" : "4d415e26-b2b6-4d5e-b5c8-7bf9e9e232aa",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "No, there isn't yet a public version of the spec.",
        "createdAt" : "2019-11-25T23:05:32Z",
        "updatedAt" : "2019-12-04T01:06:06Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bba2f9ce3d180ad16694824c23778f195bf08f1",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +675,679 @@  final Brightness brightness;\n\n  /// The density value for specifying the compactness of various UI components.\n  ///\n  /// {@template flutter.material.themedata.visualDensity}"
  },
  {
    "id" : "33bb01bb-4d56-449d-8b5e-7d270f680f70",
    "prId" : 43547,
    "prUrl" : "https://github.com/flutter/flutter/pull/43547#pullrequestreview-322635792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d2320e2-9f6a-4ca8-b9a3-be11c9715fe4",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Did you mean vertical/horizontal spacing instead of size here?",
        "createdAt" : "2019-11-25T18:42:37Z",
        "updatedAt" : "2019-12-04T01:06:06Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "8a73ec91-a7bc-4094-8934-05e628111164",
        "parentId" : "6d2320e2-9f6a-4ca8-b9a3-be11c9715fe4",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "No, for Chips, it's really size, since they don't have children.",
        "createdAt" : "2019-11-25T23:48:34Z",
        "updatedAt" : "2019-12-04T01:06:06Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bba2f9ce3d180ad16694824c23778f195bf08f1",
    "line" : 151,
    "diffHunk" : "@@ -1,1 +1690,1694 @@/// For example, for buttons, it affects the spacing around the child of the\n/// button. For lists, it affects the distance between baselines of entries in\n/// the list. For chips, it only affects the vertical size, not the horizontal\n/// size.\n///"
  },
  {
    "id" : "b6c9ab86-6d85-4169-b9e2-33bf85eec13c",
    "prId" : 43547,
    "prUrl" : "https://github.com/flutter/flutter/pull/43547#pullrequestreview-322635792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77a41fc6-b8f0-4143-beab-05f04a509b35",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "nit: remove extra newline",
        "createdAt" : "2019-11-25T19:34:28Z",
        "updatedAt" : "2019-12-04T01:06:06Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "eae79570-93ed-4d71-9a3a-35707cb13959",
        "parentId" : "77a41fc6-b8f0-4143-beab-05f04a509b35",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done.",
        "createdAt" : "2019-11-25T23:50:14Z",
        "updatedAt" : "2019-12-04T01:06:06Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bba2f9ce3d180ad16694824c23778f195bf08f1",
    "line" : 180,
    "diffHunk" : "@@ -1,1 +1719,1723 @@  /// The maximum allowed density.\n  static const double maximumDensity = 4.0;\n\n  /// The default profile for [VisualDensity] in [ThemeData].\n  ///"
  },
  {
    "id" : "64e80450-8af7-48cb-bfb7-0b7dc3705494",
    "prId" : 43547,
    "prUrl" : "https://github.com/flutter/flutter/pull/43547#pullrequestreview-326541800",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db45c97a-d097-45b5-94c0-1875df84f09d",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Should we say that the default is 0 is the valid range is -4 to 4? Likewise for horizontal",
        "createdAt" : "2019-12-04T00:10:28Z",
        "updatedAt" : "2019-12-04T01:06:06Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "ef537220-a9ab-42cd-8a42-84e13b40407d",
        "parentId" : "db45c97a-d097-45b5-94c0-1875df84f09d",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done.",
        "createdAt" : "2019-12-04T01:03:53Z",
        "updatedAt" : "2019-12-04T01:06:08Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bba2f9ce3d180ad16694824c23778f195bf08f1",
    "line" : 220,
    "diffHunk" : "@@ -1,1 +1759,1763 @@  }\n\n  /// The horizontal visual density of UI components.\n  ///\n  /// This property affects only the horizontal spacing between and within"
  },
  {
    "id" : "637c6582-1e95-4d9b-a61b-b49c2c9ad9b5",
    "prId" : 43547,
    "prUrl" : "https://github.com/flutter/flutter/pull/43547#pullrequestreview-326541800",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc6adf05-22d5-4de8-9e7c-06164d05ceed",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "You might mention that the default for the vertical and horizontal density attributes is zero, which means that the component's layout will be just as it appears in the Material Design spec.",
        "createdAt" : "2019-12-04T00:12:17Z",
        "updatedAt" : "2019-12-04T01:06:06Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "8717001c-e808-4ca5-8c5a-ceeb23aafc25",
        "parentId" : "fc6adf05-22d5-4de8-9e7c-06164d05ceed",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "OK, I mentioned that here, and on the `visualDensity` attribute of `ThemeData`",
        "createdAt" : "2019-12-04T00:51:58Z",
        "updatedAt" : "2019-12-04T01:06:08Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "2605b80d-62e6-45bd-a330-01a22bc49194",
        "parentId" : "fc6adf05-22d5-4de8-9e7c-06164d05ceed",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "I also linked in the material design guidance on density.",
        "createdAt" : "2019-12-04T01:03:45Z",
        "updatedAt" : "2019-12-04T01:06:08Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bba2f9ce3d180ad16694824c23778f195bf08f1",
    "line" : 159,
    "diffHunk" : "@@ -1,1 +1698,1702 @@///    horizontal density of Material components.\n///  * [Material design guidance on density](https://material.io/design/layout/applying-density.html).\nclass VisualDensity extends Diagnosticable {\n  /// A const constructor for [VisualDensity].\n  ///"
  },
  {
    "id" : "32697338-ec8e-4426-a48b-d883a996493c",
    "prId" : 55260,
    "prUrl" : "https://github.com/flutter/flutter/pull/55260#pullrequestreview-396924149",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32117140-c2f1-4781-8ca5-b5f2bbc2b67b",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Sure you don't want to lerp the adjustment? :-) (just kidding)",
        "createdAt" : "2020-04-21T01:19:39Z",
        "updatedAt" : "2020-04-21T18:02:35Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1c06e574a9012def8de6a933e99fe40590ee6ec",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +1337,1341 @@      buttonBarTheme: ButtonBarThemeData.lerp(a.buttonBarTheme, b.buttonBarTheme, t),\n      bottomNavigationBarTheme: BottomNavigationBarThemeData.lerp(a.bottomNavigationBarTheme, b.bottomNavigationBarTheme, t),\n      fixTextFieldOutlineLabel: t < 0.5 ? a.fixTextFieldOutlineLabel : b.fixTextFieldOutlineLabel,\n    );\n  }"
  },
  {
    "id" : "45dd5be8-ffe9-4413-b340-9c8030f75127",
    "prId" : 56956,
    "prUrl" : "https://github.com/flutter/flutter/pull/56956#pullrequestreview-413034025",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9cf27c5-e11c-45cd-9c12-427b88ffe555",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "This means the user could still specify a `brightness` that doesn't match the given `colorScheme.brightness`. Perhaps if they are both given and don't match we should throw an assertion? Or maybe have the `colorScheme.brightness` take precedence as that is what the eventual value will be? ",
        "createdAt" : "2020-05-15T07:28:16Z",
        "updatedAt" : "2020-05-16T01:24:55Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "e0e42132-ec7d-4bb5-b5e7-9c2d87d3884c",
        "parentId" : "f9cf27c5-e11c-45cd-9c12-427b88ffe555",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I did the opposite. If you specify both, then the brightness parameter replaces the ColorScheme's brightness. Developers occasionally specify a brightness value in local Theme overrides, to override the the \"correct\" value, in order to flip light/dark color choices.",
        "createdAt" : "2020-05-15T17:30:54Z",
        "updatedAt" : "2020-05-16T01:24:55Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "ad38279e-04dd-49b8-836b-6236003320b1",
        "parentId" : "f9cf27c5-e11c-45cd-9c12-427b88ffe555",
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Ah, then maybe I am missing something because if I set the brightness here that is different from the colorScheme's when do you override the colorScheme's in this constructor? I see where this brightness is used in the constructor to set a bunch of stuff, but then the colorScheme's brightness will be used after that with the new getter. \r\n",
        "createdAt" : "2020-05-15T18:31:13Z",
        "updatedAt" : "2020-05-16T01:24:55Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "8c364b30-c11d-4d75-9ad8-b70fa22aaf57",
        "parentId" : "f9cf27c5-e11c-45cd-9c12-427b88ffe555",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Actually, you're right. It makes more sense to catch this (likely) error than to support it.  I've added the assert and a test for it.",
        "createdAt" : "2020-05-16T01:19:13Z",
        "updatedAt" : "2020-05-16T01:24:55Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1c759dc1cdf245ab06a96a1b4b929b3f25d2595",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +271,275 @@  }) {\n    assert(colorScheme?.brightness == null || brightness == null || colorScheme.brightness == brightness);\n    final Brightness _brightness = brightness ?? colorScheme?.brightness ?? Brightness.light;\n    final bool isDark = _brightness == Brightness.dark;\n    visualDensity ??= const VisualDensity();"
  },
  {
    "id" : "b52b085b-ea1a-4d29-965f-fead19c9b85f",
    "prId" : 56956,
    "prUrl" : "https://github.com/flutter/flutter/pull/56956#pullrequestreview-413033923",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2081ebe1-26f8-4514-914c-ff9e83b7fa90",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Maybe more explicit here?\r\n\r\n```suggestion\r\n  /// A default dark theme with a teal [ColorScheme.secondary] color.\r\n```",
        "createdAt" : "2020-05-15T07:30:19Z",
        "updatedAt" : "2020-05-16T01:24:55Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "5ac39e35-d3ef-4e7e-96d0-52e517d152ee",
        "parentId" : "2081ebe1-26f8-4514-914c-ff9e83b7fa90",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Done.",
        "createdAt" : "2020-05-16T01:17:55Z",
        "updatedAt" : "2020-05-16T01:24:55Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1c759dc1cdf245ab06a96a1b4b929b3f25d2595",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +657,661 @@  factory ThemeData.light() => ThemeData(brightness: Brightness.light);\n\n  /// A default dark theme with a teal secondary [ColorScheme] color.\n  ///\n  /// This theme does not contain text geometry. Instead, it is expected that"
  },
  {
    "id" : "44666043-3dc9-40ff-ad2d-e36b558481ff",
    "prId" : 56956,
    "prUrl" : "https://github.com/flutter/flutter/pull/56956#pullrequestreview-412838780",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e06b3301-ba11-4b48-bb48-2eb0e84a2728",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "This seems a little odd. When would you want to change the brightness of the colorScheme without changing its colors as well? Is this because we don't want to break the existing API by removing the brightness param here?\r\n",
        "createdAt" : "2020-05-15T07:33:13Z",
        "updatedAt" : "2020-05-16T01:24:55Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "143e744b-9855-43e1-bb55-8cd0a06ce0a8",
        "parentId" : "e06b3301-ba11-4b48-bb48-2eb0e84a2728",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Yes. I found one use-case in an internal app so I'm assuming that there are others in outside apps.\r\n\r\nI think this is comparable to allowing the ThemeData brightness constructor parameter override the color scheme's brightness.",
        "createdAt" : "2020-05-15T17:32:44Z",
        "updatedAt" : "2020-05-16T01:24:55Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1c759dc1cdf245ab06a96a1b4b929b3f25d2595",
    "line" : 225,
    "diffHunk" : "@@ -1,1 +1048,1052 @@  /// Creates a copy of this theme but with the given fields replaced with the new values.\n  ///\n  /// The [brightness] value is applied to the [colorScheme].\n  ThemeData copyWith({\n    Brightness brightness,"
  },
  {
    "id" : "e4ab3598-713b-4920-9516-94b276090153",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-428917607",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a13ede44-9898-429a-b076-ff55d710df76",
        "parentId" : null,
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "This isn't your problem but it would be great if we could rename all the other variables to finish with Data. For example, `timePickerTheme` should be `timePickerThemeData` maybe we can start this change with this widget. ",
        "createdAt" : "2020-06-10T19:31:11Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      },
      {
        "id" : "414b3226-fbf2-4e9e-b22f-e9bb1cc1f764",
        "parentId" : "a13ede44-9898-429a-b076-ff55d710df76",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "I think we've been mostly consistent in dropping the `Data` from the variable name since it felt unnecessary, so I'm gonna leave as-is.",
        "createdAt" : "2020-06-11T13:37:39Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +1044,1048 @@\n  /// A theme for customizing the appearance and layout of time picker widgets.\n  final TimePickerThemeData timePickerTheme;\n\n  /// A temporary flag to allow apps to opt-in to a"
  },
  {
    "id" : "46027485-5e08-4f16-afa5-00584531d16c",
    "prId" : 64316,
    "prUrl" : "https://github.com/flutter/flutter/pull/64316#pullrequestreview-477728182",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "966abde7-6be2-414a-a60f-b36fcc54ccf5",
        "parentId" : null,
        "authorId" : "48e1b91d-64e2-4bb8-894c-50cce634bfa9",
        "body" : "maybe you should add the missing missing DiagnosticsProperties",
        "createdAt" : "2020-08-21T12:41:59Z",
        "updatedAt" : "2020-09-02T14:11:05Z",
        "lastEditedBy" : "48e1b91d-64e2-4bb8-894c-50cce634bfa9",
        "tags" : [
        ]
      },
      {
        "id" : "6f24fd60-b994-433d-8a35-be0e7e4f1d11",
        "parentId" : "966abde7-6be2-414a-a60f-b36fcc54ccf5",
        "authorId" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "body" : "I think that is out of the scope of this pr",
        "createdAt" : "2020-08-28T13:28:51Z",
        "updatedAt" : "2020-09-02T14:11:05Z",
        "lastEditedBy" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfed7150be4dce90c76df1c66fdfa422f0b87b8f",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +1688,1692 @@    properties.add(DiagnosticsProperty<ElevatedButtonThemeData>('elevatedButtonTheme', elevatedButtonTheme, defaultValue: defaultData.elevatedButtonTheme, level: DiagnosticLevel.debug));\n    properties.add(DiagnosticsProperty<OutlinedButtonThemeData>('outlinedButtonTheme', outlinedButtonTheme, defaultValue: defaultData.outlinedButtonTheme, level: DiagnosticLevel.debug));\n    properties.add(DiagnosticsProperty<DataTableThemeData>('dataTableTheme', dataTableTheme, defaultValue: defaultData.dataTableTheme, level: DiagnosticLevel.debug));\n  }\n}"
  },
  {
    "id" : "01fb29be-7002-4245-abbb-b162722231a0",
    "prId" : 65044,
    "prUrl" : "https://github.com/flutter/flutter/pull/65044#pullrequestreview-489965059",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ec74705-8d35-4e45-9fc5-4a196bf716eb",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Even though selectionColor and cursorColor will not be deprecated (yet), their API docs should explain what the deprecation warning will, and the docs should warn about the upcoming deprecation.",
        "createdAt" : "2020-09-09T22:21:27Z",
        "updatedAt" : "2020-09-16T21:13:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "66b29cfd-2218-498d-9874-072c97332eea",
        "parentId" : "5ec74705-8d35-4e45-9fc5-4a196bf716eb",
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Good point. Done.",
        "createdAt" : "2020-09-16T19:41:23Z",
        "updatedAt" : "2020-09-16T21:13:01Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c3e89c67789f6a24f2753c55588764593bcf840",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +406,410 @@\n    fixTextFieldOutlineLabel ??= false;\n    useTextSelectionTheme ??= true;\n\n    return ThemeData.raw("
  },
  {
    "id" : "1d66eebd-2e79-48eb-93b9-e858735e4e1c",
    "prId" : 70311,
    "prUrl" : "https://github.com/flutter/flutter/pull/70311#pullrequestreview-535421707",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b00cf4d2-cd1c-4e0d-883d-a7f8a3d0b68d",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "We probably need a sweeping change here - not needed for this PR - that makes it clear why the default value of these ThemeData properties is. Unless I'm missing something, please file an issue.",
        "createdAt" : "2020-11-18T21:33:13Z",
        "updatedAt" : "2020-11-20T14:19:23Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "e79c8a3a-5d7a-4436-930d-cbb0105a8041",
        "parentId" : "b00cf4d2-cd1c-4e0d-883d-a7f8a3d0b68d",
        "authorId" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "body" : "https://github.com/flutter/flutter/issues/70935",
        "createdAt" : "2020-11-20T13:22:39Z",
        "updatedAt" : "2020-11-20T14:19:23Z",
        "lastEditedBy" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "tags" : [
        ]
      }
    ],
    "commit" : "84723e83699864b941f038549f15dfcebfeea8cd",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +1172,1176 @@  final DataTableThemeData dataTableTheme;\n\n  /// A theme for customizing the appearance and layout of [Checkbox] widgets.\n  final CheckboxThemeData checkboxTheme;\n"
  }
]