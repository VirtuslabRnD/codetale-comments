[
  {
    "id" : "7d4f8b47-d2d0-4e04-9f4b-18543dfa2297",
    "prId" : 3167,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fdc0073-ac25-42ce-af31-73b42c260540",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I assume that what you've specified matches the implementation but it seems like the button's color should affect its Icon children as well.\n",
        "createdAt" : "2016-04-07T15:27:03Z",
        "updatedAt" : "2016-04-07T16:54:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "5ef81681-72ce-4f26-86ab-3dc01929c58d",
        "parentId" : "7fdc0073-ac25-42ce-af31-73b42c260540",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "That seems sensible, but we don't do that currently.  Are there examples of icons in raised or flat buttons?\n",
        "createdAt" : "2016-04-07T16:53:44Z",
        "updatedAt" : "2016-04-07T16:54:01Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6dca20149022e23eb3722bcae7237134fad60cd",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +19,23 @@///  * [FlatButton]\nenum ButtonColor {\n  /// The button should use the normal color (e.g., black or white depending on the [ThemeData.brightness]) for its text.\n  normal,\n"
  },
  {
    "id" : "53f1498a-df89-4f07-a283-fd9cbb2bc004",
    "prId" : 14410,
    "prUrl" : "https://github.com/flutter/flutter/pull/14410#pullrequestreview-93497803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "793196ff-f542-4c13-a54d-9e21bf8c7d91",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ideally FlatButton wouldn't generate a Material here",
        "createdAt" : "2018-02-02T01:30:33Z",
        "updatedAt" : "2018-02-03T00:50:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "70b72726-23b7-47d3-bec8-5c22edbbc509",
        "parentId" : "793196ff-f542-4c13-a54d-9e21bf8c7d91",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(i guess it'd have to generate a Container instead)",
        "createdAt" : "2018-02-02T01:31:28Z",
        "updatedAt" : "2018-02-03T00:50:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ae946cd7-7e13-4ae1-90c2-f8727467dfcf",
        "parentId" : "793196ff-f542-4c13-a54d-9e21bf8c7d91",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "or rather, an Ink",
        "createdAt" : "2018-02-02T01:40:37Z",
        "updatedAt" : "2018-02-03T00:50:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3a10a351c0cfc3a6af54e47a9ca3e8b3765ae5a",
    "line" : 227,
    "diffHunk" : "@@ -1,1 +145,149 @@      child: new ConstrainedBox(\n        constraints: widget.constraints,\n        child: new Material(\n          elevation: elevation,\n          textStyle: widget.textStyle,"
  },
  {
    "id" : "8e8d9ea8-0152-4e44-b095-07011db07c04",
    "prId" : 18369,
    "prUrl" : "https://github.com/flutter/flutter/pull/18369#pullrequestreview-130079534",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59770253-b285-4443-b3b8-48b267ef0a67",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this is an interesting approach.\r\n\r\nWhy can't we just make the single GestureDetector bigger though?",
        "createdAt" : "2018-06-19T17:12:59Z",
        "updatedAt" : "2018-07-03T16:59:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "59258ce3-cb70-45f3-861b-bb10623dc330",
        "parentId" : "59770253-b285-4443-b3b8-48b267ef0a67",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "The GestureDetector/InkWell/Material is a delicate ecosystem.\r\n\r\nInkWell  (which contains the gesture detector) uses context to find a parent material where it draws the splashes.  Any increase in the size of the gesture detector, which is sized by the material, necessarily increase the material size which would increase the visible appearance of the button.\r\n\r\n",
        "createdAt" : "2018-06-19T17:16:39Z",
        "updatedAt" : "2018-07-03T16:59:59Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "7ae8599d-131e-403a-8c3f-79204bdc8d95",
        "parentId" : "59770253-b285-4443-b3b8-48b267ef0a67",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Oh, right, I forgot that buttons had their own Material...\r\n\r\nPlease add a test to make sure that only one of the GestureDetectors gets the pointer down event (which I believe this code does as you wrote it but it's something we should make sure we don't regress since it's so subtle).\r\n\r\nAlso please make sure there's a test that when you tap inside the button, the splash starts where you tapped, but when you tap outside the button, it starts wherever we decided it should start.",
        "createdAt" : "2018-06-19T17:26:01Z",
        "updatedAt" : "2018-07-03T16:59:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fea596174ab7e344c61d5b38258b67f0c57cf36a",
    "line" : 165,
    "diffHunk" : "@@ -1,1 +480,484 @@    return child.hitTest(result, position: size.center(Offset.zero));\n  }\n}"
  },
  {
    "id" : "17efbfa3-801c-4021-b99b-cd4dd1dee8af",
    "prId" : 20205,
    "prUrl" : "https://github.com/flutter/flutter/pull/20205#pullrequestreview-143698223",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53e8c714-22ae-4826-9947-8269117edbcc",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "all the constructors where you add clipBehavior should assert that it's not null, and should mention in their documentation that it must not be null.",
        "createdAt" : "2018-08-03T23:58:04Z",
        "updatedAt" : "2018-08-09T21:12:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3c7ce7ab-9183-485a-aea1-79dbb2d52e94",
        "parentId" : "53e8c714-22ae-4826-9947-8269117edbcc",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Done.",
        "createdAt" : "2018-08-06T17:55:44Z",
        "updatedAt" : "2018-08-09T21:12:43Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc150ce0dbe9a014cc81453f601fb90e4dcaa6da",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +47,51 @@    this.shape = const RoundedRectangleBorder(),\n    this.animationDuration = kThemeChangeDuration,\n    this.clipBehavior = Clip.none,\n    MaterialTapTargetSize materialTapTargetSize,\n    this.child,"
  },
  {
    "id" : "1443ad4f-5fc2-4bc6-ada7-710b163c291c",
    "prId" : 31438,
    "prUrl" : "https://github.com/flutter/flutter/pull/31438#pullrequestreview-236350797",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9be4c52-7ae3-4fd0-b62b-4cbc4dc30ca1",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Should add an assert to the constructor to ensure this is always non-negative.",
        "createdAt" : "2019-05-10T18:58:42Z",
        "updatedAt" : "2019-05-15T02:08:38Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "e012f9f4-287f-43e8-9ac8-3910f721c52b",
        "parentId" : "b9be4c52-7ae3-4fd0-b62b-4cbc4dc30ca1",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Added assert for hoverElevation, and updated the doc comment on the constructor.",
        "createdAt" : "2019-05-11T00:07:26Z",
        "updatedAt" : "2019-05-15T02:08:38Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "388e9d68eb6ab7adad56ff72b72aa9a455332b49",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +131,135 @@  ///  * [disabledElevation], the elevation when the button is disabled.\n  ///  * [highlightElevation], the elevation when the button is pressed.\n  final double hoverElevation;\n\n  /// The elevation for the button's [Material] when the button"
  },
  {
    "id" : "1b367de6-3d8c-4611-96c0-ca23a1f85853",
    "prId" : 31438,
    "prUrl" : "https://github.com/flutter/flutter/pull/31438#pullrequestreview-236350797",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "558ce2ca-52bb-4f21-b0e7-a34d385182b0",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Should add an assert to the constructor to ensure this is always non-negative.",
        "createdAt" : "2019-05-10T18:58:53Z",
        "updatedAt" : "2019-05-15T02:08:38Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "64ba6cbb-808f-4bb3-ac3b-717992f3b2c7",
        "parentId" : "558ce2ca-52bb-4f21-b0e7-a34d385182b0",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Added assert for focusElevation, and updated the doc comment on the constructor.",
        "createdAt" : "2019-05-11T00:07:57Z",
        "updatedAt" : "2019-05-15T02:08:38Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "388e9d68eb6ab7adad56ff72b72aa9a455332b49",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +149,153 @@  ///  * [disabledElevation], the elevation when the button is disabled.\n  ///  * [highlightElevation], the elevation when the button is pressed.\n  final double focusElevation;\n\n  /// The elevation for the button's [Material] when the button"
  },
  {
    "id" : "4443f166-192f-4efe-8845-1990d3774331",
    "prId" : 33090,
    "prUrl" : "https://github.com/flutter/flutter/pull/33090#pullrequestreview-244513773",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b3e19ce-192f-4449-a9d4-ac278571a7c5",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Removing the setState doesn't look correct; the build method depends on _effectiveElevation which depends on _pressed.",
        "createdAt" : "2019-05-31T16:33:15Z",
        "updatedAt" : "2019-06-05T18:57:32Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "562ffda1-8b01-4dc2-947f-6a9718784f6f",
        "parentId" : "7b3e19ce-192f-4449-a9d4-ac278571a7c5",
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Fixed.",
        "createdAt" : "2019-05-31T20:49:17Z",
        "updatedAt" : "2019-06-05T18:57:32Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      }
    ],
    "commit" : "b53b0e5b20be2de8ea3f561bf4e6fafc741291e1",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +253,257 @@\n  void _handleHighlightChanged(bool value) {\n    if (_pressed != value) {\n      setState(() {\n        _updateState(MaterialState.pressed, value);"
  },
  {
    "id" : "98fd99c0-66bb-40ff-87f5-5e47d719960e",
    "prId" : 33090,
    "prUrl" : "https://github.com/flutter/flutter/pull/33090#pullrequestreview-244513903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e2c4a16-fab7-4b41-8326-2143122c5203",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The original code cleared _highlight (now _pressed) if the button was disabled. This sounds correct - why remove it?",
        "createdAt" : "2019-05-31T16:35:33Z",
        "updatedAt" : "2019-06-05T18:57:32Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "62d4a9f6-a869-4a39-b605-f4c4e2aed510",
        "parentId" : "9e2c4a16-fab7-4b41-8326-2143122c5203",
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Added this back with a comment explaining why we need it.",
        "createdAt" : "2019-05-31T20:49:38Z",
        "updatedAt" : "2019-06-05T18:57:32Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      }
    ],
    "commit" : "b53b0e5b20be2de8ea3f561bf4e6fafc741291e1",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +288,292 @@  void didUpdateWidget(RawMaterialButton oldWidget) {\n    super.didUpdateWidget(oldWidget);\n    _updateState(MaterialState.disabled, !widget.enabled);\n    // If the button is disabled while a press gesture is currently ongoing,\n    // InkWell makes a call to handleHighlightChanged. This causes an exception"
  },
  {
    "id" : "22f0574e-fbc4-423c-bf29-023e01062f3c",
    "prId" : 43547,
    "prUrl" : "https://github.com/flutter/flutter/pull/43547#pullrequestreview-321878727",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eecb3ab9-3216-4ace-9413-25acdc14214b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Could be\r\n\r\n```dart\r\n    final EdgeInsetsGeometry padding = _clampInsets(\r\n      widget.padding + EdgeInsets.fromLTRB(\r\n        densityAdjustment.dx,\r\n        densityAdjustment.dy,\r\n        densityAdjustment.dx,\r\n        densityAdjustment.dy,\r\n      ),\r\n    );\r\n```\r\nOr (sorry this is a gratuitous suggestion on top of a gratuitous suggestion)\r\n\r\n```dart\r\n    final double dy = densityAdjustment.dx;\r\n    final double dy = densityAdjustment.dy;\r\n    final EdgeInsetsGeometry padding = _clampInsets(widget.padding + EdgeInsets.fromLTRB(dx, dy, dx, dy));\r\n```\r\n",
        "createdAt" : "2019-10-31T17:05:59Z",
        "updatedAt" : "2019-12-04T01:06:05Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "98e1cd1c-d7af-4c26-a42a-69e78aeacba5",
        "parentId" : "eecb3ab9-3216-4ace-9413-25acdc14214b",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Ahh, I tried that before I ended up with what I have, but there isn't an `operator+` on `EdgeInsetsGeometry`, and the `widget.padding` is one of those. There's one on `EdgeInsets` and `EdgeInsetsDirectional` but that doesn't help here.",
        "createdAt" : "2019-10-31T20:19:13Z",
        "updatedAt" : "2019-12-04T01:06:05Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "4880d864-77e9-400c-9e8f-72def6c7ea23",
        "parentId" : "eecb3ab9-3216-4ace-9413-25acdc14214b",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Yes, you're right. I suppose you could resolve the widget's EdgeInsetsGeometry first, but what you have is fine.",
        "createdAt" : "2019-11-23T00:50:01Z",
        "updatedAt" : "2019-12-04T01:06:05Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bba2f9ce3d180ad16694824c23778f195bf08f1",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +371,375 @@      minHeight: widget.constraints.minWidth != null ? (widget.constraints.minHeight + densityAdjustment.dy).clamp(0.0, double.infinity) : null,\n    );\n    final EdgeInsetsGeometry padding = widget.padding.add(\n      EdgeInsets.only(\n        left: densityAdjustment.dx,"
  },
  {
    "id" : "793b25bc-a1bb-411e-b973-916260435f65",
    "prId" : 43547,
    "prUrl" : "https://github.com/flutter/flutter/pull/43547#pullrequestreview-326541800",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cebe3f50-1dac-4718-92bd-cabbb663ef35",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Do we need to clamp these parameters to >= 0?",
        "createdAt" : "2019-12-04T00:02:51Z",
        "updatedAt" : "2019-12-04T01:06:06Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "86ca989f-140b-44a7-800a-8da0d97ec3c0",
        "parentId" : "cebe3f50-1dac-4718-92bd-cabbb663ef35",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "I could, but with the current values, the max density adjustment is -16.0, and kMinInteractiveDimension is 48.0, so it can't go below zero.  I added an assert so if that ever changes, we'll know.",
        "createdAt" : "2019-12-04T00:43:43Z",
        "updatedAt" : "2019-12-04T01:06:08Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bba2f9ce3d180ad16694824c23778f195bf08f1",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +423,427 @@      case MaterialTapTargetSize.padded:\n        minSize = Size(\n          kMinInteractiveDimension + densityAdjustment.dx,\n          kMinInteractiveDimension + densityAdjustment.dy,\n        );"
  }
]