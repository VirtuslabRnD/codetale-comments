[
  {
    "id" : "7d4f8b47-d2d0-4e04-9f4b-18543dfa2297",
    "prId" : 3167,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fdc0073-ac25-42ce-af31-73b42c260540",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I assume that what you've specified matches the implementation but it seems like the button's color should affect its Icon children as well.\n",
        "createdAt" : "2016-04-07T15:27:03Z",
        "updatedAt" : "2016-04-07T16:54:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "5ef81681-72ce-4f26-86ab-3dc01929c58d",
        "parentId" : "7fdc0073-ac25-42ce-af31-73b42c260540",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "That seems sensible, but we don't do that currently.  Are there examples of icons in raised or flat buttons?\n",
        "createdAt" : "2016-04-07T16:53:44Z",
        "updatedAt" : "2016-04-07T16:54:01Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6dca20149022e23eb3722bcae7237134fad60cd",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +19,23 @@///  * [FlatButton]\nenum ButtonColor {\n  /// The button should use the normal color (e.g., black or white depending on the [ThemeData.brightness]) for its text.\n  normal,\n"
  },
  {
    "id" : "53f1498a-df89-4f07-a283-fd9cbb2bc004",
    "prId" : 14410,
    "prUrl" : "https://github.com/flutter/flutter/pull/14410#pullrequestreview-93497803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "793196ff-f542-4c13-a54d-9e21bf8c7d91",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ideally FlatButton wouldn't generate a Material here",
        "createdAt" : "2018-02-02T01:30:33Z",
        "updatedAt" : "2018-02-03T00:50:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "70b72726-23b7-47d3-bec8-5c22edbbc509",
        "parentId" : "793196ff-f542-4c13-a54d-9e21bf8c7d91",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(i guess it'd have to generate a Container instead)",
        "createdAt" : "2018-02-02T01:31:28Z",
        "updatedAt" : "2018-02-03T00:50:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ae946cd7-7e13-4ae1-90c2-f8727467dfcf",
        "parentId" : "793196ff-f542-4c13-a54d-9e21bf8c7d91",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "or rather, an Ink",
        "createdAt" : "2018-02-02T01:40:37Z",
        "updatedAt" : "2018-02-03T00:50:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3a10a351c0cfc3a6af54e47a9ca3e8b3765ae5a",
    "line" : 227,
    "diffHunk" : "@@ -1,1 +145,149 @@      child: new ConstrainedBox(\n        constraints: widget.constraints,\n        child: new Material(\n          elevation: elevation,\n          textStyle: widget.textStyle,"
  },
  {
    "id" : "8e8d9ea8-0152-4e44-b095-07011db07c04",
    "prId" : 18369,
    "prUrl" : "https://github.com/flutter/flutter/pull/18369#pullrequestreview-130079534",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59770253-b285-4443-b3b8-48b267ef0a67",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this is an interesting approach.\r\n\r\nWhy can't we just make the single GestureDetector bigger though?",
        "createdAt" : "2018-06-19T17:12:59Z",
        "updatedAt" : "2018-07-03T16:59:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "59258ce3-cb70-45f3-861b-bb10623dc330",
        "parentId" : "59770253-b285-4443-b3b8-48b267ef0a67",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "The GestureDetector/InkWell/Material is a delicate ecosystem.\r\n\r\nInkWell  (which contains the gesture detector) uses context to find a parent material where it draws the splashes.  Any increase in the size of the gesture detector, which is sized by the material, necessarily increase the material size which would increase the visible appearance of the button.\r\n\r\n",
        "createdAt" : "2018-06-19T17:16:39Z",
        "updatedAt" : "2018-07-03T16:59:59Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "7ae8599d-131e-403a-8c3f-79204bdc8d95",
        "parentId" : "59770253-b285-4443-b3b8-48b267ef0a67",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Oh, right, I forgot that buttons had their own Material...\r\n\r\nPlease add a test to make sure that only one of the GestureDetectors gets the pointer down event (which I believe this code does as you wrote it but it's something we should make sure we don't regress since it's so subtle).\r\n\r\nAlso please make sure there's a test that when you tap inside the button, the splash starts where you tapped, but when you tap outside the button, it starts wherever we decided it should start.",
        "createdAt" : "2018-06-19T17:26:01Z",
        "updatedAt" : "2018-07-03T16:59:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fea596174ab7e344c61d5b38258b67f0c57cf36a",
    "line" : 165,
    "diffHunk" : "@@ -1,1 +480,484 @@    return child.hitTest(result, position: size.center(Offset.zero));\n  }\n}"
  },
  {
    "id" : "17efbfa3-801c-4021-b99b-cd4dd1dee8af",
    "prId" : 20205,
    "prUrl" : "https://github.com/flutter/flutter/pull/20205#pullrequestreview-143698223",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53e8c714-22ae-4826-9947-8269117edbcc",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "all the constructors where you add clipBehavior should assert that it's not null, and should mention in their documentation that it must not be null.",
        "createdAt" : "2018-08-03T23:58:04Z",
        "updatedAt" : "2018-08-09T21:12:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3c7ce7ab-9183-485a-aea1-79dbb2d52e94",
        "parentId" : "53e8c714-22ae-4826-9947-8269117edbcc",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Done.",
        "createdAt" : "2018-08-06T17:55:44Z",
        "updatedAt" : "2018-08-09T21:12:43Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc150ce0dbe9a014cc81453f601fb90e4dcaa6da",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +47,51 @@    this.shape = const RoundedRectangleBorder(),\n    this.animationDuration = kThemeChangeDuration,\n    this.clipBehavior = Clip.none,\n    MaterialTapTargetSize materialTapTargetSize,\n    this.child,"
  }
]