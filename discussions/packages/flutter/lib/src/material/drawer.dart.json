[
  {
    "id" : "8136bfb7-b39f-4833-884c-7a18a5f4a1e8",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "178d6d2a-9023-4965-bbd6-3eea29e57f91",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "blank line\n",
        "createdAt" : "2016-03-31T22:34:40Z",
        "updatedAt" : "2016-03-31T22:34:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +35,39 @@///\n/// See also:\n///  * [Scaffold.drawer]\n///  * [DrawerItem]\n///  * [DrawerHeader]"
  },
  {
    "id" : "e384edb4-140b-4b53-8bf9-59f2b1208c45",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e217bc55-1387-4c84-9998-2867fbea36e0",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "add a paragraph here suggesting putting the contents of the drawer in a Block to enable it to scroll?\n",
        "createdAt" : "2016-03-31T22:35:06Z",
        "updatedAt" : "2016-03-31T22:35:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +32,36 @@/// the side of the screen and displays a list of items that the user can\n/// interact with. The top-most item in a drawer is typically a [DrawerHeader]\n/// that displays status information about the current user.\n///\n/// See also:"
  },
  {
    "id" : "e2e69421-2ff6-410a-8737-6139ff0e72c7",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7330a9d-d434-434e-b900-9825fda4a349",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "blank line\n",
        "createdAt" : "2016-03-31T22:35:17Z",
        "updatedAt" : "2016-03-31T22:35:17Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +70,74 @@///\n/// See also:\n/// * [Drawer]\n/// * [Scaffold.drawer]\nclass DrawerController extends StatefulWidget {"
  },
  {
    "id" : "1a1eec2e-aed7-469a-b51c-32dfd85d92af",
    "prId" : 3709,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b549b541-a53f-4d50-b3d2-e7ea59d01537",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "is this the expected entry-point for programmatically opening drawers? Or is there some method on Scaffold or something to do it?\n",
        "createdAt" : "2016-05-03T23:17:03Z",
        "updatedAt" : "2016-05-04T00:24:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "192ce949f96130200a5dc768fbe2d594b08a5715",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +212,216 @@  }\n\n  /// Starts an animation to open the drawer.\n  ///\n  /// Typically called by [Scaffold.openDrawer]."
  },
  {
    "id" : "23c5ff31-f431-4809-9de6-cd2f757614c2",
    "prId" : 3709,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03ea43ee-512c-452c-b2d7-d26cba1ceabd",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ditto\n",
        "createdAt" : "2016-05-03T23:17:06Z",
        "updatedAt" : "2016-05-04T00:24:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "192ce949f96130200a5dc768fbe2d594b08a5715",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +219,223 @@  }\n\n  /// Starts an animation to close the drawer.\n  void close() {\n    _controller.fling(velocity: -1.0);"
  },
  {
    "id" : "9ccd69ac-f7d6-4711-a45e-ce219fe88590",
    "prId" : 5157,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79a77d1b-b740-460b-9fde-856938ab8ac1",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "A side effect of this is that _handleHistoryEntryRemoved starts the close animation (calls close()). Since the controller is stopped by the next statement, that's probably harmless. \n",
        "createdAt" : "2016-07-29T22:09:56Z",
        "updatedAt" : "2016-07-29T22:09:56Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa0bf94ab33742b5d9d2b12f66187a93874f78af",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +123,127 @@  @override\n  void dispose() {\n    _historyEntry?.remove();\n    _controller\n      ..removeListener(_animationChanged)"
  },
  {
    "id" : "8a8434cc-cad7-4655-b107-4970639650ff",
    "prId" : 8992,
    "prUrl" : "https://github.com/flutter/flutter/pull/8992#pullrequestreview-29003751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28f0370a-5787-496a-ae1f-553003b88177",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I would inline the _buildDrawer method unless it's called anywhere else, saves a jump and doesn't really make the code any less readable.",
        "createdAt" : "2017-03-24T00:33:56Z",
        "updatedAt" : "2017-03-24T21:58:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "61827216-3431-41e4-b1d7-0759835138d3",
        "parentId" : "28f0370a-5787-496a-ae1f-553003b88177",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(i'm fine with it this way as well if you feel strongly)",
        "createdAt" : "2017-03-24T00:34:08Z",
        "updatedAt" : "2017-03-24T21:58:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "6fe83bae-b14b-41d3-806a-d3c1b6f74070",
        "parentId" : "28f0370a-5787-496a-ae1f-553003b88177",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I did this because _buildDrawer(), the original build method body, has two very different returns, depending on if the drawer is dismissed. I was avoiding  duplicating the new ListTileTheme expression in both branches, to make it clear that it was the same for either drawer variation.",
        "createdAt" : "2017-03-24T15:14:51Z",
        "updatedAt" : "2017-03-24T21:58:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "bd1c8176-c5fe-4e5f-a512-9bb1e0943ede",
        "parentId" : "28f0370a-5787-496a-ae1f-553003b88177",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Sounds good.",
        "createdAt" : "2017-03-24T20:31:53Z",
        "updatedAt" : "2017-03-24T21:58:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "67ea716ba1ce5cf8b0b4ed8a42f929037ef28288",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +303,307 @@    return new ListTileTheme(\n      style: ListTileStyle.drawer,\n      child: _buildDrawer(context),\n    );\n  }"
  }
]