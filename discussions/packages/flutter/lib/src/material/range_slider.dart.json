[
  {
    "id" : "29610bb2-6669-422d-9baf-d2662d48da0a",
    "prId" : 31681,
    "prUrl" : "https://github.com/flutter/flutter/pull/31681#pullrequestreview-232211684",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83f270f7-da3e-411e-a15f-cd1c57edf78e",
        "parentId" : null,
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "What are these 3 lines here for? They seem out of context",
        "createdAt" : "2019-04-29T19:54:18Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      },
      {
        "id" : "95598894-0dc8-4539-96c1-1dff638549a9",
        "parentId" : "83f270f7-da3e-411e-a15f-cd1c57edf78e",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Removed",
        "createdAt" : "2019-04-30T14:39:41Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "86ecafa2904412c64d0de9c2fe8a033c44dafcba",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +18,22 @@import 'theme.dart';\n\n// Examples can assume:\n// RangeValues _rangeValues = RangeValues(0.3, 0.7);\n// RangeValues _dollarsRange = RangeValues(50, 100);"
  },
  {
    "id" : "cc7d3edb-ea7a-49c0-a425-fe053015f778",
    "prId" : 31681,
    "prUrl" : "https://github.com/flutter/flutter/pull/31681#pullrequestreview-232395452",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7edd0c06-d399-4854-9001-a607c13d8317",
        "parentId" : null,
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "I think this exact comment is above (in the class documentation), probably doesn't need to be in both places.",
        "createdAt" : "2019-04-30T20:31:37Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      },
      {
        "id" : "c6ce43bb-dabe-45c0-adc3-5704a744addc",
        "parentId" : "7edd0c06-d399-4854-9001-a607c13d8317",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "It is intentionally because that is what slider.dart does",
        "createdAt" : "2019-04-30T20:42:11Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "f5865918-22fd-4e1e-bd44-fc659669946c",
        "parentId" : "7edd0c06-d399-4854-9001-a607c13d8317",
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Cool sounds good!",
        "createdAt" : "2019-04-30T20:42:54Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      }
    ],
    "commit" : "86ecafa2904412c64d0de9c2fe8a033c44dafcba",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +90,94 @@  /// Creates a Material Design range slider.\n  ///\n  /// The range slider widget itself does not maintain any state. Instead, when\n  /// the state of the slider changes, the widget calls the [onChanged] callback.\n  /// Most widgets that use a range slider will listen for the [onChanged] callback"
  },
  {
    "id" : "aa9ac904-05be-4678-8ae7-3240a1a4017d",
    "prId" : 34869,
    "prUrl" : "https://github.com/flutter/flutter/pull/34869#pullrequestreview-253451171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1654812c-2187-45ad-a715-a8fae93f3d1a",
        "parentId" : null,
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "Is there actually a need for storing this as a property? If so, do you need to reset it anywhere?",
        "createdAt" : "2019-06-24T13:08:52Z",
        "updatedAt" : "2019-06-24T19:04:24Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      },
      {
        "id" : "ab2f74d2-0ec1-422c-b105-0531f62038a2",
        "parentId" : "1654812c-2187-45ad-a715-a8fae93f3d1a",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Its so that the values can be shared between the _startInteraction, _handleDragUpdate, and _endInteraction. They can be set in either _startInteraction or _handleDragUpdate, and _endInteraction needs to emit them on onChangeEnd.\r\n\r\nIt already gets reset whenever there is a new thumb selection, and is only used when the thumb selection is non null",
        "createdAt" : "2019-06-24T14:30:58Z",
        "updatedAt" : "2019-06-24T19:04:24Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f7dc01b61607023811287b1d3becc9dfd7e1eb3",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +731,735 @@  TapGestureRecognizer _tap;\n  bool _active = false;\n  RangeValues _newValues;\n\n  bool get isEnabled => onChanged != null;"
  },
  {
    "id" : "c818b166-92bc-420e-a84d-bbd5a9c6610c",
    "prId" : 38930,
    "prUrl" : "https://github.com/flutter/flutter/pull/38930#pullrequestreview-288949876",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c0b499b-00dc-453f-a509-1f4a49a36365",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Will _updateLabelPainters not cause this to happen?",
        "createdAt" : "2019-09-16T22:58:21Z",
        "updatedAt" : "2019-09-24T16:42:06Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "3e208aaa-6b3f-4540-99b1-3c7f36adfbee",
        "parentId" : "5c0b499b-00dc-453f-a509-1f4a49a36365",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "no, _updateLabelPainters will set the same property of existing textpainter, which will all get shortcircuited.",
        "createdAt" : "2019-09-16T23:21:05Z",
        "updatedAt" : "2019-09-24T16:42:06Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "75e1926c01e4512e6b3a7a81ca90c92ccd87cbae",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +934,938 @@  void systemFontsDidChange() {\n    super.systemFontsDidChange();\n    _startLabelPainter.markNeedsLayout();\n    _endLabelPainter.markNeedsLayout();\n    _updateLabelPainters();"
  },
  {
    "id" : "19dcde50-2314-48d0-9df7-a93cf56d94c4",
    "prId" : 52663,
    "prUrl" : "https://github.com/flutter/flutter/pull/52663#pullrequestreview-376880869",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d47a8d29-159f-439a-a7e0-a5ad64facd30",
        "parentId" : null,
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "This no longer needs to happen at this point of the paint method. Maybe move to the end for clarity?",
        "createdAt" : "2020-03-18T02:04:40Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "852e6423-3548-4df3-a14a-edcd7941713c",
        "parentId" : "d47a8d29-159f-439a-a7e0-a5ad64facd30",
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "This is within an if statement and at the end of that statement.",
        "createdAt" : "2020-03-18T14:21:43Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8f09d5eb91f7616633af2f20a8c3730808bed4a",
    "line" : 461,
    "diffHunk" : "@@ -1,1 +1454,1458 @@      }\n\n      _state.paintTopValueIndicator = (PaintingContext context, Offset offset) {\n        _sliderTheme.rangeValueIndicatorShape.paint(\n          context,"
  },
  {
    "id" : "ccd22578-134e-4249-a1b9-110bd3011821",
    "prId" : 52663,
    "prUrl" : "https://github.com/flutter/flutter/pull/52663#pullrequestreview-381391050",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "212fba66-0b1f-4242-bcc8-df2a3d45912b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This would be a good place to briefly explain how v2 differs from v1. The text should link to `https://groups.google.com/g/flutter-announce/c/69dmlKUL5Ew/m/tQh-ajiEAAAJ`\r\n",
        "createdAt" : "2020-03-25T00:18:29Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "7017dcba-0158-474a-9a7b-b2b9668f4f65",
        "parentId" : "212fba66-0b1f-4242-bcc8-df2a3d45912b",
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "Done",
        "createdAt" : "2020-03-25T17:46:48Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8f09d5eb91f7616633af2f20a8c3730808bed4a",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +341,345 @@  final RangeSemanticFormatterCallback semanticFormatterCallback;\n\n  /// Whether to use the updated Material spec version of the [RangeSlider].\n  /// * The v2 [RangeSlider] has an updated value indicator that matches the latest specs.\n  /// * The value indicator is painted on the Overlay."
  },
  {
    "id" : "252676d0-0154-4c74-aa5a-f03e6e46112d",
    "prId" : 52663,
    "prUrl" : "https://github.com/flutter/flutter/pull/52663#pullrequestreview-381396451",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf873ae8-6766-44ad-9e63-d11278bee074",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "value indicator's color is ",
        "createdAt" : "2020-03-25T00:37:50Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "2465d7e7-2744-44e4-b8e2-97249edaf448",
        "parentId" : "cf873ae8-6766-44ad-9e63-d11278bee074",
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "Done",
        "createdAt" : "2020-03-25T17:53:25Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8f09d5eb91f7616633af2f20a8c3730808bed4a",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +576,580 @@    // (which can be defined by activeColor) if the\n    // RectangularSliderValueIndicatorShape is used. In all other cases, the\n    // value indicator is assumed to be the same as the active color.\n    final RangeSliderValueIndicatorShape valueIndicatorShape = sliderTheme.rangeValueIndicatorShape ?? _defaultValueIndicatorShape;\n    Color valueIndicatorColor;"
  },
  {
    "id" : "e6ed7b97-51cc-4cae-9ed1-afa54de168e9",
    "prId" : 52663,
    "prUrl" : "https://github.com/flutter/flutter/pull/52663#pullrequestreview-381403329",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ecd7fa92-27f1-4ce9-8d26-742cf79a7bfa",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "If I'm understanding this correctly, the only reason that we're defining a local function here is to draw attention to the exact same function in slider.dart. Which is OK, just wanted to make sure.",
        "createdAt" : "2020-03-25T00:45:09Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "1415e8e0-4d0f-4291-acee-a39a2dce2278",
        "parentId" : "ecd7fa92-27f1-4ce9-8d26-742cf79a7bfa",
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "Yeah",
        "createdAt" : "2020-03-25T18:01:17Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8f09d5eb91f7616633af2f20a8c3730808bed4a",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +613,617 @@    );\n\n    // This size is used as the max bounds for the painting of the value\n    // indicators. It must be kept in sync with the function with the same name\n    // in slider.dart."
  }
]