[
  {
    "id" : "bab3d5e4-3e03-44e6-8ff5-0371493e2444",
    "prId" : 4788,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ec4a546-7c08-41b2-b962-18fd5dff3b81",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "After each of these awaits, you need to check `mounted` to see whether you're still in the tree.  If not, you should bail out.\n",
        "createdAt" : "2016-06-30T16:02:04Z",
        "updatedAt" : "2016-06-30T16:44:50Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "268eb7c658587b6d9be34ef3a61e9ce97dea2bc5",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +206,210 @@    if (_mode == _RefreshIndicatorMode.armed) {\n      _mode = _RefreshIndicatorMode.snap;\n      await _sizeController.animateTo(1.0 / _kDragSizeFactorLimit, duration: _kIndicatorSnapDuration);\n      if (mounted && _mode == _RefreshIndicatorMode.snap) {\n        setState(() {"
  },
  {
    "id" : "0fcca41e-069a-4767-b06e-e9828ce8fff9",
    "prId" : 4877,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c188c28-4baa-46dc-932e-44ca24bc7b35",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Did you meant to await _show?  Currently you don't await anything so the future returned here isn't that useful.\n",
        "createdAt" : "2016-07-11T16:32:56Z",
        "updatedAt" : "2016-07-11T17:00:12Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "f611770aa8f731904d703dfa7d9ba3d626208904",
    "line" : null,
    "diffHunk" : "@@ -1,1 +325,329 @@  /// * [GlobalKey] (creating the RefreshIndicator with a [GlobalKey<RefreshIndicatorState>]\n  ///   will make it possible to refer to the [RefreshIndicatorState] later)\n  Future<Null> show() async {\n    if (_mode != _RefreshIndicatorMode.refresh) {\n      _sizeController.value = 0.0;"
  },
  {
    "id" : "f513156f-1124-4a86-b5da-d95728bc6ee8",
    "prId" : 18012,
    "prUrl" : "https://github.com/flutter/flutter/pull/18012#pullrequestreview-124537183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a511de61-1df2-4967-b546-3e236f734bc6",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It's not clear (to me anyway) that this particular line is intended to \"Start refresh while bouncing back to 0.0 from overscroll on iOS\". Why is this iOS specific and etc. Either I need to read a bunch more of the code, or some kind of comment should appear here.",
        "createdAt" : "2018-05-30T13:35:33Z",
        "updatedAt" : "2018-05-30T18:34:22Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "afd0a27f-20eb-4d05-a155-a4d23fc5481d",
        "parentId" : "a511de61-1df2-4967-b546-3e236f734bc6",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Added comment.",
        "createdAt" : "2018-05-30T18:34:40Z",
        "updatedAt" : "2018-05-30T18:34:40Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a755c988297d1d82d13b0ef0440d88f47639e9b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +227,231 @@        }\n      }\n      if (_mode == _RefreshIndicatorMode.armed && notification.dragDetails == null) {\n        // On iOS start the refresh when the Scrollable bounces back from the\n        // overscroll (ScrollNotification indicating this don't have dragDetails"
  },
  {
    "id" : "8e15ef82-f84e-43e8-a4da-31e7af47e2e0",
    "prId" : 24275,
    "prUrl" : "https://github.com/flutter/flutter/pull/24275#pullrequestreview-174998873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9f3231a-eb7f-4665-99d8-da1eb75fac39",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This should say what the seamnticsLabel is used for.",
        "createdAt" : "2018-11-14T18:03:45Z",
        "updatedAt" : "2018-11-15T20:47:34Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "73600858ad7781fbdde98b0a5d9b35062a48923c",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +143,147 @@  /// {@macro flutter.material.progressIndicator.semanticsLabel}\n  ///\n  /// This will be defaulted to [MaterialLocalizations.refreshIndicatorSemanticLabel]\n  /// if it is null.\n  final String semanticsLabel;"
  },
  {
    "id" : "9322fec2-5670-4d7c-bab0-a04c5dfe525b",
    "prId" : 24275,
    "prUrl" : "https://github.com/flutter/flutter/pull/24275#pullrequestreview-174998873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c74b24e6-fabe-46d1-a724-395a4df6582d",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This should explain why you want to set this and to what value.",
        "createdAt" : "2018-11-14T18:04:16Z",
        "updatedAt" : "2018-11-15T20:47:34Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "73600858ad7781fbdde98b0a5d9b35062a48923c",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +148,152 @@\n  /// {@macro flutter.material.progressIndicator.semanticsValue}\n  final String semanticsValue;\n\n  @override"
  },
  {
    "id" : "f835b75b-05e7-4943-b5db-549828c07f09",
    "prId" : 24275,
    "prUrl" : "https://github.com/flutter/flutter/pull/24275#pullrequestreview-175543049",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab1a1869-849d-4894-af4e-9eee8953adda",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This needs an `assert(debugCheckHasMaterialLocalizations(context))` now.",
        "createdAt" : "2018-11-15T20:25:09Z",
        "updatedAt" : "2018-11-15T20:47:34Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "3ceaaaf3-41c0-46bf-97d2-409c9c35b56e",
        "parentId" : "ab1a1869-849d-4894-af4e-9eee8953adda",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Done",
        "createdAt" : "2018-11-15T20:32:17Z",
        "updatedAt" : "2018-11-15T20:47:34Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "73600858ad7781fbdde98b0a5d9b35062a48923c",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +454,458 @@                  builder: (BuildContext context, Widget child) {\n                    return RefreshProgressIndicator(\n                      semanticsLabel: widget.semanticsLabel ?? MaterialLocalizations.of(context).refreshIndicatorSemanticLabel,\n                      semanticsValue: widget.semanticsValue,\n                      value: showIndeterminateIndicator ? null : _value.value,"
  },
  {
    "id" : "bbf74cd6-a97f-4bb2-877e-3dcfc865d443",
    "prId" : 47667,
    "prUrl" : "https://github.com/flutter/flutter/pull/47667#pullrequestreview-378810695",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "333bb1b5-47ad-412a-9b10-273a964dac79",
        "parentId" : null,
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "I think there should be a `return true;` ?\r\n\r\nAlternatively:\r\n```dart\r\nassert((_dragOffset == null) == (_mode == null));\r\nassert((_isIndicatorAtTop == null) == (_mode == null));\r\n```\r\n",
        "createdAt" : "2020-03-20T20:23:10Z",
        "updatedAt" : "2020-03-20T21:43:34Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "45de8ed2-a9bc-44a0-8801-e9e1343256e2",
        "parentId" : "333bb1b5-47ad-412a-9b10-273a964dac79",
        "authorId" : "e0434781-f3ea-47e1-a154-a4678df4de4e",
        "body" : "You are right. I'll add a return true . I think its easier to understand !",
        "createdAt" : "2020-03-20T21:03:55Z",
        "updatedAt" : "2020-03-20T21:43:34Z",
        "lastEditedBy" : "e0434781-f3ea-47e1-a154-a4678df4de4e",
        "tags" : [
        ]
      }
    ],
    "commit" : "33b47aed103c87425dea0fea10a08313e4bdc8fc",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +427,431 @@        assert(_dragOffset != null);\n        assert(_isIndicatorAtTop != null);\n      }\n      return true;\n    }());"
  },
  {
    "id" : "d755e6d3-2ca7-46f3-ba63-b833307e6d79",
    "prId" : 72052,
    "prUrl" : "https://github.com/flutter/flutter/pull/72052#pullrequestreview-618336682",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7365c1f-2a5a-4afe-8d0d-4aa2a6a5a1c6",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "It would be good to add a reference to the displacement property as well here. Something like:\r\n\r\n```\r\n/// See also: \r\n///\r\n///   * [displacement], can be used to change the distance from the edge that the indicator settles.\r\n```",
        "createdAt" : "2021-03-22T06:58:41Z",
        "updatedAt" : "2021-03-24T20:46:54Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "4a6c2dd2-1654-432c-943d-5125b873949a",
        "parentId" : "b7365c1f-2a5a-4afe-8d0d-4aa2a6a5a1c6",
        "authorId" : "7be4c940-a36b-46e3-840c-35c77c98bfca",
        "body" : "Done.",
        "createdAt" : "2021-03-23T08:53:54Z",
        "updatedAt" : "2021-03-24T20:46:54Z",
        "lastEditedBy" : "7be4c940-a36b-46e3-840c-35c77c98bfca",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed678ad909965cb5e3abd05e19f13cff98f75815",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +161,165 @@  ///  * [displacement], can be used to change the distance from the edge that\n  ///    the indicator settles.\n  final double edgeOffset;\n\n  /// A function that's called when the user has dragged the refresh indicator"
  },
  {
    "id" : "35153230-56b4-4c3a-9b50-62a0c1ecbe14",
    "prId" : 73566,
    "prUrl" : "https://github.com/flutter/flutter/pull/73566#pullrequestreview-568511902",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c12e17a6-d6a7-4fe3-973a-2c7ea2c546c8",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "We might think about refactoring this out from here and `didChanceDependencies` to reduce some duplication, but it it is not critical.\r\n",
        "createdAt" : "2021-01-11T20:53:21Z",
        "updatedAt" : "2021-01-11T20:56:13Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "d437aed6-ea6b-449d-a969-d9266494455f",
        "parentId" : "c12e17a6-d6a7-4fe3-973a-2c7ea2c546c8",
        "authorId" : "be1ebfb4-b241-4f0a-8020-88cd3cee0136",
        "body" : "I really thought about that, will send a fix today.",
        "createdAt" : "2021-01-14T08:34:40Z",
        "updatedAt" : "2021-01-14T08:34:40Z",
        "lastEditedBy" : "be1ebfb4-b241-4f0a-8020-88cd3cee0136",
        "tags" : [
        ]
      },
      {
        "id" : "748857e7-5d73-4f3e-a535-838a2385442c",
        "parentId" : "c12e17a6-d6a7-4fe3-973a-2c7ea2c546c8",
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Given that this is already in, I wouldn't worry about it for this one. If we touch the file again we can take another look.\r\n",
        "createdAt" : "2021-01-14T18:32:01Z",
        "updatedAt" : "2021-01-14T18:32:01Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      }
    ],
    "commit" : "df4d7e79658857ae431de5386cf4866fc5e4d383",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +252,256 @@        )),\n      );\n    }\n  }\n"
  },
  {
    "id" : "b18285d1-6453-47b6-bb8b-0e5ff1a12abf",
    "prId" : 75764,
    "prUrl" : "https://github.com/flutter/flutter/pull/75764#pullrequestreview-587901934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54ec7ac9-e6b1-4f4f-ae85-dfe6e4f030f1",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "This is getting more and more mysterious, can you add some comments explain what does it mean when `notification.dragDetails != null` or define boolean getter with a more descriptive name.",
        "createdAt" : "2021-02-10T18:06:40Z",
        "updatedAt" : "2021-02-17T18:08:24Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "1516de39f7e6d1e22c4997a21a7738bbafa58aab",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +266,270 @@    // user dragging. It may be a result of ScrollController.jumpTo or ballistic scroll.\n    // In this case, we don't want to trigger the refresh indicator.\n    return ((notification is ScrollStartNotification && notification.dragDetails != null)\n            || (notification is ScrollUpdateNotification && notification.dragDetails != null && widget.triggerMode == RefreshIndicatorTriggerMode.anywhere))\n      && notification.metrics.extentBefore == 0.0"
  }
]