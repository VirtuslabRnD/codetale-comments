[
  {
    "id" : "fe9086f0-9b6b-43ea-9140-3834f235a575",
    "prId" : 1309,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7510085-e074-4be7-afac-b357b7190bb9",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I guess this was a pre-existing bug.\n",
        "createdAt" : "2016-01-24T04:53:00Z",
        "updatedAt" : "2016-01-27T18:04:54Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a1788371bd78a74f763aab26bca87e92224cc7",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +98,102 @@    _onChanged = value;\n    if (wasInteractive != isInteractive) {\n      markNeedsPaint();\n      markNeedsSemanticsUpdate(noGeometry: true);\n    }"
  },
  {
    "id" : "96bdfbd0-2b9f-4100-80a0-9a9a254ba152",
    "prId" : 4791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eaee0829-fd08-46d4-a68a-2b0c35f3075a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "add tests for what happens if something switches from being interactive to not being interactive.\nYou're changing the semantics here in a very meaningful way: this class now requires that its node be reset if it changes from interactive to not interactive, so that the old action is no longer present.\n",
        "createdAt" : "2016-06-30T17:34:18Z",
        "updatedAt" : "2016-07-01T00:18:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "043ed09b8804630d86f98f4e30e98ed51b808c7f",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +273,277 @@        ..isChecked = _value;\n      if (isInteractive)\n        semantics.addAction(SemanticAction.tap);\n    };\n  }"
  }
]