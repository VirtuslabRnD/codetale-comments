[
  {
    "id" : "f3f7c3e8-19fb-4ab1-86ef-1a472c5f7a1d",
    "prId" : 50546,
    "prUrl" : "https://github.com/flutter/flutter/pull/50546#pullrequestreview-372509315",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "120a0805-f730-44a7-87bc-1e19165f14d0",
        "parentId" : null,
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "Many of these could be extension methods on DateTime instead, thoughts?",
        "createdAt" : "2020-03-03T21:16:07Z",
        "updatedAt" : "2020-03-20T18:27:52Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      },
      {
        "id" : "37442513-3d8c-458e-a497-6fc17e0eab20",
        "parentId" : "120a0805-f730-44a7-87bc-1e19165f14d0",
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "I thought about that, but I am bit ambivalent about extension methods. They do make things easier to read, but it is not obvious that they aren't part of the main object's API, which can lead to confusion. Given that these are all internal anyway, I just left them as util functions.\r\n",
        "createdAt" : "2020-03-11T06:52:36Z",
        "updatedAt" : "2020-03-20T18:27:52Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      }
    ],
    "commit" : "26126fbf75018479be1eeff1781c8f43538dae94",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +14,18 @@\n/// Returns a [DateTime] with just the date of the original, but no time set.\nDateTime dateOnly(DateTime date) {\n  return DateTime(date.year, date.month, date.day);\n}"
  },
  {
    "id" : "65cb770a-f6ab-4227-8d94-e88d95a2f59b",
    "prId" : 50546,
    "prUrl" : "https://github.com/flutter/flutter/pull/50546#pullrequestreview-375629731",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b032bb73-a587-4635-92da-538fa0255308",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This looks safe to me\r\n```dart\r\n  DateTime d0 = DateTime(1, 13, 1);\r\n  DateTime d1 = DateTime(2, 1, 1);\r\n  // d0.month == d1.month == 1\r\n```",
        "createdAt" : "2020-03-12T22:07:28Z",
        "updatedAt" : "2020-03-20T18:27:52Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "6a4e97aa-544a-4d3e-86af-870df985fcea",
        "parentId" : "b032bb73-a587-4635-92da-538fa0255308",
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Yeah, the `DateTime` constructor handles any wrapping needed for the day and month fields.\r\n",
        "createdAt" : "2020-03-16T22:39:28Z",
        "updatedAt" : "2020-03-20T18:27:52Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      }
    ],
    "commit" : "26126fbf75018479be1eeff1781c8f43538dae94",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@bool isSameDay(DateTime dateA, DateTime dateB) {\n  return\n    dateA.year == dateB.year &&\n    dateA.month == dateB.month &&\n    dateA.day == dateB.day;"
  }
]