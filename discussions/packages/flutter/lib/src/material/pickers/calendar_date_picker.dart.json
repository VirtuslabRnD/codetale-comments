[
  {
    "id" : "4416faf5-b718-48de-b604-9813654d022e",
    "prId" : 50546,
    "prUrl" : "https://github.com/flutter/flutter/pull/50546#pullrequestreview-368325694",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "616047bb-3647-46ca-a067-349f1c1c83fd",
        "parentId" : null,
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "This `if` could probably be consolidated with the above one",
        "createdAt" : "2020-03-03T21:57:14Z",
        "updatedAt" : "2020-03-20T18:27:52Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "26126fbf75018479be1eeff1781c8f43538dae94",
    "line" : 944,
    "diffHunk" : "@@ -1,1 +942,946 @@\n    BoxDecoration decoration;\n    if (isSelected) {\n      decoration = BoxDecoration(\n        color: colorScheme.primary,"
  },
  {
    "id" : "d7829ae9-c694-4e39-910f-0b00ca365683",
    "prId" : 50546,
    "prUrl" : "https://github.com/flutter/flutter/pull/50546#pullrequestreview-374098234",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23da6892-aff1-4a80-9540-69459b35d7c6",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Can you explain this a little more?  Why is it approximate, not exact, and what available space is it filling?",
        "createdAt" : "2020-03-12T21:20:35Z",
        "updatedAt" : "2020-03-20T18:27:52Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "0ddf876a-5d2f-4b7f-8259-4da132c6dc5e",
        "parentId" : "23da6892-aff1-4a80-9540-69459b35d7c6",
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Not sure :). This was code from @rami-a that I didn't look that closely at. I'll spend some time with it and see if I can get better docs here and your next comment below.\r\n",
        "createdAt" : "2020-03-13T07:41:51Z",
        "updatedAt" : "2020-03-20T18:27:52Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      }
    ],
    "commit" : "26126fbf75018479be1eeff1781c8f43538dae94",
    "line" : 902,
    "diffHunk" : "@@ -1,1 +900,904 @@  ScrollController scrollController;\n\n  // The approximate number of years necessary to fill the available space.\n  static const int minYears = 18;\n"
  },
  {
    "id" : "0d02caf7-cac0-4db8-8828-44f0081b11cf",
    "prId" : 50546,
    "prUrl" : "https://github.com/flutter/flutter/pull/50546#pullrequestreview-373900514",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c11864f-71a7-495a-ac1b-a3c1f53406fa",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Again, why approximate, and when does the approximation get resolved? Is there some kind of step that narrows down the value to the exact value?",
        "createdAt" : "2020-03-12T21:21:37Z",
        "updatedAt" : "2020-03-20T18:27:52Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "26126fbf75018479be1eeff1781c8f43538dae94",
    "line" : 909,
    "diffHunk" : "@@ -1,1 +907,911 @@    super.initState();\n\n    // Set the scroll position to approximately center the initial year.\n    final int initialYearIndex = widget.selectedDate.year - widget.firstDate.year;\n    final int initialYearRow = initialYearIndex ~/ _yearPickerColumnCount;"
  },
  {
    "id" : "55d39d5c-1982-453e-a35d-8e8a480f0ca4",
    "prId" : 50546,
    "prUrl" : "https://github.com/flutter/flutter/pull/50546#pullrequestreview-373823363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "904adcdf-3922-423e-b107-288bb1d98686",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "which creates a Dialog that contains a [CalendarDatePicker] and provides an optional compact view where the user can enter a date as a line of text.",
        "createdAt" : "2020-03-12T23:00:56Z",
        "updatedAt" : "2020-03-20T18:27:52Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "26126fbf75018479be1eeff1781c8f43538dae94",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@///\n/// The calendar picker widget is rarely used directly. Instead, consider using\n/// [showDatePicker], which will create a dialog that uses this as well as provides\n/// a text entry option.\n///"
  },
  {
    "id" : "d739c150-afab-4366-96ae-496966e09ef3",
    "prId" : 60497,
    "prUrl" : "https://github.com/flutter/flutter/pull/60497#pullrequestreview-441169149",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6760e37-b615-40d8-b471-443ad2a64707",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Good! ",
        "createdAt" : "2020-07-01T20:18:04Z",
        "updatedAt" : "2020-07-01T20:23:35Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "29ac505e703af84895a723e913d705d41a7483f3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +471,475 @@\n  @override\n  _MonthPickerState createState() => _MonthPickerState();\n}\n"
  },
  {
    "id" : "5c84be29-18a0-4ecc-b997-fa4335ed8c5b",
    "prId" : 64115,
    "prUrl" : "https://github.com/flutter/flutter/pull/64115#pullrequestreview-470638988",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9324b58e-6009-4b05-a2a5-40f243d7e7e9",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Also `debugCheckHasDirectionality`? Here and below",
        "createdAt" : "2020-08-19T16:35:07Z",
        "updatedAt" : "2020-08-19T17:42:59Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "0dbb03c0a6f6069ce26eb770116f6ef3f02bc2c8",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +179,183 @@    super.didChangeDependencies();\n    assert(debugCheckHasMaterial(context));\n    assert(debugCheckHasMaterialLocalizations(context));\n    assert(debugCheckHasDirectionality(context));\n    _localizations = MaterialLocalizations.of(context);"
  }
]