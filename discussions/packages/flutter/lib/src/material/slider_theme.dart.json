[
  {
    "id" : "2b3b0ff5-4a6f-41b8-80fe-13cf9e012ce3",
    "prId" : 14901,
    "prUrl" : "https://github.com/flutter/flutter/pull/14901#pullrequestreview-100277097",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca58bad7-b637-4cfa-8f2a-da93144e5de3",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Add `operator ==` and `get hashCode` methods.  _RenderSlider.theme compares SliderThemeData values with ==. Likewise for SliderTheme.updateNotify().",
        "createdAt" : "2018-02-28T01:22:35Z",
        "updatedAt" : "2018-03-01T20:05:24Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "9cac0a1e-0122-4349-bdd9-023f73fbe190",
        "parentId" : "ca58bad7-b637-4cfa-8f2a-da93144e5de3",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Heh.  Turns out that was the fix for the failing test on Travis too, and so I had already done it by the time I got to this comment. :-)",
        "createdAt" : "2018-03-01T05:48:04Z",
        "updatedAt" : "2018-03-01T20:05:24Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1cb3bc91888746c4c9144f3d9016d40240b20f2",
    "line" : 341,
    "diffHunk" : "@@ -1,1 +339,343 @@  }\n\n  @override\n  int get hashCode {\n    return hashValues("
  },
  {
    "id" : "b223e0f2-f9e8-42bb-88f0-d81da9b1098b",
    "prId" : 14901,
    "prUrl" : "https://github.com/flutter/flutter/pull/14901#pullrequestreview-99896792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fff8a9b7-a580-47fe-8f75-a180277f414d",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2018-02-28T01:46:52Z",
        "updatedAt" : "2018-03-01T20:05:24Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1cb3bc91888746c4c9144f3d9016d40240b20f2",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +52,56 @@  /// Typical usage is as follows:\n  ///\n  /// ```dart\n  /// double _rocketThrust;\n  ///"
  },
  {
    "id" : "50d912ea-4e8b-42e9-ae38-e1a0b8b5d61b",
    "prId" : 14901,
    "prUrl" : "https://github.com/flutter/flutter/pull/14901#pullrequestreview-100277097",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e91a9afb-5032-48c1-9d1c-748927e3c204",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This would be a good place to point to the place where you explain how one would usually create a SliderThemeData.  I assume that's SliderThemeData.materialDefaults()",
        "createdAt" : "2018-02-28T01:54:43Z",
        "updatedAt" : "2018-03-01T20:05:24Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "dc777af3-ec08-43cb-99e6-1895feffd05b",
        "parentId" : "e91a9afb-5032-48c1-9d1c-748927e3c204",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes.  Done.",
        "createdAt" : "2018-03-01T01:07:38Z",
        "updatedAt" : "2018-03-01T20:05:24Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1cb3bc91888746c4c9144f3d9016d40240b20f2",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +144,148 @@  ///\n  /// This will rarely be used directly. It is used by [lerp] to\n  /// create intermediate themes based on two themes.\n  ///\n  /// The simplest way to create a SliderThemeData is to use"
  },
  {
    "id" : "30eda2ff-b4e3-43e6-9a6b-522117e26d45",
    "prId" : 14901,
    "prUrl" : "https://github.com/flutter/flutter/pull/14901#pullrequestreview-101723972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5ef8430-9f51-483b-ba97-ef84c5b7e3e2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "sample code should be in a `## Sample code` section.",
        "createdAt" : "2018-03-06T20:35:07Z",
        "updatedAt" : "2018-03-06T20:35:07Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3ad63db7-04c4-4dc7-b440-d2c83817bfe6",
        "parentId" : "d5ef8430-9f51-483b-ba97-ef84c5b7e3e2",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done (in another PR)",
        "createdAt" : "2018-03-06T21:31:04Z",
        "updatedAt" : "2018-03-06T21:58:06Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1cb3bc91888746c4c9144f3d9016d40240b20f2",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@  /// [SliderTheme] in the given build context.\n  ///\n  /// Typical usage is as follows:\n  ///\n  /// ```dart"
  },
  {
    "id" : "12791a52-f849-4eca-8e85-a91491961be8",
    "prId" : 14901,
    "prUrl" : "https://github.com/flutter/flutter/pull/14901#pullrequestreview-101759761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26696721-5ff0-4620-a9a1-749cbbe3d035",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i would probably call this `SliderThemeData.fromPrimaryColors`. The name `SliderThemeData.materialDefaults` sounds like a constant that has material defaults, not a method that computes values from other values.",
        "createdAt" : "2018-03-06T20:44:26Z",
        "updatedAt" : "2018-03-06T20:44:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "fe939323-072e-4960-8eb3-5b4baa81231b",
        "parentId" : "26696721-5ff0-4620-a9a1-749cbbe3d035",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Hmm. Ok, but the reason I called it that was because the opacities that it overrides the given colors with, and the shapes it assigns for the components are all from the Material spec.  This is also the method used to create the default theme for the Material ThemeData.",
        "createdAt" : "2018-03-06T21:32:38Z",
        "updatedAt" : "2018-03-06T21:58:06Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "affd35e9-173a-4783-8cce-8ff3131d414f",
        "parentId" : "26696721-5ff0-4620-a9a1-749cbbe3d035",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "being from the material spec is implied, this is the material library. :-)",
        "createdAt" : "2018-03-06T23:37:29Z",
        "updatedAt" : "2018-03-06T23:37:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1cb3bc91888746c4c9144f3d9016d40240b20f2",
    "line" : 192,
    "diffHunk" : "@@ -1,1 +190,194 @@  ///\n  /// This is used to generate the default slider theme for a [ThemeData].\n  factory SliderThemeData.materialDefaults({\n    @required Color primaryColor,\n    @required Color primaryColorDark,"
  },
  {
    "id" : "be91dca8-3348-4644-a28a-364de13c9697",
    "prId" : 14901,
    "prUrl" : "https://github.com/flutter/flutter/pull/14901#pullrequestreview-101723972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1c9738d-9f68-4cd2-8c57-d922f314fd69",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "aw, the shapes can't lerp? :-( :-P",
        "createdAt" : "2018-03-06T20:44:52Z",
        "updatedAt" : "2018-03-06T20:44:52Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "71f6efc8-7838-481d-96ae-922184a2885c",
        "parentId" : "f1c9738d-9f68-4cd2-8c57-d922f314fd69",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Sadly no.  They encompass a lot of behaviors that would have made lerping complex, so I decided to cut my losses and eliminate the lerpTo and lerpFrom.  Not that we can't add them, or add a subclass of SliderComponentShape that has them.",
        "createdAt" : "2018-03-06T21:34:51Z",
        "updatedAt" : "2018-03-06T21:58:06Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1cb3bc91888746c4c9144f3d9016d40240b20f2",
    "line" : 337,
    "diffHunk" : "@@ -1,1 +335,339 @@      thumbShape: t < 0.5 ? a.thumbShape : b.thumbShape,\n      valueIndicatorShape: t < 0.5 ? a.valueIndicatorShape : b.valueIndicatorShape,\n      showValueIndicator: t < 0.5 ? a.showValueIndicator : b.showValueIndicator,\n    );\n  }"
  },
  {
    "id" : "073af848-e853-4ee3-b2e9-fcea8779bb47",
    "prId" : 14901,
    "prUrl" : "https://github.com/flutter/flutter/pull/14901#pullrequestreview-101723972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3696bed-8915-4569-bb1f-4f044e72586b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you might want to do an `identical()` test here first since there's so many subproperties and they're so often going to be identical.",
        "createdAt" : "2018-03-06T20:45:30Z",
        "updatedAt" : "2018-03-06T20:45:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3bef9178-2448-45c9-861b-c7e3f1f1b323",
        "parentId" : "d3696bed-8915-4569-bb1f-4f044e72586b",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "OK, done.",
        "createdAt" : "2018-03-06T21:35:12Z",
        "updatedAt" : "2018-03-06T21:58:06Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1cb3bc91888746c4c9144f3d9016d40240b20f2",
    "line" : 364,
    "diffHunk" : "@@ -1,1 +362,366 @@  @override\n  bool operator ==(Object other) {\n    if (other.runtimeType != runtimeType) {\n      return false;\n    }"
  },
  {
    "id" : "af2d0dc5-7c57-45b0-8ddc-7733c513eda4",
    "prId" : 14901,
    "prUrl" : "https://github.com/flutter/flutter/pull/14901#pullrequestreview-101723972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1d4ac37-267a-437e-8838-95f4f11e58d4",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "these are inconsistently wrapped which is weird",
        "createdAt" : "2018-03-06T20:46:03Z",
        "updatedAt" : "2018-03-06T20:46:03Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "5a8eb6d4-caec-4266-977b-a9d95b0891d6",
        "parentId" : "a1d4ac37-267a-437e-8838-95f4f11e58d4",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "I've already fixed this in my other PR.",
        "createdAt" : "2018-03-06T21:37:02Z",
        "updatedAt" : "2018-03-06T21:58:06Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1cb3bc91888746c4c9144f3d9016d40240b20f2",
    "line" : 430,
    "diffHunk" : "@@ -1,1 +428,432 @@        'showValueIndicator', showValueIndicator,\n        defaultValue: defaultData.showValueIndicator));\n  }\n}\n"
  },
  {
    "id" : "c32e2f6c-7d05-4b3c-9393-aa499844849f",
    "prId" : 15078,
    "prUrl" : "https://github.com/flutter/flutter/pull/15078#pullrequestreview-101267568",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "026edc99-6f11-43f0-935a-6cabb7b4d802",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE. This is much easier to read.",
        "createdAt" : "2018-03-05T17:57:44Z",
        "updatedAt" : "2018-03-09T22:02:13Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "69d0f498-609b-4349-aeef-49bc61caf0fb",
        "parentId" : "026edc99-6f11-43f0-935a-6cabb7b4d802",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "OK, then.  Line length of 200 it is. :-)",
        "createdAt" : "2018-03-05T18:10:10Z",
        "updatedAt" : "2018-03-09T22:02:13Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "97fd341c927fac3163ae89f8ecc6b505b27d500b",
    "line" : 245,
    "diffHunk" : "@@ -1,1 +468,472 @@      primaryColorLight: defaultTheme.primaryColorLight,\n    );\n    description.add(new DiagnosticsProperty<Color>('activeRailColor', activeRailColor, defaultValue: defaultData.activeRailColor));\n    description.add(new DiagnosticsProperty<Color>('inactiveRailColor', inactiveRailColor, defaultValue: defaultData.inactiveRailColor));\n    description.add(new DiagnosticsProperty<Color>('disabledActiveRailColor', disabledActiveRailColor, defaultValue: defaultData.disabledActiveRailColor));"
  },
  {
    "id" : "cf705ca8-9242-4b1f-8bfd-66177710fa55",
    "prId" : 15078,
    "prUrl" : "https://github.com/flutter/flutter/pull/15078#pullrequestreview-101765822",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db25959a-cd39-459f-9cd7-f95866a10ac8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "probably best to steer away from the term \"baseline\" when referring to text, since it has an existing precise meaning",
        "createdAt" : "2018-03-07T00:00:37Z",
        "updatedAt" : "2018-03-09T22:02:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "caf64eb0-5122-4122-950a-21a23b7e7a53",
        "parentId" : "db25959a-cd39-459f-9cd7-f95866a10ac8",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Ooh, good point.",
        "createdAt" : "2018-03-07T00:06:48Z",
        "updatedAt" : "2018-03-09T22:02:13Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "97fd341c927fac3163ae89f8ecc6b505b27d500b",
    "line" : 314,
    "diffHunk" : "@@ -1,1 +596,600 @@  // Radius of the top lobe of the value indicator.\n  static const double _topLobeRadius = 16.0;\n  // Baseline size of the label text. This is the size that the value indicator\n  // was designed to contain. We scale if from here to fit other sizes.\n  static const double _labelTextDesignSize = 14.0;"
  },
  {
    "id" : "2070efea-092b-4286-b184-20009f6f5d4d",
    "prId" : 15445,
    "prUrl" : "https://github.com/flutter/flutter/pull/15445#pullrequestreview-106196854",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4fb488d-84be-4a8d-ba38-757ba74b8d25",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "We could just enable this automatically when debugPaintSizeEnabled is enabled.",
        "createdAt" : "2018-03-22T16:25:38Z",
        "updatedAt" : "2018-03-22T16:25:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "56d04c382a7796bbd10d6165f0beeec5a80ef933",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +626,630 @@  // place (because it prints the rect in the failed test output). It should not\n  // be checked in while set to \"true\".\n  static const bool _debuggingLabelLocation = false;\n\n  static Path _bottomLobePath; // Initialized by _generateBottomLobe"
  },
  {
    "id" : "1c03044e-5d21-47cc-8dcc-325fb3704669",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-187528330",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3c00ee1-224c-44c0-839c-9dd52925259f",
        "parentId" : null,
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Nit: First sentence of dartdoc goes on it's own line. Alternatively you could change the . to a , and accomplish the same thing. \r\n\r\nhttps://www.dartlang.org/guides/language/effective-dart/documentation#do-start-doc-comments-with-a-single-sentence-summary",
        "createdAt" : "2018-12-12T21:32:16Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      },
      {
        "id" : "6c19c883-edb3-4e7c-9c53-373bec2c5e31",
        "parentId" : "f3c00ee1-224c-44c0-839c-9dd52925259f",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "I am now wondering the comments on the abstract const constructors are useful in this class. Isn't this sort of thing implied by the language and the fact that its an abstract class constructor already?",
        "createdAt" : "2018-12-21T20:02:04Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "7351845e-8d90-4dff-b971-2552b211acd0",
        "parentId" : "f3c00ee1-224c-44c0-839c-9dd52925259f",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Actually, I did make an issue: https://github.com/flutter/flutter/issues/25672\r\n\r\nfor this. Since this was copied from the current pattern, I am going to leave it as is, then update the docs in a follow up PR to make them consistent ",
        "createdAt" : "2018-12-21T20:24:21Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 403,
    "diffHunk" : "@@ -1,1 +631,635 @@///    shape.\nabstract class SliderTrackShape {\n  /// Abstract const constructor. This constructor enables subclasses to provide\n  /// const constructors so that they can be used in const expressions.\n  const SliderTrackShape();"
  },
  {
    "id" : "1ca7de62-054c-4ffd-b402-2bc4712ba9c3",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-187548708",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b172e53-ea59-465e-8346-3d469008c752",
        "parentId" : null,
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Nit: Same as above (first sentence is own paragraph).",
        "createdAt" : "2018-12-12T21:34:36Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      },
      {
        "id" : "340169cd-d648-470a-a199-ecf88ef2983d",
        "parentId" : "5b172e53-ea59-465e-8346-3d469008c752",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "See related comment on  #25672\r\n\r\n Since this was copied from the current pattern, I am going to leave it as is, then update the docs in a follow up PR to make them consistent",
        "createdAt" : "2018-12-21T21:51:56Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 489,
    "diffHunk" : "@@ -1,1 +713,717 @@///  * [SliderComponentShape] for the base class for custom a component shape.\nabstract class SliderTickMarkShape {\n  /// Abstract const constructor. This constructor enables subclasses to provide\n  /// const constructors so that they can be used in const expressions.\n  const SliderTickMarkShape();"
  },
  {
    "id" : "96ba7e35-c0a6-45e1-9d5e-97d3c1a10c23",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-187550923",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fbd648f9-7f61-4135-a451-ebf89ad6b593",
        "parentId" : null,
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Optional/suggestion: I think the named parameters can be de-indented:\r\n\r\n```\r\nvoid paint(\r\n  PaintingContext context,\r\n  Offset center, {\r\n  RenderBox parentBox,\r\n  SliderThemeData sliderTheme,\r\n  Animation<double> enableAnimation,\r\n  bool isEnabled,\r\n  bool onActiveTrack,\r\n});\r\n```\r\n\r\nI know we don't use `dartfmt` in flutter, but this is what dartfmt would do here incase you were curious.\r\n\r\nI also noticed you format it this way below so it's probably best to be consistent.",
        "createdAt" : "2018-12-12T21:42:05Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      },
      {
        "id" : "a324bba2-f2d5-42fd-936f-ec493eba103c",
        "parentId" : "fbd648f9-7f61-4135-a451-ebf89ad6b593",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done",
        "createdAt" : "2018-12-21T22:02:54Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 526,
    "diffHunk" : "@@ -1,1 +750,754 @@  /// is on the left, and in RTL text direction, the start of the slider is on\n  /// the right.\n  void paint(\n    PaintingContext context,\n    Offset center, {"
  },
  {
    "id" : "cec7f2f9-f335-47f3-9297-e61697b8c33e",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-187194948",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b446581d-66fd-431d-94f3-aef13a784b25",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Referring to the new slider parts (here and in the slider docs) without explaining what they're for and what they look like makes the API more difficult to understand than it should be. For example, what is the reader to expect of the slider's \"overlayShape\".\r\n\r\nThis is a pre-existing problem that's exacerbated by the changes from this PR. What's really needed is a one or two slider images with labels and arrows that identify the parts along with some text that explains their roles. \r\n\r\nAnnotated diagrams are a new feature for flutter docs, see https://github.com/flutter/assets-for-api-docs/\r\n\r\nThis \"lack of a diagram\" problem can be corrected in a separate PR. \r\n\r\nSliderThemeData's doc needs to be updated to match the features added in this PR.",
        "createdAt" : "2018-12-19T20:32:40Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "48a1f8f0-f0fb-43ad-b2a8-5bdbc9a4ac86",
        "parentId" : "b446581d-66fd-431d-94f3-aef13a784b25",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Updated to match current documentation pattern, and will follow up with a diagram",
        "createdAt" : "2018-12-20T21:37:41Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +200,204 @@  /// ```\n  /// {@end-tool}\n  const SliderThemeData({\n    @required this.trackHeight,\n    @required this.activeTrackColor,"
  },
  {
    "id" : "a1dd743d-8391-44ae-b63b-f229d05d6492",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-187548306",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6be18c7e-1353-4a73-8962-c2e529c08f87",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Here's where you explain what a \"slider tick\" is.  You might to define it once with a dartdoc template.",
        "createdAt" : "2018-12-19T20:49:45Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "2919f503-9365-4ad0-82ba-65a9bfd9dd20",
        "parentId" : "6be18c7e-1353-4a73-8962-c2e529c08f87",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done, will fine tune with https://github.com/flutter/flutter/issues/25672",
        "createdAt" : "2018-12-21T21:50:18Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 474,
    "diffHunk" : "@@ -1,1 +702,706 @@\n/// Base class for slider tick mark shapes.\n///\n/// Create a subclass of this if you would like a custom slider tick mark shape.\n/// This is a simplified version of [SliderComponentShape] with a"
  },
  {
    "id" : "8c9e78ae-4d2b-431d-a099-7d988f32d2df",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-186730013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc582b1a-6a3b-49c7-ab76-f6e8a1530e14",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Here's where you explain what a \"slider track\" is. You might to define it once with a dartdoc template.",
        "createdAt" : "2018-12-19T20:51:07Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 388,
    "diffHunk" : "@@ -1,1 +616,620 @@\n/// Base class for slider track shapes.\n///\n/// The slider's thumb moves along the track. A discrete slider's tick marks\n/// are drawn after the track, but before the thumb, and are aligned with the"
  },
  {
    "id" : "886da670-4f7a-4ce8-91e8-0a3525340d36",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-187499897",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3be7b334-eb20-4dc6-8b0a-fed4194dfa70",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Please add a debugFillProperties() test, like https://github.com/flutter/flutter/blob/master/packages/flutter/test/material/outline_button_test.dart#L274",
        "createdAt" : "2018-12-19T21:09:29Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "47265757-664e-4723-a4af-85c3c7e24826",
        "parentId" : "3be7b334-eb20-4dc6-8b0a-fed4194dfa70",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Can this be a follow up PR, since there is no existing slider debugFillProperties  test, and this PR is already large?",
        "createdAt" : "2018-12-20T23:10:40Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "205a218e-efa7-445e-9288-54374cd99635",
        "parentId" : "3be7b334-eb20-4dc6-8b0a-fed4194dfa70",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Sure",
        "createdAt" : "2018-12-21T18:46:44Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 330,
    "diffHunk" : "@@ -1,1 +555,559 @@    );\n    properties.add(DiagnosticsProperty<Color>('activeTrackColor', activeTrackColor, defaultValue: defaultData.activeTrackColor));\n    properties.add(DiagnosticsProperty<Color>('activeTrackColor', activeTrackColor, defaultValue: defaultData.activeTrackColor));\n    properties.add(DiagnosticsProperty<Color>('inactiveTrackColor', inactiveTrackColor, defaultValue: defaultData.inactiveTrackColor));\n    properties.add(DiagnosticsProperty<Color>('disabledActiveTrackColor', disabledActiveTrackColor, defaultValue: defaultData.disabledActiveTrackColor, level: DiagnosticLevel.debug));"
  },
  {
    "id" : "09e6ed26-8ca6-498b-9a69-29b4a50b8df5",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-187533034",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ec2f718-4c50-42f1-9a48-6f1487cea6df",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I don't think it would be wise for the preferredSize of a slider to depend on its enabled state (and our sliders don't).\r\n\r\nThis parameter isn't needed.",
        "createdAt" : "2018-12-19T23:00:14Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "fcecfee1-411d-41d7-9f6c-2803f00921da",
        "parentId" : "5ec2f718-4c50-42f1-9a48-6f1487cea6df",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Removed param from getPreferredRect",
        "createdAt" : "2018-12-21T20:43:05Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 467,
    "diffHunk" : "@@ -1,1 +695,699 @@    Animation<double> enableAnimation,\n    Offset thumbCenter,\n    bool isEnabled,\n    bool isDiscrete,\n    TextDirection textDirection,"
  },
  {
    "id" : "50e58a95-0e68-489f-9f7c-ed9b97b05f92",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-187552844",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3d08f47-defc-47f7-8061-a958a1bc0518",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "[Slider], which includes a thumb defined by this shape.",
        "createdAt" : "2018-12-19T23:06:18Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "0ed85892-4fb2-4711-b414-cd61187e10f3",
        "parentId" : "f3d08f47-defc-47f7-8061-a958a1bc0518",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "done",
        "createdAt" : "2018-12-21T22:12:47Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 615,
    "diffHunk" : "@@ -1,1 +841,845 @@/// See also:\n///\n///  * [Slider] for the component that this is meant to display this shape.\n///  * [SliderThemeData] where an instance of this class is set to inform the\n///    slider of the visual details of the its track."
  },
  {
    "id" : "cd518768-b10e-4ee9-8110-1b08f3f0af23",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-187553036",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15ac886d-0c57-45b8-a07c-998dfa010185",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "[SliderTheme], which can be used to configure the the track shape of all sliders in a widget subtree.",
        "createdAt" : "2018-12-19T23:08:32Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "e89a6f1e-ab35-4c67-90cd-7c45f7baf935",
        "parentId" : "15ac886d-0c57-45b8-a07c-998dfa010185",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "done",
        "createdAt" : "2018-12-21T22:13:37Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 616,
    "diffHunk" : "@@ -1,1 +842,846 @@///\n///  * [Slider] for the component that this is meant to display this shape.\n///  * [SliderThemeData] where an instance of this class is set to inform the\n///    slider of the visual details of the its track.\n///  * [SliderTrackShape] Base component for creating other custom track"
  },
  {
    "id" : "90faee64-7c27-4db8-a33c-ed768a94747f",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-187553047",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e5376a9-9a5d-434d-abd8-6d45c11b6268",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This isn't needed, the docs show this class's superclass.",
        "createdAt" : "2018-12-19T23:10:21Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "aae82c57-bd0c-4673-b3e1-62544b30d513",
        "parentId" : "7e5376a9-9a5d-434d-abd8-6d45c11b6268",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "done",
        "createdAt" : "2018-12-21T22:13:42Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 619,
    "diffHunk" : "@@ -1,1 +844,848 @@///  * [SliderThemeData] where an instance of this class is set to inform the\n///    slider of the visual details of the its track.\n///  * [SliderTrackShape] Base component for creating other custom track\n///    shapes.\nclass RectangularSliderTrackShape extends SliderTrackShape {"
  },
  {
    "id" : "f034ff21-f6ad-49b4-a8e6-7f2acd591850",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-190374738",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cc0d56c-e0d1-409b-8cdf-130ef19e61ce",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE formatting",
        "createdAt" : "2019-01-08T00:14:32Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "863db181-b5ff-40d4-b714-f59517de8552",
        "parentId" : "4cc0d56c-e0d1-409b-8cdf-130ef19e61ce",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "woohoo",
        "createdAt" : "2019-01-08T18:13:56Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 303,
    "diffHunk" : "@@ -1,1 +522,526 @@    }\n    final SliderThemeData otherData = other;\n    return otherData.trackHeight == trackHeight\n      && otherData.activeTrackColor == activeTrackColor\n      && otherData.inactiveTrackColor == inactiveTrackColor"
  },
  {
    "id" : "0ab47f2a-7fa7-4462-8167-175845600206",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-190378350",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7a5ca5f-b556-4a05-9574-ef03bb92504d",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Please keep the properties in the same order as in the constructor (even though they may not have been that way before).",
        "createdAt" : "2019-01-08T00:15:49Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "8b72320d-3b62-4a8c-9c94-110b4f53a9a0",
        "parentId" : "e7a5ca5f-b556-4a05-9574-ef03bb92504d",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done",
        "createdAt" : "2019-01-08T18:23:07Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 312,
    "diffHunk" : "@@ -1,1 +531,535 @@      && otherData.disabledActiveTickMarkColor == disabledActiveTickMarkColor\n      && otherData.disabledInactiveTickMarkColor == disabledInactiveTickMarkColor\n      && otherData.thumbColor == thumbColor\n      && otherData.disabledThumbColor == disabledThumbColor\n      && otherData.overlayColor == overlayColor"
  },
  {
    "id" : "154c7c94-ef6a-4b08-9cff-7e1e1af245c8",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-192290111",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "267edc2e-0cdb-4027-9ae0-97a87c693ec7",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Defines the appearance of a slider's track.\r\n\r\nThe slider's thumb moves along the track and a discrete slider's tick marks appear below the track.",
        "createdAt" : "2019-01-08T00:18:21Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "ce874442-db54-499e-8f80-eec4e6cd026d",
        "parentId" : "267edc2e-0cdb-4027-9ae0-97a87c693ec7",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done, but I modified the second sentence slightly",
        "createdAt" : "2019-01-08T18:25:16Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "8f125424-39e7-4420-b38c-712da5f0d338",
        "parentId" : "267edc2e-0cdb-4027-9ae0-97a87c693ec7",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Mainly, not sure what is meant by \"slider's tick marks appear below the track\"",
        "createdAt" : "2019-01-08T18:27:21Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "9dcf233f-7462-4b03-a8e2-e2dd66edb6dd",
        "parentId" : "267edc2e-0cdb-4027-9ae0-97a87c693ec7",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Trying to clarify how tick marks are aligned with the track rectangle. ",
        "createdAt" : "2019-01-14T19:15:30Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 387,
    "diffHunk" : "@@ -1,1 +615,619 @@/// {@endtemplate}\n\n/// Base class for slider track shapes.\n///\n/// The slider's thumb moves along the track. A discrete slider's tick marks"
  },
  {
    "id" : "90646633-d99e-4f6d-b8a6-28f99899437f",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-190044942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8b2056a-0b63-48ad-8248-97411ed5d1bb",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "What if overlayWidth > parentBox.size.width?",
        "createdAt" : "2019-01-08T00:57:55Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 646,
    "diffHunk" : "@@ -1,1 +871,875 @@    // rectangular track should be padded not just by the overlay, but by the\n    // max of the thumb and the overlay, in case there is no overlay.\n    final double trackWidth = parentBox.size.width - overlayWidth;\n    return Rect.fromLTWH(trackLeft, trackTop, trackWidth, trackHeight);\n  }"
  },
  {
    "id" : "d66fd6ee-5ab8-4d90-928e-37cbb4205d19",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-191331311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad6795e5-259f-4436-8136-e974d35ed3f4",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "What if trackLeft + trackWidth > parentBox.size.width?  And etc.\r\n\r\nNeed a set of assertions here.",
        "createdAt" : "2019-01-08T00:59:45Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "b1a5cd76-afe5-497a-83b6-b1026f7d516d",
        "parentId" : "ad6795e5-259f-4436-8136-e974d35ed3f4",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "done",
        "createdAt" : "2019-01-10T17:42:20Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 647,
    "diffHunk" : "@@ -1,1 +872,876 @@    // max of the thumb and the overlay, in case there is no overlay.\n    final double trackWidth = parentBox.size.width - overlayWidth;\n    return Rect.fromLTWH(trackLeft, trackTop, trackWidth, trackHeight);\n  }\n"
  },
  {
    "id" : "6e543378-4d01-44b0-a48a-698abf3c475f",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-190044942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e20b602b-046f-4a57-957a-d7a9402c0483",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Tick marks are only displayed if ....",
        "createdAt" : "2019-01-08T01:02:49Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 711,
    "diffHunk" : "@@ -1,1 +936,940 @@/// by setting the [Slider.divisions] as non-null.\n///\n/// It paints a solid circle, centered in the on the track.\n/// The color is determined by the [Slider]'s enabled state and track's active\n/// states. These colors are defined in:"
  },
  {
    "id" : "2be7a5ee-aa99-4a42-8013-72e1116d18a3",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-190044942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97580cb6-c0b1-4dde-9517-1005c97bc464",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Why would isEnabled affect preferredSize?\r\n\r\nhttps://github.com/flutter/flutter/pull/25008/files#r243106244",
        "createdAt" : "2019-01-08T01:05:18Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 731,
    "diffHunk" : "@@ -1,1 +956,960 @@  @override\n  Size getPreferredSize({\n    bool isEnabled,\n    SliderThemeData sliderTheme,\n  }) {"
  },
  {
    "id" : "487116b5-5816-497b-979e-f5d91488d244",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-191334307",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a60e37e7-9964-4b72-938c-db3e55fa0c4c",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE. Please spread the truth about \"overlay\" around. Apparently it's rendered **behind** the thumb. In the abstract class doc you can always say something like \"typically the overlay expands until it is bigger than the thumb\".",
        "createdAt" : "2019-01-08T01:08:45Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "df10f132-eaae-4361-9b61-465a20b7af0a",
        "parentId" : "a60e37e7-9964-4b72-938c-db3e55fa0c4c",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done, one of the TODOs above to make it to that the overlay actually paints on top of the thumb, since that is probably the more logical behavior when painting custom overlays. The default material overlay painter would also be updated to paint an annulus instead of a circle.",
        "createdAt" : "2019-01-10T17:49:17Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 807,
    "diffHunk" : "@@ -1,1 +1048,1052 @@/// This is the default shape of a [Slider]'s thumb overlay.\n///\n/// The shape of the overlay is a circle with the same center as the thumb, but\n/// with a larger radius. It animates to full size when the thumb is pressed,\n/// and animates back down to size 0 when it is released. It is painted behind"
  },
  {
    "id" : "a358791b-56a9-480b-bb18-a7eef5040331",
    "prId" : 25008,
    "prUrl" : "https://github.com/flutter/flutter/pull/25008#pullrequestreview-191806269",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b1db458-7980-4818-8ac9-cc5a0fb75f90",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Why does this method have an isEnabled parameter? ",
        "createdAt" : "2019-01-08T01:14:42Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "d6459d5a-e83a-488a-a085-122fa835ebe0",
        "parentId" : "5b1db458-7980-4818-8ac9-cc5a0fb75f90",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "In case a developer wants the track size for enabled/disabled to be different",
        "createdAt" : "2019-01-11T19:18:35Z",
        "updatedAt" : "2019-01-31T23:27:39Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f40dd2bcd244e507001b2bef4face5923b254ec",
    "line" : 500,
    "diffHunk" : "@@ -1,1 +724,728 @@  ///\n  /// {@macro flutter.material.slider.shape.isEnabled}\n  Size getPreferredSize({\n    SliderThemeData sliderTheme,\n    bool isEnabled,"
  },
  {
    "id" : "fbbd3ee2-2c18-4fa8-a73b-e71b35170fc3",
    "prId" : 27510,
    "prUrl" : "https://github.com/flutter/flutter/pull/27510#pullrequestreview-199831283",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b32421f-bab3-4b77-9e01-cd0b5d5f0df4",
        "parentId" : null,
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Nice",
        "createdAt" : "2019-02-04T21:17:52Z",
        "updatedAt" : "2019-02-06T17:58:33Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      },
      {
        "id" : "4035cd07-cd15-4047-98c2-be5b9e88f1a1",
        "parentId" : "2b32421f-bab3-4b77-9e01-cd0b5d5f0df4",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "👍 This may get even easier once this is updated to spec",
        "createdAt" : "2019-02-04T22:06:40Z",
        "updatedAt" : "2019-02-06T17:58:33Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "6fe6932f8839f701ee0758558c9085728a0e1f2d",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +921,925 @@    double horizontalAdjustment = 0.0;\n    if (!isEnabled) {\n      final double disabledThumbRadius = sliderTheme.thumbShape.getPreferredSize(false, isDiscrete).width / 2.0;\n      final double gap = disabledThumbGapWidth * (1.0 - enableAnimation.value);\n      horizontalAdjustment = disabledThumbRadius + gap;"
  },
  {
    "id" : "43115f39-a8d6-41f9-b1c9-1f1420d4d293",
    "prId" : 27510,
    "prUrl" : "https://github.com/flutter/flutter/pull/27510#pullrequestreview-199827919",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab3876c8-329f-44c6-b39f-4a20ad005195",
        "parentId" : null,
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "De-indent by 2 spaces and add trailing comma:\r\n\r\n```\r\nfinal double tickMarkRadius = getPreferredSize(\r\n  isEnabled: isEnabled,\r\n  sliderTheme: sliderTheme,\r\n).width / 2;\r\n```",
        "createdAt" : "2019-02-04T21:21:08Z",
        "updatedAt" : "2019-02-06T17:58:33Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      },
      {
        "id" : "ff758743-9359-4edb-b3ba-695bc103ee88",
        "parentId" : "ab3876c8-329f-44c6-b39f-4a20ad005195",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done",
        "createdAt" : "2019-02-04T21:58:11Z",
        "updatedAt" : "2019-02-06T17:58:33Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "6fe6932f8839f701ee0758558c9085728a0e1f2d",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +1010,1014 @@      isEnabled: isEnabled,\n      sliderTheme: sliderTheme,\n    ).width / 2;\n    context.canvas.drawCircle(center, tickMarkRadius, paint);\n  }"
  },
  {
    "id" : "27cc5cf4-b82e-46a2-90d7-4cd24cb358ff",
    "prId" : 27510,
    "prUrl" : "https://github.com/flutter/flutter/pull/27510#pullrequestreview-200292098",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb4df01c-9dcd-4534-996b-801d219b001a",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "What's the reason for not changing it to 10 already?",
        "createdAt" : "2019-02-05T16:57:57Z",
        "updatedAt" : "2019-02-06T17:58:33Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "40d25663-bffa-4f57-af0a-3d05131fd207",
        "parentId" : "cb4df01c-9dcd-4534-996b-801d219b001a",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Going to do all breaking size/paint changes in a single PR",
        "createdAt" : "2019-02-05T17:48:41Z",
        "updatedAt" : "2019-02-06T17:58:33Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "82a34a41-09bd-4d5a-b6d1-95bd028a553f",
        "parentId" : "cb4df01c-9dcd-4534-996b-801d219b001a",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Got it.  Makes sense.",
        "createdAt" : "2019-02-05T20:40:54Z",
        "updatedAt" : "2019-02-06T17:58:33Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "6fe6932f8839f701ee0758558c9085728a0e1f2d",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +1024,1028 @@class RoundSliderThumbShape extends SliderComponentShape {\n  /// Create a slider thumb that draws a circle.\n  // TODO(clocksmith): This needs to be changed to 10 according to spec.\n  const RoundSliderThumbShape({\n    this.enabledThumbRadius = 6.0,"
  },
  {
    "id" : "4b49270f-5bf6-4d57-bae2-f053fb86d91c",
    "prId" : 27510,
    "prUrl" : "https://github.com/flutter/flutter/pull/27510#pullrequestreview-200714733",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8487187a-b612-4a36-9baf-0f42f9965fea",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Is there a different gap property for enabled sliders? '\r\n\r\nMight be good to explain somewhere: there's ordinarily no gap between the bottom of the thumb and the top of the track. Assuming that's true of course.",
        "createdAt" : "2019-02-05T23:08:02Z",
        "updatedAt" : "2019-02-06T17:58:33Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "22650911-8d6d-4f18-ae82-ec3e792094aa",
        "parentId" : "8487187a-b612-4a36-9baf-0f42f9965fea",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "No gap for enabled sliders. I added some more docs and renamed to disabledThumbGapWidth so its even more clear what this gap is (its not top and bottom)",
        "createdAt" : "2019-02-06T17:49:10Z",
        "updatedAt" : "2019-02-06T17:58:33Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "6fe6932f8839f701ee0758558c9085728a0e1f2d",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +850,854 @@  const RectangularSliderTrackShape({ this.disabledThumbGapWidth = 2.0 });\n\n  /// Horizontal spacing, or gap, between the disabled thumb and the track.\n  ///\n  /// This is only used when the slider is disabled. There is no gap around"
  },
  {
    "id" : "a9d9daa2-b5a0-4c2e-99e1-94d937792225",
    "prId" : 27613,
    "prUrl" : "https://github.com/flutter/flutter/pull/27613#pullrequestreview-201702338",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65fcf938-a40c-454a-aa28-9eec0af5568c",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "You need to identify which properties are to be set in each case.",
        "createdAt" : "2019-02-08T15:56:15Z",
        "updatedAt" : "2019-02-11T16:27:40Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "a6361ccd-c059-4a77-a71c-00b7c8f4b90c",
        "parentId" : "65fcf938-a40c-454a-aa28-9eec0af5568c",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done",
        "createdAt" : "2019-02-08T17:42:56Z",
        "updatedAt" : "2019-02-11T16:27:40Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "c13c89f11641fe6db1d8f3f467c20e4c3be693df",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +156,160 @@///\n/// The track painting can be skipped by specifying 0 for [trackHeight].\n/// The thumb painting can be skipped by specifying\n/// [SliderComponentShape.noThumb] for [SliderThemeData.thumbShape].\n/// The overlay painting can be skipped by specifying"
  },
  {
    "id" : "c6e8f46c-11ab-4762-bb91-f88426843535",
    "prId" : 27613,
    "prUrl" : "https://github.com/flutter/flutter/pull/27613#pullrequestreview-201704288",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb84bdd0-00cb-467d-b421-fd2d46ebc12b",
        "parentId" : null,
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "`getPreferredSize` and `paint` should probably be annotated with `@overrides` here.",
        "createdAt" : "2019-02-08T17:47:56Z",
        "updatedAt" : "2019-02-11T16:27:40Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      }
    ],
    "commit" : "c13c89f11641fe6db1d8f3f467c20e4c3be693df",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +792,796 @@class _EmptySliderTickMarkShape extends SliderTickMarkShape {\n  @override\n  Size getPreferredSize({\n    SliderThemeData sliderTheme,\n    bool isEnabled,"
  },
  {
    "id" : "89888940-6230-4fee-8b4b-621fccb34837",
    "prId" : 27613,
    "prUrl" : "https://github.com/flutter/flutter/pull/27613#pullrequestreview-201704288",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f209e2e-1c6b-48b0-baf3-7f74f1b54648",
        "parentId" : null,
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "add `@overrides` here too",
        "createdAt" : "2019-02-08T17:50:24Z",
        "updatedAt" : "2019-02-11T16:27:40Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      }
    ],
    "commit" : "c13c89f11641fe6db1d8f3f467c20e4c3be693df",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +912,916 @@\n  @override\n  void paint(\n    PaintingContext context,\n    Offset center, {"
  },
  {
    "id" : "ec6d5a46-e8c3-4a5f-830e-88d2c0545e4b",
    "prId" : 27613,
    "prUrl" : "https://github.com/flutter/flutter/pull/27613#pullrequestreview-201704288",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11814aa0-e1a6-4b31-84b5-12dfa6f91d96",
        "parentId" : null,
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Nice.",
        "createdAt" : "2019-02-08T17:51:00Z",
        "updatedAt" : "2019-02-11T16:27:40Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      }
    ],
    "commit" : "c13c89f11641fe6db1d8f3f467c20e4c3be693df",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +1000,1004 @@  }) {\n    // If the slider track height is 0, then it makes no difference whether the\n    // track is painted or not, therefore the painting can be a no-op.\n    if (sliderTheme.trackHeight == 0) {\n      return;"
  },
  {
    "id" : "63c30fe7-d627-4a62-a4cf-aee3d42de49b",
    "prId" : 27613,
    "prUrl" : "https://github.com/flutter/flutter/pull/27613#pullrequestreview-201720222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11b6e920-c766-4681-9467-cccc4636b761",
        "parentId" : null,
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "I think maybe specify the exact value here is better `ShowValueIndicator.never`",
        "createdAt" : "2019-02-08T18:02:31Z",
        "updatedAt" : "2019-02-11T16:27:40Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      },
      {
        "id" : "6b6c0511-3a65-4253-acf2-e9767eb7aad7",
        "parentId" : "11b6e920-c766-4681-9467-cccc4636b761",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Any value thats not ShowValueIndicator.always could cause the thumb not to draw in certain cases. I could list them all?",
        "createdAt" : "2019-02-08T18:14:01Z",
        "updatedAt" : "2019-02-11T16:27:40Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "7e0f9cfc-180e-4198-9141-755af71b588b",
        "parentId" : "11b6e920-c766-4681-9467-cccc4636b761",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "hmm I don't think listing them all is ideal. I'm actually fine leaving this as-is.",
        "createdAt" : "2019-02-08T18:20:18Z",
        "updatedAt" : "2019-02-11T16:27:40Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "c13c89f11641fe6db1d8f3f467c20e4c3be693df",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +163,167 @@/// [SliderTickMarkShape.noTickMark] for [SliderThemeData.tickMarkShape].\n/// The value indicator painting can be skipped by specifying the\n/// appropriate [ShowValueIndicator] for [SliderThemeData.showValueIndicator].\n///\n/// See also:"
  },
  {
    "id" : "f0ea71ca-88b0-4dee-98c3-a3098d81cbdf",
    "prId" : 30390,
    "prUrl" : "https://github.com/flutter/flutter/pull/30390#pullrequestreview-223353913",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4433cbb-0d30-4f94-9764-636c841d115b",
        "parentId" : null,
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Two space indentation for param list.\r\n\r\n ```suggestion\r\n  void paint(\r\n    PaintingContext context,\r\n    Offset offset, {\r\n    RenderBox parentBox,\r\n    SliderThemeData sliderTheme,\r\n    Animation<double> enableAnimation,\r\n    TextDirection textDirection,\r\n    Offset thumbCenter,\r\n    bool isDiscrete,\r\n    bool isEnabled,\r\n  }) {\r\n```\r\n\r\nhttps://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#constructor-syntax",
        "createdAt" : "2019-04-04T20:27:35Z",
        "updatedAt" : "2019-04-18T19:35:27Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      },
      {
        "id" : "50f3e7e3-c8a4-4dc1-8409-4dbee5057178",
        "parentId" : "c4433cbb-0d30-4f94-9764-636c841d115b",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done",
        "createdAt" : "2019-04-05T15:55:40Z",
        "updatedAt" : "2019-04-18T19:35:27Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "136a92a073dfcbcc6680bb555e636ba5f6d82cea",
    "line" : 174,
    "diffHunk" : "@@ -1,1 +975,979 @@\n  @override\n  void paint(\n    PaintingContext context,\n    Offset offset, {"
  },
  {
    "id" : "0b535c1e-644d-40c5-9035-7db5063db4ee",
    "prId" : 30390,
    "prUrl" : "https://github.com/flutter/flutter/pull/30390#pullrequestreview-224022140",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "692614ae-2bb5-4bf3-903d-24fa908fb29a",
        "parentId" : null,
        "authorId" : "209f805a-621a-40dd-b493-fb897c4b0bcb",
        "body" : "Move up one line so it's kind alpha.",
        "createdAt" : "2019-04-08T14:22:24Z",
        "updatedAt" : "2019-04-18T19:35:27Z",
        "lastEditedBy" : "209f805a-621a-40dd-b493-fb897c4b0bcb",
        "tags" : [
        ]
      },
      {
        "id" : "91b14f27-1cbe-4408-9520-a13388086f64",
        "parentId" : "692614ae-2bb5-4bf3-903d-24fa908fb29a",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "I moved it up but not sure how it fits into the overall organization of these alpha values.",
        "createdAt" : "2019-04-08T18:45:09Z",
        "updatedAt" : "2019-04-18T19:35:27Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "136a92a073dfcbcc6680bb555e636ba5f6d82cea",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +265,269 @@    const int thumbAlpha = 0xff;\n    const int disabledThumbAlpha = 0x52; // 32% opacity\n    const int overlayAlpha = 0x1f; // 12% opacity\n    const int valueIndicatorAlpha = 0xff;\n"
  },
  {
    "id" : "399ca349-0221-427f-a821-055cdf321290",
    "prId" : 30390,
    "prUrl" : "https://github.com/flutter/flutter/pull/30390#pullrequestreview-224541932",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4661d7d5-9d58-4612-a201-51fbb4679d21",
        "parentId" : null,
        "authorId" : "209f805a-621a-40dd-b493-fb897c4b0bcb",
        "body" : "Can you add a comment explaining why you have the height for both width and height/",
        "createdAt" : "2019-04-09T14:38:46Z",
        "updatedAt" : "2019-04-18T19:35:27Z",
        "lastEditedBy" : "209f805a-621a-40dd-b493-fb897c4b0bcb",
        "tags" : [
        ]
      },
      {
        "id" : "0c88a4ad-92ce-4c4f-a139-5b2ddf4af406",
        "parentId" : "4661d7d5-9d58-4612-a201-51fbb4679d21",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done",
        "createdAt" : "2019-04-09T17:11:47Z",
        "updatedAt" : "2019-04-18T19:35:27Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "136a92a073dfcbcc6680bb555e636ba5f6d82cea",
    "line" : 227,
    "diffHunk" : "@@ -1,1 +1028,1032 @@\n    // The arc rects create a semi-circle with radius equal to track height.\n    final Rect leftTrackArcRect = Rect.fromLTWH(trackRect.left, trackRect.top, trackRect.height, trackRect.height);\n    context.canvas.drawArc(leftTrackArcRect, math.pi / 2, math.pi, false, leftTrackPaint);\n    final Rect rightTrackArcRect = Rect.fromLTWH(trackRect.right - trackRect.height / 2, trackRect.top, trackRect.height, trackRect.height);"
  },
  {
    "id" : "b1278bb0-cd0f-4faa-bcaf-e701d5cc609e",
    "prId" : 30390,
    "prUrl" : "https://github.com/flutter/flutter/pull/30390#pullrequestreview-227391941",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ce2504d-3d08-4070-8eef-c234afb715c9",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "creating other...?",
        "createdAt" : "2019-04-10T17:45:06Z",
        "updatedAt" : "2019-04-18T19:35:27Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "ade71055-61c1-4a96-82b7-672c03bff21e",
        "parentId" : "5ce2504d-3d08-4070-8eef-c234afb715c9",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "fixed",
        "createdAt" : "2019-04-16T19:12:31Z",
        "updatedAt" : "2019-04-18T19:35:27Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "136a92a073dfcbcc6680bb555e636ba5f6d82cea",
    "line" : 166,
    "diffHunk" : "@@ -1,1 +967,971 @@///  * [SliderThemeData], where an instance of this class is set to inform the\n///    slider of the visual details of the its track.\n///  * [SliderTrackShape], which is the base component for creating other\n///    custom track shapes.\n///  * [RectangularSliderTrackShape], for a similar track with sharp edges."
  },
  {
    "id" : "50afd790-8a56-4057-8396-8f7d1a4c2613",
    "prId" : 30390,
    "prUrl" : "https://github.com/flutter/flutter/pull/30390#pullrequestreview-227392126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6954c4fd-9fbd-46cc-a80c-633f8effa09f",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "assert sliderTheme != null etc.  Here and elsewhere.",
        "createdAt" : "2019-04-10T17:51:45Z",
        "updatedAt" : "2019-04-18T19:35:27Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "6f3efc4e-7946-4561-9f3f-a8a664c533d2",
        "parentId" : "6954c4fd-9fbd-46cc-a80c-633f8effa09f",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done in all getPreferredFoo and paint methods",
        "createdAt" : "2019-04-16T19:12:54Z",
        "updatedAt" : "2019-04-18T19:35:27Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "136a92a073dfcbcc6680bb555e636ba5f6d82cea",
    "line" : 284,
    "diffHunk" : "@@ -1,1 +1084,1088 @@    assert(parentBox != null);\n    assert(sliderTheme != null);\n    final double thumbWidth = sliderTheme.thumbShape.getPreferredSize(isEnabled, isDiscrete).width;\n    final double overlayWidth = sliderTheme.overlayShape.getPreferredSize(isEnabled, isDiscrete).width;\n    final double trackHeight = sliderTheme.trackHeight;"
  },
  {
    "id" : "782a44ec-ef76-4db7-8675-334a368d4457",
    "prId" : 30390,
    "prUrl" : "https://github.com/flutter/flutter/pull/30390#pullrequestreview-227392257",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83b78c93-7199-402e-b7d4-9e8ccc9715d5",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The doc for the enabledThumbRadius property should admit that the default is 10",
        "createdAt" : "2019-04-10T17:55:46Z",
        "updatedAt" : "2019-04-18T19:35:27Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "ca94a819-2f7d-47e0-8b98-b4d910f7809d",
        "parentId" : "83b78c93-7199-402e-b7d4-9e8ccc9715d5",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done",
        "createdAt" : "2019-04-16T19:13:14Z",
        "updatedAt" : "2019-04-18T19:35:27Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "136a92a073dfcbcc6680bb555e636ba5f6d82cea",
    "line" : 408,
    "diffHunk" : "@@ -1,1 +1250,1254 @@  /// Create a slider thumb that draws a circle.\n  const RoundSliderThumbShape({\n    this.enabledThumbRadius = 10.0,\n    this.disabledThumbRadius,\n  });"
  },
  {
    "id" : "eb9191c9-3a7e-410b-81b1-58a50e45fba0",
    "prId" : 30390,
    "prUrl" : "https://github.com/flutter/flutter/pull/30390#pullrequestreview-225213105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9405f6f4-28d0-47fb-8529-c02c327ce9f6",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "What's the \"-2\" doing here (it seems odd to be subtracting 2 from a radians value)? It's OK to say that it was derived \"experimentally\" so long as we explain what effect it has.",
        "createdAt" : "2019-04-10T17:57:51Z",
        "updatedAt" : "2019-04-18T19:35:27Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "adedc8c4-6021-4b1c-bd41-4abadc61a69c",
        "parentId" : "9405f6f4-28d0-47fb-8529-c02c327ce9f6",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "It is the y value of the offset, it was experimentally to get the bottom lobe in the right place after adjusting the lobe radius",
        "createdAt" : "2019-04-10T20:54:32Z",
        "updatedAt" : "2019-04-18T19:35:27Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "136a92a073dfcbcc6680bb555e636ba5f6d82cea",
    "line" : 525,
    "diffHunk" : "@@ -1,1 +1448,1452 @@    final Offset bottomKnobStart = Offset(\n      _bottomLobeRadius * math.cos(_bottomLobeStartAngle),\n      _bottomLobeRadius * math.sin(_bottomLobeStartAngle) - 2,\n    );\n    final Offset bottomNeckRightCenter = bottomKnobStart +"
  },
  {
    "id" : "45ecb89c-58f9-46ea-8a5e-02f27053a5f3",
    "prId" : 31681,
    "prUrl" : "https://github.com/flutter/flutter/pull/31681#pullrequestreview-232316385",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2e15df2-882c-4174-ac5f-07720b93f5d2",
        "parentId" : null,
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "The inline comments are a little repetitive here I think, they seem to repeat the `enum` level comment. Consider doing something like:\r\n\r\n\r\n```dart\r\n/// Specifies between 2 thumbs in a [RangeSlider].\r\n///\r\n/// In LTR text direction, the [start] thumb is the left-most thumb and the [end]\r\n/// thumb is the right-most thumb. In RTL text direction the [start] thumb is the\r\n/// right-most thumb, and the [end] thumb is the left-most thumb.\r\nenum Thumb {\r\n  /// Left-most thumb in LTR, otherwise, right-most thumb.\r\n  start,\r\n\r\n   /// Right-most thumb in LTR, otherwise, left-most thumb.\r\n  end\r\n}\r\n```\r\n\r\nThis still repeats the same info, but is slightly less repetitive. \r\n",
        "createdAt" : "2019-04-29T20:16:12Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      },
      {
        "id" : "52480e97-c5be-4f5e-9fad-f5e2330792fd",
        "parentId" : "a2e15df2-882c-4174-ac5f-07720b93f5d2",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done",
        "createdAt" : "2019-04-30T17:53:18Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "86ecafa2904412c64d0de9c2fe8a033c44dafcba",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +231,235 @@  /// Right-most thumb for [TextDirection.ltr], otherwise, left-most thumb.\n  end,\n}\n\n/// Holds the color, shape, and typography values for a material design slider"
  },
  {
    "id" : "bb075307-4af0-46af-8f42-b0ffacf8fad9",
    "prId" : 31681,
    "prUrl" : "https://github.com/flutter/flutter/pull/31681#pullrequestreview-232326039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7862066-aa53-47f7-8ebe-4f0cd15a3e44",
        "parentId" : null,
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Is it possible that people are already calling this method? Are we worried about it breaking people who didn't previously provide this arg?",
        "createdAt" : "2019-04-29T21:17:37Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      },
      {
        "id" : "d8193851-47e2-4279-bcf1-e00d406713ff",
        "parentId" : "c7862066-aa53-47f7-8ebe-4f0cd15a3e44",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "This class is a new class so it doesn't face any breaking change issue. Its current implementers are only the track shapes in this file.",
        "createdAt" : "2019-04-30T18:12:44Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "86ecafa2904412c64d0de9c2fe8a033c44dafcba",
    "line" : 1322,
    "diffHunk" : "@@ -1,1 +1449,1453 @@    @required RenderBox parentBox,\n    Offset offset = Offset.zero,\n    @required SliderThemeData sliderTheme,\n    bool isEnabled = false,\n    bool isDiscrete = false,"
  },
  {
    "id" : "b6d92c04-2a36-4b4d-823a-ae82720d7368",
    "prId" : 31681,
    "prUrl" : "https://github.com/flutter/flutter/pull/31681#pullrequestreview-235280049",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca30f711-be8d-4e4c-8926-9d7dd1d8849e",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It would be best if there was a See also section here that pointed to rangeThumbShape. Likewise for tickMarkShape and rangeTickMarkShape etc.",
        "createdAt" : "2019-05-06T18:51:40Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "51d01abe-ed0c-4a4c-b4b4-a171c385cd19",
        "parentId" : "ca30f711-be8d-4e4c-8926-9d7dd1d8849e",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done for all",
        "createdAt" : "2019-05-08T20:38:20Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "86ecafa2904412c64d0de9c2fe8a033c44dafcba",
    "line" : 281,
    "diffHunk" : "@@ -1,1 +507,511 @@  final SliderTickMarkShape tickMarkShape;\n\n  /// The shape that will be used to draw the [Slider]'s thumb.\n  ///\n  /// The default value is [RoundSliderThumbShape]."
  },
  {
    "id" : "99b0b46f-38df-4df0-bbf5-d3caa2555d7f",
    "prId" : 31681,
    "prUrl" : "https://github.com/flutter/flutter/pull/31681#pullrequestreview-235279999",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "583d2f7c-85e4-4676-b046-648f708266b4",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The API doc should mention that the theme is for [Slider] and [RangeSlider] at the outset. Somewhere further into the overview it would be worth noting the properties that are only relevant to range sliders.",
        "createdAt" : "2019-05-06T18:55:28Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "2eac3bef-e033-4cb2-97fb-3715f069415f",
        "parentId" : "583d2f7c-85e4-4676-b046-648f708266b4",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Added a para for this",
        "createdAt" : "2019-05-08T20:38:12Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "86ecafa2904412c64d0de9c2fe8a033c44dafcba",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +233,237 @@}\n\n/// Holds the color, shape, and typography values for a material design slider\n/// theme.\n///"
  },
  {
    "id" : "d8d1b38d-b30f-4bc5-b405-e411b5991a20",
    "prId" : 31681,
    "prUrl" : "https://github.com/flutter/flutter/pull/31681#pullrequestreview-234133421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76254b55-70ad-4e75-98c7-88883f6316a6",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "last selected => most recently selected\r\n\r\nhere and below",
        "createdAt" : "2019-05-06T18:58:26Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "86ecafa2904412c64d0de9c2fe8a033c44dafcba",
    "line" : 334,
    "diffHunk" : "@@ -1,1 +560,564 @@  ///\n  /// By default the same shape is used for both thumbs, but strokes the top\n  /// thumb when it overlaps the bottom thumb. The top thumb is always the last\n  /// selected thumb.\n  ///"
  },
  {
    "id" : "76889908-d4ef-4e6b-8fb3-d09987cf7929",
    "prId" : 31681,
    "prUrl" : "https://github.com/flutter/flutter/pull/31681#pullrequestreview-236430004",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1097a167-b851-4d86-9d21-c484bdd7e4a9",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "For sanity's sake, it would be helpful to keep all occurrences of this list in the same order.",
        "createdAt" : "2019-05-06T19:10:57Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "c06a8b42-5515-4202-8b25-e01300494275",
        "parentId" : "1097a167-b851-4d86-9d21-c484bdd7e4a9",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done",
        "createdAt" : "2019-05-12T18:09:38Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "86ecafa2904412c64d0de9c2fe8a033c44dafcba",
    "line" : 194,
    "diffHunk" : "@@ -1,1 +353,357 @@    this.tickMarkShape,\n    this.thumbShape,\n    this.trackShape,\n    this.valueIndicatorShape,\n    this.rangeTickMarkShape,"
  },
  {
    "id" : "1d9f57d2-f51c-4065-a705-3ac568a28cc4",
    "prId" : 31681,
    "prUrl" : "https://github.com/flutter/flutter/pull/31681#pullrequestreview-235343423",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd4bb3dc-62cf-4328-87e0-6eefbc9aa999",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "If I provide a labelPainter to I have to configure its textDirection? If so, does the labelPainter's textDirection have to match the paint() textDirection parameter?",
        "createdAt" : "2019-05-06T19:32:32Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "be6eb100-de87-4f69-a35d-d62c06a25622",
        "parentId" : "bd4bb3dc-62cf-4328-87e0-6eefbc9aa999",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "the textDirection in the label painter gets configured by the directionality of the app. As its implemented now, they are the same since they are passed in range_slider.dart. This is similar to how slider.dart does it.",
        "createdAt" : "2019-05-08T23:35:53Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "86ecafa2904412c64d0de9c2fe8a033c44dafcba",
    "line" : 782,
    "diffHunk" : "@@ -1,1 +971,975 @@  /// [textDirection] can be used to determine how any extra text or graphics,\n  /// besides the text painted by the [labelPainter] should be positioned. The\n  /// [labelPainter] already has the [textDirection] set.\n  ///\n  /// [value] is the current parametric value (from 0.0 to 1.0) of the slider."
  },
  {
    "id" : "2a4759e3-9b24-4258-867e-feafb5d92ec9",
    "prId" : 31681,
    "prUrl" : "https://github.com/flutter/flutter/pull/31681#pullrequestreview-235343838",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbd2ad9d-18b7-40f6-8800-3f16281cc9df",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This method doesn't appear to be backwards compatible with whatever it's being diffed against however it looks similar to the current definition https://docs.flutter.io/flutter/material/SliderComponentShape/paint.html\r\n\r\nMaybe this is just git diff confusion",
        "createdAt" : "2019-05-06T19:34:38Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "b02c4e37-5980-446a-a814-bbcda347f20c",
        "parentId" : "cbd2ad9d-18b7-40f6-8800-3f16281cc9df",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "I think its diff confusion, it has the same set of params",
        "createdAt" : "2019-05-08T23:37:46Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "86ecafa2904412c64d0de9c2fe8a033c44dafcba",
    "line" : 797,
    "diffHunk" : "@@ -1,1 +976,980 @@  void paint(\n    PaintingContext context,\n    Offset center, {\n    Animation<double> activationAnimation,\n    Animation<double> enableAnimation,"
  },
  {
    "id" : "35c08899-64eb-46e8-baa8-f67d33db0f5d",
    "prId" : 31681,
    "prUrl" : "https://github.com/flutter/flutter/pull/31681#pullrequestreview-236431983",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40e6379d-d4c3-406c-b436-6bd04934dcd8",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Overrides probably need to assert that these bool parameters are non-null. BaseSliderTrack doesn't appear to; should check them all.",
        "createdAt" : "2019-05-06T20:16:14Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "98a337d3-cb14-423b-b78f-1478235fac26",
        "parentId" : "40e6379d-d4c3-406c-b436-6bd04934dcd8",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done",
        "createdAt" : "2019-05-12T19:05:59Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "86ecafa2904412c64d0de9c2fe8a033c44dafcba",
    "line" : 910,
    "diffHunk" : "@@ -1,1 +1113,1117 @@    Offset offset = Offset.zero,\n    SliderThemeData sliderTheme,\n    bool isEnabled,\n    bool isDiscrete,\n  });"
  },
  {
    "id" : "3cab34f9-9477-4b55-b799-cef8a971ea3e",
    "prId" : 31681,
    "prUrl" : "https://github.com/flutter/flutter/pull/31681#pullrequestreview-236432001",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a07baf6b-2deb-491e-ab9c-f5f5a94dbdab",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I'm assuming that \"segments\" is defined somewhere nearby...",
        "createdAt" : "2019-05-06T20:17:36Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "f70bb87e-5669-47ba-ac15-3ed2a2d4e94b",
        "parentId" : "a07baf6b-2deb-491e-ab9c-f5f5a94dbdab",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Segments and track segments are used throughout the docs in this file. Does the definition of segment stand up well enough on its own for this?",
        "createdAt" : "2019-05-11T21:43:06Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "7c3f397d-9099-429b-a63b-6a1188fd529c",
        "parentId" : "a07baf6b-2deb-491e-ab9c-f5f5a94dbdab",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Made a macros for segment defs",
        "createdAt" : "2019-05-12T19:06:25Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "86ecafa2904412c64d0de9c2fe8a033c44dafcba",
    "line" : 934,
    "diffHunk" : "@@ -1,1 +1133,1137 @@  /// The [thumbCenter] argument is the offset of the center of the thumb relative to the\n  /// origin of the [PaintingContext.canvas]. It can be used as the point that\n  /// divides the track into 2 segments.\n  ///\n  /// {@macro flutter.material.slider.shape.isEnabled}"
  },
  {
    "id" : "234ad70a-5524-47c6-b2d6-bb56bf89351a",
    "prId" : 31681,
    "prUrl" : "https://github.com/flutter/flutter/pull/31681#pullrequestreview-236429377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8071d28c-4817-455b-ba03-3caa6f94f887",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I think you mean that its getPreferredRect (some other method) has an extra named parameter?",
        "createdAt" : "2019-05-06T20:27:47Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "71993a32-5804-4b2a-9d57-f33d86b37213",
        "parentId" : "8071d28c-4817-455b-ba03-3caa6f94f887",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "This sentence provided no extra value, especially since the see also links to SliderComponentShape anyway",
        "createdAt" : "2019-05-12T17:50:38Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "86ecafa2904412c64d0de9c2fe8a033c44dafcba",
    "line" : 1114,
    "diffHunk" : "@@ -1,1 +1277,1281 @@/// Base class for [RangeSlider] tick mark shapes.\n///\n/// This is a simplified version of [SliderComponentShape] with a\n/// [SliderThemeData] passed when getting the preferred size.\n///"
  },
  {
    "id" : "faa3ab90-fe11-4ec1-b1ab-ca336cd64241",
    "prId" : 31681,
    "prUrl" : "https://github.com/flutter/flutter/pull/31681#pullrequestreview-236430032",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a789083-6392-4c43-bd07-796c50b34966",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This explanation of what a range slider's track segments are is useful. It should probably be stated elsewhere; defined with a macro.",
        "createdAt" : "2019-05-06T20:29:05Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "c9310295-9274-4cbd-84a1-4d9dfd7dca73",
        "parentId" : "7a789083-6392-4c43-bd07-796c50b34966",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done, and added macro to other places segments are mentioned",
        "createdAt" : "2019-05-12T18:10:21Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "86ecafa2904412c64d0de9c2fe8a033c44dafcba",
    "line" : 1164,
    "diffHunk" : "@@ -1,1 +1318,1322 @@  /// {@macro flutter.material.rangeSlider.shape.isEnabled}\n  ///\n  /// The [textDirection] argument can be used to determine how the tick marks are painted\n  /// depending on whether they are on an active track segment or not.\n  /// {@macro flutter.material.rangeSlider.trackSegment}"
  },
  {
    "id" : "1ff3737f-5843-46ef-82c0-47d78edcfa72",
    "prId" : 31681,
    "prUrl" : "https://github.com/flutter/flutter/pull/31681#pullrequestreview-236431596",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ed4e2fb-f4c0-4a9c-8237-321e84cd745b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "SliderThemeData's constructor doesn't assert that any of its parameters are non-null.  If we assume that callers will ensure that the sliderTheme properties will be non-null, we should assert as much here. \r\n\r\nSame comment elsewhere.",
        "createdAt" : "2019-05-06T23:43:43Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "ab382f15-3564-4d18-8bab-b453f806afb4",
        "parentId" : "5ed4e2fb-f4c0-4a9c-8237-321e84cd745b",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done",
        "createdAt" : "2019-05-12T18:54:19Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "86ecafa2904412c64d0de9c2fe8a033c44dafcba",
    "line" : 1709,
    "diffHunk" : "@@ -1,1 +1849,1853 @@    assert(isEnabled != null);\n    assert(isDiscrete != null);\n    final double overlayWidth = sliderTheme.overlayShape.getPreferredSize(isEnabled, isDiscrete).width;\n    final double trackHeight = sliderTheme.trackHeight;\n    assert(overlayWidth >= 0);"
  },
  {
    "id" : "b707d4eb-0ce2-4bd2-b6c8-c60b572dc5b6",
    "prId" : 31681,
    "prUrl" : "https://github.com/flutter/flutter/pull/31681#pullrequestreview-236431696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "086bb70e-067f-48dc-964a-e4a19c84f010",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Should assert that thumbRadius >= 0\r\nIf thumbRadius ==0 should we return",
        "createdAt" : "2019-05-06T23:46:36Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "ff940047-142c-456f-add6-f3623df075e9",
        "parentId" : "086bb70e-067f-48dc-964a-e4a19c84f010",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "I think the assert is good enough. If its 0 it will still paint correctly.",
        "createdAt" : "2019-05-12T18:56:51Z",
        "updatedAt" : "2019-06-06T17:58:21Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "86ecafa2904412c64d0de9c2fe8a033c44dafcba",
    "line" : 1776,
    "diffHunk" : "@@ -1,1 +1910,1914 @@    }\n    final Size thumbSize = sliderTheme.rangeThumbShape.getPreferredSize(isEnabled, isDiscrete);\n    final double thumbRadius = thumbSize.width / 2;\n    assert(thumbRadius > 0);\n"
  },
  {
    "id" : "bc19d9b0-c8b5-43e2-9579-3c3007f2ff3c",
    "prId" : 35496,
    "prUrl" : "https://github.com/flutter/flutter/pull/35496#pullrequestreview-259048271",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b375d38-7c52-4d75-a3db-30e7600dd35c",
        "parentId" : null,
        "authorId" : "209f805a-621a-40dd-b493-fb897c4b0bcb",
        "body" : "If this is intended to be overridden, maybe say so in the comment.",
        "createdAt" : "2019-07-08T15:50:13Z",
        "updatedAt" : "2019-07-08T22:54:37Z",
        "lastEditedBy" : "209f805a-621a-40dd-b493-fb897c4b0bcb",
        "tags" : [
        ]
      },
      {
        "id" : "828cd4ab-5c4f-41bd-aec3-8b08653b679a",
        "parentId" : "5b375d38-7c52-4d75-a3db-30e7600dd35c",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Done ",
        "createdAt" : "2019-07-08T17:24:17Z",
        "updatedAt" : "2019-07-08T22:54:37Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9210e0a020854753c34c2ef113d350878422132",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1237,1241 @@  Size getPreferredSize(bool isEnabled, bool isDiscrete, { TextPainter labelPainter });\n\n  /// Determines the best offset to keep this shape on the screen.\n  ///\n  /// Override this method when the center of the value indicator should be"
  },
  {
    "id" : "5d876275-1a99-4681-ae53-6af9d060572c",
    "prId" : 44351,
    "prUrl" : "https://github.com/flutter/flutter/pull/44351#pullrequestreview-317817277",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab46be04-fa6f-4b89-80ab-76cc5506d6ac",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2019-11-15T22:24:32Z",
        "updatedAt" : "2019-11-20T14:42:27Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac3a36a9a449894a731c2b1f359de5cb3fca157d",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +497,501 @@  /// thumb shadows.\n  ///\n  /// Defaults to [ColorScheme.surface].\n  final Color surfaceColor;\n"
  },
  {
    "id" : "a78f123c-4828-455f-8426-6aa8fe83611d",
    "prId" : 44351,
    "prUrl" : "https://github.com/flutter/flutter/pull/44351#pullrequestreview-317817277",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23815a5c-5769-4a7e-a665-4ca60933eea0",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I think it would be worth pointing out that textScaleFactor is typically the value of https://api.flutter.dev/flutter/widgets/MediaQueryData/textScaleFactor.html.  Note that this comment makes it sound like it could be less than or equal to zero. I don't think we want to support that; should assert that textScaleFactor is `>= 0`.\r\n\r\nHere and elsewhere.\r\n\r\nIn the MediaQueryData docs we should probably explain that it's a positive value that's usually between 1 and 3 or 4, depending on the target platform. That can happen in a separate PR. \r\n",
        "createdAt" : "2019-11-15T22:36:13Z",
        "updatedAt" : "2019-11-20T14:42:27Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac3a36a9a449894a731c2b1f359de5cb3fca157d",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +996,1000 @@  ///\n  /// [textScaleFactor] can be used to determine whether the component should\n  /// paint larger or smaller, depending on whether [textScaleFactor] is greater\n  /// than 1 for larger, and between 0 and 1 for smaller. It usually comes from\n  /// [MediaQueryData.textScaleFactor]."
  },
  {
    "id" : "2351c461-37c5-4ec6-8847-755698ff5108",
    "prId" : 44351,
    "prUrl" : "https://github.com/flutter/flutter/pull/44351#pullrequestreview-317817277",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5872c7d6-285e-4827-8a8a-b8eaf8b4bbe9",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Maybe the value should be asserted to be >= 0?\r\n\r\nYou could add something about using 0 for no shadow, 16 (or whatever) for an unusually big shadow. To give developers an idea about what the value means.\r\n\r\nHere and elsewhere.",
        "createdAt" : "2019-11-15T22:50:00Z",
        "updatedAt" : "2019-11-20T14:42:27Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac3a36a9a449894a731c2b1f359de5cb3fca157d",
    "line" : 415,
    "diffHunk" : "@@ -1,1 +2324,2328 @@  /// The resting elevation adds shadow to the unpressed thumb.\n  ///\n  /// The default is 1.\n  ///\n  /// Use 0 for no shadow. The higher the value, the larger the shadow. For"
  },
  {
    "id" : "07706f64-a405-4c45-b480-0d0ae1bc562c",
    "prId" : 52663,
    "prUrl" : "https://github.com/flutter/flutter/pull/52663#pullrequestreview-377137908",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f051fa68-a4b9-4976-a841-0fb4b9455541",
        "parentId" : null,
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "I think it may be better to actually add an \"activeTrackHeight\" parameter to use, but this could still work if its better documented (explain how the active track is always 2 points taller than the trackHeight, unless the trackHeight is 0)",
        "createdAt" : "2020-03-18T02:15:44Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "467435c5-3876-4fe1-bc2a-63841d91dbf6",
        "parentId" : "f051fa68-a4b9-4976-a841-0fb4b9455541",
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "Went with additionalActiveTrackHeight method. Done",
        "createdAt" : "2020-03-18T18:38:58Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8f09d5eb91f7616633af2f20a8c3730808bed4a",
    "line" : 195,
    "diffHunk" : "@@ -1,1 +1700,1704 @@    assert(textDirection != null);\n    assert(thumbCenter != null);\n    // If the slider [SliderThemeData.trackHeight] is less than or equal to 0,\n    // then it makes no difference whether the track is painted or not,\n    // therefore the painting  can be a no-op."
  },
  {
    "id" : "cdcae302-da4e-407a-acc7-3f0036f855f7",
    "prId" : 52663,
    "prUrl" : "https://github.com/flutter/flutter/pull/52663#pullrequestreview-381477361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ceefda00-4e34-48db-95ba-5b5d5fa08f12",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This kind of doc really needs an image.  Please file an issue",
        "createdAt" : "2020-03-25T01:25:19Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "d973dcbb-d862-4a7f-b1b4-c7c4ada21e6d",
        "parentId" : "ceefda00-4e34-48db-95ba-5b5d5fa08f12",
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "What you mean ? ",
        "createdAt" : "2020-03-25T19:06:56Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      },
      {
        "id" : "900734e6-6868-421f-b685-48653b6bfd6f",
        "parentId" : "ceefda00-4e34-48db-95ba-5b5d5fa08f12",
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "https://github.com/flutter/flutter/issues/53290",
        "createdAt" : "2020-03-25T19:40:17Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8f09d5eb91f7616633af2f20a8c3730808bed4a",
    "line" : 970,
    "diffHunk" : "@@ -1,1 +2935,2939 @@/// A variant shape of a [Slider]'s value indicator . The value indicator is in\n/// the shape of an upside-down pear.\n///\n/// See also:\n///"
  },
  {
    "id" : "467d00d9-d324-413f-a460-d9a70f225088",
    "prId" : 53945,
    "prUrl" : "https://github.com/flutter/flutter/pull/53945#pullrequestreview-391019728",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38295662-ce42-4228-a48f-59019ef4c813",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Most material design elements have different colors for hover and focus, since you want to be able to see the hover when it's already focused, otherwise there's no visible feedback.",
        "createdAt" : "2020-04-06T22:52:29Z",
        "updatedAt" : "2020-04-16T13:57:44Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "3820dddc-54bb-4490-8405-e20566be3db1",
        "parentId" : "38295662-ce42-4228-a48f-59019ef4c813",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "This is the material spec from https://material.io/components/sliders/\r\n![unnamed](https://user-images.githubusercontent.com/591699/78685183-6530b900-78bf-11ea-963a-c65cdf44778b.png)\r\n",
        "createdAt" : "2020-04-07T15:04:07Z",
        "updatedAt" : "2020-04-16T13:57:44Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "8e030468-dba6-4f8d-b6ca-6f83893b327a",
        "parentId" : "38295662-ce42-4228-a48f-59019ef4c813",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "OK, I guess if that's the spec.  `¯\\_(ツ)_/¯`",
        "createdAt" : "2020-04-09T18:10:15Z",
        "updatedAt" : "2020-04-16T13:57:44Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b36b31b63dbf34c185d9eecaa3a7eca87b4de68a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +507,511 @@\n  /// The color of the overlay drawn around the slider thumb when it is\n  /// pressed, focused, or hovered.\n  ///\n  /// This is typically a semi-transparent color."
  },
  {
    "id" : "5fe28e98-98a3-4704-98d6-149b6ef97e50",
    "prId" : 60549,
    "prUrl" : "https://github.com/flutter/flutter/pull/60549#pullrequestreview-439489372",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73115ecf-f0d4-4cfb-900a-ec20b2860488",
        "parentId" : null,
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Should this still be skipped for the PaddleValueIndicator? I think that shape might paint the stroke around the thumb portion of it",
        "createdAt" : "2020-06-29T20:42:06Z",
        "updatedAt" : "2020-07-06T18:32:59Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "c762bdbf-0340-4d26-aeb8-9ac8ec318130",
        "parentId" : "73115ecf-f0d4-4cfb-900a-ec20b2860488",
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "No, the value indicator is on the overlay so it float above the thumb widget and doesn't create any problem. I just checked and can confirm this.",
        "createdAt" : "2020-06-29T20:49:09Z",
        "updatedAt" : "2020-07-06T18:32:59Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      }
    ],
    "commit" : "f98b61d044cb183489f79c40f3b2de706b973672",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +2513,2517 @@    // the other thumb.\n    if (isOnTop == true) {\n      final Paint strokePaint = Paint()\n        ..color = sliderTheme.overlappingShapeStrokeColor\n        ..strokeWidth = 1.0"
  },
  {
    "id" : "843a0216-e08f-40cf-bcc5-4a221211302f",
    "prId" : 64534,
    "prUrl" : "https://github.com/flutter/flutter/pull/64534#pullrequestreview-477892690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62640769-0fa2-4951-af2b-126e3b723ad8",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE. This is all much more obvious.",
        "createdAt" : "2020-08-28T17:08:26Z",
        "updatedAt" : "2020-08-28T17:08:33Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef3412383944b9a3c205b6c2b44d260d113c86e8",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +1561,1565 @@    );\n\n    final Rect leftTrackSegment = Rect.fromLTRB(trackRect.left, trackRect.top, thumbCenter.dx, trackRect.bottom);\n    if (!leftTrackSegment.isEmpty)\n      context.canvas.drawRect(leftTrackSegment, leftTrackPaint);"
  },
  {
    "id" : "a27e97c5-185c-4e43-9099-a8995b7a6eda",
    "prId" : 64627,
    "prUrl" : "https://github.com/flutter/flutter/pull/64627#pullrequestreview-476701237",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52ae1800-be24-4615-9b32-79ce7e4de983",
        "parentId" : null,
        "authorId" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "body" : "I remove the gap between the inactive track and active track, also see #64534 ",
        "createdAt" : "2020-08-27T13:07:26Z",
        "updatedAt" : "2020-09-02T01:32:03Z",
        "lastEditedBy" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b6933b8b481cfe164c8a5a752240769462f2aa3",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +1800,1804 @@      isDiscrete: isDiscrete,\n    );\n    final Rect leftTrackSegment = Rect.fromLTRB(trackRect.left, trackRect.top, leftThumbOffset.dx, trackRect.bottom);\n    if (!leftTrackSegment.isEmpty)\n      context.canvas.drawRect(leftTrackSegment, inactivePaint);"
  },
  {
    "id" : "63f73472-51a9-45e4-bad2-20e0a2d18844",
    "prId" : 67166,
    "prUrl" : "https://github.com/flutter/flutter/pull/67166#pullrequestreview-502389423",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33056c03-4167-45b4-b869-c74c8ae37207",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "lots of these are asserted non-null",
        "createdAt" : "2020-10-05T20:18:43Z",
        "updatedAt" : "2020-10-06T08:42:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "691cd371cae3549beed8ae44586aa60c3463bdb9",
    "line" : 950,
    "diffHunk" : "@@ -1,1 +2300,2304 @@    double? value,\n    double? textScaleFactor,\n    Size? sizeWithOverflow,\n  }) {\n    assert(context != null);"
  },
  {
    "id" : "c150613c-b169-4c10-9bec-304a4dbdf4e9",
    "prId" : 67166,
    "prUrl" : "https://github.com/flutter/flutter/pull/67166#pullrequestreview-502389536",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e9335b0-3cf5-44ba-a5f6-07202dc3f88c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "same",
        "createdAt" : "2020-10-05T20:18:53Z",
        "updatedAt" : "2020-10-06T08:42:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "691cd371cae3549beed8ae44586aa60c3463bdb9",
    "line" : 1000,
    "diffHunk" : "@@ -1,1 +2400,2404 @@    TextDirection? textDirection,\n    Thumb? thumb,\n    bool? isPressed,\n  }) {\n    assert(context != null);"
  },
  {
    "id" : "6d5a9780-8b99-4df1-b138-2ba94b03a85d",
    "prId" : 67166,
    "prUrl" : "https://github.com/flutter/flutter/pull/67166#pullrequestreview-502389795",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e56e78c0-9f73-44be-b0f7-442ff75de7ff",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "same",
        "createdAt" : "2020-10-05T20:19:12Z",
        "updatedAt" : "2020-10-06T08:42:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "691cd371cae3549beed8ae44586aa60c3463bdb9",
    "line" : 1045,
    "diffHunk" : "@@ -1,1 +2492,2496 @@    required double value,\n    double? textScaleFactor,\n    Size? sizeWithOverflow,\n  }) {\n    assert(context != null);"
  },
  {
    "id" : "682b5b56-bafe-492d-bf99-0280d9db458c",
    "prId" : 67166,
    "prUrl" : "https://github.com/flutter/flutter/pull/67166#pullrequestreview-502411612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d7cbfdd-01c8-40b7-b5e0-1d3d61022cc2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "same",
        "createdAt" : "2020-10-05T20:19:18Z",
        "updatedAt" : "2020-10-06T08:42:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "444c143d-d935-4337-942d-d40e102b2100",
        "parentId" : "8d7cbfdd-01c8-40b7-b5e0-1d3d61022cc2",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "Those 2 parameters can not be required because `getPreferredSize` overrides `SliderComponentShape.getPreferredSize(bool isEnabled, bool isDiscrete)` that does not define those optional parameters.",
        "createdAt" : "2020-10-05T20:33:46Z",
        "updatedAt" : "2020-10-06T08:42:38Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "d97a049b-dca4-4981-88a5-ba1b5a01efa1",
        "parentId" : "8d7cbfdd-01c8-40b7-b5e0-1d3d61022cc2",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Oh wow, interesting.",
        "createdAt" : "2020-10-05T20:52:30Z",
        "updatedAt" : "2020-10-06T08:42:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "691cd371cae3549beed8ae44586aa60c3463bdb9",
    "line" : 1065,
    "diffHunk" : "@@ -1,1 +2539,2543 @@     bool isDiscrete, {\n     TextPainter? labelPainter,\n     double? textScaleFactor,\n  }) {\n     assert(labelPainter != null);"
  },
  {
    "id" : "c564cd14-95b7-40a7-84bd-d426323c70c7",
    "prId" : 67166,
    "prUrl" : "https://github.com/flutter/flutter/pull/67166#pullrequestreview-502400971",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86f07c65-c94f-4155-afe2-d40f95c53ff0",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "here too",
        "createdAt" : "2020-10-05T20:20:13Z",
        "updatedAt" : "2020-10-06T08:42:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e7539cd7-ffa5-436e-86a2-897f0317ee56",
        "parentId" : "86f07c65-c94f-4155-afe2-d40f95c53ff0",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "Same explanation because of override",
        "createdAt" : "2020-10-05T20:36:18Z",
        "updatedAt" : "2020-10-06T08:42:38Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      }
    ],
    "commit" : "691cd371cae3549beed8ae44586aa60c3463bdb9",
    "line" : 1277,
    "diffHunk" : "@@ -1,1 +2806,2810 @@    TextPainter? labelPainter,\n    double? textScaleFactor,\n  }) {\n    assert(labelPainter != null);\n    assert(textScaleFactor != null && textScaleFactor >= 0);"
  },
  {
    "id" : "a279e87d-7df5-4b85-94d5-7ab90aa81556",
    "prId" : 67166,
    "prUrl" : "https://github.com/flutter/flutter/pull/67166#pullrequestreview-502390759",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4a13166-e826-4f64-aca3-e1b28a8221ad",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "same",
        "createdAt" : "2020-10-05T20:20:41Z",
        "updatedAt" : "2020-10-06T08:42:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "691cd371cae3549beed8ae44586aa60c3463bdb9",
    "line" : 1307,
    "diffHunk" : "@@ -1,1 +2825,2829 @@    double? value,\n    double? textScaleFactor,\n    Size? sizeWithOverflow,\n  }) {\n    assert(context != null);"
  },
  {
    "id" : "959940d8-2ea0-4782-9360-93c5350f037a",
    "prId" : 67166,
    "prUrl" : "https://github.com/flutter/flutter/pull/67166#pullrequestreview-502391003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95918ff3-d07d-49d1-b5b0-127b1e5b3a9c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "same",
        "createdAt" : "2020-10-05T20:21:01Z",
        "updatedAt" : "2020-10-06T08:42:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "691cd371cae3549beed8ae44586aa60c3463bdb9",
    "line" : 1410,
    "diffHunk" : "@@ -1,1 +2914,2918 @@    double? value,\n    double? textScaleFactor,\n    Size? sizeWithOverflow,\n  }) {\n    assert(context != null);"
  }
]