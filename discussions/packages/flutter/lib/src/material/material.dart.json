[
  {
    "id" : "8bbc4a14-ddcb-4895-9147-2ea0f60bd781",
    "prId" : 621,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a16a44bd-7ed5-4808-b110-8550e487ec49",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Does this class need to be public?\n",
        "createdAt" : "2015-12-01T08:04:05Z",
        "updatedAt" : "2015-12-01T09:37:04Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "737b5181-fbe1-49fa-ad20-1d528859b229",
        "parentId" : "a16a44bd-7ed5-4808-b110-8550e487ec49",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It wasn't originally but I made it public so that you can make new `InkFeature`s (they need to pass a `RenderInkFeatures` to the `InkFeature` base class).\n",
        "createdAt" : "2015-12-01T09:35:05Z",
        "updatedAt" : "2015-12-01T09:37:04Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee802bfe31d96fd02d8657008185a940df4ce9cf",
    "line" : 181,
    "diffHunk" : "@@ -1,1 +166,170 @@const double _kSplashUnconfirmedVelocity = 0.2; // logical pixels per millisecond\n\nclass RenderInkFeatures extends RenderProxyBox implements MaterialInkController {\n  RenderInkFeatures({ RenderBox child, this.color }) : super(child);\n"
  },
  {
    "id" : "80f3c60c-b7ec-47f1-ad6e-8c39ae0b533d",
    "prId" : 1238,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a35b4e14-e2a7-4170-8128-4a1507524419",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "We seem to have two names for this sort of function (the other is debugDescribeSettings).  Should we unify on one name?\n",
        "createdAt" : "2016-01-14T04:57:25Z",
        "updatedAt" : "2016-01-14T04:57:25Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "9c99c0e0-1f3a-4459-be30-d40c168ed338",
        "parentId" : "a35b4e14-e2a7-4170-8128-4a1507524419",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Yeah, probably. They independently evolved out of different cruder debugging tools and have been slowly converging to the same solution. Might as well finish it. :-)\n",
        "createdAt" : "2016-01-14T05:01:22Z",
        "updatedAt" : "2016-01-14T05:01:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a54ee77b88863cb957e78993c1fa0d8d4a32f110",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +103,107 @@  _MaterialState createState() => new _MaterialState();\n\n  void debugFillDescription(List<String> description) {\n    super.debugFillDescription(description);\n    description.add('$type');"
  },
  {
    "id" : "30411eeb-4292-4ba8-875f-3a5be7a1a912",
    "prId" : 3279,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dacecbed-dff7-4a2d-8a18-30adb90dcd01",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you missed the setter! :-)\n",
        "createdAt" : "2016-04-12T21:00:57Z",
        "updatedAt" : "2016-04-12T21:11:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "70fc605742f12b95b7eff3fc93808663effa70ed",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +85,89 @@  /// The color use to visually represent the emphasis.\n  Color get color;\n  void set color(Color value);\n}\n"
  },
  {
    "id" : "d8412525-3209-43f7-aec2-a0afadeb3f48",
    "prId" : 3279,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de675410-4399-43ab-a737-c3deacf1dadb",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "say if this can be transparent (probably not if you have an elevation, since you'd see the shadow below?)\n",
        "createdAt" : "2016-04-12T21:05:24Z",
        "updatedAt" : "2016-04-12T21:11:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "70fc605742f12b95b7eff3fc93808663effa70ed",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +154,158 @@  final int elevation;\n\n  /// The color of the material.\n  ///\n  /// Must be opaque. To create a transparent piece of material, use"
  },
  {
    "id" : "0e331f93-300c-44b3-9ee0-740c26c196b7",
    "prId" : 12881,
    "prUrl" : "https://github.com/flutter/flutter/pull/12881#pullrequestreview-74491400",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ce2f697-b4e6-4dab-9af2-e8ebff8d45fb",
        "parentId" : null,
        "authorId" : "739988f7-3598-43ac-9d29-b64a670be043",
        "body" : "`color` seems to be missing an assert here?",
        "createdAt" : "2017-11-04T19:09:30Z",
        "updatedAt" : "2017-11-06T20:19:53Z",
        "lastEditedBy" : "739988f7-3598-43ac-9d29-b64a670be043",
        "tags" : [
        ]
      },
      {
        "id" : "07ce260c-dcd5-4b3d-b0ce-1244ed8a9a45",
        "parentId" : "9ce2f697-b4e6-4dab-9af2-e8ebff8d45fb",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "We're not animating `color` in `Material`, so `null` might be a valid value, although I haven't checked myself.",
        "createdAt" : "2017-11-04T19:30:32Z",
        "updatedAt" : "2017-11-06T20:19:53Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "858f4811-c310-452b-994a-c9ecc94b659b",
        "parentId" : "9ce2f697-b4e6-4dab-9af2-e8ebff8d45fb",
        "authorId" : "739988f7-3598-43ac-9d29-b64a670be043",
        "body" : "Yeah, we don't want to, but not animating it doesn't mean it could be null â€” material has a colour, be it white (default) or some other colour. It just must not change over time. I'm not sure what a null colour would represent for a material, semantically?",
        "createdAt" : "2017-11-05T19:01:17Z",
        "updatedAt" : "2017-11-06T20:19:53Z",
        "lastEditedBy" : "739988f7-3598-43ac-9d29-b64a670be043",
        "tags" : [
        ]
      },
      {
        "id" : "a7c2a2c3-0db4-4d26-8bd7-7d1df1afacd7",
        "parentId" : "9ce2f697-b4e6-4dab-9af2-e8ebff8d45fb",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Found it. Look for `_getBackgroundColor` in this file. `null` is a valid value for `color`, and means get the color from `ThemeData` based on the material type. We might do the same for `shadowColor` eventually, but for now let's just `assert`.\r\n",
        "createdAt" : "2017-11-06T17:14:29Z",
        "updatedAt" : "2017-11-06T20:19:53Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd4efd1a80d6b3544b043e281e30de8dacefd62b",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +121,125 @@  }) : assert(type != null),\n       assert(elevation != null),\n       assert(shadowColor != null),\n       assert(!(identical(type, MaterialType.circle) && borderRadius != null)),\n       super(key: key);"
  },
  {
    "id" : "ad9cfb91-5134-447f-843e-8412d7d23a41",
    "prId" : 14367,
    "prUrl" : "https://github.com/flutter/flutter/pull/14367#pullrequestreview-92820259",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b5889c7-9556-421c-a412-caecfbf6a04f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "maybe rephrase the last paragraph above the Shape header to say that elevation and shadowColor are animated, and not the others.",
        "createdAt" : "2018-01-31T05:04:00Z",
        "updatedAt" : "2018-01-31T06:55:21Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "6041be36-769a-4042-a56f-bfb35c788148",
        "parentId" : "6b5889c7-9556-421c-a412-caecfbf6a04f",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "done",
        "createdAt" : "2018-01-31T06:54:11Z",
        "updatedAt" : "2018-01-31T06:55:21Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "85c18ffc75654174b256470f1e5434fb68650d93",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +115,119 @@///\n/// ## Shape\n///\n/// The shape for material is determined by [type] and [borderRadius].\n///"
  },
  {
    "id" : "87fbf434-60fd-4b95-ad5c-3aa7598241a1",
    "prId" : 35560,
    "prUrl" : "https://github.com/flutter/flutter/pull/35560#pullrequestreview-257792119",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "812f1319-20fa-401a-b755-e13bee0741f5",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "and dark => and the\r\n\r\nI wish there was a link to an explanation of \"dark theme overlay\" in here somewhere. Maybe insert a `[applyDarkThemeOverlay]` somewhere.",
        "createdAt" : "2019-07-04T01:15:01Z",
        "updatedAt" : "2019-07-16T01:10:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff556012a000c9fb293a5dfbf4ff534365002a68",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +210,214 @@  ///\n  /// Defaults to 0. Changing this value will cause the shadow and the elevation\n  /// overlay to animate over [animationDuration].\n  ///\n  /// The value is non-negative."
  },
  {
    "id" : "3a28911e-6811-4795-ae91-a33f817bb331",
    "prId" : 35560,
    "prUrl" : "https://github.com/flutter/flutter/pull/35560#pullrequestreview-257792119",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "288ef91e-2723-4438-a617-d52ce993280e",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Usually we create a temporary theme variable like:\r\n`final ThemeData theme = Theme.of(context);`",
        "createdAt" : "2019-07-04T01:21:22Z",
        "updatedAt" : "2019-07-16T01:10:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff556012a000c9fb293a5dfbf4ff534365002a68",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +341,345 @@    final ThemeData theme = Theme.of(context);\n    Color color = widget.color;\n    if (color == null) {\n      switch (widget.type) {\n        case MaterialType.canvas:"
  },
  {
    "id" : "9319fb87-01b4-4f95-ab46-019c4dffe47e",
    "prId" : 35560,
    "prUrl" : "https://github.com/flutter/flutter/pull/35560#pullrequestreview-262118046",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38b17e43-cf3e-4d20-98d8-f2f45cf7dfaf",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Conventional formatting for this would be one-line or:\r\n```\r\n  if (elevation > 0.0 &&\r\n      theme.applyElevationOverlay &&\r\n      background == theme.colorScheme.surface) {\r\n``` ",
        "createdAt" : "2019-07-15T23:05:00Z",
        "updatedAt" : "2019-07-16T01:10:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff556012a000c9fb293a5dfbf4ff534365002a68",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +321,325 @@Color _elevationOverlayColor(BuildContext context, Color background, double elevation) {\n  final ThemeData theme = Theme.of(context);\n  if (elevation > 0.0 &&\n      theme.applyElevationOverlayColor &&\n      background == theme.colorScheme.surface) {"
  },
  {
    "id" : "ea64929f-bd40-4402-b2c1-7e6d927616e6",
    "prId" : 51517,
    "prUrl" : "https://github.com/flutter/flutter/pull/51517#pullrequestreview-366701361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c880b6d9-fc5f-4e61-81ad-45a0c3b19b2b",
        "parentId" : null,
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "This was added because Material was previously overwriting any manually set DefaultTextStyle applied above it instead of merging with it.",
        "createdAt" : "2020-02-28T21:38:47Z",
        "updatedAt" : "2020-02-28T22:02:14Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      },
      {
        "id" : "0cbb4f56-8d80-4c81-a9ea-17c6aefef3cb",
        "parentId" : "c880b6d9-fc5f-4e61-81ad-45a0c3b19b2b",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "cc @johnsonmh ",
        "createdAt" : "2020-02-28T21:39:03Z",
        "updatedAt" : "2020-02-28T22:02:14Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa42170242459533a588fe94aa0bf55e31813e33",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +351,355 @@    Widget contents = widget.child;\n    if (contents != null) {\n      contents = AnimatedDefaultTextStyle.merge(\n        style: widget.textStyle ?? Theme.of(context).textTheme.bodyText2,\n        duration: widget.animationDuration,"
  },
  {
    "id" : "9c4f65d4-0e70-4718-8785-6fa15c93c3ab",
    "prId" : 60337,
    "prUrl" : "https://github.com/flutter/flutter/pull/60337#pullrequestreview-443455275",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "274ac619-7a94-4dce-b6c9-d91088e63098",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The [shadowColor API doc](https://api.flutter.dev/flutter/material/Material/shadowColor.html) needs to be updated. - should explain that the default is defined by [ThemeData.shadowColor] which is black by default. The doc should also include a link to ThemeData.applyElevationOverlay and briefly explain about shadows and dark mode.",
        "createdAt" : "2020-07-06T22:55:44Z",
        "updatedAt" : "2020-07-08T23:20:09Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "83aa209f75f12cbd64460663d425448ec035f967",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +173,177 @@    this.elevation = 0.0,\n    this.color,\n    this.shadowColor,\n    this.textStyle,\n    this.borderRadius,"
  },
  {
    "id" : "8de38ca9-6065-4ca0-9115-429459875f2c",
    "prId" : 60536,
    "prUrl" : "https://github.com/flutter/flutter/pull/60536#pullrequestreview-439416612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7fded38-19dc-4083-a8bc-4a5b392c628f",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "@HansMuller the only difference from the previous pr is that the Material.transparency will no longer absorb hittest.",
        "createdAt" : "2020-06-29T18:57:01Z",
        "updatedAt" : "2020-07-08T17:07:25Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a2e05058611b2062fd499b6ca93636258eb8d6a",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +522,526 @@\n  @override\n  bool hitTestSelf(Offset position) => absorbHitTest;\n\n  @override"
  },
  {
    "id" : "4bb75bcd-96f3-4c40-8615-99da099202f7",
    "prId" : 71138,
    "prUrl" : "https://github.com/flutter/flutter/pull/71138#pullrequestreview-601892565",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "671eec8a-827d-4b82-8d06-ad2a5600168e",
        "parentId" : null,
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "```suggestion\r\n    while (_inkFeatures?.isNotEmpty)\r\n```",
        "createdAt" : "2021-02-24T02:18:48Z",
        "updatedAt" : "2021-03-24T11:14:42Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      },
      {
        "id" : "ad942e26-a5de-4835-99b1-5643d7bc8f89",
        "parentId" : "671eec8a-827d-4b82-8d06-ad2a5600168e",
        "authorId" : "c8957575-df86-4ab0-95f3-366ad3a4f537",
        "body" : "This is an error, if _inkFeatures is null then it will return null, we can choose to use foo?.bar == true or foo?.bar ?? false.",
        "createdAt" : "2021-03-02T14:43:16Z",
        "updatedAt" : "2021-03-24T11:14:42Z",
        "lastEditedBy" : "c8957575-df86-4ab0-95f3-366ad3a4f537",
        "tags" : [
        ]
      }
    ],
    "commit" : "1876547d9d90a4957b12c7c707ef922fd549b975",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +556,560 @@  void dispose() {\n    // [InkFeature.dispose] will eventually call [_inkFeatures!.remove].\n    while (_inkFeatures?.isNotEmpty == true)\n      _inkFeatures!.first.dispose();\n  }"
  },
  {
    "id" : "a9e73b6e-f992-4cd0-8df5-b57c4f81616d",
    "prId" : 71138,
    "prUrl" : "https://github.com/flutter/flutter/pull/71138#pullrequestreview-619596597",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce791b2a-e6a3-4438-8eeb-a766b9a77700",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "The docs for this should be clearer about the responsibilities of the caller when this is changed. (For example, do you have to setState on something?)",
        "createdAt" : "2021-03-24T05:44:53Z",
        "updatedAt" : "2021-03-24T11:14:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "45ca2140-659a-420a-a35f-0305e1f916d6",
        "parentId" : "ce791b2a-e6a3-4438-8eeb-a766b9a77700",
        "authorId" : "c8957575-df86-4ab0-95f3-366ad3a4f537",
        "body" : "Updated.",
        "createdAt" : "2021-03-24T11:16:38Z",
        "updatedAt" : "2021-03-24T11:16:38Z",
        "lastEditedBy" : "c8957575-df86-4ab0-95f3-366ad3a4f537",
        "tags" : [
        ]
      }
    ],
    "commit" : "1876547d9d90a4957b12c7c707ef922fd549b975",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +638,642 @@  /// For this InkFeature to render properly, it should usually be change in\n  /// [State.deactivate] and [State.reactivate].\n  bool visible = true;\n\n  /// Free up the resources associated with this ink feature."
  }
]