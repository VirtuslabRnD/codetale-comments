[
  {
    "id" : "e4abaa99-0d9c-40bb-8d25-155298b64f03",
    "prId" : 10920,
    "prUrl" : "https://github.com/flutter/flutter/pull/10920#pullrequestreview-45881805",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b036c377-43fc-45af-9347-bbe6a3fb24e3",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "interesting, i would have expected this to belong to the selection controls delegate. This works too.",
        "createdAt" : "2017-06-23T01:15:15Z",
        "updatedAt" : "2017-06-23T21:26:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "480c37d1a8e46286e15e8f4cdc3478fc429a504b",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +250,254 @@        onChanged: widget.onChanged,\n        onSubmitted: widget.onSubmitted,\n        onSelectionChanged: (TextSelection _, bool longPress) => _onSelectionChanged(context, longPress),\n        inputFormatters: widget.inputFormatters,\n      ),"
  },
  {
    "id" : "a9481395-b059-4e27-9a30-378551fe6b57",
    "prId" : 12648,
    "prUrl" : "https://github.com/flutter/flutter/pull/12648#pullrequestreview-70918530",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3be52fb1-218a-4520-9eac-a6dc3d56b657",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "maxLengthEnforced?",
        "createdAt" : "2017-10-20T17:11:28Z",
        "updatedAt" : "2017-10-24T21:23:42Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "54544857-11af-457d-8fd5-608acc375c2e",
        "parentId" : "3be52fb1-218a-4520-9eac-a6dc3d56b657",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Oooh!  Good catch.  Fixed.",
        "createdAt" : "2017-10-20T18:06:46Z",
        "updatedAt" : "2017-10-24T21:23:42Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dc9f3bb644ef3860d1cd6c16636813f58e41cdf",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +272,276 @@    description.add(new DiagnosticsProperty<bool>('autocorrect', autocorrect, defaultValue: false));\n    description.add(new IntProperty('maxLines', maxLines, defaultValue: 1));\n    description.add(new IntProperty('maxLength', maxLength, defaultValue: null));\n    description.add(new FlagProperty('maxLengthEnforced', value: maxLengthEnforced, ifTrue: 'max length enforced'));\n  }"
  },
  {
    "id" : "d61d6b84-1a32-4d71-882f-31d32d518ab0",
    "prId" : 12648,
    "prUrl" : "https://github.com/flutter/flutter/pull/12648#pullrequestreview-71671662",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a29ab89b-bdd2-4545-b162-ac5e045ea0bb",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "if you assert, in the constructor, that `!(maxLength == null && maxLengthEnforced)`, then you can just check maxLengthEnforced here.",
        "createdAt" : "2017-10-23T17:27:52Z",
        "updatedAt" : "2017-10-24T21:23:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a2781100-7511-4fb1-98ad-d3eba639b01d",
        "parentId" : "a29ab89b-bdd2-4545-b162-ac5e045ea0bb",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Actually, that won't work, because maxLength defaults to null (unlimited length), and maxLengthEnforced defaults to true, and those are the least surprising defaults.  That's an OK state too, since it just means exactly what this conditional expresses: if you don't set maxLength, then maxLengthEnforced is ignored.",
        "createdAt" : "2017-10-23T17:54:13Z",
        "updatedAt" : "2017-10-24T21:23:42Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "4468df6c-e64f-4355-8d28-f5bd709874c2",
        "parentId" : "a29ab89b-bdd2-4545-b162-ac5e045ea0bb",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "You could have the constructor default the maxLengthEnforced argument to null, then set the property to true if maxLength is non-null and maxLengthEnforced is null, and false otherwise.",
        "createdAt" : "2017-10-24T21:02:47Z",
        "updatedAt" : "2017-10-24T21:23:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dc9f3bb644ef3860d1cd6c16636813f58e41cdf",
    "line" : 155,
    "diffHunk" : "@@ -1,1 +346,350 @@    final FocusNode focusNode = _effectiveFocusNode;\n    final List<TextInputFormatter> formatters = widget.inputFormatters ?? <TextInputFormatter>[];\n    if (widget.maxLength != null && widget.maxLengthEnforced)\n      formatters.add(new LengthLimitingTextInputFormatter(widget.maxLength));\n"
  },
  {
    "id" : "b80bc0a0-b4fb-4aa4-b00a-29871f722d39",
    "prId" : 12648,
    "prUrl" : "https://github.com/flutter/flutter/pull/12648#pullrequestreview-71267706",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7802194-3a86-48e3-866b-166efce3a5a8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "add:\r\n\r\n```\r\n/// See also:\r\n///\r\n///  * [maxLength], which discusses the precise meaning of \"number of characters\" and how\r\n///    it may differ from the intuitive meaning.\r\n```",
        "createdAt" : "2017-10-23T17:31:26Z",
        "updatedAt" : "2017-10-24T21:23:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "1adb6c91-c9ec-4344-bfe9-52faadfb4622",
        "parentId" : "c7802194-3a86-48e3-866b-166efce3a5a8",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done.",
        "createdAt" : "2017-10-23T17:35:46Z",
        "updatedAt" : "2017-10-24T21:23:42Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dc9f3bb644ef3860d1cd6c16636813f58e41cdf",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +87,91 @@  ///\n  /// The [keyboardType], [textAlign], [autofocus], [obscureText], and\n  /// [autocorrect] arguments must not be null.\n  ///\n  /// See also:"
  },
  {
    "id" : "1e888300-05f1-4919-9d70-252a763c72f9",
    "prId" : 16027,
    "prUrl" : "https://github.com/flutter/flutter/pull/16027#pullrequestreview-107812773",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a255477-6c6e-4eff-8467-90d7b193a9a6",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "If false --> If false,",
        "createdAt" : "2018-03-28T19:12:33Z",
        "updatedAt" : "2018-03-28T19:13:28Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "19a4e4eb55a3ef96118d99443546ef2102134924",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +263,267 @@  final List<TextInputFormatter> inputFormatters;\n\n  /// If false the textfield is \"disabled\": it ignores taps and its\n  /// [decoration] is rendered in grey.\n  ///"
  }
]