[
  {
    "id" : "8009e739-e711-428a-b4d3-927c32949da4",
    "prId" : 508,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17d37ef7-c783-430e-9a0d-0cb951ee9517",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I suppose this could be (_dissmissedBottomSheets?.isNotEmpty ?? false).  Not really clearer though.\n",
        "createdAt" : "2015-11-20T16:01:54Z",
        "updatedAt" : "2015-11-20T18:49:12Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "03e094aa1be2a0072291e55c6d38a6fb3681df34",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +238,242 @@        (_dismissedBottomSheets != null && _dismissedBottomSheets.isNotEmpty)) {\n      List<Widget> bottomSheets = <Widget>[];\n      if (_dismissedBottomSheets != null && _dismissedBottomSheets.isNotEmpty)\n        bottomSheets.addAll(_dismissedBottomSheets);\n      if (_currentBottomSheet != null)"
  },
  {
    "id" : "14656be3-33df-4d5d-ac2b-1b0e55a87d84",
    "prId" : 1190,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8e72dbb-28ed-4fbb-ba3d-657ed993134e",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "What goes wrong if this key is missing?\n",
        "createdAt" : "2016-01-11T22:32:52Z",
        "updatedAt" : "2016-01-12T19:42:39Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "866a03e6-0b5f-4695-a8ec-e9241cac51e8",
        "parentId" : "b8e72dbb-28ed-4fbb-ba3d-657ed993134e",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Without this key, when the transition from the old FAB to the new one starts, the two FABs get mixed up. The old one seems to end up with the new one's performance, until the new one grows in. \n",
        "createdAt" : "2016-01-12T00:53:40Z",
        "updatedAt" : "2016-01-12T19:42:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "1f74edd7-9ce0-4e21-9c5d-ee0e27bc4b49",
        "parentId" : "b8e72dbb-28ed-4fbb-ba3d-657ed993134e",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Makes sense.\n",
        "createdAt" : "2016-01-12T00:54:08Z",
        "updatedAt" : "2016-01-12T19:42:39Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "cafea7f51f9c231fe19c681b95eb2e0121556869",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +387,391 @@    if (config.floatingActionButton != null) {\n      Widget fab = new _FloatingActionButtonTransition(\n        key: new ValueKey<Key>(config.floatingActionButton.key),\n        child: config.floatingActionButton\n      );"
  },
  {
    "id" : "3d0acbcf-6f01-4247-9044-64df6412c00d",
    "prId" : 1540,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca953202-1eaa-44ae-94f9-7c9a27345d27",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "oooooo\n\nfancy\n",
        "createdAt" : "2016-02-03T00:00:21Z",
        "updatedAt" : "2016-02-03T00:34:05Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bc65e0373e63973a51ca5dfc17287649f00b19b",
    "line" : 184,
    "diffHunk" : "@@ -1,1 +522,526 @@      double overScroll = _scrollOffset.clamp(double.NEGATIVE_INFINITY, 0.0);\n      application = new NotificationListener<ScrollNotification>(\n        onNotification: _handleScrollNotification,\n        child: new Stack(\n          children: <Widget> ["
  },
  {
    "id" : "9382e9c7-92c0-4ff4-99d2-e74e9d20b393",
    "prId" : 2110,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "904d8b3e-3eb7-4efc-84be-2478e2cd8b04",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this is fine. I'd even add an assert that bottomSheetKey.currentState isn't null.\n",
        "createdAt" : "2016-02-23T19:42:17Z",
        "updatedAt" : "2016-02-23T23:25:08Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "9b1a1ecd-8f20-4843-9014-36adcbc27b9a",
        "parentId" : "904d8b3e-3eb7-4efc-84be-2478e2cd8b04",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "There don't seem top be any uses of ScaffoldFeatureController.setState() except for the hack I added (and will remove).  However: I suppose the idea is that someone who's only holding on to the feature controller can update some state that the feature controller depends inside of myFeatureController.setState().\n\nThat's what I've done; it does work. It's not as tidy as just calling setState() once, on the application itself. \n",
        "createdAt" : "2016-02-23T20:56:15Z",
        "updatedAt" : "2016-02-23T23:25:08Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "72b02f2d-7eb2-41c5-9f7d-4143c0616696",
        "parentId" : "904d8b3e-3eb7-4efc-84be-2478e2cd8b04",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I've filed a related issue: Rebuilding the Scaffold doesn't rebuild its BottomSheet\nhttps://github.com/flutter/flutter/issues/2115\n",
        "createdAt" : "2016-02-23T23:07:01Z",
        "updatedAt" : "2016-02-23T23:25:08Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "25e22f56482d75f83852f495a0d49e59f3155a6a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +333,337 @@        completer,\n        () => entry.remove(),\n        (VoidCallback fn) { bottomSheetKey.currentState?.setState(fn); }\n      );\n    });"
  },
  {
    "id" : "9f8d5d91-7eb0-44bb-8de3-1bd4dc6415fa",
    "prId" : 3167,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4835f6e1-5140-42b2-abd0-5c7da53babaf",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This would be a good place for a link to the app bar expanded height property.\n",
        "createdAt" : "2016-04-07T14:58:39Z",
        "updatedAt" : "2016-04-07T16:54:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6dca20149022e23eb3722bcae7237134fad60cd",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +245,249 @@  Animation<double> get appBarAnimation => _appBarController.view;\n\n  /// The height of the app bar when fully expanded.\n  ///\n  /// See [AppBar.expandedHeight]."
  },
  {
    "id" : "c4e9b5b2-1102-4833-94d9-cf58ac5d6085",
    "prId" : 3229,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "380ddaa6-aff1-40f9-80e0-0e543f2e4644",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "what does this do if you have two sibling scrollable descendants?\n",
        "createdAt" : "2016-04-11T05:21:48Z",
        "updatedAt" : "2016-04-11T05:21:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "223d5ed22d2577ada614d087934ae39064a13b59",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +489,493 @@  bool _handleScrollNotification(ScrollNotification notification) {\n    if (config.scrollableKey == null || config.scrollableKey == notification.scrollable.config.key) {\n      final double newScrollOffset = notification.scrollable.scrollOffset;\n      setState(() {\n        _scrollOffsetDelta = _scrollOffset - newScrollOffset;"
  },
  {
    "id" : "37625005-9b64-444d-a3e3-e0357a84be82",
    "prId" : 3570,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "463c9478-50a9-4923-bd37-361e3ff4c86d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "might want to check how we spell it in the gallery, too\n",
        "createdAt" : "2016-04-26T23:59:22Z",
        "updatedAt" : "2016-04-27T03:04:52Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ac0d981744972531a30905dbd7bb7d307f64928",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +203,207 @@/// Implements the basic material design visual layout structure.\n///\n/// This class provides APIs for showing drawers, snack bars, and bottom sheets.\n///\n/// To display a snackbar or a persistent bottom sheet, obtain the"
  },
  {
    "id" : "35241a83-6a5a-47ee-9268-d9cb879b5a9f",
    "prId" : 3570,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "155ff779-b373-4680-a038-a1b695f7ff31",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "what about left and right?\n",
        "createdAt" : "2016-04-27T00:01:04Z",
        "updatedAt" : "2016-04-27T03:04:52Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "34252234-4a82-42f2-a900-e32e76c2307d",
        "parentId" : "155ff779-b373-4680-a038-a1b695f7ff31",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I think you want copyWidth(bottom: 0) or something\n",
        "createdAt" : "2016-04-27T00:01:20Z",
        "updatedAt" : "2016-04-27T03:04:52Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "edd74f25-5d54-4d5d-9199-5459508e2341",
        "parentId" : "155ff779-b373-4680-a038-a1b695f7ff31",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I kind of wanted to use EdgeDims.zero here because the name says to avoid (all) window padding, but things go badly if you skip the top padding here.\n",
        "createdAt" : "2016-04-27T03:04:37Z",
        "updatedAt" : "2016-04-27T03:04:52Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "c081fb4f-79b9-4977-a037-4ecf7b69cc5d",
        "parentId" : "155ff779-b373-4680-a038-a1b695f7ff31",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Maybe we should rename it to resizeToAvoidBottomPadding?\nAlthough consider if Android were to use bottom padding to keep us out of the soft buttons. Presumably the padding would be non-zero without a keyboard, and merely bigger with a keyboard. So really it's about not responding to padding changes? I don't really know what the right solution is here but I feel like what we're doing right now isn't fully coherent.\n",
        "createdAt" : "2016-04-27T22:35:48Z",
        "updatedAt" : "2016-04-27T22:35:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ac0d981744972531a30905dbd7bb7d307f64928",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +615,619 @@    EdgeInsets padding = MediaQuery.of(context).padding;\n    if (!config.resizeToAvoidWindowPadding)\n      padding = new EdgeInsets.only(top: padding.top);\n\n    if (_snackBars.length > 0) {"
  }
]