[
  {
    "id" : "8009e739-e711-428a-b4d3-927c32949da4",
    "prId" : 508,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17d37ef7-c783-430e-9a0d-0cb951ee9517",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I suppose this could be (_dissmissedBottomSheets?.isNotEmpty ?? false).  Not really clearer though.\n",
        "createdAt" : "2015-11-20T16:01:54Z",
        "updatedAt" : "2015-11-20T18:49:12Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "03e094aa1be2a0072291e55c6d38a6fb3681df34",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +238,242 @@        (_dismissedBottomSheets != null && _dismissedBottomSheets.isNotEmpty)) {\n      List<Widget> bottomSheets = <Widget>[];\n      if (_dismissedBottomSheets != null && _dismissedBottomSheets.isNotEmpty)\n        bottomSheets.addAll(_dismissedBottomSheets);\n      if (_currentBottomSheet != null)"
  },
  {
    "id" : "14656be3-33df-4d5d-ac2b-1b0e55a87d84",
    "prId" : 1190,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8e72dbb-28ed-4fbb-ba3d-657ed993134e",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "What goes wrong if this key is missing?\n",
        "createdAt" : "2016-01-11T22:32:52Z",
        "updatedAt" : "2016-01-12T19:42:39Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "866a03e6-0b5f-4695-a8ec-e9241cac51e8",
        "parentId" : "b8e72dbb-28ed-4fbb-ba3d-657ed993134e",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Without this key, when the transition from the old FAB to the new one starts, the two FABs get mixed up. The old one seems to end up with the new one's performance, until the new one grows in. \n",
        "createdAt" : "2016-01-12T00:53:40Z",
        "updatedAt" : "2016-01-12T19:42:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "1f74edd7-9ce0-4e21-9c5d-ee0e27bc4b49",
        "parentId" : "b8e72dbb-28ed-4fbb-ba3d-657ed993134e",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Makes sense.\n",
        "createdAt" : "2016-01-12T00:54:08Z",
        "updatedAt" : "2016-01-12T19:42:39Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "cafea7f51f9c231fe19c681b95eb2e0121556869",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +387,391 @@    if (config.floatingActionButton != null) {\n      Widget fab = new _FloatingActionButtonTransition(\n        key: new ValueKey<Key>(config.floatingActionButton.key),\n        child: config.floatingActionButton\n      );"
  },
  {
    "id" : "3d0acbcf-6f01-4247-9044-64df6412c00d",
    "prId" : 1540,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca953202-1eaa-44ae-94f9-7c9a27345d27",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "oooooo\n\nfancy\n",
        "createdAt" : "2016-02-03T00:00:21Z",
        "updatedAt" : "2016-02-03T00:34:05Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bc65e0373e63973a51ca5dfc17287649f00b19b",
    "line" : 184,
    "diffHunk" : "@@ -1,1 +522,526 @@      double overScroll = _scrollOffset.clamp(double.NEGATIVE_INFINITY, 0.0);\n      application = new NotificationListener<ScrollNotification>(\n        onNotification: _handleScrollNotification,\n        child: new Stack(\n          children: <Widget> ["
  },
  {
    "id" : "9382e9c7-92c0-4ff4-99d2-e74e9d20b393",
    "prId" : 2110,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "904d8b3e-3eb7-4efc-84be-2478e2cd8b04",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this is fine. I'd even add an assert that bottomSheetKey.currentState isn't null.\n",
        "createdAt" : "2016-02-23T19:42:17Z",
        "updatedAt" : "2016-02-23T23:25:08Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "9b1a1ecd-8f20-4843-9014-36adcbc27b9a",
        "parentId" : "904d8b3e-3eb7-4efc-84be-2478e2cd8b04",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "There don't seem top be any uses of ScaffoldFeatureController.setState() except for the hack I added (and will remove).  However: I suppose the idea is that someone who's only holding on to the feature controller can update some state that the feature controller depends inside of myFeatureController.setState().\n\nThat's what I've done; it does work. It's not as tidy as just calling setState() once, on the application itself. \n",
        "createdAt" : "2016-02-23T20:56:15Z",
        "updatedAt" : "2016-02-23T23:25:08Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "72b02f2d-7eb2-41c5-9f7d-4143c0616696",
        "parentId" : "904d8b3e-3eb7-4efc-84be-2478e2cd8b04",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I've filed a related issue: Rebuilding the Scaffold doesn't rebuild its BottomSheet\nhttps://github.com/flutter/flutter/issues/2115\n",
        "createdAt" : "2016-02-23T23:07:01Z",
        "updatedAt" : "2016-02-23T23:25:08Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "25e22f56482d75f83852f495a0d49e59f3155a6a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +333,337 @@        completer,\n        () => entry.remove(),\n        (VoidCallback fn) { bottomSheetKey.currentState?.setState(fn); }\n      );\n    });"
  },
  {
    "id" : "9f8d5d91-7eb0-44bb-8de3-1bd4dc6415fa",
    "prId" : 3167,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4835f6e1-5140-42b2-abd0-5c7da53babaf",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This would be a good place for a link to the app bar expanded height property.\n",
        "createdAt" : "2016-04-07T14:58:39Z",
        "updatedAt" : "2016-04-07T16:54:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6dca20149022e23eb3722bcae7237134fad60cd",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +245,249 @@  Animation<double> get appBarAnimation => _appBarController.view;\n\n  /// The height of the app bar when fully expanded.\n  ///\n  /// See [AppBar.expandedHeight]."
  },
  {
    "id" : "c4e9b5b2-1102-4833-94d9-cf58ac5d6085",
    "prId" : 3229,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "380ddaa6-aff1-40f9-80e0-0e543f2e4644",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "what does this do if you have two sibling scrollable descendants?\n",
        "createdAt" : "2016-04-11T05:21:48Z",
        "updatedAt" : "2016-04-11T05:21:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "223d5ed22d2577ada614d087934ae39064a13b59",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +489,493 @@  bool _handleScrollNotification(ScrollNotification notification) {\n    if (config.scrollableKey == null || config.scrollableKey == notification.scrollable.config.key) {\n      final double newScrollOffset = notification.scrollable.scrollOffset;\n      setState(() {\n        _scrollOffsetDelta = _scrollOffset - newScrollOffset;"
  },
  {
    "id" : "37625005-9b64-444d-a3e3-e0357a84be82",
    "prId" : 3570,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "463c9478-50a9-4923-bd37-361e3ff4c86d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "might want to check how we spell it in the gallery, too\n",
        "createdAt" : "2016-04-26T23:59:22Z",
        "updatedAt" : "2016-04-27T03:04:52Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ac0d981744972531a30905dbd7bb7d307f64928",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +203,207 @@/// Implements the basic material design visual layout structure.\n///\n/// This class provides APIs for showing drawers, snack bars, and bottom sheets.\n///\n/// To display a snackbar or a persistent bottom sheet, obtain the"
  },
  {
    "id" : "35241a83-6a5a-47ee-9268-d9cb879b5a9f",
    "prId" : 3570,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "155ff779-b373-4680-a038-a1b695f7ff31",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "what about left and right?\n",
        "createdAt" : "2016-04-27T00:01:04Z",
        "updatedAt" : "2016-04-27T03:04:52Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "34252234-4a82-42f2-a900-e32e76c2307d",
        "parentId" : "155ff779-b373-4680-a038-a1b695f7ff31",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I think you want copyWidth(bottom: 0) or something\n",
        "createdAt" : "2016-04-27T00:01:20Z",
        "updatedAt" : "2016-04-27T03:04:52Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "edd74f25-5d54-4d5d-9199-5459508e2341",
        "parentId" : "155ff779-b373-4680-a038-a1b695f7ff31",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I kind of wanted to use EdgeDims.zero here because the name says to avoid (all) window padding, but things go badly if you skip the top padding here.\n",
        "createdAt" : "2016-04-27T03:04:37Z",
        "updatedAt" : "2016-04-27T03:04:52Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "c081fb4f-79b9-4977-a037-4ecf7b69cc5d",
        "parentId" : "155ff779-b373-4680-a038-a1b695f7ff31",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Maybe we should rename it to resizeToAvoidBottomPadding?\nAlthough consider if Android were to use bottom padding to keep us out of the soft buttons. Presumably the padding would be non-zero without a keyboard, and merely bigger with a keyboard. So really it's about not responding to padding changes? I don't really know what the right solution is here but I feel like what we're doing right now isn't fully coherent.\n",
        "createdAt" : "2016-04-27T22:35:48Z",
        "updatedAt" : "2016-04-27T22:35:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ac0d981744972531a30905dbd7bb7d307f64928",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +615,619 @@    EdgeInsets padding = MediaQuery.of(context).padding;\n    if (!config.resizeToAvoidWindowPadding)\n      padding = new EdgeInsets.only(top: padding.top);\n\n    if (_snackBars.length > 0) {"
  },
  {
    "id" : "bbffac81-cd97-4f32-abfb-b7f5d933dfc7",
    "prId" : 5015,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5f4b51b-4f1e-4219-93b7-3d252fe9d0a5",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE\n",
        "createdAt" : "2016-07-22T23:06:01Z",
        "updatedAt" : "2016-07-22T23:06:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ecef1a88ab666f714b6c66ada3a6a52aed93f51",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +159,163 @@    // of animating in.\n    if (config.child != null)\n      _currentController.value = 1.0;\n\n    _previousAnimation = new CurvedAnimation("
  },
  {
    "id" : "8fe12af4-7cd5-4109-ab83-2c4e768af3ba",
    "prId" : 5343,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c444f130-321a-4e6d-a57e-4d60e62250a4",
        "parentId" : null,
        "authorId" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "body" : "This line could be in the `if` above.\n",
        "createdAt" : "2016-08-11T19:31:49Z",
        "updatedAt" : "2016-08-11T23:37:52Z",
        "lastEditedBy" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "a975f51fb1b66ce7a55494cdb6f6e1905af83372",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +740,744 @@    }\n\n    EdgeInsets appPadding = (config.appBarBehavior != AppBarBehavior.anchor) ?\n        EdgeInsets.zero : padding;\n    Widget application = new CustomMultiChildLayout("
  },
  {
    "id" : "dfa23576-df51-4a06-b830-78ab249e523b",
    "prId" : 5425,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "029c6d04-4738-45bc-8e60-eb5a92820348",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i don't understand why this is a new thing. Shouldn't the appbar be the thing here?\n",
        "createdAt" : "2016-08-16T17:30:17Z",
        "updatedAt" : "2016-08-16T19:16:00Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c748bc58-125f-41c7-b1a6-a7b4fcd14e3e",
        "parentId" : "029c6d04-4738-45bc-8e60-eb5a92820348",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "On iOS you need to tap in the status bar to scroll. Tapping on the rest of the app bar doesn't scroll.\n",
        "createdAt" : "2016-08-16T17:36:36Z",
        "updatedAt" : "2016-08-16T19:16:00Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "00562448-1ebd-474d-b901-07f2b01bc2d5",
        "parentId" : "029c6d04-4738-45bc-8e60-eb5a92820348",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "never mind, hans schooled me in the ways of the iOS\n",
        "createdAt" : "2016-08-16T17:56:16Z",
        "updatedAt" : "2016-08-16T19:16:00Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9313179e994e616462cad17693f5fc515da7e48",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +54,58 @@  floatingActionButton,\n  drawer,\n  statusBar,\n}\n"
  },
  {
    "id" : "2fd301dd-bdb4-4f34-8b2e-097acd1ff7a7",
    "prId" : 5512,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b35129c6-4e7a-4bee-b86e-97c2f0d37ede",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "iOS\n",
        "createdAt" : "2016-08-19T19:29:27Z",
        "updatedAt" : "2016-08-25T18:05:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c0279499-a1f0-4b3b-9e22-48ac92231a29",
        "parentId" : "b35129c6-4e7a-4bee-b86e-97c2f0d37ede",
        "authorId" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "body" : "Done\n",
        "createdAt" : "2016-08-23T20:25:08Z",
        "updatedAt" : "2016-08-25T18:05:01Z",
        "lastEditedBy" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfaf7c9bf268d8b0ad6110f4374325a9ac3a31d1",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +692,696 @@  }\n\n  // IOS-specific back gesture.\n\n  final GlobalKey _backGestureKey = new GlobalKey();"
  },
  {
    "id" : "583cf242-d5ad-46da-bd2e-fbb34c0c5f60",
    "prId" : 5512,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0a24c5f-b85b-40c4-89ea-d21c1e159e3f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "also handle onHorizontalDragCancel, otherwise if the drag is canceled the navigator ends up in a zombie state\n",
        "createdAt" : "2016-08-19T19:31:36Z",
        "updatedAt" : "2016-08-25T18:05:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "1095407e-96d0-4139-8677-db348c4b8b47",
        "parentId" : "e0a24c5f-b85b-40c4-89ea-d21c1e159e3f",
        "authorId" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "body" : "Done. But how does one trigger a drag cancel? I can only get it to call End.\n",
        "createdAt" : "2016-08-23T20:20:33Z",
        "updatedAt" : "2016-08-25T18:05:01Z",
        "lastEditedBy" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "tags" : [
        ]
      },
      {
        "id" : "3c9b30fd-3076-4587-9571-1bd90dba09ad",
        "parentId" : "e0a24c5f-b85b-40c4-89ea-d21c1e159e3f",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "You can get a cancel if e.g. the system pops up a dialog.\n",
        "createdAt" : "2016-08-23T22:18:31Z",
        "updatedAt" : "2016-08-25T18:05:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfaf7c9bf268d8b0ad6110f4374325a9ac3a31d1",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +813,817 @@            onHorizontalDragStart: _handleDragStart,\n            onHorizontalDragUpdate: _handleDragUpdate,\n            onHorizontalDragEnd: _handleDragEnd,\n            onHorizontalDragCancel: _handleDragCancel,\n            behavior: HitTestBehavior.translucent,"
  },
  {
    "id" : "2c8d0241-93c2-4e6a-9810-deabf37b1f35",
    "prId" : 5877,
    "prUrl" : "https://github.com/flutter/flutter/pull/5877#pullrequestreview-651027",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fb8a9d9-7c6d-40d4-ac5d-8c64ba14f85c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "are you sure this is the right order? why was it above the bottom sheets before but not now?\n",
        "createdAt" : "2016-09-19T21:50:34Z",
        "updatedAt" : "2016-09-22T19:29:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "18bdc0eb-93ae-4353-b06b-017de2433348",
        "parentId" : "1fb8a9d9-7c6d-40d4-ac5d-8c64ba14f85c",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "please add a test that verifies that we're getting the right z-order when you have all these widgets present\n",
        "createdAt" : "2016-09-19T21:51:02Z",
        "updatedAt" : "2016-09-22T19:29:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "b06856ec-c38c-46ec-bf32-d6ce416622eb",
        "parentId" : "1fb8a9d9-7c6d-40d4-ac5d-8c64ba14f85c",
        "authorId" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "body" : "Well, according to the spec, snack bars should be below bottom navigation and bottom sheets should be above bottom navigation. There wasn't any rule for snack bars and bottom sheets per se, but you can infer the order now that bottom navigation is in the equation.\n",
        "createdAt" : "2016-09-19T22:27:53Z",
        "updatedAt" : "2016-09-22T19:29:42Z",
        "lastEditedBy" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d74620ca8efb5bdf00e1f675fec8b5b69443630",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +783,787 @@\n    if (_snackBars.isNotEmpty)\n      _addIfNonNull(children, _snackBars.first._widget, _ScaffoldSlot.snackBar);\n\n    if (config.bottomNavigationBar != null) {"
  },
  {
    "id" : "92fffb1f-4c08-4ea3-aac7-456a41aea105",
    "prId" : 5877,
    "prUrl" : "https://github.com/flutter/flutter/pull/5877#pullrequestreview-1042348",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03175ca3-09ac-4324-b724-ff28209b676f",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This would be the place to explain how the bottom navigation bar is laid out vis the scaffold's bottom sheet and its snackbar.\n",
        "createdAt" : "2016-09-21T19:24:50Z",
        "updatedAt" : "2016-09-22T19:29:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "a5ce5ed8-df78-48eb-b285-cd74b69c61dc",
        "parentId" : "03175ca3-09ac-4324-b724-ff28209b676f",
        "authorId" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "body" : "Fixed.\n",
        "createdAt" : "2016-09-21T21:04:31Z",
        "updatedAt" : "2016-09-22T19:29:43Z",
        "lastEditedBy" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d74620ca8efb5bdf00e1f675fec8b5b69443630",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +320,324 @@  final Widget drawer;\n\n  /// A bottom navigation bar to display at the bottom of the scaffold.\n  ///\n  /// Snack bars slide from underneath the botton navigation while bottom sheets"
  },
  {
    "id" : "77bf21a6-fd33-4dd0-93a4-df263fcaee27",
    "prId" : 6345,
    "prUrl" : "https://github.com/flutter/flutter/pull/6345#pullrequestreview-4542010",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3472632d-089d-4fc6-ae7b-5f1dda3130e4",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I suppose you could also check for `config.persistentFooterButtons.length > 0`. On the other hand, maybe it's better to have the substructure in place for the inevitable rebuild with a non-empty buttons list.\n",
        "createdAt" : "2016-10-17T18:47:24Z",
        "updatedAt" : "2016-10-17T19:32:41Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "f556fc2f-a7a4-4b2d-a735-13adb8bbc5dd",
        "parentId" : "3472632d-089d-4fc6-ae7b-5f1dda3130e4",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, I figured it would be better to treat an empty list by drawing the bar and leaving a null list as the way to get rid of the bar.\n",
        "createdAt" : "2016-10-17T19:32:03Z",
        "updatedAt" : "2016-10-17T19:32:41Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "2262b88f4d8cc9caa46a6582fa3de254b00ebb0f",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +830,834 @@      _addIfNonNull(children, _snackBars.first._widget, _ScaffoldSlot.snackBar);\n\n    if (config.persistentFooterButtons != null) {\n      children.add(new LayoutId(\n        id: _ScaffoldSlot.persistentFooter,"
  },
  {
    "id" : "905c6271-d218-4208-8c8a-267282e60362",
    "prId" : 6612,
    "prUrl" : "https://github.com/flutter/flutter/pull/6612#pullrequestreview-6644101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "524abd41-82de-49ce-a0e2-040035e72463",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I might say something about \"upward\" here.  For example: \"No Scaffold ancestor could be found starting from the context that ...\"\n",
        "createdAt" : "2016-11-01T04:01:58Z",
        "updatedAt" : "2016-11-01T04:01:58Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "eae60cd1-91c6-47e5-a8b0-af30caef0556",
        "parentId" : "524abd41-82de-49ce-a0e2-040035e72463",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(Will fix in subsequent patch, since moving a branch to another development machine is a pain.)\n",
        "createdAt" : "2016-11-01T05:07:31Z",
        "updatedAt" : "2016-11-01T05:07:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3c2d9a06-1296-45ba-802b-3f77dbc9a19d",
        "parentId" : "524abd41-82de-49ce-a0e2-040035e72463",
        "authorId" : "7b783ce6-a0fd-4147-a5d9-e1f619149d45",
        "body" : "Agree re: indicating a direction in which we looked :)\n",
        "createdAt" : "2016-11-01T16:07:23Z",
        "updatedAt" : "2016-11-01T16:07:23Z",
        "lastEditedBy" : "7b783ce6-a0fd-4147-a5d9-e1f619149d45",
        "tags" : [
        ]
      }
    ],
    "commit" : "e41defb55bad4a4f21da141f4e8591131e16e46d",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +437,441 @@    throw new FlutterError(\n      'Scaffold.of() called with a context that does not contain a Scaffold.\\n'\n      'No Scaffold could be found starting from the context that was passed to Scaffold.of(). '\n      'This usually happens when the context provided is from the same StatefulWidget as that '\n      'whose build function actually creates the Scaffold widget being sought.\\n'"
  },
  {
    "id" : "f5e0125a-627a-49c8-81ce-4f401c669220",
    "prId" : 7996,
    "prUrl" : "https://github.com/flutter/flutter/pull/7996#pullrequestreview-20904471",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c12ca874-f9d1-43b6-8047-75a6939255da",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Is this argument used anymore?",
        "createdAt" : "2017-02-08T23:54:24Z",
        "updatedAt" : "2017-02-09T01:46:43Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "03031ba0-feb2-4624-980e-18513413bc1e",
        "parentId" : "c12ca874-f9d1-43b6-8047-75a6939255da",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yeah, we use it for the bottom padding",
        "createdAt" : "2017-02-09T00:20:06Z",
        "updatedAt" : "2017-02-09T01:46:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b309daa5d15cf961835f69db6e640880d19d9ff",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +40,44 @@class _ScaffoldLayout extends MultiChildLayoutDelegate {\n  _ScaffoldLayout({\n    this.padding,\n    this.statusBarHeight,\n  });"
  },
  {
    "id" : "2151b4d1-880e-4a2a-aa16-9140c127c366",
    "prId" : 11688,
    "prUrl" : "https://github.com/flutter/flutter/pull/11688#pullrequestreview-57604944",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6836daa0-f603-41be-b3da-bdd8996715c4",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "docs for this method should be updated to talk about the issue of the timing too",
        "createdAt" : "2017-08-21T20:40:18Z",
        "updatedAt" : "2017-08-29T16:21:57Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6b94c0cdc420a8713de266818ed8bbb32aceee6",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +610,614 @@  void hideCurrentSnackBar({ SnackBarClosedReason reason: SnackBarClosedReason.hide }) {\n    assert(reason != null);\n    if (_snackBars.isEmpty || _snackBarController.status == AnimationStatus.dismissed)\n      return;\n    final Completer<SnackBarClosedReason> completer = _snackBars.first._completer;"
  },
  {
    "id" : "f220b79e-6225-40a6-9938-0c25f5cf9085",
    "prId" : 12292,
    "prUrl" : "https://github.com/flutter/flutter/pull/12292#pullrequestreview-65915282",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b9c754a-72a3-45ad-b5fb-9c640735dcfd",
        "parentId" : null,
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Curious: what situation is this meant to handle? While this is consistent with the current code, this actually results in undesirable behaviour on the iPhone X where the additional padding shouldn't be applied at the Scaffold level, but at the BottomNavigationBar level so we get appropriately-coloured fill, etc. I assume the current behaviour is desirable in the case it's meant to cover though.",
        "createdAt" : "2017-09-28T01:59:09Z",
        "updatedAt" : "2017-09-28T23:37:58Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "d1868bb5-e28a-47d0-a94e-5c1697cd1fa2",
        "parentId" : "0b9c754a-72a3-45ad-b5fb-9c640735dcfd",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Actually reading further, this looks like this may well my issue, but still curious what the origin of this was.",
        "createdAt" : "2017-09-28T02:08:46Z",
        "updatedAt" : "2017-09-28T23:37:58Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "77012d1d-6cb7-414b-b2f0-3093023812ac",
        "parentId" : "0b9c754a-72a3-45ad-b5fb-9c640735dcfd",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "The `padding` -> `bottomPadding` part specifically should have been a no-op. As far as I can tell all the other sides of the padding were ignored in the old code.",
        "createdAt" : "2017-09-28T02:10:13Z",
        "updatedAt" : "2017-09-28T23:37:58Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a34e926d-831a-478e-8263-0ee2c7d4b935",
        "parentId" : "0b9c754a-72a3-45ad-b5fb-9c640735dcfd",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Mostly interested in the rationale for the existing behaviour. Though probably good to deal with that in a followup patch when we've got the changes to BottomNavigationBar etc. to support the iPhone X.",
        "createdAt" : "2017-09-28T02:19:35Z",
        "updatedAt" : "2017-09-28T23:37:58Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "d467ee9e-7e4c-4793-b20d-386caa7340d7",
        "parentId" : "0b9c754a-72a3-45ad-b5fb-9c640735dcfd",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I didn't really examine what the existing behaviour actually was. :-) Scaffold could probably do with a round of cleanup, it's accumulated cruft over the years.",
        "createdAt" : "2017-09-28T16:10:16Z",
        "updatedAt" : "2017-09-28T23:37:58Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3edd400763419675d46e3cebbbe4f3db8ba8448",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +45,49 @@\n  final double statusBarHeight;\n  final double bottomPadding;\n  final double endPadding;\n  final TextDirection textDirection;"
  },
  {
    "id" : "49daf22a-ad79-4460-9271-9ab21aad472e",
    "prId" : 12292,
    "prUrl" : "https://github.com/flutter/flutter/pull/12292#pullrequestreview-66027875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e07cb2cc-3173-40d4-860c-cb66f7d83a01",
        "parentId" : null,
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Test? (this and the bottom nav look like the only ones that slightly alter existing behaviour)",
        "createdAt" : "2017-09-28T02:38:53Z",
        "updatedAt" : "2017-09-28T23:37:58Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "a5c50d76-b374-43af-83d9-92c7bece1fe1",
        "parentId" : "e07cb2cc-3173-40d4-860c-cb66f7d83a01",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "will do",
        "createdAt" : "2017-09-28T16:10:27Z",
        "updatedAt" : "2017-09-28T23:37:58Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ecf78774-fadf-425e-85a7-3762d0030813",
        "parentId" : "e07cb2cc-3173-40d4-860c-cb66f7d83a01",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Done, PTAL. It involved changes to Scaffold.",
        "createdAt" : "2017-09-28T23:38:09Z",
        "updatedAt" : "2017-09-28T23:38:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3edd400763419675d46e3cebbbe4f3db8ba8448",
    "line" : 303,
    "diffHunk" : "@@ -1,1 +949,953 @@        ),\n        _ScaffoldSlot.drawer,\n        // remove the side padding from the side we're not touching\n        removeLeftPadding: textDirection == TextDirection.rtl,\n        removeTopPadding: false,"
  },
  {
    "id" : "b568b525-79e1-4bc3-b042-b9e1825b2aac",
    "prId" : 12686,
    "prUrl" : "https://github.com/flutter/flutter/pull/12686#pullrequestreview-73682876",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dbb3c76-dd71-438c-9c35-878fd94375be",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "These changes to `_ScaffoldScope` aren't needed anymore.",
        "createdAt" : "2017-11-02T03:42:57Z",
        "updatedAt" : "2017-11-02T04:26:27Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "9ce24b92-898b-4801-99fd-276d6a3913e3",
        "parentId" : "7dbb3c76-dd71-438c-9c35-878fd94375be",
        "authorId" : "8f8ecb0d-3934-46ed-b8be-248eb32d6150",
        "body" : "Reverted the changes",
        "createdAt" : "2017-11-02T04:27:04Z",
        "updatedAt" : "2017-11-02T04:27:04Z",
        "lastEditedBy" : "8f8ecb0d-3934-46ed-b8be-248eb32d6150",
        "tags" : [
        ]
      }
    ],
    "commit" : "68dc653f9abf2f57549ef9298ed774dcc9f4a8c3",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +1140,1144 @@}\n\nclass _ScaffoldScope extends InheritedWidget {\n  const _ScaffoldScope({\n    @required this.hasDrawer,"
  },
  {
    "id" : "eb2262d8-3b7d-4ca6-a014-2e9841b76451",
    "prId" : 13423,
    "prUrl" : "https://github.com/flutter/flutter/pull/13423#pullrequestreview-82027193",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b141eb2e-06c5-47c2-b0eb-124f0d6f5078",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should get the media query once, then read the padding and viewinsets from that.",
        "createdAt" : "2017-12-07T22:56:50Z",
        "updatedAt" : "2017-12-07T22:56:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "8ff35895-ed01-4b81-a7ea-e12e750ef18f",
        "parentId" : "b141eb2e-06c5-47c2-b0eb-124f0d6f5078",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Done in #13434",
        "createdAt" : "2017-12-07T23:21:24Z",
        "updatedAt" : "2017-12-07T23:21:24Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed669eeeb2fa95d15b110fe2c7c9d38fcc98c605",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +835,839 @@    assert(debugCheckHasDirectionality(context));\n    final EdgeInsets padding = MediaQuery.of(context).padding;\n    final EdgeInsets viewInsets = MediaQuery.of(context).viewInsets;\n    final ThemeData themeData = Theme.of(context);\n    final TextDirection textDirection = Directionality.of(context);"
  },
  {
    "id" : "6ed3823f-1333-4c8f-95dc-4ee73450e1b4",
    "prId" : 13423,
    "prUrl" : "https://github.com/flutter/flutter/pull/13423#pullrequestreview-82055661",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1bf2689-a1be-4ae1-8dcd-3f37373649ad",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "do you want this to resize to avoid padding.bottom? That doesn't seem right.",
        "createdAt" : "2017-12-07T22:57:37Z",
        "updatedAt" : "2017-12-07T22:57:37Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "5023a6fc-dc09-44f6-8ae9-6a2fb1ba71e0",
        "parentId" : "f1bf2689-a1be-4ae1-8dcd-3f37373649ad",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "I do very temporarily until an engine change lands. This will be viewInsets-only shortly. This should have included a TODO.",
        "createdAt" : "2017-12-07T23:16:36Z",
        "updatedAt" : "2017-12-07T23:16:36Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "712c72c2-1307-4a3c-91c9-c4b673a887c5",
        "parentId" : "f1bf2689-a1be-4ae1-8dcd-3f37373649ad",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Added the TODO in #13434.",
        "createdAt" : "2017-12-07T23:21:43Z",
        "updatedAt" : "2017-12-07T23:21:43Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "5402a3f0-aa7c-4c57-9e54-e7e4e06144f9",
        "parentId" : "f1bf2689-a1be-4ae1-8dcd-3f37373649ad",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "And gone in #13437",
        "createdAt" : "2017-12-08T02:48:34Z",
        "updatedAt" : "2017-12-08T02:48:34Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed669eeeb2fa95d15b110fe2c7c9d38fcc98c605",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +1040,1044 @@            delegate: new _ScaffoldLayout(\n              statusBarHeight: padding.top,\n              bottomPadding: widget.resizeToAvoidBottomPadding ? math.max(padding.bottom, viewInsets.bottom) : 0.0,\n              endPadding: endPadding,\n              textDirection: textDirection,"
  },
  {
    "id" : "6bffd412-c4b1-4a43-8409-6f986acb8e64",
    "prId" : 13437,
    "prUrl" : "https://github.com/flutter/flutter/pull/13437#pullrequestreview-82042674",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66a5a253-6af1-4a1c-9d30-119fc0236a8e",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "make this required?",
        "createdAt" : "2017-12-08T00:51:18Z",
        "updatedAt" : "2017-12-08T01:21:06Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "3ef70801-468c-4c3e-85c5-b307cc8e20c9",
        "parentId" : "66a5a253-6af1-4a1c-9d30-119fc0236a8e",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Done.",
        "createdAt" : "2017-12-08T01:00:56Z",
        "updatedAt" : "2017-12-08T01:21:06Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f44a85eada821f9ffc9710d0e61310b48b3f584",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +862,866 @@      removeTopPadding: widget.appBar != null,\n      removeRightPadding: false,\n      removeBottomPadding: widget.bottomNavigationBar != null,\n    );\n"
  },
  {
    "id" : "d1a4ac70-ac17-47b7-af65-edd1115dc080",
    "prId" : 14368,
    "prUrl" : "https://github.com/flutter/flutter/pull/14368#pullrequestreview-103663390",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9519adaa-2906-4737-8a92-ff6d8c8ba7f9",
        "parentId" : null,
        "authorId" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "body" : "@Hixie @HansMuller \r\n\r\nPlease take a look at this change.  We discussed it separately, but brief recap:\r\n\r\n\r\n> What's happening is that the top, end and bottom of mediaQuery.padding are all getting passed to the scaffold layout\r\nBut with start-aligned fabs, we really need the start padding as well\r\nand so at this point it's easier to just pass the padding directly and find the start and end padding in the relevant positioner\r\n",
        "createdAt" : "2018-03-14T00:53:25Z",
        "updatedAt" : "2018-03-15T21:40:29Z",
        "lastEditedBy" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "tags" : [
        ]
      }
    ],
    "commit" : "623cde65574dc92adf498945d01efd6b0ad46102",
    "line" : 672,
    "diffHunk" : "@@ -1,1 +1566,1570 @@\n    // The minimum insets for contents of the Scaffold to keep visible.\n    final EdgeInsets minInsets = mediaQuery.padding.copyWith(\n      bottom: widget.resizeToAvoidBottomPadding ? mediaQuery.viewInsets.bottom : 0.0,\n    );"
  },
  {
    "id" : "5835bfc8-30d3-4cbc-897a-2d49bb8d4b9b",
    "prId" : 14368,
    "prUrl" : "https://github.com/flutter/flutter/pull/14368#pullrequestreview-104365725",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1cc879b1-112e-4a77-bd69-5f7c6450962c",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It would be helpful to briefly explain what a typical use case for ScaffoldGeometry is. ",
        "createdAt" : "2018-03-15T00:41:14Z",
        "updatedAt" : "2018-03-15T21:40:29Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "7f857833-c4a9-4448-ac45-642e061f3d9a",
        "parentId" : "1cc879b1-112e-4a77-bd69-5f7c6450962c",
        "authorId" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "body" : "Done.",
        "createdAt" : "2018-03-15T20:21:23Z",
        "updatedAt" : "2018-03-15T21:40:29Z",
        "lastEditedBy" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "tags" : [
        ]
      }
    ],
    "commit" : "623cde65574dc92adf498945d01efd6b0ad46102",
    "line" : 162,
    "diffHunk" : "@@ -1,1 +189,193 @@/// The ScaffoldGeometry is only available during the paint phase, because\n/// its value is computed during the animation and layout phases prior to painting.\n/// \n/// For an example of using the [ScaffoldGeometry], see the [BottomAppBar],\n/// which uses the [ScaffoldGeometry] to paint a notch around the"
  },
  {
    "id" : "ec169c52-85a0-454f-9aac-02a84e9faef9",
    "prId" : 14368,
    "prUrl" : "https://github.com/flutter/flutter/pull/14368#pullrequestreview-153230228",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b66b65f5-964a-49ba-80be-0dc3889d71e2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "am I missing something or is this animation always going to say 1.0?",
        "createdAt" : "2018-09-06T06:18:05Z",
        "updatedAt" : "2018-09-06T06:18:05Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "867d9d81-1c73-4c75-abff-ef3c4eed3eb1",
        "parentId" : "b66b65f5-964a-49ba-80be-0dc3889d71e2",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "https://github.com/flutter/flutter/pull/21535",
        "createdAt" : "2018-09-07T07:30:33Z",
        "updatedAt" : "2018-09-07T07:30:33Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "623cde65574dc92adf498945d01efd6b0ad46102",
    "line" : 443,
    "diffHunk" : "@@ -1,1 +600,604 @@      curve: Curves.easeIn,\n    );\n    final Animation<double> previousExitRotationAnimation = new Tween<double>(begin: 1.0, end: 1.0).animate(\n      new CurvedAnimation(parent: _previousController, curve: Curves.easeIn),\n    );"
  },
  {
    "id" : "fc979ce4-b738-4890-8141-975ca45e41fc",
    "prId" : 14580,
    "prUrl" : "https://github.com/flutter/flutter/pull/14580#pullrequestreview-96269182",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4dca0baf-4a4e-4446-a755-eb704e61c44e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It's not clear what \"scale\" means here. Maybe show same `## Sample code` for how to do that?",
        "createdAt" : "2018-02-13T01:20:13Z",
        "updatedAt" : "2018-02-13T21:22:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "abc061f5-9f4f-48d8-b88f-2d3bcb15261a",
        "parentId" : "4dca0baf-4a4e-4446-a755-eb704e61c44e",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "done.\r\n@Hixie looking at it again I don't like the Position suffix we added to floatingActionButton, as it sounds like a point and not a rectangle. What do you think about just calling it floatingActionButton (geometry.floatingActionButton sounds pretty reasonable I believe).\r\nIf not, maybe floatingActionButtonRect ?",
        "createdAt" : "2018-02-13T16:03:22Z",
        "updatedAt" : "2018-02-13T21:22:30Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "b4550941-3bc6-4b98-a62c-806607783a0b",
        "parentId" : "4dca0baf-4a4e-4446-a755-eb704e61c44e",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "A \"floatingActionButton\" property should hold a floating action button.\r\nI agree that \"position\" suggests an Offset.\r\n\r\nThis gives you the area that the FAB would cover if it was not scaled, right?\r\nMaybe \"floatingActionButtonArea\"?",
        "createdAt" : "2018-02-13T19:07:19Z",
        "updatedAt" : "2018-02-13T21:22:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "d5ecb167-ec43-42d5-9639-4f94cbf9efff",
        "parentId" : "4dca0baf-4a4e-4446-a755-eb704e61c44e",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "done",
        "createdAt" : "2018-02-13T19:27:52Z",
        "updatedAt" : "2018-02-13T21:22:30Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "06910c94ca495b72e907c6d1ae6bc4909080ebb9",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +65,69 @@  /// The floating action button might be scaled inside this rectangle, to get\n  /// the bounding rectangle in which the floating action is painted scale this\n  /// value by [floatingActionButtonScale].\n  ///\n  /// ## Sample code"
  },
  {
    "id" : "6d9ad829-de5f-464b-9daf-fb9e2c71adcb",
    "prId" : 14713,
    "prUrl" : "https://github.com/flutter/flutter/pull/14713#pullrequestreview-97894618",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8679c419-d6a3-4a09-9e25-67a06284d26d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This should probably mention that only the last call will be remembered, so if there's two FloatingActionButtons, only one will be represented in the ScaffoldGeometry.",
        "createdAt" : "2018-02-17T00:16:24Z",
        "updatedAt" : "2018-02-21T17:39:11Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "25bd5747-eda1-444f-bc3a-f44fa6ec8615",
        "parentId" : "8679c419-d6a3-4a09-9e25-67a06284d26d",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Added. Though it feels a bit over-verbose to mention that a setX method overrides the previous value of X...",
        "createdAt" : "2018-02-20T16:30:20Z",
        "updatedAt" : "2018-02-21T17:39:11Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4b0ec009525958a5856cfafe0e39e2ece08f454",
    "line" : 176,
    "diffHunk" : "@@ -1,1 +766,770 @@  /// Callers must invoke the callback when the notch is no longer required.\n  /// This method is typically called from [State.didChangeDependencies] and the\n  /// callback should then be invoked from [State.deactivate].\n  ///\n  /// If there was a previously set [ScaffoldGeometry.floatingActionButtonNotch]"
  },
  {
    "id" : "5c45b110-5441-4210-829d-6eef90b11e99",
    "prId" : 14713,
    "prUrl" : "https://github.com/flutter/flutter/pull/14713#pullrequestreview-97895433",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "250f8724-8e1c-4450-9b24-21c13f9f750e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Add BottomAppBar to the list of \"See also\"s for Scaffold around line 500.",
        "createdAt" : "2018-02-17T00:17:18Z",
        "updatedAt" : "2018-02-21T17:39:11Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "9bc83d73-9a5c-46d8-8b92-047978c1a098",
        "parentId" : "250f8724-8e1c-4450-9b24-21c13f9f750e",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "done",
        "createdAt" : "2018-02-20T16:32:11Z",
        "updatedAt" : "2018-02-21T17:39:11Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4b0ec009525958a5856cfafe0e39e2ece08f454",
    "line" : 158,
    "diffHunk" : "@@ -1,1 +748,752 @@      );\n\n    return scaffoldScope.geometryNotifier;\n  }\n"
  },
  {
    "id" : "a757f710-adbf-4270-aabb-845bbd0b07aa",
    "prId" : 14713,
    "prUrl" : "https://github.com/flutter/flutter/pull/14713#pullrequestreview-98043820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ecd8d2f0-5483-470a-8c4d-dc4cc60aeb16",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Are they really points between host.topLeft and host.topRight?",
        "createdAt" : "2018-02-20T21:13:26Z",
        "updatedAt" : "2018-02-21T17:39:11Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "c1411d5e-b44a-40ee-bb50-874eef5f6fc8",
        "parentId" : "ecd8d2f0-5483-470a-8c4d-dc4cc60aeb16",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "For the generic notch we don't need to require that they are necessarily within the host bounds. \r\nFor the fab notch we have some extra guarantees that are described in the doc for setFloatingActionButtonNotch.\r\nIt says `the start and end offsets ... will always be on the top edge of [bottomNavigationBar]` (that should imply they are between host.topLeft and host.topRight, happy to also explicitly say that there if you think it clarifies).",
        "createdAt" : "2018-02-21T00:45:30Z",
        "updatedAt" : "2018-02-21T17:39:11Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4b0ec009525958a5856cfafe0e39e2ece08f454",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +33,37 @@/// are creating a notch in the host.\n///\n/// The `start` and `end` arguments are points on the outline of the host shape\n/// that will be connected by the returned path.\n///"
  },
  {
    "id" : "52b5cbec-d171-4d29-9ab0-66d5ed388f73",
    "prId" : 14713,
    "prUrl" : "https://github.com/flutter/flutter/pull/14713#pullrequestreview-98044463",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11975816-2f90-455f-a232-6e2f6aaf8200",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This would be a good place to also explain what start and end are for.",
        "createdAt" : "2018-02-20T21:18:18Z",
        "updatedAt" : "2018-02-21T17:39:11Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "9c93d2a4-2f0e-440f-a424-538aaa9e2858",
        "parentId" : "11975816-2f90-455f-a232-6e2f6aaf8200",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "They are explained 2 paragraphs below, did you mean to change the paragraph order?",
        "createdAt" : "2018-02-21T00:49:10Z",
        "updatedAt" : "2018-02-21T17:39:11Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4b0ec009525958a5856cfafe0e39e2ece08f454",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +27,31 @@/// Returns a path for a notch in the outline of a shape.\n///\n/// The path makes a notch in the host shape that can contain the guest shape.\n///\n/// The `host` is the bounding rectangle for the shape into which the notch will"
  },
  {
    "id" : "1b335fe6-0ef5-4c5f-8cd9-b8e79ee3f7fb",
    "prId" : 18379,
    "prUrl" : "https://github.com/flutter/flutter/pull/18379#pullrequestreview-127785506",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61baa01e-ef8b-4b06-85c9-ce1da8e8909e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Should we say something like \"It will typically be a Material\"?",
        "createdAt" : "2018-06-12T00:23:33Z",
        "updatedAt" : "2018-06-12T20:17:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8bea4e534d50babc3c08955bb40b745478c6ba4",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +872,876 @@  /// If a persistent bottom sheet created with [showBottomSheet] is already\n  /// visible, it must be closed before building the Scaffold with a new\n  /// [bottomSheet].\n  ///\n  /// The value of [bottomSheet] can be any widget at all. It's unlikely to"
  },
  {
    "id" : "4a74ca67-5da3-47ea-9115-f701ce314fb8",
    "prId" : 18379,
    "prUrl" : "https://github.com/flutter/flutter/pull/18379#pullrequestreview-127785623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "539f375d-e6a3-4c03-b724-8fbc8db8d96f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "some comments as above",
        "createdAt" : "2018-06-12T00:24:26Z",
        "updatedAt" : "2018-06-12T20:17:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8bea4e534d50babc3c08955bb40b745478c6ba4",
    "line" : 176,
    "diffHunk" : "@@ -1,1 +1333,1337 @@  /// The new bottom sheet becomes a [LocalHistoryEntry] for the enclosing\n  /// [ModalRoute] and a back button is added to the appbar of the [Scaffold]\n  /// that closes the bottom sheet.\n  ///\n  /// To create a persistent bottom sheet that is not a [LocalHistoryEntry] and"
  },
  {
    "id" : "fa63a989-fd8f-49ec-a7fa-632c133dc4e2",
    "prId" : 19336,
    "prUrl" : "https://github.com/flutter/flutter/pull/19336#pullrequestreview-144076666",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5be21a13-2b25-4d92-8458-a84faff0b80e",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "nit: mention the accessible behavior in the method's Dartdoc.",
        "createdAt" : "2018-08-07T02:11:23Z",
        "updatedAt" : "2018-08-07T16:20:39Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "79e10858-aad1-45d5-b443-9a6614990539",
        "parentId" : "5be21a13-2b25-4d92-8458-a84faff0b80e",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Done",
        "createdAt" : "2018-08-07T16:20:42Z",
        "updatedAt" : "2018-08-07T16:20:43Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "373d36a9d97802ada36fd51158e6dd3b50be49e8",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +1165,1169 @@    final MediaQueryData mediaQuery = MediaQuery.of(context);\n    final Completer<SnackBarClosedReason> completer = _snackBars.first._completer;\n    if (mediaQuery.accessibleNavigation) {\n      _snackBarController.value = 0.0;\n      completer.complete(reason);"
  },
  {
    "id" : "64f58781-7145-474c-af1d-7e9487acb4a2",
    "prId" : 19336,
    "prUrl" : "https://github.com/flutter/flutter/pull/19336#pullrequestreview-144087024",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9644b0a9-305f-4e50-98a3-fd9af9dc448f",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Missing unit test for this scenario (hideCurrentSnackbar is called with/without accessibleNavigation).",
        "createdAt" : "2018-08-07T02:11:52Z",
        "updatedAt" : "2018-08-07T16:20:39Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "97fa329b-cc9a-4127-8d89-dbf2a3898ea4",
        "parentId" : "9644b0a9-305f-4e50-98a3-fd9af9dc448f",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Should be L522-523 of snack_bar_test.dart to cover the true case, other case is handled previously",
        "createdAt" : "2018-08-07T16:20:08Z",
        "updatedAt" : "2018-08-07T16:20:39Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "9eaa21e3-07a1-4129-97a7-c1e645bc2d69",
        "parentId" : "9644b0a9-305f-4e50-98a3-fd9af9dc448f",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "right missed that.",
        "createdAt" : "2018-08-07T16:47:42Z",
        "updatedAt" : "2018-08-07T16:50:48Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "373d36a9d97802ada36fd51158e6dd3b50be49e8",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +1165,1169 @@    final MediaQueryData mediaQuery = MediaQuery.of(context);\n    final Completer<SnackBarClosedReason> completer = _snackBars.first._completer;\n    if (mediaQuery.accessibleNavigation) {\n      _snackBarController.value = 0.0;\n      completer.complete(reason);"
  },
  {
    "id" : "0f2943d2-2314-4e78-b9d3-3050d3677188",
    "prId" : 19336,
    "prUrl" : "https://github.com/flutter/flutter/pull/19336#pullrequestreview-145066713",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a136b674-ee43-4da5-a3b9-78b6e9c4bf41",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "When the user turns off accessibility while the snackbar is showing we will get some inconsistent behavior - the time the snackbar will remain visible will be somewhat random between 0 to snackBar.duration.\r\n\r\nWhat do you think about listening to the accessibility change again and then firing a timer? ",
        "createdAt" : "2018-08-07T02:28:10Z",
        "updatedAt" : "2018-08-07T16:20:39Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "7956287a-29c1-4b19-a621-517bc6e9be78",
        "parentId" : "a136b674-ee43-4da5-a3b9-78b6e9c4bf41",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "It's not inconsistent, it's just undefined in the snackbar spec.\r\n\r\nIt's not a common use case to toggle TalkBack on and off while showing snackbars. This simplifies the implementation so we don't have to add/remove listeners on window. ",
        "createdAt" : "2018-08-07T16:14:01Z",
        "updatedAt" : "2018-08-07T16:20:39Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "2a31b634-b868-4e15-99ac-d42ff0fb8d17",
        "parentId" : "a136b674-ee43-4da5-a3b9-78b6e9c4bf41",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "I think that from the user's perspective it's inconsistent: you turn off accessibility and the snack bar might disappear immediately or after a few seconds.\r\n\r\nBut I agree it's not a very important edge case so ok to avoid complicating the code for that.",
        "createdAt" : "2018-08-07T16:49:06Z",
        "updatedAt" : "2018-08-07T16:50:48Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "e15aaf8b-25c7-4f4e-8172-e9f8e9548ed8",
        "parentId" : "a136b674-ee43-4da5-a3b9-78b6e9c4bf41",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i don't think a periodic timer is a good idea here. we'd be waking the CPU regularly while accessibility is enabled, even though nothing is happening.",
        "createdAt" : "2018-08-07T22:26:04Z",
        "updatedAt" : "2018-08-07T22:26:04Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ffd2927f-1b67-433f-9519-3f9754994427",
        "parentId" : "a136b674-ee43-4da5-a3b9-78b6e9c4bf41",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "please at a very minimum leave a TODO here saying that this will hurt battery for accessibility users.",
        "createdAt" : "2018-08-09T23:48:51Z",
        "updatedAt" : "2018-08-09T23:48:51Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "041a00e9-3594-4394-826e-583024a658c5",
        "parentId" : "a136b674-ee43-4da5-a3b9-78b6e9c4bf41",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I've update this to use the didChangeDependencies lifecycle to close the snackbar if a11y is disabled - https://github.com/flutter/flutter/blob/master/packages/flutter/lib/src/material/scaffold.dart#L1407.\r\n\r\nShouldn't have a significant effect on the battery?",
        "createdAt" : "2018-08-09T23:55:56Z",
        "updatedAt" : "2018-08-09T23:55:57Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "373d36a9d97802ada36fd51158e6dd3b50be49e8",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +1489,1493 @@        if (_snackBarController.isCompleted && _snackBarTimer == null) {\n          final SnackBar snackBar = _snackBars.first._widget;\n          _snackBarTimer = new Timer.periodic(snackBar.duration, (Timer timer) {\n            assert(_snackBarController.status == AnimationStatus.forward ||\n                   _snackBarController.status == AnimationStatus.completed);"
  },
  {
    "id" : "8f5a6ee4-6776-4482-8a6b-b9672fef6df8",
    "prId" : 21896,
    "prUrl" : "https://github.com/flutter/flutter/pull/21896#pullrequestreview-225238671",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef0b7e35-fc3f-44ef-b378-d11c8268220f",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I think we've stopped giving local constants like this a `_k` prefix.",
        "createdAt" : "2019-04-23T23:10:07Z",
        "updatedAt" : "2019-04-26T20:26:35Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "46095c0794cd5efa175e83635dde46b179de9729",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +40,44 @@// When the top of the BottomSheet crosses this threshold, it will start to\n// shrink the FAB and show a scrim.\nconst double _kBottomSheetDominatesPercentage = 0.3;\nconst double _kMinBottomSheetScrimOpacity = 0.1;\nconst double _kMaxBottomSheetScrimOpacity = 0.6;"
  },
  {
    "id" : "37d75689-1d4e-414e-856e-65c7ae3f27ee",
    "prId" : 21896,
    "prUrl" : "https://github.com/flutter/flutter/pull/21896#pullrequestreview-225238671",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91cfd0d7-6ae1-4f06-9065-40bfeffdbaf8",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Should really explain what it's based on (appbar preferred height plus the top padding)",
        "createdAt" : "2019-04-23T23:15:39Z",
        "updatedAt" : "2019-04-26T20:26:35Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "46095c0794cd5efa175e83635dde46b179de9729",
    "line" : 174,
    "diffHunk" : "@@ -1,1 +1293,1297 @@\n  double _appBarMaxHeight;\n  /// The max height the [Scaffold.appBar] uses.\n  ///\n  /// This is based on the appBar preferred height plus the top padding."
  },
  {
    "id" : "6191bb44-b068-4468-ad97-8496c883a731",
    "prId" : 23689,
    "prUrl" : "https://github.com/flutter/flutter/pull/23689#pullrequestreview-170009120",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "529c2673-e33c-45b7-b10c-11eb171e9751",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "A \"see also\" section that pointed at https://docs.flutter.io/flutter/material/ScaffoldState/openDrawer.html would be helpful.\r\n\r\nThe openDrawer() doc should similarly \"see also\" isDrawerOpen.",
        "createdAt" : "2018-10-30T21:33:58Z",
        "updatedAt" : "2018-10-31T21:05:50Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "724341ff0f2c613205fed16d2d8ca42d5ce366d0",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1046,1050 @@  bool _endDrawerOpened = false;\n\n  /// Whether the [Scaffold.drawer] is opened.\n  ///\n  /// See also:"
  },
  {
    "id" : "1508cabf-1cd5-47c8-9a02-86ba3dfe8002",
    "prId" : 23689,
    "prUrl" : "https://github.com/flutter/flutter/pull/23689#pullrequestreview-170471960",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c799f16e-3d1a-47c9-a76f-3c91c4b94133",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "The `[ScaffoldState.openDrawer]` will automatically generate a link to https://docs.flutter.io/flutter/material/ScaffoldState/openDrawer.html, so you can remove the explicit link here and below.",
        "createdAt" : "2018-10-31T21:02:01Z",
        "updatedAt" : "2018-10-31T21:05:50Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "431ca66c-609e-4e39-b2be-d6999a19e1a3",
        "parentId" : "c799f16e-3d1a-47c9-a76f-3c91c4b94133",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "Oh, ok cool!",
        "createdAt" : "2018-10-31T21:04:30Z",
        "updatedAt" : "2018-10-31T21:05:50Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      }
    ],
    "commit" : "724341ff0f2c613205fed16d2d8ca42d5ce366d0",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +1050,1054 @@  /// See also:\n  ///\n  ///   * [ScaffoldState.openDrawer], which opens the [Scaffold.drawer] of a\n  ///   [Scaffold].\n  bool get isDrawerOpen => _drawerOpened;"
  },
  {
    "id" : "b9e5b51b-8293-4117-8410-38ea3a56e515",
    "prId" : 26259,
    "prUrl" : "https://github.com/flutter/flutter/pull/26259#pullrequestreview-191896843",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5a40cdb-6748-41c4-ad42-7d59ae81dedc",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "`the device's keyboard appears, the Scaffold's ancestor [MediaQuery]`",
        "createdAt" : "2019-01-11T22:53:09Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "2280b08cea0e4d32c0d3876a84261396877199f2",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +709,713 @@/// The scaffold will expand to fill the available space. That usually\n/// means that it will occupy its entire window or device screen. When\n/// the device's keyboard appears the Scaffold's ancestor [MediaQuery]\n/// widget's [MediaQueryData.viewInsets] changes and the Scaffold will\n/// be rebuilt. By default the scaffold's [body] is resized to make"
  },
  {
    "id" : "9b201051-955d-4d9a-b356-9f74f6f636e7",
    "prId" : 26259,
    "prUrl" : "https://github.com/flutter/flutter/pull/26259#pullrequestreview-191898778",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4648189-2cfc-491b-998f-0cdae7d44c29",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I would think\r\n`room for the keyboard. To prevent the resize, set`\r\nbut my english is crappy so you decide",
        "createdAt" : "2019-01-11T22:53:54Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "fb8cf038-8554-4eff-9529-bba32b6fa64b",
        "parentId" : "a4648189-2cfc-491b-998f-0cdae7d44c29",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I'm not sure about the \"right\" comma usage here. If you think the comma makes it easier to understand, I'm happy to add one.",
        "createdAt" : "2019-01-11T23:01:33Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2280b08cea0e4d32c0d3876a84261396877199f2",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +712,716 @@/// widget's [MediaQueryData.viewInsets] changes and the Scaffold will\n/// be rebuilt. By default the scaffold's [body] is resized to make\n/// room for the keyboard. To prevent the resize set\n/// [resizeToAvoidBottomInset] to false. In either case the focused\n/// widget will be scrolled into view if it's within a scrollable"
  },
  {
    "id" : "5ad51098-6e39-4c63-a646-6129ee9211d0",
    "prId" : 26259,
    "prUrl" : "https://github.com/flutter/flutter/pull/26259#pullrequestreview-191898961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af3096f7-b0f0-4ffb-93ba-689540b32b75",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Is the [appBar] above the bottom of the MediaQueryData.viewInsets or is the [body] above the bottom of the MediaQueryData.viewInset?",
        "createdAt" : "2019-01-11T23:00:44Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "0073fc9c-049b-480a-b616-07577aa48b30",
        "parentId" : "af3096f7-b0f0-4ffb-93ba-689540b32b75",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It's the latter",
        "createdAt" : "2019-01-11T23:02:23Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2280b08cea0e4d32c0d3876a84261396877199f2",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +807,811 @@  /// The primary content of the scaffold.\n  ///\n  /// Displayed below the [appBar], above the bottom of the ambient\n  /// [MediaQuery]'s [MediaQueryData.viewInsets], and behind the\n  /// [floatingActionButton] and [drawer]. If [resizeToAvoidBottomInset] is"
  },
  {
    "id" : "ac354c90-ee4f-43a7-89ae-fcc3455aff5f",
    "prId" : 26259,
    "prUrl" : "https://github.com/flutter/flutter/pull/26259#pullrequestreview-191908345",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6471e9f0-8268-457a-9173-9db238583102",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Not super sure about the material specs. Should the FAB move too? Otherwise, should we qualify the 'floating widgets' doc above?",
        "createdAt" : "2019-01-11T23:07:28Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "8912a47d-b4ba-47c4-9141-56a0482652a4",
        "parentId" : "6471e9f0-8268-457a-9173-9db238583102",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The FAB does still move when the keyboard appears.",
        "createdAt" : "2019-01-11T23:53:28Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2280b08cea0e4d32c0d3876a84261396877199f2",
    "line" : 228,
    "diffHunk" : "@@ -1,1 +1700,1704 @@        removeBottomPadding: widget.bottomNavigationBar != null || widget.persistentFooterButtons != null,\n      );\n    }\n\n    if (widget.persistentFooterButtons != null) {"
  },
  {
    "id" : "c33f6e5b-b62a-4afa-978b-c2a8d7d5d5c5",
    "prId" : 26259,
    "prUrl" : "https://github.com/flutter/flutter/pull/26259#pullrequestreview-192423123",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d29f3ac-e867-44d7-9793-6a64c890390b",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Should this code snippet be wrapped by the [snippet tool](https://github.com/flutter/flutter/blob/65d3ddd5d12c5e78a1e3fca843043f99247efb55/dev/snippets/README.md) or at least be under a `## Sample Code` heading so the analyzer catches errors in this snippet?",
        "createdAt" : "2019-01-14T18:35:25Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "f117ae8e-422d-4000-93f4-acbac80c3475",
        "parentId" : "2d29f3ac-e867-44d7-9793-6a64c890390b",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I've put it under a sample code heading. I don't want to emphasize it as much the basic scaffold usage example so it's not a snippet.",
        "createdAt" : "2019-01-14T23:37:54Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2280b08cea0e4d32c0d3876a84261396877199f2",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +742,746 @@/// app's one and only scaffold is reset each time a new tab is selected.\n///\n/// ```dart\n/// tabController = TabController(vsync: tickerProvider, length: tabCount)..addListener(() {\n///   if (!tabController.indexIsChanging) {"
  },
  {
    "id" : "ec5c2aba-1852-47fe-b22d-a646baba5645",
    "prId" : 27973,
    "prUrl" : "https://github.com/flutter/flutter/pull/27973#pullrequestreview-204412341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fae45980-bcfd-4250-99d6-2cbd9149928a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we need to make sure we don't add so much that `bodyMaxHeight` ends up bigger than the height of the scaffold itself (minus contentTop).",
        "createdAt" : "2019-02-15T06:27:23Z",
        "updatedAt" : "2019-02-15T21:00:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "6fff1839-231c-4232-8b2b-4a42b71ce9b4",
        "parentId" : "fae45980-bcfd-4250-99d6-2cbd9149928a",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The arithmetic is supposed to guarantee that so I've added an assert to protect against back sliding.",
        "createdAt" : "2019-02-15T19:51:28Z",
        "updatedAt" : "2019-02-15T21:00:14Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab1331293da957861dd21af1ca47fb0a8515e8b2",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +420,424 @@\n      if (extendBody) {\n        bodyMaxHeight += bottomWidgetsHeight;\n        assert(bodyMaxHeight <= math.max(0.0, looseConstraints.maxHeight - contentTop));\n      }"
  },
  {
    "id" : "7b874d23-4365-4d96-b828-0ee848e6bcca",
    "prId" : 27973,
    "prUrl" : "https://github.com/flutter/flutter/pull/27973#pullrequestreview-204414020",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70087968-676b-4d0e-9c19-b24e3f16d15e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "might be good to make this true by default...",
        "createdAt" : "2019-02-15T06:28:46Z",
        "updatedAt" : "2019-02-15T21:00:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "75629a88-82d8-4aa1-b2ce-fe1c6dc89b3b",
        "parentId" : "70087968-676b-4d0e-9c19-b24e3f16d15e",
        "authorId" : "7e9cf01c-f1c9-4e50-a6b1-ec254c3b3b8e",
        "body" : "I set this value to “false” because I was afraid to break existing projects. Backward compatibility 💯 ",
        "createdAt" : "2019-02-15T17:40:00Z",
        "updatedAt" : "2019-02-15T21:00:14Z",
        "lastEditedBy" : "7e9cf01c-f1c9-4e50-a6b1-ec254c3b3b8e",
        "tags" : [
        ]
      },
      {
        "id" : "825fd873-5b37-4923-a088-0c3f8d95affa",
        "parentId" : "70087968-676b-4d0e-9c19-b24e3f16d15e",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I agree. If we made extendBody true by default it would break some existing layouts.",
        "createdAt" : "2019-02-15T19:55:35Z",
        "updatedAt" : "2019-02-15T21:00:14Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab1331293da957861dd21af1ca47fb0a8515e8b2",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +878,882 @@    this.resizeToAvoidBottomInset,\n    this.primary = true,\n    this.extendBody = false,\n    this.drawerDragStartBehavior = DragStartBehavior.down,\n  }) : assert(primary != null),"
  },
  {
    "id" : "b2d8fe58-92f4-4daa-aa27-99331b1e4103",
    "prId" : 27973,
    "prUrl" : "https://github.com/flutter/flutter/pull/27973#pullrequestreview-204412704",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6a38395-5f08-4c4b-ad13-009369e5fa28",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i wonder if this is really correct in all cases...",
        "createdAt" : "2019-02-15T06:29:39Z",
        "updatedAt" : "2019-02-15T21:00:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "685290cc-d515-4a3f-8586-b48c52746a45",
        "parentId" : "e6a38395-5f08-4c4b-ad13-009369e5fa28",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The value of `minInsets.bottom` is just the media query's value of  viewInsets.bottom (unless resizeToAvoidBottomInsets is false). It doesn't guarantee that the keyboard is up however if someone were to configure a MediaQuery that way we'd react the same was as if the keyboard is up.\r\n\r\nI think this is OK, albeit complicated: we don't extend the bottom of the body if resizeToAvoidBottomInsets is true (the default) and viewInsets.bottom is non-zero.",
        "createdAt" : "2019-02-15T19:52:18Z",
        "updatedAt" : "2019-02-15T21:00:14Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab1331293da957861dd21af1ca47fb0a8515e8b2",
    "line" : 158,
    "diffHunk" : "@@ -1,1 +1913,1917 @@\n    // extendBody locked when keyboard is open\n    final bool _extendBody = minInsets.bottom > 0 ? false : widget.extendBody;\n\n    return _ScaffoldScope("
  },
  {
    "id" : "f98d22f5-b789-45bf-97bf-cff996a2c033",
    "prId" : 31025,
    "prUrl" : "https://github.com/flutter/flutter/pull/31025#pullrequestreview-231301066",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "312eb592-6ef3-4784-81f2-43cf3bc5acdd",
        "parentId" : null,
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "Same comment about a line break between the first sentence and the rest.",
        "createdAt" : "2019-04-26T18:27:10Z",
        "updatedAt" : "2019-05-01T19:51:49Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      },
      {
        "id" : "158048a7-4077-4d45-979a-665264b00864",
        "parentId" : "312eb592-6ef3-4784-81f2-43cf3bc5acdd",
        "authorId" : "75aa2938-23a3-4db7-a013-d205cf976b60",
        "body" : "done",
        "createdAt" : "2019-04-26T18:30:27Z",
        "updatedAt" : "2019-05-01T19:51:49Z",
        "lastEditedBy" : "75aa2938-23a3-4db7-a013-d205cf976b60",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c7f90c61e84d1cc40b822ddd47b1bdcc133a1d9",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +988,992 @@  /// The color to use for the scrim that obscures primary content while a drawer is open.\n  ///\n  /// By default, the color is [Colors.black54]\n  final Color drawerScrimColor;\n"
  }
]