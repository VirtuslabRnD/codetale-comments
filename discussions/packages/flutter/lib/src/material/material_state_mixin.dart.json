[
  {
    "id" : "e2df028e-ae5e-4909-8b50-25f07e2a84ea",
    "prId" : 82843,
    "prUrl" : "https://github.com/flutter/flutter/pull/82843#pullrequestreview-662540231",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "986e25f9-e16d-4da5-806c-5745c9865cc5",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe `@optionalTypeArgs`",
        "createdAt" : "2021-05-18T20:29:23Z",
        "updatedAt" : "2021-05-18T20:33:50Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "acde453e4fef8d684a0225876e69a776876d069b",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +49,53 @@/// {@end-tool}\n@optionalTypeArgs\nmixin MaterialStateMixin<T extends StatefulWidget> on State<T> {\n  /// Managed set of active [MaterialState] values; designed to be passed to\n  /// [MaterialStateProperty.resolve] methods."
  },
  {
    "id" : "8e7fdaad-d232-454f-8494-ed5e33ff5b45",
    "prId" : 82843,
    "prUrl" : "https://github.com/flutter/flutter/pull/82843#pullrequestreview-673572670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6053ce2c-4588-44be-8b9a-9ca3ff8c4c07",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Do we need to invoke the `callback` even if this is true?",
        "createdAt" : "2021-05-18T20:31:50Z",
        "updatedAt" : "2021-05-18T20:33:50Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "f99a5ad6-c93d-4dd3-a192-6f535dc19e7c",
        "parentId" : "6053ce2c-4588-44be-8b9a-9ca3ff8c4c07",
        "authorId" : "0a86bb75-ff4d-497d-b1b7-8c208845fa56",
        "body" : "This is a good question. My intuition was/is that we do not, but I obviously could be wrong. If an item is currently _pressed_ or _hovered_, etc, re-entering that same state should both be uninteresting and, even worse, a bug.\r\n\r\nIf there are any known edge cases that imply re-entering a state is both intended and correct, then I think the answer to your question would change to a strong _Yes_.",
        "createdAt" : "2021-05-25T17:33:59Z",
        "updatedAt" : "2021-05-25T17:53:54Z",
        "lastEditedBy" : "0a86bb75-ff4d-497d-b1b7-8c208845fa56",
        "tags" : [
        ]
      },
      {
        "id" : "dc7735ea-eb30-4466-937d-2ccff166510f",
        "parentId" : "6053ce2c-4588-44be-8b9a-9ca3ff8c4c07",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "If re-entering that same state is a bug, then we should assert here if that happens. I am not sure if it is, though. A button could be in the pressed state already (because a finger is touching it) and now a second finger comes down sending it again into the pressed state it is already in. I don't think this is a bug.\r\n\r\nMaybe we can just document on the method that the callback only executes if a change in MaterialState occurs? ",
        "createdAt" : "2021-06-01T21:08:11Z",
        "updatedAt" : "2021-06-01T21:21:11Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "c1de4f9b-f413-403f-8299-52937099313d",
        "parentId" : "6053ce2c-4588-44be-8b9a-9ca3ff8c4c07",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe we should rename it from `callback` to `onChanged` to make it clear when this fires. ",
        "createdAt" : "2021-06-01T21:18:23Z",
        "updatedAt" : "2021-06-01T21:21:11Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "acde453e4fef8d684a0225876e69a776876d069b",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +109,113 @@  ValueChanged<bool> updateMaterialState(MaterialState key, {ValueChanged<bool>? onChanged}) {\n    return (bool value) {\n      if (materialStates.contains(key) == value)\n        return;\n      setMaterialState(key, value);"
  },
  {
    "id" : "aefc1d13-ac44-43bd-90c2-52aa490e973a",
    "prId" : 82843,
    "prUrl" : "https://github.com/flutter/flutter/pull/82843#pullrequestreview-673572670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d80d6f78-aef1-490a-acea-41e483ec7785",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: between line 21 and 22 add a brief explanation of what this example show cases.",
        "createdAt" : "2021-06-01T20:57:27Z",
        "updatedAt" : "2021-06-01T21:21:11Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "acde453e4fef8d684a0225876e69a776876d069b",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +23,27 @@/// [MaterialStateMixin] class to watch [MaterialState] values.\n///\n/// ```dart\n/// class MyWidget extends StatefulWidget {\n///   const MyWidget({required this.color, required this.child, Key? key}) : super(key: key);"
  },
  {
    "id" : "ccbd3d91-7447-4e2e-8762-b8466b47b963",
    "prId" : 82843,
    "prUrl" : "https://github.com/flutter/flutter/pull/82843#pullrequestreview-673572670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d4bb0c3-9f26-40c5-9a69-798a84ffebdb",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: add a blank line before this line to separate the fields from the constructor.",
        "createdAt" : "2021-06-01T20:58:25Z",
        "updatedAt" : "2021-06-01T21:21:11Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "acde453e4fef8d684a0225876e69a776876d069b",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +27,31 @@///   const MyWidget({required this.color, required this.child, Key? key}) : super(key: key);\n///\n///   final MaterialStateColor color;\n///   final Widget child;\n///"
  },
  {
    "id" : "27503774-50a9-44ca-86c6-17fd1907d490",
    "prId" : 82843,
    "prUrl" : "https://github.com/flutter/flutter/pull/82843#pullrequestreview-673572670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be40c8cd-7279-4d10-bd7e-bb9d4f6148ac",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: add a blank line before this one?",
        "createdAt" : "2021-06-01T20:58:40Z",
        "updatedAt" : "2021-06-01T21:21:11Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "acde453e4fef8d684a0225876e69a776876d069b",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +30,34 @@///   final Widget child;\n///\n///   @override\n///   State<MyWidget> createState() => MyWidgetState();\n/// }"
  },
  {
    "id" : "b50f9f35-46d8-47e5-99b7-1a3a7c702209",
    "prId" : 82843,
    "prUrl" : "https://github.com/flutter/flutter/pull/82843#pullrequestreview-673572670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5bc3d217-6228-482f-81d7-af370ed17781",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: add a blank line before this?",
        "createdAt" : "2021-06-01T21:00:41Z",
        "updatedAt" : "2021-06-01T21:21:11Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "acde453e4fef8d684a0225876e69a776876d069b",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +82,86 @@  ///   final VoidCallback? onPressed;\n  ///\n  ///   @override\n  ///   State<MyWidget> createState() => MyWidgetState();\n  /// }"
  },
  {
    "id" : "abc82e2f-43a0-4bb3-af04-0f7787a5eac0",
    "prId" : 82843,
    "prUrl" : "https://github.com/flutter/flutter/pull/82843#pullrequestreview-673572670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1beb94b2-20b0-44a0-be85-98c1aaadc573",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Most (all?) members of this mixin could probably be marked as `@protected`?",
        "createdAt" : "2021-06-01T21:21:03Z",
        "updatedAt" : "2021-06-01T21:21:11Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "acde453e4fef8d684a0225876e69a776876d069b",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +61,65 @@  /// [isFocused], etc, are available for each [MaterialState] value.\n  @protected\n  Set<MaterialState> materialStates = <MaterialState>{};\n\n  /// Callback factory which accepts a [MaterialState] value and returns a"
  }
]