[
  {
    "id" : "3ee8da40-750f-464c-941f-bf62b808be71",
    "prId" : 59702,
    "prUrl" : "https://github.com/flutter/flutter/pull/59702#pullrequestreview-438563841",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a0f1203-66bc-4bd3-b739-0e72edb4bcf1",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "While it is typically used instead of the textStyle color, when is it not? Might be good to specify when it is and isn't (unless it is more confusing to explain than use :smile:).",
        "createdAt" : "2020-06-25T18:40:41Z",
        "updatedAt" : "2020-07-09T15:54:00Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "8eaba900-d594-470d-9218-1a9828a5d62d",
        "parentId" : "6a0f1203-66bc-4bd3-b739-0e72edb4bcf1",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I qualified a bunch of the API doc in this class with \"typically\" because it's up to the subclasses and even though the subclasses I've defined are typical, there's no reason to assume that all subclasses will be.",
        "createdAt" : "2020-06-26T20:05:29Z",
        "updatedAt" : "2020-07-09T15:54:00Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d129af7f63046eba59cb205d0c73a398f70180",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +130,134 @@  /// The color for the button's [Text] and [Icon] widget descendants.\n  ///\n  /// This color is typically used instead of the color of the [textStyle]. All\n  /// of the components that compute defaults from [ButtonStyle] values\n  /// compute a default [foregroundColor] and use that instead of the"
  },
  {
    "id" : "341fc114-f90e-4a96-9b66-f31cac26b8a9",
    "prId" : 59702,
    "prUrl" : "https://github.com/flutter/flutter/pull/59702#pullrequestreview-438565681",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fe0a914-131f-4568-b025-32eff57908a5",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Is this necessary with the `other is ButtonStyle` check below?",
        "createdAt" : "2020-06-25T18:46:48Z",
        "updatedAt" : "2020-07-09T15:54:00Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "07772e36-95fd-4359-bf35-1a79c6ac6d39",
        "parentId" : "8fe0a914-131f-4568-b025-32eff57908a5",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I think the two tests mean something slightly different. This test proves that `this` and `other` have the exact same type.  The `other is ButtonStyle` is weaker, since other could be a ButtonStyle subclass.",
        "createdAt" : "2020-06-26T20:09:06Z",
        "updatedAt" : "2020-07-09T15:54:00Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d129af7f63046eba59cb205d0c73a398f70180",
    "line" : 303,
    "diffHunk" : "@@ -1,1 +301,305 @@    if (identical(this, other))\n      return true;\n    if (other.runtimeType != runtimeType)\n      return false;\n    return other is ButtonStyle"
  },
  {
    "id" : "f34ea553-9aba-4748-90dc-5431a48595b2",
    "prId" : 59702,
    "prUrl" : "https://github.com/flutter/flutter/pull/59702#pullrequestreview-438645751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e59da1fe-aeb9-4e28-b459-e9bd4e153d46",
        "parentId" : null,
        "authorId" : "b6f5d261-bce5-4ac7-8548-424662f5f751",
        "body" : "```dart\r\n      mouseCursor: t < 0.5 ? a.mouseCursor : b.mouseCursor,\r\n```\r\n\r\nShould we make a function for this pattern?",
        "createdAt" : "2020-06-26T14:17:06Z",
        "updatedAt" : "2020-07-09T15:54:00Z",
        "lastEditedBy" : "b6f5d261-bce5-4ac7-8548-424662f5f751",
        "tags" : [
        ]
      },
      {
        "id" : "bea3755a-cce0-4b98-9233-8baf66b88630",
        "parentId" : "e59da1fe-aeb9-4e28-b459-e9bd4e153d46",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It's true that it's very common, however I'm not sure a function call would make it easier to read. If we were going to use a function for this kind of lerp statement, we'd have to apply it across the whole framework. That would be a different PR.",
        "createdAt" : "2020-06-26T23:36:49Z",
        "updatedAt" : "2020-07-09T15:54:00Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d129af7f63046eba59cb205d0c73a398f70180",
    "line" : 363,
    "diffHunk" : "@@ -1,1 +361,365 @@      tapTargetSize: t < 0.5 ? a.tapTargetSize : b.tapTargetSize,\n      animationDuration: t < 0.5 ? a.animationDuration : b.animationDuration,\n      enableFeedback: t < 0.5 ? a.enableFeedback : b.enableFeedback,\n    );\n  }"
  },
  {
    "id" : "8093182e-8ae7-4d34-a190-5505806964e2",
    "prId" : 67166,
    "prUrl" : "https://github.com/flutter/flutter/pull/67166#pullrequestreview-502246932",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "798bba75-7d64-46cb-ad86-a92772d89868",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "@HansMuller this double-level of nullness looks suspicious, is it what we want?",
        "createdAt" : "2020-10-02T23:40:16Z",
        "updatedAt" : "2020-10-06T08:42:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "67bf115d-8cf5-47d9-9768-da11f5736665",
        "parentId" : "798bba75-7d64-46cb-ad86-a92772d89868",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Yes, this is correct. If specified (if non-null), properties like textStyle can resolve to `TextStyle?`.  If the MSP is null,  then the style does not override the default textStyle. If the MSP is non-null, it can resolve to null for the subset of MaterialStates that it does not override.\r\n",
        "createdAt" : "2020-10-05T16:56:08Z",
        "updatedAt" : "2020-10-06T08:42:38Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "691cd371cae3549beed8ae44586aa60c3463bdb9",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +121,125 @@  /// The color of the [textStyle] is typically not used directly, the\n  /// [foregroundColor] is used instead.\n  final MaterialStateProperty<TextStyle?>? textStyle;\n\n  /// The button's background fill color."
  }
]