[
  {
    "id" : "272e3490-7de4-4687-a303-ab70c433214c",
    "prId" : 2170,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b45f860-4951-44ed-b6be-310b367b8790",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this is O(N) which seems bad (consider lists that have thousands of items)\n",
        "createdAt" : "2016-02-25T21:21:59Z",
        "updatedAt" : "2016-02-26T00:17:05Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "fa03cf00-5851-4338-99e4-51bc60b07295",
        "parentId" : "6b45f860-4951-44ed-b6be-310b367b8790",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I agree that it's possible, when we have scrolling popup menus, for lists to have thousands of items.  I'll file an issue about addressing this. \n\nSee #2202\n",
        "createdAt" : "2016-02-25T22:33:02Z",
        "updatedAt" : "2016-02-26T00:26:10Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1df2bd7c07493cb254659e83f19d16ef2005f9d",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +212,216 @@  Widget buildPage(BuildContext context, Animation<double> animation, Animation<double> forwardAnimation) {\n    int selectedIndex = -1;\n    if (initialValue != null) {\n      for (int i = 0; i < items.length; i++)\n        if (initialValue == items[i].value) {"
  },
  {
    "id" : "afdf2506-f744-4ed7-8e22-459df5bb70c8",
    "prId" : 2170,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f6940a5-7aa3-41ab-8014-b7469c454098",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "please use constants for the values in this method\n",
        "createdAt" : "2016-02-25T21:22:23Z",
        "updatedAt" : "2016-02-26T00:17:05Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1df2bd7c07493cb254659e83f19d16ef2005f9d",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +158,162 @@  // specified parent size padded (inset) by 8. If necessary, adjust the child's\n  // position so that it fits.\n  Offset getPositionForChild(Size size, Size childSize) {\n    double x = position?.left\n      ?? (position?.right != null ? size.width - (position.right + childSize.width) : _kMenuScreenPadding);"
  },
  {
    "id" : "6f490256-1c65-4614-b0fa-ebb0fe901ed1",
    "prId" : 2216,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11d55bbd-380e-40b4-9653-9cfe7cee1e17",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "maybe assert that the value isn't null if the item is enabled?\n",
        "createdAt" : "2016-02-26T20:14:22Z",
        "updatedAt" : "2016-02-26T21:14:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ed8e4116-3676-4b1a-9a0d-9483f9b4d194",
        "parentId" : "11d55bbd-380e-40b4-9653-9cfe7cee1e17",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "That sounds like a good mistake catcher.  Will do.\n",
        "createdAt" : "2016-02-26T20:25:44Z",
        "updatedAt" : "2016-02-26T21:14:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d377305f4f253840c416aae266aeb02ba08ecde",
    "line" : null,
    "diffHunk" : "@@ -1,1 +34,38 @@    this.hasDivider: false,\n    this.child\n  }) : super(key: key);\n\n  final T value;"
  },
  {
    "id" : "2d3d9c35-0670-4643-b998-286f2ddf4496",
    "prId" : 2426,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a4ccb19-41bc-49f2-af4d-4c47a70eea34",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "You can probably get away with having an empty PopupMenuEntry state that everyone uses except `CheckedPopupMenuItem`. Something like:\n\n``` dart\nclass PopupMenuEntryState<T, U extends PopupMenuEntry<T>> extends State<U> {\n  Widget build(BuildContext context) => config.build(context);\n}\n```\n\nThen in PopupMenuEntry:\n\n``` dart\n  PopupMenuEntryState<T, PopupMenuEntry> createState() => new PopupMenuEntryState<T, PopupMenuEntry>();\n```\n\nThen all the build functions can stay on the components, no need for any states except CheckedPopupMenuItem, which would do:\n\n``` dart\n  _CheckedPopupMenuItemState<T> createState() => new _CheckedPopupMenuItemState<T>();\n```\n\n...and _CheckedPopupMenuItemState would be defined as:\n\n``` dart\nclass _CheckedPopupMenuItemState<T> extends PopupMenuEntryState<T, CheckedPopupMenuItem<T>> { ... }\n```\n",
        "createdAt" : "2016-03-08T22:33:35Z",
        "updatedAt" : "2016-03-08T22:50:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3565cce8-2cfa-44a6-a20c-605505c5bb38",
        "parentId" : "6a4ccb19-41bc-49f2-af4d-4c47a70eea34",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Well I guess the PopupMenuEntryState would be a bit more complex. It has to introduce the InkWell. The onTap handler would be in there too.\n",
        "createdAt" : "2016-03-08T22:34:58Z",
        "updatedAt" : "2016-03-08T22:50:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a27da8e6-88ee-4467-9ab2-6ac61973ec63",
        "parentId" : "6a4ccb19-41bc-49f2-af4d-4c47a70eea34",
        "authorId" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "body" : "Yeah, given this, I don't think it's worth trying to be clever with the State object. It would only be used by the Divider.\n",
        "createdAt" : "2016-03-08T22:44:28Z",
        "updatedAt" : "2016-03-08T22:50:31Z",
        "lastEditedBy" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "tags" : [
        ]
      }
    ],
    "commit" : "643ab478ffffa7f337ab7850d701742f46470d60",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +46,50 @@\nclass _PopupMenuDividerState extends State<PopupMenuDivider> {\n  Widget build(BuildContext context) => new Divider(height: config.height);\n}\n"
  },
  {
    "id" : "e7b86487-d6bb-44f1-a842-af169f0f9281",
    "prId" : 3702,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21f89867-20dd-49d8-abe0-37f71ed61d84",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "should probably talk about `T` here\n",
        "createdAt" : "2016-05-03T21:06:44Z",
        "updatedAt" : "2016-05-03T21:40:53Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b135aa0196c7dd675d1e414e93d6dc3af0ebde4e",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +46,50 @@///  * [showMenu]\n///  * [PopupMenuButton]\nabstract class PopupMenuEntry<T> extends StatefulWidget {\n  /// Abstract const constructor. This constructor enables subclasses to provide\n  /// const constructors so that they can be used in const expressions."
  },
  {
    "id" : "02d4ddd9-b372-496c-a22f-6af389dcb84f",
    "prId" : 6132,
    "prUrl" : "https://github.com/flutter/flutter/pull/6132#pullrequestreview-2050696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "363e0b14-74dc-466e-8bca-5070ae6b0069",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "when you add code like this, add trailing commas :-)\n",
        "createdAt" : "2016-09-28T23:42:10Z",
        "updatedAt" : "2016-09-29T22:19:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f933e96bf499b9369536439719798c8acb43d214",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +376,380 @@    this.initialValue,\n    this.elevation,\n    this.theme\n  }) : super(completer: completer);\n"
  },
  {
    "id" : "9885bb2f-fd89-45d9-b21f-e625b19e8122",
    "prId" : 13110,
    "prUrl" : "https://github.com/flutter/flutter/pull/13110#pullrequestreview-77946889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18e98292-9adb-4bd3-b186-9a4257c15d5a",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2017-11-20T22:40:01Z",
        "updatedAt" : "2017-11-22T00:15:47Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c02eb14347fe5667588b11d7cf9573d1838a4f4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +448,452 @@            elevation: route.elevation,\n            child: new Align(\n              alignment: AlignmentDirectional.topEnd,\n              widthFactor: width.evaluate(route.animation),\n              heightFactor: height.evaluate(route.animation),"
  },
  {
    "id" : "efe5deef-67a4-42f4-b594-c273e7359202",
    "prId" : 13110,
    "prUrl" : "https://github.com/flutter/flutter/pull/13110#pullrequestreview-210335242",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19936cf9-3f82-4338-8b91-d2ae32fa3a7c",
        "parentId" : null,
        "authorId" : "ed0e58d8-9a7e-4a24-9c2a-21642a925e26",
        "body" : "Could you explain why you need to add `(size.height - position.top - position.bottom) / 2.0` to the top offset? It makes my popup menu showing at a wrong place...",
        "createdAt" : "2019-03-01T16:38:24Z",
        "updatedAt" : "2019-03-01T16:38:24Z",
        "lastEditedBy" : "ed0e58d8-9a7e-4a24-9c2a-21642a925e26",
        "tags" : [
        ]
      },
      {
        "id" : "6367593f-413b-45f5-919f-f8fe5dfedc33",
        "parentId" : "19936cf9-3f82-4338-8b91-d2ae32fa3a7c",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "If you're seeing a problem with popup menus, please open a new issue and include a small test case that demos the problem. Happy to take a look!",
        "createdAt" : "2019-03-04T19:52:01Z",
        "updatedAt" : "2019-03-04T19:52:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c02eb14347fe5667588b11d7cf9573d1838a4f4",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +498,502 @@      y = position.top;\n    } else {\n      y = position.top + (size.height - position.top - position.bottom) / 2.0 - selectedItemOffset;\n    }\n"
  },
  {
    "id" : "c71f4070-0b7a-4a6c-8f0f-4965107326c3",
    "prId" : 22534,
    "prUrl" : "https://github.com/flutter/flutter/pull/22534#pullrequestreview-160519754",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cc1f354-38f5-4311-9b8d-13058454e59e",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Describe what this offset does and document that the default value is zero.",
        "createdAt" : "2018-10-01T22:31:32Z",
        "updatedAt" : "2018-10-02T17:29:55Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "7f49b093-e77b-409f-bff1-eaba919a3488",
        "parentId" : "6cc1f354-38f5-4311-9b8d-13058454e59e",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "It's the offset applied to the popupMenu and not the button right?\r\n\r\n```\r\nThe offset applied to the popup menu, relative to the button that opens it.\r\n\r\nDefaults to [Offset.zero].\r\n```",
        "createdAt" : "2018-10-01T23:13:12Z",
        "updatedAt" : "2018-10-02T17:29:55Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ce1ae3fc73a2668c48fc7dcf9b2211064d785a8",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +871,875 @@  /// When not set, the Popup Menu Button will be positioned directly next to\n  /// the button that was used to create it.\n  final Offset offset;\n\n  @override"
  },
  {
    "id" : "72b3396f-6491-4dfe-866a-be965ed65b69",
    "prId" : 22534,
    "prUrl" : "https://github.com/flutter/flutter/pull/22534#pullrequestreview-160510692",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3fdfb2e6-a2e1-4a93-b602-b859001bca59",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "assert(offset != null)",
        "createdAt" : "2018-10-01T22:31:58Z",
        "updatedAt" : "2018-10-02T17:29:55Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ce1ae3fc73a2668c48fc7dcf9b2211064d785a8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +822,826 @@    this.icon,\n    this.offset = Offset.zero,\n  }) : assert(itemBuilder != null),\n       assert(offset != null),\n       assert(!(child != null && icon != null)), // fails if passed both parameters"
  },
  {
    "id" : "22e5ecde-7c11-49ee-af33-8a8a6aea7196",
    "prId" : 36088,
    "prUrl" : "https://github.com/flutter/flutter/pull/36088#pullrequestreview-266014010",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a09073f4-4074-4f3a-9bda-445be504f8c9",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Describe what the shape would be if `PopupMenuThemeData.shape` was null as well.",
        "createdAt" : "2019-07-23T22:47:45Z",
        "updatedAt" : "2019-07-25T21:49:49Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "29e3c04d-8153-4078-9187-31312833ac0d",
        "parentId" : "a09073f4-4074-4f3a-9bda-445be504f8c9",
        "authorId" : "a031253c-c21c-451d-9c3c-34c4929e82ee",
        "body" : "Done",
        "createdAt" : "2019-07-24T13:21:39Z",
        "updatedAt" : "2019-07-25T21:49:49Z",
        "lastEditedBy" : "a031253c-c21c-451d-9c3c-34c4929e82ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "00cd48f6062f5317b4cb81bb8c02c4acc782b58f",
    "line" : 136,
    "diffHunk" : "@@ -1,1 +929,933 @@  /// If provided, the shape used for the menu.\n  ///\n  /// If this property is null, then [PopupMenuThemeData.shape] is used.\n  /// If [PopupMenuThemeData.shape] is also null, then the default shape for\n  /// [MaterialType.card] is used. This default shape is a rectangle with"
  },
  {
    "id" : "1b8bda15-cf40-4487-92a4-5501abe37324",
    "prId" : 36088,
    "prUrl" : "https://github.com/flutter/flutter/pull/36088#pullrequestreview-266014062",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3510d59e-8d0b-446e-9697-8440f694d644",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Describe what the color would be if `PopupMenuThemeData.color` was null as well.",
        "createdAt" : "2019-07-23T22:48:03Z",
        "updatedAt" : "2019-07-25T21:49:49Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "3ecc64ac-e7d3-474a-a3c3-2ce2f2d32daa",
        "parentId" : "3510d59e-8d0b-446e-9697-8440f694d644",
        "authorId" : "a031253c-c21c-451d-9c3c-34c4929e82ee",
        "body" : "Done",
        "createdAt" : "2019-07-24T13:21:44Z",
        "updatedAt" : "2019-07-25T21:49:49Z",
        "lastEditedBy" : "a031253c-c21c-451d-9c3c-34c4929e82ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "00cd48f6062f5317b4cb81bb8c02c4acc782b58f",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +937,941 @@  /// If provided, the background color used for the menu.\n  ///\n  /// If this property is null, then [PopupMenuThemeData.color] is used.\n  /// If [PopupMenuThemeData.color] is also null, then\n  /// Theme.of(context).cardColor is used."
  },
  {
    "id" : "0cabdb3a-15b9-4810-8b87-d2db0f3566cf",
    "prId" : 40179,
    "prUrl" : "https://github.com/flutter/flutter/pull/40179#pullrequestreview-288859448",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e4a7282-e13f-47cd-971a-b1d2f780f3a8",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Why does the offset have to be set to zero here? I would assume that this would default to zero, but I'm unsure how this is set otherwise.",
        "createdAt" : "2019-09-16T17:42:30Z",
        "updatedAt" : "2019-09-16T22:54:54Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "55cba35a-b5d9-4ecc-b1fc-c56e903c33bc",
        "parentId" : "4e4a7282-e13f-47cd-971a-b1d2f780f3a8",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Even if it's zero by default; it seems helpful to make it clear that the child's origin aligns with the parent's origin.",
        "createdAt" : "2019-09-16T19:48:17Z",
        "updatedAt" : "2019-09-16T22:54:54Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "98e7e0e9d7e38a6b38880716594b751a37f4d498",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +160,164 @@    }\n    final BoxParentData childParentData = child.parentData;\n    childParentData.offset = Offset.zero;\n    onLayout(size);\n  }"
  },
  {
    "id" : "d289a9fc-a0ae-4603-9401-dc6a15b2036a",
    "prId" : 42613,
    "prUrl" : "https://github.com/flutter/flutter/pull/42613#pullrequestreview-301475081",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f73ea5e6-4bc3-4cbd-89bf-cdea7c87ded4",
        "parentId" : null,
        "authorId" : "fbfaede7-9765-47a5-9c89-a50b6a8c0b52",
        "body" : "Potentially this is simply personal preference. If you want, you can just revert this if you are a maintainer.",
        "createdAt" : "2019-10-13T14:51:20Z",
        "updatedAt" : "2019-10-15T15:56:00Z",
        "lastEditedBy" : "fbfaede7-9765-47a5-9c89-a50b6a8c0b52",
        "tags" : [
        ]
      },
      {
        "id" : "d0443c0b-0eec-4f09-80b7-178b9b66f9f9",
        "parentId" : "f73ea5e6-4bc3-4cbd-89bf-cdea7c87ded4",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I believe this makes sense. It would necessarily be a breaking change since an assert statement was added (I would imagine some developers might have mistakenly defined both and this would break their application upon upgrade)",
        "createdAt" : "2019-10-14T16:36:14Z",
        "updatedAt" : "2019-10-15T15:56:00Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "16561257-6b4b-4001-84b0-e69657b74dc5",
        "parentId" : "f73ea5e6-4bc3-4cbd-89bf-cdea7c87ded4",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Also, it might be worth adding a regression test ensuring that an error is thrown when both have been defined. ",
        "createdAt" : "2019-10-14T16:54:11Z",
        "updatedAt" : "2019-10-15T15:56:00Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "c3a6c9a1-0179-46f2-9b9e-0ddf5941dbe6",
        "parentId" : "f73ea5e6-4bc3-4cbd-89bf-cdea7c87ded4",
        "authorId" : "fbfaede7-9765-47a5-9c89-a50b6a8c0b52",
        "body" : "It is not a **new** `assert`, sorry for the confusion. I only moved the description of the assertion from a comment into the `assert` call.",
        "createdAt" : "2019-10-14T18:35:57Z",
        "updatedAt" : "2019-10-15T15:56:00Z",
        "lastEditedBy" : "fbfaede7-9765-47a5-9c89-a50b6a8c0b52",
        "tags" : [
        ]
      }
    ],
    "commit" : "7cd1028d2618d595c2b8bb0f852d913436de19e5",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +942,946 @@       assert(captureInheritedThemes != null),\n       assert(!(child != null && icon != null),\n           'You can only pass [child] or [icon], not both.'),\n       super(key: key);\n"
  },
  {
    "id" : "b039ec1c-a064-406e-a498-114a7a8bfaa7",
    "prId" : 67477,
    "prUrl" : "https://github.com/flutter/flutter/pull/67477#pullrequestreview-504082703",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40c9b6b3-f0e4-4a36-b991-42c1058686b5",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Aww, I'm jealous: I haven't found a reason to use `Never` yet!",
        "createdAt" : "2020-10-07T16:55:00Z",
        "updatedAt" : "2020-10-07T16:57:32Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fdb91073502eafdf33151c01ee952301ab9e8ec",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +97,101 @@///  * [PopupMenuButton], an [IconButton] that automatically shows a menu when\n///    it is tapped.\nclass PopupMenuDivider extends PopupMenuEntry<Never> {\n  /// Creates a horizontal divider for a popup menu.\n  ///"
  },
  {
    "id" : "e08eb8d4-b633-4df3-9f5d-0532a0b9a86f",
    "prId" : 69383,
    "prUrl" : "https://github.com/flutter/flutter/pull/69383#pullrequestreview-520488282",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60ff9d66-e09e-49aa-aee7-44c08fee6d1a",
        "parentId" : null,
        "authorId" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "body" : "I'm pretty sure we also need to move the `bottomRight`, otherwise, if the `offset` bigger than the button size, it has a wrong offset, which was tested at the following test.",
        "createdAt" : "2020-10-30T09:14:54Z",
        "updatedAt" : "2020-10-31T02:54:48Z",
        "lastEditedBy" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "tags" : [
        ]
      }
    ],
    "commit" : "33ce7881d63dc9549a47e614c491631626e5621a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1054,1058 @@      Rect.fromPoints(\n        button.localToGlobal(widget.offset, ancestor: overlay),\n        button.localToGlobal(button.size.bottomRight(Offset.zero) + widget.offset, ancestor: overlay),\n      ),\n      Offset.zero & overlay.size,"
  },
  {
    "id" : "783aa328-ae7c-4056-b9aa-90c4ade0277a",
    "prId" : 69890,
    "prUrl" : "https://github.com/flutter/flutter/pull/69890#pullrequestreview-532923553",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b663b251-7316-4e19-8385-7db89515d655",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "indentation\r\n```dart    \r\nfinal bool enableFeedback = widget.enableFeedback\r\n  ?? PopupMenuTheme.of(context).enableFeedback\r\n  ?? true;\r\n```",
        "createdAt" : "2020-11-18T00:30:52Z",
        "updatedAt" : "2020-11-19T04:23:48Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "bcf47818cd9e9452cca06249a415b78fcd5be548",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +1121,1125 @@  @override\n  Widget build(BuildContext context) {\n    final bool enableFeedback = widget.enableFeedback\n      ?? PopupMenuTheme.of(context).enableFeedback\n      ?? true;"
  },
  {
    "id" : "c7892c2f-3007-4bea-a2ca-3425e0eb7b6a",
    "prId" : 70160,
    "prUrl" : "https://github.com/flutter/flutter/pull/70160#pullrequestreview-534830194",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ced1e4f-3ae4-4ab0-a6a0-90cbbd09557c",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "Nit: \r\n```suggestion\r\n  final double topPadding;\r\n  \r\n```",
        "createdAt" : "2020-11-19T20:36:39Z",
        "updatedAt" : "2021-01-15T00:53:44Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      }
    ],
    "commit" : "f590867dd13dbc9b12615935d02fa196d1fe2df7",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +625,629 @@\n  // Top padding of unsafe area.\n  final double topPadding;\n\n  // Bottom padding of unsafe area."
  },
  {
    "id" : "51cfb8b2-2994-4746-81f5-d90be8eb0791",
    "prId" : 75748,
    "prUrl" : "https://github.com/flutter/flutter/pull/75748#pullrequestreview-587152725",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d96b990-2f47-4bd5-8ed1-2b360cc9834d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "haha i love that we already had the deflate and it makes the code simpler to understand",
        "createdAt" : "2021-02-10T00:44:29Z",
        "updatedAt" : "2021-02-10T00:44:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "50897c0b95d64512ff52f5cfcd867cd440247008",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +624,628 @@    // The menu can be at most the size of the overlay minus 8.0 pixels in each\n    // direction.\n    return BoxConstraints.loose(constraints.biggest).deflate(const EdgeInsets.all(_kMenuScreenPadding));\n  }\n"
  },
  {
    "id" : "e7eead69-3580-486e-a73b-b8a49235da63",
    "prId" : 80420,
    "prUrl" : "https://github.com/flutter/flutter/pull/80420#pullrequestreview-635457255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "233b08e0-423c-483f-b9ca-5cbffd86902a",
        "parentId" : null,
        "authorId" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "body" : "This is to ensure the compatibility of `Future<T?> showMenu<T>`.",
        "createdAt" : "2021-04-14T10:23:48Z",
        "updatedAt" : "2021-04-19T04:59:12Z",
        "lastEditedBy" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7436456832a11403a58e5f2f4245f622da9515a",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +789,793 @@        return CustomSingleChildLayout(\n          delegate: _PopupMenuRouteLayout(\n            positionCallback == null ? position : positionCallback!(),\n            itemSizes,\n            selectedItemIndex,"
  },
  {
    "id" : "204d38de-7413-44fb-ab26-b7912d7938fc",
    "prId" : 80420,
    "prUrl" : "https://github.com/flutter/flutter/pull/80420#pullrequestreview-635459060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19927534-8554-4df0-9303-81897a283178",
        "parentId" : null,
        "authorId" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "body" : "TODO: Document all public members",
        "createdAt" : "2021-04-14T10:26:02Z",
        "updatedAt" : "2021-04-19T04:59:12Z",
        "lastEditedBy" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7436456832a11403a58e5f2f4245f622da9515a",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +1108,1112 @@///\n/// Used by [showMenu].\ntypedef PopupMenuButtonPositionCallback = RelativeRect Function();\n\n/// The [State] for a [PopupMenuButton]."
  },
  {
    "id" : "80df9a04-5c55-46c3-8b94-388703ec0a12",
    "prId" : 80420,
    "prUrl" : "https://github.com/flutter/flutter/pull/80420#pullrequestreview-636378162",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45efa712-687d-4ada-9af8-7a437517b08e",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Could this just be a `late`? It seems like `_buttonPosition` can only be accessed once it's been initialized: \r\n```suggestion\r\n  late RelativeRect _buttonPosition;\r\n```",
        "createdAt" : "2021-04-15T07:06:50Z",
        "updatedAt" : "2021-04-19T04:59:12Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "b4897770-3de7-4e53-9151-88ef1424f330",
        "parentId" : "45efa712-687d-4ada-9af8-7a437517b08e",
        "authorId" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "body" : "late-type is a final-type, right?",
        "createdAt" : "2021-04-15T07:47:56Z",
        "updatedAt" : "2021-04-19T04:59:12Z",
        "lastEditedBy" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "tags" : [
        ]
      },
      {
        "id" : "d3233bb0-2452-46cb-acb4-0cc50f325a5c",
        "parentId" : "45efa712-687d-4ada-9af8-7a437517b08e",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "It believe it's not -- The variable can be changed to point to a different instance of the same type, just not to a null value.",
        "createdAt" : "2021-04-15T07:57:10Z",
        "updatedAt" : "2021-04-19T04:59:12Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7436456832a11403a58e5f2f4245f622da9515a",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +1116,1120 @@class PopupMenuButtonState<T> extends State<PopupMenuButton<T>> {\n  GlobalKey _menuGlobalKey = GlobalKey();\n  RelativeRect? _buttonPosition;\n\n  RelativeRect _getButtonPosition() => _buttonPosition!;"
  },
  {
    "id" : "b84c09e3-528a-42b9-87bc-aa24b7ac88a5",
    "prId" : 80420,
    "prUrl" : "https://github.com/flutter/flutter/pull/80420#pullrequestreview-640541661",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8358cf9c-69dc-482d-8518-c67567971492",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Ahh, I guess the delay comes from it being a post-frame callback. It only attempts to update the button position a frame after. I tried to look at what happens with the GitHub UI on the web and it's pretty interesting -- The movement of the entire window itself stalls until the UI is able to draw itself to the new intended screen size.\r\n\r\nThis will cause the behavior to differ from what happens natively, but it has its own benefit in that the resizing of the window doesn't stutter, but the menu position lags behind.\r\n\r\ncc/ @HansMuller for his thoughts on maybe other ways we can tackle this\r\n\r\nPay attention to the location of the cursor relative to the position of the window (this is showing native behavior for web):\r\n\r\n\r\nhttps://user-images.githubusercontent.com/27032613/114829066-38ca4980-9dfd-11eb-99fd-7a13ce6c4336.mov\r\n",
        "createdAt" : "2021-04-15T07:13:50Z",
        "updatedAt" : "2021-04-19T04:59:12Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "43bb9f14-f7dd-4a2d-8ffc-e332c4f14ddc",
        "parentId" : "8358cf9c-69dc-482d-8518-c67567971492",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "We don't usually do things like this (using a post frame callback, etc). If the overlay that the menu is parented to changes size after the menu has appeared, maybe we should just dismiss the menu?",
        "createdAt" : "2021-04-20T00:48:00Z",
        "updatedAt" : "2021-04-20T00:48:00Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "eae4af5f-154a-4277-ad88-49f9093bed65",
        "parentId" : "8358cf9c-69dc-482d-8518-c67567971492",
        "authorId" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "body" : "Is there a specification for this behavior? Now it seems that this is not done on the web.",
        "createdAt" : "2021-04-20T01:20:53Z",
        "updatedAt" : "2021-04-20T01:20:53Z",
        "lastEditedBy" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "tags" : [
        ]
      },
      {
        "id" : "71615c79-6e42-43a0-8bf2-f3bceda84735",
        "parentId" : "8358cf9c-69dc-482d-8518-c67567971492",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I don't believe there's a Material Design spec for this behavior and it's true that in some cases web apps will endeavor to keep a popup menu up when the containing window is moved or resized.  On the other hand, most desktop toolkits and apps do dismiss popups when the user changes the containing window's geometry or visibility.  Similarly, mobile apps typically take down popups when the phone is switched between portrait and landscape.I think it makes sense to dismiss the menu in this case, since - from the user's perspective - selecting an item from a popup menu is a gesture with a short lifetime. Apps that want to give the user a more persistent UI for selecting an option or starting an action, usually use dialogs or something else that the user would expect to hang around. ",
        "createdAt" : "2021-04-20T16:43:35Z",
        "updatedAt" : "2021-04-20T16:45:59Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "84789baf-56fa-4c6e-94fb-356c4b262d33",
        "parentId" : "8358cf9c-69dc-482d-8518-c67567971492",
        "authorId" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "body" : "![20210421_084633](https://user-images.githubusercontent.com/61075224/115480987-32fdb980-a27e-11eb-9eef-0b9ad1207ee2.gif)\r\n",
        "createdAt" : "2021-04-21T00:47:49Z",
        "updatedAt" : "2021-04-21T00:47:49Z",
        "lastEditedBy" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "tags" : [
        ]
      },
      {
        "id" : "a76e2120-075d-411f-b13b-712d315ec0ce",
        "parentId" : "8358cf9c-69dc-482d-8518-c67567971492",
        "authorId" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "body" : "I have tested this behavior on Android native.",
        "createdAt" : "2021-04-21T00:48:15Z",
        "updatedAt" : "2021-04-21T00:48:15Z",
        "lastEditedBy" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7436456832a11403a58e5f2f4245f622da9515a",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +1133,1137 @@\n  void _maybeUpdateMenuPosition() {\n    WidgetsBinding.instance!.addPostFrameCallback((Duration duration) {\n      final RelativeRect newPosition = _calculateButtonPosition();\n      if (newPosition != _buttonPosition) {"
  },
  {
    "id" : "2c2d5ca3-9813-4176-bec2-27ce9c15f558",
    "prId" : 80420,
    "prUrl" : "https://github.com/flutter/flutter/pull/80420#pullrequestreview-636382716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab384690-d738-4884-9e75-2f94d69c26a4",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I think this should be:\r\n```suggestion\r\n        _menuGlobalKey.currentState?.setState(() {\r\n          _buttonPosition = newPosition;\r\n        });\r\n```",
        "createdAt" : "2021-04-15T07:18:16Z",
        "updatedAt" : "2021-04-19T04:59:12Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "105cd29f-a16f-48ca-91eb-61e4c70bdb2e",
        "parentId" : "ab384690-d738-4884-9e75-2f94d69c26a4",
        "authorId" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "body" : "haha, we need to update the value even the menu does not open.",
        "createdAt" : "2021-04-15T07:30:53Z",
        "updatedAt" : "2021-04-19T04:59:12Z",
        "lastEditedBy" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "tags" : [
        ]
      },
      {
        "id" : "05ffa2f8-06cf-4204-b472-c404dd6c605f",
        "parentId" : "ab384690-d738-4884-9e75-2f94d69c26a4",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Sorry about that, I misread this. Completely missed that the menu and the button are two separate widgets\r\n\r\n",
        "createdAt" : "2021-04-15T08:02:32Z",
        "updatedAt" : "2021-04-19T04:59:12Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7436456832a11403a58e5f2f4245f622da9515a",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +1137,1141 @@      if (newPosition != _buttonPosition) {\n        _menuGlobalKey.currentState?.setState(() {});\n        _buttonPosition = newPosition;\n      }\n    });"
  },
  {
    "id" : "2e64f25b-aa19-480d-80bb-9d5d228cd9a5",
    "prId" : 80420,
    "prUrl" : "https://github.com/flutter/flutter/pull/80420#pullrequestreview-636357113",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5686915-2e84-43c7-8b23-90c7966ddc37",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "To make sure this doesn't regress, we should add a test to make sure that mid-animation the crash doesn't happen",
        "createdAt" : "2021-04-15T07:18:53Z",
        "updatedAt" : "2021-04-19T04:59:12Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "4cac48be-d66e-49e4-83e9-d3e39420c33b",
        "parentId" : "b5686915-2e84-43c7-8b23-90c7966ddc37",
        "authorId" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "body" : "I found this issue when I run the test for my patch.",
        "createdAt" : "2021-04-15T07:32:38Z",
        "updatedAt" : "2021-04-19T04:59:12Z",
        "lastEditedBy" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7436456832a11403a58e5f2f4245f622da9515a",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +1153,1157 @@    final PopupMenuThemeData popupMenuTheme = PopupMenuTheme.of(context);\n    final List<PopupMenuEntry<T>> items = widget.itemBuilder(context);\n    // It is possible that the fade-out animation of the menu has not finished\n    // yet, and the key needs to be regenerated at this time, otherwise there will\n    // be an exception of duplicate GlobalKey."
  },
  {
    "id" : "e3864e0f-be26-4a0b-91e5-ebe84f3de6d7",
    "prId" : 80420,
    "prUrl" : "https://github.com/flutter/flutter/pull/80420#pullrequestreview-636397623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71d551c4-d562-4505-ab6d-4ce92d81abdc",
        "parentId" : null,
        "authorId" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "body" : "How can I know if a late-type has been initialized? There needs to be a comparison before changing it.",
        "createdAt" : "2021-04-15T07:39:14Z",
        "updatedAt" : "2021-04-19T04:59:12Z",
        "lastEditedBy" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "tags" : [
        ]
      },
      {
        "id" : "285036e3-bc28-4ce5-8e23-e6adaae5cda6",
        "parentId" : "71d551c4-d562-4505-ab6d-4ce92d81abdc",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I'm actually not sure if there's a way to know. I think if you try to access a `late` type prior to it being instantiated, it throws an error at runtime \r\n\r\nhttps://dart.dev/guides/language/effective-dart/usage#avoid-late-variables-if-you-need-to-check-whether-they-are-initialized",
        "createdAt" : "2021-04-15T08:04:35Z",
        "updatedAt" : "2021-04-19T04:59:12Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "ceb4eb80-2104-4c08-911a-1f73ddf58137",
        "parentId" : "71d551c4-d562-4505-ab6d-4ce92d81abdc",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I think setting the variable to `late` just tells readers that you don't intend for the variable to be accessed if it hasn't been instantiated yet, which I think in this case particularly makes sense\r\n\r\nEdit: Actually, are you saying that the `_buttonPosition` is expected to be a null value at some point for this comparison before it's instantiated? If that's the case, then you're right that we can't use `late` here. ",
        "createdAt" : "2021-04-15T08:05:50Z",
        "updatedAt" : "2021-04-19T04:59:12Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "80c0caf7-425c-44eb-99db-c4189f28ac72",
        "parentId" : "71d551c4-d562-4505-ab6d-4ce92d81abdc",
        "authorId" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "body" : "Got it.",
        "createdAt" : "2021-04-15T08:18:31Z",
        "updatedAt" : "2021-04-19T04:59:12Z",
        "lastEditedBy" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7436456832a11403a58e5f2f4245f622da9515a",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +1135,1139 @@    WidgetsBinding.instance!.addPostFrameCallback((Duration duration) {\n      final RelativeRect newPosition = _calculateButtonPosition();\n      if (newPosition != _buttonPosition) {\n        _menuGlobalKey.currentState?.setState(() {});\n        _buttonPosition = newPosition;"
  },
  {
    "id" : "d5afe7dd-49ac-4a9c-a56a-0f8eda589d5d",
    "prId" : 80420,
    "prUrl" : "https://github.com/flutter/flutter/pull/80420#pullrequestreview-638420267",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "996fae0a-d270-4c35-8eba-b9c9212fd4fd",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "We might want to explain why here so that users have some context",
        "createdAt" : "2021-04-19T02:31:08Z",
        "updatedAt" : "2021-04-19T04:59:12Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7436456832a11403a58e5f2f4245f622da9515a",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +807,811 @@/// `items` should be non-null and not empty.\n///\n/// Prefer to use `positionCallback` to obtain position instead of 'position'\n/// when `positionCallback` is non-null. In this way, the position of the menu\n/// can be recalculated through this callback during the rebuild phase of the menu."
  }
]