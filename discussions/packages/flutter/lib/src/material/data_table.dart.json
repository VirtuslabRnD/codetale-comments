[
  {
    "id" : "f1b64992-139c-4395-b8b9-56db25ba44c5",
    "prId" : 3337,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed3bdffd-10ce-407c-a002-25dc25daf01e",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Perhaps we should allow one to specify explicit widths for some columns and relative-width-flexibility values for the rest, as an alternative to measuring the column widths.\n",
        "createdAt" : "2016-04-15T00:05:26Z",
        "updatedAt" : "2016-04-15T23:35:26Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "b2438486-1421-44b3-83d7-ad7012b7622b",
        "parentId" : "ed3bdffd-10ce-407c-a002-25dc25daf01e",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "The spec says it's shrink-wrapped. I think we'll provide a separate widget for efficient materially infinite lists.\n",
        "createdAt" : "2016-04-15T23:03:15Z",
        "updatedAt" : "2016-04-15T23:35:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3278c6df2c34d1c440f2f370fcfff3f214233278",
    "line" : 195,
    "diffHunk" : "@@ -1,1 +193,197 @@/// A material design data table.\n///\n/// Displaying data in a table is expensive, because to lay out the\n/// table all the data must be measured twice, once to negotiate the\n/// dimensions to use for each column, and once to actually lay out"
  },
  {
    "id" : "3cfec97a-fea6-47a7-87f4-e4ab86994ab6",
    "prId" : 3337,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae576fd7-0cdd-4e1d-bb98-276a8c800082",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This implies that the column widths might change as you page through the data, although that's probably not what you want.\n",
        "createdAt" : "2016-04-15T00:06:45Z",
        "updatedAt" : "2016-04-15T23:35:26Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "43a7d939-683e-48bc-bb9a-b15d622d5461",
        "parentId" : "ae576fd7-0cdd-4e1d-bb98-276a8c800082",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "it's what the spec says, as far as i can tell.\n",
        "createdAt" : "2016-04-15T23:04:07Z",
        "updatedAt" : "2016-04-15T23:35:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3278c6df2c34d1c440f2f370fcfff3f214233278",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +201,205 @@// /// rows with a dozen columns, though the precise limits depend on the\n// /// target device), it is suggested that you use a [DataCard] which\n// /// automatically splits the data into multiple pages.\n// ///\n/// See also:"
  },
  {
    "id" : "463b1eab-0bf0-4d04-bcfa-5430864970d8",
    "prId" : 3337,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2a1fb88-cc03-41a1-a6ca-14f38ef7ee0c",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Also should be theme dependent?\n",
        "createdAt" : "2016-04-15T00:22:00Z",
        "updatedAt" : "2016-04-15T23:35:26Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "b279630b-fcd8-4870-bd1f-17d5ab445f59",
        "parentId" : "a2a1fb88-cc03-41a1-a6ca-14f38ef7ee0c",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I'll file a bug on making the data tables support the dark theme. The spec doesn't say anything about it.\n",
        "createdAt" : "2016-04-15T23:31:39Z",
        "updatedAt" : "2016-04-15T23:35:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "5c814c10-cb69-4f77-b5e9-79095066393b",
        "parentId" : "a2a1fb88-cc03-41a1-a6ca-14f38ef7ee0c",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "https://github.com/flutter/flutter/issues/3370\n",
        "createdAt" : "2016-04-15T23:32:29Z",
        "updatedAt" : "2016-04-15T23:35:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3278c6df2c34d1c440f2f370fcfff3f214233278",
    "line" : 433,
    "diffHunk" : "@@ -1,1 +431,435 @@          child: new IconTheme(\n            data: new IconThemeData(\n              color: Colors.black54\n            ),\n            child: new DropDownButtonHideUnderline(child: label)"
  },
  {
    "id" : "2b5e76dd-93b8-4b24-9c95-ae538f047fd1",
    "prId" : 3337,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1292b98-72b4-4a73-8915-ea5c2f87240b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "FadeTransition?\n",
        "createdAt" : "2016-04-15T00:41:40Z",
        "updatedAt" : "2016-04-15T23:35:26Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "7f9ce1a4-2600-452f-ab08-c1446e503706",
        "parentId" : "f1292b98-72b4-4a73-8915-ea5c2f87240b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I wish, but I have to control the opacity animation way more closely than FadeTransition allows.\n",
        "createdAt" : "2016-04-15T23:33:09Z",
        "updatedAt" : "2016-04-15T23:35:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3278c6df2c34d1c440f2f370fcfff3f214233278",
    "line" : 728,
    "diffHunk" : "@@ -1,1 +726,730 @@  @override\n  Widget build(BuildContext context) {\n    return new Opacity(\n      opacity: _opacityAnimation.value,\n      child: new Transform("
  },
  {
    "id" : "66397eef-0926-46e9-b58b-06430bdeaafc",
    "prId" : 47552,
    "prUrl" : "https://github.com/flutter/flutter/pull/47552#pullrequestreview-335564826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1144a6a4-5b85-4ff6-be8b-62abafc88e5b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this should say something about how even if it's true, the column won't be included if there's no row with an `onSelectChanged` callback set.",
        "createdAt" : "2019-12-20T23:00:09Z",
        "updatedAt" : "2020-01-06T17:23:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "de53c9fb-edfc-4b29-ae8b-ba8bcfc30ea1",
        "parentId" : "1144a6a4-5b85-4ff6-be8b-62abafc88e5b",
        "authorId" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "body" : "Done.",
        "createdAt" : "2019-12-20T23:26:13Z",
        "updatedAt" : "2020-01-06T17:23:20Z",
        "lastEditedBy" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "tags" : [
        ]
      }
    ],
    "commit" : "d94b69d24e6e67d8d4b40bd8886797d738099268",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +420,424 @@  /// If false, all rows will not display a [CheckBox].\n  /// {@endtemplate}\n  final bool showCheckboxColumn;\n\n  /// The data to show in each row (excluding the row that contains"
  },
  {
    "id" : "3bcb559d-a46c-4be2-ba9c-a4c2365f4859",
    "prId" : 49692,
    "prUrl" : "https://github.com/flutter/flutter/pull/49692#pullrequestreview-358429390",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8678ccb-2e98-4d25-a0a1-8caafa9e74bb",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "```suggestion\r\n  /// \r\n  /// Must be non-null and greater than or equal to zero.\r\n```\r\n\r\nNit: Dart docs specify a blank line should follow each paragraph, and that the first sentence should be it own paragraph.",
        "createdAt" : "2020-02-13T17:55:16Z",
        "updatedAt" : "2020-02-22T00:02:47Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      }
    ],
    "commit" : "e462551e136f4a20382f64900441fc9fc4d1f143",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +472,476 @@  /// The width of the divider that appears between [TableRow]s.\n  ///\n  /// Must be non-null and greater than or equal to zero.\n  /// This value defaults to 1.0.\n  final double dividerThickness;"
  },
  {
    "id" : "8ca26064-adba-4c4f-aa57-47167c5c190b",
    "prId" : 51667,
    "prUrl" : "https://github.com/flutter/flutter/pull/51667#pullrequestreview-373955436",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "daaa18dc-bf70-4664-8e3b-ac2dfad8c0d4",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "Would using an Expanded be the only way to center the label? Would it be possible to set a size of space to take up?",
        "createdAt" : "2020-03-11T20:29:42Z",
        "updatedAt" : "2020-03-12T21:34:20Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "e65cf38c-68aa-44bc-9e95-bfcffb0538e8",
        "parentId" : "daaa18dc-bf70-4664-8e3b-ac2dfad8c0d4",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "Sorry if I misunderstood your question. The problem here is the widget structure, which is roughly:\r\n```\r\nTableCell\r\n |- Row\r\n      |- label\r\n      |- arrow & padding\r\n```\r\nthe default behavior is to align everything left, including the label and the arrow (right if numerical), and the only thing the developer can control is `label`.\r\n\r\nWe can't provide an `Expanded` by default since it changes the behavior to aligning label left and arrow right. \r\n\r\nWe might actually have to provide a new parameter `alignment` for full flexibility, but since it'll be a new feature & parameter, I'd rather not do in this PR.",
        "createdAt" : "2020-03-12T21:17:11Z",
        "updatedAt" : "2020-03-12T21:34:20Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      },
      {
        "id" : "ff532bb3-1ed9-405c-85f6-7c335293abfa",
        "parentId" : "daaa18dc-bf70-4664-8e3b-ac2dfad8c0d4",
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "Gotcha!",
        "createdAt" : "2020-03-12T23:04:21Z",
        "updatedAt" : "2020-03-12T23:04:21Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      }
    ],
    "commit" : "f062a79652842a22a4f9b4cbf3fc04a6a0b3ff7e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +49,53 @@  ///\n  /// By default, this widget will only occupy the minimal space. If you want\n  /// it to take the entire remaining space, e.g. when you want to use [Center],\n  /// you can wrap it with an [Expanded].\n  ///"
  },
  {
    "id" : "b27ffce8-1763-4bc7-87ff-60e0c0ba7213",
    "prId" : 60764,
    "prUrl" : "https://github.com/flutter/flutter/pull/60764#pullrequestreview-443426028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c4a4416-e240-4477-a3d1-045990138d3f",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It's probably pedantic to say so (so don't change this line), but this color overrides the default row color. That said, we should document what the default color is, before explaining how to override it.",
        "createdAt" : "2020-07-06T21:47:48Z",
        "updatedAt" : "2020-07-07T09:28:06Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "01bc3bbe02518911f597c40782d012ab457959b8",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +154,158 @@  final List<DataCell> cells;\n\n  /// The color for the row.\n  ///\n  /// By default, the color is transparent unless selected. Selected rows has"
  },
  {
    "id" : "1c83a77d-d7e0-4ac2-b81f-c5bdf1bb8cd9",
    "prId" : 64316,
    "prUrl" : "https://github.com/flutter/flutter/pull/64316#pullrequestreview-477656394",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3921f438-04ec-4da7-8c0a-5e65fd8f8e8a",
        "parentId" : null,
        "authorId" : "48e1b91d-64e2-4bb8-894c-50cce634bfa9",
        "body" : "I think you could use a macro here to include much more detail about decorations",
        "createdAt" : "2020-08-21T12:19:01Z",
        "updatedAt" : "2020-09-02T14:11:05Z",
        "lastEditedBy" : "48e1b91d-64e2-4bb8-894c-50cce634bfa9",
        "tags" : [
        ]
      },
      {
        "id" : "03789cec-ee41-4b0f-b806-cc6e49c67219",
        "parentId" : "3921f438-04ec-4da7-8c0a-5e65fd8f8e8a",
        "authorId" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "body" : "I looked at BoxDecoration and the Ink widget, neither of them has any templates, and they are not more specific about documentation the decoration parameter, so I'll leave this out.",
        "createdAt" : "2020-08-28T11:34:57Z",
        "updatedAt" : "2020-09-02T14:11:05Z",
        "lastEditedBy" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfed7150be4dce90c76df1c66fdfa422f0b87b8f",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +479,483 @@\n  /// {@template flutter.material.dataTable.decoration}\n  /// The background and border decoration for the table.\n  /// {@endtemplate}\n  ///"
  },
  {
    "id" : "32595946-8f45-4c71-be11-556cfa4eb9c2",
    "prId" : 64316,
    "prUrl" : "https://github.com/flutter/flutter/pull/64316#pullrequestreview-477659326",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89f6deac-eab7-48ac-82d7-d742a7ad7825",
        "parentId" : null,
        "authorId" : "48e1b91d-64e2-4bb8-894c-50cce634bfa9",
        "body" : "same here, I think there might be a useful macro",
        "createdAt" : "2020-08-21T12:23:47Z",
        "updatedAt" : "2020-09-02T14:11:05Z",
        "lastEditedBy" : "48e1b91d-64e2-4bb8-894c-50cce634bfa9",
        "tags" : [
        ]
      },
      {
        "id" : "ae9ab594-0a47-44c8-ad79-4f7a189ed126",
        "parentId" : "89f6deac-eab7-48ac-82d7-d742a7ad7825",
        "authorId" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "body" : "I could not find a useful macro or template for TextStyle. I think by going to TextStyle directly they can find useful enough information.",
        "createdAt" : "2020-08-28T11:40:38Z",
        "updatedAt" : "2020-09-02T14:11:05Z",
        "lastEditedBy" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfed7150be4dce90c76df1c66fdfa422f0b87b8f",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +528,532 @@\n  /// {@template flutter.material.dataTable.dataTextStyle}\n  /// The text style for data rows.\n  /// {@endtemplate}\n  ///"
  },
  {
    "id" : "d648f57d-b45e-4632-b313-1a01ebc8f8bd",
    "prId" : 64316,
    "prUrl" : "https://github.com/flutter/flutter/pull/64316#pullrequestreview-478470971",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c94c734-e98d-4130-b40b-e9751b32f294",
        "parentId" : null,
        "authorId" : "48e1b91d-64e2-4bb8-894c-50cce634bfa9",
        "body" : "Will this icon still be visible by default in dark mode?",
        "createdAt" : "2020-08-21T12:35:12Z",
        "updatedAt" : "2020-09-02T14:11:05Z",
        "lastEditedBy" : "48e1b91d-64e2-4bb8-894c-50cce634bfa9",
        "tags" : [
        ]
      },
      {
        "id" : "0675fc93-c9f8-460d-8169-fd2fa47e440c",
        "parentId" : "1c94c734-e98d-4130-b40b-e9751b32f294",
        "authorId" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "body" : "Yes, let me add a screenshot to the description",
        "createdAt" : "2020-08-31T09:51:30Z",
        "updatedAt" : "2020-09-02T14:11:05Z",
        "lastEditedBy" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfed7150be4dce90c76df1c66fdfa422f0b87b8f",
    "line" : 509,
    "diffHunk" : "@@ -1,1 +1180,1184 @@                             ..setTranslationRaw(0.0, _arrowIconBaselineOffset, 0.0),\n        alignment: Alignment.center,\n        child: const Icon(\n          Icons.arrow_upward,\n          size: _arrowIconSize,"
  },
  {
    "id" : "d8e272f7-05ba-4ddf-837f-6fb295bda8fc",
    "prId" : 64316,
    "prUrl" : "https://github.com/flutter/flutter/pull/64316#pullrequestreview-480840305",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "649e67d4-97c3-40f5-bd2a-ae37dccdde55",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Using composite values like BoxDecoration can be problematic in components and themes however, in this case, since the default is `no decoration` it should work out nicely. Is it possible that apps will want to change a table's border, depending on its focused (other?) state. If this was a `MaterialStateProperty<BoxDecoration>` it would be a little clumsier to specify simple value, but more flexible:\r\n```dart\r\ndecoration: MaterialStateProperty<BoxDecoration>.all(myDecoration)\r\n```",
        "createdAt" : "2020-09-01T23:19:09Z",
        "updatedAt" : "2020-09-02T14:11:05Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "b0d31419-a4f3-4f58-a484-7cd38ed1dbe5",
        "parentId" : "649e67d4-97c3-40f5-bd2a-ae37dccdde55",
        "authorId" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "body" : "I think in this case we will not need to have different box decorations depending on the state. The focus or selected state will only be handled by the different rows and the whole DataTable never really has any (`MaterialState`) state.",
        "createdAt" : "2020-09-02T13:50:59Z",
        "updatedAt" : "2020-09-02T14:11:05Z",
        "lastEditedBy" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfed7150be4dce90c76df1c66fdfa422f0b87b8f",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +482,486 @@  /// {@endtemplate}\n  ///\n  /// By default there is no decoration.\n  final BoxDecoration decoration;\n"
  },
  {
    "id" : "bc65794b-f4aa-4c04-8719-750ef5ab3c44",
    "prId" : 64316,
    "prUrl" : "https://github.com/flutter/flutter/pull/64316#pullrequestreview-480169196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "174994b0-4ce0-41d1-8c87-00b27d9657c9",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Glad to see this TODO here. When it's done, the API doc for rowColor etc should explain exactly what color scheme colors are being used.",
        "createdAt" : "2020-09-01T23:26:02Z",
        "updatedAt" : "2020-09-02T14:11:05Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfed7150be4dce90c76df1c66fdfa422f0b87b8f",
    "line" : 379,
    "diffHunk" : "@@ -1,1 +849,853 @@          // The color has to be transparent so you can see the ink on\n          // the [Material].\n          // TODO(perclasson): Align with Material specs, use translucent primary color: https://github.com/flutter/flutter/issues/64314.\n          return (Theme.of(context).brightness == Brightness.light) ?\n            _grey100Opacity : _grey300Opacity;"
  },
  {
    "id" : "8123d952-c274-4c3e-8a06-c8f734956867",
    "prId" : 66640,
    "prUrl" : "https://github.com/flutter/flutter/pull/66640#pullrequestreview-504791560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ddc87e1-c5c9-449d-b4be-44e5cca0213d",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "DecoratedBox would also work here.",
        "createdAt" : "2020-10-07T16:11:09Z",
        "updatedAt" : "2020-10-09T11:33:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "d142c130-b578-457f-a05a-df0ce5eaaa4c",
        "parentId" : "0ddc87e1-c5c9-449d-b4be-44e5cca0213d",
        "authorId" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "body" : "With the `DecoratedBox` there is no padding added when there is a border, so for the convenience for the user I'll keep it a `Container`.",
        "createdAt" : "2020-10-08T13:38:12Z",
        "updatedAt" : "2020-10-09T11:33:01Z",
        "lastEditedBy" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "tags" : [
        ]
      }
    ],
    "commit" : "74cd2113c473500ffc02bfd5ad186e5a8f340ceb",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +999,1003 @@    }\n\n    return Container(\n      decoration: decoration ?? theme.dataTableTheme.decoration,\n      child: Material("
  },
  {
    "id" : "ef089c69-2b31-4104-a9ed-b90d3852c3b5",
    "prId" : 67414,
    "prUrl" : "https://github.com/flutter/flutter/pull/67414#pullrequestreview-503875217",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "647f1498-4ab3-4c39-8bfe-18c4d1a9c50c",
        "parentId" : null,
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "Isn't the default false for this? Do you need to explicitly set it?",
        "createdAt" : "2020-10-06T14:59:29Z",
        "updatedAt" : "2020-10-09T13:45:45Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      },
      {
        "id" : "a5c1c687-da0f-422d-8104-c89e988f3549",
        "parentId" : "647f1498-4ab3-4c39-8bfe-18c4d1a9c50c",
        "authorId" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "body" : "With NNBD we need to pass a value. Updated with master now.",
        "createdAt" : "2020-10-07T13:25:38Z",
        "updatedAt" : "2020-10-09T13:45:45Z",
        "lastEditedBy" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "tags" : [
        ]
      }
    ],
    "commit" : "583ca7bda534c1b221b1158defb68ca8c868a70a",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +945,949 @@          onCheckboxChanged: row.onSelectChanged,\n          overlayColor: row.color ?? effectiveDataRowColor,\n          tristate: false,\n        );\n        rowIndex += 1;"
  },
  {
    "id" : "240203c4-fe7a-4de5-8699-cecc76437e84",
    "prId" : 67919,
    "prUrl" : "https://github.com/flutter/flutter/pull/67919#pullrequestreview-506625196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54c43b64-ffe5-4470-8c25-ce2d72098bbf",
        "parentId" : null,
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "nit: you can change this into a ternary operator \r\n\r\nboolean ? exp1 : exp2 ",
        "createdAt" : "2020-10-12T13:35:46Z",
        "updatedAt" : "2020-10-12T14:07:36Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6702b644073c7e614ba1f2a5067cef24f45ee12",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +862,866 @@    final MaterialStateProperty<Color?> defaultRowColor = MaterialStateProperty.resolveWith(\n      (Set<MaterialState> states) {\n        if (states.contains(MaterialState.selected))\n          return theme.colorScheme.primary.withOpacity(0.08);\n        return null;"
  },
  {
    "id" : "fe500ed5-9d5d-45e9-9748-c09884c754f3",
    "prId" : 71217,
    "prUrl" : "https://github.com/flutter/flutter/pull/71217#pullrequestreview-592602761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59ff9d8b-20f2-4e7e-ba33-16c3e27c5216",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Why does this default to `effectiveHorizontalMargin / 2`? The API docs imply that it will default to 24, not 12 right?",
        "createdAt" : "2021-02-17T20:11:04Z",
        "updatedAt" : "2021-02-17T20:12:35Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "cb9e70b1-2fef-4d85-a595-1ceaba96acd1",
        "parentId" : "59ff9d8b-20f2-4e7e-ba33-16c3e27c5216",
        "authorId" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "body" : "It is not obvious, but the end margin of the checkbox is made up of effectiveCheckboxHorizontalMarginEnd (i.e. effectiveHorizontalMargin / 2.0 ) here and the other part here:\r\nhttps://github.com/flutter/flutter/blob/e030ddfee8a62116c91c35c2339deee41410f243/packages/flutter/lib/src/material/data_table.dart#L1037\r\n\r\nIt ends up being the full effectiveHorizontalMargin.",
        "createdAt" : "2021-02-17T20:27:28Z",
        "updatedAt" : "2021-02-17T20:27:28Z",
        "lastEditedBy" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "tags" : [
        ]
      },
      {
        "id" : "8f69392a-64f6-4254-be47-f305923c8584",
        "parentId" : "59ff9d8b-20f2-4e7e-ba33-16c3e27c5216",
        "authorId" : "e848f3a5-8794-4281-b459-2262c0b5e912",
        "body" : "> It is not obvious, but the end margin of the checkbox is made up of effectiveCheckboxHorizontalMarginEnd (i.e. effectiveHorizontalMargin / 2.0 ) here and the other part here:\r\n> https://github.com/flutter/flutter/blob/e030ddfee8a62116c91c35c2339deee41410f243/packages/flutter/lib/src/material/data_table.dart#L1037\r\n> \r\n> It ends up being the full effectiveHorizontalMargin.\r\n\r\nYes that is indeed the case :smile: \r\n\r\n\r\n",
        "createdAt" : "2021-02-17T20:32:49Z",
        "updatedAt" : "2021-02-17T20:32:49Z",
        "lastEditedBy" : "e848f3a5-8794-4281-b459-2262c0b5e912",
        "tags" : [
        ]
      }
    ],
    "commit" : "e030ddfee8a62116c91c35c2339deee41410f243",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +767,771 @@    final double effectiveCheckboxHorizontalMarginEnd = checkboxHorizontalMargin\n      ?? themeData.dataTableTheme.checkboxHorizontalMargin\n      ?? effectiveHorizontalMargin / 2.0;\n    Widget contents = Semantics(\n      container: true,"
  }
]