[
  {
    "id" : "aa8414b1-fe54-446a-a6ef-ab0874c01a03",
    "prId" : 14939,
    "prUrl" : "https://github.com/flutter/flutter/pull/14939#pullrequestreview-100948151",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa918cbe-4517-4f24-a01b-a4ceb50f5254",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "nit: use `///` for dartdocs (this comment applies here and in other places in this PR)",
        "createdAt" : "2018-02-28T20:58:05Z",
        "updatedAt" : "2018-03-01T23:35:02Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "95ac9677-60ee-46a9-bab0-ff30af7245b5",
        "parentId" : "fa918cbe-4517-4f24-a01b-a4ceb50f5254",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "We use '//' for private API, '///' for public",
        "createdAt" : "2018-03-01T19:19:22Z",
        "updatedAt" : "2018-03-01T23:35:02Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "e0107f4d-d1d6-4eef-baa2-f8465f226a2d",
        "parentId" : "fa918cbe-4517-4f24-a01b-a4ceb50f5254",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "We should add it to our style guide if that's the case. The general Dart style guide [encourages dartdocs for private members](https://www.dartlang.org/guides/language/effective-dart/documentation#consider-writing-doc-comments-for-private-apis).",
        "createdAt" : "2018-03-01T22:16:01Z",
        "updatedAt" : "2018-03-01T23:35:02Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "dc56fcca-9d6f-4683-aff8-3d0cf3778179",
        "parentId" : "fa918cbe-4517-4f24-a01b-a4ceb50f5254",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "We use '///' for docs that are public-quality, and '//' for docs that will need fixing before we make a private class public.",
        "createdAt" : "2018-03-02T23:46:25Z",
        "updatedAt" : "2018-03-02T23:46:25Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "8f495384-51d7-4230-8ee7-5ad72936e054",
        "parentId" : "fa918cbe-4517-4f24-a01b-a4ceb50f5254",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I just added this to our style guide:\r\n\r\n> ### Use `///` for public-quality private documentation\r\n>\r\n> In general, private code can and should also be documented. If that documentation is of good enough\r\nquality that we could include it verbatim when making the class public (i.e. it satisfies all the\r\nstyle guidelines above), then use you can use `///` for those docs, even though they're private.\r\n>\r\n> Documentation of private APIs that is not of sufficient quality should only use `//`. That way, if\r\nwe ever make the corresponding class public, those documentation comments will be flagged as missing,\r\nand we will know to examine them more carefully.\r\n>\r\n> Feel free to be conservative in what you consider \"sufficient quality\". It's ok to use `//` even if\r\nyou have multiple paragraphs of documentation; that's a sign that we should carefully rereview the\r\ndocumentation when making the code public.\r\n",
        "createdAt" : "2018-03-02T23:52:47Z",
        "updatedAt" : "2018-03-02T23:52:47Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6191d2c8e37771130d5c502455ddf74673c6b349",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@\n// The total time to make the button's fill color opaque and change\n// its elevation.\nconst Duration _kPressDuration = const Duration(milliseconds: 150);\n"
  },
  {
    "id" : "6a887a2d-650d-4437-8a25-5d2b9f3a69be",
    "prId" : 14939,
    "prUrl" : "https://github.com/flutter/flutter/pull/14939#pullrequestreview-100615592",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bd9928b-5f57-4423-8835-161f9c1aac01",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "What do you think of linking to `[Row]` and pointing out that users can use `Expanded` and `Flexible` to control the layout of `icon` and `label`?\r\n\r\nAlternatively, if we don't want users to affect the layout, perhaps we should wrap `icon` and `label` in `Expanded` ourselves?",
        "createdAt" : "2018-02-28T21:22:46Z",
        "updatedAt" : "2018-03-01T23:35:02Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "13ff945b-020d-4df5-8833-c87888909972",
        "parentId" : "1bd9928b-5f57-4423-8835-161f9c1aac01",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I'd really rather not admit that Row is used internally. You can't really do anything useful by expanding the label or icon widgets and we could use a different layout container in the future.",
        "createdAt" : "2018-03-01T19:34:02Z",
        "updatedAt" : "2018-03-01T23:35:02Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "ca9b1fcd-c971-4892-9607-0f87ea420417",
        "parentId" : "1bd9928b-5f57-4423-8835-161f9c1aac01",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "If we don't wrap `icon` and `label` in `Expanded` now, then switching to a different layout container would be a breaking change. If we're ok with that, then this code is ok. Leaving the final decision to you.",
        "createdAt" : "2018-03-01T22:20:12Z",
        "updatedAt" : "2018-03-01T23:35:02Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "6191d2c8e37771130d5c502455ddf74673c6b349",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +76,80 @@  /// [icon] and [label].\n  ///\n  /// The icon and label are arranged in a row and padded by 12 logical pixels\n  /// at the start, and 16 at the end, with an 8 pixel gap in between.\n  ///"
  },
  {
    "id" : "590a3421-fe9c-416a-8f9a-7692c0a73326",
    "prId" : 14939,
    "prUrl" : "https://github.com/flutter/flutter/pull/14939#pullrequestreview-100582708",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b7bf495-c266-442a-ab67-1239ab01e05b",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "(see comment above about users' ability to affect the layout by putting their widgets in `Expanded` and such)",
        "createdAt" : "2018-02-28T21:25:57Z",
        "updatedAt" : "2018-03-01T23:35:02Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "441afbfd-e968-453d-b0a7-e29e690b0711",
        "parentId" : "7b7bf495-c266-442a-ab67-1239ab01e05b",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I'm going to leave this as it is for now.",
        "createdAt" : "2018-03-01T20:31:54Z",
        "updatedAt" : "2018-03-01T23:35:02Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6191d2c8e37771130d5c502455ddf74673c6b349",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +105,109 @@           icon,\n           const SizedBox(width: 8.0),\n           label,\n         ],\n       ),"
  },
  {
    "id" : "a4bd77e3-ee45-4465-baca-c3475f7e768c",
    "prId" : 14939,
    "prUrl" : "https://github.com/flutter/flutter/pull/14939#pullrequestreview-100948533",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb3b34f4-ff40-4f5c-b22c-5604e83d2a62",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "nit: is the last comma necessary?",
        "createdAt" : "2018-02-28T21:26:47Z",
        "updatedAt" : "2018-03-01T23:35:02Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "e262e913-338b-4a07-8599-1267a6cb1a78",
        "parentId" : "fb3b34f4-ff40-4f5c-b22c-5604e83d2a62",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I'm not passionate about the Oxford comma, but I think it's OK.",
        "createdAt" : "2018-03-01T19:35:51Z",
        "updatedAt" : "2018-03-01T23:35:02Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "c170c980-e026-4bb1-a586-4cb75954a90e",
        "parentId" : "fb3b34f4-ff40-4f5c-b22c-5604e83d2a62",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Ooh, there's even a name for it! :) ",
        "createdAt" : "2018-03-01T22:21:24Z",
        "updatedAt" : "2018-03-01T23:35:02Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "8f07f917-2d08-4306-a0cb-47f0493af541",
        "parentId" : "fb3b34f4-ff40-4f5c-b22c-5604e83d2a62",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Without the last comma, that sentence means that the \"defaults\" for the \"minimum size\" is the \"internal padding and shape\". With a comma, it means that it defines the defaults for the three things 1, size, 2, padding, 3, shape.",
        "createdAt" : "2018-03-02T23:55:34Z",
        "updatedAt" : "2018-03-02T23:55:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6191d2c8e37771130d5c502455ddf74673c6b349",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +116,120 @@\n  /// Defines the button's base colors, and the defaults for the button's minimum\n  /// size, internal padding, and shape.\n  ///\n  /// Defaults to `ButtonTheme.of(context).textTheme`."
  },
  {
    "id" : "a35f5619-4a41-4d66-bb87-44dc43aad23b",
    "prId" : 14939,
    "prUrl" : "https://github.com/flutter/flutter/pull/14939#pullrequestreview-100954834",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5a5b853-b6df-4877-8a04-0308aed66de2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you need a blank line before the start of each bulleted list for dartdoc to do the right thing. (applies across the file)",
        "createdAt" : "2018-03-02T23:56:06Z",
        "updatedAt" : "2018-03-02T23:56:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3c2d57b9-e193-4ae4-aad2-4e178b86430c",
        "parentId" : "f5a5b853-b6df-4877-8a04-0308aed66de2",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Fixed in https://github.com/flutter/flutter/pull/15092",
        "createdAt" : "2018-03-03T00:49:56Z",
        "updatedAt" : "2018-03-03T00:49:56Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6191d2c8e37771130d5c502455ddf74673c6b349",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +130,134 @@  ///\n  /// See also:\n  ///   * [disabledTextColor], the text color to use when the button has been\n  ///     disabled.\n  final Color textColor;"
  },
  {
    "id" : "4171ad8d-dd46-42f5-b115-31e17b3427fd",
    "prId" : 14939,
    "prUrl" : "https://github.com/flutter/flutter/pull/14939#pullrequestreview-100954825",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ae8b1d1-2406-4c81-ab7a-e8f7f27c8526",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "the style we prefer is:\r\n\r\n```\r\n * [textColor], which specifies the color to use...\r\n```",
        "createdAt" : "2018-03-02T23:56:40Z",
        "updatedAt" : "2018-03-02T23:56:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "fd3ec498-3896-4526-a470-947922cdd5ab",
        "parentId" : "0ae8b1d1-2406-4c81-ab7a-e8f7f27c8526",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Fixed in https://github.com/flutter/flutter/pull/15092",
        "createdAt" : "2018-03-03T00:49:50Z",
        "updatedAt" : "2018-03-03T00:49:50Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6191d2c8e37771130d5c502455ddf74673c6b349",
    "line" : 145,
    "diffHunk" : "@@ -1,1 +143,147 @@  ///\n  /// See also:\n  ///  * [textColor] - The color to use for this button's text when the button is [enabled].\n  final Color disabledTextColor;\n"
  },
  {
    "id" : "436eda6d-9fa3-4b3e-b740-d3913ca93bb5",
    "prId" : 14939,
    "prUrl" : "https://github.com/flutter/flutter/pull/14939#pullrequestreview-100953165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7e649b5-0cdc-40e3-864f-84d7d40ea185",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "0.5, 0.5? not 0.5, 1.0?",
        "createdAt" : "2018-03-02T23:57:42Z",
        "updatedAt" : "2018-03-02T23:57:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "532c8704-3c05-449e-a1cc-eb79f88f5a47",
        "parentId" : "e7e649b5-0cdc-40e3-864f-84d7d40ea185",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This is a step function, not a transition.  The step triggers an implicit animation (Material).",
        "createdAt" : "2018-03-03T00:33:39Z",
        "updatedAt" : "2018-03-03T00:33:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6191d2c8e37771130d5c502455ddf74673c6b349",
    "line" : 286,
    "diffHunk" : "@@ -1,1 +284,288 @@    _elevationAnimation = new CurvedAnimation(\n      parent: _controller,\n      curve: const Interval(0.5, 0.5),\n      reverseCurve: const Interval(1.0, 1.0),\n    );"
  },
  {
    "id" : "02d79140-2ec8-4a22-941a-006bf62f27d0",
    "prId" : 14939,
    "prUrl" : "https://github.com/flutter/flutter/pull/14939#pullrequestreview-100953564",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "083a225e-5c25-42c7-9547-acb41523a512",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "presumably 1.0, 0.5?\r\n\r\ntest for this? :-)",
        "createdAt" : "2018-03-02T23:57:56Z",
        "updatedAt" : "2018-03-02T23:57:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "14c56a35-226a-4a90-958e-49ace8a71647",
        "parentId" : "083a225e-5c25-42c7-9547-acb41523a512",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This is also a step function. To reverse the button-press animation we begin by triggering an implicit material animation that changes the button's elevation. ",
        "createdAt" : "2018-03-03T00:37:35Z",
        "updatedAt" : "2018-03-03T00:37:35Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6191d2c8e37771130d5c502455ddf74673c6b349",
    "line" : 287,
    "diffHunk" : "@@ -1,1 +285,289 @@      parent: _controller,\n      curve: const Interval(0.5, 0.5),\n      reverseCurve: const Interval(1.0, 1.0),\n    );\n  }"
  },
  {
    "id" : "dc9fd1c0-62ce-4177-9ef2-e2ab1f01ce38",
    "prId" : 14939,
    "prUrl" : "https://github.com/flutter/flutter/pull/14939#pullrequestreview-100953596",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e57f9c16-5388-4ef3-aa9f-1013099091d8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "now we have three copies of a bunch of this logic i even more greatly desire to share the code...",
        "createdAt" : "2018-03-02T23:58:15Z",
        "updatedAt" : "2018-03-02T23:58:15Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "30ad0be8-4ed2-4302-97ca-60ec2e42532e",
        "parentId" : "e57f9c16-5388-4ef3-aa9f-1013099091d8",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I will do that in a future PR.",
        "createdAt" : "2018-03-03T00:37:59Z",
        "updatedAt" : "2018-03-03T00:37:59Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6191d2c8e37771130d5c502455ddf74673c6b349",
    "line" : 301,
    "diffHunk" : "@@ -1,1 +299,303 @@  }\n\n  // TODO(hmuller): this method is the same as FlatButton\n  Color _getTextColor(ThemeData theme, ButtonThemeData buttonTheme) {\n    final Color color = widget.enabled ? widget.textColor : widget.disabledTextColor;"
  },
  {
    "id" : "a0f84a12-4793-4ed8-b33b-af603f1fb5df",
    "prId" : 14939,
    "prUrl" : "https://github.com/flutter/flutter/pull/14939#pullrequestreview-100949493",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30c34b5b-a619-4e74-9422-1306b0d2531b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you can get massive bonus points if you actually put this logic in RaisedButton and use it for the case of RaisedButton going transparent with no elevation when it's disabled.",
        "createdAt" : "2018-03-03T00:02:22Z",
        "updatedAt" : "2018-03-03T00:02:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6191d2c8e37771130d5c502455ddf74673c6b349",
    "line" : 274,
    "diffHunk" : "@@ -1,1 +272,276 @@    // of the button.\n\n    _controller = new AnimationController(\n      duration: _kPressDuration,\n      vsync: this"
  },
  {
    "id" : "cdb14bd7-7fc5-415c-b0a8-672af6bb9191",
    "prId" : 20578,
    "prUrl" : "https://github.com/flutter/flutter/pull/20578#pullrequestreview-146192865",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9642019-9e5c-46ff-a84e-8ce2a83e2b1b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "You provide the same default value for clipBehavior in RawMaterialButton, so there's no need to specify it here.",
        "createdAt" : "2018-08-14T18:07:10Z",
        "updatedAt" : "2018-08-14T18:23:20Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "55672be1-d9a9-4505-a6af-1b5fb7431b45",
        "parentId" : "f9642019-9e5c-46ff-a84e-8ce2a83e2b1b",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "same as above",
        "createdAt" : "2018-08-14T18:25:14Z",
        "updatedAt" : "2018-08-14T18:25:14Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4b006fdff66e2d616c454048b1a9c1a11a3a16f",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +71,75 @@    this.padding,\n    this.shape,\n    this.clipBehavior = ui.defaultClipBehavior, // ignore: deprecated_member_use,\n    this.child,\n  }) : assert(highlightElevation != null && highlightElevation >= 0.0),"
  }
]