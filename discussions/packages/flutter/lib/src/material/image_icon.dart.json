[
  {
    "id" : "31cde570-7395-4111-bacc-46833e4d9798",
    "prId" : 4649,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e410c821-8577-4e7e-8b88-f063c6b6c8ae",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "It would be much more efficient to do this with a color filter on the image.  We already have a `color` parameter on `Image` that turns into a `ColorFilter`.  We should probably upgrade that to a `ColorFilter` and use that to create the opacity.\n\nWe did it this goofy way before because `ColorFilter` was a host object (and therefore expensive to create).  I guess we still need to add `operator==` to https://github.com/flutter/engine/blob/master/flutter/lib/ui/painting.dart#L836 ...\n\nIf that's too much of a yak shave, please feel free to land it like this with a TODO comments and you or I can shave the yak in another patch.\n",
        "createdAt" : "2016-06-21T03:05:38Z",
        "updatedAt" : "2016-06-21T03:19:49Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "55fad0fe-7700-470c-89fa-35366610377e",
        "parentId" : "e410c821-8577-4e7e-8b88-f063c6b6c8ae",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I'm not sure I fully understood this comment so I'll file a bug. :-)\n",
        "createdAt" : "2016-06-21T03:13:56Z",
        "updatedAt" : "2016-06-21T03:19:49Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3969c8f1-c252-4462-854e-10ef09c67329",
        "parentId" : "e410c821-8577-4e7e-8b88-f063c6b6c8ae",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "https://github.com/flutter/flutter/issues/4651\n",
        "createdAt" : "2016-06-21T03:17:02Z",
        "updatedAt" : "2016-06-21T03:19:49Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "183a521c7f8b2c721976455c8b526347702dca40",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +74,78 @@\n    if (iconOpacity != 1.0) {\n      result = new Opacity(\n        opacity: iconOpacity,\n        child: result"
  },
  {
    "id" : "46fa4b2f-3708-443a-967b-94f4b2d50d43",
    "prId" : 4649,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5d05f5a-785f-489a-9a2d-235fd1465353",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Is `scaleDown` really the right fit?  To be most like `Icon`, I would have expected `none`.\n",
        "createdAt" : "2016-06-21T03:07:00Z",
        "updatedAt" : "2016-06-21T03:19:49Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "6856d96a-054a-4b8e-b121-323d2b909440",
        "parentId" : "f5d05f5a-785f-489a-9a2d-235fd1465353",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Icon sizes the picture so it always fits (it sets the font size to the size of the icon). I considered `contain`, but that would also stretch it, which seems bad.\n\nI dunno. I plan to eventually make AssetImage just pick a bitmap of the right size, the same way it picks one of the right scale. We now plumb the data all the way from the IconThemeData to the resolver, it just doesn't use it yet.\n",
        "createdAt" : "2016-06-21T03:13:12Z",
        "updatedAt" : "2016-06-21T03:19:49Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "183a521c7f8b2c721976455c8b526347702dca40",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +69,73 @@      height: iconSize,\n      color: iconColor,\n      fit: ImageFit.scaleDown,\n      alignment: FractionalOffset.center\n    );"
  }
]