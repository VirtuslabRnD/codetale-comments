[
  {
    "id" : "f88ad581-9aec-40e0-aab8-6df4606a8951",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71049db9-4392-4c2d-8a51-6f770ca65a92",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you need a newline before lists otherwise it ends up being one long paragraph (there are a number of cases of this being messed up that i wrote before discovering this)\n",
        "createdAt" : "2016-03-31T22:19:05Z",
        "updatedAt" : "2016-03-31T22:19:05Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +24,28 @@///\n/// See also:\n///  * [Radio]\n///  * [Switch]\n///  * [Slider]"
  },
  {
    "id" : "e2604c6a-6ee8-466a-8383-1f73eb13d980",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c6d9a00-8763-4509-8f13-53a3a3dc2b2f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "should say which is true and which is false :-)\n",
        "createdAt" : "2016-03-31T22:19:24Z",
        "updatedAt" : "2016-03-31T22:19:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +41,45 @@  }) : super(key: key);\n\n  /// Whether this checkbox is checked or unchecked.\n  final bool value;\n"
  },
  {
    "id" : "b4fa13b0-bc71-4b0d-b9c3-67c00426dcdd",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1fe0c6d-c88d-4ebe-8aa5-ad8f752d2933",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "`[Theme]` maybe?\n",
        "createdAt" : "2016-03-31T22:19:41Z",
        "updatedAt" : "2016-03-31T22:19:41Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +46,50 @@  /// The color to use when this checkbox is checked.\n  ///\n  /// Defaults to accent color of the current theme.\n  final Color activeColor;\n"
  },
  {
    "id" : "bacf9ac7-591d-4524-a9a2-fb8900c11fa8",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e92cb7d-14bc-46ee-bdbb-5c9eb778159a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This should talk about the fact that you have to update the value and pass it back in, probably.\n\nAlso that if this is null, the widget will appear disabled.\n",
        "createdAt" : "2016-03-31T22:25:02Z",
        "updatedAt" : "2016-03-31T22:25:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +49,53 @@  final Color activeColor;\n\n  /// Called when the user checks or unchecks the checkbox.\n  final ValueChanged<bool> onChanged;\n"
  },
  {
    "id" : "665baec1-7378-44e7-9ec7-5a24bdd41b9c",
    "prId" : 3337,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c153b9f-395d-4214-8a1e-37d15f149250",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This is a nice convention for fixed size material components. Maybe, in the fullness of time, they should provide a Size valued field?\n",
        "createdAt" : "2016-04-14T22:34:17Z",
        "updatedAt" : "2016-04-15T23:35:26Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "e20ca402-599b-4ced-bba7-caa284e204d5",
        "parentId" : "8c153b9f-395d-4214-8a1e-37d15f149250",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Yeah, that seems like a good idea. File a bug maybe? Or we can just wait til we need it.\n",
        "createdAt" : "2016-04-15T22:36:21Z",
        "updatedAt" : "2016-04-15T23:35:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3278c6df2c34d1c440f2f370fcfff3f214233278",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +66,70 @@\n  /// The width of a checkbox widget.\n  static const double width = 18.0;\n\n  @override"
  },
  {
    "id" : "083abb0e-7120-4ff6-9c08-7422aaab2477",
    "prId" : 14611,
    "prUrl" : "https://github.com/flutter/flutter/pull/14611#pullrequestreview-96297830",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13849e28-35c1-42d5-a219-500de868d1de",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "not sure what \"applied to\" means here either",
        "createdAt" : "2018-02-12T21:46:03Z",
        "updatedAt" : "2018-02-13T20:57:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ac8aa15d-1cad-4476-a4a7-68c94b5142f1",
        "parentId" : "13849e28-35c1-42d5-a219-500de868d1de",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "https://en.wikipedia.org/wiki/Apply",
        "createdAt" : "2018-02-13T21:00:44Z",
        "updatedAt" : "2018-02-13T21:00:44Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "740dd513d54dbf70793b11ab83b2225491316f98",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +108,112 @@  ///\n  /// When a tri-state checkbox is tapped its [onChanged] callback will be\n  /// applied to true if the current value is null or false, false otherwise.\n  /// Typically tri-state checkboxes are disabled (the onChanged callback is\n  /// null) so they don't respond to taps."
  },
  {
    "id" : "f5682853-06fe-4a70-b0ae-2f3c5a26a854",
    "prId" : 37636,
    "prUrl" : "https://github.com/flutter/flutter/pull/37636#pullrequestreview-272050239",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d64fffa-7718-4f44-ae7a-df14a6b6795d",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I'm not sure if white stroke is accurate",
        "createdAt" : "2019-08-07T15:32:58Z",
        "updatedAt" : "2019-08-07T18:06:03Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0edd216cfdf7e0cc430f1cecae46601a726cb801",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +281,285 @@  }\n\n  // White stroke used to paint the check and dash.\n  Paint _createStrokePaint() {\n    return Paint()"
  },
  {
    "id" : "c313e974-e040-4867-b6cd-a88e4f832e86",
    "prId" : 43213,
    "prUrl" : "https://github.com/flutter/flutter/pull/43213#pullrequestreview-304929559",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2764afd-1dd5-4b26-a75e-9285bee86043",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Are we currently using `kIsWeb` as a marker for desktop?\r\n\r\nAlso, is a single line `if` clause the preferred style for this in these conditional data structures? I kinda like it, but it does seem different than the `if` statement counterpart.\r\n",
        "createdAt" : "2019-10-21T23:06:40Z",
        "updatedAt" : "2019-10-23T16:38:08Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "c3ad599b-16ad-42cc-af17-07e8bc4104e3",
        "parentId" : "b2764afd-1dd5-4b26-a75e-9285bee86043",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : " No, I'm using it for a marker for web :-)\r\n\r\nWeb only interacts with these kinds of controls using the space bar, not the enter key, so we only do \"select\", not \"activate\".  Other platforms use either.\r\n\r\nYes, single line is preferred:\r\nhttps://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#prefer-single-line-for-short-collection-if-and-collection-for",
        "createdAt" : "2019-10-22T01:15:04Z",
        "updatedAt" : "2019-10-23T18:19:05Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e2d463da22718cb91c32b477af403efa9efc64d",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +167,171 @@    _actionMap = <LocalKey, ActionFactory>{\n      SelectAction.key: _createAction,\n      if (!kIsWeb) ActivateAction.key: _createAction,\n    };\n    _updateHighlightMode(WidgetsBinding.instance.focusManager.highlightMode);"
  },
  {
    "id" : "69fbefa5-94d2-4a48-ad1f-885ced7a54a8",
    "prId" : 43213,
    "prUrl" : "https://github.com/flutter/flutter/pull/43213#pullrequestreview-304929559",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42f5ad31-8d38-4dcb-a70e-2f957ff7bc46",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "As we discussed in person, this implementation doesn't appear to match the documentation for `tristate` on the `Checkbox`. Also need to look into firing a semantic event here.\r\n",
        "createdAt" : "2019-10-21T23:40:18Z",
        "updatedAt" : "2019-10-23T16:38:08Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "ce0d33ec-a726-4cfa-9e0b-724121a10645",
        "parentId" : "42f5ad31-8d38-4dcb-a70e-2f957ff7bc46",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Fixed the documentation to match the implementation, now firing a semantics event.",
        "createdAt" : "2019-10-22T01:15:35Z",
        "updatedAt" : "2019-10-23T18:19:05Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e2d463da22718cb91c32b477af403efa9efc64d",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +180,184 @@          break;\n        case true:\n          widget.onChanged(widget.tristate ? null : false);\n          break;\n        default: // case null:"
  },
  {
    "id" : "cfd01a95-f5a7-4a4a-9e08-38436e7a5f35",
    "prId" : 44867,
    "prUrl" : "https://github.com/flutter/flutter/pull/44867#pullrequestreview-318523255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4e3fa24-0c30-45a8-9ab2-99f444a8ece3",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Nice! The new Widget makes this code cleaner!",
        "createdAt" : "2019-11-18T18:17:44Z",
        "updatedAt" : "2019-11-19T00:18:06Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "64ade3f5eea5323b0ba4bc260b85b7d3f262cfbc",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +223,227 @@    }\n    final BoxConstraints additionalConstraints = BoxConstraints.tight(size);\n    return FocusableActionDetector(\n      actions: _actionMap,\n      focusNode: widget.focusNode,"
  }
]