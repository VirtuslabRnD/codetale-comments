[
  {
    "id" : "e4226c59-44ab-4afa-9d41-cd2c5013b8ac",
    "prId" : 621,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0371467-bb4a-4204-8ee7-478930b18ae2",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I don't think it's possible for this to be null here, but it seems find to handle that case for symmetry.\n",
        "createdAt" : "2015-12-01T08:00:24Z",
        "updatedAt" : "2015-12-01T09:37:04Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee802bfe31d96fd02d8657008185a940df4ce9cf",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +80,84 @@    _currentSplash?.confirm();\n    _currentSplash = null;\n    if (config.onLongPress != null)\n      config.onLongPress();\n  }"
  },
  {
    "id" : "328ba97d-197d-48fd-a0c3-3c58c1c2d61f",
    "prId" : 3261,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b51a9bd4-c894-43ee-a346-f367d741b3d0",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i missed this rename in my original review. The original term was \"is this ink response contained inside the well\". The new term seems to be \"is this a contained ink well\". I think the old term made more sense.\n",
        "createdAt" : "2016-04-12T20:22:06Z",
        "updatedAt" : "2016-04-12T20:22:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff1b59cf66546832c67e474b261e6e9ff82ec011",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +36,40 @@    this.onLongPress,\n    this.onHighlightChanged,\n    this.containedInkWell: false,\n    this.highlightShape: BoxShape.circle\n  }) : super(key: key);"
  },
  {
    "id" : "cdf0dc5f-3c03-407c-8476-628a54a8de6a",
    "prId" : 8693,
    "prUrl" : "https://github.com/flutter/flutter/pull/8693#pullrequestreview-26175538",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ccf7b59-9300-4b5d-95ee-b4b3bef928c7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "default value, etc",
        "createdAt" : "2017-03-09T23:51:47Z",
        "updatedAt" : "2017-03-27T19:52:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0959725a47848133fa7b98704dd1f8f5a2511bd0",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +263,267 @@    Color highlightColor,\n    Color splashColor,\n    BorderRadius borderRadius,\n  }) : super(\n    key: key,"
  },
  {
    "id" : "7c8b7083-5515-4383-9434-57b7da7f7699",
    "prId" : 10797,
    "prUrl" : "https://github.com/flutter/flutter/pull/10797#pullrequestreview-44679456",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4eaa517-13a5-4d88-b722-ade91757b022",
        "parentId" : null,
        "authorId" : "7b783ce6-a0fd-4147-a5d9-e1f619149d45",
        "body" : "oh! Glad you indicated this :)",
        "createdAt" : "2017-06-16T22:53:42Z",
        "updatedAt" : "2017-06-16T22:53:42Z",
        "lastEditedBy" : "7b783ce6-a0fd-4147-a5d9-e1f619149d45",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3a617e0ab4512e16468bf6431625a45a25f748a",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +118,122 @@  /// Whether this ink response should be clipped its bounds.\n  ///\n  /// This flag also controls whether the splash migrates to the center of the\n  /// [InkResponse] or not. If [containedInkWell] is true, the splash remains\n  /// centered around the tap location. If it is false, the splash migrates to"
  },
  {
    "id" : "fbba4d0f-5868-41d2-b104-c664099942a4",
    "prId" : 10920,
    "prUrl" : "https://github.com/flutter/flutter/pull/10920#pullrequestreview-46096004",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e304fd5b-1e38-4ad9-9041-617b421584c2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "the doc for the constructor should mention that containedInkWell, borderRadius, and enableFeedback must not be null, and the asserts should include the other two as well.",
        "createdAt" : "2017-06-23T19:04:29Z",
        "updatedAt" : "2017-06-23T21:26:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ca1fe4ec-99db-490c-9284-bf654f120a0c",
        "parentId" : "e304fd5b-1e38-4ad9-9041-617b421584c2",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Asserts are throwing left and right when I assert on containedInkWell and borderRadius. If the assert is really true we should do that (and the associated clean-up) in a follow-up PR.",
        "createdAt" : "2017-06-23T21:17:29Z",
        "updatedAt" : "2017-06-23T21:26:46Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "2aa841a7-ea5e-4637-aba2-de6daa97dfa1",
        "parentId" : "e304fd5b-1e38-4ad9-9041-617b421584c2",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Odd.",
        "createdAt" : "2017-06-23T21:32:42Z",
        "updatedAt" : "2017-06-23T21:32:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "480c37d1a8e46286e15e8f4cdc3478fc429a504b",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +97,101 @@    this.splashColor,\n    this.enableFeedback: true,\n  }) : assert(enableFeedback != null), super(key: key);\n\n  /// The widget below this widget in the tree."
  },
  {
    "id" : "878c032a-b559-4df4-8166-0471e8a09285",
    "prId" : 10920,
    "prUrl" : "https://github.com/flutter/flutter/pull/10920#pullrequestreview-46067506",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b662e780-4317-4dd3-9ec6-653194fe5825",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "maybe point to Feedback?",
        "createdAt" : "2017-06-23T19:04:51Z",
        "updatedAt" : "2017-06-23T21:26:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "480c37d1a8e46286e15e8f4cdc3478fc429a504b",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +186,190 @@  ///\n  /// For example, on Android a tap will produce a clicking sound and a\n  /// long-press will produce a short vibration, when feedback is enabled.\n  ///\n  /// See also:"
  },
  {
    "id" : "c1955c8a-755b-4a8b-bb5f-5ae0ae4a779c",
    "prId" : 13986,
    "prUrl" : "https://github.com/flutter/flutter/pull/13986#pullrequestreview-87659325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7390774-daea-41aa-bff6-53e86d57e865",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "should talk about what arguments have got to be non-null",
        "createdAt" : "2018-01-09T21:12:17Z",
        "updatedAt" : "2018-01-09T22:17:11Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "25497ea7842f03820418924d59b55b12fe8712f4",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +31,35 @@/// class.\nabstract class InteractiveInkFeature extends InkFeature {\n  /// Creates an InteractiveInkFeature.\n  ///\n  /// The [controller] and [referenceBox] arguments must not be null."
  },
  {
    "id" : "562b132c-0b0c-4eb7-b2ef-63455d9737ad",
    "prId" : 23196,
    "prUrl" : "https://github.com/flutter/flutter/pull/23196#pullrequestreview-165687687",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5691aa0-1cca-4b42-8f22-ea939227cec2",
        "parentId" : null,
        "authorId" : "c3bb1937-3415-4681-bb4d-4886e71dc8e3",
        "body" : "Why the ',' between ' [InkResponse]' and 'and'",
        "createdAt" : "2018-10-17T14:50:06Z",
        "updatedAt" : "2018-10-17T14:50:07Z",
        "lastEditedBy" : "c3bb1937-3415-4681-bb4d-4886e71dc8e3",
        "tags" : [
        ]
      },
      {
        "id" : "d17cd811-f316-4edc-80ea-8b9819fa9e2b",
        "parentId" : "b5691aa0-1cca-4b42-8f22-ea939227cec2",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "--> https://en.wikipedia.org/wiki/Serial_comma",
        "createdAt" : "2018-10-17T15:15:12Z",
        "updatedAt" : "2018-10-17T15:15:12Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "f39660ad5cbb330bbc9108c6be80e86543e81b12",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +70,74 @@\n/// An encapsulation of an [InteractiveInkFeature] constructor used by\n/// [InkWell], [InkResponse], and [ThemeData].\n///\n/// Interactive ink feature implementations should provide a static const"
  },
  {
    "id" : "492f9ab1-337b-4cf6-88cf-9002bc33a1a9",
    "prId" : 31438,
    "prUrl" : "https://github.com/flutter/flutter/pull/31438#pullrequestreview-236350797",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "724bbfd9-0534-43ba-baf9-39413d15cb3b",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Why do we need to have a map of the highlights. Are there ever more than one active at a time?\r\n",
        "createdAt" : "2019-05-10T19:54:43Z",
        "updatedAt" : "2019-05-15T02:08:38Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "e9d3175f-861d-4e52-a8f7-5f79ef7ea6e7",
        "parentId" : "724bbfd9-0534-43ba-baf9-39413d15cb3b",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes.  You can have a hover, a focus, and a highlight at the same time. (Click on a button that is focused, for instance, since the mouse is over the button, it's got focus, and it's being pressed), and they can't be the same highlight and just change colors, since they are also all animated.",
        "createdAt" : "2019-05-11T01:28:41Z",
        "updatedAt" : "2019-05-15T02:08:38Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "388e9d68eb6ab7adad56ff72b72aa9a455332b49",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +469,473 @@  FocusNode _focusNode;\n  final Map<_HighlightType, InkHighlight> _highlights = <_HighlightType, InkHighlight>{};\n\n  bool get highlightsExist => _highlights.values.where((InkHighlight highlight) => highlight != null).isNotEmpty;\n"
  },
  {
    "id" : "7f030ad6-bdb8-4497-85a3-5acefeb8d571",
    "prId" : 37825,
    "prUrl" : "https://github.com/flutter/flutter/pull/37825#pullrequestreview-529846173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e19fa95-6244-404a-ae5e-b14413b2d196",
        "parentId" : null,
        "authorId" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "body" : "@gspencergoog Hi,\r\nThis change lets the touch phone disabled the `focusColor` without API documentations. I think we should improve the documentations.\r\nhttps://github.com/flutter/flutter/blob/15d2d8a8750c2733871f7f8ae558c268efd32fc0/packages/flutter/lib/src/material/ink_well.dart#L439-L450\r\n\r\nSometimes it is useful that display the focus color on touch devices, such as #70294 \r\n\r\nBased on this, I want to add a property of  `InkWell` like `alwaysShowFocusColor`  to optional this behavior.\r\n```dart\r\n      case FocusHighlightMode.touch:\r\n        showFocus = alwaysShowFocusColor  ? _shouldShowFocus : false;\r\n        break;\r\n```\r\n\r\nWaiting for your thoughts! thanks very much.\r\n",
        "createdAt" : "2020-11-12T03:04:16Z",
        "updatedAt" : "2020-11-12T03:46:40Z",
        "lastEditedBy" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "tags" : [
        ]
      },
      {
        "id" : "a8650c06-f42f-48ee-a3f7-be3537a47389",
        "parentId" : "9e19fa95-6244-404a-ae5e-b14413b2d196",
        "authorId" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "body" : "#70442 ",
        "createdAt" : "2020-11-13T08:01:38Z",
        "updatedAt" : "2020-11-13T08:01:39Z",
        "lastEditedBy" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b33a3f8cb2a623ec610271489683b1e2a56b239",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +624,628 @@    switch (WidgetsBinding.instance.focusManager.highlightMode) {\n      case FocusHighlightMode.touch:\n        showFocus = false;\n        break;\n      case FocusHighlightMode.traditional:"
  },
  {
    "id" : "f34f192b-c06a-4422-943f-8e2fcb031303",
    "prId" : 41220,
    "prUrl" : "https://github.com/flutter/flutter/pull/41220#pullrequestreview-294602928",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c239f83-f7fe-47b0-8995-ca6c504c30f0",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "[we talked this over and decided to leave the API as is]\r\n\r\nJust FTR: there's tension here between convenience and separation of concerns. We're exposing the most useful Focus widget parameters here and in other components for the sake of convenience. It's for the not uncommon case where the developer wants to be able to drive the focus directly to this inkwell (or button etc). Unfortunately that means blending the FocusWidget's parameters into other widget configurations. There doesn't seem to be a clean way to avoid this:\r\n - A TransitionBuilder valued `buildFocus` parameter could be used instead. It would be easy enough to have it return a widget that DTRT, but somewhat clunkier.\r\n- The developer could just wrap the component's child with a Focus widget. But that would create a nested Focus widget (under the one created by the component by default) which might not be what's wanted (Semantics). ",
        "createdAt" : "2019-09-28T00:15:32Z",
        "updatedAt" : "2019-10-01T21:20:20Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "370a125bbabcd7f5cb722b7f6ccc4591a56e2708",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +211,215 @@    this.enableFeedback = true,\n    this.excludeFromSemantics = false,\n    this.focusNode,\n    this.canRequestFocus = true,\n    this.onFocusChange,"
  },
  {
    "id" : "2643ffd4-6f9c-4c52-a589-9a4e7474f566",
    "prId" : 41220,
    "prUrl" : "https://github.com/flutter/flutter/pull/41220#pullrequestreview-294611976",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c5a6368-a987-49b1-8ca1-26abe3dd276c",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Presumably this is called even if this inkwell has the initial focus when the app starts.",
        "createdAt" : "2019-09-28T00:20:14Z",
        "updatedAt" : "2019-10-01T21:20:20Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "d075e445-3f3d-401d-bfbf-94c025aba0e1",
        "parentId" : "4c5a6368-a987-49b1-8ca1-26abe3dd276c",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes.",
        "createdAt" : "2019-09-28T00:53:58Z",
        "updatedAt" : "2019-10-01T21:20:21Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "370a125bbabcd7f5cb722b7f6ccc4591a56e2708",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +646,650 @@\n  bool _hasFocus = false;\n  void _handleFocusUpdate(bool hasFocus) {\n    _hasFocus = hasFocus;\n    _updateFocusHighlights();"
  },
  {
    "id" : "8d542afb-e272-40d5-bcfe-f9561c338565",
    "prId" : 41220,
    "prUrl" : "https://github.com/flutter/flutter/pull/41220#pullrequestreview-294611976",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d09125b1-54e6-4b1a-8444-68ef85c07aca",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "You might assert referenceBox.hasSize here, since we're assuming that the widget has been laid out.",
        "createdAt" : "2019-09-28T00:27:41Z",
        "updatedAt" : "2019-10-01T21:20:20Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "5b67c728-f325-4934-95ea-1651dc08bf00",
        "parentId" : "d09125b1-54e6-4b1a-8444-68ef85c07aca",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done.",
        "createdAt" : "2019-09-28T00:54:08Z",
        "updatedAt" : "2019-10-01T21:20:21Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "370a125bbabcd7f5cb722b7f6ccc4591a56e2708",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +668,672 @@      final RenderBox referenceBox = context.findRenderObject();\n      assert(referenceBox.hasSize, 'InkResponse must be done with layout before starting a splash.');\n      globalPosition = referenceBox.localToGlobal(referenceBox.paintBounds.center);\n    } else {\n      globalPosition = details.globalPosition;"
  },
  {
    "id" : "f5c0c787-d878-48d2-a8f1-00541abdb55b",
    "prId" : 42683,
    "prUrl" : "https://github.com/flutter/flutter/pull/42683#pullrequestreview-301573344",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca7e2b5f-4e8e-44d5-9a1a-087a9ead4047",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Was this a performance win, or just a style choice to pull out `createAction`? Just curious.\r\n",
        "createdAt" : "2019-10-14T22:05:54Z",
        "updatedAt" : "2019-10-14T22:36:57Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "9cf7bdb3-8278-4dc3-bfa1-df685da4e3d3",
        "parentId" : "ca7e2b5f-4e8e-44d5-9a1a-087a9ead4047",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "This was a small performance win, since we weren't creating the closure on the fly in the `initState`.",
        "createdAt" : "2019-10-14T22:37:24Z",
        "updatedAt" : "2019-10-14T22:37:24Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ef7556d9b6def8f78c87663b0cde3041cf19ed2",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +503,507 @@  void initState() {\n    super.initState();\n    _actionMap = <LocalKey, ActionFactory>{ ActivateAction.key: _createAction };\n    WidgetsBinding.instance.focusManager.addHighlightModeListener(_handleFocusHighlightModeChange);\n  }"
  },
  {
    "id" : "607b02ff-1dc4-4058-8bf7-d0712a8257a4",
    "prId" : 49480,
    "prUrl" : "https://github.com/flutter/flutter/pull/49480#pullrequestreview-353125424",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a624deb7-55bf-4f86-815b-9a508037008b",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "In between, as @HansMuller has recommended, there should be some documentation here on what the named parameters do since this function will be public. Assume that readers do not have any context to what this function is used for. Here's an example to get started:\r\n```dart\r\n/// If [customBorder] not null, the canvas is clipped by the [ShapeBorder] provided. If \r\n/// [customBorder] is null and [borderRadius] is non-null and not [BorderRadius.zero],\r\n/// the canvas is clipped by the [BorderRadius] provided. {and so forth}\r\n```",
        "createdAt" : "2020-02-03T18:01:17Z",
        "updatedAt" : "2020-02-08T05:59:05Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "c1da8ef5-b13a-4d6f-b547-8a9ad5a2e697",
        "parentId" : "a624deb7-55bf-4f86-815b-9a508037008b",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "The rest of the parameters are still missing explanations/comments (canvas, transform, paint, center, etc).",
        "createdAt" : "2020-02-04T16:18:59Z",
        "updatedAt" : "2020-02-08T05:59:05Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "315c5f1f-9439-4bac-8839-a6319dcba815",
        "parentId" : "a624deb7-55bf-4f86-815b-9a508037008b",
        "authorId" : "cff86717-79b2-4267-8990-0f7c05b3b845",
        "body" : "@shihaohong Added all remaining explanations except `canvas` as that seems redundant in case of painting",
        "createdAt" : "2020-02-04T16:37:06Z",
        "updatedAt" : "2020-02-08T05:59:05Z",
        "lastEditedBy" : "cff86717-79b2-4267-8990-0f7c05b3b845",
        "tags" : [
        ]
      }
    ],
    "commit" : "81c7cc393c7e38b9549905b97090e78fc78059c5",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +67,71 @@\n  /// Draws an ink splash or ink ripple on the passed in [Canvas].\n  ///\n  /// The [transform] argument is the [Matrix4] transform that typically\n  /// shifts the coordinate space of the canvas to the space in which"
  },
  {
    "id" : "a5f472d4-9564-49aa-8285-08b9b8ce42dc",
    "prId" : 56611,
    "prUrl" : "https://github.com/flutter/flutter/pull/56611#pullrequestreview-408500621",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6517bc4-4306-4fe1-827f-0689ec8ba9b9",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It looks like didChangeDependencies() should remove the child from its old list of active children (the way deactivate does) if its _ParentInkResponseState has changed.",
        "createdAt" : "2020-05-08T20:19:30Z",
        "updatedAt" : "2020-05-09T01:13:53Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b42ccdd9abef8fd05c7182b597db43064fd470e",
    "line" : 177,
    "diffHunk" : "@@ -1,1 +694,698 @@    final bool lastAnyPressed = _anyChildInkResponsePressed;\n    if (value) {\n      _activeChildren.add(childState);\n    } else {\n      _activeChildren.remove(childState);"
  },
  {
    "id" : "1f0adcb1-cc90-4244-bfbc-3a0a5b0c8c75",
    "prId" : 67166,
    "prUrl" : "https://github.com/flutter/flutter/pull/67166#pullrequestreview-503182611",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32c1e08b-f0b9-4feb-8ef1-0c1748947a6d",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Tests in google are breaking because this was marked required.\r\n\r\n@a14n do you remember why this needs to be required now?\r\n\r\n/cc @Hixie @HansMuller ",
        "createdAt" : "2020-10-06T16:53:03Z",
        "updatedAt" : "2020-10-06T16:53:04Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "11de931b-1a83-4adc-8eaa-f1e20599e668",
        "parentId" : "32c1e08b-f0b9-4feb-8ef1-0c1748947a6d",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "Nothing obvious comes to my mind. We can remove the required keyword.",
        "createdAt" : "2020-10-06T17:05:34Z",
        "updatedAt" : "2020-10-06T17:05:34Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "e6693dd1-1251-47c0-bbc2-c6c15ddfa5bd",
        "parentId" : "32c1e08b-f0b9-4feb-8ef1-0c1748947a6d",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Removing in https://github.com/flutter/flutter/pull/67427.",
        "createdAt" : "2020-10-06T17:07:53Z",
        "updatedAt" : "2020-10-06T17:07:54Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "691cd371cae3549beed8ae44586aa60c3463bdb9",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +173,177 @@    ShapeBorder? customBorder,\n    double? radius,\n    required VoidCallback? onRemoved,\n  });\n}"
  }
]