[
  {
    "id" : "7c91f74a-eede-4b92-a230-5752f56660c3",
    "prId" : 5765,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0158dd0d-c850-41ed-a6ca-2c3daee06eed",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "should this be a ButtonBar?\n",
        "createdAt" : "2016-09-07T23:41:29Z",
        "updatedAt" : "2016-09-16T17:30:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "57efc382-7d04-4872-9f20-3cffa94d2f1f",
        "parentId" : "0158dd0d-c850-41ed-a6ca-2c3daee06eed",
        "authorId" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "body" : "Using a `ButtonBar` in this particular case would yield a more verbose and less elegant solution in this particular case.\n",
        "createdAt" : "2016-09-09T17:17:52Z",
        "updatedAt" : "2016-09-16T17:30:31Z",
        "lastEditedBy" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "tags" : [
        ]
      },
      {
        "id" : "59e2a95b-8d96-48a8-9ee8-348f54ac0547",
        "parentId" : "0158dd0d-c850-41ed-a6ca-2c3daee06eed",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "That's sad. Why is that? It's supposed to take care of all the padding and everything for you.\n",
        "createdAt" : "2016-09-09T17:19:36Z",
        "updatedAt" : "2016-09-16T17:30:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e5a25959-03d9-469f-803d-7bfe07c26d1f",
        "parentId" : "0158dd0d-c850-41ed-a6ca-2c3daee06eed",
        "authorId" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "body" : "Mostly because all the styling for the buttons is already implicitly right. Creating a `ButtonTheme` here would require styling buttons explicitly and with the `8dp` margin still required.\n",
        "createdAt" : "2016-09-09T17:23:57Z",
        "updatedAt" : "2016-09-16T17:30:31Z",
        "lastEditedBy" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "tags" : [
        ]
      },
      {
        "id" : "eb3f7a25-d594-4445-84bd-1b2f72df40ae",
        "parentId" : "0158dd0d-c850-41ed-a6ca-2c3daee06eed",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "k...\n",
        "createdAt" : "2016-09-09T17:32:15Z",
        "updatedAt" : "2016-09-16T17:30:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ebc43990e6d886644e01aaeb55e61143079a758",
    "line" : 347,
    "diffHunk" : "@@ -1,1 +345,349 @@      child: new ConstrainedBox(\n        constraints: const BoxConstraints.tightFor(height: 48.0),\n        child: new Row(\n          children: <Widget>[\n            new FlatButton("
  },
  {
    "id" : "00930f29-37c0-4b16-961e-876d2f182578",
    "prId" : 5765,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29faff27-0716-40e8-a788-6c45619af4b4",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "do all these styles work in the dark theme as well?\n",
        "createdAt" : "2016-09-09T21:05:14Z",
        "updatedAt" : "2016-09-16T17:30:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e54fca2e-0760-4f25-a307-2dd5124c0436",
        "parentId" : "29faff27-0716-40e8-a788-6c45619af4b4",
        "authorId" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "body" : "Definitely not. How should we tackle the dark theme?\n",
        "createdAt" : "2016-09-09T21:45:15Z",
        "updatedAt" : "2016-09-16T17:30:31Z",
        "lastEditedBy" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "tags" : [
        ]
      },
      {
        "id" : "dfff15be-2c10-43ed-a98b-47f7e6ac3c4a",
        "parentId" : "29faff27-0716-40e8-a788-6c45619af4b4",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "dunno. does the spec say anything about dark theme colors for steppers? @HansMuller?\n",
        "createdAt" : "2016-09-09T22:21:52Z",
        "updatedAt" : "2016-09-16T17:30:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "7aa1c0d0-fa37-4581-96b8-cdd8d2252e2a",
        "parentId" : "29faff27-0716-40e8-a788-6c45619af4b4",
        "authorId" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "body" : "@Hixie Should be good now with the dark theme too.\n",
        "createdAt" : "2016-09-12T17:22:03Z",
        "updatedAt" : "2016-09-16T17:30:31Z",
        "lastEditedBy" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ebc43990e6d886644e01aaeb55e61143079a758",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@}\n\nconst TextStyle _kStepStyle = const TextStyle(\n  fontSize: 12.0,\n  color: Colors.white"
  },
  {
    "id" : "63531223-4f35-4c57-a849-f8ba0f83efff",
    "prId" : 5765,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a39625a4-e441-4207-94fd-7d0d85b7bd35",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "document that the number of steps cannot change\n",
        "createdAt" : "2016-09-09T21:09:54Z",
        "updatedAt" : "2016-09-16T17:30:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ebc43990e6d886644e01aaeb55e61143079a758",
    "line" : 147,
    "diffHunk" : "@@ -1,1 +145,149 @@  }\n\n  /// The steps of the stepper whose titles, subtitles, icons always get shown.\n  ///\n  /// The length of [steps] must not change."
  },
  {
    "id" : "b529373f-eb19-4532-8756-0688f470860b",
    "prId" : 5765,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a6dd839-fa3c-4262-8dfb-627d0400606e",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "We've used the term \"disabled\" for this attribute in the material widgets.\n",
        "createdAt" : "2016-09-13T19:00:42Z",
        "updatedAt" : "2016-09-16T17:30:31Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ebc43990e6d886644e01aaeb55e61143079a758",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +106,110 @@\n  /// Whether or not the step is active. The flag only influences styling.\n  final bool isActive;\n}\n"
  },
  {
    "id" : "8b04f892-0849-474d-8a34-85f2f5f22f2a",
    "prId" : 23310,
    "prUrl" : "https://github.com/flutter/flutter/pull/23310#pullrequestreview-167079778",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3931427-1393-4226-83e5-466bf6b60e21",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I did not realize users had to pass in the step callbacks and current state already, which means there is no need to pass them through the callback - I spaced on this a bit, really sorry!\r\n\r\nInstead the API should look something like this:\r\n\r\n```dart\r\n// Assume currentStep, onTapped, onContinue, and onCancel are defined as members of a State object.\r\n  return Stepper(\r\n    steps: [ ... ],\r\n    type: StepperType.vertical,\r\n    currentStep: currentStep,\r\n    onStepTapped: onTapped ,\r\n    onStepContinue: onContinue,\r\n    onStepCancel: onCancel,\r\n    controls: (BuildContext context) {\r\n      return Row(children: [Button(onPressed: onContinue, ...), Button(onPressed: onCancel, ...)]);\r\n    },\r\n  );\r\n```",
        "createdAt" : "2018-10-19T22:37:31Z",
        "updatedAt" : "2018-10-22T20:23:24Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "c47b5d4e-18b3-46ab-a282-12773ebc4b13",
        "parentId" : "a3931427-1393-4226-83e5-466bf6b60e21",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "I don't think so? Those parameters are optional so we need to provide a way for the user to have access to the default functionality if they don't pass in those functions. I guess we could change the stepper to require those functions to be set, but I feel like the implementation that we have right now works well. I'm also realizing the current implementation should also function correctly in the case that these functions are set to a value or to null. ",
        "createdAt" : "2018-10-22T18:42:12Z",
        "updatedAt" : "2018-10-22T20:23:24Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "6f3b6ffa-fa76-4f56-84e4-4c2a00bec854",
        "parentId" : "a3931427-1393-4226-83e5-466bf6b60e21",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "So just to clarify this conversation, because this extended functionality is primarily about aesthetics, it makes the most sense to not let the user pass in their own functions and instead make their buttons use the two functions already included in the stepper.",
        "createdAt" : "2018-10-22T19:51:29Z",
        "updatedAt" : "2018-10-22T20:23:24Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9def774514ad6ae5830f52ff1cf9f98bb40afb7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +141,145 @@    this.onStepContinue,\n    this.onStepCancel,\n    this.controlsBuilder,\n  }) : assert(steps != null),\n       assert(type != null),"
  },
  {
    "id" : "4489dbd0-afe9-45ec-8ded-d88474e27437",
    "prId" : 23310,
    "prUrl" : "https://github.com/flutter/flutter/pull/23310#pullrequestreview-166729154",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8b9d248-cdbf-4ace-b4d7-48fc69fd6f9f",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I would not use [hungarian notation](https://en.wikipedia.org/wiki/Hungarian_notation) for a constructor parameter, instead maybe just call it `controls`?",
        "createdAt" : "2018-10-19T22:38:46Z",
        "updatedAt" : "2018-10-22T20:23:24Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "47b9a43e-1aa3-4db4-8b8f-6d7d840c24cf",
        "parentId" : "c8b9d248-cdbf-4ace-b4d7-48fc69fd6f9f",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I take this back, we use `fooBuilder` everywhere ☹️ ",
        "createdAt" : "2018-10-20T00:16:51Z",
        "updatedAt" : "2018-10-22T20:23:24Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9def774514ad6ae5830f52ff1cf9f98bb40afb7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +141,145 @@    this.onStepContinue,\n    this.onStepCancel,\n    this.controlsBuilder,\n  }) : assert(steps != null),\n       assert(type != null),"
  },
  {
    "id" : "e4852856-b4ad-477d-9ef5-c683640ec1d8",
    "prId" : 23310,
    "prUrl" : "https://github.com/flutter/flutter/pull/23310#pullrequestreview-167077754",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca32e9f0-c433-4d31-829c-351ae9183d7c",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : ":fire: :fire: Yay Examples! :fire:  :smile: ",
        "createdAt" : "2018-10-19T22:40:13Z",
        "updatedAt" : "2018-10-22T20:23:24Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "f876694c-3dd2-412b-be2f-a4701a3ab785",
        "parentId" : "ca32e9f0-c433-4d31-829c-351ae9183d7c",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "Yayayay!",
        "createdAt" : "2018-10-22T19:46:30Z",
        "updatedAt" : "2018-10-22T20:23:24Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9def774514ad6ae5830f52ff1cf9f98bb40afb7",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +187,191 @@  ///\n  /// ```dart\n  /// Stepper(\n  ///   controlsBuilder:\n  ///     (BuildContext context, {VoidCallback onStepContinue, VoidCallback onStepCancel}) {"
  }
]