[
  {
    "id" : "e05d8fbe-5440-4870-8713-c8689693c22d",
    "prId" : 1642,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "613d95be-3c7e-4609-8d19-bb6e175ebd1b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "why is this limited to a finite range? seems like we should support infinite ranges here.\n",
        "createdAt" : "2016-02-06T02:32:26Z",
        "updatedAt" : "2016-02-06T04:12:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c2a5ef95-05cf-47f7-a566-80b4d37a1957",
        "parentId" : "613d95be-3c7e-4609-8d19-bb6e175ebd1b",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, we can support infinite ranges.  We want finite ranges too, though, so people can make constrained pickers.\n",
        "createdAt" : "2016-02-06T03:49:18Z",
        "updatedAt" : "2016-02-06T04:12:24Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "098e8cdb-41b7-4962-ae6b-6b958216e2f3",
        "parentId" : "613d95be-3c7e-4609-8d19-bb6e175ebd1b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "for sure. (We also probably want a filter callback to exclude certain months/years/days/whatever)\n",
        "createdAt" : "2016-02-06T04:08:33Z",
        "updatedAt" : "2016-02-06T04:12:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b8966942426924dde9c049b13f1524109eb88ed",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +338,342 @@    return new ScrollableLazyList(\n      itemExtent: config.itemExtent,\n      itemCount: (config.lastDate.year - config.firstDate.year) * 12 + config.lastDate.month - config.firstDate.month + 1,\n      itemBuilder: buildItems\n    );"
  },
  {
    "id" : "93986d1b-811b-4916-a248-f329c6fa1cfd",
    "prId" : 1642,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbcee18c-f3bc-4964-a97d-426461549321",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "here too\n",
        "createdAt" : "2016-02-06T02:32:42Z",
        "updatedAt" : "2016-02-06T04:12:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b8966942426924dde9c049b13f1524109eb88ed",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +406,410 @@    return new ScrollableLazyList(\n      itemExtent: _itemExtent,\n      itemCount: config.lastDate.year - config.firstDate.year + 1,\n      itemBuilder: buildItems\n    );"
  },
  {
    "id" : "51562231-ba57-4633-954e-0c4468acc40b",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b730127e-585a-44fd-97f9-644be6700f99",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "newline\n",
        "createdAt" : "2016-03-31T22:25:56Z",
        "updatedAt" : "2016-03-31T22:25:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +26,30 @@///\n/// See also:\n///  * [showDatePicker]\n///  * <https://www.google.com/design/spec/components/pickers.html#pickers-date-pickers>\nclass DatePicker extends StatefulWidget {"
  },
  {
    "id" : "2172afd6-53bb-4f2e-bd01-cc67a244f5ca",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec2c9232-f57d-4ad8-926c-24ea0b41ca75",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "~~mention what the default would be? how far back will we go?~~ there's no default. the field is required. we'll mention that in the docs for the constructor when we add that.\n\ndo we support going back before the gregorian calendar started, into proleptic gregorian land?\n",
        "createdAt" : "2016-03-31T22:26:45Z",
        "updatedAt" : "2016-03-31T22:33:39Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +48,52 @@  final ValueChanged<DateTime> onChanged;\n\n  /// The earliest date the user is permitted to pick.\n  final DateTime firstDate;\n"
  },
  {
    "id" : "d9b87f8a-40a2-4a41-a5ca-ba989c1be772",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ee84dec-8bad-49d1-9e91-317154332d14",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "blank line\n",
        "createdAt" : "2016-03-31T22:27:29Z",
        "updatedAt" : "2016-03-31T22:27:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +193,197 @@///\n/// See also:\n///  * [DatePicker].\n///  * <https://www.google.com/design/spec/components/pickers.html#pickers-date-pickers>\nclass DayPicker extends StatelessWidget {"
  },
  {
    "id" : "a15ca13c-1337-4621-8e10-f8bf4d4d1acf",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e8fab71-1d11-4b25-b1a2-7950f20e5fd5",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "blank line\n",
        "createdAt" : "2016-03-31T22:29:03Z",
        "updatedAt" : "2016-03-31T22:29:03Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +321,325 @@///\n/// See also:\n///  * [DatePicker]\n///  * <https://www.google.com/design/spec/components/pickers.html#pickers-date-pickers>\nclass MonthPicker extends StatefulWidget {"
  },
  {
    "id" : "e90db2f3-721e-491d-9342-49f657690190",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbc48b8a-1091-4cd3-b2bb-8fa1fbbc4ba2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "~~see earlier comments regarding defaults~~ there's no default. the field is required. we'll mention that in the docs for the constructor when we add that.\n",
        "createdAt" : "2016-03-31T22:29:17Z",
        "updatedAt" : "2016-03-31T22:33:07Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +346,350 @@  final ValueChanged<DateTime> onChanged;\n\n  /// The earliest date the user is permitted to pick.\n  final DateTime firstDate;\n"
  },
  {
    "id" : "1e683ea7-c0e3-4461-82b9-6b994d13f228",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e77704a0-6199-4185-bf33-2048a4cbc22d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "~~default?~~ there's no default. the field is required. we'll mention that in the docs for the constructor when we add that.\n",
        "createdAt" : "2016-03-31T22:29:29Z",
        "updatedAt" : "2016-03-31T22:33:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +352,356 @@  final DateTime lastDate;\n\n  /// The amount of vertical space to use for each month in the picker.\n  final double itemExtent;\n"
  },
  {
    "id" : "ad6403ff-c78b-4a48-8870-8951fb560a0c",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10c98b63-a18d-4c73-9ef7-bc8622759a77",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "for all the DateTime fields in this file, mention what time zone is used to select the date. Local time zone? UTC? The one that the DateTime specifies?\n",
        "createdAt" : "2016-03-31T22:30:38Z",
        "updatedAt" : "2016-03-31T22:30:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "aafba902-0ec5-415d-bf65-83aa2e6f048a",
        "parentId" : "10c98b63-a18d-4c73-9ef7-bc8622759a77",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I'm not sure about the answer to this question...\n",
        "createdAt" : "2016-04-01T00:13:55Z",
        "updatedAt" : "2016-04-01T00:13:55Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "d6238ce0-65c1-4b58-ac93-b877cccc6720",
        "parentId" : "10c98b63-a18d-4c73-9ef7-bc8622759a77",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "looks like DateTime is always either in UTC or in \"the local time zone\". We use the date of the value in whatever time zone that DateTime is in. (e.g. `DateTime.parse('1970-01-01T00:00:00+0500')` generates a UTC date, so the year would be 1969.)\n",
        "createdAt" : "2016-04-01T00:29:07Z",
        "updatedAt" : "2016-04-01T00:29:07Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +15,19 @@import 'theme.dart';\nimport 'typography.dart';\n\nenum _DatePickerMode { day, year }\n"
  },
  {
    "id" : "2057c7d9-3ea7-424b-a6ca-0ff1c9f6ef75",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7faef5c7-af7f-435d-b2ef-f92eabc55d61",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "blank line\n",
        "createdAt" : "2016-03-31T22:30:52Z",
        "updatedAt" : "2016-03-31T22:30:52Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +433,437 @@///\n/// See also:\n///  * [DatePicker]\n///  * <https://www.google.com/design/spec/components/pickers.html#pickers-date-pickers>\nclass YearPicker extends StatefulWidget {"
  },
  {
    "id" : "ce211d19-410c-4c6e-ba90-2bc8be331f45",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66c93e48-995e-4054-8d78-32fcd2ebe57d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "see earlier comments\n",
        "createdAt" : "2016-03-31T22:31:11Z",
        "updatedAt" : "2016-03-31T22:31:11Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +456,460 @@  final ValueChanged<DateTime> onChanged;\n\n  /// The earliest date the user is permitted to pick.\n  final DateTime firstDate;\n"
  },
  {
    "id" : "2ae4d2fc-840b-404d-8b94-7c39ff106ee8",
    "prId" : 7773,
    "prUrl" : "https://github.com/flutter/flutter/pull/7773#pullrequestreview-19657342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6eb3cd07-493c-4e38-ac18-138ed901cca8",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "You need to update this member in `didUpdateConfig` as well.  When your parent builds a new widget for this location in the tree and this `State` object is re-used, the framework calls `didUpdateConfig` to let you know that your `config` property now points to the new widget.",
        "createdAt" : "2017-02-01T03:08:40Z",
        "updatedAt" : "2017-02-02T19:24:23Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "ba70ec08-1d10-4019-89db-eb8be63c3dfa",
        "parentId" : "6eb3cd07-493c-4e38-ac18-138ed901cca8",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Understood. Thanks.",
        "createdAt" : "2017-02-01T21:15:36Z",
        "updatedAt" : "2017-02-02T19:24:23Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "81eb4fbf92d33c4d942cd8c9ebe3c0847f7166b7",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +347,351 @@    super.initState();\n    // Initially display the pre-selected date.\n    _currentDisplayedMonthDate = new DateTime(config.selectedDate.year, config.selectedDate.month);\n    _updateCurrentDate();\n  }"
  },
  {
    "id" : "42db9f00-7b9e-4e8a-bca7-c1b140c3833d",
    "prId" : 7858,
    "prUrl" : "https://github.com/flutter/flutter/pull/7858#pullrequestreview-20117670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11a5c185-6b78-4c77-9fff-2ff4d54511fa",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Oh nice.  I guess assert messages work now.  :)\r\n\r\nWe should start using them in more places.",
        "createdAt" : "2017-02-03T22:20:08Z",
        "updatedAt" : "2017-02-03T22:20:08Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "e046c84e-0e00-4d0d-b110-66dc65cffff2",
        "parentId" : "11a5c185-6b78-4c77-9fff-2ff4d54511fa",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "ya, the tracking was a bit obscure in https://github.com/dart-lang/sdk/issues/6190 but it does work now",
        "createdAt" : "2017-02-03T22:27:17Z",
        "updatedAt" : "2017-02-03T22:27:17Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9b8cbbd5b9de346b40a8e479edc60706e8774e4",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +757,761 @@  SelectableDayPredicate selectableDayPredicate\n}) async {\n  assert(!initialDate.isBefore(firstDate), 'initialDate must be on or after firstDate');\n  assert(!initialDate.isAfter(lastDate), 'initialDate must be on or before lastDate');\n  assert(!firstDate.isAfter(lastDate), 'lastDate must be on or after firstDate');"
  },
  {
    "id" : "dc13ab20-693a-4a57-9c31-b292065816d1",
    "prId" : 8335,
    "prUrl" : "https://github.com/flutter/flutter/pull/8335#pullrequestreview-23326428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56b05775-7656-40c9-86d5-9cebd4b14444",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Rather than precomputing this information in build, I'd recommend computing it on-the-fly when we try to vibrate.  A State object has a `context` property that you can feed to `Theme.of` whenever you like.",
        "createdAt" : "2017-02-22T20:19:36Z",
        "updatedAt" : "2017-02-22T20:19:37Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "4e53142a-2fa2-4b8b-a00e-4c4698cb00e5",
        "parentId" : "56b05775-7656-40c9-86d5-9cebd4b14444",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "For my own education, what's the difference? This only changes when set state is called I assume? If it were possible to keep the modal dialog on while changing the platform in the gallery, would it indirectly trigger a set state or no?",
        "createdAt" : "2017-02-22T20:24:30Z",
        "updatedAt" : "2017-02-22T20:24:30Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "c098375c-50ca-4485-99f3-92111d63f589",
        "parentId" : "56b05775-7656-40c9-86d5-9cebd4b14444",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "> For my own education, what's the difference?\r\n\r\nThere's very little operational difference.  The general pattern is that build() functions should be free of side effects, and writing the _vibrate field is a side effect, so it's better code hygiene to do it the other way.\r\n\r\n> This only changes when set state is called I assume?\r\n\r\nIf you're called Theme.of(context) since the last build, then build() will be called if the theme data changes.  (Technically it uses a lower-level mechanism than setState, but the effect is the same.)\r\n\r\n> If it were possible to keep the modal dialog on while changing the platform in the gallery, would it indirectly trigger a set state or no?\r\n\r\nThat is possible.  There's a command in the hot reload command line tool to flip the target platform, which you can do while the dialog is on screen.  (Or the all can just do it on a timer whenever it likes.)\r\n\r\nWhen that happens, that will trigger build() to be called again if that widget has called Theme.of(context) since the last time the framework called build().\r\n\r\nBasically, we keep track of all the inherited widgets that you've read since build() and make sure to call build() again if any of them change.  If you don't read from an inherited widget the second time around, we won't call build() again when it changes.\r\n\r\nIn summary, the code in this patch is correct.  It just violates a code hygiene/style guideline.  We try to make the framework code as clean as possible under the assumption that many people will use the framework code as a template for their own code, and it would be better if they copy/pasted the other pattern.",
        "createdAt" : "2017-02-22T20:32:51Z",
        "updatedAt" : "2017-02-22T20:32:51Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "c27481a4-bace-4e1a-aafd-1502289a3872",
        "parentId" : "56b05775-7656-40c9-86d5-9cebd4b14444",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "TIL - domo arigato! Replaced in #8337.",
        "createdAt" : "2017-02-22T20:39:25Z",
        "updatedAt" : "2017-02-22T20:39:25Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd877e12337c6d039ff6e2108c610c02d565c34f",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +671,675 @@        _vibrate = false;\n        break;\n    }\n    Widget picker = new Flexible(\n      child: new SizedBox("
  },
  {
    "id" : "a07bab72-29a9-407e-b774-74531b1e24b5",
    "prId" : 8337,
    "prUrl" : "https://github.com/flutter/flutter/pull/8337#pullrequestreview-23556236",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45f07181-336b-410e-af25-cfa80b845a07",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "If we find any other places where we put this switch, we should probably consider factoring it out into the theme or some such.",
        "createdAt" : "2017-02-23T07:18:58Z",
        "updatedAt" : "2017-02-23T07:18:58Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "764b25ed-0719-46ea-91f0-40d54e1e3e66",
        "parentId" : "45f07181-336b-410e-af25-cfa80b845a07",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Good point. We've got something similar-ish in `TimePicker` now. I'd imagine that further to #6574, there'll be others. It's also possible that more granularity to the HapticFeedback API could solve this, with certain types of feedback triggering only on Android, and perhaps a generic `vibrate()`.\r\n\r\nAndroid defines a [set of constants](https://developer.android.com/reference/android/view/HapticFeedbackConstants.html) for the various forms of haptic feedback supported on that platform. iOS is [a bit more generic](https://developer.apple.com/reference/uikit/uifeedbackgenerator?language=objc) (`Notification`, `Impact`, `Selection`).",
        "createdAt" : "2017-02-23T18:53:03Z",
        "updatedAt" : "2017-02-23T18:53:03Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4c14e18ea8f75116955bdd0dd7719f1dacd80b8",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +612,616 @@    }\n  }\n\n  void _handleModeChanged(_DatePickerMode mode) {\n    _vibrate();"
  },
  {
    "id" : "4e985794-0f01-4f56-879e-29aca611cc44",
    "prId" : 10860,
    "prUrl" : "https://github.com/flutter/flutter/pull/10860#pullrequestreview-45213308",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72cc4a33-f767-4c41-956f-e981ea7501cf",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this is entirely up to you but i would be tempted to make _kDaysInMonth[1] have the value -1, and then make _daysInMonth return 29 if isLeapYear is true and 28 otherwise. That way anyone tempted to use _kDaysInMonth would immediately find that they'd forgotten about leap years. Also maybe add a comment next to _kDaysInMonth pointing to _daysInMonth.",
        "createdAt" : "2017-06-20T17:40:18Z",
        "updatedAt" : "2017-06-20T18:01:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a99ee9f3df111a5ffc400a76ed87816455119570",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +231,235 @@    }\n    return _kDaysInMonth[month - 1];\n  }\n\n  @override"
  },
  {
    "id" : "e384745c-890a-4e1a-9221-56372cdbf565",
    "prId" : 11614,
    "prUrl" : "https://github.com/flutter/flutter/pull/11614#pullrequestreview-56225880",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a14db21-ad55-4cb9-9697-c85f4b727811",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "why \"but\"?",
        "createdAt" : "2017-08-14T22:52:44Z",
        "updatedAt" : "2017-08-14T22:52:44Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f04d88c5705c5a05c930aca197cae4baaf89d122",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +848,852 @@/// An optional [initialDatePickerMode] argument can be used to display the\n/// date picker initially in the year or month+day picker mode. It defaults\n/// to month+day, but cannot be null.\n///\n/// See also:"
  },
  {
    "id" : "05ee6fa5-8e3c-43b8-91e2-d81166b3250f",
    "prId" : 11614,
    "prUrl" : "https://github.com/flutter/flutter/pull/11614#pullrequestreview-56225989",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbc80d0a-4d48-4879-9368-5b5515c32bd1",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "nit: blank line after \"day,\"",
        "createdAt" : "2017-08-14T22:53:32Z",
        "updatedAt" : "2017-08-14T22:53:32Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f04d88c5705c5a05c930aca197cae4baaf89d122",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +36,40 @@  /// Show a date picker UI for choosing a month and day.\n  day,\n  /// Show a date picker UI for choosing a year.\n  year,\n}"
  },
  {
    "id" : "689ef464-d7d8-4953-bcfa-665260fc93ac",
    "prId" : 11614,
    "prUrl" : "https://github.com/flutter/flutter/pull/11614#pullrequestreview-56226080",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac806f37-bdf7-4e6f-860b-2071f5485e33",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This should link to the API that uses this enum.",
        "createdAt" : "2017-08-14T22:54:05Z",
        "updatedAt" : "2017-08-14T22:54:05Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f04d88c5705c5a05c930aca197cae4baaf89d122",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +28,32 @@\n/// Date picker UI mode for either showing a list of available years or a\n/// monthly calendar.\n///\n/// Also see:"
  },
  {
    "id" : "f8cfed80-f742-47d6-9365-f5306ca6ee62",
    "prId" : 11922,
    "prUrl" : "https://github.com/flutter/flutter/pull/11922#pullrequestreview-61070126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc50a277-c8b0-4d1c-9579-0a20c4dd49ce",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "so these don't mirror?",
        "createdAt" : "2017-09-06T22:33:12Z",
        "updatedAt" : "2017-09-06T22:33:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "598273df-9bcf-4158-8dd9-60713bbc20f1",
        "parentId" : "cc50a277-c8b0-4d1c-9579-0a20c4dd49ce",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I didn't see a `chevron_forward` or anything that would mirror.",
        "createdAt" : "2017-09-06T22:35:11Z",
        "updatedAt" : "2017-09-06T22:35:11Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "406095b60946d757ecd1d63e63ac9188a853696c",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +539,543 @@        return const Icon(Icons.chevron_right);\n      case TextDirection.ltr:\n        return const Icon(Icons.chevron_left);\n    }\n    return null;"
  },
  {
    "id" : "f1872a87-b5ef-40d6-acd1-0ebab7900fe7",
    "prId" : 12324,
    "prUrl" : "https://github.com/flutter/flutter/pull/12324#pullrequestreview-67539482",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3348b57a-1f20-4d80-8ae5-94cf347572ec",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "if you provide both, the way you have this built the locale will override the directionality. Presumably if both are given, the directionality should be on the inside.",
        "createdAt" : "2017-09-29T19:06:35Z",
        "updatedAt" : "2017-10-05T23:48:11Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "f9e8fd27-de00-4cb2-a212-a78744f27050",
        "parentId" : "3348b57a-1f20-4d80-8ae5-94cf347572ec",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done, also actually used the `child` in the dialog! Also added tests.",
        "createdAt" : "2017-10-05T23:42:23Z",
        "updatedAt" : "2017-10-05T23:48:11Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a330432886535e52e7a5f191da10fb0a492ca6bd",
    "line" : 220,
    "diffHunk" : "@@ -1,1 +1002,1006 @@      child: child,\n    );\n  }\n\n  return await showDialog<DateTime>("
  }
]