[
  {
    "id" : "f28cc598-d85f-469d-aa2c-728ee0593876",
    "prId" : 584,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7011ab7-49f0-489b-a86f-875e38836058",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Would the Dart date format class work here? I assume that we're going to need to internationalize.\n\nhttps://www.dartdocs.org/documentation/intl/0.9.1/intl/DateFormat-class.html\n",
        "createdAt" : "2015-11-25T17:44:16Z",
        "updatedAt" : "2015-11-25T19:18:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "646fa999-f47e-483a-b496-65299d6b96cf",
        "parentId" : "f7011ab7-49f0-489b-a86f-875e38836058",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, we should figure out a way to use the DateFormat class.  The issue is that it works with a DateTime, which is a specific date and time (e.g., of a particular year and day).  The picker works on an abstract time of day that isn't tied to a specific day.  We'd have to find a prototype day that has a normal set of times.  Also every day will work, but you need to avoid days that have daylight savings or leap second magic.\n",
        "createdAt" : "2015-11-25T20:31:06Z",
        "updatedAt" : "2015-11-25T20:31:06Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "72d2706ee1b3fe24930dbfdfb8fa8d2860e87bdd",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +28,32 @@\n/// A value representing a time during the day\nclass TimeOfDay {\n  const TimeOfDay({ this.hour, this.minute });\n"
  },
  {
    "id" : "8561c503-3d03-456b-be06-ad8dee5a3e36",
    "prId" : 584,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbcb067a-8e2f-4294-b655-d47befd1eaae",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you assert this here, but not in the constructor, which is amusing. Not sure how to fix that without compile-time constant asserts though. :-(\n",
        "createdAt" : "2015-11-25T18:26:12Z",
        "updatedAt" : "2015-11-25T19:18:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "4cdd9b29-31ea-46ce-9b84-0fb194cc130f",
        "parentId" : "dbcb067a-8e2f-4294-b655-d47befd1eaae",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, I wanted to assert in the constructor but I wanted it to be a const constructor more...\n",
        "createdAt" : "2015-11-25T18:51:17Z",
        "updatedAt" : "2015-11-25T19:18:01Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "72d2706ee1b3fe24930dbfdfb8fa8d2860e87bdd",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +33,37 @@  /// Returns a new TimeOfDay with the hour and/or minute replaced.\n  TimeOfDay replacing({ int hour, int minute }) {\n    assert(hour == null || (hour >= 0 && hour < _kHoursPerDay));\n    assert(minute == null || (minute >= 0 && minute < _kMinutesPerHour));\n    return new TimeOfDay(hour: hour ?? this.hour, minute: minute ?? this.minute);"
  },
  {
    "id" : "d6a54412-c08a-44f0-a3d0-f10a3a958e64",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "527bc5cc-5214-41e0-aa9f-d04f98e06f41",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "newline\n",
        "createdAt" : "2016-03-31T22:50:37Z",
        "updatedAt" : "2016-03-31T22:50:37Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +99,103 @@///\n/// See also:\n///  * [showTimePicker]\n///  * <https://www.google.com/design/spec/components/pickers.html#pickers-time-pickers>\nclass TimePicker extends StatefulWidget {"
  }
]