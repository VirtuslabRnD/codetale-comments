[
  {
    "id" : "f28cc598-d85f-469d-aa2c-728ee0593876",
    "prId" : 584,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7011ab7-49f0-489b-a86f-875e38836058",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Would the Dart date format class work here? I assume that we're going to need to internationalize.\n\nhttps://www.dartdocs.org/documentation/intl/0.9.1/intl/DateFormat-class.html\n",
        "createdAt" : "2015-11-25T17:44:16Z",
        "updatedAt" : "2015-11-25T19:18:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "646fa999-f47e-483a-b496-65299d6b96cf",
        "parentId" : "f7011ab7-49f0-489b-a86f-875e38836058",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, we should figure out a way to use the DateFormat class.  The issue is that it works with a DateTime, which is a specific date and time (e.g., of a particular year and day).  The picker works on an abstract time of day that isn't tied to a specific day.  We'd have to find a prototype day that has a normal set of times.  Also every day will work, but you need to avoid days that have daylight savings or leap second magic.\n",
        "createdAt" : "2015-11-25T20:31:06Z",
        "updatedAt" : "2015-11-25T20:31:06Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "72d2706ee1b3fe24930dbfdfb8fa8d2860e87bdd",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +28,32 @@\n/// A value representing a time during the day\nclass TimeOfDay {\n  const TimeOfDay({ this.hour, this.minute });\n"
  },
  {
    "id" : "8561c503-3d03-456b-be06-ad8dee5a3e36",
    "prId" : 584,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbcb067a-8e2f-4294-b655-d47befd1eaae",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you assert this here, but not in the constructor, which is amusing. Not sure how to fix that without compile-time constant asserts though. :-(\n",
        "createdAt" : "2015-11-25T18:26:12Z",
        "updatedAt" : "2015-11-25T19:18:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "4cdd9b29-31ea-46ce-9b84-0fb194cc130f",
        "parentId" : "dbcb067a-8e2f-4294-b655-d47befd1eaae",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, I wanted to assert in the constructor but I wanted it to be a const constructor more...\n",
        "createdAt" : "2015-11-25T18:51:17Z",
        "updatedAt" : "2015-11-25T19:18:01Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "72d2706ee1b3fe24930dbfdfb8fa8d2860e87bdd",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +33,37 @@  /// Returns a new TimeOfDay with the hour and/or minute replaced.\n  TimeOfDay replacing({ int hour, int minute }) {\n    assert(hour == null || (hour >= 0 && hour < _kHoursPerDay));\n    assert(minute == null || (minute >= 0 && minute < _kMinutesPerHour));\n    return new TimeOfDay(hour: hour ?? this.hour, minute: minute ?? this.minute);"
  },
  {
    "id" : "d6a54412-c08a-44f0-a3d0-f10a3a958e64",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "527bc5cc-5214-41e0-aa9f-d04f98e06f41",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "newline\n",
        "createdAt" : "2016-03-31T22:50:37Z",
        "updatedAt" : "2016-03-31T22:50:37Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +99,103 @@///\n/// See also:\n///  * [showTimePicker]\n///  * <https://www.google.com/design/spec/components/pickers.html#pickers-time-pickers>\nclass TimePicker extends StatefulWidget {"
  },
  {
    "id" : "ebb42d96-7ae4-45f5-af78-0500c6061560",
    "prId" : 5889,
    "prUrl" : "https://github.com/flutter/flutter/pull/5889#pullrequestreview-281193",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5315d68d-ed5a-4584-8f60-7177d687bd8c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "!\n",
        "createdAt" : "2016-09-16T00:09:23Z",
        "updatedAt" : "2016-09-16T00:09:28Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "57eea280-cc56-45fb-a2d2-5f96d75acc11",
        "parentId" : "5315d68d-ed5a-4584-8f60-7177d687bd8c",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, just happened to notice that one.\n",
        "createdAt" : "2016-09-16T00:53:08Z",
        "updatedAt" : "2016-09-16T00:53:08Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "0519ad0a4d03e767d7989130bbd660d4431ed17c",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +429,433 @@  @override\n  void dispose() {\n    _thetaController.dispose();\n    super.dispose();\n  }"
  },
  {
    "id" : "f7421ee0-6ea9-4126-a9d9-11446a121b21",
    "prId" : 5936,
    "prUrl" : "https://github.com/flutter/flutter/pull/5936#pullrequestreview-657432",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2557b7f1-27f7-467a-a02e-c93c4ecd9d4c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "file a bug to track this and link it here\n",
        "createdAt" : "2016-09-19T23:24:58Z",
        "updatedAt" : "2016-09-20T15:52:44Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "10131372d3999e5dc26b19a5591d09d12886bb81",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +302,306 @@  for (int i = 0; i < painters.length; ++i) {\n    String label = labels[i];\n    // TODO(abarth): Handle textScaleFactor.\n    // https://github.com/flutter/flutter/issues/5939\n    painters[i] = new TextPainter("
  },
  {
    "id" : "0d0b36c3-0f07-41b0-820b-c5b7f2c63b9f",
    "prId" : 11442,
    "prUrl" : "https://github.com/flutter/flutter/pull/11442#pullrequestreview-53056359",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f2e16eb-da76-4741-ba9b-1f9791071c76",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Did you check that this works properly?",
        "createdAt" : "2017-07-28T22:53:18Z",
        "updatedAt" : "2017-07-28T23:04:22Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "a45fb9aa-1f49-4a62-a230-2c12262c999d",
        "parentId" : "6f2e16eb-da76-4741-ba9b-1f9791071c76",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Assuming I was looking at the right part of the dial, it didn't seem to make any difference.",
        "createdAt" : "2017-07-28T22:58:02Z",
        "updatedAt" : "2017-07-28T23:04:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e29a5dd8b061e870facccdd5a1fd11ff80a454bc",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +430,434 @@    );\n    canvas\n      ..save()\n      ..clipPath(new Path()..addOval(focusedRect));\n    paintLabels(secondaryLabels);"
  },
  {
    "id" : "40c69428-0091-498a-8c7f-4cf04c54ad49",
    "prId" : 11967,
    "prUrl" : "https://github.com/flutter/flutter/pull/11967#pullrequestreview-61283527",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "813a843b-54bd-4983-8503-50a8070f1a81",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "put this class before the fragments, so that reading the code you see this first",
        "createdAt" : "2017-09-07T00:46:24Z",
        "updatedAt" : "2017-09-14T19:53:15Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "74ee3dd2-59c2-4fee-91c1-c99777279979",
        "parentId" : "813a843b-54bd-4983-8503-50a8070f1a81",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done. Sorted all classes topologically (more or less).",
        "createdAt" : "2017-09-07T20:20:44Z",
        "updatedAt" : "2017-09-14T19:53:15Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "23092cb975ddc22931ed49b0ee4e2aee131c24a4",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +180,184 @@  final ValueChanged<TimeOfDay> onTimeChange;\n  final ValueChanged<_TimePickerMode> onModeChange;\n}\n\n/// Describes how hours are formatted."
  },
  {
    "id" : "b25d214a-c62e-4de4-a06e-40b670bbfc41",
    "prId" : 11967,
    "prUrl" : "https://github.com/flutter/flutter/pull/11967#pullrequestreview-61283527",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71ad7533-2a18-4903-8200-2d2f416ba732",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This should come from the Android \"12/24\" setting, not the locale.",
        "createdAt" : "2017-09-07T00:52:05Z",
        "updatedAt" : "2017-09-14T19:53:15Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "f0d455c3-872d-4249-9a90-d00eb16febca",
        "parentId" : "71ad7533-2a18-4903-8200-2d2f416ba732",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "This requires a change in the engine, so I made it a separate issue: https://github.com/flutter/flutter/issues/11994",
        "createdAt" : "2017-09-07T21:35:37Z",
        "updatedAt" : "2017-09-14T19:53:15Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "23092cb975ddc22931ed49b0ee4e2aee131c24a4",
    "line" : 1051,
    "diffHunk" : "@@ -1,1 +1200,1204 @@        child: new _Dial(\n          mode: _mode,\n          is24h: _getHourFormat(timeOfDayFormat) != _TimePickerHourFormat.h,\n          selectedTime: _selectedTime,\n          onChanged: _handleTimeChanged,"
  },
  {
    "id" : "c8d23e09-6758-4510-a6a7-b9d4ec36bccd",
    "prId" : 11967,
    "prUrl" : "https://github.com/flutter/flutter/pull/11967#pullrequestreview-61283527",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdef064b-ef62-4fee-a259-68ccb7afbedf",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Ditto",
        "createdAt" : "2017-09-07T03:00:46Z",
        "updatedAt" : "2017-09-14T19:53:15Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "611eaa6b-93ef-4a9c-990b-c4f0964993b2",
        "parentId" : "fdef064b-ef62-4fee-a259-68ccb7afbedf",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done.",
        "createdAt" : "2017-09-07T17:05:38Z",
        "updatedAt" : "2017-09-14T19:53:15Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "23092cb975ddc22931ed49b0ee4e2aee131c24a4",
    "line" : 161,
    "diffHunk" : "@@ -1,1 +246,250 @@  ///\n  /// This property applies only when the header is laid out vertically.\n  final double bottomMargin;\n}\n"
  },
  {
    "id" : "1b9a7764-eb6d-4913-b06b-a9ed88754977",
    "prId" : 12517,
    "prUrl" : "https://github.com/flutter/flutter/pull/12517#pullrequestreview-72342419",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbd2f8ba-89ab-46a7-a9e0-c0b883e62118",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ditto",
        "createdAt" : "2017-10-20T17:36:30Z",
        "updatedAt" : "2017-11-01T21:01:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "9c04aeaf-ab90-4e7d-bdde-7c5a7a90f6a4",
        "parentId" : "dbd2f8ba-89ab-46a7-a9e0-c0b883e62118",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done.",
        "createdAt" : "2017-10-26T22:05:59Z",
        "updatedAt" : "2017-11-01T21:01:54Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fe76b43b7cbbc079c716ad6576e4e64f8c64bde",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +241,245 @@      child: new Text(localizations.formatHour(\n        fragmentContext.selectedTime,\n        alwaysUse24HourFormat: MediaQuery.of(context).alwaysUse24HourFormat,\n      ), style: hourStyle),\n    );"
  },
  {
    "id" : "635cbf71-1965-4e33-a5d1-f94d74e84763",
    "prId" : 13152,
    "prUrl" : "https://github.com/flutter/flutter/pull/13152#pullrequestreview-82002423",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d11df41b-fb00-4c1b-9f95-c2442b605f10",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "The hint usually tells users what interactions have what effect. So this one should probably say \"double tap to select hours\" instead of just \"select hours\".",
        "createdAt" : "2017-12-07T18:40:42Z",
        "updatedAt" : "2017-12-08T20:33:40Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "4eaffecd-ed78-4b74-abf7-d2d7d941a9fd",
        "parentId" : "d11df41b-fb00-4c1b-9f95-c2442b605f10",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "If it's not reflected in the docs for hint, we should add it there.",
        "createdAt" : "2017-12-07T18:41:21Z",
        "updatedAt" : "2017-12-08T20:33:40Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "1b603323-8443-4b04-8c37-337711d4fd96",
        "parentId" : "d11df41b-fb00-4c1b-9f95-c2442b605f10",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Hmm, this only announces that the time picker changed mode to either hour or minute. There is no one action that will allow you to select hours, as there are many controls on the screen. This is consistent with what Android does. It just says \"select hours\"/\"select minutes\". Although perhaps in a future iteration of the time picker we could improve the situation.",
        "createdAt" : "2017-12-07T21:36:57Z",
        "updatedAt" : "2017-12-08T20:33:40Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "00f7af9b122d09c7a47e49ab08557e083527189e",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +292,296 @@      child: new Semantics(\n        selected: fragmentContext.mode == _TimePickerMode.hour,\n        hint: localizations.timePickerHourModeAnnouncement,\n        child: new Text(formattedHour, style: hourStyle),\n      ),"
  },
  {
    "id" : "0ac828d9-309b-4414-8984-395a2daa82ac",
    "prId" : 13152,
    "prUrl" : "https://github.com/flutter/flutter/pull/13152#pullrequestreview-82002453",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e43155ee-0fa0-4b73-b386-9cb33c93e65f",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "same",
        "createdAt" : "2017-12-07T18:40:51Z",
        "updatedAt" : "2017-12-08T20:33:40Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "cb50e38f-67fc-4384-b0c9-02a155f157c3",
        "parentId" : "e43155ee-0fa0-4b73-b386-9cb33c93e65f",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "ditto",
        "createdAt" : "2017-12-07T21:37:03Z",
        "updatedAt" : "2017-12-08T20:33:40Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "00f7af9b122d09c7a47e49ab08557e083527189e",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +338,342 @@      child: new Semantics(\n        selected: fragmentContext.mode == _TimePickerMode.minute,\n        hint: localizations.timePickerMinuteModeAnnouncement,\n        child: new Text(localizations.formatMinute(fragmentContext.selectedTime), style: minuteStyle),\n      ),"
  },
  {
    "id" : "5f8a525c-0e1d-44ba-b823-cee7533f9218",
    "prId" : 31566,
    "prUrl" : "https://github.com/flutter/flutter/pull/31566#pullrequestreview-230396569",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9d4954f-8520-4508-b66a-693a8da477af",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Even though this is private etc, It looks like the implementation assumes that onHourSelected is non-null; should assert as much here. If there similar assumptions about any of the other parameters, maybe more asserts too.\r\n",
        "createdAt" : "2019-04-24T23:08:41Z",
        "updatedAt" : "2019-04-24T23:46:40Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "4385ee8d2bbb15f38766a165bb06d68bded7aca8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1001,1005 @@    @required this.use24HourDials,\n    @required this.onChanged,\n    @required this.onHourSelected,\n  }) : assert(selectedTime != null),\n       assert(mode != null),"
  },
  {
    "id" : "0ff2e1dc-2165-4391-bf76-9419efd81ac5",
    "prId" : 32053,
    "prUrl" : "https://github.com/flutter/flutter/pull/32053#pullrequestreview-233709968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d943668b-2db2-4b19-b2a5-9c65370d605e",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Looks like these values are assumed to be non-null; should assert that here",
        "createdAt" : "2019-05-04T00:02:37Z",
        "updatedAt" : "2019-05-04T00:25:00Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "77e6206b890df1ee5a2ad91bc8d5d97aec77294d",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +189,193 @@  const _DayPeriodControl({\n    @required this.fragmentContext,\n    @required this.orientation,\n  });\n"
  },
  {
    "id" : "7f33b30d-82f5-4941-9703-951c239deecf",
    "prId" : 32053,
    "prUrl" : "https://github.com/flutter/flutter/pull/32053#pullrequestreview-233709968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6e1fc0f-8ed7-459e-80a2-c7a86c92e73b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The `=>` is usually reserved for one-liners that return a value. This is OK:\r\n```\r\nFeedback.wrapForTap(() { _setAm(context); }, context),\r\n```\r\n\r\nHere and below",
        "createdAt" : "2019-05-04T00:07:00Z",
        "updatedAt" : "2019-05-04T00:25:00Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "77e6206b890df1ee5a2ad91bc8d5d97aec77294d",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +242,246 @@        type: MaterialType.transparency,\n        child: InkWell(\n          onTap: Feedback.wrapForTap(() => _setAm(context), context),\n          child: Padding(\n            padding: layoutPortrait ? const EdgeInsets.only(bottom: 2.0) : const EdgeInsets.only(right: 4.0),"
  },
  {
    "id" : "abf3e3df-a920-4847-bbfb-7d4a273045dc",
    "prId" : 32053,
    "prUrl" : "https://github.com/flutter/flutter/pull/32053#pullrequestreview-233709968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fef78109-a169-474c-8cb9-ae702f5263d6",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "need a trailing comma",
        "createdAt" : "2019-05-04T00:21:19Z",
        "updatedAt" : "2019-05-04T00:25:00Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "77e6206b890df1ee5a2ad91bc8d5d97aec77294d",
    "line" : 238,
    "diffHunk" : "@@ -1,1 +459,463 @@  TimeOfDayFormat timeOfDayFormat,\n  _TimePickerFragmentContext context,\n  Orientation orientation\n) {\n"
  },
  {
    "id" : "0a41c8c2-3e5d-459e-a67c-1f37e3411d24",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-428918338",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f492139-7ac5-4643-98c7-af70dcfce293",
        "parentId" : null,
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "Remove comment",
        "createdAt" : "2020-06-10T19:34:33Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      },
      {
        "id" : "19265165-acb0-4c11-9eca-b5b3dd0e79b1",
        "parentId" : "8f492139-7ac5-4643-98c7-af70dcfce293",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "These comments are actually used in some way to help with generating documentation. I'm not really sure how but I'm going to leave this in.",
        "createdAt" : "2020-06-11T13:38:33Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +38,42 @@\n// Examples can assume:\n// BuildContext context;\n\nconst Duration _kDialogSizeAnimationDuration = Duration(milliseconds: 200);"
  },
  {
    "id" : "b63db591-b629-46bc-80f5-78081ab42d8a",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-428918766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e40e0f6-43d3-424d-8a0a-3d6c6fed7541",
        "parentId" : null,
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "Remove empty space",
        "createdAt" : "2020-06-10T19:34:42Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      },
      {
        "id" : "454e8e35-623c-4ff0-9fc1-d90e79565efe",
        "parentId" : "6e40e0f6-43d3-424d-8a0a-3d6c6fed7541",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "Space is useful to delineate sections here.",
        "createdAt" : "2020-06-11T13:39:01Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +39,43 @@// Examples can assume:\n// BuildContext context;\n\nconst Duration _kDialogSizeAnimationDuration = Duration(milliseconds: 200);\nconst Duration _kDialAnimateDuration = Duration(milliseconds: 200);"
  },
  {
    "id" : "9ebc01d4-a30b-429a-a165-e0e79c29e8de",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-428935189",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35b27e6d-b224-48e1-aa14-84ad5ced9a08",
        "parentId" : null,
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "Why do all the variables have a _k in the beginning what happens if you replace that with just _defaultShape",
        "createdAt" : "2020-06-10T19:41:25Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      },
      {
        "id" : "3bf9a52e-a695-4620-81d0-46c956834c28",
        "parentId" : "35b27e6d-b224-48e1-aa14-84ad5ced9a08",
        "authorId" : "d65c544d-7463-4062-a650-9b8d30c63c54",
        "body" : "The `k` at the beginning is because they're `const` (as per the style guide)",
        "createdAt" : "2020-06-10T20:42:24Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "d65c544d-7463-4062-a650-9b8d30c63c54",
        "tags" : [
        ]
      },
      {
        "id" : "aeb52307-d2cb-4921-9c70-df2bd8b2fca8",
        "parentId" : "35b27e6d-b224-48e1-aa14-84ad5ced9a08",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "This is a pattern flutter uses for constants (prefix with k), so I'm going to leave as-is.\r\n\r\nhttps://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#begin-global-constant-names-with-prefix-k",
        "createdAt" : "2020-06-11T13:52:14Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +61,65 @@\nconst BorderRadius _kDefaultBorderRadius = BorderRadius.all(Radius.circular(4.0));\nconst ShapeBorder _kDefaultShape = RoundedRectangleBorder(borderRadius: _kDefaultBorderRadius);\n\n/// Interactive input mode of the time picker dialog."
  },
  {
    "id" : "33772d67-dfa0-458d-8596-d634c3c6630e",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-428923059",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a51156be-21e0-46e3-8bd9-8b5096ee62fc",
        "parentId" : null,
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "Great comment.",
        "createdAt" : "2020-06-10T19:48:35Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      },
      {
        "id" : "7bc220ee-84c7-4bf9-9d34-02fc385cb2a6",
        "parentId" : "a51156be-21e0-46e3-8bd9-8b5096ee62fc",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "I can't take the credit here haha, this is from the existing picker",
        "createdAt" : "2020-06-11T13:42:36Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 1534,
    "diffHunk" : "@@ -1,1 +908,912 @@      .drive(CurveTween(curve: standardEasing))\n      .drive(_thetaTween)\n      ..addListener(() => setState(() { /* _theta.value has changed */ }));\n  }\n"
  },
  {
    "id" : "81efeec2-b730-4d2a-87b2-2c841d686898",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-429772285",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1854662-ab07-45b4-9772-96051b3fbc3e",
        "parentId" : null,
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Maybe a comment here that width stays null for X reason?",
        "createdAt" : "2020-06-11T20:37:30Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "5b3d4478-6acb-4211-8f32-181eec2b8bca",
        "parentId" : "b1854662-ab07-45b4-9772-96051b3fbc3e",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "done",
        "createdAt" : "2020-06-12T14:09:12Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 335,
    "diffHunk" : "@@ -1,1 +149,153 @@      case Orientation.portrait:\n        // Keep width null because in portrait we don't cap the width.\n        padding = const EdgeInsets.symmetric(horizontal: 24.0);\n        controls = Column(\n          children: <Widget>["
  },
  {
    "id" : "af3232e1-63bb-40b2-b168-2d3e30b8bb64",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-429772607",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b41d891a-7b60-49cb-824c-c973c8aabb57",
        "parentId" : null,
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "This might need a github issue to go with the TODO",
        "createdAt" : "2020-06-11T20:40:01Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "e85ac1a2-5bde-47f6-a90c-d88ac9eeaa2c",
        "parentId" : "b41d891a-7b60-49cb-824c-c973c8aabb57",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "It's not required and so I'm just going to leave this, I'll be following up with that work",
        "createdAt" : "2020-06-12T14:09:37Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 412,
    "diffHunk" : "@@ -1,1 +225,229 @@          const SizedBox(height: 16.0),\n          Text(\n            // TODO(rami-a): localize 'SELECT TIME.'\n            helpText ?? 'SELECT TIME',\n            style: TimePickerTheme.of(context).helpTextStyle ?? themeData.textTheme.overline,"
  },
  {
    "id" : "beb43085-34c9-44f6-8ad6-8b08a120c5af",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-429773862",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4532128-4302-4d60-804e-ea36a8eb1f61",
        "parentId" : null,
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "It doesn't look like this method does anything (I may be misusing Github difftool)",
        "createdAt" : "2020-06-11T20:47:50Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "7c9cd334-5842-4bdc-ba21-0750f0362fab",
        "parentId" : "d4532128-4302-4d60-804e-ea36a8eb1f61",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "I think that may just be the github diff tool, it does do something.\r\n\r\n```\r\n  void _setPm(BuildContext context) {\r\n    if (selectedTime.period == DayPeriod.pm) {\r\n      return;\r\n    }\r\n    switch (Theme.of(context).platform) {\r\n      case TargetPlatform.android:\r\n      case TargetPlatform.fuchsia:\r\n      case TargetPlatform.linux:\r\n      case TargetPlatform.windows:\r\n        _announceToAccessibility(context, MaterialLocalizations.of(context).postMeridiemAbbreviation);\r\n        break;\r\n      case TargetPlatform.iOS:\r\n      case TargetPlatform.macOS:\r\n        break;\r\n    }\r\n    _togglePeriod();\r\n  }\r\n```",
        "createdAt" : "2020-06-12T14:11:13Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 736,
    "diffHunk" : "@@ -1,1 +485,489 @@  }\n\n  void _setPm(BuildContext context) {\n    if (selectedTime.period == DayPeriod.pm) {\n      return;"
  },
  {
    "id" : "0746c5e9-bbde-46b4-824a-ec2e60386d5a",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-429779178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb424d70-78d5-41cc-aa1c-cf17627501e7",
        "parentId" : null,
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "`this._minSize`, cool",
        "createdAt" : "2020-06-11T21:05:55Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "8117f206-0dc7-44b3-9376-cb0e93beb0e4",
        "parentId" : "bb424d70-78d5-41cc-aa1c-cf17627501e7",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "thanks",
        "createdAt" : "2020-06-12T14:17:46Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 1047,
    "diffHunk" : "@@ -1,1 +667,671 @@\nclass _RenderInputPadding extends RenderShiftedBox {\n  _RenderInputPadding(this._minSize, this.orientation, [RenderBox child]) : super(child);\n\n  final Orientation orientation;"
  },
  {
    "id" : "ae92d9ee-d0dc-4f4f-b497-d90da04bbd5b",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-429779334",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b86e5957-3c23-4bfb-8e52-e214e6cc8ea8",
        "parentId" : null,
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "can you use += here and below?",
        "createdAt" : "2020-06-11T21:07:48Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "3ca16e28-339d-4c33-9365-7a43e239f4fd",
        "parentId" : "b86e5957-3c23-4bfb-8e52-e214e6cc8ea8",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "yep",
        "createdAt" : "2020-06-12T14:17:58Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 1211,
    "diffHunk" : "@@ -1,1 +749,753 @@        break;\n      case Orientation.landscape:\n        if (position.dx > newPosition.dx) {\n          newPosition += const Offset(1.0, 0.0);\n        } else {"
  },
  {
    "id" : "24e0a697-d076-43e8-b5b1-afeacba8f9ca",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-429784971",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21faa8a8-3925-4910-a70e-2d9f269b6ba6",
        "parentId" : null,
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Same comment as before about TODO possibly needing issues. I am unable to find the rule though.",
        "createdAt" : "2020-06-11T21:25:07Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "b8637b51-6ba6-46c1-9c35-c22867311ef7",
        "parentId" : "21faa8a8-3925-4910-a70e-2d9f269b6ba6",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "Leaving as-is, the rule only requires username, GH issue being optional. I'm going to be following up with a l10n pass anyways",
        "createdAt" : "2020-06-12T14:24:52Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 1954,
    "diffHunk" : "@@ -1,1 +1388,1392 @@        children: <Widget>[\n          Text(\n            // TODO(rami-a): localize 'ENTER TIME'\n            widget.helpText ?? 'ENTER TIME',\n            style: TimePickerTheme.of(context).helpTextStyle ?? theme.textTheme.overline,"
  },
  {
    "id" : "e579f5ee-655f-4977-be13-57b8973fb6d6",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-433290064",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2bde1d66-71a3-4126-9115-fa80853f7592",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This looks quite a lot like _RenderInputPadding in button.dart. In a future PR, maybe we should create a shared public widget for this.",
        "createdAt" : "2020-06-17T23:02:48Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "1626d606-fc69-4917-9b70-f7ffbbfe7426",
        "parentId" : "2bde1d66-71a3-4126-9115-fa80853f7592",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "Yeah I based it off of the button.dart implementation and it could definitely be extracted in a future PR",
        "createdAt" : "2020-06-18T13:36:42Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 993,
    "diffHunk" : "@@ -1,1 +644,648 @@\n/// A widget to pad the area around the [_DayPeriodControl]'s inner [Material].\nclass _DayPeriodInputPadding extends SingleChildRenderObjectWidget {\n  const _DayPeriodInputPadding({\n    Key key,"
  },
  {
    "id" : "4ceac21c-4775-4285-880b-288d167de235",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-433311692",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b80b2aa-a11e-424a-b617-77e3062a8925",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Does this work correctly if font changes or if textScaleFactor > 1?",
        "createdAt" : "2020-06-17T23:04:44Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "0b81f1c3-5d4b-4fd8-aa94-11808536a85d",
        "parentId" : "0b80b2aa-a11e-424a-b617-77e3062a8925",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "it does run into problems at higher text scale with the dot overlapping the text unfortunately.  I think this is fine though, the existing Android time picker has this problem.",
        "createdAt" : "2020-06-18T13:58:54Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 1486,
    "diffHunk" : "@@ -1,1 +848,852 @@    // Add a dot inside the selector but only when it isn't over the labels.\n    // This checks that the selector's theta is between two labels. A remainder\n    // between 0.1 and 0.45 indicates that the selector is roughly not above any\n    // labels. The values were derived by manually testing the dial.\n    final double labelThetaIncrement = -_kTwoPi / primaryLabels.length;"
  },
  {
    "id" : "094e2ae2-464e-464a-8144-ae0264403a7a",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-433307444",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e854c20-bba1-4a26-80d0-2e4559460c3a",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Looks onChanged is assumed to be non-null, assert here.",
        "createdAt" : "2020-06-17T23:09:52Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "b62711cc-d7a2-4f09-905a-2ff7a1623d84",
        "parentId" : "9e854c20-bba1-4a26-80d0-2e4559460c3a",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "Done",
        "createdAt" : "2020-06-18T13:54:46Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 1819,
    "diffHunk" : "@@ -1,1 +1253,1257 @@    @required this.helpText,\n    @required this.onChanged,\n  }) : assert(initialSelectedTime != null),\n       assert(onChanged != null),\n       super(key: key);"
  },
  {
    "id" : "03d3b165-8903-4fc7-82ee-077a1e88f6f6",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-433298122",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da6bc7ee-973b-4d3a-b909-40a1f6da403d",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "What's 1.1 for? Aren't we constraint textScaleFactor to 1.0?",
        "createdAt" : "2020-06-17T23:30:50Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "83bd19b9-be12-43f7-bc39-b7a5036bd3ca",
        "parentId" : "da6bc7ee-973b-4d3a-b909-40a1f6da403d",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "I elaborated more on this,  some elements do scale up (like the help text and the buttons at the bottom), and 1.1 worked well while testing different scale factors.",
        "createdAt" : "2020-06-18T13:45:17Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 2252,
    "diffHunk" : "@@ -1,1 +1764,1768 @@    // parts of the time picker scale up with textScaleFactor, we cap the factor\n    // to 1.1 as that provides enough space to reasonably fit all the content.\n    final double textScaleFactor = math.min(MediaQuery.of(context).textScaleFactor, 1.1);\n\n    double timePickerWidth;"
  },
  {
    "id" : "1856ab9b-3a03-4c02-8548-47cfca2880de",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-433554382",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "493e0e01-ba3d-4fa9-9746-054d7bb7ca20",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "ButtonBar is problematic. Can we avoid it here?",
        "createdAt" : "2020-06-17T23:33:35Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "9849de26-9529-4b7e-a42c-9fbeee1ecd85",
        "parentId" : "493e0e01-ba3d-4fa9-9746-054d7bb7ca20",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "I think ButtonBar gives some helpful logic (like moving to a Column layout if the buttons don't fit) so I'd like to keep it for now. I'll add a TODO to move away from this in the future.",
        "createdAt" : "2020-06-18T18:46:07Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 2328,
    "diffHunk" : "@@ -1,1 +1819,1823 @@        Expanded(\n          // TODO(rami-a): Move away from ButtonBar to avoid https://github.com/flutter/flutter/issues/53378.\n          child: ButtonBar(\n            layoutBehavior: ButtonBarLayoutBehavior.constrained,\n            children: <Widget>["
  },
  {
    "id" : "6594bff4-4174-4784-bdb2-1dff05141d77",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-432825157",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d6ea84f-89c8-4b76-b82e-470131340226",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2020-06-17T23:37:53Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 2505,
    "diffHunk" : "@@ -1,1 +1926,1930 @@    return Dialog(\n      shape: shape,\n      backgroundColor: TimePickerTheme.of(context).backgroundColor ?? theme.colorScheme.surface,\n      insetPadding: EdgeInsets.symmetric(\n        horizontal: 16.0,"
  },
  {
    "id" : "c7a5b294-f59b-4bd5-9a59-cdb1f4e75379",
    "prId" : 61492,
    "prUrl" : "https://github.com/flutter/flutter/pull/61492#pullrequestreview-450026960",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7cc15995-89ee-4e2a-833a-8e3b53e39f1a",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Could we eliminate the ButtonBar here? ",
        "createdAt" : "2020-07-14T23:25:41Z",
        "updatedAt" : "2020-07-14T23:25:41Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "f0ad3889-84af-4102-a963-60ad72b68bdc",
        "parentId" : "7cc15995-89ee-4e2a-833a-8e3b53e39f1a",
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "We can, but then we would lose some of the padding around the buttons that the `ButtonBar` provides. Might trip up some golden tests.\r\n",
        "createdAt" : "2020-07-15T00:31:20Z",
        "updatedAt" : "2020-07-15T00:31:21Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "4c5f0f2c-4a84-492e-b4cd-fcf098421eb2",
        "parentId" : "7cc15995-89ee-4e2a-833a-8e3b53e39f1a",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I think you can get the same effect with\r\n```dart\r\nContainer(\r\n  alignment: Alignment.center,\r\n  padding: EdgeInsets.symmetric(horizontal: 8),\r\n  constraints: const BoxConstraints(minHeight: 52.0),\r\n  child: Row(\r\n    mainAxisAlignment: MainAxisAlignment.end,\r\n    children: <Widget>[\r\n      TextButton(\r\n        onPressed: _handleCancel,\r\n        child: Text(widget.cancelText ?? localizations.cancelButtonLabel),\r\n      ),\r\n      const SizedBox(width: 8),\r\n      TextButton(\r\n        onPressed: _handleOk,\r\n        child: Text(widget.confirmText ?? localizations.okButtonLabel),\r\n      ),\r\n    ],\r\n  ),\r\n)\r\n```",
        "createdAt" : "2020-07-15T01:28:59Z",
        "updatedAt" : "2020-07-15T01:28:59Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "35a32cfe-25fb-46a1-b628-c898ec8c2f10",
        "parentId" : "7cc15995-89ee-4e2a-833a-8e3b53e39f1a",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "There's special behavior in ButtonBar that puts the buttons in a column if they don't fit in a row (good for i18n cases or custom button text), so I'd say we keep the button bar until we have a good replacement for that",
        "createdAt" : "2020-07-15T13:19:40Z",
        "updatedAt" : "2020-07-15T13:20:01Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      },
      {
        "id" : "20e9e512-54ff-4381-8efd-2647a632da74",
        "parentId" : "7cc15995-89ee-4e2a-833a-8e3b53e39f1a",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Is that really an issue with the time picker? Can the picker become narrow enough to require making a column out of the OK/Cancel buttons while otherwise remaining usable?",
        "createdAt" : "2020-07-15T15:00:02Z",
        "updatedAt" : "2020-07-15T15:00:02Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "f279a222-8cd7-466f-be7c-ad572d8c5bba",
        "parentId" : "7cc15995-89ee-4e2a-833a-8e3b53e39f1a",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "I think it may be possible in other locales (german perhaps?)",
        "createdAt" : "2020-07-15T15:07:26Z",
        "updatedAt" : "2020-07-15T15:07:26Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      },
      {
        "id" : "2e55bc56-6d93-4cba-ae53-80552645aebb",
        "parentId" : "7cc15995-89ee-4e2a-833a-8e3b53e39f1a",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "OK, with me to leave this as-is for the moment. I'm going to write a row-unless-theres-no-room-then-a-column that we can replace ButtonBar with. Until then, this is good.",
        "createdAt" : "2020-07-16T16:42:09Z",
        "updatedAt" : "2020-07-16T16:42:10Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "b70caff0dd7e6f4d949802d0e8bbcf64e37d37fa",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +1829,1833 @@        Expanded(\n          // TODO(rami-a): Move away from ButtonBar to avoid https://github.com/flutter/flutter/issues/53378.\n          child: ButtonBar(\n            layoutBehavior: ButtonBarLayoutBehavior.constrained,\n            children: <Widget>["
  },
  {
    "id" : "5035d41b-19dd-4e8e-af23-e3b729d43be4",
    "prId" : 62601,
    "prUrl" : "https://github.com/flutter/flutter/pull/62601#pullrequestreview-458739681",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b0aaf6b-0c64-46f8-b88a-6aa8d26cfc85",
        "parentId" : null,
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "Will this result in any visual diff from the ButtonBar?",
        "createdAt" : "2020-07-30T19:26:00Z",
        "updatedAt" : "2020-08-01T00:17:24Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      },
      {
        "id" : "90c18ea1-5d76-4769-8151-0703130fb9cd",
        "parentId" : "3b0aaf6b-0c64-46f8-b88a-6aa8d26cfc85",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I don't think so. I've already done some image diffs before and after this PR, to check. Still need to check the test repo ofcourse.\r\n",
        "createdAt" : "2020-07-30T20:39:52Z",
        "updatedAt" : "2020-08-01T00:17:24Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a350e1062d6714d038a295aa8a01c980a4410a1",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +1826,1830 @@        ),\n        Expanded(\n          child: Container(\n            alignment: AlignmentDirectional.centerEnd,\n            constraints: const BoxConstraints(minHeight: 52.0),"
  }
]