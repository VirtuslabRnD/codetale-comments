[
  {
    "id" : "1d3bf7e3-d9ac-48f7-bb23-6acf23e75149",
    "prId" : 34599,
    "prUrl" : "https://github.com/flutter/flutter/pull/34599#pullrequestreview-262136888",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4acdb224-fd2e-4730-99fb-47031b91ee19",
        "parentId" : null,
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "For some of the color properties here, it might be useful to allow for `MaterialStateProperty<Color>`s to be used. Making those changes would involve \r\n\r\n1. Keeping track of a `Set<MaterialState> _states` inside of `_ToggleButton`.\r\n1. Calling `MaterialStateProperty.resolveAs<Color>(color, _states);` in the build method of `_ToggleButton`.\r\n1. Specifying in the documentation here that if `color` is a `MaterialStateProperty<Color>`, `selectedColor`, and `disabledColor` will be ignored. ",
        "createdAt" : "2019-07-12T19:23:16Z",
        "updatedAt" : "2019-07-25T18:13:05Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      },
      {
        "id" : "9ebe6d60-7332-4671-8aa6-7ab3ae996a51",
        "parentId" : "4acdb224-fd2e-4730-99fb-47031b91ee19",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "This was something I have been thinking about as well, since we've discussed this offline before. Would it be something that we should add in a separate PR, or would it be better to just incorporate this now? \r\n\r\ncc/ @HansMuller ",
        "createdAt" : "2019-07-13T05:34:31Z",
        "updatedAt" : "2019-07-25T18:13:05Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "c5d9529e-5abe-4fdd-83bc-3b575c52ac61",
        "parentId" : "4acdb224-fd2e-4730-99fb-47031b91ee19",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "We decided on creating a new PR and issue to track introducing `MaterialStateProperty<Color>`.  I think implementing it shouldn't be invasive and the current PR is already pretty big, so this would make the logic in this PR less complex.",
        "createdAt" : "2019-07-16T00:23:46Z",
        "updatedAt" : "2019-07-25T18:13:05Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a4c0b960231cc25c69046d80e6e1daea77ef85a",
    "line" : 219,
    "diffHunk" : "@@ -1,1 +217,221 @@  /// is used. If [ToggleButtonsThemeData.color] is also null, then\n  /// Theme.of(context).colorScheme.onSurface is used.\n  final Color color;\n\n  /// The color for descendant [Text] and [Icon] widgets if the button is"
  },
  {
    "id" : "b3124a3f-729c-4c63-a7ea-de83cdafb629",
    "prId" : 34599,
    "prUrl" : "https://github.com/flutter/flutter/pull/34599#pullrequestreview-263859255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3feb2fbc-6252-4b2b-907f-8ef53f2a3757",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The documentation for each property should conclude with a little boilerplate that says explains that if the widget property foo  is null then ToggleButtonTheme.of(context).foo is used and if that's null (it's null by default) then <actual default here> is used.",
        "createdAt" : "2019-07-18T22:28:08Z",
        "updatedAt" : "2019-07-25T18:13:05Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a4c0b960231cc25c69046d80e6e1daea77ef85a",
    "line" : 219,
    "diffHunk" : "@@ -1,1 +217,221 @@  /// is used. If [ToggleButtonsThemeData.color] is also null, then\n  /// Theme.of(context).colorScheme.onSurface is used.\n  final Color color;\n\n  /// The color for descendant [Text] and [Icon] widgets if the button is"
  },
  {
    "id" : "e47df847-7399-4fb7-8905-3a760c921c42",
    "prId" : 34599,
    "prUrl" : "https://github.com/flutter/flutter/pull/34599#pullrequestreview-266155973",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f3e8a3d-061c-45dd-ad74-0f8150fdbd56",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Should we be asserting that isSelected is non-null and has the same length as children here?",
        "createdAt" : "2019-07-18T22:43:02Z",
        "updatedAt" : "2019-07-25T18:13:05Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "08b7803f-c8fa-4563-b72d-82df969e8fc4",
        "parentId" : "3f3e8a3d-061c-45dd-ad74-0f8150fdbd56",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Same comment as before: `the assert statement cannot be placed in the constructor because it is a const constructor. Doing so triggers an analyzer error`",
        "createdAt" : "2019-07-23T19:39:59Z",
        "updatedAt" : "2019-07-25T18:13:05Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "c66a710c-1a5d-450c-a318-dbe22b80516a",
        "parentId" : "3f3e8a3d-061c-45dd-ad74-0f8150fdbd56",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "OK",
        "createdAt" : "2019-07-24T17:41:38Z",
        "updatedAt" : "2019-07-25T18:13:05Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a4c0b960231cc25c69046d80e6e1daea77ef85a",
    "line" : 524,
    "diffHunk" : "@@ -1,1 +522,526 @@  @override\n  Widget build(BuildContext context) {\n    assert(\n      !isSelected.any((bool val) => val == null),\n      'All elements of isSelected must be non-null.\\n'"
  },
  {
    "id" : "57749b12-40ce-4ea7-b545-b656ef2bdb8d",
    "prId" : 34599,
    "prUrl" : "https://github.com/flutter/flutter/pull/34599#pullrequestreview-266155973",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e94a7fd3-ca2a-4f71-a076-fa9c02b9f04c",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Why not also assert that isSelected contains valid (non-null values) and focusNodes is the either null or a list of the correct length?",
        "createdAt" : "2019-07-18T22:44:18Z",
        "updatedAt" : "2019-07-25T18:13:05Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "55c9a623-ae16-4283-bb07-a838cf7c404a",
        "parentId" : "e94a7fd3-ca2a-4f71-a076-fa9c02b9f04c",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Same comment as before: `the assert statement cannot be placed in the constructor because it is a const constructor. Doing so triggers an analyzer error`",
        "createdAt" : "2019-07-23T19:40:24Z",
        "updatedAt" : "2019-07-25T18:13:05Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "dbd032b9-4585-4d4e-9683-a0a3f5191b5d",
        "parentId" : "e94a7fd3-ca2a-4f71-a076-fa9c02b9f04c",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Got it, OK.",
        "createdAt" : "2019-07-24T17:26:19Z",
        "updatedAt" : "2019-07-25T18:13:05Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a4c0b960231cc25c69046d80e6e1daea77ef85a",
    "line" : 178,
    "diffHunk" : "@@ -1,1 +176,180 @@    assert(children != null),\n    assert(isSelected != null),\n    assert(children.length == isSelected.length),\n    super(key: key);\n"
  },
  {
    "id" : "4bc29c7c-fd3a-4dab-bc6c-5f27c437e6ed",
    "prId" : 34599,
    "prUrl" : "https://github.com/flutter/flutter/pull/34599#pullrequestreview-263859255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cd67da5-5c9a-4d20-8033-1771a36a1fac",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Should specify that isSelected values must be non-null, focusNodes must be null or a list of non-null nodes and renderBorder must not be null.",
        "createdAt" : "2019-07-18T22:46:39Z",
        "updatedAt" : "2019-07-25T18:13:05Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a4c0b960231cc25c69046d80e6e1daea77ef85a",
    "line" : 151,
    "diffHunk" : "@@ -1,1 +149,153 @@  /// list.\n  ///\n  /// Both [children] and [isSelected] properties arguments are required.\n  ///\n  /// [isSelected] values must be non-null. [focusNodes] must be null or a"
  },
  {
    "id" : "a1dd8c28-d86e-44a0-b6ec-f53235db8d36",
    "prId" : 34599,
    "prUrl" : "https://github.com/flutter/flutter/pull/34599#pullrequestreview-263859255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53cf4f0c-c9a7-40cc-a3fe-c560e64105c3",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Overrides for the four size computation methods like [computeMaxIntrinsicHeight](https://api.flutter.dev/flutter/rendering/RenderBox/computeMaxIntrinsicHeight.html ) are needed, as well as [computeDistanceToActualBaseline](https://api.flutter.dev/flutter/rendering/RenderBox/computeDistanceToActualBaseline.html) \r\n\r\nYou can test the size methods by arranging ToggleButtons in Rows or Columns (verify the overall size) and the computeDistanceToActualBaseline by checking a Row that contains ToggleButtons and Text widgets.\r\n",
        "createdAt" : "2019-07-18T23:22:20Z",
        "updatedAt" : "2019-07-25T18:13:05Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a4c0b960231cc25c69046d80e6e1daea77ef85a",
    "line" : 871,
    "diffHunk" : "@@ -1,1 +869,873 @@}\n\nclass _SelectToggleButtonRenderObject extends RenderShiftedBox {\n  _SelectToggleButtonRenderObject(\n    this._leadingBorderSide,"
  },
  {
    "id" : "77f0737c-a68d-4599-af4e-7b32b28c8e74",
    "prId" : 34599,
    "prUrl" : "https://github.com/flutter/flutter/pull/34599#pullrequestreview-266155973",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a25388c-3160-4311-8709-64745898bb19",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Nice examples!",
        "createdAt" : "2019-07-24T17:18:19Z",
        "updatedAt" : "2019-07-25T18:13:05Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a4c0b960231cc25c69046d80e6e1daea77ef85a",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +27,31 @@/// can update the [isSelected] list however it wants to.\n///\n/// Here is an implementation that allows for multiple buttons to be\n/// simultaneously selected, while requiring none of the buttons to be\n/// selected."
  },
  {
    "id" : "fdf2fd20-eb3d-4607-9475-494ca6448e9c",
    "prId" : 34599,
    "prUrl" : "https://github.com/flutter/flutter/pull/34599#pullrequestreview-266155973",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52355c46-48c5-4493-a5d9-52622dab0633",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE asserts",
        "createdAt" : "2019-07-24T17:42:34Z",
        "updatedAt" : "2019-07-25T18:13:05Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a4c0b960231cc25c69046d80e6e1daea77ef85a",
    "line" : 524,
    "diffHunk" : "@@ -1,1 +522,526 @@  @override\n  Widget build(BuildContext context) {\n    assert(\n      !isSelected.any((bool val) => val == null),\n      'All elements of isSelected must be non-null.\\n'"
  },
  {
    "id" : "f20c49b7-bf7d-409e-a4d3-ace9c5b5c57a",
    "prId" : 34599,
    "prUrl" : "https://github.com/flutter/flutter/pull/34599#pullrequestreview-266275086",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc64ef26-8db5-498a-a7a1-70b092112cfa",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This expression and the similar ones below can be one liners.",
        "createdAt" : "2019-07-24T17:49:37Z",
        "updatedAt" : "2019-07-25T18:13:05Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "b9dd130b-cac2-45e7-8cf6-40e0e8dca0cf",
        "parentId" : "bc64ef26-8db5-498a-a7a1-70b092112cfa",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I was originally thinking that having multiple succinct lines was better than having a massive one-liner, since it might be easier to read/parse it if it were multiple lines. \r\n\r\nPrimarily driven by [style guide suggestions](https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#consider-using--for-short-functions-and-methods), but let me know what you think! ",
        "createdAt" : "2019-07-24T20:44:18Z",
        "updatedAt" : "2019-07-25T18:13:05Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a4c0b960231cc25c69046d80e6e1daea77ef85a",
    "line" : 974,
    "diffHunk" : "@@ -1,1 +972,976 @@  @override\n  double computeMaxIntrinsicHeight(double width) {\n    return horizontalBorderSide.width +\n      _maxHeight(child, width) +\n      horizontalBorderSide.width;"
  },
  {
    "id" : "5dd05ffb-902c-4091-aa1f-75fcbe2f5298",
    "prId" : 39857,
    "prUrl" : "https://github.com/flutter/flutter/pull/39857#pullrequestreview-286982847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60acbbef-9020-4f32-b6b0-5cdaaff83259",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Although the 48 is kMinInteractiveDimension I think the documentation is easier to understand the way you have it.",
        "createdAt" : "2019-09-11T18:21:16Z",
        "updatedAt" : "2019-09-11T20:53:30Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "f7440ac14ed7c4647f7b5c8d93c70fed63a0e8e7",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +231,235 @@  ///\n  /// If this property is null, then\n  /// BoxConstraints(minWidth: 48.0, minHeight: 48.0) is be used.\n  final BoxConstraints constraints;\n"
  }
]