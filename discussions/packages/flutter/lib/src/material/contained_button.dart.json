[
  {
    "id" : "2b039fc6-8405-4bac-8220-4007dd5a197c",
    "prId" : 59702,
    "prUrl" : "https://github.com/flutter/flutter/pull/59702#pullrequestreview-438591473",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c379771b-afb4-499f-a1d6-e5d352cf3c98",
        "parentId" : null,
        "authorId" : "b6f5d261-bce5-4ac7-8548-424662f5f751",
        "body" : "I think the following form is clearer (same for the other two `final double gap`s):\r\n\r\n```dart\r\n    final double gap = lerpDouble(8, 4, (scale - 1).clamp(0, 1));\r\n```",
        "createdAt" : "2020-06-26T16:02:37Z",
        "updatedAt" : "2020-07-09T15:54:00Z",
        "lastEditedBy" : "b6f5d261-bce5-4ac7-8548-424662f5f751",
        "tags" : [
        ]
      },
      {
        "id" : "90d5ec51-8aaa-472b-a0de-b9a2e412651c",
        "parentId" : "c379771b-afb4-499f-a1d6-e5d352cf3c98",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I agree, in fact I'd written it that way. I changed it because the analyzer complained and I wasn't able to find a nice way around the complaint:\r\n\r\n```\r\n  error • The argument type 'num' can't be assigned to the parameter type 'double' •\r\n         packages/flutter/lib/src/material/contained_button.dart:419:41 • argument_type_not_assignable\r\n```\r\n\r\nI believe it's complaining because clamp returns a num, not a double. Introducing another line of code didn't seem to make the statement simpler either, so ... ",
        "createdAt" : "2020-06-26T20:58:39Z",
        "updatedAt" : "2020-07-09T15:54:00Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d129af7f63046eba59cb205d0c73a398f70180",
    "line" : 419,
    "diffHunk" : "@@ -1,1 +417,421 @@  Widget build(BuildContext context) {\n    final double scale = MediaQuery.of(context, nullOk: true)?.textScaleFactor ?? 1;\n    final double gap = scale <= 1 ? 8 : lerpDouble(8, 4, math.min(scale - 1, 1));\n    return Row(\n      mainAxisSize: MainAxisSize.min,"
  },
  {
    "id" : "9b8b8c93-fcc4-42ec-85c1-b00ded0c6b6b",
    "prId" : 59702,
    "prUrl" : "https://github.com/flutter/flutter/pull/59702#pullrequestreview-439511671",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3310a063-81a4-4ef5-b511-34cf19cf5613",
        "parentId" : null,
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "These two constructors end up being very similar. Do you think it would be reasonable to consider combining `ContainedButton` and `ContainedButton.icon` into one constructor? The constructor could have an optional (nullable) `icon` param, that, when non null, will place itself alongside `child`? ",
        "createdAt" : "2020-06-26T20:53:09Z",
        "updatedAt" : "2020-07-09T15:54:00Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      },
      {
        "id" : "59af0195-c7c4-47e8-bad6-29831f108861",
        "parentId" : "3310a063-81a4-4ef5-b511-34cf19cf5613",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "FWIW, the Foo and Foo.icon constructors are how this was factored before. We're not trying for API compatibility here, so there's no need to include the factory again. On the other hand, Foo and Foo.icon have different defaultStyleOf overrides because their default padding is different and because the padding's dependency on textScaleFactor differs. This and the difference in how the child is handled could certainly be blended together into one build method, but separating the two cases with a class (albeit a private one) simplifies that a little.\r\n",
        "createdAt" : "2020-06-29T21:24:55Z",
        "updatedAt" : "2020-07-09T15:54:00Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d129af7f63046eba59cb205d0c73a398f70180",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +85,89 @@  ///\n  /// The [icon] and [label] arguments must not be null.\n  factory ContainedButton.icon({\n    Key key,\n    @required VoidCallback onPressed,"
  }
]