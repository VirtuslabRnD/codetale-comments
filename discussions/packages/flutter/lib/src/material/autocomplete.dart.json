[
  {
    "id" : "baa3decf-081e-4573-a93d-820593f5323d",
    "prId" : 73753,
    "prUrl" : "https://github.com/flutter/flutter/pull/73753#pullrequestreview-574553453",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8382c931-9386-4200-86ba-4220d68d7ae2",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "ListView behaves funky when the TextField itself is constrained:\r\n\r\n<img width=\"722\" alt=\"Screen Shot 2021-01-21 at 3 58 46 PM\" src=\"https://user-images.githubusercontent.com/27032613/105320794-90dc2000-5c01-11eb-8d8e-f88d41442550.png\">\r\n\r\n<details><summary>Sample app</summary>\r\n\r\n```dart\r\nimport 'package:flutter/material.dart';\r\n\r\nvoid main() {\r\n  runApp(MyApp());\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      title: 'Flutter Demo',\r\n      theme: ThemeData(\r\n        primarySwatch: Colors.blue,\r\n      ),\r\n      home: MyHomePage(title: 'Flutter Demo Home Page'),\r\n    );\r\n  }\r\n}\r\n\r\nclass MyHomePage extends StatefulWidget {\r\n  MyHomePage({Key key, this.title}) : super(key: key);\r\n\r\n  final String title;\r\n\r\n  @override\r\n  _MyHomePageState createState() => _MyHomePageState();\r\n}\r\n\r\nclass _MyHomePageState extends State<MyHomePage> {\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: Text(widget.title),\r\n      ),\r\n      body: Center(\r\n        child: Column(\r\n          mainAxisAlignment: MainAxisAlignment.center,\r\n          children: <Widget>[\r\n            SizedBox(\r\n              width: 200,\r\n              child: AutocompleteBasicExample(),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteBasicExample extends StatelessWidget {\r\n  AutocompleteBasicExample({Key key}) : super(key: key);\r\n\r\n  final List<String> _kOptions = <String>[\r\n    'aardvark',\r\n    'bobcat',\r\n    'chameleon',\r\n    'dingo',\r\n    'elephant',\r\n    'flamingo',\r\n    'goose',\r\n    'hippopotamus',\r\n    'iguana',\r\n    'jaguar',\r\n    'koala',\r\n    'lemur',\r\n    'mouse',\r\n    'northern white rhinocerous',\r\n  ];\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Autocomplete<String>(\r\n      optionsBuilder: (TextEditingValue textEditingValue) {\r\n        if (textEditingValue.text == '') {\r\n          return const Iterable<String>.empty();\r\n        }\r\n        return _kOptions.where((String option) {\r\n          return option.contains(textEditingValue.text.toLowerCase());\r\n        });\r\n      },\r\n      optionsViewBuilder: (\r\n        BuildContext context,\r\n        AutocompleteOnSelected<String> onSelected,\r\n        Iterable<String> options,\r\n      ) {\r\n        return Align(\r\n          alignment: Alignment.topLeft,\r\n          child: Material(\r\n            elevation: 4.0,\r\n            child: Container(\r\n              height: 200.0,\r\n              child: ListView.builder(\r\n                padding: const EdgeInsets.all(8.0),\r\n                itemCount: options.length,\r\n                itemBuilder: (BuildContext context, int index) {\r\n                  final String option = options.elementAt(index);\r\n                  return InkWell(\r\n                    onHover: (bool enableFeedback) {},\r\n                    onTap: () {\r\n                      onSelected(option);\r\n                    },\r\n                    child: Container(\r\n                      constraints: const BoxConstraints(minHeight: 24.0),\r\n                      alignment: AlignmentDirectional.centerStart,\r\n                      child: Text(option),\r\n                    ),\r\n                  );\r\n                },\r\n              ),\r\n            ),\r\n          ),\r\n        );\r\n      },\r\n      onSelected: (String selection) {\r\n        print('You just selected $selection');\r\n      },\r\n    );\r\n  }\r\n}\r\n```\r\n\r\n</details>\r\n\r\nBasically, the ListView itself extends beyond the text field's length when it should end. I wonder if there's an easy way to figure the width of the text field out and limit it accordingly? ",
        "createdAt" : "2021-01-21T07:58:33Z",
        "updatedAt" : "2021-01-22T21:54:52Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "a3c22e80-580a-43d5-90a7-8ed3eebca2cc",
        "parentId" : "8382c931-9386-4200-86ba-4220d68d7ae2",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "I still haven't taken a look at this but I'll try to come back to it later today.  I thought I made an example of this at some point, but maybe I broke it again with all the changes or something.",
        "createdAt" : "2021-01-21T19:10:45Z",
        "updatedAt" : "2021-01-22T21:54:52Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "9cda9523-441e-4445-9e28-8337d1f664c2",
        "parentId" : "8382c931-9386-4200-86ba-4220d68d7ae2",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "The example I was thinking of ([here](https://github.com/justinmc/flutter-autocomplete-examples/blob/master/lib/core_basic_narrow_page.dart)), just manually sets the width of the optionsViewBuilder to the same as the field.  Hans was pushing for the ability to handle this case, and this is what I came up with for the short term.\r\n\r\nBut I really feel like I might be able to get the width of the field using the FocusNode and make this work nicely right now...  I'll take another closer look tomorrow and see, otherwise I'll postpone it for a later PR.",
        "createdAt" : "2021-01-21T23:59:56Z",
        "updatedAt" : "2021-01-22T21:54:52Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "1f0ac5e4-4d91-4e32-9a2e-f3e75b4d9d91",
        "parentId" : "8382c931-9386-4200-86ba-4220d68d7ae2",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "I played around with a bunch of different options for this, and my conclusion is that we should come back to this in another PR if you're ok with that.  I've created an issue to discuss our options: https://github.com/flutter/flutter/issues/74509\r\n\r\nThe good news is that it should be possible to do anything we want here.  I was able to get the size of the field via the FocusNode (even when the field is not created with fieldViewBuilder).  I was also able to get the constraints of the Autocomplete widget at its point in the tree using a LayoutBuilder.\r\n\r\nThe problem is I'm not fully satisfied with any one solution here.  I could set the width to the width of the field, but some users may want it to be full-width or the width of the Autocomplete instead (e.g. split field and options).  This is quickly infringing on the idea of flat options, which I mentioned in the design doc and we should also support at some point.\r\n\r\nSo, I think we should leave the behavior the same as RawAutocomplete for now and come back to this with a full solution.  I've proposed another builder method that would allow full customizability (see the issue linked above).\r\n\r\nLet me know what you think.  For now, if users want to achieve a narrow field with results that match, they would need to manually set the width of each to be the same, as it is with RawAutocomplete (that's how it's done in the [example I was thinking of](https://github.com/justinmc/flutter-autocomplete-examples/blob/master/lib/core_basic_narrow_page.dart)).",
        "createdAt" : "2021-01-22T17:59:13Z",
        "updatedAt" : "2021-01-22T21:54:52Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "666af52a-1ab2-447d-a191-a83713c88ed2",
        "parentId" : "8382c931-9386-4200-86ba-4220d68d7ae2",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "That makes sense! Happy to move forward with what we have for now and come back to this in a later PR.",
        "createdAt" : "2021-01-22T19:25:10Z",
        "updatedAt" : "2021-01-22T21:54:52Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "8523aff432c956b192b0861ffa3f5c4e5f797bbb",
    "line" : 233,
    "diffHunk" : "@@ -1,1 +231,235 @@        child: Container(\n          height: 200.0,\n          child: ListView.builder(\n            padding: const EdgeInsets.all(0.0),\n            itemCount: options.length,"
  },
  {
    "id" : "1fe6850c-0430-449d-bd7c-4cf450c90de1",
    "prId" : 83863,
    "prUrl" : "https://github.com/flutter/flutter/pull/83863#pullrequestreview-681319228",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b741323-a7c5-4f0a-a95e-04c177fb9582",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "I think that this makes sense, since we need to build it first to find out if it **isn't** visible and scroll it into view if that is the case.\r\n\r\nOtherwise you might want to just initialize at the correct index.... which brings us back to https://github.com/flutter/flutter/issues/12319. That issue was resolved by the scrollable_positioned_list package, which does not help us here. ðŸ¤” ",
        "createdAt" : "2021-06-10T22:46:51Z",
        "updatedAt" : "2021-06-10T22:54:34Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d0a4b9ae2f48478887a8ac6a6b253744d1cdc8f",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +302,306 @@                    final bool highlight = AutocompleteHighlightedOption.of(context) == index;\n                    if (highlight) {\n                      SchedulerBinding.instance!.addPostFrameCallback((Duration timeStamp) {\n                        Scrollable.ensureVisible(context, alignment: 0.5);\n                      });"
  }
]