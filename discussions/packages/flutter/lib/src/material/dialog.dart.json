[
  {
    "id" : "c7bbd746-eb4a-4126-93c5-febe43c8fbab",
    "prId" : 6098,
    "prUrl" : "https://github.com/flutter/flutter/pull/6098#pullrequestreview-1829303",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1f66a9b-4be1-46d8-86c9-a3adcd6a5f51",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "what if the children are too high for the window? surely we still need a scrolling widget here.\n",
        "createdAt" : "2016-09-27T21:08:54Z",
        "updatedAt" : "2016-09-27T21:32:08Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c91dfecb-0f28-4632-9d82-401a5b4a09b9",
        "parentId" : "e1f66a9b-4be1-46d8-86c9-a3adcd6a5f51",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I looked at the callers and they either have something small (e.g., a single text widget with a short string) or they introduce their own scrolling.  I think it's reasonable that we don't introduce scrolling at this level.  Previously, it was confusing because there was two level of possible scrolling.\n",
        "createdAt" : "2016-09-27T21:26:23Z",
        "updatedAt" : "2016-09-27T21:32:08Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "59cde8261a2727126ab206331c5b75f28da979a4",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +178,182 @@          mainAxisSize: MainAxisSize.min,\n          crossAxisAlignment: CrossAxisAlignment.stretch,\n          children: children\n        )\n      )"
  },
  {
    "id" : "107265cd-25cc-4ef0-ac8f-54c21066a184",
    "prId" : 7323,
    "prUrl" : "https://github.com/flutter/flutter/pull/7323#pullrequestreview-15040916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1edd77c6-1edb-4ce1-b3a7-4e0dba997cfb",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "We should probably just inline this private where it's used.",
        "createdAt" : "2017-01-04T00:35:32Z",
        "updatedAt" : "2017-01-04T00:35:32Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbab45a011167d9c6d3e3db06a1a6f92f84eb21a",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +38,42 @@\n  Color _getColor(BuildContext context) {\n    return Theme.of(context).dialogBackgroundColor;\n  }\n"
  },
  {
    "id" : "58dd6393-b48d-4574-b43d-7ff2883f9fae",
    "prId" : 8397,
    "prUrl" : "https://github.com/flutter/flutter/pull/8397#pullrequestreview-23804705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6390d3c-e60b-4f64-bef3-5b739f0325fa",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "doesn't matter what the default is, this is only called from one place and that place lists the argument.",
        "createdAt" : "2017-02-24T19:47:47Z",
        "updatedAt" : "2017-02-24T19:47:47Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "18ea775f-c842-4a27-99a3-6c147a2e1660",
        "parentId" : "f6390d3c-e60b-4f64-bef3-5b739f0325fa",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "That's true, but we might as well have ergonomic private APIs.",
        "createdAt" : "2017-02-24T20:25:28Z",
        "updatedAt" : "2017-02-24T20:25:28Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "357866157957fb5241b31c69670cbe0d94010e9d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +318,322 @@  _DialogRoute({\n    @required this.theme,\n    bool barrierDismissable: true,\n    @required this.child,\n  }) : _barrierDismissable = barrierDismissable {"
  },
  {
    "id" : "207cd19e-fef7-4839-a9ac-ada51c4fbedc",
    "prId" : 16081,
    "prUrl" : "https://github.com/flutter/flutter/pull/16081#pullrequestreview-112116090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8b1f3f0-30d0-4290-952a-6ca37ae8826a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "isn't this `ignore` required?",
        "createdAt" : "2018-04-13T04:23:44Z",
        "updatedAt" : "2018-04-19T23:02:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c931001b-03e6-4c2c-ac6c-03bfa8aa0d15",
        "parentId" : "e8b1f3f0-30d0-4290-952a-6ca37ae8826a",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Looks like the analyzer issue was fixed so they shouldn't be needed.",
        "createdAt" : "2018-04-13T18:33:07Z",
        "updatedAt" : "2018-04-19T23:02:14Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "16b9a0c72071bbbc6e796de7cfa237dbbe813610",
    "line" : 191,
    "diffHunk" : "@@ -1,1 +639,643 @@  WidgetBuilder builder,\n}) {\n  assert(child == null || builder == null);\n  return Navigator.of(context, rootNavigator: true).push(new _DialogRoute<T>(\n    child: child ?? new Builder(builder: builder),"
  },
  {
    "id" : "52818460-bc73-4b44-b150-830a6cf9ac86",
    "prId" : 23443,
    "prUrl" : "https://github.com/flutter/flutter/pull/23443#pullrequestreview-168133729",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7877e608-2699-42de-8bf4-a90943a477bb",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This could be a dartdoc template",
        "createdAt" : "2018-10-24T15:46:21Z",
        "updatedAt" : "2018-10-25T22:01:34Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "ffc6503a-3380-493b-8026-a2069bd3c6c5",
        "parentId" : "7877e608-2699-42de-8bf4-a90943a477bb",
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Done.",
        "createdAt" : "2018-10-24T21:44:41Z",
        "updatedAt" : "2018-10-25T22:01:34Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      }
    ],
    "commit" : "f78ee6aa4012ae761aeba91b04e608f35800c7ea",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +66,70 @@  /// The shape of this dialog's border.\n  ///\n  /// Defines the dialog's [Material.shape].\n  ///\n  /// The default shape is a [RoundedRectangleBorder] with a radius of 2.0."
  },
  {
    "id" : "a034dc2f-3273-4b2a-90a2-c65e3038fd18",
    "prId" : 23443,
    "prUrl" : "https://github.com/flutter/flutter/pull/23443#pullrequestreview-168568370",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be4a2dcd-7d82-45a7-9de6-3d6bd92c2478",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "You can provide the default shape here.",
        "createdAt" : "2018-10-24T15:49:17Z",
        "updatedAt" : "2018-10-25T22:01:34Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "40b3bdf1-8890-4cd7-9f0c-dd699433c281",
        "parentId" : "be4a2dcd-7d82-45a7-9de6-3d6bd92c2478",
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "That would work better in this context, but in my follow up PR I'm going to create a `DialogTheme`. That means the default has to be set below because we will have something in `build` along the lines of \r\n```dart\r\nshape: shape ?? themeData.dialogTheme.shape ?? _defaultDialogShape\r\n```",
        "createdAt" : "2018-10-24T21:44:50Z",
        "updatedAt" : "2018-10-25T22:01:34Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      },
      {
        "id" : "4ef68937-6d9e-4c72-a0b1-fe3d710021e8",
        "parentId" : "be4a2dcd-7d82-45a7-9de6-3d6bd92c2478",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I see. So if I want a dialog that's just a rectangle: `shape: Border()` - does that work?.",
        "createdAt" : "2018-10-25T19:29:08Z",
        "updatedAt" : "2018-10-25T22:01:34Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "225136bf-152c-4577-be60-40fc4e022216",
        "parentId" : "be4a2dcd-7d82-45a7-9de6-3d6bd92c2478",
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Yes, that works. For the sake of completeness I added a unit test for this case. ",
        "createdAt" : "2018-10-25T20:18:49Z",
        "updatedAt" : "2018-10-25T22:01:34Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      }
    ],
    "commit" : "f78ee6aa4012ae761aeba91b04e608f35800c7ea",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +43,47 @@    this.insetAnimationDuration = const Duration(milliseconds: 100),\n    this.insetAnimationCurve = Curves.decelerate,\n    this.shape,\n  }) : super(key: key);\n"
  },
  {
    "id" : "764ebf38-489d-4093-9d71-21782634d502",
    "prId" : 23443,
    "prUrl" : "https://github.com/flutter/flutter/pull/23443#pullrequestreview-168550342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33f9fc44-d6d9-453f-8de3-2bc45929225d",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "null should mean \"no shape\", i.e. just a rectangle.",
        "createdAt" : "2018-10-24T15:49:47Z",
        "updatedAt" : "2018-10-25T22:01:34Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "e67d7907-82d6-44ff-8ac1-16662b1a8def",
        "parentId" : "33f9fc44-d6d9-453f-8de3-2bc45929225d",
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "That does sound reasonable, but I think we need the `null` check to be our version of \"did they pass in a custom shape? If not use, the theme's shape, finally use the default shape\". For Material Dialogs, I think the default should be a border radius of 4.0 (matching the material guideline).",
        "createdAt" : "2018-10-24T21:44:53Z",
        "updatedAt" : "2018-10-25T22:01:34Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      },
      {
        "id" : "6f8384cb-18fe-4faa-8077-160a446cc2ea",
        "parentId" : "33f9fc44-d6d9-453f-8de3-2bc45929225d",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "OK, that's reasonable and consistent with the way other classes handle unspecified visual parameters.",
        "createdAt" : "2018-10-25T19:31:17Z",
        "updatedAt" : "2018-10-25T22:01:34Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "f78ee6aa4012ae761aeba91b04e608f35800c7ea",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +100,104 @@              type: MaterialType.card,\n              child: child,\n              shape: shape ?? _defaultDialogShape,\n            ),\n          ),"
  },
  {
    "id" : "74cb37a8-1c2d-4d56-8c1a-3cfac9e62fbb",
    "prId" : 24169,
    "prUrl" : "https://github.com/flutter/flutter/pull/24169#pullrequestreview-183747458",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2d4987c-8902-4cef-bbbe-75ecb9765454",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Explain how the default elevation is computed here.\r\n\r\nYou may want another dartdoc template for the Dialog specific elevation info, since it appears in the 3 places.",
        "createdAt" : "2018-11-16T20:12:05Z",
        "updatedAt" : "2018-12-12T20:14:23Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "96c66bd6-381f-4cd5-a150-9b1279899f78",
        "parentId" : "e2d4987c-8902-4cef-bbbe-75ecb9765454",
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Added bit about default elevation. \r\n\r\nAbout the macro, can macros be nested? ie, should I do \r\n1. `{@template flutter.material.dialog.elevation}` contains `{@macro flutter.material.material.elevation}` inside of it? \r\nOr \r\n1. [AlertDialog.elevation] references both `{@macro flutter.material.material.elevation}` and  `{@macro flutter.material.dialog.elevation}`?",
        "createdAt" : "2018-11-16T22:25:16Z",
        "updatedAt" : "2018-12-12T20:14:23Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      },
      {
        "id" : "90ea03fa-f0bf-4bb9-8cfa-911eaefcc2d0",
        "parentId" : "e2d4987c-8902-4cef-bbbe-75ecb9765454",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The [dartdoc doc for macros](https://github.com/dart-lang/dartdoc) doesn't mention nested macros, so it would probably be best not to rely on them.",
        "createdAt" : "2018-11-19T20:33:04Z",
        "updatedAt" : "2018-12-12T20:14:23Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "f572e0b7-622f-4f88-9e5a-f0d08007f968",
        "parentId" : "e2d4987c-8902-4cef-bbbe-75ecb9765454",
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Done.",
        "createdAt" : "2018-12-11T15:45:31Z",
        "updatedAt" : "2018-12-12T20:14:23Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      }
    ],
    "commit" : "5567c1c6d42ff6263057e7448c7566d5b3ec174b",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +61,65 @@  /// {@template flutter.material.dialog.elevation}\n  /// The z-coordinate of this [Dialog].\n  ///\n  /// If null then [DialogTheme.elevation] is used, and if that's null then the\n  /// dialog's elevation is 24.0."
  },
  {
    "id" : "5709db34-3091-406c-a22f-5a60f8608389",
    "prId" : 43226,
    "prUrl" : "https://github.com/flutter/flutter/pull/43226#pullrequestreview-305562649",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10c62a57-a274-496e-a1ca-bcc73d94e184",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I was surprised that MainAxisSize.min isn't needed here. It looks like it's not needed because none of the children are Expanded.",
        "createdAt" : "2019-10-22T00:17:07Z",
        "updatedAt" : "2019-10-23T15:15:06Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "f40bec65-5fe8-49a6-ab59-a456caa97bda",
        "parentId" : "10c62a57-a274-496e-a1ca-bcc73d94e184",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "It turns out that you were right -- not setting the mainAxisSize and crossAxisAlignment settings for the Column was breaking a DialogTheme golden test. I just implemented the fix.",
        "createdAt" : "2019-10-22T23:28:22Z",
        "updatedAt" : "2019-10-23T15:15:06Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "db9795391ae4800f3e2203431083fd75605c9b3b",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +314,318 @@            Flexible(\n              child: SingleChildScrollView(\n                child: Column(\n                  mainAxisSize: MainAxisSize.min,\n                  crossAxisAlignment: CrossAxisAlignment.stretch,"
  },
  {
    "id" : "93849b28-2677-4c2e-b8f4-75245ad5053b",
    "prId" : 45079,
    "prUrl" : "https://github.com/flutter/flutter/pull/45079#pullrequestreview-319404395",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2baf138-33ea-4e0d-ab8f-fd5bd69d7676",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Rather than duplicating the construction of the title and body widgets for both scrolling and non-scrolling cases, it would be better to pull these out into a single place and just include them in the appropriate containers. That way if someone needs to update the title for example, there is only one place to do so. ",
        "createdAt" : "2019-11-19T22:47:00Z",
        "updatedAt" : "2019-12-18T19:05:58Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac8e89cb50ed405e6e19b9e9c7e72746ea2b44a2",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +382,386 @@                crossAxisAlignment: CrossAxisAlignment.stretch,\n                children: <Widget>[\n                  if (title != null)\n                    titleWidget,\n                  if (content != null)"
  },
  {
    "id" : "1b9014e5-e5be-4891-9b73-ffef36b47828",
    "prId" : 48728,
    "prUrl" : "https://github.com/flutter/flutter/pull/48728#pullrequestreview-342179142",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a356127-92a1-41ee-95ce-0ece1f21e85b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Same comment as earlier",
        "createdAt" : "2020-01-13T22:30:43Z",
        "updatedAt" : "2020-01-14T03:29:37Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "11acccc6c72d830d71085625beaf81bdd1c68ac5",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +323,327 @@  final EdgeInsetsGeometry actionsPadding;\n\n  /// The vertical direction of [actions] if the children overflow\n  /// horizontally.\n  ///"
  },
  {
    "id" : "31394bd5-f73d-4468-a9d5-aa208969a245",
    "prId" : 50035,
    "prUrl" : "https://github.com/flutter/flutter/pull/50035#pullrequestreview-357063620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37221750-3e3d-4856-a5dc-005ab4a18fb5",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "nit: put this parameter above child, since there's a preference for `child` parameters to be the last param in a named parameter list.",
        "createdAt" : "2020-02-11T23:08:38Z",
        "updatedAt" : "2020-02-12T07:48:40Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "93b1334fdc9f123d79437332442a53afe6622ecf",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +541,545 @@    Key key,\n    this.onPressed,\n    this.padding,\n    this.child,\n  }) : super(key: key);"
  },
  {
    "id" : "8178d5ba-affd-4ef4-b280-2e15bf197607",
    "prId" : 50609,
    "prUrl" : "https://github.com/flutter/flutter/pull/50609#pullrequestreview-357719837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3d5de31-7dcf-42e1-a142-7af5f0beecd9",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "This import allows devs to jump to the definition of `MaterialTapTargetSize`.",
        "createdAt" : "2020-02-12T19:18:52Z",
        "updatedAt" : "2020-02-12T19:21:21Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "9217a3bfc6d0d4ecddab1437b5aff145936f6559",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +21,25 @@import 'material_localizations.dart';\nimport 'theme.dart';\nimport 'theme_data.dart';\n\n// Examples can assume:"
  },
  {
    "id" : "1bd60d61-b1cc-48ae-9846-3be3ef58143a",
    "prId" : 50775,
    "prUrl" : "https://github.com/flutter/flutter/pull/50775#pullrequestreview-360678137",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eeac5975-1d12-4f5c-9dc1-15ecffae5814",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Nice, this last sentence makes it very clear! ",
        "createdAt" : "2020-02-18T21:16:14Z",
        "updatedAt" : "2020-02-19T19:00:23Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d517fbab3b5297bfd8b2b9cba21133755250a5a",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +95,99 @@  /// {@template flutter.material.dialog.insetPadding}\n  /// The amount of padding added to [MediaQueryData.viewInsets] on the outside\n  /// of the dialog. This defines the minimum space between the screen's edges\n  /// and the dialog.\n  ///"
  },
  {
    "id" : "0201ce9b-b2d8-4d4d-bf7b-c01ac595d465",
    "prId" : 54110,
    "prUrl" : "https://github.com/flutter/flutter/pull/54110#pullrequestreview-388479114",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8ff4d6f-a273-4fde-8823-d5f589f304d3",
        "parentId" : null,
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "What do you think about adding `barrierColor` to `DialogTheme` as well?",
        "createdAt" : "2020-04-06T17:38:11Z",
        "updatedAt" : "2020-04-06T17:38:53Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      },
      {
        "id" : "caf55885-ff15-4b85-9264-7f51469dc370",
        "parentId" : "f8ff4d6f-a273-4fde-8823-d5f589f304d3",
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Yup. It's on my list. I want to update DialogTheme to bring it in line with the other themes first and then add a few more parameters like this (and the insetsPadding and clipBehavior we added a while back).\r\n",
        "createdAt" : "2020-04-06T17:45:35Z",
        "updatedAt" : "2020-04-06T17:45:36Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfc114d22920f0ad7817160b03cffa2ad4446b99",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +950,954 @@    barrierDismissible: barrierDismissible,\n    barrierLabel: MaterialLocalizations.of(context).modalBarrierDismissLabel,\n    barrierColor: barrierColor ?? Colors.black54,\n    transitionDuration: const Duration(milliseconds: 150),\n    transitionBuilder: _buildMaterialDialogTransitions,"
  },
  {
    "id" : "63aa0b8d-d317-48f7-99df-3ad210170436",
    "prId" : 56084,
    "prUrl" : "https://github.com/flutter/flutter/pull/56084#pullrequestreview-411306057",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6ded25f-36c7-44fa-95ac-18f01d531e7b",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "@darrenaustin I thought I might use a flag via DialogTheme, but the _defaultDialogShape here is actually used as a fallback for the dialogTheme here in the base Dialog class.\r\n\r\nI anticipate the turn over being quick, as this is not a severely breaking change. Once this lands I can migrate those affected from the dev roll and remove this flag quickly, the flag itself should not reach stable, instead there will be a migration guide for those that may notice a slight difference in the border radius, or have a golden file test that is affected.",
        "createdAt" : "2020-05-12T23:10:37Z",
        "updatedAt" : "2020-05-18T19:16:21Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "49989487-8afd-41e8-88c4-34ed89a4c230",
        "parentId" : "c6ded25f-36c7-44fa-95ac-18f01d531e7b",
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Ah, that totally makes sense and I agree that it isn't that much churn.",
        "createdAt" : "2020-05-13T21:17:08Z",
        "updatedAt" : "2020-05-18T19:16:21Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      }
    ],
    "commit" : "46969e467b61c87392130826513339fd36f30401",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +167,171 @@              color: backgroundColor ?? dialogTheme.backgroundColor ?? Theme.of(context).dialogBackgroundColor,\n              elevation: elevation ?? dialogTheme.elevation ?? _defaultElevation,\n              shape: shape ?? dialogTheme.shape ?? (\n                useMaterialBorderRadius ?\n                  _defaultDialogShape :"
  },
  {
    "id" : "b8fa4d2e-d47e-4467-964d-37c066d64d15",
    "prId" : 66213,
    "prUrl" : "https://github.com/flutter/flutter/pull/66213#pullrequestreview-495266205",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18aceb14-4028-4563-8da5-acbb7ad33868",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "nit: maybe `behind` instead of `below`\r\n```suggestion\r\n/// barrier that darkens everything behind the dialog. If `null` the default color\r\n```",
        "createdAt" : "2020-09-24T00:57:23Z",
        "updatedAt" : "2020-09-24T00:58:31Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "72f860b3-7d7a-4a95-b1dc-fed253cb891f",
        "parentId" : "18aceb14-4028-4563-8da5-acbb7ad33868",
        "authorId" : "599e83f5-b0df-40cc-8c7c-8447119d8f6e",
        "body" : "Yes I wanted to do behind, but above/below is used everywhere when describing such behavior, even on the ModalBarrier page. Maybe they were describing where the page is on the widget tree?",
        "createdAt" : "2020-09-24T06:35:22Z",
        "updatedAt" : "2020-09-24T06:36:12Z",
        "lastEditedBy" : "599e83f5-b0df-40cc-8c7c-8447119d8f6e",
        "tags" : [
        ]
      },
      {
        "id" : "11c59da6-55f6-41b1-bc74-f337ad2b48de",
        "parentId" : "18aceb14-4028-4563-8da5-acbb7ad33868",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Let's just keep \"below\" then. I did a quick search around the codebase and below and behind are both used in different contexts, so it should be pretty clear what either means to our users",
        "createdAt" : "2020-09-24T06:51:22Z",
        "updatedAt" : "2020-09-24T06:51:22Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ec6bcd7e48358cf6fed22f51a06314362585532",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +932,936 @@///\n/// The `barrierColor` argument is used to specify the color of the modal\n/// barrier that darkens everything below the dialog. If `null` the default color\n/// `Colors.black54` is used.\n///"
  },
  {
    "id" : "a75c2189-7792-4a81-9a57-d0ab430e4740",
    "prId" : 66213,
    "prUrl" : "https://github.com/flutter/flutter/pull/66213#pullrequestreview-495151350",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9c2cca0-0381-4f46-b8b9-5d21a3855d70",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "nit, it's not your mistake, but would be good to fix this anyway :) \r\n```suggestion\r\n/// the dialog will only be constrained by the screen size. `useSafeArea` cannot be `null`.\r\n```",
        "createdAt" : "2020-09-24T00:58:09Z",
        "updatedAt" : "2020-09-24T00:58:31Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ec6bcd7e48358cf6fed22f51a06314362585532",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +939,943 @@/// (see [SafeArea] for more details). It is `true` by default, which means\n/// the dialog will not overlap operating system areas. If it is set to `false`\n/// the dialog will only be constrained by the screen size. It can not be `null`.\n///\n/// The `useRootNavigator` argument is used to determine whether to push the"
  },
  {
    "id" : "de3296da-a42d-46fb-9332-6650ebb2a533",
    "prId" : 71838,
    "prUrl" : "https://github.com/flutter/flutter/pull/71838#pullrequestreview-546707648",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e87cb32-b469-47de-ac4d-0ae4f4b8a3a9",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I don't think this change achieves what you're looking for. The original assert simply doesn't allow for both to be null at the same time, which is valid use case: We don't want users to define both, even though the code technically allows for it. \r\n\r\nI think what you meant to do was introduce another assert:\r\n```suggestion\r\n  assert(child == null || builder == null);\r\n  assert(child != null || builder != null);\r\n```\r\n\r\nWe can need add a test to ensure that the assert is triggered to make sure there are no regressions",
        "createdAt" : "2020-12-08T02:34:44Z",
        "updatedAt" : "2020-12-08T08:19:42Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "96954351-ef06-4788-a7c3-d6230b4a228a",
        "parentId" : "9e87cb32-b469-47de-ac4d-0ae4f4b8a3a9",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I helped write the tests for you since it can be quite convoluted to write assertion tests. Just add these to `dialog_test.dart` and you should be good to go:\r\n```dart\r\n  testWidgets('showDialog child and builder cannot be simultaneously defined', (WidgetTester tester) async {\r\n    late BuildContext currentBuildContext;\r\n    await tester.pumpWidget(\r\n      MaterialApp(\r\n        home: Scaffold(\r\n          body: Center(\r\n            child: Builder(\r\n              builder: (BuildContext context) {\r\n                currentBuildContext = context;\r\n                return Container();\r\n              }\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n\r\n    expect(() async {\r\n      showDialog<void>(\r\n        context: currentBuildContext,\r\n        child: const Text('Child'),\r\n        builder: (BuildContext context) {\r\n          return const Text('Builder');\r\n        },\r\n      );\r\n    }, throwsAssertionError);\r\n  });\r\n\r\n  testWidgets('showDialog child or builder must be defined', (WidgetTester tester) async {\r\n    late BuildContext currentBuildContext;\r\n    await tester.pumpWidget(\r\n      MaterialApp(\r\n        home: Scaffold(\r\n          body: Center(\r\n            child: Builder(\r\n              builder: (BuildContext context) {\r\n                currentBuildContext = context;\r\n                return Container();\r\n              }\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n\r\n    expect(\r\n      () => showDialog<void>(context: currentBuildContext),\r\n      throwsAssertionError,\r\n    );\r\n  });\r\n```",
        "createdAt" : "2020-12-08T02:56:37Z",
        "updatedAt" : "2020-12-08T08:19:42Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "d30e801beab1089965a425ebfbe41cbd34deafd8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +974,978 @@}) {\n  assert(child == null || builder == null);\n  assert(child != null || builder != null);\n  assert(barrierDismissible != null);\n  assert(useSafeArea != null);"
  }
]