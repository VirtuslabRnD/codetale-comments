[
  {
    "id" : "4775d718-5afb-44a6-97de-1c0ab13d9525",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d664222-3f61-49e5-9f5e-1211c6603d41",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "newline\n",
        "createdAt" : "2016-03-31T22:49:15Z",
        "updatedAt" : "2016-03-31T22:49:15Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +24,28 @@///\n/// See also:\n///  * [CheckBox]\n///  * [Radio]\n///  * [Switch]"
  },
  {
    "id" : "d6eb24e3-e88d-4159-bd47-58e9f400f490",
    "prId" : 3018,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad494be2-df4b-4b83-932a-17ed9e2d1833",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "mention that if null, it'll be disabled, etc\n",
        "createdAt" : "2016-03-31T22:49:40Z",
        "updatedAt" : "2016-03-31T22:49:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bc08720e48a8063b50875281726fbe3b2768994",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +63,67 @@  final Color activeColor;\n\n  /// Called when the user selects a new value for the slider.\n  final ValueChanged<double> onChanged;\n"
  },
  {
    "id" : "48f96f2d-6bac-49c6-be9c-99bb3ba22ce9",
    "prId" : 3061,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c88081a-2529-48a2-9a7d-e324e436f6f9",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "is this the right color?\n",
        "createdAt" : "2016-04-02T08:05:43Z",
        "updatedAt" : "2016-04-04T17:46:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "2edd9f87-f622-4798-b5ff-03ac5eea2c7d",
        "parentId" : "2c88081a-2529-48a2-9a7d-e324e436f6f9",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah.  The spec doesn't say what the color is, but digital color meter on the examples in the spec says it's completely white.\n",
        "createdAt" : "2016-04-02T08:12:48Z",
        "updatedAt" : "2016-04-04T17:46:29Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "6b1ce74e-37f0-43a3-809c-040e158bd467",
        "parentId" : "2c88081a-2529-48a2-9a7d-e324e436f6f9",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "wow, yeah, same in dark and light themes. nice.\n",
        "createdAt" : "2016-04-02T08:21:25Z",
        "updatedAt" : "2016-04-04T17:46:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "d4438729-ed21-423c-a131-fff5d499ee00",
        "parentId" : "2c88081a-2529-48a2-9a7d-e324e436f6f9",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I think that someday we're going to need values like this to bottom out in the Theme because custom themes.\n",
        "createdAt" : "2016-04-04T17:51:16Z",
        "updatedAt" : "2016-04-04T17:51:16Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "09e457f384210570f639444291d345d907426828",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +242,246 @@      _labelPainter\n        ..text = new TextSpan(\n          style: Typography.white.body1.copyWith(fontSize: 10.0),\n          text: newLabel\n        )"
  },
  {
    "id" : "9d32e77f-9650-4d87-b932-895de5d15778",
    "prId" : 4808,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "365b10fb-f3f1-41be-8b3e-28f9b019e1fd",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "eventually we should presumably expose the value of the slider?\n",
        "createdAt" : "2016-07-01T19:20:30Z",
        "updatedAt" : "2016-07-01T20:07:36Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "38725013bf4f58e9479e49e18086f41cef9e088f",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +429,433 @@  Iterable<SemanticAnnotator> getSemanticAnnotators() sync* {\n    yield (SemanticsNode semantics) {\n      if (isInteractive)\n        semantics.addAdjustmentActions();\n    };"
  },
  {
    "id" : "919e144c-0a46-4f3e-9c60-69e0a4d11ce9",
    "prId" : 5902,
    "prUrl" : "https://github.com/flutter/flutter/pull/5902#pullrequestreview-664304",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12d8aa6f-8c28-4257-b453-e1d5dcf6730e",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Maybe assert that?\n",
        "createdAt" : "2016-09-16T04:16:14Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "772dd222-2d4b-4133-8c93-5a78bacf8654",
        "parentId" : "12d8aa6f-8c28-4257-b453-e1d5dcf6730e",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Right now there's no way to tell -- the ticker provider isn't kept around to compare against.\n",
        "createdAt" : "2016-09-20T00:39:55Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "57b9f88bf58da56769af22de167f61deb943ec3c",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +169,173 @@      ..onChanged = onChanged;\n    // Ticker provider cannot change since there's a 1:1 relationship between\n    // the _SliderRenderObjectWidget object and the _SliderState object.\n  }\n}"
  },
  {
    "id" : "9b298ef2-890f-40ba-833f-4649ef80f302",
    "prId" : 5936,
    "prUrl" : "https://github.com/flutter/flutter/pull/5936#pullrequestreview-657427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54845655-a452-4082-bed4-805d31905d3b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "file a bug to track this and link it here\n",
        "createdAt" : "2016-09-19T23:24:54Z",
        "updatedAt" : "2016-09-20T15:52:44Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "10131372d3999e5dc26b19a5591d09d12886bb81",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +252,256 @@    additionalConstraints = _getAdditionalConstraints(_label);\n    if (newLabel != null) {\n      // TODO(abarth): Handle textScaleFactor.\n      // https://github.com/flutter/flutter/issues/5938\n      _labelPainter"
  },
  {
    "id" : "a634d810-f16d-45e5-b0a9-e93feed2e383",
    "prId" : 7342,
    "prUrl" : "https://github.com/flutter/flutter/pull/7342#pullrequestreview-15369358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c51eaee-e1ac-4a18-9335-99c1aff3b9d2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "We should include the reasoning for why you'd set this to true (the stuff you told me about where it's open when you've turned the thing off entirely or whatnot).",
        "createdAt" : "2017-01-05T02:27:16Z",
        "updatedAt" : "2017-01-05T19:07:08Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "be8b38b1-f3a2-4735-be06-4b4aeebe18dd",
        "parentId" : "0c51eaee-e1ac-4a18-9335-99c1aff3b9d2",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Done.",
        "createdAt" : "2017-01-05T19:03:39Z",
        "updatedAt" : "2017-01-05T19:07:08Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "273a234d6cd1de6529f04b5f056ead321bee0856",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +129,133 @@  final Color activeColor;\n\n  /// Whether the thumb should be an open circle when the slider is at its minimum position.\n  ///\n  /// When this property is false, the thumb does not change when it the slider"
  },
  {
    "id" : "6eae1e8f-2700-41dc-9e5d-21fb262b48c2",
    "prId" : 7481,
    "prUrl" : "https://github.com/flutter/flutter/pull/7481#pullrequestreview-16665713",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ca51867-19e2-4b95-9696-ec64292f0db9",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "it's so weird that you have to remember the members but not the team.",
        "createdAt" : "2017-01-13T21:22:53Z",
        "updatedAt" : "2017-01-13T22:30:53Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "b4afb95d-b926-48a0-a7d6-d827e8e32b58",
        "parentId" : "3ca51867-19e2-4b95-9696-ec64292f0db9",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "You can always get the team back from the recognizers.",
        "createdAt" : "2017-01-13T22:30:32Z",
        "updatedAt" : "2017-01-13T22:30:53Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "fdbc546d0a17a3c156d20b20c8d93eb30783d3f9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +270,274 @@    assert(value != null && value >= 0.0 && value <= 1.0);\n    this.label = label;\n    GestureArenaTeam team = new GestureArenaTeam();\n    _drag = new HorizontalDragGestureRecognizer()\n      ..team = team"
  },
  {
    "id" : "7e78ba76-a4f2-4b3f-a32d-292575a7977e",
    "prId" : 7481,
    "prUrl" : "https://github.com/flutter/flutter/pull/7481#pullrequestreview-16665648",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28f77215-8cd3-4eb0-a31c-83206ff965b1",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This would be cleaner if you could add the pointer to the team, and have it forward it to the members, no?",
        "createdAt" : "2017-01-13T21:24:15Z",
        "updatedAt" : "2017-01-13T22:30:53Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "7430bb24-3775-4eed-b970-391f57268c08",
        "parentId" : "28f77215-8cd3-4eb0-a31c-83206ff965b1",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "That's less flexible.  For example, there might be situations where you want to add a pointer to one recognizer but not the other (or maybe you want to add the pointer in a different order in some scenarios).",
        "createdAt" : "2017-01-13T22:30:06Z",
        "updatedAt" : "2017-01-13T22:30:53Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "fdbc546d0a17a3c156d20b20c8d93eb30783d3f9",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +432,436 @@      _drag.addPointer(event);\n      _tap.addPointer(event);\n    }\n  }\n"
  },
  {
    "id" : "364897f2-01ed-4ae2-bca7-ef0697e7800d",
    "prId" : 11888,
    "prUrl" : "https://github.com/flutter/flutter/pull/11888#pullrequestreview-60210727",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95b060e8-b5fe-4835-921e-0b20ddee1128",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Does the style guide say which way to do these comparisons?",
        "createdAt" : "2017-09-01T04:10:42Z",
        "updatedAt" : "2017-09-07T23:29:30Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "bd02d42f-8843-41b3-9b05-076c985f8e27",
        "parentId" : "95b060e8-b5fe-4835-921e-0b20ddee1128",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Nope. I can change this to the other way. We had both written this method independently, this was the only difference.\r\n\r\nI go back on forth on which I find more intuitive which is why I haven't put anything in the style guide...",
        "createdAt" : "2017-09-01T18:26:58Z",
        "updatedAt" : "2017-09-07T23:29:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "58cb256d-9640-44ba-9a5a-542fefa39100",
        "parentId" : "95b060e8-b5fe-4835-921e-0b20ddee1128",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Actually I'm leaving it as `value == _textDirection` because that's what all the other setters in this file do.",
        "createdAt" : "2017-09-01T18:28:08Z",
        "updatedAt" : "2017-09-07T23:29:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e327e2bc2a495503f14ea998f046626aee33ec5b",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +414,418 @@  set textDirection(TextDirection value) {\n    assert(value != null);\n    if (value == _textDirection)\n      return;\n    _textDirection = value;"
  },
  {
    "id" : "9891faf7-45da-45cc-a6eb-2984f275da8c",
    "prId" : 12511,
    "prUrl" : "https://github.com/flutter/flutter/pull/12511#pullrequestreview-69123453",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edb9bb32-e4ab-42b9-8c41-09b2aa9a0972",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "use the initState method, not the constructor, to initialize state for a State",
        "createdAt" : "2017-10-13T04:28:16Z",
        "updatedAt" : "2017-10-13T04:28:16Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1afe49adb249687fb19d3ca8fefe7f8c711a79c3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +172,176 @@class _SliderState extends State<Slider> with TickerProviderStateMixin {\n  _SliderState() {\n    _reactionController = new AnimationController(\n      duration: kRadialReactionDuration,\n      vsync: this,"
  },
  {
    "id" : "a58f0694-5a0b-43f2-9f02-805db56f3a58",
    "prId" : 12511,
    "prUrl" : "https://github.com/flutter/flutter/pull/12511#pullrequestreview-69123532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e44e2e12-5020-46de-833a-39386ab57790",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "why `?`? Since you set it when the State is created, and dispose of it when it's finished, there's no way it can be anything but non-null, no?",
        "createdAt" : "2017-10-13T04:29:11Z",
        "updatedAt" : "2017-10-13T04:29:12Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1afe49adb249687fb19d3ca8fefe7f8c711a79c3",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +185,189 @@  @override\n  void dispose() {\n    _reactionController?.dispose();\n    super.dispose();\n  }"
  },
  {
    "id" : "f4726e46-2b9a-4c4f-92ed-299316d9328f",
    "prId" : 12511,
    "prUrl" : "https://github.com/flutter/flutter/pull/12511#pullrequestreview-69123766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8ffb864-6f95-4a3f-b0e2-6c03e1678a29",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this comment isn't really necessary. I mean, I can't really see any situation in which reading this comment would improve someone's understanding of the code...",
        "createdAt" : "2017-10-13T04:31:30Z",
        "updatedAt" : "2017-10-13T04:31:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1afe49adb249687fb19d3ca8fefe7f8c711a79c3",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +190,194 @@\n  // Have to keep the reaction controller here so that we may dispose of it\n  // properly.\n  AnimationController _reactionController;\n"
  },
  {
    "id" : "78a3583a-664b-4326-b894-69c94fcea986",
    "prId" : 12511,
    "prUrl" : "https://github.com/flutter/flutter/pull/12511#pullrequestreview-69123860",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82bc4ab0-f005-43e9-94d7-ac0d1494b2b1",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "You should set this in the initializer section of the constructor.",
        "createdAt" : "2017-10-13T04:32:48Z",
        "updatedAt" : "2017-10-13T04:32:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1afe49adb249687fb19d3ca8fefe7f8c711a79c3",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +344,348 @@      ..team = team\n      ..onTapUp = _handleTapUp;\n    _reactionController = reactionController;\n    _reaction = new CurvedAnimation(\n      parent: _reactionController,"
  },
  {
    "id" : "73b47827-54c6-44d8-8242-73ef009df3a3",
    "prId" : 12511,
    "prUrl" : "https://github.com/flutter/flutter/pull/12511#pullrequestreview-69123912",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd7d1c20-a83e-4b9d-9a3d-ab25aeb8f8a6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "The _reactionController field should presumably now be final, since there's no way to change it.",
        "createdAt" : "2017-10-13T04:33:27Z",
        "updatedAt" : "2017-10-13T04:33:27Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1afe49adb249687fb19d3ca8fefe7f8c711a79c3",
    "line" : 142,
    "diffHunk" : "@@ -1,1 +463,467 @@          text: label,\n        )\n        ..textDirection = textDirection\n        ..layout();\n    } else {"
  },
  {
    "id" : "51e381cc-8492-471d-ac3c-17979ccf1302",
    "prId" : 12511,
    "prUrl" : "https://github.com/flutter/flutter/pull/12511#pullrequestreview-69124028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f38b5055-09dc-4c49-b6cc-e5bae82cae52",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Presumably this also applies to _position?",
        "createdAt" : "2017-10-13T04:34:50Z",
        "updatedAt" : "2017-10-13T04:34:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1afe49adb249687fb19d3ca8fefe7f8c711a79c3",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +347,351 @@    _reaction = new CurvedAnimation(\n      parent: _reactionController,\n      curve: Curves.fastOutSlowIn\n    )..addListener(markNeedsPaint);\n    _position = new AnimationController("
  },
  {
    "id" : "c4c2b71f-42a1-4537-b0a9-6481ec6f0821",
    "prId" : 14901,
    "prUrl" : "https://github.com/flutter/flutter/pull/14901#pullrequestreview-101704142",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cba59e1c-adfe-46b3-b313-005b045e9b38",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "these aren't really wrapped in the flutter style either, though here i don't think it impacts readabilty much",
        "createdAt" : "2018-03-06T20:30:46Z",
        "updatedAt" : "2018-03-06T20:30:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1cb3bc91888746c4c9144f3d9016d40240b20f2",
    "line" : 785,
    "diffHunk" : "@@ -1,1 +687,691 @@        begin: _sliderTheme.disabledActiveTickMarkColor, end: _sliderTheme.activeTickMarkColor);\n    final ColorTween inactiveTickMarkEnableColor = new ColorTween(\n        begin: _sliderTheme.disabledInactiveTickMarkColor, end: _sliderTheme.inactiveTickMarkColor);\n\n    final Paint activeRailPaint = new Paint()"
  },
  {
    "id" : "e5692e12-9f68-42a9-b377-2ff670f6844a",
    "prId" : 15358,
    "prUrl" : "https://github.com/flutter/flutter/pull/15358#pullrequestreview-106197851",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f124b402-7309-410f-9d9f-1e4e5d9235e0",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you check for null anyway here",
        "createdAt" : "2018-03-22T16:27:49Z",
        "updatedAt" : "2018-03-22T16:27:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3462714adb47e79e4f432e35c74c5642f039f219",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +263,267 @@    enableController.dispose();\n    positionController.dispose();\n    interactionTimer?.cancel();\n    super.dispose();\n  }"
  },
  {
    "id" : "450f2e71-55b6-44ee-822b-21b022386c04",
    "prId" : 15358,
    "prUrl" : "https://github.com/flutter/flutter/pull/15358#pullrequestreview-106248820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bbb9068-f9c5-434a-b33c-167657a6b36f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "checking for null is a very minor burden, it's probably better than creating a throwaway timer",
        "createdAt" : "2018-03-22T16:28:35Z",
        "updatedAt" : "2018-03-22T16:28:35Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "4663baf8-1a27-47d9-a9cf-98eab22651b6",
        "parentId" : "4bbb9068-f9c5-434a-b33c-167657a6b36f",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "It's not the burden (cpu-wise), it was the complexity of the code, since if I allow it to be null here, then I have to check it everywhere I use it.\r\n",
        "createdAt" : "2018-03-22T18:14:31Z",
        "updatedAt" : "2018-03-22T18:24:04Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "be7b6d76-0be9-4e90-b475-146cd6b8713b",
        "parentId" : "4bbb9068-f9c5-434a-b33c-167657a6b36f",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I meant the coding burden too. It's generally a single question mark whenever you currently do an \"isActive\" test.",
        "createdAt" : "2018-03-22T18:31:35Z",
        "updatedAt" : "2018-03-22T18:31:35Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3462714adb47e79e4f432e35c74c5642f039f219",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +252,256 @@    // check for null below.\n    interactionTimer = new Timer(Duration.zero, () {});\n    interactionTimer.cancel();\n    enableController.value = widget.onChanged != null ? 1.0 : 0.0;\n    positionController.value = _unlerp(widget.value);"
  },
  {
    "id" : "73526e8c-c491-4bd9-ae96-210264035a66",
    "prId" : 15358,
    "prUrl" : "https://github.com/flutter/flutter/pull/15358#pullrequestreview-106241960",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37987aed-a2c2-47f1-b062-a78ab04cc9be",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "in fact it would be less code to check null. :-)\r\n```dart\r\n_state.interactionTimer?.cancel();\r\n```",
        "createdAt" : "2018-03-22T16:30:32Z",
        "updatedAt" : "2018-03-22T16:30:32Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "140e25f8-42f3-4e62-9d0f-0f1779c868dc",
        "parentId" : "37987aed-a2c2-47f1-b062-a78ab04cc9be",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Don't I still have to check to make sure it's active?  The docs don't say if it's OK to cancel an inactive timer.\r\n\r\n```dart\r\n        if (_state.interactionTimer != null && _state.interactionTimer.isActive) {\r\n          _state.interactionTimer.cancel();\r\n        }\r\n```",
        "createdAt" : "2018-03-22T18:15:20Z",
        "updatedAt" : "2018-03-22T18:24:04Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "3462714adb47e79e4f432e35c74c5642f039f219",
    "line" : 234,
    "diffHunk" : "@@ -1,1 +643,647 @@        if (_state.interactionTimer.isActive) {\n          _state.interactionTimer.cancel();\n        }\n        _state.interactionTimer = new Timer(_minimumInteractionTime * timeDilation, () {\n          if (!_active && _state.valueIndicatorController.status == AnimationStatus.completed) {"
  },
  {
    "id" : "2a96bb2b-ea6f-4e42-9d36-528f6206066a",
    "prId" : 18005,
    "prUrl" : "https://github.com/flutter/flutter/pull/18005#pullrequestreview-126920107",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01d82ae7-3c33-4e37-8d3b-f2cfa69823df",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I like the flexibility this gives developers.\r\n\r\n+1 for including an example!",
        "createdAt" : "2018-06-07T19:14:10Z",
        "updatedAt" : "2018-06-07T20:58:29Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "4234cd9d3e9e875cdef71b151739106cb1a2be6d",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +321,325 @@  ///     });\n  ///   },\n  ///   semanticFormatterCallback: (double newValue) {\n  ///     return '${newValue.round()} dollars';\n  ///   }"
  },
  {
    "id" : "accb7e86-0517-432b-a5db-cd7d7a134c13",
    "prId" : 18005,
    "prUrl" : "https://github.com/flutter/flutter/pull/18005#pullrequestreview-126932350",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "750176ab-9bc6-4d19-96b9-a74f0e1c6c99",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Do you need to call markNeedsSemanticsUpdate if the formatter changes?",
        "createdAt" : "2018-06-07T19:17:11Z",
        "updatedAt" : "2018-06-07T20:58:29Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "525971f7-05e5-46d9-a7fb-dfe7f67a52db",
        "parentId" : "750176ab-9bc6-4d19-96b9-a74f0e1c6c99",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Done",
        "createdAt" : "2018-06-07T19:52:45Z",
        "updatedAt" : "2018-06-07T20:58:29Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4234cd9d3e9e875cdef71b151739106cb1a2be6d",
    "line" : 162,
    "diffHunk" : "@@ -1,1 +645,649 @@    if (_semanticFormatterCallback == value)\n      return;\n    _semanticFormatterCallback = value;\n    markNeedsSemanticsUpdate();\n  }"
  },
  {
    "id" : "87f7714c-ed7c-430a-99eb-8b27f4985548",
    "prId" : 30390,
    "prUrl" : "https://github.com/flutter/flutter/pull/30390#pullrequestreview-228419208",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a277bfb2-165a-4386-b938-2f3760b0205f",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This is OK, since it's straightforward, although it's a bit of a monster. If we added a SliderTheme.merge() method that only changed null properties, then what's going on it might be a little clearer:\r\n```\r\nfinal SliderThemeData sliderTheme = SliderTheme.of(\r\n  // Non-null widget properties override SliderTheme values.\r\n  .copyWith(\r\n    activeTrackColor: widget.activeColor,\r\n    inactiveTrackColor: widget.inactiveColor,\r\n    activeTickMarkColor: widget.inactiveColor,\r\n    inactiveTickMarkColor: widget.activeColor,\r\n    thumbColor: widget.activeColor,\r\n    overlayColor: widget.activeColor?.withOpacity(0.12),\r\n    valueIndicatorColor: widget.activeColor)\r\n  // Default all of the remaining null SliderTheme properties.\r\n  .merge(\r\n    activeTrackColor: theme.colorScheme.primary,\r\n    inactiveTrackColor: theme.colorScheme.primary.withOpacity(0.24),\r\n    disabledActiveTrackColor: theme.colorScheme.onSurface.withOpacity(0.32),\r\n    disabledInactiveTrackColor: theme.colorScheme.onSurface.withOpacity(0.12),\r\n    activeTickMarkColor: theme.colorScheme.onPrimary.withOpacity(0.54),\r\n    inactiveTickMarkColor: theme.colorScheme.primary.withOpacity(0.54),\r\n    disabledActiveTickMarkColor: theme.colorScheme.onPrimary.withOpacity(0.12),\r\n    disabledInactiveTickMarkColor: theme.colorScheme.onSurface.withOpacity(0.12),\r\n    thumbColor: theme.colorScheme.primary,\r\n    disabledThumbColor: theme.colorScheme.onSurface.withOpacity(0.38),\r\n    overlayColor: theme.colorScheme.primary.withOpacity(0.12),\r\n    valueIndicatorColor: theme.colorScheme.primary,\r\n    trackShape: _defaultTrackShape,\r\n    tickMarkShape: _defaultTickMarkShape,\r\n    thumbShape: _defaultThumbShape,\r\n    overlayShape: _defaultOverlayShape,\r\n    valueIndicatorShape: _defaultValueIndicatorShape,\r\n    showValueIndicator:_defaultShowValueIndicator,\r\n    valueIndicatorTextStyle: theme.textTheme.body2.copyWith(color: theme.colorScheme.onPrimary),\r\n  );\r\n)\r\n```",
        "createdAt" : "2019-04-10T17:09:17Z",
        "updatedAt" : "2019-04-18T19:35:27Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "6af30be1-0cf8-4cf9-9e35-b3ffa5851349",
        "parentId" : "a277bfb2-165a-4386-b938-2f3760b0205f",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "After some experimentation, I do not think the .merge method needed would be similar enough to the merge on TextTheme and TextStyle, so it might be confusing to have .merge methods in different objects that behave differently.",
        "createdAt" : "2019-04-16T18:30:27Z",
        "updatedAt" : "2019-04-18T19:35:27Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "9eea98d5-95db-45e6-9a6c-3ae1c5033af5",
        "parentId" : "a277bfb2-165a-4386-b938-2f3760b0205f",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I agree that we haven't established a consistent meaning for \"merge\" methods and adding one here that works like ListTileTheme.merge but not like TextStyle.merge or Border.merge will not help matters. \r\n\r\nWe can solve the general problem and then update this monster in a separate PR.",
        "createdAt" : "2019-04-18T17:44:18Z",
        "updatedAt" : "2019-04-18T19:35:27Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "136a92a073dfcbcc6680bb555e636ba5f6d82cea",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +451,455 @@    // the default shapes and text styles are aligned to the Material\n    // Guidelines.\n    sliderTheme = sliderTheme.copyWith(\n      trackHeight: sliderTheme.trackHeight ?? _defaultTrackHeight,\n      activeTrackColor: widget.activeColor ?? sliderTheme.activeTrackColor ?? theme.colorScheme.primary,"
  },
  {
    "id" : "bb967155-820d-4cfa-a83b-1982a97c8b3b",
    "prId" : 30572,
    "prUrl" : "https://github.com/flutter/flutter/pull/30572#pullrequestreview-223501923",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f899177-8590-4736-aebe-5d7932b52268",
        "parentId" : null,
        "authorId" : "209f805a-621a-40dd-b493-fb897c4b0bcb",
        "body" : "Are we guaranteed a Theme if it's a CupertinoApp?",
        "createdAt" : "2019-04-05T20:24:43Z",
        "updatedAt" : "2019-04-24T18:33:13Z",
        "lastEditedBy" : "209f805a-621a-40dd-b493-fb897c4b0bcb",
        "tags" : [
        ]
      },
      {
        "id" : "f5ed3f0c-aa19-49e8-a8fd-995d425cdfd6",
        "parentId" : "4f899177-8590-4736-aebe-5d7932b52268",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Yes Theme.of always returns a fallback theme at the least",
        "createdAt" : "2019-04-05T22:30:04Z",
        "updatedAt" : "2019-04-24T18:33:13Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "87046856b2d7a0de6890fdd10f035cbb6e6a6904",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +488,492 @@\n      case _SliderType.adaptive: {\n        final ThemeData theme = Theme.of(context);\n        assert(theme.platform != null);\n        switch (theme.platform) {"
  },
  {
    "id" : "5ac8ee95-eb87-4952-9337-2c535da5801c",
    "prId" : 30572,
    "prUrl" : "https://github.com/flutter/flutter/pull/30572#pullrequestreview-224024338",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "649ed96b-94bc-4e7a-8d10-51e01d3d8526",
        "parentId" : null,
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "We may want to document these assertions in the constructor documentation.",
        "createdAt" : "2019-04-08T13:50:16Z",
        "updatedAt" : "2019-04-24T18:33:13Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      },
      {
        "id" : "8a5584ed-1a47-400a-b173-0c552649a5d1",
        "parentId" : "649ed96b-94bc-4e7a-8d10-51e01d3d8526",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "These changes are based off switch.dart, which does not document the assertions in the ctor docs. If they are supposed to be there, I can make a bug to add docs to both classes.",
        "createdAt" : "2019-04-08T18:49:36Z",
        "updatedAt" : "2019-04-24T18:33:13Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "87046856b2d7a0de6890fdd10f035cbb6e6a6904",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +126,130 @@    this.semanticFormatterCallback,\n  }) : _sliderType = _SliderType.material,\n       assert(value != null),\n       assert(min != null),\n       assert(max != null),"
  },
  {
    "id" : "ece093f6-7b33-450a-8164-d9513f0e6d1c",
    "prId" : 30572,
    "prUrl" : "https://github.com/flutter/flutter/pull/30572#pullrequestreview-224024387",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93adde4c-b048-4cfb-8371-69c52347f94b",
        "parentId" : null,
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "We may want to document these assertions in the constructor documentation.",
        "createdAt" : "2019-04-08T13:50:29Z",
        "updatedAt" : "2019-04-24T18:33:13Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      },
      {
        "id" : "062139b5-9ccf-4734-94a7-cfa04215c096",
        "parentId" : "93adde4c-b048-4cfb-8371-69c52347f94b",
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "see comment above",
        "createdAt" : "2019-04-08T18:49:41Z",
        "updatedAt" : "2019-04-24T18:33:13Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      }
    ],
    "commit" : "87046856b2d7a0de6890fdd10f035cbb6e6a6904",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +155,159 @@    this.semanticFormatterCallback,\n  }) : _sliderType = _SliderType.adaptive,\n       assert(value != null),\n       assert(min != null),\n       assert(max != null),"
  },
  {
    "id" : "8985f955-d81b-484a-9195-c9a5ff982a6c",
    "prId" : 38930,
    "prUrl" : "https://github.com/flutter/flutter/pull/38930#pullrequestreview-288939378",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db8f9a5c-e0d2-459e-abd0-767e6a6e50f7",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Will _updateLabelPainter not automatically cause this to happen?",
        "createdAt" : "2019-09-16T22:57:29Z",
        "updatedAt" : "2019-09-24T16:42:06Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "75e1926c01e4512e6b3a7a81ca90c92ccd87cbae",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +921,925 @@  void systemFontsDidChange() {\n    super.systemFontsDidChange();\n    _labelPainter.markNeedsLayout();\n    _updateLabelPainter();\n  }"
  },
  {
    "id" : "bc2373cf-b892-4665-823c-22f18c1b57b6",
    "prId" : 39632,
    "prUrl" : "https://github.com/flutter/flutter/pull/39632#pullrequestreview-285188534",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ea85acf-3b9e-438d-9cf8-2e5e9d4c4e44",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Nice use of ObjectFlagProperty.has. I didn't know we has that :-)",
        "createdAt" : "2019-09-06T22:49:57Z",
        "updatedAt" : "2019-09-09T21:25:02Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "4becddc3-92cb-4ee3-b387-4d1e9f94717b",
        "parentId" : "7ea85acf-3b9e-438d-9cf8-2e5e9d4c4e44",
        "authorId" : "46d9aa3c-ab04-4b79-8ef4-b1cd14c97951",
        "body" : "Credit goes to @johnsonmh on that one!",
        "createdAt" : "2019-09-07T21:29:30Z",
        "updatedAt" : "2019-09-09T21:25:02Z",
        "lastEditedBy" : "46d9aa3c-ab04-4b79-8ef4-b1cd14c97951",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b255595db6b0755271c3f89442af0db96d00cba",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +384,388 @@    properties.add(ObjectFlagProperty<ValueChanged<double>>('onChanged', onChanged, ifNull: 'disabled'));\n    properties.add(ObjectFlagProperty<ValueChanged<double>>.has('onChangeStart', onChangeStart));\n    properties.add(ObjectFlagProperty<ValueChanged<double>>.has('onChangeEnd', onChangeEnd));\n    properties.add(DoubleProperty('min', min));\n    properties.add(DoubleProperty('max', max));"
  },
  {
    "id" : "accfc254-bd19-44b6-b52e-82fabe4944c6",
    "prId" : 52663,
    "prUrl" : "https://github.com/flutter/flutter/pull/52663#pullrequestreview-377168964",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "299851ac-3ed0-4a31-8f2a-b9bb498c9100",
        "parentId" : null,
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "I think the RangeSlider had one extra listener being added/removed. I think this is right, but the RangeSlider had pone to many",
        "createdAt" : "2020-03-18T02:12:00Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "b9b06d36-a2cf-4da4-bddd-0a37a0cfcb06",
        "parentId" : "299851ac-3ed0-4a31-8f2a-b9bb498c9100",
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "I don't understand completely ",
        "createdAt" : "2020-03-18T18:13:12Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      },
      {
        "id" : "28a1c4d1-e6de-4709-b0fb-56857c2e3cc9",
        "parentId" : "299851ac-3ed0-4a31-8f2a-b9bb498c9100",
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "I am not creating the value indicator animation from the other render box. That way it doesn't have to get passed through.\r\n\r\n",
        "createdAt" : "2020-03-18T19:24:28Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8f09d5eb91f7616633af2f20a8c3730808bed4a",
    "line" : 508,
    "diffHunk" : "@@ -1,1 +1363,1367 @@    super.attach(owner);\n    _valueIndicatorAnimation.addListener(markNeedsPaint);\n    _state.positionController.addListener(markNeedsPaint);\n  }\n"
  },
  {
    "id" : "5f927696-4bfc-4beb-b5d0-70785833fc48",
    "prId" : 52663,
    "prUrl" : "https://github.com/flutter/flutter/pull/52663#pullrequestreview-383207477",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7da8db3b-7af9-46ce-a513-75aa60357a93",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Same comments about this flag as for RangeSlider.",
        "createdAt" : "2020-03-25T01:00:02Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "c72ab0ff-4976-49ec-8812-7f1ee228ac64",
        "parentId" : "7da8db3b-7af9-46ce-a513-75aa60357a93",
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "Done",
        "createdAt" : "2020-03-25T18:14:11Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      },
      {
        "id" : "b7f181d9-c964-40fe-bc34-78643e4120e2",
        "parentId" : "7da8db3b-7af9-46ce-a513-75aa60357a93",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The first sentence in API doc should be separated from the rest by a blank line.\r\nhttps://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#dartdoc-specific-requirements",
        "createdAt" : "2020-03-27T21:32:09Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8f09d5eb91f7616633af2f20a8c3730808bed4a",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +384,388 @@  final SemanticFormatterCallback semanticFormatterCallback;\n\n  /// Whether to use the updated Material spec version of the [Slider].\n  /// * The v2 Slider has an updated value indicator that matches the latest specs.\n  /// * The value indicator is painted on the Overlay."
  },
  {
    "id" : "39e687fc-b1b5-42fc-8fe6-a03296ebc2e1",
    "prId" : 52663,
    "prUrl" : "https://github.com/flutter/flutter/pull/52663#pullrequestreview-381414931",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d12d0f33-160f-42c0-b236-3f0921e58a2d",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "value indicator => value indicator color",
        "createdAt" : "2020-03-25T01:01:54Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "76f24a42-fd10-4cc2-9b91-e49126e84deb",
        "parentId" : "d12d0f33-160f-42c0-b236-3f0921e58a2d",
        "authorId" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "body" : "Done",
        "createdAt" : "2020-03-25T18:15:34Z",
        "updatedAt" : "2020-03-31T16:43:24Z",
        "lastEditedBy" : "4ed78972-f3f9-46a6-ab99-8916ecbb4618",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8f09d5eb91f7616633af2f20a8c3730808bed4a",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +556,560 @@    // (which can be defined by activeColor) if the\n    // RectangularSliderValueIndicatorShape is used. In all other cases, the\n    // value indicator is assumed to be the same as the active color.\n    final SliderComponentShape valueIndicatorShape = sliderTheme.valueIndicatorShape ?? _defaultValueIndicatorShape;\n    Color valueIndicatorColor;"
  }
]