[
  {
    "id" : "249671eb-1304-47a7-a897-45885b066cd8",
    "prId" : 11067,
    "prUrl" : "https://github.com/flutter/flutter/pull/11067#pullrequestreview-47536575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d76bc392-e673-4532-ba11-af54b00b15e9",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "This works?  That's cute.",
        "createdAt" : "2017-07-01T05:02:44Z",
        "updatedAt" : "2017-07-01T20:44:24Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "e5aeac91-54d7-4d2e-9444-119064297f0b",
        "parentId" : "d76bc392-e673-4532-ba11-af54b00b15e9",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It's using three tricks at once: a private constructor makes the class unconstructable, a factory makes the private constructor not interfere with subclasses that mix this in, and the factory returning null is the shortest valid way of returning something that is type-correct. I added this to all the mixins at some point recently. (I didn't come up with the pattern, it was suggested to me in a discussion on some Dart SDK issue.)",
        "createdAt" : "2017-07-01T20:32:46Z",
        "updatedAt" : "2017-07-01T20:44:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "328807ef06a3cadf289dfc059e7b154c3a698ffe",
    "line" : 301,
    "diffHunk" : "@@ -1,1 +299,303 @@  // This class is intended to be used as a mixin, and should not be\n  // extended directly.\n  factory AutomaticKeepAliveClientMixin._() => null;\n\n  KeepAliveHandle _keepAliveHandle;"
  }
]