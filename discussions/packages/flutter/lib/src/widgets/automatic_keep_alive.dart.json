[
  {
    "id" : "249671eb-1304-47a7-a897-45885b066cd8",
    "prId" : 11067,
    "prUrl" : "https://github.com/flutter/flutter/pull/11067#pullrequestreview-47536575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d76bc392-e673-4532-ba11-af54b00b15e9",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "This works?  That's cute.",
        "createdAt" : "2017-07-01T05:02:44Z",
        "updatedAt" : "2017-07-01T20:44:24Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "e5aeac91-54d7-4d2e-9444-119064297f0b",
        "parentId" : "d76bc392-e673-4532-ba11-af54b00b15e9",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It's using three tricks at once: a private constructor makes the class unconstructable, a factory makes the private constructor not interfere with subclasses that mix this in, and the factory returning null is the shortest valid way of returning something that is type-correct. I added this to all the mixins at some point recently. (I didn't come up with the pattern, it was suggested to me in a discussion on some Dart SDK issue.)",
        "createdAt" : "2017-07-01T20:32:46Z",
        "updatedAt" : "2017-07-01T20:44:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "328807ef06a3cadf289dfc059e7b154c3a698ffe",
    "line" : 301,
    "diffHunk" : "@@ -1,1 +299,303 @@  // This class is intended to be used as a mixin, and should not be\n  // extended directly.\n  factory AutomaticKeepAliveClientMixin._() => null;\n\n  KeepAliveHandle _keepAliveHandle;"
  },
  {
    "id" : "0a628ffe-e4c6-4f37-970a-f795ddf75f69",
    "prId" : 49159,
    "prUrl" : "https://github.com/flutter/flutter/pull/49159#pullrequestreview-346392908",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09791631-0322-49e3-a553-e5eb4b15a0c1",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this should actually be a newline (see docs for `FlutterError` constructor)",
        "createdAt" : "2020-01-22T06:10:38Z",
        "updatedAt" : "2020-01-22T06:10:39Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "5e3b1031-355d-4253-9b0a-1cc59b16adcd",
        "parentId" : "09791631-0322-49e3-a553-e5eb4b15a0c1",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "Addressed in #49280",
        "createdAt" : "2020-01-22T07:47:11Z",
        "updatedAt" : "2020-01-22T07:47:11Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      }
    ],
    "commit" : "88d62276ed4da692492522950752a44f13fd4695",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +146,150 @@        if (!mounted) {\n          throw FlutterError(\n            'AutomaticKeepAlive handle triggered after AutomaticKeepAlive was disposed. '\n            'Widgets should always trigger their KeepAliveNotification handle when they are '\n            'deactivated, so that they (or their handle) do not send spurious events later '"
  }
]