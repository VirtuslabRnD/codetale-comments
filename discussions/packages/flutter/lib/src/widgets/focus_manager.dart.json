[
  {
    "id" : "7eb19559-a5ab-48df-bd76-8bc43f517b16",
    "prId" : 28169,
    "prUrl" : "https://github.com/flutter/flutter/pull/28169#pullrequestreview-212378750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91dba991-0dab-462a-ba36-301043497f5f",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Doesn't setFirstFocus() already call detach?\r\n\r\nI can't say I completely understand this, however setFirstFocus() seems to DTRT?\r\n",
        "createdAt" : "2019-02-20T17:58:33Z",
        "updatedAt" : "2019-02-21T05:00:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "c47a8aba-bb3d-4918-88d5-ad8d312d6ad0",
        "parentId" : "91dba991-0dab-462a-ba36-301043497f5f",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "It does, but it has an assert before the detach that forces the child to either not have a parent, or to have the current node as a parent, so it fires the assert if the child is currently the child of another node.\r\n\r\nMaybe the assert is wrong? I've modified things to remove the assert instead of doing the detach here.",
        "createdAt" : "2019-02-20T20:33:35Z",
        "updatedAt" : "2019-02-21T05:01:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "f080897b-3b83-4a50-8cc7-ef38f9b5ef67",
        "parentId" : "91dba991-0dab-462a-ba36-301043497f5f",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I think we talked about that. Sounds good.",
        "createdAt" : "2019-03-08T17:01:04Z",
        "updatedAt" : "2019-03-08T17:05:08Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8484272a6f71c255cf65e24ef3f96cbf7872ef5",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +351,355 @@    if (child._parent == null || child._parent == this)\n      return;\n    if (child.isFirstFocus) {\n      setFirstFocus(child);\n    } else {"
  },
  {
    "id" : "f09e06f5-e9b6-4cd6-b69c-0567fbb3b0f4",
    "prId" : 30040,
    "prUrl" : "https://github.com/flutter/flutter/pull/30040#pullrequestreview-219765765",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db5cbfcc-4393-44a6-adf5-14e558618802",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "per our discussion, would be good to put a book about focus here",
        "createdAt" : "2019-03-27T19:54:16Z",
        "updatedAt" : "2019-04-22T15:41:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "2a79fbff-48cc-41d6-a9c1-ece1ee726375",
        "parentId" : "db5cbfcc-4393-44a6-adf5-14e558618802",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yeah, already well on my way.",
        "createdAt" : "2019-03-27T23:21:37Z",
        "updatedAt" : "2019-04-22T15:41:13Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b22cd54f96244b8038b11c98b3179bf2387fab21",
    "line" : 326,
    "diffHunk" : "@@ -1,1 +302,306 @@///   * [FocusManager], a singleton that manages the focus and distributes key\n///     events to focused nodes.\nclass FocusNode with DiagnosticableTreeMixin, ChangeNotifier {\n  /// Creates a focus node.\n  ///"
  },
  {
    "id" : "91a77f3e-c4da-4ba0-9373-2d5a629d2452",
    "prId" : 30040,
    "prUrl" : "https://github.com/flutter/flutter/pull/30040#pullrequestreview-220729625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14a354d8-6531-4688-9148-25b534f4c2aa",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Only because I like List.map:\r\n```\r\nint count = 1;\r\nreturn _children.map<DiagnosticsNode>(\r\n  (FocusNode child) => child.toDiagnosticsNode(name: 'child ${count++}')\r\n).toList();\r\n````\r\n",
        "createdAt" : "2019-03-28T19:04:48Z",
        "updatedAt" : "2019-04-22T15:41:13Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "f90938c3-2f54-4b68-9337-93bd54bdfc82",
        "parentId" : "14a354d8-6531-4688-9148-25b534f4c2aa",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Lovely.  Done.",
        "createdAt" : "2019-03-29T23:51:16Z",
        "updatedAt" : "2019-04-22T15:41:13Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b22cd54f96244b8038b11c98b3179bf2387fab21",
    "line" : 757,
    "diffHunk" : "@@ -1,1 +712,716 @@\n  @override\n  List<DiagnosticsNode> debugDescribeChildren() {\n    int count = 1;\n    return _children.map<DiagnosticsNode>((FocusNode child) {"
  },
  {
    "id" : "1c830fb2-b67b-477f-807c-c9aea3aec141",
    "prId" : 30040,
    "prUrl" : "https://github.com/flutter/flutter/pull/30040#pullrequestreview-220210268",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7030958e-eed1-4d4a-a7a9-65baf2d2fe91",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2019-03-28T19:54:27Z",
        "updatedAt" : "2019-04-22T15:41:13Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "b22cd54f96244b8038b11c98b3179bf2387fab21",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +120,124 @@/// then removed, the previous node receives focus again.\n///\n/// The focus node hierarchy can be traversed using the [parent], [children],\n/// [ancestors] and [descendants] accessors.\n///"
  },
  {
    "id" : "d97cb6fc-2bd2-4519-a62f-8bc9e6f7eab7",
    "prId" : 30040,
    "prUrl" : "https://github.com/flutter/flutter/pull/30040#pullrequestreview-220729625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "689fc3c8-78e7-49f9-81e3-77aa99849b3c",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The conventional format for properties define this way has the field next:\r\n```\r\nString get debugLabel => _debugLabel;\r\nString _debugLabel;\r\nset debugLabel(String value)...\r\n```\r\n\r\nThe rendering classes slavishly adhere to this.",
        "createdAt" : "2019-03-28T22:10:31Z",
        "updatedAt" : "2019-04-22T15:41:13Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "9330d649-aa23-49dc-870f-6dfb614f7b61",
        "parentId" : "689fc3c8-78e7-49f9-81e3-77aa99849b3c",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "OK, done.",
        "createdAt" : "2019-03-29T22:28:25Z",
        "updatedAt" : "2019-04-22T15:41:13Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b22cd54f96244b8038b11c98b3179bf2387fab21",
    "line" : 376,
    "diffHunk" : "@@ -1,1 +346,350 @@  ///\n  /// Will always return null in release builds.\n  String get debugLabel => _debugLabel;\n  String _debugLabel;\n  set debugLabel(String value) {"
  },
  {
    "id" : "04c74b16-5c07-4149-bf16-fd560450689b",
    "prId" : 30040,
    "prUrl" : "https://github.com/flutter/flutter/pull/30040#pullrequestreview-220729625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f279e5c-e908-4edd-97e9-7e83c67abb01",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Should this be \r\n```\r\nif  (scope._focusedChildren.remove(this))\r\n  _manager.willUnfocusNode(this);\r\n```",
        "createdAt" : "2019-03-28T22:29:15Z",
        "updatedAt" : "2019-04-22T15:41:13Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "2a13c040-aa6c-4ff2-b0d2-2ed55a5e9c42",
        "parentId" : "8f279e5c-e908-4edd-97e9-7e83c67abb01",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "No, that won't work.  It's possible to call this before the request has been acted upon, which would be before the `_focusedChildren` are updated (which happens when the primary focus is notified that it has the focus), meaning that it wouldn't get canceled even though it should have been.",
        "createdAt" : "2019-03-29T22:56:18Z",
        "updatedAt" : "2019-04-22T15:41:13Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b22cd54f96244b8038b11c98b3179bf2387fab21",
    "line" : 534,
    "diffHunk" : "@@ -1,1 +500,504 @@      return;\n    }\n    scope._focusedChildren.remove(this);\n    _manager?._willUnfocusNode(this);\n  }"
  },
  {
    "id" : "42bd03e8-4dc3-4942-83bd-65e9fea6a136",
    "prId" : 30040,
    "prUrl" : "https://github.com/flutter/flutter/pull/30040#pullrequestreview-220729625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d24f1013-d97f-423c-80f4-fc5cb9e032c2",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Shouldn't there be an \"if needed\" short-circuit check here?\r\n\r\nThe short circuit does happen a few lines down, `if (child._parent == this)`; just expected to see a parent/context compare and return here.",
        "createdAt" : "2019-03-28T22:49:50Z",
        "updatedAt" : "2019-04-22T15:41:13Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "d46eb17a-4393-4be2-826b-1ef617fd46b6",
        "parentId" : "d24f1013-d97f-423c-80f4-fc5cb9e032c2",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Moved the short circuit up.",
        "createdAt" : "2019-03-29T23:19:30Z",
        "updatedAt" : "2019-04-22T15:41:13Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b22cd54f96244b8038b11c98b3179bf2387fab21",
    "line" : 605,
    "diffHunk" : "@@ -1,1 +570,574 @@  void _reparent(FocusNode child) {\n    assert(child != null);\n    assert(child != this, 'Tried to make a child into a parent of itself.');\n    if (child._parent == this) {\n      assert(_children.contains(child), \"Found a node that says it's a child, but doesn't appear in the child list.\");"
  },
  {
    "id" : "659cc6f9-5d49-4050-8523-bc189e03d194",
    "prId" : 30040,
    "prUrl" : "https://github.com/flutter/flutter/pull/30040#pullrequestreview-220729625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef899254-8807-47a8-b3cd-e5ae85851184",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It would be useful to add a test that verifies that debugFillProperties works. Like the one in test/material/dialog_theme_test.dart",
        "createdAt" : "2019-03-29T00:12:00Z",
        "updatedAt" : "2019-04-22T15:41:13Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "aeec7209-d5cf-4375-bd8e-76e6a8582def",
        "parentId" : "ef899254-8807-47a8-b3cd-e5ae85851184",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done, for both `FocusNode` and `FocusScopeNode`.",
        "createdAt" : "2019-03-29T23:42:58Z",
        "updatedAt" : "2019-04-22T15:41:13Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b22cd54f96244b8038b11c98b3179bf2387fab21",
    "line" : 749,
    "diffHunk" : "@@ -1,1 +704,708 @@\n  @override\n  void debugFillProperties(DiagnosticPropertiesBuilder properties) {\n    super.debugFillProperties(properties);\n    properties.add(DiagnosticsProperty<BuildContext>('context', context, defaultValue: null));"
  },
  {
    "id" : "2d1bccce-efe2-4aaa-9fad-f3e7100dcf6c",
    "prId" : 30040,
    "prUrl" : "https://github.com/flutter/flutter/pull/30040#pullrequestreview-221399679",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b29dcaf1-0dc5-4694-9ac8-90ba8d210e0c",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "There should be a test for this.",
        "createdAt" : "2019-04-01T23:49:53Z",
        "updatedAt" : "2019-04-22T15:41:13Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "401d8429-f2ed-430d-9edf-a03051bda735",
        "parentId" : "b29dcaf1-0dc5-4694-9ac8-90ba8d210e0c",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Added.",
        "createdAt" : "2019-04-02T00:28:33Z",
        "updatedAt" : "2019-04-22T15:41:13Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b22cd54f96244b8038b11c98b3179bf2387fab21",
    "line" : 1353,
    "diffHunk" : "@@ -1,1 +1045,1049 @@///\n/// Will return an empty string in release builds.\nString debugDescribeFocusTree() {\n  assert(WidgetsBinding.instance != null);\n  String result;"
  },
  {
    "id" : "cfdb8164-3fa1-42a4-a90a-ba84e6bbe26a",
    "prId" : 30040,
    "prUrl" : "https://github.com/flutter/flutter/pull/30040#pullrequestreview-226765465",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4ce2838-1040-43f6-a4bd-5e1e78865fec",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "how useful is it to pass the node?",
        "createdAt" : "2019-04-12T23:32:16Z",
        "updatedAt" : "2019-04-22T15:41:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "727bff3d-e20d-4a68-a777-a12342265e2c",
        "parentId" : "a4ce2838-1040-43f6-a4bd-5e1e78865fec",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Pretty useful.  Otherwise you can't use the same callback for multiple `onKey` handlers, because you won't know which one sent you the event. Also, there is useful information in the node (like whether or not it's the primary focus, the bounds of the widget it's attached to, and the context it resides in) that could be useful things to look at in the handler.",
        "createdAt" : "2019-04-15T17:00:57Z",
        "updatedAt" : "2019-04-22T15:41:13Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b22cd54f96244b8038b11c98b3179bf2387fab21",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +18,22 @@///\n/// The [node] is the node that received the event.\ntypedef FocusOnKeyCallback = bool Function(FocusNode node, RawKeyEvent event);\n\n/// An attachment point for a [FocusNode]."
  },
  {
    "id" : "a256e55b-87d5-4cf9-b401-4138d5daa79e",
    "prId" : 30076,
    "prUrl" : "https://github.com/flutter/flutter/pull/30076#pullrequestreview-231942403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a620722c-c8f5-44b0-8e37-0f05b8f9ebb8",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "We use \"traversal\" a lot, without really saying what's meant.  It might be helpful to define what we mean by focus traversal here.",
        "createdAt" : "2019-04-26T22:48:19Z",
        "updatedAt" : "2019-05-10T03:17:35Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "0795e9b4-29e9-4acd-aba9-cd636ab37667",
        "parentId" : "a620722c-c8f5-44b0-8e37-0f05b8f9ebb8",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done.",
        "createdAt" : "2019-04-29T23:08:04Z",
        "updatedAt" : "2019-05-10T03:17:35Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "61e3255f29b8160319c23b5720121c3743d1149a",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +194,198 @@///\n/// ## Focus Traversal\n///\n/// The term _traversal_, sometimes called _tab traversal_, refers to moving the\n/// focus from one widget to the next in a particular order (also sometimes"
  },
  {
    "id" : "b41049bc-71be-49c3-96ff-a2b7eff69dc6",
    "prId" : 35913,
    "prUrl" : "https://github.com/flutter/flutter/pull/35913#pullrequestreview-260376950",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e50c331e-477d-43a5-b245-9a4727050624",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Just curious, why was this originally in a `setState()`?",
        "createdAt" : "2019-07-10T21:46:00Z",
        "updatedAt" : "2019-07-10T21:46:23Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "213de194-a147-432a-8cbc-67d52a3eb279",
        "parentId" : "e50c331e-477d-43a5-b245-9a4727050624",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Because it was changing the state, so in order for the component to be rebuilt (since it wasn't listening to focus changes), it needed the `setState`. Now that it's listening for changes, it doesn't need it.\r\n\r\nHowever, most likely the tree would have been rebuilt even without the `setState`, because there's probably a `Focus` widget in the tree above this that would cause the tree to be rebuilt when its focus changed anyhow.",
        "createdAt" : "2019-07-10T21:52:48Z",
        "updatedAt" : "2019-07-10T21:52:48Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4960801f5f68a16e02371c6858dd39b575e1917",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +297,301 @@///       onTap: () {\n///         if (_focused) {\n///             _node.unfocus();\n///         } else {\n///            _node.requestFocus();"
  }
]