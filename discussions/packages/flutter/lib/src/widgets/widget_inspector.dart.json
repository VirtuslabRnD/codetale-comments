[
  {
    "id" : "50cef108-857a-47ef-99cc-feedb6c47fbf",
    "prId" : 10332,
    "prUrl" : "https://github.com/flutter/flutter/pull/10332#pullrequestreview-56493779",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "205fc72e-0065-45d4-bfbb-82c6d6cb25c5",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "How should we make this tool accessible?",
        "createdAt" : "2017-08-09T21:33:46Z",
        "updatedAt" : "2017-08-18T21:27:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "bc270218-9658-4a0e-9a43-a16f6f716e71",
        "parentId" : "205fc72e-0065-45d4-bfbb-82c6d6cb25c5",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "If we wanted to make it accessible, we should add inspector functionality to the semantics debugger itself as the semantics debugger actually makes it in some ways easier to select widgets as all objects have unique bounding boxes, etc.",
        "createdAt" : "2017-08-10T00:18:52Z",
        "updatedAt" : "2017-08-18T21:27:06Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "eb92616a-845c-48a8-9909-35e6ca28b136",
        "parentId" : "205fc72e-0065-45d4-bfbb-82c6d6cb25c5",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Ironically, the semantics debugger isn't accessible either.",
        "createdAt" : "2017-08-10T00:19:45Z",
        "updatedAt" : "2017-08-18T21:27:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "64f50300-f2a8-4859-b1f0-4f4552c8613f",
        "parentId" : "205fc72e-0065-45d4-bfbb-82c6d6cb25c5",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Are there really any existing widget inspecting tools that are accessible? Seems like a very difficult problem to solve.",
        "createdAt" : "2017-08-13T00:43:10Z",
        "updatedAt" : "2017-08-18T21:27:06Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "5b19c82d-8dee-44a0-860c-5d32fcf3a211",
        "parentId" : "205fc72e-0065-45d4-bfbb-82c6d6cb25c5",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I don't know. Solving difficult problems is what we do, though. :-)",
        "createdAt" : "2017-08-15T22:28:02Z",
        "updatedAt" : "2017-08-18T21:27:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "433ec57b-4159-4054-8914-6af7d4d56b01",
        "parentId" : "205fc72e-0065-45d4-bfbb-82c6d6cb25c5",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "you aren't suggesting we actually do anything about accessibility for the inspector in this pull request, correct?",
        "createdAt" : "2017-08-15T22:44:29Z",
        "updatedAt" : "2017-08-18T21:27:06Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "4495589e-7730-4b95-9740-8d321981811b",
        "parentId" : "205fc72e-0065-45d4-bfbb-82c6d6cb25c5",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Correct. I don't even know what it would really be. Please do file a bug with the a11y labels and projects so we can track it, though.",
        "createdAt" : "2017-08-15T23:00:51Z",
        "updatedAt" : "2017-08-18T21:27:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b672c00d91c0ee6d5bb1bce60eb8dfd36a5f217f",
    "line" : 226,
    "diffHunk" : "@@ -1,1 +224,228 @@      onPanUpdate: _handlePanUpdate,\n      behavior: HitTestBehavior.opaque,\n      excludeFromSemantics: true,\n      child: new IgnorePointer(\n        ignoring: isSelectMode,"
  },
  {
    "id" : "768de0b6-8ec7-4038-819d-b5355068e142",
    "prId" : 10332,
    "prUrl" : "https://github.com/flutter/flutter/pull/10332#pullrequestreview-57316150",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30b19c26-48a6-45e0-b5d5-c46cdc07da85",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you need to export this file from ../widgets.dart",
        "createdAt" : "2017-08-18T20:01:42Z",
        "updatedAt" : "2017-08-18T21:27:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "0a70a40d-e694-4d10-9bbc-bbbfa4d41dc9",
        "parentId" : "30b19c26-48a6-45e0-b5d5-c46cdc07da85",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Donedone",
        "createdAt" : "2017-08-18T21:25:35Z",
        "updatedAt" : "2017-08-18T21:27:06Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "b672c00d91c0ee6d5bb1bce60eb8dfd36a5f217f",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file."
  },
  {
    "id" : "42835a80-1477-4e90-bfc7-7e9abc7dd223",
    "prId" : 11806,
    "prUrl" : "https://github.com/flutter/flutter/pull/11806#pullrequestreview-59098702",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04a04352-7166-4b28-9441-31c975f4d4ac",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "of course, the other fix for this issue would be to just continue if children[i]  == null as clearly a null DiagnosticsNode child doesn't need to be hit tested against. ",
        "createdAt" : "2017-08-28T23:44:38Z",
        "updatedAt" : "2017-08-29T00:49:30Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e7802a533e93ba6ee50fde31c35b2d72c307422",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +102,106 @@    for (int i = children.length - 1; i >= 0; i -= 1) {\n      final DiagnosticsNode diagnostics = children[i];\n      assert(diagnostics != null);\n      if (diagnostics.style == DiagnosticsTreeStyle.offstage ||\n          diagnostics.value is! RenderObject)"
  },
  {
    "id" : "7a560a21-6913-453f-9f79-272a08a2bad7",
    "prId" : 11888,
    "prUrl" : "https://github.com/flutter/flutter/pull/11888#pullrequestreview-60255000",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9fa3f8a-4091-413a-b9b2-ae0a63440042",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Maybe add a TODO about localization?",
        "createdAt" : "2017-09-01T04:33:54Z",
        "updatedAt" : "2017-09-07T23:29:30Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "0ba6e469-a619-4081-a664-5e683dc6f354",
        "parentId" : "d9fa3f8a-4091-413a-b9b2-ae0a63440042",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I don't think we'll ever localize the debug strings.",
        "createdAt" : "2017-09-01T22:37:14Z",
        "updatedAt" : "2017-09-07T23:29:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e327e2bc2a495503f14ea998f046626aee33ec5b",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +450,454 @@      selected: new _TransformedRect(selected),\n      tooltip: selected.toString(),\n      textDirection: TextDirection.ltr,\n      candidates: candidates,\n    );"
  },
  {
    "id" : "8f9ce67d-1bb0-4f20-b2ab-519557baa5de",
    "prId" : 14056,
    "prUrl" : "https://github.com/flutter/flutter/pull/14056#pullrequestreview-88314022",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da94f4ba-726e-4d3d-9be6-9f1446f931e4",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "This is the most reasonable method to make public once we are a bit more confident in the creation locations and want to expose them to other tools.",
        "createdAt" : "2018-01-11T21:35:38Z",
        "updatedAt" : "2018-02-02T18:55:31Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c11928407dc443fbe4be94736e664bc26e60c67",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +1131,1135 @@///\n/// Currently creation locations are only available for [Widget] and [Element]\n_Location _getCreationLocation(Object object) {\n  final Object candidate =  object is Element ? object.widget : object;\n  return candidate is _HasCreationLocation ? candidate._location : null;"
  },
  {
    "id" : "0813cd7b-9904-4826-9cd3-15e2dc31d06c",
    "prId" : 14056,
    "prUrl" : "https://github.com/flutter/flutter/pull/14056#pullrequestreview-88314228",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "198fc9a3-b532-440a-9d76-66352c14ffce",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "This location class would be made public if we choose to expose the source location API to user level Flutter code.",
        "createdAt" : "2018-01-11T21:36:20Z",
        "updatedAt" : "2018-02-02T18:55:31Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c11928407dc443fbe4be94736e664bc26e60c67",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +1073,1077 @@/// A tuple with file, line, and column number, for displaying human-readable\n/// file locations.\nclass _Location {\n  const _Location({\n    this.file,"
  },
  {
    "id" : "627b2ee8-6332-4998-a75b-66fe7bb4199d",
    "prId" : 14056,
    "prUrl" : "https://github.com/flutter/flutter/pull/14056#pullrequestreview-88601306",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad6bc5be-f35d-4bb7-8ec9-4dc9240b53fc",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "s/slow/debug/",
        "createdAt" : "2018-01-12T20:57:28Z",
        "updatedAt" : "2018-02-02T18:55:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c11928407dc443fbe4be94736e664bc26e60c67",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +425,429 @@  /// Returns whether [Widget] creation locations are available.\n  ///\n  /// [Widget] creation locations are only available for slow mode builds when\n  /// the `--track-widget-creation` flag is passed to `flutter_tool`. Dart 2.0\n  /// is required as injecting creation locations requires a"
  },
  {
    "id" : "dd3a4168-d47d-406e-ac90-7117901d4944",
    "prId" : 14056,
    "prUrl" : "https://github.com/flutter/flutter/pull/14056#pullrequestreview-88601391",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0b033e6-1389-4fbc-ba6b-072097b3a1a9",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "missing blank line",
        "createdAt" : "2018-01-12T20:57:48Z",
        "updatedAt" : "2018-02-02T18:55:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c11928407dc443fbe4be94736e664bc26e60c67",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +1087,1091 @@  /// 1-based line number.\n  final int line;\n  /// 1-based column number.\n  final int column;\n"
  },
  {
    "id" : "6fe91e10-d1f3-4cc5-aaf6-bc46ea71e74a",
    "prId" : 15876,
    "prUrl" : "https://github.com/flutter/flutter/pull/15876#pullrequestreview-111877254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1da86a97-90a8-451e-9291-df891a99e5fb",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this should be below the license",
        "createdAt" : "2018-04-13T04:10:15Z",
        "updatedAt" : "2018-04-16T16:28:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "8ab7fb30-d817-475c-b2f8-240152029a4e",
        "parentId" : "1da86a97-90a8-451e-9291-df891a99e5fb",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Done. I wish the quick fix to import wouldn't put the line at the top of the file above the comment.",
        "createdAt" : "2018-04-13T04:17:38Z",
        "updatedAt" : "2018-04-16T16:28:14Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "409001eebd5015b571bc388c8f60e59d467b06f9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +3,7 @@// found in the LICENSE file.\n\nimport 'dart:async';\nimport 'dart:collection';\nimport 'dart:convert';"
  },
  {
    "id" : "1e356512-eb03-457c-ae14-fc887f1c7053",
    "prId" : 15876,
    "prUrl" : "https://github.com/flutter/flutter/pull/15876#pullrequestreview-111888555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c785a09-4d3c-42ec-913c-a26660156be5",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "isn't this duplicating a lot of code from the binding layer?",
        "createdAt" : "2018-04-13T04:12:27Z",
        "updatedAt" : "2018-04-16T16:28:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3c4db23c-8f53-403d-b26e-4d1a507dc692",
        "parentId" : "8c785a09-4d3c-42ec-913c-a26660156be5",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "two methods are duplicated. The others support the specific API signature I've found convenient for the inspector of methods accepting two string valued arguments the first being an object id and the second an object group. cleaned up the most egregious duplicate code as discussed bellow.",
        "createdAt" : "2018-04-13T05:42:03Z",
        "updatedAt" : "2018-04-16T16:28:14Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "409001eebd5015b571bc388c8f60e59d467b06f9",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +175,179 @@  /// reported to the remote caller and is dumped to the logs.\n  @protected\n  void registerServiceExtension({\n    @required String name,\n    @required ServiceExtensionCallback callback,"
  },
  {
    "id" : "39f0e709-afc1-4eed-96d6-0fc70d570351",
    "prId" : 16638,
    "prUrl" : "https://github.com/flutter/flutter/pull/16638#pullrequestreview-113261087",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3fb8086-f9e9-4485-a47a-ebb5136a3b51",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I'm not a big fan of special-casing specific types here, but I don't have a better solution for you.",
        "createdAt" : "2018-04-17T16:44:37Z",
        "updatedAt" : "2018-04-18T15:28:37Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "47ef5204-2792-41f3-b48a-08ddebbceda0",
        "parentId" : "e3fb8086-f9e9-4485-a47a-ebb5136a3b51",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "yeah that code makes me feel bad as well but to get the properties in a large efficient single shot response I don't have a better option. Previously we were grabbing these properties one object at a time over the observatory protocol.",
        "createdAt" : "2018-04-18T15:05:12Z",
        "updatedAt" : "2018-04-18T15:28:37Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d39d4aa2c3a6880eec9bf25c2e2b03eddafee0a",
    "line" : 242,
    "diffHunk" : "@@ -1,1 +772,776 @@          'codePoint': value.codePoint,\n        };\n      }\n      if (config.expandPropertyValues && value is Diagnosticable) {\n        json['properties'] = _nodesToJson("
  },
  {
    "id" : "5efb8b51-211f-4483-9280-990c900066bb",
    "prId" : 16638,
    "prUrl" : "https://github.com/flutter/flutter/pull/16638#pullrequestreview-113272276",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6d3e5ff-f962-4308-9e80-a2c30acd2f91",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This sounds like a workaround for a VM bug. Is there a bug#?",
        "createdAt" : "2018-04-17T16:45:35Z",
        "updatedAt" : "2018-04-18T15:28:37Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "598ec997-616f-499d-9aaa-9dfa9faa0a56",
        "parentId" : "b6d3e5ff-f962-4308-9e80-a2c30acd2f91",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "There is now. Filed https://github.com/dart-lang/sdk/issues/32919\r\nand mentioned it in the code.\r\nThis is generally by design in the VM service but it would be nice to fix as this also impacts robustness in simple watch windows displaying the values of dart expressions that could be GCed.",
        "createdAt" : "2018-04-18T15:29:58Z",
        "updatedAt" : "2018-04-18T15:29:58Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d39d4aa2c3a6880eec9bf25c2e2b03eddafee0a",
    "line" : 279,
    "diffHunk" : "@@ -1,1 +813,817 @@  /// the value is returned over the Observatory protocol and when the\n  /// separate observatory protocol command has to be used to retrieve its full\n  /// contents.\n  /// TODO(jacobr): Replace this with a better solution once\n  /// https://github.com/dart-lang/sdk/issues/32919 is fixed."
  },
  {
    "id" : "ceb5ec15-8b1e-413b-9dcf-d3c31ccb5a5a",
    "prId" : 16638,
    "prUrl" : "https://github.com/flutter/flutter/pull/16638#pullrequestreview-147414548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ba7de82-4474-40cd-abda-812030de5ffb",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this argument is ignored, was that intentional?",
        "createdAt" : "2018-08-18T01:10:56Z",
        "updatedAt" : "2018-08-18T01:10:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d39d4aa2c3a6880eec9bf25c2e2b03eddafee0a",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +120,124 @@    _SerializeConfig base, {\n    int subtreeDepth,\n    bool omitChildren,\n    Iterable<Diagnosticable> pathToInclude,\n  }) :"
  },
  {
    "id" : "be24084f-e265-4e06-bfde-77f575bc0c17",
    "prId" : 21828,
    "prUrl" : "https://github.com/flutter/flutter/pull/21828#pullrequestreview-155274758",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa279b14-5cd7-4f23-9054-72f26c77c65e",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "This method was previously reviewed just without the outer assert block to avoid the code from being included in release builds.",
        "createdAt" : "2018-09-13T21:12:40Z",
        "updatedAt" : "2018-09-17T21:34:13Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "343d2535942626a85c93a19cf54eaf731fbf2c6e",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1028,1032 @@      callback: isWidgetCreationTracked,\n    );\n    assert(() {\n      registerServiceExtension(\n        name: 'screenshot',"
  },
  {
    "id" : "6b64f9b3-12a0-426b-b331-c5a3073b71f4",
    "prId" : 23534,
    "prUrl" : "https://github.com/flutter/flutter/pull/23534#pullrequestreview-168916013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df226ebe-d151-4ff8-a497-b8fe0cc3d3bf",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Making groupName optional is added as part of this CL so I can get lightweight info on the Element tree without object ids for use by logic in IntelliJ to generate lint errors given rebuild counts and a snapshot of the widget tree to determine whether frequently built widgets had parents of specific types.",
        "createdAt" : "2018-10-26T17:04:49Z",
        "updatedAt" : "2018-10-29T22:12:40Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac8a7e8d25d0b737bea068469cce71b92699b33a",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +693,697 @@    expandPropertyValues = base.expandPropertyValues;\n\n  /// Optional object group name used to manage manage lifetimes of object\n  /// references in the returned JSON.\n  ///"
  },
  {
    "id" : "083b2f1f-9499-48f7-822b-e572b9f79f38",
    "prId" : 26426,
    "prUrl" : "https://github.com/flutter/flutter/pull/26426#pullrequestreview-191798288",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bbbb589-694e-47dd-bea2-3154091f4083",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "add a test to widget_inspector_test as well.",
        "createdAt" : "2019-01-11T18:19:02Z",
        "updatedAt" : "2019-01-16T18:25:47Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "a2778b2e-be9a-4f85-a919-76ea6e0f6c4b",
        "parentId" : "0bbbb589-694e-47dd-bea2-3154091f4083",
        "authorId" : "0a778f6e-09bf-46ed-b505-d7ff99b039d4",
        "body" : "done.",
        "createdAt" : "2019-01-11T18:57:53Z",
        "updatedAt" : "2019-01-16T18:25:47Z",
        "lastEditedBy" : "0a778f6e-09bf-46ed-b505-d7ff99b039d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "54a68729d14f9cf7a7877e131839344823edead5",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +866,870 @@    assert(getter != null);\n    assert(setter != null);\n    registerServiceExtension(\n      name: name,\n      callback: (Map<String, String> parameters) async {"
  },
  {
    "id" : "391ca0c3-1f4e-4c15-849a-350bcdf881b4",
    "prId" : 30983,
    "prUrl" : "https://github.com/flutter/flutter/pull/30983#pullrequestreview-226679525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f345c19d-9da1-44e8-9c73-755806fe9a1b",
        "parentId" : null,
        "authorId" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "body" : "What does this inspect call do?",
        "createdAt" : "2019-04-14T14:25:36Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "tags" : [
        ]
      },
      {
        "id" : "8c53174d-db9d-42db-b5c7-99971393b23e",
        "parentId" : "f345c19d-9da1-44e8-9c73-755806fe9a1b",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "calling `dart:developer` inspect on an object dispatches a message to all VM Service clients to inspect the object. For example, update the inspector to highlight the object or show a view of the object in a debugger or logging view.\r\nIt is a bug that this call to inspect existed for the renderObject case but not for this case.\r\nThis line is unrelated to the rest of the CL and I can move it to a separate CL.",
        "createdAt" : "2019-04-15T00:34:51Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "c4e1c902-88f8-49b5-ad8d-827c60299133",
        "parentId" : "f345c19d-9da1-44e8-9c73-755806fe9a1b",
        "authorId" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "body" : "OK, great.  That clarifies things.  Thanks!",
        "createdAt" : "2019-04-15T14:26:32Z",
        "updatedAt" : "2019-05-01T15:56:38Z",
        "lastEditedBy" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ba17fce6036bd4207970d1d5a528fe05af1b596",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +1354,1358 @@        }\n        selection.currentElement = object;\n        developer.inspect(selection.currentElement);\n      } else {\n        if (object == selection.current) {"
  },
  {
    "id" : "f19e5ff7-b096-42a2-99af-a464eca0de10",
    "prId" : 32511,
    "prUrl" : "https://github.com/flutter/flutter/pull/32511#pullrequestreview-236335614",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7938425-cbb5-45d5-b7d0-9255f90b5fca",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "by default, we check package/flutter",
        "createdAt" : "2019-05-10T20:21:10Z",
        "updatedAt" : "2019-07-09T00:37:26Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "c963a456-d5c6-4340-b629-be86c9acd2ca",
        "parentId" : "d7938425-cbb5-45d5-b7d0-9255f90b5fca",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "make this a comment instead of a note in the code review.\r\n// By default check whether the creation location was within package:flutter.",
        "createdAt" : "2019-05-10T20:40:56Z",
        "updatedAt" : "2019-07-09T00:37:26Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "1b7874fa-8250-461c-be31-0c825cffed34",
        "parentId" : "d7938425-cbb5-45d5-b7d0-9255f90b5fca",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "fixed",
        "createdAt" : "2019-05-10T22:29:11Z",
        "updatedAt" : "2019-07-09T00:37:26Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac71ca57fa2bddd6681a7a5de386c129fb4abca0",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1404,1408 @@\n    // By default check whether the creation location was within package:flutter.\n    if (_pubRootDirectories == null) {\n      // TODO(chunhtai): Make it more robust once\n      // https://github.com/flutter/flutter/issues/32660 is fixed."
  },
  {
    "id" : "95dfee32-fc2d-4633-8118-ed33b3658e16",
    "prId" : 32511,
    "prUrl" : "https://github.com/flutter/flutter/pull/32511#pullrequestreview-237973690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bef7d151-b12a-4d37-b9a0-f4506c33c50a",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "I could imagine a scenario where I'm developing the Flutter part of a larger application, and we've used `packages/flutter` as a location in our project to include the Flutter part.\r\n\r\nIs there some more robust way we can handle this?  Even something like `file.startsWith`?",
        "createdAt" : "2019-05-10T23:40:28Z",
        "updatedAt" : "2019-07-09T00:37:26Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "588e5a03-389a-471e-b1f8-da740c7b374d",
        "parentId" : "bef7d151-b12a-4d37-b9a0-f4506c33c50a",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "This is the easiest way to do this until we may have symbolic link like pacage:flutter in the future. One idea I have is we can put the package root directory as a environment variable during flutter tool command, and read the variable during flutter test/run/build to register it to WidgetInspectorService, I am not sure how viable it is. thoughts? @jacob314 @jonahwilliams ",
        "createdAt" : "2019-05-13T18:12:52Z",
        "updatedAt" : "2019-07-09T00:37:26Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "6b0936cd-c1e8-426a-9732-6e44d595e00a",
        "parentId" : "bef7d151-b12a-4d37-b9a0-f4506c33c50a",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "sadly file is currently an absolute path.\r\nI'm working on switching it to a proper package: uri in the kernel transformer.\r\nWhen this lands we will be able to switch this code to\r\nuri.startsWith('package:flutter/')",
        "createdAt" : "2019-05-13T21:14:22Z",
        "updatedAt" : "2019-07-09T00:37:26Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "9bf11198-6aee-48b5-baf8-d49a8c6d448c",
        "parentId" : "bef7d151-b12a-4d37-b9a0-f4506c33c50a",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "do you have the issue id I can refer to?",
        "createdAt" : "2019-05-13T21:40:12Z",
        "updatedAt" : "2019-07-09T00:37:26Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "3f4de7c9-c339-4b7c-bbba-a17b965f4e17",
        "parentId" : "bef7d151-b12a-4d37-b9a0-f4506c33c50a",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "https://github.com/flutter/flutter/issues/32660",
        "createdAt" : "2019-05-13T23:46:56Z",
        "updatedAt" : "2019-07-09T00:37:26Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "e0ca0e86-dfed-4976-9b2f-c2d3abeb5326",
        "parentId" : "bef7d151-b12a-4d37-b9a0-f4506c33c50a",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "added a todo comment",
        "createdAt" : "2019-05-15T17:44:37Z",
        "updatedAt" : "2019-07-09T00:37:26Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac71ca57fa2bddd6681a7a5de386c129fb4abca0",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +1407,1411 @@      // TODO(chunhtai): Make it more robust once\n      // https://github.com/flutter/flutter/issues/32660 is fixed.\n      return !file.contains('packages/flutter/');\n    }\n    for (String directory in _pubRootDirectories) {"
  },
  {
    "id" : "d999c5b8-cd78-4ddf-8d73-25f82047eca1",
    "prId" : 32511,
    "prUrl" : "https://github.com/flutter/flutter/pull/32511#pullrequestreview-259115685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e07be666-7c15-4264-9e03-2f129be60def",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "this code will be a lot more readable when tweaked to use List<DiagnosticsNode> instead of DiagnosticPropertiesBuilder.\r\nList has helper methods that make a lot of this code cleaner to write.",
        "createdAt" : "2019-06-28T20:02:15Z",
        "updatedAt" : "2019-07-09T00:37:26Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "c272453a-3701-45bd-b1ae-536f296203c7",
        "parentId" : "e07be666-7c15-4264-9e03-2f129be60def",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "I think this is currently the most efficient way to go through the list, it only go through the list at most twice.",
        "createdAt" : "2019-07-03T17:34:26Z",
        "updatedAt" : "2019-07-09T00:37:26Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "5df9bde8-89a2-41d0-a635-092734ffc67d",
        "parentId" : "e07be666-7c15-4264-9e03-2f129be60def",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "the refactor using yield looks a lot nicer.",
        "createdAt" : "2019-07-08T19:39:20Z",
        "updatedAt" : "2019-07-09T00:37:26Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac71ca57fa2bddd6681a7a5de386c129fb4abca0",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +2720,2724 @@Iterable<DiagnosticsNode> transformDebugCreator(Iterable<DiagnosticsNode> properties) sync* {\n  final List<DiagnosticsNode> pending = <DiagnosticsNode>[];\n  bool foundStackTrace = false;\n  for (DiagnosticsNode node in properties) {\n    if (!foundStackTrace && node is DiagnosticsStackTrace)"
  }
]