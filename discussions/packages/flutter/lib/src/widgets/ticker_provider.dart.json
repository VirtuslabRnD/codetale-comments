[
  {
    "id" : "7380b1dc-da6a-41b2-afe1-4c3c20d78548",
    "prId" : 5902,
    "prUrl" : "https://github.com/flutter/flutter/pull/5902#pullrequestreview-291092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d89c140-80ae-478a-bbc5-ee5b7003f519",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "You're inconsistent about whether you're using early return in these two error handlers.\n",
        "createdAt" : "2016-09-16T03:52:17Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "57b9f88bf58da56769af22de167f61deb943ec3c",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +95,99 @@    assert(() {\n      if (_ticker == null || !_ticker.isActive)\n        return true;\n      throw new FlutterError(\n        '$this was disposed with an active Ticker.\\n'"
  },
  {
    "id" : "efd026df-93fe-40df-a66d-e687da089cd3",
    "prId" : 5902,
    "prUrl" : "https://github.com/flutter/flutter/pull/5902#pullrequestreview-799912",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cfa9f29-af56-476a-a96d-211b7b5294ff",
        "parentId" : null,
        "authorId" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "body" : "'should' is really not explicit enough here.\n",
        "createdAt" : "2016-09-16T17:08:54Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "tags" : [
        ]
      },
      {
        "id" : "a3f23296-e9fa-4df1-9cdb-f8a4eee2777b",
        "parentId" : "0cfa9f29-af56-476a-a96d-211b7b5294ff",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "what should it say instead?\n",
        "createdAt" : "2016-09-20T00:49:13Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3b578a1f-d30a-4eca-8843-25451675be16",
        "parentId" : "0cfa9f29-af56-476a-a96d-211b7b5294ff",
        "authorId" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "body" : "What I was trying to say is that it does not explain why they should or should not be enabled.\n",
        "createdAt" : "2016-09-20T17:35:47Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "57b9f88bf58da56769af22de167f61deb943ec3c",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@  final bool enabled;\n\n  /// Whether tickers in the given subtree should be enabled or disabled.\n  ///\n  /// This is used automatically by [TickerProviderStateMixin] and"
  },
  {
    "id" : "214911dc-20f3-40be-88d2-ed106ef449aa",
    "prId" : 5902,
    "prUrl" : "https://github.com/flutter/flutter/pull/5902#pullrequestreview-665124",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65c6c853-55f7-4f50-b159-d6d4c9c84c5c",
        "parentId" : null,
        "authorId" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "body" : "'used ... to enable and disable' is a bit confusing since this method only returns a `bool`. Maybe 'use ... when enabling or disabling'?\n",
        "createdAt" : "2016-09-16T17:10:08Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "tags" : [
        ]
      },
      {
        "id" : "35dc5373-8acd-43ee-9eeb-5bef795e3180",
        "parentId" : "65c6c853-55f7-4f50-b159-d6d4c9c84c5c",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "tweaked\n",
        "createdAt" : "2016-09-20T00:50:07Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "57b9f88bf58da56769af22de167f61deb943ec3c",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@  /// Whether tickers in the given subtree should be enabled or disabled.\n  ///\n  /// This is used automatically by [TickerProviderStateMixin] and\n  /// [SingleTickerProviderStateMixin] to decide if their tickers should be\n  /// enabled or disabled."
  },
  {
    "id" : "a91e88d7-64ea-4c48-911f-2d11f99effe4",
    "prId" : 5902,
    "prUrl" : "https://github.com/flutter/flutter/pull/5902#pullrequestreview-800511",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28bc7061-14b7-4e03-91aa-353b546f237a",
        "parentId" : null,
        "authorId" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "body" : "'This' -> 'That'\n",
        "createdAt" : "2016-09-16T17:13:09Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "tags" : [
        ]
      },
      {
        "id" : "bc49d707-1a99-4589-9cdf-1ae1a803f3b6",
        "parentId" : "28bc7061-14b7-4e03-91aa-353b546f237a",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "why that?\n",
        "createdAt" : "2016-09-20T00:50:47Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "25ed857d-0eee-4ea9-9d04-cd2ec7a431e9",
        "parentId" : "28bc7061-14b7-4e03-91aa-353b546f237a",
        "authorId" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "body" : "I guess 'That' in this particular case underlines the separation of the two ideas. To me, 'This' brings the two closer than they naturally are, but this may be personal bias.\n",
        "createdAt" : "2016-09-20T17:38:52Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "57b9f88bf58da56769af22de167f61deb943ec3c",
    "line" : 145,
    "diffHunk" : "@@ -1,1 +143,147 @@/// If you only have a single [Ticker] (for example only a single\n/// [AnimationController]) for the lifetime of your [State], then using a\n/// [SingleTickerProviderStateMixin] is more efficient. This is the common case.\nabstract class TickerProviderStateMixin implements State<dynamic>, TickerProvider { // ignore: TYPE_ARGUMENT_NOT_MATCHING_BOUNDS, https://github.com/dart-lang/sdk/issues/25232\n"
  },
  {
    "id" : "e18f7c5c-a859-4e05-a21f-d9d366119c6a",
    "prId" : 5902,
    "prUrl" : "https://github.com/flutter/flutter/pull/5902#pullrequestreview-798877",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7db9b58c-4867-47e6-916e-667ae458fd2d",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Should this be called `muted` to match the property on `Ticker`?\n",
        "createdAt" : "2016-09-20T04:57:24Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "c3b6ce22-660f-4369-9b1a-17f331c09368",
        "parentId" : "7db9b58c-4867-47e6-916e-667ae458fd2d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I don't have a strong opinion here.\n",
        "createdAt" : "2016-09-20T17:29:42Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "96d5a858-b183-43ee-81a5-33134e4711a3",
        "parentId" : "7db9b58c-4867-47e6-916e-667ae458fd2d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I guess I'll change it to muted for consistency.\n",
        "createdAt" : "2016-09-20T17:29:50Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "7496d1fd-9a02-4b8e-8c89-60c2ef66e297",
        "parentId" : "7db9b58c-4867-47e6-916e-667ae458fd2d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Actually calling this \"muted\" here leads to a weird case where you set things to false if they're on, which is weird. I'm not sure what to do.\n",
        "createdAt" : "2016-09-20T17:30:50Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "57b9f88bf58da56769af22de167f61deb943ec3c",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@  /// such tickers are not paused, they just don't call their callbacks. Time\n  /// still elapses.\n  final bool enabled;\n\n  /// Whether tickers in the given subtree should be enabled or disabled."
  },
  {
    "id" : "eef78d0e-c072-4c73-98c4-2d277c9916bf",
    "prId" : 14392,
    "prUrl" : "https://github.com/flutter/flutter/pull/14392#pullrequestreview-93226723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e5aa9d2-6f87-41bc-b18e-092266bc3c9b",
        "parentId" : null,
        "authorId" : "45727d35-317d-432d-b0c6-83fc042c0c8a",
        "body" : "I think you could remove `// ignore:` here and below.",
        "createdAt" : "2018-02-01T10:19:18Z",
        "updatedAt" : "2018-02-01T10:19:23Z",
        "lastEditedBy" : "45727d35-317d-432d-b0c6-83fc042c0c8a",
        "tags" : [
        ]
      }
    ],
    "commit" : "24a3f83fe978fceeb08b1efcd4c4dc85283661d5",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +75,79 @@/// [TickerProviderStateMixin] instead.\n@optionalTypeArgs\nabstract class SingleTickerProviderStateMixin<T extends StatefulWidget> extends State<T> implements TickerProvider { // ignore: TYPE_ARGUMENT_NOT_MATCHING_BOUNDS, https://github.com/dart-lang/sdk/issues/25232\n  // This class is intended to be used as a mixin, and should not be\n  // extended directly."
  },
  {
    "id" : "98fa6254-3181-4722-8b79-0d8a5df01147",
    "prId" : 21181,
    "prUrl" : "https://github.com/flutter/flutter/pull/21181#pullrequestreview-151570353",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4aa0de7f-9b57-43b0-858e-66d2b3fd4e32",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "fwiw, as a general rule we try to get things like this from the tree (e.g. via a MediaQuery) rather than from the binding directly",
        "createdAt" : "2018-08-31T20:34:17Z",
        "updatedAt" : "2018-08-31T20:34:17Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ccb2bfda-5596-4c28-a6f5-82edba852e89",
        "parentId" : "4aa0de7f-9b57-43b0-858e-66d2b3fd4e32",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "That doesn't work here, the tickers are created before we can use context to get the media query data, and I found (confusingly) that animations would then start before didChangeDependencies could set the correct behavior.",
        "createdAt" : "2018-08-31T20:36:54Z",
        "updatedAt" : "2018-08-31T20:36:54Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "9b4a8026-2791-4fc3-ba64-e921fc8b6036",
        "parentId" : "4aa0de7f-9b57-43b0-858e-66d2b3fd4e32",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "makes sense, they'll get created from initState.\r\n\r\nBut that shouldn't matter, right? The animation controller will only have done the first (zero) frame by the time you get didChangeDependencies called, so there won't be any difference if you set the state then or at creation time.",
        "createdAt" : "2018-08-31T23:11:20Z",
        "updatedAt" : "2018-08-31T23:11:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4b4d075f0bb9a351ea029791652a662d8181de7",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +96,100 @@      );\n    }());\n    final ValueListenable<AccessibilityFeatures> accessibilityFeatures = SemanticsBinding.instance.accessibilityFeatures;\n    _ticker = new Ticker(onTick, debugLabel: 'created by $this')\n      ..disableAnimations = accessibilityFeatures.value.disableAnimations;"
  }
]