[
  {
    "id" : "2ceee5d2-add0-4769-9af4-84f1b8c5850e",
    "prId" : 4026,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fa007c6-0a05-49e3-b967-1b343a8bec95",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "dart docs\n",
        "createdAt" : "2016-05-20T20:56:36Z",
        "updatedAt" : "2016-05-20T23:45:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "648506413ff924c21961aee570518507aeda494b",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +6,10 @@import 'scroll_behavior.dart';\n\nclass ScrollConfigurationDelegate {\n  /// Returns the ScrollBehavior to be used by generic scrolling containers like\n  /// [Block]. Returns a new [OverscrollWhenScrollableBehavior] by default."
  },
  {
    "id" : "5172bc49-c2d3-465c-9026-5697e8fb6fd7",
    "prId" : 4026,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c5feb43-34d8-471f-98a4-45a762b42e89",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "const?\n",
        "createdAt" : "2016-05-20T20:57:54Z",
        "updatedAt" : "2016-05-20T23:45:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "648506413ff924c21961aee570518507aeda494b",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@  }) : super(key: key, child: child);\n\n  static final ScrollConfigurationDelegate _defaultDelegate = new ScrollConfigurationDelegate();\n\n  /// Defines the ScrollBehavior and scrollable wrapper for descendants."
  },
  {
    "id" : "082c565c-daf0-4c39-aa15-f6dd331c509d",
    "prId" : 7853,
    "prUrl" : "https://github.com/flutter/flutter/pull/7853#pullrequestreview-20117838",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4322bf46-86ad-44c3-b8ef-3ffbd42db3d9",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should move this to an inherited widget that is wrapped around the glow by the material layer (the glow itself coming from this layer)",
        "createdAt" : "2017-02-03T20:06:36Z",
        "updatedAt" : "2017-02-03T22:11:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "23e64b6c-ff48-4715-92a9-020911a43cdd",
        "parentId" : "4322bf46-86ad-44c3-b8ef-3ffbd42db3d9",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I've left this for a future patch.",
        "createdAt" : "2017-02-03T22:28:15Z",
        "updatedAt" : "2017-02-03T22:28:15Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "74c8562d1e195ce50a5c66faf25d090fa7b92ea7",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +23,27 @@  ///\n  /// Defaults to white.\n  Color getGlowColor(BuildContext context) => const Color(0xFFFFFFFF);\n\n  Widget buildViewportChrome(BuildContext context, Widget child, AxisDirection axisDirection) {"
  },
  {
    "id" : "d780e14d-9653-4a0e-8c80-85b498dedb80",
    "prId" : 78588,
    "prUrl" : "https://github.com/flutter/flutter/pull/78588#pullrequestreview-618837952",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62b057d8-ffa0-457e-9b6d-cbdb5e36606c",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "@goderbauer this does not appear to work in the way you thought it might. When `_WrappedScrollBehavior` calls `delegate.buildViewportDecoration`, it does not in turn call `_WrappedScrollBehavior.buildScrollbar`, it calls `ScrollBehavior.buildScrollbar`. It ignores the implemented class once you call on the delegate. Maybe I misunderstood what you preferred?",
        "createdAt" : "2021-03-23T00:30:48Z",
        "updatedAt" : "2021-04-02T19:14:05Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "ee823dc3-7703-4ade-871f-65089d3f0823",
        "parentId" : "62b057d8-ffa0-457e-9b6d-cbdb5e36606c",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Right, I think _WrappedScrollBehavior will have to re-implement buildViewportDecoration and call those methods on itself.",
        "createdAt" : "2021-03-23T16:47:24Z",
        "updatedAt" : "2021-04-02T19:14:05Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "42c5998d-77dc-4004-820d-23717704655b",
        "parentId" : "62b057d8-ffa0-457e-9b6d-cbdb5e36606c",
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "Won't that create an issue though if the `ScrollBehavior` being copied to `_WrappedScrollBehavior` has a different implementation of `buildViewportDecoration`? \r\nThis is why I was trying to keep everything contained in `buildViewportDecoration` previously.",
        "createdAt" : "2021-03-23T16:52:15Z",
        "updatedAt" : "2021-04-02T19:14:05Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee8e14110098c68c4a570ef5aa5f9766213ab622",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +194,198 @@}\n\nclass _WrappedScrollBehavior implements ScrollBehavior {\n  const _WrappedScrollBehavior({\n    required this.delegate,"
  }
]