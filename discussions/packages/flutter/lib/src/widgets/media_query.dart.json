[
  {
    "id" : "896b0b0a-5475-4c4f-906d-ebfb8cd8929c",
    "prId" : 832,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f530aa42-f917-404c-9b66-3e5161a6dc12",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "We're using the word \"media\" in a very \"inside-baseball\" way here...\n",
        "createdAt" : "2015-12-09T17:11:40Z",
        "updatedAt" : "2015-12-09T17:11:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "011d1404-482b-4918-9fc6-7022d769980b",
        "parentId" : "f530aa42-f917-404c-9b66-3e5161a6dc12",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, I de-jargonized it a bit.\n",
        "createdAt" : "2015-12-09T17:25:39Z",
        "updatedAt" : "2015-12-09T17:25:39Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "e55858411fae9f7de2efc75400c6e706dddd5b07",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +53,57 @@  final MediaQueryData data;\n\n  /// Queries the current media for the given context.\n  static MediaQueryData of(BuildContext context) {\n    MediaQuery query = context.inheritFromWidgetOfType(MediaQuery);"
  },
  {
    "id" : "19f4697e-2954-4300-aa6a-96a5effa7c52",
    "prId" : 1336,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ee5e2bd-7ce2-40da-b13d-fec623593e66",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "You need to update operator== and hashCode as well.\n",
        "createdAt" : "2016-01-22T00:05:48Z",
        "updatedAt" : "2016-01-22T00:17:15Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "db0f2ec8-f76c-405a-92d2-f483a0c7d6ad",
        "parentId" : "6ee5e2bd-7ce2-40da-b13d-fec623593e66",
        "authorId" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "body" : "Done\n",
        "createdAt" : "2016-01-22T00:17:49Z",
        "updatedAt" : "2016-01-22T00:17:49Z",
        "lastEditedBy" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "tags" : [
        ]
      }
    ],
    "commit" : "964c155014a753d82b1134dbec4d3de02e3e307a",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +25,29 @@  /// be a power of two. Indeed, it might not even be an integer. For example,\n  /// the Nexus 6 has a device pixel ratio of 3.5.\n  final double devicePixelRatio;\n\n  /// The padding around the edges of the media (e.g., the screen)."
  },
  {
    "id" : "b9c84017-2ace-44d2-bdd2-d31a798c71fd",
    "prId" : 17450,
    "prUrl" : "https://github.com/flutter/flutter/pull/17450#pullrequestreview-120093690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05a63354-2212-4eb8-9824-ccfd3b12d4cc",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "[textScaleFactor] and [MediaQuery] respectively",
        "createdAt" : "2018-05-15T05:54:33Z",
        "updatedAt" : "2018-05-15T05:54:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "81452fae230eb0e1a2c78e72c6e939947e29e4c9",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +408,412 @@  }\n\n  /// Returns textScaleFactor for the nearest MediaQuery ancestor or 1.0, if\n  /// no such ancestor exists.\n  static double textScaleFactorOf(BuildContext context) {"
  },
  {
    "id" : "95095db4-20dd-4596-bcfc-f9bfd0b2d60d",
    "prId" : 26259,
    "prUrl" : "https://github.com/flutter/flutter/pull/26259#pullrequestreview-191909781",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6da375d3-18b9-4f7b-8623-744ac0858871",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "While you're here... :D\r\n\r\nWould you like to add another section describing their interplay? I have to go look it up and/or test it every time.\r\n\r\ni.e. when the Android/iOS home bar (padding) and the keyboard (inset) are on top of each other, does the inset include the padding, is the padding just zero, does the inset only count the area on top of the padding etc etc. I can never remember since we didn't write it down.",
        "createdAt" : "2019-01-11T23:13:09Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "bd183d60-df3d-4d02-b248-0c8f74ca7541",
        "parentId" : "6da375d3-18b9-4f7b-8623-744ac0858871",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Might be worth saying too: if you make a custom widget and it consumes a padding/inset, you're responsible to make sure your child doesn't see it anymore. Otherwise, your child might decide to be funky.",
        "createdAt" : "2019-01-11T23:20:34Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "1eb1e32c-94f0-451b-9923-d4809259a499",
        "parentId" : "6da375d3-18b9-4f7b-8623-744ac0858871",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Oops, the second comment is in the wrong place.",
        "createdAt" : "2019-01-11T23:55:50Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "b6927879-3423-4a04-9ff3-8fa2abcb7ca0",
        "parentId" : "6da375d3-18b9-4f7b-8623-744ac0858871",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The MediaQueryData class doc covers this. I separated the point into its own paragraph to make it more obvious:\r\n```\r\n/// The viewInsets and padding values are independent, they're both\r\n/// measured from the edges of the MediaQuery widget's bounds. The\r\n/// bounds of the top level MediaQuery created by [WidgetsApp] are the\r\n/// same as the window that contains the app.\r\n```",
        "createdAt" : "2019-01-12T00:02:22Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2280b08cea0e4d32c0d3876a84261396877199f2",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +41,45 @@/// all, typically because they're obscured by the device's keyboard.\n///\n/// The viewInsets and padding values are independent, they're both\n/// measured from the edges of the MediaQuery widget's bounds. The\n/// bounds of the top level MediaQuery created by [WidgetsApp] are the"
  },
  {
    "id" : "358e3c83-6b92-4f77-8cbf-d2c8c0e4a978",
    "prId" : 26259,
    "prUrl" : "https://github.com/flutter/flutter/pull/26259#pullrequestreview-191908573",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4700a185-1789-47b2-a764-db1a22daf522",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "`The size of the media in logical pixels or points (e.g, the size of the screen).`\r\n\r\nTo make it friendlier for mobile developers' lexicon",
        "createdAt" : "2019-01-11T23:14:12Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "41346561-32ae-4432-a47e-5f48514109f0",
        "parentId" : "4700a185-1789-47b2-a764-db1a22daf522",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I don't think that will make it friendlier since it's not clear how \"points\" which typically would be a font dimension, map to logical pixels.",
        "createdAt" : "2019-01-11T23:46:29Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "b6995d0a-0ec8-4828-8372-91f54d3ea42a",
        "parentId" : "4700a185-1789-47b2-a764-db1a22daf522",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "https://developer.apple.com/library/archive/documentation/DeviceInformation/Reference/iOSDeviceCompatibility/Displays/Displays.html\r\nhttps://developer.android.com/guide/topics/resources/more-resources#Dimension\r\n\r\n'points' and 'dp' are just terms of art on iOS/Android. ",
        "createdAt" : "2019-01-11T23:54:55Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "2280b08cea0e4d32c0d3876a84261396877199f2",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +87,91 @@      alwaysUse24HourFormat = window.alwaysUse24HourFormat;\n\n  /// The size of the media in logical pixels (e.g, the size of the screen).\n  ///\n  /// Logical pixels are roughly the same visual size across devices. Physical"
  },
  {
    "id" : "bd10cabe-4224-404f-9b68-b8500a3d817e",
    "prId" : 26259,
    "prUrl" : "https://github.com/flutter/flutter/pull/26259#pullrequestreview-191908392",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab18182f-6754-46df-b96b-a747c70014ea",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Bah, sorry I might be totally wrong on this. But `When a mobile device's keyboard is visible, viewInsets.bottom` seems more natural. Anyway, it's aesthetics. Feel free to ignore. ",
        "createdAt" : "2019-01-11T23:16:46Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "499095fc-b55c-44ed-bfcd-fa730e887cc6",
        "parentId" : "ab18182f-6754-46df-b96b-a747c70014ea",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Because of all of the comma comments I just read a grammer site's overview of the rules for inserting commas. For as long as I could stand it anyway. As far as I can tell commas like this, which would match the natural pauses in speech, don't belong in written text.",
        "createdAt" : "2019-01-11T23:48:26Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "9895a4ae-794f-4568-911f-085f35d06b32",
        "parentId" : "ab18182f-6754-46df-b96b-a747c70014ea",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "nit: `Because of all of the comma comments, I just read a grammer site's overview of the rules`\r\n\r\nI kid I kid. Like I said, you have a better grasp at this than I would.",
        "createdAt" : "2019-01-11T23:53:47Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "2280b08cea0e4d32c0d3876a84261396877199f2",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +114,118 @@  /// typically by the device's keyboard.\n  ///\n  /// When a mobile device's keyboard is visible `viewInsets.bottom`\n  /// corresponds to the top of the keyboard.\n  ///"
  },
  {
    "id" : "833d3fe0-3192-4478-930f-bfe0ef98b7cc",
    "prId" : 26259,
    "prUrl" : "https://github.com/flutter/flutter/pull/26259#pullrequestreview-192297039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60349d7f-2d71-4da7-a1ed-467359b7d68d",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "+1 for adding this explanation. ",
        "createdAt" : "2019-01-14T18:42:58Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "2280b08cea0e4d32c0d3876a84261396877199f2",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +32,36 @@/// returns null.\n///\n/// MediaQueryData includes two [EdgeInsets] values:\n/// [padding] and [viewInsets]. These\n/// values reflect the configuration of the device and are used by"
  },
  {
    "id" : "bd4d2208-ec33-4feb-856b-7331046f10a1",
    "prId" : 26259,
    "prUrl" : "https://github.com/flutter/flutter/pull/26259#pullrequestreview-192424816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d203151-fdc4-4c7e-a84d-0427d3698c4c",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe add a \"see also\" section that links to the explanation given on the top level of MediaQueryData that illustrates the difference between the two?",
        "createdAt" : "2019-01-14T18:44:13Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "7d09eada-a4ac-4a5e-af1b-f64bf9dcb6d5",
        "parentId" : "1d203151-fdc4-4c7e-a84d-0427d3698c4c",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Good idea, done.",
        "createdAt" : "2019-01-14T23:44:41Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2280b08cea0e4d32c0d3876a84261396877199f2",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +120,124 @@  /// measured from the edges of the [MediaQuery] widget's bounds. The\n  /// bounds of the top level MediaQuery created by [WidgetsApp] are the\n  /// same as the window (often the mobile device screen) that contains the app.\n  ///\n  /// See also:"
  },
  {
    "id" : "72d9e174-db4c-4955-89fb-d512396813ae",
    "prId" : 26259,
    "prUrl" : "https://github.com/flutter/flutter/pull/26259#pullrequestreview-192424976",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f269ef69-7ec2-417c-9586-e05b276980a0",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Should the doc for padding somehow also mention its independence from viewInsets and how the two relate (even if it's only in a \"see also\" bullet)? ",
        "createdAt" : "2019-01-14T18:45:21Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "dba7dbc3-47e4-4ed0-a3b1-7e5b7b169605",
        "parentId" : "f269ef69-7ec2-417c-9586-e05b276980a0",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I added a see also bullet per the previous comment.",
        "createdAt" : "2019-01-14T23:45:15Z",
        "updatedAt" : "2019-01-15T00:03:03Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2280b08cea0e4d32c0d3876a84261396877199f2",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +132,136 @@  ///\n  /// If you consumed this padding (e.g. by building a widget that envelops or\n  /// accounts for this padding in its layout in such a way that children are\n  /// no longer exposed to this padding), you should remove this padding\n  /// for subsequent descendants in the widget tree by inserting a new"
  },
  {
    "id" : "3e12a9b3-03a3-4cf8-b0a7-9ce7c94b3235",
    "prId" : 26605,
    "prUrl" : "https://github.com/flutter/flutter/pull/26605#pullrequestreview-199750764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a125078a-2c8a-43d3-920c-8f484fbfe0e5",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "@goderbauer, while you're here :D\r\n\r\nI left a #27311. Null values for these fields don't really make much sense. ",
        "createdAt" : "2019-01-30T18:50:33Z",
        "updatedAt" : "2019-02-06T23:45:11Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "17efa57f-429e-43a3-8e4e-92c171f1f4c8",
        "parentId" : "a125078a-2c8a-43d3-920c-8f484fbfe0e5",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "ACK",
        "createdAt" : "2019-02-04T19:03:55Z",
        "updatedAt" : "2019-02-06T23:45:11Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "303b0442350c6b3078c32352791837951345d6cc",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +64,68 @@    this.padding = EdgeInsets.zero,\n    this.viewInsets = EdgeInsets.zero,\n    this.alwaysUse24HourFormat = false,\n    this.accessibleNavigation = false,\n    this.invertColors = false,"
  },
  {
    "id" : "eb211bdc-42e5-4be1-9aa7-0b621fd473bb",
    "prId" : 33999,
    "prUrl" : "https://github.com/flutter/flutter/pull/33999#pullrequestreview-246828097",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ba6309f-702d-4cab-8691-33a15eceb437",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "I think we might want a See also section here linking to some relevant properties on [ui.window]",
        "createdAt" : "2019-06-06T20:00:22Z",
        "updatedAt" : "2019-06-07T16:51:18Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "c9958c1e-452d-4d79-9d25-4c33765c36eb",
        "parentId" : "9ba6309f-702d-4cab-8691-33a15eceb437",
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "I added references to `ui.window`",
        "createdAt" : "2019-06-06T21:36:05Z",
        "updatedAt" : "2019-06-07T16:51:18Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      }
    ],
    "commit" : "5520f51ab062cfce29114203364f600cf7c4b5cf",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +74,78 @@/// widgets that reduce those properties by the same amount.\n/// The [removePadding], [removeViewPadding], and [removeInsets] methods are\n/// useful for this.\n/// See also:\n///"
  },
  {
    "id" : "c940efd5-5636-49fc-868a-755826ca2d45",
    "prId" : 33999,
    "prUrl" : "https://github.com/flutter/flutter/pull/33999#pullrequestreview-246914110",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8f22d04-b4a5-4a2d-9da5-037170063f70",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "On window, this is now a derived property.  I think we may want to make it so here as well.  /cc @HansMuller or @Hixie for input on that.",
        "createdAt" : "2019-06-06T20:01:42Z",
        "updatedAt" : "2019-06-07T16:51:18Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "36e61365-f1e6-4fae-8d0c-e5135a6f7497",
        "parentId" : "c8f22d04-b4a5-4a2d-9da5-037170063f70",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Discussed this offline further - we have a direction now.",
        "createdAt" : "2019-06-07T04:54:10Z",
        "updatedAt" : "2019-06-07T16:51:18Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "5520f51ab062cfce29114203364f600cf7c4b5cf",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +189,193 @@  ///  * [SafeArea], a widget that consumes this padding with a [Padding] widget\n  ///    and automatically removes it from the [MediaQuery] for its child.\n  final EdgeInsets padding;\n\n  /// The parts of the display that are partially obscured by system UI,"
  },
  {
    "id" : "892c748b-940c-4270-b131-9918a299c9b9",
    "prId" : 37416,
    "prUrl" : "https://github.com/flutter/flutter/pull/37416#pullrequestreview-278029540",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ce7465a-1a8a-465b-b47e-3e79f671177f",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Can you add a little more information here, e.g. that certain gestures in these areas my  not be forwarded to the app and elements placed here may therefore not respond to them.",
        "createdAt" : "2019-08-20T23:22:02Z",
        "updatedAt" : "2019-08-22T00:26:55Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "f14f0fb3-c59b-448f-9f32-0e37dcd61b45",
        "parentId" : "4ce7465a-1a8a-465b-b47e-3e79f671177f",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Sounds good, I did the following: \r\n```\r\n  /// This value is typically a drag gesture from an edge of the screen.\r\n  /// Gestures in these areas may not be forwarded to the app or may\r\n  /// be canceled by the system. Therefore, elements placed in these areas may\r\n  /// not properly respond to them.\r\n```",
        "createdAt" : "2019-08-21T00:42:16Z",
        "updatedAt" : "2019-08-22T00:26:55Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "d86e2f77-2288-4511-ade4-d41225ffefb7",
        "parentId" : "4ce7465a-1a8a-465b-b47e-3e79f671177f",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "You might be able to reuse a version of https://github.com/flutter/flutter/pull/37416#discussion_r316366337 here.",
        "createdAt" : "2019-08-21T19:41:50Z",
        "updatedAt" : "2019-08-22T00:26:55Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "3bbcc307f43f833527da8585be70d885fcc6738c",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +232,236 @@  /// This property is currently only expected to be set to a non-default value\n  /// on Android starting with version Q.\n  ///\n  /// {@tool snippet --template=stateful_widget_material}\n  ///"
  },
  {
    "id" : "8030cf2b-2180-45fe-8bc6-054bcb41e51c",
    "prId" : 37416,
    "prUrl" : "https://github.com/flutter/flutter/pull/37416#pullrequestreview-278121090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f625603f-c23b-4c2f-8a0c-a1244256330b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Need a comment here to explain that, by default, the slider expands to fill the available width.\r\n\r\nNot clear why we're padding top/bottom (we're assuming something about systemGestureInsets?).  Maybe: \r\n```\r\nContainer(\r\n  alignment: Alignment.center,\r\n  padding: systemGestureInsets, // only left,right padding is likely to be needed\r\n  child: Slider...\r\n),\r\n```",
        "createdAt" : "2019-08-21T19:48:09Z",
        "updatedAt" : "2019-08-22T00:26:55Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "a541357b-fba8-4174-9b96-330c0f22756a",
        "parentId" : "f625603f-c23b-4c2f-8a0c-a1244256330b",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I mainly pad the top/bottom to make it look cleaner in the sample app. I'll just set top and bottom to 0 for the sake of the sample to avoid confusion, which seems like a worthy tradeoff. \r\n\r\nI think setting it to `systemGestureInsets` altogether might be a little confusing since there are systemGestureInsets on the top and bottom, but for this example, the Slider is in the body of the Scaffold and does not need to be padded by those values.",
        "createdAt" : "2019-08-21T23:15:08Z",
        "updatedAt" : "2019-08-22T00:26:55Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3bbcc307f43f833527da8585be70d885fcc6738c",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +251,255 @@  ///   return Scaffold(\n  ///     appBar: AppBar(title: Text('Pad Slider to avoid systemGestureInsets')),\n  ///     body: Padding(\n  ///       padding: EdgeInsets.only( // only left and right padding are needed here\n  ///         left: systemGestureInsets.left,"
  },
  {
    "id" : "a1ae2f90-d6ca-4f00-95f8-2d271893b727",
    "prId" : 41803,
    "prUrl" : "https://github.com/flutter/flutter/pull/41803#pullrequestreview-296643658",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a800b6d-101c-47ae-966e-fba641113ceb",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "I think rather than null here it should just return the viewPadding.left and so on?",
        "createdAt" : "2019-10-02T22:37:14Z",
        "updatedAt" : "2019-10-08T07:30:35Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "bab8e07c-9ee5-4b1e-9d4c-6d180c38be3d",
        "parentId" : "1a800b6d-101c-47ae-966e-fba641113ceb",
        "authorId" : "9e3eed31-b5ce-483c-91dd-e8ca18b84239",
        "body" : "Null in copywith just means that the value stays the same",
        "createdAt" : "2019-10-03T05:04:45Z",
        "updatedAt" : "2019-10-08T07:30:35Z",
        "lastEditedBy" : "9e3eed31-b5ce-483c-91dd-e8ca18b84239",
        "tags" : [
        ]
      }
    ],
    "commit" : "744c92836a95eb20361d7f9e9a40af1903283155",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +421,425 @@      ),\n      viewPadding: viewPadding.copyWith(\n        left: removeLeft ? math.max(0.0, viewPadding.left - padding.left) : null,\n        top: removeTop ? math.max(0.0, viewPadding.top - padding.top) : null,\n        right: removeRight ? math.max(0.0, viewPadding.right - padding.right) : null,"
  },
  {
    "id" : "27f0967b-25be-4c30-b686-8cb5bba72883",
    "prId" : 41803,
    "prUrl" : "https://github.com/flutter/flutter/pull/41803#pullrequestreview-296564255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21fa81af-a8ac-4cdd-a002-683bdee31d27",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "Same comment here regarding returning null.",
        "createdAt" : "2019-10-02T22:37:45Z",
        "updatedAt" : "2019-10-08T07:30:35Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      }
    ],
    "commit" : "744c92836a95eb20361d7f9e9a40af1903283155",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +464,468 @@      padding: padding,\n      viewPadding: viewPadding.copyWith(\n        left: removeLeft ? math.max(0.0, viewPadding.left - viewInsets.left) : null,\n        top: removeTop ? math.max(0.0, viewPadding.top - viewInsets.top) : null,\n        right: removeRight ? math.max(0.0, viewPadding.right - viewInsets.right) : null,"
  },
  {
    "id" : "194b861d-2015-47f8-9806-44e6c5ba301b",
    "prId" : 45728,
    "prUrl" : "https://github.com/flutter/flutter/pull/45728#pullrequestreview-325744658",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23e60cd5-7d73-402e-8528-a7bb1a9aa9e4",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Same.",
        "createdAt" : "2019-12-02T21:18:12Z",
        "updatedAt" : "2019-12-04T07:52:05Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b009aec83e54bb8b2abdfad5105ea28936c98a4",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +536,540 @@    if (other.runtimeType != runtimeType)\n      return false;\n    return other is MediaQueryData\n        && other.size == size\n        && other.devicePixelRatio == devicePixelRatio"
  },
  {
    "id" : "03f3d41d-e4b9-44a0-8cec-c907353df21f",
    "prId" : 54919,
    "prUrl" : "https://github.com/flutter/flutter/pull/54919#pullrequestreview-418769535",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5f6fbbf-9e88-4aa1-b406-cad5a51875e4",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: Maybe add a one-sentence example describing what you would do differently depending on the mode. I think that would increase the understanding of what this property should be used for. ",
        "createdAt" : "2020-05-26T22:49:30Z",
        "updatedAt" : "2020-05-27T00:46:58Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "4c878dcc-6111-4a8e-8b24-5132f101e9ce",
        "parentId" : "f5f6fbbf-9e88-4aa1-b406-cad5a51875e4",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Good idea.  I added a small paragraph about this.",
        "createdAt" : "2020-05-27T00:45:27Z",
        "updatedAt" : "2020-05-27T00:46:58Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a82c577ded9e85d6474292d8628c739e47c715d",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +363,367 @@  /// Some user interfaces are better navigated using a directional pad (DPAD)\n  /// or arrow keys, and for those interfaces, some widgets need to handle these\n  /// directional events differently. In order to know when to do that, these\n  /// widgets will look for the navigation mode in effect for their context.\n  ///"
  },
  {
    "id" : "18a3c306-b922-471c-904a-1eeb8abb5842",
    "prId" : 54919,
    "prUrl" : "https://github.com/flutter/flutter/pull/54919#pullrequestreview-420446769",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "143c965d-174a-42cb-a016-fcc05e3fc8d0",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should probably mention that this is for TVs.",
        "createdAt" : "2020-05-28T19:57:18Z",
        "updatedAt" : "2020-05-28T19:57:18Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a82c577ded9e85d6474292d8628c739e47c715d",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +904,908 @@  /// controls will retain focus when disabled, and will be able to receive\n  /// focus (although they remain disabled) when traversed.\n  directional,\n}"
  },
  {
    "id" : "b1401d78-278e-4374-85cf-12004895d85c",
    "prId" : 62337,
    "prUrl" : "https://github.com/flutter/flutter/pull/62337#pullrequestreview-456103861",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f10b7b5e-c7d5-41ff-af29-87bd966a6c93",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This API doc should really incorporate a `[MediaQueryData.highContrast]` link somewhere.",
        "createdAt" : "2020-07-27T20:07:39Z",
        "updatedAt" : "2020-07-28T20:17:41Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "d4ef6265-229c-4389-b60a-9d4d688f4337",
        "parentId" : "f10b7b5e-c7d5-41ff-af29-87bd966a6c93",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "Done",
        "createdAt" : "2020-07-27T20:18:10Z",
        "updatedAt" : "2020-07-28T20:17:41Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "13b81fed064fb69c37b8ecb36eadbd7724784c76",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +845,849 @@\n  /// Returns highContrast for the nearest MediaQuery ancestor or false, if no\n  /// such ancestor exists.\n  ///\n  /// See also:"
  },
  {
    "id" : "49a6bab6-a72f-4fba-b613-d4da2aa5f58c",
    "prId" : 85298,
    "prUrl" : "https://github.com/flutter/flutter/pull/85298#pullrequestreview-703431756",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec84727a-0380-426c-89ce-a73ef4eb64cb",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "I think we should keep this change. This is valuable to folks who may want it. :)",
        "createdAt" : "2021-07-09T22:45:47Z",
        "updatedAt" : "2021-07-09T22:48:26Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      }
    ],
    "commit" : "475af727ccd55a930f612164d60cdc6255c789a3",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +801,805 @@  ///\n  /// The [child] argument is required and must not be null.\n  static Widget fromWindow({\n    Key? key,\n    required Widget child,"
  }
]