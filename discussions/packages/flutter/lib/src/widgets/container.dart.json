[
  {
    "id" : "1c664907-cb95-4474-8e7b-b0263310854f",
    "prId" : 8396,
    "prUrl" : "https://github.com/flutter/flutter/pull/8396#pullrequestreview-23792773",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb2bf0bd-a104-4ba2-a8af-9a4dd3eb9a3d",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Can't we just merge them? Then the only thing we need to document is that if decoration specifies color too, it takes precedence or something",
        "createdAt" : "2017-02-24T19:04:00Z",
        "updatedAt" : "2017-02-24T19:32:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "8e71dfae-3ca5-49ca-9f8e-825a64b91854",
        "parentId" : "fb2bf0bd-a104-4ba2-a8af-9a4dd3eb9a3d",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "The problem is that `decoration` has the type `Decoration` rather than `BoxDecoration`.  That means it can be an arbitrary custom decoration (like the `FlutterLogoDecoration`) and might not have the concept of color.",
        "createdAt" : "2017-02-24T19:18:41Z",
        "updatedAt" : "2017-02-24T19:32:43Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "e9d68af3-8ab7-49a7-bcb8-76ea39507a3c",
        "parentId" : "fb2bf0bd-a104-4ba2-a8af-9a4dd3eb9a3d",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Understood. Makes sense. ",
        "createdAt" : "2017-02-24T19:27:45Z",
        "updatedAt" : "2017-02-24T19:32:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "cce59de6bb67ad6e68a3b5ec8fbc59d046011569",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +111,115 @@    assert(decoration == null || decoration.debugAssertIsValid());\n    assert(constraints == null || constraints.debugAssertIsValid());\n    assert(color == null || decoration == null,\n      'Cannot provide both a color and a decoration\\n'\n      'The color argument is just a shorthand for \"decoration: new BoxDecoration(backgroundColor: color)\".'"
  },
  {
    "id" : "612bd9da-1f08-4087-9d88-d483ee5f65b2",
    "prId" : 10653,
    "prUrl" : "https://github.com/flutter/flutter/pull/10653#pullrequestreview-43783916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f670a251-7aa8-416b-a160-16ff238023f0",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Isn't there a scenario where the container tries to be as big as possible?",
        "createdAt" : "2017-06-13T15:09:42Z",
        "updatedAt" : "2017-06-13T16:40:04Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "e855ae05-acd6-413b-b3ad-8f1a4557a736",
        "parentId" : "f670a251-7aa8-416b-a160-16ff238023f0",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "That's covered by:\r\n```\r\n/// If the widget has no child, no `height`, no `width`, no [constraints], and\r\n/// no [alignment], but the parent provides bounded constraints, then\r\n/// [Container] expands to fit the constraints provided by the parent.\r\n```",
        "createdAt" : "2017-06-13T16:37:02Z",
        "updatedAt" : "2017-06-13T16:40:04Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "5e09300b-f0b2-48f7-b486-03f4310d5ab2",
        "parentId" : "f670a251-7aa8-416b-a160-16ff238023f0",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I wonder if this would be easier to understand in a flow chart...  /me ducks",
        "createdAt" : "2017-06-13T16:38:02Z",
        "updatedAt" : "2017-06-13T16:40:04Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "8be9d9c3-608f-408a-869e-153c25d54478",
        "parentId" : "f670a251-7aa8-416b-a160-16ff238023f0",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "There's got to be a cleaner way to describe this, yeah. I want to try adding these \"layout model\" blocks to a few more widgets before i decide to invest more in this area.",
        "createdAt" : "2017-06-13T16:41:02Z",
        "updatedAt" : "2017-06-13T16:41:03Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c07e38b9e5ccd16feacad77377df7e008399817",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +140,144 @@/// If the widget has no child, no `height`, no `width`, no [constraints],\n/// and the parent provides unbounded constraints, then [Container] tries to\n/// size as small as possible.\n///\n/// If the widget has no child and no [alignment], but a `height`, `width`, or"
  },
  {
    "id" : "b0fafba9-55c9-4ca8-90d3-56cf9fad9548",
    "prId" : 35548,
    "prUrl" : "https://github.com/flutter/flutter/pull/35548#pullrequestreview-259038545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad9bcc90-315b-478e-845d-dfcc38e24c39",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "```suggestion\r\n/// fit the parent, and to be as small as possible.\r\n```",
        "createdAt" : "2019-07-03T22:09:24Z",
        "updatedAt" : "2019-07-08T17:06:47Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "ce144255-4517-4fbc-8555-fc70597912ee",
        "parentId" : "ad9bcc90-315b-478e-845d-dfcc38e24c39",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "The and seems to make it ambitious.",
        "createdAt" : "2019-07-08T17:05:59Z",
        "updatedAt" : "2019-07-08T17:06:51Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "83ac40b98c8efa079daaf06b1b46f5f50f98a537",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +54,58 @@/// Summary: [Container] tries, in order: to honor [alignment], to size itself to\n/// the [child], to honor the `width`, `height`, and [constraints], to expand to\n/// fit the parent, to be as small as possible.\n///\n/// More specifically:"
  },
  {
    "id" : "3ce1258b-3470-4001-8073-030eeac63e2e",
    "prId" : 35548,
    "prUrl" : "https://github.com/flutter/flutter/pull/35548#pullrequestreview-259038545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b916934f-9162-4726-942f-a69e6c3c812e",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "Would a diagram for any of these scenarios listed above be beneficial in illustrating the point? Not sure.",
        "createdAt" : "2019-07-03T22:11:31Z",
        "updatedAt" : "2019-07-08T17:06:47Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "de21957c-f520-478c-b8fe-34875996b5e8",
        "parentId" : "b916934f-9162-4726-942f-a69e6c3c812e",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I'll leave that for a follow-up :) ",
        "createdAt" : "2019-07-08T17:06:21Z",
        "updatedAt" : "2019-07-08T17:06:51Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "83ac40b98c8efa079daaf06b1b46f5f50f98a537",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +88,92 @@/// [padding] (e.g. borders in a [BoxDecoration] contribute to the [padding]);\n/// see [Decoration.padding].\n///\n/// See also:\n///"
  }
]