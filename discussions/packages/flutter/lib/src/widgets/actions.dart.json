[
  {
    "id" : "efe63da7-0a67-4bc6-9adb-ba81eee2ea40",
    "prId" : 33298,
    "prUrl" : "https://github.com/flutter/flutter/pull/33298#pullrequestreview-245576452",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd9bd8a8-c0e7-47ae-97b2-c4a502487071",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "What is the purpose of having this as a class? It doesn't look like it is dispatching so much as just a small wrapper around `action.invoke`.  Could this just a be function? Or are you anticipating subclasses of `ActionDispatcher`?",
        "createdAt" : "2019-06-04T16:32:32Z",
        "updatedAt" : "2019-06-04T16:48:37Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "cbd5cfb9-6c29-4ffd-b64f-9d4ff82662e1",
        "parentId" : "fd9bd8a8-c0e7-47ae-97b2-c4a502487071",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes, I'm anticipating having subclasses. Take a look at `dev/manual_tests/lib/actions.dart` and you'll see an example of this.  Having the ability to subclass and replace your own `ActionDispatcher` means you can have complete control over the dispatch.  I could have this be just a single \"invoke\" function that you supply, but it feels more like a class because there could be other operations we want to add in the future (mayby `canInvoke`, or something), and this gives us a place to put it.",
        "createdAt" : "2019-06-04T16:56:59Z",
        "updatedAt" : "2019-06-04T16:56:59Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e6f7874df466b96626655339f2187fcdbc0485b",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +131,135 @@\n/// An action manager that simply invokes the actions given to it.\nclass ActionDispatcher extends Diagnosticable {\n  /// Const constructor so that subclasses can be const.\n  const ActionDispatcher();"
  },
  {
    "id" : "fc0946e7-ed99-4fb8-b344-c9d75e47fe19",
    "prId" : 41245,
    "prUrl" : "https://github.com/flutter/flutter/pull/41245#pullrequestreview-293927197",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffe16206-efe1-49dc-ae9a-5caa230b0883",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "It would be good to have a test for this (unless I missed it below).\r\n",
        "createdAt" : "2019-09-26T18:44:30Z",
        "updatedAt" : "2019-09-26T18:45:05Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      }
    ],
    "commit" : "eee062581d5d1f8ad4799a0910c2c2b6b6bd3ff9",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +293,297 @@    Action action;\n\n    if (identical(intent, Intent.doNothing)) {\n      return false;\n    }"
  },
  {
    "id" : "ce94670b-5623-4910-b74d-891778bcc0b3",
    "prId" : 42940,
    "prUrl" : "https://github.com/flutter/flutter/pull/42940#pullrequestreview-385133429",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f1fdd92-1057-49a8-b3e2-fb4d29273ef0",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Should this be documented that the context of the primary focus may be used if no context is provided?",
        "createdAt" : "2020-03-26T20:08:50Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "77061ee8-8d04-40fd-8e6f-1ec1a4cac3f8",
        "parentId" : "1f1fdd92-1057-49a8-b3e2-fb4d29273ef0",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done.",
        "createdAt" : "2020-03-31T22:23:00Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bc3b796a17c25612a6204aadd9cd3d592423dbe",
    "line" : 428,
    "diffHunk" : "@@ -1,1 +379,383 @@    assert(action != null);\n    assert(intent != null);\n    context ??= primaryFocus?.context;\n    if (action.enabled) {\n      if (action is ContextAction) {"
  },
  {
    "id" : "be57066e-81cb-4c46-bf86-0034b0e58280",
    "prId" : 42940,
    "prUrl" : "https://github.com/flutter/flutter/pull/42940#pullrequestreview-385133429",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76344ca1-2638-4d96-840b-da2422aa7ef0",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This paragraph may benefit from an actual code sample?",
        "createdAt" : "2020-03-26T20:33:36Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "6cdef225-0940-4363-af25-049f8a725cb2",
        "parentId" : "76344ca1-2638-4d96-840b-da2422aa7ef0",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes, definitely. I'll see what I can come up with.",
        "createdAt" : "2020-03-31T22:29:05Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bc3b796a17c25612a6204aadd9cd3d592423dbe",
    "line" : 538,
    "diffHunk" : "@@ -1,1 +478,482 @@  /// not enabled.\n  ///\n  /// This is intended to be used in widgets which have something similar to an\n  /// `onTap` handler, which takes a `VoidCallback`, and can be set to the\n  /// result of calling this function."
  },
  {
    "id" : "093f894a-0216-43b4-9e83-5fd59688dc64",
    "prId" : 42940,
    "prUrl" : "https://github.com/flutter/flutter/pull/42940#pullrequestreview-385133429",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3aeaada2-a43a-4688-be29-b0e3874bc319",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "My understanding is that in order to use this correctly, you're not allowed to cache the returned handler between builds. When the context's dependencies change, you are required to call this again in case the action is disabled now. Maybe this should be part of the documentation? ",
        "createdAt" : "2020-03-26T20:38:03Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "62c5f1d8-c6e8-40c3-b341-8be04f933248",
        "parentId" : "3aeaada2-a43a-4688-be29-b0e3874bc319",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "e.g. somehow mention that this creates a dependency similarly to how it's explained on the find method.",
        "createdAt" : "2020-03-26T20:38:53Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "e71cb5c7-e3ee-466f-8b7b-e294a493a56d",
        "parentId" : "3aeaada2-a43a-4688-be29-b0e3874bc319",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Explained, and clarified below too.",
        "createdAt" : "2020-03-31T22:29:17Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bc3b796a17c25612a6204aadd9cd3d592423dbe",
    "line" : 545,
    "diffHunk" : "@@ -1,1 +485,489 @@  /// that if the actions change, the context will be rebuilt and find the\n  /// updated action.\n  static VoidCallback handler<T extends Intent>(BuildContext context, T intent, {bool nullOk = false}) {\n    final Action<T> action = Actions.find<T>(context, nullOk: nullOk);\n    if (action != null && action.enabled) {"
  },
  {
    "id" : "edd03b02-4a71-4216-868f-f952f9bf76b6",
    "prId" : 42940,
    "prUrl" : "https://github.com/flutter/flutter/pull/42940#pullrequestreview-386709436",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "767c62f0-2b02-459a-9e8e-dc4752eb7f81",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Could you just remove found actions from enabledState in the for loop above to avoid this extra check? (and also the extra foundAction set could be removed then).",
        "createdAt" : "2020-03-26T20:47:50Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "89ea5275-fea0-49d0-9b4c-08ae60022735",
        "parentId" : "767c62f0-2b02-459a-9e8e-dc4752eb7f81",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "No, they're looping over different things.  One is looping over the set of actions in the widget, and the other is looping over the old actions in the enabled state that is about to be replaced.\r\n\r\nThe second loop unregisters from any actions that weren't preserved in the first loop. I added some docs.\r\n\r\nOr maybe I'm just not seeing what you're talking about...",
        "createdAt" : "2020-03-31T22:44:59Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "1cf8e460-bd95-4a1d-9da7-86f9812d7ae0",
        "parentId" : "767c62f0-2b02-459a-9e8e-dc4752eb7f81",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "lines 637/638 effectively iterate over all actions in enabledState that were not added to foundActions. So in line 625 could you just do `enabledActions.removeKey(action)` instead of `foundActions.add(action)`? At the end of the first loop, `enabledActions` would only contain the actions that were not preserved, and in the second loop you could just iterate over enabledState.keys and remove their listeners unconditionally. That's what I meant. But if that sounds more complicated, I am also ok with keeping this as-is.\r\n\r\nThis of course only works if widget.actions.values doesn't include the same action twice....\r\n\r\n",
        "createdAt" : "2020-04-02T18:52:21Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "79c73705-a5fd-4fb7-893e-50155fda820c",
        "parentId" : "767c62f0-2b02-459a-9e8e-dc4752eb7f81",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Actually, your current implementation is a little more resilient to duplicated actions, so maybe just leave this as-is.",
        "createdAt" : "2020-04-02T18:56:36Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bc3b796a17c25612a6204aadd9cd3d592423dbe",
    "line" : 786,
    "diffHunk" : "@@ -1,1 +682,686 @@    // going to be transferred to the new one.\n    for (final Action<Intent> action in enabledState.keys) {\n      if (!foundActions.contains(action)) {\n        action.removeActionListener(_handleActionChanged);\n      }"
  },
  {
    "id" : "5df68478-6e4b-4782-a70c-e6c129e3599e",
    "prId" : 42940,
    "prUrl" : "https://github.com/flutter/flutter/pull/42940#pullrequestreview-386911993",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fef99e6a-225d-4c46-85af-389d1bb746c9",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: Can the docs above say something about the return type: If I implement my own action, what should I return here?",
        "createdAt" : "2020-04-02T18:20:29Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "ef8b351c-fd31-4505-8e51-49d1d2a7958a",
        "parentId" : "fef99e6a-225d-4c46-85af-389d1bb746c9",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes, I added a comment, and a small code sample.",
        "createdAt" : "2020-04-03T03:16:09Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bc3b796a17c25612a6204aadd9cd3d592423dbe",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +116,120 @@  /// ```\n  @protected\n  Object invoke(covariant T intent);\n\n  /// Register a callback to listen for changes to the state of this action."
  },
  {
    "id" : "0d87882f-fb2a-4f65-bca3-a636c4a27ead",
    "prId" : 42940,
    "prUrl" : "https://github.com/flutter/flutter/pull/42940#pullrequestreview-386912059",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3e57c1d-143c-46f1-b558-fdec3e5973d9",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Same here: maybe say something about the return type in the doc.",
        "createdAt" : "2020-04-02T18:25:36Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "5d15f290-7b60-4149-8025-21296ab93928",
        "parentId" : "f3e57c1d-143c-46f1-b558-fdec3e5973d9",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done.",
        "createdAt" : "2020-04-03T03:16:23Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bc3b796a17c25612a6204aadd9cd3d592423dbe",
    "line" : 348,
    "diffHunk" : "@@ -1,1 +320,324 @@  @protected\n  @override\n  Object invoke(covariant T intent, [BuildContext context]);\n}\n"
  },
  {
    "id" : "60d5e3b4-65f2-4f8b-900d-e176df910bcd",
    "prId" : 44631,
    "prUrl" : "https://github.com/flutter/flutter/pull/44631#pullrequestreview-322635418",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78927de7-2a37-45a5-9163-a0db9dc2781d",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "I think `task` here can just be a positional argument.",
        "createdAt" : "2019-11-25T22:41:32Z",
        "updatedAt" : "2019-12-02T18:10:26Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "af9bbad1-dfa3-4016-916a-255370144131",
        "parentId" : "78927de7-2a37-45a5-9163-a0db9dc2781d",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "The `_mayTriggerCallback` called in `didUpdateWidget` does not have a task, but an `oldWidget` instead.",
        "createdAt" : "2019-11-25T23:02:20Z",
        "updatedAt" : "2019-12-02T18:10:26Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      }
    ],
    "commit" : "73b7b75f76f65e55f3d0da5b31c262553b00a3ca",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +651,655 @@  // current widget (before doing `task`) otherwise. The new states are always\n  // collected from the current widget.\n  void _mayTriggerCallback({VoidCallback task, FocusableActionDetector oldWidget}) {\n    bool shouldShowHoverHighlight(FocusableActionDetector target) {\n      return _hovering && target.enabled && _canShowHighlight;"
  },
  {
    "id" : "d2103187-95ff-433e-92fa-cec11e8291fd",
    "prId" : 44631,
    "prUrl" : "https://github.com/flutter/flutter/pull/44631#pullrequestreview-322634705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "527ef48c-aa27-4136-8a4c-6a93ca1112bf",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "If the task is calling `setState`, isn't it possible that it won't actually execute the contents of the `setState` function arg right away? Although, I'm not sure anything needs to call `setState` in the task anymore, so it may be moot.",
        "createdAt" : "2019-11-25T22:49:35Z",
        "updatedAt" : "2019-12-02T18:10:26Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "e04d47be-88c8-45ed-af2a-fa7142f74c09",
        "parentId" : "527ef48c-aa27-4136-8a4c-6a93ca1112bf",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "I think according to the doc of `setState` the content is run synchronously.",
        "createdAt" : "2019-11-25T23:00:29Z",
        "updatedAt" : "2019-12-02T18:10:26Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      }
    ],
    "commit" : "73b7b75f76f65e55f3d0da5b31c262553b00a3ca",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +664,668 @@    final bool didShowFocusHighlight = shouldShowFocusHighlight(oldTarget);\n    if (task != null)\n      task();\n    final bool doShowHoverHighlight = shouldShowHoverHighlight(widget);\n    final bool doShowFocusHighlight = shouldShowFocusHighlight(widget);"
  },
  {
    "id" : "40705372-a0ce-42f4-9627-7f5cb613e19b",
    "prId" : 44867,
    "prUrl" : "https://github.com/flutter/flutter/pull/44867#pullrequestreview-317128283",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74201b6c-3bf2-40d1-8e65-93ed202bc6fd",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "I like the concept, but don't love the name `FocusableActionDetector`. However, as all the suggestions I could come up with are worse, perhaps I should just keep this to myself :).\r\n",
        "createdAt" : "2019-11-14T06:05:51Z",
        "updatedAt" : "2019-11-19T00:18:06Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "54fa519e-00d6-4774-8f8c-dabb8b6b9a9c",
        "parentId" : "74201b6c-3bf2-40d1-8e65-93ed202bc6fd",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yeah, I don't love the name either.  It's the best I could come up with, though: it has to do with focus, actions, shortcuts, and hover, and it doesn't have a visual representation. `FocusableShortcutActionsAndHoverDetector` seemed like a mouthful. :-)",
        "createdAt" : "2019-11-14T17:22:47Z",
        "updatedAt" : "2019-11-19T00:18:06Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "64ade3f5eea5323b0ba4bc260b85b7d3f262cfbc",
    "line" : 183,
    "diffHunk" : "@@ -1,1 +510,514 @@///\n/// It hosts its own [FocusNode] or uses [focusNode], if given.\nclass FocusableActionDetector extends StatefulWidget {\n  /// Create a const [FocusableActionDetector].\n  ///"
  },
  {
    "id" : "0394e3b7-72d4-40c0-a854-c76d80d00f00",
    "prId" : 44867,
    "prUrl" : "https://github.com/flutter/flutter/pull/44867#pullrequestreview-318523255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a631752e-23fe-4b03-aef5-5baf66c482a8",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "\"... can be used to give a control the required ...\"\r\n\r\nSomething seems to be missing here...",
        "createdAt" : "2019-11-18T18:02:51Z",
        "updatedAt" : "2019-11-19T00:18:06Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "64ade3f5eea5323b0ba4bc260b85b7d3f262cfbc",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +368,372 @@/// highlights.\n///\n/// This widget can be used to give a control the required detection modes for\n/// focus and hover handling. It is most often used when authoring a new control\n/// widget, and the new control should be enabled for keyboard traversal and"
  },
  {
    "id" : "f3f06a36-3707-4c32-a5d9-9cd2b5d8ef14",
    "prId" : 44867,
    "prUrl" : "https://github.com/flutter/flutter/pull/44867#pullrequestreview-318523255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79e4cc84-85c8-4bd5-9e3c-3fd4aa185a12",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: I believe we usually say \"Whether this widget is enabled or not\"",
        "createdAt" : "2019-11-18T18:04:13Z",
        "updatedAt" : "2019-11-19T00:18:06Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "64ade3f5eea5323b0ba4bc260b85b7d3f262cfbc",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +530,534 @@        super(key: key);\n\n  /// Is this widget enabled or not.\n  ///\n  /// If disabled, will not send any notifications needed to update highlight or"
  },
  {
    "id" : "0ca2edd1-b35c-40c4-8f11-d52d3585b965",
    "prId" : 44867,
    "prUrl" : "https://github.com/flutter/flutter/pull/44867#pullrequestreview-318523255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5ee6911-bde9-4964-b489-7266f5ab05a9",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This sentence may miss one or two \"it\" to be a complete sentence?",
        "createdAt" : "2019-11-18T18:04:45Z",
        "updatedAt" : "2019-11-19T00:18:06Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "fe7c50a1-0a9e-40cb-ba37-bb10d320be5b",
        "parentId" : "b5ee6911-bde9-4964-b489-7266f5ab05a9",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Same in the next paragraph? ",
        "createdAt" : "2019-11-18T18:05:09Z",
        "updatedAt" : "2019-11-19T00:18:06Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "64ade3f5eea5323b0ba4bc260b85b7d3f262cfbc",
    "line" : 205,
    "diffHunk" : "@@ -1,1 +532,536 @@  /// Is this widget enabled or not.\n  ///\n  /// If disabled, will not send any notifications needed to update highlight or\n  /// focus state, and will not define or respond to any actions or shortcuts.\n  ///"
  },
  {
    "id" : "03bb17f1-218b-43da-95e9-83861bde830b",
    "prId" : 44867,
    "prUrl" : "https://github.com/flutter/flutter/pull/44867#pullrequestreview-318523255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b8af3bf-66b4-4536-b698-0b9755249b73",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: maybe format this in multiple lines to make it more readable? Same below.",
        "createdAt" : "2019-11-18T18:10:08Z",
        "updatedAt" : "2019-11-19T00:18:06Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "64ade3f5eea5323b0ba4bc260b85b7d3f262cfbc",
    "line" : 289,
    "diffHunk" : "@@ -1,1 +616,620 @@    if (!_hovering) {\n      // TODO(gspencergoog): remove scheduleMicrotask once MouseRegion event timing has changed.\n      scheduleMicrotask(() { setState(() { _hovering = true; _handleShowHoverHighlight(); }); });\n    }\n  }"
  },
  {
    "id" : "feedd233-f6b7-44f6-9eb6-813fd3c92d1c",
    "prId" : 44867,
    "prUrl" : "https://github.com/flutter/flutter/pull/44867#pullrequestreview-318523255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0dd3f9f2-b264-42b8-89a6-040319d5f515",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Changing the shape of the widget tree (e.g. adding/removing a widget in the middle) is somewhat expansive. Is there a way to always include the Actions and Shortcuts widget, but have it \"disabled\" if its functionality is not required? ",
        "createdAt" : "2019-11-18T18:13:48Z",
        "updatedAt" : "2019-11-19T00:18:06Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "64ade3f5eea5323b0ba4bc260b85b7d3f262cfbc",
    "line" : 333,
    "diffHunk" : "@@ -1,1 +660,664 @@      ),\n    );\n    if (widget.enabled && widget.actions != null && widget.actions.isNotEmpty) {\n      child = Actions(actions: widget.actions, child: child);\n    }"
  },
  {
    "id" : "369f3b52-1557-45d5-b6ca-049b8e52fc1a",
    "prId" : 44867,
    "prUrl" : "https://github.com/flutter/flutter/pull/44867#pullrequestreview-318523255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fd78595-6075-4d61-922f-d679859923b7",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Can this link to something that explains what \"primary focus\" is?",
        "createdAt" : "2019-11-18T18:19:06Z",
        "updatedAt" : "2019-11-19T00:18:06Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "64ade3f5eea5323b0ba4bc260b85b7d3f262cfbc",
    "line" : 232,
    "diffHunk" : "@@ -1,1 +559,563 @@  /// A function that will be called when the focus changes.\n  ///\n  /// Called with true if the [focusNode] has primary focus.\n  final ValueChanged<bool> onFocusChange;\n"
  }
]