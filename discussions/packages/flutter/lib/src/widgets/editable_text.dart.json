[
  {
    "id" : "c26ef9f3-3625-44fa-a998-622f8b5442de",
    "prId" : 645,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a598157d-67d2-43ec-bc6c-0d889fba04fb",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This still leaks the number of characters. We could be slightly better by just drawing a rounded rectangle of the length that the text would be, or something.\n",
        "createdAt" : "2015-12-01T01:09:22Z",
        "updatedAt" : "2015-12-01T01:09:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ffd9f972-be63-4170-b7c2-bc2c5be99b8f",
        "parentId" : "a598157d-67d2-43ec-bc6c-0d889fba04fb",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "The normal thing for password fields is to show one bullet per character.  That way typing and deleting have good visual feedback.\n",
        "createdAt" : "2015-12-01T01:12:59Z",
        "updatedAt" : "2015-12-01T01:12:59Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "179d191e3ae6481da50b78f6431682d4a7d52648",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +286,290 @@    String text = value.text;\n    if (hideText)\n      text = new String.fromCharCodes(new List<int>.filled(text.length, 0x2022));\n    return new StyledTextSpan(style, <TextSpan>[\n      new PlainTextSpan(text.isEmpty ? _kZeroWidthSpace : text)"
  },
  {
    "id" : "dee94c9f-1a70-466a-bdf0-74a4c7037809",
    "prId" : 9119,
    "prUrl" : "https://github.com/flutter/flutter/pull/9119#pullrequestreview-30364663",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf6399bf-9881-4952-ae30-e42436e104b9",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "does this actually work?",
        "createdAt" : "2017-03-31T17:42:49Z",
        "updatedAt" : "2017-04-01T05:02:33Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "22c4b3b7-3089-42ed-b481-0a0b49616d8c",
        "parentId" : "cf6399bf-9881-4952-ae30-e42436e104b9",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "It does something, but not much.",
        "createdAt" : "2017-03-31T23:35:30Z",
        "updatedAt" : "2017-04-01T05:02:33Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "abd6da3d1ab5c0a5221dd9d1c2ab3f320cdde802",
    "line" : 375,
    "diffHunk" : "@@ -1,1 +353,357 @@  /// state or the \"off\" state). A complete cursor blink period is twice this\n  /// value (half on, half off).\n  @visibleForTesting\n  Duration get cursorBlinkInterval => _kCursorBlinkHalfPeriod;\n"
  },
  {
    "id" : "fad5459d-abff-4179-8b09-51b531612437",
    "prId" : 11067,
    "prUrl" : "https://github.com/flutter/flutter/pull/11067#pullrequestreview-47536723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "832439b2-749a-4945-8895-2418e5135ef7",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "The focusNode seems like another common cause where the mixin could do all the fiddly work for you.",
        "createdAt" : "2017-07-01T05:09:33Z",
        "updatedAt" : "2017-07-01T20:44:24Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "1d2c8f63-30d0-41a3-a4c9-a9db80c66a8a",
        "parentId" : "832439b2-749a-4945-8895-2418e5135ef7",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "There's not that much fiddly work. :-)",
        "createdAt" : "2017-07-01T20:41:14Z",
        "updatedAt" : "2017-07-01T20:44:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "328807ef06a3cadf289dfc059e7b154c3a698ffe",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +281,285 @@\n  @override\n  bool get wantKeepAlive => widget.focusNode.hasFocus;\n\n  // State lifecycle:"
  },
  {
    "id" : "30239776-3a18-4f38-8008-caa74dde932f",
    "prId" : 11830,
    "prUrl" : "https://github.com/flutter/flutter/pull/11830#pullrequestreview-59411047",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "735a058c-f933-447c-8106-7a3055d34d1f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "minor issue, feel free to ignore: consider `-= 1` rather than postfix `--`",
        "createdAt" : "2017-08-29T23:35:45Z",
        "updatedAt" : "2017-08-29T23:35:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "044b5ba84cab93cda6240c454566eb49cda0960f",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +532,536 @@    _showCursor.value = !_showCursor.value;\n    if (_obscureShowCharTicksPending > 0) {\n      setState(() { _obscureShowCharTicksPending--; });\n    }\n  }"
  },
  {
    "id" : "e390f2eb-d09c-4739-aea7-f9319da2b147",
    "prId" : 18291,
    "prUrl" : "https://github.com/flutter/flutter/pull/18291#pullrequestreview-128472401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97b97df4-b9a4-4d5b-b8c9-aa7562da7daf",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Couldn't something else do that, like rotating the screen, or a \"virtual\" safe area element (like the iOS bottom button) disappearing? I suppose we probably want this to happen in those cases too, however.",
        "createdAt" : "2018-06-13T01:47:04Z",
        "updatedAt" : "2018-06-13T01:47:41Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "8487fc37-f4c0-4355-9f8c-1f0579cc1e96",
        "parentId" : "97b97df4-b9a4-4d5b-b8c9-aa7562da7daf",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Yes, this will be triggered by the events you list as well. I'd argue that you'd still want to ensure that a focused textfield stays visible when any of those happen.",
        "createdAt" : "2018-06-13T16:56:33Z",
        "updatedAt" : "2018-06-13T16:56:33Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "73eb8341c4b52ec301e083091cfaaeb1ae6d377d",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +667,671 @@    _updateOrDisposeSelectionOverlayIfNeeded();\n    if (_hasFocus) {\n      // Listen for changing viewInsets, which indicates keyboard showing up.\n      WidgetsBinding.instance.addObserver(this);\n      _lastBottomViewInset = ui.window.viewInsets.bottom;"
  },
  {
    "id" : "000c5233-8b0d-43a3-a992-18ed34483121",
    "prId" : 18855,
    "prUrl" : "https://github.com/flutter/flutter/pull/18855#pullrequestreview-132253934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3134de07-99e3-4342-8725-6fe4f1e41a3d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "somewhere (maybe the class documentation) we should have a section that talks about the event lifecycle (e.g. that onEditingComplete happens before onSubmitted but after onChanged, or whatever)",
        "createdAt" : "2018-06-26T22:54:02Z",
        "updatedAt" : "2018-06-29T23:47:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "6f6097fa-2e6e-495a-b03d-512608040975",
        "parentId" : "3134de07-99e3-4342-8725-6fe4f1e41a3d",
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "I added a few lines to the class docs.  Let me know if you have any comments.",
        "createdAt" : "2018-06-27T00:57:21Z",
        "updatedAt" : "2018-06-29T23:47:29Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2cb7bbd9ab930ab99534169f2c7dddf55754199",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +311,315 @@\n  /// The type of keyboard to use for editing the text.\n  final TextInputType keyboardType;\n\n  /// The type of action button to use with the soft keyboard."
  },
  {
    "id" : "7102d99b-53a3-4532-a2a5-64e94b575078",
    "prId" : 18855,
    "prUrl" : "https://github.com/flutter/flutter/pull/18855#pullrequestreview-132253897",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2b2ad72-f2a3-485c-8e5d-bf6a25a53fe2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this seems to be missing the constructor argument",
        "createdAt" : "2018-06-26T22:54:25Z",
        "updatedAt" : "2018-06-29T23:47:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a547acf2-9e97-447a-b902-39b7c9d4f836",
        "parentId" : "a2b2ad72-f2a3-485c-8e5d-bf6a25a53fe2",
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "Fixed",
        "createdAt" : "2018-06-27T00:57:05Z",
        "updatedAt" : "2018-06-29T23:47:29Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2cb7bbd9ab930ab99534169f2c7dddf55754199",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +335,339 @@  ///\n  /// Providing [onEditingComplete] prevents the aforementioned default behavior.\n  final VoidCallback onEditingComplete;\n\n  /// Called when the user indicates that they are done editing the text in the field."
  }
]