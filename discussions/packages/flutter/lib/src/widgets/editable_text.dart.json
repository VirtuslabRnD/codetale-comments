[
  {
    "id" : "c26ef9f3-3625-44fa-a998-622f8b5442de",
    "prId" : 645,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a598157d-67d2-43ec-bc6c-0d889fba04fb",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This still leaks the number of characters. We could be slightly better by just drawing a rounded rectangle of the length that the text would be, or something.\n",
        "createdAt" : "2015-12-01T01:09:22Z",
        "updatedAt" : "2015-12-01T01:09:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ffd9f972-be63-4170-b7c2-bc2c5be99b8f",
        "parentId" : "a598157d-67d2-43ec-bc6c-0d889fba04fb",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "The normal thing for password fields is to show one bullet per character.  That way typing and deleting have good visual feedback.\n",
        "createdAt" : "2015-12-01T01:12:59Z",
        "updatedAt" : "2015-12-01T01:12:59Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "179d191e3ae6481da50b78f6431682d4a7d52648",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +286,290 @@    String text = value.text;\n    if (hideText)\n      text = new String.fromCharCodes(new List<int>.filled(text.length, 0x2022));\n    return new StyledTextSpan(style, <TextSpan>[\n      new PlainTextSpan(text.isEmpty ? _kZeroWidthSpace : text)"
  },
  {
    "id" : "dee94c9f-1a70-466a-bdf0-74a4c7037809",
    "prId" : 9119,
    "prUrl" : "https://github.com/flutter/flutter/pull/9119#pullrequestreview-30364663",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf6399bf-9881-4952-ae30-e42436e104b9",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "does this actually work?",
        "createdAt" : "2017-03-31T17:42:49Z",
        "updatedAt" : "2017-04-01T05:02:33Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "22c4b3b7-3089-42ed-b481-0a0b49616d8c",
        "parentId" : "cf6399bf-9881-4952-ae30-e42436e104b9",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "It does something, but not much.",
        "createdAt" : "2017-03-31T23:35:30Z",
        "updatedAt" : "2017-04-01T05:02:33Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "abd6da3d1ab5c0a5221dd9d1c2ab3f320cdde802",
    "line" : 375,
    "diffHunk" : "@@ -1,1 +353,357 @@  /// state or the \"off\" state). A complete cursor blink period is twice this\n  /// value (half on, half off).\n  @visibleForTesting\n  Duration get cursorBlinkInterval => _kCursorBlinkHalfPeriod;\n"
  },
  {
    "id" : "fad5459d-abff-4179-8b09-51b531612437",
    "prId" : 11067,
    "prUrl" : "https://github.com/flutter/flutter/pull/11067#pullrequestreview-47536723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "832439b2-749a-4945-8895-2418e5135ef7",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "The focusNode seems like another common cause where the mixin could do all the fiddly work for you.",
        "createdAt" : "2017-07-01T05:09:33Z",
        "updatedAt" : "2017-07-01T20:44:24Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "1d2c8f63-30d0-41a3-a4c9-a9db80c66a8a",
        "parentId" : "832439b2-749a-4945-8895-2418e5135ef7",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "There's not that much fiddly work. :-)",
        "createdAt" : "2017-07-01T20:41:14Z",
        "updatedAt" : "2017-07-01T20:44:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "328807ef06a3cadf289dfc059e7b154c3a698ffe",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +281,285 @@\n  @override\n  bool get wantKeepAlive => widget.focusNode.hasFocus;\n\n  // State lifecycle:"
  },
  {
    "id" : "30239776-3a18-4f38-8008-caa74dde932f",
    "prId" : 11830,
    "prUrl" : "https://github.com/flutter/flutter/pull/11830#pullrequestreview-59411047",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "735a058c-f933-447c-8106-7a3055d34d1f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "minor issue, feel free to ignore: consider `-= 1` rather than postfix `--`",
        "createdAt" : "2017-08-29T23:35:45Z",
        "updatedAt" : "2017-08-29T23:35:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "044b5ba84cab93cda6240c454566eb49cda0960f",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +532,536 @@    _showCursor.value = !_showCursor.value;\n    if (_obscureShowCharTicksPending > 0) {\n      setState(() { _obscureShowCharTicksPending--; });\n    }\n  }"
  }
]