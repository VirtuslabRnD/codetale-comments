[
  {
    "id" : "ee099ce5-a7a8-4f30-8970-aa5757c656d1",
    "prId" : 19565,
    "prUrl" : "https://github.com/flutter/flutter/pull/19565#pullrequestreview-139189300",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72c8f907-a91b-474a-8c42-8cf18672d101",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Should we explain that an embedded android view behaves just like a normal Flutter widget with respect to painting and input. And what about layout? I imagine that we need to explain that the parent has to constrain the size of its AndroidView.",
        "createdAt" : "2018-07-20T18:32:14Z",
        "updatedAt" : "2018-07-20T19:52:41Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "2a640f39-f404-444d-b750-a7f90608023b",
        "parentId" : "72c8f907-a91b-474a-8c42-8cf18672d101",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Added:\r\n```dart\r\n///  The embedded Android view is painted just like any other Flutter widget and transformations\r\n/// apply to it as well.\r\n```\r\nAnything else to add here?\r\n\r\nI'll leave the comment about input to the PR where I add input support.",
        "createdAt" : "2018-07-20T19:30:38Z",
        "updatedAt" : "2018-07-20T19:52:41Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "55fbf386-84b9-49a1-b57c-b16233660bc8",
        "parentId" : "72c8f907-a91b-474a-8c42-8cf18672d101",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Looks good",
        "createdAt" : "2018-07-20T19:49:41Z",
        "updatedAt" : "2018-07-20T19:52:41Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cff87a530f4f68e60f4805590439e0175054a45",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +11,15 @@/// Embeds an Android view in the Widget hierarchy.\n///\n/// Embedding Android views is an expensive operation and should be avoided when a Flutter\n/// equivalent is possible.\n///"
  },
  {
    "id" : "d51c3fca-87f5-4728-80be-c60137938e7c",
    "prId" : 19565,
    "prUrl" : "https://github.com/flutter/flutter/pull/19565#pullrequestreview-139184146",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f29859d7-7681-455f-8870-b296784895ac",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Are there any predefined view types?",
        "createdAt" : "2018-07-20T18:34:56Z",
        "updatedAt" : "2018-07-20T19:52:41Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "826ea155-2d1b-4ed2-8ae2-c0c5f650114d",
        "parentId" : "f29859d7-7681-455f-8870-b296784895ac",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "there aren't... we're going to add them in plugins.",
        "createdAt" : "2018-07-20T19:31:27Z",
        "updatedAt" : "2018-07-20T19:52:41Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cff87a530f4f68e60f4805590439e0175054a45",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +52,56 @@  /// for this type must have been registered.\n  ///\n  /// See also: [AndroidView] for an example of registering a platform view factory.\n  final String viewType;\n"
  },
  {
    "id" : "1af25c2d-ca82-4bce-b043-796f22856f88",
    "prId" : 21954,
    "prUrl" : "https://github.com/flutter/flutter/pull/21954#pullrequestreview-170472737",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae931798-537b-4dbd-9c04-7516f8583953",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I don't know @amirh 's full plans for this, but maybe we shouldn't change this to `const` in case he needs to add behavior to the constructor.",
        "createdAt" : "2018-10-01T18:18:59Z",
        "updatedAt" : "2018-11-02T11:17:21Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "46eb2444-e1c0-445e-9740-e17d537b2161",
        "parentId" : "ae931798-537b-4dbd-9c04-7516f8583953",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "Ack. I'll wait for his feedback before merging.",
        "createdAt" : "2018-10-01T19:25:34Z",
        "updatedAt" : "2018-11-02T11:17:21Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "304088fb-5752-4240-a787-6c52edd16f7d",
        "parentId" : "ae931798-537b-4dbd-9c04-7516f8583953",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "He's OOO for another week I believe",
        "createdAt" : "2018-10-01T19:56:07Z",
        "updatedAt" : "2018-11-02T11:17:21Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "4849c81e-1957-483c-916e-9cac99eb7818",
        "parentId" : "ae931798-537b-4dbd-9c04-7516f8583953",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "Thanks for the info.",
        "createdAt" : "2018-10-01T20:27:08Z",
        "updatedAt" : "2018-11-02T11:17:21Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "fd62edca-fbe3-4fa2-ae1b-7329d33dca4b",
        "parentId" : "ae931798-537b-4dbd-9c04-7516f8583953",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "ping @amirh ",
        "createdAt" : "2018-10-18T08:14:31Z",
        "updatedAt" : "2018-11-02T11:17:21Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "96fdf9da-b72d-4db0-a060-771c790e89cc",
        "parentId" : "ae931798-537b-4dbd-9c04-7516f8583953",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Sorry for the delayed response!\r\nShould be safe to make this const, thanks!",
        "createdAt" : "2018-10-31T21:06:39Z",
        "updatedAt" : "2018-11-02T11:17:21Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3ba56f1733b082904882fab42b67607b41f7e20",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +59,63 @@  /// If `creationParams` is not null then `creationParamsCodec` must not be null.\n  /// {@endtemplate}\n  const AndroidView({\n    Key key,\n    @required this.viewType,"
  },
  {
    "id" : "6e2ec02f-5016-4db6-be3c-e69d1aecff04",
    "prId" : 23412,
    "prUrl" : "https://github.com/flutter/flutter/pull/23412#pullrequestreview-168006816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c54bd015-281f-4d6c-b688-331e5c81373a",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Describe the mechanism a bit and compare/contrast with any behavioral caveats vs android view too",
        "createdAt" : "2018-10-24T00:18:27Z",
        "updatedAt" : "2018-10-31T03:03:44Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "df540fd2-a06c-4db7-9910-68adff7f4f90",
        "parentId" : "c54bd015-281f-4d6c-b688-331e5c81373a",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Added a TODO, there's going to be some churn in the way it works with the incremental progress on the engine side, I'll describe it here once it settled.",
        "createdAt" : "2018-10-24T17:26:11Z",
        "updatedAt" : "2018-10-31T03:03:44Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "377482d8e8105b07b178979c923513d27275da98",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +179,183 @@/// Embedding iOS views is an expensive operation and should be avoided when a Flutter\n/// equivalent is possible.\n///\n/// {@macro flutter.widgets.platformViews.layout}\n///"
  },
  {
    "id" : "6a03f083-79b3-4966-aac7-5b7438092797",
    "prId" : 23412,
    "prUrl" : "https://github.com/flutter/flutter/pull/23412#pullrequestreview-168006816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b90de2db-d189-4ac5-9b67-bc3eba168a43",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Should we allow for a custom specifiable placeholder for android and uikitview?",
        "createdAt" : "2018-10-24T00:22:50Z",
        "updatedAt" : "2018-10-31T03:03:44Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "149a4e55-bc52-46e1-ae25-f7b0741fd47b",
        "parentId" : "b90de2db-d189-4ac5-9b67-bc3eba168a43",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "That's probably useful, though I'd keep it for a future PR, this one is already doing too many things.",
        "createdAt" : "2018-10-24T16:38:21Z",
        "updatedAt" : "2018-10-31T03:03:44Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "377482d8e8105b07b178979c923513d27275da98",
    "line" : 161,
    "diffHunk" : "@@ -1,1 +313,317 @@  Widget build(BuildContext context) {\n    if (_controller == null) {\n      return const SizedBox.expand();\n    }\n    return _UiKitPlatformView("
  },
  {
    "id" : "713dd348-c01f-4a93-8e32-775d79330dc0",
    "prId" : 23412,
    "prUrl" : "https://github.com/flutter/flutter/pull/23412#pullrequestreview-168006816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95c73ec2-83e8-43f4-aa6b-8817e0152c48",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I think the convention is calling these XRenderObjectWidget (if you global search for extends LeafRenderObjectWidget)",
        "createdAt" : "2018-10-24T00:27:21Z",
        "updatedAt" : "2018-10-31T03:03:44Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "48bcd15a-dcd1-4535-a21b-fe7b7f368130",
        "parentId" : "95c73ec2-83e8-43f4-aa6b-8817e0152c48",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Doesn't seem to be a convention...\r\n\r\n```\r\n$ git grep \"extends LeafRenderObject\" | wc -l\r\n      23\r\n$ git grep \"RenderObjectWidget extends LeafRenderObject\" | wc -l\r\n       6\r\n$ git grep \"extends LeafRenderObject\"\r\n... \r\nlib/src/widgets/basic.dart:class RichText extends LeafRenderObjectWidget {\r\nlib/src/widgets/basic.dart:class RawImage extends LeafRenderObjectWidget {\r\nlib/src/widgets/basic.dart:class WidgetToRenderBoxAdapter extends LeafRenderObjectWidget {\r\nlib/src/widgets/editable_text.dart:class _Editable extends LeafRenderObjectWidget {\r\nlib/src/widgets/framework.dart:class ErrorWidget extends LeafRenderObjectWidget {\r\nlib/src/widgets/performance_overlay.dart:class PerformanceOverlay extends LeafRenderObjectWidget {\r\n...\r\n```",
        "createdAt" : "2018-10-24T16:44:28Z",
        "updatedAt" : "2018-10-31T03:03:44Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "377482d8e8105b07b178979c923513d27275da98",
    "line" : 248,
    "diffHunk" : "@@ -1,1 +423,427 @@}\n\nclass _UiKitPlatformView extends LeafRenderObjectWidget {\n  const _UiKitPlatformView({\n    Key key,"
  },
  {
    "id" : "a9ff4d81-7e26-43cd-85f0-5deb386a7b74",
    "prId" : 23412,
    "prUrl" : "https://github.com/flutter/flutter/pull/23412#pullrequestreview-168042178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "043d2c17-7bca-402a-98df-6b2fbac710a3",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "since this is async, you might get disposed before initUiKitView returns. You should check `mounted` is true here and return early if it is not.",
        "createdAt" : "2018-10-24T17:26:53Z",
        "updatedAt" : "2018-10-31T03:03:44Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c3423528-1c2c-4a2c-952f-9e55d072d380",
        "parentId" : "043d2c17-7bca-402a-98df-6b2fbac710a3",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Good catch!\r\nFixed and added a unit test.",
        "createdAt" : "2018-10-24T17:58:42Z",
        "updatedAt" : "2018-10-31T03:03:44Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "377482d8e8105b07b178979c923513d27275da98",
    "line" : 233,
    "diffHunk" : "@@ -1,1 +385,389 @@      return;\n    }\n    if (widget.onPlatformViewCreated != null) {\n      widget.onPlatformViewCreated(_id);\n    }"
  },
  {
    "id" : "edf62917-d52c-4771-8ba2-8723fe08911d",
    "prId" : 24027,
    "prUrl" : "https://github.com/flutter/flutter/pull/24027#pullrequestreview-173072220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22ab380a-19c9-4b51-bf45-bebc8516ea5d",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "The template says \"Android\" in a bunch of places",
        "createdAt" : "2018-11-08T00:56:14Z",
        "updatedAt" : "2018-11-08T17:50:18Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "08f0d36e-ae8f-4908-a4dc-f4deae2b033d",
        "parentId" : "22ab380a-19c9-4b51-bf45-bebc8516ea5d",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "fixed",
        "createdAt" : "2018-11-08T17:38:39Z",
        "updatedAt" : "2018-11-08T17:50:18Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "cad8bba8121460d3117398dda51abc132a43c162",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +242,246 @@  /// Which gestures should be forwarded to the UIKit view.\n  ///\n  /// {@macro flutter.widgets.platformViews.gestureRecognizersDescHead}\n  ///\n  /// For example, with the following setup vertical drags will not be dispatched to the UIKit"
  },
  {
    "id" : "51be0f0f-5823-4927-bd2b-9c41fb724f9d",
    "prId" : 24027,
    "prUrl" : "https://github.com/flutter/flutter/pull/24027#pullrequestreview-173072220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d82f4d59-f7f0-4461-84ab-0579c5c91c5d",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I wonder why not use the pattern used in RawGestureDetector with `Map<Type, GestureRecognizerFactory> gestures`? Then you can avoid that check above where you check that the set length of the types is the same as the set length. Is it because of OneSequenceGestureRecognizer and teams?",
        "createdAt" : "2018-11-08T00:59:24Z",
        "updatedAt" : "2018-11-08T17:50:18Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "4aa0dc64-6f6e-41cd-86a6-428811c94702",
        "parentId" : "d82f4d59-f7f0-4461-84ab-0579c5c91c5d",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "I feel like specifying a `Map<Type, GestureRecognizerFactory>` is pretty inconvenient as the highest level API surface. RawGestureDetector isn't likely to be used frequently by app developers, where this thing will be specified directly by app developers.\r\nI plan to eventually add some pre made factories to the framework so using this could look something like:\r\n\r\n```\r\ngestureRecognizers: <Factory<OneSequenceGestureRecognizer>> [\r\n  VerticalDragRecognizerFactory(),\r\n  ScaleRecognizerFactory(),\r\n],\r\n```",
        "createdAt" : "2018-11-08T17:43:38Z",
        "updatedAt" : "2018-11-08T17:50:18Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "cad8bba8121460d3117398dda51abc132a43c162",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +264,268 @@  ///     child: UiKitView(\n  ///       viewType: 'webview',\n  ///       gestureRecognizers: <Factory<OneSequenceGestureRecognizer>>[\n  ///         new Factory<OneSequenceGestureRecognizer>(\n  ///           () => new EagerGestureRecognizer(),"
  },
  {
    "id" : "57339055-4c17-44ca-a647-68f58f93c02e",
    "prId" : 36955,
    "prUrl" : "https://github.com/flutter/flutter/pull/36955#pullrequestreview-268681862",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c639179-7032-4860-8c5e-35cb1b825fab",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "```dart\r\n/// The controller for the platform view integrated by this [PlatformViewSurface].\r\n///\r\n/// [PlatformViewController] is used for dispatching touch events to the platform view.\r\n/// [PlatformViewController.viewId] identifies the platform view whose contents are painted by this widget.\r\n```",
        "createdAt" : "2019-07-30T22:11:31Z",
        "updatedAt" : "2019-08-01T23:24:40Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc061166c801ae6a038b970b8286c974ccb809bd",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +610,614 @@  /// [PlatformViewController] is used for dispatching touch events to the platform view.\n  /// [PlatformViewController.viewId] identifies the platform view whose contents are painted by this widget.\n  final PlatformViewController controller;\n\n  @override"
  },
  {
    "id" : "f3a0b127-b7ed-4ca9-8b5b-4b62df81e7fe",
    "prId" : 37703,
    "prUrl" : "https://github.com/flutter/flutter/pull/37703#pullrequestreview-274987327",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f4ce5d4-de53-4435-b288-fb74f9bef134",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Add  a key",
        "createdAt" : "2019-08-13T18:09:03Z",
        "updatedAt" : "2019-08-15T01:07:24Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "6594d447-a51c-4478-8bb6-9549f35386c0",
        "parentId" : "3f4ce5d4-de53-4435-b288-fb74f9bef134",
        "authorId" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "body" : "done",
        "createdAt" : "2019-08-14T16:19:18Z",
        "updatedAt" : "2019-08-15T01:07:24Z",
        "lastEditedBy" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "tags" : [
        ]
      }
    ],
    "commit" : "a42a0b8b354e5aae53fce1dd4319dcb90a4e9399",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +658,662 @@  const PlatformViewLink({\n    Key key,\n    @required PlatformViewSurfaceFactory surfaceFactory,\n    @required CreatePlatformViewController createPlatformViewController,\n    }) : assert(surfaceFactory != null),"
  },
  {
    "id" : "c309c58f-1a4c-4189-96d5-18e65cb5e18c",
    "prId" : 37703,
    "prUrl" : "https://github.com/flutter/flutter/pull/37703#pullrequestreview-274987327",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77cf06d3-757b-47bd-9e92-b850e5dc80d0",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Document what happens when the widget is rebuild with a different create callback or a different surfaceFactory",
        "createdAt" : "2019-08-13T18:13:08Z",
        "updatedAt" : "2019-08-15T01:07:24Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "a243c1f3-ec60-4f65-a414-a89d63f6208e",
        "parentId" : "77cf06d3-757b-47bd-9e92-b850e5dc80d0",
        "authorId" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "body" : "done, with the change that made sure `PlatformViewSurface` only created once.",
        "createdAt" : "2019-08-14T21:22:07Z",
        "updatedAt" : "2019-08-15T01:07:24Z",
        "lastEditedBy" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "tags" : [
        ]
      }
    ],
    "commit" : "a42a0b8b354e5aae53fce1dd4319dcb90a4e9399",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +647,651 @@/// The `surfaceFactory` and the `createPlatformViewController` only take affect when the state of this widget is initialized.\n/// If the widget is rebuilt without losing its state, `surfaceFactory` and `createPlatformViewController` are ignored.\nclass PlatformViewLink extends StatefulWidget {\n\n  /// Construct a [PlatformViewLink] widget."
  },
  {
    "id" : "26419a59-f02a-45b5-a4a7-0a1ecb460709",
    "prId" : 37819,
    "prUrl" : "https://github.com/flutter/flutter/pull/37819#pullrequestreview-281147201",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d9c40ac-a903-46de-9e2c-d2b5397d7ade",
        "parentId" : null,
        "authorId" : "8016b663-618b-4f42-8078-d611196c9f9c",
        "body" : "Says, that PlatformViewFactory must be registered, but how??",
        "createdAt" : "2019-08-23T13:19:35Z",
        "updatedAt" : "2019-08-29T18:05:51Z",
        "lastEditedBy" : "8016b663-618b-4f42-8078-d611196c9f9c",
        "tags" : [
        ]
      },
      {
        "id" : "718fbfbc-e477-486d-a2fb-1219254351f6",
        "parentId" : "5d9c40ac-a903-46de-9e2c-d2b5397d7ade",
        "authorId" : "6822f64d-7a41-4f68-9bd4-ee5cf5012e0c",
        "body" : "There's an example in the flutter_web fork here https://github.com/flutter/flutter_web/blob/master/examples/html_platform_view/lib/main.dart and it looks like the corresponding code in the main branch is in the engine at https://github.com/flutter/engine/blob/master/lib/web_ui/lib/src/engine/platform_views.dart\r\n\r\nWhich you would have to register in a plugin? An example of which for ios is in the webview_flutter plugin here https://github.com/flutter/plugins/blob/560694c5b58eed8a46e57b1dd61e701591209340/packages/webview_flutter/android/src/main/java/io/flutter/plugins/webviewflutter/WebViewFlutterPlugin.java\r\n\r\nNot sure what this plugin registration would look like on the web platform though?",
        "createdAt" : "2019-08-23T16:49:33Z",
        "updatedAt" : "2019-08-29T18:05:51Z",
        "lastEditedBy" : "6822f64d-7a41-4f68-9bd4-ee5cf5012e0c",
        "tags" : [
        ]
      },
      {
        "id" : "1877b455-0e4f-4adc-85f9-91e15aa45d40",
        "parentId" : "5d9c40ac-a903-46de-9e2c-d2b5397d7ade",
        "authorId" : "133c62ea-d42e-4043-b65d-3bdcce7666a3",
        "body" : "Stay tuned. Once this lands I will open PRs for automatically registering plugins on web. The idea is that in your plugin class's `registerWith` method, you will register platform view factories.",
        "createdAt" : "2019-08-28T23:04:19Z",
        "updatedAt" : "2019-08-29T18:05:51Z",
        "lastEditedBy" : "133c62ea-d42e-4043-b65d-3bdcce7666a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e98847445bed5a98de1a54fb3fd83f3dc4c3013",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +343,347 @@  /// The unique identifier for the HTML view type to be embedded by this widget.\n  ///\n  /// A PlatformViewFactory for this type must have been registered.\n  final String viewType;\n"
  },
  {
    "id" : "7c4585d5-832e-4d93-9b75-9bb8f672d107",
    "prId" : 37819,
    "prUrl" : "https://github.com/flutter/flutter/pull/37819#pullrequestreview-281590737",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18d882d4-e4a3-4a5f-8eb2-90871ae07522",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "I'm not familiar with the engine side, are we applying all mutations (transforms, clips, opacity, filters) to the html platform views?",
        "createdAt" : "2019-08-29T16:27:21Z",
        "updatedAt" : "2019-08-29T18:05:51Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "dabb6305-570e-442d-ae1e-0547a0fe7002",
        "parentId" : "18d882d4-e4a3-4a5f-8eb2-90871ae07522",
        "authorId" : "133c62ea-d42e-4043-b65d-3bdcce7666a3",
        "body" : "Yes. On the engine side we construct a scene as a tree of DOM nodes, so for example a TransformLayer will be represented in the scene as a `<div>` with a transform applied.",
        "createdAt" : "2019-08-29T16:51:03Z",
        "updatedAt" : "2019-08-29T18:05:51Z",
        "lastEditedBy" : "133c62ea-d42e-4043-b65d-3bdcce7666a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e98847445bed5a98de1a54fb3fd83f3dc4c3013",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +305,309 @@/// Flutter equivalent is possible.\n///\n/// The embedded HTML is painted just like any other Flutter widget and\n/// transformations apply to it as well. This widget should only be used in\n/// Flutter Web."
  },
  {
    "id" : "852adc36-c556-40c1-ad54-e88113be51d7",
    "prId" : 37819,
    "prUrl" : "https://github.com/flutter/flutter/pull/37819#pullrequestreview-281631330",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0e647aa-1123-4221-88e0-4e6c1c5daee7",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Do we have a good way to assert that we're running on Flutter Web?\r\nI can imagine weird things happening if this is used on iOS...",
        "createdAt" : "2019-08-29T17:01:23Z",
        "updatedAt" : "2019-08-29T18:05:51Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "df5af585-c35f-4830-9f66-576576e9f0c4",
        "parentId" : "d0e647aa-1123-4221-88e0-4e6c1c5daee7",
        "authorId" : "133c62ea-d42e-4043-b65d-3bdcce7666a3",
        "body" : "Added an assert on `kIsWeb` (from `package:flutter/foundation.dart`)",
        "createdAt" : "2019-08-29T17:04:50Z",
        "updatedAt" : "2019-08-29T18:05:51Z",
        "lastEditedBy" : "133c62ea-d42e-4043-b65d-3bdcce7666a3",
        "tags" : [
        ]
      },
      {
        "id" : "a67521ac-37f4-479e-9ddf-c7f34ce3d735",
        "parentId" : "d0e647aa-1123-4221-88e0-4e6c1c5daee7",
        "authorId" : "133c62ea-d42e-4043-b65d-3bdcce7666a3",
        "body" : "Actually, adding an assert on `kIsWeb` in the constructor causes the tests to fail. Would it be enough to `debugPrint` a warning in the `build()` method when not running on web (adding a body in the constructor would make `HtmlView` no longer `const`)",
        "createdAt" : "2019-08-29T17:15:20Z",
        "updatedAt" : "2019-08-29T18:05:51Z",
        "lastEditedBy" : "133c62ea-d42e-4043-b65d-3bdcce7666a3",
        "tags" : [
        ]
      },
      {
        "id" : "9ea4d446-75db-4027-a201-42c35bceb8a9",
        "parentId" : "d0e647aa-1123-4221-88e0-4e6c1c5daee7",
        "authorId" : "8016b663-618b-4f42-8078-d611196c9f9c",
        "body" : "There is `kIsWeb` somewhere. And also `identical(0,0.0)`",
        "createdAt" : "2019-08-29T17:16:54Z",
        "updatedAt" : "2019-08-29T18:05:51Z",
        "lastEditedBy" : "8016b663-618b-4f42-8078-d611196c9f9c",
        "tags" : [
        ]
      },
      {
        "id" : "dc08d1b7-ccbf-4695-816c-500001c15a2b",
        "parentId" : "d0e647aa-1123-4221-88e0-4e6c1c5daee7",
        "authorId" : "133c62ea-d42e-4043-b65d-3bdcce7666a3",
        "body" : "I kept the assert and moved the tests to a `@TestOn('chrome')` file.",
        "createdAt" : "2019-08-29T18:06:24Z",
        "updatedAt" : "2019-08-29T18:06:24Z",
        "lastEditedBy" : "133c62ea-d42e-4043-b65d-3bdcce7666a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e98847445bed5a98de1a54fb3fd83f3dc4c3013",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +337,341 @@    Key key,\n    @required this.viewType,\n  }) : assert(viewType != null),\n       assert(kIsWeb, 'HtmlElementView is only available on Flutter Web.'),\n       super(key: key);"
  },
  {
    "id" : "4d9644e2-98bd-4b6a-876f-19cc5cf78ad4",
    "prId" : 38643,
    "prUrl" : "https://github.com/flutter/flutter/pull/38643#pullrequestreview-278070177",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "806f440d-8257-421c-b03d-f79dada39d89",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Let's set `_controller` to null after calling dispose, to make sure we're not accidentally doing this on a disposed controller.",
        "createdAt" : "2019-08-21T20:23:01Z",
        "updatedAt" : "2019-08-21T22:47:25Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "66ae3b7d-440d-4f0e-9945-7327ed798e3b",
        "parentId" : "806f440d-8257-421c-b03d-f79dada39d89",
        "authorId" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "body" : "done! Going to merge on green. Thanks for the quick turnaround.",
        "createdAt" : "2019-08-21T21:00:12Z",
        "updatedAt" : "2019-08-21T22:47:25Z",
        "lastEditedBy" : "6e6315eb-7437-4406-864a-398c570dcd91",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6b86a67a4d5fc6488883b4fffb2dbefaafef506",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +725,729 @@  void _handleFrameworkFocusChanged(bool isFocused) {\n    if (!isFocused) {\n      _controller?.clearFocus();\n    }\n  }"
  }
]