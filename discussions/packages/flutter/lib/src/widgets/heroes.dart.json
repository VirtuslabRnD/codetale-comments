[
  {
    "id" : "45a44f1a-664c-43cc-9bae-9fe356640640",
    "prId" : 741,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35d41543-70bd-4e88-8156-d8fc070b77f7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "please move the hero controller to this file in a separate patch so that this is easier to review\n",
        "createdAt" : "2015-12-04T20:53:30Z",
        "updatedAt" : "2015-12-04T22:26:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "30d755a0-348c-4564-9997-9b254ba52f4a",
        "parentId" : "35d41543-70bd-4e88-8156-d8fc070b77f7",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you can move pageroute in that patch too\n",
        "createdAt" : "2015-12-04T20:54:14Z",
        "updatedAt" : "2015-12-04T22:26:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c253ca627b96392083542f989ca0b9b078720cf1",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +415,419 @@  String toString() => '$_heroes';\n}\n\nclass HeroController extends NavigatorObserver {\n  HeroController() {"
  },
  {
    "id" : "10816b42-100f-40b5-820c-0a4b40067f35",
    "prId" : 5394,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d45d151-e14e-461a-a9c9-69c9f9ba869b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i assume from.sourceStates itself cannot be null at this point?\n",
        "createdAt" : "2016-08-15T18:23:13Z",
        "updatedAt" : "2016-08-15T18:23:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "db642634-e100-45f0-9a10-c1d74a767676",
        "parentId" : "5d45d151-e14e-461a-a9c9-69c9f9ba869b",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I assumed that was true, since the next line is `sourceStates.remove()`\n",
        "createdAt" : "2016-08-15T18:35:22Z",
        "updatedAt" : "2016-08-15T18:35:22Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "586db083-4d58-4c37-8b75-89c1f2e5cda1",
        "parentId" : "5d45d151-e14e-461a-a9c9-69c9f9ba869b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "k\n",
        "createdAt" : "2016-08-15T19:02:02Z",
        "updatedAt" : "2016-08-15T19:02:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad5e59365195a1984f1297940644b4b252edf5a0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +388,392 @@      assert(to == null || to.currentTurns.floor() == to.currentTurns);\n      HeroState targetState = to != null ? to.sourceStates.elementAt(0) : null;\n      Set<HeroState> sourceStates = from?.sourceStates ?? new HashSet<HeroState>();\n      sourceStates.remove(targetState);\n      Rect sourceRect = from?.currentRect ?? to.currentRect.center & Size.zero;"
  },
  {
    "id" : "12c6ed37-9443-40f1-a659-5bfee9c49f4c",
    "prId" : 5512,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16ae4f29-c478-430f-8d38-b951b48659f0",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "fwiw, i think we'll find that what we actually want is to categorise heroes into those that want to participate during one of these gestures and ones that don't. but that can wait. \n",
        "createdAt" : "2016-08-23T22:53:45Z",
        "updatedAt" : "2016-08-25T18:05:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "75706ab3-036e-4e96-8a43-1b7347214c12",
        "parentId" : "16ae4f29-c478-430f-8d38-b951b48659f0",
        "authorId" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "body" : "Agreed.\n",
        "createdAt" : "2016-08-24T17:55:25Z",
        "updatedAt" : "2016-08-25T18:05:01Z",
        "lastEditedBy" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfaf7c9bf268d8b0ad6110f4374325a9ac3a31d1",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +482,486 @@\n  void _checkForHeroQuest() {\n    if (_from != null && _to != null && _from != _to && _questsEnabled) {\n      _to.offstage = _to.animation.status != AnimationStatus.completed;\n      WidgetsBinding.instance.addPostFrameCallback(_updateQuest);"
  },
  {
    "id" : "81a6b582-25bc-4e60-9aa1-c2a3df02b5e6",
    "prId" : 5923,
    "prUrl" : "https://github.com/flutter/flutter/pull/5923#pullrequestreview-491615",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34185a96-67ff-4e51-b345-75aaa3d312f8",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "linkify\n",
        "createdAt" : "2016-09-19T03:44:37Z",
        "updatedAt" : "2016-09-19T03:46:10Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d56915027a8f7a31b4bcb7a5a6681cb59546878",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +69,73 @@/// a widget from one screen shifts to a position on the other. For example,\n/// album art from a list of albums growing to become the centerpiece of the\n/// album's details view. In this context, a screen is a navigator ModalRoute.\n///\n/// To get this effect, all you have to do is wrap each hero on each route with a"
  },
  {
    "id" : "7fc57d6c-4add-415c-a98c-1b3e7ccbdd11",
    "prId" : 7568,
    "prUrl" : "https://github.com/flutter/flutter/pull/7568#pullrequestreview-18034368",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1acea5e5-e1f5-4bc8-96be-540668ea0bce",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "does this branch mean that if go down this branch, you'll never re-enable heroes even if you re-use the object?",
        "createdAt" : "2017-01-23T20:12:23Z",
        "updatedAt" : "2017-01-23T22:06:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "d2933e8e-7810-420c-a71e-6eea0d92f079",
        "parentId" : "1acea5e5-e1f5-4bc8-96be-540668ea0bce",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "If the Navigator is disposed before the Hero quest is set up, and then the existing HeroController is reused with a new Navigator, then yes.  I'll reset the _questsEnabled flag in _clearPendingRequests, it makes a bit more sense there.",
        "createdAt" : "2017-01-23T21:51:58Z",
        "updatedAt" : "2017-01-23T22:06:10Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "191501613f71d49ee1fc472497a740b1db660d74",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +577,581 @@    if (navigator == null) {\n      // The navigator was removed before this end-of-frame callback was called.\n      _clearPendingHeroQuest();\n      return;\n    }"
  },
  {
    "id" : "48fea38a-db67-4cd1-91d4-072e9833377c",
    "prId" : 8112,
    "prUrl" : "https://github.com/flutter/flutter/pull/8112#pullrequestreview-21641724",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22397117-8778-4a7b-9286-f54f718ddd9f",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "We should add a constructor to SizedBox that takes a size.  `new SizedBox.fromSize(_placeholderSize)`",
        "createdAt" : "2017-02-13T23:20:48Z",
        "updatedAt" : "2017-02-14T01:05:24Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbc14413b3b993235532ac4d992a3331653ab1a2",
    "line" : 268,
    "diffHunk" : "@@ -1,1 +159,163 @@  Widget build(BuildContext context) {\n    if (_placeholderSize != null) {\n      return new SizedBox(\n        width: _placeholderSize.width,\n        height: _placeholderSize.height"
  },
  {
    "id" : "6c5e9108-13b1-4d5d-a60a-709382b4e7d2",
    "prId" : 8112,
    "prUrl" : "https://github.com/flutter/flutter/pull/8112#pullrequestreview-21642351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8890aa26-00ae-43f6-ba15-ecae46f16835",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "We should make a `Positioned.fromRelativeRect` that does this",
        "createdAt" : "2017-02-13T23:24:51Z",
        "updatedAt" : "2017-02-14T01:05:24Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbc14413b3b993235532ac4d992a3331653ab1a2",
    "line" : 463,
    "diffHunk" : "@@ -1,1 +260,264 @@        final RelativeRect offsets = new RelativeRect.fromSize(rect, size);\n\n        return new Positioned(\n          top: offsets.top,\n          right: offsets.right,"
  },
  {
    "id" : "a7db1682-4ffe-4967-87dc-9c62382ea066",
    "prId" : 8112,
    "prUrl" : "https://github.com/flutter/flutter/pull/8112#pullrequestreview-145518716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9c8fce9-bc55-485d-8344-0fc9a36ed510",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Hey, I'm doing the refactor we were talking about. I didn't really get what this is for though. We're taking the Key from the Hero widget instance and putting it as a key for this Opacity widget. What is it meant to do?",
        "createdAt" : "2018-08-09T01:00:40Z",
        "updatedAt" : "2018-08-09T01:00:40Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "577ab8c7-5b3e-4288-ad05-7ba4173455fa",
        "parentId" : "c9c8fce9-bc55-485d-8344-0fc9a36ed510",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Making sure that the same actual widget subtree is used, rather than recreating widgets each time. That way anything stateful going on is maintained across the transition.",
        "createdAt" : "2018-08-13T05:35:00Z",
        "updatedAt" : "2018-08-13T05:35:00Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbc14413b3b993235532ac4d992a3331653ab1a2",
    "line" : 471,
    "diffHunk" : "@@ -1,1 +268,272 @@            child: new RepaintBoundary(\n              child: new Opacity(\n                key: manifest.toHero._key,\n                opacity: _heroOpacity.value,\n                child: child,"
  },
  {
    "id" : "b0ad9498-5a2f-4576-ad1a-18326212f015",
    "prId" : 12203,
    "prUrl" : "https://github.com/flutter/flutter/pull/12203#pullrequestreview-64697505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d9a9218-340d-4b5a-9c68-06397f08dd01",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "add a TODO on this side to mention that we need to fix this too",
        "createdAt" : "2017-09-22T20:57:49Z",
        "updatedAt" : "2017-09-22T21:23:58Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8483eb79f06c36e7c03f41a000822ec9d626d5d",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +369,373 @@    } else if (manifest.type == _HeroFlightType.pop && newManifest.type == _HeroFlightType.push) {\n      // A pop flight was interrupted by a push.\n      assert(newManifest.animation.status == AnimationStatus.forward);\n      assert(manifest.toHero == newManifest.fromHero);\n      assert(manifest.toRoute == newManifest.fromRoute);"
  }
]