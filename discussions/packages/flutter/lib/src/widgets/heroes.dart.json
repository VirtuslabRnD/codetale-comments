[
  {
    "id" : "45a44f1a-664c-43cc-9bae-9fe356640640",
    "prId" : 741,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35d41543-70bd-4e88-8156-d8fc070b77f7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "please move the hero controller to this file in a separate patch so that this is easier to review\n",
        "createdAt" : "2015-12-04T20:53:30Z",
        "updatedAt" : "2015-12-04T22:26:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "30d755a0-348c-4564-9997-9b254ba52f4a",
        "parentId" : "35d41543-70bd-4e88-8156-d8fc070b77f7",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you can move pageroute in that patch too\n",
        "createdAt" : "2015-12-04T20:54:14Z",
        "updatedAt" : "2015-12-04T22:26:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c253ca627b96392083542f989ca0b9b078720cf1",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +415,419 @@  String toString() => '$_heroes';\n}\n\nclass HeroController extends NavigatorObserver {\n  HeroController() {"
  },
  {
    "id" : "10816b42-100f-40b5-820c-0a4b40067f35",
    "prId" : 5394,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d45d151-e14e-461a-a9c9-69c9f9ba869b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i assume from.sourceStates itself cannot be null at this point?\n",
        "createdAt" : "2016-08-15T18:23:13Z",
        "updatedAt" : "2016-08-15T18:23:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "db642634-e100-45f0-9a10-c1d74a767676",
        "parentId" : "5d45d151-e14e-461a-a9c9-69c9f9ba869b",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I assumed that was true, since the next line is `sourceStates.remove()`\n",
        "createdAt" : "2016-08-15T18:35:22Z",
        "updatedAt" : "2016-08-15T18:35:22Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "586db083-4d58-4c37-8b75-89c1f2e5cda1",
        "parentId" : "5d45d151-e14e-461a-a9c9-69c9f9ba869b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "k\n",
        "createdAt" : "2016-08-15T19:02:02Z",
        "updatedAt" : "2016-08-15T19:02:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad5e59365195a1984f1297940644b4b252edf5a0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +388,392 @@      assert(to == null || to.currentTurns.floor() == to.currentTurns);\n      HeroState targetState = to != null ? to.sourceStates.elementAt(0) : null;\n      Set<HeroState> sourceStates = from?.sourceStates ?? new HashSet<HeroState>();\n      sourceStates.remove(targetState);\n      Rect sourceRect = from?.currentRect ?? to.currentRect.center & Size.zero;"
  },
  {
    "id" : "12c6ed37-9443-40f1-a659-5bfee9c49f4c",
    "prId" : 5512,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16ae4f29-c478-430f-8d38-b951b48659f0",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "fwiw, i think we'll find that what we actually want is to categorise heroes into those that want to participate during one of these gestures and ones that don't. but that can wait. \n",
        "createdAt" : "2016-08-23T22:53:45Z",
        "updatedAt" : "2016-08-25T18:05:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "75706ab3-036e-4e96-8a43-1b7347214c12",
        "parentId" : "16ae4f29-c478-430f-8d38-b951b48659f0",
        "authorId" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "body" : "Agreed.\n",
        "createdAt" : "2016-08-24T17:55:25Z",
        "updatedAt" : "2016-08-25T18:05:01Z",
        "lastEditedBy" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfaf7c9bf268d8b0ad6110f4374325a9ac3a31d1",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +482,486 @@\n  void _checkForHeroQuest() {\n    if (_from != null && _to != null && _from != _to && _questsEnabled) {\n      _to.offstage = _to.animation.status != AnimationStatus.completed;\n      WidgetsBinding.instance.addPostFrameCallback(_updateQuest);"
  },
  {
    "id" : "81a6b582-25bc-4e60-9aa1-c2a3df02b5e6",
    "prId" : 5923,
    "prUrl" : "https://github.com/flutter/flutter/pull/5923#pullrequestreview-491615",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34185a96-67ff-4e51-b345-75aaa3d312f8",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "linkify\n",
        "createdAt" : "2016-09-19T03:44:37Z",
        "updatedAt" : "2016-09-19T03:46:10Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d56915027a8f7a31b4bcb7a5a6681cb59546878",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +69,73 @@/// a widget from one screen shifts to a position on the other. For example,\n/// album art from a list of albums growing to become the centerpiece of the\n/// album's details view. In this context, a screen is a navigator ModalRoute.\n///\n/// To get this effect, all you have to do is wrap each hero on each route with a"
  },
  {
    "id" : "7fc57d6c-4add-415c-a98c-1b3e7ccbdd11",
    "prId" : 7568,
    "prUrl" : "https://github.com/flutter/flutter/pull/7568#pullrequestreview-18034368",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1acea5e5-e1f5-4bc8-96be-540668ea0bce",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "does this branch mean that if go down this branch, you'll never re-enable heroes even if you re-use the object?",
        "createdAt" : "2017-01-23T20:12:23Z",
        "updatedAt" : "2017-01-23T22:06:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "d2933e8e-7810-420c-a71e-6eea0d92f079",
        "parentId" : "1acea5e5-e1f5-4bc8-96be-540668ea0bce",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "If the Navigator is disposed before the Hero quest is set up, and then the existing HeroController is reused with a new Navigator, then yes.  I'll reset the _questsEnabled flag in _clearPendingRequests, it makes a bit more sense there.",
        "createdAt" : "2017-01-23T21:51:58Z",
        "updatedAt" : "2017-01-23T22:06:10Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "191501613f71d49ee1fc472497a740b1db660d74",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +577,581 @@    if (navigator == null) {\n      // The navigator was removed before this end-of-frame callback was called.\n      _clearPendingHeroQuest();\n      return;\n    }"
  },
  {
    "id" : "48fea38a-db67-4cd1-91d4-072e9833377c",
    "prId" : 8112,
    "prUrl" : "https://github.com/flutter/flutter/pull/8112#pullrequestreview-21641724",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22397117-8778-4a7b-9286-f54f718ddd9f",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "We should add a constructor to SizedBox that takes a size.  `new SizedBox.fromSize(_placeholderSize)`",
        "createdAt" : "2017-02-13T23:20:48Z",
        "updatedAt" : "2017-02-14T01:05:24Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbc14413b3b993235532ac4d992a3331653ab1a2",
    "line" : 268,
    "diffHunk" : "@@ -1,1 +159,163 @@  Widget build(BuildContext context) {\n    if (_placeholderSize != null) {\n      return new SizedBox(\n        width: _placeholderSize.width,\n        height: _placeholderSize.height"
  },
  {
    "id" : "6c5e9108-13b1-4d5d-a60a-709382b4e7d2",
    "prId" : 8112,
    "prUrl" : "https://github.com/flutter/flutter/pull/8112#pullrequestreview-21642351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8890aa26-00ae-43f6-ba15-ecae46f16835",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "We should make a `Positioned.fromRelativeRect` that does this",
        "createdAt" : "2017-02-13T23:24:51Z",
        "updatedAt" : "2017-02-14T01:05:24Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbc14413b3b993235532ac4d992a3331653ab1a2",
    "line" : 463,
    "diffHunk" : "@@ -1,1 +260,264 @@        final RelativeRect offsets = new RelativeRect.fromSize(rect, size);\n\n        return new Positioned(\n          top: offsets.top,\n          right: offsets.right,"
  },
  {
    "id" : "a7db1682-4ffe-4967-87dc-9c62382ea066",
    "prId" : 8112,
    "prUrl" : "https://github.com/flutter/flutter/pull/8112#pullrequestreview-145518716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9c8fce9-bc55-485d-8344-0fc9a36ed510",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Hey, I'm doing the refactor we were talking about. I didn't really get what this is for though. We're taking the Key from the Hero widget instance and putting it as a key for this Opacity widget. What is it meant to do?",
        "createdAt" : "2018-08-09T01:00:40Z",
        "updatedAt" : "2018-08-09T01:00:40Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "577ab8c7-5b3e-4288-ad05-7ba4173455fa",
        "parentId" : "c9c8fce9-bc55-485d-8344-0fc9a36ed510",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Making sure that the same actual widget subtree is used, rather than recreating widgets each time. That way anything stateful going on is maintained across the transition.",
        "createdAt" : "2018-08-13T05:35:00Z",
        "updatedAt" : "2018-08-13T05:35:00Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbc14413b3b993235532ac4d992a3331653ab1a2",
    "line" : 471,
    "diffHunk" : "@@ -1,1 +268,272 @@            child: new RepaintBoundary(\n              child: new Opacity(\n                key: manifest.toHero._key,\n                opacity: _heroOpacity.value,\n                child: child,"
  },
  {
    "id" : "b0ad9498-5a2f-4576-ad1a-18326212f015",
    "prId" : 12203,
    "prUrl" : "https://github.com/flutter/flutter/pull/12203#pullrequestreview-64697505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d9a9218-340d-4b5a-9c68-06397f08dd01",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "add a TODO on this side to mention that we need to fix this too",
        "createdAt" : "2017-09-22T20:57:49Z",
        "updatedAt" : "2017-09-22T21:23:58Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8483eb79f06c36e7c03f41a000822ec9d626d5d",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +369,373 @@    } else if (manifest.type == _HeroFlightType.pop && newManifest.type == _HeroFlightType.push) {\n      // A pop flight was interrupted by a push.\n      assert(newManifest.animation.status == AnimationStatus.forward);\n      assert(manifest.toHero == newManifest.fromHero);\n      assert(manifest.toRoute == newManifest.fromRoute);"
  },
  {
    "id" : "19cb792b-4b45-4977-be90-e4f34dd60dce",
    "prId" : 20322,
    "prUrl" : "https://github.com/flutter/flutter/pull/20322#pullrequestreview-148703802",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8c88855-aca6-4a41-868f-92c95a5b3a64",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "before we showed the top route's hero, is this an intentional change?",
        "createdAt" : "2018-08-22T22:48:21Z",
        "updatedAt" : "2018-08-28T21:04:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "0f79cc82-0c73-4229-89f1-680a6fb86de7",
        "parentId" : "b8c88855-aca6-4a41-868f-92c95a5b3a64",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Chatted offline, there's no behavioral change. Just the doc wording changed from a direction-dependent \"to\" to a direction-independent \"bottom\".",
        "createdAt" : "2018-08-22T23:20:46Z",
        "updatedAt" : "2018-08-28T21:04:59Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "d27589445099227f52b153b7e80b50bf461adc3f",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +49,53 @@  ///\n  /// If no custom [HeroFlightShuttleBuilder] is supplied, the bottom route's\n  /// [Hero] child is shown in flight.\n  pop,\n}"
  },
  {
    "id" : "1ee7ddaf-40a8-4607-a4d3-445cc5056adc",
    "prId" : 20322,
    "prUrl" : "https://github.com/flutter/flutter/pull/20322#pullrequestreview-148703802",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d12f95c6-d9a9-42e4-85f3-6167a346ab6d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should make sure this is exactly what we used to do before (i can't tell from the code if this is a change from what we did before, but the documentation you added earlier says that it is).",
        "createdAt" : "2018-08-22T22:54:45Z",
        "updatedAt" : "2018-08-28T21:04:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "1a8978bd-3c41-43b5-8609-b7bb603cb4a9",
        "parentId" : "d12f95c6-d9a9-42e4-85f3-6167a346ab6d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(i find it concerning that no tests broke as a result of this change)",
        "createdAt" : "2018-08-22T23:01:36Z",
        "updatedAt" : "2018-08-28T21:04:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "8cd6bb7a-9148-41d0-b691-1a1944aedb05",
        "parentId" : "d12f95c6-d9a9-42e4-85f3-6167a346ab6d",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Ditto",
        "createdAt" : "2018-08-22T23:21:14Z",
        "updatedAt" : "2018-08-28T21:04:59Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "d27589445099227f52b153b7e80b50bf461adc3f",
    "line" : 436,
    "diffHunk" : "@@ -1,1 +654,658 @@    final Hero toHero = toHeroContext.widget;\n    return toHero.child;\n  };\n}"
  },
  {
    "id" : "18e59ccc-b91f-4577-86d2-6f94efaf336a",
    "prId" : 20322,
    "prUrl" : "https://github.com/flutter/flutter/pull/20322#pullrequestreview-149533458",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2788aa0d-0aa7-4a42-94d4-949211c53158",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "regardless of whether you rename the new fields or create a diagram, please make sure to add significant documentation to this class to explain everything that's going on. Given the changes here, the class docs shouldn't have remained the same. :-)",
        "createdAt" : "2018-08-22T22:55:35Z",
        "updatedAt" : "2018-08-28T21:04:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "dd298194-08c1-41b8-8cea-362bb8262736",
        "parentId" : "2788aa0d-0aa7-4a42-94d4-949211c53158",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Changed the class dartdoc",
        "createdAt" : "2018-08-26T10:27:59Z",
        "updatedAt" : "2018-08-28T21:04:59Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "d27589445099227f52b153b7e80b50bf461adc3f",
    "line" : 437,
    "diffHunk" : "@@ -1,1 +655,659 @@    return toHero.child;\n  };\n}"
  },
  {
    "id" : "c58bff3e-e4eb-468c-9617-da42f2eaa95c",
    "prId" : 23320,
    "prUrl" : "https://github.com/flutter/flutter/pull/23320#pullrequestreview-167670029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b94037e-81e3-4410-92be-06ad21419548",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It's not really just a transition, it's a pop transition, right?",
        "createdAt" : "2018-10-23T19:50:57Z",
        "updatedAt" : "2018-10-24T21:09:58Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "eaa6b20f-1fae-43b2-aeca-0061d9edfb0b",
        "parentId" : "1b94037e-81e3-4410-92be-06ad21419548",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Yes. Though from this perspective (docs of Hero), the reader shouldn't really be concerned about the direction of the transition. ",
        "createdAt" : "2018-10-23T22:50:21Z",
        "updatedAt" : "2018-10-24T21:09:58Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c8a11dbd6cacc9e7e97ce65bcb6c56c86dc40e4",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +179,183 @@  final TransitionBuilder placeholderBuilder;\n\n  /// Whether to perform the hero transition if the [PageRoute] transition was\n  /// triggered by a user gesture, such as a back swipe on iOS.\n  ///"
  },
  {
    "id" : "5c70d1e9-fccc-4732-bf46-d2ebeb2b6cde",
    "prId" : 23320,
    "prUrl" : "https://github.com/flutter/flutter/pull/23320#pullrequestreview-167601346",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e16f0f4e-209e-4cd8-b15b-2a32b0d4fb72",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2018-10-23T20:03:06Z",
        "updatedAt" : "2018-10-24T21:09:58Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c8a11dbd6cacc9e7e97ce65bcb6c56c86dc40e4",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +560,564 @@  HeroController({ this.createRectTween });\n\n  /// Used to create [RectTween]s that interpolate the position of heroes in flight.\n  ///\n  /// If null, the controller uses a linear [RectTween]."
  },
  {
    "id" : "e5f3410d-3889-481c-aff9-133b9fd5b07a",
    "prId" : 23320,
    "prUrl" : "https://github.com/flutter/flutter/pull/23320#pullrequestreview-167672081",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edd99c37-02e0-44a8-998a-f1195137bb4d",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It's OK if previousRoute is null?",
        "createdAt" : "2018-10-23T20:04:12Z",
        "updatedAt" : "2018-10-24T21:09:58Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "81c2a094-29e0-4111-8e97-9adc2c5ff8fc",
        "parentId" : "edd99c37-02e0-44a8-998a-f1195137bb4d",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "It is. And it should be ok for _maybeStartHeroTransition to drop it in that case too.",
        "createdAt" : "2018-10-23T22:58:19Z",
        "updatedAt" : "2018-10-24T21:09:58Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c8a11dbd6cacc9e7e97ce65bcb6c56c86dc40e4",
    "line" : 151,
    "diffHunk" : "@@ -1,1 +586,590 @@  void didStartUserGesture(Route<dynamic> route, Route<dynamic> previousRoute) {\n    assert(navigator != null);\n    assert(route != null);\n    _maybeStartHeroTransition(route, previousRoute, HeroFlightDirection.pop, true);\n  }"
  },
  {
    "id" : "cbfc1f98-2667-4f94-ba3f-a1db6b8a8ec4",
    "prId" : 23320,
    "prUrl" : "https://github.com/flutter/flutter/pull/23320#pullrequestreview-167601346",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aacc4375-9739-4364-af49-bbfc8ead2d07",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2018-10-23T20:22:25Z",
        "updatedAt" : "2018-10-24T21:09:58Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c8a11dbd6cacc9e7e97ce65bcb6c56c86dc40e4",
    "line" : 205,
    "diffHunk" : "@@ -1,1 +629,633 @@  }\n\n  // Find the matching pairs of heroes in from and to and either start or a new\n  // hero flight, or divert an existing one.\n  void _startHeroTransition("
  },
  {
    "id" : "f7b5a764-1f97-4d95-938a-5ed698cdde51",
    "prId" : 24039,
    "prUrl" : "https://github.com/flutter/flutter/pull/24039#pullrequestreview-172354063",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "772d3e33-32c4-4401-93bf-b062b57794e5",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I'd check the value of the animation. The animation status is driven by the animation's forward/reverse but it can also be manually manipulated by calling the animation's value setter and won't be in any particular status. Checking the value is more direct.",
        "createdAt" : "2018-11-07T06:25:57Z",
        "updatedAt" : "2018-11-07T06:35:54Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "75ad8d1e-4418-456f-80d0-b32757d25b44",
        "parentId" : "772d3e33-32c4-4401-93bf-b062b57794e5",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Done",
        "createdAt" : "2018-11-07T06:36:04Z",
        "updatedAt" : "2018-11-07T06:36:05Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0b58f6f69f9d4cd0dde20e7b5b17a015c603e44",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +601,605 @@      // A user gesture may have already completed the pop, or we might be the initial route\n      switch (flightType) {\n        case HeroFlightDirection.pop:\n          if (animation.value == 0.0) {\n            return;"
  },
  {
    "id" : "eb366a08-36fd-4de7-b5ee-4f1928e56d2e",
    "prId" : 29069,
    "prUrl" : "https://github.com/flutter/flutter/pull/29069#pullrequestreview-213126256",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80807ee3-3e35-47de-9e46-77c79c10c6f9",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "If there aren't any nested navigators we still only consider heroes from the topmost route? ",
        "createdAt" : "2019-03-11T22:06:09Z",
        "updatedAt" : "2019-03-11T22:59:12Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "0c33a6f0-e377-4662-b704-c67ad5728a50",
        "parentId" : "80807ee3-3e35-47de-9e46-77c79c10c6f9",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "The important bit is that in the nested navigator case, its the topmost route **of the nested navigator** (and not the topmost route of the navigator controlling the hero transition)",
        "createdAt" : "2019-03-11T22:56:37Z",
        "updatedAt" : "2019-03-11T22:59:12Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "ae89c5e4-2d75-4ccf-86c3-f0b05dc63627",
        "parentId" : "80807ee3-3e35-47de-9e46-77c79c10c6f9",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I rephrased this a bit and emphasized *nested navigators*.",
        "createdAt" : "2019-03-11T22:59:44Z",
        "updatedAt" : "2019-03-11T22:59:44Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "417ffbfbe1da6538655d3f05d2098e987d7cb03f",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +114,118 @@/// ### Nested Navigators\n///\n/// If either or both routes contain nested [Navigator]s, only [Hero]s\n/// contained in the top-most routes (as defined by [Route.isCurrent]) *of those\n/// nested [Navigator]s* are considered for animation. Just like in the"
  },
  {
    "id" : "e44c7c4c-fb8a-4dc6-ae0e-2f9158c20ffc",
    "prId" : 29069,
    "prUrl" : "https://github.com/flutter/flutter/pull/29069#pullrequestreview-213109667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f94e5e7-95e1-45c0-a6ac-c044ab934cb9",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "We should probably assert navigator != null, just for good measure",
        "createdAt" : "2019-03-11T22:07:13Z",
        "updatedAt" : "2019-03-11T22:59:12Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "417ffbfbe1da6538655d3f05d2098e987d7cb03f",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +209,213 @@      BuildContext context,\n      bool isUserGestureTransition,\n      NavigatorState navigator,\n  ) {\n    assert(context != null);"
  },
  {
    "id" : "976e6cef-86e5-4344-ae1c-dce72c569707",
    "prId" : 29069,
    "prUrl" : "https://github.com/flutter/flutter/pull/29069#pullrequestreview-213109667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c866522b-01e6-486f-a829-cb69a3b1f033",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Thanks for this explanation!",
        "createdAt" : "2019-03-11T22:13:12Z",
        "updatedAt" : "2019-03-11T22:59:12Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "417ffbfbe1da6538655d3f05d2098e987d7cb03f",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +244,248 @@            addHero(hero, tag);\n          } else {\n            // The nearest navigator to the Hero is not the Navigator that is\n            // currently transitioning from one route to another. This means\n            // the Hero is inside a nested Navigator and should only be"
  }
]