[
  {
    "id" : "875f54d5-8ca1-4be5-8536-79249e56808a",
    "prId" : 60375,
    "prUrl" : "https://github.com/flutter/flutter/pull/60375#pullrequestreview-446739217",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b7e2a83-51d0-44f3-adea-1a514f2df20c",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "What happens if this is inserted into the tree after frames have already started rendering?",
        "createdAt" : "2020-07-10T22:35:09Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "6195e6a2-919e-4c83-992e-8bb7634299a9",
        "parentId" : "2b7e2a83-51d0-44f3-adea-1a514f2df20c",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Also: what happens if anything below this throws? Should we try to resume frames, or should we just have a hard crash? Right now it seems like an app could get into a state where it throws in here and just never renders frames again.",
        "createdAt" : "2020-07-10T22:36:09Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "9d969ccf-93f9-4b00-9950-082170fc4e48",
        "parentId" : "2b7e2a83-51d0-44f3-adea-1a514f2df20c",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "From https://master-api.flutter.dev/flutter/rendering/RendererBinding/deferFirstFrame.html:\r\n\r\n> Calling this has no effect after the first frame has been sent to the engine.\r\n\r\nIt's a pattern we use elsewhere in the framework [1]. If we crash, you'd be stuck at the splash screen. As a dev, you'd see the crash in the console. As an end-user being stuck there doesn't seem more or less useful then seeing our error widget... \r\n\r\n[1] https://github.com/flutter/flutter/blob/9cbe1dccf3a0988343ba429417f0943f5519da69/packages/flutter/lib/src/widgets/localizations.dart#L529\r\n\r\n",
        "createdAt" : "2020-07-10T23:41:36Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2e1d5f405a3fa8a561802dd464d96fc2c3d47c0",
    "line" : 280,
    "diffHunk" : "@@ -1,1 +278,282 @@    if (_isWaitingForRootBucket && !_isLoadingRootBucket) {\n      _isLoadingRootBucket = true;\n      RendererBinding.instance.deferFirstFrame();\n      ServicesBinding.instance.restorationManager.rootBucket.then((RestorationBucket bucket) {\n        _isLoadingRootBucket = false;"
  },
  {
    "id" : "375cf5f7-d614-40ad-92e1-e8b23bb23000",
    "prId" : 60375,
    "prUrl" : "https://github.com/flutter/flutter/pull/60375#pullrequestreview-446739217",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9859ab5-e6ba-48e4-837f-7e3d6ccc51cf",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "assert(!_disposed)",
        "createdAt" : "2020-07-10T22:48:41Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "8f4c5c45-4634-4edb-a32d-85b0208fb134",
        "parentId" : "e9859ab5-e6ba-48e4-837f-7e3d6ccc51cf",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "alternatively, remove the disposed property, which seems unused elsewhere.",
        "createdAt" : "2020-07-10T22:49:35Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "989cbc33-5e8c-4a4c-b0fa-35b7e0560a27",
        "parentId" : "e9859ab5-e6ba-48e4-837f-7e3d6ccc51cf",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "`_disposed` is used in RestorationMixin.dispose. This is to make the life of developers using the mixin a little easier. If we don't have this we'd have to enforce that properties are only disposed after calling super.dispose().\r\n\r\nWill add the dispose check to this and the other methods next week (left a TODO to remind me).",
        "createdAt" : "2020-07-10T23:19:46Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2e1d5f405a3fa8a561802dd464d96fc2c3d47c0",
    "line" : 480,
    "diffHunk" : "@@ -1,1 +478,482 @@  void dispose() {\n    assert(_debugAssertNotDisposed());\n    _owner?._unregister(this);\n    super.dispose();\n    _disposed = true;"
  },
  {
    "id" : "28ac8a81-354f-46e0-93eb-61dc5e38b7f7",
    "prId" : 60375,
    "prUrl" : "https://github.com/flutter/flutter/pull/60375#pullrequestreview-448651968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab96cd63-d2d1-4454-97b7-e3d8fdaec530",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "would implementing didUpdateWidget help for the finalizer stuff above?",
        "createdAt" : "2020-07-10T23:07:25Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "fb0ed755-4d50-4aee-ad6e-1e74e482df86",
        "parentId" : "ab96cd63-d2d1-4454-97b7-e3d8fdaec530",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I don't see how that would help. What is your idea?\r\n\r\n",
        "createdAt" : "2020-07-10T23:34:21Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "7613d163-b28d-4dae-b9db-4ad0ed7ec469",
        "parentId" : "ab96cd63-d2d1-4454-97b7-e3d8fdaec530",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "I may be missing something, but wouldn't that let you resolve issues where a widget is moving from one part of the tree to another and transferring ownership of a bucket?",
        "createdAt" : "2020-07-15T05:51:17Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "1943a894-4305-4aa5-b2eb-8837fb1dcb8a",
        "parentId" : "ab96cd63-d2d1-4454-97b7-e3d8fdaec530",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "From reading some more, I think it would not help. Disregard.",
        "createdAt" : "2020-07-15T06:05:00Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2e1d5f405a3fa8a561802dd464d96fc2c3d47c0",
    "line" : 927,
    "diffHunk" : "@@ -1,1 +925,929 @@\n  @override\n  void didChangeDependencies() {\n    super.didChangeDependencies();\n    RestorationBucket oldBucket;"
  },
  {
    "id" : "b3490aa5-469f-4d2f-9852-5b6d9e29a9f3",
    "prId" : 60375,
    "prUrl" : "https://github.com/flutter/flutter/pull/60375#pullrequestreview-453724475",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d134be8b-4ff8-4038-b26b-73181e897dee",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "```suggestion\r\n/// Manages an object of type `T`, whose value is a [State] object that it wants to have\r\n```",
        "createdAt" : "2020-07-15T18:14:51Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "c14b5edf-69d6-40ce-acd4-62bbc1a32323",
        "parentId" : "d134be8b-4ff8-4038-b26b-73181e897dee",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "The value is not a State object. The State object wants that value restored. ",
        "createdAt" : "2020-07-15T20:15:37Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "cef84c22-3efa-4562-8ba1-a2907565c58b",
        "parentId" : "d134be8b-4ff8-4038-b26b-73181e897dee",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "might be clearer (if strictly less technically correct) just saying \"Manages an object of type `T` that a [State] object wants to have restored during state restoration\" or some such.",
        "createdAt" : "2020-07-22T22:18:23Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2e1d5f405a3fa8a561802dd464d96fc2c3d47c0",
    "line" : 326,
    "diffHunk" : "@@ -1,1 +324,328 @@}\n\n/// Manages an object of type `T`, whose value a [State] object wants to have\n/// restored during state restoration.\n///"
  },
  {
    "id" : "51a48307-229e-46a3-9318-bbb296c84883",
    "prId" : 60375,
    "prUrl" : "https://github.com/flutter/flutter/pull/60375#pullrequestreview-449211627",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a329a4e2-9ece-458c-8d92-713df049d136",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "In another PR, this seems like a great place to put a code sample.",
        "createdAt" : "2020-07-15T18:20:32Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2e1d5f405a3fa8a561802dd464d96fc2c3d47c0",
    "line" : 394,
    "diffHunk" : "@@ -1,1 +392,396 @@/// restoration data (meaning the value of the property will no longer be\n/// restored during a future state restoration).\n///\n/// See also:\n///"
  },
  {
    "id" : "56a94de9-b1d5-4db9-a6cf-3674203d0682",
    "prId" : 60375,
    "prUrl" : "https://github.com/flutter/flutter/pull/60375#pullrequestreview-453720849",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a9222bf-9e64-4f95-a33c-3447d02e163e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "maybe mention that restorationId can be null but this disables restoration.\r\n\r\nor have a separate constructor for disabling restoration, and make this one require non-null.",
        "createdAt" : "2020-07-22T22:10:32Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2e1d5f405a3fa8a561802dd464d96fc2c3d47c0",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +53,57 @@///    restoration in Flutter.\nclass RestorationScope extends StatefulWidget {\n  /// Creates a [RestorationScope].\n  ///\n  /// Providing null as the [restorationId] turns off state restoration for"
  },
  {
    "id" : "33fb1a49-f053-4abc-808c-fa39cf1cdcc1",
    "prId" : 60375,
    "prUrl" : "https://github.com/flutter/flutter/pull/60375#pullrequestreview-453721382",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10e720c0-affd-4a10-9aad-89de5266584f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "say more about the arguments",
        "createdAt" : "2020-07-22T22:11:43Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2e1d5f405a3fa8a561802dd464d96fc2c3d47c0",
    "line" : 145,
    "diffHunk" : "@@ -1,1 +143,147 @@///    restoration in Flutter.\nclass UnmanagedRestorationScope extends InheritedWidget {\n  /// Creates an [UnmanagedRestorationScope].\n  ///\n  /// When [bucket] is null state restoration is turned off for the [child] and"
  },
  {
    "id" : "9861e744-a626-4de2-9371-0fb2a76a353e",
    "prId" : 60375,
    "prUrl" : "https://github.com/flutter/flutter/pull/60375#pullrequestreview-453723364",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c6d8698-b863-460f-afe9-248347a8901d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "discuss arguments, what inherited widgets should be in scope, what is expected of the binding",
        "createdAt" : "2020-07-22T22:15:57Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2e1d5f405a3fa8a561802dd464d96fc2c3d47c0",
    "line" : 220,
    "diffHunk" : "@@ -1,1 +218,222 @@///    restoration in Flutter.\nclass RootRestorationScope extends StatefulWidget {\n  /// Creates a [RootRestorationScope].\n  ///\n  /// Providing null as the [restorationId] turns off state restoration for"
  },
  {
    "id" : "887c83be-dd57-473d-b368-c9fb3c4dfce8",
    "prId" : 60375,
    "prUrl" : "https://github.com/flutter/flutter/pull/60375#pullrequestreview-453726680",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23db97f1-738b-4671-8595-ecf99b9b62f6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "might be clearer to say something like \"after this is called, initWithValue will be called with this method's return value\" or \"the value return by this method is then passed to initWithValue\", and then separately say \"see also fromPrimitives which is called when ... instead\"",
        "createdAt" : "2020-07-22T22:23:12Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2e1d5f405a3fa8a561802dd464d96fc2c3d47c0",
    "line" : 415,
    "diffHunk" : "@@ -1,1 +413,417 @@  /// [RestorableProperty]. Whenever new restoration data has been provided to\n  /// the [RestorationMixin] the property is registered to, either this method\n  /// or [fromPrimitives] is called before [initWithValue] is invoked.\n  T createDefaultValue();\n"
  },
  {
    "id" : "09ac02fb-a792-40cc-afa9-42f10f293099",
    "prId" : 60375,
    "prUrl" : "https://github.com/flutter/flutter/pull/60375#pullrequestreview-455189547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a187beff-2a85-4aac-a4b1-097f43821a5a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "is it expected that `x.fromPrimitives(x.toPrimitives()) == x.fromPrimitives(x.toPrimitives())` ?",
        "createdAt" : "2020-07-22T22:24:52Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c7e5a999-aaa1-4a12-8603-fa9590628887",
        "parentId" : "a187beff-2a85-4aac-a4b1-097f43821a5a",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Yes.",
        "createdAt" : "2020-07-24T21:15:06Z",
        "updatedAt" : "2020-07-28T16:22:08Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2e1d5f405a3fa8a561802dd464d96fc2c3d47c0",
    "line" : 458,
    "diffHunk" : "@@ -1,1 +456,460 @@  /// [notifyListeners]. The [RestorationMixin] will invoke this method whenever\n  /// the property's listeners are notified.\n  Object toPrimitives();\n\n  /// Whether the object currently returned by [toPrimitives] should be included"
  },
  {
    "id" : "5f6e3ed4-8658-4412-92f4-9762a6e1c5ef",
    "prId" : 60375,
    "prUrl" : "https://github.com/flutter/flutter/pull/60375#pullrequestreview-453728093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d834a9e7-6071-493d-9d08-918ab35409d9",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "maybe also assert _id != null, _owner != null?",
        "createdAt" : "2020-07-22T22:26:19Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2e1d5f405a3fa8a561802dd464d96fc2c3d47c0",
    "line" : 496,
    "diffHunk" : "@@ -1,1 +494,498 @@  }\n  void _unregister() {\n    assert(_debugAssertNotDisposed());\n    assert(_restorationId != null);\n    assert(_owner != null);"
  },
  {
    "id" : "48b0df2f-f78a-4fd4-a87b-d95c9369b3a7",
    "prId" : 60375,
    "prUrl" : "https://github.com/flutter/flutter/pull/60375#pullrequestreview-457716925",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72ee0a67-f68e-4135-bef8-bccd9de7a2c9",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "maybe make this a comment rather than part of the template (i.e. remove the `///` on that line)",
        "createdAt" : "2020-07-22T22:29:10Z",
        "updatedAt" : "2020-07-28T16:22:07Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "83c20a3f-c85c-47d0-9bb0-e430d6d72ae1",
        "parentId" : "72ee0a67-f68e-4135-bef8-bccd9de7a2c9",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Turns out, the dartdoc parser doesn't like that.",
        "createdAt" : "2020-07-24T23:14:58Z",
        "updatedAt" : "2020-07-28T16:22:08Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "0f625aa5-35f8-433f-a3b0-71c77b85ae2c",
        "parentId" : "72ee0a67-f68e-4135-bef8-bccd9de7a2c9",
        "authorId" : "14d823d8-a6cc-4146-a848-59d6408e0965",
        "body" : "This TODO is causing an error on triple-head (tip-of-tree Dart, engine, framework) flutter analyze tests at https://ci.chromium.org/p/dart/builders/ci.sandbox/flutter-engine-linux/11403",
        "createdAt" : "2020-07-29T10:40:31Z",
        "updatedAt" : "2020-07-29T10:40:31Z",
        "lastEditedBy" : "14d823d8-a6cc-4146-a848-59d6408e0965",
        "tags" : [
        ]
      },
      {
        "id" : "26977bd2-964f-4d2c-b8b4-8fd1cf73be43",
        "parentId" : "72ee0a67-f68e-4135-bef8-bccd9de7a2c9",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "What's the failure? In the logs from the linked run I am only seeing directory-related failures (e.g. `No such file or directory`). How are those caused by a TODO in a comment?",
        "createdAt" : "2020-07-29T16:18:13Z",
        "updatedAt" : "2020-07-29T16:18:13Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "3c98f3eb-3b4b-4224-a410-6ab6cff3857e",
        "parentId" : "72ee0a67-f68e-4135-bef8-bccd9de7a2c9",
        "authorId" : "14d823d8-a6cc-4146-a848-59d6408e0965",
        "body" : "The \"flutter analyze\" step with log of stdout at https://logs.chromium.org/logs/dart/buildbucket/cr-buildbucket.appspot.com/8873492683668712848/+/steps/flutter_analyze/0/stdout\r\nhas a failure due to that TODO",
        "createdAt" : "2020-07-29T16:22:53Z",
        "updatedAt" : "2020-07-29T16:22:53Z",
        "lastEditedBy" : "14d823d8-a6cc-4146-a848-59d6408e0965",
        "tags" : [
        ]
      },
      {
        "id" : "979dd79b-1503-4671-8167-b99fdb2d4f25",
        "parentId" : "72ee0a67-f68e-4135-bef8-bccd9de7a2c9",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I am removing the TODO here: https://github.com/flutter/flutter/pull/62500",
        "createdAt" : "2020-07-29T17:01:34Z",
        "updatedAt" : "2020-07-29T17:01:34Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2e1d5f405a3fa8a561802dd464d96fc2c3d47c0",
    "line" : 614,
    "diffHunk" : "@@ -1,1 +612,616 @@///   @override\n///   Widget build(BuildContext context) {\n///     // TODO(goderbauer): remove the [RootRestorationScope] once it is part of [MaterialApp]. // ignore: flutter_style_todos\n///     return RootRestorationScope(\n///       restorationId: 'root',"
  },
  {
    "id" : "6074cffd-e41a-4b04-89ff-0f7430c4f6d6",
    "prId" : 60375,
    "prUrl" : "https://github.com/flutter/flutter/pull/60375#pullrequestreview-456074351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "887b8e73-ba1f-450b-81d8-ccaff7b1750e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this would be a good place for sample code (showing the use of UnmanagedRestorationScope)",
        "createdAt" : "2020-07-22T22:34:21Z",
        "updatedAt" : "2020-07-28T16:22:08Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "bb58a227-f11d-41f1-942e-e4628e2716f6",
        "parentId" : "887b8e73-ba1f-450b-81d8-ccaff7b1750e",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Made a note. I am going to add more samples in a follow-up since this PR is already gigantic. ",
        "createdAt" : "2020-07-27T19:32:39Z",
        "updatedAt" : "2020-07-28T16:22:08Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2e1d5f405a3fa8a561802dd464d96fc2c3d47c0",
    "line" : 744,
    "diffHunk" : "@@ -1,1 +742,746 @@  /// be injected into the widget tree in the [State]'s `build` method using an\n  /// [UnmanagedRestorationScope]. That allows descendants to claim child\n  /// buckets from this bucket for their own restoration needs.\n  RestorationBucket get bucket => _bucket;\n  RestorationBucket _bucket;"
  }
]