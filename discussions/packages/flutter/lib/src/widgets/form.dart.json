[
  {
    "id" : "61b0e12d-e40d-4c02-9aba-c51afc148958",
    "prId" : 7283,
    "prUrl" : "https://github.com/flutter/flutter/pull/7283#pullrequestreview-13425645",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e3aee85-38de-4f7c-8fa7-d065f2f53f71",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I think this should be autoValidate",
        "createdAt" : "2016-12-16T22:08:35Z",
        "updatedAt" : "2016-12-16T23:02:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "9bc178e0-e954-4db3-8b04-aabf571febba",
        "parentId" : "2e3aee85-38de-4f7c-8fa7-d065f2f53f71",
        "authorId" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "body" : "I thought so too, but grepping through the codebase, I found `autofocus` and `autorefresh`. There are no `autoFoos` anywhere. WDYT?",
        "createdAt" : "2016-12-16T22:11:09Z",
        "updatedAt" : "2016-12-16T23:02:49Z",
        "lastEditedBy" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "tags" : [
        ]
      },
      {
        "id" : "3841cb7e-0016-4b71-b72f-df6a5debac83",
        "parentId" : "2e3aee85-38de-4f7c-8fa7-d065f2f53f71",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I was originally going to say that we should call this autoValidate for consistency with Flutter names in general, but if there's an established autopattern, then I guess we should stick with it.\r\n",
        "createdAt" : "2016-12-16T22:53:00Z",
        "updatedAt" : "2016-12-16T23:02:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "e34285e124dd42f5cf114d180b441c254b234331",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +23,27 @@    Key key,\n    @required this.child,\n    this.autovalidate: false,\n  }) : super(key: key) {\n    assert(child != null);"
  },
  {
    "id" : "4877b040-1781-4446-b54f-f9a62f696ae0",
    "prId" : 7283,
    "prUrl" : "https://github.com/flutter/flutter/pull/7283#pullrequestreview-13429828",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3fde1b59-a357-4bc6-a3b8-9f245e402d7c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "\"if\"",
        "createdAt" : "2016-12-16T22:52:17Z",
        "updatedAt" : "2016-12-16T23:02:49Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "2b44e4f0-897d-4b51-9b0f-9cdee4e2d6ac",
        "parentId" : "3fde1b59-a357-4bc6-a3b8-9f245e402d7c",
        "authorId" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "body" : "\"iff\" means [if and only if](https://en.wikipedia.org/wiki/If_and_only_if), but if that's not widely known I can change it.",
        "createdAt" : "2016-12-16T22:55:58Z",
        "updatedAt" : "2016-12-16T23:02:49Z",
        "lastEditedBy" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "tags" : [
        ]
      },
      {
        "id" : "c9fd92c3-b204-45a4-86ad-dabd81040e66",
        "parentId" : "3fde1b59-a357-4bc6-a3b8-9f245e402d7c",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "We should have complete documentation, which means that if there was any other reason for it to return true, the paragraph would mention it. So the \"and only if\" is implied.",
        "createdAt" : "2016-12-16T23:35:24Z",
        "updatedAt" : "2016-12-16T23:35:25Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e34285e124dd42f5cf114d180b441c254b234331",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +99,103 @@\n  /// Validates every [FormField] that is a descendant of this [Form], and\n  /// returns true iff there are no errors.\n  bool validate() {\n    _fieldDidChange();"
  },
  {
    "id" : "02100f8b-afd8-42a2-8f50-6aba65594cf2",
    "prId" : 7283,
    "prUrl" : "https://github.com/flutter/flutter/pull/7283#pullrequestreview-13427709",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fedc7a39-020d-48b0-aaa2-9df1189920b1",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "[this is just a nit] I don't think you really mean descendant here? If the Form contained other forms as well as fields, you're not going to recursively find all the fields, right? It looks like the term \"descendant\" is used in several places where you mean \"child\".",
        "createdAt" : "2016-12-16T23:03:00Z",
        "updatedAt" : "2016-12-16T23:04:22Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "3cf144f0-8871-4f44-876c-91321dbdc2ca",
        "parentId" : "fedc7a39-020d-48b0-aaa2-9df1189920b1",
        "authorId" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "body" : "I mean \"descendant that is not a descendant of a deeper Form\" but that's a mouthful. FormFields will register themselves with the closest ancestor Form.",
        "createdAt" : "2016-12-16T23:04:52Z",
        "updatedAt" : "2016-12-16T23:04:52Z",
        "lastEditedBy" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "tags" : [
        ]
      },
      {
        "id" : "173a0df0-b556-4dcb-a461-958464b21dab",
        "parentId" : "fedc7a39-020d-48b0-aaa2-9df1189920b1",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I suppose it will not confuse anyone. You could say \"immediate descendant\", or \"FormFields registered with this form\" but it was only a nit.\r\n\r\nLGTM too.\r\n",
        "createdAt" : "2016-12-16T23:12:35Z",
        "updatedAt" : "2016-12-16T23:12:35Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "e34285e124dd42f5cf114d180b441c254b234331",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +84,88 @@  }\n\n  /// Saves every [FormField] that is a descendant of this [Form].\n  void save() {\n    for (FormFieldState<dynamic> field in _fields)"
  },
  {
    "id" : "51b52673-7249-4531-b006-0ae1428ac7e6",
    "prId" : 28857,
    "prUrl" : "https://github.com/flutter/flutter/pull/28857#pullrequestreview-211051091",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62ebdbc8-ad7a-4277-b711-4225890cac02",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Nit: add an empty line after see also",
        "createdAt" : "2019-03-06T05:42:16Z",
        "updatedAt" : "2019-03-06T23:58:15Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "3be44820adcf0cdeb168f42938dd9ba83e2912d1",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +58,62 @@/// {@end-tool}\n///\n/// See also:\n///\n///  * [GlobalKey], a key that is unique across the entire app."
  },
  {
    "id" : "b97cc7e9-6e3a-439e-8af2-ffef82195642",
    "prId" : 48948,
    "prUrl" : "https://github.com/flutter/flutter/pull/48948#pullrequestreview-357928543",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "158c2f8e-940c-43ef-b81a-5ae1d5eb82c1",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: the first sentence should be its own paragraph. Please add a blank line below this one.",
        "createdAt" : "2020-02-12T22:45:31Z",
        "updatedAt" : "2020-02-18T21:45:54Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "c1dcfc22-7258-4740-b82c-3baa8b8adcdb",
        "parentId" : "158c2f8e-940c-43ef-b81a-5ae1d5eb82c1",
        "authorId" : "f3773ee5-b900-447b-b4d1-06ac4306980c",
        "body" : "Done.",
        "createdAt" : "2020-02-13T03:04:44Z",
        "updatedAt" : "2020-02-18T21:45:54Z",
        "lastEditedBy" : "f3773ee5-b900-447b-b4d1-06ac4306980c",
        "tags" : [
        ]
      }
    ],
    "commit" : "73350846ba845e17ca88e3e5711280c101b254cc",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +350,354 @@  bool get hasError => _errorText != null;\n\n  /// True if the current value is valid.\n  ///\n  /// This will not set [errorText] or [hasError] and it will not update"
  },
  {
    "id" : "72b06827-b248-463f-957e-0b31d9a96b75",
    "prId" : 59766,
    "prUrl" : "https://github.com/flutter/flutter/pull/59766#pullrequestreview-437017469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0f93e79-4e57-4b53-96e4-d2b33ce54d49",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Could there be any performance concern with this? Do we ever have forms with many many fields?  @chunhtai \r\n\r\nThis is probably ok, I just wanted to flag it.  I imagine it would be possible to check only the field that has changed here, but it might not be worth it.",
        "createdAt" : "2020-06-22T23:08:59Z",
        "updatedAt" : "2020-07-15T21:34:57Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "2dcea8fa-9b29-4491-93e4-95378673b0c6",
        "parentId" : "e0f93e79-4e57-4b53-96e4-d2b33ce54d49",
        "authorId" : "be1ebfb4-b241-4f0a-8020-88cd3cee0136",
        "body" : "It does exactly this: it checks every element in the list and stops if it found that `_hasInteractedByUser ` is true or else keep checking until the last element.",
        "createdAt" : "2020-06-23T16:51:10Z",
        "updatedAt" : "2020-07-15T21:34:57Z",
        "lastEditedBy" : "be1ebfb4-b241-4f0a-8020-88cd3cee0136",
        "tags" : [
        ]
      },
      {
        "id" : "425f14db-8d32-4442-a47a-ece8d64db081",
        "parentId" : "e0f93e79-4e57-4b53-96e4-d2b33ce54d49",
        "authorId" : "be1ebfb4-b241-4f0a-8020-88cd3cee0136",
        "body" : "One option would be to make the FormFields to update a property in the Form, this would prevent to iterate the whole list.",
        "createdAt" : "2020-06-23T16:56:57Z",
        "updatedAt" : "2020-07-15T21:34:57Z",
        "lastEditedBy" : "be1ebfb4-b241-4f0a-8020-88cd3cee0136",
        "tags" : [
        ]
      },
      {
        "id" : "d83775fc-ac51-4afa-a0f9-75cb0169ab51",
        "parentId" : "e0f93e79-4e57-4b53-96e4-d2b33ce54d49",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "This might be a problem when there are a lot of fields, since it will be called on every key pressed.",
        "createdAt" : "2020-06-24T21:11:50Z",
        "updatedAt" : "2020-07-15T21:34:57Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "b7fe6f7e-127a-485c-9489-5ddf2287e109",
        "parentId" : "e0f93e79-4e57-4b53-96e4-d2b33ce54d49",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "What are the cases where _hasInteractedByUser gets set to false?  I guess when reset is called, but when else?  Maybe we could make an optimization like this:\r\n\r\n```dart\r\nif (!_hasInteractedByUser) {\r\n  _hasInteractedByUser = _fields\r\n        .any((FormFieldState<dynamic> field) => field._hasInteractedByUser);\r\n}\r\n```",
        "createdAt" : "2020-06-24T21:24:42Z",
        "updatedAt" : "2020-07-15T21:34:57Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "46491c243c33f155ded43d5cb4e15cdd854fd4cf",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +167,171 @@\n    _hasInteractedByUser = _fields\n        .any((FormFieldState<dynamic> field) => field._hasInteractedByUser);\n    _forceRebuild();\n  }"
  },
  {
    "id" : "25f1321b-ea31-4924-947f-dafebb4797e0",
    "prId" : 59766,
    "prUrl" : "https://github.com/flutter/flutter/pull/59766#pullrequestreview-449243644",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e5d7206-d3f5-4b33-beed-2af4c0137a70",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "we may need this here\r\n```dart\r\nForm.of(context)?._fieldDidChange();\r\n```\r\n",
        "createdAt" : "2020-07-15T17:22:36Z",
        "updatedAt" : "2020-07-15T21:34:57Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "8e4f548d-a7f8-4dbc-858a-1ff71852229f",
        "parentId" : "4e5d7206-d3f5-4b33-beed-2af4c0137a70",
        "authorId" : "be1ebfb4-b241-4f0a-8020-88cd3cee0136",
        "body" : "I removed it because it wan't there before.\r\n\r\nSince it is not required for this feature I though that it is better to remove it for now and add in the next PR when making performance improvements.",
        "createdAt" : "2020-07-15T18:11:35Z",
        "updatedAt" : "2020-07-15T21:34:57Z",
        "lastEditedBy" : "be1ebfb4-b241-4f0a-8020-88cd3cee0136",
        "tags" : [
        ]
      },
      {
        "id" : "8069bb37-2efa-4fcb-8e7f-feba8ebcee48",
        "parentId" : "4e5d7206-d3f5-4b33-beed-2af4c0137a70",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "This not a performance improvement but a corner case i just discovered. A field reset need to notify the form to recalculate its _hasInteractedByUser and rebuild. otherwise,  the form will keep validating all its fields.",
        "createdAt" : "2020-07-15T18:19:10Z",
        "updatedAt" : "2020-07-15T21:34:57Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "039f9788-e168-4a40-a20e-8865039b9d82",
        "parentId" : "4e5d7206-d3f5-4b33-beed-2af4c0137a70",
        "authorId" : "be1ebfb4-b241-4f0a-8020-88cd3cee0136",
        "body" : "Done",
        "createdAt" : "2020-07-15T18:56:40Z",
        "updatedAt" : "2020-07-15T21:34:57Z",
        "lastEditedBy" : "be1ebfb4-b241-4f0a-8020-88cd3cee0136",
        "tags" : [
        ]
      }
    ],
    "commit" : "46491c243c33f155ded43d5cb4e15cdd854fd4cf",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +431,435 @@    setState(() {\n      _value = widget.initialValue;\n      _hasInteractedByUser = false;\n      _errorText = null;\n    });"
  }
]