[
  {
    "id" : "9835bde6-8969-4cec-bd81-27afd18ee308",
    "prId" : 832,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cd954b3-45d2-49e4-8e21-b59cb22854e5",
        "parentId" : null,
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "typo: tran**s**formation\n",
        "createdAt" : "2015-12-09T15:41:37Z",
        "updatedAt" : "2015-12-09T15:41:37Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "21083a22-2abe-4d90-8e9f-70be92772fdf",
        "parentId" : "8cd954b3-45d2-49e4-8e21-b59cb22854e5",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Done.\n",
        "createdAt" : "2015-12-09T17:17:39Z",
        "updatedAt" : "2015-12-09T17:17:39Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "e55858411fae9f7de2efc75400c6e706dddd5b07",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +807,811 @@  final EdgeDims padding;\n\n  /// The tranformation matrix to apply before painting the container.\n  final Matrix4 transform;\n"
  },
  {
    "id" : "d76c3747-5f41-4e4c-b0b0-4d295ec31697",
    "prId" : 882,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a5b1d1e-20bc-43cc-b48e-2b34dcdc32c7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This should have more detail since the definition of FractionalOffset probably can't help.\n",
        "createdAt" : "2015-12-11T02:05:28Z",
        "updatedAt" : "2015-12-11T02:35:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "1c8872c4-61dc-4fda-b438-49a7cb3d0639",
        "parentId" : "1a5b1d1e-20bc-43cc-b48e-2b34dcdc32c7",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(same comment for other classes with this field)\n",
        "createdAt" : "2015-12-11T02:07:35Z",
        "updatedAt" : "2015-12-11T02:35:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "40dda1ed4bf4691a936bc91291323a719654dbd2",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +1392,1396 @@  final ImageFit fit;\n\n  /// How to align the image within its bounds.\n  ///\n  /// An alignment of (0.0, 0.0) aligns the image to the top-left corner of its"
  },
  {
    "id" : "e7fec0f4-90ae-48b5-861f-5e7ddc65021a",
    "prId" : 1309,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09950963-4f3e-4aab-a1c6-44cb0f0d9fdb",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "We should probably use `..` cascade here.  I realize you're following the existing pattern, but this just occurred to me.\n",
        "createdAt" : "2016-01-26T07:42:16Z",
        "updatedAt" : "2016-01-27T18:04:54Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "a57ed88b-46f2-4053-bfcf-0dd327d29c74",
        "parentId" : "09950963-4f3e-4aab-a1c6-44cb0f0d9fdb",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Filed https://github.com/flutter/flutter/issues/1381. Not sure it's worth it, though. I would hope the resulting code would be identical, and with the current pattern the code is more consistent.\n",
        "createdAt" : "2016-01-26T15:48:56Z",
        "updatedAt" : "2016-01-27T18:04:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a1788371bd78a74f763aab26bca87e92224cc7",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +2074,2078 @@    renderObject.container = container;\n    renderObject.checked = checked;\n    renderObject.label = label;\n  }\n"
  },
  {
    "id" : "32c6d92c-a47a-48bc-a55e-54a5befb9589",
    "prId" : 2273,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "628ff5fc-68d7-46e0-838d-6dc4f11e19e1",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Do you want to reference CustomOneChildLayout too?\n",
        "createdAt" : "2016-02-29T22:29:48Z",
        "updatedAt" : "2016-02-29T22:29:48Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff8d60c8dd036e09dd0b80492e8c46d775e7cc2e",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1005,1009 @@/// If you want to lay a number of children out in a particular\n/// pattern, or if you want to make a custom layout manager, you\n/// probably want to use [CustomMultiChildLayout] instead. In\n/// particular, when using a Stack you can't position children\n/// relative to their size or the stack's own size."
  },
  {
    "id" : "3150cec0-bd98-404a-933d-8f306e8a925c",
    "prId" : 2447,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3e13912-17ee-4147-9960-740ddf835e38",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "man, this is really not much of a class, huh.\n",
        "createdAt" : "2016-03-06T01:17:40Z",
        "updatedAt" : "2016-03-06T02:00:53Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b73670a31a1efdf786e2c3d8303b24cee2a19ee8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1000,1004 @@\n/// A base class for widgets that accept [Positioned] children.\nabstract class StackRenderObjectWidgetBase extends MultiChildRenderObjectWidget {\n  StackRenderObjectWidgetBase({\n    List<Widget> children: _emptyWidgetList,"
  },
  {
    "id" : "a847a923-9966-44d5-845d-70ba99e2d1dd",
    "prId" : 3105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ba8fb08-04f8-42c6-aa06-a8ef019c8c4f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this might collide\n",
        "createdAt" : "2016-04-05T16:53:35Z",
        "updatedAt" : "2016-04-05T19:58:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "96e765255b1d6d2a74d7134d053f0cc81339d1ff",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +2454,2458 @@\n  factory RepaintBoundary.wrap(Widget child, int childIndex) {\n    Key key = child.key != null ? new ValueKey<Key>(child.key) : new ValueKey<int>(childIndex);\n    return new RepaintBoundary(key: key, child: child);\n  }"
  },
  {
    "id" : "caad5fce-2aaf-4576-bde2-dcbc9fb127c4",
    "prId" : 3422,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d9c3894-b58e-424d-ba37-03c3afee7e4e",
        "parentId" : null,
        "authorId" : "29909713-5424-4233-a02b-b02672141af4",
        "body" : "I suspect we'll end up wanting to namspace our globals at some point. :)\n",
        "createdAt" : "2016-04-19T22:55:32Z",
        "updatedAt" : "2016-04-19T23:03:17Z",
        "lastEditedBy" : "29909713-5424-4233-a02b-b02672141af4",
        "tags" : [
        ]
      },
      {
        "id" : "8b400c2b-7de6-4350-a74d-ed873523f4bd",
        "parentId" : "7d9c3894-b58e-424d-ba37-03c3afee7e4e",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "namespacing is under the control of the importer (import ... as).\n",
        "createdAt" : "2016-04-19T23:07:54Z",
        "updatedAt" : "2016-04-19T23:07:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "97b0027b-4932-4631-99cb-635636a6b056",
        "parentId" : "7d9c3894-b58e-424d-ba37-03c3afee7e4e",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(e.g. we regularly namespaces dart:ui imports \"as ui\", and mojom imports \"as mojom\".)\n",
        "createdAt" : "2016-04-19T23:08:15Z",
        "updatedAt" : "2016-04-19T23:08:15Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed89b1a356ed752c89e0419be939392e7aa5e84d",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +2148,2152 @@  static AssetBundle of(BuildContext context) {\n    DefaultAssetBundle result = context.inheritFromWidgetOfExactType(DefaultAssetBundle);\n    return result?.bundle ?? rootBundle;\n  }\n"
  },
  {
    "id" : "b43f7f92-a65d-4ce8-8e71-07cf83027904",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0be13581-204c-403e-bfbb-4a4589ff7254",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "not sure \"using a variety of different styles\" quite conveys the right impression here.\n",
        "createdAt" : "2016-04-22T21:25:38Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1721,1725 @@/// A paragraph of rich text.\n///\n/// The [RichText] widget displays text using a variety of different styles. The\n/// text to display is described using a tree of [TextSpan] objects, each of\n/// which has an associated style, which is used for that subtree. The text"
  },
  {
    "id" : "76d0fb03-465e-4a8a-9ea8-5bc0bef12bae",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49789864-599e-47f8-a188-e64b438fbbcd",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i don't know what you mean by \"displayed on the layout constraints\"\n",
        "createdAt" : "2016-04-22T21:27:19Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "1b4c2d7c-5272-45a4-823c-17c67e1d21c7",
        "parentId" : "49789864-599e-47f8-a188-e64b438fbbcd",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Oh man, somehow I left out like six words from that sentence.\n",
        "createdAt" : "2016-04-23T14:45:00Z",
        "updatedAt" : "2016-04-23T14:45:00Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1724,1728 @@/// text to display is described using a tree of [TextSpan] objects, each of\n/// which has an associated style, which is used for that subtree. The text\n/// might break across multiple lines or might all be displayed on the layout\n/// constraints.\n///"
  },
  {
    "id" : "3e91649e-9132-4c1c-b377-352de3aec5d3",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d6af1d7-e7f8-4f8b-adac-a06e707f63a6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I think it'd be clearer if you said \"...an associated style that is used...\".\n",
        "createdAt" : "2016-04-22T21:28:08Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +1723,1727 @@/// The [RichText] widget displays text using a variety of different styles. The\n/// text to display is described using a tree of [TextSpan] objects, each of\n/// which has an associated style, which is used for that subtree. The text\n/// might break across multiple lines or might all be displayed on the layout\n/// constraints."
  },
  {
    "id" : "109a837b-a78c-4926-9435-9d19a85a4d72",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4afe203-3a3b-4226-8929-355d7dcfc7ae",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "mention [DefaultTextStyle.of] so they don't go and try to walk the tree to find the nearest one or something\n",
        "createdAt" : "2016-04-22T21:28:40Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +1729,1733 @@/// Text displayed in a [RichText] widget must be explicitly styled. When\n/// picking which style to use, consider using the closest enclosing\n/// [DefaultTextStyle] to provide defaults.\n///\n/// All the text uses the same style, consider using the [Text] widget, which is"
  },
  {
    "id" : "d6599e7b-96f4-4ed4-9538-555fc33d1df9",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4b77c49-768c-4201-9c37-5a6de19c36c6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "When...\n",
        "createdAt" : "2016-04-22T21:28:47Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +1731,1735 @@/// [DefaultTextStyle] to provide defaults.\n///\n/// All the text uses the same style, consider using the [Text] widget, which is\n/// less verbose and integrates with [DefaultTextStyle] for default styling.\n///"
  },
  {
    "id" : "78990481-3e3a-4a62-a386-ee1daba3ec04",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "269a3048-38b2-403c-ae26-df67f7b11e27",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "\"on the layout constraints\" again\n",
        "createdAt" : "2016-04-22T21:29:20Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +1793,1797 @@/// The [Text] widget displays a string of text with single style. The string\n/// might break across multiple lines or might all be displayed on the layout\n/// constraints.\n///\n/// The [style] argument is optional. When omitted, the text will use the style"
  },
  {
    "id" : "c9f861dd-c743-4508-89bb-d55a19b9b147",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdf60dbd-fbdc-404d-9597-20d1345ebc77",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "strike \"by default\" since you started with \"when omitted\".\n",
        "createdAt" : "2016-04-22T21:29:44Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +1796,1800 @@///\n/// The [style] argument is optional. When omitted, the text will use the style\n/// from the closest enclosing [DefaultTextStyle] by default. If the given\n/// style's [TextStyle.inherit] property is true, the given style will be\n/// merged with the closest enclosing [DefaultTextStyle]. This merging behavior"
  },
  {
    "id" : "bc26fb6a-b4c3-4902-a432-dff8ab23af7a",
    "prId" : 3516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74770bff-45a4-40d4-be1a-11b4a1c8d3e9",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "`* [Center] (which is the same as Align but with the [alignment] always set to 0.5,0.5)` or some such\n",
        "createdAt" : "2016-04-24T02:16:12Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53a5a525b0c035e3c7df9c96bff5343726e1578",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +443,447 @@/// See also:\n///\n///  * [CustomSingleChildLayout]\n///  * [Center] (which is the same as [Align] but with the [alignment] always\n///    set to [FractionalOffset.center])"
  },
  {
    "id" : "dc8442c7-e82d-4587-aba0-a583205aba3e",
    "prId" : 3516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f63040da-4744-4a90-9daa-77bf1926b818",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "under Center, say something about Align.\n",
        "createdAt" : "2016-04-24T02:16:37Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53a5a525b0c035e3c7df9c96bff5343726e1578",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +518,522 @@///\n/// The delegate can determine the layout constraints for the child and can\n/// decide where to position the child. The delegate can also determine the size\n/// of the parent, but the size of the parent cannot depend on the size of the\n/// child."
  },
  {
    "id" : "de221cdc-a803-4fe7-8ba5-f14e2b86b54e",
    "prId" : 3516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e0c9711-42db-44c0-aea0-aa5077c9d65a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "explain when you'd prefer stack or flow over multichildcustomlayout\n",
        "createdAt" : "2016-04-24T02:18:56Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53a5a525b0c035e3c7df9c96bff5343726e1578",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +602,606 @@/// * [CustomSingleChildLayout]\n/// * [Stack]\n/// * [Flow]\nclass CustomMultiChildLayout extends MultiChildRenderObjectWidget {\n  /// Creates a custom multi-child layout."
  },
  {
    "id" : "7571388a-6964-4ae9-ae6b-e475ecbd2886",
    "prId" : 3516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b8bb88d-6cca-4d68-8332-4294725993b2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "as opposed to what?\n",
        "createdAt" : "2016-04-24T02:19:43Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53a5a525b0c035e3c7df9c96bff5343726e1578",
    "line" : 174,
    "diffHunk" : "@@ -1,1 +1768,1772 @@///\n/// Flow layouts are optimized for repositioning children using transformation\n/// matrices.\n///\n/// The flow container is sized independently from the children by the"
  },
  {
    "id" : "42291e42-b288-4682-a570-e8e32216456b",
    "prId" : 3516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b83cb3bd-3d54-4827-8199-4302dca3d391",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "as with other places, mention why you'd prefer the others\n",
        "createdAt" : "2016-04-24T02:20:46Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53a5a525b0c035e3c7df9c96bff5343726e1578",
    "line" : 196,
    "diffHunk" : "@@ -1,1 +1790,1794 @@///  * [Stack]\n///  * [CustomSingleChildLayout]\n///  * [CustomMultiChildLayout]\nclass Flow extends MultiChildRenderObjectWidget {\n  /// Creates a flow layout."
  },
  {
    "id" : "68e69ab3-1716-458d-9392-d9bf0706296a",
    "prId" : 4212,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fd4c2ef-ae66-44d5-aa29-a28c9f070e66",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "2.0 might be a better example since 0.5 will cause overflow\n",
        "createdAt" : "2016-05-26T19:44:59Z",
        "updatedAt" : "2016-05-26T19:44:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "541a9e6c792d4c76aa396f64160d5580cfe3d5a1",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +487,491 @@/// child's size in that dimension. If a size factor is non-null then the\n/// corresponding dimension of this widget will be the product of the child's\n/// dimension and the size factor. For example if widthFactor is 0.5 then\n/// the width of this widget will always be half of the child's width.\n///"
  },
  {
    "id" : "5275a234-588f-4144-badf-d1598530ad67",
    "prId" : 4212,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6efa7ab3-7790-4102-9e05-033732d1d67e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should be consistent about whether we put the description in parentheses or not (here and anywhere else we do this)\n",
        "createdAt" : "2016-05-26T19:45:29Z",
        "updatedAt" : "2016-05-26T19:45:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "b3f5d718-8d1d-4603-a678-542709cdebef",
        "parentId" : "6efa7ab3-7790-4102-9e05-033732d1d67e",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "if we don't have parentheses, we should put a comma after the class name\n",
        "createdAt" : "2016-05-26T19:46:11Z",
        "updatedAt" : "2016-05-26T19:46:11Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3a77bb4e-e391-449a-9160-c9cd7fa4ce2a",
        "parentId" : "6efa7ab3-7790-4102-9e05-033732d1d67e",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The `[Foo] (one line explanation)` pattern has already been established, I will follow.\n",
        "createdAt" : "2016-05-27T16:47:07Z",
        "updatedAt" : "2016-05-27T16:47:07Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "541a9e6c792d4c76aa396f64160d5580cfe3d5a1",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +495,499 @@///  * [Center] (which is the same as [Align] but with the [alignment] always\n///    set to [FractionalOffset.center])\n///  * [FractionallySizedBox] which sizes its child based on its own size.\nclass Align extends SingleChildRenderObjectWidget {\n  /// Creates an alignment widget."
  },
  {
    "id" : "a75493d5-ee6a-43e6-a784-78ccaf5cf58b",
    "prId" : 4212,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67022074-d49c-4580-b8be-e3060a8cdcfb",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "What's \"an overflow box\"?\n",
        "createdAt" : "2016-05-26T19:45:39Z",
        "updatedAt" : "2016-05-26T19:45:39Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "12d2302b-38f2-49f5-a1d2-f8f3c28a11b6",
        "parentId" : "67022074-d49c-4580-b8be-e3060a8cdcfb",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I lifted the name from the widget's renderer, RenderFractionallySizedOverflowBox. I thought we used the name to identify widgets that didn't pass the constraints they were given to their child. \n\nEven if all of that is true, it's not likely that our dear reader will know as much, so I took the whole qualifying expression out.\n",
        "createdAt" : "2016-05-27T16:43:52Z",
        "updatedAt" : "2016-05-27T16:43:52Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "541a9e6c792d4c76aa396f64160d5580cfe3d5a1",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +751,755 @@}\n\n/// An overflow box that sizes its child to a fraction of the total available space.\n/// For more details about the layout algorithm, see [RenderFractionallySizedOverflowBox].\n///"
  },
  {
    "id" : "b63766ea-e1b5-4211-a1dc-25ea124c9d80",
    "prId" : 4212,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f914efe7-fdb7-4f79-a088-70ccfeb331e7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "above you use \"given\", here you use \"to give\". we should be consistent.\n",
        "createdAt" : "2016-05-26T19:46:40Z",
        "updatedAt" : "2016-05-26T19:46:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "541a9e6c792d4c76aa396f64160d5580cfe3d5a1",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +774,778 @@  final double widthFactor;\n\n  /// If non-null, the fraction of the incoming height to give to the child.\n  ///\n  /// If non-null, the child is given a tight height constraint that is the max"
  }
]