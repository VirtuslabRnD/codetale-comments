[
  {
    "id" : "9835bde6-8969-4cec-bd81-27afd18ee308",
    "prId" : 832,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cd954b3-45d2-49e4-8e21-b59cb22854e5",
        "parentId" : null,
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "typo: tran**s**formation\n",
        "createdAt" : "2015-12-09T15:41:37Z",
        "updatedAt" : "2015-12-09T15:41:37Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "21083a22-2abe-4d90-8e9f-70be92772fdf",
        "parentId" : "8cd954b3-45d2-49e4-8e21-b59cb22854e5",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Done.\n",
        "createdAt" : "2015-12-09T17:17:39Z",
        "updatedAt" : "2015-12-09T17:17:39Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "e55858411fae9f7de2efc75400c6e706dddd5b07",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +807,811 @@  final EdgeDims padding;\n\n  /// The tranformation matrix to apply before painting the container.\n  final Matrix4 transform;\n"
  },
  {
    "id" : "d76c3747-5f41-4e4c-b0b0-4d295ec31697",
    "prId" : 882,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a5b1d1e-20bc-43cc-b48e-2b34dcdc32c7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This should have more detail since the definition of FractionalOffset probably can't help.\n",
        "createdAt" : "2015-12-11T02:05:28Z",
        "updatedAt" : "2015-12-11T02:35:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "1c8872c4-61dc-4fda-b438-49a7cb3d0639",
        "parentId" : "1a5b1d1e-20bc-43cc-b48e-2b34dcdc32c7",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(same comment for other classes with this field)\n",
        "createdAt" : "2015-12-11T02:07:35Z",
        "updatedAt" : "2015-12-11T02:35:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "40dda1ed4bf4691a936bc91291323a719654dbd2",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +1392,1396 @@  final ImageFit fit;\n\n  /// How to align the image within its bounds.\n  ///\n  /// An alignment of (0.0, 0.0) aligns the image to the top-left corner of its"
  },
  {
    "id" : "e7fec0f4-90ae-48b5-861f-5e7ddc65021a",
    "prId" : 1309,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09950963-4f3e-4aab-a1c6-44cb0f0d9fdb",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "We should probably use `..` cascade here.  I realize you're following the existing pattern, but this just occurred to me.\n",
        "createdAt" : "2016-01-26T07:42:16Z",
        "updatedAt" : "2016-01-27T18:04:54Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "a57ed88b-46f2-4053-bfcf-0dd327d29c74",
        "parentId" : "09950963-4f3e-4aab-a1c6-44cb0f0d9fdb",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Filed https://github.com/flutter/flutter/issues/1381. Not sure it's worth it, though. I would hope the resulting code would be identical, and with the current pattern the code is more consistent.\n",
        "createdAt" : "2016-01-26T15:48:56Z",
        "updatedAt" : "2016-01-27T18:04:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a1788371bd78a74f763aab26bca87e92224cc7",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +2074,2078 @@    renderObject.container = container;\n    renderObject.checked = checked;\n    renderObject.label = label;\n  }\n"
  },
  {
    "id" : "32c6d92c-a47a-48bc-a55e-54a5befb9589",
    "prId" : 2273,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "628ff5fc-68d7-46e0-838d-6dc4f11e19e1",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Do you want to reference CustomOneChildLayout too?\n",
        "createdAt" : "2016-02-29T22:29:48Z",
        "updatedAt" : "2016-02-29T22:29:48Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff8d60c8dd036e09dd0b80492e8c46d775e7cc2e",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1005,1009 @@/// If you want to lay a number of children out in a particular\n/// pattern, or if you want to make a custom layout manager, you\n/// probably want to use [CustomMultiChildLayout] instead. In\n/// particular, when using a Stack you can't position children\n/// relative to their size or the stack's own size."
  },
  {
    "id" : "3150cec0-bd98-404a-933d-8f306e8a925c",
    "prId" : 2447,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3e13912-17ee-4147-9960-740ddf835e38",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "man, this is really not much of a class, huh.\n",
        "createdAt" : "2016-03-06T01:17:40Z",
        "updatedAt" : "2016-03-06T02:00:53Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b73670a31a1efdf786e2c3d8303b24cee2a19ee8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1000,1004 @@\n/// A base class for widgets that accept [Positioned] children.\nabstract class StackRenderObjectWidgetBase extends MultiChildRenderObjectWidget {\n  StackRenderObjectWidgetBase({\n    List<Widget> children: _emptyWidgetList,"
  },
  {
    "id" : "a847a923-9966-44d5-845d-70ba99e2d1dd",
    "prId" : 3105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ba8fb08-04f8-42c6-aa06-a8ef019c8c4f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this might collide\n",
        "createdAt" : "2016-04-05T16:53:35Z",
        "updatedAt" : "2016-04-05T19:58:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "96e765255b1d6d2a74d7134d053f0cc81339d1ff",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +2454,2458 @@\n  factory RepaintBoundary.wrap(Widget child, int childIndex) {\n    Key key = child.key != null ? new ValueKey<Key>(child.key) : new ValueKey<int>(childIndex);\n    return new RepaintBoundary(key: key, child: child);\n  }"
  },
  {
    "id" : "caad5fce-2aaf-4576-bde2-dcbc9fb127c4",
    "prId" : 3422,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d9c3894-b58e-424d-ba37-03c3afee7e4e",
        "parentId" : null,
        "authorId" : "29909713-5424-4233-a02b-b02672141af4",
        "body" : "I suspect we'll end up wanting to namspace our globals at some point. :)\n",
        "createdAt" : "2016-04-19T22:55:32Z",
        "updatedAt" : "2016-04-19T23:03:17Z",
        "lastEditedBy" : "29909713-5424-4233-a02b-b02672141af4",
        "tags" : [
        ]
      },
      {
        "id" : "8b400c2b-7de6-4350-a74d-ed873523f4bd",
        "parentId" : "7d9c3894-b58e-424d-ba37-03c3afee7e4e",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "namespacing is under the control of the importer (import ... as).\n",
        "createdAt" : "2016-04-19T23:07:54Z",
        "updatedAt" : "2016-04-19T23:07:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "97b0027b-4932-4631-99cb-635636a6b056",
        "parentId" : "7d9c3894-b58e-424d-ba37-03c3afee7e4e",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(e.g. we regularly namespaces dart:ui imports \"as ui\", and mojom imports \"as mojom\".)\n",
        "createdAt" : "2016-04-19T23:08:15Z",
        "updatedAt" : "2016-04-19T23:08:15Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed89b1a356ed752c89e0419be939392e7aa5e84d",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +2148,2152 @@  static AssetBundle of(BuildContext context) {\n    DefaultAssetBundle result = context.inheritFromWidgetOfExactType(DefaultAssetBundle);\n    return result?.bundle ?? rootBundle;\n  }\n"
  },
  {
    "id" : "b43f7f92-a65d-4ce8-8e71-07cf83027904",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0be13581-204c-403e-bfbb-4a4589ff7254",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "not sure \"using a variety of different styles\" quite conveys the right impression here.\n",
        "createdAt" : "2016-04-22T21:25:38Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1721,1725 @@/// A paragraph of rich text.\n///\n/// The [RichText] widget displays text using a variety of different styles. The\n/// text to display is described using a tree of [TextSpan] objects, each of\n/// which has an associated style, which is used for that subtree. The text"
  },
  {
    "id" : "76d0fb03-465e-4a8a-9ea8-5bc0bef12bae",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49789864-599e-47f8-a188-e64b438fbbcd",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i don't know what you mean by \"displayed on the layout constraints\"\n",
        "createdAt" : "2016-04-22T21:27:19Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "1b4c2d7c-5272-45a4-823c-17c67e1d21c7",
        "parentId" : "49789864-599e-47f8-a188-e64b438fbbcd",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Oh man, somehow I left out like six words from that sentence.\n",
        "createdAt" : "2016-04-23T14:45:00Z",
        "updatedAt" : "2016-04-23T14:45:00Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1724,1728 @@/// text to display is described using a tree of [TextSpan] objects, each of\n/// which has an associated style, which is used for that subtree. The text\n/// might break across multiple lines or might all be displayed on the layout\n/// constraints.\n///"
  },
  {
    "id" : "3e91649e-9132-4c1c-b377-352de3aec5d3",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d6af1d7-e7f8-4f8b-adac-a06e707f63a6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I think it'd be clearer if you said \"...an associated style that is used...\".\n",
        "createdAt" : "2016-04-22T21:28:08Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +1723,1727 @@/// The [RichText] widget displays text using a variety of different styles. The\n/// text to display is described using a tree of [TextSpan] objects, each of\n/// which has an associated style, which is used for that subtree. The text\n/// might break across multiple lines or might all be displayed on the layout\n/// constraints."
  },
  {
    "id" : "109a837b-a78c-4926-9435-9d19a85a4d72",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4afe203-3a3b-4226-8929-355d7dcfc7ae",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "mention [DefaultTextStyle.of] so they don't go and try to walk the tree to find the nearest one or something\n",
        "createdAt" : "2016-04-22T21:28:40Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +1729,1733 @@/// Text displayed in a [RichText] widget must be explicitly styled. When\n/// picking which style to use, consider using the closest enclosing\n/// [DefaultTextStyle] to provide defaults.\n///\n/// All the text uses the same style, consider using the [Text] widget, which is"
  },
  {
    "id" : "d6599e7b-96f4-4ed4-9538-555fc33d1df9",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4b77c49-768c-4201-9c37-5a6de19c36c6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "When...\n",
        "createdAt" : "2016-04-22T21:28:47Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +1731,1735 @@/// [DefaultTextStyle] to provide defaults.\n///\n/// All the text uses the same style, consider using the [Text] widget, which is\n/// less verbose and integrates with [DefaultTextStyle] for default styling.\n///"
  },
  {
    "id" : "78990481-3e3a-4a62-a386-ee1daba3ec04",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "269a3048-38b2-403c-ae26-df67f7b11e27",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "\"on the layout constraints\" again\n",
        "createdAt" : "2016-04-22T21:29:20Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +1793,1797 @@/// The [Text] widget displays a string of text with single style. The string\n/// might break across multiple lines or might all be displayed on the layout\n/// constraints.\n///\n/// The [style] argument is optional. When omitted, the text will use the style"
  },
  {
    "id" : "c9f861dd-c743-4508-89bb-d55a19b9b147",
    "prId" : 3507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdf60dbd-fbdc-404d-9597-20d1345ebc77",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "strike \"by default\" since you started with \"when omitted\".\n",
        "createdAt" : "2016-04-22T21:29:44Z",
        "updatedAt" : "2016-04-22T23:38:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e8efe127349c831983b3b4aa09bdfda27102b01",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +1796,1800 @@///\n/// The [style] argument is optional. When omitted, the text will use the style\n/// from the closest enclosing [DefaultTextStyle] by default. If the given\n/// style's [TextStyle.inherit] property is true, the given style will be\n/// merged with the closest enclosing [DefaultTextStyle]. This merging behavior"
  },
  {
    "id" : "bc26fb6a-b4c3-4902-a432-dff8ab23af7a",
    "prId" : 3516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74770bff-45a4-40d4-be1a-11b4a1c8d3e9",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "`* [Center] (which is the same as Align but with the [alignment] always set to 0.5,0.5)` or some such\n",
        "createdAt" : "2016-04-24T02:16:12Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53a5a525b0c035e3c7df9c96bff5343726e1578",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +443,447 @@/// See also:\n///\n///  * [CustomSingleChildLayout]\n///  * [Center] (which is the same as [Align] but with the [alignment] always\n///    set to [FractionalOffset.center])"
  },
  {
    "id" : "dc8442c7-e82d-4587-aba0-a583205aba3e",
    "prId" : 3516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f63040da-4744-4a90-9daa-77bf1926b818",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "under Center, say something about Align.\n",
        "createdAt" : "2016-04-24T02:16:37Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53a5a525b0c035e3c7df9c96bff5343726e1578",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +518,522 @@///\n/// The delegate can determine the layout constraints for the child and can\n/// decide where to position the child. The delegate can also determine the size\n/// of the parent, but the size of the parent cannot depend on the size of the\n/// child."
  },
  {
    "id" : "de221cdc-a803-4fe7-8ba5-f14e2b86b54e",
    "prId" : 3516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e0c9711-42db-44c0-aea0-aa5077c9d65a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "explain when you'd prefer stack or flow over multichildcustomlayout\n",
        "createdAt" : "2016-04-24T02:18:56Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53a5a525b0c035e3c7df9c96bff5343726e1578",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +602,606 @@/// * [CustomSingleChildLayout]\n/// * [Stack]\n/// * [Flow]\nclass CustomMultiChildLayout extends MultiChildRenderObjectWidget {\n  /// Creates a custom multi-child layout."
  },
  {
    "id" : "7571388a-6964-4ae9-ae6b-e475ecbd2886",
    "prId" : 3516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b8bb88d-6cca-4d68-8332-4294725993b2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "as opposed to what?\n",
        "createdAt" : "2016-04-24T02:19:43Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53a5a525b0c035e3c7df9c96bff5343726e1578",
    "line" : 174,
    "diffHunk" : "@@ -1,1 +1768,1772 @@///\n/// Flow layouts are optimized for repositioning children using transformation\n/// matrices.\n///\n/// The flow container is sized independently from the children by the"
  },
  {
    "id" : "42291e42-b288-4682-a570-e8e32216456b",
    "prId" : 3516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b83cb3bd-3d54-4827-8199-4302dca3d391",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "as with other places, mention why you'd prefer the others\n",
        "createdAt" : "2016-04-24T02:20:46Z",
        "updatedAt" : "2016-04-24T04:02:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53a5a525b0c035e3c7df9c96bff5343726e1578",
    "line" : 196,
    "diffHunk" : "@@ -1,1 +1790,1794 @@///  * [Stack]\n///  * [CustomSingleChildLayout]\n///  * [CustomMultiChildLayout]\nclass Flow extends MultiChildRenderObjectWidget {\n  /// Creates a flow layout."
  },
  {
    "id" : "68e69ab3-1716-458d-9392-d9bf0706296a",
    "prId" : 4212,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fd4c2ef-ae66-44d5-aa29-a28c9f070e66",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "2.0 might be a better example since 0.5 will cause overflow\n",
        "createdAt" : "2016-05-26T19:44:59Z",
        "updatedAt" : "2016-05-26T19:44:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "541a9e6c792d4c76aa396f64160d5580cfe3d5a1",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +487,491 @@/// child's size in that dimension. If a size factor is non-null then the\n/// corresponding dimension of this widget will be the product of the child's\n/// dimension and the size factor. For example if widthFactor is 0.5 then\n/// the width of this widget will always be half of the child's width.\n///"
  },
  {
    "id" : "5275a234-588f-4144-badf-d1598530ad67",
    "prId" : 4212,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6efa7ab3-7790-4102-9e05-033732d1d67e",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should be consistent about whether we put the description in parentheses or not (here and anywhere else we do this)\n",
        "createdAt" : "2016-05-26T19:45:29Z",
        "updatedAt" : "2016-05-26T19:45:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "b3f5d718-8d1d-4603-a678-542709cdebef",
        "parentId" : "6efa7ab3-7790-4102-9e05-033732d1d67e",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "if we don't have parentheses, we should put a comma after the class name\n",
        "createdAt" : "2016-05-26T19:46:11Z",
        "updatedAt" : "2016-05-26T19:46:11Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3a77bb4e-e391-449a-9160-c9cd7fa4ce2a",
        "parentId" : "6efa7ab3-7790-4102-9e05-033732d1d67e",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The `[Foo] (one line explanation)` pattern has already been established, I will follow.\n",
        "createdAt" : "2016-05-27T16:47:07Z",
        "updatedAt" : "2016-05-27T16:47:07Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "541a9e6c792d4c76aa396f64160d5580cfe3d5a1",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +495,499 @@///  * [Center] (which is the same as [Align] but with the [alignment] always\n///    set to [FractionalOffset.center])\n///  * [FractionallySizedBox] which sizes its child based on its own size.\nclass Align extends SingleChildRenderObjectWidget {\n  /// Creates an alignment widget."
  },
  {
    "id" : "a75493d5-ee6a-43e6-a784-78ccaf5cf58b",
    "prId" : 4212,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67022074-d49c-4580-b8be-e3060a8cdcfb",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "What's \"an overflow box\"?\n",
        "createdAt" : "2016-05-26T19:45:39Z",
        "updatedAt" : "2016-05-26T19:45:39Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "12d2302b-38f2-49f5-a1d2-f8f3c28a11b6",
        "parentId" : "67022074-d49c-4580-b8be-e3060a8cdcfb",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I lifted the name from the widget's renderer, RenderFractionallySizedOverflowBox. I thought we used the name to identify widgets that didn't pass the constraints they were given to their child. \n\nEven if all of that is true, it's not likely that our dear reader will know as much, so I took the whole qualifying expression out.\n",
        "createdAt" : "2016-05-27T16:43:52Z",
        "updatedAt" : "2016-05-27T16:43:52Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "541a9e6c792d4c76aa396f64160d5580cfe3d5a1",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +751,755 @@}\n\n/// An overflow box that sizes its child to a fraction of the total available space.\n/// For more details about the layout algorithm, see [RenderFractionallySizedOverflowBox].\n///"
  },
  {
    "id" : "b63766ea-e1b5-4211-a1dc-25ea124c9d80",
    "prId" : 4212,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f914efe7-fdb7-4f79-a088-70ccfeb331e7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "above you use \"given\", here you use \"to give\". we should be consistent.\n",
        "createdAt" : "2016-05-26T19:46:40Z",
        "updatedAt" : "2016-05-26T19:46:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "541a9e6c792d4c76aa396f64160d5580cfe3d5a1",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +774,778 @@  final double widthFactor;\n\n  /// If non-null, the fraction of the incoming height to give to the child.\n  ///\n  /// If non-null, the child is given a tight height constraint that is the max"
  },
  {
    "id" : "662ca9a6-be60-4535-a96a-d6e7e607aae8",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "923cf0c5-8fad-4bdd-b8fc-35b49d525425",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "asks\n",
        "createdAt" : "2016-05-30T06:32:19Z",
        "updatedAt" : "2016-05-30T06:32:19Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +209,213 @@/// Provides a canvas on which to draw during the paint phase.\n///\n/// When asked to paint, [CustomPaint] first ask its [painter] to paint on the\n/// current canvas, then it paints its child, and then, after painting its\n/// child, it ask its [foregroundPainter] to paint. The coodinate system of the"
  },
  {
    "id" : "784667cb-b9f7-4c62-9e7c-29d5cc1ec53a",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e59b101-5005-4a3d-9190-0659bf8e547d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "asks\n",
        "createdAt" : "2016-05-30T06:32:28Z",
        "updatedAt" : "2016-05-30T06:32:28Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +211,215 @@/// When asked to paint, [CustomPaint] first ask its [painter] to paint on the\n/// current canvas, then it paints its child, and then, after painting its\n/// child, it ask its [foregroundPainter] to paint. The coodinate system of the\n/// canvas matches the coordinate system of the [CustomPaint] object. The\n/// painters are expected to paint within a rectangle starting at the origin and"
  },
  {
    "id" : "17e081d9-9f55-47c9-90a0-9f87a0eada54",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "293ffccb-8740-466d-b4a7-6aea36e7a29a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "painters paint\n",
        "createdAt" : "2016-05-30T06:32:42Z",
        "updatedAt" : "2016-05-30T06:32:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +214,218 @@/// canvas matches the coordinate system of the [CustomPaint] object. The\n/// painters are expected to paint within a rectangle starting at the origin and\n/// encompassing a region of the given size. (If the painters paints outside\n/// those bounds, there might be insufficient memory allocated to rasterize the\n/// painting commands and the resulting behavior is undefined.)"
  },
  {
    "id" : "079494a6-8260-4e69-868f-b16c88f8d41e",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1ef3731-e97f-424b-81e3-f702bc659858",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "see earlier comment\n",
        "createdAt" : "2016-05-30T06:32:55Z",
        "updatedAt" : "2016-05-30T06:32:55Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +226,230 @@/// See also:\n///\n///  * [CustomPainter],\n///  * [Canvas]\nclass CustomPaint extends SingleChildRenderObjectWidget {"
  },
  {
    "id" : "fd2269c6-3bd1-42df-829c-6b0af3da7ece",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81a24a52-837a-47bc-9ff2-332d3336cdfb",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "delegates\n",
        "createdAt" : "2016-05-30T06:33:01Z",
        "updatedAt" : "2016-05-30T06:33:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +229,233 @@///  * [Canvas]\nclass CustomPaint extends SingleChildRenderObjectWidget {\n  /// Creates a widget that delgates its painting.\n  CustomPaint({ Key key, this.painter, this.foregroundPainter, Widget child })\n    : super(key: key, child: child);"
  },
  {
    "id" : "7e4e13f3-e760-44b4-b021-f5319f71b204",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5426c4b0-fd2d-4275-aee6-abc0a79518c2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "custom\n",
        "createdAt" : "2016-05-30T06:33:10Z",
        "updatedAt" : "2016-05-30T06:33:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +264,268 @@/// By default, [ClipRect] prevents its child from painting outside its\n/// bounds, but the size and location of the clip can be customized using a\n/// custome [clipper].\nclass ClipRect extends SingleChildRenderObjectWidget {\n  /// Creates a rectangular clip."
  },
  {
    "id" : "6dc75899-ef20-43eb-9c4c-0a585fce16fe",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7bdb7029-5152-4209-b589-aecf7e93de33",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "see earlier comments\n",
        "createdAt" : "2016-05-30T06:33:24Z",
        "updatedAt" : "2016-05-30T06:33:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +326,330 @@/// By default, inscribes an oval into its layout dimensions and prevents its\n/// child from painting outside that oval, but the size and location of the clip\n/// can be customized using a custom [clipper].\nclass ClipOval extends SingleChildRenderObjectWidget {\n  /// Creates an oval-shaped clip."
  },
  {
    "id" : "c13e57a6-7e2d-46ec-99c4-f188175ed54c",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9e7af18-e591-4d01-93a9-35dfa2e8e27d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "widget?\n",
        "createdAt" : "2016-05-30T06:34:15Z",
        "updatedAt" : "2016-05-30T06:34:15Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 236,
    "diffHunk" : "@@ -1,1 +1035,1039 @@  final FractionalOffset alignment;\n\n  /// The size this render box should attempt to be.\n  final Size size;\n"
  },
  {
    "id" : "676ad3ce-9489-4abe-9f7e-6f3859a10413",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ec464f3-04a0-4b08-94a5-460bc89d885b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "We usually use either noun phrases or sentences. This is something else.\n",
        "createdAt" : "2016-05-30T06:34:55Z",
        "updatedAt" : "2016-05-30T06:34:55Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "5741adb2-5c6e-45c6-aed6-b99adce4f64e",
        "parentId" : "0ec464f3-04a0-4b08-94a5-460bc89d885b",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, this came from a misguided attempt to make the render object and widget text the same.\n",
        "createdAt" : "2016-05-30T19:27:27Z",
        "updatedAt" : "2016-05-30T19:27:28Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 279,
    "diffHunk" : "@@ -1,1 +2957,2961 @@}\n\n/// Is invisible during hit testing.\n///\n/// When [ignoring] is `true`, this widget (and its subtree) is invisible"
  },
  {
    "id" : "7384e4e5-bf59-4a65-b4eb-9ef4d146d239",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25cdb94f-ed18-4e15-8b65-a81d04af4c93",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "comma before \"because\"\n",
        "createdAt" : "2016-05-30T06:35:17Z",
        "updatedAt" : "2016-05-30T06:35:17Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "cf4885b2-b075-4a5e-acd5-d226697292cb",
        "parentId" : "25cdb94f-ed18-4e15-8b65-a81d04af4c93",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Crazy.  http://www.quickanddirtytips.com/education/grammar/when-to-use-a-comma-before-because\n",
        "createdAt" : "2016-05-30T19:31:35Z",
        "updatedAt" : "2016-05-30T19:31:35Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 283,
    "diffHunk" : "@@ -1,1 +2961,2965 @@/// When [ignoring] is `true`, this widget (and its subtree) is invisible\n/// to hit testing. It still consumes space during layout and paints its child\n/// as usual. It just cannot be the target of located events because it returns\n/// `false` from [hitTest].\n///"
  },
  {
    "id" : "e64abb01-aec8-4aba-9cdf-066f9037edbd",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "703723af-bc46-494d-81a2-c0dc997627a1",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should be consistent about metadata vs meta data.\n",
        "createdAt" : "2016-05-30T06:36:11Z",
        "updatedAt" : "2016-05-30T06:36:11Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "cd35c5c0-9307-459e-80eb-57a759bb5df8",
        "parentId" : "703723af-bc46-494d-81a2-c0dc997627a1",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I went with \"meta data\" everywhere because that's what the code went with, but metadata seems to be accepted usage as well.\n",
        "createdAt" : "2016-05-30T19:34:12Z",
        "updatedAt" : "2016-05-30T19:34:12Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 327,
    "diffHunk" : "@@ -1,1 +3010,3014 @@/// Holds opaque meta data in the render tree.\nclass MetaData extends SingleChildRenderObjectWidget {\n  /// Creates a widget that hold opaque metadata.\n  ///\n  /// The [behavior] argument defaults to [HitTestBehavior.deferToChild]."
  },
  {
    "id" : "ff2fcc8b-1e68-4308-a782-1ccc535584ad",
    "prId" : 4266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00f9fed5-d539-48e8-a6b7-d41be2f00fb1",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this could probably do with more motivation. It's not at all clear why you'd use this.\n",
        "createdAt" : "2016-05-30T06:36:36Z",
        "updatedAt" : "2016-05-30T06:36:36Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3799f37d98a2708cb63e41c4886050d4400113de",
    "line" : 325,
    "diffHunk" : "@@ -1,1 +3008,3012 @@}\n\n/// Holds opaque meta data in the render tree.\nclass MetaData extends SingleChildRenderObjectWidget {\n  /// Creates a widget that hold opaque metadata."
  },
  {
    "id" : "f4d0fcb8-4cb4-425b-ac18-e5234d07e78c",
    "prId" : 4345,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0695776-e133-4a1c-915d-9101f8646edb",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "these docs should talk about the importance of [mainAxis].\n",
        "createdAt" : "2016-06-03T06:27:43Z",
        "updatedAt" : "2016-06-03T06:45:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4687fe83aeba7cb6ef5c11c340e0a2442bf79f1d",
    "line" : 505,
    "diffHunk" : "@@ -1,1 +1285,1289 @@/// visible is controlled by the scroll offset.\n///\n/// Viewport is the core scrolling primitive in the system, but it can be used\n/// in other situations.\nclass Viewport extends SingleChildRenderObjectWidget {"
  },
  {
    "id" : "d8e5bd1c-ac7f-48bd-a999-cbf34a953acb",
    "prId" : 4345,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "896e862d-bdb5-4a84-beb0-635f4bac909a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "should we have a `static final Container empty = new Container(width: 0.0, height: 0.0)` ?\n",
        "createdAt" : "2016-06-03T06:28:41Z",
        "updatedAt" : "2016-06-03T06:45:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e30e69a7-d03d-445c-91d7-de6b889314ee",
        "parentId" : "896e862d-bdb5-4a84-beb0-635f4bac909a",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Any `empty` widget would make more sense as a SizedBox...\n",
        "createdAt" : "2016-06-03T06:39:23Z",
        "updatedAt" : "2016-06-03T06:45:10Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "4687fe83aeba7cb6ef5c11c340e0a2442bf79f1d",
    "line" : 565,
    "diffHunk" : "@@ -1,1 +1387,1391 @@  ///\n  /// If null, the container will expand to fill all available space in its parent.\n  final Widget child;\n\n  /// Empty space to inscribe inside the decoration."
  },
  {
    "id" : "3ad8ad44-4dcb-4ab9-a96c-721b34ec79b2",
    "prId" : 4345,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8661242-57b8-4824-bf75-6dd296251ed4",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I know I started this trend, but I think we should move from `* foo (which blah)` to `* foo, which blah` (or `*foo, blah` in some cases). The parentheses don't work in all the cases where I want to use this pattern. I can do that in a later pass though.\n",
        "createdAt" : "2016-06-03T06:32:36Z",
        "updatedAt" : "2016-06-03T06:45:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4687fe83aeba7cb6ef5c11c340e0a2442bf79f1d",
    "line" : 604,
    "diffHunk" : "@@ -1,1 +1480,1484 @@/// See also:\n///\n///  * [Block] (which combines block layout with scrolling)\nclass BlockBody extends MultiChildRenderObjectWidget {\n  /// Creates a block layout widget."
  },
  {
    "id" : "0ace3a3e-2c29-4fe7-837c-68a676a1b81d",
    "prId" : 4769,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1af8b445-e09c-4d35-8aff-2bbfe9051a5f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "it doesn't return true from hitTest, its render object does\n",
        "createdAt" : "2016-06-27T19:42:56Z",
        "updatedAt" : "2016-06-27T19:57:12Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f912298e96e027e1923428e4a6cdafc8e864cc9f",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +2623,2627 @@/// during layout and paints its child as usual. It just prevents its children\n/// from being the target of located events, because it returns `true` from\n/// [hitTest].\nclass AbsorbPointer extends SingleChildRenderObjectWidget {\n  /// Creates a widget that absorbs pointers during hit testing."
  },
  {
    "id" : "d1c62a01-850f-4915-88df-90eba3891ec3",
    "prId" : 4769,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d6c456d-6be7-4434-a60f-f1a75afc6a80",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "missing period\n",
        "createdAt" : "2016-06-27T19:43:04Z",
        "updatedAt" : "2016-06-27T19:57:12Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f912298e96e027e1923428e4a6cdafc8e864cc9f",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +2627,2631 @@  /// Creates a widget that absorbs pointers during hit testing.\n  ///\n  /// The [absorbing] argument must not be null\n  AbsorbPointer({\n    Key key,"
  },
  {
    "id" : "ffb0893b-1219-48c4-981f-f084afecf4b5",
    "prId" : 6978,
    "prUrl" : "https://github.com/flutter/flutter/pull/6978#pullrequestreview-9600113",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a7e3535-dfc8-4d2f-b0c6-90681eabc938",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "\"since\" -> \"because\" is to you what \"++i\" -> \"i += 1\" is to me, huh",
        "createdAt" : "2016-11-22T06:08:46Z",
        "updatedAt" : "2016-11-22T06:34:58Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "2b1cefed-148e-446b-80ff-c21c52a61795",
        "parentId" : "2a7e3535-dfc8-4d2f-b0c6-90681eabc938",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "http://blog.apastyle.org/apastyle/2011/05/since-versus-because.html\r\n\r\nI forget which of the style guides drilled it into me.",
        "createdAt" : "2016-11-22T06:10:30Z",
        "updatedAt" : "2016-11-22T06:34:58Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "20fa42a8-e0d7-4243-934c-2f175fba8a63",
        "parentId" : "2a7e3535-dfc8-4d2f-b0c6-90681eabc938",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "The dictionary just gives both definitions as being fine. :-)\r\n\r\n(I have no problem with us using `because` instead of `since`. I just think it's funny.)",
        "createdAt" : "2016-11-22T06:18:24Z",
        "updatedAt" : "2016-11-22T06:34:58Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f267b5330eb2b51908dd8538ad6fd213d46741c0",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +1938,1942 @@/// placed (horizontal or vertical). This is referred to as the _main axis_. If\n/// you know the main axis in advance, then consider using a [Row] (if it's\n/// horizontal) or [Column] (if it's vertical) instead, because that will be less\n/// verbose.\n///"
  },
  {
    "id" : "0ec6a960-b2af-4d57-bfa2-36194949be04",
    "prId" : 7404,
    "prUrl" : "https://github.com/flutter/flutter/pull/7404#pullrequestreview-15827176",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24d14758-5637-46ad-8535-8465243941fa",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "s/Using/Use/ or s/to make/makes/.",
        "createdAt" : "2017-01-10T00:22:17Z",
        "updatedAt" : "2017-01-10T20:46:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "feb5337394f91d025bdfc03d19711c38add719e5",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +2306,2310 @@/// expand to fill the available space in the main axis (e.g., horizontally for\n/// a [Row] or vertically for a [Column]). If multiple children are expanded,\n/// the available space is divided amoung them according to the [flex] factor.\n///\n/// An [Expanded] widget must be a descendant of a [Row], [Column], or [Flex],"
  },
  {
    "id" : "910810d3-96c3-4295-ae67-0178ed66fcd8",
    "prId" : 7420,
    "prUrl" : "https://github.com/flutter/flutter/pull/7420#pullrequestreview-16239004",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbdcde52-d715-4c2d-bd10-8c0b4b4775ce",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "`@required` ?",
        "createdAt" : "2017-01-10T19:08:36Z",
        "updatedAt" : "2017-01-20T23:58:54Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "d671fd46-ce6c-412c-90cd-c202648efad0",
        "parentId" : "cbdcde52-d715-4c2d-bd10-8c0b4b4775ce",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It's a render object widget, and the render object can handle not having a child.",
        "createdAt" : "2017-01-11T21:23:52Z",
        "updatedAt" : "2017-01-20T23:58:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "46b765f0061abfee4668f44878ad683a1b45e520",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +2707,2711 @@  SliverToBoxAdapter({\n    Key key,\n    Widget child,\n  }) : super(key: key, child: child);\n"
  },
  {
    "id" : "416365de-c54b-430a-89cf-649fcc1dab89",
    "prId" : 10331,
    "prUrl" : "https://github.com/flutter/flutter/pull/10331#pullrequestreview-40591547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42ce0452-4668-4e8f-af70-22d9cd525496",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "but that may size => but might be sized",
        "createdAt" : "2017-05-26T18:35:52Z",
        "updatedAt" : "2017-05-26T23:54:10Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "c479eeba88a0f85baff627f158a4ad3fe03affb8",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +2230,2234 @@///    arrangement.\n///  * [Expanded], to indicate children that should take all the remaining room.\n///  * [Flexible], to indicate children that should share the remaining room but\n///    that may by sized smaller (leaving some remaining room unused).\nclass Row extends Flex {"
  },
  {
    "id" : "353b27ad-8b72-4c56-ad85-c30a13540cb5",
    "prId" : 10331,
    "prUrl" : "https://github.com/flutter/flutter/pull/10331#pullrequestreview-40636768",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c008ea1-2d5e-4186-98c7-c40e7108b449",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It's not clear why the FittedBox is needed here.",
        "createdAt" : "2017-05-26T18:37:31Z",
        "updatedAt" : "2017-05-26T23:54:10Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "6a211d2f-60f0-4779-8269-41ff518ba480",
        "parentId" : "6c008ea1-2d5e-4186-98c7-c40e7108b449",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i've added a comment:\r\n```\r\n///         fit: BoxFit.contain, // otherwise the logo will be tiny\r\n```",
        "createdAt" : "2017-05-26T23:33:12Z",
        "updatedAt" : "2017-05-26T23:54:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c479eeba88a0f85baff627f158a4ad3fe03affb8",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +2282,2286 @@///     new Text('Craft beautiful UIs'),\n///     new Expanded(\n///       child: new FittedBox(\n///         fit: BoxFit.contain,\n///         child: const FlutterLogo(),"
  },
  {
    "id" : "208cf6b5-16bd-4b4d-8575-e05b844c0957",
    "prId" : 10331,
    "prUrl" : "https://github.com/flutter/flutter/pull/10331#pullrequestreview-40636827",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04c05026-0584-415f-9e42-daf45f57c809",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I wonder if terms like 'left-aligned' are going to haunt us when RTL layouts are supported.",
        "createdAt" : "2017-05-26T18:38:51Z",
        "updatedAt" : "2017-05-26T23:54:10Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "7a3d63b4-bec8-4180-ad18-2661b29c1d6f",
        "parentId" : "04c05026-0584-415f-9e42-daf45f57c809",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "that's why i refer specifically to the example (which is in English). I agree we shouldn't say left-aligned in general.",
        "createdAt" : "2017-05-26T23:33:57Z",
        "updatedAt" : "2017-05-26T23:54:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c479eeba88a0f85baff627f158a4ad3fe03affb8",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +2293,2297 @@/// In the sample above, the text and the logo are centered on each line. In the\n/// following example, the [crossAxisAlignment] is set to\n/// [CrossAxisAlignment.start], so that the children are left-aligned. The\n/// [mainAxisSize] is set to [MainAxisSize.min], so that the column shrinks to\n/// fit the children."
  },
  {
    "id" : "aebea5a5-60f1-4fc3-a915-70b14b884a51",
    "prId" : 10425,
    "prUrl" : "https://github.com/flutter/flutter/pull/10425#pullrequestreview-41830564",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3a9faac-3d2e-4990-a5f3-e4bd0934d637",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "please add some more depth to this specific documentation, e.g. giving an example of where you'd use this",
        "createdAt" : "2017-06-02T17:03:57Z",
        "updatedAt" : "2017-06-02T20:36:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b09e618c2e5687de2394fd229c776ae5b669c17",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +3619,3623 @@/// A widget that drops the semantics of all widget that were painted before it\n/// in the same semantic container.\n///\n/// This is useful to hide widgets from accessibility tools that are painted\n/// behind a certain widget, e.g. an alert should usually disallow interaction"
  },
  {
    "id" : "133bd293-09de-4341-8aaf-1565a657b334",
    "prId" : 10425,
    "prUrl" : "https://github.com/flutter/flutter/pull/10425#pullrequestreview-41831403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0cc4d83-631e-4894-afc1-3f85102f2995",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(but leave this one the same, so that the reader can see different ways to describe this same behaviour and hopefully understand one of them!)",
        "createdAt" : "2017-06-02T17:07:44Z",
        "updatedAt" : "2017-06-02T20:36:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b09e618c2e5687de2394fd229c776ae5b669c17",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +3631,3635 @@class BlockSemantics extends SingleChildRenderObjectWidget {\n  /// Creates a widget that excludes the semantics of all widgets painted before\n  /// it in the same semantic container.\n  const BlockSemantics({ Key key, Widget child }) : super(key: key, child: child);\n"
  },
  {
    "id" : "c785dc3f-a4d4-40fe-8e6e-134e7332330f",
    "prId" : 11398,
    "prUrl" : "https://github.com/flutter/flutter/pull/11398#pullrequestreview-52220207",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2ce3c89-9dad-4b2e-89c3-60bb9459de53",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this would be a great place to copy the informative paragraph you wrote for RenderCustomPaint (this is more likely to be seen than the other). Duplicating the docs is fine.",
        "createdAt" : "2017-07-25T22:55:08Z",
        "updatedAt" : "2017-07-25T23:05:03Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d9dccaa416262a820e61f803fa8e997a90c604e",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +318,322 @@  final Size size;\n\n  /// Whether the painting is complex enough to benefit from caching.\n  ///\n  /// The compositor contains a raster cache that holds bitmaps of layers in"
  },
  {
    "id" : "9ae3b521-079c-4e31-86ab-261b2244d6a4",
    "prId" : 11809,
    "prUrl" : "https://github.com/flutter/flutter/pull/11809#pullrequestreview-59325347",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11d2a655-1e52-40a7-9813-3952e792a8b2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "apply earlier fixes to these two docs too",
        "createdAt" : "2017-08-29T17:48:05Z",
        "updatedAt" : "2017-08-29T23:32:33Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2819d915eb3f7bf6262ffd8c531c72be511f41e8",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +3250,3254 @@  final WrapCrossAlignment crossAxisAlignment;\n\n  /// Determines the order to lay children out horizontally and how to interpret\n  /// `start` and `end` in the horizontal direction.\n  ///"
  },
  {
    "id" : "f8d357e3-e371-457b-b3fa-d9edaaabbcd8",
    "prId" : 11838,
    "prUrl" : "https://github.com/flutter/flutter/pull/11838#pullrequestreview-59745621",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad4b96f8-9ebb-44fc-b87c-f95b97e48482",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I'd like to see unit tests for the widgets to which you added the ability to use FractionalOffsetGeometry, including some cases of weird combinations, to prove out whether the FractionalOffsetGeometry logic makes as much sense as the EdgeInsetsGeometry logic.",
        "createdAt" : "2017-08-30T16:39:53Z",
        "updatedAt" : "2017-08-31T02:57:44Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "34341297-3556-4002-a98c-1a4f8ab0d772",
        "parentId" : "ad4b96f8-9ebb-44fc-b87c-f95b97e48482",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(e.g. testing edge cases of changing from topLeft to topStart and seeing if it works right, or testing lerping, or whatnot)",
        "createdAt" : "2017-08-30T16:40:18Z",
        "updatedAt" : "2017-08-31T02:57:44Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "81a0c540-8707-466a-9002-0d838a836c83",
        "parentId" : "ad4b96f8-9ebb-44fc-b87c-f95b97e48482",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Added.",
        "createdAt" : "2017-08-31T02:57:22Z",
        "updatedAt" : "2017-08-31T02:57:44Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "cab7fa0d9b4649ec51ecbd4281ecde019c131450",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +1185,1189 @@  /// the child is aligned with the left edge of the parent whereas an x value\n  /// of 1.0 means that the right edge of the child is aligned with the right\n  /// edge of the parent. Other values interpolate (and extrapolate) linearly.\n  /// For example, a value of 0.5 means that the center of the child is aligned\n  /// with the center of the parent."
  },
  {
    "id" : "5d61b9ba-f340-4e92-aed9-9e8d9671b301",
    "prId" : 12657,
    "prUrl" : "https://github.com/flutter/flutter/pull/12657#pullrequestreview-71250002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb7905d2-2531-49b8-8c3d-957783cf2326",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this should probably elaborate on what \"a button\" means.",
        "createdAt" : "2017-10-20T23:55:53Z",
        "updatedAt" : "2017-10-23T19:31:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "842272dc-ff19-4bbb-a520-a51ac5bd37b0",
        "parentId" : "fb7905d2-2531-49b8-8c3d-957783cf2326",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "I'm not sure how to elaborate what a button means, I could try to describe it as something tap-able,  but not everything that's tap-able should have this flag set to true.\r\n\r\nInstead I added some documentation of how this affects TalkBack/VoiceOver (provides a \"button\" hint)",
        "createdAt" : "2017-10-23T16:36:10Z",
        "updatedAt" : "2017-10-23T19:31:38Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd94c1df0cd2d7e8004646aca0ed7728125f0cd5",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +4493,4497 @@  final bool selected;\n\n  /// If non-null, indicates that this subtree represents a button.\n  ///\n  /// TalkBack/VoiceOver provides users with the hint \"button\" when a button"
  },
  {
    "id" : "8db2521a-def8-40d2-a7b7-4b487451d5ec",
    "prId" : 12695,
    "prUrl" : "https://github.com/flutter/flutter/pull/12695#pullrequestreview-71703505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a758ef3f-5d51-4cfe-96f1-b2de50f8984f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "copy all the documentation you add for the callbacks above into these too, they're even more the front-line docs.",
        "createdAt" : "2017-10-24T20:39:09Z",
        "updatedAt" : "2017-10-26T00:38:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "886610ba-2637-471d-91a3-d742ec24a84d",
        "parentId" : "a758ef3f-5d51-4cfe-96f1-b2de50f8984f",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Done.",
        "createdAt" : "2017-10-24T23:22:37Z",
        "updatedAt" : "2017-10-26T00:38:38Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f25ff7753cd6c4610e8d5980b0ea4d572f1b492",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +4549,4553 @@  }\n\n  /// The handler for [SemanticsAction.tap].\n  ///\n  /// This is the semantic equivalent of a user briefly tapping the screen with"
  },
  {
    "id" : "3b3d506e-b9c2-4361-9f78-ac0449587cbd",
    "prId" : 17879,
    "prUrl" : "https://github.com/flutter/flutter/pull/17879#pullrequestreview-125336814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89b0880b-95ba-4884-afb0-02ff282a1dc1",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should probably allow the locale to be explicitly overridden here",
        "createdAt" : "2018-06-01T22:47:14Z",
        "updatedAt" : "2018-06-01T22:47:14Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "60221c6e-bb69-43b6-8a5b-5690d558233c",
        "parentId" : "89b0880b-95ba-4884-afb0-02ff282a1dc1",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(like the textDirection)",
        "createdAt" : "2018-06-01T22:47:21Z",
        "updatedAt" : "2018-06-01T22:47:21Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "af8775eb591c1bdffe3bc45957bcda833cb5a310",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +4358,4362 @@      ..textScaleFactor = textScaleFactor\n      ..maxLines = maxLines\n      ..locale = Localizations.localeOf(context, nullOk: true);\n  }\n"
  },
  {
    "id" : "0e2efedb-0f2c-41db-9d76-00583b34ada6",
    "prId" : 20365,
    "prUrl" : "https://github.com/flutter/flutter/pull/20365#pullrequestreview-145026579",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d432c4b8-0aa3-414f-abeb-36b85fae9c31",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Why less subtly?",
        "createdAt" : "2018-08-09T02:01:32Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "b6114af3-8b9a-4f72-8619-e637e201739f",
        "parentId" : "d432c4b8-0aa3-414f-abeb-36b85fae9c31",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Added: \"because it is either visible or hidden, rather than allowing fractional opacity values\"",
        "createdAt" : "2018-08-09T21:08:28Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "97e9d6137e5c25ec20ec4fc0408cdc6fd7d36f50",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +2289,2293 @@///\n///  * [Visibility], which can hide a child more efficiently (albeit less\n///    subtly).\n///  * [TickerMode], which can be used to disable animations in a subtree.\n///  * The [catalog of layout widgets](https://flutter.io/widgets/layout/)."
  },
  {
    "id" : "bdb3746d-a6a6-479c-89af-7c29eba18a4e",
    "prId" : 20365,
    "prUrl" : "https://github.com/flutter/flutter/pull/20365#pullrequestreview-145078696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa9300d6-3b03-4aad-8aad-74ad613d799a",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "\\o/\r\n\r\nI get asked all the time how to make a NullWidget in case you have to pass something. Perhaps we should even re-wrap this in a more-discoverably-named syntactic-sugar widget?",
        "createdAt" : "2018-08-09T03:19:48Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "14e615f0-b0ac-4d66-b995-9e476908d280",
        "parentId" : "aa9300d6-3b03-4aad-8aad-74ad613d799a",
        "authorId" : "184ebc31-399d-436c-8b7b-6539dab1539c",
        "body" : "@xster We've been using `Empty` and `Blank` as widgets in our app's which are just inherited from `SizedBox` with no width and height. Those could be quite good names as a synonym for a \"NullWidget\".",
        "createdAt" : "2018-08-09T08:34:27Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "184ebc31-399d-436c-8b7b-6539dab1539c",
        "tags" : [
        ]
      },
      {
        "id" : "d9d439bf-adcd-42c3-8b24-766822dbf37c",
        "parentId" : "aa9300d6-3b03-4aad-8aad-74ad613d799a",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It's generally even better to just not include any widget at all.",
        "createdAt" : "2018-08-09T22:05:41Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "6c4db1e0-18ee-481c-89e2-99aae03afadc",
        "parentId" : "aa9300d6-3b03-4aad-8aad-74ad613d799a",
        "authorId" : "184ebc31-399d-436c-8b7b-6539dab1539c",
        "body" : "I agree. I think @xster was talking about when you have to pass a child widget. Quite a lot of the time child is not optional and passing null will not work. This is the case for this \"NullWiget\"",
        "createdAt" : "2018-08-10T00:01:21Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "184ebc31-399d-436c-8b7b-6539dab1539c",
        "tags" : [
        ]
      },
      {
        "id" : "3da062dc-91f1-4b2d-9e30-b82872337689",
        "parentId" : "aa9300d6-3b03-4aad-8aad-74ad613d799a",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "But when you have to pass a widget, it just means you can go up higher and not pass the very widget that you are in. :-)",
        "createdAt" : "2018-08-10T01:23:30Z",
        "updatedAt" : "2018-08-10T01:23:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "97e9d6137e5c25ec20ec4fc0408cdc6fd7d36f50",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +1732,1736 @@\n  /// Creates a box that will become as small as its parent allows.\n  const SizedBox.shrink({ Key key, Widget child })\n    : width = 0.0,\n      height = 0.0,"
  },
  {
    "id" : "ccc0a918-08eb-4aaa-9239-9776c93da3bc",
    "prId" : 20365,
    "prUrl" : "https://github.com/flutter/flutter/pull/20365#pullrequestreview-145043963",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4af2738c-fd35-48e5-95ad-a4eaf9b93682",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Hard to know how my choice process should be differently colored by the '(albeit less subtly)'",
        "createdAt" : "2018-08-09T03:20:42Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "5ad03de4-86e1-4539-8cc7-c5e2abdbd698",
        "parentId" : "4af2738c-fd35-48e5-95ad-a4eaf9b93682",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "clarified",
        "createdAt" : "2018-08-09T22:06:01Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "97e9d6137e5c25ec20ec4fc0408cdc6fd7d36f50",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +152,156 @@/// See also:\n///\n///  * [Visibility], which can hide a child more efficiently (albeit less\n///    subtly, because it is either visible or hidden, rather than allowing\n///    fractional opacity values)."
  },
  {
    "id" : "35fe5d0f-f00e-4f24-b72a-d3ebb7259a47",
    "prId" : 21764,
    "prUrl" : "https://github.com/flutter/flutter/pull/21764#pullrequestreview-161846600",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4840fdee-debd-4486-8bbc-299a73053cc5",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "@gspencergoog do you know why this sample code section doesn't work?. ",
        "createdAt" : "2018-10-04T22:59:28Z",
        "updatedAt" : "2018-10-09T19:38:13Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "221f756f-7f11-4451-b181-9d8a67454bce",
        "parentId" : "4840fdee-debd-4486-8bbc-299a73053cc5",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "\"Doesn't work\" in what sense?",
        "createdAt" : "2018-10-04T23:04:03Z",
        "updatedAt" : "2018-10-09T19:38:13Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "13a49ee3-d061-4d02-ad01-8dc13cc70da5",
        "parentId" : "4840fdee-debd-4486-8bbc-299a73053cc5",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "https://github.com/flutter/flutter/pull/21764/checks?check_run_id=21624772 The sample code check thinks it is a class/method declaration",
        "createdAt" : "2018-10-04T23:05:02Z",
        "updatedAt" : "2018-10-09T19:38:13Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "de885d84-4aec-4e6c-a97e-3d9e7250ddaf",
        "parentId" : "4840fdee-debd-4486-8bbc-299a73053cc5",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "It looks \"normal\" to me.  You might check at the top of the file for a `// Examples can assume:` block that breaks this code, maybe.",
        "createdAt" : "2018-10-04T23:06:13Z",
        "updatedAt" : "2018-10-09T19:38:13Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "bf96d9ce-eced-4d91-a635-17228528553a",
        "parentId" : "4840fdee-debd-4486-8bbc-299a73053cc5",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "The issue was the level of indentation apparently",
        "createdAt" : "2018-10-04T23:25:54Z",
        "updatedAt" : "2018-10-09T19:38:13Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "aac90f44edfec1a16b0ca19ee67e444efe212e6d",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +5569,5573 @@/// visible.\n///\n/// ```dart\n/// ListView(\n///   addSemanticIndexes: false,"
  },
  {
    "id" : "46d10394-a226-4928-b04f-9f61b463e596",
    "prId" : 21764,
    "prUrl" : "https://github.com/flutter/flutter/pull/21764#pullrequestreview-162123078",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a0031e4-afe0-486a-9546-9f3803bc3aa8",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe add: Semantic indexes are used by TalkBack/Voiceover to make announcements about the current scroll state, e.g. \"<example announcement>\".",
        "createdAt" : "2018-10-05T17:04:47Z",
        "updatedAt" : "2018-10-09T19:38:13Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "aac90f44edfec1a16b0ca19ee67e444efe212e6d",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +5561,5565 @@/// to manually provide semanitc indexes if not all child of the scrollable\n/// contribute semantics.\n///\n/// ## Sample code\n///"
  },
  {
    "id" : "7fd64788-27b8-4bdd-8517-cc28f2b8bf0c",
    "prId" : 22278,
    "prUrl" : "https://github.com/flutter/flutter/pull/22278#pullrequestreview-159108711",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1948319-9be3-4958-92a4-43ef81082773",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "nit: blank line before \\`\\`\\`dart",
        "createdAt" : "2018-09-25T22:29:46Z",
        "updatedAt" : "2018-09-26T17:20:39Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "2a663aea-92ec-4c6d-8e5a-82499998cb04",
        "parentId" : "c1948319-9be3-4958-92a4-43ef81082773",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Done.",
        "createdAt" : "2018-09-26T17:20:07Z",
        "updatedAt" : "2018-09-26T17:21:04Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b22ef2a572f769d02959b1234859b7b8663b7265",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +155,159 @@/// and 1.0, it's much faster to directly use [Image] as following:\n///\n/// ```dart\n/// Image(\n///   image: image,"
  },
  {
    "id" : "42988471-025f-4611-b15f-f3ae440eab3a",
    "prId" : 22278,
    "prUrl" : "https://github.com/flutter/flutter/pull/22278#pullrequestreview-159240230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dce86373-df3b-4722-92c5-6c98bed27513",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "btw, sample code should always be in a sample section so that the analyzer catches it. looks like this sample code ended up not in a sample code section.",
        "createdAt" : "2018-09-26T23:00:29Z",
        "updatedAt" : "2018-09-26T23:00:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "539c4e82-5853-4acd-bbb0-c75b912cafa7",
        "parentId" : "dce86373-df3b-4722-92c5-6c98bed27513",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "@Hixie : what's my option here? Since it's already in `## Transparent image` section, can I create a sub-section `### Sample code`?",
        "createdAt" : "2018-09-26T23:48:37Z",
        "updatedAt" : "2018-09-26T23:48:37Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b22ef2a572f769d02959b1234859b7b8663b7265",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +161,165 @@///   colorBlendMode: BlendMode.modulate\n/// )\n/// ```\n///\n/// See also:"
  },
  {
    "id" : "51310d21-1a40-41dc-b6f2-2de415d74190",
    "prId" : 24830,
    "prUrl" : "https://github.com/flutter/flutter/pull/24830#pullrequestreview-195690145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fe9ebcf-c7e1-4ff1-a601-584165f65fe1",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: first paragraph should just be one sentence.",
        "createdAt" : "2019-01-23T00:46:06Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "7393291f-cfae-4df8-b2c7-ebf5ec6eac2a",
        "parentId" : "1fe9ebcf-c7e1-4ff1-a601-584165f65fe1",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Fixed.",
        "createdAt" : "2019-01-23T21:02:07Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f684a923245b2b3f1be91086d491a0128fd641fd",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +5108,5112 @@  final PointerEnterEventListener onPointerEnter;\n\n  /// Called when a pointer that has not triggered an [onPointerDown] changes\n  /// position.\n  ///"
  },
  {
    "id" : "63a8ebd7-25e5-4d19-9390-888e3284b85e",
    "prId" : 24830,
    "prUrl" : "https://github.com/flutter/flutter/pull/24830#pullrequestreview-197310249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "853e49fe-a4fb-48aa-91fd-00f17b967aac",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "(from offline discussion)\r\n\r\nIt seems like this class is not wired up to receive Hover events from the gesture binding (it only receives events that have a hit test result, which exclude hover events).\r\n\r\nWe should probably move what's implemented in MouseDetector into the Listener and remove MouseDetector altogether. That way, there's one Widget (Listener) that deals with all kinds of Pointer events, including hover. (And we should also add some tests to ensure that Listener.onPointerHover actually fires as expected.)",
        "createdAt" : "2019-01-25T21:57:58Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "5738e189-ba64-4bcf-b2c0-27fe3694c546",
        "parentId" : "853e49fe-a4fb-48aa-91fd-00f17b967aac",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Excellent idea! Done.",
        "createdAt" : "2019-01-28T23:42:29Z",
        "updatedAt" : "2019-01-29T15:55:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f684a923245b2b3f1be91086d491a0128fd641fd",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +5082,5086 @@    this.onPointerEnter,\n    this.onPointerExit,\n    this.onPointerHover,\n    this.onPointerUp,\n    this.onPointerCancel,"
  },
  {
    "id" : "4a3f9c5c-4c20-4bf2-a751-2d6eaab78f68",
    "prId" : 26586,
    "prUrl" : "https://github.com/flutter/flutter/pull/26586#pullrequestreview-193480040",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f43184b4-0a2e-42e3-9e72-0db9385b35a9",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "I think in this case it would be better to just do `## Sample code`",
        "createdAt" : "2019-01-16T07:48:10Z",
        "updatedAt" : "2019-01-22T05:56:55Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "bdeabe61-64d9-4596-9376-c21591a676b8",
        "parentId" : "f43184b4-0a2e-42e3-9e72-0db9385b35a9",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "No, it should be using what was there.  Every other sample in the app is using the \"blue box\" sample rendering, which includes a copy button, etc.",
        "createdAt" : "2019-01-16T23:29:23Z",
        "updatedAt" : "2019-01-22T05:56:55Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "6c23c2c7-73a9-49b4-b6dc-9a870317b698",
        "parentId" : "f43184b4-0a2e-42e3-9e72-0db9385b35a9",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Sorry for the confusion - I misread the docs",
        "createdAt" : "2019-01-17T06:55:29Z",
        "updatedAt" : "2019-01-22T05:56:55Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed0b0baecec8d449096e1aad48260aa738802271",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2852,2856 @@/// can't position children relative to their size or the stack's own size.\n///\n/// {@tool sample}\n///\n/// Using a [Stack] you can position widgets over one another."
  },
  {
    "id" : "a7bcad41-50fc-434b-bccb-f585fe5d685f",
    "prId" : 26586,
    "prUrl" : "https://github.com/flutter/flutter/pull/26586#pullrequestreview-193006026",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39720f24-7b7c-47f1-b7a3-5834795b327b",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "We can remove this since this will be in a `## Sample code` heading.",
        "createdAt" : "2019-01-16T07:48:31Z",
        "updatedAt" : "2019-01-22T05:56:55Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed0b0baecec8d449096e1aad48260aa738802271",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +2918,2922 @@/// )\n/// ```\n/// {@end-tool}\n///\n/// See also:"
  },
  {
    "id" : "24ac8ee1-416b-4663-8ac5-4cb589ee1e61",
    "prId" : 26586,
    "prUrl" : "https://github.com/flutter/flutter/pull/26586#pullrequestreview-193401050",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5a140ea-9631-4b2a-816c-61b182313e2c",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "This should be\r\n```suggestion\r\n/// {@end-tool}\r\n```",
        "createdAt" : "2019-01-16T23:25:59Z",
        "updatedAt" : "2019-01-22T05:56:55Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed0b0baecec8d449096e1aad48260aa738802271",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +2878,2882 @@/// ```\n/// {@end-tool}\n///\n/// {@tool sample}\n///"
  },
  {
    "id" : "84d5dd6e-955c-48d8-9f49-bbf166a6b1d7",
    "prId" : 26586,
    "prUrl" : "https://github.com/flutter/flutter/pull/26586#pullrequestreview-193401050",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f8d6bb4-0ec2-44df-993b-5e89e2ab64e9",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "```suggestion\r\n/// {@end-tool}\r\n```",
        "createdAt" : "2019-01-16T23:27:55Z",
        "updatedAt" : "2019-01-22T05:56:55Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed0b0baecec8d449096e1aad48260aa738802271",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +2919,2923 @@/// ```\n/// {@end-tool}\n///\n/// See also:\n///"
  },
  {
    "id" : "87e651bf-c4ea-4f1f-88ea-70f0a5222b4c",
    "prId" : 27260,
    "prUrl" : "https://github.com/flutter/flutter/pull/27260#pullrequestreview-197831134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f11edac-d388-4983-bcb2-5854756f00a0",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "you might say the \"100x100 [Align] widget\".",
        "createdAt" : "2019-01-29T23:07:22Z",
        "updatedAt" : "2019-01-30T01:20:56Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "3df9592fc71a183ce646343278f977034de0a1c4",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +1541,1545 @@///     in the coordinate system of the red container.\n///   * (0.2 * width of [Align], 0.6 * height of [Align]) = (20.0, 60.0) in the\n///     coordinate system of the [Align] widget.\n///\n/// The [Align] widget positions the red [Container] such that the two points are on"
  },
  {
    "id" : "cc9ccedd-478d-4b7b-bc23-0d6089c70bf3",
    "prId" : 27260,
    "prUrl" : "https://github.com/flutter/flutter/pull/27260#pullrequestreview-197831134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0386a408-d3c3-42dc-a14f-be3aa25e29b0",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "You might say \"40x40 red [Container]\".",
        "createdAt" : "2019-01-29T23:08:12Z",
        "updatedAt" : "2019-01-30T01:20:56Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "3df9592fc71a183ce646343278f977034de0a1c4",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +1539,1543 @@///\n///   * (0.2 * width of red [Container], 0.6 * height of red [Container]) = (8.0, 24.0)\n///     in the coordinate system of the red container.\n///   * (0.2 * width of [Align], 0.6 * height of [Align]) = (20.0, 60.0) in the\n///     coordinate system of the [Align] widget."
  },
  {
    "id" : "28994f64-2b5b-4540-9239-7189f3c45d8e",
    "prId" : 28017,
    "prUrl" : "https://github.com/flutter/flutter/pull/28017#pullrequestreview-204478491",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a43d0972-d1fd-4ee7-86ca-272bf4c0d3f8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this is begging for screenshots.",
        "createdAt" : "2019-02-15T21:52:03Z",
        "updatedAt" : "2019-02-21T22:46:01Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "f63b4d51-33c4-4611-9406-8b409ca1d9a5",
        "parentId" : "a43d0972-d1fd-4ee7-86ca-272bf4c0d3f8",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I will add code that generates them to https://github.com/flutter/assets-for-api-docs. For further discussion here's what the two samples produce when running on a phone:\r\n\r\n![img_0010](https://user-images.githubusercontent.com/1227763/52886900-ba919000-312a-11e9-91c8-e461d7d845dd.PNG)\r\n\r\n![img_0011](https://user-images.githubusercontent.com/1227763/52886908-be251700-312a-11e9-8216-d856f26128be.PNG)\r\n\r\n",
        "createdAt" : "2019-02-15T22:05:36Z",
        "updatedAt" : "2019-02-21T22:46:01Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "b304149c-23e1-410b-bd25-f0c66b9462ed",
        "parentId" : "a43d0972-d1fd-4ee7-86ca-272bf4c0d3f8",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Actually, our diagram generating infrastructure currently can't handle blurs: https://github.com/flutter/flutter/issues/28028",
        "createdAt" : "2019-02-15T23:23:55Z",
        "updatedAt" : "2019-02-21T22:46:01Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "45762de2d102510c39eb7979064fb93ca2dfae55",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +398,402 @@/// )\n/// ```\n/// {@end-tool}\n///\n/// This effect is relatively expensive, especially if the filter is non-local,"
  },
  {
    "id" : "aef3db1c-a299-4f68-8834-8549c512677c",
    "prId" : 28017,
    "prUrl" : "https://github.com/flutter/flutter/pull/28017#pullrequestreview-204478674",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28a17a97-ac96-4207-9041-dca120d38d8d",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Maybe \"to the content that was already painted within its bounds\"?",
        "createdAt" : "2019-02-15T22:26:42Z",
        "updatedAt" : "2019-02-21T22:46:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "7827e0b2-72d3-4c8a-b5bc-3a41eed2c7f5",
        "parentId" : "28a17a97-ac96-4207-9041-dca120d38d8d",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "It seems to happily apply the filter outside its bounds if a child decided to paint outside the bounds...",
        "createdAt" : "2019-02-15T23:24:48Z",
        "updatedAt" : "2019-02-21T22:46:01Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "45762de2d102510c39eb7979064fb93ca2dfae55",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +334,338 @@}\n\n/// A widget that applies a filter to the existing painted content and then\n/// paints [child].\n///"
  },
  {
    "id" : "f9175ed3-af25-4934-ba3c-e7716cec4c49",
    "prId" : 28017,
    "prUrl" : "https://github.com/flutter/flutter/pull/28017#pullrequestreview-206581823",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "164a446c-cfca-4442-909b-da7e246bb1a7",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Can we wrap/change the behavior of the BackdropFilter so users don't need to learn about this distinction? (or do they?)",
        "createdAt" : "2019-02-16T02:53:01Z",
        "updatedAt" : "2019-02-21T22:46:01Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "153ba5c5-f100-4d70-bbb4-fdc6f3860502",
        "parentId" : "164a446c-cfca-4442-909b-da7e246bb1a7",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I would love to make this more intuitive. Do you have an idea how that can be achieved, though?",
        "createdAt" : "2019-02-19T19:08:35Z",
        "updatedAt" : "2019-02-21T22:46:01Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "b789ba33-a90c-4c46-9662-c917a0bf1e68",
        "parentId" : "164a446c-cfca-4442-909b-da7e246bb1a7",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Maybe there's a much smarter fix that can be done at the layer level, @liyuqian might know. Otherwise, out of convenience, we can just emulate the below behavior in the framework?",
        "createdAt" : "2019-02-19T19:14:37Z",
        "updatedAt" : "2019-02-21T22:46:01Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "0bf2f4b5-2952-4a41-acbd-83de15cc797a",
        "parentId" : "164a446c-cfca-4442-909b-da7e246bb1a7",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "https://github.com/flutter/flutter/pull/28174",
        "createdAt" : "2019-02-20T00:17:08Z",
        "updatedAt" : "2019-02-21T22:46:01Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "2e29f183-71cb-4c96-9ce0-44654ee2ff84",
        "parentId" : "164a446c-cfca-4442-909b-da7e246bb1a7",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "\\o/",
        "createdAt" : "2019-02-20T00:25:51Z",
        "updatedAt" : "2019-02-21T22:46:01Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "0502e4a9-27ee-4417-bb1c-9b4bd1e947fd",
        "parentId" : "164a446c-cfca-4442-909b-da7e246bb1a7",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "After talking to @liyuqian we will do this in two steps: I am going to submit this PR with the updated documentation of how the BackdropFilter currently works. When @liyuqian finds some time, he will finish #28174 to change the behavior of this to something more reasonable.",
        "createdAt" : "2019-02-21T22:48:09Z",
        "updatedAt" : "2019-02-21T22:48:09Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "45762de2d102510c39eb7979064fb93ca2dfae55",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +370,374 @@/// ```\n///\n/// To blur the entire area of the [Container], increase the paint area of\n/// the Container. Giving it a transparent background color will increase\n/// the paint area of the container (and hence blur the background behind the"
  },
  {
    "id" : "0412cc69-32c5-4d24-ae9b-15c58cf9440a",
    "prId" : 29057,
    "prUrl" : "https://github.com/flutter/flutter/pull/29057#pullrequestreview-212481806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a764887f-eb12-41a4-95d4-0828f43acb5e",
        "parentId" : null,
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "I don't think `direction` is a variable/in-scope identifier. Should probably just be direction or \\`direction`",
        "createdAt" : "2019-03-08T21:09:50Z",
        "updatedAt" : "2019-03-13T17:36:26Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      },
      {
        "id" : "68ed38a0-0299-47b3-a778-104920bf9464",
        "parentId" : "a764887f-eb12-41a4-95d4-0828f43acb5e",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "https://docs.flutter.io/flutter/widgets/Flex/direction.html",
        "createdAt" : "2019-03-08T21:12:53Z",
        "updatedAt" : "2019-03-13T17:36:26Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c8b09a09733c31a0934b4b76cfe716a6220deb9",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +3521,3525 @@/// verbose.\n///\n/// To cause a child to expand to fill the available space in the [direction]\n/// of this widget's main axis, wrap the child in an [Expanded] widget.\n///"
  },
  {
    "id" : "6c2a9052-023f-4901-b420-02b6fd243b3f",
    "prId" : 31291,
    "prUrl" : "https://github.com/flutter/flutter/pull/31291#pullrequestreview-228547340",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d45dc88-9f0c-4f75-885f-33ba7a313dac",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "[StatefulBuilder]?",
        "createdAt" : "2019-04-18T23:31:11Z",
        "updatedAt" : "2019-04-25T00:56:22Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1d0176d246b0ffcb873225c3515014c979eccdc",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +6249,6253 @@/// {@tool sample}\n///\n/// This example shows using an inline StatefulBuilder that rebuilds and that\n/// also has state.\n///"
  },
  {
    "id" : "3fefb3ce-2cf1-4708-8cf1-d57e5ff2d9eb",
    "prId" : 33946,
    "prUrl" : "https://github.com/flutter/flutter/pull/33946#pullrequestreview-246281325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d8140ee-f991-4e2a-bb9b-856b07a093d5",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This is a breaking change",
        "createdAt" : "2019-06-05T21:59:52Z",
        "updatedAt" : "2019-06-06T00:04:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "7825cf9a-08c1-4093-93de-5a07798f7dca",
        "parentId" : "0d8140ee-f991-4e2a-bb9b-856b07a093d5",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "Yeah, this was announced already.",
        "createdAt" : "2019-06-05T22:00:16Z",
        "updatedAt" : "2019-06-06T00:04:32Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      },
      {
        "id" : "6ea807cb-ec38-43e4-8a92-8c7b1bd3328e",
        "parentId" : "0d8140ee-f991-4e2a-bb9b-856b07a093d5",
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "Should be able to replace instances of RichText with Text.rich to migrate.",
        "createdAt" : "2019-06-05T22:01:29Z",
        "updatedAt" : "2019-06-06T00:04:32Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "89fd7a3c3166e2a5e0577ea76e9f8fafb1460b82",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +4928,4932 @@  /// The [textDirection], if null, defaults to the ambient [Directionality],\n  /// which in that case must not be null.\n  RichText({\n    Key key,\n    @required this.text,"
  },
  {
    "id" : "c9b476c7-4601-4fbe-ae30-5bb9ecdb21bc",
    "prId" : 35919,
    "prUrl" : "https://github.com/flutter/flutter/pull/35919#pullrequestreview-267742004",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d74e048-b7c0-4c75-9fa3-83ad3a75292f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I'd be wary of having too many cross-references. We should probably limit ourselves to 3 or 4 per class, on average. I say this because the other day I totally missed a key cross-reference that I was _looking_ for, because I saw a list of like 7 cross-references and my eyes just glazed over the lot on the assumption that with that many links they'd all be useless.",
        "createdAt" : "2019-07-10T22:53:02Z",
        "updatedAt" : "2019-07-30T07:38:21Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a95cce16-1eb5-4714-bc98-98c726580bc1",
        "parentId" : "5d74e048-b7c0-4c75-9fa3-83ad3a75292f",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I wish these would be more context aware: \"based on what you've looked at recently in the docs, you may also want to check out: ...\" - with a link to see more links of those are not sufficient.",
        "createdAt" : "2019-07-29T12:50:11Z",
        "updatedAt" : "2019-07-30T07:38:21Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "28eda3dc2e9f8e7c7e0e8b82e24f9d67dede9a24",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +1716,1720 @@///  * [CustomSingleChildLayout], which uses a delegate to control the layout of\n///    a single child.\n///  * [Center], which is the same as [Align] but with the [alignment] always\n///    set to [Alignment.center].\n///  * [FractionallySizedBox], which sizes its child based on a fraction of its"
  },
  {
    "id" : "56da3cb6-0780-420d-8da9-a6a01a45d525",
    "prId" : 36217,
    "prUrl" : "https://github.com/flutter/flutter/pull/36217#pullrequestreview-266199101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4a67d1a-e0a0-458b-be00-bc74d386ac7b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "lets add this to https://github.com/flutter/flutter/wiki/Pending-deprecations as well",
        "createdAt" : "2019-07-24T18:17:40Z",
        "updatedAt" : "2019-07-31T21:13:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5698731c44b6437aad879670fd18f8d7495c449",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +5506,5510 @@    // TODO(tongmu): After it goes stable, remove these 3 parameters from Listener\n    // and Listener should no longer need an intermediate class _PointerListener.\n    // https://github.com/flutter/flutter/issues/36085\n    @Deprecated('Use MouseRegion.onEnter instead')\n    this.onPointerEnter, // ignore: deprecated_member_use_from_same_package"
  },
  {
    "id" : "36247d16-c13b-4e3a-ad5b-e9450c2bd94e",
    "prId" : 36217,
    "prUrl" : "https://github.com/flutter/flutter/pull/36217#pullrequestreview-266882604",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe5918b2-8143-402a-9233-a4ad93d5b331",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "I feel the name is a bit vague. It is hard to tell what kind of pointer enter will trigger this callback unless I know the background of this widget. onHoverEnter might be a better name if we plan to add more pointer events into this widget in the future. same for onExit",
        "createdAt" : "2019-07-24T23:22:01Z",
        "updatedAt" : "2019-07-31T21:13:54Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "39defdb6-05ab-4ae6-9c5b-8d99f082fe9a",
        "parentId" : "fe5918b2-8143-402a-9233-a4ad93d5b331",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Will these fire even when the mouse button is down (not hover)?",
        "createdAt" : "2019-07-25T00:03:36Z",
        "updatedAt" : "2019-07-31T21:13:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "1d2ede97-af0e-4f44-9b05-b1c5127a6ef9",
        "parentId" : "fe5918b2-8143-402a-9233-a4ad93d5b331",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "Yes. Holding a button while entering also triggers `onEnter`, and holding a button while exiting also triggers `onExit`. It tracks general mouse movement, no matter if buttons are pressed.",
        "createdAt" : "2019-07-25T20:11:18Z",
        "updatedAt" : "2019-07-31T21:13:54Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      },
      {
        "id" : "a121a6e8-e0ab-4032-8140-8494745acdf6",
        "parentId" : "fe5918b2-8143-402a-9233-a4ad93d5b331",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "in that case, the name should be fine",
        "createdAt" : "2019-07-25T21:00:39Z",
        "updatedAt" : "2019-07-31T21:13:54Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5698731c44b6437aad879670fd18f8d7495c449",
    "line" : 307,
    "diffHunk" : "@@ -1,1 +5750,5754 @@  const MouseRegion({\n    Key key,\n    this.onEnter,\n    this.onExit,\n    this.onHover,"
  },
  {
    "id" : "1ae29485-c86a-48d3-bf0c-9d17a1ce975a",
    "prId" : 48453,
    "prUrl" : "https://github.com/flutter/flutter/pull/48453#pullrequestreview-348943747",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59e32477-a4be-4230-947f-478fe657cf5c",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "You should end this with `{@end-tool}` and start a new one for the next example.",
        "createdAt" : "2020-01-27T20:15:56Z",
        "updatedAt" : "2020-01-28T20:55:01Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "4eda4bbd0c89267b46e3584738c10a789ffbf8e1",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +5971,5975 @@  /// ```\n  /// {@end-tool}\n  ///\n  /// {@tool sample --template=stateful_widget_scaffold_center}\n  /// The following example shows a widget that hides its content one second"
  },
  {
    "id" : "630425b2-c349-47ad-b22a-47ebf93cef0b",
    "prId" : 61323,
    "prUrl" : "https://github.com/flutter/flutter/pull/61323#pullrequestreview-452958212",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1289384-dd38-4e52-853e-0e90bdf47cc2",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "This link is broken. I don't think this asset actually exists in https://github.com/flutter/assets-for-api-docs?",
        "createdAt" : "2020-07-21T17:52:47Z",
        "updatedAt" : "2020-08-11T16:01:00Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "53160aaf-d4c4-47d0-8e77-93fffc1561af",
        "parentId" : "a1289384-dd38-4e52-853e-0e90bdf47cc2",
        "authorId" : "a17c6bbf-6430-4f6d-919f-505c144c3610",
        "body" : "@Piinks  Yes it is but I have also created PR for that too, [#115](https://github.com/flutter/assets-for-api-docs/pull/115)",
        "createdAt" : "2020-07-22T02:48:22Z",
        "updatedAt" : "2020-08-11T16:01:00Z",
        "lastEditedBy" : "a17c6bbf-6430-4f6d-919f-505c144c3610",
        "tags" : [
        ]
      }
    ],
    "commit" : "550c0f678ddd9342ff86b755ac02f0a0845f9c77",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +4210,4214 @@/// ```\n///\n/// ![](https://flutter.github.io/assets-for-api-docs/assets/widgets/row_textDirection.png)\n///\n/// ## Layout algorithm"
  },
  {
    "id" : "5bfbfc98-3494-4072-ab3e-6c16d0163373",
    "prId" : 61425,
    "prUrl" : "https://github.com/flutter/flutter/pull/61425#pullrequestreview-448336124",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9482763d-f2c4-4c8e-ab8e-654c0bacc3df",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Can you update the documentation of this property to include what the default value is?",
        "createdAt" : "2020-07-14T17:25:42Z",
        "updatedAt" : "2020-07-14T17:55:28Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "fc227344-8ed8-404b-8b64-c3b359721dc4",
        "parentId" : "9482763d-f2c4-4c8e-ab8e-654c0bacc3df",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Done",
        "createdAt" : "2020-07-14T17:55:38Z",
        "updatedAt" : "2020-07-14T17:55:38Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "214045e3a9a2c79fb3dd21b49e99807c56e09e0a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3864,3868 @@    this.textDirection,\n    this.verticalDirection = VerticalDirection.down,\n    this.textBaseline = TextBaseline.alphabetic,\n    this.clipBehavior = Clip.hardEdge,\n    List<Widget> children = const <Widget>[],"
  },
  {
    "id" : "2f02f264-ed1b-4003-a039-4488347eaa94",
    "prId" : 62452,
    "prUrl" : "https://github.com/flutter/flutter/pull/62452#pullrequestreview-457122390",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a8cf497-3b58-4e3d-b3a0-cd9766d0fb1c",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "LOL. What exactly does a \"Customer Clipper\" do?  Doesn't sound like something we'd want to implement. :-)",
        "createdAt" : "2020-07-29T00:33:31Z",
        "updatedAt" : "2020-07-29T00:35:29Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "15e4c453-e7af-46b0-9148-9a735e489ed6",
        "parentId" : "7a8cf497-3b58-4e3d-b3a0-cd9766d0fb1c",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Haha! ",
        "createdAt" : "2020-07-29T00:47:37Z",
        "updatedAt" : "2020-07-29T00:47:38Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad96936c126b24a099fd8e9ab2e3ff7081fd567c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +983,987 @@/// See also:\n///\n///  * [ShapeBorderClipper], which converts a [ShapeBorder] to a [CustomClipper], as\n///    needed by this widget.\nclass PhysicalShape extends SingleChildRenderObjectWidget {"
  },
  {
    "id" : "15d63994-0663-421b-bbd0-486fb5504b93",
    "prId" : 62499,
    "prUrl" : "https://github.com/flutter/flutter/pull/62499#pullrequestreview-457714003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb85bea1-5475-4b84-9f6a-22a72378b5cf",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "\"at the same time\" seems confusing, this all properties are applied at instantiation time.  Maybe \"along with\"?",
        "createdAt" : "2020-07-29T16:57:58Z",
        "updatedAt" : "2020-07-29T17:56:25Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "68156f421eca1e53be94c5af643427ee6b308b18",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +1235,1239 @@  ///\n  /// This is equivalent to setting an origin based on the size of the box.\n  /// If it is specified at the same time as the [origin], both are applied.\n  ///\n  /// An [AlignmentDirectional.centerStart] value is the same as an [Alignment]"
  },
  {
    "id" : "2c05bad5-1990-4032-8153-5ef8d46a21c1",
    "prId" : 63639,
    "prUrl" : "https://github.com/flutter/flutter/pull/63639#pullrequestreview-473787911",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1fcff08-8149-49db-8380-adfe401b0c95",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "A widget that imposes additional constraints on its child.\r\n\r\nBest to lift these one-liners from the existing API doc; don't want to explain \"boxes\" vs widget here.",
        "createdAt" : "2020-08-24T19:43:52Z",
        "updatedAt" : "2020-08-25T00:08:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e1d9e1a144e9e638395caa8461e4b24149cb4e6",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +2251,2255 @@/// See also:\n///\n///  * [ConstrainedBox], which renders a box which imposes constraints\n///    on its child.\n///  * [OverflowBox], a widget that imposes additional constraints on its child,"
  },
  {
    "id" : "b013670f-5e2f-45bf-bf54-9087116b6566",
    "prId" : 63639,
    "prUrl" : "https://github.com/flutter/flutter/pull/63639#pullrequestreview-473787911",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "402e899d-5db7-4f51-803c-e569050bbe88",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Should itemize the asserts we apply to parameters, and parameter default values, here. \r\n\r\nI'm assuming (didn't read ahead) that child can be null.",
        "createdAt" : "2020-08-24T19:47:00Z",
        "updatedAt" : "2020-08-25T00:08:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e1d9e1a144e9e638395caa8461e4b24149cb4e6",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +2264,2268 @@  /// The `alignment`, `clipBehavior` and `constraintsTransform` arguments must\n  /// not be null.\n  const ConstraintsTransformBox({\n    Key key,\n    Widget child,"
  },
  {
    "id" : "0bd0dbc1-fd73-4321-bb05-e9ce22226341",
    "prId" : 63639,
    "prUrl" : "https://github.com/flutter/flutter/pull/63639#pullrequestreview-473879350",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcbdb984-65d3-4a7b-bca2-ac26b2d627d2",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Why don't we use Directionality.of(context) if the textDirection parameter is null?",
        "createdAt" : "2020-08-24T19:50:14Z",
        "updatedAt" : "2020-08-25T00:08:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "b16c19c7-3d22-48b6-b9c4-0b80b44e5b52",
        "parentId" : "dcbdb984-65d3-4a7b-bca2-ac26b2d627d2",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "It does. Copied the docs from unconstrainedbox and didn't check.",
        "createdAt" : "2020-08-24T21:46:23Z",
        "updatedAt" : "2020-08-25T00:08:49Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e1d9e1a144e9e638395caa8461e4b24149cb4e6",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +2287,2291 @@  ///\n  /// If this is an [AlignmentDirectional], then [textDirection] must not be\n  /// null.\n  ///\n  /// See also:"
  },
  {
    "id" : "d4c7a3d1-f647-4628-bc5a-30874c0c66d2",
    "prId" : 63639,
    "prUrl" : "https://github.com/flutter/flutter/pull/63639#pullrequestreview-473787911",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5b41b3c-1385-4418-ad67-43b6c3db7d70",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2020-08-24T19:59:32Z",
        "updatedAt" : "2020-08-25T00:08:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e1d9e1a144e9e638395caa8461e4b24149cb4e6",
    "line" : 190,
    "diffHunk" : "@@ -1,1 +2421,2425 @@    constraintsTransform ??= _unconstrained;\n\n    return ConstraintsTransformBox(\n      child: child,\n      textDirection: textDirection ?? Directionality.of(context),"
  },
  {
    "id" : "bda0dbf6-55b7-45c3-b097-6968376c666d",
    "prId" : 66305,
    "prUrl" : "https://github.com/flutter/flutter/pull/66305#pullrequestreview-493071146",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c356d79-3695-444a-b152-21ec76352458",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I believe you also want to add the deprecation notice to this param here.",
        "createdAt" : "2020-09-22T00:42:41Z",
        "updatedAt" : "2020-09-22T19:21:57Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "23700fe2-69d8-498b-aa57-3f751a0e6cb4",
        "parentId" : "9c356d79-3695-444a-b152-21ec76352458",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "Done.",
        "createdAt" : "2020-09-22T00:53:16Z",
        "updatedAt" : "2020-09-22T19:21:57Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "63923cdb07692a80cc689ddc08a731ea08bee607",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +3281,3285 @@      'This feature was deprecated after v1.22.0-12.0.pre.'\n    )\n    this.overflow = Overflow.clip,\n    this.clipBehavior = Clip.hardEdge,\n    List<Widget> children = const <Widget>[],"
  },
  {
    "id" : "abd4a8f6-bf6f-40f4-a891-a53949ab6d55",
    "prId" : 66688,
    "prUrl" : "https://github.com/flutter/flutter/pull/66688#pullrequestreview-499016353",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d30baf03-ac56-4b0d-b283-3036c7e47e24",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "why does this clone if it doesn't dispose? won't this create extra image clones",
        "createdAt" : "2020-09-28T21:26:48Z",
        "updatedAt" : "2020-10-01T04:55:36Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "2432234c-d221-4c5d-8f52-d3e8770e2f59",
        "parentId" : "d30baf03-ac56-4b0d-b283-3036c7e47e24",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "The render object disposes of it. This can't dispose because it's stateless - it needs to be kept alive by whatever created RawImage.",
        "createdAt" : "2020-09-28T21:31:36Z",
        "updatedAt" : "2020-10-01T04:55:36Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "1b4cd63a-1c32-4977-ad19-74b14834b3c3",
        "parentId" : "d30baf03-ac56-4b0d-b283-3036c7e47e24",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This is pretty confusing - so the State class has its copy, which it will clone/dispose as needed. Then the RawImage is just a pass through, and finally the RO accepts the clone and does a dispose.\r\n\r\nMaybe a safer arrangement would be for the RO to clone in the setter, so that the behavior is internal to it?",
        "createdAt" : "2020-09-28T21:34:54Z",
        "updatedAt" : "2020-10-01T04:55:36Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "d537873f-dd50-4955-a999-ee1e167f2d05",
        "parentId" : "d30baf03-ac56-4b0d-b283-3036c7e47e24",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "I'm trying to keep the contract as you should never have to clone something you received. If we have some places that clone immediately I think it's more confusing.\r\n\r\nHowever, I agree that `RawImage` is a sore spot, and I think it'd be preferable to just make it private since it's easy to misuse.",
        "createdAt" : "2020-09-28T21:37:46Z",
        "updatedAt" : "2020-10-01T04:55:36Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "35f8d423-da90-4484-9bef-240b98f40499",
        "parentId" : "d30baf03-ac56-4b0d-b283-3036c7e47e24",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I have also been confused by the fact that cloning and disposing are done by separate entities.",
        "createdAt" : "2020-09-28T21:54:57Z",
        "updatedAt" : "2020-10-01T04:55:36Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "4e0949b8-3a7e-4ae3-ab11-34055aaff2ca",
        "parentId" : "d30baf03-ac56-4b0d-b283-3036c7e47e24",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Yeah, if it needs to act like an implementation detail of the Image class it should be private. But we do have other `RawFoo` classes exposed in the framework so that people could build on top of that, though I think there is also a rendering helper method too?\r\n\r\nI dunno.",
        "createdAt" : "2020-09-28T21:55:00Z",
        "updatedAt" : "2020-10-01T04:55:36Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "26f5fbde-4073-41f3-b0e5-2dae16be2dec",
        "parentId" : "d30baf03-ac56-4b0d-b283-3036c7e47e24",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Refactored RawImage to not be a special case. There's a private impl that's a special case now though.",
        "createdAt" : "2020-09-28T23:12:56Z",
        "updatedAt" : "2020-10-01T04:55:36Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "933fce77-9792-4dc8-9b44-3f0324ada4d1",
        "parentId" : "d30baf03-ac56-4b0d-b283-3036c7e47e24",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "I had to revert that refactor because it doesn't work to have the image hold a stateful object like that.",
        "createdAt" : "2020-09-29T20:43:02Z",
        "updatedAt" : "2020-10-01T04:55:36Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "d08aaefd-3a11-47ce-abc2-e66df31d073a",
        "parentId" : "d30baf03-ac56-4b0d-b283-3036c7e47e24",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "why not have the widget pass through, and its caller (the call to the RawImage constructor) have to call `clone()`?",
        "createdAt" : "2020-09-30T00:39:08Z",
        "updatedAt" : "2020-10-01T04:55:36Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "33890924-8a2e-4596-9fe9-63809dd230a2",
        "parentId" : "d30baf03-ac56-4b0d-b283-3036c7e47e24",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "The widget might create multiple RenderObjects (via multiple elements). It has no defined lifetime, and so it's not clear when the widget's clone would ever get disposed.",
        "createdAt" : "2020-09-30T00:43:48Z",
        "updatedAt" : "2020-10-01T04:55:36Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d62a9aa22981de08d05418224b6de491c24b484",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +5558,5562 @@    );\n    renderObject\n      ..image = image?.clone()\n      ..debugImageLabel = debugImageLabel\n      ..width = width"
  },
  {
    "id" : "35c08dd8-3739-4d9a-8833-77b3b2bc88d2",
    "prId" : 66688,
    "prUrl" : "https://github.com/flutter/flutter/pull/66688#pullrequestreview-497951496",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48e46cf8-9b2e-4167-a205-04d7844bf22b",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Who disposes this?",
        "createdAt" : "2020-09-28T21:53:56Z",
        "updatedAt" : "2020-10-01T04:55:36Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "73bc7f3c-76a8-4e19-9f6c-2b21880a0420",
        "parentId" : "48e46cf8-9b2e-4167-a205-04d7844bf22b",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "The render object.",
        "createdAt" : "2020-09-28T22:51:07Z",
        "updatedAt" : "2020-10-01T04:55:36Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d62a9aa22981de08d05418224b6de491c24b484",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +5531,5535 @@    );\n    return RenderImage(\n      image: image?.clone(),\n      debugImageLabel: debugImageLabel,\n      width: width,"
  },
  {
    "id" : "d2f931b3-0ba1-4419-b107-18477c6cbce0",
    "prId" : 66688,
    "prUrl" : "https://github.com/flutter/flutter/pull/66688#pullrequestreview-497959389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c1147b8-9a70-499b-9a4f-1fcf5bdb2d57",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This doesn't need to be disposed?",
        "createdAt" : "2020-09-28T21:55:53Z",
        "updatedAt" : "2020-10-01T04:55:36Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "efe88e3a-ac35-47f8-983a-d31c3bbb29cc",
        "parentId" : "7c1147b8-9a70-499b-9a4f-1fcf5bdb2d57",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "This causes the render object to dispose the image.",
        "createdAt" : "2020-09-28T22:50:59Z",
        "updatedAt" : "2020-10-01T04:55:36Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "bbbaf317-a373-4127-98ad-02760ba312f7",
        "parentId" : "7c1147b8-9a70-499b-9a4f-1fcf5bdb2d57",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "I've refactored `RawImage` into a public `StatefulWidget` and made the current impl private. The public impl now does not need to be special cased.",
        "createdAt" : "2020-09-28T23:12:27Z",
        "updatedAt" : "2020-10-01T04:55:36Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d62a9aa22981de08d05418224b6de491c24b484",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +5578,5582 @@  void didUnmountRenderObject(RenderImage renderObject) {\n    // Have the render object dispose its image handle.\n    renderObject.image = null;\n  }\n"
  },
  {
    "id" : "f3d0bd14-1a37-49da-8f5c-9dbab6d81738",
    "prId" : 66688,
    "prUrl" : "https://github.com/flutter/flutter/pull/66688#pullrequestreview-498877427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3b11ec4-e471-40b4-9b97-5881b10ac43b",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe add a comment here explaining why we need to set this to null.",
        "createdAt" : "2020-09-29T20:06:53Z",
        "updatedAt" : "2020-10-01T04:55:36Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "d4728a27-de30-4f2a-8947-6d166f7fec7c",
        "parentId" : "e3b11ec4-e471-40b4-9b97-5881b10ac43b",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Done",
        "createdAt" : "2020-09-29T20:43:30Z",
        "updatedAt" : "2020-10-01T04:55:36Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d62a9aa22981de08d05418224b6de491c24b484",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +5578,5582 @@  void didUnmountRenderObject(RenderImage renderObject) {\n    // Have the render object dispose its image handle.\n    renderObject.image = null;\n  }\n"
  },
  {
    "id" : "5773711e-9806-4a3c-a1ea-b782b0ceb6ae",
    "prId" : 68151,
    "prUrl" : "https://github.com/flutter/flutter/pull/68151#pullrequestreview-508833082",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2aed7b9-3010-4a6e-ac56-b13188cf5d2d",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: space above this line?",
        "createdAt" : "2020-10-14T23:11:00Z",
        "updatedAt" : "2020-10-15T00:19:59Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "147f3ffd53df69cb1e973f7f61531495d4fcba9f",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +7176,7180 @@/// definining a new widget class:\n///\n/// ```dart\n/// Center(\n///   child: Builder("
  },
  {
    "id" : "60c2ca62-de2c-4a99-b8c1-67cce428d36e",
    "prId" : 69117,
    "prUrl" : "https://github.com/flutter/flutter/pull/69117#pullrequestreview-518067398",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c319bbeb-3116-4d8b-bae3-3549afd182bc",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Should we start encouraging people to migrate by adding an assert here with a message saying to use `maybeOf` if the resolved direction is null?",
        "createdAt" : "2020-10-27T18:35:55Z",
        "updatedAt" : "2020-10-27T18:36:19Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "720dfe70-4f7c-481a-92ab-9a1bba5e9d98",
        "parentId" : "c319bbeb-3116-4d8b-bae3-3549afd182bc",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "That could be kinda spammy. I think we usually don't do that.",
        "createdAt" : "2020-10-27T18:39:32Z",
        "updatedAt" : "2020-10-27T18:39:32Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "e4ccaed7-07c6-411b-95e2-26456e21b6b3",
        "parentId" : "c319bbeb-3116-4d8b-bae3-3549afd182bc",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Won't that effectively be what users gets though when we actually make this non-null? But probably without the benefit of a message printing next to the error that they really should use the other variant...",
        "createdAt" : "2020-10-27T18:40:29Z",
        "updatedAt" : "2020-10-27T18:40:29Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "63debfce-883d-4d63-8589-7a9a65bf14b4",
        "parentId" : "c319bbeb-3116-4d8b-bae3-3549afd182bc",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "We can make the error message link to TextDirection.maybeOf.",
        "createdAt" : "2020-10-27T18:41:58Z",
        "updatedAt" : "2020-10-27T18:41:58Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "00713010-65da-4fd9-a0a0-e1b4185d5b1c",
        "parentId" : "c319bbeb-3116-4d8b-bae3-3549afd182bc",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "How does that work for compile time errors?",
        "createdAt" : "2020-10-27T18:45:59Z",
        "updatedAt" : "2020-10-27T18:45:59Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "cfc7e7b0-6223-48e5-b29d-bc564dbea71e",
        "parentId" : "c319bbeb-3116-4d8b-bae3-3549afd182bc",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "What do you mean? The assert added will be a runtime error.",
        "createdAt" : "2020-10-27T18:58:50Z",
        "updatedAt" : "2020-10-27T18:58:51Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "e32c16e2-6ebb-49ee-9cf2-dddf3cf57177",
        "parentId" : "c319bbeb-3116-4d8b-bae3-3549afd182bc",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "We will basically just call https://master-api.flutter.dev/flutter/widgets/debugCheckHasDirectionality.html at the beginning of this method.",
        "createdAt" : "2020-10-27T19:00:47Z",
        "updatedAt" : "2020-10-27T19:00:48Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "481f48f6-dce0-4cd4-962f-af51da998135",
        "parentId" : "c319bbeb-3116-4d8b-bae3-3549afd182bc",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Discussed offline - most apps will get directionality from material/cupertinoapp, probably not worth worrying about outside of tests.",
        "createdAt" : "2020-10-27T19:28:40Z",
        "updatedAt" : "2020-10-27T19:28:40Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "d777a8429c6d5e515657b24bcb307958118e62c9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +108,112 @@  /// TextDirection textDirection = Directionality.of(context);\n  /// ```\n  // TODO(goderbauer): Make this non-null when customers have upgraded to Directionality.maybeOf.\n  static TextDirection? of(BuildContext context) {\n    final Directionality? widget = context.dependOnInheritedWidgetOfExactType<Directionality>();"
  },
  {
    "id" : "ad8c8588-349d-4533-a211-890f2c4d0756",
    "prId" : 69503,
    "prUrl" : "https://github.com/flutter/flutter/pull/69503#pullrequestreview-521194724",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96d5ca54-1bb5-459c-9c6f-07448caa6f2f",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Remove extra line\r\n```suggestion\r\n```",
        "createdAt" : "2020-11-01T05:38:54Z",
        "updatedAt" : "2020-11-01T05:52:27Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "dbb4a6a3-c850-4704-ad8d-4537ab762c60",
        "parentId" : "96d5ca54-1bb5-459c-9c6f-07448caa6f2f",
        "authorId" : "b39ab342-6a5b-4565-82fa-6a0a7b983f80",
        "body" : " Thanks for the feedback, I have made the changes.",
        "createdAt" : "2020-11-01T05:46:29Z",
        "updatedAt" : "2020-11-01T05:52:27Z",
        "lastEditedBy" : "b39ab342-6a5b-4565-82fa-6a0a7b983f80",
        "tags" : [
        ]
      },
      {
        "id" : "47e8540d-848e-4827-bbe9-fd2bf4745446",
        "parentId" : "96d5ca54-1bb5-459c-9c6f-07448caa6f2f",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I think you missed removing this extra line",
        "createdAt" : "2020-11-01T05:51:01Z",
        "updatedAt" : "2020-11-01T05:52:27Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "01f9936301eff96fc7ba50aa142d137a99a56e46",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +1495,1499 @@///\n/// {@end-tool}\n///\n/// See also:\n///"
  },
  {
    "id" : "f82b6798-2e67-4f84-8fdc-c3aff9cb6f42",
    "prId" : 70185,
    "prUrl" : "https://github.com/flutter/flutter/pull/70185#pullrequestreview-534150505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae20da97-7f68-41ed-863a-a594c3bf78ca",
        "parentId" : null,
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "Is this intended to be a new line, or just text wrap? If it's a new line, you should add an empty line. Single empty lines are ignored.",
        "createdAt" : "2020-11-19T07:42:21Z",
        "updatedAt" : "2020-11-20T15:45:31Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      },
      {
        "id" : "513cac43-072b-4788-8121-3d2b9a2b2cb9",
        "parentId" : "ae20da97-7f68-41ed-863a-a594c3bf78ca",
        "authorId" : "f2b91195-a573-4d5b-9743-df16264cc184",
        "body" : "just text wrap",
        "createdAt" : "2020-11-19T07:44:25Z",
        "updatedAt" : "2020-11-20T15:45:31Z",
        "lastEditedBy" : "f2b91195-a573-4d5b-9743-df16264cc184",
        "tags" : [
        ]
      }
    ],
    "commit" : "99c804282b1b213875a0d731ab77c598aa3c07ea",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +6624,6628 @@/// The following sample has an [IgnorePointer] widget wrapping the `Column`\n/// which contains a button.\n/// When [ignoring] is set to `true` anything inside the `Column` can\n/// not be tapped. When [ignoring] is set to `false` anything\n/// inside the `Column` can be tapped."
  }
]