[
  {
    "id" : "4f733fc4-5a60-451d-bebb-c38af855d401",
    "prId" : 38317,
    "prUrl" : "https://github.com/flutter/flutter/pull/38317#pullrequestreview-273907859",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d181b681-1652-4ed3-b005-732059c74997",
        "parentId" : null,
        "authorId" : "944c0c96-8dc6-43f1-afcd-d988bff0835d",
        "body" : "It might be useful to reference `AnimatedBuilder` or explain that the child is optional. The AnimatedBuilder docs have a sentence that explains it nicely:\r\n\r\n```\r\n/// If you pass the pre-built subtree as the [child] parameter, the\r\n/// AnimatedBuilder will pass it back to your builder function so that you\r\n/// can incorporate it into your build.\r\n///\r\n/// Using this pre-built child is entirely optional, but can improve\r\n/// performance significantly in some cases and is therefore a good practice.\r\n```",
        "createdAt" : "2019-08-12T17:58:53Z",
        "updatedAt" : "2019-08-22T23:26:45Z",
        "lastEditedBy" : "944c0c96-8dc6-43f1-afcd-d988bff0835d",
        "tags" : [
        ]
      },
      {
        "id" : "90005743-28f8-4e4e-b4e6-466802489fa9",
        "parentId" : "d181b681-1652-4ed3-b005-732059c74997",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Added.",
        "createdAt" : "2019-08-12T19:44:36Z",
        "updatedAt" : "2019-08-22T23:26:45Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2baf30aac4292d4bfb4237590c09f658d367001",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@///\n/// The current value of the animation along with the [child] is passed to\n/// the [builder] callback, which is expected to build a [Widget] based on the\n/// current animation value. The [builder] is called throughout the animation\n/// for every animation value until [Tween.end] is reached."
  },
  {
    "id" : "76559df2-febd-4bec-9a56-d6ce344edb3f",
    "prId" : 38317,
    "prUrl" : "https://github.com/flutter/flutter/pull/38317#pullrequestreview-274451421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "181a3551-7a93-4756-adeb-a759bf27b992",
        "parentId" : null,
        "authorId" : "944c0c96-8dc6-43f1-afcd-d988bff0835d",
        "body" : "Could this be an `Animatable<T>`? It doesn't look like `Tween.chain()` can be used without relaxing the type.",
        "createdAt" : "2019-08-12T18:04:02Z",
        "updatedAt" : "2019-08-22T23:26:45Z",
        "lastEditedBy" : "944c0c96-8dc6-43f1-afcd-d988bff0835d",
        "tags" : [
        ]
      },
      {
        "id" : "87fe2611-0ad9-4dbc-bcd9-71a9935f5ba1",
        "parentId" : "181a3551-7a93-4756-adeb-a759bf27b992",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Unfortunately, this has to be a Tween. What's the use case you'd have in mind for chain?",
        "createdAt" : "2019-08-12T19:52:48Z",
        "updatedAt" : "2019-08-22T23:26:45Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "a12742ad-5ac5-4409-b251-26df16d094b4",
        "parentId" : "181a3551-7a93-4756-adeb-a759bf27b992",
        "authorId" : "944c0c96-8dc6-43f1-afcd-d988bff0835d",
        "body" : "It looks like `chain()` is most commonly used with a CurveTween (to add a curve before composing a tween that interpolates between another type), but since this widget already has support for curves I don't think this is actually a problem. (this widget doesn't need to cover every use-case anyway)\r\n\r\n",
        "createdAt" : "2019-08-13T17:50:10Z",
        "updatedAt" : "2019-08-22T23:26:45Z",
        "lastEditedBy" : "944c0c96-8dc6-43f1-afcd-d988bff0835d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2baf30aac4292d4bfb4237590c09f658d367001",
    "line" : 168,
    "diffHunk" : "@@ -1,1 +166,170 @@  /// [TweenAnimationBuilder] in an instance variable to avoid accidental\n  /// modifications of the [Tween].\n  final Tween<T> tween;\n\n  /// Called every time the animation value changes."
  },
  {
    "id" : "7853d797-16ae-43d1-91e8-ea78eb85e43b",
    "prId" : 38317,
    "prUrl" : "https://github.com/flutter/flutter/pull/38317#pullrequestreview-275622393",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7336052d-7069-4c65-a0de-f203d513773c",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "Is there any special case when a new Tween.end is < the original Tween.begin? How does that affect the animation - and the direction as well? \r\nIt seems that all of the examples and tests illustrate that Tween.begin < Tween.end. ",
        "createdAt" : "2019-08-15T17:12:41Z",
        "updatedAt" : "2019-08-22T23:26:45Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "5d02cbc2-3f90-4a11-adc0-863d45d8119b",
        "parentId" : "7336052d-7069-4c65-a0de-f203d513773c",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Tweens in general don't make assumptions about how begin and end relate to each other. end can be smaller then begin and it shouldn't be a problem to run a tween forward from 100 to 10.",
        "createdAt" : "2019-08-15T19:24:59Z",
        "updatedAt" : "2019-08-22T23:26:45Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2baf30aac4292d4bfb4237590c09f658d367001",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +144,148 @@  /// value. The new animation runs from the current animation value (which may\n  /// be [Tween.end] of the old [tween], if that animation completed) to\n  /// [Tween.end] of the new [tween]. The [Tween.begin] value is ignored except\n  /// for the initial animation that is triggered when the widget builds for the\n  /// first time."
  },
  {
    "id" : "adc3b9f6-1876-4b23-ab83-20dd593856b5",
    "prId" : 38317,
    "prUrl" : "https://github.com/flutter/flutter/pull/38317#pullrequestreview-278729339",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a19baaea-8ef9-4955-b5e2-33f2fc0c5ca9",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "let's move line 209 to above line 208 and then use _currentTween when setting things. That way it'll be clearer that we're taking ownership.",
        "createdAt" : "2019-08-22T22:11:23Z",
        "updatedAt" : "2019-08-22T23:26:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "53c3a8c0-b4a6-4568-bd9d-fc3388eafd93",
        "parentId" : "a19baaea-8ef9-4955-b5e2-33f2fc0c5ca9",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Done.",
        "createdAt" : "2019-08-22T23:03:55Z",
        "updatedAt" : "2019-08-22T23:26:45Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2baf30aac4292d4bfb4237590c09f658d367001",
    "line" : 208,
    "diffHunk" : "@@ -1,1 +206,210 @@  @override\n  void initState() {\n    _currentTween = widget.tween;\n    _currentTween.begin ??= _currentTween.end;\n    super.initState();"
  }
]