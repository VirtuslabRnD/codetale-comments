[
  {
    "id" : "e55dc928-c71b-4924-af61-16d1114d05fa",
    "prId" : 10904,
    "prUrl" : "https://github.com/flutter/flutter/pull/10904#pullrequestreview-46100793",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c425caf-525d-467d-8b9b-21deefa07e8d",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I suppose this would be a good place to say that a 4x device would get the 3.5x cat, since that's the closest (or whatever our criteria actually is).",
        "createdAt" : "2017-06-23T21:37:41Z",
        "updatedAt" : "2017-06-23T21:37:41Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "0e3f6720-7d6e-4ee4-bbad-3897f27e9747",
        "parentId" : "4c425caf-525d-467d-8b9b-21deefa07e8d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "done in new PR",
        "createdAt" : "2017-06-23T22:03:59Z",
        "updatedAt" : "2017-06-23T22:03:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fe18aa2379d6f9d4b41113129d9a763114229c1",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +168,172 @@  /// new Image.asset('images/cat.png')\n  /// ```\n  ///\n  /// This corresponds to the file that is in the project's `images/2x/`\n  /// directory with the name `cat.png` (the paths are relative to the"
  },
  {
    "id" : "c0c55ada-0dd5-4020-84d1-f83456bf8440",
    "prId" : 11471,
    "prUrl" : "https://github.com/flutter/flutter/pull/11471#pullrequestreview-53663596",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1d9a3b5-f595-4ed2-8fa0-7da7749c7a07",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This documentation should be much more detailed. For example:\r\n\r\n* Saying that doing this will mean that if the same image is later used by an [Image] or [BoxDecoration] or [FadeInImage], it will probably be loaded faster.\r\n* Saying when the future returned by this method will resolve, especially in the context of image providers that return multiple images (such as animated GIFs, once we support those)\r\n* linking to ImageCache, Image, FadeInImage, with a brief description for why each may be relevant.\r\n* A description of what the build context and size are used for.\r\n* A mention that the image provider doesn't have to be the exact same instance reused later, so long as the image provider ends up pointing to the same key (which is what the image cache cares about).",
        "createdAt" : "2017-08-01T23:20:01Z",
        "updatedAt" : "2017-08-01T23:39:17Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1e62a49f0a5dba76286f898599100562a249287",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +46,50 @@}\n\n/// Prefetches an image into the image cache.\n///\n/// Returns a [Future] that will complete when the first image yielded by the"
  },
  {
    "id" : "eaa7d979-7897-41e7-80d1-6474b60085eb",
    "prId" : 13128,
    "prUrl" : "https://github.com/flutter/flutter/pull/13128#pullrequestreview-78211842",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4451c9a8-ea6b-4a44-bc73-6dff8f6079bc",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "the docs for this constructor should mention the headers argument too.",
        "createdAt" : "2017-11-21T18:23:12Z",
        "updatedAt" : "2017-11-22T20:22:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "30831614d5c3894ff902c58d5e26b7a978413e31",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +146,150 @@    this.gaplessPlayback: false,\n    this.package,\n    Map<String, String> headers,\n  }) : image = new NetworkImage(src, scale: scale, headers: headers),\n       assert(alignment != null),"
  },
  {
    "id" : "365a55d3-1b59-4d47-b787-be2864d10ccf",
    "prId" : 13128,
    "prUrl" : "https://github.com/flutter/flutter/pull/13128#pullrequestreview-78235526",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2b76b40-6fa6-476e-bdbd-e766bdd8fd71",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "the docs for this constructor should mention the headers argument too.",
        "createdAt" : "2017-11-21T18:33:41Z",
        "updatedAt" : "2017-11-22T20:22:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "4e854d55-c131-40f0-99af-b4a2207273f7",
        "parentId" : "a2b76b40-6fa6-476e-bdbd-e766bdd8fd71",
        "authorId" : "01550d91-b5a7-4538-854e-beb19ef9648e",
        "body" : "I did it or I don't understand, I added a test however @Hixie ",
        "createdAt" : "2017-11-21T19:43:01Z",
        "updatedAt" : "2017-11-22T20:22:06Z",
        "lastEditedBy" : "01550d91-b5a7-4538-854e-beb19ef9648e",
        "tags" : [
        ]
      }
    ],
    "commit" : "30831614d5c3894ff902c58d5e26b7a978413e31",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +146,150 @@    this.gaplessPlayback: false,\n    this.package,\n    Map<String, String> headers,\n  }) : image = new NetworkImage(src, scale: scale, headers: headers),\n       assert(alignment != null),"
  },
  {
    "id" : "76278bd1-e745-4ec0-b35c-c445aa8db51a",
    "prId" : 18424,
    "prUrl" : "https://github.com/flutter/flutter/pull/18424#pullrequestreview-136046433",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d308c81-1865-4a35-8b9f-9e91d47e8ac2",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "I'm not familiar enough with the Flutter style to know if this is typical so asking to learn:\r\nThis named function definition inside a function feels weird to me, I'm not completely sure how to make it look less weird, maybe make it an anonymous closure defined inside the parameters list of addListener?\r\n(Again this is more a question for me to learn then an AI for you)",
        "createdAt" : "2018-06-19T17:06:23Z",
        "updatedAt" : "2018-07-31T17:36:11Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "3edba9cd-f040-4f63-9c1f-cf841576b995",
        "parentId" : "8d308c81-1865-4a35-8b9f-9e91d47e8ac2",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Or maybe:\r\n`ImageErrorListener errorListener = (...) {...}`\r\n\r\n?\r\n\r\n[again, just asking here]",
        "createdAt" : "2018-06-19T17:46:05Z",
        "updatedAt" : "2018-07-31T17:36:11Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "72cdff5c-8764-4629-acc0-eb183de214c7",
        "parentId" : "8d308c81-1865-4a35-8b9f-9e91d47e8ac2",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we don't use nested functions much, but they're fine. I agree they look weird. They are capturing, which is worth worrying about.",
        "createdAt" : "2018-06-19T18:28:11Z",
        "updatedAt" : "2018-07-31T17:36:11Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "5fa33ac3-7dcc-4efb-91bc-719647ac724d",
        "parentId" : "8d308c81-1865-4a35-8b9f-9e91d47e8ac2",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I don't really have a strong preference. All 3 options feel more or less the same to me in readability. I just kept the existing pattern. I'm happy to change to any other variants if you guys have a strong preference.\r\n\r\nCapturing is intentional here. Wouldn't an anonymous or a closure variable capture as well?",
        "createdAt" : "2018-07-05T01:00:39Z",
        "updatedAt" : "2018-07-31T17:36:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "a5d7c74b-c266-47a1-b9e3-cc4752694673",
        "parentId" : "8d308c81-1865-4a35-8b9f-9e91d47e8ac2",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It's fine that they're capturing, I just mean that it's something to bear in mind (not all languages with nested functions capture, so it's not necessarily obvious).",
        "createdAt" : "2018-07-10T23:29:12Z",
        "updatedAt" : "2018-07-31T17:36:12Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4d4567f341d35763731bbf4ef150e8e14b28345",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +83,87 @@    completer.complete();\n  }\n  void errorListener(dynamic exception, StackTrace stackTrace) {\n    completer.complete();\n    if (onError != null) {"
  },
  {
    "id" : "ab72d1e6-b70f-4a6e-8844-52fd75856811",
    "prId" : 23329,
    "prUrl" : "https://github.com/flutter/flutter/pull/23329#pullrequestreview-166755345",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5e65a82-6343-46fa-acbe-f39e62d93723",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "```suggestion\r\n        assert(repeat != null),\r\n        assert(filterQuality != null),\r\n```",
        "createdAt" : "2018-10-20T16:57:24Z",
        "updatedAt" : "2018-10-20T21:07:46Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8ee310bed3d84317d2ae9256ae76c5395c3d75c",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +169,173 @@  }) : assert(image != null),\n       assert(alignment != null),\n       assert(repeat != null),\n       assert(filterQuality != null),\n       assert(matchTextDirection != null),"
  },
  {
    "id" : "1c5d1720-e4c3-4452-a630-34aa2147c04e",
    "prId" : 23329,
    "prUrl" : "https://github.com/flutter/flutter/pull/23329#pullrequestreview-166755359",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4caab9a-b0a4-4ec3-8fef-d1069b3aeec9",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "```suggestion\r\n        assert(repeat != null),\r\n        assert(filterQuality != null),\r\n```",
        "createdAt" : "2018-10-20T16:57:42Z",
        "updatedAt" : "2018-10-20T21:07:46Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8ee310bed3d84317d2ae9256ae76c5395c3d75c",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +253,257 @@  }) : image = FileImage(file, scale: scale),\n       assert(alignment != null),\n       assert(repeat != null),\n       assert(filterQuality != null),\n       assert(matchTextDirection != null),"
  },
  {
    "id" : "a8cb0829-80c7-48a3-86af-064ca6cbe5ef",
    "prId" : 33369,
    "prUrl" : "https://github.com/flutter/flutter/pull/33369#pullrequestreview-243390113",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a963cf67-924c-4235-9eea-f3641f8b4774",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "should we also give the total number of frames then?",
        "createdAt" : "2019-05-27T03:43:42Z",
        "updatedAt" : "2019-05-29T01:22:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "5ee97a2c-4c3b-4d4c-a411-a97fe6736a3f",
        "parentId" : "a963cf67-924c-4235-9eea-f3641f8b4774",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "We won't know that ahead of time.",
        "createdAt" : "2019-05-27T04:03:50Z",
        "updatedAt" : "2019-05-29T01:22:20Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "21a3f4bf-3a69-43f0-b551-1bf853b3aec4",
        "parentId" : "a963cf67-924c-4235-9eea-f3641f8b4774",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "What's the use case you're considering?",
        "createdAt" : "2019-05-27T16:36:23Z",
        "updatedAt" : "2019-05-29T01:22:20Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "abd726b9-1181-4232-8ee6-1cd5c2b7a14a",
        "parentId" : "a963cf67-924c-4235-9eea-f3641f8b4774",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "a media progress bar that shows where you are in a looping animated GIF (like the youtube player progress bar)",
        "createdAt" : "2019-05-29T16:52:40Z",
        "updatedAt" : "2019-05-29T16:52:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "59e1b2ddb458f1a98d7b0678e6d3320495f8d10e",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +123,127 @@/// than zero. For multi-frame images (such as animated GIFs), it will increase\n/// by one every time a new image frame is shown (including when the image\n/// animates in a loop).\n///\n/// The `wasSynchronouslyLoaded` argument specifies whether the image was"
  },
  {
    "id" : "62fb9730-060a-43bc-8db9-5d2a1ea3dac1",
    "prId" : 33369,
    "prUrl" : "https://github.com/flutter/flutter/pull/33369#pullrequestreview-243531124",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cccbf071-9b62-406f-86ce-b865d62cd121",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Does dartdoc actually interpret this link correctly? ",
        "createdAt" : "2019-05-28T15:53:51Z",
        "updatedAt" : "2019-05-29T01:22:20Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "57c902c2-590e-45cd-8b47-2fc5a2eb5677",
        "parentId" : "cccbf071-9b62-406f-86ce-b865d62cd121",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Yep (I wondered when I wrote it, so I generated the docs to check 😄 )",
        "createdAt" : "2019-05-28T17:57:06Z",
        "updatedAt" : "2019-05-29T01:22:20Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "19f2f1a4-4b39-42e6-aa40-e54e30e6a98e",
        "parentId" : "cccbf071-9b62-406f-86ce-b865d62cd121",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "TIL. Thanks for confirming :) ",
        "createdAt" : "2019-05-28T17:58:54Z",
        "updatedAt" : "2019-05-29T01:22:20Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "9a95841e-485e-453d-a28c-cd0ddcb4a6dc",
        "parentId" : "cccbf071-9b62-406f-86ce-b865d62cd121",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "oh fascinating. you should look for lives that include start with `/` or `docs.flutter.io` or `api.flutter.dev` to see if they can be improved too",
        "createdAt" : "2019-05-29T16:53:23Z",
        "updatedAt" : "2019-05-29T16:53:23Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "8c0e8ac5-b734-4921-b831-57e266a24f11",
        "parentId" : "cccbf071-9b62-406f-86ce-b865d62cd121",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "This is done in https://github.com/flutter/flutter/pull/33539",
        "createdAt" : "2019-05-29T21:38:32Z",
        "updatedAt" : "2019-05-29T21:38:32Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "59e1b2ddb458f1a98d7b0678e6d3320495f8d10e",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +127,131 @@/// The `wasSynchronouslyLoaded` argument specifies whether the image was\n/// available synchronously (on the same\n/// [rendering pipeline frame](rendering/RendererBinding/drawFrame.html) as the\n/// `Image` widget itself was created) and thus able to be painted immediately.\n/// If this is false, then there was one or more rendering pipeline frames where"
  },
  {
    "id" : "48f6fb99-f302-4dac-b228-9783f4f0150e",
    "prId" : 33369,
    "prUrl" : "https://github.com/flutter/flutter/pull/33369#pullrequestreview-242832755",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22fbfc42-b5d7-4ea0-b9b2-94a2cc70d8e8",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Thanks for adding the animation!",
        "createdAt" : "2019-05-28T16:09:16Z",
        "updatedAt" : "2019-05-29T01:22:20Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "5996dab3-8b35-46b0-8a26-ef1c119743e0",
        "parentId" : "22fbfc42-b5d7-4ea0-b9b2-94a2cc70d8e8",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Yep 😄 ",
        "createdAt" : "2019-05-28T18:01:18Z",
        "updatedAt" : "2019-05-29T01:22:20Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "59e1b2ddb458f1a98d7b0678e6d3320495f8d10e",
    "line" : 248,
    "diffHunk" : "@@ -1,1 +634,638 @@  /// image.\n  ///\n  /// {@animation 400 400 https://flutter.github.io/assets-for-api-docs/assets/widgets/frame_builder_image.mp4}\n  final ImageFrameBuilder frameBuilder;\n"
  },
  {
    "id" : "9d115c04-0dc6-4504-95ca-9c0c57cd53b5",
    "prId" : 33369,
    "prUrl" : "https://github.com/flutter/flutter/pull/33369#pullrequestreview-242870322",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "454f1253-804c-464b-a596-60a710ea60d4",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "The example above didn't include this in the code, but I believe the animation showed it. Maybe unify?",
        "createdAt" : "2019-05-28T16:14:34Z",
        "updatedAt" : "2019-05-29T01:22:20Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "49b8e793-5390-46ea-8e25-f46aa5a566e8",
        "parentId" : "454f1253-804c-464b-a596-60a710ea60d4",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Done",
        "createdAt" : "2019-05-28T19:16:25Z",
        "updatedAt" : "2019-05-29T01:22:20Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "59e1b2ddb458f1a98d7b0678e6d3320495f8d10e",
    "line" : 287,
    "diffHunk" : "@@ -1,1 +673,677 @@  /// ```dart\n  /// Widget build(BuildContext context) {\n  ///   return DecoratedBox(\n  ///     decoration: BoxDecoration(\n  ///       color: Colors.white,"
  }
]