[
  {
    "id" : "79277e1b-10b3-4886-bfa2-bb3ab97ede3a",
    "prId" : 2837,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8bedcc6-fcf0-46d3-b47d-a2abfcff3332",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I'd wrap the body of this function in an assert to make sure it is used only in debug builds.  See debugCheckHasMediaQuery above for the pattern.\n",
        "createdAt" : "2016-03-22T21:35:40Z",
        "updatedAt" : "2016-03-22T21:47:05Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff424196fcf18c6c402008599bf3a58a072a1307",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +26,30 @@}\n\nbool debugHasDuplicateKeys(Widget parent, Iterable<Widget> children) {\n  assert(() {\n    Set<Key> keySet = new HashSet<Key>();"
  },
  {
    "id" : "ade7cd12-1236-446d-b7c4-71ee1902f1a5",
    "prId" : 4383,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8948dc66-5381-4b2f-b697-d452755de45c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "`Only does anything when asserts are enabled.`, or something\n",
        "createdAt" : "2016-06-06T04:54:16Z",
        "updatedAt" : "2016-06-06T06:45:39Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f19fe1e0a5264d336997ef068592e1751a9c8b7",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +105,109 @@///\n/// Used when the given `widget` calls a builder function to check that the\n/// function returned a non-null value, as typically required.\n///\n/// Does nothing when asserts are disabled."
  },
  {
    "id" : "e18c1d62-e8f3-4d35-8023-a2df44b32939",
    "prId" : 6652,
    "prUrl" : "https://github.com/flutter/flutter/pull/6652#pullrequestreview-7505072",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f7995b0-390c-4da3-b14e-94307d0cd10a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "If you could add some docs here on how to actually use that information (e.g. pointing to the observatory timeline UI, or pointing to a doc that talks about how to use timeline events), that would be great.\n",
        "createdAt" : "2016-11-07T17:46:52Z",
        "updatedAt" : "2016-11-07T21:07:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a1d87bc7-f33f-4bab-ab66-ab71bd514d57",
        "parentId" : "3f7995b0-390c-4da3-b14e-94307d0cd10a",
        "authorId" : "a50d169e-27b9-43ce-b1ac-ebf0c920f875",
        "body" : "Done\n",
        "createdAt" : "2016-11-07T21:07:47Z",
        "updatedAt" : "2016-11-07T21:07:47Z",
        "lastEditedBy" : "a50d169e-27b9-43ce-b1ac-ebf0c920f875",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cbf33bb2cbd84dd2158023573601067f3e2f8d4",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +49,53 @@bool debugPrintGlobalKeyedWidgetLifecycle = false;\n\n/// Adds [Timeline] events for every Widget built.\n///\n/// For details on how to use [Timeline] events in the Dart Observatory to"
  },
  {
    "id" : "d988e1e4-5641-4186-a22d-778875dfc230",
    "prId" : 12231,
    "prUrl" : "https://github.com/flutter/flutter/pull/12231#pullrequestreview-64755509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d701b29-cc23-498d-bd17-6c649b978ee0",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "This creates an import cycle because `basic.dart` imports this file.  Maybe that's fine.  Dart can cope with import cycles just fine.",
        "createdAt" : "2017-09-24T07:26:02Z",
        "updatedAt" : "2017-09-24T07:26:02Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "7c8b2ae5-1581-4ef2-9580-c8050f36f922",
        "parentId" : "4d701b29-cc23-498d-bd17-6c649b978ee0",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "The import cycle already existed because this imports things like table.dart which import basic.dart.",
        "createdAt" : "2017-09-24T07:28:05Z",
        "updatedAt" : "2017-09-24T07:28:05Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "bcd89782-b0bd-4081-becf-09e423d8b9d6",
        "parentId" : "4d701b29-cc23-498d-bd17-6c649b978ee0",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(But yeah I had the same thought. It seems unclean. But then it's just a file of debugging hooks, so I'm not too worried about this being the sign of a bad design. Debugging hooks always want to have their hands in everything, that's how we get good error messages...)",
        "createdAt" : "2017-09-24T07:29:09Z",
        "updatedAt" : "2017-09-24T07:29:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "15de949383cd669d22c88abbac221b5480a1fd17",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +8,12 @@import 'package:flutter/foundation.dart';\n\nimport 'basic.dart';\nimport 'framework.dart';\nimport 'media_query.dart';"
  },
  {
    "id" : "28976522-a540-4b27-957b-aa88172d9786",
    "prId" : 23534,
    "prUrl" : "https://github.com/flutter/flutter/pull/23534#pullrequestreview-169068739",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb5a9dba-b789-490b-b572-7df8649e53e1",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "@Hixie The most controversial part of the CL is adding the two debugging hooks\r\ndebugOnRebuildDirtyWidget and debugOnProfilePaint.\r\nWhat I would like is a way for the inspector to be notified over each widget rebuild and render object repaint.\r\nThis seems like the most minimal option to support this use case in debug builds but I'm open to other options.",
        "createdAt" : "2018-10-26T16:57:31Z",
        "updatedAt" : "2018-10-29T22:12:40Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "d8a37316-8d11-4c4c-9c83-dea8a221c0bb",
        "parentId" : "bb5a9dba-b789-490b-b572-7df8649e53e1",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Seems fine to me, the way you added it is very clean. I actually thought the most controversial part was the addition of more hooks in widgets/binding.dart that defer to the WidgetInspectorService singleton. :-)",
        "createdAt" : "2018-10-27T07:19:38Z",
        "updatedAt" : "2018-10-29T22:12:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "7e0512e7-fd3f-4ae2-ab0b-fcd469c97c0a",
        "parentId" : "bb5a9dba-b789-490b-b572-7df8649e53e1",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "thanks for the feedback!",
        "createdAt" : "2018-10-27T20:12:01Z",
        "updatedAt" : "2018-10-29T22:12:40Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac8a7e8d25d0b737bea068469cce71b92699b33a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +31,35 @@bool debugPrintRebuildDirtyWidgets = false;\n\n/// Signature for [debugOnRebuildDirtyWidget] implementations.\ntypedef RebuildDirtyWidgetCallback = void Function(Element e, bool builtOnce);\n"
  },
  {
    "id" : "86d4eabc-7200-414f-9fd0-b06e460fe297",
    "prId" : 23534,
    "prUrl" : "https://github.com/flutter/flutter/pull/23534#pullrequestreview-169068521",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e77b2e8d-22b7-477b-abd3-81ae38933dac",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "nit: you need a blank line before the bulleted list so that the items don't get interpreted as part of the \"See also:\" paragraph",
        "createdAt" : "2018-10-27T07:20:07Z",
        "updatedAt" : "2018-10-29T22:12:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c4de8145-99a9-4906-9b9b-ed37344d9554",
        "parentId" : "e77b2e8d-22b7-477b-abd3-81ae38933dac",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Done. Fixed another place in the inspector I'd missed the \\n as well.",
        "createdAt" : "2018-10-27T20:04:45Z",
        "updatedAt" : "2018-10-29T22:12:40Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac8a7e8d25d0b737bea068469cce71b92699b33a",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +40,44 @@/// See also:\n///\n///  * [debugPrintRebuildDirtyWidgets], which does something similar but logs\n///    to the console instead of invoking a callback.\n///  * [debugOnProfilePaint], which does something similar for [RenderObject]"
  },
  {
    "id" : "afa8837a-40c3-4b8f-b777-f50795600329",
    "prId" : 59360,
    "prUrl" : "https://github.com/flutter/flutter/pull/59360#pullrequestreview-430176152",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1e39557-6e9e-440f-a840-7d821a31c209",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "ultra nit, and only if we're using American punctuation rules (personally, I think it's a dumb rule, but it is what it is):\r\n```suggestion\r\n///    AlignmentDirectional value.\" Should be a fully punctuated sentence.\r\n```",
        "createdAt" : "2020-06-13T00:19:26Z",
        "updatedAt" : "2020-06-13T23:18:00Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "3cdb6076-2234-4f55-977d-3afe71ceb959",
        "parentId" : "d1e39557-6e9e-440f-a840-7d821a31c209",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "The string here is a literal, not a quote, so I'm inclined to go with programming punctuation rather than usual prose punctuation.",
        "createdAt" : "2020-06-13T23:18:38Z",
        "updatedAt" : "2020-06-13T23:18:39Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "05deec47c33172c0905c551b3ec9993b1ad54dfe",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +250,254 @@///  * hint: explain why this might be happening, for example \"The default\n///    value of the 'aligment' argument of the $runtimeType widget is an\n///    AlignmentDirectional value.\". Should be a fully punctuated sentence.\n///  * alternative: provide additional advice specific to the situation,\n///    especially an alternative to providing a Directionality ancestor."
  }
]