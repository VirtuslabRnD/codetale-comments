[
  {
    "id" : "e766f406-a922-4ad0-8a86-f3576daccee7",
    "prId" : 8547,
    "prUrl" : "https://github.com/flutter/flutter/pull/8547#pullrequestreview-25081342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17f8fca9-dc5d-42cc-b129-fc093f8adf7b",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Technically you should write a test for this new feature.  You can just take a list view and jump to way out of range and check that it stays there.",
        "createdAt" : "2017-03-03T18:35:00Z",
        "updatedAt" : "2017-03-03T19:29:18Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "4919f4ac-e39e-40cc-8ad6-b3dc0880d66f",
        "parentId" : "17f8fca9-dc5d-42cc-b129-fc093f8adf7b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This feature is scary. It's unstable. Many, many things in the ScrollPosition logic automatically start ballistic activities.\r\n\r\nI don't think we should have a way to explicitly enter this kind of non-stable state. It will lead to very brittle UIs.\r\n\r\nCan you elaborate on the use case for this? Maybe there's a better solution.",
        "createdAt" : "2017-03-03T18:40:51Z",
        "updatedAt" : "2017-03-03T19:29:18Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "6a5d65df-7fa5-44b5-8423-43b8af67ded8",
        "parentId" : "17f8fca9-dc5d-42cc-b129-fc093f8adf7b",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This was added to make the current ScrollNotification approach to synchronized scrolling work. The offset of the scroller that's following the leader is updated with jumpTo() each time the leader scrolls. In this case, because both scrollers have the same geometry, you want the follower to just mimic the leader's ballistic scroll.\r\n\r\nThis is all just a stopgap. When https://github.com/flutter/flutter/pull/8535 is sorted, I'll use that instead.\r\n\r\n",
        "createdAt" : "2017-03-03T19:04:59Z",
        "updatedAt" : "2017-03-03T19:29:18Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "569aa5f7-aa7f-4c2a-99e5-00cab83623d9",
        "parentId" : "17f8fca9-dc5d-42cc-b129-fc093f8adf7b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Ok. Please add a clear TODO here saying that this API is temporary and describe it as such in the dartdocs. Maybe even use a different method name and mark that method @deprecated, with an `//ignore` where you use it?\r\n\r\nThe point is that this is clear technical debt, and we should label it as such.",
        "createdAt" : "2017-03-03T22:09:25Z",
        "updatedAt" : "2017-03-03T22:09:25Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec308e66cb4c5f29951e1e6da230f58798d6edea",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +218,222 @@  /// If settle is true then, immediately after the jump, a ballistic activity\n  /// is started, in case the value was out of range.\n  void jumpTo(double value, { bool settle: true }) {\n    beginIdleActivity();\n    if (_pixels != value) {"
  },
  {
    "id" : "4869d715-5122-4a74-86dd-79cff0bd3c61",
    "prId" : 9156,
    "prUrl" : "https://github.com/flutter/flutter/pull/9156#pullrequestreview-30937581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be18a3c6-0506-47c6-94c2-3532e92d811c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "honestly i'd rather we moved towards making activity private, i don't really remember why it's public...",
        "createdAt" : "2017-04-04T03:40:20Z",
        "updatedAt" : "2017-04-12T22:03:07Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "eacfe218-fa0a-4568-acf2-36c5abb99c2d",
        "parentId" : "be18a3c6-0506-47c6-94c2-3532e92d811c",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I'm no longer using it, I've added an isScrolling getter to ScrollPosition, as well as listeners.",
        "createdAt" : "2017-04-05T00:54:37Z",
        "updatedAt" : "2017-04-12T22:03:07Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "08531c3b1713d41e827bdc7afbddcdf96f17c81c",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +464,468 @@  // SCROLL ACTIVITIES\n\n  ScrollActivity get activity => _activity;\n  ScrollActivity _activity;\n"
  },
  {
    "id" : "de613689-60ba-40b4-8c9b-226f5e4ce0e8",
    "prId" : 9156,
    "prUrl" : "https://github.com/flutter/flutter/pull/9156#pullrequestreview-32477971",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fa5139c-67b4-4d76-b0b6-7e840b1ae9d8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "no need for all the elvis, activity can't be null by here (because this function early-returns on null)",
        "createdAt" : "2017-04-12T19:57:50Z",
        "updatedAt" : "2017-04-12T22:03:07Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "1355b162-4fc2-48de-b954-95ca64feb45a",
        "parentId" : "8fa5139c-67b4-4d76-b0b6-7e840b1ae9d8",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "also use activity instead of _activity when reading",
        "createdAt" : "2017-04-12T19:57:59Z",
        "updatedAt" : "2017-04-12T22:03:07Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "08531c3b1713d41e827bdc7afbddcdf96f17c81c",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +498,502 @@    if (oldIgnorePointer != shouldIgnorePointer)\n      state.setIgnorePointer(shouldIgnorePointer);\n    isScrollingNotifier.value = _activity?.isScrolling ?? false;\n    if (!activity.isScrolling)\n      updateUserScrollDirection(ScrollDirection.idle);"
  }
]