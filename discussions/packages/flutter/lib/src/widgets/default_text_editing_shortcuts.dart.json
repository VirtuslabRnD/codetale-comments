[
  {
    "id" : "b97321b4-c8c9-4563-ba68-86df2f289783",
    "prId" : 75032,
    "prUrl" : "https://github.com/flutter/flutter/pull/75032#pullrequestreview-606521722",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0f2706e-ffbb-42d2-a884-271858aa8664",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "@gspencergoog Examples like this won't work on web.  Does Shortcuts just not work at all on web?  Is there anything I can do to reduce this divergence in this PR?",
        "createdAt" : "2021-02-17T16:56:37Z",
        "updatedAt" : "2021-03-11T23:06:24Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "5d096055-660f-478b-b85c-c5de4bb65cab",
        "parentId" : "f0f2706e-ffbb-42d2-a884-271858aa8664",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Since you force-pushed, I can't see what example you're referring to (GitHub just says it \"looked everywhere\" for the changes). Shortcuts definitely should be working on the web.  For instance, [this example](https://master-api.flutter.dev/flutter/widgets/Shortcuts-class.html#widgets.Shortcuts.1) works in Dartpad.",
        "createdAt" : "2021-02-17T19:05:42Z",
        "updatedAt" : "2021-03-11T23:06:24Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "dca59fd5-a777-42cb-be18-6a48e302b1f9",
        "parentId" : "f0f2706e-ffbb-42d2-a884-271858aa8664",
        "authorId" : "453b79ec-af0f-4bfb-aeee-353eabb6c798",
        "body" : "@justinmc @gspencergoog I think this is in reference to overriding Shortcuts in the context of text editing. Can confirm that shortcuts work fine throughout our web app. We're using them quite a bit.\r\n\r\nHowever, I'm not sure if it would be possible to override text editing shortcuts on web? Our goal would be, in some contexts, to take over the arrow keys, tab, and enter key when editing text. In particular for a mentions feature that we have. Users want to navigate between mentionable users while a mentions panel is open.",
        "createdAt" : "2021-02-17T19:12:18Z",
        "updatedAt" : "2021-03-11T23:06:24Z",
        "lastEditedBy" : "453b79ec-af0f-4bfb-aeee-353eabb6c798",
        "tags" : [
        ]
      },
      {
        "id" : "d5086811-8996-4678-aa36-30f08151ac9f",
        "parentId" : "f0f2706e-ffbb-42d2-a884-271858aa8664",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Playing with that example, it seems like if I add a TextField to the page, it will swallow all keyboard Shortcuts when it has focus.  This appears to be specific to web, because if I try invoking a keyboard shortcut on Mac running master with a TextField focused, it works.\r\n\r\nThis is going to be a problem for the reasons mentioned by @venkatd.  Also, @shihaohong will likely run into problems with this when trying to create keyboard shortcuts for Autocomplete.  I'll try to get an opinion from someone working on web on Discord.",
        "createdAt" : "2021-03-01T22:15:04Z",
        "updatedAt" : "2021-03-11T23:06:24Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "c4860b9b-6c01-4dbf-b88f-9fc68356b30e",
        "parentId" : "f0f2706e-ffbb-42d2-a884-271858aa8664",
        "authorId" : "453b79ec-af0f-4bfb-aeee-353eabb6c798",
        "body" : "@justinmc in our Flutter web app *only* keyboard Shortcuts that are used by the TextField are swallowed. For example `LogicalKeySet(LogicalKeyboardKey.arrowDown)` and `LogicalKeySet(LogicalKeyboardKey.arrowUp)` are swallowed while a text field is focused.\r\n\r\nOn the other hand, `LogicalKeySet(LogicalKeyboardKey.control, LogicalKeyboardKey.keyJ)` are properly handled even when a text field is focused.\r\n\r\nI can also confirm that when running a MacOS build, everything works perfectly.",
        "createdAt" : "2021-03-02T01:25:06Z",
        "updatedAt" : "2021-03-11T23:06:24Z",
        "lastEditedBy" : "453b79ec-af0f-4bfb-aeee-353eabb6c798",
        "tags" : [
        ]
      },
      {
        "id" : "f97b846b-5964-42fe-ab26-ecc1cc3b1ae7",
        "parentId" : "f0f2706e-ffbb-42d2-a884-271858aa8664",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "@mdebbar Do you know why/how web is swallowing Shortcuts when a text field is focused?\r\n\r\nI'm worried that this PR is going to make web into a special case for handling keyboard events and wanted to run this by you to see what I can do.",
        "createdAt" : "2021-03-02T22:28:39Z",
        "updatedAt" : "2021-03-11T23:06:24Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "135d0933-45a4-4c61-9c4f-6ce4eb369534",
        "parentId" : "f0f2706e-ffbb-42d2-a884-271858aa8664",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Here's a Dartpad showing what I mean: https://dartpad.dartlang.org/b17b1acce8bb9d3f9951981a93f80084?null_safety=true\r\n\r\nOn web, the Shortcut is ignored.  Nothing is logged, and the cursor moves like normal.  If you copy this code and run it locally, you'll see that when the left arrow is pressed, the cursor doesn't move, and the print statement is logged.",
        "createdAt" : "2021-03-05T23:31:26Z",
        "updatedAt" : "2021-03-11T23:06:24Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "28e37f34-b715-4873-b3a7-62cadd7a9ab6",
        "parentId" : "f0f2706e-ffbb-42d2-a884-271858aa8664",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Discussed this offline and our solution is here: 00c03ad\r\n\r\nWeb will explicitly ignore all of these text editing shortcuts and allow them to be handled by the web engine.  However, it's possible to override these by using a Shortcuts widget placed anywhere in the widget tree.\r\n\r\n@shihaohong This is good news for keyboard shortcuts for Autocomplete on web.  If you just use a Shortcuts widget like normal, it should work identically on the web.",
        "createdAt" : "2021-03-08T17:17:23Z",
        "updatedAt" : "2021-03-11T23:06:24Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "9814f0bc8f0ce7e92a723214edbe338470e4304e",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +58,62 @@/// {@end-tool}\n///\n/// {@tool snippet}\n///\n/// This example shows how to use an additional [Shortcuts] widget to override"
  },
  {
    "id" : "8cfa8882-0a80-4011-91ee-3610f3c0b1ae",
    "prId" : 75032,
    "prUrl" : "https://github.com/flutter/flutter/pull/75032#pullrequestreview-606734195",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "256839fc-e2af-4aa0-ac36-0714d71690b1",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This example is confusing me a little because it doesn't seem to include a DefaultTextEditingShortcuts whose shortcuts are overridden by the Shortcuts widget. Is it missing that widget? Or an explanation where the shortcuts that get overridden are?",
        "createdAt" : "2021-03-08T18:55:39Z",
        "updatedAt" : "2021-03-11T23:06:24Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "0ffad214-b3aa-44f5-9cd1-717b303933ab",
        "parentId" : "256839fc-e2af-4aa0-ac36-0714d71690b1",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Good catch.  It's included automatically in WidgetsApp, but I should show it for the sake of this example.",
        "createdAt" : "2021-03-08T21:43:03Z",
        "updatedAt" : "2021-03-11T23:06:24Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "9814f0bc8f0ce7e92a723214edbe338470e4304e",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@/// ```dart\n/// @override\n/// Widget build(BuildContext context) {\n///   // If using WidgetsApp or its descendents MaterialApp or CupertinoApp,\n///   // then DefaultTextEditingShortcuts is already being inserted into the"
  },
  {
    "id" : "ac05a047-1e32-4c4b-9111-af7ddd23be5a",
    "prId" : 75032,
    "prUrl" : "https://github.com/flutter/flutter/pull/75032#pullrequestreview-606739329",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99a82d16-efae-45c8-bd03-a557e7a3c677",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "When first reading through these two examples it wasn't super-clear to me what the difference between the two overrides is. Aren't they basically showing the same thing?",
        "createdAt" : "2021-03-08T18:59:20Z",
        "updatedAt" : "2021-03-11T23:06:24Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "a8c01ba1-909c-4d16-8d8b-801b1d941afc",
        "parentId" : "99a82d16-efae-45c8-bd03-a557e7a3c677",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "The first example shows remapping some shortcuts to existing Intents.  The second example shows creating totally custom Intents and Actions.  I've updated the description to try to make the distinction more clear.",
        "createdAt" : "2021-03-08T21:50:15Z",
        "updatedAt" : "2021-03-11T23:06:24Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "9814f0bc8f0ce7e92a723214edbe338470e4304e",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@/// {@tool snippet}\n///\n/// This example shows how to use an additional [Shortcuts] widget to override\n/// default text editing shortcuts to have completely custom behavior defined by\n/// a custom Intent and Action. Here, the up/down arrow keys increment/decrement"
  }
]