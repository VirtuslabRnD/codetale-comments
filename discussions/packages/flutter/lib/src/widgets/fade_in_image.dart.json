[
  {
    "id" : "78e33388-381f-49ed-a8d9-29e9ea7e5b20",
    "prId" : 11371,
    "prUrl" : "https://github.com/flutter/flutter/pull/11371#pullrequestreview-53371927",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32f7d9a9-754b-4d09-a18b-ae8538a7cbac",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ditto",
        "createdAt" : "2017-07-28T19:48:10Z",
        "updatedAt" : "2017-07-31T23:54:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "36440947-b80a-46f8-beda-28a83732ce08",
        "parentId" : "32f7d9a9-754b-4d09-a18b-ae8538a7cbac",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Added a paragraph that applies to both.",
        "createdAt" : "2017-07-31T23:53:37Z",
        "updatedAt" : "2017-07-31T23:54:22Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b32e384c3e8e4f6a0524e5b684586d20f810555f",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@/// [ImageInfo], then [placeholder] is resolved to a new [ImageStream]. If the\n/// new [ImageStream.key] is different this widget subscribes to the new stream\n/// and replaces the displayed image to images emitted by the new stream.\n///\n/// When either [placeholder] or [image] changes, this widget continues showing"
  },
  {
    "id" : "3315c779-8783-4dcb-9895-e4fa4de5df8c",
    "prId" : 11371,
    "prUrl" : "https://github.com/flutter/flutter/pull/11371#pullrequestreview-53371934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd3c064e-91d0-416b-904d-99c0c1403552",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "assert and document: repeat != null",
        "createdAt" : "2017-07-28T19:50:16Z",
        "updatedAt" : "2017-07-31T23:54:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "aa2900ad-86a4-4940-93d6-d5b2057fa84f",
        "parentId" : "cd3c064e-91d0-416b-904d-99c0c1403552",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done.",
        "createdAt" : "2017-07-31T23:53:39Z",
        "updatedAt" : "2017-07-31T23:54:22Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b32e384c3e8e4f6a0524e5b684586d20f810555f",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +80,84 @@       assert(fadeOutCurve != null),\n       assert(fadeInDuration != null),\n       assert(fadeInCurve != null),\n       assert(repeat != null),\n       super(key: key);"
  },
  {
    "id" : "13ddb1df-154a-485d-a5c3-b548be4cbb29",
    "prId" : 11371,
    "prUrl" : "https://github.com/flutter/flutter/pull/11371#pullrequestreview-53371943",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "950ac828-e520-4491-a9b8-bbe2f16976b6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ditto",
        "createdAt" : "2017-07-28T19:50:31Z",
        "updatedAt" : "2017-07-31T23:54:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "b40a93ea-2962-4a07-960e-20f642ae2f8a",
        "parentId" : "950ac828-e520-4491-a9b8-bbe2f16976b6",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "also the scales",
        "createdAt" : "2017-07-28T19:51:52Z",
        "updatedAt" : "2017-07-31T23:54:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "9956cb72-bc6e-4397-9050-441a21a3f655",
        "parentId" : "950ac828-e520-4491-a9b8-bbe2f16976b6",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done",
        "createdAt" : "2017-07-31T23:53:42Z",
        "updatedAt" : "2017-07-31T23:54:22Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b32e384c3e8e4f6a0524e5b684586d20f810555f",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +118,122 @@    this.fit,\n    this.alignment,\n    this.repeat: ImageRepeat.noRepeat,\n  }) : assert(placeholder != null),\n       assert(image != null),"
  },
  {
    "id" : "8785d6aa-dc24-4c1b-bcd7-c7e4b2c1574a",
    "prId" : 11371,
    "prUrl" : "https://github.com/flutter/flutter/pull/11371#pullrequestreview-53371948",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca16cbe6-31a6-45fe-be72-102a2fc2c936",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "mention that placeholderScale can be null and what that means?",
        "createdAt" : "2017-07-28T19:51:17Z",
        "updatedAt" : "2017-07-31T23:54:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "606f54c7-5362-4d97-87bd-61c2be873323",
        "parentId" : "ca16cbe6-31a6-45fe-be72-102a2fc2c936",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done.",
        "createdAt" : "2017-07-31T23:53:44Z",
        "updatedAt" : "2017-07-31T23:54:22Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b32e384c3e8e4f6a0524e5b684586d20f810555f",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +139,143 @@  /// [image] is the URL of the final image.\n  ///\n  /// [placeholderScale] and [imageScale] are passed to their respective\n  /// [ImageProvider]s (see also [ImageInfo.scale]).\n  ///"
  },
  {
    "id" : "77cf1075-94e0-423a-a402-de4dc3fd295a",
    "prId" : 11371,
    "prUrl" : "https://github.com/flutter/flutter/pull/11371#pullrequestreview-53371955",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a4b0fe1-17c1-44ff-a517-f828dbd606e6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "repeat and imageScale != null in docs and asserts",
        "createdAt" : "2017-07-28T19:51:43Z",
        "updatedAt" : "2017-07-31T23:54:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a1fd1f1c-e003-4198-87f1-27265f3f66b3",
        "parentId" : "6a4b0fe1-17c1-44ff-a517-f828dbd606e6",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done.",
        "createdAt" : "2017-07-31T23:53:46Z",
        "updatedAt" : "2017-07-31T23:54:22Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b32e384c3e8e4f6a0524e5b684586d20f810555f",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +171,175 @@    this.fit,\n    this.alignment,\n    this.repeat: ImageRepeat.noRepeat,\n  }) : assert(placeholder != null),\n       assert(image != null),"
  },
  {
    "id" : "3f79c767-034b-472a-b435-08f89e77c0aa",
    "prId" : 33370,
    "prUrl" : "https://github.com/flutter/flutter/pull/33370#pullrequestreview-242491329",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7d8e26f-8b75-46c0-a2d0-42038116ccc3",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "could we make FadeInImage do a proper cross-fade with BlendMode.plus the way Porter and Duff intended?",
        "createdAt" : "2019-05-27T03:41:12Z",
        "updatedAt" : "2019-05-31T00:45:39Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e996920c-cf24-401a-85ff-56839e82dcc7",
        "parentId" : "e7d8e26f-8b75-46c0-a2d0-42038116ccc3",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Yep.  But it'd change the way this widget's fade behaves.  Worth it?",
        "createdAt" : "2019-05-27T05:02:39Z",
        "updatedAt" : "2019-05-31T00:45:39Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "c9ed4892-0321-4ce9-87d0-7bb439eb2c05",
        "parentId" : "e7d8e26f-8b75-46c0-a2d0-42038116ccc3",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "I left the behavior as-is for this class.  I may follow-up with a separate `CrossFadeImage` if we think it's worth the maintenance costs.",
        "createdAt" : "2019-05-28T07:34:19Z",
        "updatedAt" : "2019-05-31T00:45:39Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "049f8a1c9ee5b7fb97155328421822f57bb61787",
    "line" : 543,
    "diffHunk" : "@@ -1,1 +464,468 @@        ),\n      ],\n    );\n  }\n"
  },
  {
    "id" : "68622c58-5fbc-4862-a506-0634fcf45955",
    "prId" : 33370,
    "prUrl" : "https://github.com/flutter/flutter/pull/33370#pullrequestreview-242996092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46f6a012-a493-424f-b5ca-7ffbd3e830cc",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "@jonahwilliams Do you remember what the use case for adding the placeholderSemanticsLabel was?",
        "createdAt" : "2019-05-28T16:27:00Z",
        "updatedAt" : "2019-05-31T00:45:39Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "92bd6a82-0e82-45ab-b78f-531541404660",
        "parentId" : "46f6a012-a493-424f-b5ca-7ffbd3e830cc",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "The idea was that the unloaded in image might require a separate label, if that label is external.\r\n\r\nExample: \"loading\" - > \"Foo name\"",
        "createdAt" : "2019-05-28T19:57:32Z",
        "updatedAt" : "2019-05-31T00:45:39Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "84fd26a3-37c5-4ace-8b2a-75904f3ebce5",
        "parentId" : "46f6a012-a493-424f-b5ca-7ffbd3e830cc",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Looks like it was added in https://github.com/flutter/flutter/pull/28799 just for the sake of completeness (the bug it fixed was the lack of any semantic label support in FadeInImage).\r\n\r\nI think it's ill-advised to have a separate semantic label while the image is loading.  I'm gonna comment on the original PR to see if they object to its removal.",
        "createdAt" : "2019-05-28T20:02:25Z",
        "updatedAt" : "2019-05-31T00:45:39Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "46f909cd-0094-4296-a255-20dd3118c263",
        "parentId" : "46f6a012-a493-424f-b5ca-7ffbd3e830cc",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Your argumentation SGTM. Unless somebody objects, let's remove it. (Can you update the PR description to reflect this breaking change for future archeologists?). ",
        "createdAt" : "2019-05-28T20:54:56Z",
        "updatedAt" : "2019-05-31T00:45:39Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "5236c765-b101-4711-9755-cf1f3d654819",
        "parentId" : "46f6a012-a493-424f-b5ca-7ffbd3e830cc",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Done",
        "createdAt" : "2019-05-29T00:57:15Z",
        "updatedAt" : "2019-05-31T00:45:39Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "049f8a1c9ee5b7fb97155328421822f57bb61787",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +71,75 @@  /// [matchTextDirection] arguments must not be null.\n  ///\n  /// If [excludeFromSemantics] is true, then [imageSemanticLabel] will be ignored.\n  const FadeInImage({\n    Key key,"
  },
  {
    "id" : "709c5a5e-1b5f-4fca-b5bb-fb455ddc3d9c",
    "prId" : 33370,
    "prUrl" : "https://github.com/flutter/flutter/pull/33370#pullrequestreview-244079256",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65fb2f05-1c0e-4c8b-95c8-dcd1294a5348",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Why the indirection via `_image`?",
        "createdAt" : "2019-05-30T23:05:59Z",
        "updatedAt" : "2019-05-31T00:45:39Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "857f4ba9-3945-4870-9ad2-5ad40dcd594c",
        "parentId" : "65fb2f05-1c0e-4c8b-95c8-dcd1294a5348",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Because I call it twice below.",
        "createdAt" : "2019-05-30T23:29:53Z",
        "updatedAt" : "2019-05-31T00:45:39Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "ca90663d-4a70-4c4c-b434-9d2f8a159f80",
        "parentId" : "65fb2f05-1c0e-4c8b-95c8-dcd1294a5348",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I am blind. Never mind then :) ",
        "createdAt" : "2019-05-30T23:38:40Z",
        "updatedAt" : "2019-05-31T00:45:39Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "049f8a1c9ee5b7fb97155328421822f57bb61787",
    "line" : 216,
    "diffHunk" : "@@ -1,1 +311,315 @@  final String imageSemanticLabel;\n\n  Image _image({\n    @required ImageProvider image,\n    ImageFrameBuilder frameBuilder,"
  },
  {
    "id" : "1d33652a-da44-4b2a-8706-82c24a1ac999",
    "prId" : 33370,
    "prUrl" : "https://github.com/flutter/flutter/pull/33370#pullrequestreview-244092559",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ec196dd-d08f-48f4-ac38-6d8f30783836",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "rename `image` to target or rename this to `isImageLoaded` to show the relationship between the two?",
        "createdAt" : "2019-05-30T23:09:18Z",
        "updatedAt" : "2019-05-31T00:45:39Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "bfd3dcb3-55c3-4fd5-bf0e-80160b6cd32e",
        "parentId" : "7ec196dd-d08f-48f4-ac38-6d8f30783836",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Done",
        "createdAt" : "2019-05-31T00:45:11Z",
        "updatedAt" : "2019-05-31T00:45:39Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "049f8a1c9ee5b7fb97155328421822f57bb61787",
    "line" : 300,
    "diffHunk" : "@@ -1,1 +367,371 @@    @required this.target,\n    @required this.placeholder,\n    @required this.isTargetLoaded,\n    @required this.fadeOutDuration,\n    @required this.fadeOutCurve,"
  },
  {
    "id" : "3a37599a-4a72-4992-aa94-5fa7e522dae9",
    "prId" : 33370,
    "prUrl" : "https://github.com/flutter/flutter/pull/33370#pullrequestreview-244505093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4db7ea86-36de-4423-83f7-76276c262dc1",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It's not clear when/why the tweens are assigned an `end` value, i.e. when they become \"valid\".  Our [docs](https://api.flutter.dev/flutter/widgets/ImplicitlyAnimatedWidgetState/forEachTween.html) aren't enlightening.\r\n\r\n",
        "createdAt" : "2019-05-30T23:59:48Z",
        "updatedAt" : "2019-05-31T00:45:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "9d2f15d2-0156-4c6d-815a-4a58eabb8627",
        "parentId" : "4db7ea86-36de-4423-83f7-76276c262dc1",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "It's certainly possible in this check for them not to have an `end` value, which is why I added the check.\r\n\r\nLooking at the code, `end` gets set when a widget's value gets updated in a way that triggers a change in a tween's target value.  I'll see if I can manage to document it in a comprehensible manner in a follow-on PR.",
        "createdAt" : "2019-05-31T00:53:47Z",
        "updatedAt" : "2019-05-31T00:53:47Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "cf486e87-d9d4-49e2-a108-fdd9b986a695",
        "parentId" : "4db7ea86-36de-4423-83f7-76276c262dc1",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Clarified in #33674",
        "createdAt" : "2019-05-31T20:27:11Z",
        "updatedAt" : "2019-05-31T20:27:12Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "049f8a1c9ee5b7fb97155328421822f57bb61787",
    "line" : 478,
    "diffHunk" : "@@ -1,1 +435,439 @@      ),\n    ]));\n    if (!widget.isTargetLoaded && _isValid(_placeholderOpacity) && _isValid(_targetOpacity)) {\n      // Jump (don't fade) back to the placeholder image, so as to be ready\n      // for the full animation when the new target image becomes ready."
  }
]