[
  {
    "id" : "cc7f249f-c15f-457d-aa2f-6235f4c295b6",
    "prId" : 75032,
    "prUrl" : "https://github.com/flutter/flutter/pull/75032#pullrequestreview-606754225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7564c8c5-8b3e-47c2-8773-e2b407528336",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I was actually thinking that this interface would provide you access to the actions you can perform on the rendereditable to also disconnect this from the RenderEditable implementation...",
        "createdAt" : "2021-03-08T18:51:11Z",
        "updatedAt" : "2021-03-11T23:06:24Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "336a7b53-3d10-4925-8979-5c2b37b5e128",
        "parentId" : "7564c8c5-8b3e-47c2-8773-e2b407528336",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Ah I see what you mean.  I like this idea, but do you mind if I punt on it until I've converted more stuff to actions?  I'm still not fully certain on the long-term role of EditableText and RenderEditable.  I might even want to create a separate class from both of these that would implement all of this text editing API instead of RenderEditable.\r\n\r\nThat would be a breaking change, but it's probably unavoidable.",
        "createdAt" : "2021-03-08T22:10:32Z",
        "updatedAt" : "2021-03-11T23:06:24Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "9814f0bc8f0ce7e92a723214edbe338470e4304e",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +20,24 @@///   * [EditableTextState], which implements this and is the most typical\n///     target of a TextEditingAction.\nabstract class TextEditingActionTarget {\n  /// The renderer that handles [TextEditingAction]s.\n  ///"
  }
]