[
  {
    "id" : "b8c77a21-2b42-4c57-bd03-4d010c0132a9",
    "prId" : 847,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3dba6634-ab3b-4864-87d0-a04b91ac0b29",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Talk about how it shrinks after being dragged off.\n",
        "createdAt" : "2015-12-09T22:55:03Z",
        "updatedAt" : "2015-12-10T18:16:03Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0885926e29ae22b0e3932a5e74d2939cf556cda7",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +41,45 @@}\n\n/// Can be dismissed by dragging in one or more directions.\n///\n/// The child is draggable in the indicated direction(s). When released (or"
  },
  {
    "id" : "542619b1-2f87-432e-bfe3-d2e3b765a804",
    "prId" : 2467,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b081cc7b-6a9d-454c-83e4-88f02bb6cf0b",
        "parentId" : null,
        "authorId" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "body" : "Maybe give a link to a description of what the \"leave-behind\" idiom is?  Is this documented in the Material Design specs?\n",
        "createdAt" : "2016-03-07T19:24:49Z",
        "updatedAt" : "2016-03-07T22:50:57Z",
        "lastEditedBy" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "tags" : [
        ]
      },
      {
        "id" : "d7714461-db8e-4303-954b-2fbe93125e9e",
        "parentId" : "b081cc7b-6a9d-454c-83e4-88f02bb6cf0b",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "We could do a pass over the entire code base to link constants, classes, and etc to the MD spec.  There's a bunch of work there.\n",
        "createdAt" : "2016-03-07T19:29:23Z",
        "updatedAt" : "2016-03-07T22:50:57Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2662ea5283391ca53dbf833d743d033ec7ff4402",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +46,50 @@/// direction) to zero.\n///\n/// Backgrounds can be used to implement the \"leave-behind\" idiom. If a background\n/// is specified it is stacked behind the Dismissable's child and is exposed when\n/// the child moves."
  },
  {
    "id" : "80454f98-52b2-4994-8123-f57d68cb4fa9",
    "prId" : 6325,
    "prUrl" : "https://github.com/flutter/flutter/pull/6325#pullrequestreview-4305761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56c1ed30-6448-42bc-9592-b70d77431f69",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "won't this make the background suddenly disappear once the swipe away transition is complete?\n",
        "createdAt" : "2016-10-14T14:28:58Z",
        "updatedAt" : "2016-10-14T18:11:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "d46e5565-0de1-42bc-a3d5-5cc3e7406fc4",
        "parentId" : "56c1ed30-6448-42bc-9592-b70d77431f69",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "You can't see it in the diff, but if you look higher up in the file, we go down a completely different path once the swipe away transition is complete in order to do the collapse.\n",
        "createdAt" : "2016-10-14T14:52:32Z",
        "updatedAt" : "2016-10-14T18:11:45Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "b2f91d2d-6461-4be5-81f8-293ee66efda3",
        "parentId" : "56c1ed30-6448-42bc-9592-b70d77431f69",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Ah, I see it now. That makes sense.\n\nShould we put a global key around the background when we insert it? Or should we rely on the caller to do so if they have state in there that they want to preserve across the various ways we build this?\n\nIf you don't want to put a global key in this build function to do that, we should document that unless they use a global key in their background, it could get its state reset, and we should suggest putting the same global key on background and secondaryBackground too if they are structurally similar and should have state kept across them.\n",
        "createdAt" : "2016-10-14T15:07:13Z",
        "updatedAt" : "2016-10-14T18:11:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "26911788-2cdb-403d-8173-5af894321d97",
        "parentId" : "56c1ed30-6448-42bc-9592-b70d77431f69",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, I think we're not super clear about when a widget is responsible for keeping sync between the widgets you hand in.  In this case, it makes sense that the background will be culled out when its not on screen, so it's sensible that it wouldn't always sync.  The loss of sync between the swipeaway and the collapse is probably less expected through...\n",
        "createdAt" : "2016-10-14T16:39:12Z",
        "updatedAt" : "2016-10-14T18:11:45Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "14448361-a41c-4aef-a12a-c93209631a10",
        "parentId" : "56c1ed30-6448-42bc-9592-b70d77431f69",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I realized the `Key` isn't needed for the foreground because it stays at the end of the list, which will be synced properly.\n\nI'm going to leave the background issue for another patch because I'm not changing it here.\n",
        "createdAt" : "2016-10-14T16:57:30Z",
        "updatedAt" : "2016-10-14T18:11:45Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a535435a992ba78d8e8f4b1c3d8fe3d49dc76fc",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +390,394 @@      List<Widget> children = <Widget>[];\n\n      if (!_moveAnimation.isDismissed) {\n        children.add(new Positioned.fill(\n          child: new ClipRect("
  }
]