[
  {
    "id" : "bb23970f-2222-4dec-b8db-63304d9c0c2c",
    "prId" : 4383,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e1083c6-acf4-4031-a677-99e93b1380d8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "no @required?\n",
        "createdAt" : "2016-06-06T05:27:00Z",
        "updatedAt" : "2016-06-06T06:45:39Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "71b8c969-f88b-47d4-a00c-6241bc3cdd84",
        "parentId" : "8e1083c6-acf4-4031-a677-99e93b1380d8",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I can look at doing that for all the tweens in another patch.\n",
        "createdAt" : "2016-06-06T05:41:50Z",
        "updatedAt" : "2016-06-06T06:45:39Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f19fe1e0a5264d336997ef068592e1751a9c8b7",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +14,18 @@  ///\n  /// The [begin] and [end] arguments must not be null.\n  BoxConstraintsTween({ BoxConstraints begin, BoxConstraints end }) : super(begin: begin, end: end);\n\n  @override"
  },
  {
    "id" : "509943e9-1703-44ba-b8ba-70b06aaec356",
    "prId" : 4383,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7e9f9e8-108e-4751-b834-241e21a4d9d7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Would adding `, otherwise the situation would be overconstrained` clarify matters or make it worse?\n",
        "createdAt" : "2016-06-06T05:28:07Z",
        "updatedAt" : "2016-06-06T06:45:39Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c6b3753c-8072-44f4-a28b-480fb2169798",
        "parentId" : "e7e9f9e8-108e-4751-b834-241e21a4d9d7",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I'm not sure.  Maybe \"overdescribed\" would be better to avoid implicating constraints (as in box constraints).\n",
        "createdAt" : "2016-06-06T06:29:34Z",
        "updatedAt" : "2016-06-06T06:45:39Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f19fe1e0a5264d336997ef068592e1751a9c8b7",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +361,365 @@  /// [width]), and only two out of the three vertical values ([top],\n  /// [bottom], [height]), can be set. In each case, at least one of\n  /// the three must be null.\n  ///\n  /// The [curve] and [duration] arguments must not be null."
  },
  {
    "id" : "73765a04-1f99-4f14-975a-7749d168f91f",
    "prId" : 9756,
    "prUrl" : "https://github.com/flutter/flutter/pull/9756#pullrequestreview-36087927",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b2eae87-1bef-4348-93ff-93432c379272",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This should mention that it's not animated.",
        "createdAt" : "2017-05-03T17:37:59Z",
        "updatedAt" : "2017-05-03T18:13:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8dca56ee476210ddf6cd2d5ac96ceae3345ca58c",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +685,689 @@  final Widget child;\n\n  /// The type of shape.\n  ///\n  /// This property is not animated."
  },
  {
    "id" : "2790e2d7-a11f-495a-8c1d-058cc4e1bce6",
    "prId" : 12881,
    "prUrl" : "https://github.com/flutter/flutter/pull/12881#pullrequestreview-74290505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec1c6bb0-08fa-4498-bce0-b1052c279454",
        "parentId" : null,
        "authorId" : "739988f7-3598-43ac-9d29-b64a670be043",
        "body" : "We're not asserting for not null for `animateShadowColor` because `animateColor` doesn't have one, but maybe they should both be asserting?",
        "createdAt" : "2017-11-04T19:11:48Z",
        "updatedAt" : "2017-11-06T20:19:53Z",
        "lastEditedBy" : "739988f7-3598-43ac-9d29-b64a670be043",
        "tags" : [
        ]
      },
      {
        "id" : "0c37cba7-d597-4240-ae0a-e2b9c9529878",
        "parentId" : "ec1c6bb0-08fa-4498-bce0-b1052c279454",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Good point. Let's assert. `true` or `false` is all we need for these two.",
        "createdAt" : "2017-11-04T19:31:32Z",
        "updatedAt" : "2017-11-06T20:19:53Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "809badf2-fa81-4ede-b8be-c1e2edc84337",
        "parentId" : "ec1c6bb0-08fa-4498-bce0-b1052c279454",
        "authorId" : "739988f7-3598-43ac-9d29-b64a670be043",
        "body" : "dc9759f0ead8e18a50544fea4f5edb8f5e2d4248",
        "createdAt" : "2017-11-05T19:03:49Z",
        "updatedAt" : "2017-11-06T20:19:53Z",
        "lastEditedBy" : "739988f7-3598-43ac-9d29-b64a670be043",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd4efd1a80d6b3544b043e281e30de8dacefd62b",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +947,951 @@    this.animateColor: true,\n    @required this.shadowColor,\n    this.animateShadowColor: true,\n    Curve curve: Curves.linear,\n    @required Duration duration,"
  },
  {
    "id" : "f3ac183f-fb13-4d6a-a830-b75c8eb76741",
    "prId" : 29195,
    "prUrl" : "https://github.com/flutter/flutter/pull/29195#pullrequestreview-213754089",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef6f6e83-7a74-4355-b173-78b0ed3df6ee",
        "parentId" : null,
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "Can you include some context around this comment?  It is probably obvious to people who work in the framework docs a lot, but for others this feels random and strange.\r\n\r\nPerhaps you can explain that some docs in this class have source code examples, and those source code examples assume the existence of `MyWidget`.\r\n\r\nAlso, is this the correct place such a comment?  Do we do this elsewhere where we add a double slash `//` multiline comment above the class comment?",
        "createdAt" : "2019-03-13T01:52:53Z",
        "updatedAt" : "2019-03-18T18:31:29Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      },
      {
        "id" : "31cbeb3c-cc2c-4cab-bc28-acb5230aa65b",
        "parentId" : "ef6f6e83-7a74-4355-b173-78b0ed3df6ee",
        "authorId" : "a17e2ac3-c9b4-43eb-9004-04c6fa35e4ef",
        "body" : "This is a magic invocation defined by [/dev/bots/analyze-sample-code.dart](https://github.com/flutter/flutter/blob/master/dev/bots/analyze-sample-code.dart). \r\n\r\n[Other such preambles](https://github.com/flutter/flutter/search?q=%22Examples+can+assume%22&unscoped_q=%22Examples+can+assume%22) are not documented, so I didn't feel I should document this one.",
        "createdAt" : "2019-03-13T04:16:43Z",
        "updatedAt" : "2019-03-18T18:31:29Z",
        "lastEditedBy" : "a17e2ac3-c9b4-43eb-9004-04c6fa35e4ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "25d9e745ffadf1d245e380b7c4f73622f77bc0bc",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +16,20 @@import 'transitions.dart';\n\n// Examples can assume:\n// class MyWidget extends ImplicitlyAnimatedWidget {\n//   MyWidget() : super(duration: const Duration(seconds: 1));"
  },
  {
    "id" : "b685cfc3-e1d5-401b-9fb3-c35a93a623ec",
    "prId" : 29195,
    "prUrl" : "https://github.com/flutter/flutter/pull/29195#pullrequestreview-213753298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82cd15bb-f4b9-4e70-8acd-6a4fae690420",
        "parentId" : null,
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "Can you add a blank line between members for clarity?",
        "createdAt" : "2019-03-13T01:53:06Z",
        "updatedAt" : "2019-03-18T18:31:29Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      },
      {
        "id" : "2d7d52c9-4879-43d5-badc-b22bc19d5c4f",
        "parentId" : "82cd15bb-f4b9-4e70-8acd-6a4fae690420",
        "authorId" : "a17e2ac3-c9b4-43eb-9004-04c6fa35e4ef",
        "body" : "Unfortunately, that seems not to be supported by the sample tool. When I had a blank line here, the analyzer step failed with `Error: Unexpected content in sample code preamble.`",
        "createdAt" : "2019-03-13T04:12:02Z",
        "updatedAt" : "2019-03-18T18:31:29Z",
        "lastEditedBy" : "a17e2ac3-c9b4-43eb-9004-04c6fa35e4ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "25d9e745ffadf1d245e380b7c4f73622f77bc0bc",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +19,23 @@// class MyWidget extends ImplicitlyAnimatedWidget {\n//   MyWidget() : super(duration: const Duration(seconds: 1));\n//   final Color targetColor = Colors.black;\n//   @override\n//   MyWidgetState createState() => MyWidgetState();"
  },
  {
    "id" : "0d212ca7-8efb-43b5-bc69-25b0c13d2361",
    "prId" : 29195,
    "prUrl" : "https://github.com/flutter/flutter/pull/29195#pullrequestreview-213754561",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fd25ad1-0eac-4e0d-b16b-923b4d8545b0",
        "parentId" : null,
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "I think we have a policy about always placing a `#Sample Code` header above sample code, right?",
        "createdAt" : "2019-03-13T01:53:43Z",
        "updatedAt" : "2019-03-18T18:31:29Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      },
      {
        "id" : "93159d1e-0925-49da-853c-693c916c3bef",
        "parentId" : "0fd25ad1-0eac-4e0d-b16b-923b4d8545b0",
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "Also, it would be good to state under the header what this example is intended to show.",
        "createdAt" : "2019-03-13T01:54:18Z",
        "updatedAt" : "2019-03-18T18:31:29Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      },
      {
        "id" : "7e3af8e9-f4d1-4f60-81e1-c2ade3fd15e7",
        "parentId" : "0fd25ad1-0eac-4e0d-b16b-923b4d8545b0",
        "authorId" : "a17e2ac3-c9b4-43eb-9004-04c6fa35e4ef",
        "body" : "I assumed `# Sample code` is just for classes and constructors but that's stupid. Will do.",
        "createdAt" : "2019-03-13T04:19:47Z",
        "updatedAt" : "2019-03-18T18:31:29Z",
        "lastEditedBy" : "a17e2ac3-c9b4-43eb-9004-04c6fa35e4ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "25d9e745ffadf1d245e380b7c4f73622f77bc0bc",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +368,372 @@  /// [forEachTween].\n  ///\n  /// {@tool sample}\n  ///\n  /// Sample code implementing an implicitly animated widget's `State`."
  },
  {
    "id" : "a1681ca5-6b0b-4b0c-9d7b-283fd8fc69ea",
    "prId" : 29195,
    "prUrl" : "https://github.com/flutter/flutter/pull/29195#pullrequestreview-213754401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7037cc6-8406-4140-b3d2-98ed474ff90e",
        "parentId" : null,
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "Can you offer a brief comment in the sample code that illuminates the purpose of each line here?  I find the visitor system within implicit animations to appear very perplexing and I always seem to forget what it is that I'm trying to accomplish when I write `forEachTween()`.",
        "createdAt" : "2019-03-13T01:55:28Z",
        "updatedAt" : "2019-03-18T18:31:29Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      },
      {
        "id" : "3d16c71f-1cb6-44d6-9a9f-430a83385906",
        "parentId" : "b7037cc6-8406-4140-b3d2-98ed474ff90e",
        "authorId" : "a17e2ac3-c9b4-43eb-9004-04c6fa35e4ef",
        "body" : "Will do.",
        "createdAt" : "2019-03-13T04:18:54Z",
        "updatedAt" : "2019-03-18T18:31:29Z",
        "lastEditedBy" : "a17e2ac3-c9b4-43eb-9004-04c6fa35e4ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "25d9e745ffadf1d245e380b7c4f73622f77bc0bc",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +390,394 @@  ///   void forEachTween(TweenVisitor<dynamic> visitor) {\n  ///     // Update the tween using the provided visitor function.\n  ///     _colorTween = visitor(\n  ///       // The latest tween value. Can be `null`.\n  ///       _colorTween,"
  },
  {
    "id" : "e78d79a9-c548-40a9-a41c-7e10f46917c8",
    "prId" : 29195,
    "prUrl" : "https://github.com/flutter/flutter/pull/29195#pullrequestreview-215779522",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3692278-4d86-4cfc-9adb-67334c522d8c",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "It's good practice to give a one or two sentence introduction within the `{@tool sample}` section that briefly explains in prose what the example code is accomplishing. ",
        "createdAt" : "2019-03-15T17:39:36Z",
        "updatedAt" : "2019-03-18T18:31:29Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "f6db818c-7e4b-49d2-8f3f-6b6a872459b6",
        "parentId" : "c3692278-4d86-4cfc-9adb-67334c522d8c",
        "authorId" : "a17e2ac3-c9b4-43eb-9004-04c6fa35e4ef",
        "body" : "Ack. Done.",
        "createdAt" : "2019-03-18T18:32:03Z",
        "updatedAt" : "2019-03-18T18:32:03Z",
        "lastEditedBy" : "a17e2ac3-c9b4-43eb-9004-04c6fa35e4ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "25d9e745ffadf1d245e380b7c4f73622f77bc0bc",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +374,378 @@  /// changes.\n  ///\n  /// ```dart\n  /// class MyWidgetState extends AnimatedWidgetBaseState<MyWidget> {\n  ///   ColorTween _colorTween;"
  },
  {
    "id" : "b4aba5e0-1536-4f95-8966-73c554b1f410",
    "prId" : 33674,
    "prUrl" : "https://github.com/flutter/flutter/pull/33674#pullrequestreview-244534502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8a71ade-abda-471d-9357-63d7afaa6e5b",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe unify the quotes around opacity? Either use them in both instances or don't?",
        "createdAt" : "2019-05-31T20:36:27Z",
        "updatedAt" : "2019-06-01T06:10:33Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "9160d80f-2b38-45f0-a9e8-02b52b71f868",
        "parentId" : "c8a71ade-abda-471d-9357-63d7afaa6e5b",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Done",
        "createdAt" : "2019-05-31T21:57:01Z",
        "updatedAt" : "2019-06-01T06:11:31Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ca879242887bb08f1ab6c97c5f81bb3b08447af",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +278,282 @@/// is animating. For instance, if the state is animating its widget's\n/// opacity value, then this argument should contain the widget's current\n/// opacity value.\n///\n/// The `constructor` argument should contain a function that takes a value"
  },
  {
    "id" : "523a9608-4536-49ec-9e9c-85ad8c1597ac",
    "prId" : 33674,
    "prUrl" : "https://github.com/flutter/flutter/pull/33674#pullrequestreview-244534502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91c7f3f6-13ae-4bef-b6e1-e57b5cdb8915",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This is the confusingly simple bit. The animation's don't start immediately. Each time the didUpdateWidget method of the ImplicitlyAnimatedWidgetState subclass runs, they might start, per the condition you've specified. In other words, each time the ImplicitlyAnimatedWidget subclass is rebuilt, the animations might start.",
        "createdAt" : "2019-05-31T21:30:58Z",
        "updatedAt" : "2019-06-01T06:10:33Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "0a98a879-2ef6-4c66-bddd-a3e8d23a12ad",
        "parentId" : "91c7f3f6-13ae-4bef-b6e1-e57b5cdb8915",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Yep.  I tried to add a lot more documentation to `forEachTween()` to make this clear.",
        "createdAt" : "2019-06-01T06:10:57Z",
        "updatedAt" : "2019-06-01T06:11:31Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ca879242887bb08f1ab6c97c5f81bb3b08447af",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +475,479 @@  ///     a [Tween.begin] value and not a [Tween.end].\n  ///\n  ///  2. When the state's [widget] is updated, and one or more of the tweens\n  ///     visited by [forEachTween] specifies a target value that's different\n  ///     than the widget's current value, thus signaling that the [animation]"
  },
  {
    "id" : "f8c84c32-ee97-42b4-bb03-57bc8f631662",
    "prId" : 35225,
    "prUrl" : "https://github.com/flutter/flutter/pull/35225#pullrequestreview-257039756",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "836c0c2c-5fdb-4e56-a6cf-9bfba32507b4",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "Can you give an explanation of what the code creates here?",
        "createdAt" : "2019-07-02T17:21:43Z",
        "updatedAt" : "2019-07-09T19:58:28Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "bab52528-d778-406f-b860-b12c3f7504cf",
        "parentId" : "836c0c2c-5fdb-4e56-a6cf-9bfba32507b4",
        "authorId" : "944c0c96-8dc6-43f1-afcd-d988bff0835d",
        "body" : "good idea, done",
        "createdAt" : "2019-07-02T17:26:13Z",
        "updatedAt" : "2019-07-09T19:58:28Z",
        "lastEditedBy" : "944c0c96-8dc6-43f1-afcd-d988bff0835d",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d6d097d322bf76b97cf4bac8849bcac3d434993",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +528,532 @@///\n/// {@tool snippet --template=stateful_widget_scaffold}\n///\n/// The following example (depicted above) transitions an AnimatedContainer\n/// between two states. It adjusts the [height], [width], [color], and"
  },
  {
    "id" : "d5e4834f-b352-4b8f-9a81-a423b90c193e",
    "prId" : 35225,
    "prUrl" : "https://github.com/flutter/flutter/pull/35225#pullrequestreview-259719140",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1aa8b967-9025-4ee8-a4ac-d37a2d6b5f9c",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Somehow (I don't think we have figured out how to do that yet) we should link the example code with the animation to make it clear to people that the animation is illustrating what the code is showing. Not sure how to best do that. Ideas:\r\n\r\n* Embed the animation within the `@tool snippet` section\r\n* Say with words in the example description below that the resulting animation can be seen above (and vice versa)\r\n* ...\r\n\r\nMaybe @gspencergoog has a good idea.",
        "createdAt" : "2019-07-09T16:55:46Z",
        "updatedAt" : "2019-07-09T19:58:28Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "96998b6e-5d0d-4a65-81c8-a8cd1442d48c",
        "parentId" : "1aa8b967-9025-4ee8-a4ac-d37a2d6b5f9c",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "I like embedding the animation within the description of the example code for now.  Eventually, it would be nice to have a side-by-side presentation, or a separate tab with the animation in it, but for now that doesn't exist.",
        "createdAt" : "2019-07-09T17:00:44Z",
        "updatedAt" : "2019-07-09T19:58:28Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "7b9d7948-ef82-4935-a2ff-5bbb6724d2de",
        "parentId" : "1aa8b967-9025-4ee8-a4ac-d37a2d6b5f9c",
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "Previous samples & diagrams/animations have embedded the assets in the description.",
        "createdAt" : "2019-07-09T17:51:59Z",
        "updatedAt" : "2019-07-09T19:58:28Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "c399d523-05e4-4076-a51a-60430c4fe87f",
        "parentId" : "1aa8b967-9025-4ee8-a4ac-d37a2d6b5f9c",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Do you happen to know of an example that does that? Just curious what it looks like rendered out in dart docs.",
        "createdAt" : "2019-07-09T17:58:40Z",
        "updatedAt" : "2019-07-09T19:58:28Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "9658ef74-5619-4d8c-8be6-01e0e3190e6e",
        "parentId" : "1aa8b967-9025-4ee8-a4ac-d37a2d6b5f9c",
        "authorId" : "944c0c96-8dc6-43f1-afcd-d988bff0835d",
        "body" : "I don't think we're quite set up to do that yet. The white-on-blue doesn't quite look right, and the video comment ends up being generated in the full snippet:\r\n\r\n![Screen Shot 2019-07-09 at 10 59 50 AM](https://user-images.githubusercontent.com/1145719/60912100-7ddd4700-a239-11e9-8132-c9aabc451397.png)\r\n![Screen Shot 2019-07-09 at 11 00 06 AM](https://user-images.githubusercontent.com/1145719/60912101-7ddd4700-a239-11e9-8e94-15630d9c38fe.png)\r\n",
        "createdAt" : "2019-07-09T18:06:32Z",
        "updatedAt" : "2019-07-09T19:58:28Z",
        "lastEditedBy" : "944c0c96-8dc6-43f1-afcd-d988bff0835d",
        "tags" : [
        ]
      },
      {
        "id" : "cd60e23f-c135-4c53-9ef3-52787e54fb2f",
        "parentId" : "1aa8b967-9025-4ee8-a4ac-d37a2d6b5f9c",
        "authorId" : "944c0c96-8dc6-43f1-afcd-d988bff0835d",
        "body" : "for now I added a \"depicted above\" to the description",
        "createdAt" : "2019-07-09T18:06:54Z",
        "updatedAt" : "2019-07-09T19:58:28Z",
        "lastEditedBy" : "944c0c96-8dc6-43f1-afcd-d988bff0835d",
        "tags" : [
        ]
      },
      {
        "id" : "f13ee5bd-89a4-4a58-b4b9-9b9a86350983",
        "parentId" : "1aa8b967-9025-4ee8-a4ac-d37a2d6b5f9c",
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "Here's an example: https://master-api.flutter.dev/flutter/widgets/Flow-class.html\r\nI agree the white-on-blue doesn't appear very polished:\r\n![Screen Shot 2019-07-09 at 12 41 21 PM](https://user-images.githubusercontent.com/16964204/60917992-02829200-a247-11e9-9c77-c14dadbde220.png)\r\n",
        "createdAt" : "2019-07-09T19:42:39Z",
        "updatedAt" : "2019-07-09T19:58:28Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d6d097d322bf76b97cf4bac8849bcac3d434993",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +527,531 @@/// {@animation 250 266 https://flutter.github.io/assets-for-api-docs/assets/widgets/animated_container.mp4}\n///\n/// {@tool snippet --template=stateful_widget_scaffold}\n///\n/// The following example (depicted above) transitions an AnimatedContainer"
  },
  {
    "id" : "99c89a59-c678-497e-a7e9-18114dc0935f",
    "prId" : 67046,
    "prUrl" : "https://github.com/flutter/flutter/pull/67046#pullrequestreview-500575845",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a95d6078-357d-42e3-b387-3a88101f611c",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "The documentation should say that changes in the clipBehavior are sudden and not animated (unlike changes to any of the other properties).",
        "createdAt" : "2020-10-01T17:39:00Z",
        "updatedAt" : "2020-10-07T10:13:07Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9e799f3333c726a4d5ad85e7197ba821ca443be",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +723,727 @@  /// The clip behavior when [AnimatedContainer.decoration] is not null.\n  ///\n  /// Defaults to [Clip.none]. Must be [Clip.none] if [decoration] is null.\n  ///\n  /// Unlike other properties of [AnimatedContainer], changes to this property"
  }
]