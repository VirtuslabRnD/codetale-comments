[
  {
    "id" : "ac92cab1-3691-4954-86bb-caccf3893c39",
    "prId" : 3105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11cef8e5-6900-4418-b95b-5479e00b6c60",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "if you're gonna assert here, you should assert in move() also :-)\n",
        "createdAt" : "2016-04-05T18:06:36Z",
        "updatedAt" : "2016-04-05T19:58:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "96e765255b1d6d2a74d7134d053f0cc81339d1ff",
    "line" : 520,
    "diffHunk" : "@@ -1,1 +518,522 @@  @override\n  void removeChildRenderObject(RenderObject child) {\n    assert(child.parent == renderObject);\n    renderObject.remove(child);\n  }"
  },
  {
    "id" : "7f2ac032-ff0d-45cd-bfe6-6d5379a329a0",
    "prId" : 3127,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e180f07-06c6-4bf6-90be-b4a7792539c8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "can the builder be null?\n",
        "createdAt" : "2016-04-06T16:55:53Z",
        "updatedAt" : "2016-04-06T19:24:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "06a1e0ec-1894-4d72-b4b6-140f9316447d",
        "parentId" : "9e180f07-06c6-4bf6-90be-b4a7792539c8",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Nope, asserted.\n",
        "createdAt" : "2016-04-06T17:30:22Z",
        "updatedAt" : "2016-04-06T19:24:54Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "0dfcde5e5384ebcfd8880d84a13f822862f374c8",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +54,58 @@/// See also [LazyBlockViewport].\nclass LazyBlockBuilder extends LazyBlockDelegate {\n  /// Creates a LazyBlockBuilder based on the given builder.\n  LazyBlockBuilder({ this.builder }) {\n    assert(builder != null);"
  },
  {
    "id" : "cc48a0aa-6668-49cd-8ffb-aac895645926",
    "prId" : 3127,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d3c691f-397f-4938-a8db-277b0f2e088a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "missing period at end of sentence\n",
        "createdAt" : "2016-04-06T17:07:06Z",
        "updatedAt" : "2016-04-06T19:24:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0dfcde5e5384ebcfd8880d84a13f822862f374c8",
    "line" : 179,
    "diffHunk" : "@@ -1,1 +197,201 @@  final double startOffset;\n\n  /// The direction in which the children are permitted to be larger than the viewport\n  ///\n  /// The children are given layout constraints that are fully unconstrainted"
  },
  {
    "id" : "54e0c217-6592-4c2b-b6cb-cf0b5ab3de1c",
    "prId" : 5956,
    "prUrl" : "https://github.com/flutter/flutter/pull/5956#pullrequestreview-804603",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "786b3d9f-3271-4c85-afca-17cc04965408",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "final?\n",
        "createdAt" : "2016-09-20T17:45:01Z",
        "updatedAt" : "2016-09-20T18:00:19Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "f3b285de-28e2-495d-8de2-bbcaf40e9c0b",
        "parentId" : "786b3d9f-3271-4c85-afca-17cc04965408",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I actually removed the final qualifier because most of the code in this file doesn't use it for local vars (that are in fact final).\n\nWould be happy to make another pass and finalize things.\n",
        "createdAt" : "2016-09-20T17:58:38Z",
        "updatedAt" : "2016-09-20T18:00:19Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "77fb68bbeec532b208ee237d09c8a3f4056e63e2",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +603,607 @@    // If the most recent layout didn't fill the viewport but an additional child\n    // is now available, add it to the widgets list which will force a layout.\n    int buildChildCount = _underflow ? _children.length + 1 : _children.length;\n    for (int i = 0; i < buildChildCount; ++i) {\n      int logicalIndex = _firstChildLogicalIndex + i;"
  }
]