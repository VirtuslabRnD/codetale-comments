[
  {
    "id" : "607df555-f35a-430c-a5ed-b8774a545bb5",
    "prId" : 621,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77deac91-23cf-4df9-8ed5-7ac2df69fa86",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Do you actually use this mechanism in this patch?\n",
        "createdAt" : "2015-11-30T06:50:09Z",
        "updatedAt" : "2015-12-01T09:37:04Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "a6266d80-8b6a-4a1b-8c59-55596ec2af3c",
        "parentId" : "77deac91-23cf-4df9-8ed5-7ac2df69fa86",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Ah, I knew there was _something_ I'd forgotten. I need to figure out how to make scrollable material work. Either require that scrollables contain their own Material, or use this Notification mechanism to have scrollables notify Material when they scroll, and move the Material outside the Scrollables.\n",
        "createdAt" : "2015-11-30T18:44:28Z",
        "updatedAt" : "2015-12-01T09:37:04Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee802bfe31d96fd02d8657008185a940df4ce9cf",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@}\n\nclass NotificationListener<T extends Notification> extends StatelessComponent {\n  NotificationListener({\n    Key key,"
  },
  {
    "id" : "75d30205-99ff-4859-b50e-f001fa46174e",
    "prId" : 7825,
    "prUrl" : "https://github.com/flutter/flutter/pull/7825#pullrequestreview-19882195",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8879b0d4-2e92-4d61-bf97-866d01044b43",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "The reason the is check on the left doesn't result in inferring that widget is a NotificationListener<Notification>\r\nis that element.widget could change between when the is check is performed and when it is accessed.\r\nAdding a local variable earlier fixes that issue.",
        "createdAt" : "2017-02-02T20:26:06Z",
        "updatedAt" : "2017-02-03T03:17:28Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f0db74a09b1718c5f5e89c7b606c00e74b396fe",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +31,35 @@      StatelessWidget widget = element.widget;\n      if (widget is NotificationListener<Notification>) {\n        if (widget._dispatch(this, element)) // that function checks the type dynamically\n          return false;\n      }"
  },
  {
    "id" : "82bd905e-12b4-4801-9ef8-48b975134ed5",
    "prId" : 7825,
    "prUrl" : "https://github.com/flutter/flutter/pull/7825#pullrequestreview-19888329",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b837943-4745-446f-b5c1-2b34bb04f8bf",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this change should be unnecessary. We know that `element` is a `StatelessElement` at the second check.",
        "createdAt" : "2017-02-02T20:28:37Z",
        "updatedAt" : "2017-02-03T03:17:28Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "10e07e21-7150-4500-a4c5-cd626a986cdd",
        "parentId" : "9b837943-4745-446f-b5c1-2b34bb04f8bf",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "oh, I see. this is just optimising away the second check because the VM doesn't trust that `widget` won't change value between the two checks. Fair enough.",
        "createdAt" : "2017-02-02T20:29:00Z",
        "updatedAt" : "2017-02-03T03:17:28Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "fb0b431c-a418-4a05-8ab7-bac41182d8c0",
        "parentId" : "9b837943-4745-446f-b5c1-2b34bb04f8bf",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Exactly",
        "createdAt" : "2017-02-02T20:56:51Z",
        "updatedAt" : "2017-02-03T03:17:28Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f0db74a09b1718c5f5e89c7b606c00e74b396fe",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +30,34 @@    if (element is StatelessElement) {\n      StatelessWidget widget = element.widget;\n      if (widget is NotificationListener<Notification>) {\n        if (widget._dispatch(this, element)) // that function checks the type dynamically\n          return false;"
  },
  {
    "id" : "d8bb9d45-2cab-491f-b419-38b1064a662e",
    "prId" : 27864,
    "prUrl" : "https://github.com/flutter/flutter/pull/27864#pullrequestreview-202963357",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e0d62c3-a7b1-4931-9cfe-b0f6d9f36ad6",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It would be nice to briefly explain why target might be null here.",
        "createdAt" : "2019-02-12T23:31:41Z",
        "updatedAt" : "2019-02-12T23:39:31Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fd79c8705df82d56bca0bf13bc0caf479e08c60",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +59,63 @@    // The `target` may be null if the subtree the notification is supposed to be\n    // dispatched in is in the process of being disposed.\n    target?.visitAncestorElements(visitAncestor);\n  }\n"
  }
]