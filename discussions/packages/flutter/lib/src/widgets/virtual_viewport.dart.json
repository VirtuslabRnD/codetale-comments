[
  {
    "id" : "395a5302-e865-4119-af55-d0b18adaa4e1",
    "prId" : 1098,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "522f1d64-7f51-4fe0-8850-a3d6f68a9f9a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "why the todo rather than doing it?\n",
        "createdAt" : "2016-01-06T23:30:39Z",
        "updatedAt" : "2016-01-06T23:30:39Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "fb9b7330-e9d1-4a61-8cdd-72b4e995b805",
        "parentId" : "522f1d64-7f51-4fe0-8850-a3d6f68a9f9a",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I wanted to do it in a separate patch.  Will do shortly.\n",
        "createdAt" : "2016-01-07T00:02:28Z",
        "updatedAt" : "2016-01-07T00:02:28Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "e64d93a52089d33d7d3cdd5ddd81e79dad588285",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +95,99 @@    assert(startOffsetLimit != null);\n    _updatePaintOffset();\n    // TODO(abarth): Set building: true here.\n    BuildableElement.lockState(_materializeChildren);\n  }"
  },
  {
    "id" : "4ef9d331-465c-4581-8dbb-c6df3dbc8cf8",
    "prId" : 1642,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7d639ee-1b79-4c3a-8b49-8ac4b80e9524",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this is quite the magical mixin.\n",
        "createdAt" : "2016-02-06T04:06:55Z",
        "updatedAt" : "2016-02-06T04:12:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "b33310f2-2144-4b10-9c2d-aa8967387d6f",
        "parentId" : "a7d639ee-1b79-4c3a-8b49-8ac4b80e9524",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, I fought with the type system on how to express this.  I suspect it will need another iteration to get the itemBuilder cache invalidation perfect.  The problem is that it's a two dimensional space (source of child widgets and layout model), which doesn't match up with object-oriented programming very well.\n",
        "createdAt" : "2016-02-06T04:10:09Z",
        "updatedAt" : "2016-02-06T04:12:24Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "a74b7c71-fc09-498f-82ce-c15bea947f01",
        "parentId" : "a7d639ee-1b79-4c3a-8b49-8ac4b80e9524",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Well, I like how this part of it turned out. It's just gonna need a very convincing piece of documentation. :-)\n",
        "createdAt" : "2016-02-06T04:13:39Z",
        "updatedAt" : "2016-02-06T04:13:39Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b8966942426924dde9c049b13f1524109eb88ed",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +195,199 @@typedef List<Widget> ItemListBuilder(BuildContext context, int start, int count);\n\nabstract class VirtualViewportLazyMixin extends VirtualViewport {\n  int get itemCount;\n  ItemListBuilder get itemBuilder;"
  }
]