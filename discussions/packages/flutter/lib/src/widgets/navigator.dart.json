[
  {
    "id" : "26a18a1d-4530-4025-ac39-d0a6d3a1ef84",
    "prId" : 568,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "338bae54-98e7-4594-8c14-155fde9dc5b4",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "push the default up to the constructor argument\n",
        "createdAt" : "2015-11-24T20:23:40Z",
        "updatedAt" : "2015-11-25T00:13:25Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "860547c1d40bf24553d2669d98441ee48ae9413d",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +81,85 @@    config.observer?._navigator = this;\n    push(config.onGenerateRoute(new NamedRouteSettings(\n      name: config.initialRoute ?? Navigator.defaultRouteName\n    )));\n  }"
  },
  {
    "id" : "632ec74c-def2-4f89-8403-59ecbdf9a402",
    "prId" : 1631,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cf6f059-4baa-471a-a79a-7d90bf407735",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Also say \"A route that doesn't exist might be requested by an Android intent.\" or something, in case people wonder how to test this particular feature...\n",
        "createdAt" : "2016-02-05T18:23:43Z",
        "updatedAt" : "2016-02-05T18:55:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a663d2550ff196c43493390ed4632b4e7ff9676f",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +157,161 @@  /// This callback is typically used for error handling. For example, this\n  /// callback might always generate a \"not found\" page that describes the route\n  /// that wasn't found.\n  ///\n  /// Unknown routes can arise either from errors in the app or from external"
  },
  {
    "id" : "4ead790b-e0d9-4965-9669-18690e12b565",
    "prId" : 1631,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26810bab-0c6c-454e-b0a2-3e7f07f6029d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Can you add the following or something like it to each static in this class other than the openTransaction one?:\n\n```\n///\n/// Uses [openTransaction()]. Only one transaction will be executed per frame.\n```\n",
        "createdAt" : "2016-02-05T18:25:48Z",
        "updatedAt" : "2016-02-05T18:55:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a663d2550ff196c43493390ed4632b4e7ff9676f",
    "line" : 190,
    "diffHunk" : "@@ -1,1 +252,256 @@  }\n\n  /// Calls callback immediately to create a navigator transaction.\n  ///\n  /// To avoid race conditions, a navigator will execute at most one operation"
  },
  {
    "id" : "2f779cb1-bb09-4e82-9bde-077892debaa0",
    "prId" : 4769,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edef7dcb-814f-4e61-b842-0d711f3b81cc",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This will also cancel gesture recognisers dealing with those pointers outside the navigator.\n",
        "createdAt" : "2016-06-27T19:36:29Z",
        "updatedAt" : "2016-06-27T19:57:12Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "fd18705e-15e1-40d2-8ca4-a7104fcf1af5",
        "parentId" : "edef7dcb-814f-4e61-b842-0d711f3b81cc",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "(add this to our \"we still need to fix this for real\" bug)\n",
        "createdAt" : "2016-06-27T19:39:15Z",
        "updatedAt" : "2016-06-27T19:57:12Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f912298e96e027e1923428e4a6cdafc8e864cc9f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +495,499 @@    absorber?.absorbing = true;\n    for (int pointer in _activePointers.toList())\n      WidgetsBinding.instance.cancelPointer(pointer);\n  }\n"
  }
]