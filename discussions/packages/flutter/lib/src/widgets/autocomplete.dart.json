[
  {
    "id" : "4fbe70f5-8724-48ae-8781-5184fc1d8666",
    "prId" : 62927,
    "prUrl" : "https://github.com/flutter/flutter/pull/62927#pullrequestreview-506961781",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b797df64-8979-4c01-95fd-d9ed786979dd",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It looks like the other callbacks could have been defined with static functions if _kUserOptions was static (because why note). Might be best to use one approach or the other.  If you used all static functions then the optionsBuilder could use _displayStringForOption.",
        "createdAt" : "2020-10-12T18:08:41Z",
        "updatedAt" : "2020-10-26T20:34:27Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "7048f957-22ba-4b53-a6c9-8f65406d766b",
        "parentId" : "b797df64-8979-4c01-95fd-d9ed786979dd",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Sounds good, I'll make it static.\r\n\r\nIn this example I don't want to use _displayStringForOption in optionsBuilder because I want to show how to search based on email and name while only displaying the name.  I'll add a comment to make that clear.",
        "createdAt" : "2020-10-12T22:49:27Z",
        "updatedAt" : "2020-10-26T20:34:27Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ea01f052de6095f293955eb0773251b6b2ef263",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +191,195 @@///   ];\n///\n///   static String _displayStringForOption(User option) => option.name;\n///\n///   @override"
  },
  {
    "id" : "da730ce5-679f-42a9-927c-919e502fd976",
    "prId" : 62927,
    "prUrl" : "https://github.com/flutter/flutter/pull/62927#pullrequestreview-506964188",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "015dec87-5807-4c0b-bd94-b42077b89e00",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I wish large examples like this were references to repos that contained tests. \r\n\r\nCC @gspencergoog ",
        "createdAt" : "2020-10-12T18:16:22Z",
        "updatedAt" : "2020-10-26T20:34:27Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "9ac3da84-cb3c-401a-8d70-c27edbe1f1ed",
        "parentId" : "015dec87-5807-4c0b-bd94-b42077b89e00",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes, that would be nice. I believe this is already filed (by you) as https://github.com/flutter/flutter/issues/56163",
        "createdAt" : "2020-10-12T20:41:09Z",
        "updatedAt" : "2020-10-26T20:34:27Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "f0c8c44f-c968-428a-9952-0953a00ef427",
        "parentId" : "015dec87-5807-4c0b-bd94-b42077b89e00",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Agreed!  In fact, I'm already maintaining these examples (and a few others) in an [external repo](https://github.com/justinmc/flutter-autocomplete-examples).  It's much easier for me to run them there and then paste the relevant code here.  Otherwise it was too hard to make sure they still work after changes.",
        "createdAt" : "2020-10-12T22:55:11Z",
        "updatedAt" : "2020-10-26T20:34:27Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ea01f052de6095f293955eb0773251b6b2ef263",
    "line" : 263,
    "diffHunk" : "@@ -1,1 +261,265 @@/// }\n///\n/// class AutocompleteFormExample extends State<AutocompleteFormExamplePage> {\n///   final _formKey = GlobalKey<FormState>();\n///   final TextEditingController _textEditingController = TextEditingController();"
  },
  {
    "id" : "745f8eb1-52e3-4216-88a6-693907ad20de",
    "prId" : 62927,
    "prUrl" : "https://github.com/flutter/flutter/pull/62927#pullrequestreview-514198325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a54cc9d-41ce-40b1-8611-02ed9b4e5137",
        "parentId" : null,
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "When should the developer call `_select` with null?",
        "createdAt" : "2020-10-21T01:32:50Z",
        "updatedAt" : "2020-10-26T20:34:27Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "533446ed-bb8f-4f40-9085-82b1a71483d0",
        "parentId" : "5a54cc9d-41ce-40b1-8611-02ed9b4e5137",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "Also does this mean we want the developer to implement `==` and `hashCode`, if they're generating the list of options on the fly?",
        "createdAt" : "2020-10-21T01:40:55Z",
        "updatedAt" : "2020-10-26T20:34:27Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "c022a373-5e02-40dc-813a-8c040740ca47",
        "parentId" : "5a54cc9d-41ce-40b1-8611-02ed9b4e5137",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Calling _select with null: Good point, they shouldn't.  I will make it non-nullable. If the user wants to clear the selection, they can just clear or change the field.\r\n\r\nAbout comparison: Yes, I will document that.",
        "createdAt" : "2020-10-21T21:26:10Z",
        "updatedAt" : "2020-10-26T20:34:27Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ea01f052de6095f293955eb0773251b6b2ef263",
    "line" : 525,
    "diffHunk" : "@@ -1,1 +523,527 @@  // Select the given option and update the widget.\n  void _select(T nextSelection) {\n    if (nextSelection == _selection) {\n      return;\n    }"
  },
  {
    "id" : "073c1241-52ea-4482-a0fb-2b8d2513b97b",
    "prId" : 62927,
    "prUrl" : "https://github.com/flutter/flutter/pull/62927#pullrequestreview-515209966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65cc1e55-ab29-430f-aa4e-c7c18af94cd9",
        "parentId" : null,
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "Should we let the user bring their own controller?",
        "createdAt" : "2020-10-23T00:14:32Z",
        "updatedAt" : "2020-10-26T20:34:27Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "5cea7fb0-84fd-4cee-8f13-f2cf5af33295",
        "parentId" : "65cc1e55-ab29-430f-aa4e-c7c18af94cd9",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Yes, that is my next PR!  I tried to simplify it by keeping it private for now.  It will be necessary to use your own controller if you want to do things like split the field and results into different parts of the widget tree.  I'll be tagging you for review soon :)",
        "createdAt" : "2020-10-23T00:43:39Z",
        "updatedAt" : "2020-10-26T20:34:27Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ea01f052de6095f293955eb0773251b6b2ef263",
    "line" : 484,
    "diffHunk" : "@@ -1,1 +482,486 @@  final GlobalKey _fieldKey = GlobalKey();\n  final LayerLink _optionsLayerLink = LayerLink();\n  final TextEditingController _textEditingController = TextEditingController();\n  final FocusNode _focusNode = FocusNode();\n  Iterable<T> _options = Iterable<T>.empty();"
  },
  {
    "id" : "14f7ad1b-6600-44a1-b9a0-89a85dbe160d",
    "prId" : 72553,
    "prUrl" : "https://github.com/flutter/flutter/pull/72553#pullrequestreview-562049078",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34867789-ad98-4825-a8e0-7d789c3bd46c",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Doesn't the assert in line 438 check for the same thing by ensuring that focusNode and textEditing controller must not be null if fieldViewBuilder is null?",
        "createdAt" : "2021-01-05T15:52:24Z",
        "updatedAt" : "2021-01-05T18:58:21Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "71f26107-bd13-4f13-8cfd-5c6304034020",
        "parentId" : "34867789-ad98-4825-a8e0-7d789c3bd46c",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Also, what happens if fieldViewBuilder was defined, but so was focusNode and textEditingController? Would this cause any weirdness?",
        "createdAt" : "2021-01-05T15:57:54Z",
        "updatedAt" : "2021-01-05T18:58:21Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "67993ce0-cd84-4fb7-a2aa-3850cf34277d",
        "parentId" : "34867789-ad98-4825-a8e0-7d789c3bd46c",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "I think that passing fieldViewBuilder, focusNode, and textEditingController is a valid use case, like if you want to listen to them or do something special to them above the RawAutocomplete.  See the example below.\r\n\r\nThis line 445 just makes sure that you don't pass one without the other.  The assert on line 438 doesn't cover that case.  I suppose RawAutocomplete could create the one that you didn't pass in for you, but it seems unusual that you'd want to do that.\r\n\r\n```dart\r\nlate TextEditingController controller;\r\nlate FocusNode node;\r\n\r\nvoid initState() {\r\n  super.initState();\r\n  node = FocusNode();\r\n  node.addListener(() {\r\n    // ... Do some thing special with the FocusNode.\r\n  });\r\n  controller = TextEditingController();\r\n  controller.addListener(() {\r\n    // ... Do some thing special with the controller.\r\n  });\r\n}\r\n\r\nWidget build(BuildContext context) {\r\n  return RawAutocomplete(\r\n    textEditingController: controller,\r\n    focusNode: node,\r\n    fieldViewBuilder: (BuildContext context, TextEditingController textEditingController, FocusNode focusNode, VoidCallback onFieldSubmitted) {\r\n     // node and controller are equivalent to focusNode and textEditingController here.\r\n      return TextField(\r\n        controller: textEditingController,\r\n        focusNode: focusNode,\r\n      );\r\n    }\r\n  );\r\n}\r\n```",
        "createdAt" : "2021-01-05T18:57:14Z",
        "updatedAt" : "2021-01-05T18:58:21Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "152c89684f046d6473d34e2908daa6e40cd0f24b",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +443,447 @@       assert(optionsBuilder != null),\n       assert(optionsViewBuilder != null),\n       assert((focusNode == null) == (textEditingController == null)),\n       super(key: key);\n"
  }
]