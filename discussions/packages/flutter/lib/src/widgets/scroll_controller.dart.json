[
  {
    "id" : "311b56d4-151d-41da-abb8-fa565570c66f",
    "prId" : 8506,
    "prUrl" : "https://github.com/flutter/flutter/pull/8506#pullrequestreview-24819791",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31b7915a-6778-4d75-9d04-9a78fd887159",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "final",
        "createdAt" : "2017-03-02T02:51:46Z",
        "updatedAt" : "2017-03-02T02:51:46Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "01c19ec2-859b-424d-ade1-15efa3fa889a",
        "parentId" : "31b7915a-6778-4d75-9d04-9a78fd887159",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Done.",
        "createdAt" : "2017-03-02T19:22:04Z",
        "updatedAt" : "2017-03-02T19:22:04Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d5b3b6ed30b5b1bcecc40b95fd2fd25f62b6206",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +71,75 @@  }) {\n    assert(_positions.isNotEmpty, 'ScrollController not attached to any scroll views.');\n    List<Future<Null>> animations = new List<Future<Null>>(_positions.length);\n    for (int i = 0; i < _positions.length; i++)\n      animations[i] = _positions[i].animateTo(offset, duration: duration, curve: curve);"
  },
  {
    "id" : "cd9cd52d-f29b-4532-9fce-c5e9f167cf39",
    "prId" : 8506,
    "prUrl" : "https://github.com/flutter/flutter/pull/8506#pullrequestreview-24819803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5994d9da-271c-4c2c-a122-807accb32e12",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "`s/p/position/`  (please use complete words in variable names)\r\n\r\nAlso, `jumpTo` generates scroll notifications synchronously, which could run arbitrary code that mutates `_positions` during this loop.  To avoid any shenanigans, I'd recommend using `new List<ScrollPosition>.from(_positions)` to make a copy of the list for the iteration.",
        "createdAt" : "2017-03-02T02:53:51Z",
        "updatedAt" : "2017-03-02T02:53:51Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "5752d4c4-f507-4133-907e-8ff4f3538ed4",
        "parentId" : "5994d9da-271c-4c2c-a122-807accb32e12",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Ooh - devious! Thanks for spotting this. Done.",
        "createdAt" : "2017-03-02T19:22:06Z",
        "updatedAt" : "2017-03-02T19:22:06Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d5b3b6ed30b5b1bcecc40b95fd2fd25f62b6206",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +91,95 @@  void jumpTo(double value) {\n    assert(_positions.isNotEmpty, 'ScrollController not attached to any scroll views.');\n    for (ScrollPosition p in _positions)\n      p.jumpTo(value);\n  }"
  },
  {
    "id" : "db39278e-dd90-4079-bdfe-bde1deee8ee8",
    "prId" : 8768,
    "prUrl" : "https://github.com/flutter/flutter/pull/8768#pullrequestreview-26889669",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1444e4ef-9069-414d-bcf1-e7e749bf9d8f",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "also do this in dispose().\r\n\r\n...and oy, vey, we may have to ensure anyone who creates a ScrollController disposes it...",
        "createdAt" : "2017-03-14T18:06:06Z",
        "updatedAt" : "2017-03-14T18:22:33Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3f402b53-ce15-4bcf-8905-091dd381d8bf",
        "parentId" : "1444e4ef-9069-414d-bcf1-e7e749bf9d8f",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "You don't have to dispose it.  The scroll positions will detach themselves when they go away.  Only people who listen need to either unlisten or dispose.",
        "createdAt" : "2017-03-14T18:11:52Z",
        "updatedAt" : "2017-03-14T18:22:33Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "89c39e553a591797c1002f50d4340062efcde2a6",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +112,116 @@  void detach(ScrollPosition position) {\n    assert(_positions.contains(position));\n    position.removeListener(notifyListeners);\n    _positions.remove(position);\n  }"
  }
]