[
  {
    "id" : "26c6ab79-1bc8-4d81-b10d-9069611a5fdc",
    "prId" : 13290,
    "prUrl" : "https://github.com/flutter/flutter/pull/13290#pullrequestreview-82313335",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d503eb0-98e8-41f0-be7c-28dc247220bd",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "IMHO we really shouldn't make the original _ScrollbarPainter class public. It's a crazy class with crazy semantics (e.g. it's a custom painter but you have to dispose it).",
        "createdAt" : "2017-12-08T23:46:01Z",
        "updatedAt" : "2017-12-21T21:49:18Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "4c5bb9f1-8dbb-4574-b392-d9f68cf00eea",
        "parentId" : "3d503eb0-98e8-41f0-be7c-28dc247220bd",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "If I left 2 implementations in 2 separate files, it seems to alleviate your concern here and on the next comment. Do you prefer that approach? A bit copy paste-y I initially thought.",
        "createdAt" : "2017-12-09T02:15:56Z",
        "updatedAt" : "2017-12-21T21:49:18Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc043a946f2c6edd5a5e21c1de6ae0ea74ec0b6a",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@///  * [CupertinoScrollbar] for a widget showing a scrollbar around a\n///    [Scrollable] in the iOS style.\nclass ScrollbarPainter extends ChangeNotifier implements CustomPainter {\n  /// Creates a scrollbar with customizations given by construction arguments.\n  ScrollbarPainter({"
  },
  {
    "id" : "00faf3bb-014f-4508-8a3e-22c0d833b82e",
    "prId" : 13290,
    "prUrl" : "https://github.com/flutter/flutter/pull/13290#pullrequestreview-85186535",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cd24e72-d1cf-452d-927e-0e9e85bf182d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "These docs should talk about update() and how to use it",
        "createdAt" : "2017-12-21T20:50:41Z",
        "updatedAt" : "2017-12-21T21:49:18Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "932cb649-1cbb-4808-9756-e505f0952595",
        "parentId" : "3cd24e72-d1cf-452d-927e-0e9e85bf182d",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Done",
        "createdAt" : "2017-12-21T21:24:40Z",
        "updatedAt" : "2017-12-21T21:49:18Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc043a946f2c6edd5a5e21c1de6ae0ea74ec0b6a",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@///  * the scroll position changes; and\n///  * when the scrollbar fades away.\n///\n/// Calling [update] with the new [ScrollMetrics] will repaint the new scrollbar\n/// position."
  },
  {
    "id" : "5bcabf94-b987-46c4-b418-7538f5e2d283",
    "prId" : 13290,
    "prUrl" : "https://github.com/flutter/flutter/pull/13290#pullrequestreview-85191972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e58b1a8-a6a5-46bf-88b4-0d5797b90ed8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "when do you removeListener?",
        "createdAt" : "2017-12-21T20:51:14Z",
        "updatedAt" : "2017-12-21T21:49:18Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "10919300-f99a-4742-8988-f3d031f5669b",
        "parentId" : "0e58b1a8-a6a5-46bf-88b4-0d5797b90ed8",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I think you need to override dispose() and call removeListener there.\r\n\r\nAlso, the docs need to talk about how it's important to call dispose() on this object when you're done with it.",
        "createdAt" : "2017-12-21T20:51:47Z",
        "updatedAt" : "2017-12-21T21:49:18Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "350c47cb-48fe-4b04-bd3e-4299b41e6eaa",
        "parentId" : "0e58b1a8-a6a5-46bf-88b4-0d5797b90ed8",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Added doc about needing to dispose.\r\nChangeNotifier.dispose already more or less does removeListener. ",
        "createdAt" : "2017-12-21T21:24:37Z",
        "updatedAt" : "2017-12-21T21:49:18Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "b441c94b-3720-4968-9539-a553b11c7fa4",
        "parentId" : "0e58b1a8-a6a5-46bf-88b4-0d5797b90ed8",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "How does ChangeNotifier know about fadeoutOpacityAnimation?",
        "createdAt" : "2017-12-21T21:42:46Z",
        "updatedAt" : "2017-12-21T21:49:18Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "cc646896-1e53-4689-bbf9-3b5eb1f3fa5b",
        "parentId" : "0e58b1a8-a6a5-46bf-88b4-0d5797b90ed8",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "ah you're right. Sorry, I mixed the 2 layers of listeners up. ",
        "createdAt" : "2017-12-21T21:49:29Z",
        "updatedAt" : "2017-12-21T21:49:29Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc043a946f2c6edd5a5e21c1de6ae0ea74ec0b6a",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +55,59 @@       assert(crossAxisMargin != null),\n       assert(minLength != null) {\n    fadeoutOpacityAnimation.addListener(notifyListeners);\n  }\n"
  }
]