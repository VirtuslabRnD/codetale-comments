[
  {
    "id" : "3d6a098b-a04e-40ee-a8ed-5d4b3e842c44",
    "prId" : 832,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "032173d9-a50b-4734-86c9-125eaaf58bb3",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "s/we only implement it/it is only implemented/\n",
        "createdAt" : "2015-12-09T17:20:20Z",
        "updatedAt" : "2015-12-09T17:20:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "df672a6e-c63e-4573-b0ae-01b72d36335f",
        "parentId" : "032173d9-a50b-4734-86c9-125eaaf58bb3",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Done (slightly differently)\n",
        "createdAt" : "2015-12-09T17:27:47Z",
        "updatedAt" : "2015-12-09T17:27:47Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "e55858411fae9f7de2efc75400c6e706dddd5b07",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +112,116 @@  ///\n  /// This is an O(N) algorithm, and should not be necessary except for debug asserts.\n  /// To avoid people depending on it, we only implement it in checked mode.\n  bool debugIsVisible(OverlayEntry entry) {\n    bool result = false;"
  },
  {
    "id" : "9d661f66-0f0b-43f3-af2c-24f00d51f1c9",
    "prId" : 895,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4569997-b5c0-46cc-92ba-8c6c29f5b71a",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Can we use StatefulBuilder here?\n",
        "createdAt" : "2015-12-12T05:40:17Z",
        "updatedAt" : "2015-12-12T05:40:17Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "c0268f61-277e-40fb-bbca-7ad4e38bded7",
        "parentId" : "f4569997-b5c0-46cc-92ba-8c6c29f5b71a",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I considered it, but I couldn't figure out a clean way of getting the setState out of it. I mean, you could capture it, but that seems like an ugly precedent to set. This seemed like a cleaner solution.\n",
        "createdAt" : "2015-12-12T05:55:08Z",
        "updatedAt" : "2015-12-12T05:55:08Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "76319df5dfc322940d6d4488ce7751d3ae1a9a80",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +50,54 @@}\n\nclass _OverlayEntry extends StatefulComponent {\n  _OverlayEntry(OverlayEntry entry) : entry = entry, super(key: entry._key);\n  final OverlayEntry entry;"
  },
  {
    "id" : "2724b1b6-83f7-4e31-abba-d7d24ba36690",
    "prId" : 3216,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3439142e-440c-4052-91c8-0fba38cd2d96",
        "parentId" : null,
        "authorId" : "4e76ff9c-c2fa-4e9c-86e7-21e393fec217",
        "body" : "suggest: s/A place/An entry/\n",
        "createdAt" : "2016-04-08T18:07:31Z",
        "updatedAt" : "2016-04-08T19:11:28Z",
        "lastEditedBy" : "4e76ff9c-c2fa-4e9c-86e7-21e393fec217",
        "tags" : [
        ]
      },
      {
        "id" : "60978d2a-9aec-438f-8d11-e22b61d8d426",
        "parentId" : "3439142e-440c-4052-91c8-0fba38cd2d96",
        "authorId" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "body" : "I think \"place\" is better here because it suggests a physical location.  \"Entry\" would just duplicate the class name :)\n",
        "createdAt" : "2016-04-08T18:08:49Z",
        "updatedAt" : "2016-04-08T19:11:28Z",
        "lastEditedBy" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "tags" : [
        ]
      },
      {
        "id" : "aa34f6c3-2556-4cb9-9f91-a49d9f39e846",
        "parentId" : "3439142e-440c-4052-91c8-0fba38cd2d96",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, we've been trying to avoid re-using words in the class names even if it makes the docs slightly awkward to read.  At least it gives the reader another chance to guess at what we mean.\n",
        "createdAt" : "2016-04-08T18:10:12Z",
        "updatedAt" : "2016-04-08T19:11:28Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "9be383289c6eef57c15a709bf1697b894ff1d28f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +6,10 @@import 'framework.dart';\n\n/// A place in an [Overlay] that can contain a widget.\n///\n/// Overlay entries are inserted into an [Overlay] using the"
  },
  {
    "id" : "e047aa7e-b8e2-4c39-a3e4-b8c16391bc70",
    "prId" : 3216,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21f4359b-73d2-4e48-87e8-9cc8fffa294a",
        "parentId" : null,
        "authorId" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "body" : "Suggest mentioning Stack here, since Overlays are kind of a syntactic sugar on top of Stack.\n\nEdit: Nevermind, I see you mention Stack later on.\n",
        "createdAt" : "2016-04-08T18:09:53Z",
        "updatedAt" : "2016-04-08T19:11:28Z",
        "lastEditedBy" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "tags" : [
        ]
      },
      {
        "id" : "4822575d-808c-4a04-8720-0c48e823e534",
        "parentId" : "21f4359b-73d2-4e48-87e8-9cc8fffa294a",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I'll mention it here because it's common to use a `Positioned` as the root widget of an entry.  From these docs, it's not obvious that works.\n",
        "createdAt" : "2016-04-08T18:11:41Z",
        "updatedAt" : "2016-04-08T19:11:28Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "9be383289c6eef57c15a709bf1697b894ff1d28f",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +35,39 @@///  * [OverlayState]\n///  * [WidgetsApp]\n///  * [MaterialApp]\nclass OverlayEntry {\n  /// Creates an overlay entry."
  },
  {
    "id" : "5f7744cd-f85b-48db-928a-f89dc6ab0068",
    "prId" : 5624,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8c3d3fc-0a50-4e7f-979b-a3b020503df9",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This would probably be a good place to provide a use case.\n",
        "createdAt" : "2016-08-26T23:25:37Z",
        "updatedAt" : "2016-08-29T17:32:02Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "84316c7d-0b2d-48ae-b36f-5087d0fc683d",
        "parentId" : "a8c3d3fc-0a50-4e7f-979b-a3b020503df9",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "done\n",
        "createdAt" : "2016-08-29T17:31:40Z",
        "updatedAt" : "2016-08-29T17:32:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "79e11e2a8e9790e2ef2da640a10b742e39c0d2fe",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +97,101 @@  /// to true. This is more expensive, so should be done with care. In particular,\n  /// if widgets in an overlay entry with [maintainState] set to true repeatedly\n  /// call [setState], the user's battery will be drained unnecessarily.\n  ///\n  /// This is used by the [Navigator] and [Route] objects to ensure that routes"
  },
  {
    "id" : "e952171b-098b-415b-bc84-0d2cee3ed214",
    "prId" : 5902,
    "prUrl" : "https://github.com/flutter/flutter/pull/5902#pullrequestreview-1237963",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbd84b57-53d1-441a-9dd5-5c2f5d395c6a",
        "parentId" : null,
        "authorId" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "body" : "'few' rather than 'many'? ðŸ˜„ \n",
        "createdAt" : "2016-09-20T23:02:21Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "tags" : [
        ]
      },
      {
        "id" : "2e8ba3bb-6153-481a-a78c-20c1ec8de7e8",
        "parentId" : "cbd84b57-53d1-441a-9dd5-5c2f5d395c6a",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "16 milliseconds is many milliseconds. :-)\n",
        "createdAt" : "2016-09-22T21:43:29Z",
        "updatedAt" : "2016-09-26T17:19:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "57b9f88bf58da56769af22de167f61deb943ec3c",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +129,133 @@  /// done synchronously. This means that it is safe to call during builds, but\n  /// also that if you do call this during a build, the UI will not update until\n  /// the next frame (i.e. many milliseconds later).\n  void remove() {\n    assert(_overlay != null);"
  },
  {
    "id" : "8b2f4fab-0104-4f8c-ad7c-06181d1a3c58",
    "prId" : 28747,
    "prUrl" : "https://github.com/flutter/flutter/pull/28747#pullrequestreview-210874987",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07527d93-2e62-42ff-8313-8c5d14791af5",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "It looks like only one is allowed - can we clarify that in the docs?",
        "createdAt" : "2019-03-05T19:24:46Z",
        "updatedAt" : "2019-03-11T21:56:40Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "ed4d4d62-2b8b-4189-830d-1e48fd6621cc",
        "parentId" : "07527d93-2e62-42ff-8313-8c5d14791af5",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Ah, I see, it's below.  Sorry.",
        "createdAt" : "2019-03-05T19:26:37Z",
        "updatedAt" : "2019-03-11T21:56:40Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb6c22586b4feb9a547165ee380d2349fb828748",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +284,288 @@  /// Insert the given entry into the overlay.\n  ///\n  /// If `below` is non-null, the entry is inserted just below `below`.\n  /// If `above` is non-null, the entry is inserted just above `above`.\n  /// Otherwise, the entry is inserted on top."
  },
  {
    "id" : "f5a4d267-25e9-417c-a798-11e223e77a51",
    "prId" : 28747,
    "prUrl" : "https://github.com/flutter/flutter/pull/28747#pullrequestreview-210874768",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12e37346-b095-4ea7-b112-ee5596ec68a4",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "ditto",
        "createdAt" : "2019-03-05T19:26:08Z",
        "updatedAt" : "2019-03-11T21:56:40Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb6c22586b4feb9a547165ee380d2349fb828748",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +312,316 @@  /// Insert all the entries in the given iterable.\n  ///\n  /// If `below` is non-null, the entries are inserted just below `below`.\n  /// If `above` is non-null, the entries are inserted just above `above`.\n  /// Otherwise, the entries are inserted on top."
  },
  {
    "id" : "dce9ea77-fe9d-4b6c-acb5-c637f9e0a6d1",
    "prId" : 28747,
    "prUrl" : "https://github.com/flutter/flutter/pull/28747#pullrequestreview-213106402",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "326aaeb8-266c-45fe-ae86-c11341f03074",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "What would you think about instead creating a new method called `insertBelow`?  I'm wondering if it will be confusing to developers using this in an IDE who may think they have to specify both optional parameters, or who will try to specify both and not realize their error until runtime.",
        "createdAt" : "2019-03-05T19:27:54Z",
        "updatedAt" : "2019-03-11T21:56:40Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "19530195-74f5-4ccb-9303-62e715d282a9",
        "parentId" : "326aaeb8-266c-45fe-ae86-c11341f03074",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "We use that pattern in other places of the framework as well, e.g. https://github.com/flutter/flutter/blob/387f885481cd8441237680de0cfcd0802c0af48c/packages/flutter/lib/src/painting/text_style.dart#L328-L329.\r\n\r\nAnd I think it's actually a nice and concise way to specify an API without convoluting the name space. ",
        "createdAt" : "2019-03-05T20:28:31Z",
        "updatedAt" : "2019-03-11T21:56:40Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "76e4b44e-5706-4f08-bc96-e44b0ce4dde2",
        "parentId" : "326aaeb8-266c-45fe-ae86-c11341f03074",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "In that case, can we add messages to the new asserts?",
        "createdAt" : "2019-03-05T20:52:54Z",
        "updatedAt" : "2019-03-11T21:56:40Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "7c7f1478-b552-46a9-a168-0bbd395ae5ac",
        "parentId" : "326aaeb8-266c-45fe-ae86-c11341f03074",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Done. PTAL",
        "createdAt" : "2019-03-11T21:56:54Z",
        "updatedAt" : "2019-03-11T21:56:54Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb6c22586b4feb9a547165ee380d2349fb828748",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +288,292 @@  /// Otherwise, the entry is inserted on top.\n  ///\n  /// It is an error to specify both `above` and `below`.\n  void insert(OverlayEntry entry, { OverlayEntry below, OverlayEntry above }) {\n    assert("
  },
  {
    "id" : "08d45c2d-436e-47e8-af5a-30c0b33ec764",
    "prId" : 28747,
    "prUrl" : "https://github.com/flutter/flutter/pull/28747#pullrequestreview-210876844",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f290e91-8a6e-42a4-80da-d0d4ed6dc21c",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Same question - should this really be two methods, one called something like `rearrangeAbove` and the other `rearrangeBelow`?",
        "createdAt" : "2019-03-05T19:30:13Z",
        "updatedAt" : "2019-03-11T21:56:40Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "b52b1c69-dd98-48da-bd62-9ac288fa6038",
        "parentId" : "0f290e91-8a6e-42a4-80da-d0d4ed6dc21c",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Or maybe just `rearrange` and `rearrangeBelow` for consistency with the other part of the API",
        "createdAt" : "2019-03-05T19:30:30Z",
        "updatedAt" : "2019-03-11T21:56:40Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb6c22586b4feb9a547165ee380d2349fb828748",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +365,369 @@  /// below.\n  ///\n  /// It is an error to specify both `above` and `below`.\n  void rearrange(Iterable<OverlayEntry> newEntries, { OverlayEntry below, OverlayEntry above }) {\n    final List<OverlayEntry> newEntriesList = newEntries is List<OverlayEntry> ? newEntries : newEntries.toList(growable: false);"
  }
]