[
  {
    "id" : "340f401b-7f5c-4c8f-a68c-24b8e4987be8",
    "prId" : 19739,
    "prUrl" : "https://github.com/flutter/flutter/pull/19739#pullrequestreview-150711858",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "339a2fd1-8043-4a89-9fee-6e63f94c1a5d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "wouldn't this only return the \"aspect\" subpart of MyModel, typically?",
        "createdAt" : "2018-08-27T20:03:42Z",
        "updatedAt" : "2018-08-30T23:14:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c90fd983-5182-45c0-8ec2-60a42ea4e8c5",
        "parentId" : "339a2fd1-8043-4a89-9fee-6e63f94c1a5d",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Yes, that would probably work well. Although in the interest of keeping this example as simple as possible it might be worth leaving that out.\r\n\r\nOnce we've accumulated some experience using this class beyond tests, this example should merit a revision.\r\n\r\n",
        "createdAt" : "2018-08-29T19:08:34Z",
        "updatedAt" : "2018-08-30T23:14:31Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc5cf5decc5f9cf53f554cf29b8738910e61e6c1",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@///   // ...\n///   static MyModel of(BuildContext context, String aspect) {\n///     return InheritedModel.inheritFrom<MyModel>(context, aspect: aspect);\n///   }\n/// }"
  },
  {
    "id" : "2e328810-b0fd-4831-83fb-c3fc7017aa46",
    "prId" : 19739,
    "prUrl" : "https://github.com/flutter/flutter/pull/19739#pullrequestreview-151194943",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1b4c468-dbee-4895-8a37-dd423a979a60",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "currently the code above is not analyzed, because it's not in a \"## Sample code\" section. Dunno if you are concerned about that or not. (The advantage of having it in such a section is it'll get updated when we do things like introduce new lints, e.g. the upcoming \"remove new\" lint.)",
        "createdAt" : "2018-08-30T21:46:42Z",
        "updatedAt" : "2018-08-30T23:14:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc5cf5decc5f9cf53f554cf29b8738910e61e6c1",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +76,80 @@/// }\n/// ```\n///\n/// In the previous example the dependencies checked by\n/// [updateShouldNotifyDependent] are just the aspect strings passed to"
  },
  {
    "id" : "d9ac7bd5-5979-48a5-a914-4326dfcdef10",
    "prId" : 23759,
    "prUrl" : "https://github.com/flutter/flutter/pull/23759#pullrequestreview-174163093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0448789e-5992-471f-a550-320e607045e2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "please add a test for this, and update the documentation accordingly. (maybe this belongs in a separate pr?)",
        "createdAt" : "2018-11-12T23:41:54Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e329ba95-b88b-4483-af79-e0b43a58cc8f",
        "parentId" : "0448789e-5992-471f-a550-320e607045e2",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I actually ended up not using it. But we should fix this anyway (for consistency with InheritedWidget). Added a test.",
        "createdAt" : "2018-11-13T01:39:39Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0cc8fc1fd15cf27ba5f1c0431547b433e6c9112",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +165,169 @@    if (models.isEmpty) {\n      return null;\n    }\n\n    final InheritedElement lastModel = models.last;"
  }
]