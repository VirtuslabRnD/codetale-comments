[
  {
    "id" : "38de9244-a12e-4490-b554-1e638ed8bf0f",
    "prId" : 832,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8056d150-faaa-4189-89e0-4f0775ae4c16",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "grammar, trailing period\n",
        "createdAt" : "2015-12-09T17:20:40Z",
        "updatedAt" : "2015-12-09T17:20:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "8eeacfec-8626-4511-90c9-94da3d0cee03",
        "parentId" : "8056d150-faaa-4189-89e0-4f0775ae4c16",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Done.\n",
        "createdAt" : "2015-12-09T17:27:53Z",
        "updatedAt" : "2015-12-09T17:27:53Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "e55858411fae9f7de2efc75400c6e706dddd5b07",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +29,33 @@  }\n\n  /// Subclasses can override this method to customize way heroes are inserted\n  void insertHeroOverlayEntry(OverlayEntry entry, Object tag, OverlayState overlay) {\n    overlay.insert(entry);"
  },
  {
    "id" : "ee99ab1f-8620-4e5f-9a67-758eac91bbd9",
    "prId" : 58511,
    "prUrl" : "https://github.com/flutter/flutter/pull/58511#pullrequestreview-431021113",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2296627c-3406-481c-8962-b74a0df4a9c9",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Why the indirection via _PageBasedPageRouteBuilder? Could it just return a PageRouteBuilder?",
        "createdAt" : "2020-06-11T18:11:59Z",
        "updatedAt" : "2020-06-25T18:55:48Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "7c7fab6c-9c33-4612-ac74-d8d50b344f7b",
        "parentId" : "2296627c-3406-481c-8962-b74a0df4a9c9",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "PageRouteBuilder takes in builder methods and they cannot be changed through out the route lifecycle. Let's say someone update the page with same key but different builder, the route underneath will update its settings to be the new page, but it cannot update its builders to be same as the page's builders.\r\n\r\nThe _PageBasedPageRouteBuilder that builds its transition through the pages builder. That means the builders it use will be up to date when page updates. The same philosophy applies to MaterialPage and CupertinoPage\r\n\r\n",
        "createdAt" : "2020-06-11T18:24:45Z",
        "updatedAt" : "2020-06-25T18:55:48Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "f3753124-f466-4f54-997d-62a404327e96",
        "parentId" : "2296627c-3406-481c-8962-b74a0df4a9c9",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Does that actually work, though? From what I can tell, the builder is called from `Route.buildPage`, which is only called when the route first builds (as documented). In fact, I believe its result is actually cached somewhere and reused for all subsequent builds of the route. So even if the builder changes, I would expect it to never take affect.\r\n\r\nThe tests in this PR seem to indicate that it does take effect, though. How are we clearing the cached page?",
        "createdAt" : "2020-06-11T18:43:33Z",
        "updatedAt" : "2020-06-25T18:55:48Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "4e6d7b97-63da-498e-86a3-885193b131c8",
        "parentId" : "2296627c-3406-481c-8962-b74a0df4a9c9",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "I didn't see where we cache it in our code, maybe the document is outdated? Even if the caching is true, using _PageBasedPageRouteBuilder will just make the TransitionPage.pageBuilder as responsive as thePageRouteBuilder.pageBuilder but not less.",
        "createdAt" : "2020-06-11T18:52:20Z",
        "updatedAt" : "2020-06-25T18:55:48Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "e5d9b731-5b6e-439e-ba96-d61eaabe3fe6",
        "parentId" : "2296627c-3406-481c-8962-b74a0df4a9c9",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This is the cache I was talking about:\r\n\r\nhttps://github.com/flutter/flutter/blob/4d7525f05c05a6df0b29396bc9eb78c3bf1e9f89/packages/flutter/lib/src/widgets/routes.dart#L699-L703",
        "createdAt" : "2020-06-11T19:00:18Z",
        "updatedAt" : "2020-06-25T18:55:48Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "80d065e4-bcfa-448a-971f-af01675e2e78",
        "parentId" : "2296627c-3406-481c-8962-b74a0df4a9c9",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "The pages update in navigator will called changedExternalState which clear the cache",
        "createdAt" : "2020-06-11T19:10:09Z",
        "updatedAt" : "2020-06-25T18:55:48Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "934c3023-f707-48b2-97df-06dd0a3eaf8a",
        "parentId" : "2296627c-3406-481c-8962-b74a0df4a9c9",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "This is not good, it seems like we only want to call this when pages list actually change. Currently, it is calling whenever the navigator rebuild, and that that is wasteful",
        "createdAt" : "2020-06-11T19:13:06Z",
        "updatedAt" : "2020-06-25T18:55:48Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "44b95078-5706-4ae0-b840-968ad74e1837",
        "parentId" : "2296627c-3406-481c-8962-b74a0df4a9c9",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "well, maybe not that wasteful, because it is just widget build and we do that all the time",
        "createdAt" : "2020-06-11T19:17:32Z",
        "updatedAt" : "2020-06-25T18:55:48Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "b8652b5f-acea-4ff9-8cca-50aaf7e417f8",
        "parentId" : "2296627c-3406-481c-8962-b74a0df4a9c9",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Interesting. I believe there are some other properties that are not honored when they are changed after the route build for the first time. `maintainState` is one example I can think of.",
        "createdAt" : "2020-06-11T20:08:32Z",
        "updatedAt" : "2020-06-25T18:55:48Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "5428bc9e-c7b6-4078-b491-59c36f91c2bf",
        "parentId" : "2296627c-3406-481c-8962-b74a0df4a9c9",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "I do a little search it looks like `maintainState` is the only persistent flag that doesn't change through out the route lifecycle.\r\n\r\nMaterialPage:\r\nbuilder: ChangedExternalState\r\nfullScreenDialog: ChangedExternalState\r\n\r\nCupertinoPage:\r\nbuilder: ChangedExternalState\r\nfullScreenDialog: ChangedExternalState\r\ntitle: ChangedExternalState\r\n\r\nTransitionPage:\r\npageBuilder: ChangedExternalState\r\ntransitionsBuilder: changedInternalState\r\ntransitionDuration: changedInternalState\r\nopaque: changedInternalState\r\nbarrierDismissible: changedInternalState\r\nbarrierColor: changedInternalState\r\nbarrierLabel: changedInternalState\r\nfullscreenDialog:ChangedExternalState\r\n\r\nfor me, it seems like this is still a reasonable thing to do, what do you think?",
        "createdAt" : "2020-06-12T17:28:30Z",
        "updatedAt" : "2020-06-25T18:55:48Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "47c8bd8d-ceac-4e14-b120-5d1273cb2421",
        "parentId" : "2296627c-3406-481c-8962-b74a0df4a9c9",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "`OverlayEntry.maintainState` is a setter, could we call it in `changedInternalState` to sync the Route's maintainState with the OverlayEntry again to make the flag take effect?",
        "createdAt" : "2020-06-15T21:55:36Z",
        "updatedAt" : "2020-06-25T18:55:48Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "265641408cc5fe68bdd60c3817e3a83f0591f876",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +178,182 @@\n  @override\n  Route<T> createRoute(BuildContext context) => _PageBasedPageRouteBuilder<T>(this);\n}\n"
  }
]