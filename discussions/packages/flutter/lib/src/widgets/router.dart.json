[
  {
    "id" : "b0830a41-b15f-4391-9cf3-ae95ddd382e8",
    "prId" : 60299,
    "prUrl" : "https://github.com/flutter/flutter/pull/60299#pullrequestreview-450111923",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f1c6c33-0791-48cb-a83c-4a0b4de91f56",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "nit: per the style guide, the order of the constructor arguments and the order of the properties should be the same.  We should make that order make sense when reading the code (e.g. routeInformationProvider and routeInformationParser should always be together).",
        "createdAt" : "2020-07-16T18:35:32Z",
        "updatedAt" : "2020-08-07T21:17:15Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b113e96d72dd2bfdd7c75c78731a56eb2f66787",
    "line" : 248,
    "diffHunk" : "@@ -1,1 +246,250 @@    this.routeInformationProvider,\n    this.routeInformationParser,\n    @required this.routerDelegate,\n    this.backButtonDispatcher,\n  })  : assert(routeInformationProvider == null || routeInformationParser != null),"
  },
  {
    "id" : "9385c01c-9f15-419f-a061-538d65b72163",
    "prId" : 60299,
    "prUrl" : "https://github.com/flutter/flutter/pull/60299#pullrequestreview-450820041",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bdbafc8d-781f-4ca4-9bfd-be44bf2dd62d",
        "parentId" : null,
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "Should we call `_processInitialRoute` when previous `routeInformationProvider` was null?",
        "createdAt" : "2020-07-16T18:59:59Z",
        "updatedAt" : "2020-08-07T21:17:15Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "5d880e66-14b0-4673-9024-fe3cba083e6a",
        "parentId" : "bdbafc8d-781f-4ca4-9bfd-be44bf2dd62d",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "good catch, we need to call _handleRouteInformationProviderNotification",
        "createdAt" : "2020-07-17T22:37:08Z",
        "updatedAt" : "2020-08-07T21:17:15Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b113e96d72dd2bfdd7c75c78731a56eb2f66787",
    "line" : 517,
    "diffHunk" : "@@ -1,1 +515,519 @@  void didUpdateWidget(Router<T> oldWidget) {\n    super.didUpdateWidget(oldWidget);\n    if (widget.routeInformationProvider != oldWidget.routeInformationProvider ||\n        widget.backButtonDispatcher != oldWidget.backButtonDispatcher ||\n        widget.routeInformationParser != oldWidget.routeInformationParser ||"
  },
  {
    "id" : "cb68419d-4489-44d8-8342-e7e25e13cbd5",
    "prId" : 60299,
    "prUrl" : "https://github.com/flutter/flutter/pull/60299#pullrequestreview-448295929",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e693181-d7e4-4702-afed-7593203362ea",
        "parentId" : null,
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "nit: this file could use some `dartfmt` :)",
        "createdAt" : "2020-07-16T19:00:50Z",
        "updatedAt" : "2020-08-07T21:17:15Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b113e96d72dd2bfdd7c75c78731a56eb2f66787",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@// Copyright 2014 The Flutter Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file."
  },
  {
    "id" : "e2d88704-3c04-494d-80ce-533a85a8a482",
    "prId" : 60299,
    "prUrl" : "https://github.com/flutter/flutter/pull/60299#pullrequestreview-452917398",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe72ea42-b678-4f11-a31a-13522b4da6f3",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "When would I want to do this as an app developer?",
        "createdAt" : "2020-07-20T21:02:00Z",
        "updatedAt" : "2020-08-07T21:17:15Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "46d5e362-5e8e-4aba-bcb0-061df28a5321",
        "parentId" : "fe72ea42-b678-4f11-a31a-13522b4da6f3",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "And what happens if I do `navigate` and `neglect` in the same frame?",
        "createdAt" : "2020-07-20T21:12:38Z",
        "updatedAt" : "2020-08-07T21:17:15Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "92629c2d-ea3e-48cc-9e72-ebc1e096592d",
        "parentId" : "fe72ea42-b678-4f11-a31a-13522b4da6f3",
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "That means two changes happened: one that requires navigation, and one that doesn't. I think navigation should happen in this case.\r\n\r\nThis would be a good addition to the docs.",
        "createdAt" : "2020-07-21T18:04:30Z",
        "updatedAt" : "2020-08-07T21:17:15Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "7c180903-0297-483f-8923-9ac7ec0d8224",
        "parentId" : "fe72ea42-b678-4f11-a31a-13522b4da6f3",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "Currently it throws an exception says \r\n```\r\n'Both Router.navigate and Router.neglect have been called in this'\r\n            'build cycle, and the Router cannot decide whether to report the'\r\n            'route information. Please make sure only one of them is called'\r\n            'within the same build cycle.'\r\n```\r\nI can't think of a use case where this can happen, and it may be confusing if the user does two contradictory events within the same build cycle. We can follow the suggestion @mdebbar mentioned if there is indeed a use case for this.",
        "createdAt" : "2020-07-22T00:30:26Z",
        "updatedAt" : "2020-08-07T21:17:15Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b113e96d72dd2bfdd7c75c78731a56eb2f66787",
    "line" : 339,
    "diffHunk" : "@@ -1,1 +337,341 @@  }\n\n  /// Forces the [Router] to to run the [callback] without reporting the route\n  /// information back to the engine.\n  ///"
  },
  {
    "id" : "9533a7d4-6d75-4ed2-9bbc-608788445380",
    "prId" : 60299,
    "prUrl" : "https://github.com/flutter/flutter/pull/60299#pullrequestreview-452917398",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84c4f183-fe43-4532-b1e2-5c30ba89b776",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Is this _rebuild necessary Wouldn't the routerDelegate notify its listeners in response to `setNewRoutePath` if a rebuild is required?",
        "createdAt" : "2020-07-20T21:05:13Z",
        "updatedAt" : "2020-08-07T21:17:15Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "ccb2e6f4-ace9-4f64-b76c-dbe43e512b84",
        "parentId" : "84c4f183-fe43-4532-b1e2-5c30ba89b776",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "I think we always want to rebuild at the end of the notification.\r\nI feel it does not hurt the performance and it will not be error prompt as well.\r\n\r\nWhen I was writing router delegate it make sense to notifying the router to rebuild when i am actively changing the app state. However, it seems weird if the router told router delegate something has changed, the route r delegate has to notify the router to rebuild after it update the app state.\r\n\r\nThis has tripped me a lot when i was rewriting the stock app and they are all tricky to figure out. I feel no harm to add the rebuild here.",
        "createdAt" : "2020-07-22T01:20:46Z",
        "updatedAt" : "2020-08-07T21:17:15Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b113e96d72dd2bfdd7c75c78731a56eb2f66787",
    "line" : 571,
    "diffHunk" : "@@ -1,1 +569,573 @@      .then<void>(widget.routerDelegate.setNewRoutePath)\n      .then<void>(_verifyRouterDelegatePushStillCurrent(_currentRouterDelegateTransaction, widget))\n      .then<void>(_rebuild);\n  }\n"
  },
  {
    "id" : "52792a12-39cf-43a8-b530-9b17be7c2519",
    "prId" : 60299,
    "prUrl" : "https://github.com/flutter/flutter/pull/60299#pullrequestreview-451952214",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "980abe07-7cf9-49c1-9678-4582bc9173fd",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "same comment as below.",
        "createdAt" : "2020-07-20T21:13:49Z",
        "updatedAt" : "2020-08-07T21:17:15Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b113e96d72dd2bfdd7c75c78731a56eb2f66787",
    "line" : 560,
    "diffHunk" : "@@ -1,1 +558,562 @@      .then<void>(widget.routerDelegate.setInitialRoutePath)\n      .then<void>(_verifyRouterDelegatePushStillCurrent(_currentRouterDelegateTransaction, widget))\n      .then<void>(_rebuild);\n  }\n"
  },
  {
    "id" : "03b3d1cd-a8ac-4110-abf1-b70273e8438a",
    "prId" : 60299,
    "prUrl" : "https://github.com/flutter/flutter/pull/60299#pullrequestreview-458561579",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a56d33a0-2415-4248-8a65-b8707541a1a6",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Doesn't didPushRoute just give you a route name instead of a complex serialized object? Do we need new API to obtain a RouteInformation Object from the engine? Or maybe this method should have two params: location and state.",
        "createdAt" : "2020-07-30T16:54:11Z",
        "updatedAt" : "2020-08-07T21:17:15Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b113e96d72dd2bfdd7c75c78731a56eb2f66787",
    "line" : 1219,
    "diffHunk" : "@@ -1,1 +1217,1221 @@\n  @override\n  Future<bool> didPushRoute(String route) async {\n    assert(hasListeners);\n    _platformReportsNewRouteInformation(RouteInformation(location: route));"
  }
]