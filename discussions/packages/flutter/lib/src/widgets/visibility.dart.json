[
  {
    "id" : "5dfcd553-40f9-4644-904a-026c81c3fffb",
    "prId" : 20365,
    "prUrl" : "https://github.com/flutter/flutter/pull/20365#pullrequestreview-145027100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fac5fa26-b586-404c-99a6-260f593fffc8",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "The replacement feature is not something I would expect to be done by a Visibility widget...\r\nDo you expect that people will want to change maintainState and maintainSize for a Visibility widget dynamically? if not maybe it will be simpler to have the visibility widget only do show/hide and have a Replace widget for the replacement logic",
        "createdAt" : "2018-08-09T02:10:21Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "8bbcb0b0-c90e-4752-9893-f9a358b024e4",
        "parentId" : "fac5fa26-b586-404c-99a6-260f593fffc8",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I wouldn't expect anything but `visible` to be changed dynamically.\r\n`replacement` is there because it's not clear to me that `SizedBox.shrink` is always the right choice for the replacement (in the case of `maintainState` being false).",
        "createdAt" : "2018-08-09T21:10:02Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "97e9d6137e5c25ec20ec4fc0408cdc6fd7d36f50",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@///\n/// By default, the [visible] property controls whether the [child] is included\n/// in the subtree or not; when it is not [visible], the [replacement] child\n/// (typically a zero-sized box) is included instead.\n///"
  },
  {
    "id" : "296acab5-d0c3-4768-9811-6605f3e97994",
    "prId" : 20365,
    "prUrl" : "https://github.com/flutter/flutter/pull/20365#pullrequestreview-145057133",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e5d759b-991e-4c0e-9948-18eb9446cffd",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Should we be concerned about maintaining the tree structure when this is toggled.\r\nSpecifically if I'm not wrong toggling maintainInteractivity might destroy the state of child widgets without a key... I can imagine it being confusing to have a Visible widget with maintainState equals true destroy your state when you toggle interactivity...",
        "createdAt" : "2018-08-09T02:27:13Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "a160673a-c07a-47ce-9135-4d6119185710",
        "parentId" : "2e5d759b-991e-4c0e-9948-18eb9446cffd",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Ohh I just saw your comment saying that the maintain flags should not be changed.\r\nI'm a bit concerned that people (like I just did) might overlook that part in the comments and get confused by this.\r\nI wonder if we can come up with an API where this will be more clear you're doing something wrong by changing the flags...?\r\nOne wild idea (which is probably bad) would be to have a separate widget class per maintain configuration....\r\nAnother option is maybe to make this a stateful widget just for the sake of asserting that the maintain flags does not change...?",
        "createdAt" : "2018-08-09T03:15:16Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "bb0210a8-6ebf-4365-b7fa-e61aa9a5ea54",
        "parentId" : "2e5d759b-991e-4c0e-9948-18eb9446cffd",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Another potential alternative: if maintainState is true wrap child with a keyed widget and allow to modify the maintain flags",
        "createdAt" : "2018-08-09T03:56:36Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "5be7c327-aa2b-4c23-8a9a-f41d2e6ed81b",
        "parentId" : "2e5d759b-991e-4c0e-9948-18eb9446cffd",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "What would the use case be for changing the flags?",
        "createdAt" : "2018-08-09T21:10:54Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "54415e4d-f13e-40f6-ad3b-3e7b5ec87199",
        "parentId" : "2e5d759b-991e-4c0e-9948-18eb9446cffd",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Just the general approach that if it's there it will be used...",
        "createdAt" : "2018-08-09T23:03:34Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "97e9d6137e5c25ec20ec4fc0408cdc6fd7d36f50",
    "line" : 206,
    "diffHunk" : "@@ -1,1 +204,208 @@      Widget result = child;\n      if (!maintainInteractivity) {\n        result = new IgnorePointer(\n          child: child,\n          ignoring: !visible,"
  },
  {
    "id" : "7412217f-3c22-4b4b-9d92-d6fdab40e712",
    "prId" : 20365,
    "prUrl" : "https://github.com/flutter/flutter/pull/20365#pullrequestreview-145030891",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cf49219-0387-4791-828c-7fc2476401c1",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Perhaps add another paragraph to explain that 'hiding' here is a nuanced word since in some configurations, the child is effectively removed rather than strictly 'hidden'",
        "createdAt" : "2018-08-09T03:00:04Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "17ffdf7a-5afb-468c-abb0-090371d8458a",
        "parentId" : "9cf49219-0387-4791-828c-7fc2476401c1",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "added",
        "createdAt" : "2018-08-09T21:22:03Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "97e9d6137e5c25ec20ec4fc0408cdc6fd7d36f50",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +89,93 @@  final Widget replacement;\n\n  /// Switches between showing the [child] or hiding it.\n  ///\n  /// The `maintain` flags should be set to the same values regardless of the"
  },
  {
    "id" : "08b7fb66-3081-44f9-8b1d-194eb0496f2a",
    "prId" : 20365,
    "prUrl" : "https://github.com/flutter/flutter/pull/20365#pullrequestreview-145078635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d159f676-1955-422d-820c-5e251beb98ed",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "This part seems really important. Perhaps copy paste into the class's dart doc too so people exploring what this widget does can know right away what it isn't for.\r\n\r\nAlso, is it worth creating a StatelessElement.update override to debug assert that these indeed don't change (or show a warning at least)?",
        "createdAt" : "2018-08-09T03:07:12Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "8d151683-fcd8-4b62-aba6-c89479c8e3c6",
        "parentId" : "d159f676-1955-422d-820c-5e251beb98ed",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I'd repeat this in each of the fields' docs too",
        "createdAt" : "2018-08-09T03:18:29Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "38bdec24-e00a-431a-bd49-0082b1304cc4",
        "parentId" : "d159f676-1955-422d-820c-5e251beb98ed",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Done and done.\r\n\r\nI don't see why we'd assert that they can't change. It's a pretty common pattern to have flags like this which, if changed, will cause the subtree to be discarded. At the most trivial, `key` is one such property.",
        "createdAt" : "2018-08-09T22:01:52Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "3a9fd488-f81b-48f9-89c2-fb3c361cf21e",
        "parentId" : "d159f676-1955-422d-820c-5e251beb98ed",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I think the difference in this case is that it's a side effect in other cases but is a breakage in the semantically stated goal (of maintainingState) in this case. It would be debug-helpful to not have it fail silently.\r\n\r\nAlso, not so much a feedback but just curious for setting precedents, do we have an existing pattern for cases where changing a parameter on ephemeral widgets between frames causes misbehaviors in that widget's stated goal?\r\n\r\nAs a developer, I think I'd have that preference for that `key` example too. If I had an implicitly animating widget and I change the key and broke the animation, it would be nice to at least get a message at debug time if not an assert to say that changing key on the same widget type at the same spot in the tree is really weird, are you sure you want to do it?",
        "createdAt" : "2018-08-09T23:12:40Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "57c58cfa-1aa0-4f45-bc32-dc4808f5366e",
        "parentId" : "d159f676-1955-422d-820c-5e251beb98ed",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Changing the key isn't really weird, it's literally how you indicate that you want to throw away the state.\r\n\r\nAnother example would be the widgets you build in `MaterialApp.builder`, if you change some of the flags on `MaterialApp` that change the tree shape. Or pretty much any of the flags on `Container`.",
        "createdAt" : "2018-08-10T00:03:13Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "aa643df4-f8a1-452b-b228-d8377ec61aca",
        "parentId" : "d159f676-1955-422d-820c-5e251beb98ed",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "`<feel free to ignore and submit. This is more educational for me than anything>`\r\n* For the MaterialApp and Container etc, there's no conflict with the user's intent. There are side effects but you still correctly get a 'Container' when you change how the container draws itself and affects its child. Here, we're potentially breaking the stated intent of the user (of maintaining state). \r\n\r\n* I'm not sure changing key = losing state is super obvious for the layperson. We describe how to preserve state via keys in https://docs.flutter.io/flutter/widgets/StatefulWidget-class.html but maybe we should point it out more explicitly that changing key implies losing state and/or describe in https://docs.flutter.io/flutter/widgets/Widget/key.html that removing elements from the tree also implies losing state. \r\n\r\n`</>`",
        "createdAt" : "2018-08-10T00:57:11Z",
        "updatedAt" : "2018-08-10T00:57:21Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "3a4b03b9-dc10-41ec-853c-3e03543928c7",
        "parentId" : "d159f676-1955-422d-820c-5e251beb98ed",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I think if anything it's even more weird that changing from `Container(child: foo)` to `Container(child: foo, color: green)` will lose `foo`'s state than it is that changing from `Visibility(child: foo, visible: true, maintainState: true)` to `Visibility(child: foo, visible: true, maintainSize: true)` will lose `foo`'s state, but in either case, I don't think the difference is SO great that we should do something different for one than the other (at least not beyond documenting it, which we have here).\r\n\r\nI'm all in favour of adding more docs to key. I recommend submitting filing an issue or submitting a PR for that. (I'm not sure what to add, really, so I'm probably not the best person to do that.)",
        "createdAt" : "2018-08-10T01:22:58Z",
        "updatedAt" : "2018-08-10T01:22:58Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "97e9d6137e5c25ec20ec4fc0408cdc6fd7d36f50",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +91,95 @@  /// Switches between showing the [child] or hiding it.\n  ///\n  /// The `maintain` flags should be set to the same values regardless of the\n  /// state of the [visible] property, otherwise they will not operate correctly\n  /// (specifically, the state will be lost regardless of the state of"
  },
  {
    "id" : "20b7ce65-08cb-485a-b5f0-49fed8fb6910",
    "prId" : 20365,
    "prUrl" : "https://github.com/flutter/flutter/pull/20365#pullrequestreview-145043682",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "198310f8-107f-4847-aca5-031ad5f8c96b",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I would document the reverse dependencies in the fields' docs too. \r\n\r\ne.g. in maintainState: it needs to be true in order to maintain size\r\n\r\netc",
        "createdAt" : "2018-08-09T03:16:11Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "0aff8cd3-00fc-49f8-a9bf-cd1368f7ebdd",
        "parentId" : "198310f8-107f-4847-aca5-031ad5f8c96b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "done",
        "createdAt" : "2018-08-09T22:04:58Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "97e9d6137e5c25ec20ec4fc0408cdc6fd7d36f50",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@  /// The boolean arguments must not be null.\n  ///\n  /// The [maintainSemantics] and [maintainInteractivity] arguments can only be\n  /// set if [maintainSize] is set.\n  ///"
  },
  {
    "id" : "f51bfac6-9cf8-43ec-8818-4a68d03e7cd7",
    "prId" : 20365,
    "prUrl" : "https://github.com/flutter/flutter/pull/20365#pullrequestreview-145066174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df3fa0d8-1ee9-468f-9478-8cd63ee51c37",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "These relative qualifiers are great",
        "createdAt" : "2018-08-09T23:52:31Z",
        "updatedAt" : "2018-08-10T00:38:38Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "97e9d6137e5c25ec20ec4fc0408cdc6fd7d36f50",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +126,130 @@  /// To set this, [maintainState] must also be set.\n  ///\n  /// Keeping animations active when the widget is not visible is even more\n  /// expensive than only maintaining the state.\n  ///"
  }
]