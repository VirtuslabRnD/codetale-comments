[
  {
    "id" : "d7a31ead-6998-4c2c-aae1-1c5ca2bd03a7",
    "prId" : 820,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2d0f748-7224-4402-824c-d17e6383de48",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Note that I'm updating these equations in https://github.com/flutter/flutter/pull/831.\n",
        "createdAt" : "2015-12-09T06:44:51Z",
        "updatedAt" : "2015-12-09T22:11:28Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "c43a5d56-aaf5-481c-8461-c39a30d1709d",
        "parentId" : "c2d0f748-7224-4402-824c-d17e6383de48",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I moved the default tolerance definitions to scrollable_dart so that ScrollBehavior remains unaware of pixels. I didn't (intentionally) change the meaning of the changes from #831.\n",
        "createdAt" : "2015-12-09T21:59:23Z",
        "updatedAt" : "2015-12-09T22:11:28Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1d42a2fde44cf20e264f802befda57b0be15809",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +203,207 @@    // normalizing by the devicePixelRatio so that the threshold has the\n    // same effect independent of the device's pixel density.\n    double endVelocity = pixelToScrollOffset(15.0 * ui.window.devicePixelRatio);\n\n    // Similar to endVelocity. Stop scrolling when we're this close to"
  },
  {
    "id" : "e4a9418e-98d0-4f90-9ae2-49dc493844a0",
    "prId" : 1644,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05533f00-de9f-4a8e-9977-b27f2b3e4385",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "find out :-)\n",
        "createdAt" : "2016-02-06T02:00:28Z",
        "updatedAt" : "2016-02-06T04:21:47Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "465ccc25-3f84-4871-be1e-8b076298b595",
        "parentId" : "05533f00-de9f-4a8e-9977-b27f2b3e4385",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "@hansmuller probably knows\n",
        "createdAt" : "2016-02-06T02:00:48Z",
        "updatedAt" : "2016-02-06T04:21:47Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "806c3ad5-9f26-43c1-ab85-9f25ab847aae",
        "parentId" : "05533f00-de9f-4a8e-9977-b27f2b3e4385",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I looked into it and didn't quite understand what it was doing.  Hopefully @HansMuller can explain it to me and we can document it.\n",
        "createdAt" : "2016-02-06T04:19:27Z",
        "updatedAt" : "2016-02-06T04:21:47Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "9251504a577842844b96bd2067844347c4c56ee9",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +75,79 @@  final SnapOffsetCallback snapOffsetCallback;\n\n  final double snapAlignmentOffset; // What does this do?\n\n  /// The state from the closest instance of this class that encloses the given context."
  },
  {
    "id" : "4c418bd8-f427-4029-9cb6-adeb14e3745c",
    "prId" : 2207,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c80f3523-8849-4a75-9285-b2d2c9e620ce",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Should we add an assert to that effect?\n",
        "createdAt" : "2016-02-26T01:49:39Z",
        "updatedAt" : "2016-02-26T18:17:52Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "be865e1e1a6b8ad45d0efdb0edd4781ef3e4a863",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +385,389 @@  /// the new offset, do not provide a duration, rather than providing\n  /// a zero duration.\n  Future scrollTo(double newScrollOffset, { Duration duration, Curve curve: Curves.ease }) {\n    if (newScrollOffset == _scrollOffset)\n      return new Future.value();"
  },
  {
    "id" : "5951d428-5b4a-4d4c-88c3-10dd6112a172",
    "prId" : 2227,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfa3f0e2-4624-4d83-833c-33c32369763d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "https://github.com/flutter/flutter/issues/2233\n",
        "createdAt" : "2016-02-26T22:16:22Z",
        "updatedAt" : "2016-02-26T22:39:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c629006748f4f32e456fa013bfc379493277d877",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +303,307 @@\n  Simulation _createFlingSimulation(double scrollVelocity) {\n    final Simulation simulation =  scrollBehavior.createFlingScrollSimulation(scrollOffset, scrollVelocity);\n    if (simulation != null) {\n      final double endVelocity = pixelOffsetToScrollOffset(kPixelScrollTolerance.velocity).abs() * (scrollVelocity < 0.0 ? -1.0 : 1.0);"
  },
  {
    "id" : "4467310d-9130-4c75-8dc3-e000688e50e9",
    "prId" : 2227,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b86eadf-44d6-489e-bbf3-d3ae1dede8b8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "tolerance probably should be a magnitude anyway, so no need to fiddle with signs\n",
        "createdAt" : "2016-02-26T22:24:17Z",
        "updatedAt" : "2016-02-26T22:39:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c629006748f4f32e456fa013bfc379493277d877",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +338,342 @@\n    final double snapVelocity = scrollVelocity.abs() * (snappedScrollOffset - scrollOffset).sign;\n    final double endVelocity = pixelOffsetToScrollOffset(kPixelScrollTolerance.velocity).abs() * (scrollVelocity < 0.0 ? -1.0 : 1.0);\n    Simulation toSnapSimulation = scrollBehavior.createSnapScrollSimulation(\n      scrollOffset, snappedScrollOffset, snapVelocity, endVelocity"
  },
  {
    "id" : "e4190fb5-1cf2-4916-a825-1d9913afd8cf",
    "prId" : 3950,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f9712d7-2527-4ea6-9a4b-a69adf90677a",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this should be an assert or TODO\n",
        "createdAt" : "2016-05-17T17:30:57Z",
        "updatedAt" : "2016-05-17T17:30:57Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "d480a2c4-1792-4533-8c69-42dabd1e6d3d",
        "parentId" : "7f9712d7-2527-4ea6-9a4b-a69adf90677a",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It should have been an assert. I think it took longer to write the TBD note to myself (which I promptly forgot about) than to just write the assert :-).\n",
        "createdAt" : "2016-05-17T17:56:59Z",
        "updatedAt" : "2016-05-17T17:56:59Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a0f85c2c5f882a3828fd482545e2284cda9cc28",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +634,638 @@  /// the gesture detectors accordingly.\n  Widget buildContent(BuildContext context) {\n    // TBD: if config.builder is null throw a sensible error.\n    return config.builder(context, this);\n  }"
  },
  {
    "id" : "2d83056f-08ed-48f4-90cc-00f0cf8a8c6c",
    "prId" : 3950,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac25df3f-486b-4cdc-8154-8bde63159eae",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "there are ~~three~~ four places where you now have this paragraph but as far as I can tell, none of them are places where talking about subclasses makes sense.\n",
        "createdAt" : "2016-05-17T17:31:50Z",
        "updatedAt" : "2016-05-17T17:34:12Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a0f85c2c5f882a3828fd482545e2284cda9cc28",
    "line" : 166,
    "diffHunk" : "@@ -1,1 +709,713 @@  /// indices, up to the item with the index 0) will be pushed up.\n  ///\n  /// Subclasses may ignore this value if, for instance, they do not\n  /// have a concept of an anchor, or have more complicated behavior\n  /// (e.g. they would by default put the middle item in the middle of"
  },
  {
    "id" : "bc155d83-792f-4f6e-b903-c1949aef035d",
    "prId" : 3950,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a6fc388-4baf-45b0-837b-88ddcf39acb1",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "We should add a comment to the four places that duplicate all these docs listing the four classes that have those docs and telling future maintainers that they must ensure the four places are kept in sync.\n",
        "createdAt" : "2016-05-17T17:33:55Z",
        "updatedAt" : "2016-05-17T17:33:55Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a0f85c2c5f882a3828fd482545e2284cda9cc28",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +49,53 @@  }) : super(key: key) {\n    assert(scrollDirection == Axis.vertical || scrollDirection == Axis.horizontal);\n    assert(scrollAnchor == ViewportAnchor.start || scrollAnchor == ViewportAnchor.end);\n  }\n"
  },
  {
    "id" : "d387ff8a-4f87-45fb-8c60-38989fae0d7b",
    "prId" : 5038,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86db6453-45a3-402a-b1f4-345bb1857b9f",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "We have a Velocity type which might be helpful here.\n",
        "createdAt" : "2016-07-26T00:26:52Z",
        "updatedAt" : "2016-07-26T16:42:11Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "c0f379f5-606f-4cc5-8b26-7d8bbfba4144",
        "parentId" : "86db6453-45a3-402a-b1f4-345bb1857b9f",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Velocity has X and Y components but this velocity is defined to be in the direction of the scrollable's axis.\n\nIt might be nice to carry a Velocity type around anyway; maybe add a Velocity.along(Axis) method.  Eventually, in classes like ScrollBehavior that don't have an axis, I think we'd still need a velocity scalar.\n",
        "createdAt" : "2016-07-26T16:01:04Z",
        "updatedAt" : "2016-07-26T16:42:11Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "a75d94f6-06eb-4ff5-b7fa-40494232ea81",
        "parentId" : "86db6453-45a3-402a-b1f4-345bb1857b9f",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "We could have a Speed type that's a scalar.\n",
        "createdAt" : "2016-07-26T16:03:18Z",
        "updatedAt" : "2016-07-26T16:42:11Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "b14e92f0-f8ea-41b5-acb4-18e33fb4d851",
        "parentId" : "86db6453-45a3-402a-b1f4-345bb1857b9f",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "https://github.com/flutter/flutter/issues/5040\n",
        "createdAt" : "2016-07-26T16:37:40Z",
        "updatedAt" : "2016-07-26T16:42:11Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "5270c63cf15d24d52f7c3c2602b35a0bde45cd06",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +461,465 @@  /// offset with the given value as the initial velocity. The physics\n  /// simulation is determined by the scroll behavior.\n  Future<Null> fling(double scrollVelocity) {\n    if (scrollVelocity.abs() > kPixelScrollTolerance.velocity || !_controller.isAnimating)\n      return _startToEndAnimation(scrollVelocity);"
  }
]