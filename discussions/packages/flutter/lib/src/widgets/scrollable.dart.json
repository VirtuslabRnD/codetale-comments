[
  {
    "id" : "d7a31ead-6998-4c2c-aae1-1c5ca2bd03a7",
    "prId" : 820,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2d0f748-7224-4402-824c-d17e6383de48",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Note that I'm updating these equations in https://github.com/flutter/flutter/pull/831.\n",
        "createdAt" : "2015-12-09T06:44:51Z",
        "updatedAt" : "2015-12-09T22:11:28Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "c43a5d56-aaf5-481c-8461-c39a30d1709d",
        "parentId" : "c2d0f748-7224-4402-824c-d17e6383de48",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I moved the default tolerance definitions to scrollable_dart so that ScrollBehavior remains unaware of pixels. I didn't (intentionally) change the meaning of the changes from #831.\n",
        "createdAt" : "2015-12-09T21:59:23Z",
        "updatedAt" : "2015-12-09T22:11:28Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1d42a2fde44cf20e264f802befda57b0be15809",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +203,207 @@    // normalizing by the devicePixelRatio so that the threshold has the\n    // same effect independent of the device's pixel density.\n    double endVelocity = pixelToScrollOffset(15.0 * ui.window.devicePixelRatio);\n\n    // Similar to endVelocity. Stop scrolling when we're this close to"
  },
  {
    "id" : "e4a9418e-98d0-4f90-9ae2-49dc493844a0",
    "prId" : 1644,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05533f00-de9f-4a8e-9977-b27f2b3e4385",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "find out :-)\n",
        "createdAt" : "2016-02-06T02:00:28Z",
        "updatedAt" : "2016-02-06T04:21:47Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "465ccc25-3f84-4871-be1e-8b076298b595",
        "parentId" : "05533f00-de9f-4a8e-9977-b27f2b3e4385",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "@hansmuller probably knows\n",
        "createdAt" : "2016-02-06T02:00:48Z",
        "updatedAt" : "2016-02-06T04:21:47Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "806c3ad5-9f26-43c1-ab85-9f25ab847aae",
        "parentId" : "05533f00-de9f-4a8e-9977-b27f2b3e4385",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I looked into it and didn't quite understand what it was doing.  Hopefully @HansMuller can explain it to me and we can document it.\n",
        "createdAt" : "2016-02-06T04:19:27Z",
        "updatedAt" : "2016-02-06T04:21:47Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "9251504a577842844b96bd2067844347c4c56ee9",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +75,79 @@  final SnapOffsetCallback snapOffsetCallback;\n\n  final double snapAlignmentOffset; // What does this do?\n\n  /// The state from the closest instance of this class that encloses the given context."
  },
  {
    "id" : "4c418bd8-f427-4029-9cb6-adeb14e3745c",
    "prId" : 2207,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c80f3523-8849-4a75-9285-b2d2c9e620ce",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Should we add an assert to that effect?\n",
        "createdAt" : "2016-02-26T01:49:39Z",
        "updatedAt" : "2016-02-26T18:17:52Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "be865e1e1a6b8ad45d0efdb0edd4781ef3e4a863",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +385,389 @@  /// the new offset, do not provide a duration, rather than providing\n  /// a zero duration.\n  Future scrollTo(double newScrollOffset, { Duration duration, Curve curve: Curves.ease }) {\n    if (newScrollOffset == _scrollOffset)\n      return new Future.value();"
  },
  {
    "id" : "5951d428-5b4a-4d4c-88c3-10dd6112a172",
    "prId" : 2227,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfa3f0e2-4624-4d83-833c-33c32369763d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "https://github.com/flutter/flutter/issues/2233\n",
        "createdAt" : "2016-02-26T22:16:22Z",
        "updatedAt" : "2016-02-26T22:39:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c629006748f4f32e456fa013bfc379493277d877",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +303,307 @@\n  Simulation _createFlingSimulation(double scrollVelocity) {\n    final Simulation simulation =  scrollBehavior.createFlingScrollSimulation(scrollOffset, scrollVelocity);\n    if (simulation != null) {\n      final double endVelocity = pixelOffsetToScrollOffset(kPixelScrollTolerance.velocity).abs() * (scrollVelocity < 0.0 ? -1.0 : 1.0);"
  },
  {
    "id" : "4467310d-9130-4c75-8dc3-e000688e50e9",
    "prId" : 2227,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b86eadf-44d6-489e-bbf3-d3ae1dede8b8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "tolerance probably should be a magnitude anyway, so no need to fiddle with signs\n",
        "createdAt" : "2016-02-26T22:24:17Z",
        "updatedAt" : "2016-02-26T22:39:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c629006748f4f32e456fa013bfc379493277d877",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +338,342 @@\n    final double snapVelocity = scrollVelocity.abs() * (snappedScrollOffset - scrollOffset).sign;\n    final double endVelocity = pixelOffsetToScrollOffset(kPixelScrollTolerance.velocity).abs() * (scrollVelocity < 0.0 ? -1.0 : 1.0);\n    Simulation toSnapSimulation = scrollBehavior.createSnapScrollSimulation(\n      scrollOffset, snappedScrollOffset, snapVelocity, endVelocity"
  }
]