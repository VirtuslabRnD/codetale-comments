[
  {
    "id" : "27c9938e-4c38-49fa-9113-9f9db8ea9dbe",
    "prId" : 62350,
    "prUrl" : "https://github.com/flutter/flutter/pull/62350#pullrequestreview-456137432",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcc152ca-afd9-4d30-aca2-d55087b45c2b",
        "parentId" : null,
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "If this is null, then it uses the inherited text direction right? Probably worth mentioning that in the documentation.",
        "createdAt" : "2020-07-27T20:38:17Z",
        "updatedAt" : "2020-07-29T19:22:16Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      },
      {
        "id" : "20fed966-e01c-4c00-a01d-74f2e39973de",
        "parentId" : "bcc152ca-afd9-4d30-aca2-d55087b45c2b",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "üëç\r\n\r\n\r\n",
        "createdAt" : "2020-07-27T21:09:56Z",
        "updatedAt" : "2020-07-29T19:22:16Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd0ee57fd9bdb1f913c709410aff6e9516b25e5a",
    "line" : 196,
    "diffHunk" : "@@ -1,1 +194,198 @@  final VerticalDirection overflowDirection;\n\n  /// Determines the order that the [children] appear in for the default\n  /// horizontal layout, and the interpretation of\n  /// [OverflowBarAlignment.start] and [OverflowBarAlignment.end] for"
  },
  {
    "id" : "9973afd8-ab4d-4aed-9a62-73bb5ef26a9f",
    "prId" : 62350,
    "prUrl" : "https://github.com/flutter/flutter/pull/62350#pullrequestreview-456138700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7cd5f9a2-fe3a-4490-85dc-10b1a744017f",
        "parentId" : null,
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "Nit:\r\n```suggestion\r\n    final bool isRtl = textDirection == TextDirection.rtl;\r\n```",
        "createdAt" : "2020-07-27T20:41:47Z",
        "updatedAt" : "2020-07-29T19:22:16Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      },
      {
        "id" : "bb46c8ed-be07-4adc-a3ef-bd34b1f61a5a",
        "parentId" : "7cd5f9a2-fe3a-4490-85dc-10b1a744017f",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I had it this way originally but I suffer from a personal loathing for logically capitalizing acronyms, so `rtl`.",
        "createdAt" : "2020-07-27T21:12:04Z",
        "updatedAt" : "2020-07-29T19:22:16Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd0ee57fd9bdb1f913c709410aff6e9516b25e5a",
    "line" : 462,
    "diffHunk" : "@@ -1,1 +460,464 @@    }\n\n    final bool rtl = textDirection == TextDirection.rtl;\n    final double actualWidth = childrenWidth + spacing * (childCount - 1);\n"
  },
  {
    "id" : "8661ac76-768a-469b-a357-9fc8f159392c",
    "prId" : 62350,
    "prUrl" : "https://github.com/flutter/flutter/pull/62350#pullrequestreview-456200516",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0dd165c0-17fa-4bbe-9ec8-391fb11ff1b4",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "I wonder if we should make this default match the material spec for button spacing? Or is that assuming too much? It would just be nice to just wrap an array of buttons with an `OverflowBar` with no params and have it match the old `ButtonBar` layout by default.",
        "createdAt" : "2020-07-27T22:20:35Z",
        "updatedAt" : "2020-07-29T19:22:16Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "32a94377-98ea-4b42-b45d-106ed6a3915e",
        "parentId" : "0dd165c0-17fa-4bbe-9ec8-391fb11ff1b4",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "For a dialog you'd also need to end-align the OverflowBar and somewhere you need to ensure that the OverflowBar can be scrolled into view.\r\n\r\nUsing 0 for the spacing seemed appropriate for the widgets library since it's probably the wrong place to have an opinion about spacing.",
        "createdAt" : "2020-07-27T23:18:30Z",
        "updatedAt" : "2020-07-29T19:22:16Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "61e0caef-ffb1-4e74-bfc2-04fb765c53fc",
        "parentId" : "0dd165c0-17fa-4bbe-9ec8-391fb11ff1b4",
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Ah, I missed that it was part of the widgets library üòÑ. Totally makes sense for it to be there and that the default should be 0.\r\n",
        "createdAt" : "2020-07-27T23:23:17Z",
        "updatedAt" : "2020-07-29T19:22:16Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd0ee57fd9bdb1f913c709410aff6e9516b25e5a",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +127,131 @@  ///\n  /// Defaults to 0.0.\n  final double spacing;\n\n  /// The height of the gap between [children] in the vertical"
  },
  {
    "id" : "e9bb2989-cafb-42f3-b07f-f8fd22e5a666",
    "prId" : 62350,
    "prUrl" : "https://github.com/flutter/flutter/pull/62350#pullrequestreview-456941372",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0aa9dc82-082f-46ba-a837-6c0c3a7c0362",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I believe `children` of an `MultiChildRenderObjectWidget` also cannot be null. Mention that in the docs and add an assert?",
        "createdAt" : "2020-07-28T19:30:12Z",
        "updatedAt" : "2020-07-29T19:22:16Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd0ee57fd9bdb1f913c709410aff6e9516b25e5a",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +100,104 @@  /// Constructs an OverflowBar.\n  ///\n  /// The [spacing], [overflowSpacing], [overflowAlignment],\n  /// [overflowDirection], and [clipBehavior] parameters must not be\n  /// null. The [children] argument must not be null and must not contain"
  },
  {
    "id" : "b7075152-2218-42cc-90a2-f80ddcff836e",
    "prId" : 62350,
    "prUrl" : "https://github.com/flutter/flutter/pull/62350#pullrequestreview-456987969",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39542f39-01bd-4df5-81c2-b40d055106b0",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Is this calculation correct? I'd assumed that if width is big enough everything gets layed out in a row and then the hight would not be the sum of the children heights, no?",
        "createdAt" : "2020-07-28T20:05:28Z",
        "updatedAt" : "2020-07-29T19:22:16Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "bda8daf3-db42-4faa-94d8-aabeb394af48",
        "parentId" : "39542f39-01bd-4df5-81c2-b40d055106b0",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Yes, you are correct, this method is incorrect. The min intrinsic height should be: if the sum of child intrinsic widths fit, then the max child height, otherwise the sum of the child heights.",
        "createdAt" : "2020-07-28T20:22:58Z",
        "updatedAt" : "2020-07-29T19:22:16Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "19716a87-7d51-4d7a-97dc-99a8892ebcdf",
        "parentId" : "39542f39-01bd-4df5-81c2-b40d055106b0",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I've fixed this however I still need to add some tests for min/max intrinsic height.",
        "createdAt" : "2020-07-28T20:30:38Z",
        "updatedAt" : "2020-07-29T19:22:16Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd0ee57fd9bdb1f913c709410aff6e9516b25e5a",
    "line" : 352,
    "diffHunk" : "@@ -1,1 +350,354 @@  @override\n  double computeMinIntrinsicHeight(double width) {\n    RenderBox child = firstChild;\n    if (child == null)\n      return 0;"
  }
]