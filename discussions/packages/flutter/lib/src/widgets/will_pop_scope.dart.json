[
  {
    "id" : "98d5d27a-aa00-4e07-80d9-7d2b1ea7f9c4",
    "prId" : 8311,
    "prUrl" : "https://github.com/flutter/flutter/pull/8311#pullrequestreview-23087748",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dffdc099-b27b-4530-9445-61698a151dd5",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "should we assert that we need a ModalRoute? (in the same way we assert for a Material)",
        "createdAt" : "2017-02-21T22:21:55Z",
        "updatedAt" : "2017-02-21T22:21:55Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "02500811-53fd-4bfa-90ef-aeab234cfe52",
        "parentId" : "dffdc099-b27b-4530-9445-61698a151dd5",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Currently this widget \"works\" without a modal route in the sense that it does nothing.",
        "createdAt" : "2017-02-21T22:22:40Z",
        "updatedAt" : "2017-02-21T22:22:40Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "841989767a026683c0c2068edb3841f8bd566b2f",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +73,77 @@\n  @override\n  Widget build(BuildContext context) => config.child;\n}"
  },
  {
    "id" : "61079e77-ef38-4a75-9ec2-baa0aaee1b9d",
    "prId" : 69563,
    "prUrl" : "https://github.com/flutter/flutter/pull/69563#pullrequestreview-521998878",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90149a41-0571-4b8c-9b36-90488bfeba85",
        "parentId" : null,
        "authorId" : "944c0c96-8dc6-43f1-afcd-d988bff0835d",
        "body" : "üëç ",
        "createdAt" : "2020-11-02T21:19:27Z",
        "updatedAt" : "2020-11-10T10:57:57Z",
        "lastEditedBy" : "944c0c96-8dc6-43f1-afcd-d988bff0835d",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dddb4813e57c62b6770868e5b556cc567309ffc",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +88,92 @@///    which this widget uses to register and unregister [onWillPop].\n///  * [Form], which provides an `onWillPop` callback that enables the form\n///    to veto a `pop` initiated by the app's back button.\n///\nclass WillPopScope extends StatefulWidget {"
  }
]