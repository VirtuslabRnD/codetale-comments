[
  {
    "id" : "2b4dd73d-abe0-4ed0-8e6c-3aac12ca6219",
    "prId" : 1309,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f28aa28-dea0-4e6c-aeb0-ed131d69fd0d",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "The debugger really is like a whole mini copy of the entire system.\n",
        "createdAt" : "2016-01-26T07:34:43Z",
        "updatedAt" : "2016-01-27T18:04:54Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a1788371bd78a74f763aab26bca87e92224cc7",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +14,18 @@import 'gesture_detector.dart';\n\nclass SemanticsDebugger extends StatefulComponent {\n  const SemanticsDebugger({ Key key, this.child }) : super(key: key);\n  final Widget child;"
  },
  {
    "id" : "4d37ce55-376f-4448-9db8-7f87c9c13f4b",
    "prId" : 4782,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e62a2a7b-cbf1-45b8-84bf-eeb6485c673b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "maybe add a TODO to the effect that we should ideally find a way to avoid walking the entire tree to do this\n",
        "createdAt" : "2016-06-28T19:44:13Z",
        "updatedAt" : "2016-06-28T19:45:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "72b220564a964ec972d1415ca5b568d5247e091f",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +319,323 @@  }\n\n  void _removeDetachedNodes() {\n    // TODO(abarth): We should be able to keep this table updated without\n    // walking the entire tree."
  },
  {
    "id" : "b9d7d2e9-40c1-40f3-9b0d-802474cea560",
    "prId" : 4808,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "275d4bea-8c32-4053-b6a9-a53b1f5faad6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "doing both seems a bit weird but ok\n",
        "createdAt" : "2016-07-01T19:27:40Z",
        "updatedAt" : "2016-07-01T20:07:36Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "38725013bf4f58e9479e49e18086f41cef9e088f",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +383,387 @@      } else {\n        _performAction(position, SemanticAction.increase);\n        _performAction(position, SemanticAction.scrollRight);\n      }\n    } else {"
  },
  {
    "id" : "806f7929-a6dd-44df-b6b4-7c9eb3b6cd2e",
    "prId" : 10570,
    "prUrl" : "https://github.com/flutter/flutter/pull/10570#pullrequestreview-42747877",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f653435-1f24-407f-a502-e93867909058",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Wow it's crazy that we don't cache these TextPainter objects.",
        "createdAt" : "2017-06-07T22:05:22Z",
        "updatedAt" : "2017-06-07T22:05:23Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "44ce58411180bd409d3070d1f321bcfd0be8e0ac",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +253,257 @@  final TextPainter textPainter = new TextPainter()\n    ..text = new TextSpan(style: _messageStyle, text: message)\n    ..textAlign = TextAlign.center\n    ..layout(maxWidth: rect.width);\n"
  }
]