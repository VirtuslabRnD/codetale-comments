[
  {
    "id" : "8600cbc5-8c72-431e-baf1-39e42ff0fae6",
    "prId" : 11067,
    "prUrl" : "https://github.com/flutter/flutter/pull/11067#pullrequestreview-47536711",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f61c3841-f6b5-433d-a7d5-a170628209d2",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "This seems like a common pattern (wanting to keep something alive because of running animations).  I wonder if we want a mixin that helps with that specifically.  You could just register your animations with it, and it could register the status listeners / read isAnimating itself.",
        "createdAt" : "2017-07-01T05:07:22Z",
        "updatedAt" : "2017-07-01T20:44:24Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "78b40ba6-2d79-4637-812f-da4f1ba7db72",
        "parentId" : "f61c3841-f6b5-433d-a7d5-a170628209d2",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "If you want to get fancy, it could be your ticker provider too since that will let it get all the animation controllers registered very succinctly.",
        "createdAt" : "2017-07-01T05:08:25Z",
        "updatedAt" : "2017-07-01T20:44:24Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "92b0f3b1-7105-4817-ae70-522fd1826ed5",
        "parentId" : "f61c3841-f6b5-433d-a7d5-a170628209d2",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I'm gonna pass on this for now. We only have three clients, and they're all a bit different from each other currently. If patterns emerge then we can address them subsequently.",
        "createdAt" : "2017-07-01T20:40:39Z",
        "updatedAt" : "2017-07-01T20:44:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "328807ef06a3cadf289dfc059e7b154c3a698ffe",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +186,190 @@\n  @override\n  bool get wantKeepAlive => _moveController?.isAnimating == true || _resizeController?.isAnimating == true;\n\n  @override"
  },
  {
    "id" : "413dc538-d140-4f54-9fc2-28851dcd1d35",
    "prId" : 26901,
    "prUrl" : "https://github.com/flutter/flutter/pull/26901#pullrequestreview-195288883",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c62c66e6-86a5-48d2-9782-6fcd9dc3373f",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Why the explicit `== true` here and below?",
        "createdAt" : "2019-01-22T23:40:58Z",
        "updatedAt" : "2019-01-22T23:57:38Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "c51a9497-d002-4587-9a23-9f235e386983",
        "parentId" : "c62c66e6-86a5-48d2-9782-6fcd9dc3373f",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Both null and false mean false. Null is convenient because showDialog() returns null if the dialog is modal and the user taps outside of the dialog.",
        "createdAt" : "2019-01-22T23:51:20Z",
        "updatedAt" : "2019-01-22T23:57:38Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e7a2c618a125f10a33e0e5b6877f47eae1081c5",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +407,411 @@      return;\n    _dragUnderway = false;\n    if (_moveController.isCompleted && await _confirmStartResizeAnimation() == true) {\n      _startResizeAnimation();\n      return;"
  },
  {
    "id" : "407fd749-743f-4c94-be9c-86d4f5c158e4",
    "prId" : 26901,
    "prUrl" : "https://github.com/flutter/flutter/pull/26901#pullrequestreview-195289178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed2b260c-8cd2-48f9-91a2-588ec95ba17a",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Would it make sense to explicitly say that a vetoed dismiss will not invoke onResize / onDismissed?",
        "createdAt" : "2019-01-22T23:42:59Z",
        "updatedAt" : "2019-01-22T23:57:38Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "e9feaf8e-da6a-4b17-a1c6-9c9f6219b32f",
        "parentId" : "ed2b260c-8cd2-48f9-91a2-588ec95ba17a",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Yes, good point.",
        "createdAt" : "2019-01-22T23:52:28Z",
        "updatedAt" : "2019-01-22T23:57:38Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e7a2c618a125f10a33e0e5b6877f47eae1081c5",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +116,120 @@  ///\n  /// If the returned Future<bool> completes true, then this widget will be\n  /// dismissed, otherwise it will be moved back to its original location.\n  ///\n  /// If the returned Future<bool> completes to false or null the [onResize]"
  },
  {
    "id" : "2de7cbff-36f8-44a0-b8fa-3ca4c29e3113",
    "prId" : 68987,
    "prUrl" : "https://github.com/flutter/flutter/pull/68987#pullrequestreview-533835407",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "911d1522-406f-43fc-9bc3-7a389b4d057f",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It seems like this should be a `late` variable however the analyzer isn't complaining, so I suppose the `late` qualifier isn't needed.",
        "createdAt" : "2020-11-18T20:11:40Z",
        "updatedAt" : "2020-11-18T20:11:58Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "26697e6f80cdb7f18c0e01c265cf333c48e72d71",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +434,438 @@    final double vx = velocity.pixelsPerSecond.dx;\n    final double vy = velocity.pixelsPerSecond.dy;\n    DismissDirection flingDirection;\n    // Verify that the fling is in the generally right direction and fast enough.\n    if (_directionIsXAxis) {"
  }
]