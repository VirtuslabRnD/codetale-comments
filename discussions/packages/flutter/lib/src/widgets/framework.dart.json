[
  {
    "id" : "fc7df564-d40a-47ff-9822-7bf364f78e1a",
    "prId" : 1299,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "211f9335-5f54-4aeb-a8d4-34479420bc56",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Is there any reason to pass `ourRuntimeType` here anymore?\n",
        "createdAt" : "2016-01-23T23:02:38Z",
        "updatedAt" : "2016-01-24T02:23:05Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "8753c5d1-9c23-483d-9a07-54769c0c0277",
        "parentId" : "211f9335-5f54-4aeb-a8d4-34479420bc56",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "There's exactly one custom or this entire notification system, `InkResponse`'s `State`, which does:\n\n``` dart\n  void dependenciesChanged(Type affectedWidgetType) {\n    if (affectedWidgetType == Theme && _lastHighlight != null)\n      _lastHighlight.color = Theme.of(context).highlightColor;\n  }\n```\n",
        "createdAt" : "2016-01-24T02:20:25Z",
        "updatedAt" : "2016-01-24T02:23:05Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "64734c28-2c5e-4855-8495-00a494ff317c",
        "parentId" : "211f9335-5f54-4aeb-a8d4-34479420bc56",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I've left this in. We can look at this API in a separate pass.\n",
        "createdAt" : "2016-01-24T02:31:09Z",
        "updatedAt" : "2016-01-24T02:31:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "db6a5dcd-4944-4f5f-bd17-90b9775ea9b0",
        "parentId" : "211f9335-5f54-4aeb-a8d4-34479420bc56",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "kk\n",
        "createdAt" : "2016-01-24T02:58:22Z",
        "updatedAt" : "2016-01-24T02:58:22Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "0903cb5fefab2241242e7a4eaaf74ff4fa51bc44",
    "line" : 211,
    "diffHunk" : "@@ -1,1 +1407,1411 @@    final Type ourRuntimeType = widget.runtimeType;\n    for (Element dependant in _dependants) {\n      dependant.dependenciesChanged(ourRuntimeType);\n      assert(() {\n        // check that it really is our descendant"
  },
  {
    "id" : "14b2c247-50ef-454d-9747-bf006d613f44",
    "prId" : 1400,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91457fd5-05cb-43ce-bd29-f74f1ddab10b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "the comment above is wrong (in particular, it explicitly says it does the work backwards)\n",
        "createdAt" : "2016-01-27T00:30:03Z",
        "updatedAt" : "2016-01-27T04:02:51Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e015a51f-4510-4197-accf-06b4233c7d3c",
        "parentId" : "91457fd5-05cb-43ce-bd29-f74f1ddab10b",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Fixed.\n",
        "createdAt" : "2016-01-27T04:08:34Z",
        "updatedAt" : "2016-01-27T04:08:34Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "05839e51cad9204f607ed7852beb0d3d86da1f55",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +1522,1526 @@    //     * Sync keyed items with the source if it exists, else with null.\n    // 5. Walk the bottom of the list again, syncing the nodes.\n    // 6. Sync null with any items in the list of keys that are still\n    //    mounted.\n"
  },
  {
    "id" : "9c09e6b5-7983-4f4a-9e5f-d9bc46fb1bb5",
    "prId" : 2508,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff8a1921-54ab-4815-863c-90bd7192d1d0",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This function has other customers; I guess they need to handle detachChild also in due course.\n",
        "createdAt" : "2016-03-08T23:39:48Z",
        "updatedAt" : "2016-03-08T23:39:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "cb24e2bb-e9f7-4d76-abbd-1503ec72f437",
        "parentId" : "ff8a1921-54ab-4815-863c-90bd7192d1d0",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, the changes here shouldn't be harmful to them, but they don't all support detachChild yet.\n",
        "createdAt" : "2016-03-08T23:40:32Z",
        "updatedAt" : "2016-03-08T23:40:32Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8483fb366d88c3734a51aedc9639830d724a783",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +1603,1607 @@\n    // Update the top of the list.\n    while ((oldChildrenTop <= oldChildrenBottom) && (newChildrenTop <= newChildrenBottom)) {\n      Element oldChild = oldChildren[oldChildrenTop];\n      Widget newWidget = newWidgets[newChildrenTop];"
  },
  {
    "id" : "e59ddc58-da13-4cc8-aa2e-48bf6286d658",
    "prId" : 3010,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af6898c8-02b1-4840-89ca-3fdcfb7d71c7",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Do we want to assert something about the state of the _owner field if the parent is null?  For example, perhaps its supposed to always be null.  Maybe we should assert that at the entry to this function?\n",
        "createdAt" : "2016-03-30T20:23:40Z",
        "updatedAt" : "2016-03-31T18:02:09Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "2bb61874-bef6-45c2-bba1-37c59682f914",
        "parentId" : "af6898c8-02b1-4840-89ca-3fdcfb7d71c7",
        "authorId" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "body" : "I was trying to avoid forcing an ordering to lines 168 and 169 in widgets/binding.dart.\n\nNow that I take a second look at this, though, I'm wondering if it would be easier just to pass the owner in the constructor. In that case, the assertion would be that if the parent is null, the owner field should already be non-null.\n",
        "createdAt" : "2016-03-31T17:32:14Z",
        "updatedAt" : "2016-03-31T18:02:09Z",
        "lastEditedBy" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "tags" : [
        ]
      },
      {
        "id" : "ed6b68f6-0922-4d4c-bf1d-a48ec8750f48",
        "parentId" : "af6898c8-02b1-4840-89ca-3fdcfb7d71c7",
        "authorId" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "body" : "Ah, I remember now, the constructor is called in a method whose signature would be disruptive to change.\n",
        "createdAt" : "2016-03-31T17:37:10Z",
        "updatedAt" : "2016-03-31T18:02:09Z",
        "lastEditedBy" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "tags" : [
        ]
      }
    ],
    "commit" : "9dfd5d402119d113fb9e306402b5f28aa5a9abb1",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +907,911 @@    _active = true;\n    if (parent != null) // Only assign ownership if the parent is non-null\n      _owner = parent.owner;\n    if (widget.key is GlobalKey) {\n      final GlobalKey key = widget.key;"
  },
  {
    "id" : "f9b78f31-e230-4f67-bb45-92302b85252e",
    "prId" : 3010,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c352a0a7-6227-4942-94af-8db754d82237",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "trivial nit: we normally put the property below the getter to avoid the dartdoc being sandwiched between the two.\n",
        "createdAt" : "2016-03-31T19:45:10Z",
        "updatedAt" : "2016-03-31T19:45:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9dfd5d402119d113fb9e306402b5f28aa5a9abb1",
    "line" : 169,
    "diffHunk" : "@@ -1,1 +808,812 @@  Widget _widget;\n\n  BuildOwner _owner;\n  /// The owner for this node (null if unattached).\n  BuildOwner get owner => _owner;"
  },
  {
    "id" : "e210fc57-2b14-4af8-9767-16dc53070662",
    "prId" : 3397,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "572f03cb-0e35-45ac-9569-1b1353de356d",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "If you make it a `///` dartdoc you can make `[ComponentElement._builder]` linkable.\n",
        "createdAt" : "2016-04-19T01:40:34Z",
        "updatedAt" : "2016-04-19T17:38:20Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "f566ea48-e0e1-43ef-83c6-53b47f6961dd",
        "parentId" : "572f03cb-0e35-45ac-9569-1b1353de356d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "_builder and _buildNothing are both privates so neither appears in the dartdocs.\n",
        "createdAt" : "2016-04-19T02:42:00Z",
        "updatedAt" : "2016-04-19T17:38:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "2fd28289-8f89-4e8e-bd83-8fe8436d910b",
        "parentId" : "572f03cb-0e35-45ac-9569-1b1353de356d",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "True, but IDEs still decorate them even if they don't make it into the public docs, e.g. in Atom you should still be able to Ctrl + Click on the link.\n",
        "createdAt" : "2016-04-19T03:58:37Z",
        "updatedAt" : "2016-04-19T17:38:20Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "f93b1fd8-ae82-4f83-b7b9-dbdc33d8d6d3",
        "parentId" : "572f03cb-0e35-45ac-9569-1b1353de356d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "IDEs can do whatever they want with any comment, with or without markup. I'm reluctant to use `///` style for privates because it gives a confusing mixed message in the code about whether something is considered part of the public interface or not.\n",
        "createdAt" : "2016-04-19T17:21:43Z",
        "updatedAt" : "2016-04-19T17:38:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f93945575fcc09ac8f2666ce5179bc323ae47cbc",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +1400,1404 @@typedef Widget IndexedBuilder(BuildContext context, int index);\n\n// See ComponentElement._builder.\nWidget _buildNothing(BuildContext context) => null;\n"
  },
  {
    "id" : "72f0705e-4a18-4913-ba74-86d8ebe30239",
    "prId" : 3546,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62e59e81-9e87-4998-ba7f-cbe37fc24972",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should probably check at some point whether the compiler is clever enough to elide the exception handling for finally blocks that end up empty\n",
        "createdAt" : "2016-04-25T23:50:17Z",
        "updatedAt" : "2016-04-25T23:50:17Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "845c6aa0754d9932e63ee0203e22b0f535a7f4d5",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +726,730 @@    } finally {\n      assert(() {\n        _debugStateLockLevel -= 1;\n        if (building) {\n          assert(_debugBuilding);"
  },
  {
    "id" : "2a2b430d-da45-4b43-87a7-e08b589cd0ba",
    "prId" : 4758,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07077e95-7949-41ea-bea5-f7988d43a9a8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "that won't work, what if the subclass isn't in this file? (see travis, for instance...)\n",
        "createdAt" : "2016-06-25T17:43:49Z",
        "updatedAt" : "2016-06-25T19:06:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "056f979b-f072-4bdb-9390-5828cfd7d0e5",
        "parentId" : "07077e95-7949-41ea-bea5-f7988d43a9a8",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "oh, i see, this forces people to LocalKey or GlobalKey. I guess I can live with that.\n",
        "createdAt" : "2016-06-25T17:44:34Z",
        "updatedAt" : "2016-06-25T19:06:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c224c03a-5791-4230-907e-b66a1697eafd",
        "parentId" : "07077e95-7949-41ea-bea5-f7988d43a9a8",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, I think it's better for StockRowPartKey to extend LocalKey.\n",
        "createdAt" : "2016-06-25T17:49:09Z",
        "updatedAt" : "2016-06-25T19:06:30Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfda4286486e2b3bea8bd393e74e1154babf3271",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +37,41 @@  /// Useful so that subclasses can call us, because the Key() factory\n  /// constructor shadows the implicit constructor.\n  const Key._();\n}\n"
  },
  {
    "id" : "06605aac-2d87-4000-97cb-b147d65d8331",
    "prId" : 4758,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c32d653-ae2f-44ee-a8fb-425e58510844",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this would be a good place to define state. i forget what i had but my definition is in my talk if you have the slides for that\n",
        "createdAt" : "2016-06-25T17:57:53Z",
        "updatedAt" : "2016-06-25T19:06:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfda4286486e2b3bea8bd393e74e1154babf3271",
    "line" : 397,
    "diffHunk" : "@@ -1,1 +472,476 @@\n/// A widget that has mutable state.\n///\n/// State is information (1) that can be read synchronously when the widget is\n/// built and (2) for which we will be notified when it changes."
  },
  {
    "id" : "8558f0d5-6a85-4d58-8022-ae05afc2be96",
    "prId" : 4762,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3aeb3e9-5751-451a-a8fd-5fa0e7b4f0b6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Is that true? Does any widget do network traffic on dependenciesChanged?\n",
        "createdAt" : "2016-06-26T21:54:16Z",
        "updatedAt" : "2016-06-26T22:18:33Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "72737ce9-1a4b-405b-9668-0ba5aeaf58b8",
        "parentId" : "e3aeb3e9-5751-451a-a8fd-5fa0e7b4f0b6",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "The only client I found outside of framework.dart was _ImageState, which uses this callback to call _resolveImage, which I think can trigger network traffic.  At least, that's the example I was trying to base this on.\n",
        "createdAt" : "2016-06-26T22:18:22Z",
        "updatedAt" : "2016-06-26T22:18:33Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "1e87e3f5-4749-467c-9804-fe6d0c4a9658",
        "parentId" : "e3aeb3e9-5751-451a-a8fd-5fa0e7b4f0b6",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ah, yeah. i wonder if that one works right if you move it in the tree... do we call dependenciesChanged in that case?\n",
        "createdAt" : "2016-06-26T22:22:41Z",
        "updatedAt" : "2016-06-26T22:22:41Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebfdc709b05985c385bb46116b5493661575e75d",
    "line" : 396,
    "diffHunk" : "@@ -1,1 +884,888 @@  /// this method because they need to do some expensive work (e.g., network\n  /// fetches) when their dependencies change, and that work would be too\n  /// expensive to do for every build.\n  @mustCallSuper\n  void dependenciesChanged() { }"
  },
  {
    "id" : "15dd08fb-b2a0-4705-b501-188aef355291",
    "prId" : 5558,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19b79423-8a1f-4f77-8556-71a748d0526b",
        "parentId" : null,
        "authorId" : "1dfcfd37-1c96-47ca-8167-0cce6cd12366",
        "body" : "Is it better to await the writeAsString as well, so that I/O errors can be caught?\n",
        "createdAt" : "2016-08-23T20:41:35Z",
        "updatedAt" : "2016-08-23T20:41:35Z",
        "lastEditedBy" : "1dfcfd37-1c96-47ca-8167-0cce6cd12366",
        "tags" : [
        ]
      },
      {
        "id" : "a41b8ab4-57db-4d9b-b863-7672c00e7670",
        "parentId" : "19b79423-8a1f-4f77-8556-71a748d0526b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "That's what that code does.\n",
        "createdAt" : "2016-08-23T23:03:34Z",
        "updatedAt" : "2016-08-23T23:03:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e500a7d147e6cdf11e7f9ffe2bad84e96f32a1c3",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +788,792 @@  ///   });\n  ///   final String dir = await PathProvider.getApplicationDocumentsDirectory();\n  ///   await new File('$dir/counter.txt').writeAsString('$_counter');\n  ///   return null;\n  /// }"
  },
  {
    "id" : "ab531522-de13-43e6-baa6-d9e4794072b1",
    "prId" : 5614,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "787d3663-fdc1-4452-9c0f-25ab0ce06e33",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This looks exactly right to me.\n",
        "createdAt" : "2016-08-26T18:22:00Z",
        "updatedAt" : "2016-08-26T19:29:15Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "5deae6b2e1ddb08e1db77603ce7f0f51240c6b04",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +1291,1295 @@          }\n        }\n        assert(!_dirtyElements.any((BuildableElement element) => element._active && element.dirty));\n      }, building: true);\n    } finally {"
  },
  {
    "id" : "7bc8beb9-0b8a-4f4b-ab69-309ef14917bd",
    "prId" : 5624,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75dd287b-51e0-4ddf-ae46-4bfe3e027d37",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I'm really pleased to see this get documented!\n",
        "createdAt" : "2016-08-26T23:02:12Z",
        "updatedAt" : "2016-08-29T17:32:02Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "0de4096c-e5a6-4dfb-9da5-ecc68f8a09bc",
        "parentId" : "75dd287b-51e0-4ddf-ae46-4bfe3e027d37",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you're welcome!\n",
        "createdAt" : "2016-08-27T00:50:23Z",
        "updatedAt" : "2016-08-29T17:32:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "79e11e2a8e9790e2ef2da640a10b742e39c0d2fe",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +1186,1190 @@typedef void ElementVisitor(Element element);\n\n/// A handle to the location of a widget in the widget tree.\n///\n/// This class presents a set of methods that can be used from"
  },
  {
    "id" : "64c5cd0e-7403-44f1-95b5-cadfff23d60f",
    "prId" : 5624,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af8ee4ef-5fac-4dd5-9351-1aa5edd9eb9e",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "first ancestor?\n",
        "createdAt" : "2016-08-26T23:09:12Z",
        "updatedAt" : "2016-08-29T17:32:02Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "bc71f7c5-d1bd-45a2-9983-857e49316737",
        "parentId" : "af8ee4ef-5fac-4dd5-9351-1aa5edd9eb9e",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "pretty sure it's the first descendant.\n",
        "createdAt" : "2016-08-29T16:30:21Z",
        "updatedAt" : "2016-08-29T17:32:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "79e11e2a8e9790e2ef2da640a10b742e39c0d2fe",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +1255,1259 @@  /// The current [RenderObject] for the widget. If the widget is a\n  /// [RenderObjectWidget], this is the render object that the widget created\n  /// for itself. Otherwise, it is the render object of the first descendant\n  /// [RenderObjectWidget].\n  ///"
  },
  {
    "id" : "d90acd3f-9ae1-41c4-ace4-c3b2c51b023d",
    "prId" : 5624,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f10ff87b-8bb6-4357-996f-f578aa157ebe",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The references to phases that follow are a little confusing since we haven't explained what all the phases are, how they're orchestrated, how a widget figures out what phase it's in, etc.\n",
        "createdAt" : "2016-08-26T23:13:18Z",
        "updatedAt" : "2016-08-29T17:32:02Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "b2cec7f7-d8d6-4fc9-9fea-b1d6ace54486",
        "parentId" : "f10ff87b-8bb6-4357-996f-f578aa157ebe",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I've added a bunch of docs about this in the binding and pointed this to them.\n",
        "createdAt" : "2016-08-29T17:15:39Z",
        "updatedAt" : "2016-08-29T17:32:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "79e11e2a8e9790e2ef2da640a10b742e39c0d2fe",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +1258,1262 @@  /// [RenderObjectWidget].\n  ///\n  /// This method will only return a valid result after the build phase is\n  /// complete. It is therefore not valid to call this from the [build] function\n  /// itself. It should only be called from interaction event handlers (e.g."
  },
  {
    "id" : "828e610b-1d8c-46ae-8218-b728609c0d6c",
    "prId" : 5752,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87bc2209-a816-4315-b1e4-d42405842e8f",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I probably would have written this iteratively rather than recursively but whatever.\n",
        "createdAt" : "2016-09-07T04:01:04Z",
        "updatedAt" : "2016-09-07T21:27:29Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "5cdee8a2-6e7f-4c2c-8161-bf531d540575",
        "parentId" : "87bc2209-a816-4315-b1e4-d42405842e8f",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This is actually a hook for a patch @HansMuller is working on where on some classes he's going to override this method.\n",
        "createdAt" : "2016-09-07T20:34:36Z",
        "updatedAt" : "2016-09-07T21:27:29Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "431e764e8b9179bf4e542b1c59ca4b07090e6e9b",
    "line" : 190,
    "diffHunk" : "@@ -1,1 +1648,1652 @@      return _parent._debugIsInScope(target);\n    return false;\n  }\n\n  RenderObject get renderObject {"
  },
  {
    "id" : "035862c1-2339-4166-9bdb-670aa6f09159",
    "prId" : 5944,
    "prUrl" : "https://github.com/flutter/flutter/pull/5944#pullrequestreview-666991",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "086575e2-f6c2-45dd-990c-d6155307b5af",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "The, rather than A?\n",
        "createdAt" : "2016-09-20T00:59:00Z",
        "updatedAt" : "2016-09-20T04:16:33Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "eaa711bc-0e9b-4306-b187-014bd6bcea4d",
        "parentId" : "086575e2-f6c2-45dd-990c-d6155307b5af",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "The widget can have many render objects associated with it because it can be inserted into the tree in many locations.\n",
        "createdAt" : "2016-09-20T01:12:52Z",
        "updatedAt" : "2016-09-20T04:16:33Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "893a854a411321311c44f93677ba01ae0ed3d0c3",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +1122,1126 @@  void updateRenderObject(BuildContext context, RenderObject renderObject) { }\n\n  /// A render object previously associated with this widget has been removed\n  /// from the tree. The given [RenderObject] will be of the same type as\n  /// returned by this object's [createRenderObject]."
  },
  {
    "id" : "373dc0ed-62d6-4301-8b61-8f9e0d6c6d4e",
    "prId" : 6339,
    "prUrl" : "https://github.com/flutter/flutter/pull/6339#pullrequestreview-4745308",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee85bb4e-fd56-460d-a75d-e44800de09f7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "shouldn't `StatefulWidget` here be `${widget.runtimeType}`?\n\nAlso the first line here should end with a period.\n",
        "createdAt" : "2016-10-18T19:42:54Z",
        "updatedAt" : "2016-10-18T19:42:54Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "78096204048564333bfa7a2d5431e75c5b457c2d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +2732,2736 @@      if (!_state._debugTypesAreRight(widget)) {\n        throw new FlutterError(\n          'StatefulWidget.createState must return a subtype of State<${widget.runtimeType}>\\n'\n          'The createState function for ${widget.runtimeType} returned a state '\n          'of type ${_state.runtimeType}, which is not a subtype of '"
  },
  {
    "id" : "b6b83d2b-fdf6-49c5-885a-0b159b771879",
    "prId" : 6355,
    "prUrl" : "https://github.com/flutter/flutter/pull/6355#pullrequestreview-4746238",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92a19523-45de-4799-85a7-aeefae746712",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "missing `)` \n",
        "createdAt" : "2016-10-18T19:48:13Z",
        "updatedAt" : "2016-10-18T19:48:13Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "68cbd43ed0281a5c61bf26f2c467159bcb4e75a4",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +1367,1371 @@  /// This getter will only return a valid result if [findRenderObject] actually\n  /// returns a [RenderBox]. If [findRenderObject] returns a render object that\n  /// is not a subtype of [RenderBox] (e.g., [RenderView], this getter will\n  /// throw an exception in checked mode and will return null in release mode.\n  ///"
  },
  {
    "id" : "f25deda0-64c1-4d5e-88ac-addf8cd6a21c",
    "prId" : 6355,
    "prUrl" : "https://github.com/flutter/flutter/pull/6355#pullrequestreview-4746405",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ecc80cde-8b98-4c79-a91d-4c09decd4b95",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "youet->yet\n",
        "createdAt" : "2016-10-18T19:49:11Z",
        "updatedAt" : "2016-10-18T19:49:11Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "68cbd43ed0281a5c61bf26f2c467159bcb4e75a4",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +2324,2328 @@          'The size of this render object has not yet been determined because '\n          'the framework is still in the process of building widgets, which '\n          'means the render tree for this frame has not youet been determined. '\n          'The size getter should only be called from paint callbacks or '\n          'interaction event handlers (e.g. gesture callbacks).\\n'"
  },
  {
    "id" : "5c8b3ae7-2176-481f-bf76-235fc77a7137",
    "prId" : 6355,
    "prUrl" : "https://github.com/flutter/flutter/pull/6355#pullrequestreview-4746518",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54776eed-d94e-4c74-a5bf-0607b73273b7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "associated\n",
        "createdAt" : "2016-10-18T19:49:45Z",
        "updatedAt" : "2016-10-18T19:49:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a27cf8ba-6572-4c32-816f-571638137faa",
        "parentId" : "54776eed-d94e-4c74-a5bf-0607b73273b7",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "twice\n",
        "createdAt" : "2016-10-18T19:49:49Z",
        "updatedAt" : "2016-10-18T19:49:49Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "68cbd43ed0281a5c61bf26f2c467159bcb4e75a4",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +2346,2350 @@          'Cannot get size without a render object.\\n'\n          'In order for an element to have a valid size, the element must have '\n          'an assoicated render object. This element does not have an assoicated '\n          'render object, which typically means that the size getter was called '\n          'too early in the pipeline (e.g., during the build phase) before the '"
  },
  {
    "id" : "a892a93d-4f79-44b9-b656-347ebde6fa3d",
    "prId" : 6355,
    "prUrl" : "https://github.com/flutter/flutter/pull/6355#pullrequestreview-4746650",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8dd25908-d489-4982-9f03-2d29cdb4f952",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "pahse -> phase\n",
        "createdAt" : "2016-10-18T19:50:34Z",
        "updatedAt" : "2016-10-18T19:50:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "68cbd43ed0281a5c61bf26f2c467159bcb4e75a4",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +2372,2376 @@          'this render object has not yet been through layout, which typically '\n          'means that the size getter was called too early in the pipeline '\n          '(e.g., during the build pahse) before the framework has determined '\n          'the size and position of the render objects during layout.\\n'\n          'The size getter was called for the following element:\\n'"
  },
  {
    "id" : "7514373b-f612-4641-af70-a4de08c6f8c6",
    "prId" : 7719,
    "prUrl" : "https://github.com/flutter/flutter/pull/7719#pullrequestreview-18983360",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e364d8f1-20f3-4ad0-a51b-fdea1142e250",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "const ?",
        "createdAt" : "2017-01-28T23:39:41Z",
        "updatedAt" : "2017-01-28T23:39:41Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "fa254d71-e228-4f41-994f-a52229a119bd",
        "parentId" : "e364d8f1-20f3-4ad0-a51b-fdea1142e250",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "You can't use const, because the T isn't const.",
        "createdAt" : "2017-01-28T23:40:55Z",
        "updatedAt" : "2017-01-28T23:40:55Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "1cf25865-b9f7-4629-8633-1a6dde3033e6",
        "parentId" : "e364d8f1-20f3-4ad0-a51b-fdea1142e250",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Makes sense.",
        "createdAt" : "2017-01-28T23:44:11Z",
        "updatedAt" : "2017-01-28T23:44:11Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "99567e14ac101c980b574e2d78ecf989639ac5ca",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +82,86 @@    // The crazy on the next line is a workaround for\n    // https://github.com/dart-lang/sdk/issues/28548\n    if (runtimeType == new _TypeLiteral<ValueKey<T>>().type)\n      return '[$valueString]';\n    return '[$T $valueString]';"
  },
  {
    "id" : "c1c01a34-c1cb-483a-b2ad-4dfeb1d418e4",
    "prId" : 8593,
    "prUrl" : "https://github.com/flutter/flutter/pull/8593#pullrequestreview-25387135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e1efef3-a005-49bd-bcf6-2effd8dcc55a",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Illfated is one word.  If there was something smaller than a nit, this would be it.",
        "createdAt" : "2017-03-06T22:45:08Z",
        "updatedAt" : "2017-03-07T23:37:37Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "da611dbe-3ae2-451a-bf9a-e13d6b70fe58",
        "parentId" : "6e1efef3-a005-49bd-bcf6-2effd8dcc55a",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I take it back [I looked it up]. It's ill-fated. My mistake.",
        "createdAt" : "2017-03-06T22:49:18Z",
        "updatedAt" : "2017-03-07T23:37:37Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "858dae2beaee15d2b46250980ae52da62193f54b",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +180,184 @@        assert(_registry[this].widget != null);\n        assert(element.widget.runtimeType != _registry[this].widget.runtimeType);\n        _debugIllFatedElements.add(_registry[this]);\n      }\n      return true;"
  },
  {
    "id" : "8d199aeb-9078-41f0-9d88-bf163b515ce5",
    "prId" : 8593,
    "prUrl" : "https://github.com/flutter/flutter/pull/8593#pullrequestreview-25388068",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b871328-54e3-4d0e-8704-73f8f709f261",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I haven't sorted out all of the logic here.",
        "createdAt" : "2017-03-06T22:53:52Z",
        "updatedAt" : "2017-03-07T23:37:37Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "858dae2beaee15d2b46250980ae52da62193f54b",
    "line" : 245,
    "diffHunk" : "@@ -1,1 +1940,1944 @@        _inactiveElements._unmountAll(); // this unregisters the GlobalKeys\n      });\n      assert(() {\n        try {\n          GlobalKey._debugVerifyIllFatedPopulation();"
  },
  {
    "id" : "9eda749d-9b04-4f71-8e18-81b1ba58a098",
    "prId" : 10282,
    "prUrl" : "https://github.com/flutter/flutter/pull/10282#pullrequestreview-39918562",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b79a4e0-0473-45e2-bbce-f09e3f3f1259",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Does `[@required]` linkify correctly?",
        "createdAt" : "2017-05-24T02:30:57Z",
        "updatedAt" : "2017-05-24T02:30:57Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "496afb14-b007-4c0e-9d27-1d57b37b3bff",
        "parentId" : "2b79a4e0-0473-45e2-bbce-f09e3f3f1259",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "No idea, I plan to check and fix it if not.",
        "createdAt" : "2017-05-24T03:09:08Z",
        "updatedAt" : "2017-05-24T03:09:08Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7084a105b8b6ee2ae226ba0f4ba17cd9e97304ae",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +538,542 @@///\n/// By convention, widget constructors only use named arguments. Named arguments\n/// can be marked as required using [@required]. Also by convention, the first\n/// argument is [key], and the last argument is `child`, `children`, or the\n/// equivalent."
  },
  {
    "id" : "e48fe37f-827e-47c5-b801-389b1d3ad47a",
    "prId" : 10619,
    "prUrl" : "https://github.com/flutter/flutter/pull/10619#pullrequestreview-43312357",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c801d7d-0bce-4f8c-a0a3-5f9ae53ceaec",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Why two blocks?",
        "createdAt" : "2017-06-11T06:01:01Z",
        "updatedAt" : "2017-06-11T06:28:56Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "2d857ce8-0159-4266-a8f9-0647c45db289",
        "parentId" : "2c801d7d-0bce-4f8c-a0a3-5f9ae53ceaec",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "The second block is classes that I'm hoping to eventually turn into actual sample code somewhere.",
        "createdAt" : "2017-06-11T06:25:53Z",
        "updatedAt" : "2017-06-11T06:28:56Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "71ff3cfd3c85601996638a2721a4a394d443d882",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +22,26 @@// void setState(VoidCallback fn) { }\n\n// Examples can assume:\n// abstract class RenderFrogJar extends RenderObject { }\n// abstract class FrogJar extends RenderObjectWidget { }"
  },
  {
    "id" : "fa3ff951-407f-4b80-88fb-cab9818bb180",
    "prId" : 11473,
    "prUrl" : "https://github.com/flutter/flutter/pull/11473#pullrequestreview-53685339",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9471d304-372a-450f-8276-21e585e560ad",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "[no action needed]: are the changes in this file related?",
        "createdAt" : "2017-08-02T00:38:54Z",
        "updatedAt" : "2017-08-07T20:53:53Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "ef955972-dd75-47dd-af79-5dd0d6fd188d",
        "parentId" : "9471d304-372a-450f-8276-21e585e560ad",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Only insofar as I made these changes in order to debug problems while doing the rest of it. :-)",
        "createdAt" : "2017-08-02T02:28:10Z",
        "updatedAt" : "2017-08-07T20:53:53Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a530b511376ce857a58cf38d19ab6c8389f9129",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +3114,3118 @@          'The size getter was called for the following element:\\n'\n          '  $this\\n'\n          'The associated render sliver was:\\n'\n          '  ${renderObject.toStringShallow(\"\\n  \")}'\n        );"
  },
  {
    "id" : "c1331f18-9783-48e0-81c5-0bb005a5e77f",
    "prId" : 12213,
    "prUrl" : "https://github.com/flutter/flutter/pull/12213#pullrequestreview-64703659",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db422893-60f9-47ba-b033-3cb406a9c62d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "these calls should be wrapped in asserts so that they don't cost anything in release builds",
        "createdAt" : "2017-09-22T21:27:19Z",
        "updatedAt" : "2017-09-22T21:27:19Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "70aa6fd9e4ab0c1a492eb8c0b9d50cc921dc57f8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +3288,3292 @@  void didChangeDependencies() {\n    assert(_active); // otherwise markNeedsBuild is a no-op\n    _debugCheckOwnerBuildTargetExists('didChangeDependencies');\n    markNeedsBuild();\n  }"
  },
  {
    "id" : "0a2883bd-b569-4b41-9761-f03636a5fbd1",
    "prId" : 12213,
    "prUrl" : "https://github.com/flutter/flutter/pull/12213#pullrequestreview-64703736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88e8b18b-9f0c-4496-9e73-af5d1f4a5539",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "generally we don't include blank lines in the error messages; we rely on newlines alone being paragraph breaks.",
        "createdAt" : "2017-09-22T21:27:44Z",
        "updatedAt" : "2017-09-22T21:27:44Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "70aa6fd9e4ab0c1a492eb8c0b9d50cc921dc57f8",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +3298,3302 @@          '$methodName for ${widget.runtimeType} was called at an '\n          'inappropriate time.\\n'\n          '\\n'\n          'It may only be called while the widgets are being built. A possible '\n          'cause of this error is when $methodName is called during '"
  },
  {
    "id" : "2241e04d-484d-4d2a-90e0-dcbb25c64b0b",
    "prId" : 12213,
    "prUrl" : "https://github.com/flutter/flutter/pull/12213#pullrequestreview-64703863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6c4831f-89fc-4e39-8b78-a97870a9dbd8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you may want to specifically verify that it's actually `this`?",
        "createdAt" : "2017-09-22T21:28:23Z",
        "updatedAt" : "2017-09-22T21:28:23Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "70aa6fd9e4ab0c1a492eb8c0b9d50cc921dc57f8",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +3294,3298 @@  void _debugCheckOwnerBuildTargetExists(String methodName) {\n    assert(() {\n      if (owner._debugCurrentBuildTarget == null) {\n        throw new FlutterError(\n          '$methodName for ${widget.runtimeType} was called at an '"
  },
  {
    "id" : "cb718a16-3aee-493e-a818-b6b7e75687a6",
    "prId" : 13019,
    "prUrl" : "https://github.com/flutter/flutter/pull/13019#pullrequestreview-76923829",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cafcce5-f2ee-4351-b216-24e32f5f52e2",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "is that not what the inherited operator == does?",
        "createdAt" : "2017-11-15T18:55:25Z",
        "updatedAt" : "2017-11-15T20:45:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a5a253e7-eeea-4449-9cad-77b91d45cc52",
        "parentId" : "0cafcce5-f2ee-4351-b216-24e32f5f52e2",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "I believe so, but the linter says if you overload `hashCode` you must also overload `operator==`.",
        "createdAt" : "2017-11-15T20:26:32Z",
        "updatedAt" : "2017-11-15T20:45:26Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "76c6b0a0-7cd8-4db3-8ae0-c89b41c248f7",
        "parentId" : "0cafcce5-f2ee-4351-b216-24e32f5f52e2",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "fair enough. i guess this is no worse than an `// ignore` would be.",
        "createdAt" : "2017-11-15T20:44:33Z",
        "updatedAt" : "2017-11-15T20:45:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "35df08a4a04a3bee6dc4e70e067761b43634d9d5",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +2511,2515 @@  // used with `InheritedWidgets`.\n  @override\n  bool operator ==(Object other) => identical(this, other);\n\n  // Custom implementation of hash code optimized for the \".of\" pattern used"
  },
  {
    "id" : "7522ae17-f2cd-4279-80fd-8225bd3817c8",
    "prId" : 19739,
    "prUrl" : "https://github.com/flutter/flutter/pull/19739#pullrequestreview-151195192",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7cc87312-529d-457e-b827-f014ed85aa62",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "can you `assert(_debugLifecycleState == _ElementLifecycle.inactive)` in this case?",
        "createdAt" : "2018-08-27T19:53:18Z",
        "updatedAt" : "2018-08-30T23:14:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "f884cfc2-f8d2-4152-a7b8-9bb2a0b7fcc1",
        "parentId" : "7cc87312-529d-457e-b827-f014ed85aa62",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It's not necessarily inactive (yet) at this point.\r\n\r\nThe element's _parent is null if InheritFromWidgetOfExactType is called from a State.deactivate() override. FormFieldState does this:\r\n\r\n```\r\n  @override\r\n  void deactivate() {\r\n    Form.of(context)?._unregister(this);\r\n    super.deactivate();\r\n  }\r\n```\r\n\r\nThe `_unregister()` method is trying to remove the field from its form's list of fields.\r\n\r\nThe deactivate() method is called by deactivateChild() after the child's parent is set to null but before _debugLifecycleState is changed to  _ElementLifecycle.inactive at the end of Element.deactivate():\r\n\r\n```\r\n  void deactivate() {\r\n    assert(_debugLifecycleState == _ElementLifecycle.active);\r\n    ...\r\n    assert(() { _debugLifecycleState = _ElementLifecycle.inactive; return true; }());\r\n  }\r\n```\r\n",
        "createdAt" : "2018-08-29T18:32:51Z",
        "updatedAt" : "2018-08-30T23:14:31Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "b1399669-ec0a-4fd1-8b2c-7ddb2d5b5189",
        "parentId" : "7cc87312-529d-457e-b827-f014ed85aa62",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I wonder if we could add another lifecycle state for this intermediate mode...",
        "createdAt" : "2018-08-30T21:47:37Z",
        "updatedAt" : "2018-08-30T23:14:31Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc5cf5decc5f9cf53f554cf29b8738910e61e6c1",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +3249,3253 @@    assert(() {\n      if (_parent == null) {\n        // We're being deactivated, see deactivateChild()\n        return true;\n      }"
  },
  {
    "id" : "7c8e3c53-9487-42bc-a66d-9b7b0ff2c6f5",
    "prId" : 23393,
    "prUrl" : "https://github.com/flutter/flutter/pull/23393#pullrequestreview-168663332",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a94d5a61-35a2-4154-8753-65025158e97e",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Now it calls `updated` which calls `notifyClients` by default.\r\n",
        "createdAt" : "2018-10-24T17:45:31Z",
        "updatedAt" : "2018-10-27T22:38:20Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "547b898f-caaa-4cc6-b37f-8c421a84573c",
        "parentId" : "a94d5a61-35a2-4154-8753-65025158e97e",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This _is_ updated.",
        "createdAt" : "2018-10-26T03:49:09Z",
        "updatedAt" : "2018-10-27T22:38:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5b6d65bba34208c6a67c00a6bbea8ac0ecb1986",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +4210,4214 @@  /// Called by [update], immediately prior to [build].\n  ///\n  /// Calls [notifyClients] to actually trigger the notifications.\n  @override\n  void updated(InheritedWidget oldWidget) {"
  },
  {
    "id" : "2dad5863-448b-41f3-8bcc-044f9a37a22d",
    "prId" : 23393,
    "prUrl" : "https://github.com/flutter/flutter/pull/23393#pullrequestreview-168672299",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64579731-b196-42e9-856a-bcd6ffc5740e",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : " I suppose `updateShouldNotify` is now a bit of a misnomer, since notifyClients is only called by default.  I'm not suggesting that the method should be called `updateShouldCallUpdated` though.",
        "createdAt" : "2018-10-24T17:46:21Z",
        "updatedAt" : "2018-10-27T22:38:20Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "02e8990d-305b-4655-b2ea-1ccf99d52b50",
        "parentId" : "64579731-b196-42e9-856a-bcd6ffc5740e",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I think from the perspective of people using the API, it's still conceptually more useful to think of it as a method that says whether to send the notifications.",
        "createdAt" : "2018-10-26T05:04:55Z",
        "updatedAt" : "2018-10-27T22:38:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5b6d65bba34208c6a67c00a6bbea8ac0ecb1986",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +4213,4217 @@  @override\n  void updated(InheritedWidget oldWidget) {\n    if (widget.updateShouldNotify(oldWidget))\n      super.updated(oldWidget);\n  }"
  },
  {
    "id" : "36ad574e-8e98-4f58-a9b7-396bd2d8989e",
    "prId" : 26900,
    "prUrl" : "https://github.com/flutter/flutter/pull/26900#pullrequestreview-196646377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b576e1c-1d50-4fae-bff0-9af479333747",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I believe Image only uses State.reassemble. Mentioning that here may be misleading.",
        "createdAt" : "2019-01-25T18:34:54Z",
        "updatedAt" : "2019-01-29T01:27:28Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4d397426011ce6390965440d4b2a925f53c8419",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +2604,2608 @@  ///  * [State.reassemble]\n  ///  * [BindingBase.reassembleApplication]\n  ///  * [Image], which uses this to reload images.\n  @mustCallSuper\n  @protected"
  },
  {
    "id" : "e1e1b13e-3a6f-46a7-99ec-f9bef55ff29f",
    "prId" : 26900,
    "prUrl" : "https://github.com/flutter/flutter/pull/26900#pullrequestreview-196646377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3800347-499f-4a78-908b-3bcb9d2bd4e5",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This should probably include a link to State.reassemble in the see also section.",
        "createdAt" : "2019-01-25T18:35:19Z",
        "updatedAt" : "2019-01-29T01:27:28Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4d397426011ce6390965440d4b2a925f53c8419",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +2607,2611 @@  @mustCallSuper\n  @protected\n  void reassemble() {\n    markNeedsBuild();\n    visitChildren((Element child) {"
  },
  {
    "id" : "6f369f0c-47cd-457e-bc24-c106f3f16c67",
    "prId" : 26900,
    "prUrl" : "https://github.com/flutter/flutter/pull/26900#pullrequestreview-196646377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2be95b37-7385-4174-9126-beb8f4be50fc",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This should probably include a link to Element.reassemble in the see also section.",
        "createdAt" : "2019-01-25T18:35:32Z",
        "updatedAt" : "2019-01-29T01:27:28Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4d397426011ce6390965440d4b2a925f53c8419",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +1030,1034 @@  void didUpdateWidget(covariant T oldWidget) { }\n\n  /// {@macro flutter.widgets.reassemble}\n  ///\n  /// In addition to this method being invoked, it is guaranteed that the"
  },
  {
    "id" : "cd2b3f0d-b6b3-4eab-943f-161ffb360bc2",
    "prId" : 30814,
    "prUrl" : "https://github.com/flutter/flutter/pull/30814#pullrequestreview-224689939",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14be05e4-7f68-400f-b102-524eb98099fd",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "[Sorry to be pedantic.] Constructors can have named parameters. When a constructor is called the values of those parameters are called the constructor's arguments. So all that to say: arguments => parameters here. Note also: it's very unlikely that we're consistent about this terminology in the rest of the API doc.",
        "createdAt" : "2019-04-09T22:43:19Z",
        "updatedAt" : "2019-04-09T23:14:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d65cfc8e2b7219eaf6410323a1ef9885f6837a9",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +493,497 @@/// The following is a skeleton of a stateless widget subclass called `GreenFrog`.\n///\n/// Normally, widgets have more constructor arguments, each of which corresponds\n/// to a `final` property.\n///"
  },
  {
    "id" : "f203f92c-1ede-43e8-a299-328492ce8bac",
    "prId" : 32511,
    "prUrl" : "https://github.com/flutter/flutter/pull/32511#pullrequestreview-257183469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20c9e976-04d9-4519-967e-42fae7a2dd8c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i like how this ends up working, very nice",
        "createdAt" : "2019-07-02T22:36:07Z",
        "updatedAt" : "2019-07-09T00:37:26Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac71ca57fa2bddd6681a7a5de386c129fb4abca0",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2345,2349 @@            stack,\n            informationCollector: () sync* {\n              yield DiagnosticsDebugCreator(DebugCreator(_dirtyElements[index]));\n              yield _dirtyElements[index].describeElement('The element being rebuilt at the time was index $index of $dirtyCount');\n            },"
  },
  {
    "id" : "dc6c5389-fb47-4ef2-b871-d23c86ad445c",
    "prId" : 34012,
    "prUrl" : "https://github.com/flutter/flutter/pull/34012#pullrequestreview-247983006",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d1656f8-828c-4963-a776-fd14aefb5bb0",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "thanks for cleaning this up!",
        "createdAt" : "2019-06-11T07:01:24Z",
        "updatedAt" : "2019-06-13T16:04:50Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "0062b20a79a0ee4078d6bbaab2e686cb33b3e317",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +3696,3700 @@  @override\n  Map<String, Object> toJsonMap(DiagnosticsSerializationDelegate delegate) {\n    final Map<String, Object> json = super.toJsonMap(delegate);\n    final Element element = value;\n    json['widgetRuntimeType'] = element.widget?.runtimeType?.toString();"
  },
  {
    "id" : "97f45ea1-5c0e-413c-b690-42743281b250",
    "prId" : 34684,
    "prUrl" : "https://github.com/flutter/flutter/pull/34684#pullrequestreview-251832789",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1d275fb-3ea7-4065-8ae6-fafd7081bff6",
        "parentId" : null,
        "authorId" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "body" : "I guess we don't need to qualify `describeElement` with `parent` here?",
        "createdAt" : "2019-06-19T15:05:36Z",
        "updatedAt" : "2019-06-20T16:28:26Z",
        "lastEditedBy" : "3fc29887-e563-4ced-9960-26034ba59f7b",
        "tags" : [
        ]
      },
      {
        "id" : "abba978b-befa-402b-946b-8c0ed05b3489",
        "parentId" : "d1d275fb-3ea7-4065-8ae6-fafd7081bff6",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "This code looks consistent with the previous error message which was describing the parent. If the `parent` was removed the error would be describing a describing the widget with the key not its parent.\r\n```dart\r\n'The parent of the widgets with that key was:\\n  $parent\\n'\r\n```\r\nbecame \r\n```dart\r\nparent.describeElement('The parent of the widgets with that key was'),\r\n```",
        "createdAt" : "2019-06-19T16:48:33Z",
        "updatedAt" : "2019-06-20T16:28:26Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "c613e28887ca46114480ea4f7170cc692c0b89c2",
    "line" : 316,
    "diffHunk" : "@@ -1,1 +3031,3035 @@            ErrorSummary('A GlobalKey was used multiple times inside one widget\\'s child list.'),\n            DiagnosticsProperty<GlobalKey>('The offending GlobalKey was', key),\n            parent.describeElement('The parent of the widgets with that key was'),\n            element.describeElement('The first child to get instantiated with that key became'),\n            DiagnosticsProperty<Widget>('The second child that was to be instantiated with that key was', widget, style: DiagnosticsTreeStyle.errorProperty),"
  },
  {
    "id" : "a3b03c1e-70d9-43e3-b648-c34f17374f3a",
    "prId" : 37187,
    "prUrl" : "https://github.com/flutter/flutter/pull/37187#pullrequestreview-268075943",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3acc120e-f507-48ec-9e20-f89b5715f27c",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2019-07-29T22:36:10Z",
        "updatedAt" : "2019-07-29T23:07:48Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2a76461b922d2967a567f00af71eee8a12e6068",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +1691,1695 @@          throw FlutterError(\n            \"$runtimeType's children must not contain any null values, \"\n            'but a null value was found at index $index'\n          );\n        }"
  }
]