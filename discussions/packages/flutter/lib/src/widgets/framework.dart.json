[
  {
    "id" : "fc7df564-d40a-47ff-9822-7bf364f78e1a",
    "prId" : 1299,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "211f9335-5f54-4aeb-a8d4-34479420bc56",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Is there any reason to pass `ourRuntimeType` here anymore?\n",
        "createdAt" : "2016-01-23T23:02:38Z",
        "updatedAt" : "2016-01-24T02:23:05Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "8753c5d1-9c23-483d-9a07-54769c0c0277",
        "parentId" : "211f9335-5f54-4aeb-a8d4-34479420bc56",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "There's exactly one custom or this entire notification system, `InkResponse`'s `State`, which does:\n\n``` dart\n  void dependenciesChanged(Type affectedWidgetType) {\n    if (affectedWidgetType == Theme && _lastHighlight != null)\n      _lastHighlight.color = Theme.of(context).highlightColor;\n  }\n```\n",
        "createdAt" : "2016-01-24T02:20:25Z",
        "updatedAt" : "2016-01-24T02:23:05Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "64734c28-2c5e-4855-8495-00a494ff317c",
        "parentId" : "211f9335-5f54-4aeb-a8d4-34479420bc56",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I've left this in. We can look at this API in a separate pass.\n",
        "createdAt" : "2016-01-24T02:31:09Z",
        "updatedAt" : "2016-01-24T02:31:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "db6a5dcd-4944-4f5f-bd17-90b9775ea9b0",
        "parentId" : "211f9335-5f54-4aeb-a8d4-34479420bc56",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "kk\n",
        "createdAt" : "2016-01-24T02:58:22Z",
        "updatedAt" : "2016-01-24T02:58:22Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "0903cb5fefab2241242e7a4eaaf74ff4fa51bc44",
    "line" : 211,
    "diffHunk" : "@@ -1,1 +1407,1411 @@    final Type ourRuntimeType = widget.runtimeType;\n    for (Element dependant in _dependants) {\n      dependant.dependenciesChanged(ourRuntimeType);\n      assert(() {\n        // check that it really is our descendant"
  },
  {
    "id" : "14b2c247-50ef-454d-9747-bf006d613f44",
    "prId" : 1400,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91457fd5-05cb-43ce-bd29-f74f1ddab10b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "the comment above is wrong (in particular, it explicitly says it does the work backwards)\n",
        "createdAt" : "2016-01-27T00:30:03Z",
        "updatedAt" : "2016-01-27T04:02:51Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e015a51f-4510-4197-accf-06b4233c7d3c",
        "parentId" : "91457fd5-05cb-43ce-bd29-f74f1ddab10b",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Fixed.\n",
        "createdAt" : "2016-01-27T04:08:34Z",
        "updatedAt" : "2016-01-27T04:08:34Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "05839e51cad9204f607ed7852beb0d3d86da1f55",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +1522,1526 @@    //     * Sync keyed items with the source if it exists, else with null.\n    // 5. Walk the bottom of the list again, syncing the nodes.\n    // 6. Sync null with any items in the list of keys that are still\n    //    mounted.\n"
  },
  {
    "id" : "9c09e6b5-7983-4f4a-9e5f-d9bc46fb1bb5",
    "prId" : 2508,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff8a1921-54ab-4815-863c-90bd7192d1d0",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This function has other customers; I guess they need to handle detachChild also in due course.\n",
        "createdAt" : "2016-03-08T23:39:48Z",
        "updatedAt" : "2016-03-08T23:39:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "cb24e2bb-e9f7-4d76-abbd-1503ec72f437",
        "parentId" : "ff8a1921-54ab-4815-863c-90bd7192d1d0",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, the changes here shouldn't be harmful to them, but they don't all support detachChild yet.\n",
        "createdAt" : "2016-03-08T23:40:32Z",
        "updatedAt" : "2016-03-08T23:40:32Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8483fb366d88c3734a51aedc9639830d724a783",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +1603,1607 @@\n    // Update the top of the list.\n    while ((oldChildrenTop <= oldChildrenBottom) && (newChildrenTop <= newChildrenBottom)) {\n      Element oldChild = oldChildren[oldChildrenTop];\n      Widget newWidget = newWidgets[newChildrenTop];"
  },
  {
    "id" : "e59ddc58-da13-4cc8-aa2e-48bf6286d658",
    "prId" : 3010,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af6898c8-02b1-4840-89ca-3fdcfb7d71c7",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Do we want to assert something about the state of the _owner field if the parent is null?  For example, perhaps its supposed to always be null.  Maybe we should assert that at the entry to this function?\n",
        "createdAt" : "2016-03-30T20:23:40Z",
        "updatedAt" : "2016-03-31T18:02:09Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "2bb61874-bef6-45c2-bba1-37c59682f914",
        "parentId" : "af6898c8-02b1-4840-89ca-3fdcfb7d71c7",
        "authorId" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "body" : "I was trying to avoid forcing an ordering to lines 168 and 169 in widgets/binding.dart.\n\nNow that I take a second look at this, though, I'm wondering if it would be easier just to pass the owner in the constructor. In that case, the assertion would be that if the parent is null, the owner field should already be non-null.\n",
        "createdAt" : "2016-03-31T17:32:14Z",
        "updatedAt" : "2016-03-31T18:02:09Z",
        "lastEditedBy" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "tags" : [
        ]
      },
      {
        "id" : "ed6b68f6-0922-4d4c-bf1d-a48ec8750f48",
        "parentId" : "af6898c8-02b1-4840-89ca-3fdcfb7d71c7",
        "authorId" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "body" : "Ah, I remember now, the constructor is called in a method whose signature would be disruptive to change.\n",
        "createdAt" : "2016-03-31T17:37:10Z",
        "updatedAt" : "2016-03-31T18:02:09Z",
        "lastEditedBy" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "tags" : [
        ]
      }
    ],
    "commit" : "9dfd5d402119d113fb9e306402b5f28aa5a9abb1",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +907,911 @@    _active = true;\n    if (parent != null) // Only assign ownership if the parent is non-null\n      _owner = parent.owner;\n    if (widget.key is GlobalKey) {\n      final GlobalKey key = widget.key;"
  },
  {
    "id" : "f9b78f31-e230-4f67-bb45-92302b85252e",
    "prId" : 3010,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c352a0a7-6227-4942-94af-8db754d82237",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "trivial nit: we normally put the property below the getter to avoid the dartdoc being sandwiched between the two.\n",
        "createdAt" : "2016-03-31T19:45:10Z",
        "updatedAt" : "2016-03-31T19:45:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9dfd5d402119d113fb9e306402b5f28aa5a9abb1",
    "line" : 169,
    "diffHunk" : "@@ -1,1 +808,812 @@  Widget _widget;\n\n  BuildOwner _owner;\n  /// The owner for this node (null if unattached).\n  BuildOwner get owner => _owner;"
  },
  {
    "id" : "e210fc57-2b14-4af8-9767-16dc53070662",
    "prId" : 3397,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "572f03cb-0e35-45ac-9569-1b1353de356d",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "If you make it a `///` dartdoc you can make `[ComponentElement._builder]` linkable.\n",
        "createdAt" : "2016-04-19T01:40:34Z",
        "updatedAt" : "2016-04-19T17:38:20Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "f566ea48-e0e1-43ef-83c6-53b47f6961dd",
        "parentId" : "572f03cb-0e35-45ac-9569-1b1353de356d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "_builder and _buildNothing are both privates so neither appears in the dartdocs.\n",
        "createdAt" : "2016-04-19T02:42:00Z",
        "updatedAt" : "2016-04-19T17:38:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "2fd28289-8f89-4e8e-bd83-8fe8436d910b",
        "parentId" : "572f03cb-0e35-45ac-9569-1b1353de356d",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "True, but IDEs still decorate them even if they don't make it into the public docs, e.g. in Atom you should still be able to Ctrl + Click on the link.\n",
        "createdAt" : "2016-04-19T03:58:37Z",
        "updatedAt" : "2016-04-19T17:38:20Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "f93b1fd8-ae82-4f83-b7b9-dbdc33d8d6d3",
        "parentId" : "572f03cb-0e35-45ac-9569-1b1353de356d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "IDEs can do whatever they want with any comment, with or without markup. I'm reluctant to use `///` style for privates because it gives a confusing mixed message in the code about whether something is considered part of the public interface or not.\n",
        "createdAt" : "2016-04-19T17:21:43Z",
        "updatedAt" : "2016-04-19T17:38:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f93945575fcc09ac8f2666ce5179bc323ae47cbc",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +1400,1404 @@typedef Widget IndexedBuilder(BuildContext context, int index);\n\n// See ComponentElement._builder.\nWidget _buildNothing(BuildContext context) => null;\n"
  },
  {
    "id" : "72f0705e-4a18-4913-ba74-86d8ebe30239",
    "prId" : 3546,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62e59e81-9e87-4998-ba7f-cbe37fc24972",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "we should probably check at some point whether the compiler is clever enough to elide the exception handling for finally blocks that end up empty\n",
        "createdAt" : "2016-04-25T23:50:17Z",
        "updatedAt" : "2016-04-25T23:50:17Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "845c6aa0754d9932e63ee0203e22b0f535a7f4d5",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +726,730 @@    } finally {\n      assert(() {\n        _debugStateLockLevel -= 1;\n        if (building) {\n          assert(_debugBuilding);"
  },
  {
    "id" : "2a2b430d-da45-4b43-87a7-e08b589cd0ba",
    "prId" : 4758,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07077e95-7949-41ea-bea5-f7988d43a9a8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "that won't work, what if the subclass isn't in this file? (see travis, for instance...)\n",
        "createdAt" : "2016-06-25T17:43:49Z",
        "updatedAt" : "2016-06-25T19:06:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "056f979b-f072-4bdb-9390-5828cfd7d0e5",
        "parentId" : "07077e95-7949-41ea-bea5-f7988d43a9a8",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "oh, i see, this forces people to LocalKey or GlobalKey. I guess I can live with that.\n",
        "createdAt" : "2016-06-25T17:44:34Z",
        "updatedAt" : "2016-06-25T19:06:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c224c03a-5791-4230-907e-b66a1697eafd",
        "parentId" : "07077e95-7949-41ea-bea5-f7988d43a9a8",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, I think it's better for StockRowPartKey to extend LocalKey.\n",
        "createdAt" : "2016-06-25T17:49:09Z",
        "updatedAt" : "2016-06-25T19:06:30Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfda4286486e2b3bea8bd393e74e1154babf3271",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +37,41 @@  /// Useful so that subclasses can call us, because the Key() factory\n  /// constructor shadows the implicit constructor.\n  const Key._();\n}\n"
  },
  {
    "id" : "06605aac-2d87-4000-97cb-b147d65d8331",
    "prId" : 4758,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c32d653-ae2f-44ee-a8fb-425e58510844",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this would be a good place to define state. i forget what i had but my definition is in my talk if you have the slides for that\n",
        "createdAt" : "2016-06-25T17:57:53Z",
        "updatedAt" : "2016-06-25T19:06:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfda4286486e2b3bea8bd393e74e1154babf3271",
    "line" : 397,
    "diffHunk" : "@@ -1,1 +472,476 @@\n/// A widget that has mutable state.\n///\n/// State is information (1) that can be read synchronously when the widget is\n/// built and (2) for which we will be notified when it changes."
  },
  {
    "id" : "8558f0d5-6a85-4d58-8022-ae05afc2be96",
    "prId" : 4762,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3aeb3e9-5751-451a-a8fd-5fa0e7b4f0b6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Is that true? Does any widget do network traffic on dependenciesChanged?\n",
        "createdAt" : "2016-06-26T21:54:16Z",
        "updatedAt" : "2016-06-26T22:18:33Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "72737ce9-1a4b-405b-9668-0ba5aeaf58b8",
        "parentId" : "e3aeb3e9-5751-451a-a8fd-5fa0e7b4f0b6",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "The only client I found outside of framework.dart was _ImageState, which uses this callback to call _resolveImage, which I think can trigger network traffic.  At least, that's the example I was trying to base this on.\n",
        "createdAt" : "2016-06-26T22:18:22Z",
        "updatedAt" : "2016-06-26T22:18:33Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "1e87e3f5-4749-467c-9804-fe6d0c4a9658",
        "parentId" : "e3aeb3e9-5751-451a-a8fd-5fa0e7b4f0b6",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ah, yeah. i wonder if that one works right if you move it in the tree... do we call dependenciesChanged in that case?\n",
        "createdAt" : "2016-06-26T22:22:41Z",
        "updatedAt" : "2016-06-26T22:22:41Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebfdc709b05985c385bb46116b5493661575e75d",
    "line" : 396,
    "diffHunk" : "@@ -1,1 +884,888 @@  /// this method because they need to do some expensive work (e.g., network\n  /// fetches) when their dependencies change, and that work would be too\n  /// expensive to do for every build.\n  @mustCallSuper\n  void dependenciesChanged() { }"
  }
]