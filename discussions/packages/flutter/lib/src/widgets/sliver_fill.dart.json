[
  {
    "id" : "02edf124-49c3-4292-806b-436b244157de",
    "prId" : 47379,
    "prUrl" : "https://github.com/flutter/flutter/pull/47379#pullrequestreview-338981263",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d706e3e-62b8-45f7-b5d2-dc6b9b46c787",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "(the jumping overscroll glow in this animation looks strange)",
        "createdAt" : "2020-01-06T20:47:48Z",
        "updatedAt" : "2020-01-06T22:20:57Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "e8a01389-c338-42ce-83e5-ca628f25890e",
        "parentId" : "5d706e3e-62b8-45f7-b5d2-dc6b9b46c787",
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "I will open a PR to update the animation in assets-for-api-docs. I am not sure why it skips like that.",
        "createdAt" : "2020-01-06T22:15:23Z",
        "updatedAt" : "2020-01-06T22:20:57Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "a2200b65-1011-4217-b2ab-56ba0f0f841b",
        "parentId" : "5d706e3e-62b8-45f7-b5d2-dc6b9b46c787",
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "https://github.com/flutter/assets-for-api-docs/pull/110 :)",
        "createdAt" : "2020-01-07T00:57:43Z",
        "updatedAt" : "2020-01-07T00:57:43Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a434fb619a6ecffbb87d5ace5da2ae5544b8c59",
    "line" : 184,
    "diffHunk" : "@@ -1,1 +182,186 @@/// main axis extent of the viewport.\n///\n/// {@animation 250 500 https://flutter.github.io/assets-for-api-docs/assets/widgets/sliver_fill_remaining_sizes_child.mp4}\n///\n/// {@tool snippet --template=stateless_widget_scaffold}"
  },
  {
    "id" : "d3b78db2-eb52-454d-bb28-2388bf8005cc",
    "prId" : 48207,
    "prUrl" : "https://github.com/flutter/flutter/pull/48207#pullrequestreview-340365158",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5c0d1cc-af71-473a-b6f8-ebfceb46f539",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "I wonder if it might be more efficient to just not include the `_SliverFractionalPadding` if `!padEnds`. Providing a padding of 0 essentially make it a no-op widget I think. WDYT @LongCatIsLooong?",
        "createdAt" : "2020-01-08T21:28:18Z",
        "updatedAt" : "2020-01-09T08:51:18Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "7d3f342e-06fc-458b-ac4a-80780e46a593",
        "parentId" : "f5c0d1cc-af71-473a-b6f8-ebfceb46f539",
        "authorId" : "173da4a5-edee-4e03-af34-e53e6ab232d9",
        "body" : "I opted not to do that initially, mostly because I'm fairly new to Flutter and I'm not 100% familiar how changing the internal structure of widgets impacts other things down the line. If we can be reasonably sure it won't affect anything, I'd definitely prefer to omit the `_SliverFractionalPadding` entirely",
        "createdAt" : "2020-01-08T21:37:38Z",
        "updatedAt" : "2020-01-09T08:51:18Z",
        "lastEditedBy" : "173da4a5-edee-4e03-af34-e53e6ab232d9",
        "tags" : [
        ]
      },
      {
        "id" : "1fbf02be-58a8-4281-aa41-a4731a96275e",
        "parentId" : "f5c0d1cc-af71-473a-b6f8-ebfceb46f539",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "Sounds good! My only concern is if `SliverFillViewport` has a stateful child, toggling `padEnds` may cause the stateful child to lose state. But that doesn't sound like a valid use case.",
        "createdAt" : "2020-01-08T21:56:31Z",
        "updatedAt" : "2020-01-09T08:51:18Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "38f63f84-0f32-46cd-b370-f54df2bcc51c",
        "parentId" : "f5c0d1cc-af71-473a-b6f8-ebfceb46f539",
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "I concur! :)\r\nThe potential state issue could be resolved by adding a getter/setter for `padEnds` that then marks the widget to update the state.",
        "createdAt" : "2020-01-08T22:04:33Z",
        "updatedAt" : "2020-01-09T08:51:18Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "1380f8f7-10d5-4419-b9dd-b34d13c67e7d",
        "parentId" : "f5c0d1cc-af71-473a-b6f8-ebfceb46f539",
        "authorId" : "173da4a5-edee-4e03-af34-e53e6ab232d9",
        "body" : "Correct me if I'm wrong, but since `SliverFillViewport` is a `StatelessWidget`, isn't it supposed to be invalid to mutate its state after creation? So toggling `padEnds` wouldn't even be allowed, right?",
        "createdAt" : "2020-01-08T22:13:08Z",
        "updatedAt" : "2020-01-09T08:51:18Z",
        "lastEditedBy" : "173da4a5-edee-4e03-af34-e53e6ab232d9",
        "tags" : [
        ]
      },
      {
        "id" : "83d949d5-6c42-46cd-8edf-51205019ba40",
        "parentId" : "f5c0d1cc-af71-473a-b6f8-ebfceb46f539",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "Oh sorry by \"toggle\" what I really meant was to rebuild the `SliverFillViewport` with a different `padEnds` value, e.g.:\r\n```dart\r\nclass SomeStatefulWidget extends StatefulWidget {\r\n  bool padEnds;\r\n\r\n  @override\r\n  Widget build(BuildContext context) => SliverFillViewport(padEnds: padEnds);\r\n}   \r\n```",
        "createdAt" : "2020-01-08T22:21:31Z",
        "updatedAt" : "2020-01-09T08:51:18Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "53055bae-7838-4a32-9005-aeb926040cef",
        "parentId" : "f5c0d1cc-af71-473a-b6f8-ebfceb46f539",
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "I guess it depends on how it is used! I have seen a similar issue pop up with a stateless widget that was used in the composition of a stateful widget that toggled a property.",
        "createdAt" : "2020-01-08T22:22:11Z",
        "updatedAt" : "2020-01-09T08:51:18Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "989043b6-1c72-4294-b309-8fc4e0d474a8",
        "parentId" : "f5c0d1cc-af71-473a-b6f8-ebfceb46f539",
        "authorId" : "173da4a5-edee-4e03-af34-e53e6ab232d9",
        "body" : "Ah, that makes more sense. So given that there's a workaround and it's probably an uncommon use-case, I'll have it omit the `_SliverFractionalPadding`",
        "createdAt" : "2020-01-08T22:38:57Z",
        "updatedAt" : "2020-01-09T08:51:18Z",
        "lastEditedBy" : "173da4a5-edee-4e03-af34-e53e6ab232d9",
        "tags" : [
        ]
      },
      {
        "id" : "e521b14b-aa13-4fc6-af5e-fabcc00f09ab",
        "parentId" : "f5c0d1cc-af71-473a-b6f8-ebfceb46f539",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I think it would have been better to not change the shape of the tree when padEnds is toggled from true to false or vice versa as that may result in some state loss in stateful widgets.",
        "createdAt" : "2020-01-08T23:03:32Z",
        "updatedAt" : "2020-01-09T08:51:18Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "ad3f9c5b-8b44-447d-8c4b-0c0c503d0ae4",
        "parentId" : "f5c0d1cc-af71-473a-b6f8-ebfceb46f539",
        "authorId" : "173da4a5-edee-4e03-af34-e53e6ab232d9",
        "body" : "Undid that change as it seems like it caused a post-commit test to fail anyway",
        "createdAt" : "2020-01-09T08:52:00Z",
        "updatedAt" : "2020-01-09T08:52:00Z",
        "lastEditedBy" : "173da4a5-edee-4e03-af34-e53e6ab232d9",
        "tags" : [
        ]
      }
    ],
    "commit" : "697896e96d8e3cc3db2bf28cd2e8696b5d430511",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +63,67 @@  Widget build(BuildContext context) {\n    return _SliverFractionalPadding(\n      viewportFraction: padEnds ? (1 - viewportFraction).clamp(0, 1) / 2 : 0,\n      sliver: _SliverFillViewportRenderObjectWidget(\n        viewportFraction: viewportFraction,"
  },
  {
    "id" : "702e2ea4-d402-4a01-a10f-e1393542149e",
    "prId" : 50523,
    "prUrl" : "https://github.com/flutter/flutter/pull/50523#pullrequestreview-356895712",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9d6b982-de63-44cc-970a-fdac814c2d00",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Instead of holding on to the old constraints, could we just overwrite the \"constraints\" getter and invalidate the old resolution there when new constraints are supplied?",
        "createdAt" : "2020-02-11T17:59:17Z",
        "updatedAt" : "2020-02-11T17:59:26Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "1db59361-5b75-44f8-9012-3b01c430942a",
        "parentId" : "d9d6b982-de63-44cc-970a-fdac814c2d00",
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "I think the `constraints` setter is not exposed? I'm not sure how I can detect the change with the getter alone.",
        "createdAt" : "2020-02-11T18:35:13Z",
        "updatedAt" : "2020-02-11T18:35:26Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      }
    ],
    "commit" : "0072912165a05dca397c5bff7c7025950d1c23e2",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +123,127 @@      _viewportFraction = viewportFraction;\n\n  SliverConstraints _lastResolvedConstraints;\n\n  double get viewportFraction => _viewportFraction;"
  }
]