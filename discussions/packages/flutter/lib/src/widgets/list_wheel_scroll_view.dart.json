[
  {
    "id" : "1b9d56a0-d1a1-4ebe-b671-a7baeb029488",
    "prId" : 14091,
    "prUrl" : "https://github.com/flutter/flutter/pull/14091#pullrequestreview-89307688",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8c05abf-157c-4b3b-99d4-e9909b64a407",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you go to great lengths to explain all this here, but animateToItem has the same limitations but no comment is made of it.",
        "createdAt" : "2018-01-16T19:12:27Z",
        "updatedAt" : "2018-01-25T23:35:17Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "b85de59c-8ed2-46c2-ac33-122dfce070f9",
        "parentId" : "e8c05abf-157c-4b3b-99d4-e9909b64a407",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "also jumpToItem",
        "createdAt" : "2018-01-16T19:12:40Z",
        "updatedAt" : "2018-01-25T23:35:17Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "d709bb54-2515-4d52-8ad8-877f1f7026af",
        "parentId" : "e8c05abf-157c-4b3b-99d4-e9909b64a407",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Did your suggestion below.",
        "createdAt" : "2018-01-17T01:46:43Z",
        "updatedAt" : "2018-01-25T23:35:17Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff87ce9384b99032e270dd582725d3173d372dd7",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@  /// The [hasClients] property can be used to check if a scroll view is\n  /// attached prior to accessing [selectedItem].\n  int get selectedItem {\n    assert(\n      positions.isNotEmpty,"
  },
  {
    "id" : "d684c8f8-176f-4f53-b97c-63aafbe03f08",
    "prId" : 14091,
    "prUrl" : "https://github.com/flutter/flutter/pull/14091#pullrequestreview-90632424",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b49e2b92-d7fb-4d2c-82cf-62a5a7bef25b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "how similar to iOS does this feel?\r\n\r\nA possibly more realistic (maybe less like iOS?) physics model would be to model each item as a frictive potential valley, essentially a series of back-to-back springs where if you cross the threshold of one spring you enter the next with velocity. That way if you fling it to the next item with enough force to overshoot but not enough to reach the next item, you'd see it go forward then spring back, rathen that land perfectly on it.\r\n\r\nBut we should match iOS.",
        "createdAt" : "2018-01-22T21:24:47Z",
        "updatedAt" : "2018-01-25T23:35:17Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "9d3cb060-0f46-43a5-a2be-148e674b20ed",
        "parentId" : "b49e2b92-d7fb-4d2c-82cf-62a5a7bef25b",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I was a bit surprised too but iOS doesn't actually simulate something physical like a carnival wheel. It never turns backwards except if the user doesn't break the threshold for the currently selected element. ",
        "createdAt" : "2018-01-22T21:28:31Z",
        "updatedAt" : "2018-01-25T23:35:17Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff87ce9384b99032e270dd582725d3173d372dd7",
    "line" : 334,
    "diffHunk" : "@@ -1,1 +332,336 @@    );\n  }\n}\n\n/// A box in which children on a wheel can be scrolled."
  },
  {
    "id" : "75aaf519-4a2e-42f2-87ca-f2e37246dfd2",
    "prId" : 19789,
    "prUrl" : "https://github.com/flutter/flutter/pull/19789#pullrequestreview-143328648",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9762a93b-f0eb-45d3-b1cc-a70c33630559",
        "parentId" : null,
        "authorId" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "body" : "Adding in these messages that explain the more complicated asserts is very helpful, nice!",
        "createdAt" : "2018-08-03T21:25:17Z",
        "updatedAt" : "2018-08-13T17:35:19Z",
        "lastEditedBy" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "tags" : [
        ]
      }
    ],
    "commit" : "89452a972a5ba3cdb6720a438f43ff5d6082fa69",
    "line" : 217,
    "diffHunk" : "@@ -1,1 +589,593 @@       assert(\n         !renderChildrenOutsideViewport || !clipToSize,\n         RenderListWheelViewport.clipToSizeAndRenderChildrenOutsideViewportConflict,\n       ),\n       childDelegate = new ListWheelChildListDelegate(children: children),"
  },
  {
    "id" : "2507a2ee-cd04-4f36-8f4b-be8766165635",
    "prId" : 19789,
    "prUrl" : "https://github.com/flutter/flutter/pull/19789#pullrequestreview-145423713",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c7d5b27-90b9-4693-af1b-94e11f65128a",
        "parentId" : null,
        "authorId" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "body" : "Is it guaranteed that this will only be called to shuffle the list?\r\n\r\nWhat if someone does something like this:\r\n\r\n```\r\nnew ListWheelScrollView(\r\n  children: const [\r\n    Text('foo 1'),\r\n    Text('foo 2'),\r\n  ],\r\n);\r\n```\r\n\r\nThen later they do:\r\n```\r\nnew ListWheelScrollView(\r\n  children: const [\r\n    Text('foo 2'),\r\n    Text('foo 1'),\r\n  ],\r\n);\r\n```\r\n\r\nWill that trigger this assert?",
        "createdAt" : "2018-08-03T21:39:21Z",
        "updatedAt" : "2018-08-13T17:35:19Z",
        "lastEditedBy" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "tags" : [
        ]
      },
      {
        "id" : "f3bfa118-f9e3-49c5-b977-de707901a4ad",
        "parentId" : "1c7d5b27-90b9-4693-af1b-94e11f65128a",
        "authorId" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "body" : "I'm not sure.\r\nWith your example, I think the framework will try to rebuild, not moving render objects around.\r\nThis assertion is also in sliver.dart, and it makes sense to me too because we are maintaining the children in contiguous order, so that each child has a unique index, and moving them around will likely cause errors.",
        "createdAt" : "2018-08-03T23:00:00Z",
        "updatedAt" : "2018-08-13T17:35:19Z",
        "lastEditedBy" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "tags" : [
        ]
      },
      {
        "id" : "3e40eaf1-fc52-4063-b97e-a3c65d4b5206",
        "parentId" : "1c7d5b27-90b9-4693-af1b-94e11f65128a",
        "authorId" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "body" : "OK. Be sure to add a test that this works.\r\n\r\nAlso, be sure to use either const widgets or global keys for the test, so that we can be sure it has to try to reorder the widgets.",
        "createdAt" : "2018-08-10T23:32:02Z",
        "updatedAt" : "2018-08-13T17:35:19Z",
        "lastEditedBy" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "tags" : [
        ]
      }
    ],
    "commit" : "89452a972a5ba3cdb6720a438f43ff5d6082fa69",
    "line" : 398,
    "diffHunk" : "@@ -1,1 +875,879 @@\n  @override\n  void moveChildRenderObject(RenderObject child, dynamic slot) {\n    const String moveChildRenderObjectErrorMessage =\n        'Currently we maintain the list in contiguous increasing order, so '"
  },
  {
    "id" : "7d937838-dea2-4758-922e-28c553d8e6d8",
    "prId" : 19789,
    "prUrl" : "https://github.com/flutter/flutter/pull/19789#pullrequestreview-144153324",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02bcf68f-83da-4f83-87dc-d549d144646f",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "RenderObjectElement already have an implementation for these. If you don't change their behaviors, just don't override them.",
        "createdAt" : "2018-08-06T21:04:55Z",
        "updatedAt" : "2018-08-13T17:35:19Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "08e98469-c39c-49ac-8c51-2e7c290bf7cc",
        "parentId" : "02bcf68f-83da-4f83-87dc-d549d144646f",
        "authorId" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "body" : "I'm forcing the widget to be of type ```ListWheelViewport``` here.\r\nThis is similar to the class ```SliverMultiBoxAdaptorElement``` in sliver.dart",
        "createdAt" : "2018-08-07T19:39:43Z",
        "updatedAt" : "2018-08-13T17:35:19Z",
        "lastEditedBy" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "89452a972a5ba3cdb6720a438f43ff5d6082fa69",
    "line" : 283,
    "diffHunk" : "@@ -1,1 +760,764 @@\n  @override\n  ListWheelViewport get widget => super.widget;\n\n  @override"
  },
  {
    "id" : "4cdb260e-1fdd-44c9-9fe0-77a459576114",
    "prId" : 19789,
    "prUrl" : "https://github.com/flutter/flutter/pull/19789#pullrequestreview-144155048",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5b6b67d-b7de-4a2a-8f8b-3fb89d3328ac",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "everything that's here also need to be in the updateRenderObject below",
        "createdAt" : "2018-08-06T21:06:18Z",
        "updatedAt" : "2018-08-13T17:35:19Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "75f8313d-cbe6-46e2-8e8d-b556e9d2f45f",
        "parentId" : "b5b6b67d-b7de-4a2a-8f8b-3fb89d3328ac",
        "authorId" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "body" : "They are, I'm just reordering arguments here.",
        "createdAt" : "2018-08-07T19:44:38Z",
        "updatedAt" : "2018-08-13T17:35:19Z",
        "lastEditedBy" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "89452a972a5ba3cdb6720a438f43ff5d6082fa69",
    "line" : 500,
    "diffHunk" : "@@ -1,1 +1007,1011 @@      renderChildrenOutsideViewport: renderChildrenOutsideViewport,\n    );\n  }\n\n  @override"
  },
  {
    "id" : "152f33b2-1697-4d3e-84c6-245ff723a183",
    "prId" : 19789,
    "prUrl" : "https://github.com/flutter/flutter/pull/19789#pullrequestreview-145339313",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40f03ca9-fdd3-4aa3-a165-597797ab676e",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I suspect you'd want to rebuild in a bunch of other circumstances too (if itemExtent changes etc)",
        "createdAt" : "2018-08-06T21:10:30Z",
        "updatedAt" : "2018-08-13T17:35:19Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "12f4c770-a23f-4f6b-9110-ac784660749d",
        "parentId" : "40f03ca9-fdd3-4aa3-a165-597797ab676e",
        "authorId" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "body" : "Rebuilding here is only for when the delegate changes. When other parameters change, ```super.update()``` would have taken care of everything.",
        "createdAt" : "2018-08-07T20:16:16Z",
        "updatedAt" : "2018-08-13T17:35:19Z",
        "lastEditedBy" : "9e76ad22-0295-4cbe-a82f-bf7dac1200a4",
        "tags" : [
        ]
      },
      {
        "id" : "e267ec41-52df-49b6-8659-290d444163d6",
        "parentId" : "40f03ca9-fdd3-4aa3-a165-597797ab676e",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Ah you're right, my bad",
        "createdAt" : "2018-08-10T17:58:33Z",
        "updatedAt" : "2018-08-13T17:35:19Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "89452a972a5ba3cdb6720a438f43ff5d6082fa69",
    "line" : 309,
    "diffHunk" : "@@ -1,1 +786,790 @@    final ListWheelChildDelegate oldDelegate = oldWidget.childDelegate;\n    if (newDelegate != oldDelegate &&\n        (newDelegate.runtimeType != oldDelegate.runtimeType || newDelegate.shouldRebuild(oldDelegate)))\n      performRebuild();\n  }"
  },
  {
    "id" : "161b1ef1-f80d-4911-9495-1a6b6ad8aff3",
    "prId" : 19789,
    "prUrl" : "https://github.com/flutter/flutter/pull/19789#pullrequestreview-145401510",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98c48e33-c648-4fde-8090-8465d9866146",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Add a numerical example",
        "createdAt" : "2018-08-10T17:56:13Z",
        "updatedAt" : "2018-08-13T17:35:19Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "8bacb7be-62a2-45cd-8b1c-3b8b3a425cc3",
        "parentId" : "98c48e33-c648-4fde-8090-8465d9866146",
        "authorId" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "body" : "+1 to this.\r\n\r\nExplain that the looping delegate may need to take in an index outside the normal bounds of the list and map it into the list's size.",
        "createdAt" : "2018-08-10T23:24:19Z",
        "updatedAt" : "2018-08-13T17:35:19Z",
        "lastEditedBy" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "tags" : [
        ]
      }
    ],
    "commit" : "89452a972a5ba3cdb6720a438f43ff5d6082fa69",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +46,50 @@  /// Returns the true index for a child built at a given index. Defaults to\n  /// the given index, however if the delegate is [ListWheelChildLoopingListDelegate],\n  /// this value is the index of the true element that the delegate is looping to.\n  ///\n  ///"
  },
  {
    "id" : "8fdb4a68-26bc-4788-b4a0-9ce3a74a45a7",
    "prId" : 78588,
    "prUrl" : "https://github.com/flutter/flutter/pull/78588#pullrequestreview-624696265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b571cf5-e79b-4c3e-a420-ccfe4d7c8e64",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "document this on physics as well?",
        "createdAt" : "2021-03-30T21:03:07Z",
        "updatedAt" : "2021-04-02T19:14:05Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee8e14110098c68c4a570ef5aa5f9766213ab622",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +729,733 @@  ///\n  /// [ScrollBehavior]s also provide [ScrollPhysics]. If an explicit\n  /// [ScrollPhysics] is provided in [physics], it will take precedence,\n  /// followed by [scrollBehavior], and then the inherited ancestor\n  /// [ScrollBehavior]."
  }
]