[
  {
    "id" : "24689c4b-2c36-43c7-8e38-28cbdf9d71aa",
    "prId" : 56409,
    "prUrl" : "https://github.com/flutter/flutter/pull/56409#pullrequestreview-418621264",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00991285-49fa-418f-81f2-ff7d13243648",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: group the imports, i.e. dart imports, package imports, and non-package imports should all be in separate groups separated by newlines. ",
        "createdAt" : "2020-05-26T19:43:02Z",
        "updatedAt" : "2020-06-02T19:45:35Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "0dcb4aa720680a40889be3f4bd7d2e1cce9f6ae8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3,7 @@// found in the LICENSE file.\n\nimport 'dart:math' as math;\n\nimport 'package:flutter/gestures.dart';"
  },
  {
    "id" : "5b3fb69d-637d-42b9-b277-b333b2d3badf",
    "prId" : 56409,
    "prUrl" : "https://github.com/flutter/flutter/pull/56409#pullrequestreview-419357130",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe26d466-21aa-44ca-ae9f-f1be801854a0",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Can we assert this?",
        "createdAt" : "2020-05-26T19:50:26Z",
        "updatedAt" : "2020-06-02T19:45:35Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "22615f64-b25f-432d-a5b4-1e9de68ffcfb",
        "parentId" : "fe26d466-21aa-44ca-ae9f-f1be801854a0",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Maybe what we want to assert here is boundaryMargin.isNonNegative?",
        "createdAt" : "2020-05-27T16:25:07Z",
        "updatedAt" : "2020-06-02T19:45:36Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "0dcb4aa720680a40889be3f4bd7d2e1cce9f6ae8",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +94,98 @@  /// `EdgeInsets.all(double.infinity)`.\n  ///\n  /// No edge can be NaN.\n  ///\n  /// Defaults to [EdgeInsets.zero], which results in boundaries that are the"
  },
  {
    "id" : "7a03eadd-980a-473d-9e5f-df02148ad6e1",
    "prId" : 56409,
    "prUrl" : "https://github.com/flutter/flutter/pull/56409#pullrequestreview-419570026",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9436785-ea23-453c-b477-6b3c6fd78ea2",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Unlike the others, this method seems to just modify the matrix in-place? If that's ok, why are the other methods cloning? ",
        "createdAt" : "2020-05-26T20:47:42Z",
        "updatedAt" : "2020-06-02T19:45:35Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "8f003940-5408-4427-89d5-2aca901143ca",
        "parentId" : "f9436785-ea23-453c-b477-6b3c6fd78ea2",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "I intended to always operate on a new matrix, but looks like I missed a clone here.  Good catch.",
        "createdAt" : "2020-05-27T20:07:51Z",
        "updatedAt" : "2020-06-02T19:45:36Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "0dcb4aa720680a40889be3f4bd7d2e1cce9f6ae8",
    "line" : 642,
    "diffHunk" : "@@ -1,1 +640,644 @@  }\n\n  // Return a new matrix representing the given matrix after applying the given\n  // rotation.\n  Matrix4 _matrixRotate(Matrix4 matrix, double rotation, Offset focalPoint) {"
  },
  {
    "id" : "d9089db3-86e3-42d4-9f5a-3b14ec05fa9d",
    "prId" : 56409,
    "prUrl" : "https://github.com/flutter/flutter/pull/56409#pullrequestreview-419591954",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a5a990e-940a-4135-aabe-504a01a7f1db",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe I missed this, but I would have expected that you'd listen to the `TransformationController` somewhere to rebuild when the transformation changes? ",
        "createdAt" : "2020-05-26T21:23:01Z",
        "updatedAt" : "2020-06-02T19:45:35Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "e90972f9-81e4-4325-b2fa-a22020cb89a1",
        "parentId" : "9a5a990e-940a-4135-aabe-504a01a7f1db",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Done as part of https://github.com/flutter/flutter/pull/56409#discussion_r431324470",
        "createdAt" : "2020-05-27T20:41:59Z",
        "updatedAt" : "2020-06-02T19:45:36Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "0dcb4aa720680a40889be3f4bd7d2e1cce9f6ae8",
    "line" : 902,
    "diffHunk" : "@@ -1,1 +900,904 @@  void initState() {\n    super.initState();\n\n    _transformationController = widget.transformationController\n        ?? TransformationController();"
  },
  {
    "id" : "302116f2-fa03-484f-8b5e-5cb78184030a",
    "prId" : 56409,
    "prUrl" : "https://github.com/flutter/flutter/pull/56409#pullrequestreview-419357130",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb0bfa23-d35c-429f-a869-f14b449f1f85",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "If this assert fails, should have a custom error message",
        "createdAt" : "2020-05-27T16:34:35Z",
        "updatedAt" : "2020-06-02T19:45:36Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "0dcb4aa720680a40889be3f4bd7d2e1cce9f6ae8",
    "line" : 511,
    "diffHunk" : "@@ -1,1 +509,513 @@    // Boundaries that are partially infinite are not allowed because Matrix4's\n    // rotation and translation methods don't handle infinites well.\n    assert(_boundaryRectCached.isFinite ||\n        (_boundaryRectCached.left.isInfinite\n        && _boundaryRectCached.top.isInfinite"
  },
  {
    "id" : "4dffffad-7f38-4eaa-ae82-276ba183d20f",
    "prId" : 56409,
    "prUrl" : "https://github.com/flutter/flutter/pull/56409#pullrequestreview-419357130",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f197711-78ce-4ce7-a5bd-d0b2d7d15bda",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2020-05-27T16:44:25Z",
        "updatedAt" : "2020-06-02T19:45:36Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "0dcb4aa720680a40889be3f4bd7d2e1cce9f6ae8",
    "line" : 1009,
    "diffHunk" : "@@ -1,1 +1007,1011 @@  ///\n  /// A viewport point is relative to the parent while a scene point is relative\n  /// to the child, regardless of transformation. Calling toScene with a\n  /// viewport point essentially returns the scene coordinate that lies\n  /// underneath the viewport point given the transform."
  },
  {
    "id" : "54be8971-b66a-4bbb-8aa6-3816762abbe6",
    "prId" : 56409,
    "prUrl" : "https://github.com/flutter/flutter/pull/56409#pullrequestreview-419670097",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2503f5fd-d63c-42a6-b441-dd805ae6eb46",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Not sure if there's a situation where value can't be inverted or if we should fail gracefully in that case. Probably OK for now.",
        "createdAt" : "2020-05-27T16:47:09Z",
        "updatedAt" : "2020-06-02T19:45:36Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "5734cc66-faba-47e8-8858-8c5429b178da",
        "parentId" : "2503f5fd-d63c-42a6-b441-dd805ae6eb46",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "That's an interesting thought.  I've seen these matrix operations start spitting out NaNs when there are infinite values in the matrix for example, which was the reason I prevented partially infinite boundaryMargins.  I'll keep an eye out for other problems coming from stuff like this.",
        "createdAt" : "2020-05-27T23:07:33Z",
        "updatedAt" : "2020-06-02T19:45:36Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "0dcb4aa720680a40889be3f4bd7d2e1cce9f6ae8",
    "line" : 1039,
    "diffHunk" : "@@ -1,1 +1037,1041 @@    // On viewportPoint, perform the inverse transformation of the scene to get\n    // where the point would be in the scene before the transformation.\n    final Matrix4 inverseMatrix = Matrix4.inverted(value);\n    final Vector3 untransformed = inverseMatrix.transform3(Vector3(\n      viewportPoint.dx,"
  },
  {
    "id" : "3efc5230-2129-415b-b314-4d1832916f52",
    "prId" : 56409,
    "prUrl" : "https://github.com/flutter/flutter/pull/56409#pullrequestreview-422239720",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb9955ee-7a85-40ca-b333-f8b88851f9cc",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I don't find it super-clear to understand from the description what the property does, but unfortunately, I also don't have a better suggestion. ",
        "createdAt" : "2020-06-01T17:43:09Z",
        "updatedAt" : "2020-06-02T19:45:36Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "fcd4123c-0de5-4c6e-9ddd-72af177c6994",
        "parentId" : "eb9955ee-7a85-40ca-b333-f8b88851f9cc",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "True. I'll clarify in the example description a bit at least.",
        "createdAt" : "2020-06-01T23:09:14Z",
        "updatedAt" : "2020-06-02T19:45:36Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "0dcb4aa720680a40889be3f4bd7d2e1cce9f6ae8",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +109,113 @@  ///\n  /// If set to false, then the child will be given infinite constraints. This\n  /// is often useful when a child should be bigger than the InteractiveViewer.\n  ///\n  /// Defaults to true."
  }
]