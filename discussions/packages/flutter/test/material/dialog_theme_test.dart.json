[
  {
    "id" : "41d2513b-5714-4c8b-84ad-43a65ff66b6f",
    "prId" : 23569,
    "prUrl" : "https://github.com/flutter/flutter/pull/23569#pullrequestreview-169429289",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b23a4b47-24ff-41ad-99c9-d3d02aeae43e",
        "parentId" : null,
        "authorId" : "209f805a-621a-40dd-b493-fb897c4b0bcb",
        "body" : "Are there already tests for Dialogs' shapes? If not, probably good to have one here (one where you really check what's being drawn.)",
        "createdAt" : "2018-10-26T14:53:19Z",
        "updatedAt" : "2018-10-30T21:24:06Z",
        "lastEditedBy" : "209f805a-621a-40dd-b493-fb897c4b0bcb",
        "tags" : [
        ]
      },
      {
        "id" : "ca3972e9-d82f-456d-b7f0-5a1a85eb414f",
        "parentId" : "b23a4b47-24ff-41ad-99c9-d3d02aeae43e",
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Good point, I added a test for dialog shape in the dialog class itself, but, like here, it tests for the underlying material object. Added a golden test for dialog themes in this PR. Will include golden image below.",
        "createdAt" : "2018-10-29T17:36:04Z",
        "updatedAt" : "2018-10-30T21:24:06Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      }
    ],
    "commit" : "289c26889a11bb6de4a0f971a4b8440f583f33c9",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +56,60 @@        find.descendant(of: find.byType(AlertDialog), matching: find.byType(Material)));\n    final Material materialWidget = widget.state.widget;\n    expect(materialWidget.shape, customBorder);\n  });\n"
  },
  {
    "id" : "1fd49eb7-963e-4c0e-8231-9489095a9aa2",
    "prId" : 23569,
    "prUrl" : "https://github.com/flutter/flutter/pull/23569#pullrequestreview-169518102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e32f408-62bb-46ef-89cb-fac4ded9fdb1",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Just `await tester.pumpAndSettle()` should be sufficient.\r\n",
        "createdAt" : "2018-10-29T19:15:08Z",
        "updatedAt" : "2018-10-30T21:24:06Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "6b001f22-3751-4ff0-a59c-e5737f4c5a8e",
        "parentId" : "0e32f408-62bb-46ef-89cb-fac4ded9fdb1",
        "authorId" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "body" : "Done.",
        "createdAt" : "2018-10-29T21:06:23Z",
        "updatedAt" : "2018-10-30T21:24:06Z",
        "lastEditedBy" : "b050a012-8ac0-4fb8-8058-231ac0263df1",
        "tags" : [
        ]
      }
    ],
    "commit" : "289c26889a11bb6de4a0f971a4b8440f583f33c9",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@    );\n    await tester.tap(find.text('X'));\n    await tester.pump(); // start animation\n    await tester.pump(const Duration(seconds: 1));\n"
  }
]