[
  {
    "id" : "1129ac4b-2625-4d80-8b82-afc256eaef35",
    "prId" : 38726,
    "prUrl" : "https://github.com/flutter/flutter/pull/38726#pullrequestreview-279061937",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fc76a7f-cea8-423f-af0c-b20a6bb97aac",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Why was this change needed? Implies that the existing tests don't cover the same underlying logic as before?",
        "createdAt" : "2019-08-20T17:00:47Z",
        "updatedAt" : "2019-08-30T22:34:57Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "a655870d-4b29-4563-9b0e-383cae8088ab",
        "parentId" : "4fc76a7f-cea8-423f-af0c-b20a6bb97aac",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Because before we weren't using `nextFocus`, which requires the presence of a `DefautlFocusTraversal` widget in the tree in order to work (much like `Text` requiring a `Directionality`). I could make a separate wrap function for the test I added, or wrap the `wrap` call with a `DefaultFocusTraversal`, but it seemed harmless to add it to the base wrap function.",
        "createdAt" : "2019-08-23T15:16:49Z",
        "updatedAt" : "2019-08-30T22:34:57Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ba1180c234f85c28a5db2e7a3640cd3975b3638",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +402,406 @@Widget wrap({ Widget child }) {\n  return DefaultFocusTraversal(\n    policy: ReadingOrderTraversalPolicy(),\n    child: Directionality(\n      textDirection: TextDirection.ltr,"
  },
  {
    "id" : "bb668ad7-8c4f-48bc-a550-3a72c6d5149a",
    "prId" : 41972,
    "prUrl" : "https://github.com/flutter/flutter/pull/41972#pullrequestreview-298595981",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9c7aeb9-eb98-4ecd-94f1-d84adcf8890b",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "nit: remove one newline, since two were added",
        "createdAt" : "2019-10-07T17:22:36Z",
        "updatedAt" : "2019-11-01T19:12:55Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "a986926a-4b11-4748-bcbb-2f7b49752781",
        "parentId" : "a9c7aeb9-eb98-4ecd-94f1-d84adcf8890b",
        "authorId" : "fbe1ea61-46af-480a-9a9f-bc4305271514",
        "body" : "Done",
        "createdAt" : "2019-10-08T08:12:22Z",
        "updatedAt" : "2019-11-01T19:12:55Z",
        "lastEditedBy" : "fbe1ea61-46af-480a-9a9f-bc4305271514",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0362bc6b92daf40ca820b0664459fe0d42f5906",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +400,404 @@    expect(focusNode2.hasPrimaryFocus, isFalse);\n  });\n\n  group('feedback', () {\n    FeedbackTester feedback;"
  },
  {
    "id" : "aad9fc39-43ef-4c7e-af73-ebc5dc544ae9",
    "prId" : 41972,
    "prUrl" : "https://github.com/flutter/flutter/pull/41972#pullrequestreview-298596095",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cde2662f-5830-4a1b-b884-ca91af9db6a7",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Same comment about testing for explicitly setting `enableFeedback: true`.",
        "createdAt" : "2019-10-07T17:26:18Z",
        "updatedAt" : "2019-11-01T19:12:55Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "2e242dc8-b62a-43b3-a81c-2347416ca8d8",
        "parentId" : "cde2662f-5830-4a1b-b884-ca91af9db6a7",
        "authorId" : "fbe1ea61-46af-480a-9a9f-bc4305271514",
        "body" : "Done",
        "createdAt" : "2019-10-08T08:12:36Z",
        "updatedAt" : "2019-11-01T19:12:55Z",
        "lastEditedBy" : "fbe1ea61-46af-480a-9a9f-bc4305271514",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0362bc6b92daf40ca820b0664459fe0d42f5906",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +431,435 @@    });\n\n    testWidgets('IconButton with enabled feedback', (WidgetTester tester) async {\n      await tester.pumpWidget(Material(\n        child: Directionality("
  },
  {
    "id" : "fb644e2b-061e-4fdb-835f-2458e74f2c9d",
    "prId" : 46091,
    "prUrl" : "https://github.com/flutter/flutter/pull/46091#pullrequestreview-327238692",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f55ddc8-318e-4d66-a9ac-a81f2e452e9e",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Does it go to 40.0 instead of 36 because of the minimum tap target size constraints? If so, maybe it's worth noting it in a comment",
        "createdAt" : "2019-12-04T22:13:10Z",
        "updatedAt" : "2019-12-05T21:44:29Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "ad1369c1-8c10-4688-9fc1-8256d09eb8cc",
        "parentId" : "2f55ddc8-318e-4d66-a9ac-a81f2e452e9e",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "That being said, I'm surprised this doesn't affect `Checkbox` and `Radio`, since I would imagine they should be tappable targets as well.",
        "createdAt" : "2019-12-04T22:14:38Z",
        "updatedAt" : "2019-12-05T21:44:29Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "21b5ebed-2836-4f7b-ab77-01b0e1232d5d",
        "parentId" : "2f55ddc8-318e-4d66-a9ac-a81f2e452e9e",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "No, it's not because of the min tap target size (which density is allowed to change), it's because of the icon size. Density isn't suppose to affect icon sizes, padding, or text sizes.",
        "createdAt" : "2019-12-05T01:19:03Z",
        "updatedAt" : "2019-12-05T21:44:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "69087f7b89829fca3da0d5a18f7eb8c8c35e902e",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +499,503 @@    await buildTest(const VisualDensity(horizontal: -3.0, vertical: -3.0));\n    await tester.pumpAndSettle();\n    expect(box.size, equals(const Size(40, 40)));\n\n    await buildTest(const VisualDensity(horizontal: 3.0, vertical: -3.0));"
  },
  {
    "id" : "2040c301-2d75-4bfb-9d1f-f8d086be012f",
    "prId" : 46091,
    "prUrl" : "https://github.com/flutter/flutter/pull/46091#pullrequestreview-327179547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "741d885e-517a-4905-9b87-14cc5da6fc38",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Same comment regarding the tap target constraint minimum size",
        "createdAt" : "2019-12-04T22:13:28Z",
        "updatedAt" : "2019-12-05T21:44:29Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "69087f7b89829fca3da0d5a18f7eb8c8c35e902e",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +503,507 @@    await buildTest(const VisualDensity(horizontal: 3.0, vertical: -3.0));\n    await tester.pumpAndSettle();\n    expect(box.size, equals(const Size(60, 40)));\n  });\n}"
  },
  {
    "id" : "bc8b9ad3-f205-42ee-b5c6-7c705ac18a3b",
    "prId" : 47457,
    "prUrl" : "https://github.com/flutter/flutter/pull/47457#pullrequestreview-335257889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d29692a-c923-4170-9426-e951fc73c828",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Please add a comment that explains where 26x26 comes from",
        "createdAt" : "2019-12-20T01:21:01Z",
        "updatedAt" : "2020-01-15T02:18:57Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "0644d633-20a6-426f-b16b-61416234223e",
        "parentId" : "3d29692a-c923-4170-9426-e951fc73c828",
        "authorId" : "b6f5d261-bce5-4ac7-8548-424662f5f751",
        "body" : "Done.",
        "createdAt" : "2019-12-20T13:32:52Z",
        "updatedAt" : "2020-01-15T02:18:57Z",
        "lastEditedBy" : "b6f5d261-bce5-4ac7-8548-424662f5f751",
        "tags" : [
        ]
      }
    ],
    "commit" : "850067411abb68593a005dd13dab90f3d7cb178f",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +92,96 @@    // By default IconButton has a padding of 8.0 on all sides, so both\n    // width and height are 10.0 + 2 * 8.0 = 26.0\n    expect(iconButton.size, const Size(26.0, 26.0));\n  });\n"
  }
]