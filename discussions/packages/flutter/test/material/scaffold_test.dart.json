[
  {
    "id" : "fb78b614-6380-4c90-a06b-9137e191be8e",
    "prId" : 12358,
    "prUrl" : "https://github.com/flutter/flutter/pull/12358#pullrequestreview-66626638",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5fd2ee58-4fe0-450b-90dc-493d8503b740",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this is fine, but why this change?",
        "createdAt" : "2017-10-03T00:03:13Z",
        "updatedAt" : "2017-10-03T00:48:15Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c867c602-caa1-4763-bf1b-8d61ad93491a",
        "parentId" : "5fd2ee58-4fe0-450b-90dc-493d8503b740",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Previously, the `Semantics` widgets were creating `SemanticsNode`s with a size of `Rect.zero`. With the new definition of visibility introduced in this PRs, those `SemanticsNode`s are invisible and are no longer allowed in the tree (ensured with asserts). Rather than giving the `Container` in the old code a width and a height, I felt like the code would be easier to read if I instead replace the entire thing with a `Text` widget that has an intrinsic width/height. ",
        "createdAt" : "2017-10-03T00:09:21Z",
        "updatedAt" : "2017-10-03T00:48:15Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "851be5df7b9b498793b9676eb81cb189bfd1eeef",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +506,510 @@      bottomNavigationBar: const Text(bottomNavigationBarLabel),\n      floatingActionButton: const Text(floatingActionButtonLabel),\n      drawer: const Drawer(child:const Text(drawerLabel)),\n    )));\n"
  },
  {
    "id" : "28f9bcff-c411-4997-8aec-e8a5fefc05f0",
    "prId" : 14406,
    "prUrl" : "https://github.com/flutter/flutter/pull/14406#pullrequestreview-93135075",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e4f897e-cad6-4aa6-a860-2fbcb6597703",
        "parentId" : null,
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Explanation: this is now determined by the greater of:\r\n* the 200 viewInset (600-200 = 400)\r\n* the bottom widgets (85 for the nav bar, 90+buttonbar padding for the bottom buttons (107) = 197) ",
        "createdAt" : "2018-02-01T00:37:19Z",
        "updatedAt" : "2018-02-01T05:17:22Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "c09d35482dfe5fc554394633a25b2be7d19ddd31",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +613,617 @@\n    expect(tester.getRect(find.byKey(appBar)), new Rect.fromLTRB(0.0, 0.0, 800.0, 43.0));\n    expect(tester.getRect(find.byKey(body)), new Rect.fromLTRB(0.0, 43.0, 800.0, 400.0));\n    expect(tester.getRect(find.byKey(floatingActionButton)), new Rect.fromLTRB(36.0, 307.0, 113.0, 384.0));\n    expect(tester.getRect(find.byKey(persistentFooterButton)), new Rect.fromLTRB(28.0, 417.0, 128.0, 507.0)); // Note: has 8px each top/bottom padding."
  },
  {
    "id" : "824a7254-3291-4a6c-8e0d-29f401518678",
    "prId" : 14406,
    "prUrl" : "https://github.com/flutter/flutter/pull/14406#pullrequestreview-93169554",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f041286-032d-4e36-a5f5-e90e5374a59d",
        "parentId" : null,
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "We now inset by 16 relative to the viewInset (400-16) = 384.\r\n",
        "createdAt" : "2018-02-01T00:40:38Z",
        "updatedAt" : "2018-02-01T05:17:22Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "890f9f7a-0cc3-4386-841d-4a2b6c03a445",
        "parentId" : "9f041286-032d-4e36-a5f5-e90e5374a59d",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Would add a comment in the code",
        "createdAt" : "2018-02-01T03:54:59Z",
        "updatedAt" : "2018-02-01T05:17:22Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "038419a6-a890-47d9-b34b-36d40a2c09f3",
        "parentId" : "9f041286-032d-4e36-a5f5-e90e5374a59d",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Done.",
        "createdAt" : "2018-02-01T05:18:38Z",
        "updatedAt" : "2018-02-01T05:18:39Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "c09d35482dfe5fc554394633a25b2be7d19ddd31",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +614,618 @@    expect(tester.getRect(find.byKey(appBar)), new Rect.fromLTRB(0.0, 0.0, 800.0, 43.0));\n    expect(tester.getRect(find.byKey(body)), new Rect.fromLTRB(0.0, 43.0, 800.0, 400.0));\n    expect(tester.getRect(find.byKey(floatingActionButton)), new Rect.fromLTRB(36.0, 307.0, 113.0, 384.0));\n    expect(tester.getRect(find.byKey(persistentFooterButton)), new Rect.fromLTRB(28.0, 417.0, 128.0, 507.0)); // Note: has 8px each top/bottom padding.\n    expect(tester.getRect(find.byKey(drawer)), new Rect.fromLTRB(596.0, 0.0, 800.0, 600.0));"
  },
  {
    "id" : "9ed9df33-9429-4a4f-913c-7064abc1a714",
    "prId" : 14406,
    "prUrl" : "https://github.com/flutter/flutter/pull/14406#pullrequestreview-93169148",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ddd948e0-acd5-4a81-a623-967766d0a69c",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Would test one more time that content is moved by just the persistent footer and bottom tabs if the test doesn't exist already",
        "createdAt" : "2018-02-01T03:55:55Z",
        "updatedAt" : "2018-02-01T05:17:22Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "b9eec6f5-db03-4ed2-99a8-ada209710099",
        "parentId" : "ddd948e0-acd5-4a81-a623-967766d0a69c",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Added a test.",
        "createdAt" : "2018-02-01T05:15:04Z",
        "updatedAt" : "2018-02-01T05:17:22Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "c09d35482dfe5fc554394633a25b2be7d19ddd31",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +553,557 @@              bottom: 60.0,\n            ),\n            viewInsets: const EdgeInsets.only(bottom: 200.0),\n          ),\n          child: new Scaffold("
  },
  {
    "id" : "be696e30-7642-44f2-9659-6333307d24b4",
    "prId" : 20015,
    "prUrl" : "https://github.com/flutter/flutter/pull/20015#pullrequestreview-143316873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f33f0c4e-23ca-44d8-9b21-3862d9272e07",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "why was this moved to the ScaffoldGeometry test section?",
        "createdAt" : "2018-08-03T20:03:12Z",
        "updatedAt" : "2018-08-03T20:03:12Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "033ee4a1711707e3d9ca150d1dbb6e9875385bab",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +937,941 @@    });\n\n    testWidgets('Simultaneous drawers on either side', (WidgetTester tester) async {\n      const String bodyLabel = 'I am the body';\n      const String drawerLabel = 'I am the label on start side';"
  },
  {
    "id" : "432e945f-031d-40f2-b66d-d539ed6f0f19",
    "prId" : 23689,
    "prUrl" : "https://github.com/flutter/flutter/pull/23689#pullrequestreview-170009120",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fd3c26a-b3f5-41a1-a601-231d5be7b7cd",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Test should also verify that the new properties work correctly when the drawers are opened with openDrawer(), openEndDrawer()",
        "createdAt" : "2018-10-30T21:36:07Z",
        "updatedAt" : "2018-10-31T21:05:50Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "724341ff0f2c613205fed16d2d8ca42d5ce366d0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +999,1003 @@    });\n\n    testWidgets('Drawer state query correctly', (WidgetTester tester) async {\n      await tester.pumpWidget(\n        MaterialApp("
  },
  {
    "id" : "d9eba90c-f58c-41c5-8d4d-1cbccdaabc68",
    "prId" : 23689,
    "prUrl" : "https://github.com/flutter/flutter/pull/23689#pullrequestreview-170041962",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42b6af36-ea5c-43e5-b6b2-b17113f064de",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "All of these should be the other way around (see https://master-docs-flutter-io.firebaseapp.com/flutter/flutter_test/expect.html):\r\n\r\nexpect(scaffoldState.isDrawerOpen, isTrue);\r\n",
        "createdAt" : "2018-10-30T23:36:26Z",
        "updatedAt" : "2018-10-31T21:05:50Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "724341ff0f2c613205fed16d2d8ca42d5ce366d0",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +1031,1035 @@      await tester.tap(drawerOpenButton);\n      await tester.pumpAndSettle();\n      expect(true, scaffoldState.isDrawerOpen);\n      await tester.tap(endDrawerOpenButton);\n      await tester.pumpAndSettle();"
  },
  {
    "id" : "60c0031a-fdf7-4bb4-b318-1b82cecbe375",
    "prId" : 42640,
    "prUrl" : "https://github.com/flutter/flutter/pull/42640#pullrequestreview-302828004",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb5f201f-fdcf-4d57-a9c9-1d20cfdd6f43",
        "parentId" : null,
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "flutter style would be to put MaterialApp on its own line and put trailing commas for every block that could wrap.",
        "createdAt" : "2019-10-16T19:40:13Z",
        "updatedAt" : "2019-10-24T18:09:16Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "1cbc5c303e17b1f1c90c0fdcf2f5496a9f60ab7f",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +1785,1789 @@      await tester.pumpWidget(\n        MaterialApp(\n          home: Builder(\n            builder: (BuildContext context) {\n              Scaffold.of(context).showBottomSheet<void>((BuildContext context) {"
  }
]