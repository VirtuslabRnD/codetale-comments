[
  {
    "id" : "c7e7f67c-3279-44ea-be7b-e0852291d1b4",
    "prId" : 32053,
    "prUrl" : "https://github.com/flutter/flutter/pull/32053#pullrequestreview-233709968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8294329-2102-4c71-9d31-89062fd25a98",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Someday we should give this function a more meaningful name.",
        "createdAt" : "2019-05-04T00:23:15Z",
        "updatedAt" : "2019-05-04T00:25:00Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "77e6206b890df1ee5a2ad91bc8d5d97aec77294d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +544,548 @@\n  testWidgets('header touch regions are large enough', (WidgetTester tester) async {\n    await mediaQueryBoilerplate(tester, false);\n\n    final Size amSize = tester.getSize(find.ancestor("
  },
  {
    "id" : "f36a5dde-7e7f-4de7-a186-c00aabf3074f",
    "prId" : 59191,
    "prUrl" : "https://github.com/flutter/flutter/pull/59191#pullrequestreview-429786726",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97d4b4bc-0921-4a2e-aff4-bd3546cadf2f",
        "parentId" : null,
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "Why is this an invalid hour?",
        "createdAt" : "2020-06-11T21:32:21Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "8d86f347-e5f6-4aba-bba9-9499fa73afca",
        "parentId" : "97d4b4bc-0921-4a2e-aff4-bd3546cadf2f",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "Oops comment should read invalid minute, fixed",
        "createdAt" : "2020-06-12T14:27:05Z",
        "updatedAt" : "2020-06-22T14:37:11Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "499571c5bf0c13d8b5c9ecae9bed31313004003b",
    "line" : 603,
    "diffHunk" : "@@ -1,1 +751,755 @@\n    // Invalid minute.\n    await tester.enterText(find.byType(TextField).first, '8');\n    await tester.enterText(find.byType(TextField).last, '150');\n    await finishPicker(tester);"
  },
  {
    "id" : "c47f56e5-0a93-4b4e-a95b-bfca0d19aa82",
    "prId" : 64097,
    "prUrl" : "https://github.com/flutter/flutter/pull/64097#pullrequestreview-469875318",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f141016-0777-4aa1-9861-1c30dbf4bede",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Should we be checking the _MinuteTextField as well?",
        "createdAt" : "2020-08-18T22:26:00Z",
        "updatedAt" : "2020-08-18T22:34:51Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "d2b66af1-c852-4faa-85ff-5fb289e6f5cf",
        "parentId" : "3f141016-0777-4aa1-9861-1c30dbf4bede",
        "authorId" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "body" : "Good point, yeah we might as well",
        "createdAt" : "2020-08-18T22:32:48Z",
        "updatedAt" : "2020-08-18T22:34:51Z",
        "lastEditedBy" : "92ae747d-96c4-4999-86e1-78218702f6b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "edf628f216ffef33d064530a7511bd560af8babb",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +813,817 @@    final double hourFieldTop = tester.getTopLeft(find.byWidgetPredicate((Widget w) => '${w.runtimeType}' == '_HourTextField')).dy;\n    final double minuteFieldTop = tester.getTopLeft(find.byWidgetPredicate((Widget w) => '${w.runtimeType}' == '_MinuteTextField')).dy;\n    final double separatorTop = tester.getTopLeft(find.byWidgetPredicate((Widget w) => '${w.runtimeType}' == '_StringFragment')).dy;\n    expect(hourFieldTop, separatorTop);\n    expect(minuteFieldTop, separatorTop);"
  },
  {
    "id" : "15560f8a-babf-4f2a-bbb2-1c5a50078a36",
    "prId" : 67692,
    "prUrl" : "https://github.com/flutter/flutter/pull/67692#pullrequestreview-505260275",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fca2a02-2aa3-48e0-a4f7-238f1966c980",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "First time I've seen nullable type parameters.",
        "createdAt" : "2020-10-09T00:20:15Z",
        "updatedAt" : "2020-10-09T00:24:48Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d3a65ccd31c30e872f45382056ed660cea33e3b",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +54,58 @@}\n\nFuture<Offset?> startPicker(\n    WidgetTester tester,\n    ValueChanged<TimeOfDay> onChanged, {"
  },
  {
    "id" : "97026e20-c8eb-4bf3-a2ba-d2bfc0178644",
    "prId" : 67692,
    "prUrl" : "https://github.com/flutter/flutter/pull/67692#pullrequestreview-505833563",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e626f9d-2cba-446f-b76e-0b285be600b7",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Why was the ignore needed here? For my own curiosity.",
        "createdAt" : "2020-10-09T00:22:47Z",
        "updatedAt" : "2020-10-09T00:24:48Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "e4b34777-a919-428d-bce5-4939dba881bd",
        "parentId" : "6e626f9d-2cba-446f-b76e-0b285be600b7",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I'm curious too, tried looking in the codebase for some explanation but couldn't find one. It seems like it has something to do with using `dynamic` as a type?",
        "createdAt" : "2020-10-09T00:34:06Z",
        "updatedAt" : "2020-10-09T00:34:06Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "aa85cebb-9b89-4b87-b268-c7ca36923540",
        "parentId" : "6e626f9d-2cba-446f-b76e-0b285be600b7",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "NNBD comes with this new lint: https://dart-lang.github.io/linter/lints/unnecessary_nullable_for_final_variable_declarations.html\r\n\r\nBasically, if you have a final variable and assign a non-null value to it, the type of that variable should also be non-null. This makes totally sense in normal code. In this case however, we do not have access to the actual type `_TimePickerDialogState`, which is a private not visible in the test. To still get access to it, the test declares it as dynamic, so we can call any method we want on it and test the internals of the private class. It's a hack, you should never to this in application code.\r\n\r\nUnfortunately, dynamic is a nullable type, triggering the warning.",
        "createdAt" : "2020-10-09T16:24:42Z",
        "updatedAt" : "2020-10-09T16:24:42Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "c795ae58-cae2-4295-b3c7-44197cc832c3",
        "parentId" : "6e626f9d-2cba-446f-b76e-0b285be600b7",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I've actually filed https://github.com/dart-lang/linter/issues/2282 with the linter team to see if this lint is appropriate for `dynamic` variables. It does seem a little odd.",
        "createdAt" : "2020-10-09T16:40:53Z",
        "updatedAt" : "2020-10-09T16:40:53Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d3a65ccd31c30e872f45382056ed660cea33e3b",
    "line" : 221,
    "diffHunk" : "@@ -1,1 +418,422 @@\n    // Ensure we preserve day period as we roll over.\n    final dynamic pickerState = tester.state(_timePickerDialog); // ignore: unnecessary_nullable_for_final_variable_declarations\n    expect(pickerState.selectedTime, const TimeOfDay(hour: 1, minute: 0));\n"
  },
  {
    "id" : "1444610c-0d5d-4830-ac53-d116970ad3d7",
    "prId" : 84566,
    "prUrl" : "https://github.com/flutter/flutter/pull/84566#pullrequestreview-689329459",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21222f6e-d21c-4687-88f6-356409ad5d1b",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Please add a test for the invalid error text as well",
        "createdAt" : "2021-06-21T17:16:45Z",
        "updatedAt" : "2021-06-21T17:16:49Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "35e69866-c45d-4da5-af1d-0f6383a3314e",
        "parentId" : "21222f6e-d21c-4687-88f6-356409ad5d1b",
        "authorId" : "c5dbc665-245d-4080-8945-c2ff39f02226",
        "body" : "Done",
        "createdAt" : "2021-06-22T10:24:38Z",
        "updatedAt" : "2021-06-22T10:24:39Z",
        "lastEditedBy" : "c5dbc665-245d-4080-8945-c2ff39f02226",
        "tags" : [
        ]
      }
    ],
    "commit" : "1660f19017349f94e3297c531fc07b2b27b7599e",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +862,866 @@  });\n\n  testWidgets('Hour label text is used - Input', (WidgetTester tester) async {\n    const String hourLabelText = 'Custom hour label';\n    await mediaQueryBoilerplate(tester, true, entryMode: TimePickerEntryMode.input, hourLabelText: hourLabelText);"
  }
]