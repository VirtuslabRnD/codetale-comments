[
  {
    "id" : "b3ee57fa-b40f-4afe-b53e-34b32b9272ad",
    "prId" : 27632,
    "prUrl" : "https://github.com/flutter/flutter/pull/27632#pullrequestreview-201857292",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "583d1ee4-697a-4283-925d-66f59f2742f7",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I think you have to tester.pump here to make it draw a frame",
        "createdAt" : "2019-02-09T05:55:40Z",
        "updatedAt" : "2019-02-09T09:36:28Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "66c39f41-bdd7-475e-8701-ae73dc8d93ce",
        "parentId" : "583d1ee4-697a-4283-925d-66f59f2742f7",
        "authorId" : "1d025e0c-ca1e-40d8-a6b3-d4dea6b8dc43",
        "body" : "```\r\ntestWidgets('DataTable column onSort test', (WidgetTester tester) async {\r\n    await tester.pumpWidget(\r\n      MaterialApp(\r\n        home: Material(\r\n          child: DataTable(\r\n            columns: const <DataColumn>[\r\n              DataColumn(\r\n                label: Text('Dessert'),\r\n              ),\r\n            ],\r\n            rows: const <DataRow>[\r\n              DataRow(\r\n                cells: <DataCell>[\r\n                  DataCell(\r\n                    Text('Lollipop'), // wraps\r\n                  ),\r\n                ],\r\n              ),\r\n            ],\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n    await tester.tap(find.text('Dessert'));\r\n```\r\n> testWidgets('DataTable column onSort test', (WidgetTester tester) async {\r\n    await tester.pumpWidget(\r\n\r\nI think I've called tester.pumpWidget here.",
        "createdAt" : "2019-02-09T07:04:42Z",
        "updatedAt" : "2019-02-09T09:36:28Z",
        "lastEditedBy" : "1d025e0c-ca1e-40d8-a6b3-d4dea6b8dc43",
        "tags" : [
        ]
      },
      {
        "id" : "98aba139-833a-4b6b-9188-115b713e7e80",
        "parentId" : "583d1ee4-697a-4283-925d-66f59f2742f7",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "It's not a big deal since the original bug was on the onTap but to be more strict, you'd ideally also draw a frame after tapping the column to let it draw the effect of sorting. ",
        "createdAt" : "2019-02-09T07:42:55Z",
        "updatedAt" : "2019-02-09T09:36:28Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "c7298cb7-90c5-4c5c-8c9f-a11d985900b3",
        "parentId" : "583d1ee4-697a-4283-925d-66f59f2742f7",
        "authorId" : "1d025e0c-ca1e-40d8-a6b3-d4dea6b8dc43",
        "body" : "Got it.",
        "createdAt" : "2019-02-09T09:30:32Z",
        "updatedAt" : "2019-02-09T09:36:28Z",
        "lastEditedBy" : "1d025e0c-ca1e-40d8-a6b3-d4dea6b8dc43",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c766ff1d8fe51855fc8740d8d7f70dd548db690",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +237,241 @@    await tester.tap(find.text('Dessert'));\n    await tester.pump();\n    expect(tester.takeException(), isNull);\n  });\n"
  },
  {
    "id" : "c7702780-6260-4025-801d-b769400f0b4d",
    "prId" : 47552,
    "prUrl" : "https://github.com/flutter/flutter/pull/47552#pullrequestreview-335564930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1d4e757-156f-4c64-bc6a-ece0c144b310",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "should also test that the layout updates correctly if you toggle showCheckboxColumn",
        "createdAt" : "2019-12-20T23:01:48Z",
        "updatedAt" : "2020-01-06T17:23:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "71ecd5c6-6387-4e8c-b5c3-6876444cdd01",
        "parentId" : "a1d4e757-156f-4c64-bc6a-ece0c144b310",
        "authorId" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "body" : "Done.",
        "createdAt" : "2019-12-20T23:26:49Z",
        "updatedAt" : "2020-01-06T17:23:20Z",
        "lastEditedBy" : "f92ac36b-d27a-47fd-a969-69dedb3e9ca7",
        "tags" : [
        ]
      }
    ],
    "commit" : "d94b69d24e6e67d8d4b40bd8886797d738099268",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +165,169 @@    log.clear();\n  });\n\n  testWidgets('DataTable overflow test - header', (WidgetTester tester) async {\n    await tester.pumpWidget("
  },
  {
    "id" : "78266208-9ec9-4d5b-9a26-a09ee10b0af2",
    "prId" : 47552,
    "prUrl" : "https://github.com/flutter/flutter/pull/47552#pullrequestreview-338223966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5a6255b-2ce1-4625-b288-8b4d63a1c325",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "assert here that `find.byType(Checkbox)` finds nothing?",
        "createdAt" : "2020-01-03T19:00:32Z",
        "updatedAt" : "2020-01-06T17:23:20Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "d94b69d24e6e67d8d4b40bd8886797d738099268",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +146,150 @@      home: Material(child: buildTable()),\n    ));\n\n    expect(find.byType(Checkbox), findsNothing);\n    await tester.tap(find.text('Cupcake'));"
  },
  {
    "id" : "86e29d33-cc74-40d4-908c-136969fab303",
    "prId" : 51667,
    "prUrl" : "https://github.com/flutter/flutter/pull/51667#pullrequestreview-373960517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08e8b0ae-544c-4df9-8b93-bdabd59c7b5e",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "What are these brackets enclosing? Here and below.",
        "createdAt" : "2020-03-11T20:42:02Z",
        "updatedAt" : "2020-03-12T21:34:20Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "35c1e92c-c7d3-40a0-b328-77ebfd0ee06f",
        "parentId" : "08e8b0ae-544c-4df9-8b93-bdabd59c7b5e",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "These brackets are only to scope `nameText` and `nameCell` between subtests so that I don't have to either use `nameText1` `nameText2` etc, or declare 5 empty variables at the start of the test. ",
        "createdAt" : "2020-03-12T21:20:15Z",
        "updatedAt" : "2020-03-12T21:34:20Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      },
      {
        "id" : "0f240155-fd4d-40fd-8ab0-5d8f03bcf497",
        "parentId" : "08e8b0ae-544c-4df9-8b93-bdabd59c7b5e",
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "Good to know! Thanks!",
        "createdAt" : "2020-03-12T23:19:31Z",
        "updatedAt" : "2020-03-12T23:19:31Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      }
    ],
    "commit" : "f062a79652842a22a4f9b4cbf3fc04a6a0b3ff7e",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +949,953 @@    ));\n\n    {\n      final Finder nameText = find.text('Name');\n      expect(nameText, findsOneWidget);"
  },
  {
    "id" : "a1221684-8a4a-4994-baf3-384222a12efc",
    "prId" : 51667,
    "prUrl" : "https://github.com/flutter/flutter/pull/51667#pullrequestreview-373914839",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcb0816c-2953-4378-97c3-c31a2f254e5d",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "This last `pumpWidget` and the following expectations looks like the first one, why do we check it again?",
        "createdAt" : "2020-03-11T20:45:53Z",
        "updatedAt" : "2020-03-12T21:34:20Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "973b4021-f283-435a-bf36-8e6db7d599cf",
        "parentId" : "bcb0816c-2953-4378-97c3-c31a2f254e5d",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "It was a suggestion by Hixie that we test turning it on then off again just to make sure. I added comment to explain the intention, hopefully it's clearer.",
        "createdAt" : "2020-03-12T21:27:17Z",
        "updatedAt" : "2020-03-12T21:34:20Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      }
    ],
    "commit" : "f062a79652842a22a4f9b4cbf3fc04a6a0b3ff7e",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +972,976 @@\n    // Turn off sorting again\n    await tester.pumpWidget(MaterialApp(\n      home: Material(child: buildTable(\n        sortEnabled: false,"
  },
  {
    "id" : "c070a7c8-5913-412e-a7f0-039fc23bf2cc",
    "prId" : 51667,
    "prUrl" : "https://github.com/flutter/flutter/pull/51667#pullrequestreview-373917874",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4df9baa8-ed41-4215-acd7-164c0f94ecd3",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "Do you want to check something after this `pumpAndSettle`?",
        "createdAt" : "2020-03-11T20:47:38Z",
        "updatedAt" : "2020-03-12T21:34:20Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "82350652-1f7b-4413-ada0-57321d2eeecb",
        "parentId" : "4df9baa8-ed41-4215-acd7-164c0f94ecd3",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "Not really. This `pumpAndSettle` is mostly to prevent an exception thrown by `Tooltip` when its timer expires and schedules a new frame when the view has been destroyed. I've updated the comment to make it clearer.",
        "createdAt" : "2020-03-12T21:33:09Z",
        "updatedAt" : "2020-03-12T21:34:20Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      }
    ],
    "commit" : "f062a79652842a22a4f9b4cbf3fc04a6a0b3ff7e",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +1033,1037 @@    // Wait for the tooltip timer to expire to prevent it scheduling a new frame\n    // after the view is destroyed, which causes exceptions.\n    await tester.pumpAndSettle(const Duration(seconds: 1));\n  });\n}"
  },
  {
    "id" : "83fd70b1-0f8b-4e44-9798-b018d1d83123",
    "prId" : 66640,
    "prUrl" : "https://github.com/flutter/flutter/pull/66640#pullrequestreview-504033700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1eb301c-cb2d-493c-b320-45bd44c91c26",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2020-10-07T16:12:01Z",
        "updatedAt" : "2020-10-09T11:33:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "74cd2113c473500ffc02bfd5ad186e5a8f340ceb",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +473,477 @@    ));\n\n    // The finder matches with the Container of the cell content, as well as the\n    // Container wrapping the whole table. The first one is used to test row\n    // heights."
  },
  {
    "id" : "c45d9b0d-5568-4bfe-96de-e9d416f10350",
    "prId" : 67938,
    "prUrl" : "https://github.com/flutter/flutter/pull/67938#pullrequestreview-506813168",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34e69ad2-1644-4a03-a9b6-4fc0f4e03c25",
        "parentId" : null,
        "authorId" : "6cff55ea-5671-4703-a864-79795e21a275",
        "body" : "does it matter that the disabled index is already false? make it true to be certain that it goes back to false?",
        "createdAt" : "2020-10-12T17:50:41Z",
        "updatedAt" : "2020-10-12T17:50:41Z",
        "lastEditedBy" : "6cff55ea-5671-4703-a864-79795e21a275",
        "tags" : [
        ]
      },
      {
        "id" : "cd5fbc0f-8b31-4188-8bf9-c0de4a41d9ad",
        "parentId" : "34e69ad2-1644-4a03-a9b6-4fc0f4e03c25",
        "authorId" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "body" : "If I put it to `true` here, the test would pass without my change as all checkboxes would be selected, and the parent therefore would deselect all (without ignoring any disabled checkboxes).\r\n\r\nBy putting it to `false` here, I am making sure my change works.",
        "createdAt" : "2020-10-12T17:54:22Z",
        "updatedAt" : "2020-10-12T17:58:42Z",
        "lastEditedBy" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "tags" : [
        ]
      }
    ],
    "commit" : "20c76ce409e5c637563bac0c43a82f46393bc8a8",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +165,169 @@        child: buildTable(\n          <bool>[true, true, false],\n          disabledIndex: 2,\n        ),\n      ),"
  }
]