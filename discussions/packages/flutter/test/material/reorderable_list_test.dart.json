[
  {
    "id" : "8f573c3d-7cbb-44d6-ad69-07d64c4885a4",
    "prId" : 18374,
    "prUrl" : "https://github.com/flutter/flutter/pull/18374#pullrequestreview-129008027",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52a7aee8-f754-4173-9537-62abb771ba09",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It would be useful to have a variable height items test where the item being dragged is as big as the list. Of course tests that scroll will be needed for that.",
        "createdAt" : "2018-06-15T00:48:59Z",
        "updatedAt" : "2018-07-27T21:53:36Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b7da79f94c3608f17f7d697d06fe07e887a9fad",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +7,11 @@import 'package:flutter/material.dart';\n\nvoid main() {\n  group('$ReorderableListView', () {\n    const double itemHeight = 48.0;"
  },
  {
    "id" : "9e9fd33c-8cdb-4a5b-84ca-e98bebce200d",
    "prId" : 41338,
    "prUrl" : "https://github.com/flutter/flutter/pull/41338#pullrequestreview-293911247",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af587e4f-de30-4f52-832d-5e281f95079d",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Please leave a comment with all `// ignore:` explaining why this has to be ignored as per our style guide: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#comment-all-ignores",
        "createdAt" : "2019-09-26T16:37:37Z",
        "updatedAt" : "2019-09-26T23:01:34Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "510cdd1c-4fd0-410e-83d4-9e17f32a790a",
        "parentId" : "af587e4f-de30-4f52-832d-5e281f95079d",
        "authorId" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "body" : "The comment a few lines above (\"Rebuild with distinct key objects\") is meant to be that comment. I can make it more explicit if it's not clear.\r\n\r\nAlternatively, I could create some other key type that doesn't have a const constructor at all, but it seemed a bit heavyweight for this.",
        "createdAt" : "2019-09-26T18:13:38Z",
        "updatedAt" : "2019-09-26T23:01:34Z",
        "lastEditedBy" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef80efc9481d79da896280d3703ff4438f451d34",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +687,691 @@              // Deliberately avoid the const constructor below to ensure keys are\n              // distinct objects.\n              _Stateful(key: ObjectKey('B')), // ignore:prefer_const_constructors\n              _Stateful(key: ObjectKey('C')), // ignore:prefer_const_constructors\n              _Stateful(key: ObjectKey('A')), // ignore:prefer_const_constructors"
  }
]