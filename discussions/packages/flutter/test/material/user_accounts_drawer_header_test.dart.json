[
  {
    "id" : "9e6abd88-67e4-4a00-815c-0d65b07dad5f",
    "prId" : 4953,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a164e768-bf0e-4535-a3e8-54b07ba0811e",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "You should include simple tests that create a DrawerHeader with only a child, or with no parameters at all.\n",
        "createdAt" : "2016-07-20T21:32:43Z",
        "updatedAt" : "2016-07-20T23:16:27Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "f2c681da-2678-4b94-939a-729f2274544d",
        "parentId" : "a164e768-bf0e-4535-a3e8-54b07ba0811e",
        "authorId" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "body" : "Asserts were added in `drawer_test.dart`.\n",
        "createdAt" : "2016-07-20T22:39:03Z",
        "updatedAt" : "2016-07-20T23:16:27Z",
        "lastEditedBy" : "644b5fd7-ddca-4da3-87ca-328ae5467a8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "65e77142e91096aafee3bc3635aeb6af38ed5d10",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +7,11 @@import 'package:flutter_test/flutter_test.dart';\n\nvoid main() {\n  testWidgets('UserAccuntsDrawerHeader test', (WidgetTester tester) async {\n    final Key avatarA = new Key('A');"
  },
  {
    "id" : "dc817f2d-7049-44cc-83ee-8ea8141ebb69",
    "prId" : 13711,
    "prUrl" : "https://github.com/flutter/flutter/pull/13711#pullrequestreview-84927749",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66f100f3-d446-4d69-b0de-0577ff88ef81",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This empty SemanticsNode seems strange. Its child should just be a child of its parent, I think.",
        "createdAt" : "2017-12-20T22:12:54Z",
        "updatedAt" : "2017-12-20T23:20:25Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "06ea811a-2184-414c-ad67-cfa2f18b5f28",
        "parentId" : "66f100f3-d446-4d69-b0de-0577ff88ef81",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Removed.",
        "createdAt" : "2017-12-20T23:19:02Z",
        "updatedAt" : "2017-12-20T23:20:25Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "24504aace05e7bdc3cbde137803af8e5a8346f45",
    "line" : 171,
    "diffHunk" : "@@ -1,1 +230,234 @@                  textDirection: TextDirection.ltr,\n                ),\n                new TestSemantics(\n                  flags: <SemanticsFlags>[SemanticsFlags.isButton],\n                  actions: <SemanticsAction>[SemanticsAction.tap],"
  },
  {
    "id" : "cc65cdb9-0b3f-4e9a-abf1-e183a084bcfb",
    "prId" : 24306,
    "prUrl" : "https://github.com/flutter/flutter/pull/24306#pullrequestreview-174890255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "555cf940-8442-40ce-b620-31475ca1de0a",
        "parentId" : null,
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Is it the case that because the lint fired here, that these are not in auto-const scopes?",
        "createdAt" : "2018-11-14T13:30:17Z",
        "updatedAt" : "2018-11-14T13:30:32Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      },
      {
        "id" : "9bb5aa94-07e8-4ad8-94ea-d49bc5eecb9b",
        "parentId" : "555cf940-8442-40ce-b620-31475ca1de0a",
        "authorId" : "0d714b78-614b-4ebc-abf9-6df1722bc1e3",
        "body" : "Yes, these expressions are not in a constant context.",
        "createdAt" : "2018-11-14T14:34:33Z",
        "updatedAt" : "2018-11-14T14:34:33Z",
        "lastEditedBy" : "0d714b78-614b-4ebc-abf9-6df1722bc1e3",
        "tags" : [
        ]
      }
    ],
    "commit" : "08294c77cac28eb56bd53394d9ac7fc70ef2f37e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +114,118 @@    await tester.tap(find.byType(Icon));\n    await tester.pump();\n    await tester.pump(const Duration(milliseconds: 10));\n    expect(tester.hasRunningAnimations, isTrue);\n"
  }
]