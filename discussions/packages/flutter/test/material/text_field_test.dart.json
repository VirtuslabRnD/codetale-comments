[
  {
    "id" : "af85a9bd-f7be-464c-9add-8f8ae133f1b1",
    "prId" : 9284,
    "prUrl" : "https://github.com/flutter/flutter/pull/9284#pullrequestreview-31634133",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70ab725c-f2b6-44cf-8d9e-a0b2d6d1e8c2",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "This idle shouldn't be needed.  It used to be needed, but at HEAD it is folded into enterText",
        "createdAt" : "2017-04-07T18:15:44Z",
        "updatedAt" : "2017-04-07T18:15:44Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "80bbacaa-7fbe-4837-afe6-43c247c43fb3",
        "parentId" : "70ab725c-f2b6-44cf-8d9e-a0b2d6d1e8c2",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Sent #9290 that cleans up all cases I found in the framework tests.",
        "createdAt" : "2017-04-07T18:33:04Z",
        "updatedAt" : "2017-04-07T18:33:15Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "f50ea625-b68a-4c04-aaa5-e467874f2517",
        "parentId" : "70ab725c-f2b6-44cf-8d9e-a0b2d6d1e8c2",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Thanks!  I guess I missed a bunch of them before.",
        "createdAt" : "2017-04-07T18:38:21Z",
        "updatedAt" : "2017-04-07T18:38:21Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7743c11a645d1d6974d9b461fd811e7b6e2a1fc",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +211,215 @@    final String testValue = 'abc def ghi';\n    await tester.enterText(find.byType(EditableText), testValue);\n    await tester.idle();\n\n    await tester.pumpWidget(builder());"
  },
  {
    "id" : "47f84a31-3c08-475b-9d50-219c568366ec",
    "prId" : 9332,
    "prUrl" : "https://github.com/flutter/flutter/pull/9332#pullrequestreview-32484743",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b83c9f0-c160-48a2-aa77-cd15f7096e5b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I assume that all of the abcd... stuff was to force the text field to wrap. Is that not needed anymore? ",
        "createdAt" : "2017-04-12T20:01:49Z",
        "updatedAt" : "2017-04-12T20:01:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "08e7723c-faec-462c-98bf-81d185e230f4",
        "parentId" : "5b83c9f0-c160-48a2-aa77-cd15f7096e5b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Yeah the Ahem font is much wider than most fonts.",
        "createdAt" : "2017-04-12T20:27:19Z",
        "updatedAt" : "2017-04-12T20:27:19Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5596f77348d44eca96a64c480d75b090b8f78e86",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +41,45 @@\n  const String kThreeLines =\n    'First line of text is ' +\n    'Second line goes until ' +\n    'Third line of stuff ';"
  },
  {
    "id" : "b2370fd8-ff03-4f80-aa63-7ad796c50216",
    "prId" : 12648,
    "prUrl" : "https://github.com/flutter/flutter/pull/12648#pullrequestreview-70918530",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80e7cdd8-a0ae-4f09-abbb-142f2a103f41",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Shouldn't we verify that the counter text's style changes when maxLength is exceeded (before and after)?",
        "createdAt" : "2017-10-20T17:29:55Z",
        "updatedAt" : "2017-10-24T21:23:42Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "19b6f5e2-7095-49de-bb6f-249a47ee5901",
        "parentId" : "80e7cdd8-a0ae-4f09-abbb-142f2a103f41",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes, I guess so.  Added.",
        "createdAt" : "2017-10-20T19:10:27Z",
        "updatedAt" : "2017-10-24T21:23:42Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dc9f3bb644ef3860d1cd6c16636813f58e41cdf",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +1603,1607 @@    await tester.pump();\n\n    expect(textController.text, '0123456789101112');\n    expect(find.text('16 / 10'), findsOneWidget);\n    Text counterTextWidget = tester.widget(find.text('16 / 10'));"
  },
  {
    "id" : "1ec76ae5-b9e7-42d8-969a-2916306de514",
    "prId" : 19317,
    "prUrl" : "https://github.com/flutter/flutter/pull/19317#pullrequestreview-137961882",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8dc30c4c-d70d-44b4-97cc-380a417628d5",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Same comments as earlier about the test's structure.",
        "createdAt" : "2018-07-17T18:38:45Z",
        "updatedAt" : "2018-07-23T20:41:52Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "d87d6b5060e6fe57be2cad556d91560371c40256",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +317,321 @@  }, skip: !Platform.isLinux);\n\n  testWidgets('cursor layout has correct radius', (WidgetTester tester) async {\n    await tester.pumpWidget(\n        overlay("
  },
  {
    "id" : "34245399-002b-495c-bc9e-0ae2f0de5a64",
    "prId" : 19317,
    "prUrl" : "https://github.com/flutter/flutter/pull/19317#pullrequestreview-138050622",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9db40ee4-4d68-4cc6-a243-28d11bf0cb4c",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Why did the origin of these tests change? Is the text field's new default cursor width changing TextField's instrinsic width?  I didn't think we expected this PR to introduce any layout changes.",
        "createdAt" : "2018-07-17T18:46:18Z",
        "updatedAt" : "2018-07-23T20:41:52Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "a5152b26-3b1b-4441-8ecf-8b2a24c7d5ee",
        "parentId" : "9db40ee4-4d68-4cc6-a243-28d11bf0cb4c",
        "authorId" : "ee0cb3a6-6d76-417c-8f81-959063820628",
        "body" : "The new width (1.o -> 2.0) is causing this change.",
        "createdAt" : "2018-07-17T20:32:26Z",
        "updatedAt" : "2018-07-23T20:41:52Z",
        "lastEditedBy" : "ee0cb3a6-6d76-417c-8f81-959063820628",
        "tags" : [
        ]
      },
      {
        "id" : "2ff49472-af8b-45fe-974f-a65cd03c8fb2",
        "parentId" : "9db40ee4-4d68-4cc6-a243-28d11bf0cb4c",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Does it only affect empty TextFields?",
        "createdAt" : "2018-07-17T21:51:37Z",
        "updatedAt" : "2018-07-23T20:41:52Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "714e000c-cef2-476d-82d1-252ba325f809",
        "parentId" : "9db40ee4-4d68-4cc6-a243-28d11bf0cb4c",
        "authorId" : "ee0cb3a6-6d76-417c-8f81-959063820628",
        "body" : "It looks like it affects textfields with text in them, but the test shows that entering text does not change the layout.",
        "createdAt" : "2018-07-17T21:55:59Z",
        "updatedAt" : "2018-07-23T20:41:52Z",
        "lastEditedBy" : "ee0cb3a6-6d76-417c-8f81-959063820628",
        "tags" : [
        ]
      },
      {
        "id" : "18c41222-73d4-4ab9-b582-1bc9c9e8b39d",
        "parentId" : "9db40ee4-4d68-4cc6-a243-28d11bf0cb4c",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Sorry I misread this test change: I was assuming that we were checking the TextField's topLeft, not the caret's topLeft. The caret edge moving over a half pixel totally makes sense. Sorry about the confusion.",
        "createdAt" : "2018-07-17T22:46:09Z",
        "updatedAt" : "2018-07-23T20:41:52Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "fcb01300-0456-4e3d-9533-1457bd6cea56",
        "parentId" : "9db40ee4-4d68-4cc6-a243-28d11bf0cb4c",
        "authorId" : "ee0cb3a6-6d76-417c-8f81-959063820628",
        "body" : "Oh wow, I missed that too. Thanks for catching it!",
        "createdAt" : "2018-07-17T22:52:24Z",
        "updatedAt" : "2018-07-23T20:41:52Z",
        "lastEditedBy" : "ee0cb3a6-6d76-417c-8f81-959063820628",
        "tags" : [
        ]
      }
    ],
    "commit" : "d87d6b5060e6fe57be2cad556d91560371c40256",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +1295,1299 @@    );\n\n    expect(topLeft.dx, equals(398.5));\n\n    await tester.enterText(find.byType(TextField), 'abcd');"
  },
  {
    "id" : "1a65c62e-e4e6-4fb2-9eb4-f81fcfd29f72",
    "prId" : 20204,
    "prUrl" : "https://github.com/flutter/flutter/pull/20204#pullrequestreview-147820740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f48c7e1-7a23-475c-a4c5-27fee950c530",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "some other tests to have would be:\r\n- if you have two text fields, and both think they are focused, do they both get the events?\r\n- if you have two text fields, and you switch the focus from one to the other and back again, does only the focused one react?\r\n- if you have a text field and you move it from one part of the tree to another using a GlobalKey, does it keep receiving events after?",
        "createdAt" : "2018-08-13T18:28:18Z",
        "updatedAt" : "2018-08-23T21:43:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "5e21e616-1667-480e-9ddd-e505d3630f5e",
        "parentId" : "8f48c7e1-7a23-475c-a4c5-27fee950c530",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "1) That should work right? They should both get events, correct? Also, I'm having trouble figuring out how to write this test.",
        "createdAt" : "2018-08-13T19:06:51Z",
        "updatedAt" : "2018-08-23T21:43:06Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "ef60aeb1-6188-4aa7-8f55-44b0c6ddf296",
        "parentId" : "8f48c7e1-7a23-475c-a4c5-27fee950c530",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "/ how should I focus both fields? I can't use the tester.tap, because that will only focus one of them...",
        "createdAt" : "2018-08-13T19:40:13Z",
        "updatedAt" : "2018-08-23T21:43:06Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "fc8639bb-4006-4e65-94a8-1199a7d873b1",
        "parentId" : "8f48c7e1-7a23-475c-a4c5-27fee950c530",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Right, if they both think they're focused they should both get events.\r\nOne way to test it would be to have a Column with two MaterialApps inside. Each MaterialApp will starts its own independent focus scope, I believe.",
        "createdAt" : "2018-08-13T19:55:29Z",
        "updatedAt" : "2018-08-23T21:43:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "9a71f4f5-99c6-479b-865c-33dcc14be3b7",
        "parentId" : "8f48c7e1-7a23-475c-a4c5-27fee950c530",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "Also for 2), what are we trying to test here? What do you mean react? Obviously typing works correctly in this situation.",
        "createdAt" : "2018-08-13T20:01:24Z",
        "updatedAt" : "2018-08-23T21:43:06Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "58271a87-5726-44cc-9327-0bc7bf146570",
        "parentId" : "8f48c7e1-7a23-475c-a4c5-27fee950c530",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "The purpose of tests is to make sure we don't accidentally break things later, not to verify that it works today. I can easily imagine scenarios where we accidentally break things so that switching focus no longer correctly results in the right text field detecting the keystrokes.",
        "createdAt" : "2018-08-15T21:31:53Z",
        "updatedAt" : "2018-08-23T21:43:06Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "6bb6e9ac-9701-4542-bd87-2a90b77990b8",
        "parentId" : "8f48c7e1-7a23-475c-a4c5-27fee950c530",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "@Hixie Jeremy and I took a look at this today and we've come to the conclusion that there is no way to set this up in our current test environment. The test binding has a single slot for focus which it maintains, so building two material apps causes the second to entirely steal focus for the first.",
        "createdAt" : "2018-08-20T21:00:30Z",
        "updatedAt" : "2018-08-23T21:43:06Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cce723830c555545ba632307e74a2b29825bd43f",
    "line" : 158,
    "diffHunk" : "@@ -1,1 +1919,1923 @@    });\n  });\n\n  testWidgets('Changing positions of text fields', (WidgetTester tester) async{\n"
  },
  {
    "id" : "cacc29a9-1a0d-4262-9841-a52a733018c0",
    "prId" : 24449,
    "prUrl" : "https://github.com/flutter/flutter/pull/24449#pullrequestreview-176029160",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cddf144-9f61-4b43-9e40-ab25cea295a4",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "TextStyle overrides `operator ==` so you can compare editableText.style with ...subhead ",
        "createdAt" : "2018-11-16T22:48:43Z",
        "updatedAt" : "2018-12-12T23:36:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "26d85a06-57d0-4e0a-89ec-145b08310501",
        "parentId" : "5cddf144-9f61-4b43-9e40-ab25cea295a4",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "This seems to fail when I try it.  It looks like the editableText style is having some properties changed somewhere along the way so it's no longer equal to the theme.",
        "createdAt" : "2018-11-16T23:44:34Z",
        "updatedAt" : "2018-12-12T23:36:01Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "9dd378f5-54f3-4d31-8e0c-37cbce8da004",
        "parentId" : "5cddf144-9f61-4b43-9e40-ab25cea295a4",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "That's probably because the theme's TextStyles are localized when the app's theme looked up with `ThemeData.of()'.  See https://docs.flutter.io/flutter/material/ThemeData/localize.html and https://github.com/flutter/flutter/blob/master/packages/flutter/lib/src/material/theme.dart#L137\r\n\r\nThat's why the value of `Theme.of(context).textTheme.subhead` isn't the same as the textstyle created by the test and to the MaterialApp's theme (ThemeData) parameter.",
        "createdAt" : "2018-11-17T00:44:04Z",
        "updatedAt" : "2018-12-12T23:36:01Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a04167ffe26de452ee297acc0ae74a10d7b13d8",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +3448,3452 @@    await tester.pumpWidget(buildFrame(const TextStyle()));\n    EditableText editableText = tester.widget(find.byType(EditableText));\n    expect(editableText.style.color, themeData.textTheme.subhead.color);\n    expect(editableText.style.background, themeData.textTheme.subhead.background);\n    expect(editableText.style.shadows, themeData.textTheme.subhead.shadows);"
  },
  {
    "id" : "10633aeb-4983-41bf-9057-61ae1cfaf744",
    "prId" : 24449,
    "prUrl" : "https://github.com/flutter/flutter/pull/24449#pullrequestreview-176030178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c39a958-aeeb-4af6-bd72-9f527ebfc50a",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "@HansMuller I found that I got errors when I used a TextStyle with `inherited: false` and didn't also provide these two parameters `fontSize` and `textBaseline`.  I'm sure they're being merged onto this somewhere internally, but `inherited: false` prevents it.  Is that anything to be concerned about?",
        "createdAt" : "2018-11-16T23:48:08Z",
        "updatedAt" : "2018-12-12T23:36:01Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "fbaf4d89-971c-4e96-993c-92ec7bf4a0e8",
        "parentId" : "0c39a958-aeeb-4af6-bd72-9f527ebfc50a",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Maybe related to this crash? https://github.com/flutter/flutter/issues/8728\r\n\r\nThat crash doesn't happen for me (with `inherited: true`), but it does look similar to this.",
        "createdAt" : "2018-11-17T00:52:36Z",
        "updatedAt" : "2018-12-12T23:36:01Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a04167ffe26de452ee297acc0ae74a10d7b13d8",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +3464,3468 @@    await tester.pumpWidget(buildFrame(const TextStyle(\n      fontSize: 24.0,\n      textBaseline: TextBaseline.alphabetic,\n      inherit: false,\n    )));"
  },
  {
    "id" : "ad1949da-7800-446e-8a99-f8ead13258cd",
    "prId" : 24457,
    "prUrl" : "https://github.com/flutter/flutter/pull/24457#pullrequestreview-187157483",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7879a86-2a86-4193-b214-2099ca6dd6b3",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Not clear what this tap is for? Aren't we just checking a double tap?",
        "createdAt" : "2018-12-14T02:20:22Z",
        "updatedAt" : "2018-12-20T22:33:47Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "25e12a1b-ec06-474c-b04f-591aadad1975",
        "parentId" : "a7879a86-2a86-4193-b214-2099ca6dd6b3",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Unfortunately the rebase broke the github comment. I can't figure out which line you commented on anymore",
        "createdAt" : "2018-12-18T02:52:09Z",
        "updatedAt" : "2018-12-20T22:33:47Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "dc17c471-b115-45ea-b98a-996cc86529c9",
        "parentId" : "a7879a86-2a86-4193-b214-2099ca6dd6b3",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "What's the tapAt on line 3695 for?  It doesn't seem to be needed for the test.",
        "createdAt" : "2018-12-20T19:55:50Z",
        "updatedAt" : "2018-12-20T22:33:47Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "486f232b0a9e319b7b53f284a63c5ea79da84f6f",
    "line" : 155,
    "diffHunk" : "@@ -1,1 +3696,3700 @@      // This tap just puts the cursor somewhere different than where the double\n      // tap will occur to test that the double tap moves the existing cursor first.\n      await tester.tapAt(textfieldStart + const Offset(50.0, 5.0));\n      await tester.pump(const Duration(milliseconds: 500));\n"
  },
  {
    "id" : "3f0f3c40-f320-44ab-acd2-793394e8b6bf",
    "prId" : 24457,
    "prUrl" : "https://github.com/flutter/flutter/pull/24457#pullrequestreview-184942360",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a28162eb-1e2f-4a91-81ad-b6110a677bc6",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "As before, what's this tap for?",
        "createdAt" : "2018-12-14T02:21:17Z",
        "updatedAt" : "2018-12-20T22:33:47Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "486f232b0a9e319b7b53f284a63c5ea79da84f6f",
    "line" : 201,
    "diffHunk" : "@@ -1,1 +3742,3746 @@      // This tap just puts the cursor somewhere different than where the double\n      // tap will occur to test that the double tap moves the existing cursor first.\n      await tester.tapAt(textfieldStart + const Offset(50.0, 5.0));\n      await tester.pump(const Duration(milliseconds: 500));\n"
  },
  {
    "id" : "3a3203d3-5f38-4162-b672-cff2b163bbc8",
    "prId" : 24457,
    "prUrl" : "https://github.com/flutter/flutter/pull/24457#pullrequestreview-187212096",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8e30938-affe-408e-9aa1-d9eb7a6b0f02",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "A comment that explained the significance of 300ms would be helpful (I assume 300ms > double tap interval).",
        "createdAt" : "2018-12-20T19:53:04Z",
        "updatedAt" : "2018-12-20T22:33:47Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "e474fbb9-c63d-43bf-a97e-5f36db532913",
        "parentId" : "f8e30938-affe-408e-9aa1-d9eb7a6b0f02",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Done",
        "createdAt" : "2018-12-20T22:34:10Z",
        "updatedAt" : "2018-12-20T22:34:11Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "486f232b0a9e319b7b53f284a63c5ea79da84f6f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +3458,3462 @@    await tester.tap(find.byType(TextField));\n    // Wait a bit so they're all single taps and not double taps.\n    await tester.pump(const Duration(milliseconds: 300));\n    await tester.tap(find.byType(TextField));\n    await tester.pump(const Duration(milliseconds: 300));"
  },
  {
    "id" : "e0bfe9cd-4aa1-4eb1-9c24-b37cf4ae52a1",
    "prId" : 24587,
    "prUrl" : "https://github.com/flutter/flutter/pull/24587#pullrequestreview-178566599",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd75d54a-9750-4f72-9c16-fbd28349f893",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I think what you want here is:\r\n````\r\nexpect(buildFrame(...), throwsAssertionError);\r\n```",
        "createdAt" : "2018-11-26T22:54:55Z",
        "updatedAt" : "2018-12-12T16:30:00Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "090e822a-6486-4cb6-8ede-41a47f2b2227",
        "parentId" : "fd75d54a-9750-4f72-9c16-fbd28349f893",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Talked to Hans and it seems we can't do it this way because `build` will never be called.",
        "createdAt" : "2018-11-27T00:38:12Z",
        "updatedAt" : "2018-12-12T16:30:00Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5aa3ca605d7e565dc9a235c661abf7563b7ba80",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +3432,3436 @@    }\n\n    await tester.pumpWidget(buildFrame(const TextStyle(\n      inherit: false,\n      fontSize: 12.0,"
  },
  {
    "id" : "3a826e1e-3ab4-4683-873e-73992ce5db18",
    "prId" : 25055,
    "prUrl" : "https://github.com/flutter/flutter/pull/25055#pullrequestreview-183801940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fecc43f2-f1af-4108-98dd-3e281f0bb29c",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "We should also verify that if the the TextField is created within an IntrinsicWidth with no stepWidth specified, that the result is a textfield that's just wide enough to drive to the cursor to the end without scrolling. \r\n\r\nTests use the fixed-width Ahem font by default, so you can easily predict the textfield's exact width.\r\n\r\nShould check this with a textfield that's `textAlign: TextAlign.right` and `TextAlign.left`",
        "createdAt" : "2018-12-11T17:40:37Z",
        "updatedAt" : "2018-12-20T21:10:18Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "50f05a619fef17fb84740485ac9aebe0c69a11c8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +3481,3485 @@  });\n\n  testWidgets('Includes cursor for TextField', (WidgetTester tester) async {\n    // This is a regression test for https://github.com/flutter/flutter/issues/24612\n"
  },
  {
    "id" : "d5c783e1-91aa-4270-825a-721bd1038cd2",
    "prId" : 26309,
    "prUrl" : "https://github.com/flutter/flutter/pull/26309#pullrequestreview-192285549",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9e3b005-6c95-4cdf-a14f-5129e57824c4",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "This tests horizontal scrolling.  The reason I changed this to an exact pixel value was to catch a mistake I made (adding the vertical `caretOffset` to the horizontal `caretRect.left`).",
        "createdAt" : "2019-01-14T16:38:07Z",
        "updatedAt" : "2019-01-15T18:01:39Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "a0f2a136-63c3-4225-9ca3-a16ec2d0437e",
        "parentId" : "f9e3b005-6c95-4cdf-a14f-5129e57824c4",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It would be helpful to add a comment here, just to explain what the 222 means",
        "createdAt" : "2019-01-14T18:10:26Z",
        "updatedAt" : "2019-01-15T18:01:39Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba80adfb10fc7718824e288f72dd15bce1a61d12",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1723,1727 @@    scrollableState = tester.firstState(find.byType(Scrollable));\n    // For a horizontal input, scrolls to the exact position of the caret.\n    expect(scrollableState.position.pixels, equals(222.0));\n  });\n"
  },
  {
    "id" : "bcbd40c5-e96e-443d-bfb4-acd943a43c55",
    "prId" : 26652,
    "prUrl" : "https://github.com/flutter/flutter/pull/26652#pullrequestreview-193429474",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b443d9a-9b71-441e-97d9-35e89388dbfd",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you can also use `moreOrLessEquals()`.",
        "createdAt" : "2019-01-17T01:35:21Z",
        "updatedAt" : "2019-01-17T01:35:21Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb46c3921bff3fb7048b5470dd08d3a704013c0b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1758,1762 @@    final double lineHeight = findRenderEditable(tester).preferredLineHeight;\n    scrollableState = tester.firstState(find.byType(Scrollable));\n    expect(scrollableState.position.pixels, closeTo(lineHeight, 0.1));\n  });\n"
  },
  {
    "id" : "bc10cf5f-eb84-4fcd-b1e9-ae75b132f6d1",
    "prId" : 27205,
    "prUrl" : "https://github.com/flutter/flutter/pull/27205#pullrequestreview-208764450",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "600cf109-7f94-41c6-9c44-36ca575fd5c5",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "We should verify that the box widths are the same (because I assume they'll be the same in this case)",
        "createdAt" : "2019-02-27T18:35:45Z",
        "updatedAt" : "2019-03-08T16:59:42Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "85a1a22c-eb58-4174-bced-eb321383899a",
        "parentId" : "600cf109-7f94-41c6-9c44-36ca575fd5c5",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Good call, I'll add those expects in.  I found that comparing Sizes directly like this would never fail.",
        "createdAt" : "2019-02-27T21:04:05Z",
        "updatedAt" : "2019-03-08T16:59:42Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "56d0a1b6d0ab5598c651c73c6dc67d49c731d25f",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +926,930 @@    await tester.pumpWidget(textFieldBuilder(maxLines: 3));\n    expect(findInputBox(), equals(inputBox));\n    expect(inputBox.size.height, greaterThan(emptyInputSize.height));\n    expect(inputBox.size.width, emptyInputSize.width);\n"
  },
  {
    "id" : "bb316e20-8b88-441c-ab78-67d90689a605",
    "prId" : 27612,
    "prUrl" : "https://github.com/flutter/flutter/pull/27612#pullrequestreview-201688070",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1014d733-9472-40d5-915c-bc0c9b0cace6",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE. Took a minute to decode the diagram but it's very helpful.",
        "createdAt" : "2019-02-08T18:26:09Z",
        "updatedAt" : "2019-02-23T07:37:27Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "0642aa749afd3ea3ff4b5fd453d36a1ba2e8704f",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +2715,2719 @@    );\n\n    // The Ahem font extends 0.2 * fontSize below the baseline.\n    // So the three row elements line up like this:\n    //"
  },
  {
    "id" : "bdc9e229-e3aa-4726-beb3-3e03ee3b2fbf",
    "prId" : 27612,
    "prUrl" : "https://github.com/flutter/flutter/pull/27612#pullrequestreview-201688070",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97c51e70-ff98-4f2d-adc6-9612f8b090f1",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "40 because?",
        "createdAt" : "2019-02-08T18:33:19Z",
        "updatedAt" : "2019-02-23T07:37:27Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "0642aa749afd3ea3ff4b5fd453d36a1ba2e8704f",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +4561,4565 @@        // This is the height of the decoration (24) plus the metrics from the default\n        // TextStyle of the theme (16).\n        const Size(800, 40),\n      );\n    },"
  },
  {
    "id" : "182d806f-9919-4c0e-8c25-05258e22d8ca",
    "prId" : 27663,
    "prUrl" : "https://github.com/flutter/flutter/pull/27663#pullrequestreview-201784591",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5efe100a-e533-43f8-963e-c4608d4ada65",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Not sure what this comment means. Isn't this PR the fix for the fix for #24876?",
        "createdAt" : "2019-02-08T20:53:22Z",
        "updatedAt" : "2019-02-08T20:53:48Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "93711e3b-939a-41e4-9956-366e331b5ed8",
        "parentId" : "5efe100a-e533-43f8-963e-c4608d4ada65",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Yes. I was going to land the fix and then update the golden images and then update this test.",
        "createdAt" : "2019-02-08T21:04:16Z",
        "updatedAt" : "2019-02-08T21:04:16Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f6f16e2b6f84c76be014c849b0d4edd0d54cc4d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +363,367 @@  });\n\n  // TODO(hansmuller): restore these tests after the fix for #24876 has landed.\n  /*\n  testWidgets('cursor layout has correct width', (WidgetTester tester) async {"
  },
  {
    "id" : "2cf7a116-66c2-4fee-98a2-98ad718d9335",
    "prId" : 27851,
    "prUrl" : "https://github.com/flutter/flutter/pull/27851#pullrequestreview-203378371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "326401fd-b66d-47e9-b1fd-f1c62e478979",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Tests with values like this don't really inspire confidence. This PR is only an update so I suppose there's no reason to fix the problem here. In a future PR we should either provide a rationale for these values (why is this value expected) or replace them with golden image tests.",
        "createdAt" : "2019-02-13T18:36:36Z",
        "updatedAt" : "2019-02-13T19:23:25Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "23be043630dc543ddf95afa6a0db18cee1347346",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +4327,4331 @@      expect(lastCharEndpoint.length, 1);\n      // The last character is now on screen.\n      expect(lastCharEndpoint[0].point.dx, moreOrLessEquals(798.6666870117188));\n\n      final List<TextSelectionPoint> firstCharEndpoint = renderEditable.getEndpointsForSelection("
  },
  {
    "id" : "1d27ba0d-c24b-4c73-9fce-969d302de278",
    "prId" : 28478,
    "prUrl" : "https://github.com/flutter/flutter/pull/28478#pullrequestreview-208200748",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b45dfac-97bd-49cc-8f43-04f3cde8ee36",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Here and elsewhere: is this offset suppose to match a location in the controller's text?",
        "createdAt" : "2019-02-26T19:09:23Z",
        "updatedAt" : "2019-02-26T20:45:18Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "bba4b57d-75e1-40dd-b6e7-8b12d1e7e005",
        "parentId" : "0b45dfac-97bd-49cc-8f43-04f3cde8ee36",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Yes. Do you prefer using `textOffsetToPosition`? I don't have a strong opinion though I felt textOffsetToPosition was a bit round-about-ish. ",
        "createdAt" : "2019-02-26T20:46:52Z",
        "updatedAt" : "2019-02-26T20:46:52Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "aba6faac-fac3-4c17-983a-c0cc5a7eb647",
        "parentId" : "0b45dfac-97bd-49cc-8f43-04f3cde8ee36",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It's no big deal, I was just wondering what we expected the x=150 to line up with. ",
        "createdAt" : "2019-02-26T20:52:52Z",
        "updatedAt" : "2019-02-26T20:52:52Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "277d89ae7e9a69d05814344f243656c136cf6ee7",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +4657,4661 @@\n    const int pointerValue = 1;\n    final Offset offset = textfieldStart + const Offset(150.0, 5.0);\n    final TestGesture gesture = await tester.createGesture();\n    await gesture.downWithCustomEvent("
  },
  {
    "id" : "f3b94873-f01f-4b84-a383-281b789b9b3a",
    "prId" : 29563,
    "prUrl" : "https://github.com/flutter/flutter/pull/29563#pullrequestreview-215920678",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "725765d3-8dc1-4b1e-900d-d5e7afabfc04",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Add this test in cupertino/text_field_test.dart too",
        "createdAt" : "2019-03-19T01:04:48Z",
        "updatedAt" : "2019-03-20T19:52:37Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5d5fa6405a9445fcb00fb5fb917a12af44a925c",
    "line" : 175,
    "diffHunk" : "@@ -1,1 +880,884 @@\n    expect(controller.selection.baseOffset, 4);\n    // The selection doesn't move beyond the left handle. There's always at\n    // least 1 char selected.\n    expect(controller.selection.extentOffset, 5);"
  },
  {
    "id" : "1498c886-e748-4070-9487-c9a80d4e21a4",
    "prId" : 29809,
    "prUrl" : "https://github.com/flutter/flutter/pull/29809#pullrequestreview-232070098",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f98ee1e6-7658-4f83-829d-7905f6ac369d",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Can you add a test in cupertino/text_field_test.dart as well since it's a different implementation? ",
        "createdAt" : "2019-04-30T00:52:46Z",
        "updatedAt" : "2019-05-01T02:57:13Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "47507d20-1820-4d18-9b54-07d288fc94b4",
        "parentId" : "f98ee1e6-7658-4f83-829d-7905f6ac369d",
        "authorId" : "2bbd42ff-9e5e-4bd2-acf6-5dcd0cb798c6",
        "body" : "Thanks for your reminder!\r\n\r\nThe corresponding regression test logic has been added(this [commit](https://github.com/flutter/flutter/pull/29809/commits/8d990c991c84021de4856ae1a370f7e7dc01ba49)).",
        "createdAt" : "2019-04-30T09:24:27Z",
        "updatedAt" : "2019-05-01T02:57:13Z",
        "lastEditedBy" : "2bbd42ff-9e5e-4bd2-acf6-5dcd0cb798c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "75a1415b85ffe792656477a34dede6140eeaee07",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +1126,1130 @@    expect(controller.text, 'abc d${testValue}ef ghi');\n  });\n\n  testWidgets(\n    'Check the toolbar appears below the TextField when there is not enough space above the TextField to show it',"
  },
  {
    "id" : "fe3f42b7-7362-433b-8b3d-0d91763900e2",
    "prId" : 31332,
    "prUrl" : "https://github.com/flutter/flutter/pull/31332#pullrequestreview-229814362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82caceda-ba52-4b0b-8f09-6ad5fdb51dfb",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Add a comment for why 3 and what are the first and second ones expected to be.",
        "createdAt" : "2019-04-23T21:57:46Z",
        "updatedAt" : "2019-04-25T18:24:59Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "405446e9682ad5046b4a3bc6c1ef3183c952313b",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +5702,5706 @@    // two are the left and right text selection handles, respectively.\n    expect(transitions.length, 3);\n    final FadeTransition left = transitions[1];\n    final FadeTransition right = transitions[2];\n"
  }
]