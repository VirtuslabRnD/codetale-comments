[
  {
    "id" : "9dbefcc9-67df-499e-9125-ccb1194bf232",
    "prId" : 13543,
    "prUrl" : "https://github.com/flutter/flutter/pull/13543#pullrequestreview-83375691",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bba8553-64e8-40cf-831c-71c21a699da4",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "ditto",
        "createdAt" : "2017-12-13T23:12:13Z",
        "updatedAt" : "2017-12-14T01:29:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "f3d3db52-2783-4149-a523-b344ccdb76c3",
        "parentId" : "4bba8553-64e8-40cf-831c-71c21a699da4",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This one is awkward to remove. The test verifies that things work with different textDirections. While Localizations does provide a text direction, I cannot modify it directly. I could rewrite the test to work on different locales instead, but I think that would hide the real purpose of the test (which is to make sure that different text directions work). Therefore, I left the Directionality widget in the tree.",
        "createdAt" : "2017-12-14T01:31:29Z",
        "updatedAt" : "2017-12-14T01:31:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "efdbe538-98fe-46d9-bb4e-c2f6e336e651",
        "parentId" : "4bba8553-64e8-40cf-831c-71c21a699da4",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "that's fine. i didn't notice it was being tweaked.",
        "createdAt" : "2017-12-14T01:34:49Z",
        "updatedAt" : "2017-12-14T01:34:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1b9aa0feccef6a7884cb316e0b2f12ea868e21c",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +72,76 @@      child: new MediaQuery(\n        data: new MediaQueryData.fromWindow(window),\n        child: new Directionality(\n          textDirection: widget.textDirection,\n          child: new Navigator("
  },
  {
    "id" : "f80221c6-d879-4a8b-8274-5ed81ac033f7",
    "prId" : 22235,
    "prUrl" : "https://github.com/flutter/flutter/pull/22235#pullrequestreview-159103224",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89f45c51-0609-46e3-8d7b-eb8fb449ce9f",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The comment should explain what the -8.0 is for.",
        "createdAt" : "2018-09-26T17:17:31Z",
        "updatedAt" : "2018-09-26T18:04:08Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f89e595dcac5457a2165680c2cb281ce1c14df0",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +443,447 @@    // List should be scrolled so that the first item is at the top. Menu items\n    // are offset 8.0 from the top edge of the scrollable menu.\n    const Offset selectedItemOffset = Offset(0.0, -8.0);\n    expect(\n      firstItem.size.topCenter(firstItem.localToGlobal(selectedItemOffset)).dy,"
  },
  {
    "id" : "762ae8a7-86d0-4330-8bbf-fca0726b899d",
    "prId" : 22235,
    "prUrl" : "https://github.com/flutter/flutter/pull/22235#pullrequestreview-159128694",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f488f23-10fa-45f4-bef1-139cf9512a5f",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE. ",
        "createdAt" : "2018-09-26T17:18:11Z",
        "updatedAt" : "2018-09-26T18:04:08Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "29c7a9fa-913b-433c-8f12-35492dc1b1f5",
        "parentId" : "6f488f23-10fa-45f4-bef1-139cf9512a5f",
        "authorId" : "adb5cc5c-9d1c-4103-8ffa-619d28e09399",
        "body" : ":)",
        "createdAt" : "2018-09-26T18:07:32Z",
        "updatedAt" : "2018-09-26T18:07:33Z",
        "lastEditedBy" : "adb5cc5c-9d1c-4103-8ffa-619d28e09399",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f89e595dcac5457a2165680c2cb281ce1c14df0",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +444,448 @@    // are offset 8.0 from the top edge of the scrollable menu.\n    const Offset selectedItemOffset = Offset(0.0, -8.0);\n    expect(\n      firstItem.size.topCenter(firstItem.localToGlobal(selectedItemOffset)).dy,\n      equals(menuItemContainer.size.topCenter(menuItemContainer.localToGlobal(Offset.zero)).dy)"
  },
  {
    "id" : "a887cf20-0776-447e-828f-9d0682415712",
    "prId" : 22594,
    "prUrl" : "https://github.com/flutter/flutter/pull/22594#pullrequestreview-161299090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2a70894-c32b-4fe0-bf32-4b4e471795d6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you don't seem to make use of the new value, so this could just be an empty closure ",
        "createdAt" : "2018-10-03T18:25:20Z",
        "updatedAt" : "2018-10-05T23:33:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d600cffaacc3eb953037ec4d119e75f1bed7a9f",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +798,802 @@      assert(scrollPosition != null);\n      return scrollPosition;\n    }\n\n    await tester.pumpWidget("
  },
  {
    "id" : "7f4ba9a8-188c-4b68-8b2e-fc66cff9998d",
    "prId" : 22594,
    "prUrl" : "https://github.com/flutter/flutter/pull/22594#pullrequestreview-161336491",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22745fcf-c6da-461f-91ec-50dbb117096d",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "let's have some tests for when the button is at the top of the screen but showing the bottom item, and at the bottom of the screen but showing the top item, and in the middle but showing the middle item, and in the middle but showing the bottom item, as well, while we're at it. Cover our bases and make sure everything works so we don't have to deal with it again...",
        "createdAt" : "2018-10-03T18:27:27Z",
        "updatedAt" : "2018-10-05T23:33:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "262b912b-4ff8-407a-912f-15e191db63e2",
        "parentId" : "22745fcf-c6da-461f-91ec-50dbb117096d",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "Added them!",
        "createdAt" : "2018-10-03T20:00:14Z",
        "updatedAt" : "2018-10-05T23:33:22Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d600cffaacc3eb953037ec4d119e75f1bed7a9f",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +888,892 @@    await tester.pumpAndSettle();\n    expect(getMenuScroll(), 0.0);\n  });\n\n  testWidgets('Dropdown in center showing bottom item', (WidgetTester tester) async {"
  },
  {
    "id" : "b6a3b59a-4610-483d-9d40-9d256997bb0d",
    "prId" : 26143,
    "prUrl" : "https://github.com/flutter/flutter/pull/26143#pullrequestreview-196305217",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f524f755-f1b2-4b1d-9e7a-5b262ca91c56",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "please just leave one blank line between blocks of code, here and below",
        "createdAt" : "2019-01-22T18:53:21Z",
        "updatedAt" : "2019-01-26T16:45:31Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "f9e1f2ce-5108-4716-87c8-a64cfc0193d0",
        "parentId" : "f524f755-f1b2-4b1d-9e7a-5b262ca91c56",
        "authorId" : "c645f5aa-57e5-4da0-a49b-87ab9fa75db6",
        "body" : "Done",
        "createdAt" : "2019-01-24T23:48:31Z",
        "updatedAt" : "2019-01-26T16:45:31Z",
        "lastEditedBy" : "c645f5aa-57e5-4da0-a49b-87ab9fa75db6",
        "tags" : [
        ]
      }
    ],
    "commit" : "545389871c39c500d4baf7c82c7eb4e1605ec2ad",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +551,555 @@    final RenderBox buttonBoxNullItems = tester.renderObject<RenderBox>(find.byKey(buttonKey));\n    assert(buttonBoxNullItems.attached);\n\n    items = <String>[];\n    await tester.pumpWidget(build());"
  },
  {
    "id" : "ac0bcdf5-6d7f-4207-8cf6-0acc986a78d9",
    "prId" : 26143,
    "prUrl" : "https://github.com/flutter/flutter/pull/26143#pullrequestreview-196305249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8402a5ed-00bb-4290-a44f-2b5dda2f070f",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Please insert this here\r\n```\r\n  // Regression test for https://github.com/flutter/flutter/issues/26419\r\n```\r\n",
        "createdAt" : "2019-01-23T00:34:41Z",
        "updatedAt" : "2019-01-26T16:45:31Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "0481ca70-007c-41ee-a9c1-e5fdb053e6ac",
        "parentId" : "8402a5ed-00bb-4290-a44f-2b5dda2f070f",
        "authorId" : "c645f5aa-57e5-4da0-a49b-87ab9fa75db6",
        "body" : "Done",
        "createdAt" : "2019-01-24T23:48:40Z",
        "updatedAt" : "2019-01-26T16:45:31Z",
        "lastEditedBy" : "c645f5aa-57e5-4da0-a49b-87ab9fa75db6",
        "tags" : [
        ]
      }
    ],
    "commit" : "545389871c39c500d4baf7c82c7eb4e1605ec2ad",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +543,547 @@  testWidgets('Size of DropdownButton with no items', (WidgetTester tester) async {\n    // Regression test for https://github.com/flutter/flutter/issues/26419\n    final Key buttonKey = UniqueKey();\n    List<String> items;\n"
  },
  {
    "id" : "087c0582-c374-4ab5-9db2-77f8ce3abeac",
    "prId" : 36998,
    "prUrl" : "https://github.com/flutter/flutter/pull/36998#pullrequestreview-270444010",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63f79b8c-41dd-47ab-af09-409b0e1c8f42",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "It's not clear to me why `.last` is necessary here",
        "createdAt" : "2019-07-31T16:57:42Z",
        "updatedAt" : "2019-09-09T23:45:17Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "33c81b92-f9db-4c08-b805-685e1b21106b",
        "parentId" : "63f79b8c-41dd-47ab-af09-409b0e1c8f42",
        "authorId" : "9bf8e9b2-c991-42dd-9bcc-cf1baae4d859",
        "body" : "Not using .last will throw multiple entry error sometimes.",
        "createdAt" : "2019-08-03T03:13:25Z",
        "updatedAt" : "2019-09-09T23:45:17Z",
        "lastEditedBy" : "9bf8e9b2-c991-42dd-9bcc-cf1baae4d859",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e74dcaab169e4e3926a8c37f316fe440c021835",
    "line" : 194,
    "diffHunk" : "@@ -1,1 +1362,1366 @@    await tester.tap(find.text('one'));\n    await tester.pumpAndSettle();\n    await tester.tap(find.text('three').last);\n    await tester.pump();\n    expect(_validateCalled, 2);"
  },
  {
    "id" : "17b9f8a6-be98-470c-84fe-7c0e7a2e76fe",
    "prId" : 42479,
    "prUrl" : "https://github.com/flutter/flutter/pull/42479#pullrequestreview-301486899",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b55f340-1021-4da7-9dd2-1a6b0acaeb65",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Good: tests that don't specify itemHeight should work as before since kMinInteractiveDimension is the default.",
        "createdAt" : "2019-10-14T19:13:05Z",
        "updatedAt" : "2019-10-22T16:05:00Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3e35313ed3792205bf7496ce97e4a254dfbc620",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +83,87 @@            }).toList(),\n            selectedItemBuilder: selectedItemBuilder,\n            itemHeight: itemHeight,\n          ),\n        ),"
  },
  {
    "id" : "6a0d05f5-06f8-4db5-b2fb-7d973bf518d5",
    "prId" : 42479,
    "prUrl" : "https://github.com/flutter/flutter/pull/42479#pullrequestreview-301581494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c17fba9-5538-475e-89bf-da4d87c63fde",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "According to https://api.flutter.dev/flutter/material/DropdownButton/hint.html, the hint is displayed if value is null. \r\n\r\nThere seems to be some pre-existing confusion about this. See https://api.flutter.dev/flutter/material/DropdownButton/value.html. Can you make the docs consistent about when the hint is displayed, and what exactly makes the button enabled/disabled?",
        "createdAt" : "2019-10-14T19:19:54Z",
        "updatedAt" : "2019-10-22T16:05:00Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "f4dfb64d-3d9e-417d-9d5a-155d79a78152",
        "parentId" : "2c17fba9-5538-475e-89bf-da4d87c63fde",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I've updated the docs to be consistent with what exactly makes a button enabled/disabled.",
        "createdAt" : "2019-10-14T23:29:58Z",
        "updatedAt" : "2019-10-22T16:05:00Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3e35313ed3792205bf7496ce97e4a254dfbc620",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +1143,1147 @@      );\n    }\n    // [hint] should display when [items] is null and [disabledHint] is not defined\n    await tester.pumpWidget(build(items: null));\n    expect(find.text('hint used when disabled'), findsOneWidget);"
  },
  {
    "id" : "6aa41701-b8b4-4f52-801a-47c584f46429",
    "prId" : 42482,
    "prUrl" : "https://github.com/flutter/flutter/pull/42482#pullrequestreview-300773495",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee40e696-92a2-4c31-ae03-9950f5308ade",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I think this seems to simulate a keyboard showing (shrinking MediaQuery.size), but not a keyboard hide (MediaQuery.size regrowing to Size(800, 600).",
        "createdAt" : "2019-10-11T00:09:00Z",
        "updatedAt" : "2019-10-11T16:24:02Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "3c66aae2-bba5-4f06-850c-56bc4cb49ef3",
        "parentId" : "ee40e696-92a2-4c31-ae03-9950f5308ade",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "It could be helpful to add comments to describe what behaviors are being simulated",
        "createdAt" : "2019-10-11T00:09:45Z",
        "updatedAt" : "2019-10-11T16:24:02Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "6c14b8d0-d4be-44da-8067-952366c2cdf5",
        "parentId" : "ee40e696-92a2-4c31-ae03-9950f5308ade",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "OK, added a grow test, and comments for each one.",
        "createdAt" : "2019-10-11T15:46:39Z",
        "updatedAt" : "2019-10-11T16:24:06Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "622257fc174884063a5c83b928c8ff65f8785cbc",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +948,952 @@\n    // Show a keyboard (simulate by shortening the height).\n    await tester.pumpWidget(buildFrame(onChanged: onChanged, mediaSize: const Size(800, 300)));\n    await tester.pump();\n    expect(find.byType(ListView, skipOffstage: false), findsOneWidget);"
  },
  {
    "id" : "30eab092-a2a1-4dd8-ab90-a5a8c6cd6c3d",
    "prId" : 43722,
    "prUrl" : "https://github.com/flutter/flutter/pull/43722#pullrequestreview-310751724",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfdde994-fe68-4bef-be87-10163f2eab3b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Is the duration parameter really needed here? It doesn't jibe with the 100ms animateTo duration and (I think maybe) the test would be equally valid without it.",
        "createdAt" : "2019-11-01T23:17:49Z",
        "updatedAt" : "2019-11-06T04:19:56Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "1bfac92f-ead7-4c65-a43c-6dbd36c2784e",
        "parentId" : "cfdde994-fe68-4bef-be87-10163f2eab3b",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Removed the duration. You're right, it's irrelevant.",
        "createdAt" : "2019-11-02T02:28:26Z",
        "updatedAt" : "2019-11-06T04:19:56Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "4eea5becc9a5804eef5a569ec09951d5c0b02cf6",
    "line" : 174,
    "diffHunk" : "@@ -1,1 +2106,2110 @@    for (int i = 0; i < 41; ++i) {\n      await tester.sendKeyEvent(LogicalKeyboardKey.tab); // Move to the next one.\n      await tester.pumpAndSettle(const Duration(milliseconds: 200)); // Wait for it to animate the menu.\n    }\n    await tester.sendKeyEvent(LogicalKeyboardKey.enter); // Select '42' and close the dropdown."
  },
  {
    "id" : "95efcf2e-218f-494c-abec-0f88e0480baf",
    "prId" : 52982,
    "prUrl" : "https://github.com/flutter/flutter/pull/52982#pullrequestreview-385910279",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5e8b9d9-482e-402e-9061-f08220a76339",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "Nice!",
        "createdAt" : "2020-04-01T20:06:00Z",
        "updatedAt" : "2020-04-01T23:50:59Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3906c19e3541db015cb40399c4723657c6fd4f6",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +177,181 @@}\n\nFuture<void> checkDropdownColor(WidgetTester tester, {Color color}) async {\n  const String text = 'foo';\n  await tester.pumpWidget("
  },
  {
    "id" : "5de3945b-7e7e-4e78-9083-0d3af4f16be4",
    "prId" : 52982,
    "prUrl" : "https://github.com/flutter/flutter/pull/52982#pullrequestreview-386019076",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "425750de-a360-4f09-b19b-c7b296d7f3ff",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "Is Material required?",
        "createdAt" : "2020-04-01T20:42:15Z",
        "updatedAt" : "2020-04-01T23:50:59Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "0bcd1b39-0227-4db4-aef1-fc482aa3b0c9",
        "parentId" : "425750de-a360-4f09-b19b-c7b296d7f3ff",
        "authorId" : "6f350ef2-f66a-4e5c-a7f3-f99d0d130c10",
        "body" : "MaterialApp can be replaced by TestApp and Material can be replaced by Scaffold, but it appears to be required.",
        "createdAt" : "2020-04-01T23:34:03Z",
        "updatedAt" : "2020-04-01T23:50:59Z",
        "lastEditedBy" : "6f350ef2-f66a-4e5c-a7f3-f99d0d130c10",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3906c19e3541db015cb40399c4723657c6fd4f6",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +181,185 @@  await tester.pumpWidget(\n    MaterialApp(\n      home: Material(\n        child: DropdownButton<String>(\n          dropdownColor: color,"
  },
  {
    "id" : "031d743b-ae8f-437a-a949-8e3551eab130",
    "prId" : 53368,
    "prUrl" : "https://github.com/flutter/flutter/pull/53368#pullrequestreview-382543758",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed8f625a-41a7-4d7d-b43a-1eea0bae8e7b",
        "parentId" : null,
        "authorId" : "f3773ee5-b900-447b-b4d1-06ac4306980c",
        "body" : "Optional: I'm not too sure about the styling for flutter repo, but we usually do something like this\r\n```dart\r\n[\r\n  for (final i in range(menuItems.length)) {\r\n    DropdownMenuItem<String>(\r\n      ...\r\n    )\r\n  }\r\n]\r\n\r\n```\r\n\r\nFeel free to ignore this and mark this as resolved if this doesn't suit the flutter repo style.",
        "createdAt" : "2020-03-27T02:38:33Z",
        "updatedAt" : "2020-03-30T19:55:47Z",
        "lastEditedBy" : "f3773ee5-b900-447b-b4d1-06ac4306980c",
        "tags" : [
        ]
      }
    ],
    "commit" : "bce2e5d3b66ceceabf7601468368b8b39a49ec51",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +2384,2388 @@              value: value,\n              onChanged: onChanged,\n              items: menuItems.map<DropdownMenuItem<String>>((String item) {\n                currentIndex += 1;\n                return DropdownMenuItem<String>("
  }
]