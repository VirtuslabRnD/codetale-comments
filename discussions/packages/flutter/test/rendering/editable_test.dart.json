[
  {
    "id" : "ccb4b4d9-a1ce-4b78-8cf2-f3fe18efa2c4",
    "prId" : 25055,
    "prUrl" : "https://github.com/flutter/flutter/pull/25055#pullrequestreview-183801940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48a7f2d7-a24c-401a-98e3-41f2dd4c899b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Should add a comment here about including the the 1.0 cursorWidth",
        "createdAt" : "2018-12-11T17:52:36Z",
        "updatedAt" : "2018-12-20T21:10:18Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "50f05a619fef17fb84740485ac9aebe0c69a11c8",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +46,50 @@    expect(editable.getMinIntrinsicWidth(double.infinity), 50.0);\n    // The width includes the width of the cursor (1.0).\n    expect(editable.getMaxIntrinsicWidth(double.infinity), 51.0);\n    expect(editable.getMinIntrinsicHeight(double.infinity), 10.0);\n    expect(editable.getMaxIntrinsicHeight(double.infinity), 10.0);"
  },
  {
    "id" : "7a5ace36-78fd-4336-b78d-a3a3c012aca7",
    "prId" : 29563,
    "prUrl" : "https://github.com/flutter/flutter/pull/29563#pullrequestreview-216858900",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e75dcd1d-8e9f-4293-8330-3312e7215c95",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Add this test to material and cupertino text_field_test too via gestures (in case we move those widgets to use something else than selectPositionAt in the future).",
        "createdAt" : "2019-03-19T01:06:36Z",
        "updatedAt" : "2019-03-20T19:52:37Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "dd937aa3-723a-453f-b103-135f13ded08b",
        "parentId" : "e75dcd1d-8e9f-4293-8330-3312e7215c95",
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "Added the test to material for now. Cupertino still doesn't have text selection via mouse but I'll have a PR for that tomorrow.",
        "createdAt" : "2019-03-19T23:24:17Z",
        "updatedAt" : "2019-03-20T19:52:37Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "0d54b874-49b8-4f8d-8108-22338c23a04b",
        "parentId" : "e75dcd1d-8e9f-4293-8330-3312e7215c95",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Is this a mouse specific issue or would this not happen with a handle drag?",
        "createdAt" : "2019-03-19T23:26:43Z",
        "updatedAt" : "2019-03-20T19:52:37Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "e48ec7da-e8ed-4b94-934e-a3d4dbc4f557",
        "parentId" : "e75dcd1d-8e9f-4293-8330-3312e7215c95",
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "@xster yes, for some reason dragging the handles doesn't flicker at all.\r\n\r\nThat said, your comment made me think about other scenarios that may cause flickering, and I found one :) Long-press-drag has the same issue in the material text field. But it's not fixed by this PR. Filed an issue here to be fixed separately: https://github.com/flutter/flutter/issues/29682.",
        "createdAt" : "2019-03-20T17:04:59Z",
        "updatedAt" : "2019-03-20T19:52:37Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5d5fa6405a9445fcb00fb5fb917a12af44a925c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +369,373 @@  });\n\n  test('selection does not flicker as user is dragging', () {\n    int selectionChangedCount = 0;\n    TextSelection updatedSelection;"
  },
  {
    "id" : "19834d83-bfa7-46af-9bc7-48fc2aec292d",
    "prId" : 30513,
    "prUrl" : "https://github.com/flutter/flutter/pull/30513#pullrequestreview-223015214",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68ea2542-c7b4-473b-8702-862d38c189bb",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "this would have cashed without the fix",
        "createdAt" : "2019-04-04T21:38:18Z",
        "updatedAt" : "2019-04-05T16:35:33Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e2c21330b0d276a181d961744a55252637160ec",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +441,445 @@\n    expect(editable.hasFocus, true);\n    editable.hasFocus = false;\n    expect(editable.hasFocus, false);\n  });"
  },
  {
    "id" : "934f7965-f023-41ec-a802-19bf01a7f286",
    "prId" : 30513,
    "prUrl" : "https://github.com/flutter/flutter/pull/30513#pullrequestreview-223371598",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "607f99bc-6128-402b-a7ef-f824c463dd7f",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Can you add `// Regression test for <issue link>` here?",
        "createdAt" : "2019-04-04T21:39:32Z",
        "updatedAt" : "2019-04-05T16:35:33Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "a38f4ef9-bf36-4f8a-9a9f-9ce96994d61e",
        "parentId" : "607f99bc-6128-402b-a7ef-f824c463dd7f",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "added",
        "createdAt" : "2019-04-05T16:36:05Z",
        "updatedAt" : "2019-04-05T16:36:05Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e2c21330b0d276a181d961744a55252637160ec",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +426,430 @@  test('editable hasFocus correctly initialized', () {\n    // Regression test for https://github.com/flutter/flutter/issues/21640\n    final TextSelectionDelegate delegate = FakeEditableTextState();\n    final RenderEditable editable = RenderEditable(\n      text: const TextSpan("
  }
]