[
  {
    "id" : "f2bcf8dc-eae7-4a3d-aa0c-c967577568a6",
    "prId" : 36396,
    "prUrl" : "https://github.com/flutter/flutter/pull/36396#pullrequestreview-263377393",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d80822d-1289-455d-aef6-3e13c517b6d7",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Perhaps it would give us a nice sanity check to validate the results of this against the implementations from vector_math.  I trust that you did the right thing here, but it would make reviewing/changing this easier.\r\n\r\nWe might also want to consider upstreaming this into vector_math.",
        "createdAt" : "2019-07-17T22:22:41Z",
        "updatedAt" : "2019-07-17T23:10:21Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "de1d3b62-8f57-4204-a4f2-6fd937985593",
        "parentId" : "0d80822d-1289-455d-aef6-3e13c517b6d7",
        "authorId" : "56d84530-1d58-4dbf-af8a-6916988ae943",
        "body" : "_vectorWiseTransformRect used in the other (perspective) test uses vector_math. So, which of the following would make sense:\r\n\r\n1 - MatrixUtils vs. _vectorWise/aka vector_math\r\n2 - MatrixUtils vs. manually computed answers\r\n3 - _vectorWise vs. manually computed answers\r\n\r\nWe currently do #2, are you suggesting replacing it with #1, or adding #1 (or #3)?",
        "createdAt" : "2019-07-17T22:43:34Z",
        "updatedAt" : "2019-07-17T23:10:21Z",
        "lastEditedBy" : "56d84530-1d58-4dbf-af8a-6916988ae943",
        "tags" : [
        ]
      },
      {
        "id" : "dc4e5636-5a7e-4764-91f1-684e94653a76",
        "parentId" : "0d80822d-1289-455d-aef6-3e13c517b6d7",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Sorry, I missed where you were doing this.  Resolved.",
        "createdAt" : "2019-07-17T23:00:56Z",
        "updatedAt" : "2019-07-17T23:10:21Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "954c81d3-1d28-472f-9fb3-8ffe67b0a2c9",
        "parentId" : "0d80822d-1289-455d-aef6-3e13c517b6d7",
        "authorId" : "56d84530-1d58-4dbf-af8a-6916988ae943",
        "body" : "This comment is in a test file but you mention \"upstreaming this into vector_math\". Do you mean the test or the optimization (or both)?\r\n\r\nThe problem with moving the optimization upstream is that we use different classes to store our data than vector_math (except for Matrix4) so to avoid unpacking/repacking/moving the data to a different object, ...? This is why I inlined these calculations to avoid transfer of data for a common operation.\r\n\r\nNote that vector_math has its own bounding objects, but they are much more abstract and complicated than our Rect.",
        "createdAt" : "2019-07-17T23:05:21Z",
        "updatedAt" : "2019-07-17T23:10:21Z",
        "lastEditedBy" : "56d84530-1d58-4dbf-af8a-6916988ae943",
        "tags" : [
        ]
      },
      {
        "id" : "c7e3b96a-acf9-497b-9432-d10578a8cb56",
        "parentId" : "0d80822d-1289-455d-aef6-3e13c517b6d7",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "I don't see upstreaming as a blocker to this PR - more that this approach seems to be an improvement, and it might be something that would be valuable to have available via vector_math rather than burried in Flutter.\r\n\r\nI think we can land this without doing that - if I'm not missing something here, it would be enough to just open a bug on vector_math to track making this available there.",
        "createdAt" : "2019-07-17T23:15:40Z",
        "updatedAt" : "2019-07-17T23:15:40Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "0a7aaaf6-d299-4eb6-a544-8b5306de2152",
        "parentId" : "0d80822d-1289-455d-aef6-3e13c517b6d7",
        "authorId" : "56d84530-1d58-4dbf-af8a-6916988ae943",
        "body" : "I did think of this as I was doing it and I did look through the code in vector_math, but in the end I realized that our specific needs aren't a great match for the tone of their API. In particular, the bounds objects they provide feel more oriented to the kind of math that a 3D CAD or game package would require and doesn't seem to speak the language of rectangles laid out on a screen.\r\n\r\nAnother thing to consider is how big vector_math is and how good our tree shaking is. Vector4, for example, has what looks like several hundred properties on it. Do we end up with getter code for all of those properties in a flutter app that is just trying to figure out which cat video someone poked with their finger?\r\n\r\nThis is a larger discussion than just this one fix. I'd almost lean towards creating our own matrix package that is more streamlined and tailored to our needs, but I believe we have Matrix4 baked into our APIs?",
        "createdAt" : "2019-07-17T23:24:36Z",
        "updatedAt" : "2019-07-17T23:24:36Z",
        "lastEditedBy" : "56d84530-1d58-4dbf-af8a-6916988ae943",
        "tags" : [
        ]
      },
      {
        "id" : "8fc96d8a-39ca-45eb-abb9-92834b838cae",
        "parentId" : "0d80822d-1289-455d-aef6-3e13c517b6d7",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "From what I understand, vector_math _is_ the package we created to have matrix math available in Flutter, though it's certainly got other uses as well and has some other large contributions outside of what Flutter needs.",
        "createdAt" : "2019-07-17T23:39:37Z",
        "updatedAt" : "2019-07-17T23:39:37Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "abdff609-c175-4ce8-96e3-603dc9433a46",
        "parentId" : "0d80822d-1289-455d-aef6-3e13c517b6d7",
        "authorId" : "56d84530-1d58-4dbf-af8a-6916988ae943",
        "body" : "Hmmm, well it doesn't provide any Rect-like object so this would require more than just adding a new method. And then we deal with data ferrying between our Rect and its Rect or we make a breaking change and move our Rect to the vector_math package?",
        "createdAt" : "2019-07-17T23:50:13Z",
        "updatedAt" : "2019-07-17T23:50:13Z",
        "lastEditedBy" : "56d84530-1d58-4dbf-af8a-6916988ae943",
        "tags" : [
        ]
      },
      {
        "id" : "8ffa3861-2545-4822-bbd8-979ac9e48301",
        "parentId" : "0d80822d-1289-455d-aef6-3e13c517b6d7",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "We can't move our Rect, that's defined in dart:ui which isn't allowed to have dependencies.\r\n\r\nI'm not sure if there's a really good way to do this, but as I said It shouldn't block this PR from landing either way.",
        "createdAt" : "2019-07-17T23:58:16Z",
        "updatedAt" : "2019-07-17T23:58:16Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "864c2be3-13ba-410d-a6a2-644e1b53bc8e",
        "parentId" : "0d80822d-1289-455d-aef6-3e13c517b6d7",
        "authorId" : "56d84530-1d58-4dbf-af8a-6916988ae943",
        "body" : "I started at looking at how hard it would be to do just the Point version of this inside vector_math and came away not happy with the state of its APIs (consistency, capability, etc.).\r\n\r\nSad bear... :(",
        "createdAt" : "2019-07-18T00:15:32Z",
        "updatedAt" : "2019-07-18T00:15:32Z",
        "lastEditedBy" : "56d84530-1d58-4dbf-af8a-6916988ae943",
        "tags" : [
        ]
      }
    ],
    "commit" : "2efaf51610d11a9f7f8ed1e7c9ad83e2fdcdf3e0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +123,127 @@  });\n\n  test('transformRect with no perspective (w = 1)', () {\n    const Rect rectangle20x20 = Rect.fromLTRB(10, 20, 30, 40);\n"
  },
  {
    "id" : "66925fdf-b6ef-4477-9cea-6d563809a193",
    "prId" : 36396,
    "prUrl" : "https://github.com/flutter/flutter/pull/36396#pullrequestreview-263361979",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a0d78b4-6a61-4721-bd5f-d1b41070ae3a",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Ah! I missed this.",
        "createdAt" : "2019-07-17T23:00:42Z",
        "updatedAt" : "2019-07-17T23:10:21Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "df284d5a-323f-46d7-b7f9-7aace5e89a09",
        "parentId" : "5a0d78b4-6a61-4721-bd5f-d1b41070ae3a",
        "authorId" : "56d84530-1d58-4dbf-af8a-6916988ae943",
        "body" : "Does this resolve the comment you made about comparing the test output to vector_math?",
        "createdAt" : "2019-07-17T23:06:00Z",
        "updatedAt" : "2019-07-17T23:10:21Z",
        "lastEditedBy" : "56d84530-1d58-4dbf-af8a-6916988ae943",
        "tags" : [
        ]
      },
      {
        "id" : "54e6dc66-7b5b-42b0-8cf5-116ed124656e",
        "parentId" : "5a0d78b4-6a61-4721-bd5f-d1b41070ae3a",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Yes.",
        "createdAt" : "2019-07-17T23:11:33Z",
        "updatedAt" : "2019-07-17T23:11:33Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "2efaf51610d11a9f7f8ed1e7c9ad83e2fdcdf3e0",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +167,171 @@// golden implementation of the optimized `MatrixUtils.transformPoint`\n// to make sure optimizations do not contain bugs.\nOffset _transformPoint(Matrix4 transform, Offset point) {\n  final Vector3 position3 = Vector3(point.dx, point.dy, 0.0);\n  final Vector3 transformed3 = transform.perspectiveTransform(position3);"
  }
]