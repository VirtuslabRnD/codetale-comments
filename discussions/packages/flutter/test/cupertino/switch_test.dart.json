[
  {
    "id" : "50722d34-7097-430f-b066-ca474011ba7d",
    "prId" : 7326,
    "prUrl" : "https://github.com/flutter/flutter/pull/7326#pullrequestreview-15060392",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b8ca7bb-9059-4c5b-8bdb-1c899647f4cf",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This might be a good reason to go down the reference test yak shave...",
        "createdAt" : "2017-01-04T01:19:59Z",
        "updatedAt" : "2017-01-04T05:53:12Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "b8c750ac-e9c5-4425-998d-21e0908b3443",
        "parentId" : "1b8ca7bb-9059-4c5b-8bdb-1c899647f4cf",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I see what you're saying (that this test is really shallow), but I'm not quite ready for that yet.  It's also likely we'll need to tweak the parameters for the switch a bunch before perfect...",
        "createdAt" : "2017-01-04T05:48:58Z",
        "updatedAt" : "2017-01-04T05:53:12Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "02e13ed0-e005-4f9c-8622-d83d6334bd39",
        "parentId" : "1b8ca7bb-9059-4c5b-8bdb-1c899647f4cf",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : ":-)",
        "createdAt" : "2017-01-04T06:09:44Z",
        "updatedAt" : "2017-01-04T06:09:44Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d77af671f48e783fc141f141ef0fb679f6a8f3b1",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@    expect(value, isTrue);\n  });\n}"
  },
  {
    "id" : "4552bd5b-55d0-4541-ac47-62271d711792",
    "prId" : 27900,
    "prUrl" : "https://github.com/flutter/flutter/pull/27900#pullrequestreview-203476391",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37455ba8-9b53-4d49-bee0-0705b18f45be",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Can you add another test checking that dragging the knob (instead of just tapping it) to the other edge also does whatever haptic feedback iOS does?",
        "createdAt" : "2019-02-13T22:16:30Z",
        "updatedAt" : "2019-02-14T22:55:35Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecc9646072a3f9216176e4d4d36efa53b0b4f4c2",
    "line" : 176,
    "diffHunk" : "@@ -1,1 +245,249 @@  });\n\n  testWidgets('Switch can drag (LTR)', (WidgetTester tester) async {\n    bool value = false;\n"
  },
  {
    "id" : "d547f271-3799-4c1f-a8e0-f70d81823091",
    "prId" : 27900,
    "prUrl" : "https://github.com/flutter/flutter/pull/27900#pullrequestreview-203490434",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4222bc2d-d660-4727-9662-ce100f3a7b63",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Can you also check that the knock doesn't happen when the parent widget programmatically changes the current value. Only on user interaction?",
        "createdAt" : "2019-02-13T22:51:00Z",
        "updatedAt" : "2019-02-14T22:55:35Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecc9646072a3f9216176e4d4d36efa53b0b4f4c2",
    "line" : 176,
    "diffHunk" : "@@ -1,1 +245,249 @@  });\n\n  testWidgets('Switch can drag (LTR)', (WidgetTester tester) async {\n    bool value = false;\n"
  },
  {
    "id" : "64308c42-adbe-4594-b39a-f38956cbfc55",
    "prId" : 27900,
    "prUrl" : "https://github.com/flutter/flutter/pull/27900#pullrequestreview-203490899",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8387b64a-aa2c-4ed1-9578-77d13ca3692b",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "If we're saying that the tap happens right away, make this assertion before the 100ms pump and make sure there isn't another call after 100ms",
        "createdAt" : "2019-02-13T22:52:14Z",
        "updatedAt" : "2019-02-14T22:55:35Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecc9646072a3f9216176e4d4d36efa53b0b4f4c2",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +130,134 @@    await tester.pump();\n\n    expect(log, hasLength(1));\n    expect(log[0], isMethodCall('HapticFeedback.vibrate', arguments: 'HapticFeedbackType.lightImpact'));\n"
  },
  {
    "id" : "9b50873b-9a38-438e-8e6d-e50a07e0a554",
    "prId" : 27900,
    "prUrl" : "https://github.com/flutter/flutter/pull/27900#pullrequestreview-203491308",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54492663-8248-45df-9b2c-135b62754b87",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Same here. If the drag triggers it, we shouldn't need to wait 100ms before checking the knock happened. ",
        "createdAt" : "2019-02-13T22:53:21Z",
        "updatedAt" : "2019-02-14T22:55:35Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecc9646072a3f9216176e4d4d36efa53b0b4f4c2",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +188,192 @@\n    expect(log, hasLength(1));\n    expect(log[0], isMethodCall('HapticFeedback.vibrate', arguments: 'HapticFeedbackType.lightImpact'));\n    debugDefaultTargetPlatformOverride = null;\n  });"
  },
  {
    "id" : "3909e581-805e-4b78-adae-844e897ec069",
    "prId" : 29451,
    "prUrl" : "https://github.com/flutter/flutter/pull/29451#pullrequestreview-221911518",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf86c0c2-0ff3-4db7-9ccf-080f31c883f6",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Small detail, leave a line between each test (to be consistent with the rest of the file).",
        "createdAt" : "2019-04-02T21:27:55Z",
        "updatedAt" : "2019-04-12T20:05:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "845b0cf3bb40491500c67207b28fc9c330395fcd",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +416,420 @@  });\n\n  testWidgets('Switch is translucent when disabled', (WidgetTester tester) async {\n    await tester.pumpWidget(\n      const Directionality("
  },
  {
    "id" : "2c12f132-0c2a-4228-8c01-78618c87911a",
    "prId" : 29451,
    "prUrl" : "https://github.com/flutter/flutter/pull/29451#pullrequestreview-226259947",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aea99e47-d0d5-4978-9cfd-99ab3b89c9eb",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Thanks for the tests. Looks good. Can you add one more test to check that going from enable to disabled and going from disabled to enabled take effect as you change?",
        "createdAt" : "2019-04-02T21:29:11Z",
        "updatedAt" : "2019-04-12T20:05:12Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "cfc7f0c4-f538-49a1-9c70-88a760f2a806",
        "parentId" : "aea99e47-d0d5-4978-9cfd-99ab3b89c9eb",
        "authorId" : "d2781820-06de-4c83-818b-c8f3fc2898ce",
        "body" : "I'm having trouble achieving this, currently I'm trying to do something like this:\r\n\r\n`\r\n  testWidgets('Switch becomes opaque once enabled', (WidgetTester tester) async {\r\n    bool isEnabled = false;\r\n\r\n    await tester.pumpWidget(\r\n      Directionality(\r\n        textDirection: TextDirection.rtl,\r\n        child: StatefulBuilder(\r\n          builder: (BuildContext context, StateSetter setState) {\r\n            return Center(\r\n              child: CupertinoSwitch(\r\n                value: false,\r\n                dragStartBehavior: DragStartBehavior.down,\r\n                onChanged: isEnabled ? (bool newValue) {} : null,\r\n              ),\r\n            );\r\n          },\r\n        ),\r\n      ),      \r\n    );\r\n\r\n    expect(find.byType(Opacity), findsOneWidget);\r\n    expect(tester.widget<Opacity>(find.byType(Opacity).first).opacity, 0.5);\r\n\r\n    isEnabled = true;\r\n    await tester.pump();\r\n\r\n    expect(find.byType(Opacity), findsOneWidget);\r\n    expect(tester.widget<Opacity>(find.byType(Opacity).first).opacity, 1.0);\r\n  });\r\n`\r\nIt's not working because the widget is not rebuilding with the new value. I can't seem to find any examples of this being done in the other test files. Do you know how I can do this or am I taking the wrong approach?",
        "createdAt" : "2019-04-04T17:38:56Z",
        "updatedAt" : "2019-04-12T20:05:12Z",
        "lastEditedBy" : "d2781820-06de-4c83-818b-c8f3fc2898ce",
        "tags" : [
        ]
      },
      {
        "id" : "5b7ad1f2-7fb0-4111-9374-1b6fe9b8cbe8",
        "parentId" : "aea99e47-d0d5-4978-9cfd-99ab3b89c9eb",
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "To get the effect you desire, you should just be able to declare the same tree again, within another call to `tester.pumpWidget()`, but in the 2nd tree you should change the `onChanged` property to be non-null. Does that make sense?",
        "createdAt" : "2019-04-09T21:56:50Z",
        "updatedAt" : "2019-04-12T20:05:12Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      },
      {
        "id" : "931c5825-b957-4a5f-a24d-20f51c51237d",
        "parentId" : "aea99e47-d0d5-4978-9cfd-99ab3b89c9eb",
        "authorId" : "d2781820-06de-4c83-818b-c8f3fc2898ce",
        "body" : "Yes I saw that in some other test files but I didn't think i would create the effect I needed. But after further thought it makes sense, thanks for you help ",
        "createdAt" : "2019-04-12T19:51:43Z",
        "updatedAt" : "2019-04-12T20:05:12Z",
        "lastEditedBy" : "d2781820-06de-4c83-818b-c8f3fc2898ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "845b0cf3bb40491500c67207b28fc9c330395fcd",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +451,455 @@    expect(tester.widget<Opacity>(find.byType(Opacity).first).opacity, 1.0);\n  });\n\n  testWidgets('Switch turns translucent after becoming disabled', (WidgetTester tester) async {\n    await tester.pumpWidget("
  },
  {
    "id" : "640d80f4-de17-427c-a025-0a964b5bb5ca",
    "prId" : 36087,
    "prUrl" : "https://github.com/flutter/flutter/pull/36087#pullrequestreview-263779651",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9888288a-5da7-4223-a50a-dcd607216f90",
        "parentId" : null,
        "authorId" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "body" : "Could you also verify that 100 milliseconds (which is half of the full duration of the animation. Or whatever timing you prefer) into the animation, the switch still has the correct appearance? Something like this:\r\n```\r\n    await tester.tap(find.byKey(switchKey));\r\n   // Kick off animation.\r\n    await tester.pump()\r\n    await tester.pump(const Duration(milliseconds: 100));\r\n    await expectLater(\r\n      find.byKey(switchKey),\r\n      matchesGoldenFile(\r\n        'switch.tap.turningOn.png',\r\n        version: 0,\r\n      ),\r\n      skip: !isLinux,\r\n    );\r\n```",
        "createdAt" : "2019-07-17T23:50:53Z",
        "updatedAt" : "2019-07-23T17:52:15Z",
        "lastEditedBy" : "a28d4bf0-9b21-4633-a08e-c383b294a037",
        "tags" : [
        ]
      },
      {
        "id" : "e56b410f-ddf9-4b83-9d95-4d8dac1e4056",
        "parentId" : "9888288a-5da7-4223-a50a-dcd607216f90",
        "authorId" : "e256d51e-0a9a-44cf-93f9-48bcf243ee8c",
        "body" : "This is super cool. Thanks for sharing that snippet!",
        "createdAt" : "2019-07-18T16:42:24Z",
        "updatedAt" : "2019-07-23T17:52:15Z",
        "lastEditedBy" : "e256d51e-0a9a-44cf-93f9-48bcf243ee8c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ceef68f83846c50c93b26e51dbb27865080581f",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +549,553 @@      skip: !isLinux,\n    );\n\n    await tester.tap(find.byKey(switchKey));\n    expect(value, isTrue);"
  }
]