[
  {
    "id" : "084331bd-4f96-4f59-abc1-4c67b77ed0eb",
    "prId" : 42967,
    "prUrl" : "https://github.com/flutter/flutter/pull/42967#pullrequestreview-310769702",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "233d48fe-a768-4508-a691-144f2d9002d5",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Thanks for showing where the numbers come from where possible, I think this is very clear üëç ",
        "createdAt" : "2019-11-01T17:30:29Z",
        "updatedAt" : "2019-11-02T12:55:45Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "fc0a1aa4-64a8-4e30-9782-c3c9be85da83",
        "parentId" : "233d48fe-a768-4508-a691-144f2d9002d5",
        "authorId" : "dab255b4-9cb6-40ef-a034-81776bad8c77",
        "body" : "I tried to remain consistent with the surrounding code üëç",
        "createdAt" : "2019-11-02T12:57:15Z",
        "updatedAt" : "2019-11-02T12:57:15Z",
        "lastEditedBy" : "dab255b4-9cb6-40ef-a034-81776bad8c77",
        "tags" : [
        ]
      }
    ],
    "commit" : "01f6371a940951d05dddc34c46a16162bcf4397a",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +306,310 @@    expect(\n      tester.getSize(modalFinder),\n      equals(const Size(200.0 - leftAndRightPadding, 100.0 - topAndBottomMargin - topAndBottomPadding)),\n    );\n  });"
  },
  {
    "id" : "cb975e2e-3f7a-4ef7-8a32-ff7a335b4b01",
    "prId" : 46245,
    "prUrl" : "https://github.com/flutter/flutter/pull/46245#pullrequestreview-331716928",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fbf6db37-9173-44cf-aed4-754f5ab0a82d",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Here and elsewhere for `tester.widgetList`: do we still need the cast if we specify the type parameter? `tester.widgetList<FadeTransition>(find.byType(FadeTransition))`?  I'm not 100% sure this actually avoids a cast, but I think we prefer using type parameters when we can anyway.",
        "createdAt" : "2019-12-12T18:21:23Z",
        "updatedAt" : "2019-12-13T08:22:36Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "5b5ef0fe-6e7e-4bca-b61d-db16847bbf4c",
        "parentId" : "fbf6db37-9173-44cf-aed4-754f5ab0a82d",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "Disabling `implicit-casts` makes me wondering how to improve type safety. I think some APIs could be improved by making them generics but I wanted to use ` as Xxx` before looking at the changes that could perhaps be done (and I suspect it could be breaking changes)",
        "createdAt" : "2019-12-13T08:14:51Z",
        "updatedAt" : "2019-12-13T08:22:36Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      }
    ],
    "commit" : "60527701864cb8d2bfb1cbec0f265435c7343f8d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1003,1007 @@    // Exit animation, look at reverse FadeTransition.\n    await tester.pump(const Duration(milliseconds: 25));\n    transition = tester.widgetList(find.byType(FadeTransition)).elementAt(1) as FadeTransition;\n    expect(transition.opacity.value, closeTo(0.500, 0.001));\n"
  }
]