[
  {
    "id" : "e80a7743-fcd9-4ee8-af3e-0a39977a8355",
    "prId" : 28629,
    "prUrl" : "https://github.com/flutter/flutter/pull/28629#pullrequestreview-212520431",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8e676ab-5ea6-41c6-9a65-2b1467cf4e13",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It would be helpful to explain that the numbers below are based on animating a Foo curve over a duration of Bar",
        "createdAt" : "2019-03-08T18:36:57Z",
        "updatedAt" : "2019-03-27T23:16:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "fdf84d27-29f9-491f-9e4c-412f11d3f164",
        "parentId" : "b8e676ab-5ea6-41c6-9a65-2b1467cf4e13",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Doh, found #29068 as I looked into it",
        "createdAt" : "2019-03-08T22:18:22Z",
        "updatedAt" : "2019-03-27T23:16:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "69540c89-b0b0-4a33-86c3-371feeaf88c0",
        "parentId" : "b8e676ab-5ea6-41c6-9a65-2b1467cf4e13",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Added more comments here",
        "createdAt" : "2019-03-08T23:22:37Z",
        "updatedAt" : "2019-03-27T23:16:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d7ae72a6582d12c0cfc3eb42bb9676ba4e472d7",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +467,471 @@    // The whole transition is 400ms based on CupertinoPageRoute.transitionDuration.\n    // Break it up into small chunks.\n\n    await tester.pump();\n    await tester.pump(const Duration(milliseconds: 50));"
  },
  {
    "id" : "be193761-a61f-4bbf-8b47-9e61a0009091",
    "prId" : 28629,
    "prUrl" : "https://github.com/flutter/flutter/pull/28629#pullrequestreview-212487753",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a74870b-e8d4-4edb-b649-1c3ce86f1d4b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Why are all of the epsilons needed if we're not curving the animation?",
        "createdAt" : "2019-03-08T18:38:17Z",
        "updatedAt" : "2019-03-27T23:16:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "2dc9dc81-6921-43ff-8c74-673da9d0a694",
        "parentId" : "0a74870b-e8d4-4edb-b649-1c3ce86f1d4b",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Just to avoid dealing with all the irrational numbers from dividing by 3. But it's only needed on the bottom route. Tweaking.",
        "createdAt" : "2019-03-08T21:29:21Z",
        "updatedAt" : "2019-03-27T23:16:43Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d7ae72a6582d12c0cfc3eb42bb9676ba4e472d7",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +501,505 @@  });\n\n  testWidgets('Dragged pop gesture is linear', (WidgetTester tester) async {\n    await tester.pumpWidget(\n      const CupertinoApp("
  },
  {
    "id" : "2d8ace87-42b0-456a-a521-268eea4b0da7",
    "prId" : 28756,
    "prUrl" : "https://github.com/flutter/flutter/pull/28756#pullrequestreview-210430687",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41f25a18-68f4-4781-9fe0-a09cfb367c81",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Is this right? Looking at droppedPageForwardAnimationTime and droppedPageBackAnimationTime, it seems like it's a bit more complicated than that.",
        "createdAt" : "2019-03-02T01:48:25Z",
        "updatedAt" : "2019-03-04T18:26:11Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "088f64ba-f02d-4bc9-b1ee-1395f010b955",
        "parentId" : "41f25a18-68f4-4781-9fe0-a09cfb367c81",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I verified that the test is doing the right thing by watching it execute and making sure that (without the fix) it failed exactly as was reported.",
        "createdAt" : "2019-03-04T16:32:58Z",
        "updatedAt" : "2019-03-04T18:26:11Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "e7f82927-3a67-4325-87cf-4e09168fedb1",
        "parentId" : "41f25a18-68f4-4781-9fe0-a09cfb367c81",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "It's not a big deal, I just meant this animation isn't driven by MaterialPageTransition times. It's driven by https://github.com/flutter/flutter/blob/master/packages/flutter/lib/src/cupertino/route.dart#L628. It still works. It's just not 75% as written above. I'll clean this up a bit in the next PR. ",
        "createdAt" : "2019-03-04T23:57:55Z",
        "updatedAt" : "2019-03-04T23:57:55Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "890d25701dfad841bd2552323f71a8be745ab4b8",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +323,327 @@    await gesture.moveBy(const Offset(400, 0)); // drag halfway\n    await gesture.up();\n    await tester.pump(const Duration(milliseconds: 275)); // partially dismiss \"route\"\n    expect(find.text('route'), findsOneWidget);\n    await tester.tap(find.text('push'));"
  },
  {
    "id" : "964e3084-10f5-40d7-94b5-f2c16834dc24",
    "prId" : 28756,
    "prUrl" : "https://github.com/flutter/flutter/pull/28756#pullrequestreview-210293756",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8b5b9f7-ccae-42b1-98d6-c755858686f1",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "assert where 'route' and 'push' are so if someone refactors the droppedPageForwardAnimationTime/droppedPageBackAnimationTime in the future, we don't accidentally just finish running the whole animation and end up not testing anything here.",
        "createdAt" : "2019-03-02T01:49:10Z",
        "updatedAt" : "2019-03-04T18:26:11Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "5cdfff1c-f26d-43bb-9d3f-f235632492ee",
        "parentId" : "b8b5b9f7-ccae-42b1-98d6-c755858686f1",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "OK, added checks for this.",
        "createdAt" : "2019-03-04T18:20:49Z",
        "updatedAt" : "2019-03-04T18:26:11Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "890d25701dfad841bd2552323f71a8be745ab4b8",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +324,328 @@    await gesture.up();\n    await tester.pump(const Duration(milliseconds: 275)); // partially dismiss \"route\"\n    expect(find.text('route'), findsOneWidget);\n    await tester.tap(find.text('push'));\n    await tester.pumpAndSettle();"
  },
  {
    "id" : "20b543bd-1de2-4be9-b24f-20258b330cf1",
    "prId" : 28855,
    "prUrl" : "https://github.com/flutter/flutter/pull/28855#pullrequestreview-210776121",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8e65b25-94bc-43e8-bdd8-d017f227eec8",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Please add this comment to the top of the test: \r\n`// Regression test for https://github.com/flutter/flutter/issues/28728`",
        "createdAt" : "2019-03-05T16:26:29Z",
        "updatedAt" : "2019-03-05T19:26:59Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7f2c393a6d0ff80a184b03a0de985ba303d6367",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +259,263 @@    final GlobalKey scaffoldKey = GlobalKey();\n\n    await tester.pumpWidget(\n      CupertinoApp(\n        home: CupertinoPageScaffold("
  },
  {
    "id" : "dcc64ada-5de6-4826-b4a8-b6ce658ce55f",
    "prId" : 30422,
    "prUrl" : "https://github.com/flutter/flutter/pull/30422#pullrequestreview-226809406",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df62b909-e5f3-4b27-b30e-c27de0056ead",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Add comment `/// Regression test for https://github.com/flutter/flutter/issues/29596.`?",
        "createdAt" : "2019-04-15T17:54:13Z",
        "updatedAt" : "2019-04-15T18:28:13Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "4e13fc99-85be-4a6b-9143-353c6e6706ca",
        "parentId" : "df62b909-e5f3-4b27-b30e-c27de0056ead",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "sg",
        "createdAt" : "2019-04-15T18:28:17Z",
        "updatedAt" : "2019-04-15T18:28:17Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "94ceac499b16ac8040060b9b64abc6e2caf08a15",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +642,646 @@  /// Regression test for https://github.com/flutter/flutter/issues/29596.\n  testWidgets('test edge swipe then drop back at ending point works', (WidgetTester tester) async {\n    await tester.pumpWidget(\n      CupertinoApp(\n        navigatorObservers: <NavigatorObserver>[navigatorObserver],"
  },
  {
    "id" : "547ebbd2-6d58-475e-93b0-91fb41f97860",
    "prId" : 50180,
    "prUrl" : "https://github.com/flutter/flutter/pull/50180#pullrequestreview-383279277",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56d0db48-c17b-4f4f-a573-b4cc33563ac5",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "you're not testing the new functionality on CupertinoFullscreenDialogTransition you created right? That would involve 2 routes with the bottom one having fullscreenDialog true",
        "createdAt" : "2020-03-11T18:13:44Z",
        "updatedAt" : "2020-03-23T15:02:23Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "ee5e3ad2-1e69-4e4f-9a0e-a11b105f1d59",
        "parentId" : "56d0db48-c17b-4f4f-a573-b4cc33563ac5",
        "authorId" : "9e3eed31-b5ce-483c-91dd-e8ca18b84239",
        "body" : "You’re correct, it seems I forgot to also test that explicitely.\r\nThis test is still needed though since it was missing.  \r\nIs it considered bad or good practice to move the body of this test into a function that gets an argument? (Whether the bottomroute should be fullscreenDialog)",
        "createdAt" : "2020-03-11T21:42:16Z",
        "updatedAt" : "2020-03-23T15:02:23Z",
        "lastEditedBy" : "9e3eed31-b5ce-483c-91dd-e8ca18b84239",
        "tags" : [
        ]
      },
      {
        "id" : "59d8c101-bbae-444d-9ac0-336f842df131",
        "parentId" : "56d0db48-c17b-4f4f-a573-b4cc33563ac5",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "having helper functions is ok",
        "createdAt" : "2020-03-28T03:31:26Z",
        "updatedAt" : "2020-03-28T03:31:26Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "1935c40c05d64e7559e993f0e4a2c016c0667438",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +516,520 @@                  child: const Text('Button'),\n                  onPressed: () {\n                    Navigator.push<void>(context, CupertinoPageRoute<void>(\n                      builder: (BuildContext context) {\n                        return CupertinoButton("
  },
  {
    "id" : "195967ee-14fe-415d-b35a-a6e5fdc478a5",
    "prId" : 64846,
    "prUrl" : "https://github.com/flutter/flutter/pull/64846#pullrequestreview-486355539",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c35ca9c-3a84-48e5-8cbc-121905ab89bb",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "how does this assert that the down event is cancelled?",
        "createdAt" : "2020-09-08T21:13:57Z",
        "updatedAt" : "2020-09-15T18:33:47Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "18abfdc3-76ae-436b-8ae3-e62e9c6fd0e7",
        "parentId" : "6c35ca9c-3a84-48e5-8cbc-121905ab89bb",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "I've added the following comment, is it clearer?\r\n```dart\r\n    // The test target, _TestPostRouteCancel, shows on the home route how many\r\n    // [PointerCancelEvent] it has received. Initially it will show \"Home 0\".\r\n    // After the route is popped, it should show \"Home 1\", meaning it received\r\n    // one [PointerCancelEvent].\r\n```",
        "createdAt" : "2020-09-10T22:31:42Z",
        "updatedAt" : "2020-09-15T18:33:47Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      }
    ],
    "commit" : "17ea6e834fe7e9d23945c74d116e8e99ad3dd535",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +1474,1478 @@  });\n\n  testWidgets('Popping routes should cancel down events', (WidgetTester tester) async {\n    await tester.pumpWidget(_TestPostRouteCancel());\n"
  },
  {
    "id" : "4bbe6a77-d01a-45bb-881e-4b75ce19c798",
    "prId" : 67323,
    "prUrl" : "https://github.com/flutter/flutter/pull/67323#pullrequestreview-502504617",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef6bccf6-1f89-4fbe-a6ed-7dc5608efa78",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "here and below: use `Object?` instead of `dynamic` if possible.",
        "createdAt" : "2020-10-05T21:21:52Z",
        "updatedAt" : "2020-10-06T18:33:16Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "06427405-c326-4abe-a578-5427bf99dd03",
        "parentId" : "ef6bccf6-1f89-4fbe-a6ed-7dc5608efa78",
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "The analyzer dings me for it. It only passes if I match the signature of the super class.",
        "createdAt" : "2020-10-06T00:12:29Z",
        "updatedAt" : "2020-10-06T18:33:16Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "b0561e21-7db1-407e-a205-474fba331090",
        "parentId" : "ef6bccf6-1f89-4fbe-a6ed-7dc5608efa78",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Ahhh ok. We may want to separately consider having that be `Object?` instead of `dynamic`, since dynamic introduces terror into the type analysis.",
        "createdAt" : "2020-10-06T00:18:26Z",
        "updatedAt" : "2020-10-06T18:33:16Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "5f3d6c3a-796d-4623-9b84-f439f48e08ff",
        "parentId" : "ef6bccf6-1f89-4fbe-a6ed-7dc5608efa78",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "(Again, I'm not clear on whether there's some good reason to not do that based on other code though)",
        "createdAt" : "2020-10-06T00:18:50Z",
        "updatedAt" : "2020-10-06T18:33:16Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "5875f69dc57a4ce6e987ab753d1aeffdea3e1cae",
    "line" : 256,
    "diffHunk" : "@@ -1,1 +1607,1611 @@\n  @override\n  void didStartUserGesture(Route<dynamic> route, Route<dynamic>? previousRoute) {\n    invocations.add(NavigatorInvocation.didStartUserGesture);\n  }"
  }
]