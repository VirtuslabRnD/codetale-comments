[
  {
    "id" : "1e11c1e4-9011-4a7f-90ed-24e11df3cee6",
    "prId" : 14431,
    "prUrl" : "https://github.com/flutter/flutter/pull/14431#pullrequestreview-98051090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "563aaec3-a0f4-422b-9645-c1edc76b56a6",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "do we expect the focus to remain where it had been when you have two text fields in two different tabs and you switch from one tab, then switch to the other tab? that might be something worth testing here too",
        "createdAt" : "2018-02-05T21:01:16Z",
        "updatedAt" : "2018-02-21T19:09:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "aae3d4a2-9a07-483c-9f7a-ddba9d3137d8",
        "parentId" : "563aaec3-a0f4-422b-9645-c1edc76b56a6",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Shouldn't be possible. The iOS convention is to hide the tabs when the keyboard is present. It's not possible to change tabs when a field has focus.",
        "createdAt" : "2018-02-07T01:48:02Z",
        "updatedAt" : "2018-02-21T19:09:48Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "586956fc-69b3-4fe2-bfbb-e87b42caed1e",
        "parentId" : "563aaec3-a0f4-422b-9645-c1edc76b56a6",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "it's definitely possible in flutter though, right?",
        "createdAt" : "2018-02-07T21:16:02Z",
        "updatedAt" : "2018-02-21T19:09:48Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "00df835b-1c67-49a2-913d-26e1b6bb796b",
        "parentId" : "563aaec3-a0f4-422b-9645-c1edc76b56a6",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Seems like on Android the focus isn't lost when dismissing the keyboard to reveal the tab bar. \r\n\r\nThe described scenario works. Added a test.",
        "createdAt" : "2018-02-21T01:27:58Z",
        "updatedAt" : "2018-02-21T19:09:48Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ed7809f2e2b1063422248fd8baebfc0f0441d69",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +161,165 @@    expect(focusNodes[0].hasFocus, isTrue);\n    expect(focusNodes[1].hasFocus, isFalse);\n  });\n\n  testWidgets('Do not affect focus order in the route', (WidgetTester tester) async {"
  },
  {
    "id" : "c4e9bffb-c946-4ee0-9325-4c5a3ac4e433",
    "prId" : 27576,
    "prUrl" : "https://github.com/flutter/flutter/pull/27576#pullrequestreview-200868187",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "477601fd-0fbe-4eb8-b589-a48cfa1da1de",
        "parentId" : null,
        "authorId" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "body" : "I think it would be helpful to add some comments that elaborate on what these verifications really mean.  For example, maybe something like:\r\n\r\n```dart\r\n// Verify that Page 2 is the only page that exists because Tab 2 should be selected.\r\n```",
        "createdAt" : "2019-02-06T22:56:19Z",
        "updatedAt" : "2019-02-07T00:00:26Z",
        "lastEditedBy" : "d6f7761b-a6b2-4acf-aad8-3e23f36d584d",
        "tags" : [
        ]
      },
      {
        "id" : "fd1f3413-1bea-47ed-806b-28a658cc5858",
        "parentId" : "477601fd-0fbe-4eb8-b589-a48cfa1da1de",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Added comments",
        "createdAt" : "2019-02-07T00:01:46Z",
        "updatedAt" : "2019-02-07T00:01:46Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "371fac54ce652eeeca3073b484f7c533347e96f1",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +460,464 @@    expect(selectedTabs, <int>[3]);\n    // Tab 1 was previously built so it's rebuilt again, albeit offstage.\n    expect(find.text('Different page 1', skipOffstage: false), isOffstage);\n    // Since all the tabs after tab 2 are deleted, tab 2 is now the last tab and\n    // the actively shown tab."
  }
]