[
  {
    "id" : "dd30fdd2-8f8d-4b37-a327-e7790dc33018",
    "prId" : 23759,
    "prUrl" : "https://github.com/flutter/flutter/pull/23759#pullrequestreview-172291072",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba29a1c1-67b3-4367-b79a-4918307644d8",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "The rest of this file seems to consistently put the test name on the first line, the test closure on the next",
        "createdAt" : "2018-11-07T00:06:18Z",
        "updatedAt" : "2018-12-19T02:52:43Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0cc8fc1fd15cf27ba5f1c0431547b433e6c9112",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1101,1105 @@\n  testWidgets(\n    'text field respects theme',\n    (WidgetTester tester) async {\n      await tester.pumpWidget("
  },
  {
    "id" : "95798dd2-6bc4-407b-b74c-b2a997ea7339",
    "prId" : 24876,
    "prUrl" : "https://github.com/flutter/flutter/pull/24876#pullrequestreview-192462773",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa1582f2-b870-4f20-8c92-29fbf7cf94aa",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "what are all these for?",
        "createdAt" : "2019-01-14T20:37:07Z",
        "updatedAt" : "2019-01-29T01:54:36Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "c973d7e9-cb06-4020-8f80-1ed1ad20e541",
        "parentId" : "aa1582f2-b870-4f20-8c92-29fbf7cf94aa",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "Because the animation needs multiple 'frames' for the tests to work correctly. But it really only needs two. Should I condense these?",
        "createdAt" : "2019-01-14T22:19:44Z",
        "updatedAt" : "2019-01-29T01:54:36Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      },
      {
        "id" : "8461a45c-17bc-4599-91c2-8377395c96dd",
        "parentId" : "aa1582f2-b870-4f20-8c92-29fbf7cf94aa",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Yes, it should only need to pump each time you trigger an animateTo on the animation controller via some time elapse. Reduce it to what's needed for the test to pass and add comments in the various places that does more than one pump.",
        "createdAt" : "2019-01-14T22:32:05Z",
        "updatedAt" : "2019-01-29T01:54:36Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "85b55f5f-5a83-4028-bae2-a20e3265c287",
        "parentId" : "aa1582f2-b870-4f20-8c92-29fbf7cf94aa",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "ok",
        "createdAt" : "2019-01-15T02:16:23Z",
        "updatedAt" : "2019-01-29T01:54:36Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      }
    ],
    "commit" : "10a3f23872f11f07d2b4b56433e8211eba47bf6e",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +174,178 @@    expect(renderEditable.cursorColor.alpha, 255);\n\n    await tester.pump(const Duration(milliseconds: 100));\n    await tester.pump(const Duration(milliseconds: 400));\n"
  },
  {
    "id" : "e064f7e4-3d1b-403e-9445-5bcc2b18c6ff",
    "prId" : 25683,
    "prUrl" : "https://github.com/flutter/flutter/pull/25683#pullrequestreview-189261473",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a480f76f-a14c-4efd-8429-de4a672acb8e",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "is this what iOS does? I get a feeling this happens on the pointer up only.",
        "createdAt" : "2019-01-04T00:59:22Z",
        "updatedAt" : "2019-01-12T02:11:28Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "1a22aa8c-33b4-49d2-8e6f-a78515106704",
        "parentId" : "a480f76f-a14c-4efd-8429-de4a672acb8e",
        "authorId" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "body" : "Yup, you're right.",
        "createdAt" : "2019-01-04T04:37:16Z",
        "updatedAt" : "2019-01-12T02:11:28Z",
        "lastEditedBy" : "1869f27c-20cc-484a-9a56-366b5f419547",
        "tags" : [
        ]
      }
    ],
    "commit" : "0bef0607b52e8025966831ceb2654e9b5593010e",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +1128,1132 @@      await gesture.up();\n      await tester.pumpAndSettle();\n      expect(find.byType(CupertinoButton), findsNWidgets(3));\n    },\n  );"
  },
  {
    "id" : "12d347ae-afc8-448a-a0e3-7c5072fdcfe6",
    "prId" : 27697,
    "prUrl" : "https://github.com/flutter/flutter/pull/27697#pullrequestreview-201836444",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70244d38-c08f-478f-b3b9-819c7595753e",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I suspect things will work without this additional pump since the line above is pumping a frame already",
        "createdAt" : "2019-02-09T00:30:01Z",
        "updatedAt" : "2019-02-09T00:30:07Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "edfbdfc98dd071eab2d03b4abfd881f11d182476",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +1373,1377 @@    );\n\n    await tester.pump();\n    expect(renderEditable.cursorColor, CupertinoColors.activeOrange);\n"
  },
  {
    "id" : "0ee22016-c5d3-458b-bd90-5ca0b1cf7ab9",
    "prId" : 28242,
    "prUrl" : "https://github.com/flutter/flutter/pull/28242#pullrequestreview-206526466",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11c109f4-70b4-40bb-9e15-920a3b5957f1",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe comment for the future reader that this means \"no toolbar\"?",
        "createdAt" : "2019-02-21T21:22:09Z",
        "updatedAt" : "2019-02-22T21:43:08Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "70433d1964a629d61c0c33acbe6e87361594c3ac",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +1110,1114 @@      );\n      // Toolbar only shows up on long press up.\n      expect(find.byType(CupertinoButton), findsNothing);\n\n      await gesture.moveBy(const Offset(50, 0));"
  },
  {
    "id" : "636cef0f-9fc1-46fa-8b0f-9bfb6b8a9fb0",
    "prId" : 28478,
    "prUrl" : "https://github.com/flutter/flutter/pull/28478#pullrequestreview-207704265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "260815cd-b8b4-413e-8346-2c90036dd4ac",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Wouldn't you also want to test values like 0.5 and -1.0?",
        "createdAt" : "2019-02-26T00:00:44Z",
        "updatedAt" : "2019-02-26T20:45:18Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "a4704d9f-2de9-476a-b4dc-13a7b81795fc",
        "parentId" : "260815cd-b8b4-413e-8346-2c90036dd4ac",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Good point. Though not in this class. Added to force_press_test.dart.",
        "createdAt" : "2019-02-26T00:19:05Z",
        "updatedAt" : "2019-02-26T20:45:18Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "277d89ae7e9a69d05814344f243656c136cf6ee7",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +1673,1677 @@        // iPhone 6 and below report 0 across the board.\n        pressure: 0,\n        pressureMax: 0,\n        pressureMin: 0,\n      ),"
  },
  {
    "id" : "6e6d215b-6d74-4621-b2d8-50bf0be04f63",
    "prId" : 28478,
    "prUrl" : "https://github.com/flutter/flutter/pull/28478#pullrequestreview-208197512",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8be876b2-c5ee-4d25-bc54-e9a330571ece",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "I think what we're doing here is verifying that the cut/copy/paste menu is up?",
        "createdAt" : "2019-02-26T19:02:45Z",
        "updatedAt" : "2019-02-26T20:45:18Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "9f5ad253-b31d-41d8-a19e-36a65ae7a5d4",
        "parentId" : "8be876b2-c5ee-4d25-bc54-e9a330571ece",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Yes. Most places had comments but some were missing. Added.",
        "createdAt" : "2019-02-26T20:45:47Z",
        "updatedAt" : "2019-02-26T20:45:47Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "277d89ae7e9a69d05814344f243656c136cf6ee7",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +1645,1649 @@    await tester.pump();\n    // Shows toolbar.\n    expect(find.byType(CupertinoButton), findsNWidgets(3));\n  });\n"
  },
  {
    "id" : "ed55d2b2-e6cf-4a4c-9d2f-47965daa26a7",
    "prId" : 29683,
    "prUrl" : "https://github.com/flutter/flutter/pull/29683#pullrequestreview-222516767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f06f1c1b-80b0-4fec-a46e-1e87a510cd22",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "We should also check that long press always produces collapsed selection (thus no handles)",
        "createdAt" : "2019-04-04T01:00:24Z",
        "updatedAt" : "2019-05-13T18:37:47Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "e569fef46da2993e5f48803f89ed8d7357829f21",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +2045,2049 @@    // A long press in Cupertino should position the cursor without any selection.\n    expect(controller.selection.isCollapsed, isTrue);\n\n    final EditableTextState editableText = tester.state(find.byType(EditableText));\n    expect(editableText.selectionOverlay.handlesAreVisible, isFalse);"
  },
  {
    "id" : "615b4e44-ab43-4bb9-b731-181b698ff676",
    "prId" : 31687,
    "prUrl" : "https://github.com/flutter/flutter/pull/31687#pullrequestreview-231869868",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30eb56a6-22f3-46ba-982f-1d3706cc413d",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "You'd want to put the thing you want to golden test against in a repaintboundary. Otherwise you end up with a really big image like https://github.com/flutter/goldens/blob/master/packages/flutter/test/cupertino/text_field_cursor_test.0.0.png. \r\n\r\nYou'd also want to isolate it from things like the debug banner etc that aren't specifically the scenario you're trying to test. ",
        "createdAt" : "2019-04-29T19:54:40Z",
        "updatedAt" : "2019-04-30T19:59:32Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "25fc3e0e5ffc5671ec32eb54ea13d0cadd829573",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +359,363 @@          child: ConstrainedBox(\n            constraints: BoxConstraints.loose(const Size(400, 400)),\n            child: const CupertinoTextField(),\n          ),\n        ),"
  },
  {
    "id" : "27cbaa71-d4b3-4e39-a892-ad78e4aa7eac",
    "prId" : 32059,
    "prUrl" : "https://github.com/flutter/flutter/pull/32059#pullrequestreview-240308499",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6a3c7f4-722b-4988-ba47-5495f2e7d833",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Why do we need two pumps? Is one not enough?",
        "createdAt" : "2019-05-21T16:48:59Z",
        "updatedAt" : "2019-06-03T19:24:48Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "b34ac3d6-41ae-4c5a-9a6b-d3e0454faccb",
        "parentId" : "b6a3c7f4-722b-4988-ba47-5495f2e7d833",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "fixed",
        "createdAt" : "2019-05-21T21:24:59Z",
        "updatedAt" : "2019-06-03T19:24:48Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c6f8257a69116d6820fcb5de7d0e36c1fa8686e",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +1176,1180 @@    );\n\n    await tester.pump();\n\n    expect(find.text('Paste'), findsNothing);"
  },
  {
    "id" : "79e3b181-7a78-4128-bcb4-696632a7374a",
    "prId" : 32059,
    "prUrl" : "https://github.com/flutter/flutter/pull/32059#pullrequestreview-240308535",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "845fc1a0-8a9c-4f31-b02f-2ab0d86c993a",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Before we tap this, should we make sure that there are no illegal options in the overlay (e.g. paste)?",
        "createdAt" : "2019-05-21T16:49:49Z",
        "updatedAt" : "2019-06-03T19:24:48Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "c9166495-f3fe-4b7a-981c-2c38ef7d889b",
        "parentId" : "845fc1a0-8a9c-4f31-b02f-2ab0d86c993a",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "added",
        "createdAt" : "2019-05-21T21:25:05Z",
        "updatedAt" : "2019-06-03T19:24:48Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c6f8257a69116d6820fcb5de7d0e36c1fa8686e",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +1182,1186 @@    expect(find.text('Select All'), findsOneWidget);\n\n    await tester.tap(find.text('Select All'));\n    await tester.pump();\n"
  },
  {
    "id" : "19aedb17-ce67-4095-a56e-b66355310f31",
    "prId" : 34676,
    "prUrl" : "https://github.com/flutter/flutter/pull/34676#pullrequestreview-260321299",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ef37299-8c2c-4225-a9a8-7cd3dca86361",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "The comment says there should be 3, why did that change?",
        "createdAt" : "2019-07-01T22:33:35Z",
        "updatedAt" : "2019-07-24T16:43:52Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "1894b94f-b3d0-4131-a9f6-de3e0f5939ca",
        "parentId" : "1ef37299-8c2c-4225-a9a8-7cd3dca86361",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "it used to be copy, paste, and cut.\r\nafter this change it by default can only paste",
        "createdAt" : "2019-07-10T19:55:17Z",
        "updatedAt" : "2019-07-24T16:43:52Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "658008270c11d9c59d670c0ea185e6ae3908f2e6",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +1697,1701 @@\n      // Selected text shows paste toolbar buttons.\n      expect(find.byType(CupertinoButton), findsNWidgets(1));\n\n      await gesture.up();"
  },
  {
    "id" : "ffa6dd37-8875-4539-b4a1-aac36fca9026",
    "prId" : 34676,
    "prUrl" : "https://github.com/flutter/flutter/pull/34676#pullrequestreview-256589571",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4388cff-90d4-41dc-b14f-e11a28aff2f5",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "same here.",
        "createdAt" : "2019-07-01T22:33:46Z",
        "updatedAt" : "2019-07-24T16:43:52Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "658008270c11d9c59d670c0ea185e6ae3908f2e6",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +1707,1711 @@        const TextSelection(baseOffset: 0, extentOffset: 35),\n      );\n      expect(find.byType(CupertinoButton), findsNWidgets(1));\n    },\n  );"
  },
  {
    "id" : "3da25595-d3e7-4ce7-8e41-9b4d1d818252",
    "prId" : 34723,
    "prUrl" : "https://github.com/flutter/flutter/pull/34723#pullrequestreview-256574749",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3bcd128-ae70-4d7e-a727-3fc87ab5d871",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Were tests failing because we hadn't reset these values?",
        "createdAt" : "2019-07-01T20:55:54Z",
        "updatedAt" : "2019-07-01T22:18:19Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "5ad494c3-36b3-4011-9fcb-a4399743ca0d",
        "parentId" : "f3bcd128-ae70-4d7e-a727-3fc87ab5d871",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Yes!  It took me awhile to track it down to this.",
        "createdAt" : "2019-07-01T21:39:33Z",
        "updatedAt" : "2019-07-01T22:18:19Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "c91d139ca47ef7276e8b7d7900651ffa50cb386e",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +3092,3096 @@      );\n\n      tester.binding.window.physicalSizeTestValue = null;\n      tester.binding.window.devicePixelRatioTestValue = null;\n    });"
  },
  {
    "id" : "cf34da81-4c19-4bfb-b386-3ed6531d8ad7",
    "prId" : 34964,
    "prUrl" : "https://github.com/flutter/flutter/pull/34964#pullrequestreview-253581675",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e49ab91e-d34d-44e2-a22b-69943f962a73",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Good call testing this explicitly.",
        "createdAt" : "2019-06-24T18:25:39Z",
        "updatedAt" : "2019-06-24T22:23:29Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "c90f0dcd8abb2892858f5e43815dae9809407ae1",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +2534,2538 @@    await tester.pump(const Duration(seconds: 1));\n\n    // Double tap count as one single tap.\n    await tester.tap(find.byType(CupertinoTextField));\n    await tester.pump(const Duration(milliseconds: 100));"
  },
  {
    "id" : "97c478ac-7c3e-4ef8-a34e-8d03d042d3e2",
    "prId" : 34964,
    "prUrl" : "https://github.com/flutter/flutter/pull/34964#pullrequestreview-253582233",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b0d0c6d-fb82-4ca2-91f1-71cb27eaec9d",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "[here and below] When the test is waiting for an essentially arbitrary duration, to ensure that animations have time to finish, it's best to use `tester.pumpAndSettle()`. If the wait duration is based on some analysis of exactly what we expect to happen, then using a specific duration, even one second, is good. Although in that case, you'd want to help the next reader by explaining what the specific duration amounts to.",
        "createdAt" : "2019-06-24T18:26:05Z",
        "updatedAt" : "2019-06-24T22:23:29Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "c90f0dcd8abb2892858f5e43815dae9809407ae1",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +2563,2567 @@      // Wait out the double tap interval so the next tap doesn't end up being\n      // recognized as a double tap.\n      await tester.pump(const Duration(seconds: 1));\n\n      // Enabling the text field, now it should accept taps."
  }
]