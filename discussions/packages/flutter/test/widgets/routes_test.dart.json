[
  {
    "id" : "0c4209ec-c16a-4503-8efc-6ac03ebcdb77",
    "prId" : 33152,
    "prUrl" : "https://github.com/flutter/flutter/pull/33152#pullrequestreview-244439707",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00b8431e-618a-4757-962d-7748e486a513",
        "parentId" : null,
        "authorId" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "body" : "Can this be considered a `ModalRoute` test if it is using a `PageRoute` workaround? ",
        "createdAt" : "2019-05-23T20:41:34Z",
        "updatedAt" : "2019-05-23T23:47:03Z",
        "lastEditedBy" : "411dcbae-f11a-4324-a720-aa6120756e05",
        "tags" : [
        ]
      },
      {
        "id" : "4d56fd91-6124-44c8-b2ba-8c87fd512c39",
        "parentId" : "00b8431e-618a-4757-962d-7748e486a513",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "Yeah good point. I think the idea is that the code that it's testing is in ModalRoute. It's still a \"ModalRoute test\", it's just not good enough. ",
        "createdAt" : "2019-05-31T17:52:05Z",
        "updatedAt" : "2019-05-31T17:52:05Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8dffc9887819e065116d3076d0eb58f22c2074e",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +508,512 @@  group('ModalRoute', () {\n    testWidgets('should resume focus when the next route is popped', (WidgetTester tester) async {\n      // TODO(tongmu): It's currently using PageRoute (from MaterialApp)\n      // instead of ModalRoute, which might leave a risk but avoids building\n      // everything from scratch by using the existing setup by MaterialApp and"
  },
  {
    "id" : "bc98e54f-e7a7-4b09-8b44-f6fec89682e7",
    "prId" : 48345,
    "prUrl" : "https://github.com/flutter/flutter/pull/48345#pullrequestreview-340892613",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f587ea49-6a1b-4f48-bbfe-d06bd1b3f262",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Same comments here.",
        "createdAt" : "2020-01-10T00:20:52Z",
        "updatedAt" : "2020-01-10T00:41:04Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "88d2e65774c8e095c8fb85a0a17eb95f3216763a",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +952,956 @@      ));\n\n      final CurveTween _customBarrierTween = CurveTween(curve: Curves.linear);\n      int _getExpectedBarrierTweenAlphaValue(double t) {\n        return Color.getAlphaFromOpacity(_customBarrierTween.transform(t));"
  },
  {
    "id" : "04ccf939-c20a-4723-a20c-e259b7e61ea9",
    "prId" : 59290,
    "prUrl" : "https://github.com/flutter/flutter/pull/59290#pullrequestreview-435950183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b949a4e5-73bd-4a99-8aa1-29751be9e7d3",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Please add: \"// Regression test for <issue link>.\"",
        "createdAt" : "2020-06-23T16:26:58Z",
        "updatedAt" : "2020-06-23T23:20:27Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f4d76776ae870489ffa1e0fbc4b3f788a0b90dc",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +1205,1209 @@    testWidgets('modal route semantics order', (WidgetTester tester) async {\n      // Regression test for https://github.com/flutter/flutter/issues/46625.\n      final SemanticsTester semantics = SemanticsTester(tester);\n      await tester.pumpWidget(MaterialApp(\n        home: Material("
  },
  {
    "id" : "821951f9-2266-43d9-8841-05057b5f8856",
    "prId" : 59290,
    "prUrl" : "https://github.com/flutter/flutter/pull/59290#pullrequestreview-435950183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5268cf7d-c216-4221-a8d9-afd0998ff817",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Doesn't the barrier have a label and/or action we can use to identify it better? This could just be any stray semantics node...",
        "createdAt" : "2020-06-23T16:27:55Z",
        "updatedAt" : "2020-06-23T23:20:27Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f4d76776ae870489ffa1e0fbc4b3f788a0b90dc",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +1261,1265 @@              TestSemantics(\n                id: 5,\n                rect: TestSemantics.fullScreen,\n                actions: <SemanticsAction>[SemanticsAction.tap],\n                label: 'test label',"
  }
]