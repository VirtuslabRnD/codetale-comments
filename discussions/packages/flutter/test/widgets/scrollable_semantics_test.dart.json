[
  {
    "id" : "5d2c6fc3-4d31-43c9-a471-f88b10352553",
    "prId" : 12263,
    "prUrl" : "https://github.com/flutter/flutter/pull/12263#pullrequestreview-65637013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4130e21-70eb-4edd-9ec9-e781e4d07d58",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Not sure if these tests are sensitive to text direction, but should we instead use \"forwards\"/\"backwards\" so these work in LTR and RTL? You'd have to pick different direction based on `Directionality`.",
        "createdAt" : "2017-09-27T17:52:49Z",
        "updatedAt" : "2017-09-27T19:52:41Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "5a1e1ac9-906b-418f-95b7-f3a9f7142574",
        "parentId" : "b4130e21-70eb-4edd-9ec9-e781e4d07d58",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I think in a test it's probably best to have the input be absolute. You want to test it in both LTR and RTL, but you want to get different results, you don't want the test itself to be agnostic.",
        "createdAt" : "2017-09-27T18:11:44Z",
        "updatedAt" : "2017-09-27T19:52:41Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c795f665-6c86-4555-8bcd-b62c8809c5fe",
        "parentId" : "b4130e21-70eb-4edd-9ec9-e781e4d07d58",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I find it easier to think about these methods in terms of the direction the finger moves. flinkLeft just means the finger moves towards the left.",
        "createdAt" : "2017-09-27T18:12:40Z",
        "updatedAt" : "2017-09-27T19:52:41Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c92c2a9795ff40974c066db656b5f23f6990b07",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +322,326 @@Future<Null> flingRight(WidgetTester tester, { int repetitions: 1 }) => fling(tester, const Offset(200.0, 0.0), repetitions);\n\nFuture<Null> flingLeft(WidgetTester tester, { int repetitions: 1 }) => fling(tester, const Offset(-200.0, 0.0), repetitions);\n\nFuture<Null> fling(WidgetTester tester, Offset offset, int repetitions) async {"
  },
  {
    "id" : "b81f4674-38a0-49f9-8219-8c17c6d99c16",
    "prId" : 62359,
    "prUrl" : "https://github.com/flutter/flutter/pull/62359#pullrequestreview-458768166",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33c5d047-5fa1-4a41-a052-bd559354ef82",
        "parentId" : null,
        "authorId" : "56dcaf0a-bf66-4329-8619-4e3bb9a69452",
        "body" : "Is there an existing function which already handles this? If not, should I move this somewhere more centralized?",
        "createdAt" : "2020-07-27T22:35:28Z",
        "updatedAt" : "2020-07-29T00:59:10Z",
        "lastEditedBy" : "56dcaf0a-bf66-4329-8619-4e3bb9a69452",
        "tags" : [
        ]
      },
      {
        "id" : "942f7d0b-aec9-406a-917b-f01965c0090c",
        "parentId" : "33c5d047-5fa1-4a41-a052-bd559354ef82",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I don't think this is needed very often. Usually you only care about their relative position to the parent. Having that just here seems fine.",
        "createdAt" : "2020-07-30T21:28:06Z",
        "updatedAt" : "2020-07-30T21:28:19Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "8190522dabbaeeed3f5a3415fecdea059bc1096c",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +658,662 @@}\n\nRect nodeGlobalRect(SemanticsNode node) {\n  Matrix4 globalTransform = node.transform ?? Matrix4.identity();\n  for (SemanticsNode parent = node.parent; parent != null; parent = parent.parent) {"
  }
]