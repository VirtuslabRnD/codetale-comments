[
  {
    "id" : "34a05c40-7bcd-4fc7-a802-18d9dc9fcd08",
    "prId" : 40706,
    "prUrl" : "https://github.com/flutter/flutter/pull/40706#pullrequestreview-290073036",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "346dd7b3-2e52-44c2-877b-9515e896e599",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "It probably doesn't matter if the test passes, but the original test only send down event. ",
        "createdAt" : "2019-09-18T16:57:27Z",
        "updatedAt" : "2019-09-19T00:55:44Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "37a3fa9f-936f-4f39-bbca-b67fd94fd726",
        "parentId" : "346dd7b3-2e52-44c2-877b-9515e896e599",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes, the test passes.  I thought about it when I converted this, and I think that the old way was not really testing in a \"real world\" way: in the real world, it's unlikely to only have down events.",
        "createdAt" : "2019-09-18T17:15:00Z",
        "updatedAt" : "2019-09-19T00:55:44Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "563d0b8013e4f9bd748b3623740829baed9a80d1",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +486,490 @@      focusManager.highlightStrategy = FocusHighlightStrategy.automatic;\n      expect(focusManager.highlightMode, equals(FocusHighlightMode.touch));\n      await tester.sendKeyEvent(LogicalKeyboardKey.metaLeft, platform: 'fuchsia');\n      expect(callCount, equals(1));\n      expect(lastMode, FocusHighlightMode.traditional);"
  },
  {
    "id" : "fb17f2b2-be6f-4517-8fd7-2f2c24d21c5e",
    "prId" : 50392,
    "prUrl" : "https://github.com/flutter/flutter/pull/50392#pullrequestreview-356262440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43fadfeb-8224-4cf4-87bf-7a186a770e1b",
        "parentId" : null,
        "authorId" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "body" : "Can you add tests for these two cases which are known to be problematic in the other notification scheme?\r\n\r\n- Focus changed because the node with current focus called unfocus()\r\n- Focus changed because the tree was rebuilt and dropped the node with current focus",
        "createdAt" : "2020-02-10T20:42:09Z",
        "updatedAt" : "2020-02-10T21:05:49Z",
        "lastEditedBy" : "727d612e-f69f-4629-9819-46a939c0fcb0",
        "tags" : [
        ]
      },
      {
        "id" : "dadce849-9ae8-49a8-88ed-0a6eb354cc53",
        "parentId" : "43fadfeb-8224-4cf4-87bf-7a186a770e1b",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "OK, I added both of those.",
        "createdAt" : "2020-02-10T21:05:48Z",
        "updatedAt" : "2020-02-10T21:05:49Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "55c98181d94b438295dbebeb5b40dba3525d2ef9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +746,750 @@    expect(parent1.focusedChild, equals(child2));\n  });\n  testWidgets('Focus changes notify listeners.', (WidgetTester tester) async {\n    final BuildContext context = await setupWidget(tester);\n    final FocusScopeNode parent1 = FocusScopeNode(debugLabel: 'parent1');"
  }
]