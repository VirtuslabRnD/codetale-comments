[
  {
    "id" : "e28bb84d-744d-4c4b-ba79-e157fbc2b1e5",
    "prId" : 12741,
    "prUrl" : "https://github.com/flutter/flutter/pull/12741#pullrequestreview-73246482",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a77d79a7-6f56-4f21-b383-2d22ec9d9bbd",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "If it's possible to test, it would be good to test that some of the complex assertions are in place. For example, trying to give null to increasedValue, or supply one and not the other, etc.",
        "createdAt" : "2017-10-31T17:12:23Z",
        "updatedAt" : "2017-10-31T17:45:14Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3282684611e2ed9492d7fc621125caf9a16b507",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +515,519 @@  });\n\n  testWidgets('Increased/decreased values are annotated', (WidgetTester tester) async {\n    final SemanticsTester semantics = new SemanticsTester(tester);\n"
  },
  {
    "id" : "adb56115-0925-416b-8ade-bbc0f1d33ab7",
    "prId" : 14539,
    "prUrl" : "https://github.com/flutter/flutter/pull/14539#pullrequestreview-95602363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ebdcea6-6a0a-4858-b2e2-ce7bf53b4b99",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "what if there's no Directionality widget? e.g. with a Stack rather than a Column.",
        "createdAt" : "2018-02-08T04:40:54Z",
        "updatedAt" : "2018-02-13T01:22:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "0cc43fa3-825a-40a8-ae55-955b560fffca",
        "parentId" : "3ebdcea6-6a0a-4858-b2e2-ce7bf53b4b99",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Well, actually...\r\n1) A Column doesn't need directionality\r\n1) You can't use a Stack without directionality (it'll assert).\r\n1) Just adding a label on a Semantics node will assert without a directionality.\r\n\r\nI've tried to add a test that will check that widgets that don't have any directionality end up with child order as a result, but really it's hard to do without a horizontal layout widget that ignores directionality, since I do still sort vertically in that case.",
        "createdAt" : "2018-02-08T16:48:02Z",
        "updatedAt" : "2018-02-13T01:22:50Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "3682ffd2-ecd1-4348-885d-18d9ebfe51ea",
        "parentId" : "3ebdcea6-6a0a-4858-b2e2-ce7bf53b4b99",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "You can use a stack without directionality, just set its alignment to something non-directional.",
        "createdAt" : "2018-02-09T08:23:52Z",
        "updatedAt" : "2018-02-13T01:22:50Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "19fba0be-517a-40c4-bf9f-9dcd0dceb015",
        "parentId" : "3ebdcea6-6a0a-4858-b2e2-ce7bf53b4b99",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Oooh! OK, I'll try that!",
        "createdAt" : "2018-02-09T16:54:08Z",
        "updatedAt" : "2018-02-13T01:22:50Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "8d984ec1-29e4-4165-9601-2698c264e3fa",
        "parentId" : "3ebdcea6-6a0a-4858-b2e2-ce7bf53b4b99",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "OK, see below.",
        "createdAt" : "2018-02-10T00:39:54Z",
        "updatedAt" : "2018-02-13T01:22:50Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "771b812755a7acd8983d7c1b4aba725750e2f6de",
    "line" : 157,
    "diffHunk" : "@@ -1,1 +908,912 @@    );\n    await tester.pumpWidget(\n      new Directionality(\n        textDirection: TextDirection.ltr,\n        child: new Column("
  }
]