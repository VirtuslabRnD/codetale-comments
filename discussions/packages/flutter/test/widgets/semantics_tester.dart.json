[
  {
    "id" : "dc650014-1fd6-4c84-b159-47e001904851",
    "prId" : 13502,
    "prUrl" : "https://github.com/flutter/flutter/pull/13502#pullrequestreview-83694786",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24b070eb-558d-4b8e-9b58-4d5c37ec26c9",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe include that the List is the preferred, more readable way?",
        "createdAt" : "2017-12-14T23:12:53Z",
        "updatedAt" : "2017-12-15T01:17:39Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "35074826-4aa4-4d89-8dfc-6255df94d3fc",
        "parentId" : "24b070eb-558d-4b8e-9b58-4d5c37ec26c9",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done.",
        "createdAt" : "2017-12-15T01:17:30Z",
        "updatedAt" : "2017-12-15T01:17:39Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b984b05a08528501ce60defe76fce85a70bb1ee6",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +126,130 @@  ///\n  /// There are two ways to specify this property: as an `int` that encodes the\n  /// flags as a bit field, or as a `List<SemanticsFlags>` that are _on_.\n  ///\n  /// Using `List<SemanticsFlags>` is recommended due to better readability."
  },
  {
    "id" : "72d83313-bb77-4963-b3cf-80bba464d994",
    "prId" : 13502,
    "prUrl" : "https://github.com/flutter/flutter/pull/13502#pullrequestreview-83694795",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7288416-b6c0-448b-8227-8e73478d4c7d",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Same.",
        "createdAt" : "2017-12-14T23:13:03Z",
        "updatedAt" : "2017-12-15T01:17:39Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "57550200-c730-4c49-8946-bb187470a687",
        "parentId" : "c7288416-b6c0-448b-8227-8e73478d4c7d",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done.",
        "createdAt" : "2017-12-15T01:17:33Z",
        "updatedAt" : "2017-12-15T01:17:39Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b984b05a08528501ce60defe76fce85a70bb1ee6",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +134,138 @@  ///\n  /// There are two ways to specify this property: as an `int` that encodes the\n  /// actions as a bit field, or as a `List<SemanticsAction>`.\n  ///\n  /// Using `List<SemanticsAction>` is recommended due to better readability."
  },
  {
    "id" : "ad664203-d771-465a-bd31-76d452a59f5f",
    "prId" : 13502,
    "prUrl" : "https://github.com/flutter/flutter/pull/13502#pullrequestreview-83948448",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aee1128b-9e39-4963-b850-a427f8a2e8d8",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "one of the tricks i sometimes use that might be relevant here is i'll put the generated code in a test matcher's output when the matcher fails.",
        "createdAt" : "2017-12-15T23:10:23Z",
        "updatedAt" : "2017-12-15T23:10:23Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b984b05a08528501ce60defe76fce85a70bb1ee6",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +413,417 @@  /// every time and ignore potential regressions. Make sure you do not\n  /// over-test. Prefer breaking your widgets into smaller widgets and test them\n  /// individually.\n  String generateTestSemanticsExpressionForCurrentSemanticsTree() {\n    final SemanticsNode node = tester.binding.pipelineOwner.semanticsOwner.rootSemanticsNode;"
  },
  {
    "id" : "c65e3e1b-0735-4f51-b820-272163ccf672",
    "prId" : 15537,
    "prUrl" : "https://github.com/flutter/flutter/pull/15537#pullrequestreview-104651935",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d4bb193-d5a0-4080-80c0-ea852de85208",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Good find!  I have been meaning to check on this because it causes extra failures when a test fails, making it harder to see the real failure sometimes.",
        "createdAt" : "2018-03-16T17:22:15Z",
        "updatedAt" : "2018-03-16T19:39:12Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "e74f707da2e6932b71c0fcc0627aefd5a12fa6fd",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +362,366 @@    // SemanticsTester or directly. When the test succeeds, this tear-down\n    // becomes a no-op.\n    addTearDown(dispose);\n  }\n"
  }
]