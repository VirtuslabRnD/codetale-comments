[
  {
    "id" : "16343d0f-7c6e-4dfc-8c14-f48534fb19b8",
    "prId" : 67375,
    "prUrl" : "https://github.com/flutter/flutter/pull/67375#pullrequestreview-503280594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc764f5e-c3b9-4215-9d32-844f77043ba8",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "ame here",
        "createdAt" : "2020-10-06T19:17:58Z",
        "updatedAt" : "2020-10-07T03:38:48Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e49729089e1b255fb2d48bcde69ea84a020cd07",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +2376,2380 @@          ),\n          findsOneWidget);\n      expect(\n          find.descendant(\n            of: find.byType(Overlay).last,"
  },
  {
    "id" : "31b5d9e3-199e-474f-871d-a141c6f9d0af",
    "prId" : 72512,
    "prUrl" : "https://github.com/flutter/flutter/pull/72512#pullrequestreview-556185287",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65b8c96c-31a3-459a-96d1-1333df111ad6",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Why is this particular test necessary? Or, what does it check for/prevent from happening?",
        "createdAt" : "2020-12-21T06:38:34Z",
        "updatedAt" : "2020-12-21T07:46:00Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "8dbf08bd-1665-4602-806e-aa7fa8f21a60",
        "parentId" : "65b8c96c-31a3-459a-96d1-1333df111ad6",
        "authorId" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "body" : "This can catch the mistake of writing `return data is T?` as `return data is T`.",
        "createdAt" : "2020-12-21T07:49:49Z",
        "updatedAt" : "2020-12-21T07:49:49Z",
        "lastEditedBy" : "55158e43-44b8-4ba4-b6bb-b70b394ba94f",
        "tags" : [
        ]
      }
    ],
    "commit" : "94a97a76de6f89e9ab611a7f94aa7b00b9b96d27",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +2607,2611 @@  });\n\n  testWidgets('Drag and drop - DragTarget<int> should not accept Draggable<Object> data when runtime type null', (WidgetTester tester) async {\n    final List<int> accepted = <int>[];\n    bool isReceiveNullDataForCheck = false;"
  }
]