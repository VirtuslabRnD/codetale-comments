[
  {
    "id" : "04b7a22c-01fe-4b83-9928-137d4f8d5127",
    "prId" : 12203,
    "prUrl" : "https://github.com/flutter/flutter/pull/12203#pullrequestreview-64698152",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "726aa9d0-d07e-421d-8039-400b5369118b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you should probably add a comment for lines 1190 to 1200 (checking x3...x0) that while this is our current expectation, it's not as important as the test for x4. As in, we definitely don't want x4 to regress, because that would mean the hero lept, but it's not as critical that the path be consistent on the way back, so long as it is smooth and pretty.",
        "createdAt" : "2017-09-22T21:00:34Z",
        "updatedAt" : "2017-09-22T21:23:58Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8483eb79f06c36e7c03f41a000822ec9d626d5d",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +1202,1206 @@    await tester.pump(duration * 0.1);\n    expect(tester.getTopLeft(find.byKey(secondKey)).dx, closeTo(x0, epsilon));\n\n    // Below: show that a different pop Hero path is in fact taken after\n    // a completed push transition."
  },
  {
    "id" : "b73894d7-5564-40ef-95d5-528ec481146f",
    "prId" : 24039,
    "prUrl" : "https://github.com/flutter/flutter/pull/24039#pullrequestreview-172355128",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef25ffcc-e596-4228-aa99-b6435020c02f",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I think this test won't fail without the fix above since there's no Hero ",
        "createdAt" : "2018-11-07T06:24:33Z",
        "updatedAt" : "2018-11-07T06:35:54Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "5fd47888-99b2-43e7-8583-516ab8ef37fc",
        "parentId" : "ef25ffcc-e596-4228-aa99-b6435020c02f",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "It does fail - MaterialApp creates a heroes for transitions behind the scenes",
        "createdAt" : "2018-11-07T06:33:22Z",
        "updatedAt" : "2018-11-07T06:35:54Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "eaa0736d-2947-4536-927e-7ef5c17f9a5d",
        "parentId" : "ef25ffcc-e596-4228-aa99-b6435020c02f",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "(I should add that the failure is just that an AssertionError is thrown, but everything seems fine after that).",
        "createdAt" : "2018-11-07T06:41:50Z",
        "updatedAt" : "2018-11-07T06:41:50Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0b58f6f69f9d4cd0dde20e7b5b17a015c603e44",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1439,1443 @@  });\n\n  testWidgets('Handles transitions when a non-default initial route is set', (WidgetTester tester) async {\n    await tester.pumpWidget(MaterialApp(\n      routes: routes,"
  }
]