[
  {
    "id" : "04b7a22c-01fe-4b83-9928-137d4f8d5127",
    "prId" : 12203,
    "prUrl" : "https://github.com/flutter/flutter/pull/12203#pullrequestreview-64698152",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "726aa9d0-d07e-421d-8039-400b5369118b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you should probably add a comment for lines 1190 to 1200 (checking x3...x0) that while this is our current expectation, it's not as important as the test for x4. As in, we definitely don't want x4 to regress, because that would mean the hero lept, but it's not as critical that the path be consistent on the way back, so long as it is smooth and pretty.",
        "createdAt" : "2017-09-22T21:00:34Z",
        "updatedAt" : "2017-09-22T21:23:58Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8483eb79f06c36e7c03f41a000822ec9d626d5d",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +1202,1206 @@    await tester.pump(duration * 0.1);\n    expect(tester.getTopLeft(find.byKey(secondKey)).dx, closeTo(x0, epsilon));\n\n    // Below: show that a different pop Hero path is in fact taken after\n    // a completed push transition."
  },
  {
    "id" : "b73894d7-5564-40ef-95d5-528ec481146f",
    "prId" : 24039,
    "prUrl" : "https://github.com/flutter/flutter/pull/24039#pullrequestreview-172355128",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef25ffcc-e596-4228-aa99-b6435020c02f",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I think this test won't fail without the fix above since there's no Hero ",
        "createdAt" : "2018-11-07T06:24:33Z",
        "updatedAt" : "2018-11-07T06:35:54Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "5fd47888-99b2-43e7-8583-516ab8ef37fc",
        "parentId" : "ef25ffcc-e596-4228-aa99-b6435020c02f",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "It does fail - MaterialApp creates a heroes for transitions behind the scenes",
        "createdAt" : "2018-11-07T06:33:22Z",
        "updatedAt" : "2018-11-07T06:35:54Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "eaa0736d-2947-4536-927e-7ef5c17f9a5d",
        "parentId" : "ef25ffcc-e596-4228-aa99-b6435020c02f",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "(I should add that the failure is just that an AssertionError is thrown, but everything seems fine after that).",
        "createdAt" : "2018-11-07T06:41:50Z",
        "updatedAt" : "2018-11-07T06:41:50Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0b58f6f69f9d4cd0dde20e7b5b17a015c603e44",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1439,1443 @@  });\n\n  testWidgets('Handles transitions when a non-default initial route is set', (WidgetTester tester) async {\n    await tester.pumpWidget(MaterialApp(\n      routes: routes,"
  },
  {
    "id" : "234dde0f-9819-40e4-b487-f7baccad7791",
    "prId" : 28470,
    "prUrl" : "https://github.com/flutter/flutter/pull/28470#pullrequestreview-211770655",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c5cefe0-9039-4d2b-818f-7dab199ef7c0",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Would be good to check this case too:\r\n```\r\nchild: Builder(builder: (BuildContext context) => Hero(...)\r\n```\r\n\r\nAnd likewise for LayoutBuilder",
        "createdAt" : "2019-03-06T23:48:58Z",
        "updatedAt" : "2019-03-13T10:40:31Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "632f2dc7-89f9-4f36-9511-dd4c8bdba38b",
        "parentId" : "1c5cefe0-9039-4d2b-818f-7dab199ef7c0",
        "authorId" : "e68f970a-b679-4bc5-b07e-dcfde9059942",
        "body" : "Done",
        "createdAt" : "2019-03-07T13:09:35Z",
        "updatedAt" : "2019-03-13T10:40:31Z",
        "lastEditedBy" : "e68f970a-b679-4bc5-b07e-dcfde9059942",
        "tags" : [
        ]
      }
    ],
    "commit" : "5dd1a0f84ddc3ed82ccaf5d2b6955aaeae44f2e5",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +1618,1622 @@          child: Hero(\n            tag: 'a',\n            child: Hero(\n              tag: 'b',\n              child: Text('Child of a Hero'),"
  },
  {
    "id" : "f4c2f6d6-7992-468a-82bb-7c233404fb27",
    "prId" : 28470,
    "prUrl" : "https://github.com/flutter/flutter/pull/28470#pullrequestreview-211771088",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d26e5c9-1e7a-4998-9311-2c24fe9a1b3f",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Isn't this the same as the previous test?",
        "createdAt" : "2019-03-06T23:51:12Z",
        "updatedAt" : "2019-03-13T10:40:31Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "157a0574-425a-4dad-bf61-a6f4f67e92ea",
        "parentId" : "4d26e5c9-1e7a-4998-9311-2c24fe9a1b3f",
        "authorId" : "e68f970a-b679-4bc5-b07e-dcfde9059942",
        "body" : "Yes, I somehow changed it while ... formatting it ... that must be a first ðŸ™ƒ ",
        "createdAt" : "2019-03-07T13:10:37Z",
        "updatedAt" : "2019-03-13T10:40:31Z",
        "lastEditedBy" : "e68f970a-b679-4bc5-b07e-dcfde9059942",
        "tags" : [
        ]
      }
    ],
    "commit" : "5dd1a0f84ddc3ed82ccaf5d2b6955aaeae44f2e5",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +1655,1659 @@      MaterialApp(\n        home: Material(\n          child: Hero(\n            tag: 'a',\n            child: Builder("
  },
  {
    "id" : "1a9701a0-2bd5-4199-95e2-e6b92524dd49",
    "prId" : 32842,
    "prUrl" : "https://github.com/flutter/flutter/pull/32842#pullrequestreview-239062782",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03d04265-86d7-4533-903d-505f5ba4bab8",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "needs a trailing comma",
        "createdAt" : "2019-05-17T18:27:10Z",
        "updatedAt" : "2019-06-06T19:50:45Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5e15b1bdda57b4412ed249bb22f4b7bb6f18d5b",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +951,955 @@                    height: 200.0,\n                    child: const Text('Hero'),\n                  )\n                ),\n              ),"
  },
  {
    "id" : "2f68cdad-2ea9-4042-bc95-0e3e76f618f4",
    "prId" : 43756,
    "prUrl" : "https://github.com/flutter/flutter/pull/43756#pullrequestreview-308855140",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "064cea53-21b2-4b76-b706-cc8d29efd945",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "This LGTM.  This was the actual intent of the test at the time - I probably either mistook which route actually had which widget, or was just doing this to make sure we didn't fire an assert.\r\n\r\nWould it be worth testing here `expect(find.text('two'), findsNothing)` and `expect(find.text('three'), findsOneWidget)`?\r\n\r\nAlso, should we be worried about this breaking internal tests that relied on this behavior?",
        "createdAt" : "2019-10-29T21:42:08Z",
        "updatedAt" : "2019-10-30T17:32:22Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "8e25b73d-f538-47cd-98ed-1e8a986995b7",
        "parentId" : "064cea53-21b2-4b76-b706-cc8d29efd945",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Added those expects.\r\n\r\nI think we just have to update those tests then. They are relying on a bug. Doing so is easy, see some of the other tests in this PR that I had to update. ",
        "createdAt" : "2019-10-29T21:46:28Z",
        "updatedAt" : "2019-10-30T17:32:22Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8fe45f08bc55e66b8b75e776b1b494c6e51c197",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1755,1759 @@      initialRoute: '/two',\n    ));\n    expect(tester.takeException(), isNull);\n    expect(find.text('two'), findsNothing);\n    expect(find.text('three'), findsOneWidget);"
  },
  {
    "id" : "4d692a42-710f-4976-adc0-73d1d97f7d4c",
    "prId" : 48223,
    "prUrl" : "https://github.com/flutter/flutter/pull/48223#pullrequestreview-506266964",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "550c2891-250f-4d3a-aafc-f93b4739362c",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "I might miss something, but is this really related to nested navigators? I thought the problem is the CupertinoTabScaffold builds a stack where some of the children are offstage and the heroes in those children conflicting with each other?",
        "createdAt" : "2020-03-27T21:35:11Z",
        "updatedAt" : "2020-10-31T02:52:52Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "92da542d-95fe-4568-a6f9-409d237e31a4",
        "parentId" : "550c2891-250f-4d3a-aafc-f93b4739362c",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "same here",
        "createdAt" : "2020-04-27T17:01:53Z",
        "updatedAt" : "2020-10-31T02:52:52Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "69de6b69-b3e1-424d-b922-3f052a349720",
        "parentId" : "550c2891-250f-4d3a-aafc-f93b4739362c",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "This is not addressed yet?",
        "createdAt" : "2020-10-06T16:35:02Z",
        "updatedAt" : "2020-10-31T02:52:52Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "ea34993a-4b59-4940-bcad-1455c4a3aa8e",
        "parentId" : "550c2891-250f-4d3a-aafc-f93b4739362c",
        "authorId" : "0443019d-684b-4254-9817-42fe6da047c3",
        "body" : "Heroes are animated by screen transition. This is related to Navigator. The problem is caused by multiple nested Navigators.",
        "createdAt" : "2020-10-12T03:10:50Z",
        "updatedAt" : "2020-10-31T02:52:52Z",
        "lastEditedBy" : "0443019d-684b-4254-9817-42fe6da047c3",
        "tags" : [
        ]
      }
    ],
    "commit" : "885272fa93dd757f1a9fe748057f19c360036c03",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2023,2027 @@  });\n\n  testWidgets('Can push/pop on outer Navigator if nested Navigators contains same Heroes', (WidgetTester tester) async {\n    const String heroTag = 'foo';\n    final GlobalKey<NavigatorState> rootNavigator = GlobalKey<NavigatorState>();"
  },
  {
    "id" : "1be0fb84-bec4-4c64-93db-aa288653f9a9",
    "prId" : 48223,
    "prUrl" : "https://github.com/flutter/flutter/pull/48223#pullrequestreview-383224884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f770fc3-cd9f-4cbd-bef4-0a6519fa273b",
        "parentId" : null,
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "@justinmc i am a bit confused about the architecture in CupertinoTabScaffold. Why does CupertinoTabView need a navigator? It seems like the tab is controlled by a stack in CupertinoTabScaffold. ",
        "createdAt" : "2020-03-27T21:40:05Z",
        "updatedAt" : "2020-10-31T02:52:52Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      },
      {
        "id" : "1785f6f3-e320-4ada-84eb-8cd579d2973e",
        "parentId" : "8f770fc3-cd9f-4cbd-bef4-0a6519fa273b",
        "authorId" : "d684363a-4114-408d-bf33-c427c7290197",
        "body" : "never mind, I think i figured out",
        "createdAt" : "2020-03-27T22:02:28Z",
        "updatedAt" : "2020-10-31T02:52:52Z",
        "lastEditedBy" : "d684363a-4114-408d-bf33-c427c7290197",
        "tags" : [
        ]
      }
    ],
    "commit" : "885272fa93dd757f1a9fe748057f19c360036c03",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +2042,2046 @@          ),\n          tabBuilder: (BuildContext context, int index) {\n            return CupertinoTabView(\n              builder: (BuildContext context) => Hero(\n                tag: heroTag,"
  }
]