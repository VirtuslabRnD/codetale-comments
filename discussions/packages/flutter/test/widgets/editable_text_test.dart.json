[
  {
    "id" : "d0696b35-b1f0-4ec2-b901-cd7658bf9325",
    "prId" : 12277,
    "prUrl" : "https://github.com/flutter/flutter/pull/12277#pullrequestreview-74163957",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "344c9d6f-6568-475a-834f-41a7282668b6",
        "parentId" : null,
        "authorId" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "body" : "Prettier indentation with trailing comma here?",
        "createdAt" : "2017-11-03T17:26:54Z",
        "updatedAt" : "2017-11-03T17:33:30Z",
        "lastEditedBy" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "tags" : [
        ]
      },
      {
        "id" : "b72569b5-2194-4fb1-8bb4-425b4a153735",
        "parentId" : "344c9d6f-6568-475a-834f-41a7282668b6",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "This was intentional to make the parens symmetric with the opening line.",
        "createdAt" : "2017-11-03T17:53:03Z",
        "updatedAt" : "2017-11-03T17:53:03Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "44f13442ce8740fed05945e480b08ef4e1b73488",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +257,261 @@            'composingExtent': -1,\n          },\n    ));\n  });\n"
  },
  {
    "id" : "f3b00c68-5701-4381-a2d8-a3f8bdd22fdd",
    "prId" : 12804,
    "prUrl" : "https://github.com/flutter/flutter/pull/12804#pullrequestreview-73651837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98cc7bcc-b8ff-4407-8bd5-d66baf708a8f",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Should we test the non focused case as well?",
        "createdAt" : "2017-11-01T23:12:02Z",
        "updatedAt" : "2017-11-01T23:38:03Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "75de84cc-5a33-41fe-9e0a-94414b174da5",
        "parentId" : "98cc7bcc-b8ff-4407-8bd5-d66baf708a8f",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Isn't that covered by line 278?",
        "createdAt" : "2017-11-01T23:38:46Z",
        "updatedAt" : "2017-11-01T23:38:46Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "d9780c41-d838-459f-8e5b-27c492e29cad",
        "parentId" : "98cc7bcc-b8ff-4407-8bd5-d66baf708a8f",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "oops",
        "createdAt" : "2017-11-01T23:39:39Z",
        "updatedAt" : "2017-11-01T23:39:39Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "21da481a31ca8f1b64599c89a4c58d477b063f7f",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +284,288 @@    expect(semantics, includesNodeWith(flags: <SemanticsFlags>[SemanticsFlags.isTextField, SemanticsFlags.isFocused]));\n\n  });\n}"
  },
  {
    "id" : "5b9eacc6-fc03-4535-a394-5850fab1f706",
    "prId" : 18888,
    "prUrl" : "https://github.com/flutter/flutter/pull/18888#pullrequestreview-134045115",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cb70e3d-232b-4315-a5dc-e135c9ee7f0f",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: This file is hard to review because it contains so many unrelated format changes.",
        "createdAt" : "2018-07-03T15:14:25Z",
        "updatedAt" : "2018-07-03T17:53:35Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d4202716c56aeb0e9dee369eec4a41e3b26542d",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +58,62 @@    await tester.idle();\n    expect(tester.testTextInput.editingState['text'], equals('test'));\n    expect(tester.testTextInput.setClientArgs['inputAction'],\n        equals(serializedActionName));\n  }"
  },
  {
    "id" : "742fc54a-674b-415d-b122-db84d947cd8e",
    "prId" : 24476,
    "prUrl" : "https://github.com/flutter/flutter/pull/24476#pullrequestreview-203799483",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "749bb451-337a-4b46-a9a3-962bd8e16ced",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "There should probably also be tests for just PaintVisibility.",
        "createdAt" : "2019-01-23T20:27:03Z",
        "updatedAt" : "2019-03-12T13:53:31Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "67bb0c3c-75b3-4353-9cb3-953f06fd8fba",
        "parentId" : "749bb451-337a-4b46-a9a3-962bd8e16ced",
        "authorId" : "1bcfb382-657a-4d7d-879b-85c84363148f",
        "body" : "I've removed `PaintVisibility`.",
        "createdAt" : "2019-02-14T15:19:36Z",
        "updatedAt" : "2019-03-12T13:53:31Z",
        "lastEditedBy" : "1bcfb382-657a-4d7d-879b-85c84363148f",
        "tags" : [
        ]
      }
    ],
    "commit" : "21077df01a4bbbb19ba4a61b41ab18ce16a334fe",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1998,2002 @@    expect(renderEditable.text.style.decoration, isNull);\n  });\n\n  testWidgets('text selection handle visibility', (WidgetTester tester) async {\n    final GlobalKey<EditableTextState> editableTextKey ="
  },
  {
    "id" : "04f06ada-ed66-49dc-92a8-f3e4e98f40ca",
    "prId" : 24761,
    "prUrl" : "https://github.com/flutter/flutter/pull/24761#pullrequestreview-179174666",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98794d27-2f62-438a-b9dc-163c3ba587b0",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "use mock_canvas to actually test that a floating caret rrect is being drawn. ",
        "createdAt" : "2018-11-28T08:43:22Z",
        "updatedAt" : "2018-12-14T01:00:48Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "796062110a2673d6617ff854e3747b4d1c3eba24",
    "line" : 403,
    "diffHunk" : "@@ -1,1 +1939,1943 @@    expect(controller.selection.baseOffset, 11);\n  });\n}\n\nclass MockTextSelectionControls extends Mock implements TextSelectionControls {}"
  },
  {
    "id" : "e782ab4c-0292-43df-8c73-ec557ec0bcb0",
    "prId" : 27534,
    "prUrl" : "https://github.com/flutter/flutter/pull/27534#pullrequestreview-200391411",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6069fc4-f5a7-4bea-93a4-8003ad090d2e",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This can go on the previous line.",
        "createdAt" : "2019-02-05T23:46:37Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "22990b33-bda9-4810-a9ab-ab0caff71edd",
        "parentId" : "b6069fc4-f5a7-4bea-93a4-8003ad090d2e",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I don't feel strongly about it, leaning towards keeping the 80 line width. ",
        "createdAt" : "2019-02-06T02:15:36Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a68a5c55a473ffac26e80b13c51722a1fb62e65",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +495,499 @@\n    final EditableTextState state =\n        tester.state<EditableTextState>(find.byType(EditableText));\n\n    expect(state.showToolbar(), false);"
  },
  {
    "id" : "09859ce4-8075-4981-8c67-aa9b6cb91f8b",
    "prId" : 27534,
    "prUrl" : "https://github.com/flutter/flutter/pull/27534#pullrequestreview-200391556",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03bd8e2d-b46f-4957-8669-28fb88d27c97",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Shouldn't this be pumpAndSettle()? What if the toolbar animates into view?",
        "createdAt" : "2019-02-05T23:47:25Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "0e9137a7-036c-446c-a219-666dc294eab9",
        "parentId" : "03bd8e2d-b46f-4957-8669-28fb88d27c97",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Visual behavior changes should be test-breaking changes. ",
        "createdAt" : "2019-02-06T02:16:23Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a68a5c55a473ffac26e80b13c51722a1fb62e65",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +498,502 @@\n    expect(state.showToolbar(), false);\n    await tester.pump();\n    expect(find.text('PASTE'), findsNothing);\n"
  },
  {
    "id" : "0bcfbf7e-ed52-4311-b04e-f2f2ea9bee01",
    "prId" : 27534,
    "prUrl" : "https://github.com/flutter/flutter/pull/27534#pullrequestreview-200831269",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0306e825-17c6-420b-b453-ee271b16d55a",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "If this parameter needed? Since we're now being honest with the `cause` parameter, it seems like there should a special value (or just cause == null) that indicates a programmatic change.",
        "createdAt" : "2019-02-05T23:49:22Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "e4d61e36-0487-40dd-857e-b557533dbea5",
        "parentId" : "0306e825-17c6-420b-b453-ee271b16d55a",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I'm not deprecating SelectionChangedCause (my branch name is a misnomer I guess :D). We're still trying to be honest™️ with the real cause to supply it to users of the existing APIs via the various onSelectionChanged and whatnot. We're just not using it internally anymore, but we're not breaking external users. \r\n\r\nIn this test, I'm intending for it to mean a single tap. \r\n\r\nI'm not making the select*'s cause optional because they still aren't (to keep supporting onSelectionChanged users who might care). \r\n\r\nSo far, there are no 'fake' selection causes yet to have a new enum value.",
        "createdAt" : "2019-02-06T02:19:22Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "6af9f276-0687-4c5f-986a-0a372066a16c",
        "parentId" : "0306e825-17c6-420b-b453-ee271b16d55a",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "> So far, there are no 'fake' selection causes yet to have a new enum value.\r\n\r\nWhat about programmatic changes to the selection that are not triggered by an input event?",
        "createdAt" : "2019-02-06T21:12:26Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "67ed8277-35b9-4def-ad4f-44df12a7f1f4",
        "parentId" : "0306e825-17c6-420b-b453-ee271b16d55a",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Programmatic changes actually circumvents the whole thing it appears. i.e. nothing is triggered through the RenderEditable directly, no `on*Changed` is bubbled back through EditableText, there are no SelectionChangedCause involved, no toolbars are ever triggered and no` on*Changed` is called. \r\n\r\nThis is in the various `@template flutter.widgets.editableText.onChanged` docs. `This callback does run not when the TextField's text is changed, via the TextField's [controller].`\r\n\r\nAdding some additional docs to RenderEditable.select* to indicate that it's used for translating UI manipulations to logical selections and if you own the TextEditingController, it's a lot easier to go manipulate that directly.",
        "createdAt" : "2019-02-06T21:22:39Z",
        "updatedAt" : "2019-02-06T21:44:30Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "fcd9db0b-123f-4af4-8577-e399bea263cd",
        "parentId" : "0306e825-17c6-420b-b453-ee271b16d55a",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Thanks for clarifying that. So the rough summary would be: the RenderEditable selection changing methods are only called in response to user input.  That makes sense.",
        "createdAt" : "2019-02-06T22:05:55Z",
        "updatedAt" : "2019-02-06T22:06:03Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "7050e5d9-c0c3-4896-a13d-386853046c2f",
        "parentId" : "0306e825-17c6-420b-b453-ee271b16d55a",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "It's a good question though. I only thought about it after you asked. But the new docs should address the apparent redundancy now.",
        "createdAt" : "2019-02-06T22:09:03Z",
        "updatedAt" : "2019-02-06T22:09:21Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a68a5c55a473ffac26e80b13c51722a1fb62e65",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +510,514 @@    state.renderEditable.selectWordsInRange(\n      from: const Offset(0, 0),\n      cause: SelectionChangedCause.tap,\n    );\n    await tester.pump();"
  },
  {
    "id" : "72e8a0bd-dccb-44ed-a80d-6b1d4e2bc426",
    "prId" : 27534,
    "prUrl" : "https://github.com/flutter/flutter/pull/27534#pullrequestreview-200392039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc98d3d9-df1d-42b1-a42f-3d018ed92206",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Maybe pump a frame first, so that 'blah' actually ends up in the textfield?",
        "createdAt" : "2019-02-05T23:56:45Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "7ae1b095-5aad-4db1-be1d-fc78a2cf1209",
        "parentId" : "dc98d3d9-df1d-42b1-a42f-3d018ed92206",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Ah, good point, done.",
        "createdAt" : "2019-02-06T02:19:27Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a68a5c55a473ffac26e80b13c51722a1fb62e65",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +503,507 @@    controller.text = 'blah';\n    await tester.pump();\n    expect(state.showToolbar(), false);\n    await tester.pump();\n    expect(find.text('PASTE'), findsNothing);"
  },
  {
    "id" : "1c3a47dc-919a-4e8b-8108-1fa3d8edea3c",
    "prId" : 31332,
    "prUrl" : "https://github.com/flutter/flutter/pull/31332#pullrequestreview-229657461",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b63cb53-bb9a-4842-bdb2-fedfc46bc208",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Include a comment here:\r\n```\r\n// Regression test for https://github.com/flutter/flutter/issues/31287\r\n```",
        "createdAt" : "2019-04-23T16:35:49Z",
        "updatedAt" : "2019-04-25T18:24:59Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "405446e9682ad5046b4a3bc6c1ef3183c952313b",
    "line" : 442,
    "diffHunk" : "@@ -1,1 +2103,2107 @@  // Regression test for https://github.com/flutter/flutter/issues/31287\n  testWidgets('iOS text selection handle visibility', (WidgetTester tester) async {\n    debugDefaultTargetPlatformOverride = TargetPlatform.iOS;\n\n    // Text with two separate words to select."
  },
  {
    "id" : "727a9534-28eb-4b54-bb7a-7eefe61bb1ee",
    "prId" : 31332,
    "prUrl" : "https://github.com/flutter/flutter/pull/31332#pullrequestreview-229657461",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ff8660f-570f-4b2a-bc61-323b53a52925",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This might be slightly easier to read if the parameter pairs were reversed:\r\n```\r\nverifyVisibility(leftViewportEdge, true, rightViewportEdge, true)",
        "createdAt" : "2019-04-23T16:49:47Z",
        "updatedAt" : "2019-04-25T18:24:59Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "405446e9682ad5046b4a3bc6c1ef3183c952313b",
    "line" : 476,
    "diffHunk" : "@@ -1,1 +2137,2141 @@    bool expectedRightVisibleBefore = false;\n\n    Future<void> verifyVisibility(\n      HandlePositionInViewport leftPosition,\n      bool expectedLeftVisible,"
  },
  {
    "id" : "e979bbc2-db44-4b92-8993-800c9d9db0d9",
    "prId" : 31332,
    "prUrl" : "https://github.com/flutter/flutter/pull/31332#pullrequestreview-229814362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6411f286-40f1-49b1-a8ca-5ab48f9d7e3e",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Add a comment for what the spaces are for",
        "createdAt" : "2019-04-23T21:59:19Z",
        "updatedAt" : "2019-04-25T18:24:59Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "405446e9682ad5046b4a3bc6c1ef3183c952313b",
    "line" : 445,
    "diffHunk" : "@@ -1,1 +2106,2110 @@\n    // Text with two separate words to select.\n    const String testText = 'XXXXX          XXXXX';\n    final TextEditingController controller = TextEditingController(text: testText);\n"
  },
  {
    "id" : "5654b23d-6ae1-44fe-b6d4-cd1c91654e32",
    "prId" : 36297,
    "prUrl" : "https://github.com/flutter/flutter/pull/36297#pullrequestreview-262654260",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f077305-dc73-4095-8290-0cf38a317a96",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "How are flags matched? Does this make sure that `isMultiline` flag is off? It is a little surprising that only one flag is on. For example, I'd expect `isEnabled` to also be on.",
        "createdAt" : "2019-07-16T19:59:37Z",
        "updatedAt" : "2019-07-17T22:18:36Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "7744abda-e9a5-464a-8ba5-81fcaf48e543",
        "parentId" : "7f077305-dc73-4095-8290-0cf38a317a96",
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "`RenderEditable` doesn't set the `isEnabled` flag.",
        "createdAt" : "2019-07-16T20:11:05Z",
        "updatedAt" : "2019-07-17T22:18:36Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fb79d9a2959da1f4447cb86bbdde2613c51fc0c",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +937,941 @@    expect(\n      semantics,\n      includesNodeWith(flags: <SemanticsFlag>[SemanticsFlag.isTextField]),\n    );\n"
  },
  {
    "id" : "9743044d-66da-4730-b490-26bfe4fd2a23",
    "prId" : 37042,
    "prUrl" : "https://github.com/flutter/flutter/pull/37042#pullrequestreview-268392733",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c04a6b9c-a60a-4999-9615-6a789ef7d96b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "`controller.dispose()` first?",
        "createdAt" : "2019-07-29T16:27:28Z",
        "updatedAt" : "2019-07-30T14:05:24Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "4fce9e45-cf0d-4226-ac07-1b5ae9a43b9b",
        "parentId" : "c04a6b9c-a60a-4999-9615-6a789ef7d96b",
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Good catch.",
        "createdAt" : "2019-07-30T13:32:12Z",
        "updatedAt" : "2019-07-30T14:05:24Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd31aa02d304b2b134e6774f7b9367de8d7179ba",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +35,39 @@  tearDown(() {\n    controller.dispose();\n    controller = null;\n  });\n"
  },
  {
    "id" : "87d063d6-46b4-4e30-a1e3-8c118d98977a",
    "prId" : 41108,
    "prUrl" : "https://github.com/flutter/flutter/pull/41108#pullrequestreview-292700090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46282ce6-067e-439a-85a7-89efc4b8ee06",
        "parentId" : null,
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "@nturgut  sorry I didn't review this earlier.\r\n\r\n`log.firstWhere(...)` always returns the first platform message that was sent when the first input field was focused. In order to make the test really work, we should clear `log` before switching to another input field.",
        "createdAt" : "2019-09-24T20:50:47Z",
        "updatedAt" : "2019-09-24T20:50:47Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f5997fcfc244d1ffa8fa23dac0a53c5c628ed90",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +2275,2279 @@    // Move to the next editable text.\n    await tester.showKeyboard(find.byKey(ValueKey<String>(controller2.text)));\n    final MethodCall methodCall2 = log.firstWhere((MethodCall m) => m.method == 'TextInput.setEditableSizeAndTransform');\n    expect(\n      methodCall2,"
  },
  {
    "id" : "0624a08b-93fe-4755-82cb-67444765a84c",
    "prId" : 42879,
    "prUrl" : "https://github.com/flutter/flutter/pull/42879#pullrequestreview-303451044",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6db22276-1dee-4855-a804-3d6597b44440",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "I was wondering if we had a good way to test hardware keyboard keys 👍 ",
        "createdAt" : "2019-10-17T15:09:10Z",
        "updatedAt" : "2019-10-17T21:27:56Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      },
      {
        "id" : "20de4112-f471-4405-ae1d-8464cfaf3299",
        "parentId" : "6db22276-1dee-4855-a804-3d6597b44440",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes!  I added that stuff last month because it was missing. It's turning out to be very useful.",
        "createdAt" : "2019-10-17T18:36:54Z",
        "updatedAt" : "2019-10-17T21:27:57Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "38c148549c5256cee072092354184543ac03e6a6",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +2818,2822 @@    await tester.pump(); // Wait for autofocus to take effect.\n\n    Future<void> sendKeys(List<LogicalKeyboardKey> keys, {bool shift = false, bool control = false}) async {\n      if (shift) {\n        await tester.sendKeyDownEvent(LogicalKeyboardKey.shiftLeft);"
  },
  {
    "id" : "01c07854-d954-4e03-9f1d-34e300ebc995",
    "prId" : 43466,
    "prUrl" : "https://github.com/flutter/flutter/pull/43466#pullrequestreview-307505935",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7bdec6db-9d3d-4f9d-835f-2f1027ffd045",
        "parentId" : null,
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "Another interesting test would be to use the text field again after the connection is closed (it should create a new connection and work fine).",
        "createdAt" : "2019-10-25T03:51:59Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "1957d200-603e-483a-8db7-ac886e624e72",
        "parentId" : "7bdec6db-9d3d-4f9d-835f-2f1027ffd045",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "+1",
        "createdAt" : "2019-10-25T16:27:57Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "d0f21939-6b95-448b-b4ed-77601bc4a69e",
        "parentId" : "7bdec6db-9d3d-4f9d-835f-2f1027ffd045",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "Sure, it sounds very useful I'll add it.",
        "createdAt" : "2019-10-25T17:04:08Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "fc7bcf21-765e-4475-ad79-1873ecf1bd07",
        "parentId" : "7bdec6db-9d3d-4f9d-835f-2f1027ffd045",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "Done.",
        "createdAt" : "2019-10-26T02:14:33Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf166460da28e2fd0e3125963a5c4a66df45478e",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +555,559 @@  });\n\n  testWidgets('connection is closed when TextInputClient.onConnectionClosed message received', (WidgetTester tester) async {\n    await tester.pumpWidget(\n      MediaQuery("
  },
  {
    "id" : "95665180-d7b7-40a1-aae9-d51b64891c18",
    "prId" : 43466,
    "prUrl" : "https://github.com/flutter/flutter/pull/43466#pullrequestreview-307335010",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c07da2a-75f9-40b1-a4f6-4fdd68f6d3d6",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Why this?",
        "createdAt" : "2019-10-25T16:31:06Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "3bab3eec-8e88-4ff3-acc8-fd89155f36ac",
        "parentId" : "4c07da2a-75f9-40b1-a4f6-4fdd68f6d3d6",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "I want to it to be as close to the previous test as possible. I usually find it easier to troubleshoot when there is an error, if some other tests also have the same setup.\r\n\r\nI can change it to another widget if you want to :) \r\n\r\nOne thing I'll add is also: \"switching between two editable text fields after connection closed\". I believe it might be good to test that case.",
        "createdAt" : "2019-10-25T17:03:34Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf166460da28e2fd0e3125963a5c4a66df45478e",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +612,616 @@              controller: controller,\n              focusNode: focusNode,\n              maxLines: 1, // Sets text keyboard implicitly.\n              style: textStyle,\n              cursorColor: cursorColor,"
  },
  {
    "id" : "69445b26-157d-4f91-b111-e6885731fa32",
    "prId" : 43466,
    "prUrl" : "https://github.com/flutter/flutter/pull/43466#pullrequestreview-310531784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "357b3ce0-07bf-4baf-be42-6aabcfaf7819",
        "parentId" : null,
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "It might be useful to also check that the framework didn't respond with any platform messages.",
        "createdAt" : "2019-10-30T22:32:11Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "824ad6a6-de33-4b76-a046-d4dfce55e371",
        "parentId" : "357b3ce0-07bf-4baf-be42-6aabcfaf7819",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "The expect for visibility does that since the code of test_text_input is written that way.\r\n\r\nhttps://github.com/flutter/flutter/blob/6bf1ad4bd5714f73c1c808dc821add7199260d0c/packages/flutter_test/lib/src/test_text_input.dart#L86\r\n\r\nas long as test_text_input.isVisible true it means that clearClient or hide platform messages are not sent.\r\n",
        "createdAt" : "2019-10-31T17:52:25Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "7afb2924-82e0-4119-86c8-057b600dcb5c",
        "parentId" : "357b3ce0-07bf-4baf-be42-6aabcfaf7819",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "I added the check.",
        "createdAt" : "2019-11-01T15:42:13Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf166460da28e2fd0e3125963a5c4a66df45478e",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +592,596 @@\n    // Widget does not have focus anymore.\n    expect(state.wantKeepAlive, false);\n    // No method calls are sent from the framework.\n    // This makes sure hide/clearClient methods are not called after connection"
  },
  {
    "id" : "e174cd5c-03e5-48c1-bf22-5087eb987a3a",
    "prId" : 43466,
    "prUrl" : "https://github.com/flutter/flutter/pull/43466#pullrequestreview-310075668",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d131294-4055-4a80-bc4f-d3b19b990d73",
        "parentId" : null,
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "Hmmm I wonder if there's a better way to check the focus state of a widget. @gspencergoog ?",
        "createdAt" : "2019-10-30T22:33:33Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "ad5bf2dd-ab2c-492a-8e8b-d8ed092a41a6",
        "parentId" : "1d131294-4055-4a80-bc4f-d3b19b990d73",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "I wasn't able to find one in the test doubles :)  It will be great if there is one!\r\n\r\nI can also do write the validation as if it is more readbale\r\n`expect(state.widget.focusNode.hasFocus, true)\r\n`\r\n",
        "createdAt" : "2019-10-31T17:56:36Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf166460da28e2fd0e3125963a5c4a66df45478e",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +648,652 @@    expect(tester.testTextInput.editingState['text'], equals('test2'));\n    // Widget regained the focus.\n    expect(state.wantKeepAlive, true);\n  });\n"
  },
  {
    "id" : "53089185-0a8a-43c6-bc9e-9905020748da",
    "prId" : 43466,
    "prUrl" : "https://github.com/flutter/flutter/pull/43466#pullrequestreview-310533896",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12f616be-ad2e-4169-bbf3-66d1e54d4b8b",
        "parentId" : null,
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "Are there any platform messages we could check here?",
        "createdAt" : "2019-10-30T22:36:32Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "b794485a-7a96-471a-8d7e-1c8cef817d58",
        "parentId" : "12f616be-ad2e-4169-bbf3-66d1e54d4b8b",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "done.",
        "createdAt" : "2019-11-01T15:45:31Z",
        "updatedAt" : "2019-11-01T23:28:05Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf166460da28e2fd0e3125963a5c4a66df45478e",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +642,646 @@    expect(tester.testTextInput.log, isEmpty);\n\n    await tester.tap(find.byType(EditableText));\n    await tester.showKeyboard(find.byType(EditableText));\n    await tester.pump();"
  },
  {
    "id" : "32ebd69e-afaa-4b8c-bee5-da60c4470046",
    "prId" : 44130,
    "prUrl" : "https://github.com/flutter/flutter/pull/44130#pullrequestreview-318528683",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01d4a746-85ff-4291-b3c7-6ec3e5bc80f2",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "nit: equals doesn't really add anything here, unless you were going to nest matchers",
        "createdAt" : "2019-11-18T18:11:32Z",
        "updatedAt" : "2019-11-18T18:59:40Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "efbe7032-4e44-4b59-b3c5-127223a639c9",
        "parentId" : "01d4a746-85ff-4291-b3c7-6ec3e5bc80f2",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Oh, I know that, I just put it in because it reads better.",
        "createdAt" : "2019-11-18T18:12:08Z",
        "updatedAt" : "2019-11-18T18:59:40Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2902c76e0d79bcdaf6422d5c65dbdaa5a079ca24",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +3084,3088 @@    );\n\n    expect(cause, equals(SelectionChangedCause.keyboard), reason: 'on $platform');\n    expect(\n      selection,"
  }
]