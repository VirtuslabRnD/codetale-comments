[
  {
    "id" : "d0696b35-b1f0-4ec2-b901-cd7658bf9325",
    "prId" : 12277,
    "prUrl" : "https://github.com/flutter/flutter/pull/12277#pullrequestreview-74163957",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "344c9d6f-6568-475a-834f-41a7282668b6",
        "parentId" : null,
        "authorId" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "body" : "Prettier indentation with trailing comma here?",
        "createdAt" : "2017-11-03T17:26:54Z",
        "updatedAt" : "2017-11-03T17:33:30Z",
        "lastEditedBy" : "0729198f-c1dc-4ad3-a406-6b1aad4911fd",
        "tags" : [
        ]
      },
      {
        "id" : "b72569b5-2194-4fb1-8bb4-425b4a153735",
        "parentId" : "344c9d6f-6568-475a-834f-41a7282668b6",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "This was intentional to make the parens symmetric with the opening line.",
        "createdAt" : "2017-11-03T17:53:03Z",
        "updatedAt" : "2017-11-03T17:53:03Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "44f13442ce8740fed05945e480b08ef4e1b73488",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +257,261 @@            'composingExtent': -1,\n          },\n    ));\n  });\n"
  },
  {
    "id" : "f3b00c68-5701-4381-a2d8-a3f8bdd22fdd",
    "prId" : 12804,
    "prUrl" : "https://github.com/flutter/flutter/pull/12804#pullrequestreview-73651837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98cc7bcc-b8ff-4407-8bd5-d66baf708a8f",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Should we test the non focused case as well?",
        "createdAt" : "2017-11-01T23:12:02Z",
        "updatedAt" : "2017-11-01T23:38:03Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "75de84cc-5a33-41fe-9e0a-94414b174da5",
        "parentId" : "98cc7bcc-b8ff-4407-8bd5-d66baf708a8f",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Isn't that covered by line 278?",
        "createdAt" : "2017-11-01T23:38:46Z",
        "updatedAt" : "2017-11-01T23:38:46Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "d9780c41-d838-459f-8e5b-27c492e29cad",
        "parentId" : "98cc7bcc-b8ff-4407-8bd5-d66baf708a8f",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "oops",
        "createdAt" : "2017-11-01T23:39:39Z",
        "updatedAt" : "2017-11-01T23:39:39Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "21da481a31ca8f1b64599c89a4c58d477b063f7f",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +284,288 @@    expect(semantics, includesNodeWith(flags: <SemanticsFlags>[SemanticsFlags.isTextField, SemanticsFlags.isFocused]));\n\n  });\n}"
  },
  {
    "id" : "5b9eacc6-fc03-4535-a394-5850fab1f706",
    "prId" : 18888,
    "prUrl" : "https://github.com/flutter/flutter/pull/18888#pullrequestreview-134045115",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cb70e3d-232b-4315-a5dc-e135c9ee7f0f",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: This file is hard to review because it contains so many unrelated format changes.",
        "createdAt" : "2018-07-03T15:14:25Z",
        "updatedAt" : "2018-07-03T17:53:35Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d4202716c56aeb0e9dee369eec4a41e3b26542d",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +58,62 @@    await tester.idle();\n    expect(tester.testTextInput.editingState['text'], equals('test'));\n    expect(tester.testTextInput.setClientArgs['inputAction'],\n        equals(serializedActionName));\n  }"
  },
  {
    "id" : "742fc54a-674b-415d-b122-db84d947cd8e",
    "prId" : 24476,
    "prUrl" : "https://github.com/flutter/flutter/pull/24476#pullrequestreview-203799483",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "749bb451-337a-4b46-a9a3-962bd8e16ced",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "There should probably also be tests for just PaintVisibility.",
        "createdAt" : "2019-01-23T20:27:03Z",
        "updatedAt" : "2019-03-12T13:53:31Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "67bb0c3c-75b3-4353-9cb3-953f06fd8fba",
        "parentId" : "749bb451-337a-4b46-a9a3-962bd8e16ced",
        "authorId" : "1bcfb382-657a-4d7d-879b-85c84363148f",
        "body" : "I've removed `PaintVisibility`.",
        "createdAt" : "2019-02-14T15:19:36Z",
        "updatedAt" : "2019-03-12T13:53:31Z",
        "lastEditedBy" : "1bcfb382-657a-4d7d-879b-85c84363148f",
        "tags" : [
        ]
      }
    ],
    "commit" : "21077df01a4bbbb19ba4a61b41ab18ce16a334fe",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1998,2002 @@    expect(renderEditable.text.style.decoration, isNull);\n  });\n\n  testWidgets('text selection handle visibility', (WidgetTester tester) async {\n    final GlobalKey<EditableTextState> editableTextKey ="
  },
  {
    "id" : "04f06ada-ed66-49dc-92a8-f3e4e98f40ca",
    "prId" : 24761,
    "prUrl" : "https://github.com/flutter/flutter/pull/24761#pullrequestreview-179174666",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98794d27-2f62-438a-b9dc-163c3ba587b0",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "use mock_canvas to actually test that a floating caret rrect is being drawn. ",
        "createdAt" : "2018-11-28T08:43:22Z",
        "updatedAt" : "2018-12-14T01:00:48Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "796062110a2673d6617ff854e3747b4d1c3eba24",
    "line" : 403,
    "diffHunk" : "@@ -1,1 +1939,1943 @@    expect(controller.selection.baseOffset, 11);\n  });\n}\n\nclass MockTextSelectionControls extends Mock implements TextSelectionControls {}"
  },
  {
    "id" : "e782ab4c-0292-43df-8c73-ec557ec0bcb0",
    "prId" : 27534,
    "prUrl" : "https://github.com/flutter/flutter/pull/27534#pullrequestreview-200391411",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6069fc4-f5a7-4bea-93a4-8003ad090d2e",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This can go on the previous line.",
        "createdAt" : "2019-02-05T23:46:37Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "22990b33-bda9-4810-a9ab-ab0caff71edd",
        "parentId" : "b6069fc4-f5a7-4bea-93a4-8003ad090d2e",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I don't feel strongly about it, leaning towards keeping the 80 line width. ",
        "createdAt" : "2019-02-06T02:15:36Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a68a5c55a473ffac26e80b13c51722a1fb62e65",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +495,499 @@\n    final EditableTextState state =\n        tester.state<EditableTextState>(find.byType(EditableText));\n\n    expect(state.showToolbar(), false);"
  },
  {
    "id" : "09859ce4-8075-4981-8c67-aa9b6cb91f8b",
    "prId" : 27534,
    "prUrl" : "https://github.com/flutter/flutter/pull/27534#pullrequestreview-200391556",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03bd8e2d-b46f-4957-8669-28fb88d27c97",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Shouldn't this be pumpAndSettle()? What if the toolbar animates into view?",
        "createdAt" : "2019-02-05T23:47:25Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "0e9137a7-036c-446c-a219-666dc294eab9",
        "parentId" : "03bd8e2d-b46f-4957-8669-28fb88d27c97",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Visual behavior changes should be test-breaking changes. ",
        "createdAt" : "2019-02-06T02:16:23Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a68a5c55a473ffac26e80b13c51722a1fb62e65",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +498,502 @@\n    expect(state.showToolbar(), false);\n    await tester.pump();\n    expect(find.text('PASTE'), findsNothing);\n"
  },
  {
    "id" : "0bcfbf7e-ed52-4311-b04e-f2f2ea9bee01",
    "prId" : 27534,
    "prUrl" : "https://github.com/flutter/flutter/pull/27534#pullrequestreview-200831269",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0306e825-17c6-420b-b453-ee271b16d55a",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "If this parameter needed? Since we're now being honest with the `cause` parameter, it seems like there should a special value (or just cause == null) that indicates a programmatic change.",
        "createdAt" : "2019-02-05T23:49:22Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "e4d61e36-0487-40dd-857e-b557533dbea5",
        "parentId" : "0306e825-17c6-420b-b453-ee271b16d55a",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "I'm not deprecating SelectionChangedCause (my branch name is a misnomer I guess :D). We're still trying to be honest™️ with the real cause to supply it to users of the existing APIs via the various onSelectionChanged and whatnot. We're just not using it internally anymore, but we're not breaking external users. \r\n\r\nIn this test, I'm intending for it to mean a single tap. \r\n\r\nI'm not making the select*'s cause optional because they still aren't (to keep supporting onSelectionChanged users who might care). \r\n\r\nSo far, there are no 'fake' selection causes yet to have a new enum value.",
        "createdAt" : "2019-02-06T02:19:22Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "6af9f276-0687-4c5f-986a-0a372066a16c",
        "parentId" : "0306e825-17c6-420b-b453-ee271b16d55a",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "> So far, there are no 'fake' selection causes yet to have a new enum value.\r\n\r\nWhat about programmatic changes to the selection that are not triggered by an input event?",
        "createdAt" : "2019-02-06T21:12:26Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "67ed8277-35b9-4def-ad4f-44df12a7f1f4",
        "parentId" : "0306e825-17c6-420b-b453-ee271b16d55a",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Programmatic changes actually circumvents the whole thing it appears. i.e. nothing is triggered through the RenderEditable directly, no `on*Changed` is bubbled back through EditableText, there are no SelectionChangedCause involved, no toolbars are ever triggered and no` on*Changed` is called. \r\n\r\nThis is in the various `@template flutter.widgets.editableText.onChanged` docs. `This callback does run not when the TextField's text is changed, via the TextField's [controller].`\r\n\r\nAdding some additional docs to RenderEditable.select* to indicate that it's used for translating UI manipulations to logical selections and if you own the TextEditingController, it's a lot easier to go manipulate that directly.",
        "createdAt" : "2019-02-06T21:22:39Z",
        "updatedAt" : "2019-02-06T21:44:30Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "fcd9db0b-123f-4af4-8577-e399bea263cd",
        "parentId" : "0306e825-17c6-420b-b453-ee271b16d55a",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Thanks for clarifying that. So the rough summary would be: the RenderEditable selection changing methods are only called in response to user input.  That makes sense.",
        "createdAt" : "2019-02-06T22:05:55Z",
        "updatedAt" : "2019-02-06T22:06:03Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "7050e5d9-c0c3-4896-a13d-386853046c2f",
        "parentId" : "0306e825-17c6-420b-b453-ee271b16d55a",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "It's a good question though. I only thought about it after you asked. But the new docs should address the apparent redundancy now.",
        "createdAt" : "2019-02-06T22:09:03Z",
        "updatedAt" : "2019-02-06T22:09:21Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a68a5c55a473ffac26e80b13c51722a1fb62e65",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +510,514 @@    state.renderEditable.selectWordsInRange(\n      from: const Offset(0, 0),\n      cause: SelectionChangedCause.tap,\n    );\n    await tester.pump();"
  },
  {
    "id" : "72e8a0bd-dccb-44ed-a80d-6b1d4e2bc426",
    "prId" : 27534,
    "prUrl" : "https://github.com/flutter/flutter/pull/27534#pullrequestreview-200392039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc98d3d9-df1d-42b1-a42f-3d018ed92206",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Maybe pump a frame first, so that 'blah' actually ends up in the textfield?",
        "createdAt" : "2019-02-05T23:56:45Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "7ae1b095-5aad-4db1-be1d-fc78a2cf1209",
        "parentId" : "dc98d3d9-df1d-42b1-a42f-3d018ed92206",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Ah, good point, done.",
        "createdAt" : "2019-02-06T02:19:27Z",
        "updatedAt" : "2019-02-06T21:31:50Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a68a5c55a473ffac26e80b13c51722a1fb62e65",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +503,507 @@    controller.text = 'blah';\n    await tester.pump();\n    expect(state.showToolbar(), false);\n    await tester.pump();\n    expect(find.text('PASTE'), findsNothing);"
  },
  {
    "id" : "1c3a47dc-919a-4e8b-8108-1fa3d8edea3c",
    "prId" : 31332,
    "prUrl" : "https://github.com/flutter/flutter/pull/31332#pullrequestreview-229657461",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b63cb53-bb9a-4842-bdb2-fedfc46bc208",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Include a comment here:\r\n```\r\n// Regression test for https://github.com/flutter/flutter/issues/31287\r\n```",
        "createdAt" : "2019-04-23T16:35:49Z",
        "updatedAt" : "2019-04-25T18:24:59Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "405446e9682ad5046b4a3bc6c1ef3183c952313b",
    "line" : 442,
    "diffHunk" : "@@ -1,1 +2103,2107 @@  // Regression test for https://github.com/flutter/flutter/issues/31287\n  testWidgets('iOS text selection handle visibility', (WidgetTester tester) async {\n    debugDefaultTargetPlatformOverride = TargetPlatform.iOS;\n\n    // Text with two separate words to select."
  },
  {
    "id" : "727a9534-28eb-4b54-bb7a-7eefe61bb1ee",
    "prId" : 31332,
    "prUrl" : "https://github.com/flutter/flutter/pull/31332#pullrequestreview-229657461",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ff8660f-570f-4b2a-bc61-323b53a52925",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This might be slightly easier to read if the parameter pairs were reversed:\r\n```\r\nverifyVisibility(leftViewportEdge, true, rightViewportEdge, true)",
        "createdAt" : "2019-04-23T16:49:47Z",
        "updatedAt" : "2019-04-25T18:24:59Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "405446e9682ad5046b4a3bc6c1ef3183c952313b",
    "line" : 476,
    "diffHunk" : "@@ -1,1 +2137,2141 @@    bool expectedRightVisibleBefore = false;\n\n    Future<void> verifyVisibility(\n      HandlePositionInViewport leftPosition,\n      bool expectedLeftVisible,"
  },
  {
    "id" : "e979bbc2-db44-4b92-8993-800c9d9db0d9",
    "prId" : 31332,
    "prUrl" : "https://github.com/flutter/flutter/pull/31332#pullrequestreview-229814362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6411f286-40f1-49b1-a8ca-5ab48f9d7e3e",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Add a comment for what the spaces are for",
        "createdAt" : "2019-04-23T21:59:19Z",
        "updatedAt" : "2019-04-25T18:24:59Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "405446e9682ad5046b4a3bc6c1ef3183c952313b",
    "line" : 445,
    "diffHunk" : "@@ -1,1 +2106,2110 @@\n    // Text with two separate words to select.\n    const String testText = 'XXXXX          XXXXX';\n    final TextEditingController controller = TextEditingController(text: testText);\n"
  }
]