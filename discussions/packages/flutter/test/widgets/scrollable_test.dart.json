[
  {
    "id" : "76994b07-92b6-44ba-84df-ab707bf85510",
    "prId" : 11685,
    "prUrl" : "https://github.com/flutter/flutter/pull/11685#pullrequestreview-63831735",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77589664-67c0-4abe-a873-be42819be696",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i'd prefer if the comment explaining the ignore was on the same line as the ignore, so it's clearer that they're linked",
        "createdAt" : "2017-08-18T22:09:44Z",
        "updatedAt" : "2017-09-20T00:05:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "4852cbc5-2b30-4e15-bd52-95da1c95155e",
        "parentId" : "77589664-67c0-4abe-a873-be42819be696",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "From offline conversation with @xster: dart-lang/linter#706\r\n+1'ed the bug as I'd also prefer `// ignore THING: reason`\r\n",
        "createdAt" : "2017-09-19T23:27:15Z",
        "updatedAt" : "2017-09-20T00:05:22Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b5a268a0d67aa0b132ca669de7f54bb28e37e16",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +32,36 @@  final RenderViewport viewport = tester.renderObject(find.byType(Viewport));\n  final ScrollPosition position = viewport.offset;\n  // Access for test only.\n  return position.activity.velocity; // ignore: INVALID_USE_OF_PROTECTED_MEMBER\n}"
  },
  {
    "id" : "a4cb0e48-689c-4de9-83f6-d88f00feaa57",
    "prId" : 45019,
    "prUrl" : "https://github.com/flutter/flutter/pull/45019#pullrequestreview-322502411",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1456e097-60aa-4bdd-8abf-f10b82d961ac",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Hm, this seems odd. It has NeverScrollableScrollPhysics, but you can still scroll it with the keyboard? That sounds like a bug?",
        "createdAt" : "2019-11-25T18:31:15Z",
        "updatedAt" : "2019-11-26T01:16:05Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "d543b078-e63f-4eea-ae1f-be7d169fa1df",
        "parentId" : "1456e097-60aa-4bdd-8abf-f10b82d961ac",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yep, it was.  I added a test for this, and fixed the bug.",
        "createdAt" : "2019-11-25T22:17:44Z",
        "updatedAt" : "2019-11-26T01:16:05Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "093509b7393049dbe51730603dec17f4894ce0d3",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +291,295 @@        home: CustomScrollView(\n          controller: controller,\n          physics: const NeverScrollableScrollPhysics(),\n          slivers: List<Widget>.generate(\n            20,"
  },
  {
    "id" : "db2eef2f-86e5-4c73-a1bb-095858c9d471",
    "prId" : 45019,
    "prUrl" : "https://github.com/flutter/flutter/pull/45019#pullrequestreview-322647624",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a6af472-6e4b-4544-8d84-f27b83068975",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "SHould there be one last expect on the rect to ensure that Box 0 is back to where it started?",
        "createdAt" : "2019-11-25T23:35:50Z",
        "updatedAt" : "2019-11-26T01:16:05Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "093509b7393049dbe51730603dec17f4894ce0d3",
    "line" : 188,
    "diffHunk" : "@@ -1,1 +423,427 @@    await tester.pumpAndSettle();\n    expect(tester.getRect(find.byKey(const ValueKey<String>('Box 0'), skipOffstage: false)), equals(const Rect.fromLTRB(0.0, 0.0, 50.0, 600.0)));\n\n    // TODO(gspencergoog): Once we can test against TargetPlatform.macOS instead\n    // of Platform.isMacOS, don't skip this on web anymore."
  },
  {
    "id" : "9b45a025-d0f8-4b7c-9d61-d8d73b41ee6b",
    "prId" : 45019,
    "prUrl" : "https://github.com/flutter/flutter/pull/45019#pullrequestreview-322647624",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa929369-5cd1-46ed-b94e-7e8027f84f9d",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "same here.",
        "createdAt" : "2019-11-25T23:37:18Z",
        "updatedAt" : "2019-11-26T01:16:05Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "093509b7393049dbe51730603dec17f4894ce0d3",
    "line" : 235,
    "diffHunk" : "@@ -1,1 +470,474 @@    await tester.pumpAndSettle();\n    expect(tester.getRect(find.byKey(const ValueKey<String>('Box 0'), skipOffstage: false)), equals(const Rect.fromLTRB(750.0, 0.0, 800.0, 600.0)));\n\n    // TODO(gspencergoog): Once we can test against TargetPlatform.macOS instead\n    // of Platform.isMacOS, don't skip this on web anymore."
  },
  {
    "id" : "6a400339-0c15-4aeb-a5d8-0c4ed1b4712c",
    "prId" : 49319,
    "prUrl" : "https://github.com/flutter/flutter/pull/49319#pullrequestreview-348123412",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cee51ec6-7895-4bdf-bafe-6f1c1562df1b",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: remove one blank line",
        "createdAt" : "2020-01-24T17:44:03Z",
        "updatedAt" : "2020-01-24T18:33:36Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "2d588103-c909-4e2d-ae10-e03aeaa130dc",
        "parentId" : "cee51ec6-7895-4bdf-bafe-6f1c1562df1b",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Done",
        "createdAt" : "2020-01-24T17:55:36Z",
        "updatedAt" : "2020-01-24T18:33:36Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "1695087786021be8111425ef0926a0f28ba8857a",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +859,863 @@class SuperPessimisticScrollPhysics extends ScrollPhysics {\n  SuperPessimisticScrollPhysics({ScrollPhysics parent}) : super(parent: parent);\n\n  int count = 0;\n"
  },
  {
    "id" : "cd3a9ea6-47c3-41d2-932d-c267c27b0a38",
    "prId" : 49319,
    "prUrl" : "https://github.com/flutter/flutter/pull/49319#pullrequestreview-348113913",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "399b4439-5f38-48cc-a389-e7bc2dceb676",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe also jump to a point half-way through the animation and assert that at that point only cheap widgets are being shown on screen?",
        "createdAt" : "2020-01-24T17:46:00Z",
        "updatedAt" : "2020-01-24T18:33:36Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "1695087786021be8111425ef0926a0f28ba8857a",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +716,720 @@      curve: Curves.linear,\n    );\n\n    expect(expensiveWidgets, 17);\n    expect(widgetTracker.every((String type) => type == 'expensive'), true);"
  },
  {
    "id" : "12d914e2-6746-4e2a-aa18-7c5403908057",
    "prId" : 49319,
    "prUrl" : "https://github.com/flutter/flutter/pull/49319#pullrequestreview-348139311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc8f6047-3929-4ed7-85b2-e30c1ff711e6",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "how does this test show that the overridden method was actually used?\r\n\r\nMaybe (also) have a test with physics that always defer no mater what and check that it only builds cheap boxes?",
        "createdAt" : "2020-01-24T17:48:07Z",
        "updatedAt" : "2020-01-24T18:33:36Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "eaf73d1e-f47a-4501-8c42-36f380dddbbb",
        "parentId" : "fc8f6047-3929-4ed7-85b2-e30c1ff711e6",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "I'll add state to the physics to assert that it's called.\r\n\r\nI think with that the other test isn't strictly necessary, right?",
        "createdAt" : "2020-01-24T17:57:24Z",
        "updatedAt" : "2020-01-24T18:33:36Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "bf349858-4418-468a-b303-4111b2cdc320",
        "parentId" : "fc8f6047-3929-4ed7-85b2-e30c1ff711e6",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I guess... although it could still be a wired combination of some kind of default defer logic and this :P ",
        "createdAt" : "2020-01-24T17:59:00Z",
        "updatedAt" : "2020-01-24T18:33:36Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "ab2ceadd-5fa1-41cb-a98c-7b5eee645940",
        "parentId" : "fc8f6047-3929-4ed7-85b2-e30c1ff711e6",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Ahh fair.  Ok.",
        "createdAt" : "2020-01-24T18:24:56Z",
        "updatedAt" : "2020-01-24T18:33:36Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "1695087786021be8111425ef0926a0f28ba8857a",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +770,774 @@  });\n\n  testWidgets('Can recommendDeferredLoadingForContext - override heuristic', (WidgetTester tester) async {\n    int cheapWidgets = 0;\n    int expensiveWidgets = 0;"
  }
]