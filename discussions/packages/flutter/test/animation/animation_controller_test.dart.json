[
  {
    "id" : "488febdc-9c58-4653-a50e-fbc84e3ca4d9",
    "prId" : 11520,
    "prUrl" : "https://github.com/flutter/flutter/pull/11520#pullrequestreview-54486293",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0693fdb8-583f-40a1-84b9-1f2b37660410",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "you should test that forward/reverse don't affect the results",
        "createdAt" : "2017-08-04T21:23:36Z",
        "updatedAt" : "2017-08-04T21:55:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a8481dda-9b39-41b3-b9a6-520a4a9bcdf4",
        "parentId" : "0693fdb8-583f-40a1-84b9-1f2b37660410",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Added more tests for that.",
        "createdAt" : "2017-08-04T21:56:15Z",
        "updatedAt" : "2017-08-04T21:56:15Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "114609a66f4e21c9f7eebecb22546f6654afa1c4",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +468,472 @@    expect(controller.value, 0.0);\n    expect(statusLog, equals(<AnimationStatus>[ AnimationStatus.forward, AnimationStatus.completed ]));\n    statusLog.clear();\n  });\n"
  },
  {
    "id" : "1dc3d81c-99f4-4cc5-9071-ae91b80ecb09",
    "prId" : 25125,
    "prUrl" : "https://github.com/flutter/flutter/pull/25125#pullrequestreview-195623908",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "784d655a-8eea-474e-bdb1-7f37d6c6a884",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Should add tests for the new `repeat` method parameter asserts. Similar to the test called 'AnimationController repeat() throws if period is not specified' (and etc).",
        "createdAt" : "2019-01-18T20:11:35Z",
        "updatedAt" : "2019-01-24T09:41:26Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "22df8748-395c-4c79-ae47-c86deb4399ac",
        "parentId" : "784d655a-8eea-474e-bdb1-7f37d6c6a884",
        "authorId" : "1f11e190-ffd1-4fff-8b28-f5bd51e11ec8",
        "body" : "Done üëç ",
        "createdAt" : "2019-01-23T16:41:14Z",
        "updatedAt" : "2019-01-24T09:41:26Z",
        "lastEditedBy" : "1f11e190-ffd1-4fff-8b28-f5bd51e11ec8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a53bc75d2c1150db0766b7573b7d099dfc27803f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +581,585 @@  });\n\n  test('calling repeat with reverse set to true makes the animation alternate '\n       'between lowerBound and upperBound values on each repeat', () {\n    final AnimationController controller = AnimationController("
  },
  {
    "id" : "d1deb4eb-8d5d-4be9-83c0-37203903d862",
    "prId" : 25125,
    "prUrl" : "https://github.com/flutter/flutter/pull/25125#pullrequestreview-194260684",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95b6a429-a438-4a4b-813c-49dc64b67bc5",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Tests are need for when min/max are specified, including when min==max.",
        "createdAt" : "2019-01-18T20:12:59Z",
        "updatedAt" : "2019-01-24T09:41:26Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "a53bc75d2c1150db0766b7573b7d099dfc27803f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +583,587 @@  test('calling repeat with reverse set to true makes the animation alternate '\n       'between lowerBound and upperBound values on each repeat', () {\n    final AnimationController controller = AnimationController(\n      duration: const Duration(milliseconds: 100),\n      value: 0.0,"
  },
  {
    "id" : "2f9bf0d5-7107-4d47-98ff-cd672fc03a7a",
    "prId" : 25125,
    "prUrl" : "https://github.com/flutter/flutter/pull/25125#pullrequestreview-196158141",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "530c2324-6181-47c8-bdfa-e1a272b72354",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It's not clear why this first duration=0 tick is always needed. I assume it's to enable the simulation to figure out which way it's going. Might be helpful to include one comment at the beginning here, to explain what's going on.",
        "createdAt" : "2019-01-24T00:16:58Z",
        "updatedAt" : "2019-01-24T09:41:26Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "0db0e67e-ef28-4039-975f-b9aa84f73dd4",
        "parentId" : "530c2324-6181-47c8-bdfa-e1a272b72354",
        "authorId" : "1f11e190-ffd1-4fff-8b28-f5bd51e11ec8",
        "body" : "This can also be found in other tests (e.g. `test('animateTo sets correct status')` or `test('after a reverse call animateTo sets correct status')`. Every time when starting a new simulation, the first tick is used to initialise the simulation inside the `AnimationController`. When the line is removed, the elapsed time will always be 0 which means that the simulation will be evaluated at the time 0 and not after x milliseconds. \r\n\r\nIn the end I didn't comment on that because it is used quite often in the other tests already üòâ ",
        "createdAt" : "2019-01-24T09:42:03Z",
        "updatedAt" : "2019-01-24T09:42:03Z",
        "lastEditedBy" : "1f11e190-ffd1-4fff-8b28-f5bd51e11ec8",
        "tags" : [
        ]
      },
      {
        "id" : "64d56bb4-e417-4d5b-a905-4c31bf8feec1",
        "parentId" : "530c2324-6181-47c8-bdfa-e1a272b72354",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Good point, OK.\r\n",
        "createdAt" : "2019-01-24T17:31:17Z",
        "updatedAt" : "2019-01-24T17:31:18Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "a53bc75d2c1150db0766b7573b7d099dfc27803f",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +594,598 @@\n    controller.repeat(reverse: true);\n    tick(const Duration(milliseconds: 0));\n    tick(const Duration(milliseconds: 25));\n    expect(controller.value, 0.25);"
  },
  {
    "id" : "6e1f3285-2929-4e9a-a704-924d9f14e60a",
    "prId" : 62616,
    "prUrl" : "https://github.com/flutter/flutter/pull/62616#pullrequestreview-501460746",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2604a1b8-c581-48ae-bc4b-691e23d90a8c",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "You can make this `late`.",
        "createdAt" : "2020-07-31T21:34:11Z",
        "updatedAt" : "2020-10-02T23:56:59Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "e431b28d-25f5-4b67-8284-8c57c1a03d8b",
        "parentId" : "2604a1b8-c581-48ae-bc4b-691e23d90a8c",
        "authorId" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "body" : "I still think nullable is the way to go. I like the `expect(result, isNotNull);` line; removing it from the test feels off.",
        "createdAt" : "2020-10-02T21:35:20Z",
        "updatedAt" : "2020-10-02T23:57:00Z",
        "lastEditedBy" : "5ad28324-7a27-4eb5-87df-c2d51dd6c21e",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ed8650247eff7c4f624d62b41024462895a0d96",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +349,353 @@\n    controller.dispose();\n    FlutterError? result;\n    try {\n      controller.dispose();"
  }
]