[
  {
    "id" : "777458e5-f946-49e9-b4fb-0b3ac870e696",
    "prId" : 74922,
    "prUrl" : "https://github.com/flutter/flutter/pull/74922#pullrequestreview-578700972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f31b3715-4797-4e2a-ab23-e886d3ea00bd",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "for the other packages we just disabled this lint in the analyzer_options.yaml",
        "createdAt" : "2021-01-28T20:10:23Z",
        "updatedAt" : "2021-01-29T06:54:01Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "763c794e31afa49094878be2afed2e02a81de51a",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +203,207 @@    @visibleForTesting vm.VmService? vmService,\n  }) async {\n    assert(streams != null); // ignore: unnecessary_null_comparison\n    assert(streams.isNotEmpty);\n    if (vmService != null) {"
  },
  {
    "id" : "44c35f4c-25d4-456f-b6c3-da6e56fd763d",
    "prId" : 78055,
    "prUrl" : "https://github.com/flutter/flutter/pull/78055#pullrequestreview-611071070",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78ecf64d-46fd-4868-bbaf-7f01204d8725",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Keep the old delay but don't require that there are frames",
        "createdAt" : "2021-03-12T19:05:49Z",
        "updatedAt" : "2021-03-12T19:05:49Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "11635f0f14d589874c26e88613311b314354bc51",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +318,322 @@    }\n\n    await Future<void>.delayed(const Duration(seconds: 2)); // flush old FrameTimings\n    final TimingsCallback watcher = frameTimings.addAll;\n    addTimingsCallback(watcher);"
  },
  {
    "id" : "a6e5dc15-47eb-4e81-a631-325166739568",
    "prId" : 79520,
    "prUrl" : "https://github.com/flutter/flutter/pull/79520#pullrequestreview-626664137",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "373062e1-9290-47b6-a225-611ea19be844",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "nit: use `'''`.",
        "createdAt" : "2021-04-01T21:33:55Z",
        "updatedAt" : "2021-04-01T23:20:45Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "eabb84871dd82b4173c4ea10cd343d6158d1b272",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +65,69 @@      } on MissingPluginException {\n        print(r'''\nWarning: integration_test plugin was not detected.\n\nIf you're running the tests with `flutter drive`, please make sure your tests"
  },
  {
    "id" : "8253e515-b3b1-4f98-839d-a4150931381d",
    "prId" : 84472,
    "prUrl" : "https://github.com/flutter/flutter/pull/84472#pullrequestreview-706944740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5109d8f5-5a11-44aa-9d24-0d776f1b3ee3",
        "parentId" : null,
        "authorId" : "724317e3-6a58-4157-9220-ec949b730300",
        "body" : "is iOS supported at this time? If not we should throw as well to make it obvious to the user",
        "createdAt" : "2021-07-13T13:18:49Z",
        "updatedAt" : "2021-07-13T13:24:44Z",
        "lastEditedBy" : "724317e3-6a58-4157-9220-ec949b730300",
        "tags" : [
        ]
      },
      {
        "id" : "4695c554-46d4-4209-8142-980150bcb5a4",
        "parentId" : "5109d8f5-5a11-44aa-9d24-0d776f1b3ee3",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "iOS will come right after this PR.",
        "createdAt" : "2021-07-15T05:45:38Z",
        "updatedAt" : "2021-07-15T05:45:38Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "754dac8b4b9c8867e9cb6865bced5e1bb014ccf6",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +173,177 @@    reportData ??= <String, dynamic>{};\n    reportData!['screenshots'] ??= <dynamic>[];\n    final Map<String, dynamic> data = await callbackManager.takeScreenshot(screenshotName);\n    assert(data.containsKey('bytes'));\n"
  }
]