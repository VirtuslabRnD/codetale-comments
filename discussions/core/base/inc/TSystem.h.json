[
  {
    "id" : "09353b73-3dff-4193-81f1-42323ef69110",
    "prId" : 4874,
    "prUrl" : "https://github.com/root-project/root/pull/4874#pullrequestreview-350246416",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1222f9dc-5cad-4b1c-82bf-f94d6f9f22a8",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Consider:\r\n```suggestion\r\n   virtual TString         GetDirName(std::string_view pathname);\r\n```",
        "createdAt" : "2020-01-29T14:41:14Z",
        "updatedAt" : "2020-01-29T14:41:14Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "88a36321-4bcc-4cc4-8350-ed58df4ec295",
        "parentId" : "1222f9dc-5cad-4b1c-82bf-f94d6f9f22a8",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "Should we change type of input arguments from `const char *` to `std::string_view`? \r\nShould we do it for all new methods? ",
        "createdAt" : "2020-01-29T14:51:46Z",
        "updatedAt" : "2020-01-29T14:51:47Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "996629e6-9d95-4736-a5fb-2a41def715cd",
        "parentId" : "1222f9dc-5cad-4b1c-82bf-f94d6f9f22a8",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "In principle yes.  In practice, to make it beneficial, you also often have to change all the inner functions (that takes those strings).   So in practice, I think we should for new functions and for hotspots.",
        "createdAt" : "2020-01-29T16:12:47Z",
        "updatedAt" : "2020-01-29T16:12:48Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "7ef1cafc-9840-45f6-9d41-cf141f0151a8",
        "parentId" : "1222f9dc-5cad-4b1c-82bf-f94d6f9f22a8",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "Replacing `const char *` by `std::string_view` does not increase performance.\r\nIt only makes sense if caller really operates with `string_view` instances to avoid possible intermediate copies.   ",
        "createdAt" : "2020-01-29T16:23:32Z",
        "updatedAt" : "2020-01-29T16:23:33Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "961137cf-84f3-49da-b3ea-bfdde42eb850",
        "parentId" : "1222f9dc-5cad-4b1c-82bf-f94d6f9f22a8",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Indeed. std::string_view will only improve the performance if the callees is update to leverage it (by avoiding copying and/or updates (like c_str() does)).",
        "createdAt" : "2020-01-29T16:29:19Z",
        "updatedAt" : "2020-01-29T16:29:19Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "002f8344a42a55a390a0d9b30276db02c7d6102d",
    "line" : 190,
    "diffHunk" : "@@ -1,1 +426,430 @@   virtual const char     *BaseName(const char *pathname);\n   virtual const char     *DirName(const char *pathname);\n   virtual TString         GetDirName(const char *pathname);\n   virtual char           *ConcatFileName(const char *dir, const char *name);\n   virtual Bool_t          IsAbsoluteFileName(const char *dir);"
  }
]