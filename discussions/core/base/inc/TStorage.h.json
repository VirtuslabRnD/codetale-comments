[
  {
    "id" : "05140c21-e74c-41f0-9a49-a35491bbe32f",
    "prId" : 3793,
    "prUrl" : "https://github.com/root-project/root/pull/3793#pullrequestreview-236083214",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6336d21f-f511-4480-8313-180e875ae2a5",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Is it still cheaper to inline this, even with `noinline`, or how does performance decrease by moving the implementation into the source file? I would hope to see this questions answered in the above comment.",
        "createdAt" : "2019-05-10T06:23:17Z",
        "updatedAt" : "2019-05-10T15:49:32Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "0844d611-e17c-47cd-b89e-189a5b091c60",
        "parentId" : "6336d21f-f511-4480-8313-180e875ae2a5",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "it doubles the over-head in some use cases. (up to 20%)",
        "createdAt" : "2019-05-10T12:45:04Z",
        "updatedAt" : "2019-05-10T15:49:32Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "206e1306127011b53bda4f1283e048b88ed16796",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +129,133 @@// Moving the function into the source file, results in doubling of the\n// overhead (compared to inlining)\nR__NEVER_INLINE void TStorage::UpdateIsOnHeap(volatile const UInt_t &uniqueID, volatile UInt_t &bits) {\n   if (TStorage::FilledByObjectAlloc(&uniqueID))\n      bits |= kIsOnHeap;"
  }
]