[
  {
    "id" : "576da42f-cdc9-4376-bebd-45253c88ae54",
    "prId" : 3579,
    "prUrl" : "https://github.com/root-project/root/pull/3579#pullrequestreview-220949243",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe6c32cb-bf48-422e-a15a-95580bc324f5",
        "parentId" : null,
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "```suggestion\r\nif (!isa<DeclContext>(DC))\r\n  return {};\r\n```",
        "createdAt" : "2019-03-21T20:25:23Z",
        "updatedAt" : "2019-04-03T16:24:24Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "41e98fa2-0c97-41ea-b301-e74a22b9e3c5",
        "parentId" : "fe6c32cb-bf48-422e-a15a-95580bc324f5",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "We have a cast right after, and that should be a `dyn_cast` - see my comment below for the more common pattern.",
        "createdAt" : "2019-04-01T07:12:23Z",
        "updatedAt" : "2019-04-03T16:24:24Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "a95fe85810473dd73db8b2c1b44e9dc00f15c135",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +641,645 @@\n   R__LOCKGUARD(gInterpreterMutex);\n\n   cling::Interpreter::PushTransactionRAII RAII(fInterp);\n   const auto DC = dyn_cast<DeclContext>(fDecl);"
  },
  {
    "id" : "afcea591-48e4-4c36-aeaf-98b4f0b808f0",
    "prId" : 7444,
    "prUrl" : "https://github.com/root-project/root/pull/7444#pullrequestreview-609117762",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec318acc-0247-470b-bf5a-8f8252087d40",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "This is likely redundant with the construction of fDecl .... humm ... it is plausible that in some future their might be a new case introduced by a future C++ standard ... so maybe its fine. ",
        "createdAt" : "2021-03-10T20:03:53Z",
        "updatedAt" : "2021-03-10T20:03:53Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f64b01cf7429cc4f920dc0b0f1c4ac4de5f5e03",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +163,167 @@   const CXXRecordDecl *CRD =\n      llvm::dyn_cast<CXXRecordDecl>(GetDecl());\n   if (!CRD)\n      return property;\n   property |= kClassIsValid;"
  }
]