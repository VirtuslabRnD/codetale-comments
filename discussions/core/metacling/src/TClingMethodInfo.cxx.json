[
  {
    "id" : "d063f6bd-fa3f-4b6d-99f1-cbc12ab345c4",
    "prId" : 6277,
    "prUrl" : "https://github.com/root-project/root/pull/6277#pullrequestreview-482410879",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88b74471-5dd5-4e69-b6a9-0becf2a7403a",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "It feels weird to have to get it twice or are the result of GetDecl and GetTargetFunctionDecl \"unrelated\"?",
        "createdAt" : "2020-09-02T14:26:43Z",
        "updatedAt" : "2020-09-09T13:14:15Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "c8d4141f-f4a1-4c1e-90dc-c896656c2405",
        "parentId" : "88b74471-5dd5-4e69-b6a9-0becf2a7403a",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Yes, they can be different (function vs using), and there's a `NOTE` above which explains that? :thinking: ",
        "createdAt" : "2020-09-03T15:16:56Z",
        "updatedAt" : "2020-09-09T13:14:15Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "d0f30d44-a18b-45f1-95b6-79bfd3e51883",
        "parentId" : "88b74471-5dd5-4e69-b6a9-0becf2a7403a",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Ok.  So they are related but getting from `GetDecl` to `GetTargetFunctionDecl` is non-trivial (conditional loop over using statement) ... and GetDecl is \"fast\" (even-though it something calls `GetDeclSlow`), so it is okay to call it twice ...\r\n\r\nright?",
        "createdAt" : "2020-09-03T16:35:04Z",
        "updatedAt" : "2020-09-09T13:14:15Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "8101d103-95de-4f10-8641-31fc4dd63c33",
        "parentId" : "88b74471-5dd5-4e69-b6a9-0becf2a7403a",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Yes:\r\n\r\niter              | `GetDecl()` | `GetTargetFunctionDecl()`\r\n----------------|----------------|-------------------------------\r\n`FunctionDecl` | iter | iter\r\n`UsingShadowDecl` | iter | `iter->getTargetDecl()`\r\n\r\nAnd \"Slow\" is indeed not *that* slow.",
        "createdAt" : "2020-09-04T07:09:57Z",
        "updatedAt" : "2020-09-09T13:14:15Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "a78157487403be40b0b15558ea3f81a0b2cb4f35",
    "line" : 638,
    "diffHunk" : "@@ -1,1 +445,449 @@   // which is defined in the derived class and might differ from the access of fd\n   // in the base class.\n   switch (GetDecl()->getAccess()) {\n      case clang::AS_public:\n         property |= kIsPublic;"
  },
  {
    "id" : "c89b07bd-6aea-4e42-8d0c-057c828179a2",
    "prId" : 6277,
    "prUrl" : "https://github.com/root-project/root/pull/6277#pullrequestreview-481948195",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b25d5be0-1a18-4635-89bc-9141b81582fa",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Why was \"emplaceSpecFunIfNeeded\" needed before and not now?",
        "createdAt" : "2020-09-02T14:28:02Z",
        "updatedAt" : "2020-09-09T13:14:15Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "1fca0474-81d6-48e1-9d0e-123ca805688a",
        "parentId" : "b25d5be0-1a18-4635-89bc-9141b81582fa",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "That's now done in https://github.com/root-project/root/pull/6277/files/43b703cb2fd67b00755f04fdb423457ff01fda4b#diff-7676f96a6eb30f410148afd8752dc3c9R73 i.e. `TClingCXXRecMethIter::SpecFuncIter::SpecFuncIter`",
        "createdAt" : "2020-09-03T15:19:55Z",
        "updatedAt" : "2020-09-09T13:14:15Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "a78157487403be40b0b15558ea3f81a0b2cb4f35",
    "line" : 291,
    "diffHunk" : "@@ -1,1 +268,272 @@      auto Ctors = SemaRef.LookupConstructors(CXXRD);\n      SpecFuncs.append(Ctors.begin(), Ctors.end());\n      SpecFuncs.emplace_back(SemaRef.LookupCopyingAssignment(CXXRD, /*Quals*/ 0, /*RValueThis*/ false, 0 /*ThisQuals*/));\n      SpecFuncs.emplace_back(SemaRef.LookupMovingAssignment(CXXRD, /*Quals*/ 0, /*RValueThis*/ false, 0 /*ThisQuals*/));\n      SpecFuncs.emplace_back(SemaRef.LookupDestructor(CXXRD));"
  }
]