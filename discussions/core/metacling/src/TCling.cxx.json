[
  {
    "id" : "f79444a6-1845-4e50-b8c7-7d21a27dd5b9",
    "prId" : 614,
    "prUrl" : "https://github.com/root-project/root/pull/614#pullrequestreview-43696782",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6543f1eb-4b71-496e-9bdb-42dec04fca51",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Does print_wrapper actually show things on the terminal?  If not, wouldn't it be better to call it get_wrapper_code?",
        "createdAt" : "2017-06-13T10:34:53Z",
        "updatedAt" : "2017-06-13T10:36:11Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "f2f4baf2-309c-4765-a3fe-ce23141a1bd0",
        "parentId" : "6543f1eb-4b71-496e-9bdb-42dec04fca51",
        "authorId" : "2349f38f-171e-43d8-8dee-e8439718c88a",
        "body" : "Seems like this PR got already merged, so I renamed this in #642.",
        "createdAt" : "2017-06-13T11:44:49Z",
        "updatedAt" : "2017-06-13T11:44:49Z",
        "lastEditedBy" : "2349f38f-171e-43d8-8dee-e8439718c88a",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdc502a3fded8bd88adeae3c7a1edfb30a8c0958",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +6852,6856 @@   std::string wrapper_name;\n   std::string wrapper;\n   f->print_wrapper(wrapper_name, wrapper);\n   return wrapper;\n}"
  },
  {
    "id" : "af3c81df-e270-4281-aea7-0d083e353426",
    "prId" : 1381,
    "prUrl" : "https://github.com/root-project/root/pull/1381#pullrequestreview-79464376",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "431dd7df-bc9c-4380-bff7-ace436163c72",
        "parentId" : null,
        "authorId" : "2349f38f-171e-43d8-8dee-e8439718c88a",
        "body" : "@vgvassilev I reply here to [your comment on the closed PR](https://github.com/root-project/root/pull/1378#pullrequestreview-79456335). I don't think we call recursively `LoadCoreModule` or recursively make TCling instances? And if we do, then we already made a good portion of `declare`s before this code for all the other TCling things, so we would anyway be in deep trouble.",
        "createdAt" : "2017-11-28T10:45:22Z",
        "updatedAt" : "2017-11-28T11:06:06Z",
        "lastEditedBy" : "2349f38f-171e-43d8-8dee-e8439718c88a",
        "tags" : [
        ]
      },
      {
        "id" : "00c56846-ed8a-4648-92c5-0ecc06be820e",
        "parentId" : "431dd7df-bc9c-4380-bff7-ace436163c72",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "I think we ought to reduce all `declares` in TCling and that seems to be an easy-to-reduce one.",
        "createdAt" : "2017-11-28T11:00:23Z",
        "updatedAt" : "2017-11-28T11:06:06Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfe40ddd1225113526720a2ee3f1bb90846ee429",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +1152,1156 @@   // core modules have defined it:\n   // https://www.gnu.org/software/libc/manual/html_node/Complex-Numbers.html\n   interp.declare(\"#ifdef I\\n #undef I\\n #endif\\n\");\n}\n"
  },
  {
    "id" : "eec23c7e-cdd2-4914-a577-60cb23bd9dbb",
    "prId" : 1564,
    "prUrl" : "https://github.com/root-project/root/pull/1564#pullrequestreview-92845699",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e1e1d67-a4fd-4221-a619-ad2b5463c2f0",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Is the number of calls to ApplyToInterpreterMutex guaranteed by construction?  If not and ApplyToInterpreterMutex is called one too many time, the fInitialMutex could be empty and all the guard like\r\n```\r\n  if (fInitialMutex.back()) \r\n```\r\nwould have random behavior.",
        "createdAt" : "2018-01-30T22:20:30Z",
        "updatedAt" : "2018-01-31T09:00:24Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "785ac838-f5c2-4db1-8770-21793cb5c4ac",
        "parentId" : "3e1e1d67-a4fd-4221-a619-ad2b5463c2f0",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "By construction, but I added an `R__ASSERT`.",
        "createdAt" : "2018-01-31T09:01:23Z",
        "updatedAt" : "2018-01-31T09:01:23Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a65c2a00cd69d157517ee5e73a780227a103745",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +8491,8495 @@      }\n   }\n   fInitialMutex.pop_back();\n}\n"
  },
  {
    "id" : "d5e0140f-7186-41cb-9e13-393091e5851a",
    "prId" : 2093,
    "prUrl" : "https://github.com/root-project/root/pull/2093#pullrequestreview-125080702",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54050fa6-5a4b-467e-9809-eb7a32810cde",
        "parentId" : null,
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Could you prepend a `FIXME:` to the comment here.",
        "createdAt" : "2018-06-01T08:13:45Z",
        "updatedAt" : "2018-06-01T12:02:30Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "089fd8df1de5c643b5987467eee2a4f7177414a3",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +5904,5908 @@            std::string FileName(DirIt->path());\n            if (!llvm::sys::fs::is_directory(FileName) && extension(FileName) == \".so\") {\n               // TCling::IsLoaded is incredibly slow!\n               // No need to check linked libraries, as this function is only invoked\n               // for symbols that cannot be found (neither by dlsym nor in the JIT)."
  }
]