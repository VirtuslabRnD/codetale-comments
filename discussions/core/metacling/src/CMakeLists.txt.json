[
  {
    "id" : "acf42830-2e2d-406a-803c-1c8b359064db",
    "prId" : 1122,
    "prUrl" : "https://github.com/root-project/root/pull/1122#pullrequestreview-66858061",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb25cc38-785c-4162-ac40-3d0ba9ef2e46",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "This looks quite hacky, is it the only way?",
        "createdAt" : "2017-10-03T16:18:08Z",
        "updatedAt" : "2017-10-04T07:15:43Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "a34b845b-7f20-4a4c-a104-8d8fade257bb",
        "parentId" : "fb25cc38-785c-4162-ac40-3d0ba9ef2e46",
        "authorId" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "body" : "Well, there are always several solutions for a given problem, but I would say this is the simplest one",
        "createdAt" : "2017-10-03T18:46:55Z",
        "updatedAt" : "2017-10-04T07:15:43Z",
        "lastEditedBy" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e83324ddcd16dd23b574ac5d6dbdf68bd1d5052",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +45,49 @@      ?printValue@cling@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PB_N@Z\n      ?EvaluateDynamicExpression@internal@runtime@cling@@YA?AVValue@3@PAVInterpreter@3@PAVDynamicExprInfo@123@PAVDeclContext@clang@@@Z\n  )\n  foreach(sym ${cling_exports})\n    set(cling_link_str \"${cling_link_str} /EXPORT:${sym}\")"
  },
  {
    "id" : "6d614ef1-bd4d-40c6-a0da-9326f6579f73",
    "prId" : 1632,
    "prUrl" : "https://github.com/root-project/root/pull/1632#pullrequestreview-96793505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0f4aa53-3c41-4d12-a3a5-0382d9af98b7",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "This is a repetition of what's in `core/dictgen`, you may not need this at all if you use `target_include_directories()` for the dependencies.",
        "createdAt" : "2018-02-15T09:03:25Z",
        "updatedAt" : "2018-02-15T14:05:14Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "fe35e3f6-12f6-4a91-9a97-2a07a656812a",
        "parentId" : "f0f4aa53-3c41-4d12-a3a5-0382d9af98b7",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Sigh... yes. I'd prefer to do this outside this. I want this PR to introduce minimal incremental changes enabling external llvm. Otherwise, I will have too many moving targets :(",
        "createdAt" : "2018-02-15T10:14:05Z",
        "updatedAt" : "2018-02-15T14:05:14Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "98985f05bf86c185a80f0f303be4dda2ee958218",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +11,15 @@# headers from our builtin clang. That's an issue when we are building with bultin_llvm=Off\n# and we have installed clang headers, too.\ninclude_directories(SYSTEM ${CLANG_INCLUDE_DIRS} ${LLVM_INCLUDE_DIRS})\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${CLING_CXXFLAGS}\")\n"
  }
]