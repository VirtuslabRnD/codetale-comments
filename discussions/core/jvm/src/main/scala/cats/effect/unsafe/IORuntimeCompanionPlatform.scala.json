[
  {
    "id" : "611ad1bf-ba89-4bb1-b82f-f0af4ce87355",
    "prId" : 1134,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/1134#pullrequestreview-477892100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89115767-169c-4dee-bf3c-d69d40081818",
        "parentId" : null,
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "👍 ",
        "createdAt" : "2020-08-27T22:27:44Z",
        "updatedAt" : "2020-08-30T22:15:10Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      },
      {
        "id" : "aabb8a12-697c-42f0-954e-07a65384fbde",
        "parentId" : "89115767-169c-4dee-bf3c-d69d40081818",
        "authorId" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "body" : "Nice trick indeed. Thanks.",
        "createdAt" : "2020-08-28T17:05:54Z",
        "updatedAt" : "2020-08-30T22:15:10Z",
        "lastEditedBy" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "412008eb9f64d092ec05f6618aece641293712d6",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +27,31 @@  def createDefaultComputeThreadPool(\n      self: => IORuntime,\n      threadPrefix: String = \"io-compute\"): (WorkStealingThreadPool, () => Unit) = {\n    val threads = math.max(2, Runtime.getRuntime().availableProcessors())\n    val threadPool ="
  },
  {
    "id" : "a90405f5-6bea-4dc0-9bf6-3b0fb0862f33",
    "prId" : 980,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/980#pullrequestreview-454242077",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21aca1ff-b697-40bc-b16f-411d13c32cba",
        "parentId" : null,
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Lol I really never caught the extra hyphen…",
        "createdAt" : "2020-07-23T15:18:27Z",
        "updatedAt" : "2020-07-23T15:22:32Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      }
    ],
    "commit" : "689234f56d43e00ac77d1852c0489380b12e0481",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +24,28 @@private[unsafe] abstract class IORuntimeCompanionPlatform { this: IORuntime.type =>\n  def createDefaultComputeExecutionContext(\n      threadPrefix: String = \"io-compute\"): (ExecutionContext, () => Unit) = {\n    val threadCount = new AtomicInteger(0)\n    val executor = Executors.newFixedThreadPool("
  }
]