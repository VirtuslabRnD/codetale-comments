[
  {
    "id" : "ae1a53b5-f448-452f-9e99-81d6fcba3cb2",
    "prId" : 344,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/344#pullrequestreview-152183063",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f98f3b6b-d7ff-4af8-a6f3-3a7740378d7e",
        "parentId" : null,
        "authorId" : "efc45bfc-463c-4c9e-946d-ad472fabc9f0",
        "body" : "If the pool is non-daemonic, you don’t really need to wait for shutdown. I guess it’s fine as a sample.",
        "createdAt" : "2018-09-04T17:13:25Z",
        "updatedAt" : "2018-09-04T19:51:36Z",
        "lastEditedBy" : "efc45bfc-463c-4c9e-946d-ad472fabc9f0",
        "tags" : [
        ]
      },
      {
        "id" : "9595bc52-30fb-49e1-a7cd-49b30d92d83a",
        "parentId" : "f98f3b6b-d7ff-4af8-a6f3-3a7740378d7e",
        "authorId" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "body" : "You might if you returned an `ExitCode` other than `Success`.  We can't set a deferred exit code a la node.js, so we do a hard exit when the resource is released.\r\n\r\nIt's kind of awkward, now that you mention it: on a non-daemon pool, we'll wait forever on success and wait up to 10 seconds on failure.",
        "createdAt" : "2018-09-04T17:48:43Z",
        "updatedAt" : "2018-09-04T19:51:36Z",
        "lastEditedBy" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "tags" : [
        ]
      },
      {
        "id" : "be3779c0-59fd-469b-984c-050ab60d747f",
        "parentId" : "f98f3b6b-d7ff-4af8-a6f3-3a7740378d7e",
        "authorId" : "efc45bfc-463c-4c9e-946d-ad472fabc9f0",
        "body" : "OK, it's cool.",
        "createdAt" : "2018-09-04T17:50:47Z",
        "updatedAt" : "2018-09-04T19:51:36Z",
        "lastEditedBy" : "efc45bfc-463c-4c9e-946d-ad472fabc9f0",
        "tags" : [
        ]
      },
      {
        "id" : "1b1239e3-2710-43f2-8bbe-75beb09278e1",
        "parentId" : "f98f3b6b-d7ff-4af8-a6f3-3a7740378d7e",
        "authorId" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "body" : "I'd say we make it more consistent by `sys.exit(0)` on success, but we removed that because Spark says, \"Oh, you exited explicitly with success? Have an exit(16) instead!\" :rage:",
        "createdAt" : "2018-09-04T17:53:24Z",
        "updatedAt" : "2018-09-04T19:51:36Z",
        "lastEditedBy" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "tags" : [
        ]
      },
      {
        "id" : "60a10da8-4f55-4993-a70e-4cce21efeeba",
        "parentId" : "f98f3b6b-d7ff-4af8-a6f3-3a7740378d7e",
        "authorId" : "efc45bfc-463c-4c9e-946d-ad472fabc9f0",
        "body" : "Yeah, I remember that problem. Whatever works.",
        "createdAt" : "2018-09-04T17:55:14Z",
        "updatedAt" : "2018-09-04T19:51:36Z",
        "lastEditedBy" : "efc45bfc-463c-4c9e-946d-ad472fabc9f0",
        "tags" : [
        ]
      }
    ],
    "commit" : "427e96640fbad544037ed982997f8ecbee822c92",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@     * Resource.make(SyncIO(Executors.newFixedThreadPool(8)))(pool => SyncIO{\n     *   pool.shutdown()\n     *   pool.awaitTermination(10, TimeUnit.SECONDS)\n     * }).map(ExecutionContext.fromExecutorService)\n     * }}}"
  }
]