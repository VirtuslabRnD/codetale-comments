[
  {
    "id" : "859adf7b-f823-49cf-8e74-348b8ec56aa3",
    "prId" : 1187,
    "prUrl" : "https://github.com/zio/zio/pull/1187#pullrequestreview-264550908",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b82c12f-34e0-4391-89e7-fdee9ff5f47c",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "How long do these tests take? If it's close to the timeout, the test will be flaky on CI.",
        "createdAt" : "2019-07-21T01:00:45Z",
        "updatedAt" : "2019-07-21T19:11:48Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      },
      {
        "id" : "2c796e95-d509-4caa-b7e5-9ca2bd041aa6",
        "parentId" : "4b82c12f-34e0-4391-89e7-fdee9ff5f47c",
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "The one with a collection size of 100,000 takes about 2 seconds on my local machine. The challenge here is that you need quite a large collection size to verify the improvement from the previous implementation. On my local machine the previous implementation would work on collection sizes up to 50,000. Not sure how to test this more efficiently.",
        "createdAt" : "2019-07-21T19:25:36Z",
        "updatedAt" : "2019-07-21T19:25:36Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e26553c4d24d1d442528c846a02e9ce8fae6f7c",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +585,589 @@  }\n\n  def testForeachParN_Threads = {\n    val n   = 10L\n    val seq = 0 to 100000"
  },
  {
    "id" : "ea5d8796-f7f8-4502-89ee-23511629e3db",
    "prId" : 1187,
    "prUrl" : "https://github.com/zio/zio/pull/1187#pullrequestreview-264550757",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "410e04bc-7d97-4a34-9565-a2a41cedafee",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "This timeout may result in a flaky test; it's also half a second which is long to wait for the happy path.",
        "createdAt" : "2019-07-21T01:03:00Z",
        "updatedAt" : "2019-07-21T19:11:48Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      },
      {
        "id" : "8a2d7491-5e8b-4874-81d3-ac490a26e17f",
        "parentId" : "410e04bc-7d97-4a34-9565-a2a41cedafee",
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "I refactored this test to avoid using timeouts.",
        "createdAt" : "2019-07-21T19:22:41Z",
        "updatedAt" : "2019-07-21T19:22:41Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e26553c4d24d1d442528c846a02e9ce8fae6f7c",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +616,620 @@    )\n    val io = ZIO.foreachParN(4)(actions)(a => a)\n    unsafeRun(io.either) must_=== Left(\"C\")\n  }\n}"
  },
  {
    "id" : "68725d81-e029-45fa-8318-1f63374f31da",
    "prId" : 1175,
    "prUrl" : "https://github.com/zio/zio/pull/1175#pullrequestreview-261535231",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "556671bf-5156-4299-a30b-bcb115688157",
        "parentId" : null,
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "Does this work without annotating `task` as `Task[Int]`?",
        "createdAt" : "2019-07-12T18:44:36Z",
        "updatedAt" : "2019-07-14T18:42:47Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      },
      {
        "id" : "cff82d34-7fd9-429a-b331-c485530e3be5",
        "parentId" : "556671bf-5156-4299-a30b-bcb115688157",
        "authorId" : "dc528136-aa25-410d-8dbb-cbbbe7526c66",
        "body" : "No.\r\nThe return type by the compiler is ```[B, C, E1 >:NoSuchElementException]zio.ZIO[Any,E1,B]```. ðŸ¤” \r\n\r\nalso, changing the signature to \r\n```scala\r\ndef leftOrFailException[B, C](\r\n    implicit ev: A <:< Either[B, C]\r\n  ): ZIO[R, NoSuchElementException, B]\r\n```\r\n\r\ndoes not work too.",
        "createdAt" : "2019-07-12T19:46:49Z",
        "updatedAt" : "2019-07-14T18:42:47Z",
        "lastEditedBy" : "dc528136-aa25-410d-8dbb-cbbbe7526c66",
        "tags" : [
        ]
      },
      {
        "id" : "f84175c7-58fb-47c9-adca-be806a329962",
        "parentId" : "556671bf-5156-4299-a30b-bcb115688157",
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "Actually, I tested and it looks like it infers properly - scalac says it's a `ZIO[Any, NoSuchElementException, Nothing]` which is accurate.",
        "createdAt" : "2019-07-13T09:52:36Z",
        "updatedAt" : "2019-07-14T18:42:47Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3b5acd4a2feae65a3ad9872705654ab391e1195",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +331,335 @@\n  def testLeftOrFailExceptionOnRightValue = {\n    val task: Task[Int] = ZIO.succeed(Right(2)).leftOrFailException\n    unsafeRun(task) must throwA[FiberFailure]\n  }"
  }
]