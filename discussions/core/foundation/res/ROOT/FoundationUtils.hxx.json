[
  {
    "id" : "0a299939-36e2-4a80-bf16-ec07f2af0642",
    "prId" : 3850,
    "prUrl" : "https://github.com/root-project/root/pull/3850#pullrequestreview-255647518",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01f2da90-9bef-4a18-96a5-657256d99a9c",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Can you give an example? I think that would make the interface a lot clearer. Is this:\r\n```\r\nE.g. for path being \"/a/b/c/d\" and base \"/a/b\", returns \"c/d\"\r\n```",
        "createdAt" : "2019-06-28T08:36:34Z",
        "updatedAt" : "2019-07-01T10:55:04Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "46939bca420800c5f657d26363f6f3843b4d3ce5",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@   ///\\param isBuildingROOT - if true, it converts module directories such as\n   ///                        core/base/inc/ to include/\n   std::string MakePathRelative(const std::string &path, const std::string &base,\n                                bool isBuildingROOT = false);\n"
  },
  {
    "id" : "ca85c71c-7a37-4839-b383-130122bc434e",
    "prId" : 3850,
    "prUrl" : "https://github.com/root-project/root/pull/3850#pullrequestreview-255647518",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ccbeda31-f3b7-495d-ad9d-66e6a3825ac6",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Can you document the effect that this parameter have?",
        "createdAt" : "2019-06-28T08:36:48Z",
        "updatedAt" : "2019-07-01T10:55:04Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "46939bca420800c5f657d26363f6f3843b4d3ce5",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@   ///                        core/base/inc/ to include/\n   std::string MakePathRelative(const std::string &path, const std::string &base,\n                                bool isBuildingROOT = false);\n\n   } // namespace FoundationUtils"
  },
  {
    "id" : "1c328041-c64a-4db4-86aa-105fb512ad4f",
    "prId" : 3850,
    "prUrl" : "https://github.com/root-project/root/pull/3850#pullrequestreview-255883764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6dc3ec38-d451-488f-99ab-1f7aceb9f678",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Maybe `PathUtils.hxx` given its current content?",
        "createdAt" : "2019-06-28T08:37:47Z",
        "updatedAt" : "2019-07-01T10:55:04Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "5259bb4c-1635-4298-8e4e-4d09afdd6139",
        "parentId" : "6dc3ec38-d451-488f-99ab-1f7aceb9f678",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "I intended to be used for more general utilities. I’d prefer the namespace name to be more generic as it’d be more difficult to change it later. ",
        "createdAt" : "2019-06-28T17:18:54Z",
        "updatedAt" : "2019-07-01T10:55:04Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "46939bca420800c5f657d26363f6f3843b4d3ce5",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +23,27 @@\nnamespace ROOT {\nnamespace FoundationUtils {\n\n   ///\\returns the $PWD."
  },
  {
    "id" : "0092f015-3536-428c-91c5-34994f51e33d",
    "prId" : 4553,
    "prUrl" : "https://github.com/root-project/root/pull/4553#pullrequestreview-302790705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3dd12772-dfb2-4157-b5ea-6c9e59c4ba4f",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "at least in the past, we had challenge on windows with inline function and static objects.",
        "createdAt" : "2019-10-16T13:41:44Z",
        "updatedAt" : "2019-10-17T10:04:46Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "2c66c016-c4b6-47ce-8713-55c27f92d135",
        "parentId" : "3dd12772-dfb2-4157-b5ea-6c9e59c4ba4f",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Would the bots catch it?",
        "createdAt" : "2019-10-16T18:34:49Z",
        "updatedAt" : "2019-10-17T10:04:46Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "53af298c10e64f40c1e9c2da33388563e2df2452",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +43,47 @@   inline const std::string& GetPathSeparator() {\n#ifdef WIN32\n      static const std::string gPathSeparator (\"\\\\\");\n#else\n      static const std::string gPathSeparator (\"/\");"
  },
  {
    "id" : "d840c531-628f-4628-ae72-a4c9d6ff395c",
    "prId" : 4641,
    "prUrl" : "https://github.com/root-project/root/pull/4641#pullrequestreview-322452620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "123efb53-2c1e-40a0-8a30-ce98e2bf6cc8",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "How of curiosity, why not use a constexpr (and possibly a var rather than function)?",
        "createdAt" : "2019-11-25T16:56:30Z",
        "updatedAt" : "2019-11-25T16:56:30Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "5826794a-09c5-44d1-ab45-7ba6505cb2e4",
        "parentId" : "123efb53-2c1e-40a0-8a30-ce98e2bf6cc8",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Mostly for consistency with the function above. I guess both can become constexpr...",
        "createdAt" : "2019-11-25T17:27:26Z",
        "updatedAt" : "2019-11-25T17:27:26Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "240fd0e3d72c4902cbf68e7ed60f6972567c7368",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +52,56 @@   ///\\returns the path separator for the PATH environment variable on the\n   /// platform.\n   inline const char& GetEnvPathSeparator() {\n#ifdef WIN32\n      static const char gEnvPathSeparator = ';';"
  }
]