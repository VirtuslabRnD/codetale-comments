[
  {
    "id" : "ca6f6057-d7d9-4392-b041-1fd63d6f3381",
    "prId" : 6301,
    "prUrl" : "https://github.com/root-project/root/pull/6301#pullrequestreview-488707411",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48358780-1169-4a3a-a241-a040f9534b0d",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "we know this only breaks every once in a while, can we run this logic e.g. 100 times in a loop?",
        "createdAt" : "2020-09-07T07:31:13Z",
        "updatedAt" : "2020-09-17T20:54:21Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "f531032b-4d6d-4d3c-b723-dc692e4c3e62",
        "parentId" : "48358780-1169-4a3a-a241-a040f9534b0d",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "@oshadura Is there a way to have ctest pass ```--gtest_reapeat=100``` to the test executable?",
        "createdAt" : "2020-09-10T21:22:49Z",
        "updatedAt" : "2020-09-17T20:54:21Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "9ecd1e36-da57-474d-8355-54c6fe44d666",
        "parentId" : "48358780-1169-4a3a-a241-a040f9534b0d",
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "Sorry I didn't see this before...There are two approaches:\r\n\r\n```\r\n$ foo_test --gtest_repeat=1000\r\nRepeat foo_test 1000 times and don't stop at failures.\r\n\r\n$ foo_test --gtest_repeat=1000 --gtest_break_on_failure\r\nRepeat foo_test 1000 times, stopping at the first failure.  This\r\nis especially useful when running under a debugger: when the test\r\nfails, it will drop into the debugger and you can then inspect\r\nvariables and stacks.\r\n```\r\nWhich do you prefer? For example it will be easy just adding here argument `REPEAT` https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L1685",
        "createdAt" : "2020-09-14T15:10:47Z",
        "updatedAt" : "2020-09-17T20:54:21Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      },
      {
        "id" : "4247e432-e165-4012-a25b-03710ddbffb1",
        "parentId" : "48358780-1169-4a3a-a241-a040f9534b0d",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "In this case `--gtest_repeat=1000 --gtest_break_on_failure` but we probably need to allow for customizing the number of repetition.",
        "createdAt" : "2020-09-14T15:17:36Z",
        "updatedAt" : "2020-09-17T20:54:21Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "f28ca452-61fc-4c48-870d-5e130c5023b4",
        "parentId" : "48358780-1169-4a3a-a241-a040f9534b0d",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "in this particular case can't we just put a literal for loop around the test body?",
        "createdAt" : "2020-09-15T11:35:32Z",
        "updatedAt" : "2020-09-17T20:54:21Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "272d4cca-d2f8-4e2b-bc6e-34ca2c31b442",
        "parentId" : "48358780-1169-4a3a-a241-a040f9534b0d",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "I find it more expressive and vaguely more practical when debugging to use the gtest feature (for better or worse it also just repeat all the tests :) ).",
        "createdAt" : "2020-09-15T13:53:05Z",
        "updatedAt" : "2020-09-17T20:54:21Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "fcc04e24a2617d92ad238a1986628b39469a72e0",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +47,51 @@   for (unsigned int i = 0; i < nThreads; ++i) {\n      threads.emplace_back([&, i] { func(i); });\n   }\n   std::for_each(threads.begin(), threads.end(), [](std::thread &thr) { thr.join(); });\n#endif"
  }
]