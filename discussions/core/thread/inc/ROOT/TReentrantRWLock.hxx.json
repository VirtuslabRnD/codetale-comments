[
  {
    "id" : "37ea2962-e2cd-43fa-8f6b-c69f1a755be4",
    "prId" : 676,
    "prUrl" : "https://github.com/root-project/root/pull/676#pullrequestreview-45906061",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50eedc4e-a920-4198-b243-e4b65ef26b63",
        "parentId" : null,
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "Nice way of leaving the door open to other future implementations of mutexes.",
        "createdAt" : "2017-06-23T06:13:46Z",
        "updatedAt" : "2017-06-28T10:14:00Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      }
    ],
    "commit" : "3319b743b6300c04221a84c1b09abc3128da28fc",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +117,121 @@} // Internal\n\ntemplate <typename MutexT = ROOT::TSpinMutex, typename RecurseCountsT = Internal::RecurseCounts>\nclass TReentrantRWLock {\nprivate:"
  },
  {
    "id" : "85210d53-2dcb-493f-84c3-3b0b0f7d7616",
    "prId" : 676,
    "prUrl" : "https://github.com/root-project/root/pull/676#pullrequestreview-46036834",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21f81594-bb1a-49f3-8394-a469200b2e49",
        "parentId" : null,
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "Do negative values here have a particular meaining?",
        "createdAt" : "2017-06-23T06:14:28Z",
        "updatedAt" : "2017-06-28T10:14:00Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      },
      {
        "id" : "37cdc000-5f66-4d98-9357-78fd70f158eb",
        "parentId" : "21f81594-bb1a-49f3-8394-a469200b2e49",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "This is similar to the existing TRWSpinLock and is indeed debatable.  The 'advantage' is that in case of 'coding error' (decrementing a zero), the consequence is less dramatic (for if statement using comparison).",
        "createdAt" : "2017-06-23T16:50:35Z",
        "updatedAt" : "2017-06-28T10:14:00Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "3319b743b6300c04221a84c1b09abc3128da28fc",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +123,127 @@   std::atomic<int> fReaders;           ///<! Number of readers\n   std::atomic<int> fReaderReservation; ///<! A reader wants access\n   std::atomic<int> fWriterReservation; ///<! A writer wants access\n   std::atomic<bool> fWriter;           ///<! Is there a writer?\n   MutexT fMutex;                       ///<! RWlock internal mutex"
  }
]