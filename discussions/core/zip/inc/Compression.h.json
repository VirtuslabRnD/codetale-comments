[
  {
    "id" : "79266682-b41c-460c-8b9c-a2e654fbf66a",
    "prId" : 1637,
    "prUrl" : "https://github.com/root-project/root/pull/1637#pullrequestreview-97588765",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c56e4ed4-0ebd-4e0c-8415-e31a3f2e4ad4",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "It might be nice to add a\r\n```\r\nconstexpr const int kDefaultCompressionLevel[kUndefinedCompressionAlgorithm] = {-1,  6, 7, ?, 4};\r\n```\r\nand use that in the code (instead of the current default values that I suppose we have, of some sort, in one or more places?)\r\n\r\n@pcanal @bbockelm what's your take?",
        "createdAt" : "2018-02-16T20:18:57Z",
        "updatedAt" : "2018-03-14T12:59:27Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "07f8a54b-f3ca-4d32-a29b-708e1e288468",
        "parentId" : "c56e4ed4-0ebd-4e0c-8415-e31a3f2e4ad4",
        "authorId" : "f69dad7b-ed29-4b5b-abf6-8cc0eaed5055",
        "body" : "I think that's a great way to go!\r\n\r\nTo be honest, I'm not even sure of all the different places these \"magic integers\" can be found -- discovering and centralizing would be very useful.\r\n\r\nThat said, the other thing we need to do is to minimize use of our bizarre `106` syntax which makes the compression subsystem inaccessible to everyone but experts.",
        "createdAt" : "2018-02-19T02:14:01Z",
        "updatedAt" : "2018-03-14T12:59:27Z",
        "lastEditedBy" : "f69dad7b-ed29-4b5b-abf6-8cc0eaed5055",
        "tags" : [
        ]
      },
      {
        "id" : "20145bf3-48be-460b-8dc9-96c434c0d6ef",
        "parentId" : "c56e4ed4-0ebd-4e0c-8415-e31a3f2e4ad4",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Yes, I agree :)",
        "createdAt" : "2018-02-19T15:55:01Z",
        "updatedAt" : "2018-03-14T12:59:27Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d0c57413fbf976ae9864674b78a0e89d81dedce",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +39,43 @@///   [207 - 208]\n///  - LZ4 is recommended to be used with compression level 4 [404]\n\n\nenum ECompressionAlgorithm {"
  },
  {
    "id" : "c4cc5abb-b35b-43de-9c2e-5203558a1514",
    "prId" : 2902,
    "prUrl" : "https://github.com/root-project/root/pull/2902#pullrequestreview-175832127",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5c3e25d-1f4d-43ee-a1cd-5b0cc951db22",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Can we please use enum classes, even if it means duplicating `ECompressionAlgorithm`? The values will read much nicer, e.g. `ECompressionLevel::kDefaultLZ4` instead of `kDefaultLZ4`.\r\n\r\nWe should them make use of the enum class to shorten identifiers, e.g. `ECompressionLevel::kInherit`.\r\n\r\nThe *main* reason to use enum classes is that they force us to have something typesafe (can't pass level to algo). Maybe that's also the strongest argument against them, but I really hope not :-)\r\n\r\nAll of that must either *not* happen or before the v6.16 release.",
        "createdAt" : "2018-11-08T15:27:34Z",
        "updatedAt" : "2018-11-08T15:28:44Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "fb4030e5-4194-463a-a3c5-dce8fa63fc34",
        "parentId" : "e5c3e25d-1f4d-43ee-a1cd-5b0cc951db22",
        "authorId" : "f69dad7b-ed29-4b5b-abf6-8cc0eaed5055",
        "body" : "Hi @Axel-Naumann -\r\n\r\nIndeed, this is the goal.  Here's how we approached it in the prototype branch:\r\n\r\nhttps://github.com/bbockelm/root/blob/use_global_compression_defaults_example/core/zip/inc/Compression.h#L83\r\n\r\nThe class-based approach allows a gradual transition to type safety (further, it can be done without breaking ABI or API!).  By allowing implicit conversion -- but marking these as deprecated -- users will get a warning when they use an integer instead of specifying a proper enum member.\r\n\r\nBrian",
        "createdAt" : "2018-11-16T14:48:22Z",
        "updatedAt" : "2018-11-16T14:48:23Z",
        "lastEditedBy" : "f69dad7b-ed29-4b5b-abf6-8cc0eaed5055",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1879a1471ce5a783295c29afb6b85ebcd8780e4",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +59,63 @@};\n\nenum ECompressionLevel {\n   /// Some objects use this value to denote that the compression algorithm\n   /// should be inherited from the parent object"
  }
]