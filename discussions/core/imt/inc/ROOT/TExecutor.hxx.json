[
  {
    "id" : "2c27d10e-2e1d-4a75-9801-fde00c8955d9",
    "prId" : 6327,
    "prUrl" : "https://github.com/root-project/root/pull/6327#pullrequestreview-527289000",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06f11e60-2b9d-4a50-97d0-ac1afa2bce1d",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Why is this needed?",
        "createdAt" : "2020-10-12T12:06:54Z",
        "updatedAt" : "2021-01-07T14:38:45Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "5708df02-1ff9-4cd4-930c-25888e0245ee",
        "parentId" : "06f11e60-2b9d-4a50-97d0-ac1afa2bce1d",
        "authorId" : "eb1cc629-c047-424e-bc0f-ae19ac8ba815",
        "body" : "@Axel-Naumann Do you mean the #define? I am not sure if they are still necessary or not",
        "createdAt" : "2020-11-10T14:58:33Z",
        "updatedAt" : "2021-01-07T14:38:45Z",
        "lastEditedBy" : "eb1cc629-c047-424e-bc0f-ae19ac8ba815",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd9bb54fda49f27cbb93130686b4d2cf0471f63c",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +14,18 @@#include \"ROOT/RConfig.hxx\"\n#include \"ROOT/RMakeUnique.hxx\"\n#include \"ROOT/TExecutorCRTP.hxx\"\n#include \"ROOT/TSeq.hxx\"\n#include \"ROOT/TSequentialExecutor.hxx\""
  },
  {
    "id" : "c8c8c3b5-9602-46d2-91dc-3c2ee910424b",
    "prId" : 6327,
    "prUrl" : "https://github.com/root-project/root/pull/6327#pullrequestreview-506548048",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9449684a-91a8-482d-a9c9-c3e1d61d86e7",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Where is `R__USE_IMT` defined, do you need to `#include \"ROOT/RConfig.hxx\"` or something?",
        "createdAt" : "2020-10-12T12:08:09Z",
        "updatedAt" : "2021-01-07T14:38:45Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd9bb54fda49f27cbb93130686b4d2cf0471f63c",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +17,21 @@#include \"ROOT/TSeq.hxx\"\n#include \"ROOT/TSequentialExecutor.hxx\"\n#ifdef R__USE_IMT\n#include \"ROOT/TThreadExecutor.hxx\"\n#endif"
  },
  {
    "id" : "02053cd4-b435-4dca-8ba4-a61ba6244f0c",
    "prId" : 6327,
    "prUrl" : "https://github.com/root-project/root/pull/6327#pullrequestreview-506633621",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4b890ff-f4ed-46f7-88e6-09dcdeff4d0d",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Why is this needed?",
        "createdAt" : "2020-10-12T12:22:57Z",
        "updatedAt" : "2021-01-07T14:38:45Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "195d578a-510f-42f8-b731-5025a97d061b",
        "parentId" : "e4b890ff-f4ed-46f7-88e6-09dcdeff4d0d",
        "authorId" : "eb1cc629-c047-424e-bc0f-ae19ac8ba815",
        "body" : "This is the only constructor that allows you to pass an explicit execution policy",
        "createdAt" : "2020-10-12T13:45:57Z",
        "updatedAt" : "2021-01-07T14:38:45Z",
        "lastEditedBy" : "eb1cc629-c047-424e-bc0f-ae19ac8ba815",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd9bb54fda49f27cbb93130686b4d2cf0471f63c",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +110,114 @@   /// \\param nWorkers [optional] Number of parallel workers, only taken into account if the execution policy is kMultiThread\n   explicit TExecutor(ROOT::EExecutionPolicy execPolicy, unsigned nWorkers = 0) : fExecPolicy(execPolicy) {\n      fExecPolicy = execPolicy;\n      switch(fExecPolicy) {\n         case ROOT::EExecutionPolicy::kSequential:"
  },
  {
    "id" : "47d90d1b-2cc6-4add-91fc-bc04021af747",
    "prId" : 6327,
    "prUrl" : "https://github.com/root-project/root/pull/6327#pullrequestreview-535469652",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e215db8c-1308-4ac4-bd04-d8d64c269802",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "these overloads that take `redfunc` and `nChunks` need at least to print a warning if `fExecPolicy != kMultiThread`",
        "createdAt" : "2020-11-18T13:50:26Z",
        "updatedAt" : "2021-01-07T14:38:45Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "5ebc9ba3-94a4-4680-b8a9-c2abd0e70fd3",
        "parentId" : "e215db8c-1308-4ac4-bd04-d8d64c269802",
        "authorId" : "eb1cc629-c047-424e-bc0f-ae19ac8ba815",
        "body" : "I didn't print it because of the case where you want to chunk if possible, as it would create some noise. Would if be enough documenting it?",
        "createdAt" : "2020-11-20T13:16:11Z",
        "updatedAt" : "2021-01-07T14:38:45Z",
        "lastEditedBy" : "eb1cc629-c047-424e-bc0f-ae19ac8ba815",
        "tags" : [
        ]
      },
      {
        "id" : "b182a0b4-f8e3-4613-a1d0-f128ee4b94c9",
        "parentId" : "e215db8c-1308-4ac4-bd04-d8d64c269802",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "in giant red letters :smile: ",
        "createdAt" : "2020-11-20T14:23:29Z",
        "updatedAt" : "2021-01-07T14:38:45Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd9bb54fda49f27cbb93130686b4d2cf0471f63c",
    "line" : 273,
    "diffHunk" : "@@ -1,1 +271,275 @@      return fThreadExecutor->Map(func, nTimes, redfunc, nChunks);\n   }\n   return Map(func, nTimes);\n}\n"
  },
  {
    "id" : "5eb16331-244a-4829-8d11-c0dc33683114",
    "prId" : 6327,
    "prUrl" : "https://github.com/root-project/root/pull/6327#pullrequestreview-533565616",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f70ae18-2585-4da9-99d6-88d77e692765",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "this seems wrong: what if the argument of the map is actually a `vector<unsigned>`?",
        "createdAt" : "2020-11-18T13:52:55Z",
        "updatedAt" : "2021-01-07T14:38:45Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "87cffa48-4f89-42d5-a004-485a0ff8aef7",
        "parentId" : "9f70ae18-2585-4da9-99d6-88d77e692765",
        "authorId" : "eb1cc629-c047-424e-bc0f-ae19ac8ba815",
        "body" : "Then we have the general template case (two lines above) , where T=vector<unsigned>. \r\n\r\nThis struct is only used in `ResolveExecutorAndMap` and there you can see clearly. The other template parameter, F, is always the function. ",
        "createdAt" : "2020-11-18T15:18:05Z",
        "updatedAt" : "2021-01-07T14:38:45Z",
        "lastEditedBy" : "eb1cc629-c047-424e-bc0f-ae19ac8ba815",
        "tags" : [
        ]
      },
      {
        "id" : "c91e51a5-b26a-411c-b01c-202dbb6a8c29",
        "parentId" : "9f70ae18-2585-4da9-99d6-88d77e692765",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "aaaah, please give it a better name than T if it's constrained to always be a container! (I see it now, you even access ::value_type, but missed it on the first pass)",
        "createdAt" : "2020-11-18T15:30:55Z",
        "updatedAt" : "2021-01-07T14:38:45Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd9bb54fda49f27cbb93130686b4d2cf0471f63c",
    "line" : 213,
    "diffHunk" : "@@ -1,1 +211,215 @@   struct MapRetType<F, unsigned> {\n      using type = typename std::result_of<F()>::type;\n   };\n\n"
  }
]