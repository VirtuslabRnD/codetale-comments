[
  {
    "id" : "8bf21cb7-446d-4563-afce-1273638a00f2",
    "prId" : 969,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/969#pullrequestreview-452683272",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e08a6bae-7bc1-4924-b2b7-bb6a6c745cf9",
        "parentId" : null,
        "authorId" : "0a38d672-e19e-4f2e-a3f4-199427d7c858",
        "body" : "what's the randomness good for here? what happens if `Random.nextInt()` returns the same value twice?",
        "createdAt" : "2020-07-21T11:57:54Z",
        "updatedAt" : "2020-07-21T20:02:41Z",
        "lastEditedBy" : "0a38d672-e19e-4f2e-a3f4-199427d7c858",
        "tags" : [
        ]
      },
      {
        "id" : "a5cd8df8-bdbc-4282-bf5a-59d9f87f3cfa",
        "parentId" : "e08a6bae-7bc1-4924-b2b7-bb6a6c745cf9",
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "I just ported it directly from the JavaScript polyfill. The point to the randomness is to cheaply ensure uniqueness. This is only done once (not per yield), so it shouldn't matter much. We *need* a unique message prefix for the executor, otherwise we won't be able to efficiently rule out `postMessage` events that we ourselves didn't post.",
        "createdAt" : "2020-07-21T16:22:53Z",
        "updatedAt" : "2020-07-21T20:02:41Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      },
      {
        "id" : "b608b6ff-1789-4589-9cc9-b3ff81959d9f",
        "parentId" : "e08a6bae-7bc1-4924-b2b7-bb6a6c745cf9",
        "authorId" : "0a38d672-e19e-4f2e-a3f4-199427d7c858",
        "body" : "ok, so it's possible to cause problems, but quite unlikely. i think this deserves a comment in the code explaining why it's there and why it's unlikely to cause problems. sorry for being picky, but i've seen too many randomly generated \"unique\" identifiers where the code in question was actually executed a bit more often than expected.",
        "createdAt" : "2020-07-21T17:09:38Z",
        "updatedAt" : "2020-07-21T20:02:41Z",
        "lastEditedBy" : "0a38d672-e19e-4f2e-a3f4-199427d7c858",
        "tags" : [
        ]
      },
      {
        "id" : "7c8cd8f6-98d8-4023-8b7c-d1e76c368356",
        "parentId" : "e08a6bae-7bc1-4924-b2b7-bb6a6c745cf9",
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Not nit-picky at all! This is good review feedback. I'll comment it.",
        "createdAt" : "2020-07-21T17:35:54Z",
        "updatedAt" : "2020-07-21T20:02:41Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      }
    ],
    "commit" : "79526e5f20a2b511496e32d4e74861c69a8d57b0",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +88,92 @@        // would pick it up above unless they init us first. Either way, the odds of\n        // collision here are microscopic.\n        val messagePrefix = \"setImmediate$\" + Random.nextInt() + \"$\"\n\n        def onGlobalMessage(event: js.Dynamic): Unit = {"
  }
]