[
  {
    "id" : "661525cb-c821-4509-9588-097ca1e5d8d9",
    "prId" : 6377,
    "prUrl" : "https://github.com/root-project/root/pull/6377#pullrequestreview-503043841",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "daedee35-095e-4823-a43b-e855c93e36cc",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "```suggestion\r\n   TObject *result = THashList::FindObject(name);\r\n   if (result)\r\n       return result;\r\n       \r\n   R__LOCKGUARD(gInterpreterMutex);\r\n```\r\nOne of the idea is to avoid taking the global lock if the information is already loaded.  See `TDataMember::Find` ",
        "createdAt" : "2020-10-05T16:43:56Z",
        "updatedAt" : "2020-10-07T13:55:56Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "11cffe6c-d378-4372-8b0a-3a8804d81392",
        "parentId" : "daedee35-095e-4823-a43b-e855c93e36cc",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "See https://github.com/root-project/root/issues/6566",
        "createdAt" : "2020-10-06T14:00:49Z",
        "updatedAt" : "2020-10-07T13:55:56Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "52385242-850e-4282-9543-7721f6213a26",
        "parentId" : "daedee35-095e-4823-a43b-e855c93e36cc",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Indeed, I mis-remembered whether the access to fIds and its content was made thread-safe by itself ... and it is not.",
        "createdAt" : "2020-10-06T14:44:20Z",
        "updatedAt" : "2020-10-07T13:55:56Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "38ab224cc34bdbd00547e4ab17a385c3a40438b9",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +218,222 @@   if (!id) return 0;\n\n   R__LOCKGUARD(gInterpreterMutex);\n   //need the Find and possible Add to be one atomic operation\n   TDictionary *dm = Find(id);"
  }
]