[
  {
    "id" : "3c7b677e-5252-4fe0-a571-55d2925356eb",
    "prId" : 907,
    "prUrl" : "https://github.com/root-project/root/pull/907#pullrequestreview-60115231",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "747f96f5-5697-405f-88b0-c7f471f84d81",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Not essential but I suppose the coding convention would say XXH64Hash_t or Xxh64Hash_t.",
        "createdAt" : "2017-09-01T12:01:15Z",
        "updatedAt" : "2017-09-01T12:01:15Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "499eb5ffbef8ebf30442e34aa938a8e0beefe87b",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +21,25 @@// Pulled from liblz4; upstream library explicitly exposes the symbol but the default build\n// excludes the header.\ntypedef unsigned long long XXH64_hash_t;\ntypedef struct {\n   unsigned char digest[8];"
  },
  {
    "id" : "baa77c24-e496-4959-9774-dede1b17210e",
    "prId" : 907,
    "prUrl" : "https://github.com/root-project/root/pull/907#pullrequestreview-60115299",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e22e48f3-6d9d-4316-9c21-dc7bb7188dee",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Not essential but I suppose the coding convention would say XXH64Canonical_t or Xxh64Canonical_t.",
        "createdAt" : "2017-09-01T12:01:35Z",
        "updatedAt" : "2017-09-01T12:08:19Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "499eb5ffbef8ebf30442e34aa938a8e0beefe87b",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +24,28 @@typedef struct {\n   unsigned char digest[8];\n} XXH64_canonical_t;\nextern \"C\" XXH64_hash_t LZ4_XXH64(const void *input, size_t length, unsigned long long seed);\nextern \"C\" void LZ4_XXH64_canonicalFromHash(XXH64_canonical_t *dst, XXH64_hash_t hash);"
  },
  {
    "id" : "655e8e27-61c1-4f8e-89cd-173ccf1fd872",
    "prId" : 907,
    "prUrl" : "https://github.com/root-project/root/pull/907#pullrequestreview-60115299",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "446eb3b7-9317-4224-99c2-0dcf311db40d",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Those seems to be copy/paste from lz4 headers .. they should be explicitly commented as such (this actually might invalidate also the first couple of comments).\r\n\r\nAn alternative is to provide 'small' wrapper functions so that the real header can be used (in the source file).  However this might have an unacceptable performance penalty ...",
        "createdAt" : "2017-09-01T12:04:43Z",
        "updatedAt" : "2017-09-01T12:08:19Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "499eb5ffbef8ebf30442e34aa938a8e0beefe87b",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@   unsigned char digest[8];\n} XXH64_canonical_t;\nextern \"C\" XXH64_hash_t LZ4_XXH64(const void *input, size_t length, unsigned long long seed);\nextern \"C\" void LZ4_XXH64_canonicalFromHash(XXH64_canonical_t *dst, XXH64_hash_t hash);\nextern \"C\" XXH64_hash_t LZ4_XXH64_hashFromCanonical(const XXH64_canonical_t *src);"
  },
  {
    "id" : "c4d6f533-91b5-41c0-be1b-eabd586589b8",
    "prId" : 907,
    "prUrl" : "https://github.com/root-project/root/pull/907#pullrequestreview-60115299",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb4fc92c-7ec1-40b6-85d2-3cee49a7e9a6",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "That's unfortunate (but likely unavoidable :( ) that we can not use the ROOT error printing here ... this means that the frameworks can not intercept those messages.",
        "createdAt" : "2017-09-01T12:06:55Z",
        "updatedAt" : "2017-09-01T12:08:19Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "499eb5ffbef8ebf30442e34aa938a8e0beefe87b",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +106,110 @@   }\n   if (R__unlikely(src[2] != LZ4_version)) {\n      fprintf(stderr,\n              \"R__unzipLZ4: This version of LZ4 is incompatible with the on-disk version (got %d; expected %d).\\n\",\n              src[2], LZ4_version);"
  }
]