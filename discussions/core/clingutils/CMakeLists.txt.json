[
  {
    "id" : "84322b50-192c-4ccc-b11b-e410da84582c",
    "prId" : 1632,
    "prUrl" : "https://github.com/root-project/root/pull/1632#pullrequestreview-96799225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d3b6d40-104f-49a9-ad1c-ee2ad3cb1aaa",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Could you please try to use `target_include_directories()` as much as possible, rather than just `include_directories()`? This makes it easier to inherit target properties in dependencies, and it will be a necessary step in upgrading our build system later. If `target_include_directories()` doesn't work for some reason, then you can use `include_directories()`, but please let me know the reason so I can plan how to fix it.",
        "createdAt" : "2018-02-15T08:58:33Z",
        "updatedAt" : "2018-02-15T14:05:14Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "ba6ba873-f3a9-4125-ac88-104cad24ae25",
        "parentId" : "1d3b6d40-104f-49a9-ad1c-ee2ad3cb1aaa",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Sure. I'd prefer to do this outside of this PR.",
        "createdAt" : "2018-02-15T09:52:43Z",
        "updatedAt" : "2018-02-15T14:05:14Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "6046784b-cebf-4ffa-9ab3-73796a06d1c0",
        "parentId" : "1d3b6d40-104f-49a9-ad1c-ee2ad3cb1aaa",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "It would be nice to do it using `target_include_directories()` directly, but if you want to do it later, it's fine. However, since this is repeated in multiple subdirectories, it might make more sense to just do it one directory up instead.",
        "createdAt" : "2018-02-15T10:30:00Z",
        "updatedAt" : "2018-02-15T14:05:14Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "f3c7715b-e2ce-44d1-a080-2784faedfcfa",
        "parentId" : "1d3b6d40-104f-49a9-ad1c-ee2ad3cb1aaa",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Sure, that's a good idea.\r\n",
        "createdAt" : "2018-02-15T10:33:15Z",
        "updatedAt" : "2018-02-15T14:05:14Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "98985f05bf86c185a80f0f303be4dda2ee958218",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +17,21 @@# headers from our builtin clang. That's an issue when we are building with bultin_llvm=Off\n# and we have installed clang headers, too.\ninclude_directories(SYSTEM ${CLANG_INCLUDE_DIRS} ${LLVM_INCLUDE_DIRS})\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${CLING_CXXFLAGS}\")\n"
  },
  {
    "id" : "c422ce33-9a5a-4e9f-9ff5-7295aac04e03",
    "prId" : 3404,
    "prUrl" : "https://github.com/root-project/root/pull/3404#pullrequestreview-204683005",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49928f52-992e-41d3-a46c-32ae211cc7e7",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Isn't this a good case for sticking the includes into the `LinkDef.h` with `#pragma extra_include`?",
        "createdAt" : "2019-02-15T13:57:55Z",
        "updatedAt" : "2019-03-08T12:05:38Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "cb91b4c7-9ec2-493c-bab1-6361b3df1425",
        "parentId" : "49928f52-992e-41d3-a46c-32ae211cc7e7",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "As I explained that needs extra work on rootcling's side before it should be used. But then yes, possibly!",
        "createdAt" : "2019-02-18T09:16:06Z",
        "updatedAt" : "2019-03-08T12:05:38Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed5740c6c0265805eac4a385ef23526b8ad5e5eb",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +58,62 @@                                STAGE1\n                                NODEPHEADERS ${header}\n                                LINKDEF src/${dict}Linkdef.h\n                                DEPENDENCIES Core)\nendforeach()"
  },
  {
    "id" : "11a12274-155d-4d7a-9a4c-6d91ac9b4c62",
    "prId" : 3807,
    "prUrl" : "https://github.com/root-project/root/pull/3807#pullrequestreview-248762628",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0c8c9c4-3a15-430b-8a74-9b5431c0f385",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "`clang` is broken with ROOT-patches; we should not rely on having it. (ROOT doesn't build it either, for good reason.)",
        "createdAt" : "2019-06-12T09:28:43Z",
        "updatedAt" : "2019-06-12T09:28:43Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "3bf0a113-2e59-4e61-8d6e-af4dd256eed8",
        "parentId" : "d0c8c9c4-3a15-430b-8a74-9b5431c0f385",
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "@amadio I think that's explain why I was not able to generate clang binary for standalone llvm/clang build (for ROOT-patches)..",
        "createdAt" : "2019-06-12T11:55:57Z",
        "updatedAt" : "2019-06-12T11:56:31Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      },
      {
        "id" : "1f47bd61-ce27-4b50-b446-ef4f84fc795d",
        "parentId" : "d0c8c9c4-3a15-430b-8a74-9b5431c0f385",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "The `CLANG_RESOURCE_DIR` variable is only used to copy some system headers into `etc/cling/lib/clang/5.0.x/include`, as shown [here](https://github.com/root-project/root/blob/master/core/clingutils/CMakeLists.txt#L125-L158). We could just move the headers somewhere else to avoid needing this. I think that installing regular headers into `include/root` and headers that currently go into `etc/cling` into `include/cling` or `include/root/cling` (or `include/ROOT/...`) would be better. BTW, this is related to [ROOT-9403](https://sft.its.cern.ch/jira/browse/ROOT-9403), [ROOT-8588](https://sft.its.cern.ch/jira/browse/ROOT-8588), and [ROOT-8589](https://sft.its.cern.ch/jira/browse/ROOT-8589) issues in Jira.",
        "createdAt" : "2019-06-12T12:13:47Z",
        "updatedAt" : "2019-06-12T12:13:47Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "51b54ab1-fa3b-496e-8813-7b83902577c7",
        "parentId" : "d0c8c9c4-3a15-430b-8a74-9b5431c0f385",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "We can move the headers some place else but then need to tell the clang libraries about the new location.\r\n\r\nSo - shall we revert this and try your alternative approach? (The clang headers are a runtime thing, they must not go into `include/` but e.g. `share` could work.)\r\n",
        "createdAt" : "2019-06-12T13:01:33Z",
        "updatedAt" : "2019-06-12T13:01:53Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "1f262fa4-fbb1-4ebe-b7cf-5b295c250c7e",
        "parentId" : "d0c8c9c4-3a15-430b-8a74-9b5431c0f385",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "You can set `CLANG_RESOURCE_DIR` for clang in CMake, see [here](https://github.com/root-project/root/blob/master/interpreter/llvm/src/tools/clang/CMakeLists.txt#L196-L197). So, sure, I will revert this and redo it without using the clang binary, since the idea is to not have it at all.\r\n\r\nHowever, headers are headers, we can put them in a special place, but `share` is not the right place. For example, if it's system dependent, they could go into `include/x86_64-pc-linux-gnu` or `lib/root/x86_64-pc-linux-gnu/include`, like what other packages do for system-specific headers. For instance, GCC puts this kind of header into `/usr/lib/gcc/x86_64-pc-linux-gnu/<version>/include` on my system.",
        "createdAt" : "2019-06-12T13:27:23Z",
        "updatedAt" : "2019-06-12T13:31:32Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "662ce869-7687-4272-b69a-b46c50804f3b",
        "parentId" : "d0c8c9c4-3a15-430b-8a74-9b5431c0f385",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "I would suggest `<libdir>/root/include/...`, for example, `/usr/lib64/root/include/cling` on a system where `<libdir>` is `lib64`.",
        "createdAt" : "2019-06-12T13:34:04Z",
        "updatedAt" : "2019-06-12T13:34:04Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e3885681e99c818b616a14f023175e6f7b0cdb6",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +67,71 @@else()\n  execute_process(\n    COMMAND ${LLVM_TOOLS_BINARY_DIR}/clang -print-resource-dir\n    RESULT_VARIABLE _CLANG_ERROR OUTPUT_VARIABLE CLANG_RESOURCE_DIR)\n"
  },
  {
    "id" : "a13e6217-19bb-4335-8f7e-8eff3729504f",
    "prId" : 4150,
    "prUrl" : "https://github.com/root-project/root/pull/4150#pullrequestreview-270826585",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2fac9a32-0503-4dab-a8de-afac90b7c179",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "@Axel-Naumann is this ok for you? I think this whole foreach should be removed, but that not being possible, we should at least try to copy the headers from the right place when sysroot != /. For example, on Mac OS, this probably does the wrong thing, since in many cases `/usr/include` no longer exists anyway.",
        "createdAt" : "2019-08-05T12:55:39Z",
        "updatedAt" : "2019-08-05T12:55:39Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "a2a70868-6c74-42a8-b21e-a8c5b80778cd",
        "parentId" : "2fac9a32-0503-4dab-a8de-afac90b7c179",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "I will merge this since `${DEFAULT_SYSROOT}` is normally empty, so it doesn't affect the usual mode of compilation for regular users. We can revert later if needed.",
        "createdAt" : "2019-08-05T15:03:26Z",
        "updatedAt" : "2019-08-05T15:03:26Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef1da5868ec47fc737fd26356008c3797711d97c",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +130,134 @@# Capture their build-time version here, and inject it into runtime.\nforeach(file wchar.h bits/stat.h bits/time.h)\n  if(EXISTS ${DEFAULT_SYSROOT}/usr/include/${file})\n    list(APPEND copy_commands COMMAND ${CMAKE_COMMAND} -E copy ${DEFAULT_SYSROOT}/usr/include/${file}\n      ${CMAKE_BINARY_DIR}/etc/cling/lib/clang/${CLANG_RESOURCE_DIR_VERSION}/include/${file})"
  }
]