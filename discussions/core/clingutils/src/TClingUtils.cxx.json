[
  {
    "id" : "7de1d9c5-f617-4dad-ac9b-6e62e452063d",
    "prId" : 589,
    "prUrl" : "https://github.com/root-project/root/pull/589#pullrequestreview-42610035",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f76eeaf-c00e-419a-9ecb-11a93f30ba2d",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "What is that needed for?",
        "createdAt" : "2017-06-07T13:43:51Z",
        "updatedAt" : "2017-06-07T20:23:28Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "257a1c2a-3d5d-4509-8023-f770ca00fe78",
        "parentId" : "7f76eeaf-c00e-419a-9ecb-11a93f30ba2d",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Didn't really see. It fixed compilation.",
        "createdAt" : "2017-06-07T13:56:03Z",
        "updatedAt" : "2017-06-07T20:23:28Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc3d4e966669b54da4361e2bc176badbe60e9729",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +41,45 @@#include \"clang/Lex/ModuleMap.h\"\n#include \"clang/Lex/Preprocessor.h\"\n#include \"clang/Lex/PreprocessorOptions.h\"\n\n#include \"clang/Sema/Sema.h\""
  },
  {
    "id" : "203e536f-d9d9-446e-bc1c-89591686c0da",
    "prId" : 1580,
    "prUrl" : "https://github.com/root-project/root/pull/1580#pullrequestreview-93769598",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59542c4e-16b3-4a70-a9fe-ebead783ceeb",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Hi Philippe, thanks for addressing this. However, once we enter `if (substType)`, there is a comment which indicates that by the time all clauses of this `if` are processed, `replacedCtxt` should never be null, so I still believe that it being null should be a fatal error. What is the reason to make it only a warning?\r\n\r\n```cpp\r\n   if (substType) {\r\n      // Make sure it got replaced from this template\r\n      const clang::ClassTemplateDecl *replacedCtxt = 0;\r\n   ...   \r\n  } else if (...) {\r\n```\r\n\r\nAlso, this funtion is 250 lines long. It would improve readability a lot if it was broken into smaller pieces.",
        "createdAt" : "2018-02-02T16:07:29Z",
        "updatedAt" : "2018-02-02T16:07:29Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "e4429180-42a6-4d47-b195-4c87f206eca8",
        "parentId" : "59542c4e-16b3-4a70-a9fe-ebead783ceeb",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "> What is the reason to make it only a warning?\r\n\r\nBecause I believe that the 'redundant' test 4606 is likely to still give the correct result even if replacedCtxt is a nullptr and even if those two fails, the final code might still do something sensible.",
        "createdAt" : "2018-02-02T21:57:58Z",
        "updatedAt" : "2018-02-02T21:57:58Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4e6fd69d5f6fe5429eb2a2b309343d802f4d7b4",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +4598,4602 @@                                   replacedDeclCtxt->getDeclKindName(), astDump.c_str());\n         replacedCtxt = nullptr;\n      }\n\n      if ((replacedCtxt && replacedCtxt->getCanonicalDecl() == TSTdecl->getSpecializedTemplate()->getCanonicalDecl())"
  }
]