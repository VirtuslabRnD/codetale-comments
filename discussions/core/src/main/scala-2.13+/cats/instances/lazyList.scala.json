[
  {
    "id" : "6e0316f3-2b70-4d50-89ea-3181a5310c59",
    "prId" : 2983,
    "prUrl" : "https://github.com/typelevel/cats/pull/2983#pullrequestreview-273103585",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66c8d798-daa6-499e-85e7-30d2e917802a",
        "parentId" : null,
        "authorId" : "6943dbfe-856b-4f1b-bd04-dca0091e8291",
        "body" : "This is Scalafmt, which doesn't seem to be running for 2.13-specific code?",
        "createdAt" : "2019-08-09T12:17:33Z",
        "updatedAt" : "2019-08-22T07:17:11Z",
        "lastEditedBy" : "6943dbfe-856b-4f1b-bd04-dca0091e8291",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a1c3340dc0f84cbc1e1d7fce3c4dd034aa8c957",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +64,68 @@        val kernel = Iterator.unfold[Option[B], Iterator[Either[A, B]]](Iterator(Left(a))) { it =>\n          if (!it.hasNext) None\n          else\n            it.next match {\n              case Left(a)  => Some((None, fn(a).iterator ++ it))"
  },
  {
    "id" : "a0ae74ed-3b8d-4467-8ae9-f76afa6a76d1",
    "prId" : 2964,
    "prUrl" : "https://github.com/typelevel/cats/pull/2964#pullrequestreview-270992853",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78cf5ba2-a06d-4f4e-abeb-c3307cfd74bd",
        "parentId" : null,
        "authorId" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "body" : "two small notes, I bet this would be faster if we did:\r\n```scala\r\nunfold[Option[B], List[Iterator[Either[A, B]]])(Iterator.single(Left(a)) :: Nil) {\r\n  case Nil => None\r\n  case nonempty@(h :: t) =>\r\n    if (!h.hasNext) Some((None, t))\r\n    else h.next match {\r\n      case Left(a) => Some((None, fn(a) :: nonempty))\r\n      case Right(b) => Some((Some(b), nonempty))\r\n    } \r\n}\r\n```\r\n",
        "createdAt" : "2019-08-05T20:38:25Z",
        "updatedAt" : "2019-08-05T20:38:25Z",
        "lastEditedBy" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "tags" : [
        ]
      }
    ],
    "commit" : "099b7a7b4ae6e93f2cf029f94096ab4ca4851c76",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +70,74 @@\n      def tailRecM[A, B](a: A)(fn: A => LazyList[Either[A, B]]): LazyList[B] = {\n        val kernel = Iterator.unfold[Option[B], Iterator[Either[A, B]]](Iterator(Left(a))) { it =>\n          if (!it.hasNext) None\n          else it.next match {"
  }
]