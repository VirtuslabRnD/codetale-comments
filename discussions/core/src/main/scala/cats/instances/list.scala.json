[
  {
    "id" : "7a2949c9-6154-47a5-84aa-5855e0fdab90",
    "prId" : 1522,
    "prUrl" : "https://github.com/typelevel/cats/pull/1522#pullrequestreview-16220637",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29a8410e-e5c4-4472-ace9-bce1ce430002",
        "parentId" : null,
        "authorId" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "body" : "I probably missed something but I am curious what gain we get from overriding this? I mean the \r\nIn `Monoid.combineAll` it's \r\n```scala \r\nas.foldLeft(empty)(combine)\r\n```\r\nIn `Foldable.fold` it's\r\n```Scala\r\n foldLeft(fa, A.empty) { (acc, a) =>\r\n    A.combine(acc, a)\r\n }\r\n```",
        "createdAt" : "2017-01-11T18:56:45Z",
        "updatedAt" : "2017-01-11T18:57:17Z",
        "lastEditedBy" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "tags" : [
        ]
      },
      {
        "id" : "42bd08d9-4319-4f89-8cd6-0d6768d166ae",
        "parentId" : "29a8410e-e5c4-4472-ace9-bce1ce430002",
        "authorId" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "body" : "I was confused about that too.\r\n\r\nWhen you run the [`MapMonoidBench`](https://github.com/typelevel/cats/blob/master/bench/src/main/scala/cats/bench/MapMonoidBench.scala#L24-L30), you can see that the first using `Monoid.combineAll` is considerably faster than the second.\r\n\r\nThat's because `Monoid.combineAll` is overridden in some instances, eg [`Map`](https://github.com/typelevel/cats/blob/master/kernel/src/main/scala/cats/kernel/instances/map.scala#L41-L51) and [more general `Iterable`](https://github.com/typelevel/cats/blob/master/kernel/src/main/scala/cats/kernel/instances/StaticMethods.scala#L78-L81).",
        "createdAt" : "2017-01-11T19:11:39Z",
        "updatedAt" : "2017-01-11T19:12:41Z",
        "lastEditedBy" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "tags" : [
        ]
      },
      {
        "id" : "05b9ab17-0ee6-494b-a0cd-20a8b4c131d8",
        "parentId" : "29a8410e-e5c4-4472-ace9-bce1ce430002",
        "authorId" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "body" : "got it. that's what I suspected, but I only checked the `List` instance. ",
        "createdAt" : "2017-01-11T19:52:22Z",
        "updatedAt" : "2017-01-11T19:52:22Z",
        "lastEditedBy" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b723dea0ae0cae278e0b79503e6ae0e642ac4b5f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +84,88 @@        Foldable.iteratorFoldM(fa.toIterator, z)(f)\n\n      override def fold[A](fa: List[A])(implicit A: Monoid[A]): A = A.combineAll(fa)\n\n      override def toList[A](fa: List[A]): List[A] = fa"
  },
  {
    "id" : "5161a45c-944b-4e1b-a277-545986800a88",
    "prId" : 1464,
    "prUrl" : "https://github.com/typelevel/cats/pull/1464#pullrequestreview-37988333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17d9bdd7-4e8d-4231-aecc-f52206a5528d",
        "parentId" : null,
        "authorId" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "body" : "can I request we avoid `.head` etc... unless needed? Like:\n\n``` scala\nfa match {\n  case Nil => None\n  case h :: tail =>\n    if (idx < 0) None\n    else if (idx == 0) h\n    else get(tail)(idx - 1)\n}\n```\n",
        "createdAt" : "2016-11-17T23:34:53Z",
        "updatedAt" : "2017-05-19T11:16:18Z",
        "lastEditedBy" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "tags" : [
        ]
      },
      {
        "id" : "22ffb1e1-fa71-4de8-817c-038e1d761010",
        "parentId" : "17d9bdd7-4e8d-4231-aecc-f52206a5528d",
        "authorId" : "b43434dc-f706-4cba-a4f2-eb4b74682cdf",
        "body" : "done.",
        "createdAt" : "2017-05-13T21:49:24Z",
        "updatedAt" : "2017-05-19T11:16:18Z",
        "lastEditedBy" : "b43434dc-f706-4cba-a4f2-eb4b74682cdf",
        "tags" : [
        ]
      }
    ],
    "commit" : "71d4fd6c6a86a8a713be3db3f1c4a4c4cc55db19",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +72,76 @@\n      @tailrec\n      override def get[A](fa: List[A])(idx: Long): Option[A] =\n        fa match {\n          case Nil => None"
  },
  {
    "id" : "2ee36404-ce4f-479c-a93b-bb49c0f8e10d",
    "prId" : 1324,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c55d15de-475e-45b3-b731-d670cec1df57",
        "parentId" : null,
        "authorId" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "body" : "nice catch\n",
        "createdAt" : "2016-08-23T17:59:12Z",
        "updatedAt" : "2016-08-23T22:43:34Z",
        "lastEditedBy" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "tags" : [
        ]
      }
    ],
    "commit" : "24e4de2f849faababbffa10943ef508d2642dd23",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +86,90 @@    new Show[List[A]] {\n      def show(fa: List[A]): String =\n        fa.iterator.map(_.show).mkString(\"List(\", \", \", \")\")\n    }\n}"
  }
]