[
  {
    "id" : "1ba499e3-7166-4677-930c-b12da63dd79c",
    "prId" : 555,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f91ba70-b2e5-48a6-ba10-7a371bb88cec",
        "parentId" : null,
        "authorId" : "1b80f00c-b2ed-49b7-8651-8be183b8980a",
        "body" : "~~Any opinions on renaming this to `Product`?~~ Edit: forgot that's taken already. :)\n",
        "createdAt" : "2015-11-11T00:23:46Z",
        "updatedAt" : "2015-12-10T20:21:51Z",
        "lastEditedBy" : "1b80f00c-b2ed-49b7-8651-8be183b8980a",
        "tags" : [
        ]
      },
      {
        "id" : "3bfc46d7-10d1-47d7-998b-8471175028fa",
        "parentId" : "1f91ba70-b2e5-48a6-ba10-7a371bb88cec",
        "authorId" : "7632398a-a833-4aab-8f7e-c6bf4148dfee",
        "body" : "Why not \"Cartesian\" because Monoidal sounds different ?\n",
        "createdAt" : "2015-11-23T16:10:45Z",
        "updatedAt" : "2015-12-10T20:21:51Z",
        "lastEditedBy" : "7632398a-a833-4aab-8f7e-c6bf4148dfee",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e84c04114f03d36c14367442ee0f4f6f3dfa8d2",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +9,13 @@ * It is worth noting that the couple Monoidal and [[Functor]] is interdefinable with [[Apply]].\n */\n@typeclass trait Monoidal[F[_]] {\n  def product[A, B](fa: F[A], fb: F[B]): F[(A, B)]\n}"
  }
]