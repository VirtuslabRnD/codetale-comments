[
  {
    "id" : "95698486-b50f-4a6e-9026-4da33e812dab",
    "prId" : 1013,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e151241-3184-4877-9777-faa1ef3d6437",
        "parentId" : null,
        "authorId" : "74d1b5f4-28cd-44b3-ac44-bbc4dac94474",
        "body" : "I noticed that the `applicativeErrorSyntax` method was defined for a `F[_, _]` (notice the kind), but I have type inference issues with it. So here I defined it for a `F[_]`. Am I wrong?\n",
        "createdAt" : "2016-05-03T08:09:58Z",
        "updatedAt" : "2016-05-17T13:38:09Z",
        "lastEditedBy" : "74d1b5f4-28cd-44b3-ac44-bbc4dac94474",
        "tags" : [
        ]
      },
      {
        "id" : "119444d2-dcc1-4f6e-a304-848e1fc7bff6",
        "parentId" : "0e151241-3184-4877-9777-faa1ef3d6437",
        "authorId" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "body" : "No, I think that you are right. Coincidentally this just came up in a [gitter conversation](https://gitter.im/typelevel/cats?at=573b10d2e2996a5a42c91a12).\n",
        "createdAt" : "2016-05-17T13:44:08Z",
        "updatedAt" : "2016-05-17T13:44:08Z",
        "lastEditedBy" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "1752755e48d00476b9dc899bd33e2361026e1ae0",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +5,9 @@\n  implicit def monadErrorSyntax[F[_], E, A](fa: F[A])(implicit F: MonadError[F, E]): MonadErrorOps[F, E, A] =\n    new MonadErrorOps(fa)\n\n}"
  }
]