[
  {
    "id" : "dcfdd244-7f48-43bc-98b8-722072ff6072",
    "prId" : 2279,
    "prUrl" : "https://github.com/typelevel/cats/pull/2279#pullrequestreview-189973273",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5256f03-aee6-4035-9b20-052320a98dc1",
        "parentId" : null,
        "authorId" : "c922a9b6-a191-4a1d-b6d1-67a1b509a11b",
        "body" : "missing `T` after `catsDataDeferForIor`?",
        "createdAt" : "2018-06-05T20:58:33Z",
        "updatedAt" : "2018-07-20T17:35:12Z",
        "lastEditedBy" : "c922a9b6-a191-4a1d-b6d1-67a1b509a11b",
        "tags" : [
        ]
      },
      {
        "id" : "91a24bab-33cf-46cc-b43c-c967dce628d1",
        "parentId" : "a5256f03-aee6-4035-9b20-052320a98dc1",
        "authorId" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "body" : "looks like we are still missing the T.",
        "createdAt" : "2018-07-20T16:59:11Z",
        "updatedAt" : "2018-07-20T17:35:12Z",
        "lastEditedBy" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "tags" : [
        ]
      },
      {
        "id" : "2c7ee542-25b3-4066-bd49-dad275e61288",
        "parentId" : "a5256f03-aee6-4035-9b20-052320a98dc1",
        "authorId" : "5e69f9a7-81f7-4c30-81de-392443f2c68d",
        "body" : "I got you. https://github.com/typelevel/cats/pull/2688/files",
        "createdAt" : "2019-01-07T20:10:18Z",
        "updatedAt" : "2019-01-07T20:10:19Z",
        "lastEditedBy" : "5e69f9a7-81f7-4c30-81de-392443f2c68d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c86ece02a70e937379efa1432c4cd08f6e0f63ca",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +437,441 @@  }\n\n  implicit def catsDataDeferForIor[F[_], E](implicit F: Defer[F]): Defer[IorT[F, E, ?]] =\n    new Defer[IorT[F, E, ?]] {\n      def defer[A](fa: => IorT[F, E, A]): IorT[F, E, A] ="
  },
  {
    "id" : "0ab7aa93-f2b6-497b-8ae4-b5db520bde86",
    "prId" : 1977,
    "prUrl" : "https://github.com/typelevel/cats/pull/1977#pullrequestreview-74930706",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "999ea7fc-3713-4a78-87d6-4521ac58441b",
        "parentId" : null,
        "authorId" : "240add12-1fe5-499a-918c-053b1f46b348",
        "body" : "Couldn't this be just `F: FlatMap[F]`? :)",
        "createdAt" : "2017-11-06T08:08:59Z",
        "updatedAt" : "2017-11-21T23:55:50Z",
        "lastEditedBy" : "240add12-1fe5-499a-918c-053b1f46b348",
        "tags" : [
        ]
      },
      {
        "id" : "80235e69-62ca-4d4a-bac0-fcb74fdc4b96",
        "parentId" : "999ea7fc-3713-4a78-87d6-4521ac58441b",
        "authorId" : "3a7f4480-9c92-415d-a910-0259ec18aada",
        "body" : "Current implementation needs it to call `flatMap`. I couldn't find a way to use it here, however `collectRight` can be changed to `F: FlatMap[F]`",
        "createdAt" : "2017-11-07T22:24:22Z",
        "updatedAt" : "2017-11-21T23:55:50Z",
        "lastEditedBy" : "3a7f4480-9c92-415d-a910-0259ec18aada",
        "tags" : [
        ]
      }
    ],
    "commit" : "adc87b7272dcc802d0fa16ed59733730b6e715e5",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +93,97 @@    })\n\n  def flatMapF[AA >: A, D](f: B => F[Ior[AA, D]])(implicit F: Monad[F], AA: Semigroup[AA]): IorT[F, AA, D] =\n    flatMap(f andThen IorT.apply)\n"
  },
  {
    "id" : "8492d40d-ccfd-4f21-8021-4aaf3c58cbcf",
    "prId" : 1977,
    "prUrl" : "https://github.com/typelevel/cats/pull/1977#pullrequestreview-74339708",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4abe524f-142c-4e29-a016-ca11b7c0d8e2",
        "parentId" : null,
        "authorId" : "240add12-1fe5-499a-918c-053b1f46b348",
        "body" : "Can we also add a `mapK` method, that applies a `FunctionK` to the underlying `F`? I.e. \r\n```scala\r\ndef mapK[G](f: F ~> G): IorT[G, A, B]\r\n```",
        "createdAt" : "2017-11-06T08:13:32Z",
        "updatedAt" : "2017-11-21T23:55:50Z",
        "lastEditedBy" : "240add12-1fe5-499a-918c-053b1f46b348",
        "tags" : [
        ]
      }
    ],
    "commit" : "adc87b7272dcc802d0fa16ed59733730b6e715e5",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +5,9 @@import cats.syntax.option._\n\nfinal case class IorT[F[_], A, B](value: F[Ior[A, B]]) {\n\n  def fold[C](fa: A => C, fb: B => C, fab: (A, B) => C)(implicit F: Functor[F]): F[C] = F.map(value)(_.fold(fa, fb, fab))"
  },
  {
    "id" : "2c2b4979-091b-4765-80f5-4b7bc2eacf2a",
    "prId" : 1977,
    "prUrl" : "https://github.com/typelevel/cats/pull/1977#pullrequestreview-78289532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdf4cd2d-356f-481b-bf43-b4fb3bf56e67",
        "parentId" : null,
        "authorId" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "body" : "do you mind also add `liftK` like this one https://github.com/SystemFw/cats/blob/4830e326acab64223fa642a2b39111665e590763/core/src/main/scala/cats/data/EitherT.scala#L365 ? If you don't have the time it's fine too, I can add one in a follow up PR. ",
        "createdAt" : "2017-11-21T18:18:12Z",
        "updatedAt" : "2017-11-21T23:55:50Z",
        "lastEditedBy" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "tags" : [
        ]
      },
      {
        "id" : "ec41df5e-bfaf-46aa-8bf0-ad69e42ffe5a",
        "parentId" : "fdf4cd2d-356f-481b-bf43-b4fb3bf56e67",
        "authorId" : "3a7f4480-9c92-415d-a910-0259ec18aada",
        "body" : "sure, no problem",
        "createdAt" : "2017-11-21T23:09:16Z",
        "updatedAt" : "2017-11-21T23:55:50Z",
        "lastEditedBy" : "3a7f4480-9c92-415d-a910-0259ec18aada",
        "tags" : [
        ]
      }
    ],
    "commit" : "adc87b7272dcc802d0fa16ed59733730b6e715e5",
    "line" : 252,
    "diffHunk" : "@@ -1,1 +250,254 @@   * }}}\n   */\n  final def liftF[F[_], A, B](fb: F[B])(implicit F: Applicative[F]): IorT[F, A, B] = right(fb)\n\n  /**"
  }
]