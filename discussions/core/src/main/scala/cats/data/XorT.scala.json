[
  {
    "id" : "f1a01c63-ea44-4403-8de5-fef776af024a",
    "prId" : 1215,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19c8c415-d8a3-456f-8333-fe1fffda364f",
        "parentId" : null,
        "authorId" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "body" : "why do we even need `Functor` here?\n",
        "createdAt" : "2016-07-18T17:48:02Z",
        "updatedAt" : "2016-07-21T15:08:35Z",
        "lastEditedBy" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "tags" : [
        ]
      },
      {
        "id" : "605022b1-d492-4c73-8890-4ceeefb8cf8b",
        "parentId" : "19c8c415-d8a3-456f-8333-fe1fffda364f",
        "authorId" : "80cedd0e-b79d-47bb-a8f2-69b1d1a08148",
        "body" : "Without the implicit evidence for a `Functor` it won't compile since `right` needs one.  \n",
        "createdAt" : "2016-07-18T18:07:07Z",
        "updatedAt" : "2016-07-21T15:08:35Z",
        "lastEditedBy" : "80cedd0e-b79d-47bb-a8f2-69b1d1a08148",
        "tags" : [
        ]
      },
      {
        "id" : "b97a79f5-07c6-4035-97f4-36e3d8708fb7",
        "parentId" : "19c8c415-d8a3-456f-8333-fe1fffda364f",
        "authorId" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "body" : "Indeed. I made the mistake of believing that was just `Xor.right` Sorry for the noise.\n",
        "createdAt" : "2016-07-18T18:16:11Z",
        "updatedAt" : "2016-07-21T15:08:35Z",
        "lastEditedBy" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "tags" : [
        ]
      },
      {
        "id" : "d6e89ab8-e90f-41fb-be5e-9b258c634911",
        "parentId" : "19c8c415-d8a3-456f-8333-fe1fffda364f",
        "authorId" : "80cedd0e-b79d-47bb-a8f2-69b1d1a08148",
        "body" : "All good, I'm just happy I could answer :) \n",
        "createdAt" : "2016-07-18T18:19:05Z",
        "updatedAt" : "2016-07-21T15:08:35Z",
        "lastEditedBy" : "80cedd0e-b79d-47bb-a8f2-69b1d1a08148",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e277cd89141fafad1a374afd0593478f3f09e31",
    "line" : null,
    "diffHunk" : "@@ -1,1 +233,237 @@   * }}}\n   */\n  final def liftT[F[_], A, B](fb: F[B])(implicit F: Functor[F]): XorT[F, A, B] = right(fb)\n\n  /** Transforms an `Xor` into an `XorT`, lifted into the specified `Applicative`."
  },
  {
    "id" : "3fee3b16-fc0a-4f8c-8240-23251e8912b0",
    "prId" : 287,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05e11ff3-4233-4afc-bbfc-c89481eb8ca7",
        "parentId" : null,
        "authorId" : "89a3e0e3-e301-4aa8-b150-74070eb5a619",
        "body" : "Is there  a reason to prefer this over something like the following?\n\n``` scala\nimplicit def xorTSemigroupK[F[_], L](implicit F0: Monad[F], L0: Semigroup[L]): SemigroupK[XorT[F, L, ?]] =\n  new XorTSemigroupK[F, L] { implicit val F = F0; implicit val L = L0 }\n```\n\n(This question applies to a bunch of these instances.)\n",
        "createdAt" : "2015-04-19T14:56:54Z",
        "updatedAt" : "2015-04-26T12:42:05Z",
        "lastEditedBy" : "89a3e0e3-e301-4aa8-b150-74070eb5a619",
        "tags" : [
        ]
      },
      {
        "id" : "5d9021dd-d6e9-4838-952c-00230949371e",
        "parentId" : "05e11ff3-4233-4afc-bbfc-c89481eb8ca7",
        "authorId" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "body" : "@mpilquist gave his rationale [on Gitter](https://gitter.im/non/cats?at=553b9fe91c7f609d3d25b296).\n\n> Rationale is only that the param names are API in scaladoc\n\nMy take on it is that this approach adds a little internal messiness to provide a nicer API, which seems reasonable to me.\n",
        "createdAt" : "2015-04-25T14:20:01Z",
        "updatedAt" : "2015-04-26T12:42:05Z",
        "lastEditedBy" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "c11a1bfe880b4e445e85cd2c3457996d5acd39a3",
    "line" : 145,
    "diffHunk" : "@@ -1,1 +143,147 @@    implicit val L0 = L\n    new XorTSemigroupK[F, L] { implicit val F = F0; implicit val L = L0 }\n  }\n}\n"
  },
  {
    "id" : "12a68c15-1934-403b-9dad-17254df20ee3",
    "prId" : 287,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53cb797c-043e-473e-a5b9-67bd50060b48",
        "parentId" : null,
        "authorId" : "e706d82a-117b-4df8-a082-5200de4da984",
        "body" : "I think `XorT#combine` should use another name because `SemigroupK[XorT[F, L, ?]]#combine` is not equal to `XorT#combine`.\n\nhttps://github.com/scalaz/scalaz/commit/5187e2b0286bde8a17108067cb\n",
        "createdAt" : "2015-05-06T18:54:30Z",
        "updatedAt" : "2015-05-06T18:54:30Z",
        "lastEditedBy" : "e706d82a-117b-4df8-a082-5200de4da984",
        "tags" : [
        ]
      },
      {
        "id" : "4a64db77-1650-4316-984c-93b5abb8daec",
        "parentId" : "53cb797c-043e-473e-a5b9-67bd50060b48",
        "authorId" : "89a3e0e3-e301-4aa8-b150-74070eb5a619",
        "body" : "That's a great point. I'll open an issue.\n",
        "createdAt" : "2015-05-06T20:12:24Z",
        "updatedAt" : "2015-05-06T20:12:24Z",
        "lastEditedBy" : "89a3e0e3-e301-4aa8-b150-74070eb5a619",
        "tags" : [
        ]
      }
    ],
    "commit" : "c11a1bfe880b4e445e85cd2c3457996d5acd39a3",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +76,80 @@  def merge[AA >: A](implicit ev: B <:< AA, F: Functor[F]): F[AA] = F.map(value)(_.fold(identity, ev.apply))\n\n  def combine(that: XorT[F, A, B])(implicit F: Apply[F], A: Semigroup[A], B: Semigroup[B]): XorT[F, A, B] =\n    XorT(F.map2(this.value, that.value)(_ combine _))\n"
  }
]