[
  {
    "id" : "63f93bbd-d7f9-4c94-85ef-b1d110288d89",
    "prId" : 3679,
    "prUrl" : "https://github.com/typelevel/cats/pull/3679#pullrequestreview-584875831",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c95407a6-db08-432c-87ac-bb7490b2a650",
        "parentId" : null,
        "authorId" : "9ef0156b-afd7-4f35-80a6-bb89d6331b7c",
        "body" : "There's no `NonEmptyChain.of` method, this is why the build is failing.",
        "createdAt" : "2021-02-05T20:57:23Z",
        "updatedAt" : "2021-02-07T12:18:14Z",
        "lastEditedBy" : "9ef0156b-afd7-4f35-80a6-bb89d6331b7c",
        "tags" : [
        ]
      },
      {
        "id" : "a63cc794-fc07-4c61-9ebf-e19a1a0616e8",
        "parentId" : "c95407a6-db08-432c-87ac-bb7490b2a650",
        "authorId" : "9ef0156b-afd7-4f35-80a6-bb89d6331b7c",
        "body" : "#3771",
        "createdAt" : "2021-02-06T12:09:13Z",
        "updatedAt" : "2021-02-07T12:18:14Z",
        "lastEditedBy" : "9ef0156b-afd7-4f35-80a6-bb89d6331b7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "eaedb94999e8e09a70f182ed95b79e65afe5fe39",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +404,408 @@   * scala> import cats.data.NonEmptyChain\n   * scala> import cats.implicits._\n   * scala> val nel = NonEmptyChain.of(12, -2, 3, -5)\n   * scala> val expectedResult = List(NonEmptyChain.of(12, -2), NonEmptyChain.of(3, -5))\n   * scala> val result = nel.grouped(2)"
  },
  {
    "id" : "f75d398c-9d46-4dba-81e8-74aa0b3e4cb3",
    "prId" : 2579,
    "prUrl" : "https://github.com/typelevel/cats/pull/2579#pullrequestreview-169995228",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf05e64b-1b4d-4644-b82b-bb9eac4b2149",
        "parentId" : null,
        "authorId" : "dc9a9512-c1aa-4f95-a2a1-7f1c1984a1d5",
        "body" : "I wonder. Dont you think that it would be better to to call `toChain` and then `distinct` on chain and then rebuild NonEmptyChain? It would remove duplication but I'm not sure if it will still be ok with performance. ",
        "createdAt" : "2018-10-23T20:57:02Z",
        "updatedAt" : "2018-10-23T20:57:50Z",
        "lastEditedBy" : "dc9a9512-c1aa-4f95-a2a1-7f1c1984a1d5",
        "tags" : [
        ]
      },
      {
        "id" : "7ea8031a-e416-45f2-8043-5bed15052c19",
        "parentId" : "cf05e64b-1b4d-4644-b82b-bb9eac4b2149",
        "authorId" : "d2879c60-b189-4cea-bd94-bc4592155bea",
        "body" : "The other way around would be cheaper, something along the lines of `NonEmptyChain.fromChain(this).fold(empty[A])(_.distinct.toChain)`",
        "createdAt" : "2018-10-30T20:54:20Z",
        "updatedAt" : "2018-10-30T20:54:20Z",
        "lastEditedBy" : "d2879c60-b189-4cea-bd94-bc4592155bea",
        "tags" : [
        ]
      }
    ],
    "commit" : "cef2e4df72f9c309a3b760e8cd328061669e41cf",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +377,381 @@   * Remove duplicates. Duplicates are checked using `Order[_]` instance.\n   */\n  final def distinct[AA >: A](implicit O: Order[AA]): NonEmptyChain[AA] = {\n    implicit val ord = O.toOrdering\n"
  }
]