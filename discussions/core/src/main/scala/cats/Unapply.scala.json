[
  {
    "id" : "2a75921b-60a3-4da8-84fc-566e633e35d2",
    "prId" : 262,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27965ca1-cadf-4dce-ad80-2d2e448d71bb",
        "parentId" : null,
        "authorId" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "body" : "Should probably just return `ev` instead of calling `implicitly`.\n",
        "createdAt" : "2015-03-28T20:53:13Z",
        "updatedAt" : "2015-03-28T20:53:13Z",
        "lastEditedBy" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "3637400d3cd70a9815976150cae76e168abb9f65",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +31,35 @@object Unapply {\n  // a convenience method for summoning Unapply instances\n  def apply[TC[_[_]], MA](implicit ev: Unapply[TC,MA]): Unapply[TC, MA] = implicitly\n\n  // the type we will instantiate when we find a typeclass instance"
  }
]