[
  {
    "id" : "fe520e24-bca3-4ae7-b3d9-afec2b7274b7",
    "prId" : 2534,
    "prUrl" : "https://github.com/typelevel/cats/pull/2534#pullrequestreview-158724457",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0944d8c4-be44-4880-abec-b150ced99903",
        "parentId" : null,
        "authorId" : "9ef0156b-afd7-4f35-80a6-bb89d6331b7c",
        "body" : "I would like to take a moment to appreciate the name of this method.",
        "createdAt" : "2018-09-25T20:13:29Z",
        "updatedAt" : "2018-09-26T20:57:52Z",
        "lastEditedBy" : "9ef0156b-afd7-4f35-80a6-bb89d6331b7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8871228466d3bd5f85e101eb54b77e484c6a0e31",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +138,142 @@    }\n\n    private[this] def punchHole(tpe: Type): Tree = tpe match {\n      case PolyType(undet :: Nil, underlying: TypeRef) ‚áí\n        val Œ± = TypeName(\"Œ±\")"
  },
  {
    "id" : "769cafeb-0b65-4548-9d2f-a09cc4ba4496",
    "prId" : 2534,
    "prUrl" : "https://github.com/typelevel/cats/pull/2534#pullrequestreview-159218252",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53230033-4323-4313-bed8-59e9afae69be",
        "parentId" : null,
        "authorId" : "9ef0156b-afd7-4f35-80a6-bb89d6331b7c",
        "body" : "This is a hygiene issue that I fixed along the way.",
        "createdAt" : "2018-09-26T20:18:55Z",
        "updatedAt" : "2018-09-26T20:57:52Z",
        "lastEditedBy" : "9ef0156b-afd7-4f35-80a6-bb89d6331b7c",
        "tags" : [
        ]
      },
      {
        "id" : "11d0de2a-c1c4-4036-a6ce-761ae37c9786",
        "parentId" : "53230033-4323-4313-bed8-59e9afae69be",
        "authorId" : "5e69f9a7-81f7-4c30-81de-392443f2c68d",
        "body" : "üëç ",
        "createdAt" : "2018-09-26T22:08:54Z",
        "updatedAt" : "2018-09-26T22:08:54Z",
        "lastEditedBy" : "5e69f9a7-81f7-4c30-81de-392443f2c68d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8871228466d3bd5f85e101eb54b77e484c6a0e31",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +125,129 @@\n        q\"\"\"\n        new _root_.cats.arrow.FunctionK[$F, $G] {\n          def apply[A](fa: $F[A]): $G[A] = $trans(fa)\n        }"
  }
]