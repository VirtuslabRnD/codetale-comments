[
  {
    "id" : "a4d3bfed-738f-4f53-a379-b129ac68861d",
    "prId" : 1766,
    "prUrl" : "https://github.com/typelevel/cats/pull/1766#pullrequestreview-50084083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70f4336b-e981-4a42-b7ae-b99216aa1b3f",
        "parentId" : null,
        "authorId" : "b084ae12-948e-41db-b85f-097bb81e5826",
        "body" : ":+1:",
        "createdAt" : "2017-07-14T15:56:47Z",
        "updatedAt" : "2017-07-19T16:07:07Z",
        "lastEditedBy" : "b084ae12-948e-41db-b85f-097bb81e5826",
        "tags" : [
        ]
      }
    ],
    "commit" : "f34c6e512e51298c0d704f49c6feeefb607efced",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +9,13 @@ * Must obey the laws defined in cats.laws.ArrowLaws.\n */\n@typeclass trait Arrow[F[_, _]] extends Category[F] with Strong[F] { self =>\n\n  /**"
  },
  {
    "id" : "f448f897-e6c3-40c1-ad68-1d679a882cbc",
    "prId" : 1766,
    "prUrl" : "https://github.com/typelevel/cats/pull/1766#pullrequestreview-50084083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a495cbb-d98c-4680-b883-be9d5266e7b9",
        "parentId" : null,
        "authorId" : "b084ae12-948e-41db-b85f-097bb81e5826",
        "body" : "üëç ",
        "createdAt" : "2017-07-14T15:56:54Z",
        "updatedAt" : "2017-07-19T16:07:07Z",
        "lastEditedBy" : "b084ae12-948e-41db-b85f-097bb81e5826",
        "tags" : [
        ]
      }
    ],
    "commit" : "f34c6e512e51298c0d704f49c6feeefb607efced",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +15,19 @@   *\n   * In the reference articles \"Arrows are Promiscuous...\", and in the corresponding Haskell\n   * library `Control.Arrow`, this function is called `arr`.\n   */\n  def lift[A, B](f: A => B): F[A, B]"
  },
  {
    "id" : "c4a18150-004b-4932-8ca8-801d2d8ed262",
    "prId" : 1766,
    "prUrl" : "https://github.com/typelevel/cats/pull/1766#pullrequestreview-50084083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27d8aaf4-cbae-43e1-8a7a-e5207e278e6f",
        "parentId" : null,
        "authorId" : "b084ae12-948e-41db-b85f-097bb81e5826",
        "body" : "üëç ",
        "createdAt" : "2017-07-14T15:57:01Z",
        "updatedAt" : "2017-07-19T16:07:07Z",
        "lastEditedBy" : "b084ae12-948e-41db-b85f-097bb81e5826",
        "tags" : [
        ]
      }
    ],
    "commit" : "f34c6e512e51298c0d704f49c6feeefb607efced",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +27,31 @@  }\n\n  /**\n   * Create a new computation `F` that splits its input between `f` and `g`\n   * and combines the output of each."
  }
]