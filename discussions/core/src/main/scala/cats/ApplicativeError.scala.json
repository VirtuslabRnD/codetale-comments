[
  {
    "id" : "4e1e2136-ddd6-422b-9ee4-a7d00ca701a1",
    "prId" : 2293,
    "prUrl" : "https://github.com/typelevel/cats/pull/2293#pullrequestreview-128110481",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f997d77e-b3d5-45e8-94e1-6c2f71f7cd97",
        "parentId" : null,
        "authorId" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "body" : "replace `fold` to optimize performance ( this way there is no need to create anonymous functions, which take a toll. )",
        "createdAt" : "2018-06-12T19:16:45Z",
        "updatedAt" : "2018-06-12T19:16:45Z",
        "lastEditedBy" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "tags" : [
        ]
      }
    ],
    "commit" : "49c5d9ff9d60d833e613a7537ef8ded55e8dd976",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +179,183 @@      case Right(a) => pure(a)\n      case Left(e)  => raiseError(e)\n    }\n\n"
  },
  {
    "id" : "c1e0e2c2-64a0-4646-81a7-90a34a822469",
    "prId" : 1269,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a699d62d-70fe-4778-b20c-a8764183328f",
        "parentId" : null,
        "authorId" : "4aafd631-794d-4704-aeda-a6c56ce667d1",
        "body" : "Could this just delegate to `catchNonFatal` with `a.value` ?\n",
        "createdAt" : "2016-08-10T06:51:05Z",
        "updatedAt" : "2016-08-10T06:51:05Z",
        "lastEditedBy" : "4aafd631-794d-4704-aeda-a6c56ce667d1",
        "tags" : [
        ]
      },
      {
        "id" : "9b0457e6-fc5d-45cf-af3a-99ce9d4f9740",
        "parentId" : "a699d62d-70fe-4778-b20c-a8764183328f",
        "authorId" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "body" : "I think that would be slightly slower since you would allocate another closure to do the call by name.\n",
        "createdAt" : "2016-08-10T06:52:24Z",
        "updatedAt" : "2016-08-10T06:52:24Z",
        "lastEditedBy" : "64725de8-1e61-4b2f-a436-5cc06313d237",
        "tags" : [
        ]
      }
    ],
    "commit" : "2fb162e3c378dcef197e0259587b00de5f489081",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +91,95 @@   * and raise\n   */\n  def catchNonFatalEval[A](a: Eval[A])(implicit ev: Throwable <:< E): F[A] =\n    try pure(a.value)\n    catch {"
  }
]