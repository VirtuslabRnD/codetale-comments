[
  {
    "id" : "6b46538b-795b-46e3-9b6d-297b96e38a95",
    "prId" : 4864,
    "prUrl" : "https://github.com/apache/kafka/pull/4864#pullrequestreview-117055834",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f2bf43b-d1ac-49dd-bc52-4fab1760a5da",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "```scala\r\nfor ((key, value) <- props if key.startsWith(prefix) && key.length > prefix.length)\r\n  newProps.put(key.substring(prefix.length), value)\r\n```\r\n\r\nAlso, the method should be private and maybe it should be named `propertiesWithKeyPrefixStripped` or something.",
        "createdAt" : "2018-04-29T16:24:33Z",
        "updatedAt" : "2018-04-29T16:24:33Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "c8f722fa-c0cb-425a-9979-de8bb99786ac",
        "parentId" : "5f2bf43b-d1ac-49dd-bc52-4fab1760a5da",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Ack, will do it as a hotfix commit.",
        "createdAt" : "2018-05-02T20:25:43Z",
        "updatedAt" : "2018-05-02T20:25:43Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e2b28677dd6059f2210ca65381cf6e9a4493b485",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +551,555 @@    for (entry <- props) {\n      val key: String = entry._1\n      val value: String = entry._2\n\n      if (key.startsWith(prefix) && key.length > prefix.length)"
  },
  {
    "id" : "08f51c33-b863-4aa6-aaa9-205bea5e86e5",
    "prId" : 8604,
    "prUrl" : "https://github.com/apache/kafka/pull/8604#pullrequestreview-442362422",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5322c58-f326-446a-a6aa-2978dd68200a",
        "parentId" : null,
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "`asScala.asJava` looks a bit weird here. I understand that you are using this trick to convert the Properties to a Scala Map and then a Java Map. How about loading `formatterArgs` as a Map directly?",
        "createdAt" : "2020-07-01T07:40:07Z",
        "updatedAt" : "2020-07-02T12:58:40Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      },
      {
        "id" : "b90daca1-cb30-4a81-b35c-78a1f85b1318",
        "parentId" : "b5322c58-f326-446a-a6aa-2978dd68200a",
        "authorId" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "body" : "This trick is used in a couple of other places. I took a quick look at switching to a `Map` directly but it's used in a bunch of places so ended up being a larger change. I'd prefer keeping this PR focussed on the new formatter and maybe do some refactoring in a follow up PR. WDYT?",
        "createdAt" : "2020-07-02T12:54:25Z",
        "updatedAt" : "2020-07-02T12:58:40Z",
        "lastEditedBy" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "tags" : [
        ]
      },
      {
        "id" : "5bcd259a-8d6f-4378-8c48-45ee2c540abd",
        "parentId" : "b5322c58-f326-446a-a6aa-2978dd68200a",
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "I was thinking about adding a second utility method `CommandLineUtils.parseKeyValueArgsAsMap` and keep the existing one unchanged. We can do this as a follow up for sure.",
        "createdAt" : "2020-07-03T11:55:28Z",
        "updatedAt" : "2020-07-03T11:55:28Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      }
    ],
    "commit" : "212da2cb62554c439c2500c6678e168fa4eb8f70",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +309,313 @@    }\n\n    formatter.configure(formatterArgs.asScala.asJava)\n\n    val topicOrFilterOpt = List(topicIdOpt, whitelistOpt).filter(options.has)"
  },
  {
    "id" : "6ccb554f-3025-4337-91ac-c968444b01c6",
    "prId" : 8604,
    "prUrl" : "https://github.com/apache/kafka/pull/8604#pullrequestreview-442363935",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f99d4e22-ccce-4d6f-9cad-c7fecd5a7e3d",
        "parentId" : null,
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "Can't we use `configs` directly instead of building `props`?",
        "createdAt" : "2020-07-01T07:42:42Z",
        "updatedAt" : "2020-07-02T12:58:40Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      },
      {
        "id" : "adce1b07-4704-40e2-b51d-537d8be630b1",
        "parentId" : "f99d4e22-ccce-4d6f-9cad-c7fecd5a7e3d",
        "authorId" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "body" : "I initially was doing this but this forces casting the value to strings everywhere due to the type of the Map here `[String, _]`. Keeping the `Properties` object turned out way simpler.",
        "createdAt" : "2020-07-02T12:56:00Z",
        "updatedAt" : "2020-07-02T12:58:40Z",
        "lastEditedBy" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "tags" : [
        ]
      },
      {
        "id" : "10965827-87b4-46a5-98fe-fc4bfce1fb00",
        "parentId" : "f99d4e22-ccce-4d6f-9cad-c7fecd5a7e3d",
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "That's a good point. Probably, the correct way to do this in the future would be to define a `ConfigDef` to parse the Map. We can tackle this as part of https://github.com/apache/kafka/pull/8909.",
        "createdAt" : "2020-07-03T11:58:29Z",
        "updatedAt" : "2020-07-03T11:58:29Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      }
    ],
    "commit" : "212da2cb62554c439c2500c6678e168fa4eb8f70",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +468,472 @@  override def configure(configs: Map[String, _]): Unit = {\n    val props = new java.util.Properties()\n    configs.asScala.foreach { case (key, value) => props.put(key, value.toString) }\n    if (props.containsKey(\"print.timestamp\"))\n      printTimestamp = props.getProperty(\"print.timestamp\").trim.equalsIgnoreCase(\"true\")"
  },
  {
    "id" : "9f218e0f-1a77-4cac-a2eb-66baf58dffc4",
    "prId" : 11008,
    "prUrl" : "https://github.com/apache/kafka/pull/11008#pullrequestreview-705336098",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93de7025-284c-4b5a-9bdf-3b69efec3cd8",
        "parentId" : null,
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "We could remove `ignored if --include specified` if we don't accept both together. ",
        "createdAt" : "2021-07-13T12:31:18Z",
        "updatedAt" : "2021-07-13T12:38:42Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      },
      {
        "id" : "53dfe13b-8102-4232-a111-d2d379b8295a",
        "parentId" : "93de7025-284c-4b5a-9bdf-3b69efec3cd8",
        "authorId" : "73896ffa-873a-4115-b79b-370ca722bd60",
        "body" : "we can probably resolve this, since we decided to ignore deprecated args",
        "createdAt" : "2021-07-13T15:24:40Z",
        "updatedAt" : "2021-07-13T15:24:40Z",
        "lastEditedBy" : "73896ffa-873a-4115-b79b-370ca722bd60",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9e5421a900fe9a1d6a4771e4cdb32d5ce7d578b",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +193,197 @@      .ofType(classOf[String])\n    val whitelistOpt = parser.accepts(\"whitelist\",\n      \"DEPRECATED, use --include instead; ignored if --include specified. Regular expression specifying list of topics to include for consumption.\")\n      .withRequiredArg\n      .describedAs(\"Java regex (String)\")"
  }
]