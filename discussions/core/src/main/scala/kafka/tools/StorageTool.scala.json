[
  {
    "id" : "d0953844-a267-4534-b3f1-294e187e9479",
    "prId" : 10043,
    "prUrl" : "https://github.com/apache/kafka/pull/10043#pullrequestreview-585884175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eecd5134-824c-4577-bd00-b6e0af780056",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Do we always return zero if we don't throw? What's the use of this return value?",
        "createdAt" : "2021-02-08T18:07:51Z",
        "updatedAt" : "2021-02-08T20:41:31Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "3ebe7232-6281-4bc0-999e-9446aa940b86",
        "parentId" : "eecd5134-824c-4577-bd00-b6e0af780056",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "It's mainly for consistency with `infoCommand` which does sometimes return 1.  But I don't feel that strongly about it.",
        "createdAt" : "2021-02-08T20:14:54Z",
        "updatedAt" : "2021-02-08T20:41:31Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "80d3ce902c7825ec25e153bb2ec39152005dec8e",
    "line" : 236,
    "diffHunk" : "@@ -1,1 +234,238 @@      stream.println(s\"Formatting ${directory}\")\n    })\n    0\n  }\n}"
  },
  {
    "id" : "c4654e21-ca04-42aa-b851-ed80200b11a8",
    "prId" : 10357,
    "prUrl" : "https://github.com/apache/kafka/pull/10357#pullrequestreview-615972467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c1bf532-613c-4306-8c68-51b505c36d59",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Should we also remove the logic above which requires that the clusterId parses as a UUID?",
        "createdAt" : "2021-03-18T22:28:50Z",
        "updatedAt" : "2021-03-19T12:25:04Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "fe1a169e-b276-465d-94a7-0353aae0ed45",
        "parentId" : "0c1bf532-613c-4306-8c68-51b505c36d59",
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "> Should we also remove the [StorageTool] logic above which requires that the clusterId parses as a UUID \r\n\r\nBasically, this is asking if `StorageTool` should support accepting non-UUIDs via its `--cluster-id` argument.  One purpose of the tool is to minimize the chance that a broker could use data from the wrong volume (i.e. data from another cluster).  Generating a random UUID via the `--random-uuid` parameter encourages using a globally unique value for every cluster and is consistent with the behavior today with ZooKeeper, whereas allowing a non-UUID here would increase the chance that someone could reuse a Cluster ID value across clusters and short-circuit the risk mitigation that this tool provides.\r\n\r\nMerging this PR now avoids an uncomfortable \"rename\" in `BrokerRegistrationRequest` (or a breaking change) after 2.8 is released; letting `StorageTool` accept non-UUIDs can be done at any time with no impact.  Maybe we keep this PR about removing the constraint, which also simply cannot exist -- otherwise we can't upgrade clusters that don't use a UUID -- and leave this question about the `--cluster-id` parameter for a broader discussion later?  ",
        "createdAt" : "2021-03-19T00:14:23Z",
        "updatedAt" : "2021-03-19T12:25:04Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      },
      {
        "id" : "0793ae48-5bbe-4527-b553-078bcb4ed1e5",
        "parentId" : "0c1bf532-613c-4306-8c68-51b505c36d59",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I'm ok with doing this later. Let's be sure to file a jira so we don't forget about it.",
        "createdAt" : "2021-03-19T00:16:32Z",
        "updatedAt" : "2021-03-19T12:25:04Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "0e297300-909f-469c-a6d1-8a129898d47f",
        "parentId" : "0c1bf532-613c-4306-8c68-51b505c36d59",
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "> file a jira so we don't forget about it. \r\n\r\nhttps://issues.apache.org/jira/browse/KAFKA-12505",
        "createdAt" : "2021-03-19T00:20:53Z",
        "updatedAt" : "2021-03-19T12:25:04Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b80e440ea15cd53eb0ebf536c18d1563ccddd67",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +199,203 @@    }\n    require(config.nodeId >= 0, s\"The node.id must be set to a non-negative integer.\")\n    new MetaProperties(effectiveClusterId.toString, config.nodeId)\n  }\n"
  }
]