[
  {
    "id" : "87f8ece5-3e96-48ea-bc97-58a5a7438d3e",
    "prId" : 6728,
    "prUrl" : "https://github.com/apache/kafka/pull/6728#pullrequestreview-244373677",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ec87850-2fc3-40ef-819c-03223bfea219",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "The error may be a bit obscure if no `--partitions` or `--replication-factor` option was provided. Could we detect this case in the argument checks we have below?",
        "createdAt" : "2019-05-31T07:23:41Z",
        "updatedAt" : "2019-06-05T16:52:49Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "9fc56e0b-5191-4574-96ec-8eec3cc04d5e",
        "parentId" : "1ec87850-2fc3-40ef-819c-03223bfea219",
        "authorId" : "c1d8c456-76f0-40c1-8f33-97bb2067c9ea",
        "body" : "I wasn't sure if it was worth adding bloat for the deprecated code, but I'm happy adding it back (I had it then removed it)",
        "createdAt" : "2019-05-31T15:30:10Z",
        "updatedAt" : "2019-06-05T16:52:49Z",
        "lastEditedBy" : "c1d8c456-76f0-40c1-8f33-97bb2067c9ea",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c54538b7dbecec781cf0418cc1dc44923003753",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +298,302 @@          adminZkClient.createTopicWithAssignment(topic.name, topic.configsToAdd, topic.replicaAssignment.get)\n        else\n          adminZkClient.createTopic(topic.name, topic.partitions.get, topic.replicationFactor.get, topic.configsToAdd, topic.rackAwareMode)\n        println(s\"Created topic ${topic.name}.\")\n      } catch  {"
  },
  {
    "id" : "5d0ce357-97f0-4574-b049-f8165e977210",
    "prId" : 6836,
    "prUrl" : "https://github.com/apache/kafka/pull/6836#pullrequestreview-262803617",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ecf3756-8dc8-436b-9bff-0836a848f158",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Hmm.. I'm not sure I understand the reason for this change. Can you explain?",
        "createdAt" : "2019-07-01T21:56:44Z",
        "updatedAt" : "2019-07-01T22:00:51Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "c03975e4-c8ad-4f98-85f3-29c20278eddf",
        "parentId" : "4ecf3756-8dc8-436b-9bff-0836a848f158",
        "authorId" : "2b8ddac3-3f74-403c-9e9d-62dc37cb6655",
        "body" : "TopicCommandWithAdminClientTest.testDescribeUnderMinIsrPartitionsMixed will fail. If leader is not available, the partition must be a under-ISR one. ",
        "createdAt" : "2019-07-17T03:11:08Z",
        "updatedAt" : "2019-07-17T03:11:08Z",
        "lastEditedBy" : "2b8ddac3-3f74-403c-9e9d-62dc37cb6655",
        "tags" : [
        ]
      },
      {
        "id" : "2707e77f-1884-4309-a869-7dde5d52d3af",
        "parentId" : "4ecf3756-8dc8-436b-9bff-0836a848f158",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Hmm, good point. Since `min.insync.replicas` cannot be 0, I guess we could simplify this.\r\n```scala\r\npartitionDescription.leader.isEmpty || partitionDescription.isr.size < partitionDescription.minIsrCount\r\n```",
        "createdAt" : "2019-07-17T05:09:05Z",
        "updatedAt" : "2019-07-17T05:09:05Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "654949d269673ccb612261f3e635d3fc0a1b6621",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +121,125 @@    }\n    private def hasUnderMinIsrPartitions(partitionDescription: PartitionDescription) = {\n      if (partitionDescription.leader.isDefined)\n        partitionDescription.isr.size < partitionDescription.minIsrCount\n      else"
  },
  {
    "id" : "61b282bf-8081-4fdb-a113-3544891a2416",
    "prId" : 7136,
    "prUrl" : "https://github.com/apache/kafka/pull/7136#pullrequestreview-268560634",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d231464-ecdf-4aa0-8b76-82138125371c",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "This adapting is admittedly a little awkward, but eventually this code goes away, so I optimized for the admin client path.",
        "createdAt" : "2019-07-30T17:30:06Z",
        "updatedAt" : "2019-07-31T08:24:23Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "f299fc45-4e80-497b-8925-1b54db9ccd8b",
        "parentId" : "0d231464-ecdf-4aa0-8b76-82138125371c",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "What do you mean by \"eventually this goes away\"?",
        "createdAt" : "2019-07-30T17:41:12Z",
        "updatedAt" : "2019-07-31T08:24:23Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "fdf99cd3-a626-480f-94a7-08c71b2190da",
        "parentId" : "0d231464-ecdf-4aa0-8b76-82138125371c",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "We are planning to deprecate and remove the --zookeeper option.",
        "createdAt" : "2019-07-30T17:47:51Z",
        "updatedAt" : "2019-07-31T08:24:23Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe46ad1aade387bc2d7bf42b40d0db943e1a5506",
    "line" : 242,
    "diffHunk" : "@@ -1,1 +416,420 @@                }\n\n                def asNode(brokerId: Int): Node = {\n                  liveBrokers.get(brokerId) match {\n                    case Some(broker) => broker.node(broker.endPoints.head.listenerName)"
  },
  {
    "id" : "98a4b06d-2d4e-4c90-b358-61dbefda5c8c",
    "prId" : 8737,
    "prUrl" : "https://github.com/apache/kafka/pull/8737#pullrequestreview-420217231",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "776fd414-97bd-4163-9117-27358fb336b8",
        "parentId" : null,
        "authorId" : "478a572c-b267-486a-b845-4847ccf71f62",
        "body" : "removed this check and instead let the request go to the server and error (we need to handle that anyway) ",
        "createdAt" : "2020-05-28T15:15:21Z",
        "updatedAt" : "2020-05-30T16:56:33Z",
        "lastEditedBy" : "478a572c-b267-486a-b845-4847ccf71f62",
        "tags" : [
        ]
      }
    ],
    "commit" : "490085d347674a1cd60cc192d6083559620b2f8e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +229,233 @@        throw new IllegalArgumentException(s\"The partitions must be greater than 0\")\n\n      try {\n        val newTopic = if (topic.hasReplicaAssignment)\n          new NewTopic(topic.name, asJavaReplicaReassignment(topic.replicaAssignment.get))"
  },
  {
    "id" : "aeab4802-ee03-4b04-ae96-ab6f3f19aa31",
    "prId" : 8737,
    "prUrl" : "https://github.com/apache/kafka/pull/8737#pullrequestreview-421381511",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f622b620-bc3e-47c5-a803-676aa7c2388a",
        "parentId" : null,
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "I don't think this is really enough to accomplish your goal here.  With this code, if the topic does not exist, we will get past this line but then fail on the next line in `describeTopics, with a `NoSuchTopicOrPartitionException`.\r\n\r\nI think it would be better to simply catch the `NoSuchTopicOrPartitionException` and handle it appropriately like we did with topic creation.  This also avoids the redunant calls in `ensureTopicExists`.",
        "createdAt" : "2020-05-28T22:27:22Z",
        "updatedAt" : "2020-05-30T16:56:33Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "bda31b72-1618-41de-9ef2-8a6e5f050bc2",
        "parentId" : "f622b620-bc3e-47c5-a803-676aa7c2388a",
        "authorId" : "478a572c-b267-486a-b845-4847ccf71f62",
        "body" : "if the topic does not exist `ensureTopicExists()` will throw an `IllegalArgumentException` right? Let me look at this and the other two closely and get back ",
        "createdAt" : "2020-05-28T22:52:17Z",
        "updatedAt" : "2020-05-30T16:56:33Z",
        "lastEditedBy" : "478a572c-b267-486a-b845-4847ccf71f62",
        "tags" : [
        ]
      },
      {
        "id" : "4fe6052e-f028-4c2c-80c4-b4e202d55a53",
        "parentId" : "f622b620-bc3e-47c5-a803-676aa7c2388a",
        "authorId" : "478a572c-b267-486a-b845-4847ccf71f62",
        "body" : "Okay.. so I did think about the case where `--if-exists` is provided and thus `ensureTopicExists()` will move on without erroring... But I chose to let whatever exception that is thrown like NoSuchTopicOrPartitionException to propagate back to the caller/main() method..\r\n\r\nI guess you are suggesting to go to the server first and then handle the exception..  I am fine changing it, it does seem cleaner.",
        "createdAt" : "2020-05-28T23:04:44Z",
        "updatedAt" : "2020-05-30T16:56:33Z",
        "lastEditedBy" : "478a572c-b267-486a-b845-4847ccf71f62",
        "tags" : [
        ]
      },
      {
        "id" : "2cf8e310-db25-464f-9bb3-dc681ae0f875",
        "parentId" : "f622b620-bc3e-47c5-a803-676aa7c2388a",
        "authorId" : "478a572c-b267-486a-b845-4847ccf71f62",
        "body" : "So this is an execution of `testAlterWhenTopicDoesntExistWithIfExists` altering a non-existing topic using `-if-exists` . As you can see, `topics` is empty.. The cleaner thing to do here seems to be just place any further calls into a `if (topics.nonEmpty) { .. }` block.. \r\n\r\nIs your intention here, avoiding the call to `getTopics()` and `ensureTopicExists()`?  That was the model I was referring to above. if you concern is `describeTopics` failing, then it does not seem to be happening.. (but this code is on thin-ice, agree. if someone changes behavior of describeTopics, then this will break, but so will the test I added.) \r\n\r\n![image](https://user-images.githubusercontent.com/1179324/83203309-038e0d80-a0fe-11ea-90a7-46abed714aa2.png)\r\n",
        "createdAt" : "2020-05-28T23:16:58Z",
        "updatedAt" : "2020-05-30T16:56:33Z",
        "lastEditedBy" : "478a572c-b267-486a-b845-4847ccf71f62",
        "tags" : [
        ]
      },
      {
        "id" : "6d01457d-11f4-4379-a257-4af4c2391f2a",
        "parentId" : "f622b620-bc3e-47c5-a803-676aa7c2388a",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "I was wondering about how the tests passed!  I guess I missed something important about `getTopics`-- the fact that it returns either one or zero topics.  (I forgot that zero was a possibility).\r\n\r\nThe problem with how the code works today is that it's really very wasteful.  It's literally listing every topic in the cluster, (which could be tens of thousands) just to see if the specific one you passed exists. There is also the potential for a TOCTOU issue here (for example, it existed but then was deleted right before you went to use it.)\r\n\r\nSo I would like to see this fixed to avoid doing the getTopics.  I guess think about it and if it seems reasonable to do it in the PR, let's go for it.  Otherwise I can create a follow-up JIRA.\r\n\r\nWe will need to fix stuff like this to scale the Kafka up.  People listing the full set of all topics is bad for scalability.",
        "createdAt" : "2020-05-28T23:54:54Z",
        "updatedAt" : "2020-05-30T16:56:33Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "3448fb30-68cd-40c1-b934-86df799a1f09",
        "parentId" : "f622b620-bc3e-47c5-a803-676aa7c2388a",
        "authorId" : "478a572c-b267-486a-b845-4847ccf71f62",
        "body" : "@cmccabe So this is a tad more complicated.. \r\n\r\nIn general, we need to do `getTopics` to deal with wildcard/regex arguments (all of these commands support them, even `alter`). To fix this, we need to move the resolution of regex to actual topic names further into AdminClient/Server.. This does not seem trivial to me. Specifically for `alter` we need to pull down the existing partition metadata to add more partitions, so we have a bigger TOCTOU issue here anyway.. Again something that needs better admin client APIs\r\n\r\nThat said, I do like having an eye towards making all these tools more scalable down the line. I can create a parent JIRA and keep filing these issues under there... (please let me know if a JIRA already exists like that).. \r\n\r\n\r\n\r\n\r\n",
        "createdAt" : "2020-05-29T16:19:35Z",
        "updatedAt" : "2020-05-30T16:56:33Z",
        "lastEditedBy" : "478a572c-b267-486a-b845-4847ccf71f62",
        "tags" : [
        ]
      },
      {
        "id" : "9c021bb1-d79c-4d0d-97b8-b87dd471560a",
        "parentId" : "f622b620-bc3e-47c5-a803-676aa7c2388a",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Sounds good.  Thanks for digging into this!",
        "createdAt" : "2020-05-30T05:59:30Z",
        "updatedAt" : "2020-05-30T16:56:33Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "490085d347674a1cd60cc192d6083559620b2f8e",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +264,268 @@      val topic = new CommandTopicPartition(opts)\n      val topics = getTopics(opts.topic, opts.excludeInternalTopics)\n      ensureTopicExists(topics, opts.topic, !opts.ifExists)\n\n      if (topics.nonEmpty) {"
  },
  {
    "id" : "0b2b6977-0539-40e7-b892-01028f9c4443",
    "prId" : 8737,
    "prUrl" : "https://github.com/apache/kafka/pull/8737#pullrequestreview-421140543",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4db62bd5-fd12-4dd5-96af-217c89ccfb8d",
        "parentId" : null,
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Same issue here as above.  You can get past this line this way, but you still fail when actually calling `describeTopics`.\r\n\r\nAnother issue with this code is that we should not be listing all partition reassignments.  `Admin#listPartitionReassignments` has a variant that takes a list of partitions.  We should use that so that we're not fetching a lot of information that we don't need.  I think this should be an easy fix",
        "createdAt" : "2020-05-28T22:29:20Z",
        "updatedAt" : "2020-05-30T16:56:33Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "987ccfca-62b4-4351-a166-c60892449ba5",
        "parentId" : "4db62bd5-fd12-4dd5-96af-217c89ccfb8d",
        "authorId" : "478a572c-b267-486a-b845-4847ccf71f62",
        "body" : "I will look into the new API.. so `topics` will be empty and I checked that the describeTopics() will actually send an empty topicList.. Let me look into simplifying this more. ",
        "createdAt" : "2020-05-28T23:08:08Z",
        "updatedAt" : "2020-05-30T16:56:33Z",
        "lastEditedBy" : "478a572c-b267-486a-b845-4847ccf71f62",
        "tags" : [
        ]
      },
      {
        "id" : "52956bc5-9063-4efb-b132-44cf24f62629",
        "parentId" : "4db62bd5-fd12-4dd5-96af-217c89ccfb8d",
        "authorId" : "478a572c-b267-486a-b845-4847ccf71f62",
        "body" : "On avoiding `getTopics`, same issue.. `AdminClient#describeTopics(..)` cannot handle regexes. I made the changes for using the trimmed down `Admin#listPartitionReassignments` ",
        "createdAt" : "2020-05-29T17:14:41Z",
        "updatedAt" : "2020-05-30T16:56:33Z",
        "lastEditedBy" : "478a572c-b267-486a-b845-4847ccf71f62",
        "tags" : [
        ]
      }
    ],
    "commit" : "490085d347674a1cd60cc192d6083559620b2f8e",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +300,304 @@    override def describeTopic(opts: TopicCommandOptions): Unit = {\n      val topics = getTopics(opts.topic, opts.excludeInternalTopics)\n      ensureTopicExists(topics, opts.topic, !opts.ifExists)\n\n      if (topics.nonEmpty) {"
  },
  {
    "id" : "fbc72353-df77-48ae-8d9d-3637d9014b45",
    "prId" : 8737,
    "prUrl" : "https://github.com/apache/kafka/pull/8737#pullrequestreview-421141069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3fc55dd1-a1a7-4dcf-a114-e2ab12a9bb1e",
        "parentId" : null,
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Same issue here as above.  `Admin#deleteTopics` will fail if the topic doesn't exist, regardless of line 334.",
        "createdAt" : "2020-05-28T22:31:10Z",
        "updatedAt" : "2020-05-30T16:56:33Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "6099b083-12c5-4905-afe2-c8324fab9ee0",
        "parentId" : "3fc55dd1-a1a7-4dcf-a114-e2ab12a9bb1e",
        "authorId" : "478a572c-b267-486a-b845-4847ccf71f62",
        "body" : "Like we discussed.. getTopics will guard the issue you point out.. avoiding `getTopics` is again tricky due to regex/wildcard matching",
        "createdAt" : "2020-05-29T17:15:26Z",
        "updatedAt" : "2020-05-30T16:56:33Z",
        "lastEditedBy" : "478a572c-b267-486a-b845-4847ccf71f62",
        "tags" : [
        ]
      }
    ],
    "commit" : "490085d347674a1cd60cc192d6083559620b2f8e",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +341,345 @@    override def deleteTopic(opts: TopicCommandOptions): Unit = {\n      val topics = getTopics(opts.topic, opts.excludeInternalTopics)\n      ensureTopicExists(topics, opts.topic, !opts.ifExists)\n      adminClient.deleteTopics(topics.asJavaCollection).all().get()\n    }"
  },
  {
    "id" : "3b8789a9-6b90-4721-90db-1608ee00f4a4",
    "prId" : 8737,
    "prUrl" : "https://github.com/apache/kafka/pull/8737#pullrequestreview-421426299",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcdb6291-5f07-4b27-8aca-cdf46a280b65",
        "parentId" : null,
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "It's not necessary to check this.  AdminClient handles being passed empty lists or sets of topics.",
        "createdAt" : "2020-05-30T06:00:59Z",
        "updatedAt" : "2020-05-30T16:56:33Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "0a930f49-ad2e-4b47-9598-41277e561ae4",
        "parentId" : "bcdb6291-5f07-4b27-8aca-cdf46a280b65",
        "authorId" : "478a572c-b267-486a-b845-4847ccf71f62",
        "body" : "`        val liveBrokers = adminClient.describeCluster().nodes().get().asScala.map(_.id())\r\n`\r\n\r\nThis line still makes an RPC call.",
        "createdAt" : "2020-05-30T16:35:11Z",
        "updatedAt" : "2020-05-30T16:56:33Z",
        "lastEditedBy" : "478a572c-b267-486a-b845-4847ccf71f62",
        "tags" : [
        ]
      }
    ],
    "commit" : "490085d347674a1cd60cc192d6083559620b2f8e",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +302,306 @@      ensureTopicExists(topics, opts.topic, !opts.ifExists)\n\n      if (topics.nonEmpty) {\n        val allConfigs = adminClient.describeConfigs(topics.map(new ConfigResource(Type.TOPIC, _)).asJavaCollection).values()\n        val liveBrokers = adminClient.describeCluster().nodes().get().asScala.map(_.id())"
  }
]