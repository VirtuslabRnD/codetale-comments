[
  {
    "id" : "b9ce99b2-183c-406d-b7c7-5e77d163dc5b",
    "prId" : 4503,
    "prUrl" : "https://github.com/apache/kafka/pull/4503#pullrequestreview-93231565",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70c9f21e-f595-449f-b5c1-7ca9b7ef246f",
        "parentId" : null,
        "authorId" : "915b2f67-05e6-4824-939a-398e7be58870",
        "body" : "looks like we are not doing valid config check.  I was able to add some random config. we are doing invalid config check for other types (topic, users)",
        "createdAt" : "2018-02-01T07:25:28Z",
        "updatedAt" : "2018-02-02T21:51:31Z",
        "lastEditedBy" : "915b2f67-05e6-4824-939a-398e7be58870",
        "tags" : [
        ]
      },
      {
        "id" : "bf7f82c3-368a-4292-9ee5-27d0e478e6a0",
        "parentId" : "70c9f21e-f595-449f-b5c1-7ca9b7ef246f",
        "authorId" : "915b2f67-05e6-4824-939a-398e7be58870",
        "body" : "just saw below comment at adminZkClient.validateBrokerConfig. Pls ignore above comment.\r\n\r\n\"Since broker configs may contain custom configs, the validation only verifies that the provided config does not contain any static configs.\"",
        "createdAt" : "2018-02-01T10:20:00Z",
        "updatedAt" : "2018-02-02T21:51:31Z",
        "lastEditedBy" : "915b2f67-05e6-4824-939a-398e7be58870",
        "tags" : [
        ]
      },
      {
        "id" : "14846414-2b0f-4453-af04-9a87b09b6245",
        "parentId" : "70c9f21e-f595-449f-b5c1-7ca9b7ef246f",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "@omkreddy Thanks for the review. We allow custom configs for brokers (e.g. properties of metrics reporters). So we validate all broker configs and allow adding other custom configs.",
        "createdAt" : "2018-02-01T10:35:59Z",
        "updatedAt" : "2018-02-02T21:51:31Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c122527b6aac22323a62c3d084e3c2ba05689762",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +249,253 @@\n    val alterOptions = new AlterConfigsOptions().timeoutMs(30000).validateOnly(false)\n    adminClient.alterConfigs(Map(configResource -> newConfig).asJava, alterOptions).all().get(60, TimeUnit.SECONDS)\n\n    if (entityName.nonEmpty)"
  },
  {
    "id" : "44b9dab2-87f2-4589-9867-5375dd6583e0",
    "prId" : 4503,
    "prUrl" : "https://github.com/apache/kafka/pull/4503#pullrequestreview-93784030",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afa82de1-e306-4ab2-8fa2-1063ed9b57c7",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Looks like this is the first case where we pass admin client properties to a tool, so I'm wondering about the name. An alternative might be `admin-config` to make it's relation to the AdminClient a bit more obvious.",
        "createdAt" : "2018-02-02T07:04:34Z",
        "updatedAt" : "2018-02-02T21:51:31Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "45094ead-9446-4eab-bf4b-7c4cf383be18",
        "parentId" : "afa82de1-e306-4ab2-8fa2-1063ed9b57c7",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "I had suggested `adminclient-config` for KIP-248 and later realized that `DelegationTokenCommand`, `ConsumerGroupCommand`, `BrokerApiVersionsCommand` and `DeleteRecordsCommand` use `--command-config`.",
        "createdAt" : "2018-02-02T21:56:26Z",
        "updatedAt" : "2018-02-02T21:56:26Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      },
      {
        "id" : "7edc9b08-4984-4768-aa31-728f728a86e0",
        "parentId" : "afa82de1-e306-4ab2-8fa2-1063ed9b57c7",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Ok, guess the ship has sailed; \"command-config\" it is.",
        "createdAt" : "2018-02-02T23:07:41Z",
        "updatedAt" : "2018-02-02T23:07:41Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "c122527b6aac22323a62c3d084e3c2ba05689762",
    "line" : 212,
    "diffHunk" : "@@ -1,1 +404,408 @@      .describedAs(\"server to connect to\")\n      .ofType(classOf[String])\n    val commandConfigOpt = parser.accepts(\"command-config\", \"Property file containing configs to be passed to Admin Client. \" +\n      \"This is used only with --bootstrap-server option for describing and altering broker configs.\")\n      .withRequiredArg"
  },
  {
    "id" : "42a53c6a-ec97-4c6b-b7fc-787c1c7f142f",
    "prId" : 4898,
    "prUrl" : "https://github.com/apache/kafka/pull/4898#pullrequestreview-129226628",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4dc2fb0-6857-4f02-80f2-fc1431de2479",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "This seems a little annoying from a user perspective. If we have to open the door for changing configs directly through zk, do we get much benefit from restricting its usage?",
        "createdAt" : "2018-04-23T16:54:15Z",
        "updatedAt" : "2018-06-18T17:21:49Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "b7c984b5-8007-4588-9b03-ea23b845e09b",
        "parentId" : "a4dc2fb0-6857-4f02-80f2-fc1431de2479",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "@hachikuji Thanks for the review. For initial configuration of brokers, we don't do much validation. This feels reasonable since initial config from server.properties is only validated when broker starts up (broker fails to start with invalid config). The validation is slightly better with configs persisted in ZK since we can check the types etc. With dynamic configuration of a running broker, we do a lot more validation. For example, for keystore update, we can check that the file exists on the broker and is a valid store, but that can only be verified by the broker itself. For inter-broker keystore update, we can validate keystore against truststore. We could allow updating using ZK at any time and have the broker print out an error and not apply an invalid config. But since we are able to validate using AdminClient and the tool gives immediate feedback for invalid config, I thought it was better to restrict this for bootstrapping use only. ",
        "createdAt" : "2018-04-24T15:38:44Z",
        "updatedAt" : "2018-06-18T17:21:49Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      },
      {
        "id" : "b3fabb40-4326-4430-9a93-6d05a6af18f1",
        "parentId" : "a4dc2fb0-6857-4f02-80f2-fc1431de2479",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Ok, that makes sense. Perhaps we can explain in the message that configuration through zookeeper is only permitted in order to bootstrap a broker? Maybe we should even mention the password use case?",
        "createdAt" : "2018-06-15T16:04:24Z",
        "updatedAt" : "2018-06-18T17:21:49Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3198bb34917bde4769b9b38ec13a1595233c9c1",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +122,126 @@      // Replication quota configs may be updated using ZK at any time. Other dynamic broker configs\n      // may be updated using ZooKeeper only if the corresponding broker is not running. Dynamic broker\n      // configs at cluster-default level may be configured using ZK only if there are no brokers running.\n      val dynamicBrokerConfigs = configsToBeAdded.asScala.keySet.filterNot(BrokerConfigsUpdatableUsingZooKeeperWhileBrokerRunning.contains)\n      if (dynamicBrokerConfigs.nonEmpty) {"
  },
  {
    "id" : "e238c033-3962-4fc6-9ef7-b94578ea469b",
    "prId" : 4956,
    "prUrl" : "https://github.com/apache/kafka/pull/4956#pullrequestreview-121886777",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83a50262-fca1-4dd5-b3b2-ceecd2523e89",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Can we add a comment explaining why the `-1` is needed here?",
        "createdAt" : "2018-05-21T17:53:22Z",
        "updatedAt" : "2018-06-05T08:53:36Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f31d21c17e690eeb44631100cb82f9cd284b2e7",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +180,184 @@      val configsToBeAdded = opts.options.valueOf(opts.addConfig)\n        .split(\",\" + pattern)\n        .map(_.split(\"\"\"\\s*=\\s*\"\"\" + pattern, -1))\n      require(configsToBeAdded.forall(config => config.length == 2), \"Invalid entity config: all configs to be added must be in the format \\\"key=val\\\".\")\n      //Create properties, parsing square brackets from values if necessary"
  }
]