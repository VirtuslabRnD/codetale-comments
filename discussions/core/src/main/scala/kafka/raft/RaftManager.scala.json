[
  {
    "id" : "20843852-e469-4b9a-9b6f-ee5e47a2dc9f",
    "prId" : 9839,
    "prUrl" : "https://github.com/apache/kafka/pull/9839#pullrequestreview-563727559",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b70007f5-802b-4420-b755-ccd0c7e2fe22",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "Should we shutdown ```raftClient``` in this method?",
        "createdAt" : "2021-01-07T05:36:28Z",
        "updatedAt" : "2021-01-08T18:44:35Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "b6797ac9-dc30-49ce-9c14-48ccde356275",
        "parentId" : "b70007f5-802b-4420-b755-ccd0c7e2fe22",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "See the logic in `RaftIoThread.initiateShutdown`. Note that the thread continues polling until graceful shutdown has either completed or timed out.",
        "createdAt" : "2021-01-07T18:35:54Z",
        "updatedAt" : "2021-01-08T18:44:35Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c3044ff0c003b732cb84c35a9352b9914498e74",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +124,128 @@  }\n\n  def shutdown(): Unit = {\n    raftIoThread.shutdown()\n    raftClient.close()"
  },
  {
    "id" : "583656e2-4da5-4ce6-9294-a4a842ffa9ac",
    "prId" : 9839,
    "prUrl" : "https://github.com/apache/kafka/pull/9839#pullrequestreview-563887957",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cf68c41-b392-42d7-add1-085a5946a08e",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "(this is unrelated to this PR.)\r\n\r\nHow about using ```Optional``` to replace the ```null```?",
        "createdAt" : "2021-01-07T05:51:26Z",
        "updatedAt" : "2021-01-08T18:44:35Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "cecb2787-0dda-4fbf-9427-fa55f81e9a7f",
        "parentId" : "4cf68c41-b392-42d7-add1-085a5946a08e",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Yeah, it's a good idea. I used the `null` as a placeholder until I thought of a better idea, but `Optional` is probably just as good as a placeholder and safer.",
        "createdAt" : "2021-01-07T18:35:45Z",
        "updatedAt" : "2021-01-08T18:44:35Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "d8b1ab8a-ee9b-4851-9cfd-b7be08dbfef6",
        "parentId" : "4cf68c41-b392-42d7-add1-085a5946a08e",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I started to implement this, but found it was taking me a bit afield. If you don't mind, let's address this in https://issues.apache.org/jira/browse/KAFKA-12158.",
        "createdAt" : "2021-01-07T22:53:47Z",
        "updatedAt" : "2021-01-08T18:44:35Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c3044ff0c003b732cb84c35a9352b9914498e74",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +142,146 @@    records: Seq[T]\n  ): Option[Long] = {\n    val offset: java.lang.Long = raftClient.scheduleAppend(epoch, records.asJava)\n    if (offset == null) {\n      None"
  },
  {
    "id" : "901047ad-dbf3-4e78-93dd-3a64fb5e51bb",
    "prId" : 9839,
    "prUrl" : "https://github.com/apache/kafka/pull/9839#pullrequestreview-563892719",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6315525-52df-4ed6-be38-07a201373432",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "just curious. If ```poll``` throws exception, this I/O thread get died and ```isRunning``` still returns ```true``` (since raft client is running). How ```KafkaRaftManager``` deal with that scenario?",
        "createdAt" : "2021-01-07T20:41:47Z",
        "updatedAt" : "2021-01-08T18:44:35Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "74a7f52e-820f-42c5-8b5e-e32398088059",
        "parentId" : "d6315525-52df-4ed6-be38-07a201373432",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Good point. I changed `isRunning` so that it also checks if the thread has failed. Added a test case as well.",
        "createdAt" : "2021-01-07T23:04:22Z",
        "updatedAt" : "2021-01-08T18:44:35Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c3044ff0c003b732cb84c35a9352b9914498e74",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +47,51 @@  ) {\n    override def doWork(): Unit = {\n      client.poll()\n    }\n"
  },
  {
    "id" : "a106c573-f666-4feb-a5ee-d7d72ae58491",
    "prId" : 9839,
    "prUrl" : "https://github.com/apache/kafka/pull/9839#pullrequestreview-564019667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "667b64cd-47fd-4abe-91d9-137483de94f5",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "There is another issue. After ```client.poll()``` gets failed, the ```isThreadFailed``` becomes ```true``` and so ```isRunning``` returns ```false```. It means ```initiateShutdown``` does not call ```client.shutdown``` even though we call ```shutdown``` explicitly.",
        "createdAt" : "2021-01-08T04:29:41Z",
        "updatedAt" : "2021-01-08T18:44:35Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "48fd1bc4-b960-40bd-b95a-3562e52ce98a",
        "parentId" : "667b64cd-47fd-4abe-91d9-137483de94f5",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "It's a good question and I was debating it earlier today. It's worth keeping in mind that `KafkaRaftClient` doesn't really own the resources that would need closing. Sockets and files are owned by `RaftManager`, so they will still get closed properly. The one exception is de-registration of metrics in `KafkaRaftMetrics.close`. \r\n\r\nThe main purpose of `shutdown` is to attempt a graceful departure from the quorum. But after we after we have hit an unexpected exception and are left in an undetermined state, do we still want to try the graceful shutdown? I was leaning toward 'no'. \r\n\r\nPerhaps what this suggests is that we should have a separate `close` method which can handle cleanup of any resources that `KafkaRaftClient` owns today (and might own in the future). If we hit an uncaught exception, then we can forego the call to `shutdown`, but we can ensure that `close` always gets called. How does that sound?",
        "createdAt" : "2021-01-08T05:28:01Z",
        "updatedAt" : "2021-01-08T18:44:35Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "c5529499-5faf-45f3-8f12-11c70c591e3a",
        "parentId" : "667b64cd-47fd-4abe-91d9-137483de94f5",
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "> we can forego the call to shutdown, but we can ensure that close always gets called. How does that sound?\r\n\r\nsounds good to me :)",
        "createdAt" : "2021-01-08T05:57:58Z",
        "updatedAt" : "2021-01-08T18:44:35Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c3044ff0c003b732cb84c35a9352b9914498e74",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +66,70 @@\n    override def isRunning: Boolean = {\n      client.isRunning && !isThreadFailed\n    }\n  }"
  },
  {
    "id" : "d777487b-9359-4268-982d-e49bde61ebbd",
    "prId" : 9881,
    "prUrl" : "https://github.com/apache/kafka/pull/9881#pullrequestreview-571489029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5962457-358b-4dde-9757-396bcf065eae",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "This is a really important file name and should be stored and documented in a static final field. How about defining this in `FileBasedStateStore` and changing the constructor to `FileBasedStateStore(Path dataDir)`?\r\n\r\nIf you agree, I can file an issue for this.\r\n\r\ncc @aloknnikhil @hachikuji ",
        "createdAt" : "2021-01-15T21:27:05Z",
        "updatedAt" : "2021-01-15T21:30:28Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "f3c16fef-b42a-450a-b968-b9b963a73ff4",
        "parentId" : "c5962457-358b-4dde-9757-396bcf065eae",
        "authorId" : "19ee7e44-7168-44d6-980b-a3b07f2ad76a",
        "body" : "Makes sense to me. ",
        "createdAt" : "2021-01-15T21:33:33Z",
        "updatedAt" : "2021-01-15T21:33:33Z",
        "lastEditedBy" : "19ee7e44-7168-44d6-980b-a3b07f2ad76a",
        "tags" : [
        ]
      },
      {
        "id" : "7e3ec5fc-a9d1-4e23-b724-230fa1c82441",
        "parentId" : "c5962457-358b-4dde-9757-396bcf065eae",
        "authorId" : "19ee7e44-7168-44d6-980b-a3b07f2ad76a",
        "body" : "Wondering if it makes sense to introduce a config (or maybe just the final field) as part of #9916 ",
        "createdAt" : "2021-01-15T23:01:39Z",
        "updatedAt" : "2021-01-15T23:01:39Z",
        "lastEditedBy" : "19ee7e44-7168-44d6-980b-a3b07f2ad76a",
        "tags" : [
        ]
      },
      {
        "id" : "e4a8e968-0cb6-4077-9fd0-3a962f54d38f",
        "parentId" : "c5962457-358b-4dde-9757-396bcf065eae",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "I don't think this should be configurable as it is part of the data (topic partition directory). It cannot conflict with other files in that directory and it cannot change between restart. KIP-595 documents this file and its use.",
        "createdAt" : "2021-01-17T00:00:36Z",
        "updatedAt" : "2021-01-17T00:00:37Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "08530ae1-34e3-4307-b576-bc2557bc5110",
        "parentId" : "c5962457-358b-4dde-9757-396bcf065eae",
        "authorId" : "19ee7e44-7168-44d6-980b-a3b07f2ad76a",
        "body" : "Yea, that's fair. We can leave it for another PR.",
        "createdAt" : "2021-01-19T17:38:39Z",
        "updatedAt" : "2021-01-19T17:38:39Z",
        "lastEditedBy" : "19ee7e44-7168-44d6-980b-a3b07f2ad76a",
        "tags" : [
        ]
      }
    ],
    "commit" : "1735ae340894d16b87eae1c99305bc054ce8a672",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +175,179 @@      netChannel,\n      metadataLog,\n      new FileBasedStateStore(new File(dataDir, \"quorum-state\")),\n      time,\n      metrics,"
  }
]