[
  {
    "id" : "6d74b52a-d5bf-4f96-a9bc-c295ab82377b",
    "prId" : 4090,
    "prUrl" : "https://github.com/apache/kafka/pull/4090#pullrequestreview-493565402",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ca16389-050e-4e7f-ba1e-19cef9587550",
        "parentId" : null,
        "authorId" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "body" : "It seems like that the most adequate JsonProcessingException is JsonParseException that could apply here. Another possibility is to change the exception in return type to something like IOException and throw that here but it seems it's more vague than throwing JsonParseException.\r\nAnother option is to simple throw IllegalArgumentException here instead of Left. That would correspond to the `readTree(InputStream)` as well. What do you think?",
        "createdAt" : "2020-09-22T13:38:51Z",
        "updatedAt" : "2020-09-23T15:23:57Z",
        "lastEditedBy" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "tags" : [
        ]
      },
      {
        "id" : "dbf1785b-d706-49df-917a-4f8c5107b794",
        "parentId" : "9ca16389-050e-4e7f-ba1e-19cef9587550",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "This seems fine.",
        "createdAt" : "2020-09-22T15:08:33Z",
        "updatedAt" : "2020-09-23T15:23:57Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "19da4d9a6037f3902e60aad58ab8c7e5b478c2aa",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +72,76 @@  def tryParseFull(input: String): Either[JsonProcessingException, JsonValue] =\n    if (input == null || input.isEmpty)\n      Left(new JsonParseException(MissingNode.getInstance().traverse(), \"The input string shouldn't be empty\"))\n    else\n      try Right(mapper.readTree(input)).map(JsonValue(_))"
  },
  {
    "id" : "fc5b6517-9c16-4bdc-9f74-ad3e5d815b12",
    "prId" : 8591,
    "prUrl" : "https://github.com/apache/kafka/pull/8591#pullrequestreview-406724297",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2aeb259-6d3d-4845-b2a9-b59a200caa6f",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I'm probably missing something obvious, but I found the following callers of this function: `DeleteRecordsCommand`, `LeaderElectionCommand`, `PreferredReplicaLeaderElectionCommand`, and `ReassignPartitionsCommand`. As far as I can tell, none of these uses involve the parsing of ACLs. Did we lose this compatibility handling at some point or is there some magic invocation?",
        "createdAt" : "2020-05-01T21:21:53Z",
        "updatedAt" : "2020-05-06T15:24:36Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "989fd975-d0db-4bac-b3b7-c63260ca08d7",
        "parentId" : "c2aeb259-6d3d-4845-b2a9-b59a200caa6f",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "The compatibility fix was only required for ACLs, but we added it here to keep the fix small for backporting. The idea was to move to the appropriate place soon after, but it got stuck for a while. Do you have some concerns?",
        "createdAt" : "2020-05-01T22:37:12Z",
        "updatedAt" : "2020-05-06T15:24:36Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "d4e6124c-eb91-42f0-961c-c4dcbb8177df",
        "parentId" : "c2aeb259-6d3d-4845-b2a9-b59a200caa6f",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Discussed this offline with @hachikuji. I had misunderstood his point. It looks like the compatibility code has not been used since 1.1.0:\r\n\r\nhttps://github.com/apache/kafka/commit/9b44c3e7f89b55528b12ba280007c804682beb0b#diff-81f2ec590f4e047be7e3a7e5267cbc9aR60",
        "createdAt" : "2020-05-01T23:30:28Z",
        "updatedAt" : "2020-05-06T15:24:36Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "1f540805-951f-431f-aa67-7adadcfbe9ee",
        "parentId" : "c2aeb259-6d3d-4845-b2a9-b59a200caa6f",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Maybe we should just drop this code.",
        "createdAt" : "2020-05-01T23:31:07Z",
        "updatedAt" : "2020-05-06T15:24:36Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "a5459d08-f49d-4520-b267-ce14d298ecc5",
        "parentId" : "c2aeb259-6d3d-4845-b2a9-b59a200caa6f",
        "authorId" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "body" : "I looks like `parseFull` is used in a couple of places as Json mentioned but I can perhaps just delegate this to `parseBytes` like this below and can continue using that in the mentioned callers.\r\n```\r\ndef parseFull(input: String): Option[JsonValue] = parseBytes(input.getBytes(Charset.defaultCharset()))\r\n```\r\nOr shall I just get rid of this code and use `parseBytes` everywhere?",
        "createdAt" : "2020-05-05T11:32:05Z",
        "updatedAt" : "2020-05-06T15:24:36Z",
        "lastEditedBy" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "tags" : [
        ]
      },
      {
        "id" : "d98d436e-d744-4e0d-85d4-ea06b33a122f",
        "parentId" : "c2aeb259-6d3d-4845-b2a9-b59a200caa6f",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "This code is fine as it is. We are suggesting that we don't need `parseBytesWithAclFallback` in `AclEntry`.",
        "createdAt" : "2020-05-05T13:51:07Z",
        "updatedAt" : "2020-05-06T15:24:36Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "4d9a3254-ac37-45d8-98fd-f33e09e450aa",
        "parentId" : "c2aeb259-6d3d-4845-b2a9-b59a200caa6f",
        "authorId" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "body" : "Ok, then I misunderstood it too. :)\r\nHowever isn't it possible that this issue resurfaces again if we remove this? I suspect the user who raised it may still use 1.0 where it got fixed and when they upgrade they'd run into this again. Or am I missing something else too?",
        "createdAt" : "2020-05-06T12:33:46Z",
        "updatedAt" : "2020-05-06T15:24:36Z",
        "lastEditedBy" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "tags" : [
        ]
      },
      {
        "id" : "60832706-30f9-4df4-9312-1f895b191847",
        "parentId" : "c2aeb259-6d3d-4845-b2a9-b59a200caa6f",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "@viktorsomogyi I think the argument is that if no-one complained since 1.1 which was released more than 2 years ago, then maybe this issue is very rare.",
        "createdAt" : "2020-05-06T13:46:11Z",
        "updatedAt" : "2020-05-06T15:24:36Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "1c44ddcf-eb7a-441e-9f50-0cf44307eba9",
        "parentId" : "c2aeb259-6d3d-4845-b2a9-b59a200caa6f",
        "authorId" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "body" : "Ok, that's fair. I've uploaded the changes.",
        "createdAt" : "2020-05-06T15:23:00Z",
        "updatedAt" : "2020-05-06T15:24:36Z",
        "lastEditedBy" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "tags" : [
        ]
      }
    ],
    "commit" : "802e255683ee1f33df9935f7914f5eda2a6c1d52",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +34,38 @@   * Parse a JSON string into a JsonValue if possible. `None` is returned if `input` is not valid JSON.\n   */\n  def parseFull(input: String): Option[JsonValue] =\n    try Option(mapper.readTree(input)).map(JsonValue(_))\n    catch { case _: JsonProcessingException => None }"
  }
]