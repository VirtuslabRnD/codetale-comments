[
  {
    "id" : "2a223157-681f-4310-ac9a-153ec4a65c3a",
    "prId" : 6588,
    "prUrl" : "https://github.com/apache/kafka/pull/6588#pullrequestreview-227999811",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70b6a15e-1373-481e-b258-03710504fa7b",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "TODO: `if (deletePartititon)`",
        "createdAt" : "2019-04-17T21:08:55Z",
        "updatedAt" : "2019-04-24T22:00:55Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b68fbe3cb047ef1c25bacb7c65955805306c96c",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +357,361 @@    brokerIds.filter(_ >= 0).foreach { brokerId =>\n      def topicDeletionCallback(stopReplicaResponse: AbstractResponse): Unit = {\n        controller.eventManager.put(controller.TopicDeletionStopReplicaResponseReceived(stopReplicaResponse, brokerId))\n      }\n"
  },
  {
    "id" : "1d390158-8d6d-49a7-9562-5e3caaa4af4d",
    "prId" : 6642,
    "prUrl" : "https://github.com/apache/kafka/pull/6642#pullrequestreview-231677498",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1f80795-3929-4a57-9d6e-14c7fd29f1c9",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Out of curiosity, why are we using `ListBuffer`?",
        "createdAt" : "2019-04-29T13:34:38Z",
        "updatedAt" : "2019-05-13T23:04:49Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3d0db41a3c6ca30e89f9e83db0959b2bb88eef9",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +335,339 @@  val controllerId: Int = config.brokerId\n  val leaderAndIsrRequestMap = mutable.Map.empty[Int, mutable.Map[TopicPartition, LeaderAndIsrRequest.PartitionState]]\n  val stopReplicaRequestMap = mutable.Map.empty[Int, ListBuffer[StopReplicaRequestInfo]]\n  val updateMetadataRequestBrokerSet = mutable.Set.empty[Int]\n  val updateMetadataRequestPartitionInfoMap = mutable.Map.empty[TopicPartition, UpdateMetadataRequest.PartitionState]"
  },
  {
    "id" : "821fb801-8ab3-4b65-afc6-8de65e5d83fc",
    "prId" : 6642,
    "prUrl" : "https://github.com/apache/kafka/pull/6642#pullrequestreview-236939981",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0075f6f8-b12d-42ed-9035-59610a9e2ead",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "This is probably an existing issue. We have the following code in line 79. Since removeExistingBroker updates brokerStateInfo directly, I am wondering if this will prevent values() from iterating all entries.\r\n\r\n`brokerStateInfo.values.foreach(removeExistingBroker)`",
        "createdAt" : "2019-05-07T21:01:53Z",
        "updatedAt" : "2019-05-13T23:04:49Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "02d86f86-6e7b-4fec-a015-4d36ecf47134",
        "parentId" : "0075f6f8-b12d-42ed-9035-59610a9e2ead",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I am not sure. Probably best to make a copy.",
        "createdAt" : "2019-05-13T21:57:18Z",
        "updatedAt" : "2019-05-13T23:04:49Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3d0db41a3c6ca30e89f9e83db0959b2bb88eef9",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +69,73 @@  def startup() = {\n    controllerContext.liveOrShuttingDownBrokers.foreach(addNewBroker)\n\n    brokerLock synchronized {\n      brokerStateInfo.foreach(brokerState => startRequestSendThread(brokerState._1))"
  },
  {
    "id" : "105c3c42-9ee3-4f37-83f3-a08d1a6ad174",
    "prId" : 8257,
    "prUrl" : "https://github.com/apache/kafka/pull/8257#pullrequestreview-392909695",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b73280fc-325e-410a-aa19-ea84e8211476",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "No need to fix here, but do you know why we do this filtering?",
        "createdAt" : "2020-04-14T01:22:29Z",
        "updatedAt" : "2020-04-14T13:16:08Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "d26681be-fafc-4f88-807c-67dc2321d34f",
        "parentId" : "b73280fc-325e-410a-aa19-ea84e8211476",
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "I've asked myself the same question but I couldn't find a reason. I believe that `brokerId` is always >= 0 in the controller.",
        "createdAt" : "2020-04-14T13:10:09Z",
        "updatedAt" : "2020-04-14T13:16:08Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      }
    ],
    "commit" : "49360d6d46bf292c7b9a774be923073fd049c19d",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +406,410 @@    }\n\n    brokerIds.filter(_ >= 0).foreach { brokerId =>\n      val result = stopReplicaRequestMap.getOrElseUpdate(brokerId, mutable.Map.empty)\n      val alreadyDelete = result.get(topicPartition).exists(_.deletePartition)"
  },
  {
    "id" : "29d00cbf-920d-48a6-b7cb-8e635a94b511",
    "prId" : 8320,
    "prUrl" : "https://github.com/apache/kafka/pull/8320#pullrequestreview-380522658",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ae18f03-3999-4f69-9ee0-d963d733e4f7",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Do we need to pass stateChangeLog in? It seems that we can just reference it directly.",
        "createdAt" : "2020-03-24T00:01:38Z",
        "updatedAt" : "2020-03-26T18:05:26Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "f8827ce1-e8f4-4f0f-b8c9-6fdb924b44bd",
        "parentId" : "7ae18f03-3999-4f69-9ee0-d963d733e4f7",
        "authorId" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "body" : "I was following the convention as used by the other methods. I've removed the passed in log from all methods now and have them instantiate themselves",
        "createdAt" : "2020-03-24T10:02:53Z",
        "updatedAt" : "2020-03-26T18:05:26Z",
        "lastEditedBy" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "tags" : [
        ]
      },
      {
        "id" : "882b9eb4-237d-4727-89da-a46dc39e57ed",
        "parentId" : "7ae18f03-3999-4f69-9ee0-d963d733e4f7",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "StateChangeLogger has some state. So passing it around is better than duplicating that state in every method. It also avoids allocations.",
        "createdAt" : "2020-03-24T17:08:57Z",
        "updatedAt" : "2020-03-26T18:05:26Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fc7ca7de7ffd00ed32fcd3ced1cc4774ad503c0",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +583,587 @@      sendLeaderAndIsrRequest(controllerEpoch, stateChangeLog)\n      sendUpdateMetadataRequests(controllerEpoch, stateChangeLog)\n      sendStopReplicaRequests(controllerEpoch, stateChangeLog)\n    } catch {\n      case e: Throwable =>"
  },
  {
    "id" : "6beeecd7-6f9f-4a95-bf87-345093786f10",
    "prId" : 8320,
    "prUrl" : "https://github.com/apache/kafka/pull/8320#pullrequestreview-380474193",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b05aa69c-314f-4d20-a0d1-986d44ab2ab5",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "To be consistent with the above changes, let's add an info level logging per broker with just the partition count.",
        "createdAt" : "2020-03-24T16:55:15Z",
        "updatedAt" : "2020-03-26T18:05:26Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fc7ca7de7ffd00ed32fcd3ced1cc4774ad503c0",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +570,574 @@        stateChangeLog.info(s\"Sending a stop replica request (delete = false) for ${stopReplicaWithoutDelete.size} replicas to broker $brokerId\")\n        if (traceEnabled)\n          stateChangeLog.trace(s\"The stop replica request (delete = false) sent to broker $brokerId contains ${stopReplicaWithoutDelete.map(_.replica).mkString(\",\")}\")\n        val stopReplicaRequest = createStopReplicaRequest(brokerEpoch, stopReplicaWithoutDelete, deletePartitions = false)\n        sendRequest(brokerId, stopReplicaRequest)"
  }
]