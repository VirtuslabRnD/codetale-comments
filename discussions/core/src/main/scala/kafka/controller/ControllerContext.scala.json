[
  {
    "id" : "3ceb1947-c745-4cc7-8c82-223331f0e8a0",
    "prId" : 6588,
    "prUrl" : "https://github.com/apache/kafka/pull/6588#pullrequestreview-228014740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f9d7421-3f36-4358-8948-b7c3f503813b",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "We should call this method `putReplicaState` to match the name of the method `removeReplicaState` below.",
        "createdAt" : "2019-04-17T21:52:02Z",
        "updatedAt" : "2019-04-24T22:00:55Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b68fbe3cb047ef1c25bacb7c65955805306c96c",
    "line" : 236,
    "diffHunk" : "@@ -1,1 +245,249 @@  def putReplicaState(replica: PartitionAndReplica, state: ReplicaState): Unit = {\n    replicaStates.put(replica, state)\n  }\n\n  def removeReplicaState(replica: PartitionAndReplica): Unit = {"
  },
  {
    "id" : "be2206cf-9020-49af-878e-7c791978bcdc",
    "prId" : 6588,
    "prUrl" : "https://github.com/apache/kafka/pull/6588#pullrequestreview-228014740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88988c73-db79-4732-8052-e210fdd06556",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Same here. Should we call this `putReplicaStateIfNoneExists`?",
        "createdAt" : "2019-04-17T21:53:38Z",
        "updatedAt" : "2019-04-24T22:00:55Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b68fbe3cb047ef1c25bacb7c65955805306c96c",
    "line" : 244,
    "diffHunk" : "@@ -1,1 +253,257 @@  def putReplicaStateIfNotExists(replica: PartitionAndReplica, state: ReplicaState): Unit = {\n    replicaStates.getOrElseUpdate(replica, state)\n  }\n\n  def putPartitionState(partition: TopicPartition, targetState: PartitionState): Unit = {"
  },
  {
    "id" : "8b7a65e0-ba54-4866-92c3-07115d9e5218",
    "prId" : 6588,
    "prUrl" : "https://github.com/apache/kafka/pull/6588#pullrequestreview-228014740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9d339d3-1603-4c2c-9b8a-7cbbcc54ae10",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "`putPartitionState`.",
        "createdAt" : "2019-04-17T21:54:31Z",
        "updatedAt" : "2019-04-24T22:00:55Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b68fbe3cb047ef1c25bacb7c65955805306c96c",
    "line" : 249,
    "diffHunk" : "@@ -1,1 +258,262 @@    val currentState = partitionStates.put(partition, targetState).getOrElse(NonExistentPartition)\n    updatePartitionStateMetrics(partition, currentState, targetState)\n  }\n\n  private def updatePartitionStateMetrics(partition: TopicPartition,"
  },
  {
    "id" : "44255779-293c-4258-89ba-12dcf84c7d4b",
    "prId" : 6588,
    "prUrl" : "https://github.com/apache/kafka/pull/6588#pullrequestreview-228014740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5fcde1a7-24b2-4010-ac5f-18e7e4511859",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "How about `replicaState`?",
        "createdAt" : "2019-04-17T21:56:36Z",
        "updatedAt" : "2019-04-24T22:00:55Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b68fbe3cb047ef1c25bacb7c65955805306c96c",
    "line" : 270,
    "diffHunk" : "@@ -1,1 +279,283 @@  def replicaState(replica: PartitionAndReplica): ReplicaState = {\n    replicaStates(replica)\n  }\n\n  def partitionState(partition: TopicPartition): PartitionState = {"
  },
  {
    "id" : "edf7a5b9-0fce-4c0b-9398-3dabf6511cd8",
    "prId" : 6588,
    "prUrl" : "https://github.com/apache/kafka/pull/6588#pullrequestreview-228014740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19327661-c932-4d6f-b54e-2b85365498cc",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "`partitionState`?",
        "createdAt" : "2019-04-17T21:56:50Z",
        "updatedAt" : "2019-04-24T22:00:55Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b68fbe3cb047ef1c25bacb7c65955805306c96c",
    "line" : 274,
    "diffHunk" : "@@ -1,1 +283,287 @@  def partitionState(partition: TopicPartition): PartitionState = {\n    partitionStates(partition)\n  }\n\n  def partitionsInState(state: PartitionState): Set[TopicPartition] = {"
  },
  {
    "id" : "a67561db-f1df-4f8e-9330-fabb7f276480",
    "prId" : 6588,
    "prUrl" : "https://github.com/apache/kafka/pull/6588#pullrequestreview-228014740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f1bdd97-e580-4474-bfc7-dde1c5f575ea",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "`partitionsInTopicAndState`?",
        "createdAt" : "2019-04-17T21:58:53Z",
        "updatedAt" : "2019-04-24T22:00:55Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b68fbe3cb047ef1c25bacb7c65955805306c96c",
    "line" : 286,
    "diffHunk" : "@@ -1,1 +295,299 @@  def partitionsInState(topic: String, state: PartitionState): Set[TopicPartition] = {\n    partitionsForTopic(topic).filter { partition => state == partitionState(partition) }.toSet\n  }\n\n  def partitionsInStates(topic: String, states: Set[PartitionState]): Set[TopicPartition] = {"
  },
  {
    "id" : "7a0faf7d-c5cf-4960-998c-c7442c926eed",
    "prId" : 6588,
    "prUrl" : "https://github.com/apache/kafka/pull/6588#pullrequestreview-228014740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a9d5343-6d7b-43fb-ae6a-b86ebb9a5fe6",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "`partitionsInTopicAndStates`?",
        "createdAt" : "2019-04-17T21:59:15Z",
        "updatedAt" : "2019-04-24T22:00:55Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b68fbe3cb047ef1c25bacb7c65955805306c96c",
    "line" : 290,
    "diffHunk" : "@@ -1,1 +299,303 @@  def partitionsInStates(topic: String, states: Set[PartitionState]): Set[TopicPartition] = {\n    partitionsForTopic(topic).filter { partition => states.contains(partitionState(partition)) }.toSet\n  }\n\n  private def isValidReplicaStateTransition(replica: PartitionAndReplica, targetState: ReplicaState): Boolean ="
  },
  {
    "id" : "adb23cd3-8dd9-4cd6-bc58-f4ddf908447a",
    "prId" : 7128,
    "prUrl" : "https://github.com/apache/kafka/pull/7128#pullrequestreview-268538899",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "414af0c8-075e-41a4-809d-ed2dcf6d7142",
        "parentId" : null,
        "authorId" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "body" : "I intentionally kept the name of this method the same to make it easier to review (keep the diff smaller), ditto for the update methods below. Perhaps we could rename them to `partitionReplicas/updatePartitionReplicas` and the new methods to `partitionAssignment/updatePartitionAssignment` ",
        "createdAt" : "2019-07-30T17:08:16Z",
        "updatedAt" : "2019-09-09T17:48:38Z",
        "lastEditedBy" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "tags" : [
        ]
      }
    ],
    "commit" : "8538961c460c50be1828a050793f45d8558ea9b9",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +114,118 @@  }\n\n  def partitionReplicaAssignment(topicPartition: TopicPartition): Seq[Int] = {\n    partitionAssignments.getOrElse(topicPartition.topic, mutable.Map.empty)\n      .get(topicPartition.partition) match {"
  },
  {
    "id" : "3ebc2819-7510-42f2-af10-01577ba3c0d9",
    "prId" : 7128,
    "prUrl" : "https://github.com/apache/kafka/pull/7128#pullrequestreview-283892019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "797c7649-90d5-430b-b30c-7a52318b1202",
        "parentId" : null,
        "authorId" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "body" : "Is there any benefit to this being PartitionReplicaAssignment.EMPTY? It's probably easier to read",
        "createdAt" : "2019-07-30T18:21:02Z",
        "updatedAt" : "2019-09-09T17:48:38Z",
        "lastEditedBy" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "tags" : [
        ]
      },
      {
        "id" : "8aeee706-f47d-4a5a-a57c-bf63e4488bee",
        "parentId" : "797c7649-90d5-430b-b30c-7a52318b1202",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "It's fine either way.",
        "createdAt" : "2019-09-04T20:58:26Z",
        "updatedAt" : "2019-09-09T17:48:38Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "8538961c460c50be1828a050793f45d8558ea9b9",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +126,130 @@      .get(topicPartition.partition) match {\n      case Some(partitionAssignment) => partitionAssignment\n      case None => PartitionReplicaAssignment(Seq(), Seq(), Seq())\n    }\n  }"
  },
  {
    "id" : "27587434-228d-49bc-88fc-8a8b88bf63bb",
    "prId" : 7128,
    "prUrl" : "https://github.com/apache/kafka/pull/7128#pullrequestreview-285663929",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "daacd887-15b4-425e-97f0-415dadf5671e",
        "parentId" : null,
        "authorId" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "body" : "Why don't we add removingReplicas too in order to fully restore the previous state?",
        "createdAt" : "2019-09-09T15:25:28Z",
        "updatedAt" : "2019-09-09T17:48:38Z",
        "lastEditedBy" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "tags" : [
        ]
      },
      {
        "id" : "2e14e469-3218-4db7-b5da-276989a5b521",
        "parentId" : "daacd887-15b4-425e-97f0-415dadf5671e",
        "authorId" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "body" : "Any previous assignment would not be reassigning - it would not have adding/removing replicas.\r\nWe always revert the on-going reassignment when a new one is triggered.",
        "createdAt" : "2019-09-09T17:27:15Z",
        "updatedAt" : "2019-09-09T17:48:38Z",
        "lastEditedBy" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "tags" : [
        ]
      }
    ],
    "commit" : "8538961c460c50be1828a050793f45d8558ea9b9",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +46,50 @@  def previousAssignment: PartitionReplicaAssignment = {\n    PartitionReplicaAssignment(\n      replicas.filterNot(addingReplicas.contains(_)),\n      Seq(),\n      Seq()"
  },
  {
    "id" : "31cf83b7-8ddd-4570-9d6b-6bc1ac0d1495",
    "prId" : 7128,
    "prUrl" : "https://github.com/apache/kafka/pull/7128#pullrequestreview-286115249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91fe08a2-57ea-4d37-b234-ca5b18b45dc7",
        "parentId" : null,
        "authorId" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "body" : "Similarly to this one: would you please summarize why don't we take original + adding_replicas - removing_replicas as target? Does this have something to do with the2 phase algorithm that first we add AR and then remove RR? (And apologies if I missed something obvious.)",
        "createdAt" : "2019-09-09T15:33:15Z",
        "updatedAt" : "2019-09-09T17:48:38Z",
        "lastEditedBy" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "tags" : [
        ]
      },
      {
        "id" : "748566f6-4c44-4e77-b118-03d79f912940",
        "parentId" : "91fe08a2-57ea-4d37-b234-ca5b18b45dc7",
        "authorId" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "body" : "You're misunderstanding the `replicas` set. It is not the original replicas. Let me give a quick example:\r\n\r\nreplicas = [1,2,3]\r\nrequest with target_replicas = [4,5,6]\r\nUpon processing the request, our PartitionReplicaAssignment class would look like this:\r\n```\r\nPartitionReplicaAssignment(\r\n  replicas=[1,2,3,4,5,6]\r\n  addingReplicas=[4,5,6]\r\n  removingReplicas=[1,2,3]\r\n)\r\n```\r\nYou can see where we create the case class instance in `onPartitionReassignment`, specifically the `PartitionReplicaAssignment.fromOldAndNewReplicas` method which helps us create the new assignment.",
        "createdAt" : "2019-09-09T17:30:03Z",
        "updatedAt" : "2019-09-09T17:48:38Z",
        "lastEditedBy" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "tags" : [
        ]
      },
      {
        "id" : "fb3fb162-9ab9-4d62-99cf-121f69be21f1",
        "parentId" : "91fe08a2-57ea-4d37-b234-ca5b18b45dc7",
        "authorId" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "body" : "Thanks, this is helpful.",
        "createdAt" : "2019-09-10T12:33:59Z",
        "updatedAt" : "2019-09-10T12:34:00Z",
        "lastEditedBy" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "tags" : [
        ]
      }
    ],
    "commit" : "8538961c460c50be1828a050793f45d8558ea9b9",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +56,60 @@    * This is different than the `replicas` variable only when there is a reassignment going on\n    */\n  def targetReplicas: Seq[Int] = replicas.filterNot(removingReplicas.contains(_))\n\n  override def toString: String = s\"PartitionReplicaAssignment(replicas: ${replicas.mkString(\",\")}, \" +"
  },
  {
    "id" : "541c26cf-b9bb-419c-807c-36f9f7350fc0",
    "prId" : 7924,
    "prUrl" : "https://github.com/apache/kafka/pull/7924#pullrequestreview-341477755",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22c70c0f-120d-4e81-871f-9c96994dd114",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "nit: is this conventional? I don't think we use this ordering anywhere else in the code?",
        "createdAt" : "2020-01-10T21:49:10Z",
        "updatedAt" : "2020-01-10T21:57:24Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "c5ba80b7-bdbf-4843-9da2-691bbf87375b",
        "parentId" : "22c70c0f-120d-4e81-871f-9c96994dd114",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Are you referring to the `private` keyword after `ReplicaAssignment`? This is how to declare the \"default\" constructor private in Scala. This is the best reference I could find: https://www.scala-lang.org/download/changelog.html#access-modifiers-for-primary-constructors\r\n\r\nNicely we never create this class directly (outside of JSON to ReplicaAssignment decoding). We either use some of the other `apply` methods or the `reassignTo` method. I don't think in the future we will want to create the value directly so I thought might as well make it private.",
        "createdAt" : "2020-01-10T22:11:32Z",
        "updatedAt" : "2020-01-10T22:11:32Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "15329ca9-10e1-4e7b-bc11-882853c1255d",
        "parentId" : "22c70c0f-120d-4e81-871f-9c96994dd114",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Ah, ok. First time I have seen this.",
        "createdAt" : "2020-01-10T23:47:11Z",
        "updatedAt" : "2020-01-10T23:47:11Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "137563e19e1c116edc0818e57b7c1b4f7c97d115",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +38,42 @@ * @param removingReplicas the replicas that are being removed if there is a pending reassignment\n */\ncase class ReplicaAssignment private (replicas: Seq[Int],\n                                      addingReplicas: Seq[Int],\n                                      removingReplicas: Seq[Int]) {"
  }
]