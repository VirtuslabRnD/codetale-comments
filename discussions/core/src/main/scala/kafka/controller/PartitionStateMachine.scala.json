[
  {
    "id" : "3f67c9cd-c48a-4f68-bb30-9429076b4c87",
    "prId" : 3848,
    "prUrl" : "https://github.com/apache/kafka/pull/3848#pullrequestreview-191900203",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cde6e78-893a-44ea-a6ed-c54122c01275",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Could we define the return value in the javadoc?",
        "createdAt" : "2019-01-12T00:21:56Z",
        "updatedAt" : "2019-01-25T09:57:17Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "9df18c6b3232f3e8b9bf879b7a8dd762a5968c6c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +135,139 @@    */\n  def handleStateChanges(partitions: Seq[TopicPartition], targetState: PartitionState,\n                         partitionLeaderElectionStrategyOpt: Option[PartitionLeaderElectionStrategy] = None): Map[TopicPartition, Throwable] = {\n    if (partitions.nonEmpty) {\n      try {"
  },
  {
    "id" : "0bd5d743-16f5-4d8d-8798-5ad30f93c7bf",
    "prId" : 6686,
    "prUrl" : "https://github.com/apache/kafka/pull/6686#pullrequestreview-238639156",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4305adc-e970-4bff-8fa6-70d876bef481",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "This is not introduced in this PR, but it's useful to document the return type of the method.",
        "createdAt" : "2019-05-15T01:31:30Z",
        "updatedAt" : "2019-05-29T01:18:29Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "296f2046-ec23-46a0-9530-5cdca0129f4a",
        "parentId" : "b4305adc-e970-4bff-8fa6-70d876bef481",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Yeah. This method is difficult to follow. I added a comment. I'll try to make it easier to read in a future PR. ",
        "createdAt" : "2019-05-16T21:07:37Z",
        "updatedAt" : "2019-05-29T01:18:29Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d53f267c91cc93478d817214f47a6fd2ec20691",
    "line" : 322,
    "diffHunk" : "@@ -1,1 +454,458 @@   *         3. allow unclean\n   */\n  private def collectUncleanLeaderElectionState(\n    leaderIsrAndControllerEpochs: Seq[(TopicPartition, LeaderIsrAndControllerEpoch)],\n    allowUnclean: Boolean"
  },
  {
    "id" : "9f32da80-9675-493c-b0e8-14ec783a8711",
    "prId" : 6686,
    "prUrl" : "https://github.com/apache/kafka/pull/6686#pullrequestreview-240919946",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "242696a5-5833-44f9-8ff5-d5b6957cd257",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Would be really nice to move this logic to the caller, but not something we should try here.",
        "createdAt" : "2019-05-23T01:58:11Z",
        "updatedAt" : "2019-05-29T01:18:29Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d53f267c91cc93478d817214f47a6fd2ec20691",
    "line" : 290,
    "diffHunk" : "@@ -1,1 +428,432 @@    val UpdateLeaderAndIsrResult(finishedUpdates, updatesToRetry) = zkClient.updateLeaderAndIsr(\n      adjustedLeaderAndIsrs, controllerContext.epoch, controllerContext.epochZkVersion)\n    finishedUpdates.foreach { case (partition, result) =>\n      result.right.foreach { leaderAndIsr =>\n        val replicas = controllerContext.partitionReplicaAssignment(partition)"
  }
]