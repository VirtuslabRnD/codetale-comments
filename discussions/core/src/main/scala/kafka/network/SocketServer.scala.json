[
  {
    "id" : "3bf6c771-522a-43cc-81dc-3ce9c958f66c",
    "prId" : 4471,
    "prUrl" : "https://github.com/apache/kafka/pull/4471#pullrequestreview-92406826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15928730-8780-4925-931d-d199a6109934",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I'm not really sure it's worth it, but I guess `processors` could be a concurrent map to avoid holding the lock when we just need to access the collection.",
        "createdAt" : "2018-01-29T19:03:26Z",
        "updatedAt" : "2018-01-30T15:24:51Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "2a6eaf7c-0b6f-448b-a08c-04c2d02ca2ed",
        "parentId" : "15928730-8780-4925-931d-d199a6109934",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "I left this synchronization in there since this is only for new connections.",
        "createdAt" : "2018-01-30T00:27:38Z",
        "updatedAt" : "2018-01-30T15:24:51Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c25c58922801e023bc1fe56919dfbab7f4565f5",
    "line" : 196,
    "diffHunk" : "@@ -1,1 +332,336 @@                iter.remove()\n                if (key.isAcceptable) {\n                  val processor = synchronized {\n                    currentProcessor = currentProcessor % processors.size\n                    processors(currentProcessor)"
  },
  {
    "id" : "579b83c8-ed39-4baf-8bca-4e14a731a6fe",
    "prId" : 4471,
    "prUrl" : "https://github.com/apache/kafka/pull/4471#pullrequestreview-92406477",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf95883c-83e7-49ed-853f-beac1083c83f",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Do we need to reset `nextProcessorId`, or is the intent to always assign new processors with an id which hasn't been used before?",
        "createdAt" : "2018-01-29T19:09:28Z",
        "updatedAt" : "2018-01-30T15:24:51Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "234976a5-bad0-4871-8495-22795d40451b",
        "parentId" : "cf95883c-83e7-49ed-853f-beac1083c83f",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "Thought it was better not to reuse processor ids, hence the `Map` of processors.",
        "createdAt" : "2018-01-30T00:25:51Z",
        "updatedAt" : "2018-01-30T15:24:51Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c25c58922801e023bc1fe56919dfbab7f4565f5",
    "line" : 177,
    "diffHunk" : "@@ -1,1 +303,307 @@  }\n\n  private[network] def removeProcessors(removeCount: Int, requestChannel: RequestChannel): Unit = synchronized {\n    // Shutdown `removeCount` processors. Remove them from the processor list first so that no more\n    // connections are assigned. Shutdown the removed processors, closing the selector and its connections."
  },
  {
    "id" : "b3472025-9a07-4df0-8ba1-efed625f2c26",
    "prId" : 4488,
    "prUrl" : "https://github.com/apache/kafka/pull/4488#pullrequestreview-93722756",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31467e79-bc5a-4bd4-860f-a512385b8353",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Add log line her and in `removeListeners`?",
        "createdAt" : "2018-02-02T22:22:32Z",
        "updatedAt" : "2018-02-04T02:11:57Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0488d78e0ea02c3ddde1a31f6c1e0613a443e3d",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +193,197 @@  }\n\n  def addListeners(listenersAdded: Seq[EndPoint]): Unit = synchronized {\n    info(s\"Adding listeners for endpoints $listenersAdded\")\n    createProcessors(config.numNetworkThreads, listenersAdded)"
  },
  {
    "id" : "98c870ca-fec8-44bf-a787-19b5d66bd494",
    "prId" : 4542,
    "prUrl" : "https://github.com/apache/kafka/pull/4542#pullrequestreview-95213874",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53c8a3a5-d2ed-4e16-89fe-bca0640dbfb1",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Doesn't this change the full metric name?",
        "createdAt" : "2018-02-08T19:42:30Z",
        "updatedAt" : "2018-02-08T19:42:45Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "fdb7d744-3888-488d-ae76-7a5d55cbb6b6",
        "parentId" : "53c8a3a5-d2ed-4e16-89fe-bca0640dbfb1",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Yeah, you are right. I forgot about the type attribute. @rajinisivaram Maybe you can fix it in #4539?",
        "createdAt" : "2018-02-08T19:56:52Z",
        "updatedAt" : "2018-02-08T19:56:52Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "a36486a7-ef63-467f-b3f2-80a3f5f76da6",
        "parentId" : "53c8a3a5-d2ed-4e16-89fe-bca0640dbfb1",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "@hachikuji I had forgotten too. Yes, I will update in #4539",
        "createdAt" : "2018-02-08T20:02:28Z",
        "updatedAt" : "2018-02-08T20:02:28Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e82524c88b3b3e0fb771bcb92f096fe8890b61b7",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +476,480 @@  ).asJava\n\n  newGauge(\"ResponseQueueSize\",\n    new Gauge[Int] {\n      def value = responseQueue.size()"
  },
  {
    "id" : "43b2341e-f19f-4736-987b-9800985bc91b",
    "prId" : 4867,
    "prUrl" : "https://github.com/apache/kafka/pull/4867#pullrequestreview-112329517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a884dc3d-1af4-4f79-98ac-de6002ba0537",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "This is not directly related to this patch. However, it seems that we need some synchronization on processor between the reader and the writer?",
        "createdAt" : "2018-04-13T21:47:58Z",
        "updatedAt" : "2018-04-16T13:58:03Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "274274ac-de66-4767-bc34-9a8f3edf453a",
        "parentId" : "a884dc3d-1af4-4f79-98ac-de6002ba0537",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "@junrao Thanks for the review. We were already synchronizing on all read/write accesses to `processors` apart from `shutdown()`. I think that was safe anyway, but I have added synchronize in shutdown as well to be consistent.",
        "createdAt" : "2018-04-16T08:59:50Z",
        "updatedAt" : "2018-04-16T13:58:03Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d881674db8abb655be89fd0d126c34c99cf8d2fd",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +334,338 @@\n  private[network] def addProcessors(newProcessors: Buffer[Processor]): Unit = synchronized {\n    processors ++= newProcessors\n    if (processorsStarted.get)\n      startProcessors(newProcessors)"
  }
]