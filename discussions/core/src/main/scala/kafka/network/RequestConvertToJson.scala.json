[
  {
    "id" : "5200674d-a99b-4c5b-bd09-18de9a3dc562",
    "prId" : 9526,
    "prUrl" : "https://github.com/apache/kafka/pull/9526#pullrequestreview-519444992",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d30cd57-2e42-4a27-bb22-55ae663c644d",
        "parentId" : null,
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "This is one case where we still access `data` without an accessor.",
        "createdAt" : "2020-10-29T09:02:14Z",
        "updatedAt" : "2020-12-14T18:00:18Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      }
    ],
    "commit" : "1fc3a11ca54b9958c1ef20fbca9abb4606ecbdd0",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +94,98 @@  def response(response: AbstractResponse, version: Short): JsonNode = {\n    response match {\n      case res: AddOffsetsToTxnResponse => AddOffsetsToTxnResponseDataJsonConverter.write(res.data, version)\n      case res: AddPartitionsToTxnResponse => AddPartitionsToTxnResponseDataJsonConverter.write(res.data, version)\n      case res: AlterClientQuotasResponse => AlterClientQuotasResponseDataJsonConverter.write(res.data, version)"
  },
  {
    "id" : "96e0cb7d-5384-4c4b-a196-84ae997e61ce",
    "prId" : 9526,
    "prUrl" : "https://github.com/apache/kafka/pull/9526#pullrequestreview-520146015",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8877f042-0556-4f40-87c9-3d509c4781f2",
        "parentId" : null,
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "Should we handle the unknown cases explicitly and throw an exception with an meaningful message instead of relying on `MatchError`? What do you think?",
        "createdAt" : "2020-10-29T09:22:34Z",
        "updatedAt" : "2020-12-14T18:00:18Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      },
      {
        "id" : "fcf28bbc-36ba-42d0-8675-9d60bfbdef95",
        "parentId" : "8877f042-0556-4f40-87c9-3d509c4781f2",
        "authorId" : "b4217043-d77c-4371-9820-8455a24d18e7",
        "body" : "There was an issue before where a request type wasn't handled and it threw a `MatchError`. I added the system test to make sure all the request types were handled, but in case this happens again, I'll add the exception for unknown cases.",
        "createdAt" : "2020-10-29T22:57:19Z",
        "updatedAt" : "2020-12-14T18:00:18Z",
        "lastEditedBy" : "b4217043-d77c-4371-9820-8455a24d18e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "1fc3a11ca54b9958c1ef20fbca9abb4606ecbdd0",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +89,93 @@      case _ => throw new IllegalStateException(s\"ApiKey ${request.apiKey} is not currently handled in `request`, the \" +\n        \"code should be updated to do so.\");\n    }\n  }\n"
  },
  {
    "id" : "c8c8c4d1-08a4-4db6-8852-89630fba4450",
    "prId" : 9526,
    "prUrl" : "https://github.com/apache/kafka/pull/9526#pullrequestreview-549920634",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fefc8ce9-95ac-4e11-916b-4e59049b65ef",
        "parentId" : null,
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "We must pass either the `envelope ` or `isForwarded` here as well. This is the main request log and, as it is, it does not tell if the request is forwarded or not.",
        "createdAt" : "2020-12-11T09:24:09Z",
        "updatedAt" : "2020-12-14T18:00:18Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      }
    ],
    "commit" : "1fc3a11ca54b9958c1ef20fbca9abb4606ecbdd0",
    "line" : 181,
    "diffHunk" : "@@ -1,1 +179,183 @@  }\n\n  def requestDescMetrics(header: RequestHeader, requestNode: Option[JsonNode], responseNode: Option[JsonNode],\n                         context: RequestContext, session: Session, isForwarded: Boolean,\n                         totalTimeMs: Double, requestQueueTimeMs: Double, apiLocalTimeMs: Double,"
  }
]