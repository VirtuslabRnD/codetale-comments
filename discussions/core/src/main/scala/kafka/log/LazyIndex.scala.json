[
  {
    "id" : "6bd78cba-8187-4678-a35d-d675d9273fc9",
    "prId" : 7760,
    "prUrl" : "https://github.com/apache/kafka/pull/7760#pullrequestreview-325280395",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad9a115f-58ee-4c3e-a530-696d29072c21",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "We should mention that the methods in this class are thread-safe, but to check the underlying `AbstractIndex` subclass documentation for information on their thread safety.",
        "createdAt" : "2019-12-02T14:36:31Z",
        "updatedAt" : "2019-12-02T16:11:24Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a73a3a3474decaa823804fd255a1bd39fba700f8",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@  */\n@threadsafe\nclass LazyIndex[T <: AbstractIndex] private (@volatile private var indexWrapper: IndexWrapper, loadIndex: File => T) {\n\n  private val lock = new ReentrantLock()"
  },
  {
    "id" : "b9034429-308b-4c5e-85cd-99398cb4638f",
    "prId" : 7760,
    "prUrl" : "https://github.com/apache/kafka/pull/7760#pullrequestreview-325456544",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "883e4aec-8336-4de7-ae42-2ecff4ce882f",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Does file need to be var? It seems that it's never updated.",
        "createdAt" : "2019-12-02T17:44:59Z",
        "updatedAt" : "2019-12-02T17:57:20Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "832e43d9-f81c-4e3b-992b-2edc403fee0f",
        "parentId" : "883e4aec-8336-4de7-ae42-2ecff4ce882f",
        "authorId" : "71f7dfc3-ad9a-4c0f-96c6-215c159121a8",
        "body" : "hey @junrao, yes, this reference is updated when `LazyIndex.file_=` setter is invoked before `LazyIndex.get`",
        "createdAt" : "2019-12-02T18:17:30Z",
        "updatedAt" : "2019-12-02T18:17:31Z",
        "lastEditedBy" : "71f7dfc3-ad9a-4c0f-96c6-215c159121a8",
        "tags" : [
        ]
      },
      {
        "id" : "122ffcd8-ee0f-4e05-9cb7-20f4e9bb5f5d",
        "parentId" : "883e4aec-8336-4de7-ae42-2ecff4ce882f",
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "@alexandrfox : Thanks. That makes sense. So, we can keep the code as it is.",
        "createdAt" : "2019-12-02T18:55:12Z",
        "updatedAt" : "2019-12-02T18:55:12Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a73a3a3474decaa823804fd255a1bd39fba700f8",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +80,84 @@  }\n\n  private class IndexFile(@volatile var file: File) extends IndexWrapper\n\n  private class IndexValue[T <: AbstractIndex](val index: T) extends IndexWrapper {"
  },
  {
    "id" : "ae37fb61-01bc-44fb-9908-fcaa0189f38f",
    "prId" : 8346,
    "prUrl" : "https://github.com/apache/kafka/pull/8346#pullrequestreview-381704048",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9c4c8d5-0abc-4d02-a392-82972bf8c4e4",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Hmm, we didn't do that before. Is there a reason that we should hide this exception?",
        "createdAt" : "2020-03-25T18:24:10Z",
        "updatedAt" : "2020-03-26T06:42:35Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "cfc8288d-f666-410a-a204-2b88251c2ddb",
        "parentId" : "d9c4c8d5-0abc-4d02-a392-82972bf8c4e4",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "We may call `renameTo` when the index file has not been created yet with this new approach. So we catch this case and ignore it. We could alternatively check if the file exists before calling `atomicMoveWithFallback`.",
        "createdAt" : "2020-03-25T21:27:34Z",
        "updatedAt" : "2020-03-26T06:42:35Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "38dc7d06-6023-4a39-9536-ea2cd520a634",
        "parentId" : "d9c4c8d5-0abc-4d02-a392-82972bf8c4e4",
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Interesting. That's true for the active segment.\r\n\r\n",
        "createdAt" : "2020-03-26T05:02:38Z",
        "updatedAt" : "2020-03-26T06:42:35Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3fe9f7bd8cdee0369b5b4ceda3c62ea8db4a6bd",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +134,138 @@      try Utils.atomicMoveWithFallback(file.toPath, f.toPath)\n      catch {\n        case _: NoSuchFileException if !file.exists => ()\n      }\n      finally _file = f"
  }
]