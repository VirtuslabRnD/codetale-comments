[
  {
    "id" : "bac6d3f5-255b-4295-bab9-1a0b5e6f10d8",
    "prId" : 5117,
    "prUrl" : "https://github.com/apache/kafka/pull/5117#pullrequestreview-125488849",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18831348-8d42-4897-92f0-3fac15fd6582",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Should ClusterResource be created using this constructor?",
        "createdAt" : "2018-06-04T02:42:39Z",
        "updatedAt" : "2018-06-06T11:20:45Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "2eeef69b-7a4e-4e7b-bd01-318129c2d046",
        "parentId" : "18831348-8d42-4897-92f0-3fac15fd6582",
        "authorId" : "e431deb4-a19e-4e78-a775-12af049c9089",
        "body" : "Yes, eventually. I wanted to submit an initial version of the code, that still uses the deprecated constructor everywhere, to show that test cases still pass with these constructors.  I've a 'todo' in the PRs description to switch to the new constructors. I'll do that today.",
        "createdAt" : "2018-06-04T09:05:21Z",
        "updatedAt" : "2018-06-06T11:20:45Z",
        "lastEditedBy" : "e431deb4-a19e-4e78-a775-12af049c9089",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f96d0db4fbc086139542b5730ac79aea8c44c13",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +34,38 @@ * @param resourceNameType non-null type of resource name: literal, prefixed, etc.\n */\ncase class Resource(resourceType: ResourceType, name: String, resourceNameType: ResourceNameType) {\n\n  Objects.requireNonNull(resourceType, \"resourceType\")"
  },
  {
    "id" : "200e116a-da3a-468c-a33d-e7e6dae68303",
    "prId" : 5161,
    "prUrl" : "https://github.com/apache/kafka/pull/5161#pullrequestreview-128097165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ca67100-9968-45ca-9df3-5c3e197522a2",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Hmm, this is called by LiteralAclChangeStore.decode(), which should only decode a 2-part name.",
        "createdAt" : "2018-06-12T17:35:05Z",
        "updatedAt" : "2018-06-12T18:40:32Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "12754185-86ae-4f62-a849-dc8e985ec680",
        "parentId" : "6ca67100-9968-45ca-9df3-5c3e197522a2",
        "authorId" : "e431deb4-a19e-4e78-a775-12af049c9089",
        "body" : "Good spot. I've changed LiteralAclChangeStore.decode() to have its own impl. (Basically the old contents of Resource.fromString), to maintain v1.1 behaviour",
        "createdAt" : "2018-06-12T18:39:44Z",
        "updatedAt" : "2018-06-12T18:40:32Z",
        "lastEditedBy" : "e431deb4-a19e-4e78-a775-12af049c9089",
        "tags" : [
        ]
      }
    ],
    "commit" : "23bb972dc517ee4efdc54a4703e6d89602b8241a",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +33,37 @@        val remaining = str.substring(resourceType.name.length + 1)\n\n        ResourceNameType.values.find(nameType => remaining.startsWith(nameType.name + Separator)) match {\n          case Some(nameType) =>\n            val name = remaining.substring(nameType.name.length + 1)"
  }
]