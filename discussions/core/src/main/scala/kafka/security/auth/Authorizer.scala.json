[
  {
    "id" : "25ea3b44-45b2-40ce-ae01-0775e7c57056",
    "prId" : 5152,
    "prUrl" : "https://github.com/apache/kafka/pull/5152#pullrequestreview-126938347",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6aeac904-a213-46ef-8b12-fa2d5bdfaa19",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Is this true? I thought the current implementation allows you to pass in ResourceNameType.ANY to retrieve ACLs specified on either LITERAL or PREFIX?",
        "createdAt" : "2018-06-07T17:22:19Z",
        "updatedAt" : "2018-06-08T11:50:22Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "8f00bce5-1d96-458e-b3e4-d7523d6206bd",
        "parentId" : "6aeac904-a213-46ef-8b12-fa2d5bdfaa19",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "I believe this is true.  SimpleAclAuthorizer expects a concrete Resource, not something which could match multiple resources.  The code is here:\r\n\r\n```\r\n  override def removeAcls(resource: Resource): Boolean = {\r\n    inWriteLock(lock) {\r\n      val result = zkClient.deleteResource(resource)\r\n      updateCache(resource, VersionedAcls(Set(), 0))\r\n      updateAclChangedFlag(resource)\r\n      result\r\n    }\r\n  }\r\n```\r\n\r\nThe messiness here is that this constraint is not expressed in the type system.  We use the same enum to describe the name types a concrete resource can have vs. a resource filter.",
        "createdAt" : "2018-06-07T18:29:10Z",
        "updatedAt" : "2018-06-08T11:50:22Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "e32fe34b-66f4-4ab0-a31f-a9cf6e6b7176",
        "parentId" : "6aeac904-a213-46ef-8b12-fa2d5bdfaa19",
        "authorId" : "e431deb4-a19e-4e78-a775-12af049c9089",
        "body" : "That's right. The enum has ANY and UNKNOWN values, but the code won't allow them to be passed to the authorizer.  I documented so that people implementing their own would know they aren't going to get these values.  It's part of the downside to standardizing on the Java ResourceNameType.",
        "createdAt" : "2018-06-07T20:11:00Z",
        "updatedAt" : "2018-06-08T11:50:22Z",
        "lastEditedBy" : "e431deb4-a19e-4e78-a775-12af049c9089",
        "tags" : [
        ]
      }
    ],
    "commit" : "269b948c3911f007467b220cb9d65e5ab9ca3dc2",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +124,128 @@   * @param resource the resource path to which the acls belong.\n   *                 the supplied resource will have a specific resource name type,\n   *                 i.e. the resource name type will not be ``ResourceNameType.ANY`` or ``ResourceNameType.UNKNOWN``.\n   * @return empty set if no acls are found, otherwise the acls for the resource.\n   */"
  }
]