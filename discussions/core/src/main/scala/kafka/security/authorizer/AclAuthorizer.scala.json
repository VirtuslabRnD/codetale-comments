[
  {
    "id" : "9a03da0c-b77b-4656-8d15-6ac52c17451f",
    "prId" : 7911,
    "prUrl" : "https://github.com/apache/kafka/pull/7911#pullrequestreview-340538527",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84631594-fce2-4b8f-b75a-91d1ea6461b4",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Another thing to consider for a separate PR: this method seems highly inefficient. We take _all_ the keys in the cache and do a bunch of transformations. It seems like we should avoid that, no? Intuitively, we would do a filter operation first and then transform only the cache items that match.",
        "createdAt" : "2020-01-09T13:24:38Z",
        "updatedAt" : "2020-01-09T13:24:38Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "374e3bec-7d06-4de3-88e8-2c7a0b59b624",
        "parentId" : "84631594-fce2-4b8f-b75a-91d1ea6461b4",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "I will do https://issues.apache.org/jira/browse/KAFKA-8847 first to remove references to the old classes and deprecate those. And that would avoid a lot of the unnecessary conversions. I can see if more can be done to improve this in the same PR.",
        "createdAt" : "2020-01-09T13:43:49Z",
        "updatedAt" : "2020-01-09T13:43:50Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      },
      {
        "id" : "bdcea45f-1719-4653-92a2-5276a68dce60",
        "parentId" : "84631594-fce2-4b8f-b75a-91d1ea6461b4",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Sounds good.",
        "createdAt" : "2020-01-09T14:01:03Z",
        "updatedAt" : "2020-01-09T14:01:03Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac83288aaa1dbd164b088ca140d12b23d4608b19",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +191,195 @@      // Find all potentially matching resource patterns from the provided filters and ACL cache and apply the filters\n      val resources = aclCache.keys ++ filters.map(_._1.patternFilter).filter(_.matchesAtMostOne).flatMap(filterToResources)\n      val resourcesToUpdate = resources.map { resource =>\n        val matchingFilters = filters.filter { case (filter, _) =>\n          filter.patternFilter.matches(resource.toPattern)"
  },
  {
    "id" : "00594927-b0b1-4a99-a0eb-9c12ddfbf38e",
    "prId" : 8769,
    "prUrl" : "https://github.com/apache/kafka/pull/8769#pullrequestreview-421861976",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68c40112-d267-4893-a31d-f14d167bbaa0",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "Should it need comment to remind reader that this style is for optimization.",
        "createdAt" : "2020-06-01T09:08:11Z",
        "updatedAt" : "2020-06-01T13:55:05Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "2e1145ed-7bb9-4b9a-9ff2-5971da0fa408",
        "parentId" : "68c40112-d267-4893-a31d-f14d167bbaa0",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "I think this is obvious, no? `find` should generally short-circuit and not go through all the items. That's how it works for all collection implementations\r\n\r\nI think this kind of comment makes sense in `matchingAcls` where I added one.",
        "createdAt" : "2020-06-01T13:50:44Z",
        "updatedAt" : "2020-06-01T13:55:05Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "cb3cfc48-a880-46b5-b126-bdb5927742cf",
        "parentId" : "68c40112-d267-4893-a31d-f14d167bbaa0",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "@chia7712 I looked at the code again and I guess the intent may not be clear. I added a comment that hopefully clarifies.",
        "createdAt" : "2020-06-01T13:55:29Z",
        "updatedAt" : "2020-06-01T13:55:50Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "100a645188fcba815a7e1180bdc7de5cb070c250",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +66,70 @@\n  class AclSeqs(seqs: Seq[AclEntry]*) {\n    def find(p: AclEntry => Boolean): Option[AclEntry] = {\n      // Lazily iterate through the inner `Seq` elements and stop as soon as we find a match\n      val it = seqs.iterator.flatMap(_.find(p))"
  }
]