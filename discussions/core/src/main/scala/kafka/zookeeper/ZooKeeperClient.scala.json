[
  {
    "id" : "5cc3c637-f08c-4d43-8154-076ac3149e4d",
    "prId" : 4351,
    "prUrl" : "https://github.com/apache/kafka/pull/4351#pullrequestreview-85275179",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff4157b2-a949-460b-b2bb-437a588f0975",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "I think it would be better not to have the default at all.",
        "createdAt" : "2017-12-22T10:13:06Z",
        "updatedAt" : "2017-12-22T10:27:00Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d10b7657e7d5ebc621fbbf1c9ed6402af7cc63a1",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +51,55 @@                      time: Time,\n                      metricGroup: String = \"kafka.server\",\n                      metricType: String = \"KafkaHealthcheck\") extends Logging with KafkaMetricsGroup {\n  this.logIdent = \"[ZooKeeperClient] \"\n  private val initializationLock = new ReentrantReadWriteLock()"
  },
  {
    "id" : "fd0ade4f-d3e3-409e-b587-b4e15bb8b7f5",
    "prId" : 4351,
    "prUrl" : "https://github.com/apache/kafka/pull/4351#pullrequestreview-85275179",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f3aa905-1457-4182-9b84-ac93ae360660",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Worth adding a comment stating that we intend to fail-fast during construction, but that we retry forever if this is reinitialised.",
        "createdAt" : "2017-12-22T10:14:18Z",
        "updatedAt" : "2017-12-22T10:27:00Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d10b7657e7d5ebc621fbbf1c9ed6402af7cc63a1",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +82,86 @@\n  info(s\"Initializing a new session to $connectString.\")\n  @volatile private var zooKeeper = new ZooKeeper(connectString, sessionTimeoutMs, ZooKeeperClientWatcher)\n\n  private val sessionStateGauge ="
  },
  {
    "id" : "5c4a1b0c-876c-408c-8753-31de4ba0df64",
    "prId" : 4351,
    "prUrl" : "https://github.com/apache/kafka/pull/4351#pullrequestreview-85275179",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f800bf44-1fbb-448c-a07c-7a82e4cb59d2",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Since we're receiving this as a parameter now, we should tweak this comment.",
        "createdAt" : "2017-12-22T10:15:36Z",
        "updatedAt" : "2017-12-22T10:27:00Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d10b7657e7d5ebc621fbbf1c9ed6402af7cc63a1",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +96,100 @@\n  /**\n    * This is added to preserve the original metric name in JMX\n    */\n  override def metricName(name: String, metricTags: scala.collection.Map[String, String]): MetricName = {"
  },
  {
    "id" : "019ef338-8960-4ad7-85a1-c0713a52301c",
    "prId" : 4351,
    "prUrl" : "https://github.com/apache/kafka/pull/4351#pullrequestreview-85275179",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fcc8d1fb-436d-480f-8229-12b0ba59601c",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "We can maybe state that we will retry.",
        "createdAt" : "2017-12-22T10:16:34Z",
        "updatedAt" : "2017-12-22T10:27:00Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d10b7657e7d5ebc621fbbf1c9ed6402af7cc63a1",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +322,326 @@        } catch {\n          case e: Exception =>\n            info(\"Error when recreating ZooKeeper\", e)\n            Thread.sleep(1000)\n        }"
  },
  {
    "id" : "d939e5f6-8d21-44ea-96e3-41849350b9bb",
    "prId" : 4351,
    "prUrl" : "https://github.com/apache/kafka/pull/4351#pullrequestreview-85347126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de8b0710-ed84-4048-ac5a-2840077142d6",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "I guess this code will never run now?",
        "createdAt" : "2017-12-22T10:16:59Z",
        "updatedAt" : "2017-12-22T10:27:01Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "2013eeec-aca3-4882-96f3-cc93dbecd55c",
        "parentId" : "de8b0710-ed84-4048-ac5a-2840077142d6",
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Good point. We can just remove the onReconnectionTimeout() callback.",
        "createdAt" : "2017-12-22T16:13:37Z",
        "updatedAt" : "2017-12-22T16:13:37Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d10b7657e7d5ebc621fbbf1c9ed6402af7cc63a1",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +327,331 @@      }\n      info(s\"Timed out waiting for connection during session initialization while in state: ${zooKeeper.getState}\")\n      stateChangeHandlers.values.foreach(_.onReconnectionTimeout())\n    }\n  }"
  }
]