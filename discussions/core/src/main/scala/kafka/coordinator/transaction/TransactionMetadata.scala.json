[
  {
    "id" : "0215fc72-7105-488d-845f-c907a0daefd3",
    "prId" : 7115,
    "prUrl" : "https://github.com/apache/kafka/pull/7115#pullrequestreview-267516214",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99568b33-9cdd-4416-b51c-e0f320ccea43",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "nit: can be simplified a little:\r\n```scala\r\n    epochBumpResult.map { case (nextEpoch, lastEpoch) =>\r\n      prepareTransitionTo(Empty, producerId, nextEpoch.toShort, lastEpoch, newTxnTimeoutMs,\r\n        immutable.Set.empty[TopicPartition], -1, updateTimestamp)\r\n    }\r\n```",
        "createdAt" : "2019-07-28T18:31:43Z",
        "updatedAt" : "2019-11-06T19:26:41Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a46583148fdd1f10258760e1b767b577ef193d8",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +249,253 @@    }\n\n    epochBumpResult match {\n      case Right((nextEpoch, lastEpoch)) => Right(prepareTransitionTo(Empty, producerId, nextEpoch, lastEpoch, newTxnTimeoutMs,\n        immutable.Set.empty[TopicPartition], -1, updateTimestamp))"
  },
  {
    "id" : "4f484a2a-ecea-4bd6-bf92-25c3be554b43",
    "prId" : 7115,
    "prUrl" : "https://github.com/apache/kafka/pull/7115#pullrequestreview-283976052",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "132bcc1c-d6f5-41a9-aa3f-0db5fad6a34a",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Would it simplify anything to replace `lastProducerId` and `lastProducerEpoch` with an `Option[ProducerIdAndEpoch]`?",
        "createdAt" : "2019-08-15T20:52:23Z",
        "updatedAt" : "2019-11-06T19:26:41Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "65fed24e-1986-49be-8284-0a5c2e2312db",
        "parentId" : "132bcc1c-d6f5-41a9-aa3f-0db5fad6a34a",
        "authorId" : "e88252f3-8879-452a-8098-afb39cb614dc",
        "body" : "I don't really think so, we use both of these individually pretty much immediately",
        "createdAt" : "2019-09-03T18:40:25Z",
        "updatedAt" : "2019-11-06T19:26:41Z",
        "lastEditedBy" : "e88252f3-8879-452a-8098-afb39cb614dc",
        "tags" : [
        ]
      },
      {
        "id" : "a1a36a58-1ce5-4148-a33c-831444f385c2",
        "parentId" : "132bcc1c-d6f5-41a9-aa3f-0db5fad6a34a",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Ok. I think my main concern was just type safety. Sentinel values have bit us in the past. ",
        "createdAt" : "2019-09-06T06:34:27Z",
        "updatedAt" : "2019-11-06T19:26:41Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a46583148fdd1f10258760e1b767b577ef193d8",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +172,176 @@                                               var lastProducerId: Long,\n                                               var producerEpoch: Short,\n                                               var lastProducerEpoch: Short,\n                                               var txnTimeoutMs: Int,\n                                               var state: TransactionState,"
  },
  {
    "id" : "2d14c6e1-cc76-42e7-b53f-d85dd43171e0",
    "prId" : 8239,
    "prUrl" : "https://github.com/apache/kafka/pull/8239#pullrequestreview-448779736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05d62798-75ff-43d2-9c45-2d4a69e44a01",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I believe it's accurate to say that if `hasFailedEpochFence` is set, then the bumped epoch could not have been returned to the client. Is that right? It might be worth a comment emphasizing that.",
        "createdAt" : "2020-07-14T19:36:10Z",
        "updatedAt" : "2020-07-15T09:37:48Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "1f1cb74a-1a11-4ba8-8686-5ebaafb19c5e",
        "parentId" : "05d62798-75ff-43d2-9c45-2d4a69e44a01",
        "authorId" : "e88252f3-8879-452a-8098-afb39cb614dc",
        "body" : "Added",
        "createdAt" : "2020-07-15T09:23:35Z",
        "updatedAt" : "2020-07-15T09:37:48Z",
        "lastEditedBy" : "e88252f3-8879-452a-8098-afb39cb614dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc22f931854318a4df3cb3f13c9b30c12d0ed9c8",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +217,221 @@    // If we've already failed to fence an epoch (because the write to the log failed), we don't increase it again.\n    // This is safe because we never return the epoch to client if we fail to fence the epoch\n    val bumpedEpoch = if (hasFailedEpochFence) producerEpoch else (producerEpoch + 1).toShort\n\n    prepareTransitionTo(PrepareEpochFence, producerId, bumpedEpoch, RecordBatch.NO_PRODUCER_EPOCH, txnTimeoutMs,"
  },
  {
    "id" : "5e9db891-903c-480d-b1d4-232db82302d2",
    "prId" : 10206,
    "prUrl" : "https://github.com/apache/kafka/pull/10206#pullrequestreview-598196890",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4abf386-3321-4c9b-894e-131115a957c7",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "How about `AllStates.find(_.name == name)`?",
        "createdAt" : "2021-02-25T05:02:17Z",
        "updatedAt" : "2021-03-02T18:44:02Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      }
    ],
    "commit" : "e210e768febcc690fc41d7e8cfed25f1116b47a8",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +39,43 @@  )\n\n  def fromName(name: String): Option[TransactionState] = {\n    AllStates.find(_.name == name)\n  }"
  },
  {
    "id" : "adea9bef-fad2-4e92-9eb0-fdfa2af83944",
    "prId" : 10206,
    "prUrl" : "https://github.com/apache/kafka/pull/10206#pullrequestreview-598223473",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34dbe350-056f-4808-9b5f-8eec9e383965",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "How about `AllStates.find(_.id == id)`?",
        "createdAt" : "2021-02-25T05:02:33Z",
        "updatedAt" : "2021-03-02T18:44:02Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "f0932c19-a44d-4cbd-b564-9a08f9209f58",
        "parentId" : "34dbe350-056f-4808-9b5f-8eec9e383965",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I left this one as it was since I am not 100% sure whether it has any impact on the performance of transaction loading.",
        "createdAt" : "2021-02-25T06:08:51Z",
        "updatedAt" : "2021-03-02T18:44:02Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "e210e768febcc690fc41d7e8cfed25f1116b47a8",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +43,47 @@  }\n\n  def fromId(id: Byte): TransactionState = {\n    id match {\n      case 0 => Empty"
  }
]