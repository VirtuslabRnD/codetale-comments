[
  {
    "id" : "50eaf6c6-70f1-401a-8d1f-5b1e02f0bfb5",
    "prId" : 7115,
    "prUrl" : "https://github.com/apache/kafka/pull/7115#pullrequestreview-267516214",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "067556fd-8410-42e9-901e-4490890bff9c",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "If there is no producerId currently mapped, the KIP suggests we allow the newly generated producerId to be returned. I wonder if it's simpler from an implementation perspective to accept the producerId and epoch from the InitProducerId request instead.\r\n\r\nBy the way, I think we might need to be a little careful with the result of `putTransactionStateIfNotExists`. Just need to be sure that if two InitProducerId requests come in at once, only one will be accepted.",
        "createdAt" : "2019-07-28T18:18:03Z",
        "updatedAt" : "2019-11-06T19:26:41Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a46583148fdd1f10258760e1b767b577ef193d8",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +129,133 @@            lastProducerId = RecordBatch.NO_PRODUCER_ID,\n            producerEpoch = RecordBatch.NO_PRODUCER_EPOCH,\n            lastProducerEpoch = RecordBatch.NO_PRODUCER_EPOCH,\n            txnTimeoutMs = transactionTimeoutMs,\n            state = Empty,"
  },
  {
    "id" : "b53ad656-f1ce-4206-b162-63c7e664e5aa",
    "prId" : 7115,
    "prUrl" : "https://github.com/apache/kafka/pull/7115#pullrequestreview-283976052",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "debe1c70-f1f8-41b3-b679-e2a3c2a390db",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Just checking my understanding. If the expected producer id and epoch is non-empty and there is no current producerId defined, we have hit the \"unknown producer\" case.  I think we want to allow the request, but return the newly generated id. But I think actually we would hit the `isStaleProducerId` check below since the expected producer id does not match either the current or the (undefined) last producer id.",
        "createdAt" : "2019-08-15T23:09:58Z",
        "updatedAt" : "2019-11-06T19:26:41Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "bb478e67-5dde-465e-97c9-719e60516e65",
        "parentId" : "debe1c70-f1f8-41b3-b679-e2a3c2a390db",
        "authorId" : "e88252f3-8879-452a-8098-afb39cb614dc",
        "body" : "Good catch, thanks. I've added a flag to `CoordinatorEpochAndTxnMetadata` to indicate the the `TransactionMetadata` was newly-created. which lets us distinguish the non-empty expected ID and epoch and no current producer id case.",
        "createdAt" : "2019-09-03T18:43:33Z",
        "updatedAt" : "2019-11-06T19:26:41Z",
        "lastEditedBy" : "e88252f3-8879-452a-8098-afb39cb614dc",
        "tags" : [
        ]
      },
      {
        "id" : "345051e9-a3c6-4b14-94f6-3acda1cff7bc",
        "parentId" : "debe1c70-f1f8-41b3-b679-e2a3c2a390db",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "That's interesting. Would it also be possible to detect this case by looking for a producer epoch that is equal to -1?",
        "createdAt" : "2019-09-05T01:31:39Z",
        "updatedAt" : "2019-11-06T19:26:41Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a46583148fdd1f10258760e1b767b577ef193d8",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +127,131 @@          val createdMetadata = new TransactionMetadata(transactionalId = transactionalId,\n            producerId = producerId,\n            lastProducerId = RecordBatch.NO_PRODUCER_ID,\n            producerEpoch = RecordBatch.NO_PRODUCER_EPOCH,\n            lastProducerEpoch = RecordBatch.NO_PRODUCER_EPOCH,"
  }
]