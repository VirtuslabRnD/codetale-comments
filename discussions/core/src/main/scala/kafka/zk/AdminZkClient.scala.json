[
  {
    "id" : "ee305ca6-b345-4c1f-9cbd-bc7712a07123",
    "prId" : 6246,
    "prUrl" : "https://github.com/apache/kafka/pull/6246#pullrequestreview-206093511",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9862a7a1-cabd-4c3f-a3e3-ecf78e28fdd4",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "I am not sure if this validation covers everything. For example a partition list of (0, 0, 3) has the same sum of (0, 1, 2) and the former should be invalid.",
        "createdAt" : "2019-02-20T23:01:16Z",
        "updatedAt" : "2019-02-22T01:31:52Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "7e128087-5607-41c3-9d1a-152d8b0c032f",
        "parentId" : "9862a7a1-cabd-4c3f-a3e3-ecf78e28fdd4",
        "authorId" : "78bac8c8-33c4-40ab-a9df-41d46597e947",
        "body" : "Hi @junrao, I add a duplication check and non-negative check in 0be7725, so invalid partitions like (0,0,3) or (-1,1,2,4) won't pass anymore, that should cover all edge cases.",
        "createdAt" : "2019-02-21T02:03:59Z",
        "updatedAt" : "2019-02-22T01:31:52Z",
        "lastEditedBy" : "78bac8c8-33c4-40ab-a9df-41d46597e947",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f677cdd6a0b37f569d779217e6f718d5858fd69",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +127,131 @@\n    val partitionSize = partitionReplicaAssignment.size\n    val sequenceSum = partitionSize * (partitionSize - 1) / 2\n    if (partitionReplicaAssignment.size != partitionReplicaAssignment.toSet.size ||\n        partitionReplicaAssignment.keys.filter(_ >= 0).sum != sequenceSum)"
  }
]