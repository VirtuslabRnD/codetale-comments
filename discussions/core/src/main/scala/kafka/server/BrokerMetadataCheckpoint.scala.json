[
  {
    "id" : "9eab858f-a23d-4907-8819-18714175f95e",
    "prId" : 9967,
    "prUrl" : "https://github.com/apache/kafka/pull/9967#pullrequestreview-579799028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbb4fc76-fe75-497d-ae14-3d4b036537c8",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "Both \"broker.id\" and \"node.id\" are defined by ```KafkaConfig``` also. Should we unify them?",
        "createdAt" : "2021-01-30T14:48:13Z",
        "updatedAt" : "2021-01-30T20:56:49Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "59d76011-e948-431d-a6d8-9e0e535df64f",
        "parentId" : "bbb4fc76-fe75-497d-ae14-3d4b036537c8",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Yeah, that is the plan. Once KIP-500 is enabled, we will deprecate `broker.id` so that `node.id` is the only ID going forward. That said, I'm trying to give us a little wiggle room by defining this config as internal for now. So we still have an opportunity to change this. If you have any thoughts about it, definitely share them.",
        "createdAt" : "2021-01-30T19:24:24Z",
        "updatedAt" : "2021-01-30T20:56:49Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c316377582d4f84b007a339aa9488af493e8130",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +34,38 @@  val ClusterIdKey = \"cluster.id\"\n  val BrokerIdKey = \"broker.id\"\n  val NodeIdKey = \"node.id\"\n  val VersionKey = \"version\"\n}"
  },
  {
    "id" : "6a9df715-be80-4762-a499-29f8d9b6b2a2",
    "prId" : 10043,
    "prUrl" : "https://github.com/apache/kafka/pull/10043#pullrequestreview-585904771",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de0df189-17eb-44b2-bd02-70b88bd5fb31",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Is this producing JSON? If so, should we use a JSON encoder instead?",
        "createdAt" : "2021-02-08T18:10:10Z",
        "updatedAt" : "2021-02-08T20:41:31Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "b77d0b36-04a5-425a-b4bc-e17a824ec1cf",
        "parentId" : "de0df189-17eb-44b2-bd02-70b88bd5fb31",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "It doesn't produce JSON (for example, keys and values are not quoted).\r\n\r\nThis is intended for human consumption.  It will show up in the command-line output.",
        "createdAt" : "2021-02-08T20:12:09Z",
        "updatedAt" : "2021-02-08T20:41:31Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "445ee8e2-5586-449a-b479-696452a63579",
        "parentId" : "de0df189-17eb-44b2-bd02-70b88bd5fb31",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "ok, sounds good",
        "createdAt" : "2021-02-08T20:42:30Z",
        "updatedAt" : "2021-02-08T20:42:31Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      }
    ],
    "commit" : "80d3ce902c7825ec25e153bb2ec39152005dec8e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +89,93 @@\n  override def toString: String = {\n    \"{\" + props.keySet().asScala.toList.asInstanceOf[List[String]].sorted.map {\n      key => key + \"=\" + props.get(key)\n    }.mkString(\", \") + \"}\""
  }
]