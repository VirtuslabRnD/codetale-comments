[
  {
    "id" : "c490bb7c-cc64-41f5-92f5-e1a413da8422",
    "prId" : 8680,
    "prUrl" : "https://github.com/apache/kafka/pull/8680#pullrequestreview-414092115",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b164a34-3216-40f0-a398-9d59bead7f5f",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "nit: add a line",
        "createdAt" : "2020-05-18T20:07:15Z",
        "updatedAt" : "2020-06-11T05:59:01Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "86c9b963-9237-485e-bdbe-c7401626f1a9",
        "parentId" : "0b164a34-3216-40f0-a398-9d59bead7f5f",
        "authorId" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "body" : "Done.",
        "createdAt" : "2020-05-19T05:58:32Z",
        "updatedAt" : "2020-06-11T05:59:01Z",
        "lastEditedBy" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e3ef56c552da13226c1fcc472c8d339fb98c7a8",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +31,35 @@ * NOTE: the update() and clear() APIs of this class should be used only for testing purposes.\n */\nobject SupportedFeatures extends Logging {\n\n  /**"
  },
  {
    "id" : "366bc42c-fd1a-4722-bc90-adfc6ec8e032",
    "prId" : 8680,
    "prUrl" : "https://github.com/apache/kafka/pull/8680#pullrequestreview-414092115",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f51bc6d-0467-41a5-bbeb-0039e6df5bff",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "This comment is a bit vague to me, what are you referring by `incompatibilities`?",
        "createdAt" : "2020-05-19T01:37:40Z",
        "updatedAt" : "2020-06-11T05:59:01Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "cc2a500e-4f04-4dd4-a2dd-c57c1ff0ad8f",
        "parentId" : "6f51bc6d-0467-41a5-bbeb-0039e6df5bff",
        "authorId" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "body" : "Good point. I have improved the doc now. Let me know how you feel about it.",
        "createdAt" : "2020-05-19T06:02:19Z",
        "updatedAt" : "2020-06-11T05:59:01Z",
        "lastEditedBy" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e3ef56c552da13226c1fcc472c8d339fb98c7a8",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +66,70 @@   *  2) Exists but the FinalizedVersionRange does not match with the supported feature's SupportedVersionRange.\n   *\n   * @param finalized   The finalized features against which incompatibilities need to be checked for.\n   *\n   * @return            The subset of input features which are incompatible. If the returned object"
  },
  {
    "id" : "55b3cc26-80db-402a-a0d9-11039de2ccec",
    "prId" : 8680,
    "prUrl" : "https://github.com/apache/kafka/pull/8680#pullrequestreview-416042080",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44f56daf-ebe5-46e0-bfae-c51615323737",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "This logging is duplicate",
        "createdAt" : "2020-05-21T04:00:05Z",
        "updatedAt" : "2020-06-11T05:59:01Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "d54f57ec-5c87-48bc-8a1c-2b0b970d892a",
        "parentId" : "44f56daf-ebe5-46e0-bfae-c51615323737",
        "authorId" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "body" : "Done. Removed extra logging in the caller of this method (see `FinalizedFeatureCache`).",
        "createdAt" : "2020-05-22T07:51:42Z",
        "updatedAt" : "2020-06-11T05:59:01Z",
        "lastEditedBy" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e3ef56c552da13226c1fcc472c8d339fb98c7a8",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +86,90 @@    }.filter{ case(_, _, errorReason) => errorReason != null}.toList\n\n    if (incompatibilities.nonEmpty) {\n      warn(\"Feature incompatibilities seen: \" + incompatibilities.map{ case(_, _, errorReason) => errorReason })\n    }"
  }
]