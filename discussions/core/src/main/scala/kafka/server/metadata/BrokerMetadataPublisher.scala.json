[
  {
    "id" : "f542dbe1-01fc-4fb5-8c78-515e664ea0b6",
    "prId" : 10931,
    "prUrl" : "https://github.com/apache/kafka/pull/10931#pullrequestreview-698530991",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a79c36f-86b4-47ab-92d7-8cff065972af",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "A little surprising to find this here given `BrokerServer` owns the rest of the lifecycle for these managers. Not sure if it would be any better with a callback to `BrokerServer`?",
        "createdAt" : "2021-07-01T22:42:56Z",
        "updatedAt" : "2021-07-01T22:55:53Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "923b4e2e-3173-49c6-814b-782b8c765488",
        "parentId" : "4a79c36f-86b4-47ab-92d7-8cff065972af",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "I was thinking about that too. If I can find a way to condense the initialization into a single startup callback, I'll try to put the code back into `BrokerServer`. It still needs to happen in the context of the metadata listener thread, though.",
        "createdAt" : "2021-07-02T22:48:05Z",
        "updatedAt" : "2021-07-02T22:48:05Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "58ecc3276c637977fdd1c686cfae70664944f507",
    "line" : 225,
    "diffHunk" : "@@ -1,1 +223,227 @@\n    // Start the replica manager.\n    replicaManager.startup()\n\n    // Start the group coordinator."
  },
  {
    "id" : "aa4bb79d-45e4-4604-84e7-003d3e7af57c",
    "prId" : 11029,
    "prUrl" : "https://github.com/apache/kafka/pull/11029#pullrequestreview-710926204",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9288b76-9a9a-4488-a22e-7fc7b699c61b",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "Is `newImage.topics()` never null? If so, should we add null check to constructor of `MetadataImage` to make sure input arguments are NOT null.",
        "createdAt" : "2021-07-17T07:53:21Z",
        "updatedAt" : "2021-07-17T07:53:39Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "c2787172-480e-437d-8e73-a86acb4d250a",
        "parentId" : "c9288b76-9a9a-4488-a22e-7fc7b699c61b",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "There's just two usages of this constructor and they cannot provide nulls, so we can probably live without the null check",
        "createdAt" : "2021-07-20T18:10:50Z",
        "updatedAt" : "2021-07-20T18:10:51Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      }
    ],
    "commit" : "b80e54a3c7d20638bc11c54146799d6074bda78e",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +47,51 @@                    newImage: MetadataImage,\n                    delta: MetadataDelta): Option[TopicDelta] = {\n    Option(newImage.topics().getTopic(topicName)).flatMap {\n      topicImage => Option(delta.topicsDelta()).flatMap {\n        topicDelta => Option(topicDelta.changedTopic(topicImage.id()))"
  }
]