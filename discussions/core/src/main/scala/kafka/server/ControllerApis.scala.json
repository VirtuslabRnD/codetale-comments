[
  {
    "id" : "ecb34b04-8ffa-4a25-ad65-ee056ff604bf",
    "prId" : 10184,
    "prUrl" : "https://github.com/apache/kafka/pull/10184#pullrequestreview-597865888",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d1d8aaa-bbad-4a9f-9615-f5dcf578cdfd",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "How about using `throw Errors.INVALID_REQUEST.exception()`? That makes sure the exception is correlated to expected `Errors`",
        "createdAt" : "2021-02-23T14:06:54Z",
        "updatedAt" : "2021-03-04T17:23:46Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "2466fb48-4d17-4ba4-8275-c3a2d9b78f87",
        "parentId" : "7d1d8aaa-bbad-4a9f-9615-f5dcf578cdfd",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "The error message would be less useful in that case.",
        "createdAt" : "2021-02-23T15:11:54Z",
        "updatedAt" : "2021-03-04T17:23:46Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "0d6346d9-ebea-4bf3-9f0a-92484da41d82",
        "parentId" : "7d1d8aaa-bbad-4a9f-9615-f5dcf578cdfd",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "As @ijuma said, in this case the error message gives extra information which would be very helpful to users. If we always wanted the same message, there would be no reason to have the string field in the wire protocol.",
        "createdAt" : "2021-02-24T19:52:21Z",
        "updatedAt" : "2021-03-04T17:23:46Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "6aec8bdb9327d2f72b67f7acc8e158d737491711",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +185,189 @@    if (!config.deleteTopicEnable) {\n      if (apiVersion < 3) {\n        throw new InvalidRequestException(\"Topic deletion is disabled.\")\n      } else {\n        throw new TopicDeletionDisabledException()"
  },
  {
    "id" : "47bc4e00-049c-4aac-bc3a-28568d09cfa0",
    "prId" : 10184,
    "prUrl" : "https://github.com/apache/kafka/pull/10184#pullrequestreview-598262044",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0b9e4ff-e233-4e55-a7f5-bf92b5e447ff",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "unintentional?",
        "createdAt" : "2021-02-25T07:55:56Z",
        "updatedAt" : "2021-03-04T17:23:46Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      }
    ],
    "commit" : "6aec8bdb9327d2f72b67f7acc8e158d737491711",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +53,57 @@import scala.jdk.CollectionConverters._\n\n\n/**\n * Request handler for Controller APIs"
  },
  {
    "id" : "3ca63bf9-fb93-47d3-a8f3-fd0aca12532b",
    "prId" : 10184,
    "prUrl" : "https://github.com/apache/kafka/pull/10184#pullrequestreview-599919849",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "952114d7-96d7-40d2-92e0-1f9e5bdd6a6a",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "How about using `DeletableTopicResultCollection` replace `util.List[DeletableTopicResult]`? That change can eliminate extra collection.",
        "createdAt" : "2021-02-26T07:47:42Z",
        "updatedAt" : "2021-03-04T17:23:46Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "2811e3cb-484d-42c1-823a-2bff71d549ff",
        "parentId" : "952114d7-96d7-40d2-92e0-1f9e5bdd6a6a",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Unfortunately, that will not work since we have to shuffle it at the end",
        "createdAt" : "2021-02-26T20:30:49Z",
        "updatedAt" : "2021-03-04T17:23:46Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "6aec8bdb9327d2f72b67f7acc8e158d737491711",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +181,185 @@                   hasClusterAuth: Boolean,\n                   getDescribableTopics: Iterable[String] => Set[String],\n                   getDeletableTopics: Iterable[String] => Set[String]): util.List[DeletableTopicResult] = {\n    // Check if topic deletion is enabled at all.\n    if (!config.deleteTopicEnable) {"
  },
  {
    "id" : "d01251b4-edac-4159-9a79-69dda80e1398",
    "prId" : 10184,
    "prUrl" : "https://github.com/apache/kafka/pull/10184#pullrequestreview-599970734",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "282c0322-7be4-4f0c-b0d7-407b6d55cfc1",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "There seems to be enough complexity in the handling here that it might be worth pulling this logic into a separate class. Not required for this PR, but it would be nice to come up with a nicer pattern so that we don't end up with a giant class like `KafkaApis`.",
        "createdAt" : "2021-02-26T20:03:12Z",
        "updatedAt" : "2021-03-04T17:23:46Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "fa2fa3e1-d6b2-49ee-8b39-1746eb186db8",
        "parentId" : "282c0322-7be4-4f0c-b0d7-407b6d55cfc1",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "It is kind of frustrating that there is this much complexity in the \"apis\" class.  At least there is a good unit test for it now, though.  I hope that most other APIs won't be this complex.",
        "createdAt" : "2021-02-26T21:57:26Z",
        "updatedAt" : "2021-03-04T17:23:46Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "6aec8bdb9327d2f72b67f7acc8e158d737491711",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +177,181 @@  }\n\n  def deleteTopics(request: DeleteTopicsRequestData,\n                   apiVersion: Int,\n                   hasClusterAuth: Boolean,"
  },
  {
    "id" : "cf17963e-5ae1-463c-a170-3075ca75e57b",
    "prId" : 10184,
    "prUrl" : "https://github.com/apache/kafka/pull/10184#pullrequestreview-600150778",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "017ab81c-82a7-44f7-9d8d-f3667fb785f5",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "Should it pass `UNKNOWN_TOPIC_ID` for this case (according to comment)?",
        "createdAt" : "2021-02-27T14:41:41Z",
        "updatedAt" : "2021-03-04T17:23:46Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      }
    ],
    "commit" : "6aec8bdb9327d2f72b67f7acc8e158d737491711",
    "line" : 162,
    "diffHunk" : "@@ -1,1 +244,248 @@    controller.findTopicNames(providedIds).get().forEach { (id, nameOrError) =>\n      if (nameOrError.isError) {\n        appendResponse(null, id, nameOrError.error())\n      } else {\n        toAuthenticate.add(nameOrError.result())"
  },
  {
    "id" : "7b602837-2bf4-4c3b-b3c0-c05331a94235",
    "prId" : 10194,
    "prUrl" : "https://github.com/apache/kafka/pull/10194#pullrequestreview-599152107",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7988a43a-8d9f-4bdd-ac6e-e1663c3729a0",
        "parentId" : null,
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "I think we do need to fill in the feature fields eventually. But for 2.8, this is OK.",
        "createdAt" : "2021-02-25T23:54:43Z",
        "updatedAt" : "2021-02-26T00:13:25Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "a6483ad7-279d-41f6-94cb-b1f17d768500",
        "parentId" : "7988a43a-8d9f-4bdd-ac6e-e1663c3729a0",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Right. I think the change makes sense in any case since the feature logic will end up getting handled by `ApiVersionManager` (as we do with the broker).",
        "createdAt" : "2021-02-26T00:05:32Z",
        "updatedAt" : "2021-02-26T00:13:25Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "ee9d5332-01ff-4240-93c8-e0a8f78c8bb8",
        "parentId" : "7988a43a-8d9f-4bdd-ac6e-e1663c3729a0",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "agreed. we will have to have some way for the controller to update those fields in ApiVersionsManager (possibly an atomic / volatile field or something).",
        "createdAt" : "2021-02-26T00:12:42Z",
        "updatedAt" : "2021-02-26T00:13:31Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "254e33cfea44b56ecb014c4f05068f3cd2b9c412",
    "line" : 187,
    "diffHunk" : "@@ -1,1 +218,222 @@        apiVersionRequest.getErrorResponse(requestThrottleMs, Errors.INVALID_REQUEST.exception)\n      } else {\n        apiVersionManager.apiVersionResponse(requestThrottleMs)\n      }\n    }"
  }
]