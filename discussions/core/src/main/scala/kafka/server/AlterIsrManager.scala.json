[
  {
    "id" : "a0e5bdfe-c307-4ca7-be7e-4aeef21d598b",
    "prId" : 9100,
    "prUrl" : "https://github.com/apache/kafka/pull/9100#pullrequestreview-490002851",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3cf0ac9-c30c-4a91-ab82-e26e99aa7e5a",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Still not super keen on this propagation delay. At least it would be nice if we did not have to wakeup the thread every 50ms when there's nothing to do. This is potentially something we can save for a follow-up since coming up with a good solution might require some experimentation and analysis.",
        "createdAt" : "2020-09-16T17:55:53Z",
        "updatedAt" : "2020-09-24T19:27:07Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "e05776e5-b01f-4d26-9fb1-68ad363b43bf",
        "parentId" : "e3cf0ac9-c30c-4a91-ab82-e26e99aa7e5a",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Currently we impose a 2.5s delay for the old ZK based ISR propagation method. We could probably increase this 50ms up to a few hundred without any ill-effects. We still benefit from fact that we assume the maximal ISR immediately. How about 200ms?\r\n\r\nLonger term we can look into having a single thread invocation that sits in a while loop trying to consume from a LinkedBlockingQueue or maybe even a SynchronousQueue. But agreed we should leave this for later.",
        "createdAt" : "2020-09-16T20:39:05Z",
        "updatedAt" : "2020-09-24T19:27:07Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac3eec11505bace6c3302ad982d6418d30f26313",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +64,68 @@\n  override def start(): Unit = {\n    scheduler.schedule(\"send-alter-isr\", propagateIsrChanges, 50, 50, TimeUnit.MILLISECONDS)\n  }\n"
  }
]