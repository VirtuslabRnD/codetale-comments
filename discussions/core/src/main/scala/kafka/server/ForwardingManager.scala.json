[
  {
    "id" : "33e1288d-bbfd-4c88-9fce-47086fa0ce39",
    "prId" : 9580,
    "prUrl" : "https://github.com/apache/kafka/pull/9580#pullrequestreview-527619094",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fbdd8f98-9577-4470-98f9-0e4ed3021083",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Wdyt about also adding a \"forwarded\" boolean to the request log? (in `RequestChannel#updateRequestMetrics`)\r\n\r\nWould this be useful? cc @cmccabe ",
        "createdAt" : "2020-11-10T20:21:40Z",
        "updatedAt" : "2020-11-10T22:35:38Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "173003b1-b717-497d-9e9b-01988323940c",
        "parentId" : "fbdd8f98-9577-4470-98f9-0e4ed3021083",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Added the logging in RequestChannel.",
        "createdAt" : "2020-11-10T21:24:42Z",
        "updatedAt" : "2020-11-10T22:35:38Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac8c133e76bb4871dcff14de5575e3ac654fc9ca",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@    config, \"forwardingChannel\", threadNamePrefix) with KafkaMetricsGroup {\n\n  private val forwardingMetricName = \"NumRequestsForwardingToControllerPerSec\"\n\n  def forwardRequest(request: RequestChannel.Request,"
  },
  {
    "id" : "563d9628-8360-48bd-a352-defbee7c0e2d",
    "prId" : 9580,
    "prUrl" : "https://github.com/apache/kafka/pull/9580#pullrequestreview-528470566",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "885faa8c-dff3-4666-916c-5ddbdde46a4a",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "nit: should we do this get-or-else-throw thing, or do a match/case?",
        "createdAt" : "2020-11-10T20:23:10Z",
        "updatedAt" : "2020-11-10T22:35:38Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "396c1bbb-96dd-45ed-83b3-2945465cd1dd",
        "parentId" : "885faa8c-dff3-4666-916c-5ddbdde46a4a",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "We should have the principal serde emptiness check in the caller, so here would be an illegal state.",
        "createdAt" : "2020-11-10T21:17:46Z",
        "updatedAt" : "2020-11-10T22:35:38Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "d5f8e1ee-ebfe-4b90-a820-44dfdf6baabf",
        "parentId" : "885faa8c-dff3-4666-916c-5ddbdde46a4a",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "I think logic is fine, I'm just wondering if it's more idiomatic to do:\r\n\r\n```scala\r\nrequest.context.principalSerde.asScala match {\r\n      case Some(principalSerde) => ...\r\n      case None => throw new IllegalArgumentException\r\n```\r\n\r\n",
        "createdAt" : "2020-11-10T22:04:30Z",
        "updatedAt" : "2020-11-10T22:35:38Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "910a6e15-581e-4a1a-adf7-4964dc84e6a7",
        "parentId" : "885faa8c-dff3-4666-916c-5ddbdde46a4a",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Looks like we actually use this getOrElse + throw pattern in a few places already. ",
        "createdAt" : "2020-11-11T19:26:43Z",
        "updatedAt" : "2020-11-11T19:26:43Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac8c133e76bb4871dcff14de5575e3ac654fc9ca",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@  def forwardRequest(request: RequestChannel.Request,\n                     responseCallback: AbstractResponse => Unit): Unit = {\n    val principalSerde = request.context.principalSerde.asScala.getOrElse(\n      throw new IllegalArgumentException(s\"Cannot deserialize principal from request $request \" +\n        \"since there is no serde defined\")"
  },
  {
    "id" : "235b90e7-8046-4c2b-8716-c0dd69c23f90",
    "prId" : 9580,
    "prUrl" : "https://github.com/apache/kafka/pull/9580#pullrequestreview-527653214",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "245c5af1-1242-40ea-b445-ea925b3a7daa",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Should we extend the BrokerToControllerChannel here? It looks like we only ever call `forwardRequest`, so maybe it's better for ForwardingManager _not_ to extend BrokerToControllerChannel and instead take it as a dependency. Otherwise we are exposing the `sendRequest` method which we don't really want anyone to use on the `forwardingManager` instance.",
        "createdAt" : "2020-11-10T20:29:30Z",
        "updatedAt" : "2020-11-10T22:35:38Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "c4dcc5f2-ecc7-4556-9aa9-c5980736f294",
        "parentId" : "245c5af1-1242-40ea-b445-ea925b3a7daa",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Actually we do need `sendRequest` on the forwarding manager interface in the topic creation routing (WIP [here.](https://github.com/apache/kafka/pull/9579/). The `forwardRequest` is serving the purpose of embedding client request inside an Envelope, while for certain cases broker would like to send direct CreateTopicsRequest on behalf of its own principal instead of the client principal. I think we could debate whether to rename `forwardingManager` to a different name to also include the possibility of sending direct request, just not have yet come up a better name here.",
        "createdAt" : "2020-11-10T21:20:57Z",
        "updatedAt" : "2020-11-10T22:35:38Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "1dc79bda-05ea-4bf7-a23d-b23698dd37d3",
        "parentId" : "245c5af1-1242-40ea-b445-ea925b3a7daa",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Ah, ok üëç Thanks for the explanation. Another option would be to let KafkaApis have BrokerToControllerChannelManager and ForwardingManager as separate dependencies. However, we already have lots of dependencies there, so I could see us wanting to use one instance for forwarding and regular requests. I don't really have a strong opinion either way, I'm ok leaving it as-is",
        "createdAt" : "2020-11-10T22:17:42Z",
        "updatedAt" : "2020-11-10T22:35:38Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac8c133e76bb4871dcff14de5575e3ac654fc9ca",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@                        config: KafkaConfig,\n                        threadNamePrefix: Option[String] = None) extends\n  BrokerToControllerChannelManagerImpl(metadataCache, time, metrics,\n    config, \"forwardingChannel\", threadNamePrefix) with KafkaMetricsGroup {\n"
  },
  {
    "id" : "415c1bc2-c1fb-4ee7-b30c-72718b0f9550",
    "prId" : 9580,
    "prUrl" : "https://github.com/apache/kafka/pull/9580#pullrequestreview-527617212",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74f513a7-dbe4-4f75-907a-bafb308c3557",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "nit: I normally reverse the order of stuff in shutdown methods so when the super is called anything the child class has done is undone. Probably doesn't matter in this case",
        "createdAt" : "2020-11-10T20:32:24Z",
        "updatedAt" : "2020-11-10T22:35:38Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "ca33e5bf-b85d-4799-a23a-6f03946d984c",
        "parentId" : "74f513a7-dbe4-4f75-907a-bafb308c3557",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Sg.",
        "createdAt" : "2020-11-10T21:21:48Z",
        "updatedAt" : "2020-11-10T22:35:38Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac8c133e76bb4871dcff14de5575e3ac654fc9ca",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +80,84 @@\n  override def shutdown(): Unit = {\n    removeMetric(forwardingMetricName)\n    super.shutdown()\n  }"
  },
  {
    "id" : "ea589881-6db8-492e-b130-cfe22678a2a2",
    "prId" : 9617,
    "prUrl" : "https://github.com/apache/kafka/pull/9617#pullrequestreview-534062712",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85059ea0-1da7-4cbb-a678-a669021b1eb7",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "As ```ForwardingManager``` does not extend ```BrokerToControllerChannelManagerImpl```, the ```requestQueue``` can be declared as private now.\r\n\r\nhttps://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/server/BrokerToControllerChannelManagerImpl.scala#L58",
        "createdAt" : "2020-11-19T03:51:12Z",
        "updatedAt" : "2020-11-19T18:20:34Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      }
    ],
    "commit" : "5186f0f646526a0e7488805d1e33dc9bcc8728ac",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +28,32 @@import scala.compat.java8.OptionConverters._\n\nclass ForwardingManager(channelManager: BrokerToControllerChannelManager) extends Logging {\n\n  def forwardRequest(request: RequestChannel.Request,"
  }
]