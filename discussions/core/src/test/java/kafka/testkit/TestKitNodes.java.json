[
  {
    "id" : "8a618b9a-5b2c-48ed-8c5e-6656cd1aedf9",
    "prId" : 10220,
    "prUrl" : "https://github.com/apache/kafka/pull/10220#pullrequestreview-605463175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c6d9dcb-83ec-4529-8f6b-58495f4d29c0",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "It looks like we don't support mixed mode testing. That seems worth a follow-up JIRA. It is definitely an interesting case from the perspective of the raft implementation since it involves two listeners.",
        "createdAt" : "2021-03-05T18:05:00Z",
        "updatedAt" : "2021-03-19T20:31:24Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "3bc4bb5d3642e283a2b2787a51a97cf10b66f18a",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@    public static class Builder {\n        private Uuid clusterId = null;\n        private final NavigableMap<Integer, ControllerNode> controllerNodes = new TreeMap<>();\n        private final NavigableMap<Integer, BrokerNode> brokerNodes = new TreeMap<>();\n"
  },
  {
    "id" : "8edb8d6a-6b4f-4dd4-b967-259bf0e7ebc1",
    "prId" : 10220,
    "prUrl" : "https://github.com/apache/kafka/pull/10220#pullrequestreview-605463175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "109735bc-2522-4fb8-a7ae-13edefd0db6a",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "nit: this loop is a little unconventional. Maybe we could use `pollFirstEntry` instead of the iterator? Similarly in `setNumKip500BrokerNodes`. ",
        "createdAt" : "2021-03-05T18:09:21Z",
        "updatedAt" : "2021-03-19T20:31:24Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "3bc4bb5d3642e283a2b2787a51a97cf10b66f18a",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +68,72 @@            }\n\n            while (controllerNodes.size() > numControllerNodes) {\n                controllerNodes.pollFirstEntry();\n            }"
  },
  {
    "id" : "568bd536-2178-499d-b12e-76de8e0fbec7",
    "prId" : 10220,
    "prUrl" : "https://github.com/apache/kafka/pull/10220#pullrequestreview-616598396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06ac8f28-17f2-4908-93cd-c2e4424cc7c0",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "nit: kip500 prefix",
        "createdAt" : "2021-03-19T16:45:13Z",
        "updatedAt" : "2021-03-19T20:31:24Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "3bc4bb5d3642e283a2b2787a51a97cf10b66f18a",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +82,86 @@        }\n\n        public Builder setNumKip500BrokerNodes(int numBrokerNodes) {\n            if (numBrokerNodes < 0) {\n                throw new RuntimeException(\"Invalid negative value for numBrokerNodes\");"
  }
]