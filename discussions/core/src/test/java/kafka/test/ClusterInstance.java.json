[
  {
    "id" : "8e5ebbef-1545-4d22-b8fd-85c4aa2f82d4",
    "prId" : 9986,
    "prUrl" : "https://github.com/apache/kafka/pull/9986#pullrequestreview-584699361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7da6b4e1-fa85-4e4b-ad50-6dd261a17ab8",
        "parentId" : null,
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Enum values should be capitalized",
        "createdAt" : "2021-02-05T20:54:19Z",
        "updatedAt" : "2021-02-09T14:12:29Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc59c3356e36f9f7615aa2c3f1f9ab7aa50c49a0",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +28,32 @@public interface ClusterInstance {\n\n    enum ClusterType {\n        ZK,\n        // RAFT"
  },
  {
    "id" : "85e6f6e7-9017-464d-90fa-6cbb3665cb9a",
    "prId" : 9986,
    "prUrl" : "https://github.com/apache/kafka/pull/9986#pullrequestreview-585815492",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "983750d2-5db1-4589-8077-4ba3e237463a",
        "parentId" : null,
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "A cluster can have multiple listeners, right?  Is this intended to be the listener that should be used by clients?  If so, calling it the client listener makes sense.\r\n\r\n(Technically we could have multiple client listeners too, but that's much less common)\r\n\r\nMany clusters run with 3 listeners:\r\n* client\r\n* inter-broker NON-REPLICATION\r\n* replication\r\n\r\nand we are going to add a 4th:\r\n* controller",
        "createdAt" : "2021-02-05T20:56:16Z",
        "updatedAt" : "2021-02-09T14:12:29Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "cfc40905-1043-4be0-8bac-e05b7e583e4c",
        "parentId" : "983750d2-5db1-4589-8077-4ba3e237463a",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Yes, multiple listeners can be defined. This is something to solve/fix in this new framework. Only one security protocol and listener are exposed here in order to stay similar to how KafkaServerTestHarness works. It defines one security protocol and listener as members:\r\n\r\n```\r\nprotected def securityProtocol: SecurityProtocol = SecurityProtocol.PLAINTEXT\r\nprotected def listenerName: ListenerName = ListenerName.forSecurityProtocol(securityProtocol)\r\n``` \r\n\r\nOf course, more listeners can be defined through configuration, but this one is exposed by the test harness and used by many tests.",
        "createdAt" : "2021-02-05T21:21:35Z",
        "updatedAt" : "2021-02-09T14:12:29Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "b9a965d7-a6b9-4bab-a2c0-af91679907ac",
        "parentId" : "983750d2-5db1-4589-8077-4ba3e237463a",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "How about naming these \"clientSecurityProtocol\", \"clientListenerName\", etc. to reflect the fact that the clients will be using these security protocols, listener names, etc.  Then we can add more listeners later for specific tests without doing a big rename.",
        "createdAt" : "2021-02-08T18:49:50Z",
        "updatedAt" : "2021-02-09T14:12:29Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc59c3356e36f9f7615aa2c3f1f9ab7aa50c49a0",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +47,51 @@     * The listener for this cluster as configured by {@link ClusterTest} or by {@link ClusterConfig}. If\n     * unspecified by those sources, this will return the listener for the default security protocol PLAINTEXT\n     */\n    ListenerName clientListener();\n"
  },
  {
    "id" : "e6a280da-0893-41a7-9f1a-2794f46bc79d",
    "prId" : 9986,
    "prUrl" : "https://github.com/apache/kafka/pull/9986#pullrequestreview-585821258",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d336a96-7a11-4d43-8d61-7222614a3ca9",
        "parentId" : null,
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "should this implement `AutoCloseable`?  Does code need to remember to close this cluster?\r\n\r\nOr is that handled automatically by the framework...",
        "createdAt" : "2021-02-05T20:58:34Z",
        "updatedAt" : "2021-02-09T14:12:29Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "39ba1d8a-7a9f-4464-a3a2-eb354349395d",
        "parentId" : "2d336a96-7a11-4d43-8d61-7222614a3ca9",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Originally I left these out of the interface because the framework handle starting and stopping the cluster. However, after @ijuma's feedback, I added `boolean autoStart` to ClusterConfig along with these methods so that a test could control cluster startup/shutdown explicitly. \r\n\r\nIf a test does not call `stop`, the framework will stop the cluster. Stopping it a second time does nothing (per the implementation).",
        "createdAt" : "2021-02-05T21:25:38Z",
        "updatedAt" : "2021-02-09T14:12:29Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "a3a2fbf0-a5fa-46e2-80cb-5cdb5982dd4c",
        "parentId" : "2d336a96-7a11-4d43-8d61-7222614a3ca9",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "ok",
        "createdAt" : "2021-02-08T18:56:59Z",
        "updatedAt" : "2021-02-09T14:12:29Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc59c3356e36f9f7615aa2c3f1f9ab7aa50c49a0",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +94,98 @@    void start();\n\n    void stop();\n}"
  }
]