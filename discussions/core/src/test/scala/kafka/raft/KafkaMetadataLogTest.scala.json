[
  {
    "id" : "a5f5f563-01fc-4149-94f2-2572dcad729a",
    "prId" : 10021,
    "prUrl" : "https://github.com/apache/kafka/pull/10021#pullrequestreview-608376035",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a78311d-0e0f-42c7-9d4b-f3ac21d56342",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "This comment applies to all of the tests/changes in this file.\r\n\r\nFor all of the tests that were added to this file can we also add them to `MockLogTest`, if they apply? It is good to have tests that validate that these two implementations behave similarly.",
        "createdAt" : "2021-03-09T19:28:08Z",
        "updatedAt" : "2021-03-11T01:24:32Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "e2d6617e-433b-4f53-aaeb-26f21f53b8a1",
        "parentId" : "7a78311d-0e0f-42c7-9d4b-f3ac21d56342",
        "authorId" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "body" : "I add some changes in `MockLog` to delete the elder snapshots, and 2 unit tests.",
        "createdAt" : "2021-03-10T06:44:55Z",
        "updatedAt" : "2021-03-11T01:24:32Z",
        "lastEditedBy" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce539fa117584682bd25c719e93ed5f371772b34",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +33,37 @@import org.apache.kafka.raft.{KafkaRaftClient, LogAppendInfo, LogOffsetMetadata, OffsetAndEpoch, RecordSerde, ReplicatedLog}\nimport org.apache.kafka.snapshot.{SnapshotPath, Snapshots}\nimport org.junit.jupiter.api.Assertions.{assertEquals, assertFalse, assertNotEquals, assertThrows, assertTrue}\nimport org.junit.jupiter.api.{AfterEach, BeforeEach, Test}\n"
  },
  {
    "id" : "e938b6fc-77d3-4356-a4e6-82a654938896",
    "prId" : 10256,
    "prUrl" : "https://github.com/apache/kafka/pull/10256#pullrequestreview-604555417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e2b1d5e-1355-4869-a5ef-0d158dcd84dc",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Does it matter that maxBatchSizeInBytes is a multiple of the record size? Could you have done \r\n\r\n> buildFullBatch(leaderEpoch, recordSize, maxBatchSizeInBytes + 1) \r\n\r\nto get the same RecordTooLargeException?",
        "createdAt" : "2021-03-04T19:46:35Z",
        "updatedAt" : "2021-03-04T20:36:43Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "56d6f01e-6e1e-4287-b4ff-e1b5e6b2741b",
        "parentId" : "0e2b1d5e-1355-4869-a5ef-0d158dcd84dc",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "It's a little tricky to get the alignment perfect after accounting for the overhead of the batch itself. ",
        "createdAt" : "2021-03-04T19:56:48Z",
        "updatedAt" : "2021-03-04T20:36:43Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "24a160fc-8915-4b44-bde3-7ae565fa7e1c",
        "parentId" : "0e2b1d5e-1355-4869-a5ef-0d158dcd84dc",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I tried it out just to see if we got lucky on the alignment, but unfortunately we didn't.",
        "createdAt" : "2021-03-04T20:39:17Z",
        "updatedAt" : "2021-03-04T20:39:18Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "94ad934e-263f-4f77-8e70-c25e2180af28",
        "parentId" : "0e2b1d5e-1355-4869-a5ef-0d158dcd84dc",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Thanks for the explanation üëç  I figured it had something to do with the size overhead",
        "createdAt" : "2021-03-04T21:01:49Z",
        "updatedAt" : "2021-03-04T21:01:49Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      }
    ],
    "commit" : "fad668873765974413cef49f63688665702983c6",
    "line" : 180,
    "diffHunk" : "@@ -1,1 +302,306 @@    val leaderEpoch = 5\n    val maxBatchSizeInBytes = 16384\n    val recordSize = 64\n    val log = buildMetadataLog(tempDir, mockTime, maxBatchSizeInBytes)\n"
  },
  {
    "id" : "285fcc00-0c14-4866-bbef-5f81337ed14e",
    "prId" : 10276,
    "prUrl" : "https://github.com/apache/kafka/pull/10276#pullrequestreview-611668894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53144c40-9942-4c88-9eef-e4311cac34fa",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Sounds good. Let's also add a case where the offset is less that the LEO. E.g.\r\n\r\n1. leader epoch = (epoch: 1, start offset: 0), (epoch: 2, start offset: 10)\r\n\r\n```\r\n     val resultOffsetAndEpoch = log.validateOffsetAndEpoch(11, 1)\r\n```\r\n\r\n",
        "createdAt" : "2021-03-10T20:21:13Z",
        "updatedAt" : "2021-03-18T23:27:46Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "6939cec6-31ff-40b0-a552-6cc3c7c05137",
        "parentId" : "53144c40-9942-4c88-9eef-e4311cac34fa",
        "authorId" : "2a225e30-9f0d-45bc-ab55-5afe285d3716",
        "body" : "Added testValidateOffsetLessThanLEO test.",
        "createdAt" : "2021-03-14T07:58:32Z",
        "updatedAt" : "2021-03-18T23:27:46Z",
        "lastEditedBy" : "2a225e30-9f0d-45bc-ab55-5afe285d3716",
        "tags" : [
        ]
      }
    ],
    "commit" : "14718f039a46dde01a83353ec0248878eb996d36",
    "line" : 228,
    "diffHunk" : "@@ -1,1 +617,621 @@    append(log, numberOfRecords, epoch)\n\n    val resultOffsetAndEpoch = log.validateOffsetAndEpoch(numberOfRecords + 1, epoch)\n    assertEquals(ValidOffsetAndEpoch.Kind.DIVERGING, resultOffsetAndEpoch.kind)\n    assertEquals(new OffsetAndEpoch(log.endOffset.offset, epoch), resultOffsetAndEpoch.offsetAndEpoch())"
  }
]