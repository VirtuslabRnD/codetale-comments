[
  {
    "id" : "e7a79804-f0e8-4ff7-a33e-4aed1820b4b2",
    "prId" : 6880,
    "prUrl" : "https://github.com/apache/kafka/pull/6880#pullrequestreview-246221022",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20e061aa-10f5-4175-9530-cf26b143588a",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "This seems similar to try-with-resources. Does Scala have an equivalent construct?",
        "createdAt" : "2019-06-05T19:43:40Z",
        "updatedAt" : "2019-06-07T00:00:24Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "5481ea5d-5d76-4791-872e-84e305180fda",
        "parentId" : "20e061aa-10f5-4175-9530-cf26b143588a",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Yep. For Scala 2.13 they are going to add it to the standard library. Until that is release and we upgrade to it we need to implement it ourselves.",
        "createdAt" : "2019-06-05T19:49:39Z",
        "updatedAt" : "2019-06-07T00:00:24Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7a1359a8016bb286dfb7c27e4cb3894f51367a9",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1499,1503 @@  }\n\n  def resource[R <: AutoCloseable, A](resource: R)(func: R => A): A = {\n    try {\n      func(resource)"
  },
  {
    "id" : "66922b41-1ab9-4b60-aedc-4d4a02f275f2",
    "prId" : 6908,
    "prUrl" : "https://github.com/apache/kafka/pull/6908#pullrequestreview-247633047",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be57e0a6-3cb4-4771-8887-f95e10c18bba",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Can we document this a bit?",
        "createdAt" : "2019-06-10T14:05:45Z",
        "updatedAt" : "2019-06-10T15:06:51Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b8f335485d2378e3c85e7e5cd6da8b2246bf866",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +785,789 @@   * @return The unwrapped value returned by the function\n   */\n  def awaitValue[T](func: () => Option[T], msg: => String, waitTimeMs: Long = JTestUtils.DEFAULT_MAX_WAIT_MS): T = {\n    var value: Option[T] = None\n    waitUntilTrue(() => {"
  }
]