[
  {
    "id" : "ed6a4ad0-4c32-4de1-9152-6b332fcc6315",
    "prId" : 10252,
    "prUrl" : "https://github.com/apache/kafka/pull/10252#pullrequestreview-606553842",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e4b6063-feea-472f-8827-6b2730476ff0",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "It seems not all messages are covered in this class? If so, is there a jira to complete those test cases?",
        "createdAt" : "2021-03-08T17:43:31Z",
        "updatedAt" : "2021-03-08T17:43:53Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "22d247b1-2cde-49d8-bc42-f2ec8e9bf67b",
        "parentId" : "5e4b6063-feea-472f-8827-6b2730476ff0",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Good idea. I filed https://issues.apache.org/jira/browse/KAFKA-12437.",
        "createdAt" : "2021-03-08T17:52:45Z",
        "updatedAt" : "2021-03-08T17:52:46Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "85c26fab544a58ad390d69130b5635c2ca7ef56e",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@import scala.jdk.CollectionConverters._\n\nclass BrokerMetadataListenerTest {\n\n  private val brokerId = 1"
  },
  {
    "id" : "a26e6390-9aff-4d42-80bb-d56ec54a344a",
    "prId" : 10990,
    "prUrl" : "https://github.com/apache/kafka/pull/10990#pullrequestreview-703198233",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cae5b989-973e-497d-ae03-a679af3f8f6c",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "nit: any harm using `MetadataSnapshotter` here and below? ",
        "createdAt" : "2021-07-09T06:38:16Z",
        "updatedAt" : "2021-07-09T06:58:59Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "c9a8dbcb-8086-4575-85b4-a077f07b355d",
        "parentId" : "cae5b989-973e-497d-ae03-a679af3f8f6c",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "It starts a thread, which we would have to stop. Also I'd like to be sure that we didn't try to create a snapshot in this case (so, didn't see the UVE exception)",
        "createdAt" : "2021-07-09T16:05:54Z",
        "updatedAt" : "2021-07-09T16:05:54Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0fd70c457f6e64bb2e2988283144bf66ae855b0",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +36,40 @@  def testCreateAndClose(): Unit = {\n    val listener = new BrokerMetadataListener(0, Time.SYSTEM, None, 1000000L,\n      (_, _, _, _) => throw new UnsupportedOperationException())\n    listener.close()\n  }"
  },
  {
    "id" : "c756d9d6-5c3e-4c1a-848e-4e3eda2883c1",
    "prId" : 10990,
    "prUrl" : "https://github.com/apache/kafka/pull/10990#pullrequestreview-703199096",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bea52ab3-372d-4389-9910-562015bc16c7",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Not sure it matters, but it is a little strange that we use the same end offset for all of these records.",
        "createdAt" : "2021-07-09T06:41:24Z",
        "updatedAt" : "2021-07-09T06:58:59Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "38d17bfe-0d8e-49cc-b5b4-47257a75c7d2",
        "parentId" : "bea52ab3-372d-4389-9910-562015bc16c7",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "It makes it easier since otherwise I'd have to figure out exactly which record batch triggered the snapshot... that would make the test brittle as well since record sizes will change as fields are added, etc.",
        "createdAt" : "2021-07-09T16:06:59Z",
        "updatedAt" : "2021-07-09T16:07:10Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0fd70c457f6e64bb2e2988283144bf66ae855b0",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +129,133 @@                                  endOffset: Long): Unit = {\n    (0 to 10000).foreach { _ =>\n      listener.handleCommit(RecordTestUtils.mockBatchReader(endOffset,\n        util.Arrays.asList(new ApiMessageAndVersion(new PartitionChangeRecord().\n          setPartitionId(0)."
  },
  {
    "id" : "e878b2c9-3481-4948-9959-3507e6706e94",
    "prId" : 10990,
    "prUrl" : "https://github.com/apache/kafka/pull/10990#pullrequestreview-703202115",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6bf7526d-fdf9-4944-a788-3cb5af4fbb3a",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I'm probably missing something, but it's not clear to me why publishing makes this test case interesting.",
        "createdAt" : "2021-07-09T06:52:39Z",
        "updatedAt" : "2021-07-09T06:58:59Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "f7eeeae1-8f1a-4897-bff8-098e1ee03053",
        "parentId" : "6bf7526d-fdf9-4944-a788-3cb5af4fbb3a",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Publishing does involve a slightly different code path (although not that different).\r\n\r\nFor one thing, once we're publishing, the delta will be empty when `_delta.apply()` is called (which is fine, it just means we get the image the delta is based on, unmodified).\r\n\r\nAnyway, it's an easy test to do, and quick as well, so I thought it was worth it here.",
        "createdAt" : "2021-07-09T16:10:45Z",
        "updatedAt" : "2021-07-09T16:10:45Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0fd70c457f6e64bb2e2988283144bf66ae855b0",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +179,183 @@\n      // Test creating a new snapshot after publishing it.\n      val publisher = new MockMetadataPublisher()\n      listener.startPublishing(publisher).get()\n      generateManyRecords(listener, 2000L);"
  }
]