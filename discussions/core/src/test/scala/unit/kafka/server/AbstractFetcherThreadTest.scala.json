[
  {
    "id" : "6f562cf4-c732-4bfc-be07-2a3dcf097fbd",
    "prId" : 5661,
    "prUrl" : "https://github.com/apache/kafka/pull/5661#pullrequestreview-159982255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88a80290-fcc3-4f1c-af00-91aa62416ee2",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Should we also assert that the offset is back to 3 now?",
        "createdAt" : "2018-09-28T23:27:43Z",
        "updatedAt" : "2018-10-05T16:40:27Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9bc468a7415831841a1203315789e683066dad4",
    "line" : 254,
    "diffHunk" : "@@ -1,1 +309,313 @@    // We only fetch one record at a time with mock fetcher\n    assertEquals(1, replicaState.logEndOffset)\n    assertEquals(1, truncations)\n\n    // Add partitions again with the same epoch"
  },
  {
    "id" : "1fe95bfb-57f0-4085-95ae-6f8f8565c3c8",
    "prId" : 5661,
    "prUrl" : "https://github.com/apache/kafka/pull/5661#pullrequestreview-159982255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec1a9bd5-715b-400e-9bc6-4d445fcbb913",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "leaderEpoch of 0 doesn't seem to be consistent with the leader epoch in the log.",
        "createdAt" : "2018-09-28T23:43:08Z",
        "updatedAt" : "2018-10-05T16:40:27Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9bc468a7415831841a1203315789e683066dad4",
    "line" : 384,
    "diffHunk" : "@@ -1,1 +449,453 @@      mkBatch(baseOffset = 2, leaderEpoch = 4, new SimpleRecord(\"c\".getBytes)))\n\n    val leaderState = MockFetcherThread.PartitionState(leaderLog, leaderEpoch = 0, highWatermark = 2L)\n    fetcher.setLeaderState(partition, leaderState)\n"
  },
  {
    "id" : "c77f3b2e-d97f-4d7b-af28-4bef0720c5dc",
    "prId" : 6232,
    "prUrl" : "https://github.com/apache/kafka/pull/6232#pullrequestreview-201284402",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0937392-02b2-49cd-b20f-f71ef54a51fa",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Does this assert add value? It seems only the test can set replicaState.",
        "createdAt" : "2019-02-07T00:14:52Z",
        "updatedAt" : "2019-02-08T04:13:43Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "f32690bd-cec0-4d23-b4ab-f68608ef35c4",
        "parentId" : "d0937392-02b2-49cd-b20f-f71ef54a51fa",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I added it to make sure the truncation actually took place, but perhaps it is redundant with the presence of `truncations`. Perhaps I will just get rid of `truncations`.",
        "createdAt" : "2019-02-07T19:37:58Z",
        "updatedAt" : "2019-02-08T04:13:43Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab429a3c1ea54d660cfae70d6c14c21ad8bf4c1e",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +309,313 @@    fetcher.doWork()\n\n    assertEquals(highWatermark, replicaState.logEndOffset)\n    assertEquals(highWatermark, fetcher.fetchState(partition).get.fetchOffset)\n    assertTrue(fetcher.fetchState(partition).get.isReadyForFetch)"
  },
  {
    "id" : "3ed53265-0291-491a-8e87-de46d2f625ea",
    "prId" : 6333,
    "prUrl" : "https://github.com/apache/kafka/pull/6333#pullrequestreview-208811506",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30037cbc-8643-4c4b-9b33-7f9ac7f599e7",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Thanks for the test case. Maybe we can add a similar test case for the `truncateToEpochEndOffsets` path? I think `testLeaderEpochChangeDuringFetchEpochsFromLeader` has most of what we want, but we don't need to put the partition back after removing it.",
        "createdAt" : "2019-02-27T22:54:41Z",
        "updatedAt" : "2019-02-28T16:18:47Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b395b68b85ba67200f71c645b5002a4a04fb1c4",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +350,354 @@\n  @Test\n  def testTruncateToHighWatermarkDuringRemovePartitions(): Unit = {\n    val highWatermark = 2L\n    val partition = new TopicPartition(\"topic\", 0)"
  },
  {
    "id" : "470ac38d-1560-4667-8a07-7068e92b2035",
    "prId" : 7443,
    "prUrl" : "https://github.com/apache/kafka/pull/7443#pullrequestreview-302213956",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c582f86-9b03-450d-9dbf-a543e41e941c",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "unused import",
        "createdAt" : "2019-10-15T20:52:32Z",
        "updatedAt" : "2019-10-15T22:47:30Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "61501aa6-a791-4d1f-8968-88dfd236285b",
        "parentId" : "4c582f86-9b03-450d-9dbf-a543e41e941c",
        "authorId" : "6c4430fc-3795-49d6-9c36-cf6aa694824e",
        "body" : "I believe it's used here https://github.com/apache/kafka/pull/7443/files/4a306ad7967e20712ec2c0ea085a91b5f471b9a3#diff-f84579dc9ecc952780289986cddecc46R905. It's not showing up as a checkstyle error for me.",
        "createdAt" : "2019-10-15T21:39:00Z",
        "updatedAt" : "2019-10-15T22:47:30Z",
        "lastEditedBy" : "6c4430fc-3795-49d6-9c36-cf6aa694824e",
        "tags" : [
        ]
      }
    ],
    "commit" : "1aa07f40ac1c69349f51604ba85e44344e1644d2",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +26,30 @@import kafka.log.LogAppendInfo\nimport kafka.message.NoCompressionCodec\nimport kafka.server.AbstractFetcherThread.ReplicaFetch\nimport kafka.server.AbstractFetcherThread.ResultWithPartitions\nimport kafka.utils.TestUtils"
  },
  {
    "id" : "bcc14323-1f09-41be-b307-c64949eae7ae",
    "prId" : 11097,
    "prUrl" : "https://github.com/apache/kafka/pull/11097#pullrequestreview-713053562",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d7cb4bd-f11b-471c-84ff-b279f6b04242",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "The reliance on real time is a little annoying. Have you run this a few times to make sure it is not flaky?",
        "createdAt" : "2021-07-22T17:06:43Z",
        "updatedAt" : "2021-07-22T17:06:48Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "4c0fbf3b-7e0c-4df0-96c4-38f6f150d8ef",
        "parentId" : "0d7cb4bd-f11b-471c-84ff-b279f6b04242",
        "authorId" : "a31dcef8-b459-4b48-bb49-44e910fa9f34",
        "body" : "As mentioned above, the typical time to run the first doWork was about 30ms on my machine. I can run a batch of these tests to ensure it is not flaky.",
        "createdAt" : "2021-07-22T17:15:10Z",
        "updatedAt" : "2021-07-22T17:15:10Z",
        "lastEditedBy" : "a31dcef8-b459-4b48-bb49-44e910fa9f34",
        "tags" : [
        ]
      },
      {
        "id" : "2df44566-2ad2-4b9a-baa5-a1fa15c15da3",
        "parentId" : "0d7cb4bd-f11b-471c-84ff-b279f6b04242",
        "authorId" : "a31dcef8-b459-4b48-bb49-44e910fa9f34",
        "body" : "Ah hmm. It does seem to be a little flaky for the second check (fetchBackOffMs < secondWorkDuration).\r\n\r\nIn a sample of 50 tests I ran with backOffMs = 500, there were 8 failures and it seems like all of them had secondWorkDuration = 500. So maybe I can just change to <=\r\n\r\nRerunning with this setup 200 times and with fetchBackOffMs=250, I saw 0 failures.\r\n\r\nOf course, this was all locally. I'm not sure if Jenkins will behave differently.",
        "createdAt" : "2021-07-22T17:29:02Z",
        "updatedAt" : "2021-07-22T17:29:03Z",
        "lastEditedBy" : "a31dcef8-b459-4b48-bb49-44e910fa9f34",
        "tags" : [
        ]
      }
    ],
    "commit" : "fff68ac0f1978e0747093435d7a7810b1ec5815d",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +176,180 @@    val timeBeforeSecond = System.currentTimeMillis()\n    fetcher.doWork()\n    val timeAfterSecond = System.currentTimeMillis()\n    val secondWorkDuration = timeAfterSecond - timeBeforeSecond\n"
  }
]