[
  {
    "id" : "e5fa8de2-2c61-4f9a-b509-f02befcbb073",
    "prId" : 10026,
    "prUrl" : "https://github.com/apache/kafka/pull/10026#pullrequestreview-582665301",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f94a6ba7-26c8-42fa-84ba-9dffc925f52e",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Since this is just a single method interface, can we use a lambda instead of a mock?",
        "createdAt" : "2021-02-03T16:19:53Z",
        "updatedAt" : "2021-02-03T16:32:32Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "f517603a-c6b8-43c3-835b-c6689611c706",
        "parentId" : "f94a6ba7-26c8-42fa-84ba-9dffc925f52e",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "`ControllerNodeProvider` also is used to expose `listenerName` and `securityProtocol`, so the mock might still be simpler.",
        "createdAt" : "2021-02-03T17:48:09Z",
        "updatedAt" : "2021-02-03T17:48:09Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "b4b35a59-65f2-4228-a86d-d71634a7f89b",
        "parentId" : "f94a6ba7-26c8-42fa-84ba-9dffc925f52e",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Gotcha, yea a mock is probably simpler in this case. If we end up doing a lot of ControllerNodeProvider mocking down the road, it might make sense for a full test implementation, but not for this PR",
        "createdAt" : "2021-02-03T18:20:35Z",
        "updatedAt" : "2021-02-03T18:20:35Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      }
    ],
    "commit" : "cde2a00a78b83d7352de0df4803855209384a2a3",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +45,49 @@  private val time = new MockTime()\n  private val client = new MockClient(time)\n  private val controllerNodeProvider = Mockito.mock(classOf[ControllerNodeProvider])\n  private val brokerToController = new MockBrokerToControllerChannelManager(\n    client, time, controllerNodeProvider, controllerApiVersions)"
  },
  {
    "id" : "81cd2854-22f6-4fb7-a158-ff359c99425a",
    "prId" : 10026,
    "prUrl" : "https://github.com/apache/kafka/pull/10026#pullrequestreview-582619935",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cb6915b-995a-4725-af10-d985b1f8ecd6",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Why the second poll here? Is this to trigger the timeout error?",
        "createdAt" : "2021-02-03T16:31:17Z",
        "updatedAt" : "2021-02-03T16:32:32Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "2343bdea-f788-4b2d-ad82-f1d8016e6edf",
        "parentId" : "4cb6915b-995a-4725-af10-d985b1f8ecd6",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Yeah, this is one thing that is kind of annoying with this model. We need one `poll` to receive the disconnect response and then one more to trigger the callback.",
        "createdAt" : "2021-02-03T17:33:42Z",
        "updatedAt" : "2021-02-03T17:33:42Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "cde2a00a78b83d7352de0df4803855209384a2a3",
    "line" : 212,
    "diffHunk" : "@@ -1,1 +148,152 @@    client.respond(testAlterConfigRequest.getErrorResponse(0, Errors.UNKNOWN_SERVER_ERROR.exception), true)\n    brokerToController.poll()\n    brokerToController.poll()\n    assertNotNull(response.get)\n"
  }
]