[
  {
    "id" : "50bc9f31-d816-47b2-a187-11b550d86f90",
    "prId" : 5651,
    "prUrl" : "https://github.com/apache/kafka/pull/5651#pullrequestreview-155361423",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9dd0469d-e38b-4c04-b89e-cd489d482994",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "This tests the path through zookeeper, which is good. Could we also have an integration test for the AdminClient which uses the CreateTopic API?",
        "createdAt" : "2018-09-14T06:05:23Z",
        "updatedAt" : "2018-09-25T01:42:29Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1530ed1931b6f9cb57f053f558bb19537a9a498",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +245,249 @@    // try to create the topic with another invalid config\n    try {\n      val createOpts = new TopicCommandOptions(\n        Array(\"--partitions\", \"1\", \"--replication-factor\", \"1\", \"--topic\", \"test\",\n          \"--config\", \"message.format.version=boom\"))"
  },
  {
    "id" : "1dbe19a0-47e6-4692-ab68-48522981b936",
    "prId" : 8364,
    "prUrl" : "https://github.com/apache/kafka/pull/8364#pullrequestreview-385129478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a723bb6-d852-4c43-ba56-f6b8d80e5bd6",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "This file was actually moved/renamed to core/src/test/scala/unit/kafka/admin/TopicCommandWithZKClientTest.scala",
        "createdAt" : "2020-03-31T21:48:50Z",
        "updatedAt" : "2020-04-24T22:04:22Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4e2760c25867cd26ab27f12c45cd95ce0101243",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +14,18 @@ * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage kafka.admin\n"
  },
  {
    "id" : "01caa817-79e5-4f6e-8acb-ff205380356c",
    "prId" : 8364,
    "prUrl" : "https://github.com/apache/kafka/pull/8364#pullrequestreview-385129923",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d7735d4-650c-4d58-bead-3710713f1991",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "This test fails against `trunk`\r\n```\r\nkafka.admin.TopicCommandTest > testIsNotUnderReplicatedWhenAdding FAILED\r\n    java.lang.AssertionError\r\n        at org.junit.Assert.fail(Assert.java:87)\r\n        at org.junit.Assert.assertTrue(Assert.java:42)\r\n        at org.junit.Assert.assertFalse(Assert.java:65)\r\n        at org.junit.Assert.assertFalse(Assert.java:75)\r\n        at kafka.admin.TopicCommandTest.testIsNotUnderReplicatedWhenAdding(TopicCommandTest.scala:54)\r\n\r\n1 test completed, 1 failed\r\n```",
        "createdAt" : "2020-03-31T21:49:37Z",
        "updatedAt" : "2020-04-24T22:04:22Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4e2760c25867cd26ab27f12c45cd95ce0101243",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +27,31 @@class TopicCommandTest {\n  @Test\n  def testIsNotUnderReplicatedWhenAdding(): Unit = {\n    val replicaIds = List(1, 2)\n    val replicas = replicaIds.map { id =>"
  }
]