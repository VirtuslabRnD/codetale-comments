[
  {
    "id" : "fe77f515-2be7-44d2-8c4e-40691adf9e4a",
    "prId" : 3848,
    "prUrl" : "https://github.com/apache/kafka/pull/3848#pullrequestreview-192181827",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae1176ff-a6a7-409c-ad33-9d6c9a19f45f",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Do we need to bounce server here since we are going to kill the broker later?",
        "createdAt" : "2019-01-13T17:35:31Z",
        "updatedAt" : "2019-01-25T09:57:17Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "33bf0914-190d-47bb-8f45-29ad1782f99d",
        "parentId" : "ae1176ff-a6a7-409c-ad33-9d6c9a19f45f",
        "authorId" : "491bcd91-bc8d-4f54-b5fd-d6c7be5e8693",
        "body" : "Yes, I think so. We need the leader to be other than the preferred one so that a preferred election is possible. With just `createTestTopicAndCluster()` the leader will be the preferred one already, so no election would take place and we wouldn't really be testing what happens if the preferred replica is offline.",
        "createdAt" : "2019-01-14T14:40:04Z",
        "updatedAt" : "2019-01-25T09:57:17Z",
        "lastEditedBy" : "491bcd91-bc8d-4f54-b5fd-d6c7be5e8693",
        "tags" : [
        ]
      }
    ],
    "commit" : "9df18c6b3232f3e8b9bf879b7a8dd762a5968c6c",
    "line" : 250,
    "diffHunk" : "@@ -1,1 +248,252 @@  def testWithOfflinePreferredReplica() {\n    createTestTopicAndCluster(testPartitionAndAssignment)\n    bounceServer(testPartitionPreferredLeader, testPartition)\n    // Check the leader for the partition is not the preferred one\n    val leader = getLeader(testPartition)"
  },
  {
    "id" : "91bf5934-a04d-4517-a6ed-94b116782cb8",
    "prId" : 3848,
    "prUrl" : "https://github.com/apache/kafka/pull/3848#pullrequestreview-191900203",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3d9851f-021c-4591-9a6c-8b6cdd6d8268",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Hmm, this really depends on whether the controller is the bootstrap server. If yes, the client will get a timeout exception. In other cases, the client could get a successful response. The former is not necessarily guaranteed.",
        "createdAt" : "2019-01-13T17:39:55Z",
        "updatedAt" : "2019-01-25T09:57:17Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "9df18c6b3232f3e8b9bf879b7a8dd762a5968c6c",
    "line" : 265,
    "diffHunk" : "@@ -1,1 +263,267 @@    } catch {\n      case e: AdminCommandFailedException =>\n        assertEquals(\"1 preferred replica(s) could not be elected\", e.getMessage)\n        val suppressed = e.getSuppressed()(0)\n        assertTrue(suppressed.isInstanceOf[PreferredLeaderNotAvailableException])"
  },
  {
    "id" : "ae17fe60-cab1-4d6d-b9db-c15c6b445fd4",
    "prId" : 3848,
    "prUrl" : "https://github.com/apache/kafka/pull/3848#pullrequestreview-195201579",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b25c5702-7dd3-41e4-bc3d-7ff4796d4a20",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Hmm, this really depends on whether the controller is the bootstrap server. If yes, the client will get a timeout exception. In other cases, the client could get a successful response. The former is not necessarily guaranteed.",
        "createdAt" : "2019-01-15T01:06:07Z",
        "updatedAt" : "2019-01-25T09:57:17Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "f031df47-dc4c-4b64-811c-13492e8cf577",
        "parentId" : "b25c5702-7dd3-41e4-bc3d-7ff4796d4a20",
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "As mentioned earlier, this only works if the controller is the bootstrap server. Otherwise, by the time that PreferredReplicaLeaderElectionCommand runs, a new controller could have been elected.",
        "createdAt" : "2019-01-23T01:14:18Z",
        "updatedAt" : "2019-01-25T09:57:17Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "9df18c6b3232f3e8b9bf879b7a8dd762a5968c6c",
    "line" : 296,
    "diffHunk" : "@@ -1,1 +294,298 @@    } catch {\n      case e: AdminCommandFailedException =>\n        assertEquals(\"1 preferred replica(s) could not be elected\", e.getMessage)\n        assertTrue(e.getSuppressed()(0).getMessage.contains(\"Timed out waiting for a node assignment\"))\n        // Check we still have the same leader"
  }
]