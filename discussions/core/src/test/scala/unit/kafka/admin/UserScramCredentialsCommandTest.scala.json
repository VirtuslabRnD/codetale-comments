[
  {
    "id" : "fe92934a-859e-40e4-8b7b-18bff959d175",
    "prId" : 9032,
    "prUrl" : "https://github.com/apache/kafka/pull/9032#pullrequestreview-466392635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eacada0e-ac86-4102-8d0f-443c7c039f02",
        "parentId" : null,
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "How does this interact with JUnit running tests concurrently?  cc @ijuma @hachikuji ",
        "createdAt" : "2020-08-11T21:30:51Z",
        "updatedAt" : "2020-09-02T17:54:03Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "975d677b-379c-49bb-921f-3bdc3232ffec",
        "parentId" : "eacada0e-ac86-4102-8d0f-443c7c039f02",
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "Hmm, good point, I think there may be a problem here in general because there is only a single exit procedure that can be set globally, and multiple tests that set/reset it in parallel will collide.  There are 16 Scala test classes in `core` out of 260 that do this -- so 6% of test classes.  So I think this will introduce some flakiness to these 16 tests.  Does this sound correct to you, and should we open a separate ticket for this as opposed to trying to fix it here?",
        "createdAt" : "2020-08-13T01:37:22Z",
        "updatedAt" : "2020-09-02T17:54:03Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      },
      {
        "id" : "7ec78e23-102e-4008-a29c-68b62e032c58",
        "parentId" : "eacada0e-ac86-4102-8d0f-443c7c039f02",
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "Actually, I think this may not be an issue since parallel tests in Gradle run in separate processes rather than separate threads.  From https://docs.gradle.org/current/dsl/org.gradle.api.tasks.testing.Test.html: `\"Test are always run in (one or more) separate JVMs.\"`",
        "createdAt" : "2020-08-13T01:50:46Z",
        "updatedAt" : "2020-09-02T17:54:03Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "04a882b1794f90bbe002f460803cda9a2beebccc",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@    val printStream = new PrintStream(byteArrayOutputStream, true, utf8)\n    var exitStatus: Option[Int] = None\n    Exit.setExitProcedure { (status, _) =>\n      exitStatus = Some(status)\n      throw new RuntimeException"
  },
  {
    "id" : "1dbfa09c-057c-46ca-994d-204a4aa439da",
    "prId" : 9032,
    "prUrl" : "https://github.com/apache/kafka/pull/9032#pullrequestreview-478834160",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "494729d1-13c5-4eb0-99e4-268fa871710a",
        "parentId" : null,
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "is it useful to log the exception here at debug level?",
        "createdAt" : "2020-08-28T21:55:43Z",
        "updatedAt" : "2020-09-02T17:54:03Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "815f12ce-a5f6-4a01-9f8f-5d117c1e8b05",
        "parentId" : "494729d1-13c5-4eb0-99e4-268fa871710a",
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "Logging it at debug level doesn't hurt, so I added it.",
        "createdAt" : "2020-08-31T18:13:47Z",
        "updatedAt" : "2020-09-02T17:54:03Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "04a882b1794f90bbe002f460803cda9a2beebccc",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +48,52 @@      ConfigCommandResult(byteArrayOutputStream.toString(utf8))\n    } catch {\n      case e: Exception => {\n        debug(s\"Exception running ConfigCommand ${commandArgs.mkString(\" \")}\", e)\n        ConfigCommandResult(\"\", exitStatus)"
  }
]