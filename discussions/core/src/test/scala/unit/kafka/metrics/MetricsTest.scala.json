[
  {
    "id" : "83860a8e-a180-4ff8-9f45-bc20c35f45c2",
    "prId" : 6977,
    "prUrl" : "https://github.com/apache/kafka/pull/6977#pullrequestreview-255946068",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fa96ab4-ebf4-4f5e-ad83-912ba24a2835",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This change seems not necessary?",
        "createdAt" : "2019-06-28T19:49:44Z",
        "updatedAt" : "2019-07-17T20:25:44Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c0e5d328df542dd395e85a823552e57b6302baf",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +19,23 @@\nimport java.util.Properties\nimport javax.management.ObjectName\nimport com.yammer.metrics.Metrics\nimport com.yammer.metrics.core.{Meter, MetricPredicate}"
  },
  {
    "id" : "2f11d833-dec1-4481-a81c-88157875fb12",
    "prId" : 7156,
    "prUrl" : "https://github.com/apache/kafka/pull/7156#pullrequestreview-272108596",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a574f27c-00f0-4c7b-a127-f2521383d025",
        "parentId" : null,
        "authorId" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "body" : "Should we also add the `replicasToDeleteCount` here?",
        "createdAt" : "2019-08-07T17:15:08Z",
        "updatedAt" : "2019-08-23T15:48:01Z",
        "lastEditedBy" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b77d8c20e7bd241f93a0843af4b5158315ae240",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +142,146 @@    assertEquals(metrics.keySet.asScala.count(_.getMBeanName == \"kafka.controller:type=KafkaController,name=GlobalTopicCount\"), 1)\n    assertEquals(metrics.keySet.asScala.count(_.getMBeanName == \"kafka.controller:type=KafkaController,name=GlobalPartitionCount\"), 1)\n    assertEquals(metrics.keySet.asScala.count(_.getMBeanName == \"kafka.controller:type=KafkaController,name=TopicsToDeleteCount\"), 1)\n    assertEquals(metrics.keySet.asScala.count(_.getMBeanName == \"kafka.controller:type=KafkaController,name=ReplicasToDeleteCount\"), 1)\n    assertEquals(metrics.keySet.asScala.count(_.getMBeanName == \"kafka.controller:type=KafkaController,name=TopicsIneligibleToDeleteCount\"), 1)"
  },
  {
    "id" : "e15631b6-26aa-49d4-9d60-902c24633042",
    "prId" : 7198,
    "prUrl" : "https://github.com/apache/kafka/pull/7198#pullrequestreview-278488555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35766131-3c70-441b-ba76-ee519e880523",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "I'd replace this assert with one that checks one of the map entries.",
        "createdAt" : "2019-08-17T06:52:27Z",
        "updatedAt" : "2019-08-22T15:00:58Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "7d3d8866-7f51-4163-b5ad-3398407e6ca0",
        "parentId" : "35766131-3c70-441b-ba76-ee519e880523",
        "authorId" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "body" : "What is the reasoning?",
        "createdAt" : "2019-08-22T10:35:55Z",
        "updatedAt" : "2019-08-22T15:00:58Z",
        "lastEditedBy" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "tags" : [
        ]
      },
      {
        "id" : "4aa24bb5-42ed-4ce4-8ab9-9da47ecd73e2",
        "parentId" : "35766131-3c70-441b-ba76-ee519e880523",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "An assert that fails saying that metrics should be non empty but aren't is less useful than an assert that tells you that a particular metric doesn't exist. Generally, strive to avoid `assertTrue` if there is an alternative since tests that fail in this way tend to be the most annoying. The first thing you have to do is change the assert to get more information.",
        "createdAt" : "2019-08-22T13:39:06Z",
        "updatedAt" : "2019-08-22T15:00:58Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "2a89174c-16bf-4ad0-9225-4d8de335a32a",
        "parentId" : "35766131-3c70-441b-ba76-ee519e880523",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Similar for the `size` thing, if you know what the elements should be, it's better to assert that the collections are the same rather than just checking the `size`. These are guidelines and don't always apply, but something to keep in mind.",
        "createdAt" : "2019-08-22T13:40:32Z",
        "updatedAt" : "2019-08-22T15:00:58Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "6f28585a-b9c1-48e3-a0e1-99daac140492",
        "parentId" : "35766131-3c70-441b-ba76-ee519e880523",
        "authorId" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "body" : "Thanks for the suggestion. I agree and I'll keep these guidelines in mind next time. In this particular instance, it seems hard to do the proper assertion as:\r\n1) MeterWrapper encapsulates the yammer `Meter` object, so unless we make the lazyMeter variable public, we can't really tell whether it's initialized or not (calling meter() would initialize it)\r\n2) We can only access the `MetricName` instance from the default registry (topicMetrics() helper) and our internal map hosts the yammer `Meter`, which doesn't expose names. It's hard to reconcile both",
        "createdAt" : "2019-08-22T14:53:56Z",
        "updatedAt" : "2019-08-22T15:00:58Z",
        "lastEditedBy" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "tags" : [
        ]
      },
      {
        "id" : "a652474c-2a32-4ff4-aec3-d40dc1b13ce2",
        "parentId" : "35766131-3c70-441b-ba76-ee519e880523",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Makes sense, thanks for looking into it.",
        "createdAt" : "2019-08-22T15:05:29Z",
        "updatedAt" : "2019-08-22T15:05:29Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5673d197f9d9d72b246c2b1dd70ccb596ca6c000",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +82,86 @@\n    // The broker metrics for all topics should be greedily registered\n    assertTrue(\"General topic metrics don't exist\", topicMetrics(None).nonEmpty)\n    assertEquals(servers.head.brokerTopicStats.allTopicsStats.metricMap.size, topicMetrics(None).size)\n    // topic metrics should be lazily registered"
  }
]