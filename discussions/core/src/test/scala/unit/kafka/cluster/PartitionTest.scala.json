[
  {
    "id" : "d1850acc-bc3b-42ba-a44d-f4f412f4c1e3",
    "prId" : 6346,
    "prUrl" : "https://github.com/apache/kafka/pull/6346#pullrequestreview-209272745",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d5a140d-0156-424b-8dea-af8c4de955b4",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "nit: Move this comment above annotation?",
        "createdAt" : "2019-02-28T19:44:31Z",
        "updatedAt" : "2019-03-01T18:35:12Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d5dee0be7906146ed338ca7c7a0838faf6317e7",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +201,205 @@\n  @Test\n  // Verify that replacement works when the replicas have the same log end offset but different base offsets in the\n  // active segment\n  def testMaybeReplaceCurrentWithFutureReplicaDifferentBaseOffsets(): Unit = {"
  },
  {
    "id" : "80c20368-3b07-482e-a233-89efa4fecba5",
    "prId" : 6705,
    "prUrl" : "https://github.com/apache/kafka/pull/6705#pullrequestreview-235943245",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1cb782d4-d871-40a2-87ba-5eefc71fa83e",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Should we replace import all here?",
        "createdAt" : "2019-05-10T06:37:17Z",
        "updatedAt" : "2019-05-22T21:10:21Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "46365108de264bfa9552bc671e6817e1158cab24",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +28,32 @@import kafka.common.UnexpectedAppendOffsetException\nimport kafka.log.{Defaults => _, _}\nimport kafka.server._\nimport kafka.server.checkpoints.OffsetCheckpoints\nimport kafka.utils._"
  },
  {
    "id" : "82a75434-de59-4f61-93e4-b3f156a6cf51",
    "prId" : 7361,
    "prUrl" : "https://github.com/apache/kafka/pull/7361#pullrequestreview-296816835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "590cfb67-c838-41d5-a02b-90fa48b82665",
        "parentId" : null,
        "authorId" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "body" : "Could we add more tests that exercise the following scenario returns `partition.isUnderReplicated=false`?\r\nreplicas=[1,2,3]\r\naddingReplicas=[4,5,6]\r\nisr=[3,4,5]",
        "createdAt" : "2019-10-03T12:56:19Z",
        "updatedAt" : "2019-10-18T00:16:40Z",
        "lastEditedBy" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "tags" : [
        ]
      }
    ],
    "commit" : "ade9d03bf3fff7f6fe5665fac8c0c7e622489dfc",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +1506,1510 @@    leaderState = leaderState.setIsr(replicas)\n    partition.makeLeader(controllerId, leaderState, 0, offsetCheckpoints)\n    assertFalse(partition.isUnderReplicated)\n  }\n"
  }
]