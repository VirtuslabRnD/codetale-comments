[
  {
    "id" : "a48c9940-8c0d-48b5-93a7-2867e3feb149",
    "prId" : 4506,
    "prUrl" : "https://github.com/apache/kafka/pull/4506#pullrequestreview-111388783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dff6f539-98f2-418d-b2c1-0343dc8c8373",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Would it make sense to modify this test case to use two distinct versions so that we can verify that the metric is updated correctly per-version?",
        "createdAt" : "2018-04-11T20:24:48Z",
        "updatedAt" : "2018-04-12T17:23:17Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "be86b59cc8df467e991ac1ecdd1787453f859fa1",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +689,693 @@  def testRequestMetricsAfterStop(): Unit = {\n    server.stopProcessingRequests()\n    val version = ApiKeys.PRODUCE.latestVersion\n    val version2 = (version - 1).toShort\n    for (_ <- 0 to 1) server.requestChannel.metrics(ApiKeys.PRODUCE.name).requestRate(version).mark()"
  },
  {
    "id" : "0992587c-ea8a-426e-8390-63551b561cda",
    "prId" : 5920,
    "prUrl" : "https://github.com/apache/kafka/pull/5920#pullrequestreview-206098752",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fcc3bb14-e0ad-4b8f-8b12-7b5de333eef4",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Could we add a bit comment on what ProxyServer does? ",
        "createdAt" : "2019-02-21T23:40:45Z",
        "updatedAt" : "2020-01-12T16:09:00Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa849a468dc6e5e693bdeeb9625678db4102e84a",
    "line" : 720,
    "diffHunk" : "@@ -1,1 +1926,1930 @@   * channel's `netReadBuffer` to simulate scenarios with SSL buffered data.\n   */\n  private class ProxyServer(socketServer: SocketServer) {\n    val serverSocket = new ServerSocket(0)\n    val localPort = serverSocket.getLocalPort"
  },
  {
    "id" : "441cdca8-0c75-4f73-8ba8-ab16b626bc82",
    "prId" : 5920,
    "prUrl" : "https://github.com/apache/kafka/pull/5920#pullrequestreview-206098752",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6d3cd46-a3bd-4ed8-99cd-0f5f1f8b3fcf",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "It's kind of hard to understand the logic in this method. Could we add a bit comment on what this method does and also add some additional comments on each of the major steps? ",
        "createdAt" : "2019-02-22T00:07:20Z",
        "updatedAt" : "2020-01-12T16:09:00Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa849a468dc6e5e693bdeeb9625678db4102e84a",
    "line" : 533,
    "diffHunk" : "@@ -1,1 +1348,1352 @@   * @param makeClosing If true, put the channel into closing state in the server Selector.\n   */\n  private def verifyRemoteCloseWithBufferedReceives(numComplete: Int,\n                                                    hasIncomplete: Boolean,\n                                                    responseRequiredIndex: Int = -1,"
  },
  {
    "id" : "1174919c-fa3c-4659-ad26-8e25bd9458ea",
    "prId" : 5921,
    "prUrl" : "https://github.com/apache/kafka/pull/5921#pullrequestreview-181855583",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0900fa0b-767d-4d4f-9a84-12c1cf9d79c9",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Hmm, why do we need to specify port = 5000?",
        "createdAt" : "2018-12-04T01:42:53Z",
        "updatedAt" : "2018-12-21T21:26:18Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "72ce2478-a231-4df8-b1fc-2f326efcad92",
        "parentId" : "0900fa0b-767d-4d4f-9a84-12c1cf9d79c9",
        "authorId" : "68c9b940-6e55-49f3-b14b-008ab7e2e635",
        "body" : "We want to send the request to the control-plane. The control-plane is configured to listen on port 5000.",
        "createdAt" : "2018-12-05T16:39:48Z",
        "updatedAt" : "2018-12-21T21:26:18Z",
        "lastEditedBy" : "68c9b940-6e55-49f3-b14b-008ab7e2e635",
        "tags" : [
        ]
      }
    ],
    "commit" : "c40a575b7d984205ae4a8ac4b0584b9731566090",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +195,199 @@    val config = KafkaConfig.fromProps(testProps)\n    withTestableServer(config, { testableServer =>\n      val socket = connect(testableServer, config.controlPlaneListenerName.get, localAddr = InetAddress.getLocalHost, port = 5000)\n      sendAndReceiveControllerRequest(socket, testableServer)\n    })"
  },
  {
    "id" : "91b87b88-8ccc-457c-83cc-9169c584d1d6",
    "prId" : 5921,
    "prUrl" : "https://github.com/apache/kafka/pull/5921#pullrequestreview-187260497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71166c26-247a-4322-936a-cf19d4ff1d3f",
        "parentId" : null,
        "authorId" : "aa2f3d2f-93f8-421b-a14a-37805d03ea87",
        "body" : "I'm not sure what exactly is being validated in this test. Can you clarify?",
        "createdAt" : "2018-12-21T01:17:24Z",
        "updatedAt" : "2018-12-21T21:26:18Z",
        "lastEditedBy" : "aa2f3d2f-93f8-421b-a14a-37805d03ea87",
        "tags" : [
        ]
      },
      {
        "id" : "6ceeb6a5-157e-45bb-9731-69bbd13b5f13",
        "parentId" : "71166c26-247a-4322-936a-cf19d4ff1d3f",
        "authorId" : "68c9b940-6e55-49f3-b14b-008ab7e2e635",
        "body" : "This test is configuring the controlPlaneListener and making sure that a request that is sent to the control plane is indeed handled by the control plane, in the code.\r\nThe request should go to controlPlaneRequestChannel and not to the dataPlaneRequestChannel, which is what this is doing : \r\n`receiveRequest(server.controlPlaneRequestChannelOpt.get)`",
        "createdAt" : "2018-12-21T03:11:25Z",
        "updatedAt" : "2018-12-21T21:26:18Z",
        "lastEditedBy" : "68c9b940-6e55-49f3-b14b-008ab7e2e635",
        "tags" : [
        ]
      }
    ],
    "commit" : "c40a575b7d984205ae4a8ac4b0584b9731566090",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +187,191 @@\n  @Test\n  def testControlPlaneRequest(): Unit = {\n    val testProps = new Properties\n    testProps.putAll(props)"
  }
]