[
  {
    "id" : "eea5eeb2-b489-4ce7-830f-49ab02824cb4",
    "prId" : 5425,
    "prUrl" : "https://github.com/apache/kafka/pull/5425#pullrequestreview-141164415",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f44c3fd6-f72d-4af8-ac56-38e9c8950409",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Do you know why we were setting this to 0 previously?",
        "createdAt" : "2018-07-27T14:06:08Z",
        "updatedAt" : "2018-08-01T00:34:42Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "7fab1601-6827-49dc-9b50-4829e335f479",
        "parentId" : "f44c3fd6-f72d-4af8-ac56-38e9c8950409",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "There was no obvious reason. As far as I can tell, we are just using this function to populate some data in order to check consumer operations.",
        "createdAt" : "2018-07-27T15:37:59Z",
        "updatedAt" : "2018-08-01T00:34:42Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "eae84c1396d2828a0a2a4aa9fb571d5f7d39a652",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +620,624 @@    producerProps.setProperty(ProducerConfig.LINGER_MS_CONFIG, Int.MaxValue.toString)\n    val producer = TestUtils.createProducer(brokerList, securityProtocol = securityProtocol, trustStoreFile = trustStoreFile,\n        saslProperties = clientSaslProperties, lingerMs = Int.MaxValue, props = Some(producerProps))\n    (0 until numRecords).foreach { i =>\n      producer.send(new ProducerRecord(tp.topic, tp.partition, i.toLong, s\"key $i\".getBytes, s\"value $i\".getBytes))"
  },
  {
    "id" : "b7b83076-aa41-44f5-bd89-dc7946962ef3",
    "prId" : 5859,
    "prUrl" : "https://github.com/apache/kafka/pull/5859#pullrequestreview-170487135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fb938a6-f505-4c86-b865-632b83b7522c",
        "parentId" : null,
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Can we compare these as an integer type rather than floating point?  It is a number of records, right?",
        "createdAt" : "2018-10-31T03:25:48Z",
        "updatedAt" : "2018-10-31T15:37:54Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "7728ef25-c120-484a-a361-a4b7fa57aa63",
        "parentId" : "6fb938a6-f505-4c86-b865-632b83b7522c",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "The metric value is a double though so you don't want to truncate it in case there's a bug.",
        "createdAt" : "2018-10-31T03:55:40Z",
        "updatedAt" : "2018-10-31T15:37:54Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "a62d4e25-a368-499e-9721-f535252b94f6",
        "parentId" : "6fb938a6-f505-4c86-b865-632b83b7522c",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Makes sense.  Let's leave it as a double, then",
        "createdAt" : "2018-10-31T21:48:55Z",
        "updatedAt" : "2018-10-31T21:48:55Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "1198014b7845799d9ce9f4aa2933f8e20d85f610",
    "line" : 438,
    "diffHunk" : "@@ -1,1 +1389,1393 @@    val fetchLead0 = consumer.metrics.get(new MetricName(\"records-lead\", \"consumer-fetch-manager-metrics\", \"\", tags1))\n    assertNotNull(fetchLead0)\n    assertEquals(s\"The lead should be ${records.count}\", records.count.toDouble, fetchLead0.metricValue())\n\n    // Remove topic from subscription"
  },
  {
    "id" : "a2c2b1da-ff95-4528-94d7-70b288bfe1ad",
    "prId" : 5877,
    "prUrl" : "https://github.com/apache/kafka/pull/5877#pullrequestreview-173669715",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d28c7e5-5744-4420-a604-a5bb291009e5",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Is it possible to just pass \"groupId=null\" as an override?",
        "createdAt" : "2018-11-10T08:03:12Z",
        "updatedAt" : "2018-11-16T08:55:52Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "654b0570-2815-4980-9f9d-57e095cf4fd4",
        "parentId" : "2d28c7e5-5744-4420-a604-a5bb291009e5",
        "authorId" : "2a5e5a4d-e0e2-4e26-b139-0930dd63f949",
        "body" : "Doesn't seem so, I get a NPE:\r\n```\r\njava.lang.NullPointerException\r\n\tat java.base/java.util.concurrent.ConcurrentHashMap.putVal(ConcurrentHashMap.java:1021)\r\n\tat java.base/java.util.concurrent.ConcurrentHashMap.put(ConcurrentHashMap.java:1016)\r\n\tat java.base/java.util.Properties.put(Properties.java:1309)\r\n\tat kafka.api.PlaintextConsumerTest.testConsumingWithNullGroupId(PlaintextConsumerTest.scala:1838)\r\n        ...\r\n```",
        "createdAt" : "2018-11-10T18:00:42Z",
        "updatedAt" : "2018-11-16T08:55:52Z",
        "lastEditedBy" : "2a5e5a4d-e0e2-4e26-b139-0930dd63f949",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8b1b9ef3edffefc1b11d99055968dca2e09c1fb",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +1839,1843 @@    val consumer1 = createConsumer(\n      configOverrides = consumer1Config,\n      configsToRemove = List(ConsumerConfig.GROUP_ID_CONFIG))\n\n    // consumer 2 uses the default group id and consumes from latest offset"
  },
  {
    "id" : "dec18a77-e0c0-4c1a-9c53-5015362ce8f5",
    "prId" : 5877,
    "prUrl" : "https://github.com/apache/kafka/pull/5877#pullrequestreview-174672576",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43ac5bb6-7224-416a-99a6-7745cbd1c7c8",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Just to complete the integration picture, could we make a call to `committed` and assert the exception?",
        "createdAt" : "2018-11-13T18:38:43Z",
        "updatedAt" : "2018-11-16T08:55:52Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "eae184a9-dbd2-4f34-b5f7-7efcae73a8d4",
        "parentId" : "43ac5bb6-7224-416a-99a6-7745cbd1c7c8",
        "authorId" : "2a5e5a4d-e0e2-4e26-b139-0930dd63f949",
        "body" : "I did that in the next commit.",
        "createdAt" : "2018-11-14T02:28:14Z",
        "updatedAt" : "2018-11-16T08:55:52Z",
        "lastEditedBy" : "2a5e5a4d-e0e2-4e26-b139-0930dd63f949",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8b1b9ef3edffefc1b11d99055968dca2e09c1fb",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +1817,1821 @@\n  @Test\n  def testConsumingWithNullGroupId(): Unit = {\n    val topic = \"test_topic\"\n    val partition = 0;"
  },
  {
    "id" : "0c6dac0c-c4d6-4910-92b6-a18f9aa42910",
    "prId" : 8405,
    "prUrl" : "https://github.com/apache/kafka/pull/8405#pullrequestreview-388773063",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ee4c711-5aa8-46f5-98f4-e1b858cc3121",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Can we get rid of this `sleep` since we're blocking below anyway?",
        "createdAt" : "2020-04-07T00:34:14Z",
        "updatedAt" : "2020-04-07T17:54:37Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "971a7d80-47cf-4eaa-bdb6-ccb5dbdca359",
        "parentId" : "5ee4c711-5aa8-46f5-98f4-e1b858cc3121",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Unfortunately we cannot since we need to wait for this amount of time \"without polling\", and then we should poll and see the rebalance being triggered.",
        "createdAt" : "2020-04-07T04:21:10Z",
        "updatedAt" : "2020-04-07T17:54:37Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c44f148e48f1bbed4e5717680b17c2b0b5c53044",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +190,194 @@    // after we extend longer than max.poll a rebalance should be triggered\n    // NOTE we need to have a relatively much larger value than max.poll to let heartbeat expired for sure\n    Thread.sleep(3000)\n\n    awaitRebalance(consumer, listener)"
  }
]