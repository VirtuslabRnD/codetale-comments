[
  {
    "id" : "29e85dfa-2eef-4b6f-b3f0-89afe0298da1",
    "prId" : 5184,
    "prUrl" : "https://github.com/apache/kafka/pull/5184#pullrequestreview-127709762",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88a83e33-47ac-4296-abf3-4675906687a0",
        "parentId" : null,
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Should we really be using star imports?",
        "createdAt" : "2018-06-11T15:36:31Z",
        "updatedAt" : "2018-06-11T15:36:31Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "f7f8120a-b356-4019-b2a2-0a1e8f6d6901",
        "parentId" : "88a83e33-47ac-4296-abf3-4675906687a0",
        "authorId" : "e431deb4-a19e-4e78-a775-12af049c9089",
        "body" : "As above.",
        "createdAt" : "2018-06-11T19:33:20Z",
        "updatedAt" : "2018-06-11T19:33:20Z",
        "lastEditedBy" : "e431deb4-a19e-4e78-a775-12af049c9089",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed4659a2f288b37aaaa9b6c9efff78ccdf03ae5f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +41,45 @@import org.apache.kafka.common.requests.CreateAclsRequest.AclCreation\nimport org.apache.kafka.common.requests.CreateTopicsRequest.TopicDetails\nimport org.apache.kafka.common.requests._\nimport org.apache.kafka.common.resource.ResourceNameType.LITERAL\nimport org.apache.kafka.common.resource.{ResourcePattern, ResourcePatternFilter, ResourceType => AdminResourceType}"
  },
  {
    "id" : "b699f263-ebce-4e7a-a224-fc46b2c882f1",
    "prId" : 5269,
    "prUrl" : "https://github.com/apache/kafka/pull/5269#pullrequestreview-131134028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "acc23021-5a55-4df0-98c3-4627df8cc912",
        "parentId" : null,
        "authorId" : "e235ea82-83a9-41e5-8e3a-15b2e1b6f350",
        "body" : "Isn't it tearDown() called after each @Test (at least this is true in java unit tests). I think we just need one adminClient that we close in `tearDown`. ",
        "createdAt" : "2018-06-21T23:04:31Z",
        "updatedAt" : "2018-06-22T09:47:45Z",
        "lastEditedBy" : "e235ea82-83a9-41e5-8e3a-15b2e1b6f350",
        "tags" : [
        ]
      },
      {
        "id" : "eed303ae-77a2-4773-9945-13388884c7bd",
        "parentId" : "acc23021-5a55-4df0-98c3-4627df8cc912",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Not every test needs AdminClient.",
        "createdAt" : "2018-06-21T23:38:54Z",
        "updatedAt" : "2018-06-22T09:47:45Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "fd95838b-fa1b-4a1b-891d-54962bd3da25",
        "parentId" : "acc23021-5a55-4df0-98c3-4627df8cc912",
        "authorId" : "93b1c273-8917-4547-bd53-5101f22161c0",
        "body" : "Hmm, could we do something like the following?\r\n```\r\nclass AuthorizerIntegrationTest {\r\n   var adminClient: AdminClient = null\r\n\r\n   @After\r\n   def tearDown(): Unit = {\r\n      if (adminClient != null)\r\n          adminClient.close()\r\n   }\r\n}\r\n```\r\n\r\nIt's probably a bit ugly either way though..",
        "createdAt" : "2018-06-22T02:11:27Z",
        "updatedAt" : "2018-06-22T09:47:45Z",
        "lastEditedBy" : "93b1c273-8917-4547-bd53-5101f22161c0",
        "tags" : [
        ]
      },
      {
        "id" : "121341a4-f91a-4b03-bf3b-2096d3beaf11",
        "parentId" : "acc23021-5a55-4df0-98c3-4627df8cc912",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "I don't have a strong objection, but there are cases where a `buffer` works better than `var`:\r\n1. See this fix in this PR (https://github.com/apache/kafka/pull/5269/files/e301ec2ed604ac60b2862e609139de28d8c2d3d0#diff-026d61daf82e1bc84ffa3428d9721367). It is easy to shadow the variable when you are writing a new test.\r\n2. It is easy to overwrite the variable if a test creates a second admin client.",
        "createdAt" : "2018-06-22T09:52:26Z",
        "updatedAt" : "2018-06-22T09:52:26Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd6f74be43b486fb5c3e2ce571cc47e5202f7a26",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +108,112 @@  val numRecords = 1\n\n  val adminClients = Buffer[AdminClient]()\n\n  override def propertyOverrides(properties: Properties): Unit = {"
  },
  {
    "id" : "f0b970d2-cff8-41f7-ba0c-44cf8f6d3645",
    "prId" : 5352,
    "prUrl" : "https://github.com/apache/kafka/pull/5352#pullrequestreview-145074198",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aff922e8-d1ef-4c63-adfd-f8fe3a8e4061",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "nit: unneeded newline",
        "createdAt" : "2018-08-10T00:48:10Z",
        "updatedAt" : "2018-08-12T17:11:08Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "6fb99d3dd05e08024682c38479530c101c3ee554",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +1045,1049 @@    otherConsumer.subscribe(Collections.singleton(topic))\n    consumeRecords(otherConsumer)\n\n    val adminClient = createAdminClient()\n"
  }
]