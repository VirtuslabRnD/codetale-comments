[
  {
    "id" : "9dfea993-8034-4ff4-b76f-c361525903a8",
    "prId" : 4464,
    "prUrl" : "https://github.com/apache/kafka/pull/4464#pullrequestreview-92282845",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a572cb6-ecea-4edc-a3d0-bc7f43b7962f",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Should we clear this in a `@Setup`?",
        "createdAt" : "2018-01-29T17:42:09Z",
        "updatedAt" : "2018-01-30T17:59:34Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ec0d321aa79ae11696dc746b434c88b1bad60ff",
    "line" : 230,
    "diffHunk" : "@@ -1,1 +812,816 @@object TestMetricsReporter {\n  val PollingIntervalProp = \"polling.interval\"\n  val testReporters = new ConcurrentLinkedQueue[TestMetricsReporter]()\n\n  def waitForReporters(count: Int): List[TestMetricsReporter] = {"
  },
  {
    "id" : "def98ad2-54af-4671-89ed-87f8c6b92004",
    "prId" : 4488,
    "prUrl" : "https://github.com/apache/kafka/pull/4488#pullrequestreview-93800207",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a84156ff-ef8f-4743-a8ea-e9db7bda655b",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Is it worthwhile having a test case for changing the inter-broker-listener?",
        "createdAt" : "2018-02-02T22:42:14Z",
        "updatedAt" : "2018-02-04T02:11:57Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "f6144f1e-5e9e-4a56-a809-6b5a44448af2",
        "parentId" : "a84156ff-ef8f-4743-a8ea-e9db7bda655b",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "Sorry for the confusion about inter-broker listeners. Added a test to verify that inter-broker listener cannot be updated. ",
        "createdAt" : "2018-02-03T01:22:06Z",
        "updatedAt" : "2018-02-04T02:11:57Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0488d78e0ea02c3ddde1a31f6c1e0613a443e3d",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +523,527 @@\n  @Test\n  def testAdvertisedListenerUpdate(): Unit = {\n    val adminClient = adminClients.head\n    val externalAdminClient = createAdminClient(SecurityProtocol.SASL_SSL, SecureExternal)"
  },
  {
    "id" : "0f945108-8d0b-451d-a421-84aa4ea4afdf",
    "prId" : 4526,
    "prUrl" : "https://github.com/apache/kafka/pull/4526#pullrequestreview-94070527",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdff2be7-c77c-460a-875e-cd0d20d22a80",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Do we want to rename the parameter in `verifyThreadPoolResize` as well?",
        "createdAt" : "2018-02-05T17:18:23Z",
        "updatedAt" : "2018-02-05T20:42:17Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb5325e54ace98a983ce5f6245206cdd8d94acc7",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +1057,1061 @@\n  private def stopAndVerifyProduceConsume(producerThread: ProducerThread, consumerThread: ConsumerThread,\n                                          mayReceiveDuplicates: Boolean = false): Unit = {\n    TestUtils.waitUntilTrue(() => producerThread.sent >= 10, \"Messages not sent\")\n    producerThread.shutdown()"
  },
  {
    "id" : "0933d246-e7cd-439f-9957-245e45bbd7b5",
    "prId" : 4603,
    "prUrl" : "https://github.com/apache/kafka/pull/4603#pullrequestreview-98159558",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6dc4fd73-47fe-4397-a11a-423adf247e2a",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Does this test case actually depend on expiring the controller's session? I thought the registration logic is common on all brokers.",
        "createdAt" : "2018-02-21T07:09:50Z",
        "updatedAt" : "2018-02-21T11:24:25Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "9e211390-36eb-414c-8662-03232e9a99e6",
        "parentId" : "6dc4fd73-47fe-4397-a11a-423adf247e2a",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "The test doesn't depend on expiring the controller's session, it could be any broker's ZK session. I chose the controller because I thought it was worth checking that the controller epoch had changed as a result of the expiry (not strictly required for the test though).",
        "createdAt" : "2018-02-21T11:31:04Z",
        "updatedAt" : "2018-02-21T11:31:04Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      }
    ],
    "commit" : "28285548473d133891cea199a37e94cd843e1e30",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +612,616 @@    // Trigger session expiry and ensure that controller registers new advertised listener after expiry\n    val controllerEpoch = zkClient.getControllerEpoch\n    val controllerServer = servers(zkClient.getControllerId.getOrElse(throw new IllegalStateException(\"No controller\")))\n    val controllerZkClient = controllerServer.zkClient\n    val sessionExpiringClient = createZooKeeperClientToTriggerSessionExpiry(controllerZkClient.currentZooKeeper)"
  }
]