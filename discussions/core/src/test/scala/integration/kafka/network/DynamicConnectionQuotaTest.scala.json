[
  {
    "id" : "dc9e9869-406b-4db4-a5a1-3cc97a026887",
    "prId" : 9386,
    "prUrl" : "https://github.com/apache/kafka/pull/9386#pullrequestreview-515599044",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8c3ae69-1c8b-4a57-988b-1d77778b6032",
        "parentId" : null,
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "nit: Could we use directly the `Admin` client here? We don't use the ZK admin client in the suite at all so it would be better if we don't use it. I am not sure if this depends on the pending implementation that you mentioned.",
        "createdAt" : "2020-10-12T14:00:51Z",
        "updatedAt" : "2020-11-19T01:19:49Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      },
      {
        "id" : "11bd8bfe-bd57-493a-9447-329d2e9984c3",
        "parentId" : "b8c3ae69-1c8b-4a57-988b-1d77778b6032",
        "authorId" : "e400c702-fb4f-4635-8164-bc79063a89a7",
        "body" : "yeah, that depends on pending implementation. I planned on using `adminZkClient` in the interim and then replacing it with `Admin` in the PR adding `KafkaApis` support.",
        "createdAt" : "2020-10-13T04:50:34Z",
        "updatedAt" : "2020-11-19T01:19:49Z",
        "lastEditedBy" : "e400c702-fb4f-4635-8164-bc79063a89a7",
        "tags" : [
        ]
      },
      {
        "id" : "b5e7fbf1-04f2-44c3-a0f7-2d2eac745836",
        "parentId" : "b8c3ae69-1c8b-4a57-988b-1d77778b6032",
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "Ack, thanks.",
        "createdAt" : "2020-10-23T13:21:49Z",
        "updatedAt" : "2020-11-19T01:19:49Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      }
    ],
    "commit" : "156149090a3ff4bd6394dbc8432d2747e518d1d8",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +258,262 @@\n  private def updateIpConnectionRate(ip: Option[String], updatedRate: Int): Unit = {\n    adminZkClient.changeIpConfig(ip.getOrElse(ConfigEntityName.Default),\n      CoreUtils.propsWith(DynamicConfig.Ip.IpConnectionRateOverrideProp, updatedRate.toString))\n    // use a random throwaway address if ip isn't specified to get the default value"
  },
  {
    "id" : "4b224384-771c-46f4-9f7d-1097ccfa2dee",
    "prId" : 9386,
    "prUrl" : "https://github.com/apache/kafka/pull/9386#pullrequestreview-522083367",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "761c71f8-b010-4727-a25c-d0487be0e035",
        "parentId" : null,
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "What is `255.255.3.4`?",
        "createdAt" : "2020-10-23T13:21:36Z",
        "updatedAt" : "2020-11-19T01:19:49Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      },
      {
        "id" : "a1f60f3c-de45-4aad-9895-8cffcd20e320",
        "parentId" : "761c71f8-b010-4727-a25c-d0487be0e035",
        "authorId" : "e400c702-fb4f-4635-8164-bc79063a89a7",
        "body" : "This is admittedly a little weird.\r\nIf `None` is given as the IP, we want to update the default connection rate. \r\nTo verify that the default connection rate was updated, we need to call `connectionRateForIp` with some arbitrary IP address that hasn't been given a specific override. In this case, I used an arbitrary IP, `255.255.3.4` as mentioned in the comment.",
        "createdAt" : "2020-11-02T22:42:33Z",
        "updatedAt" : "2020-11-19T01:19:49Z",
        "lastEditedBy" : "e400c702-fb4f-4635-8164-bc79063a89a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "156149090a3ff4bd6394dbc8432d2747e518d1d8",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +262,266 @@    // use a random throwaway address if ip isn't specified to get the default value\n    TestUtils.waitUntilTrue(() => servers.head.socketServer.connectionQuotas.\n      connectionRateForIp(InetAddress.getByName(ip.getOrElse(\"255.255.3.4\"))) == updatedRate,\n      s\"Timed out waiting for connection rate update to propagate\"\n    )"
  },
  {
    "id" : "676a5977-5719-4159-8793-c0188939d3cc",
    "prId" : 9386,
    "prUrl" : "https://github.com/apache/kafka/pull/9386#pullrequestreview-515599044",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c249b422-d2ec-4441-94c8-69bee8efb5bc",
        "parentId" : null,
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "It would be great if we could add few more tests to check the dynamic quotas. For instance, we could check the in-memory quota as well as the quota in the metrics for a given IP when there is nothing, when there is a default set, when there is a quota for the IP.\r\n\r\nWe could also add a test to verify that updating the default quota does not change the per-ip quota if it is already set.",
        "createdAt" : "2020-10-23T13:27:23Z",
        "updatedAt" : "2020-11-19T01:19:49Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      }
    ],
    "commit" : "156149090a3ff4bd6394dbc8432d2747e518d1d8",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +232,236 @@  }\n\n  @Test\n  def testDynamicIpConnectionRateQuota(): Unit = {\n    val connRateLimit = 10"
  }
]