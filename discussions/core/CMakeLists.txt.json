[
  {
    "id" : "a00bd58f-3b1e-4f02-9077-bb6ed46501e4",
    "prId" : 3404,
    "prUrl" : "https://github.com/root-project/root/pull/3404#pullrequestreview-204682653",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04635ce0-c6fd-489a-b48a-521c37f2573b",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Please use `target_include_directories()` if possible. If needed by `rootcling` below, you can add `DICTIONARY_OPTIONS` or `OPTIONS` with `-I${inc}` for each `${inc}` to `ROOT_STANDARD_LIBRARY_PACKAGE()` and `ROOT_GENERATE_DICTIONARY()`, respectively. The idea now that we have CMake 3.9 is to add all includes to the library, generate the dictionary *after* the library target already exists, and pick up include directories from the library target properties.",
        "createdAt" : "2019-02-15T13:59:59Z",
        "updatedAt" : "2019-03-08T12:05:38Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "8f4e7781-d056-4a05-94d1-bb37e721de5e",
        "parentId" : "04635ce0-c6fd-489a-b48a-521c37f2573b",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "IIUC I cannot do that for now (I thought we had discussed that):\r\n- I can set the include dirs on the lib.\r\n- the dictionary *generation* needs to know these include dirs.\r\n- We currently have no means of informing `ROOT_GENERATE_DICTIONARY` which library target to extract the include dirs for.\r\n\r\nI.e. I understood your comment will be addressed as part of the dictionary / library reworking, which is outside the scope of this PR?",
        "createdAt" : "2019-02-18T09:15:11Z",
        "updatedAt" : "2019-03-08T12:05:38Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed5740c6c0265805eac4a385ef23526b8ad5e5eb",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +58,62 @@#\n# NOTE: We cannot use set_property(TARGET G__Core ...) becase this has to happen before registering the target.\ninclude_directories(\n  ${ZLIB_INCLUDE_DIR}\n  base/inc"
  },
  {
    "id" : "4bff6d83-cc80-4202-baa7-e294eb9e8374",
    "prId" : 3404,
    "prUrl" : "https://github.com/root-project/root/pull/3404#pullrequestreview-205085284",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ed2ff1c-d5d8-4a9f-8d7c-486bff220a1f",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Why not either add `$<TARGET_OBJECTS:BaseTROOT>` to `${objectlibs}` or get rid of the variable and list them all here?",
        "createdAt" : "2019-02-15T14:16:19Z",
        "updatedAt" : "2019-03-08T12:05:38Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "3eb18952-7f58-4b2f-a4d6-5f34fdc172a0",
        "parentId" : "1ed2ff1c-d5d8-4a9f-8d7c-486bff220a1f",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "AFAICS I did not introduce or change `$<TARGET_OBJECTS:BaseTROOT>`? I.e. while your comment might be completely relevant I don't think this PR is the place to address it.",
        "createdAt" : "2019-02-18T09:11:48Z",
        "updatedAt" : "2019-03-08T12:05:38Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "bd9ef1aa-ab27-4c64-a97c-6fd831aa36e9",
        "parentId" : "1ed2ff1c-d5d8-4a9f-8d7c-486bff220a1f",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "This was just a suggestion to put `$<TARGET_OBJECTS:BaseTROOT>` in `${objectlibs}` and remove from here, but it doesn't need to be part of this PR.",
        "createdAt" : "2019-02-19T08:43:33Z",
        "updatedAt" : "2019-03-08T12:05:38Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed5740c6c0265805eac4a385ef23526b8ad5e5eb",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +166,170 @@\n#-------------------------------------------------------------------------------\nROOT_LINKER_LIBRARY(Core G__Core.cxx $<TARGET_OBJECTS:BaseTROOT> ${objectlibs} BUILTINS LZMA)\n\ntarget_link_libraries(Core"
  },
  {
    "id" : "cc114177-b23a-4f7e-aef6-d42cdcce3122",
    "prId" : 5181,
    "prUrl" : "https://github.com/root-project/root/pull/5181#pullrequestreview-397882773",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b22a3a5c-2e02-4ed6-9bc7-66cd0c6b6ad0",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "That's bad - we will have some including `RGitCommit.h` from `include/`, some from `ginclude/`, and much of ROOT will be rebuilt just because `ginclude/RGitCommit.h` is touched, even if its content isn't changed. Why not keep the `.tmp`?",
        "createdAt" : "2020-04-21T16:56:45Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "3c98db13-9369-4f4e-a605-d58a19f5a96d",
        "parentId" : "b22a3a5c-2e02-4ed6-9bc7-66cd0c6b6ad0",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "@Axel-Naumann  I add commit, which reintroduce intermediate RGitCommit.tmp.h file",
        "createdAt" : "2020-04-22T06:37:55Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5da3ae4dc0aff806ce66b7c14d562c58db07307",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +36,40 @@    ${CMAKE_COMMAND} -E copy_if_different\n    ${CMAKE_BINARY_DIR}/RGitCommit.h.tmp\n    ${CMAKE_BINARY_DIR}/ginclude/RGitCommit.h\n  DEPENDS\n    ${CMAKE_BINARY_DIR}/RGitCommit.h.tmp"
  }
]