[
  {
    "id" : "b9218910-26b1-434e-a91c-b3e0d69a934c",
    "prId" : 1199,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/1199#pullrequestreview-491687975",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ec5d757-c8b3-4ef9-9226-6b8d2518d5f8",
        "parentId" : null,
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "As a random note, I kind of prefer putting instances on datatype companions whenever *possible*. So in this case, the instance would be on `Resource`'s companion (similar to how `Effect` has an instance on `IO`'s companion). Not a big deal; doesn't block the merge. Also curious as to others' thoughts.",
        "createdAt" : "2020-09-18T16:05:41Z",
        "updatedAt" : "2020-09-18T18:16:40Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      },
      {
        "id" : "8ef35e9e-94e3-434c-bf78-09e6a3fac5eb",
        "parentId" : "4ec5d757-c8b3-4ef9-9226-6b8d2518d5f8",
        "authorId" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "body" : "That was the case. However, `LiftIO` doesn't exist in `kernel` and therefore it doesn't compile.",
        "createdAt" : "2020-09-18T16:07:55Z",
        "updatedAt" : "2020-09-18T18:16:40Z",
        "lastEditedBy" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "tags" : [
        ]
      },
      {
        "id" : "c35a40c2-98b0-4757-9934-85faa57e6a02",
        "parentId" : "4ec5d757-c8b3-4ef9-9226-6b8d2518d5f8",
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Oh! Derp. That's obvious in retrospect. Okay cool. :-)",
        "createdAt" : "2020-09-18T16:12:59Z",
        "updatedAt" : "2020-09-18T18:16:40Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      },
      {
        "id" : "fa58d3a0-8457-4406-8939-3eeb17f3c1b8",
        "parentId" : "4ec5d757-c8b3-4ef9-9226-6b8d2518d5f8",
        "authorId" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "body" : "Rebase then?",
        "createdAt" : "2020-09-18T16:21:07Z",
        "updatedAt" : "2020-09-18T18:16:40Z",
        "lastEditedBy" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "tags" : [
        ]
      },
      {
        "id" : "f2f416a7-e463-4099-9d81-f1a7d67f2ab0",
        "parentId" : "4ec5d757-c8b3-4ef9-9226-6b8d2518d5f8",
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Merge please :-) Rebasing public history is usually not ideal.",
        "createdAt" : "2020-09-18T16:38:38Z",
        "updatedAt" : "2020-09-18T18:16:40Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      },
      {
        "id" : "60234ad8-0ea7-405c-9d81-ce9079b2688c",
        "parentId" : "4ec5d757-c8b3-4ef9-9226-6b8d2518d5f8",
        "authorId" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "body" : "Done.",
        "createdAt" : "2020-09-18T18:21:25Z",
        "updatedAt" : "2020-09-18T18:21:26Z",
        "lastEditedBy" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "1783092ff60f99ea457c646f3343c44353cc5cf5",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +154,158 @@    def liftIO[A](ioa: IO[A]): Resource[F, A] =\n      Resource.liftF(F0.liftIO(ioa))\n  }\n}"
  },
  {
    "id" : "a33ef2a6-2718-4380-bd51-71892be15f7d",
    "prId" : 979,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/979#pullrequestreview-454323390",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bda5e742-f496-435b-845f-a4dab1500b2b",
        "parentId" : null,
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Just calling this out for discussion quickly: is it better to put this instance here, or on the `IO` companion?",
        "createdAt" : "2020-07-23T16:39:19Z",
        "updatedAt" : "2020-07-23T16:48:16Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      },
      {
        "id" : "2522e95e-b83e-45e8-a389-103e195d08e9",
        "parentId" : "bda5e742-f496-435b-845f-a4dab1500b2b",
        "authorId" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "body" : "I feel like I'm being quizzed. ðŸ˜† If it remains in `LiftIO`, probably `LiftIO` companion object needs to be in scope. But when we work with `IO`, the companion object for `IO` is always in scope, so maybe it's better if it's on there.",
        "createdAt" : "2020-07-23T16:46:39Z",
        "updatedAt" : "2020-07-23T16:48:16Z",
        "lastEditedBy" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "tags" : [
        ]
      },
      {
        "id" : "bb7d715c-45a2-427e-bf63-653324a2acbf",
        "parentId" : "bda5e742-f496-435b-845f-a4dab1500b2b",
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Well, in theory scalac should just look in both places. Specifically, if it's trying to resolve `LiftIO[IO]`, it will look on both `LiftIO`'s companion and on `IO`'s companion, because they're both a part of the type. Similarly for `LiftIO[OptionT[IO, *]]`. I *think* it looks on `LiftIO` first, so it might be marginally faster to compile this way, but I don't know if there are other disadvantages.\r\n\r\nI was mostly asking in hope that someone else would chime in with a \"you should do it this way!\" since I really don't know the answer. :-) Let's go with what you implemented for now and we can change things if we don't like it!",
        "createdAt" : "2020-07-23T16:50:23Z",
        "updatedAt" : "2020-07-23T16:50:23Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      },
      {
        "id" : "92d3f259-0505-4f5d-83a8-4810b6be5c26",
        "parentId" : "bda5e742-f496-435b-845f-a4dab1500b2b",
        "authorId" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "body" : "FWIW, all of the `cats.data` instances were already on `LiftIO` in CE2.",
        "createdAt" : "2020-07-23T16:55:30Z",
        "updatedAt" : "2020-07-23T16:55:30Z",
        "lastEditedBy" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "59d94ff5b773cb99daacbb0bd1e7fb0188b2cd53",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +135,139 @@   */\n  implicit val ioLiftIO: LiftIO[IO] =\n    new LiftIO[IO] { override def liftIO[A](ioa: IO[A]): IO[A] = ioa }\n}"
  }
]