[
  {
    "id" : "a14f3ec2-6ea9-4bdd-a94c-2d619225e528",
    "prId" : 556,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/556#pullrequestreview-247920148",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d553e3a2-1ecf-4435-8022-ef679b376ba4",
        "parentId" : null,
        "authorId" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "body" : "overloading is still something I'd try to avoid as long as possible... If this was `blockOn`, it'd probably make Blocker eligible for a value class, no? Plus more explicit than just an overload",
        "createdAt" : "2019-06-11T01:53:34Z",
        "updatedAt" : "2019-06-11T01:53:34Z",
        "lastEditedBy" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c073ef3bf940a2320c1c5500e59b64dc3bbac4d",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +61,65 @@   * @param fa  Computation to evaluate using `blocker`\n   */\n  def evalOn[A](blocker: Blocker)(fa: F[A]): F[A] =\n    evalOn(blocker.blockingContext)(fa)\n"
  }
]