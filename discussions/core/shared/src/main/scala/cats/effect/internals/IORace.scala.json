[
  {
    "id" : "5ff4e6be-9b9d-4144-81a2-d19addecac0b",
    "prId" : 232,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/232#pullrequestreview-122177321",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "477ff3ec-1365-40d0-b047-56080521df87",
        "parentId" : null,
        "authorId" : "b93e2985-c394-41e6-a036-b46320cfbf21",
        "body" : "Why isnâ€™t shifting just the left side enough?",
        "createdAt" : "2018-05-20T15:51:32Z",
        "updatedAt" : "2018-05-22T13:39:01Z",
        "lastEditedBy" : "b93e2985-c394-41e6-a036-b46320cfbf21",
        "tags" : [
        ]
      },
      {
        "id" : "8da79fa9-efa1-410e-abda-440eff8581c7",
        "parentId" : "477ff3ec-1365-40d0-b047-56080521df87",
        "authorId" : "14fa9071-c3b2-4b1b-a7aa-9d7398bdbade",
        "body" : "It might be enough, but I'm not sure (my understanding of concurrency and internals is still a little bit off ðŸ˜… ), and I also didn't want to introduce a behavior (right-hand side start immediately on the current thread) which would break the symmetry between `IO.race(fa, fb)` and `IO.race(fb, fa).map(_.swap)`.\r\n\r\nAnd if optimizing it away would not be a breaking change, we can always do it later.",
        "createdAt" : "2018-05-20T17:04:58Z",
        "updatedAt" : "2018-05-22T13:39:01Z",
        "lastEditedBy" : "14fa9071-c3b2-4b1b-a7aa-9d7398bdbade",
        "tags" : [
        ]
      },
      {
        "id" : "431e2bc0-f500-4a52-98f4-7ad1b57b2765",
        "parentId" : "477ff3ec-1365-40d0-b047-56080521df87",
        "authorId" : "efc45bfc-463c-4c9e-946d-ad472fabc9f0",
        "body" : "I agree. Also if you fork one thread, then execute the other immediately, it's not really a fair race ðŸ™‚\r\n\r\nI think that we'll also be able to do an optimization like I introduced in Monix, where we can detect tasks that are forked for the obvious cases. For example we can detect `shift *> delay(f)` and prevent an extra `shift`.",
        "createdAt" : "2018-05-22T13:49:49Z",
        "updatedAt" : "2018-05-22T13:49:49Z",
        "lastEditedBy" : "efc45bfc-463c-4c9e-946d-ad472fabc9f0",
        "tags" : [
        ]
      },
      {
        "id" : "3fbbbb5a-da12-43e1-a7d0-9ed437a8fb83",
        "parentId" : "477ff3ec-1365-40d0-b047-56080521df87",
        "authorId" : "efc45bfc-463c-4c9e-946d-ad472fabc9f0",
        "body" : "... such optimizations are dirty though, I wouldn't do it in this PR. I'd rather merge the PR ASAP, because @mpilquist needs it in FS2.",
        "createdAt" : "2018-05-22T13:51:30Z",
        "updatedAt" : "2018-05-22T13:51:30Z",
        "lastEditedBy" : "efc45bfc-463c-4c9e-946d-ad472fabc9f0",
        "tags" : [
        ]
      }
    ],
    "commit" : "010d6d7b9aa78233caabf17f7d14a68a4ea251f7",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +75,79 @@\n      // Starts concurrent execution for the right value\n      IORunLoop.startCancelable[B](timer.shift *> rh, connR, {\n        case Right(b) =>\n          onSuccess(active, connL, cb, Right(b))"
  }
]