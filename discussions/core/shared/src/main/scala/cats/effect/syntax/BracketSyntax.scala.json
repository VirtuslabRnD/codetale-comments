[
  {
    "id" : "d3fc4783-e6a5-457a-9425-269f1b508d58",
    "prId" : 540,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/540#pullrequestreview-242017927",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f4ec450-3347-449b-bced-8afb1051fc3d",
        "parentId" : null,
        "authorId" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "body" : "The tests compiled without this, though I doubt we test this syntax much, and I'm inclined to trust the comment.  Removing it would also be a binary breaking change in a module we're staying conservative on for 2.0.",
        "createdAt" : "2019-05-24T14:46:28Z",
        "updatedAt" : "2019-05-26T00:55:37Z",
        "lastEditedBy" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "tags" : [
        ]
      },
      {
        "id" : "1bfcea44-5be4-4cd6-985d-53e766470fbb",
        "parentId" : "8f4ec450-3347-449b-bced-8afb1051fc3d",
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Did they compile on 2.11?\r\n\r\nI've actually been bitten by this spurious constraint a couple times. It's definitely odd. I wouldn't mind removing it for 2.0 if we're sure the inference works out, but I'm not convinced it will.",
        "createdAt" : "2019-05-25T22:28:35Z",
        "updatedAt" : "2019-05-26T00:55:37Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      },
      {
        "id" : "ef57c6b6-396b-4ba9-b2c4-28b33bc36821",
        "parentId" : "8f4ec450-3347-449b-bced-8afb1051fc3d",
        "authorId" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "body" : "It does, and is used in `SyntaxTests`.  But I'm not sure that covers whatever case made someone add this in the first place.",
        "createdAt" : "2019-05-25T22:57:19Z",
        "updatedAt" : "2019-05-26T00:55:37Z",
        "lastEditedBy" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9a2bc3972a8b4a828b480aa0bddd5f82e750e8c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +22,26 @@trait BracketSyntax {\n  implicit def catsEffectSyntaxBracket[F[_], A, E](fa: F[A])(implicit bracket: Bracket[F, E]): BracketOps[F, E, A] = {\n    // Bracket instance here is required to ensure correct inference for E\n    val _ = bracket\n    new BracketOps[F, E, A](fa)"
  },
  {
    "id" : "80084cd9-4c78-4108-882a-f125d8697fe9",
    "prId" : 253,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/253#pullrequestreview-124194199",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7949205-81a3-477a-9ddf-d7ca6f7de7c8",
        "parentId" : null,
        "authorId" : "efc45bfc-463c-4c9e-946d-ad472fabc9f0",
        "body" : "NOTE: We'll also need `guaranteeCase` after #254.\r\n",
        "createdAt" : "2018-05-29T22:23:42Z",
        "updatedAt" : "2018-05-30T18:14:08Z",
        "lastEditedBy" : "efc45bfc-463c-4c9e-946d-ad472fabc9f0",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ff40a73a4526b039b04d5bfa59797e2c94e97f9",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@    F.bracket(self)(use)(release)\n\n  def guarantee(finalizer: F[Unit])(implicit F: Bracket[F, E]): F[A] =\n    F.guarantee(self)(finalizer)\n"
  }
]