[
  {
    "id" : "d0368c47-3872-4af4-a73f-16da4f4a2fcc",
    "prId" : 302,
    "prUrl" : "https://github.com/zio/zio/pull/302#pullrequestreview-166169555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e5d1470-2ce6-44a5-b5c3-3192337185a9",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "Yes, this will help ensure the promise is removed. I'd use `eq` instead of `==`.",
        "createdAt" : "2018-10-16T21:56:22Z",
        "updatedAt" : "2018-10-19T12:29:31Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      },
      {
        "id" : "7df2e429-1e28-4be6-bf80-584c3778a700",
        "parentId" : "2e5d1470-2ce6-44a5-b5c3-3192337185a9",
        "authorId" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "body" : "We'd have to make `Promise` a subtype of `AnyRef`, which sounds reasonable anyway?",
        "createdAt" : "2018-10-17T06:03:21Z",
        "updatedAt" : "2018-10-19T12:29:31Z",
        "lastEditedBy" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "tags" : [
        ]
      },
      {
        "id" : "e2b1e2d5-f028-42d1-aefe-4f642394090d",
        "parentId" : "2e5d1470-2ce6-44a5-b5c3-3192337185a9",
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "Nah, let's just leave it. ",
        "createdAt" : "2018-10-18T15:53:50Z",
        "updatedAt" : "2018-10-19T12:29:31Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d044c6b367fd37f9adf265ee848651184061fd7",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +35,39 @@      case (_, p) =>\n        state.update {\n          case Left(q) => Left(q.filterNot(_._1 == p))\n          case x       => x\n        }.void"
  },
  {
    "id" : "cab66433-1d35-493f-b661-8499038950e1",
    "prId" : 289,
    "prUrl" : "https://github.com/zio/zio/pull/289#pullrequestreview-162901201",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97a127b5-5fab-4177-8fab-6650fac152e3",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "`Ref` and `State` again.",
        "createdAt" : "2018-10-09T13:57:50Z",
        "updatedAt" : "2018-10-20T03:42:43Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      }
    ],
    "commit" : "7487846a5948218c37ad4b31a489cc25acc821f7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +10,14 @@import scala.collection.immutable.{ Queue => IQueue }\n\nfinal class Semaphore private (private val state: Ref[State]) extends Serializable {\n\n  def count: IO[Nothing, Long] = state.get.map(count_)"
  },
  {
    "id" : "2aa509dc-ab24-4ff8-b407-04ae1f026675",
    "prId" : 128,
    "prUrl" : "https://github.com/zio/zio/pull/128#pullrequestreview-147451640",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d3d0753-880a-42af-a1f2-3d063e618a5d",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "`extends AnyVal`?",
        "createdAt" : "2018-08-15T17:02:53Z",
        "updatedAt" : "2018-08-19T08:44:44Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      },
      {
        "id" : "8cbbe84f-8e72-4f90-94f5-06529bbcfddd",
        "parentId" : "8d3d0753-880a-42af-a1f2-3d063e618a5d",
        "authorId" : "14e023c5-8bad-4be2-a6a2-0c605dcebcbe",
        "body" : "ok",
        "createdAt" : "2018-08-18T10:53:11Z",
        "updatedAt" : "2018-08-19T08:44:44Z",
        "lastEditedBy" : "14e023c5-8bad-4be2-a6a2-0c605dcebcbe",
        "tags" : [
        ]
      },
      {
        "id" : "4e3e6c3e-9560-44f1-a7a4-da051c93d96b",
        "parentId" : "8d3d0753-880a-42af-a1f2-3d063e618a5d",
        "authorId" : "14e023c5-8bad-4be2-a6a2-0c605dcebcbe",
        "body" : "can't be done, `AnyVal` forces `state` to be public val and therefore `State` type has to go public as well.",
        "createdAt" : "2018-08-19T08:45:45Z",
        "updatedAt" : "2018-08-19T08:45:45Z",
        "lastEditedBy" : "14e023c5-8bad-4be2-a6a2-0c605dcebcbe",
        "tags" : [
        ]
      }
    ],
    "commit" : "b28e60f2eae6fcf6be576ff5e00b3039f605343f",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +10,14 @@import scala.collection.immutable.{ Queue => IQueue }\n\nfinal class Semaphore private (private val state: Ref[State]) {\n\n  def count: IO[Nothing, Long] = state.get.map(count_)"
  },
  {
    "id" : "7cf97922-f811-44dd-9080-52353dbb74bf",
    "prId" : 128,
    "prUrl" : "https://github.com/zio/zio/pull/128#pullrequestreview-147427357",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "866c2983-2711-428c-be46-d8381d542ee0",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "I think you want `ensuring` here, not `bracket0`. `ensuring` is very fast compared to `bracket0`.",
        "createdAt" : "2018-08-15T17:21:48Z",
        "updatedAt" : "2018-08-19T08:44:44Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      },
      {
        "id" : "34a8f53c-5610-4897-9fe7-8350cef78cdd",
        "parentId" : "866c2983-2711-428c-be46-d8381d542ee0",
        "authorId" : "14e023c5-8bad-4be2-a6a2-0c605dcebcbe",
        "body" : "I don't see how `ensuring` can help here? I need information about whether `use` action failed or was interrupted to drop entry from the queue.",
        "createdAt" : "2018-08-18T10:35:13Z",
        "updatedAt" : "2018-08-19T08:44:44Z",
        "lastEditedBy" : "14e023c5-8bad-4be2-a6a2-0c605dcebcbe",
        "tags" : [
        ]
      }
    ],
    "commit" : "b28e60f2eae6fcf6be576ff5e00b3039f605343f",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +86,90 @@\n  private def awaitGate(entry: (Long, Promise[Nothing, Unit])): IO[Nothing, Unit] =\n    IO.unit.bracket0[Nothing, Unit] { (_, useOutcome) =>\n      useOutcome match {\n        case _: Terminated[Nothing, Unit] => // Terminated outcome means either interruption or uncaught exception"
  }
]