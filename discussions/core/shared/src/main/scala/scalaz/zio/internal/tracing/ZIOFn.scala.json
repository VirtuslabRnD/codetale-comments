[
  {
    "id" : "fc37f96e-90be-4f54-b557-e511a91e87ed",
    "prId" : 849,
    "prUrl" : "https://github.com/zio/zio/pull/849#pullrequestreview-243588440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bce9f596-2ea4-41fa-8363-f7e8fecbbec6",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "My concerns with this approach are inescapable overhead, both on runtime, as well as maintenance burden on `ZIO.scala`. I don't have a great alternative, however.\r\n\r\nI think if we add a new op, we could eliminate the wrapper classes.\r\n\r\nSomething like:\r\n\r\n```scala\r\ndef map[B](f: A => B): ZIO[R, E, B] = \r\n  ZIO.traced { trace =>\r\n    self.flatMap((a: A) => { trace(f); ZIO.succeed(f(a)) })\r\n  }\r\n```\r\n\r\nThe advantages being less heap allocation (because you can use the same `trace` multiple times), less indirection, and less code overall (with no need for arbitrary limitations on arity of wrapper functions).\r\n\r\nWhat do you think?\r\n\r\nAnother alternative is to, possibly, in every op (e.g. `FlatMap`) allow \"extra lambdas\", which, if present, would be used instead of the continuation(s). I'm not sure if that approach scales.",
        "createdAt" : "2019-05-27T23:47:16Z",
        "updatedAt" : "2019-05-30T01:18:27Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      },
      {
        "id" : "82da2ddc-52dd-4fb9-9e9f-155f1d7ddda5",
        "parentId" : "bce9f596-2ea4-41fa-8363-f7e8fecbbec6",
        "authorId" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "body" : "On heap allocations, only the second approach will truly result in less allocations, as the first approach with .traced would have to allocate a new ZIO op. On the first approach, not sure how to replace nested wrappers with it (e.g. in bracket* family). It's definitely worth a try to replace ZIOFn scheme, although I think to postpone it from the current PR as its non-trivial, and a fix for it would not break bincompat.",
        "createdAt" : "2019-05-28T08:36:09Z",
        "updatedAt" : "2019-05-30T01:18:27Z",
        "lastEditedBy" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "tags" : [
        ]
      },
      {
        "id" : "62a90a5b-719c-4d37-85cf-0640ddaee78c",
        "parentId" : "bce9f596-2ea4-41fa-8363-f7e8fecbbec6",
        "authorId" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "body" : "I will definitely try to implement second scheme today, if not succesful - postpone",
        "createdAt" : "2019-05-28T09:01:45Z",
        "updatedAt" : "2019-05-30T01:18:27Z",
        "lastEditedBy" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "tags" : [
        ]
      },
      {
        "id" : "58f81f95-5d7e-454c-a11f-5fa382cde3ce",
        "parentId" : "bce9f596-2ea4-41fa-8363-f7e8fecbbec6",
        "authorId" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "body" : "I've replaced some `ZIOFn` uses with a nullable field in `FlatMap` in [another branch](https://github.com/7mind/scalaz-zio/compare/feature/zio-stacktraces...feature/remove-ziofn) - however, I'm not seeing any performance improvement from less allocations in the benchmarks",
        "createdAt" : "2019-05-30T00:58:55Z",
        "updatedAt" : "2019-05-30T01:18:27Z",
        "lastEditedBy" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "tags" : [
        ]
      },
      {
        "id" : "37802ac5-558d-4653-bdd4-47ce718d8988",
        "parentId" : "bce9f596-2ea4-41fa-8363-f7e8fecbbec6",
        "authorId" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "body" : "As such, punting this for now",
        "createdAt" : "2019-05-30T00:59:13Z",
        "updatedAt" : "2019-05-30T01:18:27Z",
        "lastEditedBy" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "tags" : [
        ]
      },
      {
        "id" : "42ce67f4-6481-4f92-a9c7-9d9a1b6a00a5",
        "parentId" : "bce9f596-2ea4-41fa-8363-f7e8fecbbec6",
        "authorId" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "body" : "Continued here - https://github.com/scalaz/scalaz-zio/issues/916",
        "createdAt" : "2019-05-30T01:23:14Z",
        "updatedAt" : "2019-05-30T01:23:15Z",
        "lastEditedBy" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c5bbbea1c9833689e7f728f96b420cad75711fc",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@ * hot-spot.\n * */\nprivate[zio] abstract class ZIOFn extends Serializable {\n  def underlying: AnyRef\n}"
  }
]