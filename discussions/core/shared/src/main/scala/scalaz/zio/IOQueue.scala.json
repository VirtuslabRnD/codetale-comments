[
  {
    "id" : "4890cc21-fab3-4744-b321-16127c184fb9",
    "prId" : 112,
    "prUrl" : "https://github.com/zio/zio/pull/112#pullrequestreview-137578112",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f2e9e7d-a90b-4280-81d2-32531df58edb",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "We should add a comment here like:\r\n\r\n\"When the capacity of the queue is reached, any additional calls to `offer` will wait until there is more room in the queue.\"",
        "createdAt" : "2018-07-16T15:33:31Z",
        "updatedAt" : "2018-07-16T20:12:43Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      },
      {
        "id" : "d0b7753a-55ec-4f9d-b822-219e70c6bafc",
        "parentId" : "5f2e9e7d-a90b-4280-81d2-32531df58edb",
        "authorId" : "b71cbad8-df67-486e-8857-914d160628ae",
        "body" : "Done :)",
        "createdAt" : "2018-07-16T20:12:52Z",
        "updatedAt" : "2018-07-16T20:12:52Z",
        "lastEditedBy" : "b71cbad8-df67-486e-8857-914d160628ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "521ffdb73f19c8a14a6ac202684f9c20e2c97436",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +136,140 @@\n  /**\n   * Makes a new bounded queue.\n   * When the capacity of the queue is reached, any additional calls to `offer` will be suspended\n   * until there is more room in the queue."
  },
  {
    "id" : "092a4f0e-03f1-42fa-9aee-2319c61ad0a1",
    "prId" : 65,
    "prUrl" : "https://github.com/zio/zio/pull/65#pullrequestreview-135196290",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27d69e1a-2b56-40e2-903a-a0b2799dc959",
        "parentId" : null,
        "authorId" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "body" : "Is this necessary? This seems to be taken care of at line 74",
        "createdAt" : "2018-07-07T07:06:49Z",
        "updatedAt" : "2018-07-07T07:06:49Z",
        "lastEditedBy" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "tags" : [
        ]
      }
    ],
    "commit" : "11668769df6e1c6d9346de49b760bce4e3e71812",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +50,54 @@\n    val release: (Boolean, Promise[E, Unit]) => IO[Void, Unit] = {\n      case (_, p) => removePutter(p)\n    }\n"
  },
  {
    "id" : "eacce945-5393-4edb-8f08-a4d03461f08c",
    "prId" : 65,
    "prUrl" : "https://github.com/zio/zio/pull/65#pullrequestreview-135196599",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d508121-8fcf-4a9d-8600-0e720df288c0",
        "parentId" : null,
        "authorId" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "body" : "Ah this is why `removeTaker` is necessary 👍 ",
        "createdAt" : "2018-07-07T07:21:53Z",
        "updatedAt" : "2018-07-07T07:21:54Z",
        "lastEditedBy" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "tags" : [
        ]
      }
    ],
    "commit" : "11668769df6e1c6d9346de49b760bce4e3e71812",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +93,97 @@    IO.flatten(ref.modifyFold[E, IO[E, Boolean]] {\n      case Deficit(takers) if takers.nonEmpty =>\n        val forked: IO[E, Fiber[E, List[Boolean]]] = IO.forkAll(takers.toList.map(_.interrupt[E](t)))\n        (forked.flatMap(_.join).map(_.forall(identity)), Deficit(Queue.empty[Promise[_, A]]))\n      case s =>"
  }
]