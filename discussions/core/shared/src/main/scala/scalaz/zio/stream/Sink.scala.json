[
  {
    "id" : "322e422f-7bd3-4c2d-8a70-7c5523ff70af",
    "prId" : 604,
    "prUrl" : "https://github.com/zio/zio/pull/604#pullrequestreview-211451833",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b22b2d66-27b7-4cda-b2e2-d236a8a98010",
        "parentId" : null,
        "authorId" : "4ace600a-1453-4cce-81f8-efdc7c98ad7a",
        "body" : "`input: A => Sink[R1, E, A0, A, B]` ?",
        "createdAt" : "2019-03-06T20:01:23Z",
        "updatedAt" : "2019-03-06T20:16:47Z",
        "lastEditedBy" : "4ace600a-1453-4cce-81f8-efdc7c98ad7a",
        "tags" : [
        ]
      },
      {
        "id" : "54f9efae-d621-4238-a8d6-0e076873900b",
        "parentId" : "b22b2d66-27b7-4cda-b2e2-d236a8a98010",
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "So the input function yields sinks that use `R`, and the ending value `end` uses `R1`",
        "createdAt" : "2019-03-06T20:17:57Z",
        "updatedAt" : "2019-03-06T20:17:57Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      }
    ],
    "commit" : "00aaff72991a230a7f0bb5c85f289b882864723b",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +442,446 @@  type Step[+S, +A0] = Step.Step[S, A0]\n\n  final def more[R, R1 <: R, E, A0, A, B](end: ZIO[R1, E, B])(input: A => Sink[R, E, A0, A, B]): Sink[R1, E, A0, A, B] =\n    new Sink[R1, E, A0, A, B] {\n      type State = Option[(Sink[R1, E, A0, A, B], Any)]"
  },
  {
    "id" : "fe247652-3289-4871-ace0-9b681c5a2f8d",
    "prId" : 604,
    "prUrl" : "https://github.com/zio/zio/pull/604#pullrequestreview-211456974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80a8794f-72de-4b59-8232-69a18c118d68",
        "parentId" : null,
        "authorId" : "4ace600a-1453-4cce-81f8-efdc7c98ad7a",
        "body" : "` val leftStep: ZIO[R1, ..` ?",
        "createdAt" : "2019-03-06T20:05:49Z",
        "updatedAt" : "2019-03-06T20:16:47Z",
        "lastEditedBy" : "4ace600a-1453-4cce-81f8-efdc7c98ad7a",
        "tags" : [
        ]
      },
      {
        "id" : "8a25524b-bde5-4d4e-8270-61645b72f1c5",
        "parentId" : "80a8794f-72de-4b59-8232-69a18c118d68",
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "`leftStep` is actually the step from the current sink, which uses `R`. `rightStep` is from the other sink which uses a narrower `R1`",
        "createdAt" : "2019-03-06T20:17:23Z",
        "updatedAt" : "2019-03-06T20:17:23Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      },
      {
        "id" : "fbdf1f0c-2720-41e2-b1b5-21fbcec2ccd6",
        "parentId" : "80a8794f-72de-4b59-8232-69a18c118d68",
        "authorId" : "4ace600a-1453-4cce-81f8-efdc7c98ad7a",
        "body" : "it makes sense, thanks\r\nLGTM",
        "createdAt" : "2019-03-06T20:29:07Z",
        "updatedAt" : "2019-03-06T20:29:07Z",
        "lastEditedBy" : "4ace600a-1453-4cce-81f8-efdc7c98ad7a",
        "tags" : [
        ]
      }
    ],
    "commit" : "00aaff72991a230a7f0bb5c85f289b882864723b",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +643,647 @@\n        def step(state: State, a: A): ZIO[R1, E1, Step[State, A]] = {\n          val leftStep: ZIO[R, Nothing, Step[Side[E, self.State, B], A]] =\n            state._1 match {\n              case Side.State(s) =>"
  },
  {
    "id" : "fddfccd1-5e87-4483-8203-2ccdeefca283",
    "prId" : 604,
    "prUrl" : "https://github.com/zio/zio/pull/604#pullrequestreview-211448298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6492457c-4fe3-4a7e-b3a0-c88d1454fff4",
        "parentId" : null,
        "authorId" : "4ace600a-1453-4cce-81f8-efdc7c98ad7a",
        "body" : "üëç ",
        "createdAt" : "2019-03-06T20:10:14Z",
        "updatedAt" : "2019-03-06T20:16:47Z",
        "lastEditedBy" : "4ace600a-1453-4cce-81f8-efdc7c98ad7a",
        "tags" : [
        ]
      }
    ],
    "commit" : "00aaff72991a230a7f0bb5c85f289b882864723b",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +142,146 @@  final def contramapM[R1 <: R, E1 >: E, C](f: C => ZIO[R1, E1, A]): Sink[R1, E1, A0, C, B] =\n    new Sink[R1, E1, A0, C, B] {\n      type State = self.State\n\n      val initial = self.initial"
  },
  {
    "id" : "d4d410e2-3a0f-470a-8700-fa2a832f7a6a",
    "prId" : 597,
    "prUrl" : "https://github.com/zio/zio/pull/597#pullrequestreview-211237118",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2cccb9d7-78be-4922-a6b0-f2dc650a06d8",
        "parentId" : null,
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "We could also allow narrowing of `R` here. I'll open a separate issue for this",
        "createdAt" : "2019-03-06T13:46:41Z",
        "updatedAt" : "2019-03-06T13:46:42Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      }
    ],
    "commit" : "42c6e5b1d96e14b071d166a8460f3ac876660534",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +766,770 @@      }\n\n    final def zip[E1 >: E, C](that: Sink[R, E1, A, A, C]): Sink[R, E1, A, A, (B, C)] =\n      flatMap(b => that.map(c => (b, c)))\n"
  }
]