[
  {
    "id" : "077d3561-37f9-41de-a622-3734d3aed036",
    "prId" : 61,
    "prUrl" : "https://github.com/monix/monix-bio/pull/61#pullrequestreview-338868131",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffc9c622-7f79-49b8-b7c2-83be89c52239",
        "parentId" : null,
        "authorId" : "560e1de5-7481-4bf3-b08d-f23a983f5966",
        "body" : "Would be nice to be able to support `BIO[E, A]` here but I'll leave it for the future",
        "createdAt" : "2020-01-06T20:11:24Z",
        "updatedAt" : "2020-01-06T22:30:18Z",
        "lastEditedBy" : "560e1de5-7481-4bf3-b08d-f23a983f5966",
        "tags" : [
        ]
      }
    ],
    "commit" : "c38e368b9b4f80427942a30008e9ebf21bc69741",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +154,158 @@  implicit def fromEither[E <: Throwable]: TaskLike[Either[E, *]] =\n    new TaskLike[Either[E, *]] {\n      def apply[A](fa: Either[E, A]): Task[A] =\n        BIO.fromEither(fa)\n    }"
  }
]