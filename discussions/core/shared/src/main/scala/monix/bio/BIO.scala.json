[
  {
    "id" : "66f02e75-8ce1-4a65-ab3b-653cd764a237",
    "prId" : 105,
    "prUrl" : "https://github.com/monix/monix-bio/pull/105#pullrequestreview-385991065",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "148edc8b-43d7-4369-91bb-740bc1731587",
        "parentId" : null,
        "authorId" : "e3f8e406-3237-4d88-a7a8-fb9aef50c6c1",
        "body" : "I had to add the types to `flatMapLoop` explicitly otherwise it expected `E` and not `E1` for the error type. ",
        "createdAt" : "2020-04-01T22:23:18Z",
        "updatedAt" : "2020-04-01T22:23:18Z",
        "lastEditedBy" : "e3f8e406-3237-4d88-a7a8-fb9aef50c6c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd910f20966aaa0a1dafafaffda329599282eeb3",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +1820,1824 @@  final def flatMapLoop[E1 >: E, S](seed: S)(f: (A, S, S => BIO[E1, S]) => BIO[E1, S]): BIO[E1, S] =\n    this.flatMap { a =>\n      f(a, seed, flatMapLoop[E1, S](_)(f))\n    }\n"
  },
  {
    "id" : "fa411224-bec0-4eb4-8ac7-e5a0aa0877dc",
    "prId" : 67,
    "prUrl" : "https://github.com/monix/monix-bio/pull/67#pullrequestreview-341154590",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96848a7f-145a-4353-be33-eed73a0ed1bb",
        "parentId" : null,
        "authorId" : "560e1de5-7481-4bf3-b08d-f23a983f5966",
        "body" : "Anyone knows why it requires `lazy val` and can't be a `val` like similar construct in `timer` and `contextShift` ?",
        "createdAt" : "2020-01-10T13:16:48Z",
        "updatedAt" : "2020-01-10T13:16:48Z",
        "lastEditedBy" : "560e1de5-7481-4bf3-b08d-f23a983f5966",
        "tags" : [
        ]
      }
    ],
    "commit" : "08b62bb7455949e0611e890d313f06eb108d4cdf",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +4260,4264 @@    monadErrorAny.asInstanceOf[CatsBaseForTask[E]]\n\n  private[this] final lazy val monadErrorAny: CatsBaseForTask[Any] =\n    new CatsBaseForTask[Any]\n}"
  },
  {
    "id" : "d11f84b2-fdb1-4d5f-887c-6369acb7f284",
    "prId" : 49,
    "prUrl" : "https://github.com/monix/monix-bio/pull/49#pullrequestreview-332225399",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91f5bf52-6c8f-41be-949a-b9b9e29e07c5",
        "parentId" : null,
        "authorId" : "ee74c363-32ce-4d86-9430-73c975e00983",
        "body" : "This message is slightly misleading, because we're not handling `Throwables` here (which are reserved for the fatal errors channel), but we're handling typed errors instead (which usually won't be `Throwable`). We could rephrase that a little ðŸ˜‰",
        "createdAt" : "2019-12-14T18:06:33Z",
        "updatedAt" : "2020-03-01T14:19:05Z",
        "lastEditedBy" : "ee74c363-32ce-4d86-9430-73c975e00983",
        "tags" : [
        ]
      }
    ],
    "commit" : "125ede60bde1ea5d32ed07113e6245346c259822",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2111,2115 @@    BIO.FlatMap(this, BIO.Bimap(fe, fa))\n\n  /** Creates a new task that will handle any matching throwable that\n    * this task might emit by executing another task.\n    *"
  },
  {
    "id" : "80e7a81f-fe87-4ec5-98ea-2d39b0641f11",
    "prId" : 49,
    "prUrl" : "https://github.com/monix/monix-bio/pull/49#pullrequestreview-332226024",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "914b556d-5fe8-4261-950a-700009092d40",
        "parentId" : null,
        "authorId" : "560e1de5-7481-4bf3-b08d-f23a983f5966",
        "body" : "The comment doesn't seem to be accurate, it doesn't really handle the error (just transforms it into a different error) and it's not necessarily a `Throwable` because `E` can be of any type",
        "createdAt" : "2019-12-14T18:22:04Z",
        "updatedAt" : "2020-03-01T14:19:05Z",
        "lastEditedBy" : "560e1de5-7481-4bf3-b08d-f23a983f5966",
        "tags" : [
        ]
      }
    ],
    "commit" : "125ede60bde1ea5d32ed07113e6245346c259822",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2111,2115 @@    BIO.FlatMap(this, BIO.Bimap(fe, fa))\n\n  /** Creates a new task that will handle any matching throwable that\n    * this task might emit by executing another task.\n    *"
  }
]