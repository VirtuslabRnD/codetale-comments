[
  {
    "id" : "0d7b554e-3c63-4e09-8a19-4a5cbece724f",
    "prId" : 2453,
    "prUrl" : "https://github.com/zio/zio/pull/2453#pullrequestreview-332616855",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0beb4c8b-40c4-44ee-b67c-29c7888d77ed",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Need to add versions of other new methods here and in other companion objects where appropriate (i.e. only for data types that can fail).",
        "createdAt" : "2019-12-15T21:25:19Z",
        "updatedAt" : "2019-12-16T15:28:28Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "f524c7c3-f28b-4818-a8dc-843b3cbec2bc",
        "parentId" : "0beb4c8b-40c4-44ee-b67c-29c7888d77ed",
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Don't we still need `validateM` and `validateFirstM` here?",
        "createdAt" : "2019-12-16T14:10:47Z",
        "updatedAt" : "2019-12-16T15:28:28Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "76abc614-e4cb-408c-ae25-73ee1a734864",
        "parentId" : "0beb4c8b-40c4-44ee-b67c-29c7888d77ed",
        "authorId" : "de0bc6c7-e62a-427d-8426-7cca7227a8f1",
        "body" : "`validateM` and `validateFirstM`error type is not Throwable. It is List[Throwable]. I do not think it will work out",
        "createdAt" : "2019-12-16T14:34:49Z",
        "updatedAt" : "2019-12-16T15:28:28Z",
        "lastEditedBy" : "de0bc6c7-e62a-427d-8426-7cca7227a8f1",
        "tags" : [
        ]
      },
      {
        "id" : "5b77fcfc-764c-4000-91f4-2e2c7a359010",
        "parentId" : "0beb4c8b-40c4-44ee-b67c-29c7888d77ed",
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "You're right. The return type would have to be `IO[List[Throwable], List[B]]`. It could be useful but it does break the contract that methods on the companion object return the same type. Fine to leave out.",
        "createdAt" : "2019-12-16T14:44:17Z",
        "updatedAt" : "2019-12-16T15:28:28Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd7ca24aa8de3db4a219e2d3bb48b39507328c05",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +255,259 @@   * @see See [[zio.ZIO.foldRight]]\n   */\n  final def foldRight[S, A](in: Iterable[A])(zero: S)(f: (A, S) => Task[S]): Task[S] =\n    ZIO.foldRight(in)(zero)(f)\n"
  }
]