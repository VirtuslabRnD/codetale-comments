[
  {
    "id" : "0845df42-5b96-4765-9e9f-4386315de71b",
    "prId" : 2984,
    "prUrl" : "https://github.com/zio/zio/pull/2984#pullrequestreview-366818622",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d85fdcc-28c3-4edc-93ed-bd74cbaccdfa",
        "parentId" : null,
        "authorId" : "d2ba08fc-1f06-4ed5-8330-f2dd6b4f213b",
        "body" : "typo: \"WHile\"",
        "createdAt" : "2020-02-29T19:15:43Z",
        "updatedAt" : "2020-02-29T19:15:44Z",
        "lastEditedBy" : "d2ba08fc-1f06-4ed5-8330-f2dd6b4f213b",
        "tags" : [
        ]
      },
      {
        "id" : "2743a691-afc7-4ca3-8b85-c307f8fadc9f",
        "parentId" : "2d85fdcc-28c3-4edc-93ed-bd74cbaccdfa",
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Good catch! Will fix tonight.",
        "createdAt" : "2020-02-29T20:33:43Z",
        "updatedAt" : "2020-02-29T20:33:44Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdd40ca762934e59f3b534b35066aadc5b11e444",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +32,36 @@ * }}}\n *\n * NOTE: WHile `Ref` provides the functional equivalent of a mutable reference,\n * the value inside the `Ref` should be immutable. For performance reasons\n * `Ref` is implemented in terms of compare and swap operations rather than"
  },
  {
    "id" : "2b4e0f72-aa9e-496a-a6ea-eb7acaa81564",
    "prId" : 2757,
    "prUrl" : "https://github.com/zio/zio/pull/2757#pullrequestreview-350463416",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53154dbe-10e1-46f8-9ab0-5fa00565233c",
        "parentId" : null,
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "While you're here, do you think it's worth adding `getAndUpdate` too?",
        "createdAt" : "2020-01-29T19:11:05Z",
        "updatedAt" : "2020-01-30T02:11:22Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      },
      {
        "id" : "bd31599d-1fca-4a56-9bcd-2e9d3b11f8da",
        "parentId" : "53154dbe-10e1-46f8-9ab0-5fa00565233c",
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Yes will do.",
        "createdAt" : "2020-01-29T19:12:14Z",
        "updatedAt" : "2020-01-30T02:11:22Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "a99df099-a8b5-4e31-b8a4-33e25a7ccfe6",
        "parentId" : "53154dbe-10e1-46f8-9ab0-5fa00565233c",
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "It could be nice to have `getAndSet` too.",
        "createdAt" : "2020-01-29T22:15:37Z",
        "updatedAt" : "2020-01-30T02:11:22Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "06616e7f4dd2f023b6749cf76470fa19d3301e4a",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +210,214 @@   * @return `UIO[A]` modified value of the `Ref`\n   */\n  def updateAndGet(f: A => A): UIO[A] = IO.effectTotal {\n    var loop    = true\n    var next: A = null.asInstanceOf[A]"
  }
]