[
  {
    "id" : "d8eeed2e-c587-49ae-ab12-6adde34f37cc",
    "prId" : 3815,
    "prUrl" : "https://github.com/zio/zio/pull/3815#pullrequestreview-430879443",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d0067bf-3471-4a3e-84ea-cc98650b7cb1",
        "parentId" : null,
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "Should we lift this value to STM? It would be consistent with the API, although this version has better performance as it removes one mapping. ",
        "createdAt" : "2020-06-15T17:58:47Z",
        "updatedAt" : "2020-06-15T17:58:55Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      },
      {
        "id" : "737b1efd-c2cc-4c14-a16b-b32be55e81a5",
        "parentId" : "5d0067bf-3471-4a3e-84ea-cc98650b7cb1",
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "I thought about it or adding a note. It seems strange because the size is a constant so it doesn't require an effect to evaluate but don't feel strongly.",
        "createdAt" : "2020-06-15T18:01:07Z",
        "updatedAt" : "2020-06-15T18:01:07Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "df46bff2-c4fb-4c3b-81db-9783fd26001c",
        "parentId" : "5d0067bf-3471-4a3e-84ea-cc98650b7cb1",
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "Let's keep it this way then. ",
        "createdAt" : "2020-06-15T18:11:06Z",
        "updatedAt" : "2020-06-15T18:11:07Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "9bddea18f4602630394ec135aef8556c7874d691",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +334,338 @@   * Returns the size of the array.\n   */\n  def size: Int =\n    array.size\n"
  },
  {
    "id" : "29b4272a-cabe-4843-a8ad-dd0caa9b908e",
    "prId" : 2474,
    "prUrl" : "https://github.com/zio/zio/pull/2474#pullrequestreview-332255294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7781761d-ec75-483b-95f3-54c40b9d921a",
        "parentId" : null,
        "authorId" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "body" : "This is counter-intuitive, you would expect subsequent operations to be done on the same array, but here a new one is created, which could yield different results on those operations.",
        "createdAt" : "2019-12-15T10:19:11Z",
        "updatedAt" : "2019-12-15T14:30:43Z",
        "lastEditedBy" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "tags" : [
        ]
      },
      {
        "id" : "41a54bb5-ca48-4fb0-b287-d09e1e55e1b7",
        "parentId" : "7781761d-ec75-483b-95f3-54c40b9d921a",
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "This one's actually the old one (diff due to renaming). Technically, it is on the same one (TArray being value class), however, I have similar concerns on a couple more methods (e.g. `existsM`).",
        "createdAt" : "2019-12-15T10:22:34Z",
        "updatedAt" : "2019-12-15T14:30:43Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      },
      {
        "id" : "14ed39c1-bedb-4e41-ba40-590676391321",
        "parentId" : "7781761d-ec75-483b-95f3-54c40b9d921a",
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "Edit: I've re-read what you wrote, and yes, this is even more extreme actually.",
        "createdAt" : "2019-12-15T10:24:52Z",
        "updatedAt" : "2019-12-15T14:30:43Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "767c9af302981f220c664046818fbab514786acb",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +88,92 @@   */\n  final def findLast(p: A => Boolean): STM[Nothing, Option[A]] =\n    new TArray(array.reverse).find(p)\n\n  /**"
  },
  {
    "id" : "1d190c94-39c3-4d43-9215-20ac38519174",
    "prId" : 2474,
    "prUrl" : "https://github.com/zio/zio/pull/2474#pullrequestreview-332256677",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38a8f953-2e50-44cf-b8b3-2270360762d1",
        "parentId" : null,
        "authorId" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "body" : "Note that we could add a `first` that just retries if the array is empty ü§î ",
        "createdAt" : "2019-12-15T10:24:03Z",
        "updatedAt" : "2019-12-15T14:30:43Z",
        "lastEditedBy" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "tags" : [
        ]
      },
      {
        "id" : "ad600259-499f-46da-b393-15fe56d148b1",
        "parentId" : "38a8f953-2e50-44cf-b8b3-2270360762d1",
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "Oh, I believe that was intentionally removed as we didn't want to expose \"unsafe\" methods (see #2446).",
        "createdAt" : "2019-12-15T10:26:17Z",
        "updatedAt" : "2019-12-15T14:30:43Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      },
      {
        "id" : "500b9f91-59be-49d2-8c63-e3ec73e97956",
        "parentId" : "38a8f953-2e50-44cf-b8b3-2270360762d1",
        "authorId" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "body" : "Yes, my point is thanks to the semantics of STM, you can make a safe version of `first` that just parks the computation if the array is empty üòÑ WDYT?",
        "createdAt" : "2019-12-15T10:29:27Z",
        "updatedAt" : "2019-12-15T14:30:43Z",
        "lastEditedBy" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "tags" : [
        ]
      },
      {
        "id" : "45a64964-691a-41a7-889b-ee9483ec32ec",
        "parentId" : "38a8f953-2e50-44cf-b8b3-2270360762d1",
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "True that. But the question is should we reflect that behavior to all accesses, e.g. non-existing index?",
        "createdAt" : "2019-12-15T10:31:59Z",
        "updatedAt" : "2019-12-15T14:30:43Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      },
      {
        "id" : "be280fd9-1350-4725-aa86-26875a813c61",
        "parentId" : "38a8f953-2e50-44cf-b8b3-2270360762d1",
        "authorId" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "body" : "hmm, good question. I wouldn't, e.g. `array(-1)` would never make sense.",
        "createdAt" : "2019-12-15T10:37:08Z",
        "updatedAt" : "2019-12-15T14:30:43Z",
        "lastEditedBy" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "tags" : [
        ]
      },
      {
        "id" : "4fba6aa1-3773-40ba-af99-22fb64b6d9a1",
        "parentId" : "38a8f953-2e50-44cf-b8b3-2270360762d1",
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "Ah, the thing is, the current API doesn't really allow elements to be added, so retrying won't make much sense.",
        "createdAt" : "2019-12-15T10:49:41Z",
        "updatedAt" : "2019-12-15T14:30:43Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      },
      {
        "id" : "78951522-382e-402a-8a36-0a9bd2e46af5",
        "parentId" : "38a8f953-2e50-44cf-b8b3-2270360762d1",
        "authorId" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "body" : "Ah right üëç ",
        "createdAt" : "2019-12-15T10:55:37Z",
        "updatedAt" : "2019-12-15T14:30:43Z",
        "lastEditedBy" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "tags" : [
        ]
      }
    ],
    "commit" : "767c9af302981f220c664046818fbab514786acb",
    "line" : 136,
    "diffHunk" : "@@ -1,1 +112,116 @@   * The first entry of the array, if it exists.\n   */\n  final def firstOption: STM[Nothing, Option[A]] =\n    if (array.isEmpty) STM.succeed(None) else array.head.get.map(Some(_))\n"
  },
  {
    "id" : "7ed2f5a0-03de-47f2-871d-4740d9ee12d2",
    "prId" : 2474,
    "prUrl" : "https://github.com/zio/zio/pull/2474#pullrequestreview-332280146",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "916a5fbd-83df-4787-a22f-1c67a5c6d7a9",
        "parentId" : null,
        "authorId" : "2a2f79ba-933f-43cd-9d45-5d769ab0f54d",
        "body" : "Should we push this failure mode into the error channel?",
        "createdAt" : "2019-12-15T13:23:38Z",
        "updatedAt" : "2019-12-15T14:30:43Z",
        "lastEditedBy" : "2a2f79ba-933f-43cd-9d45-5d769ab0f54d",
        "tags" : [
        ]
      },
      {
        "id" : "98bfe865-ac82-44ca-a0e5-4ead0115dfe2",
        "parentId" : "916a5fbd-83df-4787-a22f-1c67a5c6d7a9",
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "I don't think we should as the goal was for this method to be symmetric with the one in `Array`. However, in case this goal is \"flexible\", I propose to tackle this (and similar issues) in a separate PR.",
        "createdAt" : "2019-12-15T14:26:43Z",
        "updatedAt" : "2019-12-15T14:30:43Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      },
      {
        "id" : "5d9a266b-3fdb-48bf-849e-a8dee12b0e97",
        "parentId" : "916a5fbd-83df-4787-a22f-1c67a5c6d7a9",
        "authorId" : "2a2f79ba-933f-43cd-9d45-5d769ab0f54d",
        "body" : "ok, makes sense",
        "createdAt" : "2019-12-15T18:36:11Z",
        "updatedAt" : "2019-12-15T18:36:11Z",
        "lastEditedBy" : "2a2f79ba-933f-43cd-9d45-5d769ab0f54d",
        "tags" : [
        ]
      }
    ],
    "commit" : "767c9af302981f220c664046818fbab514786acb",
    "line" : 189,
    "diffHunk" : "@@ -1,1 +155,159 @@   * not occur.\n   */\n  final def indexOf(a: A): STM[Nothing, Int] = indexOf(a, 0)\n\n  /**"
  },
  {
    "id" : "5785cd21-1e9d-473d-9339-f6fa2901391d",
    "prId" : 2474,
    "prUrl" : "https://github.com/zio/zio/pull/2474#pullrequestreview-332280160",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8073713c-4883-4bdf-89be-dbd224507af5",
        "parentId" : null,
        "authorId" : "2a2f79ba-933f-43cd-9d45-5d769ab0f54d",
        "body" : "for other parts of zio we have decided to use M suffix only for function involving the zio datatype.\r\nHow about we rename these to updateTransactional/updateSTM for consistency?",
        "createdAt" : "2019-12-15T13:25:32Z",
        "updatedAt" : "2019-12-15T14:30:43Z",
        "lastEditedBy" : "2a2f79ba-933f-43cd-9d45-5d769ab0f54d",
        "tags" : [
        ]
      },
      {
        "id" : "e7d117ce-12c8-4cbc-81f3-36c72e893b7b",
        "parentId" : "8073713c-4883-4bdf-89be-dbd224507af5",
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "I'd leave it for now. We can deprecate this in the future, assuming there's an agreement about that, although, I find the current API to be more convenient.",
        "createdAt" : "2019-12-15T14:25:24Z",
        "updatedAt" : "2019-12-15T14:30:43Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      },
      {
        "id" : "e279c83e-c10d-4780-bcdd-2671f92ae097",
        "parentId" : "8073713c-4883-4bdf-89be-dbd224507af5",
        "authorId" : "2a2f79ba-933f-43cd-9d45-5d769ab0f54d",
        "body" : "üëç ",
        "createdAt" : "2019-12-15T18:36:29Z",
        "updatedAt" : "2019-12-15T18:36:29Z",
        "lastEditedBy" : "2a2f79ba-933f-43cd-9d45-5d769ab0f54d",
        "tags" : [
        ]
      }
    ],
    "commit" : "767c9af302981f220c664046818fbab514786acb",
    "line" : 348,
    "diffHunk" : "@@ -1,1 +285,289 @@   * Atomically updates element in the array with given transactional effect.\n   */\n  final def updateM[E](index: Int, fn: A => STM[E, A]): STM[E, A] =\n    if (0 <= index && index < array.length)\n      for {"
  },
  {
    "id" : "30fc085b-1880-4201-aa34-7425a189dda1",
    "prId" : 2446,
    "prUrl" : "https://github.com/zio/zio/pull/2446#pullrequestreview-329198975",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d7d500c-3ab5-4b30-844f-e47f1d29c5e0",
        "parentId" : null,
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "Maybe express it in terms of `fold`?",
        "createdAt" : "2019-12-09T20:00:14Z",
        "updatedAt" : "2019-12-09T20:37:08Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      },
      {
        "id" : "ebab9e32-deb9-4bdd-9ac3-53bd6ff818eb",
        "parentId" : "2d7d500c-3ab5-4b30-844f-e47f1d29c5e0",
        "authorId" : "2303f9be-956c-47b2-b012-9f9dffa4f637",
        "body" : "The reason I did not was so that it could return early at the first match. TArray doesn't have a foldWhile (like Chunk, for example). I'm happy to change it to use fold if you think it's better to keep it simpler. What do you think?",
        "createdAt" : "2019-12-09T20:15:14Z",
        "updatedAt" : "2019-12-09T20:37:08Z",
        "lastEditedBy" : "2303f9be-956c-47b2-b012-9f9dffa4f637",
        "tags" : [
        ]
      },
      {
        "id" : "4764876c-2f10-4479-ad30-debb6f84b396",
        "parentId" : "2d7d500c-3ab5-4b30-844f-e47f1d29c5e0",
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "Good point. Let's keep it this way, and add the combinators like foldWhile once we make an iteration to optimizer the transactional structures.",
        "createdAt" : "2019-12-09T20:29:50Z",
        "updatedAt" : "2019-12-09T20:37:08Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ca0374a141bb65caf79b88b2a3a62f0354f69f7",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +60,64 @@  /** Find the first element in the array matching a predicate. */\n  final def find(predicate: A => Boolean): STM[Nothing, Option[A]] =\n    if (array.isEmpty) STM.succeed(None)\n    else\n      array.head.get.flatMap { a =>"
  },
  {
    "id" : "699134ab-8c50-41da-bde4-86783bf574be",
    "prId" : 2446,
    "prUrl" : "https://github.com/zio/zio/pull/2446#pullrequestreview-329182953",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1f67120-dc0c-4224-bb83-fc2452fbb3a0",
        "parentId" : null,
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "This one can probably be expressed in terms of `foldM`.",
        "createdAt" : "2019-12-09T20:00:43Z",
        "updatedAt" : "2019-12-09T20:37:08Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ca0374a141bb65caf79b88b2a3a62f0354f69f7",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +76,80 @@\n  /** Find the first element in the array matching an STM predicate. */\n  final def findM[E](predicate: A => STM[E, Boolean]): STM[E, Option[A]] =\n    if (array.isEmpty) STM.succeed(None)\n    else"
  }
]