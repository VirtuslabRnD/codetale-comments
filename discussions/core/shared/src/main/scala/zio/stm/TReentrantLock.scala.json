[
  {
    "id" : "53776bbc-487c-4170-b1a3-6c279d4646bd",
    "prId" : 2422,
    "prUrl" : "https://github.com/zio/zio/pull/2422#pullrequestreview-327357669",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "384e6e17-f599-46f9-9c51-c3ff02e2ddf2",
        "parentId" : null,
        "authorId" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "body" : "Is there a reason for the backticks?",
        "createdAt" : "2019-12-05T07:08:51Z",
        "updatedAt" : "2019-12-05T07:51:01Z",
        "lastEditedBy" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "tags" : [
        ]
      },
      {
        "id" : "f7ead75b-e99e-4f92-a47c-5c60cfab65e1",
        "parentId" : "384e6e17-f599-46f9-9c51-c3ff02e2ddf2",
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "To match for equality for the variable of the same name in the outer scope.",
        "createdAt" : "2019-12-05T07:49:33Z",
        "updatedAt" : "2019-12-05T07:51:01Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      }
    ],
    "commit" : "77e18419013dc93733fe934f57e9dc749122c1a4",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +59,63 @@              WriteLock(1, readLock.readLocks(fiberId), fiberId)\n\n            case Right(WriteLock(n, m, `fiberId`)) =>\n              WriteLock(n + 1, m, fiberId)\n          }"
  },
  {
    "id" : "21845efe-fe98-462a-92f7-7fa6aa18db85",
    "prId" : 2422,
    "prUrl" : "https://github.com/zio/zio/pull/2422#pullrequestreview-327358042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa80a3d2-778b-4172-800b-a4105fa1eec2",
        "parentId" : null,
        "authorId" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "body" : "Yes, I think here if `m < 0` because of how `adjustRead` deals with the `WriteLock` situation, then you reach a bad state.",
        "createdAt" : "2019-12-05T07:10:16Z",
        "updatedAt" : "2019-12-05T07:51:01Z",
        "lastEditedBy" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "tags" : [
        ]
      },
      {
        "id" : "58cce682-06d5-49de-a30b-47b1b56b00eb",
        "parentId" : "fa80a3d2-778b-4172-800b-a4105fa1eec2",
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "Done!",
        "createdAt" : "2019-12-05T07:50:28Z",
        "updatedAt" : "2019-12-05T07:51:01Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      }
    ],
    "commit" : "77e18419013dc93733fe934f57e9dc749122c1a4",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +111,115 @@        data.modify {\n          case Right(WriteLock(1, m, `fiberId`)) =>\n            0 -> Left(ReadLock(fiberId, m))\n\n          case Right(WriteLock(n, m, `fiberId`)) if n > 1 =>"
  },
  {
    "id" : "24e161f4-e4d5-4088-af78-dc338561ed01",
    "prId" : 2422,
    "prUrl" : "https://github.com/zio/zio/pull/2422#pullrequestreview-327354428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "892585a5-190c-422a-95c9-317029e63c29",
        "parentId" : null,
        "authorId" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "body" : "Should you test here that the two `fiberId` are equal?",
        "createdAt" : "2019-12-05T07:13:19Z",
        "updatedAt" : "2019-12-05T07:51:01Z",
        "lastEditedBy" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "tags" : [
        ]
      },
      {
        "id" : "d719273f-33c0-49d6-94fe-bed8322e4cfa",
        "parentId" : "892585a5-190c-422a-95c9-317029e63c29",
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "That’s what the backticks do. Instead of binding a new value to fiberId, it checks that the value is equal to the existing fiberId value.\r\n\r\nVery strange pattern matching syntax 🤷🏼‍♂️",
        "createdAt" : "2019-12-05T07:15:26Z",
        "updatedAt" : "2019-12-05T07:51:01Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      },
      {
        "id" : "d62b737c-2476-48c4-8fe8-0115d96fad15",
        "parentId" : "892585a5-190c-422a-95c9-317029e63c29",
        "authorId" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "body" : "🤯",
        "createdAt" : "2019-12-05T07:41:12Z",
        "updatedAt" : "2019-12-05T07:51:01Z",
        "lastEditedBy" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "tags" : [
        ]
      }
    ],
    "commit" : "77e18419013dc93733fe934f57e9dc749122c1a4",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +110,114 @@      fiberId =>\n        data.modify {\n          case Right(WriteLock(1, m, `fiberId`)) =>\n            0 -> Left(ReadLock(fiberId, m))\n"
  },
  {
    "id" : "61fb7c23-3869-44ea-800a-ba4b262b8381",
    "prId" : 2422,
    "prUrl" : "https://github.com/zio/zio/pull/2422#pullrequestreview-327537815",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1478d90c-9258-4235-9b3a-4d7533123a49",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Shouldn't this be \"The transaction will suspend until no other fiber is holding a write lock.\"?",
        "createdAt" : "2019-12-05T13:13:03Z",
        "updatedAt" : "2019-12-05T13:13:04Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "77e18419013dc93733fe934f57e9dc749122c1a4",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@\n  /**\n   * Acquires a read lock. The transaction will suspend until no other fibers\n   * are holding read locks. Succeeds with the number of write locks held by\n   * this fiber."
  }
]