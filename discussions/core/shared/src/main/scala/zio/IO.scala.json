[
  {
    "id" : "c512d99e-0771-4c3f-95bf-a5314e0b65e6",
    "prId" : 4163,
    "prUrl" : "https://github.com/zio/zio/pull/4163#pullrequestreview-478618456",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d0c9731-1fb1-4727-9aea-da48c9459dde",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "@adamgfraser  Shouldn't this be `IO[None.type, A]` as per more recent convention?",
        "createdAt" : "2020-08-31T13:26:24Z",
        "updatedAt" : "2020-08-31T13:26:24Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      },
      {
        "id" : "2d619d1f-95cb-4c28-8148-dbaa09447233",
        "parentId" : "2d0c9731-1fb1-4727-9aea-da48c9459dde",
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "@jdegoes The goal of this constructor was to have a variant for users who want `Unit` in the error channel instead of `None.type`. So we have `ZIO.fromOption` for the normal recommended usage, `ZIO.getOrFailUnit` for if you really want `Unit` in the error channel, and `ZIO.getOrFail` for if you want `NoSuchElementException` in the error channel (for example, for unifying with other errors that are a subtype of `Throwable`). Does that make sense?",
        "createdAt" : "2020-08-31T13:31:50Z",
        "updatedAt" : "2020-08-31T13:31:50Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "e90bca6e8f68259a60824c3f3f5b3f3081cf53e1",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +527,531 @@   * @see See [[zio.ZIO.getOrFailUnit]]\n   */\n  def getOrFailUnit[A](v: => Option[A]): IO[Unit, A] = ZIO.getOrFailUnit(v)\n\n  /**"
  }
]