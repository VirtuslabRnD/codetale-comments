[
  {
    "id" : "27fcc58d-9cb4-4403-8539-32faff1c4c73",
    "prId" : 4554,
    "prUrl" : "https://github.com/zio/zio/pull/4554#pullrequestreview-567863297",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11974c65-dead-44fc-b623-bc74918a762f",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Can this really be `UIO`? I know we changed this at what point because we observed that it really did throw `DateTimeException` when the system time zone wasn't in the list that was supported by the `java-time` implementation.",
        "createdAt" : "2021-01-13T23:00:07Z",
        "updatedAt" : "2021-01-14T07:26:52Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "621781fe-176f-4894-81d8-2d546edbf177",
        "parentId" : "11974c65-dead-44fc-b623-bc74918a762f",
        "authorId" : "1705f9b5-ee6d-4bb3-9bb1-47cc41c3654d",
        "body" : "The previous implementation used `ZoneId.systemDefault` in `currentDateTime`, which may throw a `DateTimeException`. The new implementation uses `Instant.now`, which does not throw according to the docs. ",
        "createdAt" : "2021-01-14T05:37:48Z",
        "updatedAt" : "2021-01-14T07:26:52Z",
        "lastEditedBy" : "1705f9b5-ee6d-4bb3-9bb1-47cc41c3654d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0d358bcbc1423ad1beeea404a1e0b0a8f36cbc1",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +31,35 @@      def currentTime(unit: TimeUnit): UIO[Long]\n\n      // Could be UIO. We keep IO to preserve binary compatibility.\n      def currentDateTime: IO[DateTimeException, OffsetDateTime]\n"
  },
  {
    "id" : "d1fb0164-dc11-4fd9-941b-2598de9a51ec",
    "prId" : 4554,
    "prUrl" : "https://github.com/zio/zio/pull/4554#pullrequestreview-567863583",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52add626-a422-47e6-81ca-efb33287a026",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Same comment as above.",
        "createdAt" : "2021-01-13T23:01:03Z",
        "updatedAt" : "2021-01-14T07:26:52Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "633e1508-ac1d-4083-a0f4-6fc3fcae2897",
        "parentId" : "52add626-a422-47e6-81ca-efb33287a026",
        "authorId" : "1705f9b5-ee6d-4bb3-9bb1-47cc41c3654d",
        "body" : "The previous implementation was based on `currentDateTime`, which could a `DateTimeException`. The new implementation directly uses `LocalDateTime.now`, which does not throw according to the docs. ",
        "createdAt" : "2021-01-14T05:38:40Z",
        "updatedAt" : "2021-01-14T07:26:52Z",
        "lastEditedBy" : "1705f9b5-ee6d-4bb3-9bb1-47cc41c3654d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0d358bcbc1423ad1beeea404a1e0b0a8f36cbc1",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +39,43 @@      // This could be a UIO. We keep IO to preserve binary compatibility.\n      // The implementation is only here to preserve binary compatibility.\n      def localDateTime: IO[DateTimeException, java.time.LocalDateTime] = currentDateTime.map(_.toLocalDateTime())\n\n      def nanoTime: UIO[Long]"
  },
  {
    "id" : "97c21a4d-9016-4e90-89d3-9a3d2ff3e5b6",
    "prId" : 4554,
    "prUrl" : "https://github.com/zio/zio/pull/4554#pullrequestreview-567864629",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2085dc7-8e08-45f7-ac07-a6436f0d470b",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Maybe keep these abstract and provide helper methods for default implementations like we do in other services? I think providing default implementations potentially results in counterintuitive behavior with like mock implementations.",
        "createdAt" : "2021-01-13T23:03:09Z",
        "updatedAt" : "2021-01-14T07:26:52Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "98c9bf9b-b15b-4391-ac57-4e64a5537df7",
        "parentId" : "a2085dc7-8e08-45f7-ac07-a6436f0d470b",
        "authorId" : "1705f9b5-ee6d-4bb3-9bb1-47cc41c3654d",
        "body" : "I'd also prefer to do that, but it breaks binary compatibility. If we decide that's OK here, I'll remove the default implementation.",
        "createdAt" : "2021-01-14T05:42:20Z",
        "updatedAt" : "2021-01-14T07:26:52Z",
        "lastEditedBy" : "1705f9b5-ee6d-4bb3-9bb1-47cc41c3654d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0d358bcbc1423ad1beeea404a1e0b0a8f36cbc1",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +35,39 @@\n      // The implementation is only here to preserve binary compatibility.\n      def instant: UIO[java.time.Instant] = currentTime(TimeUnit.MILLISECONDS).map(java.time.Instant.ofEpochMilli(_))\n\n      // This could be a UIO. We keep IO to preserve binary compatibility."
  },
  {
    "id" : "54d10d8a-88eb-4f8c-8332-90d11abe40ed",
    "prId" : 3976,
    "prUrl" : "https://github.com/zio/zio/pull/3976#pullrequestreview-454448028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e34fc90f-319b-4d49-a9ca-5f21bd7187c8",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Probably should add `localDateTime` as an accessor as well. I can also pick up in a follow up.",
        "createdAt" : "2020-07-23T19:52:26Z",
        "updatedAt" : "2020-08-03T16:13:23Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8e12c2ec77edc0a8c0330627c470cff962892be",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +82,86 @@    ZIO.accessM(_.get.currentDateTime)\n\n  val instant: ZIO[Clock, Nothing, java.time.Instant] =\n    ZIO.accessM(_.get.instant)\n"
  }
]