[
  {
    "id" : "aef6a0b3-442d-4230-bea0-575fbb5e2294",
    "prId" : 3419,
    "prUrl" : "https://github.com/zio/zio/pull/3419#pullrequestreview-397370849",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5df84288-2889-43d4-a7cc-c4048acb74be",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "I don't think this implementation is safe because we only know that it is safe to traverse `as` once but we are traversing it twice right now (once for `as.size` and once for `as.foreach`). We may just need to delegate to doing `+=` with each `Boolean` here. Unfortunately if we don't have the ability to traverse more than once there isn't a whole lot else we can do than process the elements one at a time unless we want to materialize them into their own collection which is kind of repeating the work of the `ChunkBuilder`.",
        "createdAt" : "2020-04-21T14:12:01Z",
        "updatedAt" : "2020-04-22T11:16:37Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "216cdd3d94b09670f54719fd6a63ddd93dcf5a96",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +120,124 @@      BitChunk(bytes, 0, 8 * (bytes.length - 1) + maxBitIndex)\n    }\n    override def ++=(as: TraversableOnce[SBoolean]): this.type = {\n      as.foreach(+= _)\n      this"
  }
]