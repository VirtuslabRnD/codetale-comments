[
  {
    "id" : "562d3755-1f80-447f-9696-3717b019225e",
    "prId" : 204,
    "prUrl" : "https://github.com/monix/monix-bio/pull/204#pullrequestreview-535263605",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9b3d909-a118-4e80-9085-33f2d8429e08",
        "parentId" : null,
        "authorId" : "560e1de5-7481-4bf3-b08d-f23a983f5966",
        "body" : "If you don't mind, we could copy some of the tests from `TaskFromFutureSuite`. For instance, stack safety and cancelation",
        "createdAt" : "2020-11-20T08:40:52Z",
        "updatedAt" : "2020-11-20T10:07:10Z",
        "lastEditedBy" : "560e1de5-7481-4bf3-b08d-f23a983f5966",
        "tags" : [
        ]
      },
      {
        "id" : "cbffae19-aede-4097-b252-4efa40badabb",
        "parentId" : "f9b3d909-a118-4e80-9085-33f2d8429e08",
        "authorId" : "b917fdaa-3d51-4b0c-a3a7-2b5d7d07fce9",
        "body" : "Sure.\r\nIn light of your other comment, if we're adding 2 new API functions, should each go in its own file for testing? I am not sure I fully get the logic of what belongs in `TaskToFutureSuite`, where should `deferFutureEither` be tested and what should those test cover, being different than the eager version",
        "createdAt" : "2020-11-20T09:12:52Z",
        "updatedAt" : "2020-11-20T10:07:10Z",
        "lastEditedBy" : "b917fdaa-3d51-4b0c-a3a7-2b5d7d07fce9",
        "tags" : [
        ]
      },
      {
        "id" : "54c10af0-7de9-4b3c-ba7c-1352d6133b15",
        "parentId" : "f9b3d909-a118-4e80-9085-33f2d8429e08",
        "authorId" : "560e1de5-7481-4bf3-b08d-f23a983f5966",
        "body" : "We're not very strict about it, it's a bit arbitrary\r\n\r\nOne implementation will forward to the other so I think it's fine if we only test `fromFutureEither` in `IOFromFutureEitherSuite` file",
        "createdAt" : "2020-11-20T09:32:07Z",
        "updatedAt" : "2020-11-20T10:07:10Z",
        "lastEditedBy" : "560e1de5-7481-4bf3-b08d-f23a983f5966",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0c5deede290a59f1867d1fae51b26dde6b2495f",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@import scala.util.{Failure, Success}\n\nobject IOFromFutureEitherSuite extends BaseTestSuite {\n  test(\"IO.fromFutureEither should return success channel for Right\") { implicit s =>\n    val mkFuture = Future.successful[Either[String, Int]](Right(10))"
  }
]