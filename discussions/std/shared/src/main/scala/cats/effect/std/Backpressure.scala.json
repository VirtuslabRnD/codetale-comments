[
  {
    "id" : "b6949bbb-f4a5-47d6-ab8e-7efeab82e2db",
    "prId" : 1817,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/1817#pullrequestreview-619813569",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2697dec5-5d5a-4cae-9715-8290a730df69",
        "parentId" : null,
        "authorId" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "body" : "Since this is passed to the underlying semaphore, which accepts `Long` arguments, should we maybe have this be a `Long` too?",
        "createdAt" : "2021-03-24T14:35:35Z",
        "updatedAt" : "2021-03-24T14:35:36Z",
        "lastEditedBy" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "tags" : [
        ]
      },
      {
        "id" : "c8bc7c09-a92a-4b89-b24a-afc0b7486941",
        "parentId" : "2697dec5-5d5a-4cae-9715-8290a730df69",
        "authorId" : "8d531004-27e8-41f6-bbc6-04ab80e6e133",
        "body" : "Potentially, though the CE2 version uses an `Int`. Also, `Long` would be quite a large bound for what `Backpressure` is; `Long.MaxValue` would be a heck of a lot of concurrent effects ðŸ˜… ",
        "createdAt" : "2021-03-24T14:42:53Z",
        "updatedAt" : "2021-03-24T14:42:53Z",
        "lastEditedBy" : "8d531004-27e8-41f6-bbc6-04ab80e6e133",
        "tags" : [
        ]
      },
      {
        "id" : "9b5c94f0-92d9-4f58-8c72-020f786122e4",
        "parentId" : "2697dec5-5d5a-4cae-9715-8290a730df69",
        "authorId" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "body" : "I agree. I was just raising a question on the API design. I'm fine either way.",
        "createdAt" : "2021-03-24T14:47:06Z",
        "updatedAt" : "2021-03-24T14:47:07Z",
        "lastEditedBy" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "b91fae112a6ccf396a36faa2af531216651d5016",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +55,59 @@  def apply[F[_]](\n      strategy: Strategy,\n      bound: Int\n  )(implicit GC: GenConcurrent[F, Throwable]): F[Backpressure[F]] = {\n    require(bound > 0)"
  },
  {
    "id" : "3442b8ca-8df4-44e8-954f-51da0bc52dd1",
    "prId" : 1817,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/1817#pullrequestreview-655057891",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5dec2487-de17-435c-b37e-189249bfff47",
        "parentId" : null,
        "authorId" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "body" : "Would it be better to raise than throw here?  I'm surprised to find `require` in the code in a couple places, so there is precedent for this.",
        "createdAt" : "2021-05-09T04:41:03Z",
        "updatedAt" : "2021-05-09T04:45:19Z",
        "lastEditedBy" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "tags" : [
        ]
      },
      {
        "id" : "b18db1c0-30a4-4c57-a636-59cd66aaedef",
        "parentId" : "5dec2487-de17-435c-b37e-189249bfff47",
        "authorId" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "body" : "Yeah... these instances exist because of the `GenConcurrent` constraint...",
        "createdAt" : "2021-05-09T09:11:14Z",
        "updatedAt" : "2021-05-09T09:11:15Z",
        "lastEditedBy" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "b91fae112a6ccf396a36faa2af531216651d5016",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@      bound: Int\n  )(implicit GC: GenConcurrent[F, Throwable]): F[Backpressure[F]] = {\n    require(bound > 0)\n    Semaphore[F](bound.toLong).map(sem =>\n      strategy match {"
  },
  {
    "id" : "65b691e3-fa5a-44eb-9642-a12a08e6dc02",
    "prId" : 1817,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/1817#pullrequestreview-655039770",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "265a9a04-69a5-4a92-9b5d-3bac02cff6ac",
        "parentId" : null,
        "authorId" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "body" : "Could cache this value so it doesn't need to be recreated on every backpressured call, at the expense of always creating it once.",
        "createdAt" : "2021-05-09T04:45:05Z",
        "updatedAt" : "2021-05-09T04:45:19Z",
        "lastEditedBy" : "19f1b7b0-eaed-49a1-9ac5-80ac65598c75",
        "tags" : [
        ]
      }
    ],
    "commit" : "b91fae112a6ccf396a36faa2af531216651d5016",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +67,71 @@                .bracket {\n                  case true => f.map(_.some)\n                  case false => none[A].pure[F]\n                } {\n                  case true => sem.release"
  }
]