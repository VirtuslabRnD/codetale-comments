[
  {
    "id" : "d9fb4473-3694-4496-a5b2-8095981878c0",
    "prId" : 3960,
    "prUrl" : "https://github.com/zio/zio/pull/3960#pullrequestreview-446838241",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0ed73e2-c32f-4e18-8d5d-262684d91be2",
        "parentId" : null,
        "authorId" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "body" : "Could you also add a test for a type parameter in contravariant position, e.g.\r\n```scala\r\ntrait Service[-R] {\r\n  def r: RIO[R, Unit]\r\n}\r\n```\r\n?",
        "createdAt" : "2020-07-11T23:37:28Z",
        "updatedAt" : "2020-07-12T00:50:52Z",
        "lastEditedBy" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "tags" : [
        ]
      },
      {
        "id" : "a36cddba-87da-4807-965a-330f36476655",
        "parentId" : "b0ed73e2-c32f-4e18-8d5d-262684d91be2",
        "authorId" : "a0f77c36-53c4-4b23-a5eb-2b02260e2025",
        "body" : "Added a test. Had to update the TypeDef modifiers for Service type params to avoid the generation of def foo[-R], etc.\r\nI'm not sure if it is efficient enough.",
        "createdAt" : "2020-07-12T00:58:31Z",
        "updatedAt" : "2020-07-12T00:58:31Z",
        "lastEditedBy" : "a0f77c36-53c4-4b23-a5eb-2b02260e2025",
        "tags" : [
        ]
      }
    ],
    "commit" : "522f2d2f84e04532f1d59389647bdee67514bb08",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +178,182 @@             @accessible\n             object Module {\n               trait Service[T <: Foo, U >: Bar] {\n                 val v: Task[T]\n                 def f1: UIO[U]"
  }
]