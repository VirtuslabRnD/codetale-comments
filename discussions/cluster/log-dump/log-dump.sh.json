[
  {
    "id" : "66518d36-7085-48e0-9cc8-c1f29a87c78c",
    "prId" : 89825,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89825#pullrequestreview-388218704",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca2d75fe-adda-442c-9f68-41a5d9f069ad",
        "parentId" : null,
        "authorId" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "body" : "Let's \"log\" (echo?) that we hit the timeout and we'll be finishing shortly.",
        "createdAt" : "2020-04-06T10:40:22Z",
        "updatedAt" : "2020-04-06T12:53:47Z",
        "lastEditedBy" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "tags" : [
        ]
      },
      {
        "id" : "4dd4fb97-e6c3-4542-a59e-18ea2b5be403",
        "parentId" : "ca2d75fe-adda-442c-9f68-41a5d9f069ad",
        "authorId" : "ce2fea4f-8128-4d58-8c5a-8c172f4d69bd",
        "body" : "Done.",
        "createdAt" : "2020-04-06T12:54:02Z",
        "updatedAt" : "2020-04-06T12:54:03Z",
        "lastEditedBy" : "ce2fea4f-8128-4d58-8c5a-8c172f4d69bd",
        "tags" : [
        ]
      }
    ],
    "commit" : "15160168e533d0892262332673b0ee0bd5bae683",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +448,452 @@      if [[ -n \"${log_dump_ssh_timeout_seconds}\" && $((now - start)) -gt ${log_dump_ssh_timeout_seconds} ]]; then\n        echo \"WARNING: Hit timeout after ${log_dump_ssh_timeout_seconds} seconds, finishing log dumping over SSH shortly\"\n        break\n      fi\n    fi"
  },
  {
    "id" : "166d5240-0be1-4ebf-b0cc-89040445491a",
    "prId" : 89634,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89634#pullrequestreview-383909308",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f3cb75f-8c3d-4d66-9a24-4b86d04da84a",
        "parentId" : null,
        "authorId" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "body" : "QQ, do we use logexporter for dumping logs from windows nodes or only ssh?",
        "createdAt" : "2020-03-30T09:43:45Z",
        "updatedAt" : "2020-03-30T09:43:45Z",
        "lastEditedBy" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "tags" : [
        ]
      },
      {
        "id" : "d38c5eac-7654-4c7c-9187-080b90391e70",
        "parentId" : "4f3cb75f-8c3d-4d66-9a24-4b86d04da84a",
        "authorId" : "38767ab2-758a-47f0-881e-e3f89bb25b54",
        "body" : "Only ssh, as we don't have a good logexporter for windows yet.",
        "createdAt" : "2020-03-30T09:50:15Z",
        "updatedAt" : "2020-03-30T09:50:16Z",
        "lastEditedBy" : "38767ab2-758a-47f0-881e-e3f89bb25b54",
        "tags" : [
        ]
      },
      {
        "id" : "18538446-e224-4193-9b21-f4263b828c92",
        "parentId" : "4f3cb75f-8c3d-4d66-9a24-4b86d04da84a",
        "authorId" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "body" : "SG, thanks for explaining!",
        "createdAt" : "2020-03-30T14:26:10Z",
        "updatedAt" : "2020-03-30T14:26:18Z",
        "lastEditedBy" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "tags" : [
        ]
      }
    ],
    "commit" : "735ab684ce5e6fdae880f122ca8bed3a95bad856",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +55,59 @@readonly dump_systemd_journal=\"${LOG_DUMP_SYSTEMD_JOURNAL:-false}\"\n# Log files found in WINDOWS_LOGS_DIR on Windows nodes:\nreadonly windows_node_logfiles=\"kubelet.log kube-proxy.log docker.log docker_images.log\"\n# Log files found in other directories on Windows nodes:\nreadonly windows_node_otherfiles=\"C:\\\\Windows\\\\MEMORY.dmp\""
  },
  {
    "id" : "899ef671-bab7-4a07-9cd7-682fbccebcef",
    "prId" : 88349,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88349#pullrequestreview-363194751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67692f2d-dc17-42ea-8e90-7c4844442185",
        "parentId" : null,
        "authorId" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "body" : "Quotes are superfluous when assigning from other variable.\r\nYou can test that e.g. by typing:\r\n\r\n$ a='foo bar'\r\n$ b=$a\r\n$ echo $b\r\nfoo bar\r\n$",
        "createdAt" : "2020-02-24T07:07:47Z",
        "updatedAt" : "2020-08-28T07:35:18Z",
        "lastEditedBy" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "742701622abe36e4e8914db168c1ff926f479da6",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +140,144 @@    local -r node_name=\"${1}\"\n    local -r dir=\"${2}\"\n    local save_files=\"${3}\"\n    local opt_systemd_services=\"${4:-\"\"}\"\n    local on_master=\"${5:-\"false\"}\""
  },
  {
    "id" : "03286c9f-cd50-4dca-9da3-c5f80bfc1448",
    "prId" : 88349,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88349#pullrequestreview-477405229",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a3024a6-60eb-4347-a952-8e44eb1fc838",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "Unless I'm missing where this gets initialized? Follows pattern used by `NON_LOGEXPORTED_NODES` above\r\n```suggestion\r\n    NODE_NAMES=()\r\n    while IFS='' read -r line; do NODE_NAMES+=(\"$line\"); done < <(log_dump_custom_get_instances node)\r\n```",
        "createdAt" : "2020-08-27T22:39:04Z",
        "updatedAt" : "2020-08-28T07:35:18Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "ea2a29fd-52cd-480e-add9-f4e0c71c1809",
        "parentId" : "1a3024a6-60eb-4347-a952-8e44eb1fc838",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "fixed",
        "createdAt" : "2020-08-28T07:35:39Z",
        "updatedAt" : "2020-08-28T07:35:39Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "742701622abe36e4e8914db168c1ff926f479da6",
    "line" : 199,
    "diffHunk" : "@@ -1,1 +491,495 @@    echo \"Dumping logs for nodes provided by log_dump_custom_get_instances() function\"\n    NODE_NAMES=()\n    while IFS='' read -r line; do NODE_NAMES+=(\"$line\"); done < <(log_dump_custom_get_instances node)\n  else\n    echo \"Detecting nodes in the cluster\""
  },
  {
    "id" : "58a72ad8-d3fd-42b9-8d16-d7a7fa0cc329",
    "prId" : 88022,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88022#pullrequestreview-369846001",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42b3b7b1-c06c-41b9-b995-d420d9cea337",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "```suggestion\r\n        --command \"${powershell_cmd}\"; then\r\n```\r\nUse braced variable expansions.\r\n\r\nhttps://google.github.io/styleguide/shellguide.html#s5.6-variable-expansion",
        "createdAt" : "2020-03-05T19:20:42Z",
        "updatedAt" : "2020-03-05T19:20:42Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c27fb4bad6f59d7aef224f51238fefc7d62fca6c",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +230,234 @@    for retry in {1..3}; do\n      if gcloud compute ssh --project \"${PROJECT}\" --zone \"${ZONE}\" \"${node}\" \\\n        --command \"$powershell_cmd\"; then\n        break\n      else"
  },
  {
    "id" : "bf86f044-87a9-4983-b0ef-51bb20dccae1",
    "prId" : 87786,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87786#pullrequestreview-352685361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8741d97-cd13-45e8-8fc2-b70fe71abeb8",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "unnecessary change?",
        "createdAt" : "2020-02-04T02:07:51Z",
        "updatedAt" : "2020-02-04T02:07:51Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "97eed70d743fad780bf30ca9d8fbb531af6436f5",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +223,227 @@    local node=\"${1}\"\n    local dest_dir=\"${2}\"\n\n    gcloud compute instances add-metadata ${node} --metadata enable-diagnostics=true --project=${PROJECT} --zone=${ZONE}\n    local logs_archive_in_gcs=$(gcloud alpha compute diagnose export-logs ${node} --zone=${ZONE} --project=${PROJECT} | tail -n 1)"
  },
  {
    "id" : "b9f8e51f-310d-46a0-8729-0972c3cc74e7",
    "prId" : 83604,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83604#pullrequestreview-298537504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1895516a-a205-415f-9f83-cbecb838bed9",
        "parentId" : null,
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "shellcheck detects SC2206.\r\n```\r\nIn ./cluster/log-dump/log-dump.sh line 107:\r\n    local files=( ${3} )\r\n                  ^--^ SC2206: Quote to prevent word splitting, or split robustly with mapfile or read -a.\r\n```",
        "createdAt" : "2019-10-08T05:19:54Z",
        "updatedAt" : "2019-11-12T07:52:01Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e99a325d4e93dc604dd8299800ad4941d10f29ea",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +105,109 @@    local -r node=\"${1}\"\n    local -r dir=\"${2}\"\n    read -r -a files <<< \"${3}\"\n    # Append \"*\"\n    # The * at the end is needed to also copy rotated logs (which happens"
  },
  {
    "id" : "d8809fda-094b-49fc-9fe6-1c568bd28df1",
    "prId" : 83604,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83604#pullrequestreview-298537504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a770732-7499-4bf3-8bed-b370ebf46c21",
        "parentId" : null,
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "shellcheck detects the following failure. But I don't think that `files` in `save-log()` is used as an array.\r\nshellcheck might recognize `files` in `save-log()` and `files` in `copy-logs-from-node()` are the same variable.\r\nTo avoid that, I changed variable name.\r\n```\r\nIn ./cluster/log-dump/log-dump.sh line 139:\r\n    local files=\"${3}\"\r\n          ^---^ SC2178: Variable was used as an array but is now assigned a string.\r\n```",
        "createdAt" : "2019-10-08T05:29:16Z",
        "updatedAt" : "2019-11-12T07:52:01Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e99a325d4e93dc604dd8299800ad4941d10f29ea",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +138,142 @@    local -r node_name=\"${1}\"\n    local -r dir=\"${2}\"\n    local save_files=\"${3}\"\n    local opt_systemd_services=\"${4:-\"\"}\"\n    local on_master=\"${5:-\"false\"}\""
  },
  {
    "id" : "c92748b6-66c0-4084-b690-8de6039f3c3f",
    "prId" : 83604,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83604#pullrequestreview-298537504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00e19081-c60b-4214-9648-d99c38e1cc5c",
        "parentId" : null,
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "shellcheck detects SC2206.\r\n```\r\nIn ./cluster/log-dump/log-dump.sh line 157:\r\n    local -r services=( ${systemd_services} ${opt_systemd_services} ${LOG_DUMP_SAVE_SERVICES:-} )\r\n                        ^-----------------^ SC2206: Quote to prevent word splitting, or split robustly with mapfile or read -a.\r\n                                            ^---------------------^ SC2206: Quote to prevent word splitting, or split robustly with mapfile or read -a.\r\n                                                                    ^-------------------------^ SC2206: Quote to prevent word splitting, or split robustly with mapfile or read -a.\r\n```",
        "createdAt" : "2019-10-08T05:30:08Z",
        "updatedAt" : "2019-11-12T07:52:01Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e99a325d4e93dc604dd8299800ad4941d10f29ea",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +156,160 @@      esac\n    fi\n    read -r -a services <<< \"${systemd_services} ${opt_systemd_services} ${LOG_DUMP_SAVE_SERVICES:-}\"\n\n    if log-dump-ssh \"${node_name}\" \"command -v journalctl\" &> /dev/null; then"
  },
  {
    "id" : "f7b2b977-f79b-4f67-959f-7739d04a601a",
    "prId" : 83604,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83604#pullrequestreview-298552836",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a700c62-79f0-4b31-a968-214ada36866b",
        "parentId" : null,
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "shellcheck detects SC2068.\r\n```\r\nIn ./cluster/log-dump/log-dump.sh line 236:\r\n    for file in ${windows_node_logfiles[@]}; do\r\n                ^-------------------------^ SC2068: Double quote array expansions to avoid re-splitting elements.\r\n```",
        "createdAt" : "2019-10-08T05:34:46Z",
        "updatedAt" : "2019-11-12T07:52:01Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      },
      {
        "id" : "ba2c11fd-d209-49b3-a5dd-a11baf42440f",
        "parentId" : "8a700c62-79f0-4b31-a968-214ada36866b",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "er, why didn't we add quotes then??\r\nhttps://github.com/koalaman/shellcheck/wiki/SC2068",
        "createdAt" : "2019-10-08T05:57:44Z",
        "updatedAt" : "2019-11-12T07:52:01Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "be4a2717-d4ed-449e-abb8-640c7a6053f5",
        "parentId" : "8a700c62-79f0-4b31-a968-214ada36866b",
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "```\r\nreadonly windows_node_logfiles=\"kubelet.log kube-proxy.log docker.log\"\r\n```\r\nThe original code expects this value to be separated by a space.\r\nHowever, if we add quotes, it will not be split. So, I changed as the above.",
        "createdAt" : "2019-10-08T06:25:41Z",
        "updatedAt" : "2019-11-12T07:52:01Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e99a325d4e93dc604dd8299800ad4941d10f29ea",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +252,256 @@\n    local remote_files=()\n    for file in ${windows_node_logfiles}; do\n      remote_files+=( \"${WINDOWS_LOGS_DIR}\\\\${file}\" )\n    done"
  },
  {
    "id" : "1b190788-25f5-4aed-8703-bc5569b7449a",
    "prId" : 83604,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83604#pullrequestreview-298537504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "339db81c-5a85-463b-882f-3f9940038ede",
        "parentId" : null,
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "shellcheck detects SC2207.\r\n```\r\nIn ./cluster/log-dump/log-dump.sh line 274:\r\n    master_names=( $(log_dump_custom_get_instances master) )\r\n                   ^-- SC2207: Prefer mapfile or read -a to split command output (or quote to avoid splitting).\r\n```",
        "createdAt" : "2019-10-08T05:35:51Z",
        "updatedAt" : "2019-11-12T07:52:01Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e99a325d4e93dc604dd8299800ad4941d10f29ea",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +309,313 @@  local master_names\n  if [[ -n \"${use_custom_instance_list}\" ]]; then\n    while IFS='' read -r line; do master_names+=(\"$line\"); done < <(log_dump_custom_get_instances master)\n  elif [[ ! \"${master_ssh_supported_providers}\" =~ ${KUBERNETES_PROVIDER} ]]; then\n    echo \"Master SSH not supported for ${KUBERNETES_PROVIDER}\""
  },
  {
    "id" : "22ac96a9-1ae5-4786-98b8-76b786e4ef7b",
    "prId" : 83604,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83604#pullrequestreview-298537504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24047444-2915-4fc6-8c2e-fd1f3eabd76c",
        "parentId" : null,
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "```\r\nIn ./cluster/log-dump/log-dump.sh line 326:\r\n    node_names=( $(log_dump_custom_get_instances node) )\r\n                 ^-- SC2207: Prefer mapfile or read -a to split command output (or quote to avoid splitting).\r\n```",
        "createdAt" : "2019-10-08T05:36:44Z",
        "updatedAt" : "2019-11-12T07:52:01Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e99a325d4e93dc604dd8299800ad4941d10f29ea",
    "line" : 167,
    "diffHunk" : "@@ -1,1 +361,365 @@  elif [[ -n \"${use_custom_instance_list}\" ]]; then\n    echo \"Dumping logs for nodes provided by log_dump_custom_get_instances() function\"\n    while IFS='' read -r line; do node_names+=(\"$line\"); done < <(log_dump_custom_get_instances node)\n  elif [[ ! \"${node_ssh_supported_providers}\" =~ ${KUBERNETES_PROVIDER} ]]; then\n    echo \"Node SSH not supported for ${KUBERNETES_PROVIDER}\""
  },
  {
    "id" : "e5d2593d-f318-4429-a9ba-cd8688355e4a",
    "prId" : 83604,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83604#pullrequestreview-298537504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "448722c3-da9a-4811-8cbe-5e57ccc4fceb",
        "parentId" : null,
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "```\r\nIn ./cluster/log-dump/log-dump.sh line 354:\r\n    for index in `shuf -i 0-$(( ${#node_names[*]} - 1 )) -n ${LOGDUMP_ONLY_N_RANDOM_NODES}`\r\n                 ^-- SC2006: Use $(...) notation instead of legacy backticked `...`.\r\n                                                            ^----------------------------^ SC2086: Double quote to prevent globbing and word splitting.\r\n```",
        "createdAt" : "2019-10-08T05:37:15Z",
        "updatedAt" : "2019-11-12T07:52:01Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e99a325d4e93dc604dd8299800ad4941d10f29ea",
    "line" : 177,
    "diffHunk" : "@@ -1,1 +389,393 @@  if [[ -n \"${LOGDUMP_ONLY_N_RANDOM_NODES:-}\" ]]; then\n    # We randomly choose 'LOGDUMP_ONLY_N_RANDOM_NODES' many nodes for fetching logs.\n    for index in $(shuf -i 0-$(( ${#node_names[*]} - 1 )) -n \"${LOGDUMP_ONLY_N_RANDOM_NODES}\")\n    do\n      linux_nodes_selected_for_logs+=(\"${node_names[$index]}\")"
  },
  {
    "id" : "d85cadbe-a259-4f3c-b623-d82507f63b68",
    "prId" : 83604,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83604#pullrequestreview-298537504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c5cf0ac-2e0d-43e0-bc68-cabc9761b6cf",
        "parentId" : null,
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "```\r\nIn ./cluster/log-dump/log-dump.sh line 418:\r\n    NODE_NAMES=( $(log_dump_custom_get_instances node) )\r\n                 ^-- SC2207: Prefer mapfile or read -a to split command output (or quote to avoid splitting).\r\n```",
        "createdAt" : "2019-10-08T05:37:47Z",
        "updatedAt" : "2019-11-12T07:52:01Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e99a325d4e93dc604dd8299800ad4941d10f29ea",
    "line" : 200,
    "diffHunk" : "@@ -1,1 +453,457 @@  if [[ -n \"${use_custom_instance_list}\" ]]; then\n    echo \"Dumping logs for nodes provided by log_dump_custom_get_instances() function\"\n    while IFS='' read -r line; do NODE_NAMES+=(\"$line\"); done < <(log_dump_custom_get_instances node)\n  else\n    echo \"Detecting nodes in the cluster\""
  },
  {
    "id" : "81228e9c-37d5-43a4-957e-0b2653e248a2",
    "prId" : 83604,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83604#pullrequestreview-298537504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4704834-8a88-47cb-9bb3-0392b87027df",
        "parentId" : null,
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "```\r\nIn ./cluster/log-dump/log-dump.sh line 430:\r\n  local -r service_account_credentials=\"$(cat ${GOOGLE_APPLICATION_CREDENTIALS} | base64 | tr -d '\\n')\"\r\n                                              ^-- SC2086: Double quote to prevent globbing and word splitting.\r\n                                              ^-- SC2002: Useless cat. Consider 'cmd < file | ..' or 'cmd file | ..' instead.\r\n```",
        "createdAt" : "2019-10-08T05:38:13Z",
        "updatedAt" : "2019-11-12T07:52:01Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e99a325d4e93dc604dd8299800ad4941d10f29ea",
    "line" : 209,
    "diffHunk" : "@@ -1,1 +465,469 @@\n  # Obtain parameters required by logexporter.\n  local -r service_account_credentials=\"$(base64 \"${GOOGLE_APPLICATION_CREDENTIALS}\" | tr -d '\\n')\"\n  local -r cloud_provider=\"${KUBERNETES_PROVIDER}\"\n  local -r enable_hollow_node_logs=\"${ENABLE_HOLLOW_NODE_LOGS:-false}\""
  },
  {
    "id" : "252855d3-d86b-4894-a514-bf6934b1b0db",
    "prId" : 83604,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83604#pullrequestreview-298537504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5c6b52e-c76c-4ece-ac92-8af26d2da39e",
        "parentId" : null,
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "shellcheck detects SC2030 and SC2031. To avoid that, I remove pipe.\r\n```\r\nIn ./cluster/log-dump/log-dump.sh line 480:\r\n    proc=$((proc - 1))\r\n    ^--^ SC2030: Modification of proc is local (to subshell caused by pipeline).\r\n```\r\n```\r\nIn ./cluster/log-dump/log-dump.sh line 487:\r\n  if [[ proc -gt 0 && proc -lt ${max_dump_processes} ]]; then\r\n        ^--^ SC2031: proc was modified in a subshell. That change might be lost.\r\n                      ^--^ SC2031: proc was modified in a subshell. That change might be lost.\r\n```",
        "createdAt" : "2019-10-08T05:46:37Z",
        "updatedAt" : "2019-11-12T07:52:01Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e99a325d4e93dc604dd8299800ad4941d10f29ea",
    "line" : 232,
    "diffHunk" : "@@ -1,1 +520,524 @@      wait\n    fi\n  done < <(\"${KUBECTL}\" get pods -n \"${logexporter_namespace}\" -o jsonpath='{range .items[*]}{.metadata.name}{\"\\t\"}{.spec.nodeName}{\"\\n\"}{end}')\n  # Wait for any remaining processes.\n  if [[ proc -gt 0 && proc -lt ${max_dump_processes} ]]; then"
  },
  {
    "id" : "3ebb9573-dd19-4a7c-a4a7-255663b8f392",
    "prId" : 83604,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83604#pullrequestreview-300980130",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3ea2b8b-4736-490a-95a3-61a7bed9e103",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "we're _removing_ quotes??",
        "createdAt" : "2019-10-08T05:57:00Z",
        "updatedAt" : "2019-11-12T07:52:01Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "bcb73b2f-5b88-4a2c-82ec-ca7ff6608b46",
        "parentId" : "b3ea2b8b-4736-490a-95a3-61a7bed9e103",
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "Thanks for the response. We can remove from the below.\r\n```\r\nIn ./cluster/log-dump/log-dump.sh line 90:\r\n  if [[ \"${gcloud_supported_providers}\" =~ \"${KUBERNETES_PROVIDER}\" ]]; then\r\n                                           ^----------------------^ SC2076: Don't quote right-hand side of =~, it'll match literally rather than as a regex.\r\n```\r\n\r\nI've checked the behavior using the following sample script.\r\n```\r\n#!/bin/bash\r\n\r\nreadonly gcloud_supported_providers=\"gce gke kubernetes-anywhere\"\r\nif [[ \"${gcloud_supported_providers}\" =~ ${KUBERNETES_PROVIDER} ]]; then\r\n  echo \"ok\"\r\nfi\r\n```",
        "createdAt" : "2019-10-08T06:16:59Z",
        "updatedAt" : "2019-11-12T07:52:01Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      },
      {
        "id" : "18c0463d-68ac-49f1-bac8-aebf327979e8",
        "parentId" : "b3ea2b8b-4736-490a-95a3-61a7bed9e103",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "I see. this check is a bit of a hack, what we're actually trying to do is see if KUBERNETES_PROVIDER is in a set, but what we're doing is a regex match :this-is-fine:\r\n\r\nthis change seems reasonable",
        "createdAt" : "2019-10-12T02:18:39Z",
        "updatedAt" : "2019-11-12T07:52:01Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "e99a325d4e93dc604dd8299800ad4941d10f29ea",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +88,92 @@\nfunction log-dump-ssh() {\n  if [[ \"${gcloud_supported_providers}\" =~ ${KUBERNETES_PROVIDER} ]]; then\n    ssh-to-node \"$@\"\n    return"
  },
  {
    "id" : "6e597fff-3fb4-42c6-adfc-42e37f4802cd",
    "prId" : 83517,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83517#pullrequestreview-299128610",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7812718-74ab-46fb-8078-96e4079e7f66",
        "parentId" : null,
        "authorId" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "body" : "20 seems like a lot of retries - maybe 5 instead?",
        "createdAt" : "2019-10-06T22:56:43Z",
        "updatedAt" : "2019-10-30T23:54:09Z",
        "lastEditedBy" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "tags" : [
        ]
      },
      {
        "id" : "1b15f37b-5d8d-4ae5-ac92-9a0297876ec0",
        "parentId" : "a7812718-74ab-46fb-8078-96e4079e7f66",
        "authorId" : "38767ab2-758a-47f0-881e-e3f89bb25b54",
        "body" : "It's waiting for the diagnostics to collect all the logs and upload to GCS. And tested locally, at least 10 is enough, in case of slow network or more/bigger logs, set 20.",
        "createdAt" : "2019-10-07T17:42:50Z",
        "updatedAt" : "2019-10-30T23:54:09Z",
        "lastEditedBy" : "38767ab2-758a-47f0-881e-e3f89bb25b54",
        "tags" : [
        ]
      },
      {
        "id" : "9716fc29-8a10-48fc-99f2-e36711d5c68c",
        "parentId" : "a7812718-74ab-46fb-8078-96e4079e7f66",
        "authorId" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "body" : "Oh, so `gcloud alpha compute diagnose export-logs` is not synchronous? Maybe add a small comment to clarify this.",
        "createdAt" : "2019-10-09T00:41:52Z",
        "updatedAt" : "2019-10-30T23:54:09Z",
        "lastEditedBy" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "tags" : [
        ]
      },
      {
        "id" : "4e99c21c-408a-4582-81f6-507bf1c88401",
        "parentId" : "a7812718-74ab-46fb-8078-96e4079e7f66",
        "authorId" : "38767ab2-758a-47f0-881e-e3f89bb25b54",
        "body" : "yeah, it's fire and forget. Agree",
        "createdAt" : "2019-10-09T01:21:07Z",
        "updatedAt" : "2019-10-30T23:54:09Z",
        "lastEditedBy" : "38767ab2-758a-47f0-881e-e3f89bb25b54",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4aed0d4850ef288908f401a6efc5cfafe24169a",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +227,231 @@    local logs_archive_in_gcs=$(gcloud alpha compute diagnose export-logs ${node} --zone=${ZONE} --project=${PROJECT} | tail -n 1)\n    local temp_local_path=\"${node}.zip\"\n    for retry in {1..20}; do\n      if gsutil mv \"${logs_archive_in_gcs}\" \"${temp_local_path}\"  > /dev/null 2>&1; then\n        echo \"Downloaded diagnostics log from ${logs_archive_in_gcs}\""
  },
  {
    "id" : "8dbb3426-eec7-48f8-9805-d9b2a99ab524",
    "prId" : 83517,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83517#pullrequestreview-309583548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ac32cd5-dd4f-4063-9f6a-236f7497200c",
        "parentId" : null,
        "authorId" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "body" : "Does node need to be passed as an arg?\r\n\r\nPlease do a test run with the updated code if possible to make sure there are no errors :)",
        "createdAt" : "2019-10-30T21:55:27Z",
        "updatedAt" : "2019-10-30T23:54:09Z",
        "lastEditedBy" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "tags" : [
        ]
      },
      {
        "id" : "372d46f1-3fbd-45f8-9148-1a9d80c63bbc",
        "parentId" : "3ac32cd5-dd4f-4063-9f6a-236f7497200c",
        "authorId" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "body" : "Same thing for dest_dir",
        "createdAt" : "2019-10-30T21:55:40Z",
        "updatedAt" : "2019-10-30T23:54:09Z",
        "lastEditedBy" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "tags" : [
        ]
      },
      {
        "id" : "af10727f-3c5e-4ad5-ad12-6347c41de6f2",
        "parentId" : "3ac32cd5-dd4f-4063-9f6a-236f7497200c",
        "authorId" : "38767ab2-758a-47f0-881e-e3f89bb25b54",
        "body" : "Yeah, tested, it works fine. Looks like bash have [dynamic scoping](https://unix.stackexchange.com/questions/282557/scope-of-local-variables-in-shell-functions), the inner function have visibility to local variables of outer function. \r\nBut should pass as an arg for clarity and reliability. Will fix it.",
        "createdAt" : "2019-10-30T22:33:13Z",
        "updatedAt" : "2019-10-30T23:54:09Z",
        "lastEditedBy" : "38767ab2-758a-47f0-881e-e3f89bb25b54",
        "tags" : [
        ]
      },
      {
        "id" : "bbfd8134-3772-4e7a-aaeb-d3ac380d5fa4",
        "parentId" : "3ac32cd5-dd4f-4063-9f6a-236f7497200c",
        "authorId" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "body" : "Thanks. Bash is the worst.",
        "createdAt" : "2019-10-30T23:44:12Z",
        "updatedAt" : "2019-10-30T23:54:09Z",
        "lastEditedBy" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4aed0d4850ef288908f401a6efc5cfafe24169a",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +247,251 @@    local dest_dir=\"${2}\"\n\n    export-windows-docker-event-log \"${node}\"\n\n    local remote_files=()"
  },
  {
    "id" : "29e09253-e75c-43b3-8406-abf34900d255",
    "prId" : 74438,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74438#pullrequestreview-208279174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a1e1601-14ba-48c9-b375-02be49364ac6",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "This is fine for now, but we may want to refactor and use `copy-logs-from-node` in the future.",
        "createdAt" : "2019-02-26T21:14:55Z",
        "updatedAt" : "2019-02-26T21:14:56Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "465baa18-a591-42c7-b591-a7ed7a454698",
        "parentId" : "5a1e1601-14ba-48c9-b375-02be49364ac6",
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "shellcheck nit we can address in a followup",
        "createdAt" : "2019-02-27T00:27:06Z",
        "updatedAt" : "2019-02-27T00:40:11Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "0bb25290c8e4464e6fe1076c719a3d2d7ec18621",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +241,245 @@    # TODO(pjh, yujuhong): handle rotated logs and copying multiple files at the\n    # same time.\n    for remote_file in ${remote_files[@]}; do\n      # Retry up to 3 times to allow ssh keys to be properly propagated and\n      # stored."
  },
  {
    "id" : "31e92c1c-3537-4f02-b893-90d75fb58c0d",
    "prId" : 74438,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74438#pullrequestreview-208296753",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68b910c1-d99b-418f-89c7-9117e876752a",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "This was a new one to me, expands to list of array indices.  Took me a while to grok this was how you're gating \"should I treat this as a linux node or a windows node\".",
        "createdAt" : "2019-02-27T00:28:59Z",
        "updatedAt" : "2019-02-27T00:40:11Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "c97de94c-ccc9-479e-916a-9e49bea1433f",
        "parentId" : "68b910c1-d99b-418f-89c7-9117e876752a",
        "authorId" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "body" : "Yeah, I also learned this syntax for the first time.\r\n\r\nThe tricky part here was trying to preserve / take advantage of the max_dump_processes code below. This necessitated using just a single loop, so appending the Windows nodes after the Linux nodes in this array and using the index to tell the difference was the cleanest approach I could come up with.\r\n\r\nAlternatively we could iterate over the Linux and Windows node arrays separately, but I didn't see an obvious way to update the max_dump_processes part so that all the log saving would happen in parallel. I can look into this further or I'm open to suggestions if desired.",
        "createdAt" : "2019-02-27T01:30:25Z",
        "updatedAt" : "2019-02-27T01:30:25Z",
        "lastEditedBy" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "tags" : [
        ]
      }
    ],
    "commit" : "0bb25290c8e4464e6fe1076c719a3d2d7ec18621",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +363,367 @@\n  proc=${max_dump_processes}\n  for i in \"${!all_selected_nodes[@]}\"; do\n    node_name=\"${all_selected_nodes[$i]}\"\n    node_dir=\"${report_dir}/${node_name}\""
  },
  {
    "id" : "bbe127e0-efb8-4c88-94fa-c4524cd50b4f",
    "prId" : 71456,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71456#pullrequestreview-178802903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d255d991-1e80-40f0-96a1-bbcec0390171",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "This looks great.\r\nMy only question here is - what is the estimation on the time it takes to run this command? This pretty much goes over activity log on all nodes, which for 5k-node clusters may be quite a lot.\r\nDid you try running that on larger clusters?",
        "createdAt" : "2018-11-27T14:02:45Z",
        "updatedAt" : "2018-11-27T14:14:08Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "9f2cf26e-5ae0-47f7-aa27-fd898520ef1f",
        "parentId" : "d255d991-1e80-40f0-96a1-bbcec0390171",
        "authorId" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "body" : "It takes ~20 seconds per instance group. So approx. 1 minute for all of them.",
        "createdAt" : "2018-11-27T14:14:29Z",
        "updatedAt" : "2018-11-27T14:14:29Z",
        "lastEditedBy" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "tags" : [
        ]
      },
      {
        "id" : "7cea82e4-20ac-42d5-92ab-03d172baa974",
        "parentId" : "d255d991-1e80-40f0-96a1-bbcec0390171",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Cool - thanks.",
        "createdAt" : "2018-11-27T14:16:16Z",
        "updatedAt" : "2018-11-27T14:16:16Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0514aa17a67525ca2a0d721999a6a3f515577c46",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +450,454 @@           (jsonPayload.event_subtype=\\\"compute.instances.hostError\\\" OR jsonPayload.event_subtype=\\\"compute.instances.automaticRestart\\\")\n           jsonPayload.resource.name:\\\"${group}\\\"\n           timestamp >= \\\"${creation_timestamp}\\\"\"\n  done\n}"
  },
  {
    "id" : "490bfd4b-d6e3-44bd-ad5c-686051ebddbb",
    "prId" : 65139,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65139#pullrequestreview-129527696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3c06191-3746-45f3-af38-0aa01b1a4511",
        "parentId" : null,
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Looks much cleaner now.. thanks!",
        "createdAt" : "2018-06-18T11:50:42Z",
        "updatedAt" : "2018-06-18T12:29:22Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      }
    ],
    "commit" : "43d217f904544fdd1a7046a43c83163a72fed23c",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +340,344 @@      break\n    fi\n    if find_non_logexported_nodes; then\n      if [[ -z \"${NON_LOGEXPORTED_NODES:-}\" ]]; then\n        break"
  },
  {
    "id" : "80da302d-8324-49dc-9c8a-5df173ff5f5a",
    "prId" : 54623,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54623#pullrequestreview-72262737",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2996c27c-8272-46c7-96de-c8e1d478b7cf",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "kube-anywhere as a provider?  what?  Most of these values are to detect cloud provider changes.  I srsly do not want to crib kube-anywhere as a provider. \r\n",
        "createdAt" : "2017-10-26T16:28:17Z",
        "updatedAt" : "2017-10-26T16:28:18Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "1a032cf5-3738-42be-8e4a-7aa2e21e2506",
        "parentId" : "2996c27c-8272-46c7-96de-c8e1d478b7cf",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "It's been there in the current CI jobs for a while\r\n\r\nhttps://github.com/kubernetes/test-infra/blob/master/images/kubeadm/Dockerfile#L28\r\n\r\nAlso see a recent run, look for `--provider=kubernetes-anywhere` and `KUBERNETES_PROVIDER=kubernetes-anywhere`\r\n\r\nhttps://storage.googleapis.com/kubernetes-jenkins/pr-logs/pull/54584/pull-kubernetes-e2e-kubeadm-gce/8640/build-log.txt\r\n\r\nNot introducing anything new here. just surfacing it. The \"normal\" GCE jobs have a different names for the nodes vs the kubernetes-anywhere/GCE jobs \r\n\r\n",
        "createdAt" : "2017-10-26T16:42:33Z",
        "updatedAt" : "2017-10-26T16:42:33Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a217217c13dd85ecc6b6c4dca5efc705aba48bb",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +142,146 @@    else\n      case \"${KUBERNETES_PROVIDER}\" in\n        gce|gke|kubernetes-anywhere)\n          files=\"${files} ${gce_logfiles}\"\n          ;;"
  },
  {
    "id" : "95dab216-0485-41ec-8f5c-15f2b168620a",
    "prId" : 54623,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54623#pullrequestreview-72657129",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3df79977-38b0-4ece-85ec-40e2b0da089d",
        "parentId" : null,
        "authorId" : "54e3a0fb-3604-4ac3-a689-61e42933ae67",
        "body" : "Note that kubernetes anywhere tests are pretending to be a 'gce' provider when calling this log logic. Depending on what you are trying to do, you may need to change that (or add to it).\r\n\r\nhttps://github.com/kubernetes/test-infra/blob/master/kubetest/anywhere.go#L273",
        "createdAt" : "2017-10-28T00:30:33Z",
        "updatedAt" : "2017-10-28T00:30:43Z",
        "lastEditedBy" : "54e3a0fb-3604-4ac3-a689-61e42933ae67",
        "tags" : [
        ]
      },
      {
        "id" : "4efd833d-4273-49c1-bf47-345f9b01bcbd",
        "parentId" : "3df79977-38b0-4ece-85ec-40e2b0da089d",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@jessicaochen yep, am fixing that in the companion PR https://github.com/kubernetes/test-infra/pull/5164",
        "createdAt" : "2017-10-28T00:36:55Z",
        "updatedAt" : "2017-10-28T00:36:55Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a217217c13dd85ecc6b6c4dca5efc705aba48bb",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +142,146 @@    else\n      case \"${KUBERNETES_PROVIDER}\" in\n        gce|gke|kubernetes-anywhere)\n          files=\"${files} ${gce_logfiles}\"\n          ;;"
  },
  {
    "id" : "884bdb11-b54c-4cde-8e61-a0522dae04f9",
    "prId" : 54623,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54623#pullrequestreview-72657479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7fafaa4-bc2b-4502-8034-4d16103cf9a1",
        "parentId" : null,
        "authorId" : "54e3a0fb-3604-4ac3-a689-61e42933ae67",
        "body" : "As a heads up, a bug I ran into iterating on the cluster log dump logic is a nil pointer reference:\r\n```\r\n\tvar cmd *exec.Cmd\r\n\t// Temporarily set the provider to be gce for the purposes of log dumping.\r\n\tcmd.Env = os.Environ()\r\n\tcmd.Env = append(cmd.Env, \"KUBERNETES_PROVIDER=gce\")\r\n\tif gcsPath != \"\" {\r\n\t\tlog.Printf(\"Dumping logs from nodes to GCS directly at path: %v\", gcsPath)\r\n\t\tcmd = exec.Command(logDumpPath, localPath, gcsPath)\r\n\t} else {\r\n\t\tlog.Printf(\"Dumping logs locally to: %v\", localPath)\r\n\t\tcmd = exec.Command(logDumpPath, localPath)\r\n\t}\r\n\treturn finishRunning(cmd)\r\n```\r\n\r\nIt will need to be fixed with something like this:\r\n```\r\n\tvar cmd *exec.Cmd\r\n\tif gcsPath != \"\" {\r\n\t\tlog.Printf(\"Dumping logs from nodes to GCS directly at path: %v\", gcsPath)\r\n\t\tcmd = exec.Command(logDumpPath, localPath, gcsPath)\r\n\t} else {\r\n\t\tlog.Printf(\"Dumping logs locally to: %v\", localPath)\r\n\t\tcmd = exec.Command(logDumpPath, localPath)\r\n\t}\r\n\t// Temporarily set the provider to be gce for the purposes of log dumping.\r\n\tcmd.Env = os.Environ()\r\n\tcmd.Env = append(cmd.Env, \"KUBERNETES_PROVIDER=gce\")\r\n\treturn finishRunning(cmd)\r\n```\r\n\r\nhttps://github.com/kubernetes/test-infra/blob/c24a882fca1afb589a82549d9f0b88f3f6b28697/kubetest/anywhere.go#L272",
        "createdAt" : "2017-10-28T00:38:50Z",
        "updatedAt" : "2017-10-28T00:38:50Z",
        "lastEditedBy" : "54e3a0fb-3604-4ac3-a689-61e42933ae67",
        "tags" : [
        ]
      },
      {
        "id" : "6c8d6cb7-f9ef-4771-bba1-05ae69b2e2de",
        "parentId" : "d7fafaa4-bc2b-4502-8034-4d16103cf9a1",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@jessicaochen i am removing the whole back out. PTAL at kubernetes/test-infra#5164",
        "createdAt" : "2017-10-28T00:43:01Z",
        "updatedAt" : "2017-10-28T00:43:01Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a217217c13dd85ecc6b6c4dca5efc705aba48bb",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +142,146 @@    else\n      case \"${KUBERNETES_PROVIDER}\" in\n        gce|gke|kubernetes-anywhere)\n          files=\"${files} ${gce_logfiles}\"\n          ;;"
  },
  {
    "id" : "3c1cd5fa-937a-490b-922f-fbb5dec1706d",
    "prId" : 51834,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51834#pullrequestreview-62282113",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26c850df-00d0-44dd-9ec7-7be56b95adaf",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Er, no. This is wrong. If there's no `LOG_DUMP_SSH_KEY`, `use_custom_instance_list` can't work. Can we undo this PR instead?",
        "createdAt" : "2017-09-12T21:47:37Z",
        "updatedAt" : "2017-09-12T21:47:49Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "d87aacfe-d5a8-44b0-becd-a6d8507b002f",
        "parentId" : "26c850df-00d0-44dd-9ec7-7be56b95adaf",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Please see below. We don't need the the ssh key in case of gke (even if we're using `use_custom_instances_list`).",
        "createdAt" : "2017-09-12T22:10:33Z",
        "updatedAt" : "2017-09-12T22:10:33Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      },
      {
        "id" : "53da885a-8028-40f1-be7f-8e3638f72ece",
        "parentId" : "26c850df-00d0-44dd-9ec7-7be56b95adaf",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "I'm not going to argue this anymore, but we really shouldn't be using the gcloud assumptions.",
        "createdAt" : "2017-09-12T22:13:46Z",
        "updatedAt" : "2017-09-12T22:13:46Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "a31703631fb9a4032c70f38b19ae98c10b3a236c",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +66,70 @@    detect-project 2>&1\n  elif [[ \"${KUBERNETES_PROVIDER}\" == \"gke\" ]]; then\n    echo \"Using 'use_custom_instance_list' with gke, skipping check for LOG_DUMP_SSH_KEY and LOG_DUMP_SSH_USER\"\n  elif [[ -z \"${LOG_DUMP_SSH_KEY:-}\" ]]; then\n    echo \"LOG_DUMP_SSH_KEY not set, but required when using log_dump_custom_get_instances\""
  },
  {
    "id" : "dc17043d-d9f1-460b-8450-9ff4f981b79f",
    "prId" : 51834,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51834#pullrequestreview-62282011",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20743b06-176a-4573-9c66-2cb23458bb9c",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "I wish this wasn't also part of the PR. One issue at at a time, please. :)",
        "createdAt" : "2017-09-12T21:48:21Z",
        "updatedAt" : "2017-09-12T21:48:21Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "d5e317e7-570d-4ce1-a496-4472e7b1fbb1",
        "parentId" : "20743b06-176a-4573-9c66-2cb23458bb9c",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "This is part of the same issue. The point was to use 'gcloud ssh' for all gcloud supported providers (even though there's a custom_instance_list).\r\nAnd this is the right behaviour - we shouldn't use gcloud just because we're using custom instance list (as the provider might be some non-gcloud one like aws).",
        "createdAt" : "2017-09-12T22:13:15Z",
        "updatedAt" : "2017-09-12T22:13:15Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      }
    ],
    "commit" : "a31703631fb9a4032c70f38b19ae98c10b3a236c",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +106,110 @@    if [[ \"${gcloud_supported_providers}\" =~ \"${KUBERNETES_PROVIDER}\" ]]; then\n      # get-serial-port-output lets you ask for ports 1-4, but currently (11/21/2016) only port 1 contains useful information\n      gcloud compute instances get-serial-port-output --project \"${PROJECT}\" --zone \"${ZONE}\" --port 1 \"${node}\" > \"${dir}/serial-1.log\" || true\n      gcloud compute scp --recurse --project \"${PROJECT}\" --zone \"${ZONE}\" \"${node}:${scp_files}\" \"${dir}\" > /dev/null || true\n    elif  [[ \"${KUBERNETES_PROVIDER}\" == \"aws\" ]]; then"
  },
  {
    "id" : "8cfc9122-70d4-41ec-b5fc-be32e0619bb1",
    "prId" : 49426,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49426#pullrequestreview-51790758",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e8d29fd-0f2c-4053-9b78-aba886f89a44",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Why this change? If KUBECTL is defined, we should use it.",
        "createdAt" : "2017-07-24T10:16:41Z",
        "updatedAt" : "2017-07-25T14:11:41Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "c8c5d328-f204-4bba-bd91-be18f2d9f45f",
        "parentId" : "2e8d29fd-0f2c-4053-9b78-aba886f89a44",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Sometimes KUBECTL is defined as `./cluster/kubectl.sh --match-server-version`. We use that flag for some tests and we wouldn't be able to run logexporter there due to version skew (even though we're able to create daemonset). Wdyt?",
        "createdAt" : "2017-07-24T10:25:47Z",
        "updatedAt" : "2017-07-25T14:11:41Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      },
      {
        "id" : "00593123-10dc-4fec-b9ff-8dedf09a729c",
        "parentId" : "2e8d29fd-0f2c-4053-9b78-aba886f89a44",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Sorry, I don't understand. Yes, I know what KUBECT can be set to. But how is that problematic?",
        "createdAt" : "2017-07-24T14:38:07Z",
        "updatedAt" : "2017-07-25T14:11:41Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "a97b1db4-fc5a-4b98-8e95-bedfe8e4262d",
        "parentId" : "2e8d29fd-0f2c-4053-9b78-aba886f89a44",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "When it is set to \"./cluster/kubectl.sh --match-server-version\" (like here - https://github.com/kubernetes/test-infra/blob/master/kubetest/e2e.go#L33), logexporter would fail if there actually is a skew. IIUC we don't want (for the purpose of logexporter) to fail because of the skew, as we just care about uploading the logs (even if there's a skew).",
        "createdAt" : "2017-07-24T14:42:58Z",
        "updatedAt" : "2017-07-25T14:11:41Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf33e2ac7ebee199a85d7ca02e330e0e488c15eb",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +284,288 @@\n  # Create the logexporter namespace, service-account secret and the logexporter daemonset within that namespace.\n  KUBECTL=\"${KUBE_ROOT}/cluster/kubectl.sh\"\n  \"${KUBECTL}\" create -f \"${KUBE_ROOT}/cluster/log-dump/logexporter-daemonset.yaml\"\n"
  },
  {
    "id" : "d8f4df0a-4580-4220-97ce-e7d241a457dd",
    "prId" : 48651,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48651#pullrequestreview-49148703",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66416945-6af4-4e5f-a9fb-10401039bd46",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "This is a move with some changes, right? Are you sure you deleted old 'log-dump.sh', or are you leaving it there for a reason?",
        "createdAt" : "2017-07-11T08:31:12Z",
        "updatedAt" : "2017-07-12T12:40:06Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "6ecf9859-67a7-49c2-90f3-83bcc50c8e0c",
        "parentId" : "66416945-6af4-4e5f-a9fb-10401039bd46",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Not deleting the old log-dump.sh just yet because then the current kubetest (which shells out to the script) will fail. After this PR is pushed, I'll reflect the change in test-infra and push a new image. Then we can delete it.",
        "createdAt" : "2017-07-11T10:04:00Z",
        "updatedAt" : "2017-07-12T12:40:06Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f8cb3d9ff83907dc4b6727f09c24e3c2bd2816f",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@#!/bin/bash\n\n# Copyright 2017 The Kubernetes Authors."
  },
  {
    "id" : "5f4041c8-a54e-4f49-8896-2a75d7edb292",
    "prId" : 48651,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48651#pullrequestreview-49781774",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c47b52d8-2f4b-480f-b2cb-933b8c9714e0",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "What is this \"!\" here?",
        "createdAt" : "2017-07-13T13:28:59Z",
        "updatedAt" : "2017-07-13T13:29:47Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "7c519f00-d95c-490c-9619-3c764248678a",
        "parentId" : "c47b52d8-2f4b-480f-b2cb-933b8c9714e0",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "It is a convenient way of iterating through 0-(length-1). Otherwise the expression would look ugly as we have to calculate length-1.",
        "createdAt" : "2017-07-13T13:34:07Z",
        "updatedAt" : "2017-07-13T13:34:07Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      },
      {
        "id" : "f3446d3c-8221-4e62-ab54-f759e4bb0a97",
        "parentId" : "c47b52d8-2f4b-480f-b2cb-933b8c9714e0",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "OK - bash will always be surprising me.",
        "createdAt" : "2017-07-13T13:40:12Z",
        "updatedAt" : "2017-07-13T13:40:12Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "548d5373-74a8-40d7-9f9a-aa6fa15658ca",
        "parentId" : "c47b52d8-2f4b-480f-b2cb-933b8c9714e0",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Always!",
        "createdAt" : "2017-07-13T13:45:49Z",
        "updatedAt" : "2017-07-13T13:45:49Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f8cb3d9ff83907dc4b6727f09c24e3c2bd2816f",
    "line" : 321,
    "diffHunk" : "@@ -1,1 +319,323 @@  logexporter_pods=( $(echo \"${pods_and_nodes}\" | awk '{print $1}') )\n  logexporter_nodes=( $(echo \"${pods_and_nodes}\" | awk '{print $2}') )\n  for index in \"${!logexporter_pods[@]}\"; do\n    pod=\"${logexporter_pods[$index]}\"\n    node=\"${logexporter_nodes[$index]}\""
  }
]