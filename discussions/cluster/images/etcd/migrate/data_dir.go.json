[
  {
    "id" : "d6ccc66b-733a-41e7-adac-629f520ec2d9",
    "prId" : 91171,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91171#pullrequestreview-414660040",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "557b299c-a53f-44a8-81e8-c7932a2e4fdc",
        "parentId" : null,
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "Sorry to sound in late on this. The files are usually accessed via a `volumeMount` (https://github.com/kubernetes/kubernetes/blob/3446ffbb4a5328e88a75afc36a258c1f7adb1b89/cluster/gce/manifests/etcd.manifest#L77), but it would be odd for the volumeMount to allow for the files under it to span multiple filesystems/os mount points, so I think this is fine.",
        "createdAt" : "2020-05-19T16:51:52Z",
        "updatedAt" : "2020-05-19T21:05:34Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "9a500d3e-6b62-4a55-9566-3b8c2e870c77",
        "parentId" : "557b299c-a53f-44a8-81e8-c7932a2e4fdc",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "great!",
        "createdAt" : "2020-05-19T17:17:04Z",
        "updatedAt" : "2020-05-19T21:05:34Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1c2b663f0b3f1c07e06c228364f08568b2880e1",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +88,92 @@\t\treturn err\n\t}\n\terr = copyDirectory(d.path, backupDir)\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "253dc82e-8284-4b17-b1c5-05186048fea4",
    "prId" : 61241,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61241#pullrequestreview-105220561",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e5034ba-f512-4634-8f55-ff3e8cfa3748",
        "parentId" : null,
        "authorId" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "body" : "`IsEmpty()` only works correctly on the first try, because each time it's called it exhausts another directory entry from `d.dir`.",
        "createdAt" : "2018-03-19T18:31:10Z",
        "updatedAt" : "2018-04-10T16:19:43Z",
        "lastEditedBy" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "tags" : [
        ]
      },
      {
        "id" : "0310f350-670d-46ba-ac66-2fe6f34bf6fa",
        "parentId" : "1e5034ba-f512-4634-8f55-ff3e8cfa3748",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "Thanks for catching @mml! I'll rewrite this to open the file only within functions where I need it opened.",
        "createdAt" : "2018-03-19T20:24:58Z",
        "updatedAt" : "2018-04-10T16:19:43Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "b21c5156-3cb2-4143-a891-59972d33ff17",
        "parentId" : "1e5034ba-f512-4634-8f55-ff3e8cfa3748",
        "authorId" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "body" : "Actually, I think there's another level, too.  Pretty sure Readdirnames() will always return `.` and `..` even on an empty dir, except `/` has no `..`.",
        "createdAt" : "2018-03-19T20:39:18Z",
        "updatedAt" : "2018-04-10T16:19:43Z",
        "lastEditedBy" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "tags" : [
        ]
      },
      {
        "id" : "ba90934f-6cfe-41fa-83fc-2cf7b0eb4160",
        "parentId" : "1e5034ba-f512-4634-8f55-ff3e8cfa3748",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "I'll add tests. The references I was able to find to check if a directory is empty recommended this approach, but better to be safe and double check.",
        "createdAt" : "2018-03-20T04:13:43Z",
        "updatedAt" : "2018-04-10T16:19:43Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "155bf87c-cfdb-4b89-8693-e6822f52bbd8",
        "parentId" : "1e5034ba-f512-4634-8f55-ff3e8cfa3748",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "I've added checks to data_dir_test to make sure this is correct. For posterity, here's where I found the approach https://stackoverflow.com/questions/30697324/how-to-check-if-directory-on-path-is-empty.  This is one cases where I'm a annoyed golang does not offer a convenience method.",
        "createdAt" : "2018-03-20T05:15:51Z",
        "updatedAt" : "2018-04-10T16:19:43Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc4d92e1544749a755f1ead1f8111b7279e4105e",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +98,102 @@\n// IsEmpty returns true if the data directory is entirely empty.\nfunc (d *DataDirectory) IsEmpty() (bool, error) {\n\tdir, err := os.Open(d.path)\n\tif err != nil {"
  },
  {
    "id" : "99421db7-e2d5-43f5-ae6a-8a26ad38fdec",
    "prId" : 61241,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61241#pullrequestreview-107441401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cf658cb-0d54-42b7-93d0-3928ee457108",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Is there any danger that the if the version.txt file exists, its contents do not match the target and we will blithely proceed to non-deterministic/incorrect results?",
        "createdAt" : "2018-03-26T22:53:36Z",
        "updatedAt" : "2018-04-10T16:19:43Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "2815c5ab-1348-4653-9299-ce0313dbb31f",
        "parentId" : "8cf658cb-0d54-42b7-93d0-3928ee457108",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "I'm mildly concerned that the file might get out of sync at some point. The ideal situation would be to eliminate this file altogether and instead check the data files directly to determine version. We'll likely need to make some changes to etcd to provide a simple and safe way to perform this check. I'll make note of this as something we can improve in the future.",
        "createdAt" : "2018-03-27T19:47:51Z",
        "updatedAt" : "2018-04-10T16:19:43Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc4d92e1544749a755f1ead1f8111b7279e4105e",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@// Initialize set the version.txt to the target version if the data\n// directory is empty. If the data directory is non-empty, no\n// version.txt file will be written since the actual version of etcd\n// used to create the data is unknown.\nfunc (d *DataDirectory) Initialize(target *EtcdVersionPair) error {"
  }
]