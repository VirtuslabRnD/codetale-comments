[
  {
    "id" : "d57ead7c-a00a-4724-8867-41bf8eedaac8",
    "prId" : 21430,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ebebd9f5-2028-4b5d-ac9b-c9799db75694",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "why'd you keep this echo but not the one in juju?\n",
        "createdAt" : "2016-02-17T22:57:31Z",
        "updatedAt" : "2016-02-18T00:49:31Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "e659c584-144e-4ba1-9d94-80e3d930a654",
        "parentId" : "ebebd9f5-2028-4b5d-ac9b-c9799db75694",
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "It has `echo \"test-teardown\" 1>&2` in `test-teardown`, but the juju one doesn't.\n",
        "createdAt" : "2016-02-17T23:05:56Z",
        "updatedAt" : "2016-02-18T00:49:31Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b756ca56d14569be5ca2ae397fda247c7d610c1",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +318,322 @@\nfunction test-setup {\n  echo \"test-setup\" 1>&2\n  \"${KUBE_ROOT}/cluster/kube-up.sh\"\n}"
  },
  {
    "id" : "f6222909-69e0-4d5f-b1ce-0900870e1b5b",
    "prId" : 19241,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f3c5490-d3b3-4911-8300-ac2181a5e2cf",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Take a look at https://github.com/docker/docker/issues/3793#issuecomment-143592647 and https://github.com/krallin/tini to get working signals in docker-run.\n",
        "createdAt" : "2016-01-05T09:07:33Z",
        "updatedAt" : "2016-01-06T02:10:57Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "2ff9a8d0-599f-4da7-ba17-3039fc13818a",
        "parentId" : "8f3c5490-d3b3-4911-8300-ac2181a5e2cf",
        "authorId" : "ef33f76a-ca59-4720-94a5-47e86994ee8d",
        "body" : "According to https://github.com/docker/docker/issues/9351#issuecomment-158262910 the docker PID 1 only responds to SIGSTOP & SIGKILL. It is designed to be used with `docker stop` and `docker kill`. So even if you use `exec docker run -it` PID 1 (by default) ignores SIGTERM and SIGINT.  That's why we're trapping SIGTERM & SIGINT and translating them into `docker stop` which will try to gracefully stop PID 1 and then kill it if it's still up after a timeout.\n\nApparently, it's relatively easy to make bash entrypoint scripts listen for SIGTERM and SIGINT. Just add a trap. Even if the trap doesn't do anything, bash seems to pass the signal to the child process that's running:\n\n```\n$ docker run --rm -it ubuntu:14.04.3 bash -ceu \"trap - INT; sleep 30\"\n^C$\n```\n\nThis appears to work even running the docker cli in a docker container:\n\n```\n$ docker run --rm -it -v \"/var/run/docker.sock:/var/run/docker.sock\" mesosphere/kubernetes-mesos-test -ceux \"trap 'echo SIGINT-outer' INT; docker run --rm -it ubuntu:14.04.3 bash -ceux \\\"trap 'echo SIGINT-inner' INT; sleep 30\\\"\"\n+ trap 'echo SIGINT-outer' INT\n+ docker run --rm -it ubuntu:14.04.3 bash -ceux 'trap '\\''echo SIGINT-inner'\\'' INT; sleep 30'\n+ trap 'echo SIGINT-inner' INT\n+ sleep 30\n^C++ echo SIGINT-inner\nSIGINT-inner\n$\n```\n\nInterestingly, the \"SIGINT-outer\" trap is not required. As long as the \"SIGINT-inner\" trap exists, signal handling is enabled.\n\nSo it can be interrupted even before the inner `docker run` executes:\n\n```\n$ docker run --rm -it -v \"/var/run/docker.sock:/var/run/docker.sock\" mesosphere/kubernetes-mesos-test -ceux \"sleep 30; docker run --rm -it ubuntu:14.04.3 bash -ceux \\\"trap 'echo SIGINT-inner' INT; sleep 30\\\"\"\n+ sleep 30\n^C$\n```\n\nBased on this experimentation it doesn't look like `exec` is required in combination with `docker run -it`, as long as there's a SIGINT & SIGTERM trap somewhere in the entrypoint. Weird!\n",
        "createdAt" : "2016-01-05T20:46:54Z",
        "updatedAt" : "2016-01-06T02:10:57Z",
        "lastEditedBy" : "ef33f76a-ca59-4720-94a5-47e86994ee8d",
        "tags" : [
        ]
      }
    ],
    "commit" : "36f216179f6b9c6e678bdb909d34c169b4e7cded",
    "line" : null,
    "diffHunk" : "@@ -1,1 +123,127 @@\n# Run kube-keygen.sh inside docker.\nfunction cluster::mesos::docker::run_in_docker_keygen {\n  local out_file_path=\"$1\"\n  local out_dir=\"$(dirname \"${out_file_path}\")\""
  },
  {
    "id" : "5b40b536-6c8d-4da6-a631-0a27801ee3df",
    "prId" : 14060,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "367c2c65-027a-49cc-8c1e-ed83d5e71c4c",
        "parentId" : null,
        "authorId" : "ef33f76a-ca59-4720-94a5-47e86994ee8d",
        "body" : "bugs me that scale can't be done in the yaml, but it looks like that conversation has been going on for more than a year in the fig/compose repo.\n",
        "createdAt" : "2015-09-17T16:35:08Z",
        "updatedAt" : "2015-09-18T09:34:34Z",
        "lastEditedBy" : "ef33f76a-ca59-4720-94a5-47e86994ee8d",
        "tags" : [
        ]
      },
      {
        "id" : "ee504db0-5f67-4e44-a8c0-7142eaef8f38",
        "parentId" : "367c2c65-027a-49cc-8c1e-ed83d5e71c4c",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Yeah, have read the issue as well. That's a bit odd indeed.\n",
        "createdAt" : "2015-09-17T16:45:28Z",
        "updatedAt" : "2015-09-18T09:34:34Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "df997e2bb9837d41d00b696095febc7afd2225b9",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +285,289 @@  cluster::mesos::docker::docker_compose up -d\n  echo \"Scaling ${KUBERNETES_PROVIDER} cluster to ${NUM_MINIONS} slaves\"\n  cluster::mesos::docker::docker_compose scale mesosslave=${NUM_MINIONS}\n\n  # await-health-check requires GNU timeout"
  },
  {
    "id" : "a97716aa-3b4c-4c09-8658-2a63390d166e",
    "prId" : 12954,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48451f82-c23a-4305-94fb-36905ac448d2",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "learned something new today. thanks!\n",
        "createdAt" : "2015-08-20T06:02:23Z",
        "updatedAt" : "2015-08-20T06:02:23Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "aadd0e5f-d5b4-4cc8-a763-328073829035",
        "parentId" : "48451f82-c23a-4305-94fb-36905ac448d2",
        "authorId" : "ef33f76a-ca59-4720-94a5-47e86994ee8d",
        "body" : "Indirect Expansion FTW: http://stackoverflow.com/questions/8515411/bash-indirect-expansion-please-explain/8515492#8515492\n",
        "createdAt" : "2015-08-20T15:38:08Z",
        "updatedAt" : "2015-08-20T15:38:08Z",
        "lastEditedBy" : "ef33f76a-ca59-4720-94a5-47e86994ee8d",
        "tags" : [
        ]
      }
    ],
    "commit" : "55eb982b4c4b754e785f6d579b06bfce7710fe35",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +50,54 @@  (\n    for var_name in \"${env_vars[@]}\"; do\n      export ${var_name}=\"${!var_name}\"\n    done\n"
  },
  {
    "id" : "95fbe9eb-1727-4927-8356-b76701394ddd",
    "prId" : 12503,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9f3dc17-2dc5-4638-9abd-5b84bddfc1f5",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Didn't know this is possible. :+1: \n",
        "createdAt" : "2015-08-12T17:29:40Z",
        "updatedAt" : "2015-08-18T23:54:35Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "56add921-d775-4ba6-abf3-9f056c46d48f",
        "parentId" : "e9f3dc17-2dc5-4638-9abd-5b84bddfc1f5",
        "authorId" : "ef33f76a-ca59-4720-94a5-47e86994ee8d",
        "body" : "Downside is that it pulls whether you have a newer one built locally or not.\nI wish there were a way to do what run does and not pull if it's already cached.\n",
        "createdAt" : "2015-08-12T17:43:36Z",
        "updatedAt" : "2015-08-18T23:54:35Z",
        "lastEditedBy" : "ef33f76a-ca59-4720-94a5-47e86994ee8d",
        "tags" : [
        ]
      }
    ],
    "commit" : "053cb26dde51f97a631e13fb87cbd6a7ec79f80f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +236,240 @@    # Pull before building images (but only if built) to avoid overwriting locally built images.\n    echo \"Pulling docker images\" 1>&2\n    docker-compose -f \"${compose_file}\" pull\n\n    echo \"Building Docker images\" 1>&2"
  },
  {
    "id" : "c52af72a-44c3-49d2-9f30-5d91cd13b207",
    "prId" : 10049,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4f468f2-85a1-485d-bfa1-35f34e7c8bbb",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "why are some of the functions in this file namespaced, and others not?\n",
        "createdAt" : "2015-08-02T20:58:58Z",
        "updatedAt" : "2015-08-05T17:48:49Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "1818a3d2-663e-4dcc-8176-908da15749d9",
        "parentId" : "f4f468f2-85a1-485d-bfa1-35f34e7c8bbb",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "The ones without the prefix are re-implementation of `cluster/kube-utils.sh` functions.\n",
        "createdAt" : "2015-08-03T08:58:08Z",
        "updatedAt" : "2015-08-05T17:48:49Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5fa688908173704b83a17af7775d7680b015ffe",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@# This bypasses the need to set up network routing when running docker in a VM (e.g. boot2docker).\n# Trap signals and kills the docker container for better signal handing\nfunction cluster::mesos::docker::run_in_docker {\n  entrypoint=\"$1\"\n  if [[ \"${entrypoint}\" = \"./\"* ]]; then"
  }
]