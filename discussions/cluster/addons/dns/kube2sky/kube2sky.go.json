[
  {
    "id" : "42558428-a9ef-454e-b3f0-cefd4e5b1537",
    "prId" : 24362,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd424354-1471-4048-aa49-9c08dda3bd6f",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "TODO: remove this after v1.4 is released and the old annotations are EOL\n",
        "createdAt" : "2016-04-20T01:36:54Z",
        "updatedAt" : "2016-04-28T17:57:24Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "20d10b70-2e50-4718-be65-9ab3aec7a3fa",
        "parentId" : "bd424354-1471-4048-aa49-9c08dda3bd6f",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "yes, 1.4 - that should be long enough?\n",
        "createdAt" : "2016-04-20T01:37:13Z",
        "updatedAt" : "2016-04-28T17:57:24Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "55167c3e-308d-436b-8880-12b0201524d0",
        "parentId" : "bd424354-1471-4048-aa49-9c08dda3bd6f",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "still open - I meant to add the TODO\n",
        "createdAt" : "2016-04-20T06:17:42Z",
        "updatedAt" : "2016-04-28T17:57:24Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "6fa7f1d8-5013-421a-bc4b-844b8f605ac2",
        "parentId" : "bd424354-1471-4048-aa49-9c08dda3bd6f",
        "authorId" : "0970b119-085d-41b4-8f33-e10409965eba",
        "body" : "done, not pushed\n",
        "createdAt" : "2016-04-20T18:11:16Z",
        "updatedAt" : "2016-04-28T17:57:24Z",
        "lastEditedBy" : "0970b119-085d-41b4-8f33-e10409965eba",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a3ed48808185ec410a7450796da790790e1d3bd",
    "line" : null,
    "diffHunk" : "@@ -1,1 +163,167 @@func (ks *kube2sky) generateRecordsForHeadlessService(subdomain string, e *kapi.Endpoints, svc *kapi.Service) error {\n\t// TODO: remove this after v1.4 is released and the old annotations are EOL\n\tpodHostnames, err := getPodHostnamesFromAnnotation(e.Annotations)\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "d547f0d7-99f4-4c60-8b90-68ddc0a97c8c",
    "prId" : 13759,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "375f0968-f9a5-4667-b5ba-90718ba0c167",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "if this happens, will the eventual setting of podIP trigger a watch update?  I don't know if status will trigger it.\n\n@lavalamp \n",
        "createdAt" : "2015-09-10T05:48:07Z",
        "updatedAt" : "2015-09-25T21:22:53Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "7aa88eea-a51b-4734-b3f7-6106a183618a",
        "parentId" : "375f0968-f9a5-4667-b5ba-90718ba0c167",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yes, status updates cause watch events.\n\nOn Wed, Sep 9, 2015 at 10:48 PM, Tim Hockin notifications@github.com\nwrote:\n\n> In cluster/addons/dns/kube2sky/kube2sky.go\n> https://github.com/kubernetes/kubernetes/pull/13759#discussion_r39126594\n> :\n> \n> > @@ -222,6 +226,58 @@ func (ks *kube2sky) handleEndpointAdd(obj interface{}) {\n> >     }\n> >  }\n> > \n> > +func (ks *kube2sky) handlePodCreate(obj interface{}) {\n> > -   if e, ok := obj.(*kapi.Pod); ok {\n> > -       //If the pod ip is not yet available, do not attemt to create\n> > -       if e.Status.PodIP != \"\" {\n> \n> if this happens, will the eventual setting of podIP trigger a watch\n> update? I don't know if status will trigger it.\n> \n> @lavalamp https://github.com/lavalamp\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/13759/files#r39126594.\n",
        "createdAt" : "2015-09-10T17:14:59Z",
        "updatedAt" : "2015-09-25T21:22:53Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "717660aa3546abf96667fa67764b9f5f6f0ddd5d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +228,232 @@\tif e, ok := obj.(*kapi.Pod); ok {\n\t\t// If the pod ip is not yet available, do not attempt to create.\n\t\tif e.Status.PodIP != \"\" {\n\t\t\tname := buildDNSNameString(ks.domain, podSubdomain, e.Namespace, santizeIP(e.Status.PodIP))\n\t\t\tks.mutateEtcdOrDie(func() error { return ks.generateRecordsForPod(name, e) })"
  },
  {
    "id" : "ca278380-1f73-4ad9-be45-af7bd839aece",
    "prId" : 13759,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b5567a8-dc96-4c2a-a526-12a0cd8ca8ee",
        "parentId" : null,
        "authorId" : "0970b119-085d-41b4-8f33-e10409965eba",
        "body" : "what if the oldPod had an IP and the new Pod does not have an IP ?\nwe should still delete the oldPod entry\n\ncan you also make calls to add/deletePod from update so that your code is reused \n",
        "createdAt" : "2015-09-11T17:08:49Z",
        "updatedAt" : "2015-09-25T21:22:53Z",
        "lastEditedBy" : "0970b119-085d-41b4-8f33-e10409965eba",
        "tags" : [
        ]
      }
    ],
    "commit" : "717660aa3546abf96667fa67764b9f5f6f0ddd5d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +241,245 @@\t// Validate that the objects are good\n\tif okOld && okNew {\n\t\tif oldPod.Status.PodIP != newPod.Status.PodIP {\n\t\t\tks.handlePodDelete(oldPod)\n\t\t\tks.handlePodCreate(newPod)"
  },
  {
    "id" : "f575725e-c13f-4844-88e1-c34e260bd334",
    "prId" : 13759,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fbc0166-c42a-49d0-ad1b-4d0e91c15bfb",
        "parentId" : null,
        "authorId" : "c2f27bcc-35d4-4085-8576-7930fa62dfa8",
        "body" : "typo `dmoain`\n",
        "createdAt" : "2015-09-30T05:10:32Z",
        "updatedAt" : "2015-09-30T05:10:32Z",
        "lastEditedBy" : "c2f27bcc-35d4-4085-8576-7930fa62dfa8",
        "tags" : [
        ]
      }
    ],
    "commit" : "717660aa3546abf96667fa67764b9f5f6f0ddd5d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +62,66 @@\t// A subdomain added to the user specified domain for all services.\n\tserviceSubdomain = \"svc\"\n\t// A subdomain added to the user specified dmoain for all pods.\n\tpodSubdomain = \"pod\"\n)"
  },
  {
    "id" : "50c5cc72-4c44-4df5-959e-f3a913c4496e",
    "prId" : 9073,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0101a495-9f7c-42b3-902d-f6bf380ddc18",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "nit: Consider combining this line with the `if` condition below:\n\n```\nif portSegment := buildPortSegmentString(endpointPort.Name, endpointPort.Protocol); portSegment != \"\" {\n...\n}\n```\n",
        "createdAt" : "2015-06-02T19:42:19Z",
        "updatedAt" : "2015-06-05T16:31:48Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d0adbcb1c2b7abcfe52755d92fd3b351f7a290d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +166,170 @@\t\t\t\tfor portIdx := range e.Subsets[idx].Ports {\n\t\t\t\t\tendpointPort := &e.Subsets[idx].Ports[portIdx]\n\t\t\t\t\tportSegment := buildPortSegmentString(endpointPort.Name, endpointPort.Protocol)\n\t\t\t\t\tif portSegment != \"\" {\n\t\t\t\t\t\terr := ks.generateSRVRecord(subdomain, portSegment, recordLabel, recordKey, endpointPort.Port)"
  },
  {
    "id" : "cb34a056-a869-4ec9-88bf-b39879eb83d5",
    "prId" : 9073,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "680268aa-5080-40ed-8f52-0c4c3c1cdddd",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Why increase this? My understanding was that the controller waits for this period before re-starting a failed watch.\n",
        "createdAt" : "2015-06-04T21:33:38Z",
        "updatedAt" : "2015-06-05T16:31:48Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "c0067242-9dcd-4125-be27-ad795b8f7b67",
        "parentId" : "680268aa-5080-40ed-8f52-0c4c3c1cdddd",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Daniel says this governs ONLY how often we get new full lists.  Let's make it 5 minutes.\n",
        "createdAt" : "2015-06-04T22:40:43Z",
        "updatedAt" : "2015-06-05T16:31:48Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "2c06f351-d310-43f9-b63b-71b4ba63c638",
        "parentId" : "680268aa-5080-40ed-8f52-0c4c3c1cdddd",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Leave it at 30 minutes for now, when we do smarter diffing, we can drop to back to 5 minutes\n",
        "createdAt" : "2015-06-04T22:44:53Z",
        "updatedAt" : "2015-06-05T16:31:48Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d0adbcb1c2b7abcfe52755d92fd3b351f7a290d",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +58,62 @@\tmaxConnectAttempts = 12\n\t// Resync period for the kube controller loop.\n\tresyncPeriod = 30 * time.Minute\n\t// A subdomain added to the user specified domain for all services.\n\tserviceSubdomain = \"svc\""
  },
  {
    "id" : "4e2147db-31cc-4c42-aea8-e516d7dba59c",
    "prId" : 8718,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f1c8695-e842-465c-9609-bbf37d0c0f13",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "fixed now, I did not hit refresh, sorry.\n",
        "createdAt" : "2015-06-01T19:50:34Z",
        "updatedAt" : "2015-06-02T00:00:15Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "404558f29c75584ae6fba15e69e64b9f893fb89e",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +50,54 @@\targEtcdServer          = flag.String(\"etcd-server\", \"http://127.0.0.1:4001\", \"URL to etcd server\")\n\targKubecfgFile         = flag.String(\"kubecfg_file\", \"\", \"Location of kubecfg file for access to kubernetes service\")\n\targKubeMasterURL       = flag.String(\"kube_master_url\", \"\", \"URL to reach kubernetes master. Env variables in this flag will be expanded.\")\n)\n"
  },
  {
    "id" : "6be64a3d-c37a-4d4c-8f9c-0eb031725bf8",
    "prId" : 8643,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1dddb27e-af76-49b8-82ed-4eb63da5a5d8",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "nit: blank line \n",
        "createdAt" : "2015-05-21T23:39:57Z",
        "updatedAt" : "2015-05-26T02:44:13Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "bcd5f439-3dff-44c9-9290-4b58b0c2c5f3",
        "parentId" : "1dddb27e-af76-49b8-82ed-4eb63da5a5d8",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Removed\n",
        "createdAt" : "2015-05-22T00:26:29Z",
        "updatedAt" : "2015-05-26T02:44:13Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3c7edb78f38bde43038f1128239f0f4ce34571c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +165,169 @@\treturn nil\n}\n\nfunc (ks *kube2sky) getServiceFromEndpoints(e *kapi.Endpoints) (*kapi.Service, error) {\n\tkey, err := kcache.MetaNamespaceKeyFunc(e)"
  },
  {
    "id" : "38b9fc93-2e3d-467a-9ab0-0eb981b03e94",
    "prId" : 8643,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fbe77504-2e66-4d87-9b0c-ce8a23b5a28c",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "What does this case mean?  You got an update but don't know about the base object?  Should we handle it?\n",
        "createdAt" : "2015-05-21T23:49:28Z",
        "updatedAt" : "2015-05-26T02:44:13Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "04db8f9b-d413-4511-bcb5-b21c54bb6721",
        "parentId" : "fbe77504-2e66-4d87-9b0c-ce8a23b5a28c",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "This PR watches all the endpoints. This helps filter out endpoints objects that do not belong to headless services.\n",
        "createdAt" : "2015-05-22T00:01:47Z",
        "updatedAt" : "2015-05-26T02:44:13Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "01fc2281-75b3-4b68-b6f5-bee9238d3e2e",
        "parentId" : "fbe77504-2e66-4d87-9b0c-ce8a23b5a28c",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "If the endpoints object had a object reference to the service it belongs to, this map is probably not necessary.\n",
        "createdAt" : "2015-05-22T00:04:08Z",
        "updatedAt" : "2015-05-26T02:44:13Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "d94839d5-7c9f-4acd-b451-9f3757db2715",
        "parentId" : "fbe77504-2e66-4d87-9b0c-ce8a23b5a28c",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "It doesn't have an object ref, but it does have teh same name - is that good enough?\n",
        "createdAt" : "2015-05-22T00:12:07Z",
        "updatedAt" : "2015-05-26T02:44:13Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "1f22fdfd-f87d-4400-8050-2142788e1f54",
        "parentId" : "fbe77504-2e66-4d87-9b0c-ce8a23b5a28c",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Thats true. I can use the service store instead of the additional map. I will make that change.\n",
        "createdAt" : "2015-05-22T00:28:00Z",
        "updatedAt" : "2015-05-26T02:44:13Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "09e5ad7c-8691-4307-8d18-fa2a602b1c02",
        "parentId" : "fbe77504-2e66-4d87-9b0c-ce8a23b5a28c",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "SGTM\n",
        "createdAt" : "2015-05-22T00:34:00Z",
        "updatedAt" : "2015-05-26T02:44:13Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3c7edb78f38bde43038f1128239f0f4ce34571c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +194,198 @@\tif svc == nil || kapi.IsServiceIPSet(svc) {\n\t\t// No headless service found corresponding to endpoints object.\n\t\treturn nil\n\t}\n\t// Remove existing DNS entry."
  },
  {
    "id" : "b3eb1e6c-1893-49c7-bd0a-38b4dffe9b17",
    "prId" : 8643,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4322f6ac-d904-4f9d-887a-fc5a76203c87",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "If we're just going to destroy it and recreate it, why do we need the headlessServicesMap at all?\n",
        "createdAt" : "2015-05-21T23:50:49Z",
        "updatedAt" : "2015-05-26T02:44:13Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "7062bfa5-45f9-47c6-a0b9-c44ef883a820",
        "parentId" : "4322f6ac-d904-4f9d-887a-fc5a76203c87",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "See above comment.\n",
        "createdAt" : "2015-05-22T00:04:20Z",
        "updatedAt" : "2015-05-26T02:44:13Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3c7edb78f38bde43038f1128239f0f4ce34571c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +197,201 @@\t}\n\t// Remove existing DNS entry.\n\tif err := ks.removeDNS(subdomain); err != nil {\n\t\treturn err\n\t}"
  },
  {
    "id" : "a568002f-3f24-49fa-b1e0-0ff5538fb4ec",
    "prId" : 8287,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54115b1e-ec71-4367-b039-e4dd2dc6beeb",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Why this, rather than just letting the loop terminate?\n",
        "createdAt" : "2015-05-15T04:08:09Z",
        "updatedAt" : "2015-05-18T02:15:04Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "008fcea3-3ebd-4f79-a834-e0d9dfb9fbe7",
        "parentId" : "54115b1e-ec71-4367-b039-e4dd2dc6beeb",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "That will result in an extra unnecessary sleep.\n",
        "createdAt" : "2015-05-15T18:04:53Z",
        "updatedAt" : "2015-05-18T02:15:04Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "684122f2a7b410360ceb2d0146dea6ecc2bb1343",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +137,141 @@\t\t\tbreak\n\t\t}\n\t\tif attempt == maxConnectAttempts {\n\t\t\tbreak\n\t\t}"
  },
  {
    "id" : "f95f7b22-57db-43c3-b81e-3274dbac382b",
    "prId" : 7901,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0a75fce-4e37-495b-ab88-32c9cc96d027",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "You have a variable shadowing bug here... this will always be nil.\n",
        "createdAt" : "2015-05-07T21:07:16Z",
        "updatedAt" : "2015-05-07T21:40:53Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "3c61b71c-2d09-4ac3-8b69-3a0ee8ac950e",
        "parentId" : "e0a75fce-4e37-495b-ab88-32c9cc96d027",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Good catch. I missed this during a rebase.\n",
        "createdAt" : "2015-05-07T21:09:32Z",
        "updatedAt" : "2015-05-07T21:40:53Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e521b3f1af48d6618950c85359eaa0bfabb69d69",
    "line" : null,
    "diffHunk" : "@@ -1,1 +143,147 @@\t\tretries--\n\t}\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to connect to etcd server: %v, error: %v\", etcdServer, err)\n\t}"
  },
  {
    "id" : "79108cb4-d1c3-4d18-85a1-725adeca30f5",
    "prId" : 7901,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b6e6403-753e-4e39-913a-7413471cf3fd",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "why these particular checks?\n",
        "createdAt" : "2015-05-07T23:28:56Z",
        "updatedAt" : "2015-05-07T23:28:56Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "f7a84744-0fce-4e65-abe1-1d227b59c73a",
        "parentId" : "0b6e6403-753e-4e39-913a-7413471cf3fd",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "These are to validate the input master url. The url is needed to address the bootstrapping problem.\n",
        "createdAt" : "2015-05-08T00:00:33Z",
        "updatedAt" : "2015-05-08T00:00:33Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "318fd320-4974-4cfc-bc91-fc5f9acc1064",
        "parentId" : "0b6e6403-753e-4e39-913a-7413471cf3fd",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I get that, it just feels like \":\" is a pretty random thing to test against - is this some idiom I don't know?\n",
        "createdAt" : "2015-05-08T00:28:02Z",
        "updatedAt" : "2015-05-08T00:28:02Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "e521b3f1af48d6618950c85359eaa0bfabb69d69",
    "line" : 178,
    "diffHunk" : "@@ -1,1 +174,178 @@\t\treturn \"\", fmt.Errorf(\"failed to parse --kube_master_url %s - %v\", *argKubeMasterUrl, err)\n\t}\n\tif parsedUrl.Scheme == \"\" || parsedUrl.Host == \"\" || parsedUrl.Host == \":\" {\n\t\treturn \"\", fmt.Errorf(\"invalid --kube_master_url specified %s\", *argKubeMasterUrl)\n\t}"
  },
  {
    "id" : "d388e4a6-e847-4821-85f8-64bc9f64f69f",
    "prId" : 7901,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b0c2fe1-f09f-4e69-9286-de0378c1b530",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "not particular to this line, just general - why make a function into a method if it has no need of the method-receiver?\n",
        "createdAt" : "2015-05-07T23:30:34Z",
        "updatedAt" : "2015-05-07T23:30:34Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "3b51489b-e3a2-4b58-8ae8-d9d0ef1ff94a",
        "parentId" : "7b0c2fe1-f09f-4e69-9286-de0378c1b530",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Valid point Tim. I will fix it. \n",
        "createdAt" : "2015-05-07T23:58:49Z",
        "updatedAt" : "2015-05-07T23:58:49Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e521b3f1af48d6618950c85359eaa0bfabb69d69",
    "line" : 235,
    "diffHunk" : "@@ -1,1 +205,209 @@}\n\nfunc (ks *kube2sky) buildNameString(service, namespace, domain string) string {\n\treturn fmt.Sprintf(\"%s.%s.%s.\", service, namespace, domain)\n}"
  },
  {
    "id" : "9431c3c9-c80e-48a9-ad03-3f064c3c629c",
    "prId" : 7901,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c6510bf-7256-4148-846f-1d410be4c3d4",
        "parentId" : null,
        "authorId" : "acffdee3-9d93-4515-b1a1-477a574f6606",
        "body" : "retries == 1?\n",
        "createdAt" : "2015-05-12T02:54:28Z",
        "updatedAt" : "2015-05-12T02:54:28Z",
        "lastEditedBy" : "acffdee3-9d93-4515-b1a1-477a574f6606",
        "tags" : [
        ]
      },
      {
        "id" : "58429cad-890c-4e6a-817b-17a255ac7d82",
        "parentId" : "9c6510bf-7256-4148-846f-1d410be4c3d4",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "ooooh, zing.  Good catch\n\nOn Mon, May 11, 2015 at 7:54 PM, Lv Lv notifications@github.com wrote:\n\n> In cluster/addons/dns/kube2sky/kube2sky.go\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/7901#discussion_r30101372\n> :\n> \n> > -           } else {\n> > -               return nil\n> > -           }\n> > -       } else {\n> > -           log.Printf(\"Etcd server found: %v\", _etcd_server)\n> >   +func newEtcdClient(etcdServer string) (_etcd.Client, error) {\n> > -   var (\n> > -       client *etcd.Client\n> > -       err    error\n> > -   )\n> > -   retries := maxConnectRetries\n> > -   for retries > 0 {\n> > -       if _, err = tools.GetEtcdVersion(etcdServer); err == nil {\n> > -           break\n> > -       }\n> > -       if maxConnectRetries == 1 {\n> \n> retries == 1?\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/7901/files#r30101372\n> .\n",
        "createdAt" : "2015-05-12T05:51:31Z",
        "updatedAt" : "2015-05-12T05:51:31Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "6d7d6d6c-649f-4c5a-bd58-3bdfb5f6c8a8",
        "parentId" : "9c6510bf-7256-4148-846f-1d410be4c3d4",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Not the end of the world... If maxConnectRetries == 1, it'll just never print out the log message, and when it runs out of retries, it'll wait an extra 5 seconds. @vishh Worth fixing in a followup, though.\n",
        "createdAt" : "2015-05-12T18:03:08Z",
        "updatedAt" : "2015-05-12T18:03:08Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "0083d664-9526-485c-9159-0b1b139b2ded",
        "parentId" : "9c6510bf-7256-4148-846f-1d410be4c3d4",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "I am fixing it in a follow up PR with some real tests. Good catch!\n\nOn Tue, May 12, 2015 at 11:03 AM, Daniel Smith notifications@github.com\nwrote:\n\n> In cluster/addons/dns/kube2sky/kube2sky.go\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/7901#discussion_r30162136\n> :\n> \n> > -           } else {\n> > -               return nil\n> > -           }\n> > -       } else {\n> > -           log.Printf(\"Etcd server found: %v\", _etcd_server)\n> >   +func newEtcdClient(etcdServer string) (_etcd.Client, error) {\n> > -   var (\n> > -       client *etcd.Client\n> > -       err    error\n> > -   )\n> > -   retries := maxConnectRetries\n> > -   for retries > 0 {\n> > -       if _, err = tools.GetEtcdVersion(etcdServer); err == nil {\n> > -           break\n> > -       }\n> > -       if maxConnectRetries == 1 {\n> \n> Not the end of the world... If maxConnectRetries == 1, it'll just never\n> print out the log message, and when it runs out of retries, it'll wait an\n> extra 5 seconds. @vishh https://github.com/vishh Worth fixing in a\n> followup, though.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/7901/files#r30162136\n> .\n",
        "createdAt" : "2015-05-12T18:04:24Z",
        "updatedAt" : "2015-05-12T18:04:24Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e521b3f1af48d6618950c85359eaa0bfabb69d69",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +136,140 @@\t\t\tbreak\n\t\t}\n\t\tif maxConnectRetries == 1 {\n\t\t\tbreak\n\t\t}"
  },
  {
    "id" : "04598cf3-5381-42fa-8899-e81fbb01024e",
    "prId" : 7742,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dda8153-e435-4989-ba70-c8130b828600",
        "parentId" : null,
        "authorId" : null,
        "body" : "You're potentially accessing a nil pointer here.  You need to return in the above if statement.\n",
        "createdAt" : "2015-05-05T00:48:16Z",
        "updatedAt" : "2015-05-05T04:58:23Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "7ccb4ef9-573a-4b9b-ac5f-ef14c65292f2",
        "parentId" : "7dda8153-e435-4989-ba70-c8130b828600",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "log.Fatal will call os.Exit(1). The etcd.NewClient function cannot return nil as it exists today. If that changes and we do get a nil here, there isn't much we can do to recover.\n",
        "createdAt" : "2015-05-05T03:12:40Z",
        "updatedAt" : "2015-05-05T04:58:23Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      },
      {
        "id" : "0f8f7971-58bf-4bcf-897e-ca8a9aec7b95",
        "parentId" : "7dda8153-e435-4989-ba70-c8130b828600",
        "authorId" : null,
        "body" : "OK, makes sense.  I'd forgotten that log.Fatal() exits.\n",
        "createdAt" : "2015-05-05T03:56:19Z",
        "updatedAt" : "2015-05-05T04:58:23Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "1ec0fb2e3d9754a3b9705079946ec4e3718a1f12",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +128,132 @@\t\t\tlog.Fatal(\"etcd.NewClient returned nil\")\n\t\t}\n\t\tclient.SyncCluster()\n\t\tmachines := client.GetCluster()\n\t\tif len(machines) == 0 || len(machines[0]) == 0 {"
  },
  {
    "id" : "7e907931-a181-4f6c-946f-e8a109baafa7",
    "prId" : 7675,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe6b5687-10ad-4716-883e-84231b3b98a8",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "If the loop times out what happens? I don't see an error message or a crash. \n",
        "createdAt" : "2015-05-02T15:27:33Z",
        "updatedAt" : "2015-05-04T20:02:08Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "13ae6136-2b74-4a73-aedb-916c819e7be0",
        "parentId" : "fe6b5687-10ad-4716-883e-84231b3b98a8",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "Oops. Fixed.\n",
        "createdAt" : "2015-05-02T18:08:12Z",
        "updatedAt" : "2015-05-04T20:02:08Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      }
    ],
    "commit" : "a21713a771a2e66beb3f579326fe1f47bdea95a9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +121,125 @@\t\t}\n\t}\n\t// loop until we have > 0 machines && machines[0] != \"\"\n\ttimeout := false\n\tgo func() {"
  },
  {
    "id" : "4468331d-b81d-4039-b849-a9f845d919b3",
    "prId" : 7675,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dae1411c-6232-43f7-8f01-5c8250df42bb",
        "parentId" : null,
        "authorId" : null,
        "body" : "I would much prefer you to use wait.Poll() here (from /pkg/util/wait/wait.go).  It's our \"standard\" retry loop. \n",
        "createdAt" : "2015-05-04T21:19:28Z",
        "updatedAt" : "2015-05-04T21:19:28Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "a21713a771a2e66beb3f579326fe1f47bdea95a9",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +122,126 @@\t}\n\t// loop until we have > 0 machines && machines[0] != \"\"\n\ttimeout := false\n\tgo func() {\n\t\t<-time.After(10 * time.Second)"
  },
  {
    "id" : "fbec06e6-5f26-4eb1-a37d-a74f29daae21",
    "prId" : 7675,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfb16ace-31d2-4690-be0a-83a09b30e36f",
        "parentId" : null,
        "authorId" : null,
        "body" : "I'd suggest making this error message more specific to aid debugging.  Something along the lines of:\n\n\"Timed out after xxx seconds waiting for at least 1 synchronized etcd server at [etcd_server] in the cluster.\"\n",
        "createdAt" : "2015-05-04T21:27:14Z",
        "updatedAt" : "2015-05-04T21:28:43Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "a21713a771a2e66beb3f579326fe1f47bdea95a9",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +138,142 @@\t\t}\n\t}\n\tlog.Fatal(\"Timed out waiting for correct response from etcd server\")\n\treturn nil\n}"
  },
  {
    "id" : "2bbe57ad-8e0f-44a4-951f-486f3414f1a1",
    "prId" : 7275,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8c60d2d-bec0-4e59-ad84-a201f6b717ac",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "nit: These should all be log.Fatal instead of log.Fatalf\n",
        "createdAt" : "2015-04-24T15:37:23Z",
        "updatedAt" : "2015-04-24T15:37:23Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "efbd6cba-4576-4d0c-88df-8bfd2af15bd8",
        "parentId" : "f8c60d2d-bec0-4e59-ad84-a201f6b717ac",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "(I think someone else was planning to overhaul this code, so we can wait for that to fix it.)\n",
        "createdAt" : "2015-04-24T15:37:55Z",
        "updatedAt" : "2015-04-24T15:37:55Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "80af1c9e409f6f62dff789f4e068be3ee0ca10a3",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +137,141 @@\t\tmasterHost := os.Getenv(\"KUBERNETES_RO_SERVICE_HOST\")\n\t\tif masterHost == \"\" {\n\t\t\tlog.Fatalf(\"KUBERNETES_RO_SERVICE_HOST is not defined\")\n\t\t}\n\t\tmasterPort := os.Getenv(\"KUBERNETES_RO_SERVICE_PORT\")"
  },
  {
    "id" : "aadc5548-013b-421a-8449-1e375daea6a8",
    "prId" : 7154,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d2ace73-ff24-43c8-9ace-1f44a189378a",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Will this use the v1beta3 API?\n",
        "createdAt" : "2015-04-22T06:03:01Z",
        "updatedAt" : "2015-04-22T06:10:59Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "7915bcc1-6159-4fc4-a496-465d2dfe1d31",
        "parentId" : "4d2ace73-ff24-43c8-9ace-1f44a189378a",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "Changing to v1beta3 required other changes. I'd rather see that go in a different PR.\n",
        "createdAt" : "2015-04-22T06:08:36Z",
        "updatedAt" : "2015-04-22T06:10:59Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      }
    ],
    "commit" : "e982ac5b550dbbb8613d937f15bb9ece4482689b",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +148,152 @@\t} else {\n\t\tvar err error\n\t\tif config, err = kclientcmd.NewNonInteractiveDeferredLoadingClientConfig(\n\t\t\t&kclientcmd.ClientConfigLoadingRules{ExplicitPath: *kubecfg_file},\n\t\t\t&kclientcmd.ConfigOverrides{}).ClientConfig(); err != nil {"
  },
  {
    "id" : "2a1d6cc8-db23-4fb8-96fa-3b9fd2c3ca06",
    "prId" : 5097,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08b3c91f-b41d-40a2-b8fc-ca985e43b69e",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "where does \"tools\" come from - I see no pkg named tools?\n",
        "createdAt" : "2015-03-05T18:40:58Z",
        "updatedAt" : "2015-03-05T19:43:44Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "dca46e4d-eef8-4c8e-951f-1aa9f1f4510a",
        "parentId" : "08b3c91f-b41d-40a2-b8fc-ca985e43b69e",
        "authorId" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "body" : "It's the tools package under \"pkg/tools\". It contained a number of nice etcd tools, which I modified and reused.\n",
        "createdAt" : "2015-03-05T19:37:52Z",
        "updatedAt" : "2015-03-05T19:43:44Z",
        "lastEditedBy" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "tags" : [
        ]
      },
      {
        "id" : "c0e8f311-7055-4ac7-af96-14a0f619e5e4",
        "parentId" : "08b3c91f-b41d-40a2-b8fc-ca985e43b69e",
        "authorId" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "body" : "Wait, I think a bad merge dropped its import from this file. Let me fix that and push a new change.\n",
        "createdAt" : "2015-03-05T19:40:20Z",
        "updatedAt" : "2015-03-05T19:43:44Z",
        "lastEditedBy" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "tags" : [
        ]
      },
      {
        "id" : "f5ce38fa-e483-4498-8b6d-560b1adbcb32",
        "parentId" : "08b3c91f-b41d-40a2-b8fc-ca985e43b69e",
        "authorId" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "body" : "Ok, taken care of. Thanks.\n",
        "createdAt" : "2015-03-05T19:44:08Z",
        "updatedAt" : "2015-03-05T19:44:08Z",
        "lastEditedBy" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "tags" : [
        ]
      },
      {
        "id" : "63986d7f-f6dd-43db-a8a9-6e96be3cb69c",
        "parentId" : "08b3c91f-b41d-40a2-b8fc-ca985e43b69e",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "makes much more sense now :)\n",
        "createdAt" : "2015-03-05T20:35:10Z",
        "updatedAt" : "2015-03-05T20:35:10Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "01f7d459d393561250b553ef7a20311d06c87c02",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +92,96 @@\tmaxConnectRetries := 12\n\tfor maxConnectRetries > 0 {\n\t\tif _, _, err := tools.GetEtcdVersion(*etcd_server); err != nil {\n\t\t\tlog.Fatalf(\"Failed to connect to etcd server: %v, error: %v\", *etcd_server, err)\n\t\t\tif maxConnectRetries > 0 {"
  }
]