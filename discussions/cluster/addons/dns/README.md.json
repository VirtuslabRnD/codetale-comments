[
  {
    "id" : "54879531-5fd1-41d5-975d-ea0638b65587",
    "prId" : 22564,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de4b619b-090f-40ca-a4ae-1cf61387e6b2",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "This needs an example.\n\nGiven a Pod with the hostname annotation set to \"foo\" and the subdomain annotation set to \"bar\", and a headless Service named \"bar\", the pod will see it's own FQDN as \"foo.bar.my-namespace.svc.cluster.local\".  DNS will serve an A record at that name, pointing to the Pod's IP.\n",
        "createdAt" : "2016-03-04T23:46:16Z",
        "updatedAt" : "2016-03-08T02:37:50Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "ea3dd09f-5a9f-4714-a586-9f8605a1589c",
        "parentId" : "de4b619b-090f-40ca-a4ae-1cf61387e6b2",
        "authorId" : "0970b119-085d-41b4-8f33-e10409965eba",
        "body" : "done\n",
        "createdAt" : "2016-03-08T02:07:34Z",
        "updatedAt" : "2016-03-08T02:37:50Z",
        "lastEditedBy" : "0970b119-085d-41b4-8f33-e10409965eba",
        "tags" : [
        ]
      }
    ],
    "commit" : "11327de8dbab99d64f0f3b590dec640bec40a849",
    "line" : null,
    "diffHunk" : "@@ -1,1 +71,75 @@For example, given a Pod with the hostname annotation set to \"foo\", and the subdomain annotation set to \"bar\", in namespace \"my-namespace\", the pod will set its own FQDN as \"foo.bar.my-namespace.svc.cluster.local\"\n\nIf there exists a headless service in the same namespace as the pod and with the same name as the subdomain, the cluster's KubeDNS Server will also return an A record for the Pod's fully qualified hostname.\nGiven a Pod with the hostname annotation set to \"foo\" and the subdomain annotation set to \"bar\", and a headless Service named \"bar\" in the same namespace, the pod will see it's own FQDN as \"foo.bar.my-namespace.svc.cluster.local\". DNS will serve an A record at that name, pointing to the Pod's IP.\n"
  },
  {
    "id" : "421a4c90-9f39-49c0-b1b5-e62cde4dc6a7",
    "prId" : 13843,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2cf9710-c503-4757-af16-4dedadd125f8",
        "parentId" : null,
        "authorId" : "0970b119-085d-41b4-8f33-e10409965eba",
        "body" : "minor comment on pre-existing text.\n\"of the for\" ?\n",
        "createdAt" : "2015-09-11T02:37:25Z",
        "updatedAt" : "2015-09-11T05:12:36Z",
        "lastEditedBy" : "0970b119-085d-41b4-8f33-e10409965eba",
        "tags" : [
        ]
      },
      {
        "id" : "430a2c75-3b32-4f0b-baeb-097ce352b37b",
        "parentId" : "c2cf9710-c503-4757-af16-4dedadd125f8",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Done and pushed\n",
        "createdAt" : "2015-09-11T05:12:41Z",
        "updatedAt" : "2015-09-11T05:12:41Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "248881d44f07bec77317d8b9a52d68faca225b66",
    "line" : null,
    "diffHunk" : "@@ -1,1 +47,51 @@\n### Backwards compatibility\nPrevious versions of kube-dns made names of the for\n`my-svc.my-namespace.cluster.local` (the 'svc' level was added later).  This\nis no longer supported."
  },
  {
    "id" : "a44436cb-c9e9-4f06-b314-ef7435f5c9d7",
    "prId" : 10724,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45690f84-ebdc-47da-b765-2f3ce16eef61",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "The risk of this PR is best captured by the very first hunk of diff - you're changing the docs for kube2sky config, but not changing the flag, and even if you had caught those flags it would not be correct because kube2sky doesn't use pflags (yet), so it would be an incompatible change.\n\nI think this process needs to be more nuanced and less bulk.  For each cmd/\\* that you can prove uses pflags SetNormalizeFunc(), for each flag therein, global search-replace foo_bar with foo-bar.\n\nThen we have a clearer picture of whats left...\n",
        "createdAt" : "2015-08-06T16:14:34Z",
        "updatedAt" : "2015-08-07T15:00:20Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "66896834-103e-48b0-a505-3b72397a908b",
        "parentId" : "45690f84-ebdc-47da-b765-2f3ce16eef61",
        "authorId" : "766f642e-1622-4803-803b-05ce306fc30e",
        "body" : "poop, i was being so careful to leave kube2sky alone!\n",
        "createdAt" : "2015-08-06T17:27:50Z",
        "updatedAt" : "2015-08-07T15:00:20Z",
        "lastEditedBy" : "766f642e-1622-4803-803b-05ce306fc30e",
        "tags" : [
        ]
      },
      {
        "id" : "33804ac2-3e7f-47ed-971d-2245bcbc484c",
        "parentId" : "45690f84-ebdc-47da-b765-2f3ce16eef61",
        "authorId" : "766f642e-1622-4803-803b-05ce306fc30e",
        "body" : "Double checked and found a second place I was overzealous.  In both cases it is/was because a non-kube/NormalizeUsing program used the same flag name as the ones I was 'sure' about. In this case both the kubelet and kube2sky use `--cluster_dns`.  So I accidentally updated here.  In the other case it was (again a doc for) ginko/e2e.\n\nI'm not sure how to restructure this to make things better/easier.  Someone else just needs to double check all of the changes I think. I'd be happy to break things apart if you think there's a reasonable way to do so....\n",
        "createdAt" : "2015-08-06T17:49:31Z",
        "updatedAt" : "2015-08-07T15:00:20Z",
        "lastEditedBy" : "766f642e-1622-4803-803b-05ce306fc30e",
        "tags" : [
        ]
      }
    ],
    "commit" : "20e8c25343187eede76914c16810f3ff12bb8374",
    "line" : null,
    "diffHunk" : "@@ -1,1 +90,94 @@\n```\n--cluster-dns=<DNS service ip>\n--cluster-domain=<default local domain>\n```"
  }
]