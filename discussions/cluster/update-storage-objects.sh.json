[
  {
    "id" : "17608539-6890-4b14-9690-6d65c97aa0ea",
    "prId" : 74455,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74455#pullrequestreview-207133787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46a49a0a-0868-4e80-a0aa-ef5413bfac7d",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "Which shellcheck failure are you addressing here?",
        "createdAt" : "2019-02-23T19:45:05Z",
        "updatedAt" : "2019-02-24T03:15:59Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "83e001fe-087d-4ffc-b153-e8b5b51c4adc",
        "parentId" : "46a49a0a-0868-4e80-a0aa-ef5413bfac7d",
        "authorId" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "body" : "```\r\nIn ./cluster/update-storage-objects.sh line 60:\r\nnamespaces=( $(\"${KUBECTL}\" get namespaces -o go-template=\"{{range.items}}{{.metadata.name}} {{end}}\"))\r\n             ^-- SC2207: Prefer mapfile or read -a to split command output (or quote to avoid splitting).\r\n```",
        "createdAt" : "2019-02-24T03:13:52Z",
        "updatedAt" : "2019-02-24T03:15:59Z",
        "lastEditedBy" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "tags" : [
        ]
      }
    ],
    "commit" : "9cda80e836c9c3c73e6afddd4aa4af9b0ae0706e",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +58,62 @@\n# Find all the namespaces.\nIFS=\" \" read -r -a namespaces <<< \"$(\"${KUBECTL}\" get namespaces -o go-template=\"{{range.items}}{{.metadata.name}} {{end}}\")\"\nif [ -z \"${namespaces:-}\" ]\nthen"
  },
  {
    "id" : "68de2538-5d65-4a2a-806a-911c0a83df6d",
    "prId" : 74455,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74455#pullrequestreview-207133793",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e03c9061-19e4-4c53-bd87-1297b9d23bcb",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "Which shellcheck failure are you addressing here?",
        "createdAt" : "2019-02-23T19:45:11Z",
        "updatedAt" : "2019-02-24T03:15:59Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "3bab861a-540f-464b-8abe-3929575ebd83",
        "parentId" : "e03c9061-19e4-4c53-bd87-1297b9d23bcb",
        "authorId" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "body" : "```\r\nIn ./cluster/update-storage-objects.sh line 78:\r\n    instances=( $(\"${KUBECTL}\" get \"${resource}\" --namespace=\"${namespace}\" -o go-template=\"{{range.items}}{{.metadata.name}} {{end}}\"))\r\n                ^-- SC2207: Prefer mapfile or read -a to split command output (or quote to avoid splitting).\r\n```",
        "createdAt" : "2019-02-24T03:14:16Z",
        "updatedAt" : "2019-02-24T03:15:59Z",
        "lastEditedBy" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "tags" : [
        ]
      }
    ],
    "commit" : "9cda80e836c9c3c73e6afddd4aa4af9b0ae0706e",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +75,79 @@    # resources.\n    set +e\n    IFS=\" \" read -r -a instances <<< \"$(\"${KUBECTL}\" get \"${resource}\" --namespace=\"${namespace}\" -o go-template=\"{{range.items}}{{.metadata.name}} {{end}}\")\"\n    result=$?\n    set -e"
  },
  {
    "id" : "735bb8dd-a9cc-48fa-9cca-6819aa37eb63",
    "prId" : 22357,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbfba58f-de3f-4941-862d-b2633af88a85",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "I think it will be good to check that we got at least one resource.\nI want to prevent the situation where `kubectl get` failed for some reason for all resources and we think that this script passed even though it didnt do anything.\n",
        "createdAt" : "2016-03-04T18:36:33Z",
        "updatedAt" : "2016-03-04T22:05:42Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "ac19228c-3a1b-4016-851b-ea744b4fcf2a",
        "parentId" : "dbfba58f-de3f-4941-862d-b2633af88a85",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Getting at least one resource isn't a requirement. You could have a cluster with zero pods (or whatever) and this script should not fail. Do you want me to try to differentiate between a successful get (0 or more) vs \"resource not installed\" (not an error) vs \"some other error\" (fail)?\n",
        "createdAt" : "2016-03-04T19:01:27Z",
        "updatedAt" : "2016-03-04T22:05:42Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "209803d1-df62-4eeb-a618-0a613904ad00",
        "parentId" : "dbfba58f-de3f-4941-862d-b2633af88a85",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Yup. Is it possible to differentiate between getting 0 resources and getting an error?\nI want that there should be atleast one resource for which this command does not return an error. Returning 0 instances is fine.\n",
        "createdAt" : "2016-03-04T19:48:32Z",
        "updatedAt" : "2016-03-04T22:05:42Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "3a28cd1b-84e3-4ee2-afee-8d6f5e30bd8d",
        "parentId" : "dbfba58f-de3f-4941-862d-b2633af88a85",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Testing now. Will report back soon.\n",
        "createdAt" : "2016-03-04T19:54:40Z",
        "updatedAt" : "2016-03-04T22:05:42Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "89a775e6-253f-4d36-9aab-ce9a8f3c64a9",
        "parentId" : "dbfba58f-de3f-4941-862d-b2633af88a85",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "It looks like depending on what you have in `KUBE_API_VERSIONS` and `RUNTIME_CONFIG`, you either get `Unable to list \"jobs\": the server could not find the requested resource` (if extensions/v1beta1 is disabled but batch/v1 is enabled) or `the server doesn't have a resource type \"hpas\"` (if you try to request an invalid resource name). Maybe we allow the latter but fail if any other error shows up?\n",
        "createdAt" : "2016-03-04T20:13:56Z",
        "updatedAt" : "2016-03-04T22:05:42Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "2ad39fca-524d-4cbb-a69d-1fafb9611ed9",
        "parentId" : "dbfba58f-de3f-4941-862d-b2633af88a85",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Ok, it looks like the only way to really do this would be something like this:\n\n```\nmkfifo somefifo\ninstances=( $(\"${KUBECTL}\" get \"${resource}\" --namespace=\"${namespace}\" -o go-template=\"{{range.items}}{{.metadata.name}} {{end}}\" 2>somefifo))\n```\n\nThen, if you read somefifo and it's either empty or it contains \"the server doesn't have a resource type\", then we could proceed. Otherwise, we should consider it an error. We'd need to have a trap to remove the fifo on exit, as well. Do you want me to proceed with this?\n",
        "createdAt" : "2016-03-04T20:31:32Z",
        "updatedAt" : "2016-03-04T22:05:42Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "ed45373e-e2dc-4158-8863-6eab3a822b53",
        "parentId" : "dbfba58f-de3f-4941-862d-b2633af88a85",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "I was thinking that consider \"the server doesn't have a resource type\" as an error as well.\nCan we get that the command exited with exit 0 or exit 1?\nThere should be atleast one resource for which the command exited with  \"exit 0\".\n",
        "createdAt" : "2016-03-04T21:04:05Z",
        "updatedAt" : "2016-03-04T22:05:42Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "05f86679-7e72-453d-ab65-cad16745c009",
        "parentId" : "dbfba58f-de3f-4941-862d-b2633af88a85",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "To clarify, I want to fail the script only if this command exited with non-zero status for all resources and namespaces.\nIf there was at least one combination of resource and namespace for which the command returned 0 status, then we proceed\n",
        "createdAt" : "2016-03-04T21:05:22Z",
        "updatedAt" : "2016-03-04T22:05:42Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "8746a174-84cb-44dc-a307-3093dae6c65f",
        "parentId" : "dbfba58f-de3f-4941-862d-b2633af88a85",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Ok, it does exit 1. I understand what you're suggesting. Let me do that now.\n",
        "createdAt" : "2016-03-04T21:08:49Z",
        "updatedAt" : "2016-03-04T22:05:42Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "f078f180-0eec-46bc-8950-982dba5eae6a",
        "parentId" : "dbfba58f-de3f-4941-862d-b2633af88a85",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Yup. Looks good now, thanks!\n",
        "createdAt" : "2016-03-04T22:03:34Z",
        "updatedAt" : "2016-03-04T22:05:42Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "156c1f3c5d96ed780c54eac697eadd12aca24ceb",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +68,72 @@    # TODO hopefully we can remove this once we use dynamic discovery of gettable/updateable\n    # resources.\n    set +e\n    instances=( $(\"${KUBECTL}\" get \"${resource}\" --namespace=\"${namespace}\" -o go-template=\"{{range.items}}{{.metadata.name}} {{end}}\"))\n    result=$?"
  }
]