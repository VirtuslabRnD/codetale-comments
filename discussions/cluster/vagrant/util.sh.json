[
  {
    "id" : "239a6a43-2481-4c3d-b18c-aedde28a33f4",
    "prId" : 6983,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "696c2de5-65d0-429a-94b5-308733c80bd3",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "This is a common problem with all the Salt based providers (including GCE, AWS, Azure).  I will say that the move to do more as pods and less in Salt may make this better over time, and less of a concern.\n",
        "createdAt" : "2015-04-17T17:12:20Z",
        "updatedAt" : "2015-04-17T18:27:23Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "62094c33-1e3e-465b-a860-66db65f8013a",
        "parentId" : "696c2de5-65d0-429a-94b5-308733c80bd3",
        "authorId" : "e1700a10-1e27-452f-93f3-ce8dd077ff9d",
        "body" : "Understood. Please let me know if I should remove the comment.\n",
        "createdAt" : "2015-04-17T17:17:29Z",
        "updatedAt" : "2015-04-17T18:27:23Z",
        "lastEditedBy" : "e1700a10-1e27-452f-93f3-ce8dd077ff9d",
        "tags" : [
        ]
      },
      {
        "id" : "261a8e2f-dcee-473e-8062-ea7b93208ca6",
        "parentId" : "696c2de5-65d0-429a-94b5-308733c80bd3",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "Comment is fine.  I too am annoyed when loop forever occurs. \n",
        "createdAt" : "2015-04-17T18:05:00Z",
        "updatedAt" : "2015-04-17T18:27:23Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8672e2242eff177698fb85d3f67f74b0fd1cdf4",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +170,174 @@  # TODO: How does the user know the difference between \"tak[ing] some\n  # time\" and \"loop[ing] forever\"? Can we give more specific feedback on\n  # whether \"an error\" has occurred?\n  echo \"Each machine instance has been created/updated.\"\n  echo \"  Now waiting for the Salt provisioning process to complete on each machine.\""
  },
  {
    "id" : "f6b04dc5-64db-4aed-a21c-f48c7c2e05f9",
    "prId" : 6377,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa603d55-96dd-4a71-b1a7-594661a7e58e",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Is there a reason why you didn't change this similarly to validate-cluster.sh? The inability to test the change?\n",
        "createdAt" : "2015-04-03T22:30:36Z",
        "updatedAt" : "2015-04-03T22:30:36Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "2702e657-b402-47f0-997d-e843915d09fd",
        "parentId" : "aa603d55-96dd-4a71-b1a7-594661a7e58e",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Yes. I decided to change them in a separate PR.\nWe will have to change these for deleting v1beta1\n",
        "createdAt" : "2015-04-03T22:46:31Z",
        "updatedAt" : "2015-04-03T22:46:31Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2b72931fc55cbd4ce767e64a8645193767ea788",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +166,170 @@    until [[ \"$count\" == \"1\" ]]; do\n      local minions\n      minions=$(\"${KUBE_ROOT}/cluster/kubectl.sh\" get minions -o template -t '{{range.items}}{{.id}}:{{end}}' --api-version=v1beta1)\n      count=$(echo $minions | grep -c \"${MINION_IPS[i]}\") || {\n        printf \".\""
  },
  {
    "id" : "6af23396-5ac0-44be-9885-0305eaedc589",
    "prId" : 4468,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14eb3065-513e-46cb-8902-c3f6b658f04e",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Include the auth information directly into the kubeconfig file instead of referencing auth-path.\n",
        "createdAt" : "2015-02-17T13:12:53Z",
        "updatedAt" : "2015-02-17T13:12:53Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "a5c4fa88-26b3-48cb-8196-f4cf0a8c54ee",
        "parentId" : "14eb3065-513e-46cb-8902-c3f6b658f04e",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "You can tweak that in a follow-on PR.\n",
        "createdAt" : "2015-02-17T13:41:55Z",
        "updatedAt" : "2015-02-17T13:41:55Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0cb252d400ecca8168055754225256085fe2a1a",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +229,233 @@- name: vagrant\n  user:\n    auth-path: ${HOME}/.kubernetes_vagrant_auth\nEOF\n"
  },
  {
    "id" : "654332b0-7141-434f-afac-85c8e8cf478e",
    "prId" : 4268,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2b3f8fa-9b5e-42f8-8886-c1a70bf4ea46",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "This seems like a fine provider function. Any reason not to splat it across the different cloud providers rather than special casing it in `services.sh`? (Other than expediency.)\n",
        "createdAt" : "2015-02-10T01:14:22Z",
        "updatedAt" : "2015-02-10T01:14:22Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "5c232056-ee49-4149-9cce-1b3365154a51",
        "parentId" : "c2b3f8fa-9b5e-42f8-8886-c1a70bf4ea46",
        "authorId" : "9c668715-22fc-4e1d-a673-80ba46f7bd46",
        "body" : "Expediency just. Let this fly and I will port this across so that services e2e looks cleaner also.\n",
        "createdAt" : "2015-02-10T01:27:38Z",
        "updatedAt" : "2015-02-10T01:27:38Z",
        "lastEditedBy" : "9c668715-22fc-4e1d-a673-80ba46f7bd46",
        "tags" : [
        ]
      },
      {
        "id" : "37f1ccab-235c-4e60-bef2-a98d35f43372",
        "parentId" : "c2b3f8fa-9b5e-42f8-8886-c1a70bf4ea46",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "SGTM, just please get around to it. :)\nOn Feb 9, 2015 5:28 PM, \"Rajat Chopra\" notifications@github.com wrote:\n\n> In cluster/vagrant/util.sh\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/4268#discussion_r24382384\n> :\n> \n> > @@ -288,6 +303,11 @@ function restart-kube-proxy {\n> >    ssh-to-node \"$1\" \"sudo systemctl restart kube-proxy\"\n> >  }\n> > \n> > +# Restart the apiserver\n> > +function restart-apiserver {\n> \n> Expediency just. Let this fly and I will port this across so that services\n> e2e looks cleaner also.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/4268/files#r24382384\n> .\n",
        "createdAt" : "2015-02-10T01:43:00Z",
        "updatedAt" : "2015-02-10T01:43:00Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "70590313-b18a-46b7-8b82-23c882dff0ed",
        "parentId" : "c2b3f8fa-9b5e-42f8-8886-c1a70bf4ea46",
        "authorId" : "9c668715-22fc-4e1d-a673-80ba46f7bd46",
        "body" : "#4351 \n",
        "createdAt" : "2015-02-11T21:51:49Z",
        "updatedAt" : "2015-02-11T21:51:49Z",
        "lastEditedBy" : "9c668715-22fc-4e1d-a673-80ba46f7bd46",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d12cad456d54df3a1baa6a7ce6276060d8a26ff",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +305,309 @@\n# Restart the apiserver\nfunction restart-apiserver {\n  ssh-to-node \"${master}\" \"sudo systemctl restart kube-apiserver\"\n}"
  },
  {
    "id" : "e1fa1cd1-6b60-454e-aef5-45f763ce6e77",
    "prId" : 2955,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57a06709-f8bf-4cb0-9214-62811bad68b3",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "Move this block above `vagrant up` into an internal function, and invoke it here and in `kube-push`\n",
        "createdAt" : "2014-12-16T16:24:32Z",
        "updatedAt" : "2014-12-17T21:22:25Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "467adefd-b0e3-45cd-9734-29bdb04b109d",
        "parentId" : "57a06709-f8bf-4cb0-9214-62811bad68b3",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "done\n",
        "createdAt" : "2014-12-16T17:08:52Z",
        "updatedAt" : "2014-12-17T21:22:25Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "428aeacf6d8019c1c45380e3782d0c4f6c7de572",
    "line" : null,
    "diffHunk" : "@@ -1,1 +57,61 @@# Create a set of provision scripts for the master and each of the minions\nfunction create-provision-scripts {\n  ensure-temp-dir\n\n  ("
  },
  {
    "id" : "ae3659ff-59b6-4355-9fc9-511c07607cc0",
    "prId" : 2955,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9bca1c49-2c2e-4634-9bea-30ece48582b1",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "Move the verification of the cluster to a `verify-cluster` function, and invoke here and after `vagrant provision` in kube-push\n",
        "createdAt" : "2014-12-16T16:25:24Z",
        "updatedAt" : "2014-12-17T21:22:25Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "107b6df7-adba-4c3d-8bf1-1b0404db0967",
        "parentId" : "9bca1c49-2c2e-4634-9bea-30ece48582b1",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "done\n",
        "createdAt" : "2014-12-16T17:15:38Z",
        "updatedAt" : "2014-12-17T21:22:25Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "428aeacf6d8019c1c45380e3782d0c4f6c7de572",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +135,139 @@\n  echo\n  echo \"Waiting for each minion to be registered with cloud provider\"\n  for (( i=0; i<${#MINION_IPS[@]}; i++)); do\n    local machine=\"${MINION_IPS[$i]}\""
  },
  {
    "id" : "3f2c5eaa-ae19-4881-9895-e56ea7bb37f6",
    "prId" : 1891,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb2b9fd1-d549-43f2-949b-d3fbf9f1705f",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "I think this would be simpler:\n\n``` shell\n  local ip_last_octet=${ip##*.}\n```\n\nOr if you really want to do validation that it starts with MINION_IP_BASE (I don't think that's really necessary):\n\n``` shell\n  local ip_last_octet=${ip#${MINION_IP_BASE}}\n```\n\nAnd then:\n\n``` shell\n  local minion_number\n  minion_number=$((ip_last_octet - 1))\n  echo \"minion-${minion_number}\"\n```\n\nWDYT?\n",
        "createdAt" : "2014-10-18T22:05:22Z",
        "updatedAt" : "2014-10-20T21:50:29Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "af21494f-aedf-49d4-947c-000f37f057d9",
        "parentId" : "bb2b9fd1-d549-43f2-949b-d3fbf9f1705f",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "I'm not so sure -- if the string is blank or somehow malformed, a lot of this just ends up creating -1.\n\n```\n$ bash -c 'set -o nounset ; prefix=1.1.1. ; ip= ; last=${ip#${prefix}} ; echo $((last - 1))'\n-1\n```\n\nI'm going to leave the regex in there.  The subtlety isn't from the regex but the mapping of IP to name.\n",
        "createdAt" : "2014-10-20T21:44:25Z",
        "updatedAt" : "2014-10-20T21:50:29Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea95cefb910655ddccc15d6bde773d8d3bc3068f",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +150,154 @@  local ip_pattern=\"${MINION_IP_BASE}(.*)\"\n\n  # This is subtle.  We map 10.245.2.2 -> minion-1.  We do this by matching a\n  # regexp and using the capture to construct the name.\n  [[ $ip =~ $ip_pattern ]] || {"
  },
  {
    "id" : "907d60f7-2d92-412b-91d4-952ab2cdb096",
    "prId" : 1402,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1e8fb88-9c7f-4155-b6b4-138461e1f969",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Ditto above. Here you probably want to use a temporary variable for the ip_to_hostname (to avoid nested quotes.) Ah, here vagrant ssh seems to take a single argument as the command, so using \"$*\" is more appropriate (to stay consistent with the behavior of the other definition of ssh-to-node.)\n\n``` shell\nssh-to-node() {\n  local node=$1\n  shift\n  local node_ip\n  node_ip=$(ip_to_hostname \"${node}\")\n  vagrant ssh \"${node_ip}\" -c \"$*\"\n}\n\nrestart-kube-proxy() {\n  ssh-to-node \"$1\" sudo systemctl restart kube-proxy\n}\n```\n",
        "createdAt" : "2014-10-15T16:47:36Z",
        "updatedAt" : "2014-10-16T15:37:00Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "efb8f0ba-de42-46f7-8a9b-fca3d0f39d98",
        "parentId" : "e1e8fb88-9c7f-4155-b6b4-138461e1f969",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Fixed to be same as gce\n",
        "createdAt" : "2014-10-16T02:47:45Z",
        "updatedAt" : "2014-10-16T15:37:00Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c4bd552730fb2a4ca6d5c85230aed4f37734e7e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +146,150 @@\n# SSH to a node by name ($1) and run a command ($2).\nfunction ssh-to-node {\n  local node=\"$1\"\n  local cmd=\"$2\""
  }
]