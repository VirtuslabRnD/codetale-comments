[
  {
    "id" : "71032fb4-6f24-4e24-8858-b4e9d5511ab6",
    "prId" : 65719,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65719#pullrequestreview-133749065",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02ab23d6-466d-48e0-a96b-34a8872d1890",
        "parentId" : null,
        "authorId" : "e4b441ba-ee59-4611-9b2e-84e49daf4a32",
        "body" : "would be nice to have a common lib for these shared functions",
        "createdAt" : "2018-07-02T19:17:45Z",
        "updatedAt" : "2018-07-02T19:17:45Z",
        "lastEditedBy" : "e4b441ba-ee59-4611-9b2e-84e49daf4a32",
        "tags" : [
        ]
      },
      {
        "id" : "fc13e408-dca1-468d-a32c-b00fd249d713",
        "parentId" : "02ab23d6-466d-48e0-a96b-34a8872d1890",
        "authorId" : "0254a5bb-d18f-428e-932d-ba25ea68f780",
        "body" : "+1 lets create a lib or base layer after the release",
        "createdAt" : "2018-07-02T19:28:06Z",
        "updatedAt" : "2018-07-02T19:28:07Z",
        "lastEditedBy" : "0254a5bb-d18f-428e-932d-ba25ea68f780",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c11f663bea48cdf8de8dddb9cc3f0b502222650",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +97,101 @@\n\ndef calculate_resource_checksum(resource):\n    ''' Calculate a checksum for a resource '''\n    md5 = hashlib.md5()"
  },
  {
    "id" : "4f3f97a7-a6c3-4b7b-bac1-f100f966e3ea",
    "prId" : 65487,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65487#pullrequestreview-132986861",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1596b28b-ed47-436a-b557-335493dcfc2f",
        "parentId" : null,
        "authorId" : "86c1724e-9e6c-4090-94be-228783fc6862",
        "body" : "I'm not sure about this one. It looks to me like the node name is only lower-cased when no cloud provider is set.\r\n\r\nHere's where the hostname gets lower-cased:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/c005b9d0ab6cd963abf66a9a12fb8ad5e48121ad/pkg/util/node/node.go#L45-L56\r\n\r\nHere's what kubelet does with it:\r\nhttps://github.com/kubernetes/kubernetes/blob/c005b9d0ab6cd963abf66a9a12fb8ad5e48121ad/pkg/kubelet/kubelet.go#L372-L384\r\n\r\nIn short: if there's a cloud provider, kubelet will get the node name from that instead of from `GetHostname`.\r\n\r\nFor the AWS cloud provider, I don't see it being lower-cased:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/c005b9d0ab6cd963abf66a9a12fb8ad5e48121ad/pkg/cloudprovider/providers/aws/aws.go#L4294-L4296\r\n\r\nI don't actually know if it's possible for AWS's `PrivateDnsName` to contain uppercase characters, but I would like to err on the side of caution and assume it might.\r\n\r\n@dshcherb can we reduce the scope of this change to only apply when no `cloud-provider` is set? I would feel safest with something like this instead:\r\n```\r\nif cloud_provider == '':\r\n    return gethostname().lower()\r\nelif cloud_provider == 'aws':\r\n    return getfqdn()\r\nelse:\r\n    return gethostname()\r\n```",
        "createdAt" : "2018-06-27T20:21:13Z",
        "updatedAt" : "2018-06-27T20:21:13Z",
        "lastEditedBy" : "86c1724e-9e6c-4090-94be-228783fc6862",
        "tags" : [
        ]
      },
      {
        "id" : "ba86ac8b-329d-4eee-a294-6a30998cef83",
        "parentId" : "1596b28b-ed47-436a-b557-335493dcfc2f",
        "authorId" : "2567e91c-8993-491c-9cca-59da6476a752",
        "body" : "The K8s docs seem to be pretty clear on conventions:\r\n\r\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/names/\r\n\"By convention, the names of Kubernetes resources should be up to maximum length of 253 characters and consist of *lower case alphanumeric characters*, -, and ., but certain resources have *more specific restrictions*.\"\r\nhttps://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md - this has a bit vague references to resources specifically but mentions DNS labels and lowercase nevertheless.\r\n\r\nI have also followed some code paths (from \"node create\" to the request validation) - looks like an uppercase node (resource) name would not pass ValidateNodeName check as it requires a node name to be have the following regex:\r\n`const dns1035LabelFmt string = \"[a-z]([-a-z0-9]*[a-z0-9])?\"`\r\n\r\nhttps://gist.github.com/dshcherb/1ba9b9cb62f8753de210bc459115c07a\r\n\r\nI could reduce the scope but I don't think this is necessary due to the above.\r\n\r\nThoughts?",
        "createdAt" : "2018-06-27T21:38:12Z",
        "updatedAt" : "2018-06-27T21:38:39Z",
        "lastEditedBy" : "2567e91c-8993-491c-9cca-59da6476a752",
        "tags" : [
        ]
      },
      {
        "id" : "98325b52-0b44-4f13-8936-e16fd54da546",
        "parentId" : "1596b28b-ed47-436a-b557-335493dcfc2f",
        "authorId" : "86c1724e-9e6c-4090-94be-228783fc6862",
        "body" : "Thanks @dshcherb. You're right - it looks like the apiserver does adhere strictly to that convention:\r\n\r\n```\r\n$ cat test-node.yaml \r\napiVersion: v1\r\nkind: Node\r\nmetadata:\r\n  name: TEST-NODE\r\n\r\n$ kubectl create -f test-node.yaml \r\nThe Node \"TEST-NODE\" is invalid: metadata.name: Invalid value: \"TEST-NODE\": a DNS-1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*')\r\n```\r\n\r\nI'm +1 to this as-is then - the charm should always convert it to lower case. Thanks for setting me straight.",
        "createdAt" : "2018-06-28T19:28:19Z",
        "updatedAt" : "2018-06-28T19:28:19Z",
        "lastEditedBy" : "86c1724e-9e6c-4090-94be-228783fc6862",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e2caf02ac4579b65b338695f438ef9af841fc85",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +1059,1063 @@        cloud_provider = 'openstack'\n    if cloud_provider == 'aws':\n        return getfqdn().lower()\n    else:\n        return gethostname().lower()"
  },
  {
    "id" : "ed35b6e8-52fd-4a9a-8ee0-05e1a47ee282",
    "prId" : 61542,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61542#pullrequestreview-108695028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90e910e1-256a-4a7c-ade2-1e9cc54c7e66",
        "parentId" : null,
        "authorId" : "86c1724e-9e6c-4090-94be-228783fc6862",
        "body" : "Will this work with 1.7? According to the 1.7 kubelet docs here, DevicePlugins doesn't exist yet: https://v1-7.docs.kubernetes.io/docs/admin/kubelet/\r\n\r\nChecking with @tvansteenburgh to see if we still need to support 1.7",
        "createdAt" : "2018-04-02T17:27:32Z",
        "updatedAt" : "2018-04-02T18:21:12Z",
        "lastEditedBy" : "86c1724e-9e6c-4090-94be-228783fc6862",
        "tags" : [
        ]
      },
      {
        "id" : "6cb0e13c-f625-4348-b70d-8983d1470e0f",
        "parentId" : "90e910e1-256a-4a7c-ade2-1e9cc54c7e66",
        "authorId" : "86c1724e-9e6c-4090-94be-228783fc6862",
        "body" : "Oh, nevermind, I see now that we only enable GPU support on 1.9+.",
        "createdAt" : "2018-04-02T17:30:57Z",
        "updatedAt" : "2018-04-02T18:21:12Z",
        "lastEditedBy" : "86c1724e-9e6c-4090-94be-228783fc6862",
        "tags" : [
        ]
      },
      {
        "id" : "84545e9d-17ee-4172-af9b-d4eabe896436",
        "parentId" : "90e910e1-256a-4a7c-ade2-1e9cc54c7e66",
        "authorId" : "0254a5bb-d18f-428e-932d-ba25ea68f780",
        "body" : "We do not install cuda anymore so any version less than 1.9 will not have gpu support.",
        "createdAt" : "2018-04-02T18:23:55Z",
        "updatedAt" : "2018-04-02T18:23:55Z",
        "lastEditedBy" : "0254a5bb-d18f-428e-932d-ba25ea68f780",
        "tags" : [
        ]
      }
    ],
    "commit" : "578cf9bd5750cbeb93d83721ed78c3064cb4da24",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +634,638 @@                    '--feature-gates=Accelerators=true,DevicePlugins=true '\n                    'to kubelet')\n        kubelet_opts['feature-gates'] = 'Accelerators=true,DevicePlugins=true'\n\n    configure_kubernetes_service('kubelet', kubelet_opts, 'kubelet-extra-args')"
  },
  {
    "id" : "9c1f57c0-a334-4183-bf98-f6421d166464",
    "prId" : 55334,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55334#pullrequestreview-75258721",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "253860b2-2fa2-4cf2-8ecf-97b7b318c16a",
        "parentId" : null,
        "authorId" : "86c1724e-9e6c-4090-94be-228783fc6862",
        "body" : "I need to test that the GPU functionality still works with this change. I don't think our automated tests cover it.",
        "createdAt" : "2017-11-08T19:34:54Z",
        "updatedAt" : "2017-11-08T19:34:54Z",
        "lastEditedBy" : "86c1724e-9e6c-4090-94be-228783fc6862",
        "tags" : [
        ]
      },
      {
        "id" : "e416d689-4386-4701-9352-90c304dca523",
        "parentId" : "253860b2-2fa2-4cf2-8ecf-97b7b318c16a",
        "authorId" : "86c1724e-9e6c-4090-94be-228783fc6862",
        "body" : "Tested with a GPU worker. This worked how I would expect, so we should be good.",
        "createdAt" : "2017-11-08T21:39:39Z",
        "updatedAt" : "2017-11-08T21:39:39Z",
        "lastEditedBy" : "86c1724e-9e6c-4090-94be-228783fc6862",
        "tags" : [
        ]
      }
    ],
    "commit" : "9036d07cb8f1089a7cf6f67b0960e6a5f53c32aa",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +537,541 @@        else:\n            hookenv.log('Adding --feature-gates=Accelerators=true to kubelet')\n            kubelet_opts['feature-gates'] = 'Accelerators=true'\n\n    configure_kubernetes_service('kubelet', kubelet_opts, 'kubelet-extra-args')"
  },
  {
    "id" : "ce2cf916-d65d-4dfb-ae4b-026e40adb23e",
    "prId" : 47835,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47835#pullrequestreview-45553083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86bb33f5-f0cf-4c3f-b23f-c8df7b953277",
        "parentId" : null,
        "authorId" : "86c1724e-9e6c-4090-94be-228783fc6862",
        "body" : "This surprises me -- are we getting two copies of the kube-control interface here?",
        "createdAt" : "2017-06-21T18:30:15Z",
        "updatedAt" : "2017-06-28T07:48:39Z",
        "lastEditedBy" : "86c1724e-9e6c-4090-94be-228783fc6862",
        "tags" : [
        ]
      },
      {
        "id" : "ea3cd5ff-6d46-4224-8e01-a14f84ff30df",
        "parentId" : "86bb33f5-f0cf-4c3f-b23f-c8df7b953277",
        "authorId" : "1d78b7b8-169e-44e7-bccb-121c5ee2fc3b",
        "body" : "We are, each state thats set off of that interface, passes the interface into the method. It got me too when I was prototyping.",
        "createdAt" : "2017-06-21T20:58:26Z",
        "updatedAt" : "2017-06-28T07:48:39Z",
        "lastEditedBy" : "1d78b7b8-169e-44e7-bccb-121c5ee2fc3b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0525b84a45b521125aecb1c2cd50484c41aff262",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +307,311 @@      'kube-control.dns.available', 'kube-control.auth.available',\n      'cni.available', 'kubernetes-worker.restart-needed')\ndef start_worker(kube_api, kube_control, auth_control, cni):\n    ''' Start kubelet using the provided API and DNS info.'''\n    servers = get_kube_api_servers(kube_api)"
  },
  {
    "id" : "65bfc73d-34fa-408c-af3a-817552254e84",
    "prId" : 43467,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43467#pullrequestreview-29009015",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "436adb42-a871-4603-bc70-e754cef9681b",
        "parentId" : null,
        "authorId" : "87ab1d19-ad39-40d0-a045-817039414280",
        "body" : "Can you open a bug for this and cc @cmluciano",
        "createdAt" : "2017-03-24T21:00:09Z",
        "updatedAt" : "2017-03-24T21:04:55Z",
        "lastEditedBy" : "87ab1d19-ad39-40d0-a045-817039414280",
        "tags" : [
        ]
      }
    ],
    "commit" : "c87ac5ef2e29e02999ec73dcb0c1f5403a02f816",
    "line" : 237,
    "diffHunk" : "@@ -1,1 +631,635 @@    # think that the node has 0 gpus (as shown by the output of\n    # `kubectl get nodes -o yaml`\n    check_call(['nvidia-smi'])\n\n    set_state('kubernetes-worker.gpu.enabled')"
  },
  {
    "id" : "f75a267c-4cd2-4478-bb37-3147d81f4390",
    "prId" : 43467,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43467#pullrequestreview-29010750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e1d286e-c0c9-47ba-9ee5-ead423bb7c72",
        "parentId" : null,
        "authorId" : "87ab1d19-ad39-40d0-a045-817039414280",
        "body" : "Is this the only check for detecting if GPUs are exposed? I may be missing logic somewhere else.",
        "createdAt" : "2017-03-24T21:04:52Z",
        "updatedAt" : "2017-03-24T21:04:55Z",
        "lastEditedBy" : "87ab1d19-ad39-40d0-a045-817039414280",
        "tags" : [
        ]
      },
      {
        "id" : "7b9692e8-a9e6-4d30-921d-e10e0ef1b2e3",
        "parentId" : "7e1d286e-c0c9-47ba-9ee5-ead423bb7c72",
        "authorId" : "53d41d12-3c77-4e12-bbe4-30d83041c81a",
        "body" : "Yeah, the actual logic for detection is in a separate layer that this charm uses (https://github.com/juju-solutions/layer-nvidia-cuda). If GPUs are detected, the nvidia-cuda layer sets the 'cuda.installed' state so other layers can react to it.",
        "createdAt" : "2017-03-24T21:09:06Z",
        "updatedAt" : "2017-03-24T21:09:06Z",
        "lastEditedBy" : "53d41d12-3c77-4e12-bbe4-30d83041c81a",
        "tags" : [
        ]
      }
    ],
    "commit" : "c87ac5ef2e29e02999ec73dcb0c1f5403a02f816",
    "line" : 200,
    "diffHunk" : "@@ -1,1 +594,598 @@\n\n@when('cuda.installed')\n@when('kubernetes-worker.components.installed')\n@when('kubernetes-worker.config.created')"
  }
]