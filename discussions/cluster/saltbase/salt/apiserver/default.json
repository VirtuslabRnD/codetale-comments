[
  {
    "id" : "024e86ff-85fa-45d0-bf49-5fbd8c9304e8",
    "prId" : 1011,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0af9612-8e4c-4a6f-b2a3-f92071d76f6f",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Not sure why it is working for you, but see here: http://jinja.pocoo.org/docs/dev/templates/#map.\n\nAlso, the azure snippet above uses join...\n",
        "createdAt" : "2014-08-25T16:50:13Z",
        "updatedAt" : "2014-08-25T18:17:52Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "77bc5400-7741-413f-a75a-46beb27eca71",
        "parentId" : "b0af9612-8e4c-4a6f-b2a3-f92071d76f6f",
        "authorId" : "41c1fd91-9225-42cd-abbe-97f631a5a9f9",
        "body" : "The problem is that every element is not an object but a list itself (of IPs per minion). I wasn't able to find a way to get the first element of that list. I would use a lambda to grab it, but this isn't supported from Jinja.\n",
        "createdAt" : "2014-08-25T16:52:22Z",
        "updatedAt" : "2014-08-25T18:17:52Z",
        "lastEditedBy" : "41c1fd91-9225-42cd-abbe-97f631a5a9f9",
        "tags" : [
        ]
      },
      {
        "id" : "b3dcd646-351e-4016-92ec-068c9fe3794f",
        "parentId" : "b0af9612-8e4c-4a6f-b2a3-f92071d76f6f",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Ah -- I see.  I think you can use a filter there and there is a `first` filter.\n\n```\nsalt['mine.get']('roles:kubernetes-pool', 'network.ip_addrs', expr_form='grain').values()|map('first')|join(',')\n```\n\nBut this stuff is all trial and error :)\n",
        "createdAt" : "2014-08-25T17:03:41Z",
        "updatedAt" : "2014-08-25T18:17:52Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "6f185529-6480-4d3c-922a-3803ffa35260",
        "parentId" : "b0af9612-8e4c-4a6f-b2a3-f92071d76f6f",
        "authorId" : "41c1fd91-9225-42cd-abbe-97f631a5a9f9",
        "body" : "That sure is an... interesting example ;). I'll give it another shot.\n",
        "createdAt" : "2014-08-25T17:06:21Z",
        "updatedAt" : "2014-08-25T18:17:52Z",
        "lastEditedBy" : "41c1fd91-9225-42cd-abbe-97f631a5a9f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "181337137dd888374e72811bb46b704a8cdc986d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +35,39 @@  MACHINE_IPS+=( {{ addrs[0] }} )\n  {% endfor %}\n  {% set machines = \"-machines=$(echo ${MACHINE_IPS[@]} | xargs -n1 echo | paste -sd,)\" %}\n{% endif %}\n"
  },
  {
    "id" : "0c8c715d-6d11-4660-bd7b-533c43a881c5",
    "prId" : 1011,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44357e69-1f1c-4ec3-855b-ac9672e02d71",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This is showing up in the output for normal vagrant, and should not be there.  Need to make the else more specific (regular vagrant use the vagrant cloud provider and doesn't need to calculate machine IPs).\n",
        "createdAt" : "2014-08-25T21:03:49Z",
        "updatedAt" : "2014-08-25T21:04:09Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "181337137dd888374e72811bb46b704a8cdc986d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +31,35 @@  # Use a bash array to build the value we need. It doesn't appear to be\n  # possible call functions map or zip, or use lambda's from Jinja.\n  MACHINE_IPS=()\n  {% for addrs in salt['mine.get']('roles:kubernetes-pool', 'network.ip_addrs', expr_form='grain').values() %}\n  MACHINE_IPS+=( {{ addrs[0] }} )"
  }
]