[
  {
    "id" : "a76693c4-ce4f-476f-8522-7f3a59d21a1f",
    "prId" : 10790,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b11ee948-bce3-4698-9e8e-37790f60639b",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Given that this was missed twice, a comment stating what it's doing would be useful. Same goes for the loop below. \n\nThis is creating the namespace that the addons will go into.\n",
        "createdAt" : "2015-07-07T00:35:43Z",
        "updatedAt" : "2015-07-07T01:12:37Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "90e105521c2ae08139e19e698d7acb5e61b30884",
    "line" : null,
    "diffHunk" : "@@ -1,1 +143,147 @@\n# Create the namespace that will be used to host the cluster-level add-ons.\nstart_addon /etc/kubernetes/addons/namespace.yaml 100 10 \"\" &\n\n# Wait for the default service account to be created in the kube-system namespace."
  },
  {
    "id" : "205c5a17-7b21-4f4d-9ee8-a16be57354f0",
    "prId" : 10542,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0857a411-1d3a-4d2b-b97f-74956d87c289",
        "parentId" : null,
        "authorId" : null,
        "body" : "I'm still concerned that there is no timeout on this retry loop, as per my comments in this PR's predecessor.\n",
        "createdAt" : "2015-06-30T17:38:09Z",
        "updatedAt" : "2015-06-30T17:38:09Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "69a55389-4a67-42c0-8129-180a7269eeae",
        "parentId" : "0857a411-1d3a-4d2b-b97f-74956d87c289",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "I considered this for a short while, but there's almost no recourse on timeout. You can declare defeat, but you'll have no add-on objects created, or worse, you'll create them badly.\n",
        "createdAt" : "2015-06-30T18:15:31Z",
        "updatedAt" : "2015-06-30T18:15:31Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "52541ab7-b6ad-4c12-b73d-e4c5d93b3851",
        "parentId" : "0857a411-1d3a-4d2b-b97f-74956d87c289",
        "authorId" : null,
        "body" : "At least generate a horrible-looking error message here if you're retried more than a reasonable number of times, and return non-zero from this script.  At least that way we get an explicit error with details of what went wrong, rahter than a silently not working cluster.\n",
        "createdAt" : "2015-06-30T18:28:49Z",
        "updatedAt" : "2015-06-30T18:28:49Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "70721658-5f03-4527-90d3-57eec365380a",
        "parentId" : "0857a411-1d3a-4d2b-b97f-74956d87c289",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Creeping elegance. This whole script is due for a rewrite in Go post-1.0, and is running async of the main startup block, so there's no opportunity to interact with anything. You could destroy the `/etc/motd` (which is what I changed the startup script to do to indicate things were good or not), but otherwise you don't have a lot of places to reach out to - we don't have an alerting system in place that you can hook into at this point.\n",
        "createdAt" : "2015-06-30T18:32:58Z",
        "updatedAt" : "2015-06-30T18:32:58Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "f21b6b89d109d44662c4041a0378804b26f1a26c",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +137,141 @@# Wait for the default service account\ntoken_found=\"\"\nwhile [ -z \"${token_found}\" ]; do\n  sleep .5\n  token_found=$(${KUBECTL} get serviceaccount default -o template -t \"{{with index .secrets 0}}{{.name}}{{end}}\" || true)"
  },
  {
    "id" : "c42ace27-88e8-4834-abd7-0b85e5e231b1",
    "prId" : 10487,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9996f516-52c3-4ed4-9e7f-982a4bbfc8b0",
        "parentId" : null,
        "authorId" : "35dc52fd-2236-4a0d-b72a-ae03d1ba7026",
        "body" : "Addon-updater does not deal with secrets. You have to take care of secrets in the default namespace here.\n",
        "createdAt" : "2015-07-01T19:42:45Z",
        "updatedAt" : "2015-07-06T22:08:37Z",
        "lastEditedBy" : "35dc52fd-2236-4a0d-b72a-ae03d1ba7026",
        "tags" : [
        ]
      },
      {
        "id" : "c64ac5af-80b0-4e52-a995-26433b8f2891",
        "parentId" : "9996f516-52c3-4ed4-9e7f-982a4bbfc8b0",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "I believe this comment is no longer applicable. (Just documenting in case someone is looking at the same view I am).\n\nWe no longer handle any updates in this script, so we're just creating the kube-system token here.\n",
        "createdAt" : "2015-07-06T17:16:25Z",
        "updatedAt" : "2015-07-06T22:08:37Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "9548b5b1-8bfd-4e86-95b1-72dd5745cf0f",
        "parentId" : "9996f516-52c3-4ed4-9e7f-982a4bbfc8b0",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "Do you want me to remove the comment, do another rebase and push?\nOr deal with it in a suibsequent PR? There are still some other minor\nthings that need to be dealt with (e.g. some extra whitespace).\nHowever, out of paranoia, let me point out that the currently pushed\nversion of this PR has had several good local e2e runs on my desktop\nmachine.\n\nOn Mon, Jul 6, 2015 at 10:17 AM, Zach Loafman notifications@github.com\nwrote:\n\n> In cluster/saltbase/salt/kube-addons/kube-addons.sh\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/10487#discussion_r33958104\n> :\n> \n> > @@ -82,36 +111,38 @@ metadata:\n> >    name: token-${safe_username}\n> >  type: Opaque\n> >  EOF\n> > -  create-resource-from-string \"${secretyaml}\" 100 10 \"Secret-for-token-for-user-${username}\" &\n> > -  create-resource-from-string \"${secretyaml}\" 100 10 \"Secret-for-token-for-user-${username}\" \"${SYSTEM_NAMESPACE}\" &\n> \n> I believe this comment is no longer applicable. (Just documenting in case\n> someone is looking at the same view I am).\n> \n> We no longer handle any updates in this script, so we're just creating the\n> kube-system token here.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/10487/files#r33958104\n> .\n",
        "createdAt" : "2015-07-06T17:19:30Z",
        "updatedAt" : "2015-07-06T22:08:37Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      },
      {
        "id" : "5a4b3341-6a48-4dbe-a10f-357fa5cced98",
        "parentId" : "9996f516-52c3-4ed4-9e7f-982a4bbfc8b0",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Sorry, I should have been specific - I was responding to a GitHub line note. It has a tendency to leave comments if the code hasn't changed. In this case, the code didn't change, but the surrounding code did change, and the line note was no longer applicable. I was merely documenting for posterity that anyone that happened to be looking at the GitHub default diff view didn't have to pay attention to @marekbiskup's comment, and why.\n",
        "createdAt" : "2015-07-06T17:23:07Z",
        "updatedAt" : "2015-07-06T22:08:37Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "5658ae72-e4a2-489b-bf92-a42fb22f6b17",
        "parentId" : "9996f516-52c3-4ed4-9e7f-982a4bbfc8b0",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "Comment removed.\n",
        "createdAt" : "2015-07-06T18:29:32Z",
        "updatedAt" : "2015-07-06T22:08:37Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "988aa6fdf67110cdfc012bf79a15d39c337f58bc",
    "line" : null,
    "diffHunk" : "@@ -1,1 +87,91 @@type: Opaque\nEOF\n  create-resource-from-string \"${secretyaml}\" 100 10 \"Secret-for-token-for-user-${username}\" \"${SYSTEM_NAMESPACE}\" &\n}\n"
  },
  {
    "id" : "8fa7aa16-3759-4cf8-9b2f-640e11253e06",
    "prId" : 10487,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85fa72c1-f09d-417b-93ff-72790b5ea822",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Why is the namespace \"default\" rather than kube-system?\n",
        "createdAt" : "2015-07-06T18:07:58Z",
        "updatedAt" : "2015-07-06T22:08:37Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "cc24f423-ae31-4c7e-b213-02a4e62d2c4b",
        "parentId" : "85fa72c1-f09d-417b-93ff-72790b5ea822",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Ah, this is why LimitRange is created in the default namespace.\n",
        "createdAt" : "2015-07-06T18:16:12Z",
        "updatedAt" : "2015-07-06T22:08:37Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "988aa6fdf67110cdfc012bf79a15d39c337f58bc",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +180,184 @@# default namespace.\nfor obj in $(find /etc/kubernetes/admission-controls \\( -name \\*.yaml -o -name \\*.json \\)); do\n  start_addon ${obj} 100 10 default &\n  echo \"++ obj ${obj} is created ++\"\ndone"
  },
  {
    "id" : "77cb0e83-af65-42bf-ba3e-28b12e1d2c20",
    "prId" : 9419,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d1fef0a-3de2-4170-bb4a-aae00335786a",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "@justinsb this should be a no-op if this file doesn't exist, but since I believe this runs on AWS as well cc'ing you as an FYI. \n",
        "createdAt" : "2015-06-09T05:40:00Z",
        "updatedAt" : "2015-06-09T05:40:00Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "aeb0068547834d02d5b104f25fc6913be07d628c",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +123,127 @@# Load the kube-env, which has all the environment variables we care\n# about, in a flat yaml format.\nkube_env_yaml=\"/var/cache/kubernetes-install/kube_env.yaml\"\nif [ ! -e \"${kubelet_kubeconfig_file}\" ]; then\n  eval $(python -c '''"
  },
  {
    "id" : "9937dcf9-604d-458f-b1cd-526ab8716a40",
    "prId" : 6384,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f7632af-6a16-47fb-a30e-2328b3ed3269",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Make these locals in this PR and save some time in the other? :)\n",
        "createdAt" : "2015-04-02T21:28:47Z",
        "updatedAt" : "2015-04-02T21:28:47Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9570b3daa8f8a502b0716fe05717c217fa0173b",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +24,28 @@# $3 delay in seconds between two consecutive tries\nfunction start_addon() {\n  addon=$1;\n  tries=$2;\n  delay=$3;"
  },
  {
    "id" : "d3ba2e2b-fe9e-414d-824d-31b9d34a9e6b",
    "prId" : 5470,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d685c14-7288-4f65-92a3-6ecc5f9358a3",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Blah, I didn't enforce it well in `create-object`, but you can fix it while you're in here. :)\n\nThese should all be `local`. Probably `local -r token=$1`, etc, since they look readonly.\n",
        "createdAt" : "2015-04-02T18:43:31Z",
        "updatedAt" : "2015-04-02T23:01:10Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "8e01605e-0192-4fe5-a174-f0566466d579",
        "parentId" : "5d685c14-7288-4f65-92a3-6ecc5f9358a3",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "ok\n",
        "createdAt" : "2015-04-02T21:35:39Z",
        "updatedAt" : "2015-04-02T23:01:10Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "59daeabaee6efcf4b022cb9c6a0b5c6597375566",
    "line" : null,
    "diffHunk" : "@@ -1,1 +20,24 @@KUBECTL=/usr/local/bin/kubectl\n\nfunction create-kubernetesauth-secret() {\n  local -r token=$1\n  local -r username=$2"
  },
  {
    "id" : "81be6caa-eaa1-4673-a587-f06f4dd7868b",
    "prId" : 5470,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b7b04ab-6cfe-422b-95f8-a5ff746f45eb",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Similarly local, but prior to this so the error code is separated.\n",
        "createdAt" : "2015-04-02T18:44:34Z",
        "updatedAt" : "2015-04-02T23:01:10Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "7f26e6c8-d199-4487-bca7-6a0455296e5d",
        "parentId" : "8b7b04ab-6cfe-422b-95f8-a5ff746f45eb",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "I don't understand what you are asking for.\n",
        "createdAt" : "2015-04-02T21:36:29Z",
        "updatedAt" : "2015-04-02T23:01:10Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "3284453d-7561-423c-a95a-312e32613f2a",
        "parentId" : "8b7b04ab-6cfe-422b-95f8-a5ff746f45eb",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "```\nlocal kafile\nkafile=$( )\n```\n\nIt's less important in the script as it stands because it currently violates our existing standards of having:\n\n```\nset -o errexit\nset -o nounset\nset -o pipefail\n```\n\n... but if `errexit` were set, the setting of the variable and the \"local\" need to be on separate lines. That's all I was saying.\n",
        "createdAt" : "2015-04-02T21:39:55Z",
        "updatedAt" : "2015-04-02T23:01:10Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "59daeabaee6efcf4b022cb9c6a0b5c6597375566",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +28,32 @@  # TODO(etune): put apiserver certs into secret too, and reference from authfile,\n  # so that \"Insecure\" is not needed.\n  kafile=$(echo \"{\\\"BearerToken\\\": \\\"${token}\\\", \\\"Insecure\\\": true }\" | base64 -w0)\n  read -r -d '' secretjson <<EOF\napiVersion: v1beta1"
  }
]