[
  {
    "id" : "e4209d88-07a0-429a-b7db-6b9b51726fe8",
    "prId" : 81345,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81345#pullrequestreview-274146627",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62b887dc-2cb0-4e40-b519-6870cf357b40",
        "parentId" : null,
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "fix the following failure.\r\n```\r\nIn ./cluster/validate-cluster.sh line 42:\r\n      echo \"('kubectl $@' failed, giving up)\" >&2\r\n                      ^-- SC2145: Argument mixes string and array. Use * or separate argument.\r\n```",
        "createdAt" : "2019-08-13T08:59:27Z",
        "updatedAt" : "2019-10-01T06:36:11Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9c7255ab40ee707e5b861ac88dd7855565c59a8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +40,44 @@    tries=$((tries-1))\n    if [[ ${tries} -le 0 ]]; then\n      echo \"('kubectl $*' failed, giving up)\" >&2\n      return 1\n    fi"
  },
  {
    "id" : "843516fd-6cf9-4847-9f1b-86b821431d97",
    "prId" : 81345,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81345#pullrequestreview-282321201",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a46d90ad-f908-40a8-b89b-c41c510377ed",
        "parentId" : null,
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "fix SC2102 and SC2086.\r\n```\r\nIn ./cluster/validate-cluster.sh line 62:\r\n    EXPECTED_NUM_NODES=$(gcloud -q compute instances list --project=\"${PROJECT}\" --format=[no-heading] \\\r\n                                                                                          ^----------^ SC2102: Ranges can only match single chars (mentioned due to duplicates).\r\n```\r\n```\r\nIn ./cluster/validate-cluster.sh line 63:\r\n      --filter=\"(name ~ '${NODE_INSTANCE_PREFIX}.*' OR name ~ '${WINDOWS_NODE_INSTANCE_PREFIX}.*') AND zone:($(gcloud -q compute zones list --project=\"${PROJECT}\" --filter=region=${REGION} --format=csv[no-heading]\\(name\\) | tr \"\\n\" \",\" | sed  \"s/,$//\"))\" | wc -l)\r\n                                                                                                                                                                                   ^-------^ SC2086: Double quote to prevent globbing and word splitting.\r\n                                                                                                                                                                                                         ^----------^ SC2102: Ranges can only match single chars (mentioned due to duplicates).\r\n```\r\nI have not run validate-cluster.sh because I have no kubernetes on GCP.\r\nBut I tested `gcloud` command with these changes in my environment, and no failure appeared.",
        "createdAt" : "2019-08-13T09:04:21Z",
        "updatedAt" : "2019-10-01T06:36:11Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      },
      {
        "id" : "6c224855-f404-4e5c-8063-e5f38ca70000",
        "parentId" : "a46d90ad-f908-40a8-b89b-c41c510377ed",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "nested quoting changes LGTM",
        "createdAt" : "2019-08-31T22:06:47Z",
        "updatedAt" : "2019-10-01T06:36:11Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9c7255ab40ee707e5b861ac88dd7855565c59a8",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +61,65 @@  if [[ \"${MULTIZONE:-}\" == \"true\" ]]; then\n    EXPECTED_NUM_NODES=$(gcloud -q compute instances list --project=\"${PROJECT}\" --format=\"[no-heading]\" \\\n      --filter=\"(name ~ '${NODE_INSTANCE_PREFIX}.*' OR name ~ '${WINDOWS_NODE_INSTANCE_PREFIX}.*') AND zone:($(gcloud -q compute zones list --project=\"${PROJECT}\" --filter=region=\"${REGION}\" --format=\"csv[no-heading](name)\" | tr \"\\n\" \",\" | sed  \"s/,$//\"))\" | wc -l)\n    echo \"Computing number of nodes, NODE_INSTANCE_PREFIX=${NODE_INSTANCE_PREFIX}, REGION=${REGION}, EXPECTED_NUM_NODES=${EXPECTED_NUM_NODES}\"\n  fi"
  },
  {
    "id" : "5f084d11-ea8d-4fef-bed6-eed46eca5a16",
    "prId" : 74438,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74438#pullrequestreview-208279174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3fae0be9-057b-48f0-8533-24e58fbceb3e",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "this is a pretty horrifying line",
        "createdAt" : "2019-02-27T00:17:27Z",
        "updatedAt" : "2019-02-27T00:40:11Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "0bb25290c8e4464e6fe1076c719a3d2d7ec18621",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +57,61 @@  if [[ \"${MULTIZONE:-}\" == \"true\" ]]; then\n    EXPECTED_NUM_NODES=$(gcloud -q compute instances list --project=\"${PROJECT}\" --format=[no-heading] \\\n      --filter=\"(name ~ '${NODE_INSTANCE_PREFIX}.*' OR name ~ '${WINDOWS_NODE_INSTANCE_PREFIX}.*') AND zone:($(gcloud -q compute zones list --project=\"${PROJECT}\" --filter=region=${REGION} --format=csv[no-heading]\\(name\\) | tr \"\\n\" \",\" | sed  \"s/,$//\"))\" | wc -l)\n    echo \"Computing number of nodes, NODE_INSTANCE_PREFIX=${NODE_INSTANCE_PREFIX}, REGION=${REGION}, EXPECTED_NUM_NODES=${EXPECTED_NUM_NODES}\"\n  fi"
  },
  {
    "id" : "2e492b50-d0be-4f98-9b27-5d6dfade944b",
    "prId" : 17401,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80901260-6938-42dc-96fc-71608af22a7a",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "trivia: If you want to be make this more idiomatic bash (ie, less readable to normal human beings), the bashism for this is `|| :`\n",
        "createdAt" : "2015-11-20T04:02:27Z",
        "updatedAt" : "2015-11-25T20:00:56Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c72696aad662bfd19604879c542cb8b700e78df",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +41,45 @@  # for clusters where the master node is registered, the apiserver will become\n  # available and then get restarted as the kubelet configures the docker bridge.\n  nodes_status=$(\"${KUBE_ROOT}/cluster/kubectl.sh\" get nodes -o template --template='{{range .items}}{{range .status.conditions}}{{if eq .type \"Ready\"}}{{.type}}:{{.status}},{{end}}{{end}}{{end}}' --api-version=v1) || true\n  found=$(echo \"${nodes_status}\" | tr \",\" \"\\n\" | grep -c 'Ready:') || true\n  ready=$(echo \"${nodes_status}\" | tr \",\" \"\\n\" | grep -c 'Ready:True') || true"
  },
  {
    "id" : "669ac68a-5b4b-4d83-80e7-dd5066ac8db5",
    "prId" : 10008,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4aa1c73-a7ff-4eda-a9c6-f19cd2a69448",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "I think that this will never work if api version != v1. \n",
        "createdAt" : "2015-07-04T06:50:34Z",
        "updatedAt" : "2015-08-07T13:24:15Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "f99a46bc-c371-4dc0-bcce-e6743f5e28e9",
        "parentId" : "e4aa1c73-a7ff-4eda-a9c6-f19cd2a69448",
        "authorId" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "body" : "There's a value initial of `componentstatuses` and `healthy`. It will not pass the check unless these two values are handled properly for each version. Currently for v1, it works. For the coming v2 or else, we need to define a different handle process for them other than for v1.\n",
        "createdAt" : "2015-07-05T03:52:03Z",
        "updatedAt" : "2015-08-07T13:24:15Z",
        "lastEditedBy" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "tags" : [
        ]
      },
      {
        "id" : "290e3194-a416-45f5-84b9-6abb85379821",
        "parentId" : "e4aa1c73-a7ff-4eda-a9c6-f19cd2a69448",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Again, I don't see why this change needs to be in this PR.\n",
        "createdAt" : "2015-07-24T07:19:27Z",
        "updatedAt" : "2015-08-07T13:24:15Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "33e6e002-80fb-4f00-9b43-495afd711ded",
        "parentId" : "e4aa1c73-a7ff-4eda-a9c6-f19cd2a69448",
        "authorId" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "body" : "This change is not necessary in this PR. Just a 'by the way' work.\n",
        "createdAt" : "2015-07-28T07:55:06Z",
        "updatedAt" : "2015-08-07T13:24:15Z",
        "lastEditedBy" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "tags" : [
        ]
      },
      {
        "id" : "fb381a18-3767-4c85-93b7-7cd8aea451f9",
        "parentId" : "e4aa1c73-a7ff-4eda-a9c6-f19cd2a69448",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "If you are going to add this change, I again would recommend using `-o template` to extract the values:\n\n```\n$ kubectl get componentstatuses -o template --template='{{range .items}}{{with index .conditions 0}}{{.type}}:{{.status}},{{end}}{{end}}' --api-version=v1\nHealthy:True,Healthy:True,Healthy:True,\n```\n",
        "createdAt" : "2015-08-06T16:45:40Z",
        "updatedAt" : "2015-08-07T13:24:15Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "e63d227bdff7a1a25bc9f45191b9a6745697ec2a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +74,78 @@  healthy=$(echo \"${cs_status}\" | tr \",\" \"\\n\" | grep -c 'Healthy:True') || true\n\n  if ((componentstatuses > healthy)); then\n    if ((attempt < 5)); then\n      echo -e \"${color_yellow}Cluster not working yet.${color_norm}\""
  },
  {
    "id" : "adc25275-463a-4be9-afe0-2c6ef2345865",
    "prId" : 7147,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5388d7b6-5ecc-4dce-a7cc-55ef28a6613a",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Is the problem the use of `:alnum:` etc?\n",
        "createdAt" : "2015-04-21T23:42:46Z",
        "updatedAt" : "2015-04-22T13:51:42Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "acb64e66e8ea036ecd0c7f4cd9d5d13526c8f2b7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +62,66 @@  non_success_count=$(echo \"${kubectl_output}\" | \\\n    sed -n 's/^[[:alnum:][:punct:]]/&/p' | \\\n    grep --invert-match -c '^[[:alnum:][:punct:]]\\{1,\\}[[:space:]]\\{1,\\}Healthy')\n\n  if ((non_success_count > 1)); then"
  },
  {
    "id" : "b1a70e25-fbbb-453e-81bb-5ee67cf25475",
    "prId" : 2816,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c1b3d7e-d864-4b25-8c58-c0f21aac91d9",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "This variable should be marked local.\n",
        "createdAt" : "2014-12-10T21:24:13Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "1beaeb1f-1f3c-42ba-8727-48e716661012",
        "parentId" : "5c1b3d7e-d864-4b25-8c58-c0f21aac91d9",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "Ooops, fixed.\n",
        "createdAt" : "2014-12-10T23:16:08Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ce71d1e33573e2962e34ebcb73c89e3e4c75067",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +61,65 @@    # Grep returns an exit status of 1 when line is not found, so we need the : to always return a 0 exit status\n    # Make several attempts to deal with slow cluster birth.\n    attempt=0\n    while true; do\n      echo -n \"Attempt $((attempt+1)) to find ${MINION_NAMES[$i]} ...\""
  },
  {
    "id" : "a5077b64-3200-4f15-97f8-ee8f7facb4f8",
    "prId" : 2816,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1defee1-0bd8-4e57-84b5-afb4e520cf31",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "local\n",
        "createdAt" : "2014-12-10T21:26:53Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "4ab2fffe-7418-4121-9364-c8a2559b69b1",
        "parentId" : "b1defee1-0bd8-4e57-84b5-afb4e520cf31",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "This is not a function, so I can't delcare it local, right?\n",
        "createdAt" : "2014-12-10T23:18:53Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      },
      {
        "id" : "1ad280e6-304e-4972-84c4-556ff3e2750a",
        "parentId" : "b1defee1-0bd8-4e57-84b5-afb4e520cf31",
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Ah yes my mistake sorry.\n",
        "createdAt" : "2014-12-11T23:49:10Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ce71d1e33573e2962e34ebcb73c89e3e4c75067",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +87,91 @@    # Make sure the kubelet is healthy.\n    # Make several attempts to deal with slow cluster birth.\n    attempt=0\n    while true; do\n      echo -n \"Attempt $((attempt+1)) at checking Kubelet installation on node ${MINION_NAMES[$i]} ...\""
  },
  {
    "id" : "c33c80fd-7dd9-49fd-93d8-aeef10a01053",
    "prId" : 2816,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bfd62a8-6689-41bc-8415-c350e31c39da",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "curl_output should be local. local declaration should be in a separate line to prevent it from blocking a failure of curl.\n",
        "createdAt" : "2014-12-10T21:28:11Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "f998bee5-99a8-467b-801f-6d2ccdf3b6a3",
        "parentId" : "0bfd62a8-6689-41bc-8415-c350e31c39da",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "Not a function. Perhaps it should be.\n",
        "createdAt" : "2014-12-10T23:21:02Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ce71d1e33573e2962e34ebcb73c89e3e4c75067",
    "line" : null,
    "diffHunk" : "@@ -1,1 +90,94 @@    while true; do\n      echo -n \"Attempt $((attempt+1)) at checking Kubelet installation on node ${MINION_NAMES[$i]} ...\"\n      curl_output=$(curl -s --insecure --user \"${KUBE_USER}:${KUBE_PASSWORD}\" \\\n          \"https://${KUBE_MASTER_IP}/api/v1beta1/proxy/minions/${name}/healthz\")\n      if [[ \"${curl_output}\" != \"ok\" ]]; then"
  },
  {
    "id" : "5b4313c4-1160-4588-832a-a8f2a5e3ed05",
    "prId" : 2816,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0669126-3c85-47b7-8852-7ac0fc93a5b5",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Indentation looks wrong, but it's possible this is pre-existing problem in this file... My advice would be to use 2-space indentation in all new code. Don't fix existing indentation problems on the same commit as you're doing a functional change.\n",
        "createdAt" : "2014-12-10T21:29:13Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "3ca96338-b9d8-4c42-ac07-cd5c9ed100a3",
        "parentId" : "e0669126-3c85-47b7-8852-7ac0fc93a5b5",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "I indent by 2 spaces for the code I write (or at least I try to).\n",
        "createdAt" : "2014-12-10T23:21:25Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ce71d1e33573e2962e34ebcb73c89e3e4c75067",
    "line" : null,
    "diffHunk" : "@@ -1,1 +93,97 @@          \"https://${KUBE_MASTER_IP}/api/v1beta1/proxy/minions/${name}/healthz\")\n      if [[ \"${curl_output}\" != \"ok\" ]]; then\n          if (( attempt > 5 )); then\n            echo\n            echo -e \"${color_red}Kubelet failed to install on node ${MINION_NAMES[$i]}. Your cluster is unlikely to work correctly.\""
  },
  {
    "id" : "389f0be6-f6d8-4fd9-9be7-a1f1f2943b33",
    "prId" : 982,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9924b3c6-473d-417e-99ee-730b58d5f559",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "If we use get-password in validate-cluster.sh, it needs to go in util.sh and have a no-op implementation for each provider.  this breaks validation of the vagrant cluster.\n",
        "createdAt" : "2014-08-21T13:58:19Z",
        "updatedAt" : "2014-08-21T13:58:19Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "8cd07341-75f4-4ab0-9b63-2f88d6d0c218",
        "parentId" : "9924b3c6-473d-417e-99ee-730b58d5f559",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Ah, I didn't know this. Thanks. @brendandburns \n",
        "createdAt" : "2014-08-21T17:05:06Z",
        "updatedAt" : "2014-08-21T17:05:06Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "514f443854e703b36b5b5db8746479062679a02f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +27,31 @@source $(dirname $0)/$KUBERNETES_PROVIDER/util.sh\n\nget-password\ndetect-master > /dev/null\ndetect-minions > /dev/null"
  },
  {
    "id" : "425de364-518d-4cfd-9f11-00f46acc4785",
    "prId" : 982,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7ee970e-4b39-4b8a-8f11-12dea155a180",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "didn't list minions implicitly do the same?\n",
        "createdAt" : "2014-08-21T13:58:55Z",
        "updatedAt" : "2014-08-21T13:58:55Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "514f443854e703b36b5b5db8746479062679a02f",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +42,46 @@\n    # Make sure the kubelet is healthy\n    if [ \"$(curl --insecure -sw '%{http_code}' --user ${user}:${passwd} https://${KUBE_MASTER_IP}/proxy/minion/${MINION_NAMES[$i]}/healthz)\" != \"200\" ]; then\n        echo \"Kubelet failed to install on ${MINION_NAMES[$i]}. Your cluster is unlikely to work correctly.\"\n        echo \"Please run ./cluster/kube-down.sh and re-create the cluster. (sorry!)\""
  }
]