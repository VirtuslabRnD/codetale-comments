[
  {
    "id" : "02e2da5a-f37c-4b9f-b10b-6639be43c868",
    "prId" : 41211,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41211#pullrequestreview-21885469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19cdb778-68db-4fb3-9c81-dbfe42ef084d",
        "parentId" : null,
        "authorId" : "766f642e-1622-4803-803b-05ce306fc30e",
        "body" : "is it wrong that I like the params `+=` style you used the other 2 times. And is sometimes used in this file?",
        "createdAt" : "2017-02-14T22:37:52Z",
        "updatedAt" : "2017-02-14T23:18:45Z",
        "lastEditedBy" : "766f642e-1622-4803-803b-05ce306fc30e",
        "tags" : [
        ]
      },
      {
        "id" : "7e37d7a2-02f3-4051-b552-fe4dac93a461",
        "parentId" : "19cdb778-68db-4fb3-9c81-dbfe42ef084d",
        "authorId" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "body" : "I like `+=` better too, but I wanted to follow the style used within each file so it's self-consistent.\r\n\r\nI'm actually thinking about reverting my change to the `trusty` and `container-linux` versions because I don't know how log rotation works on those and updating those other flavors is beyond the scope of what I'm trying to accomplish (getting this working for GCE w/ GCI).",
        "createdAt" : "2017-02-14T22:50:05Z",
        "updatedAt" : "2017-02-14T23:18:45Z",
        "lastEditedBy" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "tags" : [
        ]
      }
    ],
    "commit" : "7500746e7f845c7ceaeb649226f803557bda2a54",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +618,622 @@    # rotation \"disabled\" (large value) so it behaves like kube-apiserver.log.\n    # External log rotation should be set up the same as for kube-apiserver.log.\n    params=\"${params} --audit-log-path=/var/log/kube-apiserver-audit.log\"\n    params=\"${params} --audit-log-maxage=0\"\n    params=\"${params} --audit-log-maxbackup=0\""
  },
  {
    "id" : "c4e31448-fa5c-4c86-a261-c4e8403b95ec",
    "prId" : 27641,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "457af50c-3ee9-4be0-bad6-53bc35c6da13",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Why is this needed? And why the change versus `head` (where it looks like the left in both gci and trusty)?\n\n```\n$ version=1.4.0-alpha.0.210+6209b1b60cd0d9\n$ echo \"${version//*+/}\"\n6209b1b60cd0d9\n$ echo $(echo ${version} | sed -e 's/.*+//')\n6209b1b60cd0d9\n```\n",
        "createdAt" : "2016-06-20T16:21:17Z",
        "updatedAt" : "2016-06-20T16:21:17Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "3c91df6a-89af-4300-a3ca-6c3c7500157e",
        "parentId" : "457af50c-3ee9-4be0-bad6-53bc35c6da13",
        "authorId" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "body" : "The line \"gitref=\"${version//*+/}\"\" does not work in upstart job, but works in shell script. The GCI config executes a shell script via systemd, but trusty config directly calls shell functions in upstart jobs so it does not work.\n\nThis is a problem I once mentioned in the discussion of maintenance plan for trusty code. We decided not to guarantee it green in the master branch to reduce the maintenance cost. As a result, there have been several key fixes merged in GCI config are not made for trusty config, and trusty config is broken. The downside is that it is hard to verify if a change is 100% correct. Here is one case of such situation. I noticed that gitref=\"${version//*+/}\" does not work, but apparently I did not make a change in the master branch or release-1.3. And later in 1.2 branch I saw the failure and so I made this PR to ensure it is green in release-1.2 branch. \n",
        "createdAt" : "2016-06-20T16:41:37Z",
        "updatedAt" : "2016-06-20T16:41:37Z",
        "lastEditedBy" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "tags" : [
        ]
      },
      {
        "id" : "c9dc1eac-a30c-4a94-a6ae-9666f619b7e1",
        "parentId" : "457af50c-3ee9-4be0-bad6-53bc35c6da13",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "So this actually does belong as a cherrypick from master?\n",
        "createdAt" : "2016-06-20T16:49:46Z",
        "updatedAt" : "2016-06-20T16:49:46Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "dffb6375-87d6-402d-b64b-bc50f2200eca",
        "parentId" : "457af50c-3ee9-4be0-bad6-53bc35c6da13",
        "authorId" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "body" : "Not really. It is more like a fix to a previous cherrypick. The master and release-1.3 branch trusty code diverges from release-1.2 too much. Manual work was heavily involved in recent cherrypicks to release-1.2 and I made a mistake there. So I would like to fix it in this PR\n",
        "createdAt" : "2016-06-20T17:08:34Z",
        "updatedAt" : "2016-06-20T17:08:34Z",
        "lastEditedBy" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "tags" : [
        ]
      },
      {
        "id" : "627e7e1b-b583-4bf5-9c91-8cadedb0bff8",
        "parentId" : "457af50c-3ee9-4be0-bad6-53bc35c6da13",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Sorry, I'm confused. Is this working on `master`?\n",
        "createdAt" : "2016-06-20T20:15:51Z",
        "updatedAt" : "2016-06-20T20:15:51Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "e6e29480-b68a-403c-ae01-2806433d9139",
        "parentId" : "457af50c-3ee9-4be0-bad6-53bc35c6da13",
        "authorId" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "body" : "For master branch, the GCI code works fine and we have plenty of Jenkins jobs covering it. For trusty code, no, it was broken since one month ago. Even we fix this line in the trusty code in master branch, it does not work. We don't have any auto test covering trusty config in master branch, and we are not trying to making it green.\n",
        "createdAt" : "2016-06-20T20:20:29Z",
        "updatedAt" : "2016-06-20T20:20:29Z",
        "lastEditedBy" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5effd0b7b3dab0b96f95770b66d74987036f9c65",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +727,731 @@  https://github.com/kubernetes/kubernetes/tree/${gitref}\n\"\n    gitref=$(echo ${version} | sed -e 's/.*+//')\n  fi\n  cat > /etc/motd <<EOF"
  },
  {
    "id" : "16758053-ce3d-46ed-9b57-5c18f33de471",
    "prId" : 27136,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "853d4048-afc0-49ab-ae94-3ba157b8a84d",
        "parentId" : null,
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "Dumb bash question - is there a reason that this doesn't have the function keyword in front of it? And where is it called from?\n",
        "createdAt" : "2016-06-09T19:32:40Z",
        "updatedAt" : "2016-06-09T19:47:07Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      },
      {
        "id" : "c5a8e660-bc5f-4681-bd39-a53f0a6c2e75",
        "parentId" : "853d4048-afc0-49ab-ae94-3ba157b8a84d",
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "Ah, scratch the second question, it's called based on what's in the yaml configs below :)\n",
        "createdAt" : "2016-06-09T19:33:14Z",
        "updatedAt" : "2016-06-09T19:47:07Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      },
      {
        "id" : "c511f6e1-6197-4aa9-b40d-768b7188eb4f",
        "parentId" : "853d4048-afc0-49ab-ae94-3ba157b8a84d",
        "authorId" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "body" : "Yes, the shell functions in this file are called by the upstart jobs in master/yaml and node.yaml. Unfortunately, upstart does not support some syntax in shell, the function keyword is one of them. So I did not add that keyword. In the real gci support https://github.com/kubernetes/kubernetes/tree/master/cluster/gce/gci, we don't have this problem as we use systemd. So the shell scripts there look very close to ContainerVM's script configure-vm.sh\n",
        "createdAt" : "2016-06-09T19:45:18Z",
        "updatedAt" : "2016-06-09T19:47:07Z",
        "lastEditedBy" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b1ceb5ff0bd4927918b48c35e65b73be36fe173",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +185,189 @@}\n\nstart_kubelet(){\n  echo \"Start kubelet\"\n  # Delete docker0 to avoid interference"
  },
  {
    "id" : "99b2a4e1-6b8c-462e-a366-fce46b827097",
    "prId" : 26575,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c22b56e-465f-4f3b-be15-971251500a78",
        "parentId" : null,
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "Move those two lines after 631, to have the same order as above.\n",
        "createdAt" : "2016-05-31T17:43:06Z",
        "updatedAt" : "2016-06-01T11:55:06Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      },
      {
        "id" : "2255b208-ebfa-4f8f-af6d-4cc08f69f721",
        "parentId" : "8c22b56e-465f-4f3b-be15-971251500a78",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "Done\n",
        "createdAt" : "2016-05-31T17:53:14Z",
        "updatedAt" : "2016-06-01T11:55:06Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c467e1017a23cbee4faf515615ca0c80b38ed29",
    "line" : null,
    "diffHunk" : "@@ -1,1 +628,632 @@\n    sed -i -e \"s@\\\"{{param}}\\\",@${params}@g\" \"${src_file}\"\n    sed -i -e \"s@{{cloud_config_mount}}@${CLOUD_CONFIG_MOUNT}@g\" \"${src_file}\"\n    sed -i -e \"s@{{cloud_config_volume}}@${CLOUD_CONFIG_VOLUME}@g\" \"${src_file}\"\n    sed -i -e \"s@{%.*%}@@g\" \"${src_file}\""
  }
]