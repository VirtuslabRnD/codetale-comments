[
  {
    "id" : "6799767b-bbbe-4ab8-86f7-a307435529ff",
    "prId" : 25706,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27c0ca0c-c3fd-45dc-8f88-6367a59a2307",
        "parentId" : null,
        "authorId" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "body" : "We recently discovered that this failed for GCI due to the incorrect search path: for GCI it should have been `${dst_dir}/kubernetes`. Does this apply to Trusty as well? A quick check would be to try to start a cluster in `europe-west1-c`. Details in #26363.\n",
        "createdAt" : "2016-06-01T21:07:18Z",
        "updatedAt" : "2016-06-01T21:07:18Z",
        "lastEditedBy" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8739cd0c2fe5d8e0e1cd34fa436ed3221ae754f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +153,157 @@  readonly kube_addon_registry=\"${KUBE_ADDON_REGISTRY:-gcr.io/google_containers}\"\n  if [ \"${kube_addon_registry}\" != \"gcr.io/google_containers\" ]; then\n    find \"${dst_dir}\" -maxdepth 1 -name \\*.yaml -or -maxdepth 1 -name \\*.yaml.in | \\\n      xargs sed -ri \"s@(image:\\s.*)gcr.io/google_containers@\\1${kube_addon_registry}@\"\n    find \"${dst_dir}\" -maxdepth 1 -name \\*.manifest -or -maxdepth 1 -name \\*.json | \\"
  },
  {
    "id" : "dc690170-6f80-4d64-85a5-8ea2780f7c09",
    "prId" : 25504,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aabfa3a5-8c22-416d-9241-4ddfab0f741e",
        "parentId" : null,
        "authorId" : "beafb6cc-4b81-43ba-b2fd-9026cd5ca01b",
        "body" : "shouldn't this be taken from some environment var?\n",
        "createdAt" : "2016-05-12T00:33:35Z",
        "updatedAt" : "2016-05-12T00:33:35Z",
        "lastEditedBy" : "beafb6cc-4b81-43ba-b2fd-9026cd5ca01b",
        "tags" : [
        ]
      },
      {
        "id" : "8e05fce1-8dbc-473e-81a4-c04d0197c353",
        "parentId" : "aabfa3a5-8c22-416d-9241-4ddfab0f741e",
        "authorId" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "body" : "Originally, I thought we can get version info from kube-env. But later I noticed there is no version var in that file. Theoretically, we can add KUBE_VERSION in kube-env file. There two downsides: (1) it will change much more places; (2) the meaning of KUBE_VERSION itself is complex (https://github.com/kubernetes/kubernetes/blob/master/cluster/common.sh#l257). A similar way is get version from the tarball URL listed in kube-env, but it has the same problem. So, the simplest way is to run \"kubelet --version\" just like what ContainerVM's config does (https://github.com/kubernetes/kubernetes/blob/master/cluster/gce/configure-vm.sh#l89)\n",
        "createdAt" : "2016-05-12T00:57:09Z",
        "updatedAt" : "2016-05-12T00:57:09Z",
        "lastEditedBy" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "tags" : [
        ]
      },
      {
        "id" : "e4fbd974-8422-4cd3-87d9-9b0a4235a2e5",
        "parentId" : "aabfa3a5-8c22-416d-9241-4ddfab0f741e",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "/cc @zmerlynn \n",
        "createdAt" : "2016-05-16T07:21:01Z",
        "updatedAt" : "2016-05-16T07:21:01Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "63494f6f064eb95abd49cd0eee9c75109f5592a6",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +142,146 @@    # applied for OSS kubernetes.\n    readonly builtin_version=\"$(/usr/bin/kubelet --version=true | cut -f2 -d \" \")\"\n    readonly required_version=\"$(/home/kubernetes/bin/kubelet --version=true | cut -f2 -d \" \")\"\n    if [ \"${TEST_CLUSTER:-}\" = \"true\" ] || [ \"${builtin_version}\" != \"${required_version}\" ]; then\n      mount --bind \"${kube_bin}/kubelet\" \"${BIN_PATH}/kubelet\""
  },
  {
    "id" : "e45e1e5c-b108-4a95-a27d-43bb595c5ac5",
    "prId" : 25504,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66a97bf2-f8e3-40cc-81d4-353c98f3278f",
        "parentId" : null,
        "authorId" : "beafb6cc-4b81-43ba-b2fd-9026cd5ca01b",
        "body" : "Don't delete these. If the built-in version changes coz of auto-update, then you will need to use these binaries. I guess you will probably end up downloading everything again, but there is no harm in leaving them for possible optimization in future.\n",
        "createdAt" : "2016-05-12T00:35:36Z",
        "updatedAt" : "2016-05-12T00:35:36Z",
        "lastEditedBy" : "beafb6cc-4b81-43ba-b2fd-9026cd5ca01b",
        "tags" : [
        ]
      },
      {
        "id" : "47d7224c-f1ea-4141-93b2-2d8163327fed",
        "parentId" : "66a97bf2-f8e3-40cc-81d4-353c98f3278f",
        "authorId" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "body" : "I don't think so. Clean up unnecessary kubelet and kubectl makes thing less confuse. When people see /home/kubernetes/bin/kubelet, they will not expect it is different from the binary in use. As for optimization, it is not straightforward at here. We need to make a plan and then do it in dedicated PRs.\n",
        "createdAt" : "2016-05-12T00:51:38Z",
        "updatedAt" : "2016-05-12T00:51:38Z",
        "lastEditedBy" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "tags" : [
        ]
      }
    ],
    "commit" : "63494f6f064eb95abd49cd0eee9c75109f5592a6",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +147,151 @@      mount --bind \"${kube_bin}/kubectl\" \"${BIN_PATH}/kubectl\"\n    else\n      # Remove downloaded binary just to prevent misuse.\n      rm -f \"${kube_bin}/kubelet\"\n      rm -f \"${kube_bin}/kubectl\""
  },
  {
    "id" : "2ab2f766-5142-48ef-9f47-e350cbf4bd33",
    "prId" : 22882,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64ca2359-dbf1-489b-9cff-e72ed082d377",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "cc @roberthbailey on querying hostname from metadata server. \n",
        "createdAt" : "2016-03-12T00:28:04Z",
        "updatedAt" : "2016-03-12T05:30:49Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "6691de18-0f93-4e32-84fd-df24af2551a9",
        "parentId" : "64ca2359-dbf1-489b-9cff-e72ed082d377",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "The only issue is that this gives you a name with the `.c.<project_name>.internal` suffix. I think in our other scripts we get a \"short\" hostname without the domain. \n",
        "createdAt" : "2016-03-12T00:32:42Z",
        "updatedAt" : "2016-03-12T05:30:49Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "bd3a6f36-f98f-4bd3-a21e-cab71fe46cb3",
        "parentId" : "64ca2359-dbf1-489b-9cff-e72ed082d377",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Here's how we do it (in go code): https://github.com/kubernetes/kubernetes/blob/master/pkg/cloudprovider/providers/gce/gce.go#L121-L131\n",
        "createdAt" : "2016-03-12T00:34:20Z",
        "updatedAt" : "2016-03-12T05:30:49Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "91978a9a-d9c8-4742-875c-255f7b7a510e",
        "parentId" : "64ca2359-dbf1-489b-9cff-e72ed082d377",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Oh, you do that below (should have kept reading before I commented). \n",
        "createdAt" : "2016-03-12T00:34:41Z",
        "updatedAt" : "2016-03-12T05:30:49Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "5b95aab1-4749-4522-9510-e8d3426e5c1f",
        "parentId" : "64ca2359-dbf1-489b-9cff-e72ed082d377",
        "authorId" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "body" : "Yes, the same logic. We used to get the short name from \"hostname -s\". But recently we are experimenting systemd and notice systemd has a bug that when fullname is too long systemd will reset it to \"localhost\". So, now we switch to get the fullname from gce metadata and truncate it.\n",
        "createdAt" : "2016-03-12T00:40:34Z",
        "updatedAt" : "2016-03-12T05:30:49Z",
        "lastEditedBy" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "tags" : [
        ]
      }
    ],
    "commit" : "10d9f72341df594ec4b2ebfecf644ba335d1025a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +23,27 @@config_hostname() {\n  # Set the hostname to the short version.\n  host_name=$(curl --silent \"http://metadata.google.internal/computeMetadata/v1/instance/hostname\" -H \"Metadata-Flavor: Google\")\n  short_hostname=$(echo \"${host_name}\" | cut -d. -f1)\n  hostname \"${short_hostname}\""
  },
  {
    "id" : "c3180bfa-a635-4a29-82fc-90c4d87e7d21",
    "prId" : 22882,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae7deca0-6c17-4f02-9b79-c6930940caac",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "This one introduces an extra dependency on hostname from metadata server. \n",
        "createdAt" : "2016-03-12T00:31:07Z",
        "updatedAt" : "2016-03-12T05:30:49Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      }
    ],
    "commit" : "10d9f72341df594ec4b2ebfecf644ba335d1025a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +24,28 @@  # Set the hostname to the short version.\n  host_name=$(curl --silent \"http://metadata.google.internal/computeMetadata/v1/instance/hostname\" -H \"Metadata-Flavor: Google\")\n  short_hostname=$(echo \"${host_name}\" | cut -d. -f1)\n  hostname \"${short_hostname}\"\n}"
  },
  {
    "id" : "c4d37538-82fc-4b3a-909b-f5038276c8df",
    "prId" : 21347,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b72ad83-e975-477f-8f42-a80ddfc21cd8",
        "parentId" : null,
        "authorId" : "a0c645c0-b588-49b3-acdb-b2ad182a663e",
        "body" : "I believe the `docker version` command will return immediately, with error code 1, even if the docker daemon is not running. Maybe `docker info` will provide a better test?\n\n```\n$ docker info\nCannot connect to the Docker daemon. Is the docker daemon running on this host?\n```\n\n```\n$ echo $?\n1\n```\n\nAlso do we need to test the return code here?\n",
        "createdAt" : "2016-02-17T03:31:52Z",
        "updatedAt" : "2016-02-17T03:31:52Z",
        "lastEditedBy" : "a0c645c0-b588-49b3-acdb-b2ad182a663e",
        "tags" : [
        ]
      },
      {
        "id" : "99d0925a-3f4f-45f7-87a9-e9da1d7b0282",
        "parentId" : "9b72ad83-e975-477f-8f42-a80ddfc21cd8",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Both `docker version` and `docker info` will return error code 1 when docker daemon is not running. What's the difference?\n\nBy the way, I _think_ this command was copied from `cluster/saltbase/salt/supervisor/docker-checker.sh` below, which needed to fail on non-zero error code to signal supervisord to restart the script (even when the docker daemon isn't running). In this script, it probably makes sense to distinguish \"docker daemon is not running\" and \"docker daemon fails to respond\" as we only need to kill docker in the latter case.\n",
        "createdAt" : "2016-02-17T16:46:05Z",
        "updatedAt" : "2016-02-17T16:46:05Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "fb06d853-b78b-4fb9-bff7-6b7415172be2",
        "parentId" : "9b72ad83-e975-477f-8f42-a80ddfc21cd8",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "There is difference between docker version and docker info functionally here. Agreed with @yujuhong \n",
        "createdAt" : "2016-02-17T22:13:38Z",
        "updatedAt" : "2016-02-17T22:13:38Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      }
    ],
    "commit" : "b92e2903fad0a74ca931c5f942535d10286fd1be",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +262,266 @@  # restart the process.\n  while [ 1 ]; do\n    if ! timeout 10 docker version > /dev/null; then\n      echo \"Docker daemon failed!\"\n      pkill docker"
  },
  {
    "id" : "cc9c38c6-9589-4d14-826b-550d1e3379fe",
    "prId" : 19148,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "923a2c26-fc60-4f9c-b22f-e6c736e9afe5",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Style guide says these should be [[\n\nhttps://google.github.io/styleguide/shell.xml#Test,_%5B_and_%5B%5B\n",
        "createdAt" : "2016-01-05T22:01:15Z",
        "updatedAt" : "2016-01-06T00:12:42Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "289ea997-88bf-40cb-9142-649d0879542e",
        "parentId" : "923a2c26-fc60-4f9c-b22f-e6c736e9afe5",
        "authorId" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "body" : "This file is sourced and executed in upstart jobs. Unfortunately, upstart does not recognize \"[[\". It fails with message like \"/proc/self/fd/9: 52: [[: not found\". But it works with single '['. This is why all shell code under cluster/gce/trusty uses '[' instead of \"[[\"\n",
        "createdAt" : "2016-01-05T22:20:08Z",
        "updatedAt" : "2016-01-06T00:12:42Z",
        "lastEditedBy" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d27e3ae8a1001dc48f31e926e8d0266ce23a90a2",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +47,51 @@  mkdir -p /var/lib/kubelet\n  mkdir -p /etc/kubernetes/manifests\n  if [ \"${KUBERNETES_MASTER:-}\" = \"false\" ]; then\n    mkdir -p /var/lib/kube-proxy\n  fi"
  },
  {
    "id" : "484bbfd1-210b-4073-92be-551a41898fb5",
    "prId" : 18115,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66c3e335-27d2-4058-aa2d-d70139c2f1b7",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "The [version in configure-vm.sh](https://github.com/kubernetes/kubernetes/blob/master/cluster/gce/configure-vm.sh#L110) uses an until to actually keep trying. The comment here says it retries but it doesn't seem as though that is implemented. \n",
        "createdAt" : "2015-12-04T06:54:04Z",
        "updatedAt" : "2015-12-04T23:50:46Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "5a97e262-3957-4d71-87c5-52c019386788",
        "parentId" : "66c3e335-27d2-4058-aa2d-d70139c2f1b7",
        "authorId" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "body" : "Ah, yes, the code mismatches the comment. Which do you think is more reasonable, loop permanently until successfully downloading it, or try several times then fail? Originally I simply copied the code form configure-vm.sh, but later I thought permanently loop may not make much sense.\n",
        "createdAt" : "2015-12-04T21:52:22Z",
        "updatedAt" : "2015-12-04T23:50:46Z",
        "lastEditedBy" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "tags" : [
        ]
      },
      {
        "id" : "eaac8bfb-5132-44b6-b51a-c0b9e3563453",
        "parentId" : "66c3e335-27d2-4058-aa2d-d70139c2f1b7",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Why wouldn't a permanent loop make sense? What is the behavior of the node if one of these downloads fails? Can it ever be a useful node in the cluster? Continuing to retry, in the hope that the underlying problem will be solved, seems preferable to giving up permanently. \n",
        "createdAt" : "2015-12-04T22:27:23Z",
        "updatedAt" : "2015-12-04T23:50:46Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "8e0e2614-e54e-4fcf-95cb-e7c2444b9917",
        "parentId" : "66c3e335-27d2-4058-aa2d-d70139c2f1b7",
        "authorId" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "body" : "I just remember there is a timeout for nodes to finish registering with master. It is not permanently trying, but trying with a minutes level timeout. In this manner, I think it makes sense. Will restore it to the original logic\n",
        "createdAt" : "2015-12-04T23:20:43Z",
        "updatedAt" : "2015-12-04T23:50:46Z",
        "lastEditedBy" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "tags" : [
        ]
      }
    ],
    "commit" : "816b29536a660491c99e03d0fa159a768bdaf0fa",
    "line" : null,
    "diffHunk" : "@@ -1,1 +149,153 @@# $1 is the file to create\n# $2 is the URL to download\ndownload_or_bust() {\n  rm -f $1 > /dev/null\n  until curl --ipv4 -Lo \"$1\" --connect-timeout 20 --retry 6 --retry-delay 10 \"$2\"; do"
  },
  {
    "id" : "36fe2112-4014-4a58-a897-c5c9a8b40aa0",
    "prId" : 16960,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ebe3e66f-3141-452f-89aa-de3adf66f93b",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Shouldn't with your refactory, the methods defined here can be reused for both coreos and trusty, so that we can remove those duplicated code when introducing trusty at the first place? \n",
        "createdAt" : "2015-11-13T19:08:59Z",
        "updatedAt" : "2015-11-14T00:49:22Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "e1cd2ff4-eef0-4878-ab2a-afb7d7aaa984",
        "parentId" : "ebe3e66f-3141-452f-89aa-de3adf66f93b",
        "authorId" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "body" : "Good idea. These functions are also useful for coreos, and others are not suitable.\n- config_hostname()\n- create_dirs()\n- create_kubelet_kubeconfig()\n- create_kubeproxy_kubeconfig()\n- install_kube_binary_config()\n\nMaybe we can refactor the code step by step: (1) move the code from trusty/node.yaml to a script (as shown in this PR); (2) refactor coreos config to make use of the script.\n",
        "createdAt" : "2015-11-13T19:38:44Z",
        "updatedAt" : "2015-11-14T00:49:22Z",
        "lastEditedBy" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "tags" : [
        ]
      },
      {
        "id" : "343c6da1-2a71-4cde-8d90-f246d4c490f4",
        "parentId" : "ebe3e66f-3141-452f-89aa-de3adf66f93b",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "FWIW, I think mount-master-pd(), create-salt-master-auth() in configure-vm.sh are reusable as well. I'd like to have those in a seperate shell so all the distros can import.\n",
        "createdAt" : "2015-11-13T20:43:04Z",
        "updatedAt" : "2015-11-14T00:49:22Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "1390f49e-1a4b-40f4-aea5-9984a3e6f036",
        "parentId" : "ebe3e66f-3141-452f-89aa-de3adf66f93b",
        "authorId" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "body" : "Yes, they may be reusable across different distros. This PR only addresses the stuff we have already checked in. When I step on the master side work, I will be more clear about what master configuration should be reused. In addition, this refactoring is supposed to handle the trusty node config. Step-by-step work is easier to track and merge.\n",
        "createdAt" : "2015-11-13T21:48:36Z",
        "updatedAt" : "2015-11-14T00:49:22Z",
        "lastEditedBy" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "tags" : [
        ]
      },
      {
        "id" : "fdef664f-f781-4d3e-9e06-e60aec167fb4",
        "parentId" : "ebe3e66f-3141-452f-89aa-de3adf66f93b",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Ok, I can take this as is for now and expect next PRs for handle those. Please add a TODO. \n",
        "createdAt" : "2015-11-13T21:58:00Z",
        "updatedAt" : "2015-11-14T00:49:22Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "36b2323d-703d-4606-9b77-9b1904b64473",
        "parentId" : "ebe3e66f-3141-452f-89aa-de3adf66f93b",
        "authorId" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "body" : "Thanks. I notice Yifan is refactoring and adding coreos supports. I would like to coordinate with Yifan for the refactoring effort, so as to avoid conflict and to make stuff under cluster/gce/ cleaner and conciser.\n\n@yifan-gu , does it make sense?\n",
        "createdAt" : "2015-11-13T22:04:24Z",
        "updatedAt" : "2015-11-14T00:49:22Z",
        "lastEditedBy" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ca070478ebd8e684f547e7ca372e03b22175c96",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@#!/bin/bash\n\n# Copyright 2015 The Kubernetes Authors All rights reserved."
  }
]