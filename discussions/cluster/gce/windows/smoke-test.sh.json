[
  {
    "id" : "3cc51237-0d8c-4830-88bb-60034750617a",
    "prId" : 86495,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86495#pullrequestreview-335552674",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd926f37-907d-4977-9564-109be40744f4",
        "parentId" : null,
        "authorId" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "body" : "fyi \"curl https://8.8.8.8\" works, 8.8.8.8 stopped serving http",
        "createdAt" : "2019-12-20T22:25:06Z",
        "updatedAt" : "2020-01-08T22:01:04Z",
        "lastEditedBy" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "tags" : [
        ]
      },
      {
        "id" : "dd90dc2e-cba9-49c5-b767-f3bbdca914f7",
        "parentId" : "cd926f37-907d-4977-9564-109be40744f4",
        "authorId" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "body" : "Ah, good to know :) I'll still leave this, using a non-Google server is also beneficial because GCP does weird network routing for google.com traffic.",
        "createdAt" : "2019-12-20T22:33:29Z",
        "updatedAt" : "2020-01-08T22:01:04Z",
        "lastEditedBy" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b17de74628b41ff4eaa794786dbe2cbf5c5c30e",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +459,463 @@  local linux_command_pod\n  linux_command_pod=\"$(get_linux_command_pod_name)\"\n  # A stable (hopefully) HTTP server provided by Cloudflare.\n  local internet_ip=\"1.1.1.1\"\n"
  },
  {
    "id" : "964e139f-282b-4fe4-b1e9-0f741fc78172",
    "prId" : 86495,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86495#pullrequestreview-340169581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "131c49de-3468-4253-8c9a-ab9bb32f67f0",
        "parentId" : null,
        "authorId" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "body" : "what about curling default-http-backend?",
        "createdAt" : "2019-12-20T22:27:13Z",
        "updatedAt" : "2020-01-08T22:01:04Z",
        "lastEditedBy" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "tags" : [
        ]
      },
      {
        "id" : "e3cf0170-7edc-417e-a81f-978ace30974b",
        "parentId" : "131c49de-3468-4253-8c9a-ab9bb32f67f0",
        "authorId" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "body" : "In `kubectl get services --all-namespaces`, default-http-backend has type `NodePort` while metrics-server has type `ClusterIP`, so I chose metrics-server because I think heapster also had type `ClusterIP`. Do you know if it matters one way or the other for the service connectivity testing we're trying to do here?",
        "createdAt" : "2019-12-20T22:35:07Z",
        "updatedAt" : "2020-01-08T22:01:04Z",
        "lastEditedBy" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "tags" : [
        ]
      },
      {
        "id" : "2548dac2-51b5-436d-854d-643cbd58c350",
        "parentId" : "131c49de-3468-4253-8c9a-ab9bb32f67f0",
        "authorId" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "body" : "NodePort has everything 'ClusterIP' has, and some extra. For testing connectivity with cluster ip, using NortPort is the same as using 'ClusterIP' (https://i.stack.imgur.com/1owA5.jpg).",
        "createdAt" : "2019-12-20T22:43:59Z",
        "updatedAt" : "2020-01-08T22:01:04Z",
        "lastEditedBy" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "tags" : [
        ]
      },
      {
        "id" : "fba3687a-612d-4b46-b3fe-034f82f9706b",
        "parentId" : "131c49de-3468-4253-8c9a-ab9bb32f67f0",
        "authorId" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "body" : "curl-ing the default-http-backend from a Linux pod in my cluster always seems to timeout. Any idea why?\r\n\r\n```\r\n$ kubectl exec linux-ubuntu-79d5cd56f5-sbgcm -- curl -m 20 \"http://10.0.66.218:80\"\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n  0     0    0     0    0     0      0      0 --:--:--  0:00:20 --:--:--     0\r\ncurl: (28) Connection timed out after 20001 milliseconds\r\ncommand terminated with exit code 28\r\n```\r\n\r\nI get the same result when I just plug in a random IP address. Is this a bug in our cluster setup or is there a reason default-http-backend doesn't work?",
        "createdAt" : "2019-12-21T00:41:56Z",
        "updatedAt" : "2020-01-08T22:01:04Z",
        "lastEditedBy" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "tags" : [
        ]
      },
      {
        "id" : "d7677396-fbf9-45a1-8bb7-dfe1a33ff638",
        "parentId" : "131c49de-3468-4253-8c9a-ab9bb32f67f0",
        "authorId" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "body" : "I suspect I know why my curl command was timing out in my previous comment. In a new cluster I'm now getting 404s from default-http-backend, which I think is expected.\r\n\r\nAnyway, I'd like to just leave this as-is (curl-ing from metrics-server rather than default-http-backend); neither works like a typical web server, and the code in this PR is working well enough for our smoke test.",
        "createdAt" : "2020-01-08T21:54:06Z",
        "updatedAt" : "2020-01-08T22:01:04Z",
        "lastEditedBy" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b17de74628b41ff4eaa794786dbe2cbf5c5c30e",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +575,579 @@\n  echo \"curl-ing $service address from Windows pod: $service_address\"\n  # curl-ing the metrics-server service results in a ServerProtocolViolation\n  # (\"The server committed a protocol violation. Section=ResponseStatusLine\")\n  # exception. Since we don't care about what the metrics-server actually gives"
  }
]